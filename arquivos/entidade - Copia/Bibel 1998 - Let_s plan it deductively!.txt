ELSEVIER 

Artificial  Intelligence  103  (1998)  IX-208 

Artificial 
Intelligence 

Let’s  plan  it deductively! 

Technische  Universifiit  Darmstadt,  Ale.uznderstr:  10,  Dormstadt,  Germany 

W. Bibel 

Abstract 

The  paper  describes  a transition 

logic,  TL,  and  a deductive  formalism  for  it.  It  shows  how  various 
etc.) 
specificity,  simultaneity, 
in 
for)  TL  extends  the  linear  connection  method 
logic,  so  that  classical  and 
the  latter  into  classical 
reasoning  coexist  within  TL.  The  attraction  of  a  logical  and  deductive  approach 
and  the  state  of  automated  deduction  briefly  described.  0  1998  Elsevier 

important  aspects  (such  as  ramification,  qualification, 
involved  in  planning  (or  in  reasoning  about  action  and  causality  for  that  matter)  can  be  modelled 
TL  in  a rather  natural  way.  (The  deductive  formalism 
proposed  earlier  by  the  author  by  embedding 
resource-sensitive 
to  planning 
Science  B.V. All  rights  reserved. 

is  emphasized 

indeterminism 

Kewords:  Reasoning  about  actions  and  causality;  Planning;  Automated  deduction;  Transition 
connection  method;  Frame  problem;  Ramification;  Qualification 

logic:  Linear 

1.  Introduction 

Artificial 

Intelligence 

(AI,  or  Intellectics 

tional  [53])  intelligence.  Were  there  no  natural 
ingless 
among  the  goals  of  Intellectics 

to  us.  Hence  understanding 

intelligence 
(as  of  Cognitive  Science). 

natural 

intelligence, 

[12])  aims  at  creating  artificial 

(or  computa- 
the  sentence  would  be  mean- 
by  necessity  has  always  been 

the  goal  of  creating  artificial 

Different  points  of  view  for  approaching 

[39].  Logicism 

[51],  cognitivism 

been  distinguished 
out  of  several  such  points  of  view.  In  a nutshell, 
can  describe  his  creations 
hence  logical  means; 
at  some  level  be  a  logical  one.  This  author  is  strongly  committed 
As  a consequence  he  believes 

thus  any  way  towards  artificial 

that  any  other  approach 

an  artificial 

(including 

intelligence  have 
[43],  and  situated  action  [2]  are  three 
the  logistic  point  of  view  argues  that  man 
linguistic, 
only  by  natural 
intelligence  must  in  some  sense  and 
to  the  logistic  approach. 

intelligence) 

is  in  fact  a  logistic  one  in  disguise. 

Intelligence  has  many  features.  Clearly  one  of  them  is  the  ability  to  reason  about  actions 
is  logical  reasoning  of  some 
logic  and  its 

and  causality  and  plan  ahead  in  time.  Intuitively,  planning 
kind.  All  the  more  one  might  expect 

is  the  domain  where 

that  planning 

0004-3702/9X/$ 
PII:  SO004-3702(9X)00064-2 

-see  front  matter  0  1998  Elsevier  Science  B.V.  All  rights  reserved 

184 

W  Bibel 

/Artificial 

Intelligencr 

103  (1  WK)  183-208 

deductive  machinery  excel.  The  fact  is  that  it  does  not.  There  are  many  software  systems 
tasks,  but  to  the  author’s  best  knowledge  none  of  them  is 
in  everyday  use  solving  planning 
based  on  logic  and  has  a  deductive  component.  Does  this  imply  that  logic  is  irrelevant 
for 
planning,  or  even  for  Intellectics 
intelligence 

the  converse  needs  not  necessarily 

the  ability  for  planning, 

in  general? 

implies 

While 

techniques.  But  functional 

restricted  domain  (such  as  text  layout)  planning  may  well  be  realized 

has  its  limits  as  we  enter  more  complex  and  unpredictable 
it  will  never  be  able  to  produce  a  behavior  which  rightly  deserves 

be  true.  It  very  much  depends  on  what  kind  of  planning 
relatively 
functional  way  and  with  standard  programming 
programming 
particular 
“intelligent” 
systems).  Section  8,  as  well  as  numerous 
statement. 
a  bolder  move  into  a  logic  technology 
logic  is  essential 
ready  to  build  intelligent 

for  intelligent  planning 
systems. 
It is  not  the  task  of  intellecticians 

(surely  as  a  user  of  computers  you  noticed 

It  also  gives  reasons  which  explain 

is  meant. 

In  a  fixed  and 
in  a purely 
(or  procedural) 
domains; 
in 
to  be  named 
the  stupidity  even  of  text  layout 
for  this 
to 
industry 
In  other  words, 
is  not 

texts  in  the  literature,  give  arguments 
the  resistance  of  the  software 

for  planning  or  other  applications. 

in  the  true  sense  of  the  term,  but  industry 

to  lament  about  this  state  of  affairs  but  rather  to prepare 
for  the  coming  day  when  the  market  will  be  ripe  for  a  broader  use  of  a  truly  intelligent 
technology 
basis  for  it.  In  fact,  if  we  are 
frank  there  is  yet  a  lot  to  be  developed  before  we  can  comfortably  go  out  to  industry  and 
offer  a  coherent  set  of  methods  for  dealing  with  the  many  facets  of  intelligence 
planning. 

the  best  possible 

and  to  develop 

technological 

including 

from  research  groups 

in  the  deduction  community 

the  problem  with  the  necessary  and  available  deductive 

In  the  present  paper  I review  the  state  of  the  art  in  deductive  planning  with  an  emphasis 
influenced  by  the  author’s  own  work.  While 
on  the  contributions 
issues  we  have 
much  of  the  work  in  deductive  planning  has  focused  on  representational 
always  approached 
in 
techniques 
mind.  Since  the  methods  and  systems  growing  out  of  our  work  have  finally  achieved  a 
prominent  position 
[45,49],  we  are  perhaps  also 
theorem  proving  with  the  SETHEO 
in  automated 
well  placed  to  import  the  best  possible 
In  other 
techniques 
words,  the  paper  will  focus  on  deductive  planning  as  well  as  on  the  underlying  deduction 
as  just  one  among  a  number  of  aspects  for 
techniques.  Since 
in  this  paper 
achieving  artificial 
in  form  of  a  paradigm  case  for  achieving 
intelligence.  The 
paper  will  therefore  not  only  point  the  way  to  intelligent  planning  but  to  some  extent  will 
also  outline 

by  winning 
system 
into  the  planning  community. 

the  author  sees  planning 
intelligence, 

the  case  for  deductive  planning 

the  grander  goal  of  artificial 

(the  “it”  in  the  title). 

the  CADE-96 

is  presented 

competition 

intelligence 

route  to  artificial 
the  logical  language  used  in  our  approach  and  discuss 
logic 
features.  Section  5  shows  what 

logic  is  called  transition 

the  deductive  aspects  thereafter.  The  resulting  computational 
(TL)  which  has  classical  as  well  as  resource-sensitive 
TL  has  to  do  with  planning 
for  that  matter).  Section  6  compares 
how  the  various  aspects 
into  account  within  TL.  Specifically,  we  discuss 
simultaneity, 
tensions  between 

the  specialistic  and  logistic  approaches 

continuity,  hierarchies, 

and  computation 

indeterminism, 

in  reasoning 

involved 

(or  with  temporal  prediction  or  postdiction 
logics.  Section  7  shows 
about  actions  and  causality  can  be  taken 
specificity, 
the 

etc.  Finally,  we  briefly  describe 

qualification, 

ramification, 

in  AI  and  explain 

it  by  outlining 

the  author’s  envisaged 
In  the  next  section  we  introduce 

the  logic  with  other  known 

W Bibel /Artificial  Intelligence  103  (1998)  183-208 

185 

the  underlying  pattern.  Given  the  impressive 
we  conclude  with  making  a  case  for  a logical  path  towards  an  artificial 

recent  achievements 

intelligence. 

in  automated  deduction 

2.  A logical  language 

Any  textbook  on  AI  also  contains  some  introduction 

to  first-order 

logic  so  that  we  may 

the  reader  to  be  familiar  with  it.  Only  to  communicate 

our  notational  conventions 

that  there  are  objects  named  by  constants 

symbols 

assume 
we  mention 
function 
Terms  (Y, s,  t),  built  from  variables 
symbols, 
negation 
(such  as  “John  is  married  to  the  mother  of  Bill”). 

again  denote  objects.  Literals 
(7) 

thereof.  They  correspond 

(f,  g,  h)  and  (n-ary) 

relations  named  by  predicate  symbols 

(a,  b,  c),  (n-ary)  functions  named  by 
(P,  Q,  R). 
(x,  y,  z,  ranging  over  objects),  constants  and  function 
among  objects  or  the 
relations 
language 

(K,  L)  denote 
to  simple  factual  sentences 

in  natural 

For  building  more  complicated 

sentences 

represented  as  formulas 

(F,  G,  H)  we  use  the 

well-known  classical  (logical)  operators  A,  V,  -+,  ++, V, 3  as  well  as  the  resource-sensitive 
operators  &  (non-idempotent 
(transition).  The  latter  need  explanations  which  follow. 

exclusive  disjunction), 

1 (idempotent 

conjunction), 

and  =+ 

logic  has  been  designed 

The  language  of  predicate 

to  express  natural  language  sentences 
formally  and  unambiguously.  This  was  done  in  a biased  way  since  many  of  those  involved 
in  the  design  (such  as  Frege  [22])  had  mainly  sentences  of  a mathematical  nature  in  mind. 
Sentences 
until  the  publication 
of  the  situation  calculus 
(n  +  I)-ary  one  by  an  extra  argument 
meant  to  hold  (see  Section  6.4). 

involving  actions  were  not  taken  into  serious  consideration 

in  1969  [48]  in  which  any  n-ary 

relation  P  is  extended 

in  which  the  relation 

the  situation 

for  denoting 

to  an 
is 

Natural 

sentence 

(such  as  “if  a prime  number 

language  apparently  does  not  need  such  an  extra  vehicle  for  serving 

the  same 
purpose.  A  (static)  mathematical 
is  greater  than  two 
then  it  is  odd”)  looks  exactly  like  a  (dynamic)  one  about  actions  (such  as  “if  the  switch  is 
off  and  I  turn  it  then  it  is  on”).  In  [9]  the  main  idea  for  a  logic  has  been  outlined  which 
than  does  the 
resembles  natural 
situation  calculus.  The  approach  then  was  called  linear  connection  method  or  shortly  LCM; 
for  the  logic  we  introduce  here  on  the  basis  of  LCM  we  propose  the  name  transition 
logic 
or  TL.  The  idea  underlying  LCM  spawned  a  great  number  of  studies  based  on  this  idea 
such  as  [4,6,8,15,16,20,23,24,26,27,32-35,63-65] 

in  this  aspect  of  treating  actions 

to  mention  several  of  them. 

language  more  closely 

In  TL  certain 
More  specifically, 
a  rule  K  +  L,  called  an  action  (or  transition) 
models  an  action  which  consumes  K  and  produces  L.  For  instance, 

facts  may  be  treated  as  resources  which  may  be  consumed  by  actions. 
rule  (or  effect  axiom), 

on_table(book)  =+ in_hand(book) 

can  be  seen  as  the  equivalent 

in  TL  of  the  situation  calculus  rule 

on_table(book, 

s)  --+ in_hand(book, 

result(take,  s)). 

In  either  case,  predicates  which  may  change  their  truth-value 
(like  on-table)  are  calledjuents 

and  the  literals  built  from  them  r-literals. 

in  these  kinds  of  transitions 

Formulas  built  from  r-literals  by  means  of  the  quantifiers 

operators  only  are  called  r-formulas. 

r-formulas  without 

and  the  resource-sensitive 
(  are  also  called  con&mctive 

r-formulas.  General  formulas  of  TL  are  r-formulas  and  literals,  and  any  expression  built 
from  those  by  means  of  the  classical  operators.  For  instance,  P & Q +  R  is  an  r-formula, 
hence  a formula, 
(P’  +  P)  A (P  +  Q)  -+  (P’  +  Q)  is a formula  but  not  an  r-formula,  and 
P & (P  +  Q)  =+ Q is  not  a formula  (nor  an  r-formula)  since  the  definition  does  not  allow 
one  in  the  formula 
classical  operators 
tree.  An  r-subformula  which  is  not  a  proper  subformula  of  an  r-subformula 
is  also  called 
an  r-part  in  the  given  formula. 

(other  than  quantifiers)  below  a  resource-sensitive 

We  will  deal  in  this  paper  with  a  restricted  class  of  formulas  only  which  have  the  form 

TA(F~~GI)A...A(F,~G,)~(G~~ 
F  is  called  the  query  in  such  a formula. 

F)whereby+doesnotoccurinF;.GJ,F. 

3.  Semantics  of  TL 

In  real-world 

The  semantics  of  the  classical  part  of  TL  is  exactly  as  in  classical 

logic.  Therein  L  A  L 
is  equivalent  with  L  according 
it  does 
to  the  rule  of  idempotence. 
matter,  however,  whether  you  have  the  same  thing  (say  an  euro)  once  or  twice.  Similarly, 
it  does  matter  whether  you  take  your  euro  or  mine.  That  is  why  we  need  the  two  extra 
operators  &,  1 which  behave  just  like  their  classical  counterparts  A,  v  except  for  the  rule 
of  idempotence,  which  does  root  hold  for  &,  and  for  1 modelling 
(rather 
than  an  inclusive) 
allowing  1 to  be  distributed  over  &.  With  these  remarks 
how  to  generalize 
the  way  to  compute 
interpretation 

In  consequence,  we  will  not  have  the  law  of  distributivity 
it  should  be  more  or  less  obvious 
the  truth-value  of  a  given  formula  under  a  certain 

logic  to  TL  except  for  the  treatment  of  +. 

from  standard 

an  exclusive 

alternative. 

scenarios 

then  obviously 

For  understanding 

the  latter,  consider 

In  view  of  the  class  of  formulas  considered 

the  truth-value  of  the  formula  we  thus  need  an  interpretation 

the  formula  K  =+ L.  Since  it  involves  a  transition 
say  oC, and  one  after 
it  refers  to  two  different  worlds  (or  states),  one  before  the  transition, 
1 for 
it,  gr.  For  computing 
each  of  these  two  different  worlds.  The  formula 
is  true  in  the  case  where 
we  have  1(K,  crE) =  T,  [(L,  cc:) =  I,  1(K.  al)  =  I,  and  1(L,  al)  =  T  (assuming  K  #  L). 
in  this  paper  we  now  take  (FL  =S  G 1) A 
It  refers  to  five  (possibly)  different  states.  Let  us  call 
(Fz  =S G2)  as  our  next  example. 
them  cr,,  01,  ~712, m,  ~21 whereby 
the  indices  are  meant 
to  be  (possibly  empty)  strings 
in  possible  sequences.  An  interpretation  L makes  this 
involved 
of  names  of  the  transitions 
formula  true  if  it  holds  that  if  1 (Fl  , a,)  =  T  then  1 (G I, o,~ 1) =  T  and  L (F1 , cr, 1) =  I  unless 
l(G  1 -+  Fl , o,~ 1) =  T,  and  similarly 
FI  is  true,  then  the  facts  supporting 
supporting 
the  case  of  conjunctive 
occurring 

for  rule  2,  for  all  prefixes  s.  Informally, 
if  in  state  a.7 
the  truth  of  F1  are  removed  and  replaced  by  those 
the  truth  of  G 1 in  state  crs 1. Talking  about  five  possible  states  is  correct  only  in 
r-formulas  but  not  quite  right  in  general  as  there  may  1 operators 

in  the  F’s  and  G’s  These  again  may  refer  to  different  states  like  +. 

The  example 

just  discussed 

is  already  generic 

for  the  general  case  where  only  more 
in  the  case  of 
r-formulas  we  would  have  to  consider  all  different  substrings  of  the  n!  possible 
(Fr  =+ G 1) A  .  A  (F,  =+ G,)  then  entails  Go  +  F  if,  for 

and  longer  sequences  of  transitions  might  get  involved.  To  be  more  precise, 
conjunctive 
sequences  of  the  n  transitions. 
any  interpretation 
whereby  s  is  one  of  the  possible  sequences  such  that  F  becomes 

is  either  false,  or  it  is  true  under  1 and  there  is  a  state  CJ,~ 

true  under  1 in  that  state 

1, the  premise 

W. Bihel  /Arrijiciol 

Inrelligrnce  103  (1998)  183-208 

187 

if  GO is  true  in  the  initial  state  crc. For  instance,  T  A  (K  +  L)  +  F  holds  if  the  query  F 
I  and 
is  classically  entailed  by  T  or  if  it  is  of  the  form  G  =+  F’  and  for  any  interpretation 
states  crE, 01 for  which  the  transition 
true  the  conclusion  becomes 
theory  T  carries  over  from  state 
true  as  well  given  T.  As  we  see  the  classical  background 
to  state  unchanged.  Validity,  +  F,  is  then  defined  as  usual. 

in  the  premise  becomes 

their  reachability 

Altogether  we  are  dealing  here  with  a Kripke  semantics  whereby  the  number  of  possible 
sequences  of 
worlds  and 
in  some  world  carries 
transitions.  This  semantics 
over  to  any  other  reachable  by  a transition  unchanged  except  for  the  changes  prescribed  by 
the  transition 
rule.  Section  6 will  resume  the  discussion  of  the  semantics  of  TL  while  in  the 
next  section  we  focus  on  its  deductive  aspects. 

is  special  however  as  any  interpretation 

by  the  number  of  possible 

is  determined 

4.  Basic  deductive  machinery 

As  the  original  name  of  our  approach, 

basic  deductive  machinery 
method  is  characterized  by  the  fundamental 
of  a  formula  by  the  so-called  spanning  property  explained  shortly.  Many  different 
calculi  can  be  based  on  this  method. 

the 
[ 11,141.  This  deductive 
theorem  which  in  turn  characterizes  validity 
logical 

lineur  connection  method  (LCM),  suggests, 

is  based  on  the  connection  method 

In  order  to  explain 

the  spanning  property  we  need  the  concepts  of  a  path  through  a 
formula  and  of  a  connection.  A  path  through  a  formula  F  is  the  set  of  literals  of  any 
conjunct  of  the  conjunctive 
if  formulas 
normal 
of  clauses  which 
are  displayed  as  matrices.  Matrices 
the  formula 
in  turn  represent  conjunctions 
P  A (P  +  Q)  +  Q  (expressing 
logical  rule  of  modus  ponens).  In  negation 
normal  form  the  same  formula  reads 

form  of  F.  Paths  can  best  be  illustrated 
(positively) 

of  literals  (or,  in  general,  matrices).  Consider 

represent  disjunctions 

the  well-known 

-Pv(Pr\-Q)vQ, 

which  is  a  disjunction  of  three  clauses.  Hence  as  a  matrix  it  looks  as  follows. 

-Q 

-P 

P  1 

[ 

Q 

As  an  aside  we  mention 

basically 
yields  the  corresponding  PROLOG  program  except  for  the  differences  due  to  the  negative 
representation 

that  a rotation  of this  matrix  by  90”  (counterclockwise) 

used  in  PROLOG. 

P. 

Q 

:- 

P 

?-  Q 

A  path  through  such  a matrix  (or  the  formula 
it  represents,  or  the  corresponding  PROLOG 
program)  is  now  the  set  of  literals  obtained  by  selecting  exactly  one  literal  from  each  clause 
the  matrix  say  from  left  to right).  In  the  present  example  there 
(or,  in  other  words,  traversing 

188 

U!  Bihel /  Artijicinl 

Intelligence 

103  (I  99X) 

I X3-208 

are  exactly  two  such  paths,  namely 
literals  of  these  two  paths  are  obviously 

{Q,  -Q, 

-P) 

and  {Q,  P,  -P}.  The  disjunction  of  the 

the  disjuncts  of  the  conjunctive  normal  form  of 

-P  v  (P  A-Q) 

v  Q. 

A  connection 

is  a  subset  of  a  path  of  the  form  {R,  -R}.  There  are  two  connections 

in 

our  present  example 

illustrated  as  arcs  in  the  following  display. 

(or  muting)  is  called  spanning 

if each  path  through  the  matrix  contains 
A  set  of  connections 
of  our  example,  hence 
at  least  one  connection.  This  is  the  case  for  the  two  connections 
at  the 
the  formula 
outset  of  the  section.  Recall  that  the  matrix  form  is  used  just  for  illustration  and  is  thus  not 
essential  for  the  connection  method.  The  connections 
(and  the  spanning  property)  could  as 
well  have  been  identified 

in  the  original  formula  as  follows. 

is  (of  course)  valid  according 

theorem  mentioned 

to  the  fundamental 

like  the  two  displayed 

in  the  matrix  may  thus  be 

that  it  is  connections  which  lie  at  the  heart  of  deductive  reasoning 

A  chain  of  two  (or  more)  connections 
regarded  as  an  encoding  of  one  (or  more)  applications  of  modus  ponens.  This  illustration 
also  demonstrates 
(more 
so  than  rules  like  the  P  -+  Q  in  the  example). 
In  some  sense  a  connection  may  also  be 
seen  as  an  encoding  of  an  application  of  the  well-known 
have  been  illustrated 
obvious  way,  connecting 
the  following  matrix. 

resolution 
examples.  They  apply  to  first-order  formulas 

literals  with  opposite  signs  and  unifiable 

rule.  So  far  connections 

terms.  An  example 

for  propositional 

in  the 
is 

is  established  by  the  two  spanning  connections 

along  with  the  substitution 

Here  validity 
x \a,  which  makes  the  connected 

literals  complementary. 
Up  to  this  point  we  have  restricted  our  discussion 

for  purely  classical 
spanning  property  carries  over  to  the  case  of  general  formulas 

to  deduction 

formulas.  The  characterizing 
in  our  logical  language  with  one  minor  modification 
take  the  r-formula 
(P  +  Q)  + 
the  same  matrix  as  the  one  before 

to  represent 

(P  =+  Q)  as  our  first  example 

to  be  explained  shortly.  In  fact,  if  we 
then  we  may  use  exactly 
way. 

in  a  two-dimensional 

the  formula 

W  Bibel  /Arfi$ciul 

Intelligence  103  (1998)  183-208 

189 

In  fact,  in  spite  of  the  modification 
obtained. 

in  the  formula  exactly 

the  same  proof  for  validity 

is 

rather 

In  order 
r-parts 
operations 
Again  as  in 
relevance, 
formula. 

to  distinguish 

it  from 

than  brackets.  One  should  note,  however, 

the  classical  matrix  we  have  used  boxes  around 

its 
of  the 
one. 
illustrative 
also  here  could  as  well  have  been  placed  in  the  original 

is  more  of  an 

is  a  different 

the  semantics 

representation 

arrangement 

the  matrix 

time 

that 

this 

the  structural 
case 

represented 

by 
the  classical 
since  the  connections 

Let  us  now  consider  a  general  formula 

like  (P’  -+  P)  A  (P  =$  Q)  -+  (P’  $  Q)  which 
that  P’  is just  another  name  for  P  and  which  is  represented 

in  its  classical  part  expresses 
by  the  following  matrix. 

The  (non-literal) 
Hence  the  formula 

is  again  valid. 

r-parts  are  again  boxed.  The  three  connections 

are  obviously 

spanning. 

The  need  for  a  modification  of  the  validity  criterion  becomes  clear  if  we  compare 

the 

classically  valid  formula  P  A (P  -+  Q)  A (P  -+  R)  +  Q  A R  whose  proof  is 

should 

formula 

intuitively 

then  clearly 

r-formula 
(P  +  Q)  A  (P  +  R)  + 
is  clear  from  the  spanning  property  obviously 
not  be  valid.  Namely, 

(P  =+ Q & R).  While  the  validity 
with  the  analogical 
satisfied  for  the  matrix, 
of  the  first  formula 
the  second 
(P)  buys  a 
if  an  euro 
coffee  (Q),  and  if  an  euro  buys  a  tea  (R),  and  if  I  have  just  one  euro  (as  the  formula 
I  cannot  buy  both  coffee  and  tea  since  I  would  rather  need  wo 
suggests) 
euros  for  that  purpose.  Since  the  matrix  and  its  connections  would  be  exactly 
the  same 
that  the  spanning 
for  the  second 
The 
property 
kind  of  modification 
i.e. 
(P  =+ Q)  A  (P  +  R)  + 
and  compare 

formula  as  for  the  first  one,  we  are  lead  to  conclude 
in  the  classical 

becomes  clear  if  we  add  another  P  to  the  present 

(P  &  P  +  Q & R),  which  intuitively 

case)  needs  some  modification. 

is  valid  as  just  illustrated 

(characterizing 

r-formula, 

its  proof 

validity 

I90 

W  Ribel/Arti$cial 

fntrlligencr 

IO.?  (1YYX) 

183-208 

the  previous  one.  In  the  latter  matrix  each 

literul 

with 
connection  while 
satisfied  because  the  literal  7  P  is  contained 
To  cover  the  general  case  considered 
more  general  definition. 

in  the  former 

this  lineari 

restriction 

is  contained 

in  at  most  one 
in  its  original  form  [9]  is  not 

in  more  than  one,  namely 
in  the  present  paper  this  linearity 

in  two  connections. 

restriction  needs  a 

0  (for 
tree  of  a  formula.  The 

For  that  purpose  we  inductively 

introduce 

the  concept  of  the  directionality’ 

in  the  formula 

in  the  formula 

in  an  r-formula 
is  1, and  consumption 

0.  If  a  node  with  directionality 

d  is  labelled  by  A,  v,  &  or  by  1 
d;  if  it  is  labelled  +,  =+  then  the 
of  the  left  successor  node  is  (d  +  1) mod  2  while  that  of  the  right  successor 
(or 

the  occurrences 

of  literals 

partitions 

and  1  (for  resource)  of  the  nodes 

consumption) 
root  has  directionality 
then  its  successor  nodes  have  the  same  directionality 
directionality 
node 
r-matrix) 
literuls  if  it  is  0.  If  needed  we  attach  this  directionality 
our  matrix  examples 

into  resource  literals  if  their  directionality 

is  d.  The  directionality 

the  directionality 

to  a  literal  as  an  upper  index.  In  all 
is  I  for  a negated  literal  and  0 for  an  unnegated  one. 
, c,:),  II  >  1,  of  directed 
in  a  matrix  M  is  a  sequence 
(CI( 
A  chain  of  connections 
(L, , L;),  such  that  for  any  i,  1 <  i  ,< n  -  1, the  end  literal  of 
(instances  of)  connections 
c;,  i.e.,  Li,  and  the  sturf  literal  of  ci+t, 
in  the  same  (top  level)2 
are  literals 
clause  of  M  but  do  not  occur  in  one  and  the  same  path  through  M,  i.e.,  they  are  vertically 
related  [24].  A  cycle  is  a  chain  such  that  also  its  start  literal  El, 
i.e.,  the  start  literal  of 
related  in  this  sense.  A  chain  is  called  an  r-chain 
cl,  and  its  end  liter&  L,,  are  vertically 
if,  viewed  as  a  list  (K1 , . . . , Kz,,)  of  literals  Kj,  1 <  ,i  <  2n,  n  3  1,  K1  is  a  literal  of 
0  in  the 
directionality 
query.  Two  r-chains 
if  one  of 
the  following 

the  query,  Kz,,  is  a  literal  of  directionality 
, K.&,,)  are  called  r-compatible 

(Kl  , 
two  conditions  holds. 

1 in  the  r-part  containing 

, K2,,)  and  (K;  . 

i.e.,  r;+t, 

(1)  K,+I  =  K;,,  whenever  Ki  =  KJ  for  odd  i  and  ,j.  and  Ki+l  and  K:,, 

are  in  the 

same  r-part  whenever  K;  =  Ki  for  even  i  and  j; 

(2)  Kzn  and  K;,,  occur  in  A  and  B,  respectively,  within  a subformula  of  the  form  A  1 B 

occurring 

in  the  query. 

In  all  other  cases  we  call  the  two  chains  r-incompatible.  A  set  of  connections 
M  satisfies  the  linearity  restriction 
containing 

in  a  matrix 
if,  for  each  directionality-  1 literal  L  in  the  r-part  of  M 

the  query,  all  r-chains  starting  from  L  are  r-compatible  with  each  other. 

These  definitions 

in  their  details  go  a bit  beyond  what  is  intended  with  this  paper  simply 
they  are  novel  and  have  not  been  published  before.  In  fact  it  could  well  be  that 
as  the  structure  of  formulas  and  their  semantics 
the  fundamental 
aim  at  yielding 
instance  F’  of)  F 

because 
they  need  further  (minor)  adjustments 
evolve  further.  We  just  mention  here  that  the  definitions 
theorem  according 

to  which  a  formula  F  is  valid  if  (some  compound 

’ Note  that  directionality 
’  In  the  case  of  non-normal 

is  a  specialized 

form  of  the  well-known  concept  of  polarity. 

form  matrices  clauses  may  not  be just sets  of  liter&. 

W Bihel /Artificial  Intelligence  103  (1998)  183-208 

191 

restriction 

the  linearity 

this  technically 

then  we  must  require 

restriction.  The  literals 

reader  to  1241 for  the  details. 

the  definition  of  r-compatibility 

and  unifiable  mating  which  satisfies 

the  rationale  behind 
of  the  linearity 

and  has  no 
[24])  cycles  within  any  of  M’s  r-parts.  Since  none  of  our  examples  will  need 
instances  we  refer  to  the  ATP  literature  for  the  respective  details  (e.g.,  see  [ 1 I]). 
intricate 

has  a  spanning 
(regular 
compound 
Nor  has  any  of  our  examples  cycles.  Therefore  we  also  ignore 
issue  and  refer  the  interested 
Let  us  briefly  discuss 
get  a  better  understanding 
index  are  those  of  a  “resource  nature”.  If  two  chains  have  none  of  those  in  common 
no  resource  conflicts  may  arise  hence  they  are  r-compatible. 
two  literals  in  common, 
connection 
ways.  If  two  possibly  different  chains  end  in  two  alternatives 
may  use  the  same  resources 
conflict  cannot  occur  this  way.  The  need  for  the  second  part  of  condition 
by  the  example 
would  not  satisfy  the  linearity 
((,P, 
allows  to  define  a resource 
All  matrices  considered 
just  before  these  definitions 
r-chains 
different 
The  restriction 

in  order  to 
in  a  chain  with  an  odd 
then 
If,  however,  they  have  such 
the  same 
through 
is  not  used  in  different 
(2))  then  they 
in  different  ways  as  in  each  separate  alternative  a  resource 
(1)  is  illustrated 
is  a valid  formula  but 
restriction  unless  the  two  chains  ((,P.  P).  (-PI,  PI ))  and 
thus 

restriction  except  the  one  discussed 
in  which  the  directionality-  1 literal  -(P  were  the  start  of  two 
if  the  matrix  were  regarded  as  an  r-matrix. 

in  terms  of  different  components. 
so  far  satisfy  the  linearity 

is  also  satisfied  in  the  matrix  associated  with  the  general  formula 

(l),  first  part)  so  that  the  same  resource 

[P  +  Pt  &  PI]  which  obviously 

P),  (-PI,  Pz))  were  sanctioned 

(each  with  one  connection) 

r-compatible  by  condition 

that  both  chains  continue 

(P  +  Pt  &  PI)  + 

(1).  The  condition 

(condition 

(condition 

(P’  - 

‘)  A  (P  =+  Q)  + 

(P’  =+  Q) 

shown  above  since  there  is  only  one  r-chain  starting 
trivially 
example 
theory  connections 

is  compatible  with  itself.  As  an  aside 
that  fragments  of  r-chains 
[ 141. 

in  P’  which  according  condition 

(1) 
in  the  context  of  this 
such  as  ((,P’,  P’).  (-P,  P))  may  be  regarded  as 

it  is  mentioned 

A  more  complex  example  derived  from  the  previous  one,  namely 

R  A  (R  + 

(P’  -+  P))  A (R  + 

((Q’  +  Q)  + 

(P  =+ Q),)  + 

(P’  =s  Q’) 

yields  the  following  proof. 

_Tq?jzs&g 

R 

R 

the  linearity 

I the  example  before 

As  ir I 
since  there  is  only  one  r-chain  starting 
notwithstanding 
involved 
fulfilled  for 

in  classical 

the  fact  that  the  literal  R  is  involved 
rather  than  resource-sensitive 

restriction 

from  1P’ 

is  fulfilled 

in  its  spanning  mating 
and  ending  with  Q’.  This  is  the  case 
but  these  are 
is  also 

steps.  The  restriction 

in  two  connections; 

reasoning 

(P&Q+ 

R&S)+ 

(P&Q+ 

R&S). 

192 

W  Bibel  /Artijicial 

Intelligence  103  (1998)  183-208 

On  the  other  hand,  the  formulas 

(P-+  Pr\P)-+(P*PP&) 

and 

have  spanning  matings,  but  in  line  with 
restriction. 

intuition 

none  of  them  satisfies 

the  linearity 

The  solution  presented  here  and  illustrated  with  these  examples 

restriction 

in  [9]  where 

in  a  transition 

it  reads:  “the  linearity 

rule  only,  not  to  those  possibly 

given 
element 
reasoning 
in 
just  presented 
publications 
has  been  offered.  We  illustrate  our  solution  for  the  formula 

the  usual  way”.  The  generalized 
also  covers 

the  case  of  disjunction 

[6,8,26]  where  a different  solution  based  on  the  restriction 

applies 

required 

informally  was  already 
to  connections  with  one 
‘static’ 
restriction 

for  additional 
linearity 

definition 

of  the 

1, which  has  been 

the  topic  of  the 
in  its  original  form 

(P  =+  R)  A (Q  =+ RI  -+  (P  I Q =+ RI 

with  the  following  matrix. 

fulfilled 

The  two  r-chains  have  no  odd  literals 
is  again 
different  connections 
also  demonstrates  deductive  reasoning 
AI  literature 

thus  violating 

in  this  spanning  mating  although 

the  literal  R  is  contained 

(condition 

(1))  in  common 

the  restriction 

in  its  original 
in  TL  is  skeptical  reasoning 

so  that  the  restriction 
in  two 
form.  As  the  example 
in  the  sense  used  in  the 

[53].  Similarly  we  get  a proof  for  the  formula 

P&(QIR)+P&Q 

I  P&R 

at  the  propositional 

literals.  Otherwise  everything  goes  as  described. 

Just  for  simplicity  we  kept  all  our  examples 
formulas  may  include  quantifiers  which  require 
connected 
we  may  also  consider  more  than  one  instance  of  a  given  action  rule  each  of  which  is  to  be 
treated  as  a separate  rule  just  like  the  ones  in  our  examples  so  far.  In  fact  this  enables  us  to 
avoid  the  !-operator  used  for  this  purpose  in  linear  logic  (although 
it  in  TL  as  well). 
wrong  with  introducing 

level.  In  general, 
of 

the  additional  property  of  unifiability 

In  the  presence  of  quantifiers 

there  would  be  nothing 

5.  Planning, 

temporal  projection,  and  postdiction 

Planning 

is  the  main  topic  of  this  paper.  So  what  has  the  formalism,  TL,  introduced 

the  last  two  sections 
Go),  of  a  goal  state  (F),  and  of  the  possible  actions 

in 
to  do  with  planning?  Well,  given  a  description  of  an  initial  state  (say 
formulas 

in  terms  of  r-implicational 

I+! Bibel  /Artificial 

Intelligence  103  (1998)  183-208 

193 

(Pi  =+ Gi),  then  all  we  need  to  do  is  to  activate  a theorem  prover  for  TL.  Any  proof  it  finds 
represents  a  plan  which  satisfies  the  description.  The  actions  determined  by  the  plan  are 
those  action  rules  used  in  the  proof.  Their  order  of  execution 
is  determined  by  the  chains 
of  connections 

the  proof  from  the  initial  to  the  goal  situation. 

establishing 

For  instance,  consider 

the  formula 

It  may  be  interpreted 
as  dressing  one’s  left  (P)  and  right  (Q)  foot  (index  0)  with  a  sock 
(1)  and  a  shoe  (2).  There  are  no  alternate  choices  for  the  8  connections  which  establish 
the  proof  for  this  formula,  so  the  reader  may  easily  identify 
them.  As  these  connections 
for  the  Q-rules.  On  the  other 
prescribe, 
the  PO-rule  must  precede  the  PI -rule  and  similarly 
hand  the  P-connections 
in  terms  of  any  order. 
So  the  plan  leaves  open  in  which  order  the  actions  for  the  left  and  right  foot  are  mixed 
together  which  may  therefore  be  determined 
arbitrarily.  That  is,  the  resulting  plans  are 
partially  ordered  ones  as  is  desirable 

from  the  Q-connections 

for  applications. 

are  independent 

For  the  formula 

(P&Q+P&-Q)A(P+-P)+(P&Q+-P&-Q) 

its  five  connections 
establishing  validity  determine  a linearly  ordered  plan  since  the  second 
rule  can  only  be  executed  after  the  first  one.  The  formula  may  be  interpreted  as  the  adultery 
(P)  shoots  his 
drama  by  Drew  McDermott 
rival  (-Q) 
and  not  the  other  way  round,  which  obviously  would 
and  then  himself 
not  yield  a proof  in  our  logic. 
For  decades  formalisms 

(personal  communication)  whereby  a  husband 
(-P), 

for  planning  were  plagued  by  the  notorious  frame  problem  [48]: 
i.e.,  everything  not  affected  by  the  action. 
the  “frame”  of  an  action, 
how  to  characterize 
frame 
The  aspects  of  the  frame  problem  now  called  representational 
to 
problem 
the  most  popular  competitor,  namely 
(see  Section  6).  In  fact,  LCM 
has  been  the  first  method  which  actually  solved  these  aspects  of  the  frame  problem  and  did 
so  in  the  optimally  possible  way. 

[60]  are  no  problems  any  more  in  our  formalism,  which  is  in  stark  contrast 
the  situation  calculus 

inferential 

and 

[9]  employed 

for  solving  planning 

So  our  logic  and  its  deductive  machinery  are  fully  appropriate 

tasks 
so  far.  In  certain  contexts  one  might  expect  an  explicit  answer, 
answer  extraction 
state  literals,  S(X),  which  keep  trace  of  the  states  passed 
that  an  action  rule  such  as  the  suicide 
the  variable 
the  goal  situation  will  then  along  with  a  successful  proof  always  provide  a  term 
system 
plans  as  alternatives.  The 
if 

of  the  sort  considered 
i.e.,  a  concrete  plan.  For  that  purpose 
technique 
[29]  by  introducing 
through  while  executing  a  plan.  This  also  requires 
killing  rule  above  would  read  S(X)  &  P  +  S(suicide(x))  &  -P.  By  unification 
denoting 
which  expresses 
might  compute  all  possible  proofs  and  offer  all  corresponding 
option  also  allows  for  multiple  copies  of  action  rules  (by  way  of  the  quantifier 
needed,  the  way  mentioned  at  the  end  of  the  last  section. 

sequence  of  actions. 

In  this  option 

the  linearized 

a  well-known 

the  planning 

involved) 

There  are  modes  other  than  planning  which  are  of  interest 

temporal  projection:  given 

in  our  context.  One  such 
the  initial  state  and  the  sequence  of  actions, 
the  resulting 
state.  Or,  in  another  mode  called  postdiction,  one  would  like  to 
the  initial  state  in  order  to  explain  with  it  the  observed  outcome  of  a  sequence 

mode  is  called 
determine 
determine 

194 

M! Bihel 

/Artificial 

Intelligence 

103  (I 998) 

I&-20X 

of  actions.  Since  theorem  provers  can  be  used  in  all  these  modes  as  well,  namely 
checking 
of  postdiction), 
TL.  That  is,  the  deductive  approach  is  as  versatile  as  one  would  wish. 

theorem 
(i.e.,  a form 
all  these  and  other  modes  can  of  course  be  modelled  by  proof  systems  for 

(i.e.,  temporal  projection),  abduction 

(i.e.,  planning),  proof  checking 

6.  Semantics  and  alternative 

formalisms 

In  principle 

there  are  two  ways  to  provide 

in  the  previous 
the  direct  and  the  indirect  one.  In  Section  3  as  well  as 

the  logic  TL  introduced 

sections  with  a  precise  semantics, 
in  [4] the  direct  route  has  been  taken.  Informally,  we  may  think  of  a Kripke-style 
with  an  actual  and  further  worlds.  Whenever  a proof  activates  a rule  with  a 3 
from  the  premises 
next  one  which  differs  from  the  present  one  only  in  the  changes  specified  by  the  rule. 

semantics 
the  transition 
from  the  present  world  to  some 

to  the  conclusion  amounts 

to  a transition 

The  indirect  way  to  specify  a  semantics 

for  which  a  semantics 

formalism 
describe  two  formalisms  which  were  used  for  this  purpose.  Otherwise 
TL  with  several  related  formalisms. 

consists 

in  embedding  TL  in  an  existing 
is  already  known.  In  the  next  and  the  third  subsection  we 
the  section  compares 

6.1.  TL  and  LL 

A  very  close  relative  of  TL  is  linear  logic  1281 which  was  first  published  about  two  years 
after  the  first  publication  of LCM  [lo],  predecessor  and  part  of  TL.  ’  We  briefly  summarize 
what  is  known  about  the  relationship  of  TL  with  linear  logic  (LL). 

For  that  purpose  we  restrict 

in  [27].  Its  Theorem  4.1  states  (among  other  things) 

rule,  also  known  as  (classical)  BCK  [59] 
to  the  same  thing  (in  terms  of  derivability).  A  similar  result  was 

the  language  of  TL  to  its  r-formulas  only,  i.e.,  dispense 
with  any  classical  background 
theory  T  and  refer  as  rTL  (or  LCM  for  that  matter)  to  this 
restricted  part  of  TL.  Further  we  consider  only  r-formulas  without  1 and  refer  to crTL  to  this 
part  of  TL.  Theorem  35  in  [24]  states  (among  other  things)  that  crTL  and  the  multiplicative 
part  of  LL  with  the  exchange  and  the  weakening 
(or  affine  logic),  amount 
obtained 
linear  theories  as defined  in  [50]  on  the  basis  of LL  amount  again  to the  same  thing  (in  terms 
of  derivability). 
it  has  not  been 
parts  so  that  crTL  may  inherit 
to  rTL.  In  fact,  LL 
shown  in  detail,  it  is  conjectured 
in  LL  [28].  On  the  other 
is  as  expressive  as  TL  since  classical 
for  practical  purposes  a  much  more  restricted  class  of  formulas 
hand,  we  have  proposed 
both  by  the  definition  of  the  language  of  TL  itself  (no  arbitrary  nesting  of  classical  and 
in  its  r-part  (to  a  rule  form). 
non-classical 
the 
Finally,  LCs  proof  nets  are  but  another  name  of  LCM’s  spanning  matings  satisfying 

its  semantics 
that  these  results  may  be  generalized 
logic  can  be  embedded 

In  other  words,  TL  and  LL  more  or  less  coincide 

operators)  and  by  the  restriction  of  the  formulas 

from  LL  [25].4  Although 

that  crTL  and  conjunctive 

in  their  multiplicative 

3 Only  later  it  became  clear  that  [40]  as  well  as  relrvancc~ 

logic 

[I]  are  important  predecessors  of  LCM  as  of 

linear  logic. 

4 Note  that  we  did  not  follow  the  unintuitive  notation  used  in  LL:  TL’\  +,  &,  1 correspond 

to  LL’s  +,  8,  GB, 

respectively 

(while  the  two  remaining  binary  junctors  of  linear  logic  can  be  defined  in  terms  of  these  three  ones). 

W  Bibel  /Artijicial 

Intelligence  103  C 1998)  183-208 

195 

restriction 

(with  the  minor  difference 

linearity 
in  LCM,  an  advantage  of  LCM  or  TL  over  LL  again  from  a  practical  point  of  view).  In 
summary,  although  TL  is  a  linear-logic-type 
than  LL  for 
practical  purposes. 

that  not  all  literals  need  to  be  connected 

of  logic  it  offers  more  attractions 

To  1241 we  owe  much  of  the  formal  background.  For  instance, 

a  formal  justification 
is  a  slight  difference  between 
corresponding 
restriction 
original  form  (mentioned 

of  our  use  of  the  matrix  representation 

the  linearity 

its  Chapter  3  provides 
(for  crTL  at  any  rate).  There 
restriction  used  in  the  present  paper  and  the 
in  its 

in  Theorem  35  of  [24]  as  the  latter  uses  the  restriction 
in  Section  4). 

6.2.  TL  und  STRIPS 

Many  planning 

systems  are  based  on  the  STRIPS 
uses  operators  defined  by  schemas  using  precondition, 
consider 

the  following  move-operator 

in  a blocks  world. 

in  [21].  This 
formalism 
add,  and  delete  lists.  As  an  example 

introduced 

MOVE(x)  Y 3 z) 

PRE:  CLEAR(x),  ON(x,  y),  CLEAR(z) 
ADD:  CLEAR(y),  ON(x,  z) 
DEL:  CLEAR(z),  ON(x.  y) 

In  TL’s  notation 

the  same  is  expressed  as 

CLEAR(x)  & ON(x,  y)  &CLEAR(z)  =+ CLEAR(x)  & ON(x,  z) &CLEAR(y) 

so  that  there  is  nothing 

here  are  the  same  as  in  PRE  above  and  the  postconditions 

The  preconditions 
literals  from  ADD  which  both  is  true  in  general.  In  TL  all  preconditions 
“deleted’, 
have  to  be  stated  explicitly  again  in  the  postcondition.  As  mentioned 
the  name  of  the  operator  could  optionally  be  integrated 
not  shown  here  for  simplicity. 
logical  version  of  the  STRIPS 
from  STRIPS  but  as  an  additional  feature  it  has  also  the  expressiveness  of  classical 

non-deleted  preconditions 
in  the  previous  section 
in  the  rule  within  the  state  literal 
In  summary,  crTL  may  be  regarded  as  an  approximate 
In  other  words,  TL  inherits  all  advantages 
formalism.5 
logic. 

like  DEL.  In  compensation 

include  all 
i.e., 

are  consumed, 

6.3.  TL  und  thejuent 

culculus 

In  [32]  a  classical  calculus, 

introduced,  which  represents 
logic.  This  is  done  in  the  tradition  of  representing 
at  the  meta-level 
example. 

(see,  e.g.,  [37]),  illustrated 

the  manipulations 

in  the  meantime  named  juent 

(FC),  has  been 
culculus 
of  actions  on  the  term  level  of  classical 
logically 
in  the  following  with  the  previous  blocks 

the  object-level  of  a  calculus 

Predicate  symbols  such  as  MOVE,  CLEAR  or  ON  become  functional 

symbols,  say  mv, 
cl and  on,  respectively.  The  logical  operation  &  is represented  as  a functional  as  well,  say  o. 
The  entire  action  is  then  a formula  Action(c,  a.  e)  which  reads  as  follows: 

c  =  cl(x)  0 on(x,  y)  0 cl(z)  A  a  =  mv(x,  y.  z)  A  r  =  cl(x)  0 on(x,  z)  0 cl(y) 

’  Section  8.2  in  [24]  gives  example?  which  demonstrate 

that  the  correspondence 

is  not  an  exact  one. 

As  can  be  seen  it  specifies 
equational 
the  action  a  is  represented  by  the  following 

the  name  and  the  effects  of  the  action  in  an 
setting.  The  transition  Result(s,  u,  s’)  from  the  state  s  to  the  state  s’  caused  by 

the  preconditions, 

formula: 

Action(c,  a,  e)  A  c  o i  =  s  AS’  =  z  o e. 

Note  the  variable  z  summarizing 
the  part  of  the  state  not  affected  by  the  action.  Planning 
problems  are  stated  in  this  approach  by  a  goal  literal  asking  for  a  plan  (i.e.,  a  sequence 
to  the  goal 
of  actions)  which 
state  on  the  basis  of  a  theory  (i.e.,  a  logic  program)  which  describes  all  possible  actions 
and  specifies  the  properties  of  o appropriately 
neutral  element).  More  details  on  FC  can  be  found,  e.g.,  in  [65].  A  different  but  closely 
related  approach  can  be  found  in  [ 191. 

the  initial  state  (a  term  like  the  ones  shown) 

(associative,  commutative,  non-idempotent, 

transforms 

The  main  advantage  of  FC  is  that  it  has  a  standard  classical  semantics 

[64].  Further,  the 
resulting  programs  can  be  run  by  any  equational  PROLOG  system.  It  is  not  clear  at  this 
point  whether  these  advantages  outweigh 
reader  will  agree  that  the  last  two  formulas 
and  computational 
the 
than 
specifying 
corresponding 
for  casual 
in  TL  shown  further  above.  While  appropriate 
users  may  provide  a  remedy  for  this,  researchers  and  programmers  have  still  to  work  on 
this  representational 

the  potential  disadvantages  of  a representational 

the  result  of  an  action 

to  read 
interfaces 

nature.  Any  unbiased 

and  much  harder 

is  awkward 

formula 

level. 

The  already  mentioned  Theorem  4.1  in  1271 also  states  that  crTL  and  the  (conjunctive) 

fluent  calculus  just  presented  amount  again  to  the  same  thing  (in  terms  of  derivability) 
indirectly  providing  a classical  semantics 
the  fluent  calculus 
will  eventually  prevail. 

thus 
to  TL.  Somehow  one  might  be  able  to  generalize 

to  model  the  full  TL.  Future  practice  has  to  determine  which  of  the  two 

6.4.  Situation  calculus  and  others 

The  most  popular  formalism 

for  representing  actions  is clearly  the  situation  calculus  [48] 

the  change  from  one  situation 

(with  its  standard  semantics)  which  encodes 

in  any  standard  AI  book  such  as  [60].  Again 

this  is  just  a  classical  predicate 
described 
calculus 
to  the 
next  in  the  form  of  an  eflect  axiom  by  an  extra  parameter  s  in  eachJluent  predicate  such 
successor- 
as  ON  above.  In  addition  one  needs  numerous 
state  axioms  [58]  which  combine  effect  and  frame  axioms  in  an  elegant  way  which  clearly 
of  the  situation  calculus.  One  of  the  main 
impede 
attractions  of  all  formalisms  mentioned 
so  far  (i.e.,  LCM,  TL,  LL,  STRIPS,  FC)  is  that  no 
such  additional  axioms  are  needed  at  all.  For  a  more  detailed  comparative  analysis  of  this 
drawback  for  the  situational  calculus  see  [24]. 

the  efficiency  of  any  implementation 

frame  axioms,  or  alternatively 

Given  that  planning  occurs  in  time  it  is  not  surprising 

offer  the  potential 
and  its  properties 
which  like  the  situation  calculus  suffers  from  the  lack  of  resource-sensitivity. 
there  are  numerous  variants  of  the  formalisms  mentioned 
these  in  terms  of  performance 
STRIPS  formalism  as  a  satisfiability  problem 

logics 
for  formalizing  planning.  One  such  approach  for  reasoning  about  plans 
in  [62] 
(i.e.,  not  for  planning 
In  addition 
so  far.  The  most  noteworthy  of 
is  the  SATPLAN  system  which  encodes  planning  within  the 

that  temporal  or  dynamic 

in  classical  propositional 

itself)  using  dynamic 

logic  is  reported 

logic  [36]. 

W  Bibel  /Artijicial 

Intelligence  103  (1998)  183-208 

197 

Fig.  1. An  electric  circuit  consisting  of  a  battery,  two  switches,  and  a  light  bulb  which  shines  if  the  two  switches 
are  in  the  upper  position. 

7.  Modelling  action  and  causality 

formalism 

for  planning 

Providing  a  deductive 

is  to  show  how  it 
is  used  to  model  the  various  aspects  underlying  actions  and  causality.  In  the  present  section 
we  will  discuss  the  most  important  among  these  aspects  and  show  how  TL  is  able  to  deal 
with  them.  Although  we  always  take  the  planning 
it  should  be  clear  that  all 
the  other  modes  of  reasoning  discussed 

in  the  previous  section  are  handled  similarly. 

is  one  thing;  a different 

for  illustration, 

7.1.  Ramification 

It 

that 

is  said 

the  wing-stroke 

of  a  butterfly  might  be 

the  cause  of  a  tornado 
to  consider  such  remote 
somewhere  else  on  the  globe.  Human  reasoning 
is 
consequences.  Rather  we  assume 
changed  by  some  action  except  for  the  changes  caused  directly  by  it  and  by  the  indirect 
such  indirect 
but  overseeable 
consequences 
in 
Fig.  1 for  illustration.  6 

the  law  of  persistence,  which  states  that  nothing 

is  called  the  ramification  problem.  Consider 

from  these.  The  problem  how  to  compute 

the  electric  circuit  depicted 

is  clearly  unable 

consequences 

We  tacitly  assume  that  there  is  voltage.  The  depicted  state  can  formally  be  captured  as 
-SI  & S_L &--L.  Now  assume  we  toggle  S)  by  means  of  the  action  described  as  -Si  =+  St 
in  TL.  The  resultant  state  Si  & S2 &  -L 
is  inconsistent  with  physics  which  teaches  that  in 
is  how  a planning 
consequence  of  this  action  also  light  will  go  on.  The  problem 
may  cope  with  this  ramification.  We  present  here  a  solution  which  in  essence 
as  the  one  in  [65]  but  accommodated 

to  TL’s  (rather  than  FC’s)  formalism. 

formalism 
is  the  same 

light  whenever  both  switches  are  on  without  changing 

Obviously,  we  need  an  additional  action  of  the  form  S)  & S2 & -L  =+ S)  & S2 & L  which 
the  state  of  the  switches. 
causes 
that  (i)  this  latter  action  is  never  activated 
Further  we  must  teach  the  reasoning  mechanism 
is  indeed 
except  in  consequence 
fulfilled  by  toggling  one  or  the  other  switch. 
activated  whenever 
There  are  many  ways  to  implement 
specified  by  these 
two  points.  We  describe  here  a  rather  simple  one  which  does  the  trick  along  with  a general 
control  specification. 

of  toggling  one  of  the  two  switches  and  (ii)  the  action 

the  control  of  the  proof  mechanism 

its  conditions  become 

‘The  discussion 

in  this  section  closely  follows  [6S]  from  which  the  examples  are  borrowed. 

rules  are  partitioned 

the  actions  preconditions. 

In  this  simple  solution 

the  transition 

rules  are  our  action  rules  considered 

into  primary  and  secondary 
so  far.  The  secondary  ones  are 
literals, 
In  our  example  both  switches  are  causal 
now 

ones.  The  primary 
called  causal  rules  and  are  characterized  by  the  occurrence  of  so-called  causul 
denoted  as  L”,  among 
for  the  light  to  go  on.  Hence 
reads  S;‘ & Sz & -L  =+ SI  &  $7 &  L.  In  the  initial  situation  as  well  as  in  any  situ&on 
resulting  from  a  primary  action  all  cau.~ul  rules  are  uctivated  whose  causal  conditions 
true  in  the  situation  either  directly  by  the  action  or  indirectly  by  the  activation 
became 
~$causal 
to  the  initial  situation) 
triggers  the  activation  of  causal  actions  until  a  stable  state  is  reached.  We  refer  to  this  as 
the  causality-has-preference 

the  rule  along  with  this  additional  control 

rules.  That  is,  any  action  (including 

strategy,  or  CP  for  short. 

the  one  “leading” 

information 

In  our  example 

the  light  action  is  not  applicable 
is  activated  the  causal  rule  follows  suite  according 
S1 & S2 &L  as  expected.  The  complete 
altogether  have  four  (primary) 
rules,  namely  -SF  & L  =+ -S’i  & -L, 

formal  description 
rules  for  opening  and  closing 

in  the  initial  state.  But  once  the  S1 -rule 
to  CP  so that  the  resulting  state  becomes 
of  the  example  would 
thus 
the  switches  and  three  causal 

i  =  1 1 2,  and  the  one  already  presented. 

An  immediate  objection 

as  the  number  of  conditions 

in  the  classical  part  of  the  formula, 

to  this  solution  might  be  that  the  transition 

rules  will  become 
cumbersome 
increases.  Among  others  it  is  here  where  our 
general  approach  pays  off.  Namely,  we  may  of  course  abbreviate 
these  conditions  by  a 
definition 
say  C”  tf  Sy & S5  and  thus  reduce  any 
the  conditions,  under 
such  transition 
which  there  will  be  light,  can  of  course  not  fully  be  dispensed  with.  But  there  is  a full  range 
it  may  be  broken  down  into  a  set  of  rules 
of  varieties  how  this  may  be  done.  For  instance, 
in  the  present  case:  current  causes  light;  if  (there  is  voltage  and)  the  circuit 
is  closed  then 
if  the  circuit  except  for  St  is  closed  and  St  is  closed  then  the  entire  circuit 
there  is  current; 
is  closed;  and  so  forth. 

like  C”  & -L  =+ C & L.  Specifying 

rule  to  something 

CP  has  been  tested  for  a  number  of  examples  discussed 

where  other  methods  have  failed  [65].  For  instance, 
incorrectly.  The  remedy  suggested 
depicted 

in  Fig.  2  demonstrates. 

in  [41]  is  insufficient 

in  the  literature,  also  for  those 
[3 l]  handles  already  the  given  example 
either,  as  the  extended  circuit 

The  depicted  state  can  formally  be  captured  as  -S)  & &  & -Sj  & -R  &  1  L.  Physics 
j  1st  &  &  &  R,  i.e.,  the  relay  becomes 

rules.  -Sy  & S_G & -R 

the  following 

determines 

1L 

Fig.  2.  An  extended  electric  circuit,  which  includes  a  third  switch,  S3.  and  a  relay,  R,  which  attracts  switch  S2  it’ 
activated. 

W  Bibel  /Ar@%d 

Intelligence  103  (199X)  183-208 

199 

i.e.,  the  relay  opens  S2;  and  SC & Sz &-L  +  5’1 &  S2 & L, 
light  (rather  than  S2)  to  open 
fluent  in  the  sense  of  [41].  On  the  other  hand,  closing  & 

activated;  RC &  S2 =+ R  &  +2, 
i.e.,  light  goes  on.  Closing  SI  in  the  current  state  causes 
which  suggests  that  S2 be  afrume 
in  the  figure  results  in  an  activation  of  the  relay  and,  in  consequence. 
in  the  state  depicted 
fluent.  In  other  words,  Lifschitz’ 
in  S2  opening  which  suggests 
categorization  of  fluents  does  not  work  in  this  example.  We  need  to  categorize 
the  actions 
into  primary  and  secondary  ones  (rather  than  the  fluents)  as  done  in  the  solution  presented 
in  this  section. 

that  it  be  a  non-frame 

In  [64]  an  example  of  two  coupled  switches  (if  one  is  closed  or  opened  the  other  follows 
suite)  is  given  which  demonstrates 
of 
causal  rules  into  causal  and  conditional  ones  as  we  did.  The  coupling  rules  are  SE & 1s~  =+ 
Logically 
S1 & S2  and  -Si  & S1  =+  lS2  & +I. 
of  the  two  rules  are 
if  S1  is  closed  and  only  the  second  if  Sz  is  opened 
identical,  but  only  the  first  is  triggered 
as  desired. 

that  indeed  we  need  distinguish 

the  preconditions 

the  preconditions 

7.2.  Quali$cation 

Although  we  have  now  a  formalism  which 

there  are  still  a  number  of  additional 

consequences, 
expect  the  formalism 
present  section  we  will  show  how  to  deal  with  situations  where  certain 
normally  available  should  reasonably  not  be  applied. 

to  play  a  crucial  role  in  the  reasoning  of  an  intelligent 

is  capable  of  modelling 

actions  and  their 
issues  to  be  considered  before  we  can 
agent.  In  the 
rules 

transition 

In  all  previous  examples  we  tacitly  assumed 

In  reality 
this  assumption  often  depends  on  numerous  conditions, 
too  many  in  fact  to  be  checked  in 
detail.  Switches  can  be  bracken,  circuits  cut,  light  bulbs  be  damaged,  and  so  forth.  How  to 
is  known  as  the  qualijcation  problem  [46].  There  is 
deal  with  this  infinity  of  possibilities 
a rich  literature  on  nonmonotonic 
[7].  TL  opens  a new 
way  to  deal  with  the  problem.  Why  not  using  Tweety  again  to  illustrate 

reasoning  coping  with  this  problem 

that  the  actions  are  executable. 

it. 

Tweety 

is  a  bird  (Bt)  as  well  as  a  penguin 

(Pt).  Birds  fly  (F)  and  have  wings 
Penguins  are  exceptional  birds  in  that  they  do  not  fly  which  we  express  as  a  transition 
in  the  following  valid  formula:  7 

(W). 
rule 

introduced 

The  technique 
triggered 
change  in  one’s  mental  state)  which  prevents 

to  achieve  sort  of  an  update 

in  the  previous 

section  guarantees 

that  the  transition 

in  the  form  of  a  pseudo-causal 

rule  is 
effect  (causing  a 

the  wrong  conclusion  of  Tweety  flying. 

The  technique 

is  applicable 

even  beyond  nonmonotonic 

additionally 
from  [631’s  FC  using  the  example  discussed 

for  causal 

account 

relationships. 

The  solution 

there  in  great  detail. 

reasoning  because  we  may 
to  TL 

is  again  adapted 

Assume  we  want  to  start  the  car’s  engine  (E).  This  might  be  prevented  by  a potato  in  the 
tail  pipe  (T)  which  clogs  (C)  it.  In  order  to  put  the  potato  into  the  tail  pipe,  one  must  lift  it 
is  twofold. 
which  again  may  be  prevented 

if  it  is  too  heavy  (H).  The  point  of  the  example 

7 The  example  could  as well  be  modeled  using  an  abnormality  literal  the  way  demonstrated  in  the  subsequent 

example. 

200 

W Bibed/  A@icial 

Intellipm 

IO.? (I  998)  183-208 

introduce  an  abnormality 

First,  we  normally  expect  to  be  able  to  start  the  engine  and  to  put  a  potato 
pipe  unless  there  is  reason  to  believe  otherwise.  Following  McCarthy’s 
additionally 
start  action  reads  -E  &  TA,~  =+ E&-A, 
clogging 
causal  rule  TC  =+ C.  In  the  case  of  more  than  one  car  we  of  course  better  switch 
first-order  version  of  these  rules. 

into  the  tail 
idea  we  therefore 
i.e.,  A,7 and  A,,.  So  the 
The 
=+ T  &-A,. 
of  the  potato  in  the  tail  pipe,  hence  we  also  have  the 
to  a 

and  the  put  action  -T&-A,, 

fluent  for  the  two  actions, 

is  a  causal  consequence 

The  second  aspect 

illustrated  by  the  example 
the  truth  of  the  abnormality 

is  that  we  obtain  unintuitive 

results 
in  nonmonotonic 

if 

we  simply  minimize 
reasoning  of  a  non-causal 
action  (like  putting  a  potato  into  the  tail  pipe)  may  change 
executability 
need  a  causal  rule  Cc &-A,  +  C &  A,Y for  changing 
circumstances.  Similarly,  we  have  the  causal  rule  H” &-A,,  +  H&A,,. 

as  done 
the  successful 

of  other  actions 

(like  starting 

the  engine). 

is  because 

[63].  This 

predicates 

nature 

the  state  of  our  beliefs 

execution  of  an 
in  the 

In  other  words,  we  additionally 

the  state  of  abnormality 

under  such 

Among  all  occurring 

fluents  F  a  subset  FU  is  singled  out  whose  members  are  initially 

assumed  not  to  hold,  by  default.  In  the  present  example  we  have  F0  =  {T,  C,  H,  A,Y, AP)  in 
intentions.  Of  these  as  many  as consistent  with  the  available 
accordance  with  the  example’s 
knowledge  are  “assumed  away”,  i.e.,  their  negation 
in  the  specification  of  the 
initial  state.  For  the  precise  definition  of  the  underlying  model  preference  see  [63]  where 
besides 
change  are 
discussed. 

also  other  issues  such  as  spontaneous 

the  theoretical  underpinnings 

is  included 

If  nothing  specifically 

is  known  about  abnormalities 

way  of  the  start  action  and  the  given  knowledge. 
appropriate  action 
consequence  by  the  corresponding 
this  is  prevented 
the  formal  model  presented  here  the  reasoning 
all  circumstances. 

the  car  will  work  by 
to  be  (or  by  the 
is  put)  in  the  tail  pipe  then  both  clogging  and  A,  becomes  a  causal 
in  the  case  of  too  heavy  potatoes 
true.  In  other  words,  with 
under 

to  happen  by  the  causal  rule  which  makes  A, 

leads  to  the  expected  consequences 

causal  rules.  Similarly, 

then  starting 

If  a  potato 

is  known 

7.3.  Specijcit) 

If  you  hold  (H)  a  penny 

(p)  and  drop  it,  it  will  end  up  lying  on  the  floor  (F); 

i.e.,  the 
drop  action  may  be  described  as  Hx  +  Fx.  If  you  drop  a fragile  (or  breakable  B)  glass  (g) 
rather  than  a penny,  it  will  be  broken  (or  destroyed  0)  afterwards, 
i.e.,  Hx&  Bx  =+ Fx  & Dx. 
How  should  a system  distinguish 
the  two  cases  and  correctly  choose  the  latter  action  in  the 
case  of  a  glass  in  hand,  i.e.,  an  initial  state  described  by  Hg  & Bg‘? 

[33,34]  give  an  easy  solution 

for  this  problem  which  seems 

occasions  of  a  similar  nature.  Zf in  a  given  state  more  than  one  rule  applies, 
of  the  deductive  system  prefers 
the  most  specljic  one,  referred 
has-priority,  or  SP,  strategy.  Thereby,  r1  is  called  more  speci’c 
ri  =  Ai  =+ Bi,  i  =  1,2,  and  some  r-formula  A3,  A 1 =  A2 &  A3  (modulo  associativity 
commutativity 

to  as  the  more-specijc- 
than  r2,  rI  >  r2,  if  for 
and 

of  & ). 

Since  obviously  Hx&  B.x >  Hx,  the  system  will  indeed  choose  the  right  action  in  our 

illustrating  example 

if  its  control  is  determined  by  SP. 

to  work  in  many  other 
the  control 

WI Bibel / Artijicial 

Intelligence  103  ( 1998)  183-208 

201 

7.4.  Timing  of  actions 

transition 

transition 

rule  AIX&A$ 

rules  AiZ  =+ BiE,  i  =  1,2.  A  compound 

Similarly  as  in  [ 161 we  introduce  a  compound 

In  order  to  achieve  goals  in  a  dynamic  world  the  required  actions  often  need  to  interact 
think  of  a table  with  glasses  on  it  which  needs  to  be  carried  in 

in  a timely  way.  For  instance, 
another  corner  of the  room  by  two  agents.  If the  persons  do  not  lift  the  table  simultaneously, 
the  glasses  will  fall  down  and  break.  How  could  an  appropriate 

timing  be  achieved  in  TL? 
=+ BIT&  B2X 
rule 
for  any  two  (atomic  or  compound) 
(as  any  rule)  represents  an  action  whose  parts  are  carried  out  at the  same  time.  To  model  our 
the  two  ends,  tl  and  t2, of  the  table  initially  are  standing  on  the  floor,  St1 & St2. 
example, 
rule  Sxl  &  Sxz  +  Hxt  & HXZ is the  most  specific  rule  in  this  scenario  which 
The  compound 
to  the  initial  state.  Hence  the  SP  strategy  from  the  previous  subsection  will 
is  applicable 
the  table  at  both  ends  at  the  same  time 
choose  it  thus  leading  to  the  desired  state  of  holding 
after  lifting  it  simultaneously.  This  illustrates  one  solution 
solution  may  be  obtained  by  introducing 

and  thus  force 
time  point  (e.g.,  at  the  same  time)  or  time  interval.  Since 
actions 
is  an  action  as  well,  we  may  model  the  negotiation  and  the 
communication 
agreement  over  a  certain 
the  table  ends  among  the  two  agents.  In 
this  case  the  lifting  rule  might  look  like  SX & Ttl  +  Hx  &  T(tt  +  1).  Each  agent  would  be 
provided  with  an  initially  synchronized 
and  ticking  clock,  T(x)  =+ T(x  +  I),  and  this  way 
each  could  make  sure  that  it  lifts  the  table  end  at  the  agreed  time.  These  techniques  have 
for  modelling  hardware  circuitry  and  its  behavior. 
particular 

to  the  question  raised  above. 
time  explicitly 

to  occur  at  a  certain 
of  information 

time  point  tt  for  lifting 

A  different 

relevance 

If  for  other  applications  we  need  to  fix  the  time  point  of  states  occurring  during  the 
the  action,  for  instance, 
execution  of  an  action,  ALf =+ BY,  we  may  break  up  and  partition 
situation,  Al?  j  Nf  and  fi  =+ BY  [30]. 
into  initial  situation,  action  event,  and  resultant 
Thereby  N  is  a  unique  n-ary  predicate  serving  as  the  name  of  the  event  occurring  during 
the  action,  and  n  is  the  number  of  variables 

in  the  rule. 

involved 

7.5.  Indeterminism 

Planning 

supports  a  more  rational  behavior.  Yet  it  is  a  feature  of  life  that  much  will 
into  account 

take  indeterminism 

remain  unpredictable.  Rational  planning  must  therefore 
explicitly. 

There  are  different  kinds  of  undeterminism.  No  one,  for  instance,  achieved  so  far  to 
in  a reliable  way  the  outcome  of  throwing  a dice  in  advance.  Hence  the  throwing 
determine 
outcome,  D  =+ 1 1 2  1 3  ) 4  I 5  1 6.  Similarly,  we  must  account 
action  has  an  undetermined 
for  our  ignorance  of  the  details  of  the  physics  determining 
the  outcome  of  many  actions  in 
reality.  We  may  think  of  nature  as  an  agent  whose  intentions  we  know  only  up  to  a certain 
degree  in  these  cases.  As  the  example  demonstrates,  TL  is  able  to  model  such  examples 
to 
some  extent.  In  a  more  elaborate  approach  one  would  have  to  integrate  probabilities 
and 
for  classical 
possibilities 
logic  (see  Section  4.4  in  (71 
into  TL  the  way  already  achieved 
attractive  approach  for  doing  this  has  been 
for  more  details  and  references).  A  particularly 
described 

in  154,551. 
Nature  is  more  predictable 

than  other  agents  such  as  human  beings  where  probabilities 

might  not  help  either.  Here  we  must  take  into  account  even  contradictory 

actions.  For 

202 

W  Bihel  /Art~fiicial  Intdligence 

IO3 (1998)  1X3-208 

the  two  simultaneous 

if  you  try  to  open  (0)  a  closed  (C)  door,  C  =+  -C,  which  some  other  agent 
tries  to  keep  closed  from  the  door’s  other  side,  C  =+  C,  the  compound 
actions,  C & C  =+  C & -C,  does  lead  to  nothing 
the  same 
in 
In  fact  we  may  even  teach  the  system  to  consider  either  outcome 

instance, 
simultaneously 
action  formalizing 
explicitly.  From  a  practical  point  of  view  we  may  exclude  connections  within 
situation  such  as  the  one  in  the  conclusion  of  this  rule,  and  go  on  with  the  reasoning 
spite  of  the  contradiction. 
of  the  conclusion 
In  modeling 
to  include  utilities. 
It  is  rather  straightforward 
Influence  diagrams 
to  model  such  a decision  network  in  terms  of  TL  so  that  again  this  logic  proves  appropriate 
for  modeling 

in  their  decision  behavior  we  have  further 

[53]  are  general  means  for  this  purpose. 

in  such  a case  (cf.  also  [ 161). 

action  in  this  context. 

intelligent 

agents 

7.6.  Miscellaneous 

It  is  clear 

that  planning 
in  a single  paper.  In  fact  we  believe  that  a number  of  important 

about  action  and  causility 

and  reasoning 

cannot  be  treated 
issues  have  yet 

exhaustively 
to  be  settled  before  an  autonomous 
for  that  matter)  will  behave 
conclude 
this  entire  section, 
would  merit  a  more  extensive 
certainly  not  a  comprehensive 

one. 

agent  built  on  the  basis  of  TL  (or  any  other  formalism 

in  a  dynamic 

intelligently 
therefore,  with  just  mentioning 

environment.  We 
issues  which 
treatment  were  there  further  space  available.  The  list  is 

a  few  further 

and  uncertain 

for  these  are  causal  and  protected 

Deductive  planning  will  have  to  take  into  account 

important 

in  some  way.  An  example 

planning 
such  features  are  already  supplied  by  the  deductive  engine 
link  is  just  a  connection 
strategy  designed 
if  a  causal  link  is  the  only  one  to  achieve  a  certain  subgoal 
automated  deduction 
not  reconsidered 

in  any  deductive  system,  link  protection 

is  known  under  the  term  ISOL  reduction 

to  identify  a  spanning  mating  as  efficiently 

and  protecting 

them 

features 

from  classical 
links  [60].  Often 
itself.  For  instance,  a  causal 
proof 
In  particular 
then  we  have  exactly  what  in 
[ 141. Since  reductions  are 

as  possible. 

is  taken  care  there  automatically. 

is  subsumed  by  any  sophisticated 

importance 

is  of  crucial 

the  deduction 

for  successful  applications. 

the  knowledge  base  containing 

In  our  view 
Hierarchical  planning 
and  of 
it  is  a  matter  of  structuring 
controlling 
level  (0)  we  would  have 
actions  of  the  sort  “go from  here  to  the  train  station”,  H  j”  T.  On  the  next  level  of  detail 
(1)  the  system  would  try  to  refine  the  O-level  rule  with  1 -level  rules  such  that  altogether 
the 
i.e.,  (H  +  ’  II  ) A  (Z,f +  ’  12) A  . . . A  (1:  +  ’  T)  A  related 
same  global  effect  is  achieved, 
solution  has  been  worked  out  for  FC  in  [20]. 

engine.  For  instance, 

action  descriptions 

at  the  highest 

In  dynamic  environments 

any  plan  is bound  to fail  to  some  extent.  It is  therefore  essential 
to  be  able  to  react  to  such  failure  with  efficient  replanning.  This  requires  among  other 
things  a technique 
Autonomous 
A  logical  solution 
adapted  to  TL. 

for  this  particular  problem  has  been  proposed 

to  carry  out  their  planning 

of  partial  plans  (42,661. 

in  [52]  which  could  be 

for  the  manipulation 

time  constraints. 

agents  need 

under  strict 

In  reality  we  have  to  cope  with  continuous  processes  while  it  seems  that  TL  could  cope 
processes  within  a  logic  has  become 
of  such  a  process 

with  discrete  actions  only.  Modelling 
an  active  area  of  research 

though.  One  issue  concerns 

the  partitioning 

continuous 

W Bibel /Artificial  Intelligence  103  (1998)  183-208 

203 

into  reasonable  discrete  parts  [35].  Another 
equations  and  their  computation  within  a  logic  such  as  TL  (cf.  [61]). 

issue  concerns 

the  integration  of  differential 

As  a final  point  we  mention 

that  TL  may  also  be  seen  as a logical  version  of  an  imperative 

programming 
the  transition 
cousins)  as  a  future  logic  programming 
already  been  made  in  [ 17,441. 

language.  For  instance,  destructive  assignment  x  :=  t  may  be  modelled  as 
t),  an  attractive  potential  of  TL  (or  some  of  its 
rule  3y  cont(x,  y)  =+ cont(x, 
language.  Some  steps  into  such  a  direction  have 

8.  The  case  for  logic 

Intellectics 

(as  within  computer  science) 

as  well  as  computer  science  are  general  disciplines  whose  generic  methods 
in  many  different  areas.  For  instance,  expert  system  technology 
turn  out  to  be  applicable 
has  successfully  been  used  in  a  great  variety  of  applications.  The  logical  approach  within 
is  even  one  level  more  general  than  the  remainder 
intellectics 
of  this  field  as  it  attempts 
required  by  those  who  build 
traditional  AI  systems.  In  theory,  generality  wins  in  the  long  run,  in  practice  specialization 
always  wins  in  the  short  run.  These  facts  explain  why  engineers  are  extremely 
skeptical 
with  general  approaches  such  as  the  logical  one.  In  fact,  there  is  still  some  resistance  even 
against 
science.  The  facts  also  explain 
why  the  following  pattern  in  the  history  of  intellectics  may  be  observed. 

the  less  general  areas  in  intellectics  or  computer 

the  reasoning 

to  mechanize 

knowledge 

specialized 

representation 

Some  subject-e.g., 

solutions  are  emerging 

in  the  early  seventies-gains 

solutions.  As  soon  as  preliminary 

in  the  mid-seventies.  Overwhelming 

in  the  subject  due  to  the  logical  generality-cf. 

in  impor- 
tance  for  applications.  The  engineers  are  the  first  to  notice  the  need  for  activity  and  start 
developing 
the  logi- 
cists  get  notice  and  claim  their  competence 
the  KR  debate 
claim  is  provided  by  logicists  over  the  subsequent  years  which  finally 
tance  (as  it  happened 
planning).  Yet  the  logical  approach 
is  believed 
one  in  automated  deduction  disproves 
of  KR).  Nevertheless 
(resistence  against  transition  costs  and  such). 

the 
supporting 
leads  to  its  accep- 
in  the  case  of 
it 
some- 
(see,  e.g.,  [56]  in  the  case 
for  obvious  reasons 

is  still  not  entering 
in  comparison  with  specialized 

for  KR  in  the  eighties  and  is  currently  happening 

tools  persist  in  applications 

this  belief  experimentally 

theoretical  evidence 

systems.  Eventually, 

the  well  established 

to  lack  efficiency 

practice  because 

the  engineering 

of  logical 

Logicists  deplore 

into  the  advancement 

tools.  For  each  application 

the  time  “lost”  by  the  multiple  development  of  the  same  techniques 
in  many  disguises  and  dream  of  a  state  of  the  art  where  all  these  myriads  of  man-years 
are  rather  invested 
they  are 
bound  always  to  come  too  late  in  competition  with  the  specialists.  This  is  not  only  because 
than  logicists,  but  also  because  the  logicists  face  far  more 
there  are  always  more  specialists 
to  be  solved  than  the  specialists  due  to  the  generality  of  their  approach. 
complex  problems 
The  pattern  just  described  will  not  be  changed  by  the  complaints  of  the  logicists.  But 
of 
push 
systems.  Only  when  such  a push  sets  in  will  generality 

change 
AI  techniques 
towards  more  generally 
count 
(group  of) 
specialist(s)  will  ever  be  able  to  build  systems  featuring  more  than  one  or  two  of  these 

it  will  at  some  point  in  the  future  for  the  following 

in  scope  so  far.  There  is  still  no  technological 

in  a  crucial  way.  Intelligence 

reasons.  The  applications 

has  so  many  aspects 

are  all  rather  limited 

that  no  individual 

intelligent 

204 

W  Bibel  /Artificial 

Intelligence  103 (19%)  183-208 

intelligent 

system  will  require 

aspects.  Rather  a  truly 
available  only 
nonmonotonic 
further  ones  of  the  hundreds  of others-which 
of  systems  building. 

through  a  great  many  specialists-from 
reasoning, 

the  incorporation 
of  knowledge 
small  niches  such  as  planning, 
theorem  proving,  vision,  speach,  NL,  . . . , you  name 
cannot  be  realized  by  the  present  technology 

scheduling, 

To understand  why,  note  that  the  current  technology 

is intrinsically 

functional 

(in  a broad 

is  limited 

to  the  extent 

sense  of  the  word).  Any  complex  system  consists  of  numerous  modules  which  functionally 
that  there  must  be  at  least  one  single  person  who 
depend  on  each  other.  That  means 
oversees  the  whole,  at  least  at  some  level  of  abstraction.  This  in  turn  means  that  the  present 
that  single  persons  can  cope  with  the  complexity  of 
technology 
in  which  they  are  coded.  A  breakthrough 
systems  and  the  huge  variety  of  languages 
is 
It  will  happen  by  way  of  the  logical  approach 
this  barrier 
needed  before 
a  logical 
since  only 
to  it. 
specification 
form  into  a 
This  way  many  people  may  contribute 
in  a  rather 
common  system  which  would  then  be  synthesized 
formal  (i.e.,  again  logical)  manner 
nature  of  logic  since  there  we  have  drawn  from  knowledge 
of  intellectics. 
Synthesis 

is  overcome. 
the  property  of  conjunctivi@ 

in  the  most  natural 
from  the  joint  specification 

if  additional  knowledge 
their  knowledge 

functionality): 
is  added  conjunctively 

is  an  important  part  of  the  vision  outlined  here. 

in  a  number  of  different  areas 

[13].  Section  7  demonstrates 

a  bit  of  the  conjunctive 

remains  a  specification 

into  the  picture 

logic  features 

just  brought 

(versus 

is  not  determined  by  the  general 

Generality  does  have  a  price  in  terms  of  lack  of  efficiency.  With  synthesis 
efficiency 
through  a formal  and  reuseable  synthesis 
composed  but  by  the  functional 
claim  often  made 
if  not  discovered  by  machine.  The  unsubstantiated 
process  controlled 
that  deductive  methods  for  planning  and  other  applications  do  not  scale  is  probably  always 
made  in  ignorance  of  the  important 
can  and  are 
meant  to  be  introduced  by  synthesis 

fact  that  functionality 
in  this  way. 

logical  specification  with  which  the  system  is 

and  specialization 

systems  obtained 

incorporated 

is  promising 

found  a  proof  for  the  conjecture 

Much  progress  will  be  needed  before  all  this  may  happen  on  a  grander  scale.  Yet  the 
indeed,  as  can  be  seen  from 
results  achieved  lately.  Among  these  the  success  of  the  system  EQP/Otter  stands 
is 
problem  which  was  open  for  more  than  sixty 
[3] 
by  its  first 
for  more  such 
results  of  a 

progress  made  so  far  in  the  field  of  deduction 
numerous 
out  which  automatically 
Boolean,  a  widely  discussed  mathematical 
years  [47].  From  a technological  point  of  view  systems  such  as  SETHEO  [49]  or  WT 
have  even  an  advantage  over  Otter  (in  the  case  of  SETHEO  demonstrated 
place  in  the  ATP  competition  during  CADE-96)  and  have  thus  the  potential 
striking  results.  Before  concluding 
different  sort  from  the  area  of  planning. 

this  paper  we  give  pointers 

that  any  Robbins 

to  impressive 

algebra 

Section  8.3  in  [24]  describes  a simple  and  straightforward 

implementation 

of  crTL  on  top 

linear 

backward 

there  with  a  widely  used  specialized  planning 

chainer  (LBC).  The  performance  of  LBC/SETHEO 

of  SETHEO,  called 
is  then  compared 
[57]. 
In  these  experiments  with  randomly  generated  blocks-world  problems  with  five  to  seven 
outperforms  UCPOP  by  several  orders  of  magnitude.  Because  TL  is 
blocks  LBCXETHEO 
so close  to  classical  logic  it  can  take  advantage  from  the  cumulative 
in  advanced 
logic  such  as  SETHEO,  which  can  serve  as the  logic  engine 
deductive  systems  for  classical 

system,  UCPOP 

investment 

W. Bibel  /Artz$cial 

Inrelligencr  103  (1998)  183-208 

20s 

in  an  expert  system  or  as  a  theorem  prover  or  as  a planner  or  what  have  you.  Note  that  no 
specialization 

to  planning  whatsoever 

in  this  approach. 

is  encoded 

[5],  as  a  propositional 

satisfiable  problem  which 

Similarly,  but  even  more  impressively, 

systems,  Graphplan 
one  of  the  best  complete  satisfiability 
authors’  Walksat,  a  stochastic 
The  experiments 
outperform 
magnitude.  Note  that  this  performance 
were  used  for  a  variety  of  other  purposes. 
prover  such  as  SETHEO  would  fare  for  the  specialized  coding  used  in  these  experiments. 

[38]  coded  one  of  the  best  specialized  planning 
is  then  solved  by 
[ 181, or,  alternatively,  by  the 
for  solving  general  SAT  problems. 
system  again  by  several  orders  of 
again  is  achieved  by  general  logical  systems  which 
to  see  how  a  first-order 

local  search  algorithm 
any  known  planning 

algorithms,  TABLEAU 

It  would  be  interesting 

be  afforded 

These  successes 

into  the  advancement 

show  the  way  to  future  progress 

invest  as  much  as  could 
reasonably 
like 
TABLEAU,  SETHEO,  or  Walksat;  code  your  special  problem  as  efficiently  as  possible 
like  in  Graphplan; 
let’s  forget  about 
run  the  deductive  system  of  your  choice.  In  particular 
specialized  programming!  Rather 
above  all,  let’s  attack 
deductive  way! 

the  challenge  of  creating  artificial 

let  us  program  deductively; 

let  us  plan  deductively; 

in  a  logical  and 

and  systems 

of  deductive 

intelligence 

techniques 

in  AI: 

Acknowledgments 

and  collaborators 

An  earlier  version  of  this  paper  appeared 

in  the  Proceedings  of  the  15th  International 
Intelligence,  published  by  IJCAII.  The  author  is  indebted 
Joint  Conference  on  Artificial 
these  as  well 
to  his  students 
to  thank  especially  Marc  Friedman,  Bertram  Fronhofer,  Pat  Hayes, 
as  others, 
Steffen  Holldobler,  Vladimir  Lifschitz,  David  Poole,  Eric  Sandewall,  Enno  Sandner, 
Stephan  Schmitt 
and  suggestions 
concerning  contents  and  text  of  this  paper.  Among  those  just  mentioned  Bertram  Fronhiifer 
has  helped  most  with  substantial  contributions. 

and  Michael  Thielscher 

for  their  continuing 

support.  Among 

for  numerous 

discussions 

I  want 

References 

111 A.R.  Anderson,  N.D.  Belnap  Jr,  Entailment:  The  Logic  of  Relevance  and  Necessity,  Vol.  1,  Princeton 

University  Press,  Princeton,  NJ,  1975. 

121 P. Agre,  Computational 
131 W. Bibel,  S. Briining,  U. Egly,  T. Rath,  Towards  an  adequate 

research  on  interaction  and  agency,  Artificial  Intelligence  72  (l-2) 

(1995)  l-52. 

in:  1. Plander  (Ed.),  Proc.  6th  International  Conference  on  Artificial  Intelligence  and  Information-Control 
Robots,  World  Scientific  Publishing  Company,  Singapore,  1994,  pp.  137-148. 

theorem  prover  based  on  the  connection  method, 
of 

141 W.  Bibel,  L.F.  de1  Cerro,  B.  Fronhofer,  A.  Herzig,  Plan  generation  by  linear  proofs:  on  semantics, 

in: 

D.  Metzing  (Ed.),  Proc.  GWAI-89,  Springer,  Berlin,  1989,  pp.  49-62. 

through  planning  graph  analysis, 

Joint 
(IJCAI-95)  Montreal,  Quebec,  Morgan  Kaufmann,  San  Mateo,  CA, 

International 

in:  Proc. 

151 A.L.  Blum,  M.L.  Furst,  Fast  planning 

Conference  on  Artificial 
1995,  pp.  16361642. 

Intelligence 

161 S.  Brtining,  G.  BroBe,  S.  Holldobler, 

generation  by  equational 
Konfigurieren,  GI,  Arbeitspapiere 

logic  programming, 

der  GMD  723,  St.  Augustin,  Germany,  1992,  pp.  18-26. 

J.  Schneeberger,  U.  Sigmund,  M.  Thielscher,  Disjunction 

in  plan 
in:  A.  Horz  (Ed.),  Beitrage  zum  7  Workshop  Planen  und 

171 W.  Bibel,  S.  Hiilldobler,  T. Schaub,  Wissensreprlsentation 

und  Inferenz,  Vieweg,  Brauschweig, 

1993. 

206 

W  Bibel  /Artijicial 

lntelli~ence  103  (1998)  183-208 

181 S.  Brilning,  S.  Holldobler, 

J.  Schneebergec  U.  Sigmund,  M.  Thielscher,  Disjunction 
in:  D.  Miller  (Ed.),  Proc.  International  Logic  Programming  Symposium 

in  resource-oriented 

(ILPS),  Poster- 

deductive  planning, 
session,  MIT  Press,  Cambridge,  MA,  1993,  p.  670. 

[9]  W.  Bibel,  A  deductive  solution  for  plan  generation,  New  Generation  Computing  4  (1986)  115-132. 

[lo]  W.  Bibel,  A  deductive 

solution 
Knowledge  Base  Management,  Crete,  1986,  pp.  413436. 
[l 11 W.  Bibel,  Automated  Theorem  Proving,  Vieweg,  Braunschweig, 
[12]  W.  Bibel,  Intellectics, 

for  plan  generation, 

in:  SC.  Shapiro  (Ed.),  Encyclopedia  of  Artificial  Intelligence, 

in:  J.W.  Schmidt,  C.  Thanos 

2nd.  ed.,  1987. 

(Eds.),  Foundations 

of 

John  Wiley,  New  York, 

1992. 

[ 131 W.  Bibel,  Towards  predicative  programming, 

in:  M.R.  Lowry,  R.  McCartney 

(Ed%),  Automating  Software 

Design,  AAAI  Press,  Menlo  Park,  CA,  1992,  pp.  4055423. 

[ 141 W. Bibel,  Deduction:  Automated  Logic,  Academic  Press,  London,  1993. 
[ 151  S.  Brtlning,  Globally 
[ 161  S.-E.  Bornscheuer,  M.  Thielscher,  Explicit  and 

linear  connection  method,  New  Generation  Computing 

indeterminism: 

implicit 

Journal  15 (1997)  369402. 
about  uncertain 

reasoning 

and 

contradictory 

specifications  of  dynamic  systems,  Journal  of  Logic  Programming 

3 1 (l-3) 

(1997)  119-156. 

[ 171  I. Cervesato,  F. Pfenning,  A  linear  logical  framework, 

in:  E.  Clarke  (Ed.),  Proc.  1 lth  Annual  Symp.  on  Logic 

in  Computer  Science,  IEEE  Computer  Science  Press,  Silverspring.  MD,  1996,  pp.  26627.5. 

[18]  J.M.  Crawford,  L.D.  Auton,  Experimental 

1 I th  National  Conference  on  Artificial  Intelligence 
CA,  1993,  pp.  21-27. 

results  on  the  crossover  point  in  satisfiability  problems, 

in:  Proc. 
(AAAI-93)  Washington,  DC,  AAAI  Press,  Menlo  Park, 

[19]  S.J.S.  Cranefield,  A  logical 

framework 

for  practical  planning, 

in:  Proc.  10th  European  Conference 

on 

Artificial  Intelligence 

(ECAI-92),  Vienna,  Austria,  Wiley,  London,  UK,  1992,  pp.  6333637. 

1201 K.  Eder,  S.  Holldobler,  M.  Thielscher,  An  abstract  machine 

in:  R.  Dyckhoff,  H.  Herre,  P.  Schroeder-Heister 

and  causality, 
Extensions  of  Logic  Programming 
Berlin,  1996,  pp.  137-151. 

(ELP),  Lecture  Notes 

in  Artificial 

about 

for  reasoning 
actions, 
(Eds.),  Proc.  International  Workshop  on 
Intelligence,  Vol.  1050,  Springer, 

situations, 

(211  R.E.  Fikes,  N.J.  Nilsson,  STRIPS:  a new  approach 

to  the  application  of  theorem  proving 

to  problem  solving, 

Artificial  Intelligence  2  ( I97  1)  189-208. 

[22]  G.  Frege,  Begriffsschrift,  Louis  Nebert,  Halle,  1879. 
[23]  B.  Fronhofer,  Linearity  and  plan  generation,  New  Generation  Computing  5  (1987)  2 13-225. 
[24]  B.  Fronhofer,  The  Action-as-Implication 
[25]  J.  Gallier,  Constructive 

Paradigm,  CS  Press,  Munchen,  1996. 

logics.  Part  II:  Linear 

logic  and  proof  nets,  Research  Report  PR2-RR-9,  Digital 

Equipment  Corporation,  Paris,  May  199 1. 

[26]  G.  GroBe,  S.  Holldobler, 
actions  and  change, 
Programming,  MIT  Press,  Cambridge,  MA,  1992,  pp.  177-l  9 1. 

in:  K.  Apt  (Ed.),  Proc. 

International 

J.  Schneeberger,  U.  Sigmund,  M.  Thielscher,  Equational 

logic  programming, 

Joint  Conference 

and  Symposium 

on  Logic 

[27]  G.  GroBe,  S.  Holldobler, 
(2)  (1996)  2333262. 

J.  Schneeberger,  Linear  deductive  planning. 

Journal  of  Logic  and  Computation  6 

[28]  J.-Y.  Girard,  Linear  logic,  Theoretical  Computer  Science  50  (1)  (I 987)  l-1  02. 
as  a  basis  for  question-answering 
(291  C.  Green,  Theorem  proving  by  resolution 

D.  Michie  (Eds.),  Machine  Intelligence  4,  Edinburgh  University  Press,  1969. 

systems, 

in:  B.  Meltzer, 

[30]  G.  GroBe,  State  event  logic,  Ph.D.  Thesis,  Technical  University  Darmstadt,  Darmstadt,  Germany,  1996. 
[31]  M.L.  Ginsberg,  D.E.  Smith,  Reasoning  about  action  I:  a  possible  worlds  approach,  Artificial  Intelligence  35 

(2)  (1988)  1655195. 

[32]  S. Holldobler,  J.  Schneeberger,  A  new  deductive  approach 

to planning,  New  Generation  Computing  8 (1990) 

2255244. 

[33]  S.  Holldobler,  M.  Thielscher,  Actions  and  specificity, 

in:  D.  Miller 

(Ed.),  Proc. 

lntemational 

Logic 

Programming  Symposium, 

1993,  pp.  164-180. 
[34]  S.  Holldobler,  M.  Thielscher,  Computing  change  and  specificity  with  equational 

logic  programs,  Annals  of 

Mathematics 

and  Artificial  Intelligence  14  (1995)  99-133. 

[35]  C.  Herrmann,  M.  Thielscher,  Reasoning  about  continuous  processes, 

9&-Proceedings 
Alto,  CA,  1996,  pp.  639-644. 

of  the  National  Conference  on  Artificial 

in:  W. Clancey,  D.  Weld  (Eds.),  AAAI- 
Intelligence,  Portland,  OR,  AAAI  Press,  Palo 

W  Bibel  /Arti&ial 

Intelligence  103  (1998)  183-208 

201 

[36]  H.  Kautz,  D.  McAllester,  B.  Selman,  Encoding  plans 
(Eds.),  Proc.  5th  International  Conference 
(KR96),  Cambridge,  MA,  Morgan  Kaufmann,  San  Mateo,  CA,  1996,  pp.  374-384. 

in  propositional 
on  Principles  of  Knowledge  Representation 

in:  L.C.  Aiello,  J.  Doyle, 
and 

S.  Shapiro 
Reasoning 

logic, 

[37]  R.  Kowalski,  Logic  for  Problem  Solving,  North-Holland,  New  York,  1979. 
[38]  H.  Kautz,  B.  Selman,  Pushing 

the  envelope:  planning,  propositional 

logic,  and  stochastic 

search, 

in:  Proc. 

National  Conference  on  Artificial 
CA,  1996,  pp.  1194-1201. 

Intelligence 

(AAAI-96) 

Portland,  OR,  Morgan  Kaufmann,  San  Mateo, 

[39]  N.  Kushmerick,  Cognitivism  and  situated  action:  two  views  on  intelligent  agency,  Computers  and  Artificial 

Intelligence  15 (5)  (1996)  393417. 

[40]  J.  Lambek,  The  mathematics  of  sentence  structure,  Amer.  Math.  Monthly  65  1958. 
[41]  V. Lifschitz,  Frames 
[42]  M.  Lindner, 

in  the  space  of  situations,  Artificial  Intelligence  46  (1990)  365-376. 

Interactive  planning 

for  the  assistance  of  human  agents,  Ph.D.  Thesis,  Techn.  University 

Darmstadt,  Germany,  1997. 

[43]  J.E.  Laird,  A.  Newell,  P.S.  Rosenbloom, 

SOAR:  an  architecture 

for  general 

intelligence,  Artificial 

Intelligence  33  (I)  (1987) 

l-64. 

1441 F.  Lin,  R.  Reiter.  Rules  as  actions:  a  situation  calculus 
3 1 ( l-3)  ( 1997)  299-330. 

Programming 

semantics 

for  logic  programs, 

Journal  of  Logic 

[45]  R.  Letz,  J.  Schumann,  S.  Bayerl,  W.  Bibel,  SETHEO-a 

high-performance 

theorem  prover  for  first-order 

logic,  Journal  of  Automated  Reasoning  8  (2)  ( 1992)  183-2  12. 
intelligence, 

[46]  J.  McCarthy,  Epistemological 

problems  of  artificial 

in:  Proc.  International 

Joint  Conference  on 

Artificial  Intelligence,  Cambridge.  MA,  Morgan  Kaufmann,  San  Mateo,  CA.  1977,  pp.  1038-1044. 

1471 W.  McCune,  Robbins  algebras  are  boolean,  Association 

for  Automated  Reasoning  Newsletter  35  (1996) 

l-3. 

[48]  J.  McCarthy,  P.  Hayes,  Some  philosophical 
B.  Meltzer,  D.  Michie  (Eds.).  Machine 
pp.  4633502. 

problems 

in: 
Intelligence,  Vol.  4,  Edinburgh  University  Press.  Edinburgh,  1969, 

the  standpoint  of  artificial 

intelligence, 

from 

[49]  M.  Moser,  0.  lbens,  R.  Letz,  J.  Steinbach,  C.  Goller,  J.  Schumann,  K.  Mayr.  SETHEO  and  E-SETHEO, 

Journal  of  Automated  Reasoning 

I8  (2)  (1997)  237-246. 

1501 M.  Masseron,  C.  Tollu,  J.  Vauzielles,  Generating 

of  Software 
and  Theoretical  Computer  Science,  Lecture  Notes  in  Computer  Science,  Vol.  472,  Springer, 

in:  Foundations 

in  linear 

logic, 

plans 

Technology 
Berlin,  1990,  pp.  63-75. 

[51]  N.J.  Nilsson,  Logic  and  artificial 
[52]  M.  Nirkhe,  S.  Kraus,  D.  Perlis,  How  to  plan  to  meet  a deadline  between  now  and  then,  Journal  of  Logic  and 

intelligence,  Artificial  Intelligence  47  (1-3)  (1991)  31-56. 

Computation, 

1994. 

[53]  D.L.  Poole,  A.K.  Mackworth,  R.G.  Goebel,  Computational 

Intelligence-A 

Logical  Approach.  Oxford 

University  Press,  New  York,  1998. 

[54]  D.L.  Poole,  Probabilistic  Horn  abduction  and  Bayesian  networks.  Artificial 

Intelligence  64  (I  ) (1993)  Xl- 

129. 

1551 D.  Poole,  Probabilistic  partial  evaluation:  Exploiting 

rule  structure 

in  probabilistic 

inference, 

(Ed.),  15th  International 
Kaufmann,  Los  Altos,  1997. 

Joint  Conference  on  Artificial 

Intelligence 

(IJCAI-97)  Nagoya, 

in:  M.  Pollack 
Japan,  Morgan 

[56]  M.  Paramasivam,  D.A.  Plaisted,  Automated  deduction 

techniques 

for  classification 

in  description 

logic 

systems,  Journal  of  Automated  Reasoning, 

to  appear, 

[57]  J.S.  Penberthy,  D.  Weld,  UCPOP:  a  sound,  complete,  partial  order  planner  for  ADL,  in:  Proc.  International 
(KR-92),  Cambridge,  MA,  Morgan  Kaufmann, 
and  Reasoning 

Conference  of  Knowledge  Representation 
San  Mateo,  CA,  1992,  pp.  103-l  14 

1581 R.  Reiter,  The  frame  problem 

result 
Computation:  Papers  in  Honor  of  John  McCarthy,  Academic  Press,  New  York,  1991,  pp.  359-380. 

and  Mathematical 

in:  V.  Lifschitz 

(Ed.),  Artificial 

regression, 

in  the  situation  calculus:  a  simple  solution  (sometimes)  and  a  completeness 
Intelligence 

for  goal 

Theory  of 

[591  G.  Restall,  On  logics  without  contraction,  Ph.D.  Thesis,  University  of  Queensland,  Australia,  1994. 
[601  S.J.  Russell,  P.  Norvig,  Artificial 

Intelligence:  A  Modem  Approach,  Prentice-Hall,  Englewood  Cliffs,  NJ. 

1994. 

1611 E.  Sandewall,  Combining 

logic  and  differential 

equations 

for  describing 

real-world 

systems, 

in:  R. 

Brachman,  H.J.  Levesque,  R.  Reiter  (Eds.).  Proc.  International  Conference  on  Principles  of  Knowledge 

208 

W  Bihel  /Art$cial 

Intelligence 

103  (1998)  183-208 

Representation 
412-420. 

and  Reasoning 

(KR-89).  Toronto,  Ontario,  Morgan  Kaufmann,  San  Mateo,  CA,  1989,  pp. 

[62]  W.  Stephan,  S.  Biundo,  A  new 

logical 

framework 

International 
San  Mateo,  CA,  1993,  pp.  32-38. 

Joint  Conference  on  Artificial  Intelligence 

for  deductive  planning, 
(IJCAI-93)  Chambery,  France,  Morgan  Kaufmann, 

in:  R.  Bajcsy 

(Ed.),  13th 

[63]  M.  Thielscher,  Causality  and  the  qualification  problem, 

in:  L.C.  Aiello,  J. Doyle,  S.  Shapiro  (Eds.),  KR-96 

Proc.  International  Conference  of  Knowledge  Representation 
San  Mateo,  CA,  1996,  pp.  5 l-62. 

and  Reasoning,  KR  Inc.,  Morgan  Kaufmann, 

[64]  M.  Thielscher,  Challenges 

theories: 
thesis,  Techn.  Universitat  Darmstadt,  Darmstadt,  Germany,  1997. 

ramification 

for  action 

solving 

the 

Habilitation 

and  qualification 

problem, 

1651 M.  Thielscher,  Ramification  and  causality,  Artificial  Intelligence  89  (l-2) 
[66]  D.E.  Wilkins,  K.L.  Myers,  J.D.  Lowrance,  L.P.  Wesley,  Planning  and  reacting 

(1997)  317-364. 

in  uncertain  and  dynamic 

environments, 

Journal  of  Experimental 

and  Theoretical  Artificial 

Intelligence  6  (1994)  197-227. 

