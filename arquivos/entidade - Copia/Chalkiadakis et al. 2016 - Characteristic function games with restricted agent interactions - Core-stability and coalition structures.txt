Artiﬁcial Intelligence 232 (2016) 76–113

Contents lists available at ScienceDirect

Artiﬁcial  Intelligence

www.elsevier.com/locate/artint

Characteristic  function  games  with  restricted  agent 
interactions:  Core-stability  and  coalition  structures
Georgios Chalkiadakis a,  Gianluigi Greco b,∗
a Technical University of Crete, Chania, Greece
b Department of Mathematics and Computer Science, University of Calabria, Italy
c Athens University of Economics and Business, Athens, Greece

,  Evangelos Markakis c

a  r  t  i  c  l  e 

i  n  f  o

a  b  s  t  r  a  c  t

Article history:
Received 15 January 2014
Received in revised form 14 December 2015
Accepted 17 December 2015
Available online 23 December 2015

Keywords:
Coalitional games
Solution concepts
Computational complexity
Treewidth
Marginal contribution networks

In  many  real-world  settings,  the  structure  of  the  environment  constrains  the  formation 
of  coalitions  among  agents.  These  settings  can  be  represented  by  characteristic  function 
games, also known as coalitional games, equipped with interaction graphs. An interaction 
graph determines the set of all feasible coalitions, in that a coalition C can form only if 
the subgraph induced over the nodes/agents in C is connected. Our work analyzes stability 
issues  arising  in  such  environments,  by  focusing  on  the  core as  a  solution  concept,  and 
by considering the coalition structure viewpoint, that is, without assuming that the grand-
coalition necessarily forms.
The complexity of the coalition structure core is studied over a variety of interaction graph 
structures  of  interest,  including  complete  graphs,  lines,  cycles,  trees,  and  nearly-acyclic 
graphs  (formally,  having  bounded  treewidth).  The  related  stability  concepts  of  the  least 
core and the cost of stability are also studied. Results are derived for the setting of compact
coalitional games, i.e., for games that are implicitly described via a compact encoding, and 
where simple calculations on this encoding are to be performed in order to compute the 
payoff associated with any coalition. Moreover, speciﬁc results are provided for compact 
games deﬁned via marginal contribution networks, an expressive encoding mechanism that 
received considerable attention in the last few years.

© 2015 Elsevier B.V. All rights reserved.

1.  Introduction

1.1.  Coalitional games and interaction graphs

Cooperative game theory aims to provide models of cooperation among interacting agents. One of the prevalent classes 
of  games  used  within  this  framework  is  the  class  of  characteristic function games.  A  characteristic  function  game  (CFG)  is 
deﬁned over a set N = {1, . . . , n} of agents and is determined by a payoff function v : 2N (cid:3)→ R, such that, for each coalition C , 
i.e., for any non-empty set C ⊆ N of agents, the value  v(C) expresses the payoff that the members of C can jointly achieve 
by  cooperating  among  themselves [1,2].  The  outcome  is  an  allocation,  i.e.,  a  payoff  vector  x = (cid:6)x1, . . . , xn(cid:7) ∈ Rn assigning 
some payoff to each agent  i ∈ N. Characteristic function games are also known as coalitional games with transferable utility, 
as  it  is  assumed  that  the  agents  forming  a  coalition  C can  distribute  the  payoff  v(C) among  themselves  in  any  way.  The 

* Corresponding author.

E-mail addresses: gehalk@intelligence.tuc.gr (G. Chalkiadakis), ggreco@mat.unical.it (G. Greco), markakis@gmail.com (E. Markakis).

http://dx.doi.org/10.1016/j.artint.2015.12.005
0004-3702/© 2015 Elsevier B.V. All rights reserved.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

77

Fig. 1. Coalitional games in Example 1.1 and Example 1.3.

question of interest for such games, is to identify desirable (e.g., fair and stable) outcomes in terms of worth distributions, 
which are called solution concepts.

Characteristic function games provide a rich framework for understanding and reasoning about cooperative actions and 
have a wide spectrum of applications in different areas of research. Indeed, while they have been traditionally grounded in 
the game theory and economic literature, they have gained popularity in the context of multi-agent systems and artiﬁcial 
intelligence research as a means of studying interactions among autonomous agents (see, e.g., [3–9]). Moreover, they have 
recently attracted attention in engineering too, because of their use in the design of intelligent protocols and middleware 
algorithms for wireless communication networks [10–12]. As an example, we next illustrate a wireless cooperative ﬁle sharing 
system,  where  mobile  subscribers  cluster  together  by  downloading  (portions  of)  ﬁles  of  interest  over  long-range  cellular 
links, and by exchanging them over a wireless ad-hoc network (see, e.g., [13]).

Example 1.1. Consider the setting with three mobile users (hence,  N = {1, 2, 3}) that is illustrated in the left part of Fig. 1, 
and a function v such that, for each coalition C ⊆ N, v(C) is meant to express the payoff that users in C can jointly achieve 
when  clustering  together  and  cooperating  to  download  the  given  ﬁle  of  interest.  In  particular,  assume  that  v({1}) = 10, 
v({2}) = 5,  v({3}) = 4,  v({1, 2}) = 17,  v({2, 3}) = 10,  and  v({1, 2, 3}) = 22.  Intuitively,  the  payoff  of  each  coalition  C is 
meant to express the sum of the utilities that the agents in  C get when the ﬁle is downloaded minus the cost that they 
overall incur for the download, with this cost being proportional to the time required and to certain technological features, 
such as bandwidth and energy consumption.

For instance, when 1 and 2 cluster together, each of them can download only half of the ﬁle and then share the portion 
via the wireless connection. While doing so, each of them increases the throughput due to the better performance of the 
wireless network when compared to the cellular links, and reduces the overall downloading costs. This is reﬂected in the 
payoff function v, which is such that v({1, 2}) ≥ v({1}) + v({2}). Similarly, 2 and 3 can cluster together leading to the payoff 
v({2, 3}) ≥ v({2}) + v({3}).

In contrast, note that users  1 and  3 are outside of each other’s transmission range, hence it is impossible for them to 
cluster together (and, in fact, the payoff function is not speciﬁed for this coalition). However, user 2 might still act as a bridge 
between them, so that when all users join together, the resulting payoff is  v({1, 2, 3}) = 22. Indeed, it is advantageous for 
the users to cluster all together, because  v({1, 2, 3}) ≥ v({1, 2}) + v({3}),  v({1, 2, 3}) ≥ v({1}) + v({2, 3}), and  v({1, 2, 3}) ≥
v({1}) + v({2}) + v({3}).  While  doing  so,  each  user  gets  the  payoff  that  can  be  achieved  by  downloading  the  whole  ﬁle 
alone, and a surplus of  v({1, 2, 3}) − (v({1}) + v({2}) + v({3})) = 22 − (10 + 5 + 4) = 3 still remains to be divided among 
(cid:2)
them. 

As  the  above  example  demonstrates,  characteristic  function  games  might  be  deﬁned  within  an  environment  imposing 
restrictions  on  the  formation  of  coalitions.  Indeed,  users  1 and  3 are  outside  each  other’s  transmission  range,  and  the 
coalition {1, 3} cannot form.

In  general,  for  reasons  that  might  range  from  physical  limitations  and  constraints  to  legal  banishments,  certain  agents 
might not be allowed to form coalitions with certain others. Sensor networks, communication networks, or transportation 
networks, within which units are connected through bilateral links, provide natural settings for such classes of games. In 
many multiagent coordination settings, agents might be restricted to communicate or interact with only a subset of other 
agents in the environment, due to limited resources or existing physical barriers. Another example is provided by hierarchies 
of employees within an enterprise, where employees at the same level work together under the supervision of a boss, i.e., of 
an employee at the immediately higher level in the hierarchy. In all these settings, the environment can be seen to possess 
some structure that forbids the formation of certain coalitions. This can be formalized as an interaction graph G = (N, E), an 
undirected graph, where agents are transparently viewed as nodes so that a coalition C is feasible, i.e., allowed to form, only 
if the subgraph of  G induced over the nodes of C is connected [14]. For instance, it is immediate to check that the graph 
shown in the left part of Fig. 1, is the interaction graph associated with the game of Example 1.1, where all coalitions are 
allowed to form but {1, 3}.

Note that when an interaction graph  G is the complete graph over  N, then  G induces no structural restrictions and we 
are back to the basic setting where a game is completely speciﬁed by its payoff function (and all coalitions are allowed to 
form). Hence, the setting with interaction graphs generalizes the basic one.

78

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

1.2.  Stability and coalition structures

The  main  solution  concept  adopted  in  the  literature  in  order  to  deal  with  the  problem  of  stability  in  characteristic 

function games (i.e., what are the incentives for the agents to stay in formed coalitions), is, arguably, the core [15,16].

In  settings  without  any  restriction  on  the  possible  interactions  among  the  agents,  the  core  is  deﬁned  as  the  set  of  all 

allocations that are stable because there is no coalition having an incentive to deviate, that is, as the set

{x ∈ Rn | x(N) = v(N) and x(C) ≥ v(C), for each coalition C ⊆ N},

(cid:2)

where  x(C) is a shorthand for 
i∈C xi . Note that it is implicitly assumed here that the grand-coalition of all players in  N
forms and, accordingly, the solution concept suggests how the total payoff  v(N) can be divided among them in a way that 
is stable [2].

In  the  presence  of  an  interaction  graph,  the  core  can  be  smoothly  adapted  so  as  to  focus  only  on  feasible  coali-

tions [17–19], as illustrated below—formal deﬁnitions are provided in Section 2.

Example 1.2. The core of the characteristic function game deﬁned in Example 1.1 consists of all allocations (cid:6)x1, x2, x3(cid:7) ∈ R3
that are solutions to the following set of linear (in)equalities:

⎧

⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩

x1 + x2 + x3 = 22
x1 + x2 ≥ 17
x2 + x3 ≥ 10
x1 ≥ 10
x2 ≥ 5
x3 ≥ 4

Note  that,  in  the  example,  the  core  contains  inﬁnitely  many  allocations  (e.g.,  the  allocation  (cid:6)12, 6, 4(cid:7) is  in  the  core). 
However, it is instructive to point out that the core of a game might as well be empty. For instance, the reader might check 
that this is the case for the modiﬁed game where v({1, 2}) = 18, v({2, 3}) = 12, and by assuming that the coalition {1, 3} is 
(cid:2)
also allowed to form, with v({1, 3}) = 17. 

So far we have considered only allocations of the value  v(N), i.e., we have assumed that the grand coalition will form 
in the possible outcomes of the game. The formation of the grand-coalition is indeed natural in many settings. This is for 
example the case for superadditive games, which means that whenever three feasible coalitions  S,  T , and  S ∪ T are given, 
with  S ∩ T = ∅, then v(S ∪ T ) ≥ v(S) + v(T ) holds. For instance, the reader can check that the game deﬁned in Example 1.1
is superadditive. In a plethora of realistic application settings however, the emergence of the grand coalition is either not 
guaranteed, plainly impossible, or even perceivably harmful. This might happen because of issues ranging from normative 
considerations, to information (observability) imperfections, and to technological constraints (cf. [20]). Moreover, additional 
motivations  emerge  when  the  problem  is  looked  at  from  an  economics  perspective [21].  Under  such  circumstances,  it  is 
very natural for the agents to organize themselves in a coalition structure, i.e., in a partition (cid:2) of  N, consisting of disjoint 
and exhaustive feasible coalitions.

(cid:13)) = v(C) + v(C

Example 1.3.  Consider  a  slight  modiﬁcation  of  the  setting  discussed  in  Example 1.1,  where  two  additional  mobile  users 
join the environment as illustrated in the right part of Fig. 1. In particular, assume that  v({4}) = v({5}) = 5,  v({4, 5}) = 11, 
and  v(C ∪ C
is feasible 
(according to the interaction graph depicted in the ﬁgure). Intuitively, in this modiﬁed scenario, in order to cluster together 
the  two  new  mobile  users  with  the  rest  of  the  users,  we  have  to  pay  some  cost  that  is  no  longer  compensated  by  the 
network  capabilities  of  the  wireless  connection.  In  particular,  we  have  v({1, 2, 3, 4, 5}) < v({1, 2, 3}) + v({4, 5}),  i.e.,  the 
modiﬁed game is no longer superadditive. Therefore, the ﬁve users will likely organize themselves in the coalition structure 
(cid:2)
(cid:2) = {{1, 2, 3}, {4, 5}}, with the two coalitions {1, 2, 3} and {4, 5} downloading independently the ﬁle of interest.

(cid:13)) − 1, for each pair of non-empty sets C ⊆ {1, 2, 3} and C

(cid:13) ⊆ {4, 5} such that C ∪ C

(cid:13)

As  demonstrated  above,  the  social welfare of  a  coalition  structure  (cid:2),  i.e.,  the  total  available  payoff 

C∈(cid:2) v(C),  might 
happen  to  be  greater  than  the  payoff  associated  with  the  grand-coalition.  Whenever  this  is  the  case,  the  classic  solution 
concepts are not appropriate. Indeed, agents will likely organize themselves in the coalition structure achieving the max-
imum  social  welfare,  so  that  stable  outcomes  have  to  be  characterized  from  the  “coalition  structure”  perspective,  as  ﬁrst 
suggested  by [21].  According  to  this  view,  the  core of  a  characteristic  function  game  ﬁnds  a  counterpart  in  the  coalition 
structure core. Intuitively, at the coalition structure core, if (cid:2) is a coalition structure achieving the maximum social welfare, 
then it holds that, for each coalition C in (cid:2), the members of C distribute the value v(C) among themselves only.

(cid:2)

Coming back to Example 1.3, it is immediate to check that the maximum social welfare in the game is achieved by the 
coalition  structure  (cid:2) = {{1, 2, 3}, {4, 5}}.  An  allocation  (cid:6)x1, x2, x3, x4, x5(cid:7) in  the  coalition  structure  core  must  be  such  that 
x1 + x2 + x3 = 22 and x4 + x5 = 11. That is, the members of {1, 2, 3} and {4, 5} distribute the payoff v({1, 2, 3}) and v({4, 5}), 
respectively, among themselves only. Moreover, as usual, the allocation is required to be stable, i.e.,  x(C) ≥ v(C), for each 
feasible coalition C ⊆ {1, 2, 3, 4, 5}. For instance, (cid:6)12, 6, 4, 6, 5(cid:7) is an allocation with these properties.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

79

1.3.  Game encodings and complexity issues

In order to fully specify a characteristic function game, we need to explicitly list all associations of coalitions with their 
payoffs. However, this requires exponential space w.r.t. the number of agents and it is often hardly applicable in practice. 
Motivated by this observation, compact game-encoding mechanisms have been proposed. Building on the seminal papers by 
Megiddo [22], by Kalai and Zemel [23], and by Deng and Papadimitriou [24], the idea is to equip a characteristic function 
game  with  a  structure  (e.g.,  a  combinatorial  structure,  a  graphical  structure,  or  a  logical  theory)  and  to  deﬁne  a  function 
that,  given  this  structure  and  any  set  C of  agents,  is  able  to  return  (usually  in  polynomial  time)  the  payoff  v(C).  As  an 
example, in the games studied by Deng and Papadimitriou [24], the value  v(C) is determined by a weighted graph whose 
nodes are the agents and equals the sum of the weights of the edges in the subgraph induced over C . Another remarkable 
example of compact games that received considerable attention in the last few years is that of games encoded via marginal 
contribution networks (MC-nets), proposed by Ieong and Shoham [25]. Marginal contribution networks provide a simple, yet 
very  powerful  method  to  specify  characteristic  function  games.  Indeed,  any  characteristic  function  game  can  be  encoded 
in terms of a marginal contribution network, and exponentially more compact encodings can be deﬁned in many practical 
cases.

While an explicit encoding makes the input sizes so large that computing the various solution concepts is trivially—and 
artiﬁcially—easy, this is no longer the case over compact encodings. Indeed, most of the research on computational aspects 
of  coalitional  games  is  focused  on  assessing  the  amount  of  resources  needed  to  compute  these  concepts  over  different 
compact-game encodings, and several deep and useful results have already been achieved (see, for instance, [26,24,27,25,5], 
and [28] for a review).

In  fact,  studying  the  complexity  of  realistic  cooperative  game  settings,  and  identifying  tractable  game  instances  by 
limiting  some  source  of  intractability  is  crucial  for  the  design  of  general  solution  algorithms.  As  such,  the  problem  of 
characterizing the precise computational complexity of coalitional games is a well-established topic of research in the ar-
tiﬁcial  intelligence  community.  To  give  an  idea  of  some  practical  consequences  of  complexity  results,  assume  we  would 
like to solve an NP-complete problem on a standard (deterministic) machine. The theory suggests that (unless P = NP) any 
algorithm has to explore the search space via some kind of backtracking mechanism, which in the worst case exhaustively 
generates all the potential solutions. For a problem that is (cid:2)P
2 -hard, things are even worse as the backtracking mechanism 
might require to be invoked by a master algorithm polynomially many times. In fact, these problems might be solved by 
means of algorithms that make use of SAT solvers1 to address the computation of the NP-oracle calls. Finally, note that any 
(cid:3)P
2 -complete problem exhibits two orthogonal sources of intractability. Then, we cannot design any ﬂat-backtracking algo-
rithm for our problem, since any algorithm with a search-space tree having a polynomial number of levels should solve a 
nested co-NP-hard problem to check whether a leaf node is a solution or not. In these cases, a practical solution might be 
given by encoding the problem of interest in some expressive logic formalisms, such as in Answer Set Programming, and to 
use the solvers2 that have been developed for them.

1.4.  Summary of contributions

With a few notable exceptions discussed in the following sections, complexity studies about coalitional games concerned 
so far mostly the setting where all coalitions are unconditionally allowed to form. Furthermore, most works tacitly assume 
that  the  goal  is  to  distribute  over  the  agents  the  total  payoff  available  to  the  grand-coalition,  even  when  games  are  not 
superadditive. Moving from this background, the goal of the paper is to provide a clear picture of the complexity of core-
related problems over compact games under restricted cooperation, as speciﬁed by an interaction graph. In particular, we 
consider environments where agent interactions can be restricted according to a variety of interaction graph structures of 
interest, and we look at the computational issues from the coalition structure viewpoint, that is, without assuming that the 
grand-coalition necessarily forms. In our analysis, the input for any algorithmic problem includes (at least) the encoding of a 
game whose characteristic function v is computable in time polynomial in the size of the given representation. As a special 
instance of this general setting, we also provide results that are speciﬁc for MC-nets. In more detail:

(cid:2) We  study  how  the  structure  of  the  underlying  interaction  graphs  affects  the  complexity  of  checking  whether  a  given 
outcome  belongs  to  the  coalition  structure  core  (in  short:  CS-Core-Membership)  and  of  deciding  whether  the  core 
is  non-empty  (in  short:  CS-Core-NonEmptiness).  We  analyze  these  problems  over  lines,  cycles,  trees,  nearly-acyclic 
graphs,  formally,  graphs  having  bounded treewidth [29] (in  short:  BTW),  and  complete  graphs.  In  the  results  we  have 
derived  (also  in  those  listed  in  the  other  points  below),  islands  of  tractability  and  membership  results  are  identiﬁed 
for  arbitrary  compact  games,  whereas  intractability  results  are  shown  to  hold  even  on  MC-nets.  A  summary  of  these 
results is reported in Table 1. The most technical proofs are those establishing the results about CS-Core-Membership
and CS-Core-NonEmptiness over complete interactions graphs. Proofs for trees and graphs having bounded treewidth 
follow with suitable adaptations, whereas the analysis of lines and cycles is based on simple combinatorial properties.

1 See http://www.satcompetition.org/.
2 See https://www.mat.unical.it/aspcomp2014/.

80

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

Table 1
Results for arbitrary compact games. Hardness results are shown to hold even on MC-nets.

Problem

CS-Core-Membership

CS-Core-NonEmptiness

CS-Core-Find

CS-CoS

CS-LCV−

CS-LCV+

Lines
in P
6.1

in P
[30]

in FP
6.1

in P
[30]

in P
6.1

in P
6.1

Trees

co-NP-c
[9]+5.4

in P
[19]

NP-hard
5.9

in P
[19]

(cid:2)P
2 -c
4.3+5.7

in P
5.7

Cycles
in P
6.3

in P
6.3

in FP
6.3

in P
6.3

in P
6.3

in NP
6.3

BTW

co-NP-c
[9]+5.4

(cid:2)P
2 -c
4.1+5.3

NP-hard
from 5.3

(cid:2)P
2 -c
4.1+5.3

(cid:2)P
2 -c
4.3+5.7

2 , (cid:2)P

in (cid:3)P
4.3+4.4

2 -hard

Complete

co-NP-c†
[9]+4.9

(cid:2)P
2 -c
4.1+4.4

NP-hard
from 4.4

(cid:2)P
2 -c
4.1+4.4

(cid:2)P
2 -c
4.3+4.4

(cid:3)P
2 -c
4.3+4.6

Each entry is equipped either with the theorem number where the result is proven (or can be 
derived from), or with the reference to the work in the literature where a proof of the result 
can either be found or derived from with minor effort. For the completeness results (-c), such 
labels are given in the form M+H, with M and H being associated with the membership and 
the hardness result, respectively.
† The result has been independently proven in [31]. Our proof actually shows that hardness 
holds even when all rules are associated with non-negative values and at most one negated 
literal occurs in each rule (see Section 4.2). Therefore, it charts the boundary of tractability, 
given that, without negated literals, the resulting game encoding is known to be tractable.

(cid:2) CS-Core-Membership and  CS-Core-NonEmptiness are  decision  problems.  In  addition  to  them,  we  consider  the 
problem  of  computing an  allocation  in  the  coalition  structure  core  (in  short:  CS-Core-Find).  Of  course,  whenever 
CS-Core-NonEmptiness is  intractable,  then  CS-Core-Find is  intractable,  too.  However,  it  turns  out  that  CS-Core-Find
remains intractable on trees (see again Table 1, where FP stands for the class of search problems solvable in polynomial 
time).  This  is  rather  interesting  because  the  coalition  structure  core  is  always  non-empty  over  trees [19].  In  fact,  the 
result was already known to hold over classes of games equipped with arbitrary functions computable in polynomial 
time [32], and here it is strengthened to games encoded as MC-nets. Tractability results are eventually established for 
lines and cycles.

(cid:2) We consider the cost of stability [33], which is a core-related stability criterion deﬁned as the minimum worth that a 
benevolent external party must supply in order for the game to have a non-empty core. We study the CS-CoS problem 
of deciding whether this minimum worth is at most a given threshold. While being a weaker concept of stability than 
the  classical  concept  of  core,  it  emerges  that  it  is  characterized  by  the  same  intrinsic  computational  complexity  (see 
again Table 1). In particular, results for CS-CoS coincide with those for CS-Core-NonEmptiness.

(cid:2) We consider another core-related stability criterion, that is, the least core [34], which is an approximate version of the 
core, with an additional penalty imposed for leaving the grand coalition. We deﬁne a natural generalization of this concept 
to the case where coalition structures are taken into account, and we study its (analytical) properties. From the computational 
viewpoint,  we  consider  the  problem  CS-LCV,  which  asks  whether  a  game  can  be  made  stable  if  a  given  penalty  ε is 
considered. Note that in the literature about the least core, the range of ε ≤ 0 is also considered (i.e., incentives to leave 
the grand-coalition), with the aim of singling out the most stable subset of the core. Accordingly, towards a ﬁner-grained 
analysis, we consider the variants CS-LCV−
, where we require ε ≤ 0 and ε ≥ 0, respectively. For ε = 0, the 
problem  inherits  all  hardness  results  from  CS-Core-NonEmptiness.  However,  more  stringent  and  somehow  surprising 
complexity results are exhibited, via a number of rather elaborate reductions even in the basic cases of lines and cycles. 
The analysis shows that CS-LCV+

is intrinsically more complex than CS-LCV−

. Results are again in Table 1.

and CS-LCV+

(cid:2) We also analyze the complexity of superadditive games, for which the grand-coalition always forms (and the coalition 
structure core reduces to the usual concept of the core considered in the literature). Our results, reported in Table 2, 
demonstrate that superadditivity does not help too much to enlarge the islands of tractability. In fact, tractability results 
coincide with those discussed for arbitrary games. However, all hardness results are now actually completeness results 
for the class co-NP, rather than for the (likely larger) classes (cid:2)P

(cid:2) Finally, motivated by the observation that each node in a line or a cycle (over which the problems we considered are 
tractable) has degree at most 2, we embark on the classiﬁcation of the complexity of core-related questions based on the 
maximum degree of the nodes. Results are summarized in Table 3. While all problems are tractable when the degree 
of  any  node  is  at  most  2,  they  suddenly  become  intractable  when  the  maximum  degree  is  3 or  higher.  Actually,  for 
arbitrary games when the degree is at most 2, only an upper bound on the complexity of CS-LCV+
is reported. In fact, 
these results are corollaries of those described in Table 1 and Table 2. However, to achieve tight bounds that hold even 

2 and (cid:3)P
2 .

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

81

Table 2
Results for superadditive compact games. The meaning of the symbols is as in Table 1.

Problem

CS-Core-Membership

CS-Core-NonEmptiness

CS-Core-Find

CS-CoS

CS-LCV−

CS-LCV+

Lines
in P
6.1

in P
[30]

in FP
6.1

in P
[30]

in P
6.1

in P
6.1

Trees

co-NP-c
[9]+5.4

in P
[19]

in FP
cf. [19]

in P
[19]

co-NP-c
5.12+5.11

in P
5.7

Cycles
in P
6.3

in P
6.3

in FP
6.3

in P
6.3

in P
6.3

in P
6.5

BTW

co-NP-c
[9]+5.4

co-NP-c
[9]+5.6

NP-hard
from 5.6

co-NP-c
4.12+5.6

co-NP-c
4.12+5.6

co-NP-c
4.12+5.6

Complete

co-NP-c†
[9]+4.9

co-NP-c†
[9]+4.10

NP-hard
from 4.10

co-NP-c
4.12+4.10

co-NP-c
4.12+4.10

co-NP-c
4.12+4.10

Table 3
Complexity classiﬁcation based on the degree of the nodes in the interaction graphs.

Problem

Superadditive

Arbitrary

Degree ≤ 2

Arbitrary‡

Degree ≤ 2

Arbitrary‡

CS-Core-Membership
CS-Core-NonEmptiness

CS-Core-Find

CS-CoS

CS-LCV−
CS-LCV+

in P
in P

in FP

in P

in P

in P

co-NP-c
co-NP-c

in P
in P

NP-hard

in FP

co-NP-c

co-NP-c

co-NP-c

in P

in P

in NP

co-NP-c
(cid:2)P
2 -c

NP-hard

(cid:2)P

2 -c

(cid:2)P
(cid:3)P

2 -c
2 -c

‡ Hardness results hold even for interaction graphs where each node has degree at most 3.

when  each  node  has  degree  at  most  3,  a  mechanism  to  encode  any  structurally-restricted  game  into  an  “equivalent” 
one enjoying this property is exhibited.

Organization. The  rest  of  the  paper  is  structured  as  follows.  Section 2 formalizes  the  main  concepts  considered  in  our 
analysis, while Section 3 presents characterization results—useful for deriving the complexity results in the sequel. Results 
over complete interaction graphs and over graphs with bounded treewidth appear in Sections 4 and 5, respectively. Results 
over lines and cycles are shown in Section 6. Finally, Section 7 reviews related work, while conclusions and open research 
issues are discussed in Section 8. For the sake of readability, proofs of claims are reported in Appendix A.

2.  Formal framework

In this section, we discuss the stability concepts considered in the paper and present the computational setting we adopt 
for the analysis of their complexity. To this end, we start the formalization by introducing some background and the relevant 
notation.

Let G = (N, E) be an interaction graph over a set N = {1, . . . , n} of agents. We assume that G is connected, so that there 
are no structural constraints on the formation of the grand-coalition (otherwise, our results apply to each of the connected 
components  of  G).  The  set  of  all  coalitions  that  are  feasible over  G,  i.e.,  the  coalitions  C ⊆ N,  with  C (cid:15)= ∅,  such  that  the 
subgraph  of  G induced  over  the  nodes  of  C is  connected,  is  denoted  by  F (G).  A  coalition structure over  G is  a  partition
of  N, say  (cid:2) = {C1, . . . , Ck}, into feasible and disjoint coalitions; that is, we have:  C1 ∪ · · · ∪ Ck = N;  Ci ∩ C j = ∅, for each 
pair i, j ∈ {1, . . . , k} with i (cid:15)= j; and  Ci ∈ F (G), for each i ∈ {1, . . . , k}. The set of all possible coalition structures over  G is 
hereinafter denoted by CS(G).

We  consider  games  that  are  structurally  restricted,  in  that  they  are  equipped  with  interaction  graphs.  Intuitively,  two 
agents  can  belong  to  the  same  coalition  only  if  they  are  connected  with  a  path  in  the  interaction  graph.  Formally,  if  v :
2N (cid:3)→ R is a function assigning payoffs to the coalitions that can be built over  N, where conventionally  v(∅) = 0, then the 
triple (cid:4) = (cid:6)N, v, G(cid:7) is a structurally-restricted characteristic function game.

Now, assume that (cid:4) = (cid:6)N, v, G(cid:7) is a given game, and let (cid:2) be a coalition structure in CS(G). The social welfare of (cid:2) in 
C∈(cid:2) v(C), denoted by SW((cid:2)). The maximum social welfare that can be attained in (cid:4) over all the possible 

(cid:4) is the value 

(cid:2)

82

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

(cid:2)

coalition structures is denoted by SWopt((cid:4)). The set of all coalition structures (cid:2) ∈ CS(G) such that SW((cid:2)) = SWopt((cid:4)) is 
denoted by CS-opt((cid:4)).

Recall that for a payoff allocation x = (cid:6)x1, . . . , xn(cid:7) ∈ Rn to the agents, and for a coalition C ⊆ N, we denote by x(C) the 
i∈C xi . An allocation x ∈ Rn is called an imputation for a coalition structure (cid:2) in (cid:4) if it is eﬃcient, i.e., x(C) = v(C) for 
sum 
each C ∈ (cid:2), and individually rational, i.e., xi ≥ v({i}) for all i ∈ N. Note that if x is an imputation for (cid:2), then x(N) = SW((cid:2))
holds.  In  words,  imputations  for  (cid:2) are  allocations  where  each  coalition  in  (cid:2) distributes  the  available  payoff  among  its 
members only, in a way that each agent gets at least the payoff it would get alone, without participating to the game. The 
set of all imputations for (cid:2) is henceforth denoted by I((cid:2)).

2.1.  Stability concepts

The core. The  main  stability  concept  considered  in  the  literature  is  the  core.  In  fact,  we  consider  the  notion  modiﬁed  by 
[17–19] in order to deal with the restrictions imposed by an underlying interaction graph, so that only feasible solutions 
are taken into account. Accordingly, if (cid:4) = (cid:6)N, v, G(cid:7) is a structurally-restricted game with |N| = n, then its core is deﬁned 
as the set core((cid:4)) = {x ∈ Rn | x(N) = v(N) and x(C) ≥ v(C), ∀C ∈ F (G)}.

The above notion implicitly assumes that the grand-coalition always forms. In particular, if x is in the core, then x is an 
imputation for {N}. By removing this assumption, we get a more general notion of the core where coalition structures are 
taken into account. We refer to this notion as the coalition structure core of (cid:4), formally deﬁned as the set

CS-core((cid:4)) = {((cid:2), x) | (cid:2) ∈ CS(G), x ∈ I((cid:2)), and x(C) ≥ v(C), ∀C ∈ F(G)}.

(1)

Note  that  Aumann  and  Dreze [21] proposed  an  extension  for  the  standard  notion  of  the  core  (i.e.,  when  all  coalitions 
are in principle feasible ones) where a coalition structure  ¯(cid:2) is ﬁxed beforehand. In that setting, the question is whether an 
imputation for  ¯(cid:2) exists which is stable—formally, this amounts to use { ¯(cid:2)} in place of CS(G) in Equation (1). Accordingly, 
the above deﬁnition of the coalition structure core can be viewed as the natural generalization of the proposal by Aumann 
and Dreze to the case where players might organize themselves in any arbitrary coalition structure taken from CS(G).

The following is a useful and intuitive property of the coalition structure core, which is in fact well-known for games 
where all coalitions are feasible ones. The adaptation to our setting is straightforward and the proof is reported for the sake 
of completeness only.

Fact 2.1. Let (cid:4) = (cid:6)N, v, G(cid:7) be a structurally-restricted characteristic function game, and let ((cid:2), x) ∈ CS-core((cid:4)). Then, (cid:2) ∈ CS-opt((cid:4)).

Proof. Suppose ((cid:2), x) ∈ CS-core((cid:4)). For each coalition structure (cid:2)(cid:13) ∈ CS(G) and for each coalition C ∈ (cid:2)(cid:13)
, which is actually 
a feasible one by the deﬁnition of a coalition structure, x(C) ≥ v(C) holds by (1). By the fact that coalitions in (cid:2)(cid:13)
are disjoint 
C∈(cid:2)(cid:13) v(C) = SW((cid:2)(cid:13)). That is, x(N) is an upper 
and they exclusively cover N, we get x(N) =
C∈(cid:2)(cid:13) x(C), and hence x(N) ≥
bound on the social welfare that can be attained by any feasible coalition structure in (cid:4). Since x(N) = SW((cid:2)) holds because 
x ∈ I((cid:2)), we conclude that x(N) coincides with SWopt((cid:4)). Hence, x(N) = SW((cid:2)) = SWopt((cid:4)). (cid:3)

(cid:2)

(cid:2)

According to the above result, the coalition structure core can be viewed as a method to distribute the maximum social 
welfare that can be achieved over all the possible coalition structures in a way that no feasible coalition has an incentive 
to  deviate  from  it.  Moreover,  note  that  since  any  singleton  coalition  {i},  with  i ∈ N,  is  a  feasible  one,  then  the  individual 
rationality  requirement  over  the  possible  imputations  is  implied  by  the  fact  that  x(C) ≥ v(C) must  hold  at  the  coalition 
structure core, for each C ∈ F (G).

Example 2.2.  The  function  v and  the  interaction  graph  G discussed  in  Example 1.3 give  rise  to  the  structurally-restricted 
characteristic  function  game  (cid:4) = (cid:6)N, v, G(cid:7),  where  F (G) = {{1}, {2}, {3}, {4}, {5}, {1, 2}, {2, 3}, {3, 4}, {3, 5}, {4, 5}, {1, 2, 3},
{2, 3, 4}, {2, 3, 5}, {3, 4, 5}, {1, 2, 3, 4}, {1, 2, 3, 5}, {2, 3, 4, 5}, {1, 2, 3, 4, 5}}.  The  coalition  structure  core  of  this  game  is  not 
empty,  as  is  witnessed  by  the  pair  ((cid:2), x) such  that  (cid:2) = {{1, 2, 3}, {4, 5}} and  x = (cid:6)12, 6, 4, 6, 5(cid:7).  Indeed,  note  that 
(cid:2) ∈ CS-opt((cid:4)) holds  and  that  x is  an  imputation  for  (cid:2),  because  x1 + x2 + x3 = v({1, 2, 3}),  x4 + x5 = v({4, 5}),  and 
xi ≥ v({i}),  for  each  agent  i ∈ {1, 2, 3, 4, 5}.  Moreover,  it  can  be  checked  that  there  is  no  feasible  coalition  C ∈ F (G) such 
(cid:2)
that x(C) < v(C). 

The least core value. As  already  discussed  in  the  introduction,  it  might  well  be  the  case  that  the  core  of  a  given  game 
is  empty.  This  observation  motivated  a  number  of  different  proposals  for  weaker  notions  of  stability,  which  are  able  to 
single  out  desirable  outcomes  in  any  possible  characteristic  function  game.  The  least core [34] is  a  well-known  solution 
concept of this kind, which provides an approximation of the core where an additional penalty is imposed for leaving the 
grand-coalition. Next, we present its deﬁnition by taking into account the feasibility of the coalitions, starting with the case 
where coalition structures are not dealt with.

For any structurally-restricted characteristic function game (cid:4) = (cid:6)N, v, G(cid:7) and for any real number ε, let (cid:4)-ε = (cid:6)N, v-ε, G(cid:7)
be the game such that  v-ε(C) = v(C) − ε, for each C ∈ F (G), and  v-ε(N) = v(N). The least core of (cid:4) is then the set of all 
allocations in core((cid:4)-ε) such that core((cid:4)-ε) (cid:15)= ∅, and core((cid:4)-¯ε) = ∅, for any  ¯ε < ε.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

83

Example 2.3.  Consider  the  game  (cid:4)(cid:13) = (cid:6){1, 2}, v
(cid:13)({1, 2}) = 2,  and  where  K2 is  the 
complete graph over {1, 2}. Note that structural restrictions are immaterial as all coalitions are feasible ones. Note also that 
core((cid:4)(cid:13)) = ∅.

(cid:13), K2(cid:7) where  v

(cid:13)({2}) = 2,  v

(cid:13)({1}) = 2,  v

Consider  then  the  game  (cid:4)(cid:13)

(cid:13)
(cid:13)
−1({2}) = 1 and  v
−1({1, 2}) = 2,  and  note  that 
(cid:13)({1, 2}).  Moreover,  note  that 
−1) contains  only  the  allocation  (cid:6)1, 1(cid:7) where  the  agents  equally  divide  the  payoff  v
(cid:2)

(cid:13)
−1({1}) = v

(cid:13)(cid:7) where  v

= (cid:6){1, 2}, v

core((cid:4)(cid:13)
for any game (cid:4)(cid:13)

is precisely the set {(cid:6)1, 1(cid:7)}. 

-¯ε) is empty. Hence, the least core of (cid:4)(cid:13)

-¯ε such that  ¯ε < 1, core((cid:4)(cid:13)

(cid:13)
−1, G

−1

(cid:13)({1}) + v

In  the  above  example,  the  main  reason  for  the  emptiness  of  the  core  is  that  the  grand-coalition  would  hardly  form, 
(cid:13)({1, 2}).  Hence,  the  coalition  structure  core  might  be  a  more  appropriate  solution  concept 
because  v
for  such  instances.  Indeed,  this  concept  would  single  out  the  non-empty  set  of  outcomes  CS-core((cid:4)(cid:13)) = {((cid:2), x)} where 
(cid:2) = {{1}, {2}} and x = (cid:6)2, 2(cid:7), thereby suggesting that the two agents will not join together, with each of them individually 
getting a payoff of 2.

(cid:13)({2}) > v

At  this  point,  the  reader  might  wonder  whether,  unlike  the  core,  the  coalition  structure  core  is  always  non-empty.  As 

demonstrated by the game below, this is not the case.

Example 2.4. Consider the game (cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, v
is  such  that  v
(cid:13)(cid:13)({1, 3}) = v
v
Fact 2.1, elements in the coalition structure core have the form ({{1, 2, 3}, {4}}, x) where x = (cid:6)x1, x2, x3, x4(cid:7) is such that:

(cid:13)(cid:13), K4(cid:7) over the complete interaction graph K4, where the payoff function 
(cid:13)(cid:13)({1, 2}) =
(cid:13)(cid:13)({1, 2, 3}) = 7.  Note  that  {{1, 2, 3}, {4}} is  the  only  element  in  CS-opt((cid:4)(cid:13)(cid:13)).  Hence,  by 

(cid:13)(cid:13)(C ∪ {4}) = 0,  for  each  non-empty  set  C ⊆ {1, 2, 3},  v
(cid:13)(cid:13)({2, 3}) = 5,  and  v

(cid:13)(cid:13)({4}) = 1,  v

(cid:13)(cid:13)({2}) = v

(cid:13)(cid:13)({3}) = v

(cid:13)(cid:13)({1}) = v

⎧

⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩

x1 + x2 + x3 = 7
x4 = 1
x1 ≥ 1
x2 ≥ 1
x3 ≥ 1
x4 ≥ 1

x1 + x2 ≥ 5
x1 + x3 ≥ 5
x2 + x3 ≥ 5

x1 + x2 + x3 + x4 ≥ 0
x1 + x2 + x4 ≥ 0
x1 + x3 + x4 ≥ 0
x2 + x3 + x4 ≥ 0
x1 + x4 ≥ 0
x2 + x4 ≥ 0
x3 + x4 ≥ 0

The (in)equalities in the rightmost group are implied by the others, and can be discarded. In fact, the above set of (in)equal-
ities  is  not  satisﬁable,  because  of  the  (in)equalities  x1 + x2 + x3 = 7,  x1 + x2 ≥ 5,  x1 + x3 ≥ 5,  and  x2 + x3 ≥ 5.  Hence, 
CS-core((cid:4)(cid:13)(cid:13)) = ∅. 
(cid:2)

Given the above observation, we now look at a counterpart of the least core over coalition structures, too. To this end, 
for any feasible coalition structure (cid:2) = {C1, . . . , Cm} and for any real number ε, let (cid:4)(cid:2),-ε = (cid:6)N, v(cid:2),-ε, G(cid:7) be the game with 
v(cid:2),-ε(C j) = v(C j), for each coalition C j ∈ (cid:2); and  v(cid:2),-ε(C) = v(C) − ε, for each feasible coalition C not in (cid:2). Moreover, let 
CS-core(cid:2),-ε((cid:4)) be the set of all the pairs ((cid:2), x) ∈ CS-core((cid:4)(cid:2),-ε). Note that, in general, a pair ((cid:2), x) ∈ CS-core((cid:4)(cid:2),-ε) is not 
an imputation for the game (cid:4). In particular, consistently with the original deﬁnition of the least core by Maschler et al. [34], 
the penalty ε is imposed on each feasible coalition including the singletons—hence, x is not necessarily individually rational 
in (cid:4).3
(cid:7)

Hence,  we  now  deﬁne  the  least coalition structure core of  (cid:4) as  the  non-empty  set 
(cid:2)∈CS(G)

CS-core(cid:2),-¯ε((cid:4)) = ∅, for any  ¯ε < ε.

CS-core(cid:2),-ε((cid:4)) such  that 

(cid:2)∈CS(G)

(cid:7)

Example 2.5. Consider again the setting of Example 2.4, and let (cid:2) = {{1, 2, 3}, {4}}. Then, consider the game (cid:4)(cid:13)(cid:13)
that CS-core(cid:2),-ε((cid:4)(cid:13)(cid:13)) is determined by the solutions to the following set of (in)equalities:

(cid:2),-ε and note 

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

x1 + x2 + x3 = 7
x4 = 1
x1 ≥ 1 − ε
x2 ≥ 1 − ε
x3 ≥ 1 − ε
x1 + x2 ≥ 5 − ε
x1 + x3 ≥ 5 − ε
x2 + x3 ≥ 5 − ε

The minimum value of ε for which the above (in)equalities are satisﬁable is  1
(cid:6) 7
3 , 7

3 , 1(cid:7) is the only solution.

3 , 7

3 . In particular, for this value, we have that 

3 The least core variant where individual rationality constraints are enforced might be appropriate for modelling certain application scenarios. The careful 
reader can check that most of our results apply to that setting also.

84

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

Consider now any feasible coalition structure  ¯(cid:2) (cid:15)= (cid:2) and the game (cid:4)(cid:13)(cid:13)

Since  ¯(cid:2) (cid:15)= (cid:2), we have  ¯x1 + ¯x2 + ¯x3 ≥ 7 − ¯ε and  ¯x4 ≥ 1 − ¯ε. Moreover, we know that  ¯x1 + ¯x2 + ¯x3 + ¯x4 =
hold. In particular, 
conclude that ({{1, 2, 3}, {4}}, (cid:6) 7

(cid:13)(cid:13)( ¯C) ≤ 7 holds since  ¯(cid:2) (cid:15)= (cid:2), and so  ¯x1 + ¯x2 + ¯x3 + ¯x4 ≤ 7. Then, we derive  ¯ε ≥ 1
3 , 1(cid:7)) is the only imputation in the least coalition structure core.

. Let ( ¯(cid:2), ¯x) be an imputation in CS-core ¯(cid:2),-¯ε((cid:4)(cid:13)(cid:13)). 
(cid:13)(cid:13)( ¯C) must 
3 , and we 
(cid:2)

¯C∈ ¯(cid:2) v
2 > 1

¯C∈ ¯(cid:2) v

3 , 7

3 , 7

¯(cid:2),-¯ε

(cid:2)

(cid:2)

We point out that the notion of least coalition structure core illustrated above can be found in the work by Service [35]. 
This notion appears to be the natural counterpart of the least core over coalition structures. Indeed, the intuition underlying 
the original notion of the least core is to characterize the outcomes for which the grand-coalition is stable when deviations 
are charged an additional cost. Accordingly, the counterpart just characterizes the minimum cost that has to be charged to 
stabilize any coalition, hence not necessarily the one formed by all the agents.4 In what follows, the number ε determined 
by  the  least  core  (resp.,  least  coalition  structure  core)  of  (cid:4) is  called  its  least core value (resp.,  least coalition structure core 
value), and it is denoted by LCV((cid:4)) (resp., CS-LCV((cid:4))). Note that, whenever the game has already a non-empty core (resp., 
coalition structure core), then this value might be even a negative one, thereby characterizing the “most stable” subset of 
the core (resp., coalition structure core).

The cost of stability. A criticism that applies to the notion of the least core is that it is not “constructive”, in the sense that 
it  does  not  practically  tell  us  how  a  given  unstable  game  can  be  made  stable.  This  drawback  is  overcome  by  the  cost of 
stability [33], which is the minimum worth that a benevolent external party must supply in order for the game to have a 
non-empty core.5 Let us ﬁrst formalize this concept by starting with the case where coalition structures are not allowed to 
form.

For any real number (cid:5) ≥ 0, let (cid:4)(cid:5) = (cid:6)N, v(cid:5), G(cid:7) denote the structurally-restricted game such that v(cid:5)(C) = v(C), for each 

coalition C ∈ F (G), and v(cid:5)(N) = v(N) + (cid:5). The cost of stability of (cid:4) is the value CoS((cid:4)) = min{(cid:5) | core((cid:4)(cid:5)) (cid:15)= ∅ ∧ (cid:5) ≥ 0}.

Example 2.6.  Consider  the  game  (cid:4)(cid:13) = (cid:6){1, 2}, v
(cid:13), K2(cid:7) presented  in  Example 2.3,  and  recall  that  core((cid:4)(cid:13)) = ∅.  Its  cost  of 
stability is then given by the minimum value of (cid:5) ≥ 0 such that the following set of linear (in)equalities admits a solution:

⎧
⎨

x1 + x2 = 2 + (cid:5)
x1 ≥ 2
x2 ≥ 2
Therefore, we have that CoS((cid:4)(cid:13)) = 2. 

⎩

(cid:2)

When we allow coalition structures, the deﬁnition of the cost of stability can be modiﬁed accordingly. In particular, for 
any coalition structure (cid:2) = {C1, . . . , Cm} and for any vector  (cid:18)(cid:5) = (cid:6)(cid:5)1, . . . , (cid:5)m(cid:7) ∈ Rm, let (cid:4)(cid:2), (cid:18)(cid:5)
= (cid:6)N, v(cid:2), (cid:18)(cid:5), G(cid:7) be the game 
with  v(cid:2), (cid:18)(cid:5)(C) = v(C), for each coalition C ∈ F (G) such that C /∈ (cid:2); and  v(cid:2), (cid:18)(cid:5)(C j) = v(C j) + (cid:5) j , for each coalition C j ∈ (cid:2). 
= (cid:6)N, v (cid:18)(cid:5), G(cid:7) in  order  to  simplify  the  nota-
If  (cid:2) is  clear  from  the  context,  then  the  above  game  is  just  denoted  as  (cid:4) (cid:18)(cid:5)
j=1 (cid:5) j | ∃x such that ((cid:2), x) ∈ CS-core((cid:4) (cid:18)(cid:5)) and ∀ j ∈
tion. The cost of stability of (cid:2) in (cid:4) is the value CS-CoS((cid:4), (cid:2)) = min{
{1, . . . , m}, (cid:5) j ≥ 0}. The coalition structure cost of stability of (cid:4), denoted by CS-CoS((cid:4)), is the minimum value of CS-CoS((cid:4), (cid:2))
over all feasible coalition structures (cid:2) ∈ CS(G).

(cid:2)

m

Example 2.7. Consider again the game (cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, v
(cid:13)(cid:13), K4(cid:7) discussed in Example 2.4, by recalling that CS-core((cid:4)(cid:13)(cid:13)) = ∅. 
Let  (cid:2) denote  the  coalition  structure  {{1, 2, 3}, {4}},  which  attains  the  maximum  social  welfare.  Then,  ((cid:2), x) belongs  to 
CS-core((cid:4) (cid:18)(cid:5)) if x = (cid:6)x1, x2, x3, x4(cid:7) and  (cid:18)(cid:5) = (cid:6)(cid:5)1, (cid:5)2(cid:7), with (cid:5)1 ≥ 0 and (cid:5)2 ≥ 0, satisfy the following (in)equalities:

⎧

⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩

x1 + x2 + x3 = 7 + (cid:5)1
x4 = 1 + (cid:5)2
x1 ≥ 1
x2 ≥ 1
x3 ≥ 1
x4 ≥ 1

x1 + x2 ≥ 5
x1 + x3 ≥ 5
x2 + x3 ≥ 5

In particular, the minimum value of (cid:5)1 + (cid:5)2 for which the above (in)equalities have a solution is obtained for (cid:5)1 = 1
(cid:5)2 = 0, in which case x = (cid:6) 5
is interesting to observe that this cost is actually paid to stabilize the coalition {1, 2, 3}.

2 and 
2 , and it 
By  considering  any  other  ¯(cid:2) (cid:15)= (cid:2),  one  can  check  that  CS-CoS((cid:4)(cid:13)(cid:13), ¯(cid:2)) > CS-CoS((cid:4)(cid:13)(cid:13), (cid:2)),  so  that  CS-CoS((cid:4)(cid:13)(cid:13), (cid:2)) is  the 
(cid:2)

2 , 1(cid:7) witnesses the satisﬁability of all (in)equalities. Therefore, CS-CoS((cid:4)(cid:13)(cid:13), (cid:2)) = 1

coalition structure cost of stability of (cid:4)(cid:13)(cid:13)

2 , 5

2 , 5

. 

4 Different notions, which look at “approximations” of the coalition structure core from different perspectives, can be found in [36–38]. See, also, [37] for 
further notions related to the least core.
5 By considering the cost of stability relative to the worth of the grand-coalition, we get the related notion of the cost recovery ratio (see, e.g., [39]).

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

85

2.2.  Computational setting

As  we  have  already  pointed  out,  we  focus  on  games  with  a  compact  encoding.  Founding  on  the  seminal  papers  by 
[22–24], several such encoding mechanisms have been studied. Although our work deals with general encodings, we will 
also consider as a special case of this general setting encodings via marginal contribution networks, as deﬁned by Ieong and 
Shoham [25].
Marginal contribution networks. A  marginal  contribution  network  M consists  of  a  set {r1, . . . , rn} of  rules  involving  a 
} → valuei , 
number  of  Boolean  variables  that  represent  the  agents.  For  each  1 ≤ i ≤ n,  the  rule  ri has  the  form  {patterni
where patterni is a conjunction that may include both positive and negative literals, and valuei is the additive contribution 
associated  with  this  pattern.6 A  rule  applies to  a  set  C of  agents  if  all  the  agents  whose  literals  occur  positively  in  the 
pattern belong to C , and all the players whose literals occur negatively in the pattern do not belong to C . The value  v(C)
in the game induced by  M is given by the sum of the values of all rules that apply to C . If no rule applies, then the value 
for the coalition is set to zero, by default.

Note that the encoding mechanism deﬁnes a payoff for each possible coalition—i.e., all of them are implicitly assumed 
to  be  feasible.  In  the  context  of  structured  environments,  the  speciﬁcation  of  a  CFG  can  be  given  by  an  MC-net  plus  an 
interaction graph describing the coalitions for which the values returned by the encoding are meaningful.

Example 2.8. Consider the following marginal contribution network M, over the Boolean variables in the set {a1, a2, a3}:

⎧
⎪⎪⎪⎨
⎪⎪⎪⎩

{a1 ∧ a2} → 2
{a2 ∧ a3} → 1
{a1} → 10
{a2} → 5
{a3} → 4

These rules deﬁne a game over a set {1, 2, 3} of agents bijectively corresponding to the elements in {a1, a2, a3}. In fact, as 
no confusion can arise, it is convenient to interchangeably view Boolean variables as agents, so that we can directly write 
v({a1}) = 10,  v({a2}) = 5,  v({a3}) = 4,  v({a1, a2}) = 17,  v({a1, a3}) = 14,  v({a2, a3}) = 10,  and  v({a1, a2, a3}) = 22.  To  see 
how these values are computed, observe for instance that v({a2, a3}) = 1 + 5 + 4 is derived from the application of the rules 
{a2 ∧ a3} → 1, {a2} → 5, and {a3} → 4. Moreover, all rules have to be applied to compute v({a1, a2, a3}).

Note  that  patterns  do  not  contain  negative  literals  in  this  example.  Moreover,  note  that  this  marginal  contribution 
network, combined with the interaction graph depicted in the left part of Fig. 1, fully speciﬁes the game discussed in Ex-
ample 1.1. In particular, the interaction graph tells us that the value  v({a1, a3}) deﬁned by the encoding is not meaningful, 
(cid:2)
because the corresponding coalition is not allowed to form.

Marginal  contribution  networks  provide  a  simple,  yet  very  powerful  method  to  specify  characteristic  function  games. 
Indeed, any characteristic function game can be encoded in terms of a marginal contribution network, even though in some 
cases exponentially many rules might be required [25].

Interestingly, in many practical cases, exponentially more compact encodings can be deﬁned via marginal contribution 
networks. For a trivial example of this kind, think about the MC-net over a set {a1, . . . , an} of agents consisting of the rule 
{ai} → 1, for each ai ∈ N. This network just states that  v(C) = |C|, for each coalition C ⊆ N. Therefore, it succinctly deﬁnes 
2n payoffs, in terms of n rules only.

R

Compact representations. We recall from [9] a unifying model for compactly speciﬁed games, by extending it to deal with 
restrictions on the formation of coalitions. A compact representation R deﬁnes suitable encodings for a class of structurally-
restricted characteristic function games, denoted by C(R). Formally, any representation R deﬁnes an encoding function ξ R
such  that,  for  any  structurally-restricted  characteristic  function  game  (cid:4) ∈ C(R),  ξ R((cid:4)) is  the 
and  a  payoff  function  v
R(ξ R((cid:4)), C) is the payoff associated with the coalition  C according to (cid:4). In the following, we con-
encoding of (cid:4), and  v
sider only polynomial-time compact representations (in short: P-representations), i.e., we assume that v
is a polynomial-time 
computable function. Moreover, we assume that the game representation ξ R((cid:4)) includes the interaction graph G associated 
with (cid:4). This entails in particular that, for every coalition C , |C| ≤ ||ξ R((cid:4))|| holds.

Whenever  a  compact  representation  R is  clear  from  the  context  or  whenever  its  speciﬁcation  is  irrelevant,  we  can 
just  write  (cid:4) instead  of  ξ R((cid:4)),  and  v(C) instead  of  v
R(ξ R((cid:4)), C).  While  doing  so,  we  are  identifying  the  game  with  its 
actual representation (by furthermore ignoring the actual procedure underlying the computation of the payoff values). As an 
example, for the case of the marginal-contribution network compact-representation, henceforth denoted as ‘mcn’, any game 
(cid:4) is encoded in ξ mcn((cid:4)) by a set of rules plus the underlying interaction graph, and the function v mcn(ξ mcn((cid:4)), C) computes 

R

6 The encoding can be immediately generalized by deﬁning patterns as arbitrary Boolean formulas over the agents. This is precisely the setting proposed 
and studied by Elkind et al. [40], where marginal contribution networks where patterns are constrained to be conjunctions of literals are called basic. In 
the paper, we always deal with basic patterns but, for the sake of simplicity and according to the terminology of Ieong and Shoham [25], we shall omit to 
explicitly specify that they are “basic”.

86

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

the payoff of C as the sum of the values of those rules in ξ mcn((cid:4)) that apply to coalition C . Moreover, as the encoding is 
understood,  we  can  use  the  naming  “marginal  contribution  network”  to  denote  the  game  rather  than—more  formally—its 
encoding. Eventually, note that mcn is a P-representation.
Expressive power. Let R1 and R2 be a pair of game representations. We say that R2 is at least as expressive (and succinct) 
as R1, denoted by R1 (cid:3)e R2, if there exists a polynomial-time computable function  f that translates the encoding ξ R1 ((cid:4))
of (cid:4) in R1 into an encoding ξ R2 ((cid:4)) for the same game (cid:4) in R2. Note that if R1 (cid:3)e R2 holds, then any hardness result 
for  the  complexity  of  reasoning  problems  over  R1 immediately  applies  to  R2,  and  any  positive  result  for  problems  over 
R2 immediately  applies  to  R1.  Thus,  expressiveness  relations  can  be  used  to  derive  further  complexity  results  after  the 
complexity of some representation has been characterized.

Problems studied. In order to assess the amount of resources needed to reason about core-related concepts in structured 
environments,  we  provide  answers  to  a  number  of  questions,  thus  far  unaddressed  in  the  literature.  In  the  analysis,  we 
follow the classical setting where numerical computations deal with numbers given in the (irreducible) fractional form p/q, 
where  p (resp., q) is an integer (resp., natural number) encoded in binary. In particular, all parameters provided as inputs 
to the problems we study are assumed to be rational numbers, rather than arbitrary real numbers. For instance, the value 
associated  with  any  rule  of  a  marginal  contribution  network  (and,  hence,  the  payoff  associated  with  any  coalition)  is  a 
rational number. For models of computations tailored to work with real numbers (as well as with other ﬁelds), we refer the 
interested reader to [41].

Formally,  we  analyze  the  complexity  of  the  following  decision  problems,  all  of  them  receiving  as  input  a  game  (cid:4) =
(cid:6)N, v, G(cid:7), with  N = {1, . . . , n} (in fact, its encoding ξ R((cid:4)) deﬁned according to a P-representation R), possibly with some 
further inputs.

CS-Core-Membership: Given a pair ((cid:2), x), where x ∈ Qn, and (cid:2) is a partition of N, does ((cid:2), x) ∈ CS-core((cid:4))?
CS-Core-NonEmptiness: Does CS-core((cid:4)) (cid:15)= ∅ hold?
CS-CoS: Given a rational number (cid:5) ≥ 0, is CS-CoS((cid:4)) ≤ (cid:5)?
CS-LCV: Given a rational number ε, is CS-LCV((cid:4)) ≤ ε?

In particular, we also study the problems LCV−

, which are two specializations of CS-LCV where ε is constrained 
to be such that ε ≤ 0 and ε ≥ 0, respectively. Moreover, apart from the decision problems, we also study the following search 
problem:

and LCV+

CS-Core-Find: Find an element ((cid:2), x) ∈ CS-core((cid:4)) or decide that CS-core((cid:4)) = ∅.

Our analysis will be conducted on various classes of compact games identiﬁed by looking at the underlying interaction 
graphs. To this end, if G is a class of graphs and C(R) is a class of compact games, then we deﬁne CG (R) to be the subclass 
of all those games (cid:4) = (cid:6)N, v, G(cid:7) ∈ C(R) such that G ∈ G holds.

3.  Characterizing the graph-restricted core with coalition structures

In  this  section,  we  illustrate  analytical  characterizations  for  the  coalition  structure  core  and  for  the  related  stability 
concepts  discussed  in  Section 2.1.  These  characterizations  will  be  useful  in  the  sections  that  follow.  A  crucial  role  in  the 
analysis is played by the concept of the cohesive cover of a game.

Deﬁnition 3.1. Let (cid:4) = (cid:6)N, v, G(cid:7) be a structurally-restricted characteristic function game. The cohesive cover of (cid:4) is the game 
˜(cid:4) = (cid:6)N, ˜v, G(cid:7) such that  ˜v(C) = v(C), for each feasible coalition C ∈ F (G) \ {N}, and  ˜v(N) = SWopt((cid:4)). 
(cid:3)

Note that  ˜(cid:4) is such that  ˜v(N) ≥ SW((cid:2)), for each coalition structure (cid:2) ∈ CS(G). Hence, the grand-coalition always forms 

in  ˜(cid:4).

Example  3.2.  Consider  the  setting  of  Example 2.4 and  the  game  (cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, v
(cid:13)(cid:13), K4(cid:7),  by  recalling  that  (cid:2) =
{{1, 2, 3}, {4}} is the only coalition structure that attains the maximum social welfare, with SW((cid:2)) = 8. Its cohesive cover 
˜(cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, ˜v
(cid:13)(cid:13)(C), for each coalition 
(cid:13)(cid:13)({3}) =
C ⊂ {1, 2, 3, 4}. Therefore, we have that  ˜v
(cid:13)(cid:13)({1, 2}) = ˜v
(cid:13)(cid:13)({4}) = 1,  ˜v
˜v
(cid:2)

(cid:13)(cid:13)(C ∪ {4}) = 0, for each non-empty set C ⊂ {1, 2, 3},  ˜v

(cid:13)(cid:13), K4(cid:7) is then such that  ˜v

(cid:13)(cid:13)({1, 2, 3, 4}) = 0, while  ˜v

(cid:13)(cid:13)({1, 2, 3, 4}) = 8 > v

(cid:13)(cid:13)({2, 3}) = 5, and  ˜v

(cid:13)(cid:13)({1, 2, 3}) = 7. 

(cid:13)(cid:13)({1, 3}) = ˜v

(cid:13)(cid:13)({2}) = ˜v

(cid:13)(cid:13)({1}) = ˜v

(cid:13)(cid:13)(C) = v

The notion of cohesive cover is directly inspired by the deﬁnition of cohesive games [2], and it has been ﬁrstly formulated 
by Greenberg and Weber [30]. In fact, a game (cid:4) is cohesive whenever it coincides with its cohesive cover  ˜(cid:4).7 A similar no-

7 This is the natural extension of the concept of cohesive games deﬁned in the classic setting where the interaction graph is a complete graph, and hence 
where any coalition is a feasible one [2].

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

87

tion is the superadditive cover discussed in [21], which is the superadditive game deﬁned by the payoff function  ˆv such that, 
for each coalition C ⊆ N,  ˆv(C) is the maximum social welfare that can be attained over all the possible coalition structures 
built by agents in C . Interestingly, it is known that the superadditive cover can be used to characterize core-related solution 
concepts when coalition structures are allowed [21], but this is not useful to derive tight bounds in our complexity analysis, 
since building the superadditive cover requires to compute the social welfare over exponentially many coalitions.

Actually, similar characterizations are also known (or can be trivially derived from known results in the literature) when 
we just “cover” the grand-coalition (by the cohesive cover  ˜(cid:4)) rather than all the possible coalitions (as in the superadditive 
cover). Such characterizations for the cohesive cover are next illustrated.

3.1.  CS-CoS and CS-core characterizations

Firstly, we consider a characterization of the coalition structure cost of stability in terms of the standard cost of stability.

Fact 3.3. For any structurally-restricted characteristic function game (cid:4), CS-CoS((cid:4)) = CoS( ˜(cid:4)). In particular, if (cid:4) is cohesive, then 
CS-CoS((cid:4)) = CoS((cid:4)).

Note that, in the standard setting where all coalitions can form, the characterization is well-known, and it was explicitly 
stated by Meir et al. [39] for the superadditive cover (more precisely for the subadditive cover of cost-sharing games). The 
proof relies on results by Aumann and Dreze [21], and smoothly applies to the cohesive cover, since it just uses the property 
that the payoff associated with the grand-coalition in the given cover is the maximum social welfare of the original game.

In fact, a detailed proof of the characterization in the setting where all coalitions are feasible can be furthermore found 
in the work by Greco et al. [36]. Inspection of that proof reveals that the arguments apply even when some coalitions are 
not allowed to form (so Fact 3.3 is immediate). Indeed, this is not surprising because any structurally-restricted game can 
be transformed into an “equivalent” standard game (in that core constraints deﬁning the coalition structure core and the 
coalition structure cost of stability are the same), by just assigning to each infeasible coalition any value that is at most the 
sum of the values of all connected sub-components (see also [14]).

(cid:13)(cid:13), K4(cid:7) deﬁned  in  Example 3.2,  and  recall  from  Example 2.7 that 

Example  3.4.  Consider  the  game  ˜(cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, ˜v
CS-CoS((cid:4)(cid:13)(cid:13)) = 1
2 .

Then, based on Fact 3.3, we can derive that CoS( ˜(cid:4)(cid:13)(cid:13)) = 1

for which the following set of linear (in)equalities, characterizing the core of  ˜(cid:4)(cid:13)(cid:13)

2 . Indeed, it can be checked that (cid:5) = 1
(cid:5), admits a solution:

2 is the minimum value 

⎧
⎪⎪⎪⎨
⎪⎪⎪⎩

x1 + x2 + x3 + x4 = 8 + (cid:5)

x1 ≥ 1
x2 ≥ 1
x3 ≥ 1
x4 ≥ 1

x1 + x2 ≥ 5
x1 + x3 ≥ 5
x2 + x3 ≥ 5
x1 + x2 + x3 ≥ 7

In particular, for (cid:5) = 1

2 , the allocation (cid:6)x1, x2, x3, x4(cid:7) = (cid:6) 5

2 , 5

2 , 5

2 , 1(cid:7) is a solution. 

(cid:2)

We now move to illustrate a characterization of the coalition structure core based on the core of the cohesive covers. 
Again, the result is known for superadditive covers [21] where all coalitions are allowed to form and the proof immediately 
applies to cohesive covers. The extension to structurally-restricted games is trivial.

Fact 3.5. For any structurally-restricted characteristic function game (cid:4), CS-core((cid:4)) = CS-opt((cid:4)) × core( ˜(cid:4)). In particular, if (cid:4) is 
cohesive, then

(1) CS-core((cid:4)) = CS-opt((cid:4)) × core((cid:4));
(2) CS-core((cid:4)) = ∅ if, and only if, core((cid:4)) = ∅;
(3) x ∈ core((cid:4)) if, and only if, ({N}, x) ∈ CS-core((cid:4)).

Example 3.6. Consider the game (cid:4)(cid:13)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, v
in Example 2.4. So, we have that:  v
(cid:13)(cid:13)(cid:13)({3}) = v
(cid:13)(cid:13)(cid:13)({1, 2}) = v
(cid:13)(cid:13)(cid:13)({4}) = 1 − 1;  v
(cid:13)(cid:13)(cid:13)({2}) = v
v
(cid:13)(cid:13)(cid:13), K4(cid:7) denote the cohesive cover of (cid:4)(cid:13)(cid:13)(cid:13)
(cid:6){1, 2, 3, 4}, ˜v
only coalition structure in CS-opt((cid:4)(cid:13)(cid:13)(cid:13)).

(cid:13)(cid:13)(cid:13)({1, 2, 3, 4}) = 0;  v

(cid:13)(cid:13)(cid:13) = v

(cid:13)(cid:13)
−1, with  v

(cid:13)(cid:13)(cid:13), K4(cid:7) where  v

(cid:13)(cid:13)
(cid:13)(cid:13)(cid:13)(C ∪ {4}) = 0 − 1, for each non-empty set C ⊂ {1, 2, 3};  v

being the payoff function discussed 
(cid:13)(cid:13)(cid:13)({1}) =
(cid:13)(cid:13)(cid:13)({1, 2, 3}) = 7 − 1.  Let  ˜(cid:4)(cid:13)(cid:13)(cid:13) =
(cid:13)(cid:13)(cid:13)({1, 2, 3, 4}) = 6 and that (cid:2) = {{1, 2, 3}, {4}} is the 

(cid:13)(cid:13)(cid:13)({2, 3}) = 5 − 1;  and  v

(cid:13)(cid:13)(cid:13)({1, 3}) = v
, and note that  ˜v

Then, by Fact 3.5, we will conclude that CS-core((cid:4)(cid:13)(cid:13)(cid:13)) = {((cid:2), (cid:6)2, 2, 2, 0(cid:7))}, after checking that (cid:6)x1, x2, x3, x4(cid:7) = (cid:6)2, 2, 2, 0(cid:7)

is the only solution to the following set of (in)equalities, deﬁning the core of (cid:4)(cid:13)(cid:13)(cid:13)

:

88

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

x1 + x2 + x3 + x4 = v
x1 ≥ v
x2 ≥ v
x3 ≥ v
x4 ≥ v
x1 + x2 ≥ v
x1 + x3 ≥ v
x2 + x3 ≥ v

3.2.  CS-LCV characterization

(cid:13)(cid:13)
−1({4}) = (7 − 1) + (1 − 1) = 6

(cid:13)(cid:13)
−1({1, 2, 3}) + v
(cid:13)(cid:13)
−1({1}) = 1 − 1 = 0
(cid:13)(cid:13)
−1({2}) = 1 − 1 = 0
(cid:13)(cid:13)
−1({3}) = 1 − 1 = 0
(cid:13)(cid:13)
−1({4}) = 1 − 1 = 0
(cid:13)(cid:13)
−1({1, 2}) = 5 − 1 = 4
(cid:13)(cid:13)
−1({1, 3}) = 5 − 1 = 4
(cid:13)(cid:13)
−1({2, 3}) = 5 − 1 = 4

(cid:2)

Let us now analyze the least core value. In contrast to the case of the coalition structure cost of stability, it is not possible 
to end up with a simple (and in fact useful) closed-form characterization over arbitrary games. In particular, it is not the 
case that in general CS-LCV((cid:4)) = LCV( ˜(cid:4)).

Example 3.7. Consider the game (cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, v
that CS-LCV((cid:4)(cid:13)(cid:13)) = 1
3 .

Consider then the cohesive cover  ˜(cid:4)(cid:13)(cid:13) = (cid:6){1, 2, 3, 4}, ˜v

(cid:13)(cid:13), K4(cid:7) discussed in Example 2.4 and Example 2.5, and recall from there 

(cid:13)(cid:13), K4(cid:7) deﬁned in Example 3.2, and note that the value LCV( ˜(cid:4)(cid:13)(cid:13)) is 

the minimum value of ε for which the following set of (in)equalities admits a solution:

⎧
⎪⎪⎪⎨
⎪⎪⎪⎩

x1 + x2 + x3 + x4 = 8

x1 ≥ 1 − ε
x2 ≥ 1 − ε
x3 ≥ 1 − ε
x4 ≥ 1 − ε

x1 + x2 ≥ 5 − ε
x1 + x3 ≥ 5 − ε
x2 + x3 ≥ 5 − ε
x1 + x2 + x3 ≥ 7 − ε

x1 + x2 + x4 ≥ 0 − ε
x1 + x3 + x4 ≥ 0 − ε
x2 + x3 + x4 ≥ 0 − ε
x1 + x4 ≥ 0 − ε
x2 + x4 ≥ 0 − ε
x3 + x4 ≥ 0 − ε

Note that for ε = 1

5 , the payoff vector (cid:6)x1, x2, x3, x4(cid:7) = (cid:6) 12

5 , 12

5 , 12

5 , 4

5

(cid:7) is a solution. Therefore, LCV( ˜(cid:4)(cid:13)(cid:13)) < CS-LCV((cid:4)(cid:13)(cid:13)). 

(cid:2)

In fact, two properties that will be useful in our subsequent analysis are stated below.

Lemma 3.8. Let (cid:4) = (cid:6)N, v, G(cid:7) be a game, and let (cid:2) be a feasible coalition structure. If ((cid:2), x) is in CS-core(cid:2),-ε((cid:4)) with ε < 0, then

(1) (cid:2) ∈ CS-opt((cid:4));
(2) there is no (cid:2)(cid:13) ∈ CS-opt((cid:4)) such that (cid:2)(cid:13) (cid:15)= (cid:2).

(cid:2)

(cid:2)

Proof. Assume  that  ((cid:2), x) is  in  CS-core(cid:2),-ε((cid:4)).  By  Fact 3.5,  we  know  that  (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε).  Moreover,  by  construction 
(cid:13) /∈ (cid:2). 
(cid:13)) = v(C
of  v(cid:2),-ε , 
Hence,  if  (cid:2)(cid:13)
C∈(cid:2) v(cid:2),-ε(C) ≥
(cid:2)
(cid:13)). It follows that (cid:2) ∈ CS-opt((cid:4)). Moreover, the same chain of (in)equalities shows that any 
(cid:13)) holds. Therefore, 

C∈(cid:2) v(cid:2),-ε(C) =
is  a  feasible  coalition  structure  in  CS(G) with  (cid:2)(cid:13) (cid:15)= (cid:2),  then  we  get  that 
(cid:2)
(cid:13)) >

(cid:13)) holds,  for  each  feasible  coalition  C
C∈(cid:2) v(C) =
(cid:2)

feasible coalition structure (cid:2)(cid:13) (cid:15)= (cid:2) cannot be optimal, since the strict inequality 
we derive that (cid:2)(cid:13) /∈ CS-opt((cid:4)), for any feasible coalition structure (cid:2)(cid:13) (cid:15)= (cid:2). (cid:3)

C∈(cid:2) v(C) whereas  v(cid:2),-ε(C

(cid:13)) − ε > v(C

C (cid:13)∈(cid:2)(cid:13) v(cid:2),-ε(C

C∈(cid:2) v(C) >

C (cid:13)∈(cid:2)(cid:13) v(C

C (cid:13)∈(cid:2)(cid:13) v(C

(cid:2)

(cid:2)

(cid:2)

Lemma 3.9. Let (cid:4) = (cid:6)N, v, G(cid:7) be a game, and let ε < 0. Then, the least coalition structure core value of (cid:4) is at most ε if, and only if, 
(i) |CS-opt((cid:4))| = 1, and (ii) (cid:2) ∈ CS-opt((cid:4)) implies (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε) and CS-core((cid:4)(cid:2),-ε) (cid:15)= ∅.

Proof. Assume  there  is  an  element  ((cid:2), x) ∈ CS-core((cid:4)(cid:2),-ε).  Then,  CS-core((cid:4)(cid:2),-ε) (cid:15)= ∅ trivially  holds.  Moreover,  we  can 
apply  Lemma 3.8 and  derive  that  (i) holds,  with  (cid:2) being  in  particular  in  CS-opt((cid:4)).  Then,  by  Fact 3.5,  we  know  that 
(cid:2) ∈ CS-opt((cid:4)(cid:2),-ε) holds,  and  hence  (ii) holds,  too.  For  the  converse,  assume  that  (i) and  (ii) hold.  Let  (cid:2) be  the  unique 
coalition structure in CS-opt((cid:4)). By (ii) and Fact 3.5, an element of the form ((cid:2), x) is in CS-core((cid:4)(cid:2),-ε). (cid:3)

However, when moving to cohesive games it is possible to end up with the counterpart of Fact 3.3. The result is basically 
immediate, but the proof is reported in detail as it might be helpful to understand how the properties (and the analysis) of 
the least coalition structure core value are affected by its algebraic sign.

Theorem 3.10. Let (cid:4) = (cid:6)N, v, G(cid:7) be a cohesive game. Then, CS-LCV((cid:4)) = LCV((cid:4)).

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

89

Proof. We shall show that, for any real number ε, CS-LCV((cid:4)) ≤ ε if, and only if, LCV((cid:4)) ≤ ε, from which the claim follows. 
We distinguish two cases.

(Case ε ≥ 0) Assume that CS-LCV((cid:4)) ≤ ε. So, there is a pair ((cid:2), x) ∈ CS-core((cid:4)(cid:2),-ε). By the deﬁnition of the coalition struc-
ture core, we derive that: x(C) = v(C), ∀C ∈ (cid:2); and, x(C) ≥ v(C) − ε, ∀C ∈ F (G) \ (cid:2). In particular, since ε ≥ 0, we 
derive that  x(C) ≥ v(C) − ε, for each  C ∈ F (G). Moreover,  x(N) =
C∈(cid:2) v(C) ≤ v(N) holds, where 
the inequality follows because (cid:4) is cohesive. That is, the payoff vector x witnesses that the core of the game (cid:4)-ε is 
(cid:13)
(cid:13)
= x1 + (v(N) − x(N)). 
not empty. For instance, an element in core((cid:4)-ε) is x
with x
i
Therefore, LCV((cid:4)) ≤ ε.

(cid:13)
= xi , for each i ∈ N \ {1}, and x
1

C∈(cid:2) x(C) =

(cid:2)

(cid:2)

For the converse, assume that core((cid:4)-ε) is not empty, and let x be an element in core((cid:4)-ε). Given that (cid:4) is co-
hesive and that ε ≥ 0, we derive that {N} belongs to CS-opt((cid:4)-ε) and (cid:4)-ε = ˜(cid:4)-ε . Moreover, note that (cid:4)-ε = (cid:4){N},-ε . 
Therefore, by Fact 3.5, these expressions entail that ({N}, x) belongs to CS-core((cid:4){N},-ε). Hence, CS-LCV((cid:4)) ≤ ε.

(Case ε < 0) Assume that ((cid:2), x) ∈ CS-core((cid:4)(cid:2),-ε), so that CS-LCV((cid:4)) ≤ ε. By Lemma 3.8 and since (cid:4) is cohesive, we derive 

that (cid:2) = {N}. Thus, (cid:4)(cid:2),-ε = (cid:4)-ε holds, and we immediately get that x belongs to core((cid:4)-ε). That is, LCV((cid:4)) ≤ ε.

For the converse, assume that LCV((cid:4)) ≤ ε, and in particular that x is an element in core((cid:4)-ε). First, it can be 
trivially observed that {N} belongs to CS-opt((cid:4)-ε). Indeed, by contradiction, if there is a feasible coalition structure 
(cid:2) (cid:15)= {N} such that 
C∈(cid:2) v-ε(C) > v(N), 
which is impossible. By Fact 3.5, we hence get that ({N}, x) belongs to CS-core((cid:4)-ε). Since (cid:4)-ε = (cid:4){N},-ε , we derive 
CS-LCV((cid:4)) ≤ ε. (cid:3)

C∈(cid:2) v-ε(C) > v-ε(N) = v(N), then we derive that x(N) =

C∈(cid:2) x(C) ≥

(cid:2)

(cid:2)

(cid:2)

4.  Computing stable conﬁgurations: games over complete graphs

Given the characterization results of the previous section, we can now start our analysis by considering games deﬁned 
over  the  class  of  complete  interaction  graphs,  so  that  any  coalition  is  a  feasible  one.  Let  Kn denote  the  complete  graph 
on  n nodes,  and  let  K be  the  class  of  all  such  complete  graphs.  Note  that  this  is  the  classic  setting  considered  in  the 
literature. However, the picture emerging from earlier works is far from being complete. Indeed, very often, such works do 
not consider solution concepts speciﬁcally designed for games with coalition structures, but they tacitly assume that the goal 
is to distribute the total payoff available to the grand-coalition. Even further, several complexity results have been obtained 
either for very speciﬁc classes of games or for speciﬁc encodings (i.e., P-representations). Here, we provide a more complete 
and ﬁner-grained picture, by studying characteristic functions that lead to either superadditive or non-superadditive games. 
In particular, note that while the hardness results we shall illustrate are speciﬁc for games deﬁned over complete interaction 
graphs, membership results are instead more general and they will be shown to hold over any class of interaction graphs.

4.1.  Arbitrary games

The  complexity  of  solution  concepts  in  the  presence  of  coalition  structures  has  been  investigated  by [42],  which  is 
up  to  now  our  main  source  of  knowledge  about  this  setting.  The  authors  considered  weighted voting games as  a  speciﬁc 
compact  P-representation  scheme,  and  they  observed  that  CS-Core-NonEmptiness and  CS-Core-Membership are  NP-hard 
and co-NP-complete problems over them, respectively. Since these problems are feasible in polynomial time over weighted 
voting games without considering coalition structures, the results evidence that coalition structures provide an additional 
source of complexity to solution concepts. Note that an “upper bound” (i.e., a non-trivial membership result in some com-
plexity class) for the non-emptiness problem was missing in [42], and looked for. Moreover, no analysis has been conducted 
for core-related concepts (different from the core itself), and over arbitrary classes of compact games.

In the rest of the section, we reconsider these problems, by providing membership results that hold on any P-represen-
tation R and even on core-related solution concepts. Note that the characterizations discussed in Section 3 greatly simplify 
the analysis.

We start by observing that the problems CS-CoS and CS-Core-NonEmptiness belong to the complexity class (cid:2)P

2 consist-
ing of all decision problems that can be solved in polynomial time by exploiting NP oracles, i.e., non-deterministic Turing 
machines  whose  invocations  are  assumed  to  have  unitary  cost.  The  counterpart  of  (cid:2)P
2 over  search  problems,  rather  than 
2 . Note that NP ⊆ (cid:2)P
decision ones, is denoted by F(cid:2)P
2 hold, with the inclusions being believed to be strict.8

2 and co-NP ⊆ (cid:2)P

Theorem 4.1. Let R be any compact P-representation, and let G be any class of graphs (e.g., G = K). On the class CG (R), the problems 
CS-CoS and CS-Core-NonEmptiness belong to (cid:2)P
2 .

Proof. Let us focus on the problem CS-CoS. We are given a game encoding ξ R((cid:4)), and a rational number (cid:5) ≥ 0, and we 
have to decide whether CS-CoS((cid:4)) ≤ (cid:5).

By  Fact 3.3,  we  know  that  CS-CoS((cid:4)) = CoS( ˜(cid:4)).  Moreover,  CoS( ˜(cid:4)) ≤ (cid:5) holds  if,  and  only  if,  the  core  of  ˜(cid:4)(cid:5) is  not 
empty.  Since  checking  the  non-emptiness  of  the  core  (when  all  coalitions  are  feasible  ones)  is  in  co-NP [44],  the  proof 

8 For expanding on concepts about complexity theory, the reader is referred to [43].

90

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

(cid:2)

(cid:2)

(cid:13)(C) =

basically reduces to show that the value  SWopt((cid:4)), whose knowledge is required to deﬁne the payoff associated with the 
grand-coalition in  ˜(cid:4)(cid:5), can be computed in polynomial time by exploiting an NP oracle. Further technical ingredients will 
be  eventually  put  in  place  in  order  to  reduce  the  setting  where  some  coalitions  are  not  feasible  to  the  setting  where  all 
coalitions are allowed to form, and in order to properly deal with arbitrary compact P-representations.

Let  ˜(cid:4)(cid:5) be the game (cid:6)N, ˜v(cid:5), G(cid:7) with G ∈ G, and deﬁne (cid:4)(cid:13) = (cid:6)N, v

(cid:13)(C) =
˜v(cid:5)(C), for each coalition in F (G) (in particular note that {i} ∈ F (G) holds, for each i ∈ N); and v
i∈C v({i}), for each 
coalition C /∈ F (G). Note that  Kn over which (cid:4)(cid:13)
is deﬁned denotes a complete interaction graph; and, moreover, the core of 
˜(cid:4)(cid:5) is not empty if, and only if, the core of (cid:4)(cid:13)
is not empty. Indeed, it is immediate to check that core((cid:4)(cid:13)) ⊆ core( ˜(cid:4)(cid:5)), given 
that F (G) ⊆ F (Kn) and that the payoff functions of the two games coincide over coalitions in F (G). Moreover, note that if 
x ∈ core( ˜(cid:4)(cid:5)), then xi ≥ v({i}) = v
(cid:13)({i}) holds, for each i ∈ N, because {i} is in F (G). Hence, given a coalition C /∈ F (G), we 
have that x(C) =

(cid:13), Kn(cid:7), with N = {1, . . . , n}, as the game where  v

In the light of the above observation, the strategy is to ﬁrst build (an encoding for) the game (cid:4)(cid:13)

. To this end, consider 
deﬁned as follows. For each game (cid:4) ∈ CG (R) and for each rational number (cid:5) ≥ 0, C(R(cid:13)) contains 
( ˜(cid:4)(cid:5)) consists of the encoding of (cid:4) plus (a standard encoding for) the values SWopt((cid:4)) and (cid:5). 
R(ξ R((cid:4)), C),  for  each 
R(ξ R((cid:4)), {i}),  for  each  coalition  C ⊂ N with  C /∈ F (G);  and 
((cid:4)(cid:13)), N) = SWopt((cid:4)) + (cid:5) (in  fact,  N is  in  F (G),  because  we  assume  that  interaction  graphs  are  connected).  Note 
R(ξ R((cid:4)), N) can  be  computed  in  polynomial  time  given  the  encoding  ξ R((cid:4)), 
is  a  P-representation,  because  v
((cid:4)(cid:13)),  and  because  SWopt((cid:4)) and  (cid:5) are  also  part  of  this  encoding.  However,  in  order 
,  we  need  to  compute  the  value  SWopt((cid:4)),  which  is  not  immediately  available  in  the  input 
2 —recall that, for the sake of readability, proofs of 

the representation R(cid:13)
the game (cid:4)(cid:13)
No  further  game  is  in  C(R(cid:13)).  Moreover,  for  each  game  (cid:4)(cid:13) ∈ C(R(cid:13)),  we  deﬁne  v
(ξ R(cid:13)
coalition  C ⊂ N with  C ∈ F (G);  v
(ξ R(cid:13)
R(cid:13)
v
that  R(cid:13)
which  is  a  part  of  the  encoding  ξ R(cid:13)
to  build  (the  encoding  for)  (cid:4)(cid:13)
ξ R((cid:4)). We now claim that the computation of SWopt((cid:4)) is feasible in F(cid:2)P
claims are reported in Appendix A.

such that ξ R(cid:13)

i∈C v({i}) = v

((cid:4)(cid:13)), C) = v

((cid:4)(cid:13)), C) =

i∈C xi ≥

(ξ R(cid:13)

(cid:13)(C).

i∈C v

(cid:2)

(cid:2)

R(cid:13)

R(cid:13)

Claim 4.2. Let R be any compact P-representation, and let G be any class of graphs. On the class CG(R), computing the maximum 
social welfare and an optimal coalition structure is feasible in F(cid:2)P
2 .

So, we know that by using an NP oracle, we can build in polynomial time the (encoding for the) game (cid:4)(cid:13)

, which belongs 
to the class C(R(cid:13)) with R(cid:13)
being a P-representation. Eventually, it just remains to be checked whether core((cid:4)(cid:13)) is empty. For 
this latter check, we notice that we are now considering the standard notion of core, and a class of compact games C(R(cid:13))
where all coalitions are feasible ones. In this setting, the non-emptiness of the core is known to be feasible in co-NP [44]. 
Thus,  by  means  of  a  further  call  to  an  oracle  checking  whether  core( ˜(cid:4)(cid:5)) is  empty,  we  are  able  to  overall  solve  CS-CoS
in (cid:2)P
2 is immediate, as the problem just reduces to CS-CoS
by considering the cost (cid:5) = 0. (cid:3)

2 . Given this result, the fact that CS-Core-NonEmptiness is in (cid:2)P

We  now  move  to  the  problems  related  to  the  least  coalition  structure  core.  In  the  statement  below,  we  refer  to  the 
2 consisting of all the decision problems that can be solved in polynomial time by a non-deterministic 

complexity class (cid:3)P
Turing machine using NP oracles with unitary cost.

Theorem 4.3. Let R be any compact P-representation, and let G be any class of graphs (e.g., G = K). On the class CG(R), the problems 
CS-LCV and CS-LCV−

belong to (cid:3)P

2 and (cid:2)P

2 , respectively.

Proof. Consider ﬁrst the general problem CS-LCV. Given a rational number ε, we have to decide whether there is a feasible 
coalition  structure  (cid:2) such  that  there  is  a  pair  of  the  form  ((cid:2), x) in  CS-core((cid:4)(cid:2),-ε).  The  problem  can  be  solved  by  a 
non-deterministic  Turing  machine  that  ﬁrst  guesses  (in  NP)  a  feasible  coalition  structure  (cid:2).  Given  (cid:2) and  ε,  we  observe 
that (cid:4)(cid:2),-ε can be speciﬁed in compact form, via a P-representation, say R(cid:13)(cid:13)
, by using the approach detailed in the proof 
of Theorem 4.1. Thus, the machine deals with a game speciﬁed in compact form and, according to Fact 3.5, it has then to 
check that:

(1) (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε);
(2) core( ˜(cid:4)(cid:2),-ε) (cid:15)= ∅.

Concerning  (1),  we  consider  the  problem  of  checking  the  complementary  condition  that  (cid:2) is  not  optimal  for  (cid:4)(cid:2),-ε . 
This problem can be solved by an NP oracle that guesses a feasible coalition structure  ¯(cid:2) and then checks that  v(cid:2),-ε( ¯(cid:2)) >
v(cid:2),-ε((cid:2)) holds.

Now, observe that if condition (1) holds, then the machine can proceed to build the game  ˜(cid:4)(cid:2),-ε by just noticing that 
the  value  associated  with  the  grand-coalition  is  precisely  SW opt((cid:4)(cid:2),-ε) = v(cid:2),-ε((cid:2)).  Therefore,  (2)  is  reduced  to  checking 
whether  the  core  of  a  given  game  (speciﬁed  in  compact  form)  is  not  empty.  By  following  the  same  line  of  reasoning  as 
in the proof of Theorem 4.1, we conclude that this task is feasible in co-NP (and hence we can use an oracle solving the 
complementary problem).

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

91

By  putting  it  all  together,  we  have  then  shown  that  CS-LCV can  be  solved  in  polynomial  time  by  a  non-deterministic 

Turing machine using NP oracles. Hence, the problem belongs to (cid:3)P
2 .

Let  us  now  move  to  the  problem  CS-LCV−

.  The  case  ε = 0 trivially  reduces  to  CS-Core-NonEmptiness,  and  hence  can 
be  solved  in  polynomial  time  with  the  use  of  NP oracles.  We  show  that  this  also  holds  for  the  case  ε < 0.  Consider  an 
C∈(cid:2) v(C) = SWopt((cid:4)), 
algorithm  that  ﬁrstly  computes  the  value  SWopt((cid:4)) and  a  coalition  structure  (cid:2) witnessing  that 
which is feasible in F(cid:2)P

Now, because of Lemma 3.8 and since we know that (cid:2) ∈ CS-opt((cid:4)) holds, it eventually remains to show that there is 
a pair of the form ((cid:2), x) in CS-core((cid:4)(cid:2),-ε). The task can be faced as discussed in the points (1) and (2) above, and hence 
again in polynomial time with the help of an NP oracle. It follows that CS-LCV−

is in (cid:2)P

2 by Claim 4.2.

(cid:2)

2 . (cid:3)

We next show that the above results are tight over games with complete interaction graphs, even on the class of games 

deﬁned via marginal contribution networks.

Hardness results are established by reductions that refer to Boolean formulas. The following notation is hereinafter used 
with them. For any Boolean formula (cid:7), we denote by vars((cid:7)) the set of all its variables. For any set  S, we denote by σ (S)
the truth assignment where  X ∈ vars((cid:7)) is true if, and only if,  X occurs in  S. Moreover, we denote by σ (S) |= (cid:7) the fact 
that  σ (S) satisﬁes  (cid:7),  i.e.,  that  σ (S) is  a  satisfying  truth  assignment  for  (cid:7).  A  literal  is  either  a  variable  X or  a  negated 
variable ¬ X . For a variable  X (resp., negated variable ¬ X ), we denote by  ¯X (resp., ¬ X ) the literal ¬ X (resp.,  X ).

We start with the hardness results for (cid:2)P
2 .

Theorem 4.4. On the class CK(mcn) of games encoded via marginal contribution networks, the problems CS-CoS, CS-Core-Non-
Emptiness, and CS-LCV−

are (cid:2)P

2 -hard.

Proof. Let  (cid:7) be  a  satisﬁable Boolean  formula  over  the  variables a1, . . . , an.  In  particular,  assume  that  (cid:7) is  in  conjunctive 
normal form (CNF), i.e., (cid:7) = c1 ∧ · · · ∧ cm, where each clause c j ,  j ∈ {1, . . . , m}, is a disjunction of literals  y j,1 ∨ · · · ∨ y j,m j . 
Moreover,  assume  a  variable  ordering  such  that  ai is  less  signiﬁcant  than  a j
if,  and  only  if,  i < j.  This  ordering  induces 
a  lexicographical  ordering  over  truth  assignments  for  (cid:7).  Deciding  whether  a1 is  true  in  the  lexicographically  maximal 
satisfying assignment σ ∗

of (cid:7) is (cid:2)P

Based on (cid:7), we build in polynomial time a structurally-restricted characteristic function game (cid:4)((cid:7)) ∈ CK(mcn) whose 
encoding ξ mcn((cid:4)((cid:7))) is deﬁned by the MC-net over the variables/agents in  N = vars((cid:7)) ∪ {an+1, an+2, an+3, an+4} with the 
rules:

2 -complete [45].

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

{an+4 ∧ ¬an+1 ∧ ¬an+2 ∧ ¬an+3 ∧ ai} → 2i, ∀i ∈ {1, . . . , n}
{an+4 ∧ an+1 ∧ an+2 ∧ an+3 ∧ ai} → 2i, ∀i ∈ {1, . . . , n}
{an+4 ∧ an+1 ∧ an+2 ∧ an+3 ∧ a1} → 1

{¬an+4 ∧ an+1 ∧ an+2 ∧ an+3 ∧
{¬an+4 ∧ ¬an+1 ∧ an+2 ∧ an+3 ∧
{¬an+4 ∧ an+1 ∧ ¬an+2 ∧ an+3 ∧
{¬an+4 ∧ an+1 ∧ an+2 ∧ ¬an+3 ∧

(cid:8)
n
i=1
(cid:8)
n
i=1
(cid:8)
n
i=1
(cid:8)
n
i=1

¬ai} → 2/3
¬ai} → 2/3
¬ai} → 2/3
¬ai} → 2/3

{an+4 ∧ ¬an+1 ∧ ¬an+2 ∧ ¬an+3 ∧ ¯y j,1 ∧ · · · ∧ ¯y j,m j
{an+4 ∧ an+1 ∧ an+2 ∧ an+3 ∧ ¯y j,1 ∧ · · · ∧ ¯y j,m j

{an+4 ∧ an+1 ∧ an+2 ∧ an+3 ∧ ¬a1} → −2 −
} → −2 −
} → −2 −

(cid:2)
n
i=1 2i
(cid:2)
i=1 2i, ∀ j ∈ {1, . . . , m}
n
(cid:2)
i=1 2i, ∀ j ∈ {1, . . . , m}
n

Note that, according to the deﬁnition of the payoff function v mcn for marginal contribution networks, v mcn(ξ mcn((cid:4)((cid:7))), C)
(cid:2)
≤
i=1 2i + 1 holds, for each coalition  C ⊆ N. Hence, whenever one of the above three last (groups of) rules applies to a 
n
given  C ,  its  associated  payoff  is  a  negative  value.  In  particular,  note  that  the  two  last  (groups  of)  rules  can  apply  to 
a  coalition  C only  if  the  truth  assignment  associated  with  C does  not  satisfy  one  of  the  m clauses  in  (cid:7),  i.e.,  only  if 
σ (C \ {an+1, an+2, an+3, an+4}) |= (cid:7) does  not  hold.  With  the  above  observations  in  place,  one  can  check  that  the  payoff 
function, henceforth denoted as v given that the representation scheme is understood, is such that:

⎧

⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

(cid:2)

if C = {an+4} ∪ S, S ⊆ {a1, . . . , an}, and σ (S) |= (cid:7)

w(S),
w(S) + 1, if C = {an+1, an+2, an+3, an+4} ∪ S, σ (S) |= (cid:7), and a1 ∈ S
2/3,

if C ⊆ {an+1, an+2, an+3} and |C| ≥ 2
if |C| = 1, with C (cid:15)= {an+4}
otherwise,

0,
≤ 0,
ai ∈S 2i . In particular, note that v(C) = 0, for each C ⊆ {a1, . . . , an}.

v(C) =

where  w(S) =
Let  S

∗ ⊆ {a1, . . . , an} be  the  coalition  such  that  σ (S

∗) = σ ∗

.  Given  the  above  expression  for  the  payoff  function,  the 

following two properties are easily seen to hold.

92

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

structure (cid:2)∗

Property 4.4.1 Assume that a1 evaluates true in the lexicographically maximal satisfying assignment of (cid:7). Then, the coalition 
as a singleton is in CS-opt((cid:4)((cid:7))).
Property 4.4.2 Assume that a1 evaluates false in the lexicographically maximal satisfying assignment of (cid:7). Then, the coali-
as a singleton is an optimal 

∗ ∪ {an+1, an+2, an+3, an+4}, plus each agent in {a1, . . . , an} \ S

∗ ∪{an+4}, {an+1, an+2, an+3}, and each agent in {a1, . . . , an} \ S

t including S

∗

∗

tion structure (cid:2)∗
f including S
coalition structure, i.e., it is in CS-opt((cid:4)((cid:7))).

Let  ˜(cid:4) be  the  cohesive  cover  of  (cid:4)((cid:7)) deﬁned  over  the  function  ˜v.  By  Fact 3.5,  we  known  that  CS-core((cid:4)((cid:7))) (cid:15)= ∅ if, 
2 -hard by showing that core( ˜(cid:4)) (cid:15)= ∅ if, and only if, 

and only if, core( ˜(cid:4)) (cid:15)= ∅. So, we prove that CS-Core-NonEmptiness is (cid:2)P
a1 ∈ S

∗

:

(⇐) Assume that a1 ∈ S

∗

, so that (cid:2)∗
t

∗) + 1 and  ˜v(N) = w(S

is an optimal coalition structure (cf. Property 4.4.1). In particular, we have SW((cid:2)∗

t ) =
∗), xn+1 = xn+2 = xn+3 =
∗) + 1 holds. Consider then the allocation x such that xn+4 = w(S
w(S
1/3,  and  xi = 0,  for  any  other  agent.  Note  that  x(N) = ˜v(N).  Moreover,  we  claim  that  x belongs  to  the  core  of  ˜(cid:4). 
∗) ≥ v(C) = ˜v(C); for 
Indeed, for each coalition C ⊂ N such that an+4 ∈ C and |{an+1, an+2, an+3} ∩ C| ≤ 2, x(C) ≥ w(S
∗) + 1 ≥ v(C) = ˜v(C); for each coalition 
each coalition C ⊂ N such that an+4 ∈ C and C ⊇ {an+1, an+2, an+3}, x(C) ≥ w(S
C ⊂ N such  that  {an+1, an+2, an+3} ⊇ C and  |C| ≥ 2,  x(C) = |C| × 1/3 ≥ 2/3 ≥ v(C) = ˜v(C);  and  for  each  remaining 
coalition C , x(C) ≥ 0 ≥ v(C) = ˜v(C).

∗) + 2/3 and  ˜v(N) = w(S

w(S
Then, we have x(N) = w(S
since x(C) ≥ 2/3 = ˜v(C) = v(C) must hold, for each C ⊆ {an+1, an+2, an+3} such that |C| ≥ 2.

is an optimal coalition structure (cf. Property 4.4.2). In particular, we have SW((cid:2)∗
f ) =
∗) + 2/3. Assume, for the sake of contradiction, that x is an allocation in the core of  ˜(cid:4). 
∗). Therefore, xn+1 + xn+2 + xn+3 ≤ 2/3, which is impossible 

∗ ∪ {an+4}) ≥ w(S

∗) + 2/3 and x(S

, so that (cid:2)∗
f

∗

(⇒) Assume that a1 /∈ S

To conclude, we observe that for any given game (cid:4), checking CS-CoS((cid:4)) ≤ 0 and CS-LCV((cid:4)) ≤ 0 are both equivalent to 

check that CS-core((cid:4)) (cid:15)= ∅. Therefore, (cid:2)P

2 -hardness for CS-CoS and CS-LCV follows by the above result. (cid:3)

In the above proof, it is instructive to observe that the source of complexity of the basic CS-Core-NonEmptiness problem 
is  related  to  the  need  of  reasoning  about  optimal  coalition  structures  (cf.  Property 4.4.1 and  Property 4.4.2).  In  fact,  by 
inspecting  the  proof,  we  can  observe  that  the  optimal  social  welfare  in  the  game  (cid:4)((cid:7)) is  an  integer  value  (having  the 
form  w(S
. This immediately implies that the bound provided in Claim 4.2 is tight, as we 
formalize below.

∗) + 1) if, and only if, a1 is in  S

∗

Theorem 4.5. On the class CK(mcn) of games encoded via marginal contribution networks, computing the maximum social welfare is 
(cid:2)P

2 -hard.

The picture of the hardness results corresponding to the membership results in Theorem 4.3 is completed below. Recall 
that CS-LCV+
is the restriction of CS-LCV where the rational number ε is constrained to be non-negative. Formally, given 
ε ≥ 0, CS-LCV+
asks whether there is a feasible coalition structure (cid:2) such that  CS-core((cid:4)(cid:2),-ε) contains an imputation of 
the form ((cid:2), x). To analyze this problem, note that even if a feasible coalition structure (cid:2) was given in advance, checking 
whether  CS-core((cid:4)(cid:2),-ε) is  not  empty  would  be  still  co-NP-hard  (this  easily  follows  from  the  co-NP-hardness  of  checking 
whether  the  core  is  not  empty  for  games  speciﬁed  as  marginal  contribution  networks [25]).  Of  course,  (cid:2) is  not  actually 
provided,  and  has  to  be  identiﬁed  out  of  all  possible  feasible  coalition  structures  (or  we  have  to  decide  that  no  feasible 
coalition structure of that kind exists). This provides a basic source of NP-hardness on top of which the above co-NP-hard 
2 -hard  problem.  In  fact,  we  have  observed  that  whenever  ε ≤ 0 holds,  the  two  sources  of 
task  is  deﬁned,  leading  to  a  (cid:3)P
complexity do not interplay (cf. proof of Theorem 4.3), so that more favorable complexity results have been obtained.

Theorem 4.6. On the class CK(mcn) of games encoded via marginal contribution networks, CS-LCV+

(and, hence, CS-LCV) is (cid:3)P

2 -hard.

Proof. Let (cid:7) = c1 ∧ · · · ∧ cm be a Boolean (CNF) formula over the variables a1, . . . , an, b1, . . . , b(cid:9), where c j = y j,1 ∨ · · · ∨ y j,k j , 
for  each  j ∈ {1, . . . , m}.  Consider  the  problem  ∃∀CNF-UNSAT of  deciding  whether  there  is  an  assignment  σ a over  N∃ =
{a1, . . . , an} (the set of “existentially” quantiﬁed variables) such that, for each assignment σ b over N∀ = {b1, . . . , b(cid:9)} (the set 
of “universally” quantiﬁed variables), σ a (cid:25) σ b does not satisfy (cid:7), where σ a (cid:25) σ b is the truth assignment for the whole set 
of variables in (cid:7) agreeing with σ a and σ b on their respective domains. This is a well-known (cid:3)P
2 -complete problem—in fact, 
the complementary problem of deciding whether there is no such an assignment is the prototypical hard problem for the 
complementary complexity class (cid:4)P

We shall show that ∃∀CNF-UNSAT can be reduced to CS-LCV+

. In particular, we shall restrict ourselves to certain kinds of 
Boolean functions only. To state the restriction more formally, for any truth assignment σ , let  ¯σ denote the truth assignment 
that is complementary w.r.t. σ , i.e.,  ¯σ ( X) is true if, and only if, σ ( X) is false.

2 [43].

Claim 4.7. ∃∀CNF-UNSAT is (cid:3)P
existentially and universally quantiﬁed variables of (cid:10), respectively, σ a (cid:25) σ b |= (cid:10) if, and only if, σ a (cid:25) ¯σ b |= (cid:10).

2 -hard even restricted to formulas (cid:10) such that, for each pair of assignments σ a and σ b over the 

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

93

According  to  the  above  result,  the  formula  (cid:7) provided  as  input  over  the  variables  in  the  sets  N∃ and  N∀ is  assumed, 
w.l.o.g., to be such that: σ a (cid:25) σ b |= (cid:7) if, and only if, σ a (cid:25) ¯σ b |= (cid:7). Based on (cid:7) (which will be omitted from the notation, as 
{ai, ˆai} ∪
it is understood), we deﬁne a game over the set N =
For  any  set  C ⊆ N of  agents,  we  say  that  C is  ∃-consistent (resp.,  ∀-consistent)  if  |C ∩ {ai, ˆai}| = 1 holds,  for  each  i ∈
{1, . . . , n} (resp.,  |C ∩ {bi, ˆbi}| = 1 holds,  for  each  i ∈ {1, . . . , (cid:9)}).  Moreover,  we  denote  by  ˆC the  set  {ˆz | z ∈ C} ∪ {z | ˆz ∈ C}. 
Let ε ≥ 0 be a rational number whose value will be later speciﬁed. Then, consider the structurally-restricted characteristic 
function game (cid:4)∃∀ = (cid:6)N, v, K|N|(cid:7) such that N = {r} ∪ N∃ ∪ ˆN∃ ∪ N∀ ∪ ˆN∀ and where v satisﬁes the following:

{b j, ˆb j} ∪ {r} of agents9 as follows.

(cid:7)
(cid:9)
j=1

(cid:7)
n
i=1

⎧

⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

v(C) =

if r ∈ C, C ∩ (N∀ ∪ ˆN∀) = ∅, and C is ∃-consistent

1,
ε + ε/n, if r /∈ C, C is ∃- and ∀-consistent and, σ (C) |= (cid:7)
0,

if r /∈ C, C ∩ (N∃ ∪ ˆN∃) = ∅, and C ⊇ N∀ ∪ ˆN∀
if r /∈ C, C ∩ (N∀ ∪ ˆN∀) = ∅, and C is ∃-consistent

0,
≤ −|N|, otherwise

Claim 4.8. Assume that ε = 1

3 . Then, CS-opt((cid:4)∃∀

(cid:2),-ε) = {{ A ∪ {r}, ˆA, N∀ ∪ ˆN∀} | A ⊆ N∃ ∪ ˆN∃ is ∃-consistent}.

Our goal is now to show that it is (cid:3)P

3 at 
most. To this end, recall that CS-LCV((cid:4)) ≤ ε holds if, and only if, there is a pair ((cid:2), x) in CS-core((cid:4)∃∀
(cid:2),-ε). Given Claim 4.8
and Fact 3.5, we can restrict ourselves to coalition structures (cid:2) A = { A ∪ {r}, ˆA, N∀ ∪ ˆN∀}, where  A ⊆ N∃ ∪ ˆN∃ is ∃-consistent. 
In particular, we show the desired result by proving that there is a ∃-consistent set  A ⊆ N∃ ∪ ˆN∃ with CS-core((cid:4)∃∀
(cid:2) A ,-ε) (cid:15)= ∅
if, and only if, there is an assignment σ a over N∃ such that, for each assignment σ b over N∀, σ a (cid:25) σ b (cid:15)|= (cid:7).

2 -hard to decide whether the least coalition structure core value of (cid:4)∃∀

is ε = 1

(⇐) Assume there is an assignment σ a over N∃ such that, for each assignment σ b over N∀, σ a (cid:25) σ b (cid:15)|= (cid:7). Let  A ⊆ N∃ ∪ ˆN∃
be  the  ∃-consistent  set  such  that  σ ( ˆA) = σ a—recall  that,  for  any  set  S,  we  denote  by  σ (S) the  truth  assignment 
where  X ∈ vars((cid:7)) is  true  if,  and  only  if,  X occurs  in  S.  Moreover,  consider  the  payoff  vector  x such  that:  x({r}) =
1 − ε;  x({z}) = ε/n,  for  each  z ∈ A;  and  x({z}) = 0,  for  each  z ∈ N \ ( A ∪ {r}).  We  now  show  that  ((cid:2) A, x) belongs 
to  CS-core((cid:4)∃∀
z∈ A x({z}) =
(cid:2) A ,-ε). To this end, observe ﬁrst that the following inequalities hold:  x( A ∪ {r}) = x({r}) +
1 = v( A ∪ {r}) = v(cid:2) A ,-ε( A ∪ {r});  x( ˆA) = 0 = v( ˆA) = v(cid:2) A ,-ε( ˆA); and  x(N∀ ∪ ˆN∀) = 0 = v(N∀ ∪ ˆN∀) = v(cid:2) A ,-ε(N∀ ∪ ˆN∀). 
Moreover,  x({z}) ≥ 0 ≥ v({z}) ≥ v(cid:2) A ,-ε({z}) holds,  for  each  z ∈ N.  Hence,  x is  an  imputation  for  (cid:2) A .  It  remains  to 
show that x is stable, in that x(C) ≥ v(cid:2) A ,-ε(C) holds, for each C ⊆ N. Since x(C) ≥ 0, we focus below on the two only 
possible kinds of coalitions C such that v(cid:2) A ,-ε(C) > 0.
(1) Consider ﬁrst a coalition C such that r ∈ C , C ∩ (N∀ ∪ ˆN∀) = ∅, and with C being ∃-consistent. If C = A ∪ {r}, then 
we  already  know  that  x(C) = v(cid:2) A ,-ε(C).  If  C (cid:15)= A ∪ {r} holds,  then  v(cid:2) A ,-ε(C) = 1 − ε.  In  fact,  x({r}) = 1 − ε and 
hence x(C) ≥ x({r}) = 1 − ε = v(cid:2) A ,-ε(C).

(cid:2)

(⇒) Consider an element in CS-core((cid:4)∃∀

(2) Consider  now  any  coalition  C such  that  r /∈ C and  such  that  C is  both  ∃-consistent  and  ∀-consistent.  Note  that 
v(cid:2) A ,-ε(C) = v(C) − ε and,  hence,  that  v(cid:2) A ,-ε(C) > 0 (in  particular,  v(cid:2) A ,-ε(C) = ε/n)  if,  and  only  if,  σ (C) |= (cid:7). 
We have now two sub-cases. If C ∩ A (cid:15)= ∅, then x(C) ≥ ε/n ≥ v(cid:2) A ,-ε(C) trivially holds. So, assume that C ∩ A = ∅. 
In this case,  x(C) = 0 holds and  ˆA ⊆ C . Now recall that σ ( ˆA) = σ a holds, by construction of  ˆA, and deﬁne σ b =
σ (C ∩ (N∀ ∪ ˆN∀)). Then, observe that σ (C) = σ a (cid:25) σ b and we know by hypothesis that σ a (cid:25) σ b (cid:15)|= (cid:7). Therefore, 
v(cid:2) A ,-ε(C) < 0 and we have x(C) = 0 > v(cid:2) A ,-ε(C).

(cid:2) A ,-ε), and recall that it must have the form ((cid:2) A , x). By deﬁnition of the coalition 
structure  core,  we  know  that  x( A ∪ {r}) = 1,  x( ˆA) = 0,  and  x(N∀ ∪ ˆN∀) = 0.  Moreover,  x(C) ≥ v(cid:2) A ,-ε(C) = v(C) − ε
holds,  for  each  coalition  C .  Let  B ⊆ N∀ ∪ ˆN∀ be  any  ∀-consistent  set.  Then,  we  get:  x( ˆA ∪ B) = x(B) ≥ v( ˆA ∪ B) − ε
and x( ˆA ∪ ˆB) = x( ˆB) ≥ v( ˆA ∪ ˆB) − ε. Assume now, for the sake of contradiction, that σ ( ˆA) (cid:25) σ (B) |= (cid:7). Because of our 
assumption based on Claim 4.7, we also know that σ ( ˆA) (cid:25) σ ( ˆB) |= (cid:7). Therefore, we have x(B) ≥ ε/n and x( ˆB) ≥ ε/n, 
which is impossible since x(B ∪ ˆB) = x(N∀ ∪ ˆN∀) = 0. By noticing that σ (B) ranges over all possible truth assignments 
for the variables in N∀, σ a = σ ( ˆA) therefore witnesses that for each assignment σ b over N∀, σ a (cid:25) σ b (cid:15)|= (cid:7).

The last step of the proof is to show that the payoff function  v associated with the game (cid:4)∃∀

can be actually encoded 
(in polynomial time) in terms of a marginal contribution network. To this end, consider ﬁrst the following (sets of) rules, 
where M is a suﬃciently large positive value (e.g., greater than 2 × |N|):

9 As usual, each agent is intended as being univocally mapped to a natural number, so that N = {1, . . . , 2 × n + 2 × (cid:9) + 1} holds in this case. In fact, 
in order to help the intuition in some of the proofs where agents belong to different conceptual classes, we transparently identify the agents with their 
“names”, rather than with their associated indices.

94

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

R1 =

R2 =

R3 =

R4 =

⎧

⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩

(cid:9)

⎧

⎧

⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

⎧
⎪⎨

⎪⎩

R5 =

{r ∧ bi} → −M, ∀i ∈ {1, . . . , (cid:9)}
{r ∧ ˆbi} → −M, ∀i ∈ {1, . . . , (cid:9)}
{r ∧ ¬b1 ∧ · · · ∧ ¬b(cid:9) ∧ ¬ˆb1 ∧ · · · ∧ ¬ˆb(cid:9) ∧ ai ∧ ˆai} → −M, ∀i ∈ {1, . . . , n}
{r ∧ ¬b1 ∧ · · · ∧ ¬b(cid:9) ∧ ¬ˆb1 ∧ · · · ∧ ¬ˆb(cid:9) ∧ ¬ai ∧ ¬ˆai} → −M, ∀i ∈ {1, . . . , n}
{¬r ∧ b1 ∧ · · · ∧ b(cid:9) ∧ ˆb1 ∧ · · · ∧ ˆb(cid:9) ∧ ai} → −M, ∀i ∈ {1, . . . , n}
{¬r ∧ b1 ∧ · · · ∧ b(cid:9) ∧ ˆb1 ∧ · · · ∧ ˆb(cid:9) ∧ ˆai} → −M, ∀i ∈ {1, . . . , n}

{¬r ∧ ¬Z ∧ ai ∧ ˆai} → −M, ∀i ∈ {1, . . . , n},
∀ Z ∈ (N∀ ∪ ˆN∀),
{¬r ∧ ¬Z ∧ ¬ai ∧ ¬ˆai} → −M, ∀i ∈ {1, . . . , n},
∀ Z ∈ (N∀ ∪ ˆN∀),

{¬r ∧ ¬Z ∧ Z

{¬r ∧ ¬Z ∧ Z

(cid:13) ∧ bi ∧ ˆbi} → −M, ∀i ∈ {1, . . . , (cid:9)},
∀ Z ∈ (N∀ ∪ ˆN∀),
(cid:13) ∈ (N∀ ∪ ˆN∀)
∀ Z
(cid:13) ∧ ¬bi ∧ ¬ˆbi} → −M, ∀i ∈ {1, . . . , (cid:9)},
∀ Z ∈ (N∀ ∪ ˆN∀),
(cid:13) ∈ (N∀ ∪ ˆN∀)
∀ Z

{¬r ∧ Z ∧ W ∧ ¯y j,1 ∧ · · · ∧ ¯y j,k j

} → −M, ∀ j ∈ {1, . . . , m},
∀ Z ∈ (N∀ ∪ ˆN∀),
∀W ∈ (N∃ ∪ ˆN∃)

Observe that whenever some rules apply to any coalition  C ⊆ N, then the payoff function  v R induced by them is such 
that  v R (C) ≤ −M holds. In particular,  v R (C) = 0 if, and only if, none of these rules applies. When r is in  C , then no rule 
applies whenever C ∩ (N∀ ∪ ˆN∀) = ∅ and C is ∃-consistent, because of  R1. Assume then that r /∈ C holds, and note that no 
rule applies whenever all the above conditions hold:

• C ⊇ (N∀ ∪ ˆN∀) and C ∩ (N∃ ∪ ˆN∃) = ∅; or C (cid:2) (N∀ ∪ ˆN∀); 
• C (cid:2) (N∀ ∪ ˆN∀) and C is ∃-consistent; or C ⊇ (N∀ ∪ ˆN∀); 
• C (cid:2) (N∀ ∪ ˆN∀), C ∩ (N∀ ∪ ˆN∀) (cid:15)= ∅, and C is ∀-consistent; or C ⊇ (N∀ ∪ ˆN∀); or C ∩ (N∀ ∪ ˆN∀) = ∅; 
• C ∩ (N∃ ∪ ˆN∃) (cid:15)= ∅, C ∩ (N∀ ∪ ˆN∀) (cid:15)= ∅, and σ (C) |= (cid:7); or C ∩ (N∃ ∪ ˆN∃) = ∅; or C ∩ (N∀ ∪ ˆN∀) = ∅

(by  R2)
(by  R3)
(by  R4)
(by  R5)

By  putting  it  all  together  and  by  simple  Boolean  manipulations,  we  derive  that  none  of  the  above  rule  applies  to  a 
coalition C if, and only if, we are in one of the scenarios for which the payoff function v returns a non-negative value. That 
is, for each C ⊆ N, v R (C) = 0 (resp., v R (C) ≤ −M) if, and only if, v(C) ≥ 0 (resp., v(C) < 0). Given this property, the function 
v can be encoded via the rules in  R1 ∪ R2 ∪ R3 ∪ R4 ∪ R5 plus the following set of rules taking care of the coalitions where 
v gets positive values:

R6 =

⎧

⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩

{r} → 1

{¬r ∧ a1 ∧ b1} → ε + ε/n
{¬r ∧ a1 ∧ ˆb1} → ε + ε/n
{¬r ∧ ˆa1 ∧ b1} → ε + ε/n
{¬r ∧ ˆa1 ∧ ˆb1} → ε + ε/n

In fact, note that for each coalition C such that  v R (C) = 0, precisely one of the above rules can apply. On the other hand, 
more  than  one  rule  can  apply  to  some  coalition  C such  that  v R (C) ≤ −M.  However,  in  this  case,  we  only  would  like  to 
guarantee that  v(C) ≤ −|N| holds. Indeed, this immediately follows by the choice of  M in the construction, and given that 
3 ). (cid:3)
each rule in  R6 additively contributes 1 at most (for ε = 1

4.2.  Superadditive games

Let us move to analyze the complexity of superadditive games. The complexity of core-related concepts for these games 
has  been  investigated  by  [5],  where  the  authors  showed  that  deciding  whether  the  core  is  not  empty  is  an  NP-complete 
problem,  even  when  restricted  to  superadditive  games  based  on  synergies among coalitions.  However,  as  they  explicitly 

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

95

pointed  out,  even  computing  the  payoff  associated  with  some  given  coalition  is  NP-hard  in  the  proposed  encoding,  i.e., 
the proposed setting does not ﬁt our deﬁnition of a P-representation scheme. Therefore, the intractability of the core comes 
with no surprise there, and we still did not know so far whether core-related problems remain intractable over superad-
ditive games whose payoff functions can moreover be computed in polynomial-time. Below, we provide an answer to this 
open question.

In the following, if CG (R) is a class of structurally-restricted characteristic function games, then we denote by C sa

G (R) the 
subclass of all superadditive games (cid:4) = (cid:6)N, v, G(cid:7) in CG (R)—recall that a game is superadditive if whenever three feasible 
coalitions  S, T , S ∪ T ∈ F (G) are given with  S ∩ T = ∅, then  v(S ∪ T ) ≥ v(S) + v(T ) holds. In fact, throughout this section, 
we limit our attention to the case of complete interaction graphs, hence to C sa

We start by studying the complexity of the CS-Core-Membership problem, which has not been addressed so far in our 

K (R).

analysis. We again focus on games encoded via marginal contribution networks.

Theorem 4.9. On the class C sa
ship is co-NP-hard even if each rule contains at most one negated literal/agent and if the associated values are non-negative.

K (mcn) (hence, on CK(mcn)) of games encoded via marginal contribution networks, CS-Core-Member-

Proof. Let (cid:7) = c1 ∧ · · · ∧ cm be a Boolean formula in conjunctive normal form over the variables a1, . . . , an, such that each 
clause c j , with  j ∈ {1, . . . , m}, is a disjunction of three literals having the form  y j,1 ∨ y j,2 ∨ y j,3. A not-all-equal (satisfying) 
truth assignment σ for (cid:7) is such that, for each clause c j , at least one of its literals evaluates true in it and one of its literals 
evaluates false in it. Deciding whether there exists a not-all-equal truth assignment is NP-hard, and it is well-known and 
easy to see that the problem remains intractable in its monotone variant, i.e., when (cid:7) does not contain negated variables. 
In particular, the NP-hardness of the monotone variant when each clause contains at most three variables (and, w.l.o.g., at 
least  two  variables)  follows  by  Schaefer’s  dichotomy  theorem [46].  Moreover,  observe  that  “yes”  instances  are  preserved 
= y j,1 ∨ y j,2 ∨ α j , 
if  each  clause  c j = y j,1 ∨ y j,2 including  two  variables  is  replaced  by  the  conjunction  of  the  clauses  c1
j
c2
j

= y j,1 ∨ y j,2 ∨ β j , c3
j
In the following, for a truth assignment σ , we denote by γσ ((cid:7)) the number of clauses of (cid:7) where at least one of its 
literals  evaluates  true  in  σ and  one  of  its  literals  evaluates  false  in  σ .  Note  that  γσ ((cid:7)) = m holds  if,  and  only  if,  σ is  a 
not-all-equal satisfying truth assignment. Moreover, note that in the monotone setting we are considering, the assignments 
σ ({}) and σ ({a1, . . . , an}) are not not-all-equal satisfying ones.

= α j ∨ β j ∨ γ j , with α j , β j , and γ j being fresh variables.

= y j,1 ∨ y j,2 ∨ γ j , and c4
j

Based  on  (cid:7),  we  build  a  structurally-restricted  characteristic  function  game  (cid:4)nae((cid:7)) ∈ CK(mcn) whose  encoding 
ξ mcn((cid:4)nae((cid:7))) consists  of  the  MC-net  Mnae((cid:7)) deﬁned  over  the  variables/agents  in  N = vars((cid:7)) ∪ {an+1} and  including 
the following rules:

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

{an+1 ∧ ai} → 1, ∀i ∈ {1, . . . , n}
{an+1 ∧ a1 ∧ · · · ∧ an} → 1 − 1/m − γσ ({a1,...,an})((cid:7))/m
{an+1 ∧ ¯y j,1 ∧ y j,2} → 1/(2 × m), ∀ j ∈ {1, . . . , m}
{an+1 ∧ ¯y j,1 ∧ y j,3} → 1/(2 × m), ∀ j ∈ {1, . . . , m}
{an+1 ∧ ¯y j,2 ∧ y j,1} → 1/(2 × m), ∀ j ∈ {1, . . . , m}
{an+1 ∧ ¯y j,2 ∧ y j,3} → 1/(2 × m), ∀ j ∈ {1, . . . , m}
{an+1 ∧ ¯y j,3 ∧ y j,1} → 1/(2 × m), ∀ j ∈ {1, . . . , m}
{an+1 ∧ ¯y j,3 ∧ y j,2} → 1/(2 × m), ∀ j ∈ {1, . . . , m}

Since the formula (cid:7) does not contain negated literals, each of the above rules contains at most one negated literal/agent. 
Moreover, since σ ({a1, . . . , an}) is not a not-all-equal satisfying assignment, the values associated with each rule are non-
negative.

Let us now analyze the function induced by these rules. Note that rules belonging to the last six groups of rules reported 
above apply to a coalition C only if an+1 ∈ C and σ (C \ {an+1}) encodes a not-all-equal truth assignment for some clauses. 
In  particular,  precisely  2 × γσ (C\{an+1})((cid:7)) rules  of  this  kind  apply  to  any  coalition  C with an+1 ∈ C .  Indeed,  observe  that 
if  σ (C \ {an+1}) encodes  (resp.,  does  not  encode)  a  not-all-equal  truth  assignment  for  c j ,  then  exactly  two  of  the  rules 
associated with the index  j apply (resp., none of the rules associated with the index  j applies). Hence, the payoff function 
v induced by this marginal contribution network is:

⎧
⎪⎨

⎪⎩

v(C) =

n + 1 − 1/m,
|S| + γσ (S)((cid:7))/m,
0,

if C = N
if C = {an+1} ∪ S, and S ⊂ {a1, . . . , an}
otherwise

Consider now the payoff vector  x such that  xi = 1, for each  i ∈ {1, . . . , n}, and  xn+1 = 1 − 1/m. Note that  x(N) = v(N). 
We claim that ({N}, x) belongs to CS-core((cid:4)nae((cid:7))) if, and only if, there is no not-all-equal satisfying truth assignment. This 
reduces the complement of an NP-complete problem to CS-Core-Membership, hence showing its co-NP-hardness. To prove 
this claim, observe ﬁrst that, since  v(N) ≥ v(C) ≥ 0, for each coalition  C ⊆ N, and since  v(T ) = 0, for each coalition such 

96

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

that an+1 /∈ T , it is immediate to check that (cid:4)nae((cid:7)) is a cohesive game, and that the maximum social welfare is attained 
by the grand-coalition. Therefore, we can apply Fact 3.5 stating that, for any payoff vector x, x ∈ core((cid:4)nae((cid:7))) if, and only 
if, ({N}, x) ∈ CS-core((cid:4)nae((cid:7))).

Hence, it only remains to show that x ∈ core((cid:4)nae((cid:7))) if, and only if, (cid:7) has no not-all-equal satisfying truth assignments:

(⇒) Assume  S

(⇐) Assume  there  is  no  not-all-equal  satisfying  truth  assignment.  Then,  for  each  coalition  C ⊆ N with  C = {an+1} ∪ S,  it 
holds that v(C) ≤ |S| + 1 − 1/m, because γσ (S)((cid:7)) ≤ m − 1. Moreover, for a coalition C of this kind, x(C) = x(S) + xn+1 =
|S| + 1 − 1/m, i.e.,  x(C) ≥ v(C). Consider then any coalition  C such that an+1 /∈ C . In this case, we trivially have that 
x(C) ≥ 0 = v(C). By putting the two cases together, we have shown that there is no coalition wishing to deviate from 
x, that is, x is in core((cid:4)nae((cid:7))).

∗) is a not-all-equal satisfying truth assignment. Note that σ ( ¯S

∗) is a not-
.  Since  σ ({}) is  not  a  not-all-equal  satisfying 
∗| + 1) +
∗ ∪ {an+1})
≥ n + 2. Moreover, ob-
in the core, we have derived that 
≥ 1 + 1/m must hold. This entails that the allocation x, which is in particular such that xn+1 = 1 − 1/m, does not 

∗ ⊆ {a1, . . . , an} is such that σ (S
all-equal  satisfying  truth  assignment  too,  where  ¯S
assignment, this means that  S
(| ¯S
(cid:13)
∗| + 1) = n + 2. Let now x
(cid:13)( ¯S
(cid:13)
∗) + x
and  x
n+1
(cid:13)
serve that x
must be such that x
(cid:13)
x
n+1
belong to core((cid:4)nae((cid:7))).

∗ ⊂ {a1, . . . , an}. Then, we have v(S
∗ (cid:15)= ∅ and  S
be an allocation in core((cid:4)nae((cid:7))). Therefore, we have that x

∗ ∪ {an+1}). By summing the two inequalities, we derive  x
(cid:13)(N) = v(N) = n + 1 − 1/m. So, for any allocation x

∗ ∪ {an+1}) + v( ¯S
(cid:13)(S
(cid:13)
(cid:13)(N) + x
n+1
(cid:13)

∗ ∪ {an+1}) = (|S
(cid:13)
∗) + x
n+1

∗ = {a1, . . . , an} \ S

≥ v( ¯S

≥ v(S

∗

In order to conclude the proof, we just show that the game (cid:4)nae ((cid:7)) is superadditive. Let  S and T be disjoint coalitions. 
Note that if  S ∪ T = N, then  v(S ∪ T ) ≥ v(S) + v(T ) holds, since we have observed that (cid:4)nae((cid:7)) is cohesive. Accordingly, 
assume that  S ∪ T ⊂ N, and consider the following expression for the payoff associated with  S ∪ T :

(cid:9)

v(S ∪ T ) =

|S| + |T | + γσ (S∪T )((cid:7))/m,
0,

if an+1 ∈ S ∪ T
if an+1 /∈ S ∪ T

Note that if an+1 /∈ S ∪ T , then v(S) = v(T ) = 0 and we trivially get that v(S ∪ T ) = v(S) + v(T ) = 0. It remains to consider 
the  case  where an+1 ∈ S ∪ T .  Assume,  w.l.o.g.,  that an+1 ∈ S.  Hence,  we  have  v(T ) = 0 and  v(S) = |S| + γσ (S)((cid:7))/m.  We 
have  to  show  that  v(S ∪ T ) = |S| + |T | + γσ (S∪T )((cid:7))/m ≥ |S| + γσ (S)((cid:7))/m,  i.e.,  that  |T | + γσ (S∪T )((cid:7))/m ≥ γσ (S)((cid:7))/m. 
Clearly, for |T | = 0, the inequality trivially holds (as an equality). Otherwise, the property follows from the fact that |T | ≥ 1, 
γσ (S∪T )((cid:7)) ≥ 0, and γσ (S)((cid:7)) ≤ m, by deﬁnition of the game. (cid:3)

Note  that,  independently  from  our  work,  the  fact  that  CS-Core-Membership is  co-NP-hard  over  marginal  contribution 
networks  has  been  proven  by  Li  and  Conitzer [31].  In  their  work,  a  class  of  marginal  contribution  networks  is  exhibited 
for the hardness reduction where each rule, however, might contain more than just one negated literal—but with its asso-
ciated value being still non-negative. In fact, Li and Conitzer actually observed that when no negated literals occur at all, 
marginal contribution networks reduce to hypergraph games, so that tractability of CS-Core-Membership in the presence of 
non-negative  values  only  follows  from  the  results  in [24];  instead,  our  result  (stating  the  hardness  even  when  each  rule 
contains at most one negated literal/agent) traces the boundary of tractability and emphasizes the role played by negated 
literals in the speciﬁcation of the network.

Let us now turn to the problems CS-CoS, CS-Core-NonEmptiness, and CS-LCV over superadditive games. In this case, we 
2 -complete. 

can  establish  more  favorable  complexity  results  than  for  the  general  case,  as  these  problems  are  no  longer  (cid:2)P
However, they are still intractable, so that again superadditivity does not help very much.

Theorem  4.10.  On  the  class  C sa
NonEmptiness, CS-LCV−
if the associated values are non-negative.

, CS-LCV+

K (mcn) of  games  encoded  via  marginal  contribution  networks,  the  problems  CS-CoS,  CS-Core-
, and CS-LCV are co-NP-hard even if each rule contains at most one negated literal/agent and 

Proof. The proof of co-NP-hardness of CS-Core-NonEmptiness over marginal contribution networks is based on an adapta-
tion of the proof of Theorem 4.9. Given a Boolean formula (cid:7) = c1 ∧ · · · ∧ cm in conjunctive normal form over the variables 
a1, . . . , an and  such  that  no  clause  contains  a  negated  variable,  we  build  in  polynomial  time  the  marginal  contribution 
network M

(cid:13)
nae((cid:7)) consisting of the rules in Mnae((cid:7)) (deﬁned in that proof) plus the following rule

{¬an+1 ∧ a1 ∧ · · · ∧ an} → n,

which  in  fact  applies  only  to  the  coalition  C = {a1, . . . , an}.  Then,  it  is  immediate  to  check  that  the  game  (cid:4)(cid:13)
(cid:13)
associated payoff function  v
nae((cid:7)) is such that:  v
with C (cid:15)= {a1, . . . , an}; and v
(cid:4)nae((cid:7)).

nae((cid:7)),  with 
(cid:13)(C) = v(C), for each coalition  C ⊆ N = {a1, . . . , an, an+1}
(cid:13)
, induced by  M
(cid:13)({a1, . . . , an}) = n > v({a1, . . . , an}) = 0, where v is the payoff function associated with the game 

First, we observe that (cid:4)(cid:13)

nae((cid:7)) is superadditive. In fact, since (cid:4)nae((cid:7)) is superadditive and given the construction of  v

(cid:13)

, 

we have only to check that the following conditions hold:

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

97

(1) v

(cid:13)({a1, . . . , an}) + v

(cid:13)(N) ≥ v
γσ ({})((cid:7))/m ≤ 1 − 1/m, whereas  v
is not a not-all-equal satisfying assignment.
(cid:13)(S) + v
(cid:13)({a1, . . . , an}) ≥ v
(cid:13)({a1, . . . , an}) = n, while v

(2) v
v

(cid:13)({an+1}).  Indeed,  note  that  v

(cid:13)({an+1}) = v({an+1}) = |{}| +
(cid:13)(N) = v(N) = n + 1 − 1/m. In particular, note that γσ ({})((cid:7)) ≤ m − 1, because σ ({})

(cid:13)({a1, . . . , an}) = n and  v

(cid:13)(T ),  for  each  pair  of  disjoint  coalitions  S and  T such  that  S ∪ T = {a1, . . . , an}.  Indeed, 
(cid:13)(S) = v(S) = 0 and v

(cid:13)(T ) = v(T ) = 0, because an+1 /∈ S ∪ T .

Now,  since  (cid:4)(cid:13)

CS-core((cid:4)(cid:13)
by claiming that core((cid:4)(cid:13)

nae((cid:7))) = ∅ if,  and  only  if,  core((cid:4)(cid:13)

nae((cid:7)) is  superadditive  (and  therefore  cohesive),  we  can  apply  Fact 3.5 in  order  to  conclude  that 
nae((cid:7))) = ∅.  The  co-NP-hardness  of  CS-Core-NonEmptiness eventually  follows, 

nae((cid:7))) (cid:15)= ∅ if, and only if, (cid:7) has no not-all-equal satisfying truth assignment:

(⇐) Assume there is no not-all-equal satisfying truth assignment, and consider the payoff vector x such that xi = 1, for each 
i ∈ {1, . . . , n},  and  xn+1 = 1 − 1/m.  We  claim  that  x ∈ core((cid:4)(cid:13)
(cid:13)(N). 
Moreover, for each coalition C ⊆ N with C = {an+1} ∪ S, it holds that v(C) ≤ |S| + 1 − 1/m. Therefore, in this case, x(C) =
(cid:13)(C).  Consider  then  any  coalition  C such  that  an+1 /∈ C and  C (cid:15)= {a1, . . . , an}. 
x(S) + xn+1 = |S| + 1 − 1/m ≥ v(C) = v
(cid:13)({a1, . . . , an}).  By  putting  all 
We  trivially  have  that  x(C) ≥ 0 = v(C) = v
these cases together, we have shown that there is no coalition having an incentive to deviate from  x. Hence,  x is in 
core((cid:4)(cid:13)
nae((cid:7))).
(⇒) Assume that  S

nae((cid:7))).  Indeed,  we  ﬁrst  note  that  x(N) = v(N) = v

(cid:13)(C).  Finally,  we  have  x({a1, . . . , an}) = n = v

∗ ⊆ {a1, . . . , an} is such that σ (S

∗) is a not-all-equal satisfying truth assignment. For the sake of contra-
nae((cid:7))). By the same line of reasoning as in the proof of Theorem 4.9, 
(cid:13)({a1, . . . , an}) = n. Thus,  x1 + · · · + xn + xn+1 ≥

diction, assume that x is an allocation in core((cid:4)(cid:13)
we get that  xn+1 ≥ 1 + 1/m. Moreover, it holds that  x1 + · · · + xn ≥ v
n + 1 + 1/m, which is impossible since x(N) must coincide with v

(cid:13)(N) = v(N) = n + 1 − 1/m.

To conclude, we observe that the co-NP-hardness of CS-Core-NonEmptiness entails that CS-CoS, CS-LCV−

, and 
CS-LCV are also co-NP-hard over superadditive games encoded via marginal contribution networks. In particular, recall that 
CS-LCV−
are specializations of CS-LCV, where the penalty ε provided as input is constrained to be such that 
ε ≤ 0 and ε ≥ 0, respectively. Therefore, in both cases, by ﬁxing ε = 0, we are back to the problem of deciding whether the 
coalition structure core is not empty. (cid:3)

and CS-LCV+

, CS-LCV+

Similarly to the case of Theorem 4.9, the above result evidences the role played by negated literals in the marginal con-
tribution networks, because in their absence CS-Core-NonEmptiness is known to be solvable in polynomial time, whenever 
the values associated with the rules are non-negative [24,31]. In particular, note that earlier results on the co-NP-hardness 
of CS-Core-NonEmptiness either use negative values (cf. [24]) or are based on rules containing many occurrences of negated 
literals [31].

We conclude the section by stating the corresponding membership results, and by generalizing the analysis conducted so 
far to any compact representation scheme that is at least as expressive as MC-nets. To this end, we ﬁrst state the following 
property.

Lemma  4.11.  Let  R be  any  compact  P-representation  such  that  mcn (cid:3)e R.  Assume  that  a  problem  P is  C-hard,  with  C ∈
}, on a class X of games encoded as input in terms of marginal contribution networks. Then, P is C-hard on 
{NP, co-NP, (cid:2)P
X even when its games are encoded according to the representation scheme R.

2, (cid:3)P
2

Proof. From  the  C-hardness  for  marginal  contribution  networks  on  the  class  X ,  for  any  problem  ϒ in  C there  is  a 
polynomial-time  reduction  f 1 to  the  problem  P on  the  class  X .  Moreover,  recall  that  mcn (cid:3)e R means  that  there  exists 
a  polynomial-time  function  f 2 that  translates  any  encoding  ξ mcn((cid:4)) into  an  encoding  f 2(ξ mcn((cid:4))) for  (cid:4) in  R.  Therefore, 
the composition of  f 1 and  f 2 is a polynomial-time reduction from any problem in C to the problem P for games in X . (cid:3)

Note that the results derived so far and the above lemma immediately lead to the hardness result stated below. Concern-
ing the membership results (that have not been proven in Section 4.1), we point out that their proofs are routine and they 
are reported for the sake of completeness, only. In fact, for the CS-CoS problem, the characterization derived in Section 3 is 
rather useful and simplify the analysis.

• On  the  class  C sa

K (R),  CS-Core-Membership,  CS-CoS,  CS-Core-NonEmptiness,  CS-LCV−

,  CS-LCV+

,  and  CS-LCV belongs  to 

belong  to  (cid:2)P

2 ;  CS-LCV+

and  CS-LCV belong  to  (cid:3)P
2 ; 

Theorem 4.12. Let R be any compact P-representation.

• On  the  class  CK(R),  CS-CoS,  CS-Core-NonEmptiness,  and  CS-LCV−

CS-Core-Membership belongs to co-NP.

co-NP.

Moreover, if R is such that mcn (cid:3)e R, then the corresponding hardness results hold.

98

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

Fig. 2. A graph G and a tree decomposition for it.

Proof. Results  for  CS-CoS,  CS-Core-NonEmptiness,  CS-LCV−
,  and  CS-LCV on  CK(R) are  either  already  stated  in 
Section 4.1 (membership results) or derive from them via Lemma 4.11 and the assumption that mcn (cid:3)e R (hardness results). 
Similarly, hardness results for the problems on superadditive games follow by Lemma 4.11, by the results in Section 4.2, and 
by the assumption that mcn (cid:3)e R. Moreover, the proof of the membership of CS-Core-Membership in co-NP over the class 
CK(R) (and, hence, over C sa
K (R)) is a simple adaptation of the result derived in the setting where all coalitions are allowed 
to form [9]—see the proof of Theorem 4.1.

,  CS-LCV+

Then,  consider  the  remaining  results  to  be  shown  on  the  class  C sa

K (R).  Since  we  are  dealing  with  superadditive 
(and  hence  cohesive)  games,  we  can  apply  Fact 3.5.  Therefore,  for  any  game  (cid:4) ∈ C sa
K (R),  CS-core((cid:4)) = ∅ if,  and  only  if, 
core((cid:4)) = ∅. Hence, membership in co-NP for the problem CS-Core-Membership is again easily seen. Similarly, in order to 
decide whether CS-CoS((cid:4)) ≤ (cid:5), we have to check whether CS-core((cid:4)(cid:5)) (cid:15)= ∅. In fact, whenever (cid:4) is superadditive, (cid:4)(cid:5) is su-
peradditive, too. Moreover, an encoding for (cid:4)(cid:5) can be built in polynomial time (cf. proof of Theorem 4.1), and so CS-CoS is 
again in co-NP. Finally, for cohesive games, we recall from Theorem 3.10 that CS-LCV((cid:4)) = LCV((cid:4)). Hence, deciding whether 
the coalition structure least core value of (cid:4) is ε at most is reduced to checking whether core((cid:4)-ε) (cid:15)= ∅. Again, an encoding 
for  (cid:4)-ε can  be  built  in  polynomial  time,  and  the  fact  that  the  core  is  not  empty  can  be  checked  in  co-NP.  So,  CS-LCV−
, 
CS-LCV+

, and CS-LCV belongs to co-NP. (cid:3)

5.  Games with nearly-acyclic interaction graphs

Many  NP-hard  problems  arising  in  different  application  areas  are  known  to  be  eﬃciently  solvable  when  restricted  to 
instances whose underlying structures can be modeled via acyclic graphs. Indeed, for such restricted classes of instances, we 
can often compute solutions eﬃciently by means of dynamic programming. However, as a matter of fact, (graphical) struc-
tures arising from real applications are in most relevant cases not properly acyclic. Yet, they are often not very intricate and 
exhibit some rather limited degree of cyclicity, which suﬃces to retain most of the nice properties of acyclic instances. The 
investigation of graph properties that are best suited to identify nearly-acyclic graphs/hypergraphs has led to the deﬁnition 
of a number of so-called structural decomposition methods (see, e.g., [47,48] and the references therein).

5.1.  Basic notions

There are different possible notions to measure how far a graph is from a tree, that is, to measure its degree of cyclicity 
or,  dually,  its  tree-likeness.  Among  them,  the  treewidth [29] is  the  most  powerful  one,  as  it  is  able  to  extend  the  nice 
computational properties of trees to the largest possible classes of graphs, in many applications from different ﬁelds. In fact, 
useful tractability results for core-related concepts in coalitional games over bounded treewidth graphs have been derived 
in the literature, such as, for instance, in the context of transferable utility planning games [49], graph games and marginal 
contribution networks [9,25]. However, the question of whether core-related concepts over bounded treewidth games with 
coalition structures are  tractable  was  not  addressed  so  far.  We  embark  on  this  study  and  we  start  by  recalling  the  formal 
deﬁnition of treewidth, and its basic properties.

Deﬁnition 5.1. (See [29].) A tree decomposition of a graph  G = (N, E) is a pair (cid:6)T , χ (cid:7), where  T = (V , F ) is a tree, and χ is 
a labeling function assigning to each vertex  p ∈ V a set of vertices χ (p) ⊆ N, such that the following three conditions are 
satisﬁed: (1) for each node b of  G, there exists  p ∈ V such that b ∈ χ (p); (2) for each edge (b, d) ∈ E, there exists  p ∈ V
such  that  {b, d} ⊆ χ (p);  and  (3)  for  each  node  b of  G,  the  set  {p ∈ V | b ∈ χ (p)} induces  a  connected  subtree  of  T .  The 
width of (cid:6)T , χ (cid:7) is the number maxp∈V (|χ (p)| − 1). The treewidth of  G, denoted by t w(G), is the minimum width over all 
(cid:3)
its tree decompositions. 

Note  that  the  notion  of  treewidth  is  a  true  generalization  of  graph  acyclicity:  A  graph  G is  acyclic  if,  and  only  if, 
t w(G) = 1.  For  example,  the  graph  G in  Fig. 2 is  cyclic  and  its  treewidth  is  2,  as  it  is  witnessed  by  the  width-2 tree 
decomposition depicted in the same ﬁgure.

To  determine  the  treewidth  of  a  graph  G is  NP-hard.  However,  for  each  ﬁxed  natural  number  k,  checking  whether 
t w(G) ≤ k,  and  if  so,  computing  a  tree  decomposition  for  G of  optimal  width,  is  achievable  in  linear  time [50],  and  was 

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

99

recently shown to be achievable in logarithmic space [51]. Therefore, it is sensible to focus our analysis on the class TW-k
of  those  interaction  graphs  having  treewidth  bounded  by  some  ﬁxed  natural  number  k.  Accordingly,  if  C(R) is  the  class 
induced by the representation R, then CTW-k(R) is the subclass of all games (cid:4) = (cid:6)N, v, G(cid:7) such that t w(G) ≤ k.

5.2.  Results on graphs with bounded treewidth (and trees)

As  in  Section 4,  we  start  the  analysis  by  considering  arbitrary  payoff  functions.  Our  ﬁrst  result  is  a  useful  technical 

property. The result is a variant of those discussed in Section 3.1, and trivially follows by the arguments illustrated there.

Fact 5.2. Let (cid:4) = (cid:6)N, v, G(cid:7) and (cid:4)(cid:13) = (cid:6)N, v, G
each i ∈ N; F (G

(cid:13)) ⊆ F (G); and v(C) ≤ 0, for each coalition C ∈ F (G) \ F (G
(cid:13)

) = {((cid:2), x) ∈ CS-core((cid:4)) | C ∈ F(G

), ∀C ∈ (cid:2)}.

(cid:13)

(cid:13)). Then,

CS-core((cid:4)

(cid:13)(cid:7) be two structurally-restricted characteristic function games such that: v({i}) ≥ 0, for 

The  property  is  now  used  to  adapt  the  proof  of  the  hardness  result  stated  in  Theorem 4.4 in  order  to  deal  with  an 

interaction graph having bounded treewidth.

Actually, the fact that our reasoning problems remain intractable over bounded treewidth interaction graphs is not sur-
prising given that computing the maximum social welfare is NP-hard, even over (i) trees and over (ii) simple and monotone
games10 with interaction graphs having treewidth 2 [32]. However, from a technical viewpoint, the results in [32] are spe-
ciﬁc for the computation of the maximum social welfare and, therefore, do not imply the result below. Moreover, our result 
is provided for a different complexity class ((cid:2)P
2 ) and for a speciﬁc representation scheme (marginal contribution networks). 
Similar considerations apply to the subsequent results in this section.

Theorem 5.3. Let R be any compact P-representation such that mcn (cid:3)e R, and let k > 0 be a ﬁxed constant. On the class CTW-k(R), 
2 -complete. Hardness holds even for k = 2.
CS-CoS and CS-Core-NonEmptiness are (cid:2)P

Proof. Membership  results  in  (cid:2)P
2 follow  from  Theorem 4.1.  For  the  hardness  results,  consider  the  proof  of  Theorem 4.4, 
where it is shown that the problems CS-CoS, CS-Core-NonEmptiness, and CS-LCV−
2 -complete on the class CK(mcn). 
Recall that we are given a Boolean formula (cid:7), and we build a game (cid:4)((cid:7)) ∈ CK(mcn) whose associated payoff function  v is 
such that:

are (cid:2)P

if C = {an+4} ∪ S, S ⊆ {a1, . . . , an}, and σ (S) |= (cid:7)

w(S),
w(S) + 1, if C = {an+1, an+2, an+3, an+4} ∪ S, σ (S) |= (cid:7), and a1 ∈ S
2/3,

v(C) =

if C ⊆ {an+1, an+2, an+3} and |C| ≥ 2
if |C| = 1, with C (cid:15)= {an+4}
otherwise

⎧

⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

0,
≤ 0,

In particular, recall that we have shown that CS-core((cid:4)((cid:7))) (cid:15)= ∅ if, and only if, a1 is true in the lexicographically maximal 
satisfying assignment of (cid:7).

First, we can assume, w.l.o.g., that the assignment σ ({}) is satisfying. Indeed, given any Boolean function (cid:7) = c1 ∧ · · · ∧ cm
(cid:13)
in  CNF  over  the  variables  a1, . . . , an,  we  can  build  a  Boolean  function  (cid:7)(cid:13) = c
m over  the  variables  {a1, . . . , an} ∪
{b1, . . . , bm} such  that  c
= ci ∨ ¬bi ,  for  each  i ∈ {1, . . . , m}.  Moreover,  we  assume  that  variables  in  {b1, . . . , bm} always 
precede  all  variables  in  {a1, . . . , an} in  the  given  ordering.  Therefore,  a1 is  true  in  the  lexicographically  maximal  satisfy-
ing  assignment  of  (cid:7) if,  and  only  if,  a1 is  true  in  the  lexicographically  maximal  satisfying  assignment  of  (cid:7)(cid:13)
.  In  fact,  by 
construction, (cid:7)(cid:13)

is satisﬁed by the assignment where all variables are false.

∧ · · · ∧ c

(cid:13)
1

(cid:13)
i

Consider  then  the  interaction  graph  G((cid:7)) depicted  in  the  left  part  of  Fig. 3.  Note  that  the  graph  is  cyclic,  and  it  has 

treewidth 2, as it is witnessed by the tree decomposition depicted on the right of the same ﬁgure.

Let  C be  a  coalition  that  is  not  allowed  to  form  according  to  G((cid:7)),  i.e.,  with  C /∈ F (G((cid:7))).  We  can  distinguish  the 
following  cases:  (1)  C ∩ {a1, . . . , an} (cid:15)= ∅,  and  an+4 /∈ C ;  (2)  an+4 ∈ C ,  C ∩ {an+1, an+2} (cid:15)= ∅,  and  an+3 /∈ C .  In  both  cases, 
we  have  that  v(C) ≤ 0.  Moreover,  observe  that  v(C) ≥ 0,  for  each  coalition  C with  |C| = 1.  In  particular,  observe  that 
v({an+4}) = w({}) = 0, as σ ({}) |= (cid:7). Thus, we are in a position to apply Fact 5.2 in order to derive:

CS-core((cid:6)N, v, G((cid:7))(cid:7)) = {((cid:2), x) ∈ CS-core((cid:4)((cid:7))) | C ∈ F(G((cid:7))), ∀C ∈ (cid:2)}.

Now,  we  claim  that  CS-core((cid:6)N, v, G((cid:7))(cid:7)) = ∅ ⇔ CS-core((cid:4)((cid:7))) = ∅.  Indeed,  the  ‘⇐’-part  trivially  follows  from  the 
above expression. To show that the ‘⇒’-part holds too, consider an element ((cid:2), x) in  CS-core((cid:4)((cid:7))). Because of Fact 3.5, 
we already know that CS-core((cid:4)((cid:7))) = CS-opt((cid:4)((cid:7))) × core( ˜(cid:4)((cid:7))). Therefore, we have just to show that there is a coalition 

10 A game is monotone if v(C) ≥ v(C
feasible coalition C .

(cid:13)) holds, for each pair of feasible coalitions C and C

(cid:13)

with C ⊇ C

(cid:13)

. A game is simple if v(C) ∈ {0, 1} holds, for each 

100

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

Fig. 3. Interaction graph in the proof of Theorem 5.3, and a width-2 tree decomposition.

structure  (cid:2)∗ ∈ CS-opt((cid:4)((cid:7))) such  that  C ∈ F (G((cid:7))),  for  each  coalition  C ∈ (cid:2)∗
.  Indeed,  in  this  case,  we  would  have  that 
((cid:2)∗, x) is in CS-core((cid:6)N, v, G((cid:7))(cid:7)). In fact, since CS-core((cid:4)((cid:7))) (cid:15)= ∅, we have that a1 is true in the lexicographically maximal 
satisfying  assignment  of  (cid:7).  By  Property 4.4.1,  (cid:2)∗
includes  the  coalition 
t
∗ ∪ {an+1, an+2, an+3, an+4}, plus each agent in {a1, . . . , an} \ S
is 
S
in F (G((cid:7))).

as a singleton—and we are done, as each coalition in (cid:2)∗
t

is  then  an  optimal  coalition  structure,  where  (cid:2)∗
t

From the above claim, it follows that  CS-core((cid:6)N, v, G((cid:7))(cid:7)) (cid:15)= ∅ if, and only if, a1 is true in the lexicographically max-
2 -hardness  of  CS-Core-NonEmptiness on  the  class  CTW-2(mcn).  By 
imal  satisfying  assignment  of  (cid:7),  which  proves  the  (cid:2)P
Lemma 4.11,  the  same  hardness  result  holds  on  CTW-2(R),  for  any  compact  P-representation  R such  that  mcn (cid:3)e R.  Fi-
nally,  we  observe  that  hardness  results  for  CS-Core-NonEmptiness trivially  entail  the  corresponding  hardness  result  for 
CS-CoS. (cid:3)

∗

We stress here that the hardness results above are given over the class CTW-k(mcn) with k = 2, and hence apply to any 
(cid:13) ≥ k. Indeed, by the deﬁnition of these classes, we have that CTW-k(mcn) ⊆ CTW-k(cid:13) (mcn). However, 
class CTW-k(cid:13) (mcn), with k
these results do not imply the corresponding hardness results over CK(mcn), i.e., Theorem 5.3 does not entail Theorem 4.4.11
Similar considerations apply to all results in the section.

Now, based on the reduction in the proof of Theorem 4.9, we prove that CS-Core-Membership remains co-NP-complete 

over games equipped with interaction graphs having bounded treewidth, in fact with trees.

Theorem 5.4. Let R be any compact P-representation, and let k > 0 be a constant. On the class CTW-k(R), CS-Core-Membership
belongs to co-NP. Moreover, if R is such that mcn (cid:3)e R, then CS-Core-Membership is co-NP-hard, even on the subclass C sa
TW-k(R)
of superadditive games with k = 1.

Proof. The membership result is easily seen to hold, and it follows by inspection in the proof of Theorem 4.12. For the hard-
ness result, consider the proof of Theorem 4.9, where it is shown that the problem CS-Core-Membership is co-NP-complete 
over C sa
K (mcn). Recall that we are given a Boolean function (cid:7) and we build a (marginal contribution network inducing a) 
game (cid:4)nae((cid:7)) over the set N = {a1, . . . , an, an+1} of agents and whose associated payoff function v is such that:

⎧
⎪⎨

⎪⎩

v(C) =

n + 1 − 1/m,
|S| + γσ (S)((cid:7))/m,
0,

if C = N
if C = {an+1} ∪ S, and S ⊂ {a1, . . . , an}
otherwise

In particular, recall that we have exhibited a payoff vector x such that ({N}, x) belongs to CS-core((cid:4)nae((cid:7))) if, and only if, 
there is no not-all-equal satisfying truth assignment.

Consider the interaction graph Gnae((cid:7)) where agent an+1 is connected with all other agents, and where no further edge 
occurs. Therefore,  Gnae((cid:7)) is actually a tree. Note also that a coalition  C ⊆ N with  C /∈ F (Gnae((cid:7))) is such that an+1 /∈ C . 
In fact, for this coalition C , it is the case that  v(C) = 0 holds. Thus, we are in the position of applying Fact 5.2 in order to 
derive:

CS-core((cid:6)N, v, Gnae((cid:7))(cid:7)) = {((cid:2), x) ∈ CS-core((cid:4)nae((cid:7))) | C ∈ F(Gnae((cid:7))), ∀C ∈ (cid:2)}.

Since N is a feasible coalition in Gnae((cid:7)), we immediately conclude that ({N}, x) belongs to CS-core((cid:4)nae((cid:7))) if, and only 
if, ({N}, x) belongs to CS-core((cid:6)N, v, Gnae((cid:7))(cid:7)). This proves that CS-Core-Membership is co-NP-complete on CTW-1(mcn) and, 
hence, by Lemma 4.11 on the class CTW-1(R), for each R such that mcn (cid:3)e R.

11 As we have discussed in Section 3, we could take any game (in CTW-2(mcn)) and translate it to a game deﬁned over a complete interaction graph, 
by assigning to each infeasible coalition a value that is at most the sum of the values of all connected sub-components. Combining this ingredient with 
Theorem 5.3, we could derive Theorem 4.4 if the translation were feasible in polynomial time. In fact, the feasibility of implementing the translation by 
adding polynomial many rules to the original marginal contribution network is not immediate and would have still to be proven, in general.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

101

Fig. 4. Interaction graph in the proof of Lemma 5.5.

In  order  to  complete  the  proof,  we  have  to  show  that  the  game  (cid:6)N, v, Gnae((cid:7))(cid:7) is  superadditive.  To  this  end,  recall 
that  (cid:4)nae((cid:7)) is  superadditive.  Therefore,  if  S, T , S ∪ T are  three  coalitions  in  F (Gnae((cid:7))) with  S ∩ T = ∅,  then  we  have 
v(S ∪ T ) ≥ v(S) + v(T ),  because  these  coalitions  are  also  feasible  in  the  game  (cid:4)nae((cid:7)) which  is  deﬁned  over  a  complete 
interaction graph. (cid:3)

Let  us  now  move  to  analyze  CS-CoS,  CS-Core-NonEmptiness,  and  CS-LCV over  superadditive  games  (whose  associated 

interaction graphs have bounded treewidth). In this case, we need a more sophisticated construction.

Lemma 5.5. Let hn : Rn → Rn+2 be such that hn((cid:6)x1, . . . , xn(cid:7)) = (cid:6)x1, . . . , xn, 0, 0(cid:7). Let (cid:4) = (cid:6)N, v, Kn(cid:7) ∈ C sa
K (mcn) be a structurally-
restricted superadditive game, with  N = {1, . . . , n}. Then, we can build in polynomial time w.r.t. ||ξ mcn((cid:4))|| (the encoding of) a 
superadditive game (cid:4)(cid:13) = (cid:6)N ∪ {n + 1, n + 2}, v
TW-2(mcn) such that:

(cid:13)(cid:7) ∈ C sa

(cid:13), G

• if ({N}, x) ∈ CS-core((cid:4)), then ({N ∪ {n + 1, n + 2}}, hn(x)) ∈ CS-core((cid:4)(cid:13));
• if ({N ∪ {n + 1, n + 2}}, x

(cid:13)
(cid:13)) ∈ CS-core((cid:4)(cid:13)), then x
n+1

(cid:13)
= x
n+2

CS-core((cid:4)).

= 0 and the vector x with x

(cid:13) = hn(x) is such that ({N}, x) ∈

(cid:13)(S

(cid:13) ∩ N (cid:15)= ∅. In particular, assume that the interaction graph  G

Proof. Let  (cid:4) = (cid:6)N, v, Kn(cid:7) ∈ C sa
(cid:6)N ∪ {n + 1, n + 2}, v
Therefore,  v
with  S
remaining agents, and no further edges are in G

(cid:13), G
(cid:13)({n + 1}) = v

(cid:13)(cid:7) whose  payoff  function  v
(cid:13)({n + 2}) = 0, and  v

K (mcn) be  a  game  encoded  as  a  marginal  contribution  network  M.  Consider  the  game  (cid:4)(cid:13) =
is  encoded  in  terms  of  the  same  marginal  contribution  network  M. 
(cid:13) ⊆ N ∪ {n + 1, n + 2}
is such that n + 1 and n + 2 are connected to all the 

(cid:13) \ {n + 1, n + 2}), for each feasible coalition  S

(cid:13)
(cid:13)) = v(S

First, we claim that (cid:4)(cid:13)
such that S

(cid:13)
(cid:13) \ {n + 1, n + 2}) + v(T

. The graph is depicted in Fig. 4. Note that t w(G
is superadditive, whenever (cid:4) is superadditive. Consider any two disjoint feasible coalitions S

is feasible, too. In the case where S
(cid:13)(S

T
2}) ≥ v(S
v(S
Kn, i.e., according to it. To complete the analysis, consider the case where T
(cid:13)(S
we have v
because v

and 
(cid:13) ∪ T
(cid:13) \ {n + 1, n +
(cid:13) \ {n + 1, n + 2}) ≥
(cid:13)). In fact, note that v
(cid:13) \ {n + 1, n + 2}) follows  from  the  fact  that  (cid:4) is  superadditive  and  any  coalition  is  feasible  in 
(cid:13) ∩ N (cid:15)= ∅). In this case, 
(cid:13)), 
(cid:13)(S
(cid:13) ∪ T

(cid:13)(S
(cid:13) ∩ N (cid:15)= ∅, we have v
(cid:13) ∪ T
(cid:13)) = v(S
(cid:13) ∪ T

(cid:13) ⊆ {n + 1, n + 2} (and  S
(cid:13)(S
(cid:13)). Again, we have v

(cid:13) ∩ N (cid:15)= ∅ and T
(cid:13)(T
(cid:13)) + v

(cid:13) \ {n + 1, n + 2}) + v(T

(cid:13) \ {n + 1, n + 2}) = v(S

(cid:13) \ {n + 1, n + 2}) = v

(cid:13) \ {n + 1, n + 2}) = v

(cid:13)) = v(S
(cid:13) ∪ T

(cid:13) ∪ T
(cid:13)) = 0.

(cid:13)) = v(S

(cid:13)) = 2.

(cid:13)(S
(cid:13)(T

(cid:13)) ≥ v

(cid:13)) + v

(cid:13) ∪ T

(cid:13) ∪ T

(cid:13)(S

(cid:13)(T

(cid:13)

(cid:13)

(cid:13)

(cid:13)

Now, let ({N}, x) be an element in CS-core((cid:4)), and consider the vector x

(cid:13)
(cid:13) = hn(x) such that x
= xi , for each i ∈ N, while 
i
(cid:13)(N ∪ {n + 1, n + 2}) = x(N) =
(cid:13)) is in CS-core((cid:4)(cid:13)). Indeed, note ﬁrst that x
(cid:13) \ {n + 1, n + 2}) ≥
(cid:13)) = x(S
(cid:13)(S
(cid:13) ⊆ N ∪ {n + 1, n + 2} with  S

(cid:13) ∩ N (cid:15)= ∅,  x

(cid:13)
(cid:13)
= 0. We claim that ({N ∪ {n + 1, n + 2}}, x
= x
x
n+2
n+1
(cid:13)(N ∪ {n + 1, n + 2}).  Moreover,  for  each  S
v(N) = v
v(S

(cid:13)(S

(cid:13)).

(cid:13)(N ∪ {n + 1, n + 2}) = v(N),  x

(cid:13) \ {n + 1, n + 2}) = v
In order to complete the proof, consider any element (N ∪ {n + 1, n + 2}, x

(cid:13)(N ∪ {n + 1}) ≥ v
= 0. Consider then the vector x such that x

(cid:13)(N ∪ {n + 1, n +
(cid:13)(N ∪ {n + 2}) = v(N). 
2}) = v
(cid:13)
(cid:13) = h(x), and note that ({N}, x) is in CS-core((cid:4)). Indeed, 
Therefore, x
n+1
(cid:13)(S ∪{n +1, n +2}) ≥
x(N) = x
(cid:13)(S ∪ {n + 1, n + 2}) = v(S). In particular, note that, in the above relationships,  S ∪ {n + 1, n + 2} is guaranteed to induce 
v
(cid:13)(S ∪ {n + 1, n + 2}) ≥
a  connected  subgraph  over  G
(cid:13)(S ∪ {n + 1, n + 2}), because ({N ∪ {n + 1, n + 2}}, x
v

(cid:13)(N ∪{n +1, n +2}) = v(N). Moreover, for each non-empty S ⊆ N, x(S) = x

.  Therefore,  this  coalition  is  feasible  and  we  are  guaranteed  that  x

(cid:13)) in CS-core((cid:4)(cid:13)). We have x
(cid:13)(N ∪ {n + 2}) ≥ v

(cid:13)
= x
n+2
(cid:13)(N ∪{n +1, n +2}) = v

(cid:13)(N ∪ {n + 1}) = v(N) and  x

(cid:13)) is in CS-core((cid:4)(cid:13)). (cid:3)

(cid:13)

By combining the lemma with Fact 3.5 and Theorem 4.12, we get the following (where proof of the membership results 

are trivial adaptations of those given for games over complete interaction graphs).

Corollary 5.6. Let R be any compact P-representation, and let k be a ﬁxed constant. On the class C sa
Emptiness,  CS-LCV−
,  CS-LCV+
co-NP-complete, even for k = 2.

TW-k(R), CS-CoS, CS-Core-Non-
,  and  CS-LCV belong  to  co-NP.  Moreover,  if  R is  such  that  mcn (cid:3)e R,  then  all  problems  are 

Observe that, concerning the problems CS-CoS and CS-Core-NonEmptiness, there is no hope to extend Corollary 5.6 and 
Theorem 5.3 and  show  that  hardness  holds  even  on  trees  (i.e.,  when  treewidth  equals  one),  because  we  know  from  [19]

102

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

that the core is non-empty over trees, even for non-superadditive games. However, the scenario is more interesting when 
turning to CS-LCV and its variants.

Theorem 5.7. Let R be any compact P-representation. On the class CTW-1(R), CS-LCV+
then CS-LCV−

and CS-LCV are (cid:2)P

2 -complete.

is in P. Moreover, if R is such that mcn (cid:3)e R, 

Proof. Let us consider the problem CS-LCV+
. We are given a rational number ε ≥ 0 and a game (cid:4) = (cid:6)N, v, G(cid:7). Let (cid:2) be an 
optimal coalition structure in CS-opt((cid:4)), and observe that (cid:2) belongs to CS-opt((cid:4)(cid:2),-ε), too. Moreover, recall from [19] that 
CS-core((cid:4)(cid:2),-ε) (cid:15)= ∅. Hence, by Fact 3.5, a pair of the form ((cid:2), x) is guaranteed to occur in CS-core((cid:4)(cid:2),-ε). That is, CS-LCV+
is immaterial over trees.

Let us now consider the problem CS-LCV−

, where the rational number ε provided as input is such that ε ≤ 0. Member-
ship in (cid:2)P
2 is established in Theorem 4.3. To prove the hardness result, consider the UO-TSP problem deﬁned as follows. We 
are given a complete directed graph ({a1, . . . , an}, E) over n nodes, where each edge ei, j = (ai, a j), with ai (cid:15)= a j is associated 
with a positive integer weight  w(ei, j). A valid tour is a set  T of n edges inducing a directed cycle in the graph (touching 
each  node  exactly  once).  The  weight  of  T is  the  value 
ei, j ∈T w(ei, j).  An  optimal  tour  is  one  with  the  minimum  weight 
over all possible valid tours. The traveling salesman problem (TSP) is the well-known NP-hard problem asking to computing 
an optimal tour. Instead, UO-TSP is the (cid:2)P

2 -hard decision problem asking whether there is exactly one optimal tour [52].

Based  on  the  graph  ({a1, . . . , an}, E) and  the  given  weighting  function  w,  we  build  a  game  (cid:4) = (cid:6)N, v, G(cid:7) where  N =
{ei, j,k | i, j, k ∈ {1, . . . , n}} ∪ {t} is  the  set  of  the  agents.  Moreover,  G is  a  tree  where t is  connected  with  all  other  agents, 
and  no  further  edge  occurs  in  it.  By  letting  W = maxei, j ∈E w(ei, j) + 1,  the  payoff  function  v is  encoded  as  a  marginal 
contribution network M such that:

(cid:2)

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩

r2 : {t ∧
r3 : {t ∧
r4 : {t ∧ ei, j,k ∧

r1 : {t ∧ ei, j,k} → W − w(ei, j), ∀ei, j ∈ E, ∀k ∈ {1, . . . , n}
(cid:8)
(cid:8)
(cid:8)

j(cid:15)=1
i(cid:15)=1
¬e j,h,k+1} → −n2 × W , ∀ei, j ∈ E, ∀k ∈ {1, . . . , n − 1}

¬e1, j,1} → −n2 × W
¬ei,1,n} → −n2 × W

h

r5 : {t ∧ ei, j,k ∧ ei, j(cid:13),k(cid:13) } → −n2 × W , ∀i, j, j
r6 : {t ∧ ei, j,k ∧ ei(cid:13), j,k(cid:13) } → −n2 × W , ∀i, i
r7 : {t ∧ ei, j,k ∧ ei(cid:13), j(cid:13),k} → −n2 × W , ∀i, i

(cid:13), k, k
(cid:13), j, k, k
(cid:13), j, j

(cid:13) ∈ {1, . . . , n}, with j (cid:15)= j
(cid:13)
(cid:13) ∈ {1, . . . , n}, with i (cid:15)= i
(cid:13), k ∈ {1, . . . , n}, with i (cid:15)= i

(cid:13)

(cid:13)

or j (cid:15)= j

(cid:13)

For  each  feasible  coalition  C ,  let  T (C) = {ei, j | ∃ei, j,k ∈ C} be  the  set  of  edges  obtained  from  C by  “stripping  off”  the 
third index. Then, consider the following properties establishing a precise correspondence between valid tours and feasible 
coalitions:

• Let C be a feasible coalition with v(C) > 0. We claim that T (C) is a valid tour. Indeed, t is in C and |C| > 1 (because of 
r1), and no rule with a negative value applies. So, by r2, an agent of the form e1, j,1 is in C , with  j (cid:15)= 1. Then, by repeated 
applications of r4, we build a sequence e1, j,1 = e1, j1,1, e j1, j2,2, . . . , e jn−1, jn,n of agents that are in C . Moreover, by r3, an 
agent of the form ei,1,n is in C . By r7, it hence holds that  jn = 1. Eventually, by r5 and r6, {e1, j1,1, e j1, j2,2, . . . , e jn−1, jn,n}
is a valid tour, and combined with r7 we conclude that no further agent occurs in C . That is, this tour coincides with 
T (C).

• Assume that T is a valid tour. Then, we show that there is a feasible coalition C with t ∈ C and such that v(C) > 0 and 
T (C) = T . Indeed, if T is a tour, then its edges can be ordered starting with the one outgoing from node a1. So edges in 
T can be listed as follows: e1, j1 , e j1, j2 , . . . , e jn−1,1,n. The required coalition is then C = {t, e1, j1,1, e j1, j2,2, . . . , e jn−1,1,n}.

In  particular,  note  that  in  the  above  correspondence  v(C) = n × W −

ei, j ∈T (C) w(ei, j).  Therefore,  optimal  coalitions 
one-to-one  correspond  with  optimal  tours.  This  leads  to  the  following,  whose  proof  generalizes  the  correspondence  to 
optimal coalition structures.

(cid:2)

Claim 5.8. Let R be any compact P-representation such that mcn (cid:3)e R. On the class CTW-1(R), computing the maximum social 
welfare is NP-hard. In particular, a reduction can be exhibited where optimal coalition structures one-to-one correspond to optimal 
tours for a TSP instance provided as input.

Let now ε < 0 be a value suﬃciently close to 0, e.g., ε = − minei, j

. Recall from Lemma 3.9 that the least coalition 
structure core value of (cid:4) is at most ε if, and only if, (i) |CS-opt((cid:4))| = 1, and (ii) (cid:2) ∈ CS-opt((cid:4)) implies (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε)
and CS-core((cid:4)(cid:2),-ε) (cid:15)= ∅. In fact, for the given value of ε, it is immediate to check that if (i) holds and (cid:2) is the only feasible 
coalition  structure  in  CS-opt((cid:4)),  then  (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε) holds.  Then,  by  Fact 3.5 and  the  result  in [19],  we  would  be 
guaranteed that a pair of the form ((cid:2), x) occurs in CS-core((cid:4)(cid:2),-ε) (that is, (ii) also holds). So, we have shown that CS-LCV−
just amounts to deciding whether condition (i) holds, i.e., whether there is exactly one optimal tour (cf. Claim 5.8). Hardness 
is shown for marginal contribution networks, and by Lemma 4.11 it extends to more expressive game encodings. (cid:3)

n2×W

w(ei, j )

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

103

Note  that  the  NP-hardness  of  computing  the  maximum  social  welfare  over  trees  has  already  been  established  in  our 
earlier  work [53],  and  independently  in [32].  Hence,  Claim 5.8 can  be  viewed  as  strengthening  the  hardness  result  over 
games  encoded  as  marginal  contribution  networks  (in  addition  to  being  an  important  technical  ingredient  to  show  the 
above (cid:2)P

2 -hardness). By Fact 3.5, the following is an immediate corollary.

Corollary 5.9. Let R be any compact P-representation such that mcn (cid:3)e R. On the class CTW-1(R), CS-Core-Find is NP-hard.

The above result is given for games that are not superadditive. In fact, for games deﬁned on trees, Demange [19] proposed 
a  procedure  that  computes  an  element  in  the  core,  which  does  not  run  in  polynomial  time  for  non-superadditive  games. 
However, it can be easily seen by inspection that it does so for superadditive ones (see also [53,54]).

Fact 5.10. (See cf. [19].) Let R be any compact P-representation. On the class C sa

TW-1(R), CS-Core-Find is in FP.

We now leave the section by establishing the counterpart (for CS-LCV−

and CS-LCV) of Theorem 5.7 over superadditive 

games.

Theorem 5.11. Let R be any compact P-representation. On the class C sa
if R is such that mcn (cid:3)e R, then the corresponding hardness results hold.

TW-1(R), CS-LCV−

and CS-LCV are co-NP-complete. Moreover, 

Proof. We start the proof with a simple, yet quite useful characterization.

Claim 5.12. Let R be any compact P-representation, let (cid:4) ∈ C sa
{N} ∈ CS-opt((cid:4)-ε). Moreover, CS-LCV−

is in co-NP.

TW-1(R), and let ε ≤ 0. Then, CS-LCV((cid:4)) ≤ ε holds if, and only if, 

Observe now that CS-LCV is feasible in co-NP, by Theorem 5.7 and the claim above. Thus, let us focus on the hardness 

result for CS-LCV−

.

Let G = (N, E) be an undirected graph over the set N = {a1, . . . , an} of nodes, and let k be a natural number. A set V ⊆ N
is a vertex cover if, for each edge e ∈ E,  V contains at least one of the two endpoints of e. Deciding whether  G admits a 
vertex cover V with |V | ≤ k is a well-known NP-hard problem [55].

Note that the problem remains  NP-hard, even if the given threshold is less than half of the number of nodes. Indeed, 
given G, we can build a graph Gk by adding 2 × (k + 1) fresh nodes with one of them being connected with the remaining 
2 × (k + 1) − 1 nodes. Then, G has a vertex cover with size at most k if, and only if, Gk has a vertex cover with size at most 
k + 1. Moreover, Gk is clearly deﬁned over n + 2 × (k + 1) nodes and, hence, k + 1 < n+2×(k+1)

Based  on  G,  we  build  a  game  (cid:4) = (cid:6)N ∪ {an+1}, v, G

is  a  tree  where  an+1 is 
connected with all other nodes, and no further edge occurs in it. The game is encoded as a marginal contribution network 
M such that:
⎧
⎨

(cid:13)(cid:7) ∈ CTW-1(mcn) as  follows.  The  graph  G

{an+1 ∧ ai} → |{e ∈ E | ai ∈ e}|, ∀i ∈ {1, . . . , n}

holds.
(cid:13)

2

{an+1 ∧ ai ∧ a j} → −1, ∀{ai, a j} ∈ E

⎩

{an+1 ∧ a1 · · · ∧ an} → 1

Thus, the payoff function v determined by these rules is such that, for each feasible coalition C ∈ F (G

(cid:13)),

⎧
⎪⎨

⎪⎩

v(C) =

|E| + 1,
|{e ∈ E | e ∩ C (cid:15)= ∅}|,
0,

if C = {a1, . . . , an, an+1}
if an+1 ∈ C and C (cid:15)= {a1, . . . , an, an+1}
otherwise

Observe that v(C) = 0 holds, for each coalition C such that an+1 /∈ C . Moreover, for each pair of coalitions C and C

an+1 ∈ C ∩ C

(cid:13)

and C

(cid:13) ⊇ C , it clearly holds that v(C

(cid:13)) ≥ v(C). Therefore, the game is superadditive.

Then, consider the value ε = − 1

n−k . We claim that {N} /∈ CS-opt((cid:4)-ε) if, and only if,  G has a vertex cover with size at 

(cid:13)

with 

most k.

(⇐) Assume that  V is a vertex cover with |V | ≤ k. Consider the coalition  C = V ∪ {an+1} and note that  v(C) = |E| while 
v(N) = |E| + 1. In fact,  C (cid:15)= N holds. Consider then the feasible coalition structure (cid:2) including  C and the remaining 
n − |V | nodes as singletons. In the game (cid:4)-ε , we clearly have that v-ε(N) = v(N) = |E| + 1, while the social welfare of 
(cid:2) is v-ε(C) − (n − |V |) × ε = |E| + (n − |V | + 1) × 1

n−k > |E| + 1 = v(N). That is, {N} /∈ CS-opt((cid:4)-ε).

(⇒) Assume  there  is  no  vertex  cover  V with  |V | ≤ k.  Consider  the  game  (cid:4)-ε where  v-ε(N) = v(N) = |E| + 1,  and  let  us 
show that {N} ∈ CS-opt((cid:4)-ε) holds. To this end, consider any feasible coalition structure (cid:2) (cid:15)= {N}. Given the interaction 
, (cid:2) consists of a coalition  C (cid:15)= N such that an+1 ∈ C and of all the remaining agents included as singletons. 
graph  G
Thus, the social welfare of (cid:2) is v-ε((cid:2)) = v-ε(C) − (n + 1 − |C|) × ε = v(C) + n+2−|C|

. Let us distinguish three cases.

(cid:13)

n−k

104

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

– Assume  that  |C| = 1.  Then,  C = {an+1} and  v(C) = 0.  Therefore,  v-ε((cid:2)) = v(C) + n+2−|C|

n ,  with  the 
latter inequality following by the fact that we can assume that k < n/2. This entails that  v-ε((cid:2)) < |E| + 1 (w.l.o.g., 
we can assume of course that |E| > 3 holds).

n−k < 2 + 2

= n+1

– Assume that 1 < |C| ≤ k + 1. Then, C \ {an+1} is not a vertex cover, and hence  v(C) ≤ |E| − 1 holds. Then,  v-ε((cid:2)) =
n−k < |E| + 1, again with the latter inequality following by 

− 1 = |E| + k+2−|C|

≤ |E| + n+2−|C|

≤ |E| + k

n−k

n−k

n−k

– Assume  that  |C| > k + 1,  with  C (cid:15)= N.  In  this  case,  it  might  happen  that  v(C) = |E|.  In  particular,  v-ε((cid:2)) ≤ |E| +

v(C) + n+2−|C|
n−k
the fact that k < n/2.

n+2−|C|
n−k

≤ |E| + n−k
n−k

= |E| + 1.

In all the possible cases, we have derived that  v-ε((cid:2)) ≤ |E| + 1 = v-ε(N) = v(N). Therefore, we conclude that {N} ∈
CS-opt((cid:4)-ε).

By Claim 5.12, the above entails that the vertex cover problem has been reduced to the complement of CS-LCV−

, hence 
showing that this latter problem is  co-NP-hard over games encoded via marginal contribution networks.  By Lemma 4.11, 
hardness extends to more expressive game encodings. (cid:3)

6.  Lines, cycles, and degree-based classiﬁcation

In this section, we analyze the complexity of core-related questions over classes of games whose interaction graphs are 
lines and cycles. Indeed, these are special classes of graphs having bounded treewidth and, therefore, there is a possibility 
that, by exploiting their peculiarities, tractability results can be established. Moreover, these results are interesting from an 
applications point of view, as many computer or sensor networks exhibit linear or ring topologies.

Eventually, since these kinds of graphs share the property that each node has at most two neighbors, results for them 
motivate  the  subsequent  classiﬁcation  of  the  complexity  of  core-related  questions  based  on  the  maximum  degree  in  the 
interaction graph.

6.1.  Lines and cycles

Let  L and  C denote  the  classes  of  all  graphs  that  are  lines  and  cycles,  respectively.  We  start  by  observing  that  our 

core-related problems are tractable over L.

Theorem 6.1. Let R be any compact P-representation. On the class CL(R), CS-Core-Membership, CS-CoS, CS-Core-NonEmptiness, 
CS-LCV−

, and CS-LCV are in P. Moreover, CS-Core-Find are in FP.

, CS-LCV+

Proof. CS-Core-NonEmptiness and  CS-CoS are  immaterial  over  lines,  as  the  coalition  structure  core  is  not  empty  in  this 
setting [30].

Consider  then  the  CS-Core-Membership problem,  which  given  a  game  (cid:4) = (cid:6)N, v, G(cid:7) and  a  pair  ((cid:2), x),  asks  whether 
((cid:2), x) is in CS-core((cid:4)). Note that checking whether x is an imputation for (cid:2) is trivially feasible in polynomial time, when-
ever (cid:4) is given according to a P-representation scheme. Therefore, the basic computational challenge is to check whether 
x(C) ≥ v(C) holds,  for  each  feasible  coalition  C ∈ F (G).  In  general,  this  is  a  hard  task,  because  there  might  be  exponen-
tially  many  feasible  coalitions.  However,  if  G ∈ L holds,  then  any  feasible  coalition  in  F (G) is  completely  determined  by 
(cid:11)
(cid:10)|N|
two (possibly coinciding) endpoints. Thus, |F (G)| ≤
holds and, consequently, CS-Core-Membership is feasible in 
polynomial time.

Concerning the computation problem CS-Core-Find, observe that, whenever an optimal coalition structure (cid:2) ∈ CS-opt((cid:4))
is given, then CS-core((cid:4)) is completely determined by a system of linear inequalities, because of Fact 3.5. Moreover, we have 
just  observed  that  when  the  underlying  interaction  graph  is  a  line,  we  have  to  deal  with  polynomially  many  inequalities 
only. Therefore, by well-known results in linear programming [56,57], CS-Core-Find can be shown to be in FP, provided we 
can compute in polynomial time (cid:2). Below, we show that this is actually possible.

(cid:10)|N|

+

(cid:11)

2

1

Claim 6.2. Let R be any compact P-representation. On the class CL(R), computing the maximum social welfare (and a feasible coalition 
structure with this value) is in FP.

Finally, consider the problems CS-LCV+
is feasible in polynomial time. 
To  conclude,  we  need  to  consider  CS-LCV−
that,  given  a  game  (cid:4) ∈ CL(R) and  a  rational  number  ε ≤ 0,  asks  to  decide 
whether there is a pair ((cid:2), x) in CS-core((cid:4)(cid:2),-ε). To address this problem, actually with ε < 0 (as the case ε = 0 reduces to 
CS-Core-NonEmptiness), we recall the characterization of Lemma 3.9: the least coalition structure core value of (cid:4) is at most 
ε if, and only if, (i) |CS-opt((cid:4))| = 1, and (ii) (cid:2) ∈ CS-opt((cid:4)) implies (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε) and CS-core((cid:4)(cid:2),-ε) (cid:15)= ∅. Therefore, we 
need just to show that (i) and (ii) can be checked in polynomial time over lines.

, and CS-LCV. By Theorem 5.7, CS-LCV+

, CS-LCV−

Indeed, by Claim 6.2, the optimal social welfare can be computed in polynomial time, in fact, together with a feasible 
coalition  structure  (cid:2) ∈ CS-opt((cid:4)).  Then,  for  each  coalition  C ∈ (cid:2),  consider  the  game  (cid:4)C = (cid:6)N, v C , G(cid:7) coinciding  with  (cid:4), 
but  where  the  value  associated  with  C is  now  v C (C) = −M,  with  M ≥ 0 being  a  large  enough  positive  rational  number, 

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

105

so that CS-opt((cid:4)C ) includes a coalition structure with C only if there is no other possible coalition structure at all. Clearly 
enough,  SWopt((cid:4)C ) can  be  again  computed  in  polynomial  time  by  Claim 6.2.  If  there  is  some  coalition  C ∈ (cid:2) such  that 
SWopt((cid:4)C ) = SWopt((cid:4)), then we have immediately derived that (i) does not hold. Otherwise, we have shown that to get the 
maximum social welfare in (cid:4), it is mandatory to include all the coalitions in (cid:2), so that (i) holds.

In this latter case, it remains to be checked whether (ii) holds, too. But, this now just requires to build the game (cid:4)(cid:2),-ε
and  to  compute  again  the  maximum  social  welfare,  by  eventually  checking  that  SW opt((cid:4)) = SWopt((cid:4)(cid:2),-ε).  Moreover,  it 
requires  to  answer  CS-Core-NonEmptiness (which  is  in  fact  immaterial)  over  (cid:4)(cid:2),-ε .  Therefore,  the  whole  computation  is 
feasible in polynomial time—game encodings can be built in polynomial time, as discussed in the proof of Theorem 4.1. (cid:3)

Similarly, moving from lines to cycles, we are again able to show tractability of a number of core-related questions. This 
is more interesting, since the presence of cycles can create instances with an empty core, even in superadditive games [38]. 
Moreover, a given cycle admits exponentially many coalition structures.

Theorem 6.3. Let R be any compact P-representation. On the class CC(R), CS-Core-Membership, CS-CoS, CS-Core-NonEmptiness, 
CS-LCV−

belongs to NP. Moreover, CS-Core-Find is in FP.

, and CS-LCV are in P, while CS-LCV+

Proof. Consider ﬁrst the CS-Core-Membership problem. Similarly to the proof of Theorem 6.1, it is suﬃcient to show that 
over cycles polynomially many coalitions can form, only. Indeed, if  (cid:4) = (cid:6)N, v, G(cid:7) is a game with  G ∈ C, then any feasible 
coalition  is  determined  by  two  (possibly  coinciding)  endpoints  and  the  direction  (clockwise  or  counterclockwise),  so  that 
there are at most 2 ×

such coalitions.

(cid:10)|N|
(cid:11)

(cid:10)|N|

+

(cid:11)

Let us now focus on the computation problem CS-Core-Find, and note that after the above observation we are precisely 
in the same position as in the proof of Theorem 6.1. So, we just show that we can compute an optimal coalition structure 
in polynomial time.

2

1

Claim 6.4. Let R be any compact P-representation. On the class CC(R), computing the maximum social welfare (and a feasible 
coalition structure with this value) is in FP.

By the tractability of CS-Core-Find, it follows that CS-Core-NonEmptiness is in P. Consider now CS-CoS. In this case, we 
have to decide whether CS-core((cid:4)(cid:5)) is not empty, where (cid:5) ≥ 0 is a rational number additionally given as input. Therefore, 
we are back to CS-Core-NonEmptiness on a game deﬁned on a cycle, and the result follows since an encoding for (cid:4)(cid:5) can 
be built in polynomial time (cf. Theorem 4.1).

Consider  now  CS-LCV−

.  In  this  case,  we  can  use  Lemma 3.9 and  precisely  the  same  argument  as  in  the  proof  of 
Theorem 6.1,  but  with  the  tractability  of  computing  the  maximum  social  welfare  now  provided  by  Claim 6.4 (instead  of 
Claim 6.2), and with the tractability of the CS-Core-NonEmptiness problem following by the above arguments (instead of 
being trivial).

Finally, we show that CS-LCV+

belongs to NP. The result follows by inspecting the proof of Theorem 4.3. Indeed, recall 
that the problem can be solved by a non-deterministic Turing machine that ﬁrst guesses a feasible coalition structure (cid:2) and 
then, given (cid:2) and ε, checks that: (1) (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε); (2) core( ˜(cid:4)(cid:2),-ε) (cid:15)= ∅. In fact, we know that (cid:4)(cid:2),-ε can be speciﬁed 
in  compact  form.  Hence,  (1)  can  be  checked  in  polynomial  time  because  of  Claim 6.4.  Similarly,  (2)  can  be  checked  in 
polynomial time, since we have already shown that CS-Core-NonEmptiness is in P over games deﬁned on cycles. (cid:3)

We next reﬁne the above result for CS-LCV+

, by focusing on superadditive games.

Theorem 6.5. Let R be any compact P-representation. On the class C sa

C (R), CS-LCV+

is in P.

Proof. Let (cid:4) = (cid:6)N, v, G(cid:7) be a superadditive game with G ∈ C and let ε be the penalty provided as input to CS-LCV+
. From 
Theorem 3.10, we know that CS-LCV((cid:4)) = LCV((cid:4)). Therefore, CS-LCV((cid:4)) ≤ ε holds if, and only if, core((cid:4)-ε) is not empty. In 
fact, (cid:4)-ε is a game deﬁned on a cycle which can be speciﬁed in compact form. The result then follows because core((cid:4)-ε) (cid:15)= ∅
can be checked in polynomial time (by the same arguments as in the proof of Theorem 6.3). (cid:3)

6.2.  A degree-based look at complexity results

A unifying feature of the classes C and L of interaction graphs is that each node has degree at most 2. Moreover, over 
connected  graphs  the  union  C ∪ L precisely  coincides  with  the  set  of  all  graphs  having  this  property.  Therefore,  if  D[≤ 2]
denotes the class of all interactions graphs where each node has at most two adjacent nodes, then the following is derived 
from the results provided in this section.

Corollary  6.6.  Let  R be  any  compact  P-representation.  On  the  class  CD[≤2](R),  CS-CoS,  CS-Core-Membership,  CS-
Core-NonEmptiness, and CS-LCV−
D[≤2](R)), 
CS-LCV+

are in P, while CS-Core-Find is in FP. Moreover, on the class CD[≤2](R) (resp., C sa

and CS-LCV are in NP (resp., P).

106

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

Fig. 5. Construction in Section 6.2.

The question hence emerges about whether the result is tight, i.e., whether interaction graphs whose nodes have degree 
at  most  3 already  suﬃce  to  encode  intractable  instances  of  core-related  questions.  We  next  show  that  this  is  the  case. 
The  line  of  the  proof  is  to  show  that  any  game  can  be  ‘simulated’  by  means  of  a  game  where  each  agent  has  degree  at 
most 3. Below, we incrementally present the construction. Prior to our result, it was known that a game without structural 
restrictions can be simulated by a structurally-restricted game where each agent has degree 6 at most (and by preserving 
the fact that the worth function is superadditive and simple) [54].

Let  (cid:4) = (cid:6)N, v, G(cid:7) be  a  structurally-restricted  characteristic  function  game  with  N = {1, . . . , n},  and  let  i ∈ N be  a  node 
such that the set of its adjacent nodes is  { j1, . . . , jk} with k > 3. Consider then the interaction graph  G|i built over a set 
N|i = N ∪ {n + 1, . . . , n + k} of  agents  as  follows  (and  depicted  in  Fig. 5).  There  is  an  edge  connecting  agent  i with  agent 
n + 1. For each h ∈ {1, . . . , k − 1}, there is an edge connecting agent n + h with n + h + 1 and an edge connecting agent n + h
with  jh. There is an edge connecting agent n + k with  jk. Each edge in  G such that i is not one of its endpoints is in  G|i . 
Finally, no further edge is in G|i .

Consider now the game (cid:4)|i = (cid:6)N|i, v|i, G|i(cid:7) where v|i is such that, for each feasible coalition C ∈ F (G|i),

(cid:9)

v|i(C) =

−R × (|N \ C| + 1),
v(C ∩ N)

if {i, n + 1, . . . , n + k} ∩ C (cid:15)= ∅ and |{i, n + 1, . . . , n + k} ∩ C| (cid:15)= k + 1
otherwise, i.e., either {i, n + 1, . . . , n + k} ⊆ C or C ⊆ N \ {i}

where R is set to n + k times an upper bound on the maximum absolute value over the payoffs associated with the various 
coalitions.  Intuitively,  R is  set  in  a  way  that  it  is  deﬁnitively  advantageous  for  the  agents  in  {i, n + 1, . . . , n + k} to  stay 
all  together  in  the  same  coalition.  Then,  for  any  coalition  C ⊆ N,  we  denote  by  C|i the  coalition  C itself  if  i /∈ C ,  and  the 
coalition C ∪ {n + 1, . . . , n + k} if i ∈ C holds. Similarly, for any coalition structure (cid:2) over G, we denote by (cid:2)|i the coalition 
structure where each element C ∈ (cid:2) is replaced by C|i . The following is immediate by construction.

Fact 6.7. Assume that (cid:2)∗

is a coalition structure in CS-opt((cid:4)|i). Then, there is a coalition structure (cid:2) over G such that (cid:2)∗ = (cid:2)|i .

With the above notation and result in place, we can show the following technical result relating the coalition structure 

cores of (cid:4) and (cid:4)|i .

Lemma 6.8. The following statements hold on the games (cid:4) and (cid:4)|i .

(A) If ((cid:2), x) is in CS-core((cid:4)), then ((cid:2)|i, x

∗
∗) is in CS-core((cid:4)|i) where x

∗
is such that x
j

∗
= x j , for each  j ∈ N; and x
j

= 0, for each 

(B) Let ((cid:2)∗, x

∗
∗) be in CS-core((cid:4)|i), and let x be such that xi = x
i

+ x

∗
∗({n + 1, . . . , n + k}) and x j = x
j , for each  j ∈ N \ {i}. Then, 

j ∈ {n + 1, . . . , n + k}.

((cid:2), x) is in CS-core((cid:4)), where (cid:2)|i = (cid:2)∗

.

(cid:2)

Proof. (A)  Assume  that  ((cid:2), x) is  an  element  in  CS-core((cid:4)).  Since  x is  an  imputation  for  (cid:2),  we  have  that  x(C) = v(C)
holds, for each C ∈ (cid:2), and x j ≥ v({ j}) holds, for each  j ∈ N. Then, consider the corresponding coalition C|i ∈ (cid:2)|i and note 
∗
∗(C|i) = x(C) = v(C) = v|i(C).  Moreover,  for  each  j ∈ {n + 1, . . . , n + k},  x
∗
= 0 ≥ −R ≥ v|i({ j}).  Therefore,  x
that  x
is  an 
j
∗
is stable. To this end, consider a feasible 
imputation for (cid:2)|i in the game (cid:4)|i . To conclude the proof, we have to show that x
coalition  C ∈ F (G|i).  In  the  case  where  {i, n + 1, . . . , n + k} ∩ C (cid:15)= ∅ and  |{i, n + 1, . . . , n + k} ∩ C| (cid:15)= k + 1,  it  holds  that 
∗(C) = x(C ∩ N) =
j∈C∩N v({ j}) ≥ −R ≥ v|i(C). Instead, in the case where either {i, n + 1, . . . , n + k} ⊆ C or 
x
∗(C) = x(C ∩ N) ≥ v(C ∩ N) = v|i(C), where x(C ∩ N) ≥ v(C ∩ N) follows by the fact that ((cid:2), x) is 
C ⊆ N \ {i}, we have that x
an element in CS-core((cid:4)) and by observing that C ∩ N is feasible over G in this case. By putting it all together, we conclude 
that ((cid:2)|i, x

∗) be in CS-core((cid:4)|i). First, observe that by Fact 6.7 (combined with Fact 2.1) there is a coalition structure 
∗
∗({n + 1, . . . , n + k});  x j = x
j ,  for 
∗({i, n + 1, . . . , n + k}) ≥ v|i({i, n + 1, . . . , n + k}) = v({i}), and 
≥ v|i({ j}) = v({ j}) for each  j ∈ N \ {i}. That is, x is an imputation for (cid:2) in the game (cid:4). We now conclude by showing 

∗
(cid:2) over  G such  that  (cid:2)∗ = (cid:2)|i .  Then,  consider  the  payoff  vector  x such  that  xi = x
i
∗
each  j ∈ N \ {i}. Note that  xi = x
i
∗
x j = x
j

∗({n + 1, . . . , n + k}) = x

∗) is in CS-core((cid:4)|i).

(B) Let ((cid:2)∗, x

j∈C∩N x j ≥

+ x

+ x

(cid:2)

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

107

that x is stable. Indeed, for each coalition C that is feasible over G, note that x(C) = x
i /∈ C . Instead, in the case where  i is in  C ,  x(C) = x
((cid:2), x) is in CS-core((cid:4)). (cid:3)

∗(C) ≥ v|i(C) = v(C) holds, whenever 
∗(C ∪ {n + 1, . . . , n + k}) ≥ v|i(C ∪ {n + 1, . . . , n + k}) = v(C). Therefore, 

Moreover, we can show that the transformation preserves superadditivity.

Theorem 6.9. If (cid:4) is superadditive, then (cid:4)|i is superadditive, too.

Proof. Assume that (cid:4) is superadditive and let S and T be two feasible disjoint coalitions over N|i such that S ∪ T is feasible, 
too. If v|i(S) = v(S ∩ N) and v|i(T ) = v(T ∩ N), then v|i(S ∪ T ) = v((S ∪ T ) ∩ N) holds and, hence, v|i(S ∪ T ) ≥ v(S ∩ N) + v(T ∩
N) = v|i(S) + v|i(T ). If v|i(S) (cid:15)= v(S ∩ N), v|i(T ) (cid:15)= v(S ∩ N), and v|i(S ∪ T ) = v((S ∪ T ) ∩ N), then given the choice of R we are 
trivially guaranteed that v|i(S ∪ T ) ≥ v|i(S) + v|i(T ). If v|i(S) (cid:15)= v(S ∩ N), v|i(T ) (cid:15)= v(T ∩ N), and v|i(S ∪ T ) (cid:15)= v((S ∪ T ) ∩ N), 
then we have v|i(S ∪ T ) = −R × (|N \ (S ∪ T )| + 1) ≥ −R × (|N \ S| + 1) − R × (|N \ T | + 1) = v|i(S) + v|i(T ). Consider then 
the remaining case where  v|i(S) = v(S ∩ N) and  v|i(T ) (cid:15)= v(T ∩ N). Note that this entails that  v|i(S ∪ T ) (cid:15)= v((S ∪ T ) ∩ N). 
Thus, v|i(S ∪ T ) = −R × (|N \ (S ∪ T )| + 1) ≥ −R × (|N \ T | + 1 − 1) = v|i(T ) + R ≥ v|i(T ) + v(S ∩ N) = v|i(T ) + v|i(S). (cid:3)

These results are the crucial ingredients to prove the following, where D[≤ 3] denotes the class of all interaction graphs 

whose nodes have degree at most 3.

Theorem 6.10. Let R be any compact P-representation such that mcn (cid:3)e R. On the class C sa
CS-Core-NonEmptiness, CS-LCV−
, and CS-LCV+
CS-CoS,  CS-Core-NonEmptiness,  and  CS-LCV−
co-NP-complete.

D[≤3](R), CS-Core-Membership, CS-CoS, 
are co-NP-complete, whereas CS-Core-Find is NP-hard. On the class CD[≤3](R), 
are  (cid:2)P
2 -complete,  whereas  CS-Core-Membership is 

2 -complete,  CS-LCV+

is  (cid:3)P

Proof. Let (cid:4) be a game where i ∈ N is a node such that the set of its adjacent nodes is { j1, . . . , jk} with k > 3, and consider 
the game (cid:4)|i . By Lemma 6.8, CS-Core-NonEmptiness can be equivalently answered over (cid:4)|i in place of (cid:4). However,  G|i is 
an interaction graph where all the fresh nodes have degree bounded by 3, all nodes in  G but i keep their original degree, 
and  node  i has  degree  1.  Therefore,  the  number  of  nodes  whose  degree  is  greater  than  3  decreases  when  moving  from 
(cid:4) to  (cid:4)|i .  If  (cid:4)|i contains  no  node  whose  degree  is  greater  than  3,  then  we  have  concluded.  Otherwise,  we  can  apply  the 
transformation on (cid:4)|i , by considering a node  j whose degree is greater than 3.

The  above  line  of  reasoning  leads  to  a  sequence  of  at  most  |N| games  converging  to  a  game  (cid:4)(cid:13) ∈ CD[≤3].  Moreover, 
Lemma 6.8 transitively applies to all these games, so that CS-core((cid:4)) = ∅ if, and only if, CS-core((cid:4)(cid:13)) = ∅. Similarly, given the 
deﬁnition  of  R,  the  proof  of  Lemma 6.8 can  be  smoothly  adapted  to  show  that  the  least  coalition  structure  core  value  is 
preserved in the transformation. And, ﬁnally, by Theorem 6.9, if (cid:4) is superadditive, then (cid:4)(cid:13)

is superadditive, too.

Now,  we  claim  that  (cid:4)|i can  be  encoded  in  terms  of  a  marginal  contribution  network  M|i ,  provided  that  (cid:4) is  already 
given as a marginal contribution network  M. Let none denote the conjunction ¬ai ∧ ¬an+1 ∧ · · · ∧ ¬an+k and let all denote 
the  conjunction  ai ∧ an+1 ∧ · · · ∧ an+k.  Then,  for  each  rule  having  the  form  {pattern} → value in  M,  the  novel  encoding 
M|i includes the rules {pattern ∧ none} → value and {pattern ∧ all} → value. Moreover,  M|i includes the rules {¬ah} → −R, 
{¬ah ∧ none} → R, and {¬ah ∧ all} → R, for each agent ah ∈ N, plus the rules {all} → R, {none} → R, and {} → −R. No further 
rule is in M|i . Again, by repeatedly applying this transformation, we end up in polynomial time with a marginal contribution 
. This shows that any hardness result for the problems CS-CoS, CS-Core-NonEmptiness
network  M
(hence, Core-Find), and CS-LCV still holds over the subclass of those games encoded via marginal contribution networks and 
whose interaction graphs belong to D[≤ 3]. The results in the statement about these problems then follow by our results in 
Section 4.

encoding the game (cid:4)(cid:13)

(cid:13)

Finally, note that the problem CS-Core-Membership on input a pair ((cid:2), x) can be equivalently formulated as the problem 
∗) deﬁned in Lemma 6.8.(A) belongs to the coalition structure core of (cid:4)|i . In fact, the 
of checking whether the pair ((cid:2)|i, x
equivalence follows by both points in that lemma. By iteratively applying the transformation, the problem can be equiva-
lently formulated as the problem of checking whether a pair ((cid:2)(cid:13), x
(cid:13)), which can be built in polynomial time, belongs to the 
coalition structure core of the game (cid:4)(cid:13)
. Thus, all hardness results about CS-Core-Membership hold over games encoded via 
marginal contribution networks and whose interaction graphs belong to D[≤ 3]. Again, the results in the statement about 
CS-Core-Membership follow by our results in Section 4. (cid:3)

7.  Related work

The  model  considered  in  this  paper,  where  coalitional  games  are  equipped  with  interaction  graphs  constraining  the 
formation of coalitions among the agents, goes back to the seventies [14], but has recently attracted more attention in the 
literature because of its natural applicability in real-world domains. For instance, algorithms to compute the Shapley value
and related concepts in this model have been studied by [58,59] (see also the references therein), with applications to the 
analysis of terrorist networks. Moreover, task allocation problems arising over agents interconnected in a social environment 

108

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

have  been  studied  by [60].  Within  this  setting,  our  goal  has  been  instead  to  characterize  the  complexity  of  core-related 
questions, which are largely unexplored in the literature.

Recently,  complexity  issues  over  social  networks  have  been  studied  by  Sless  et  al. [61].  However,  in  their  model  all 
coalitions are allowed to form (with the network being only used to provide values to the coalitions, in the spirit of graph 
games [24]). Moreover, coalition structures are restricted to those consisting of k coalitions only, with k being the number 
of tasks that a central authority is asking the agents to execute. In fact, works that are closely related to our research either 
focused  on  the  speciﬁc  case  where  interaction  graphs  are  trees,  or  analyzed  the  setting  of  complete  interaction  graphs, 
hence reducing to the standard setting where all coalitions are allowed to form. Concerning the former case, we observe 
that  in [17] and [18] it  is  shown  that  if  a  game  is  superadditive  and  the  graph  is  a  tree,  then  the  core  is  non-empty. 
However,  their  existential  proof,  based  on  Scarf’s  lemma [62],  does  not  provide  an  eﬃcient  algorithmic  construction  of  a 
core  element.  The  follow-up  work  by  Demange [19] not  only  guarantees  that  the  coalition  structure  core  is  non-empty 
for trees, for both superadditive and non-superadditive games, but it also proposes a procedure that computes an element 
in  the  core.  Although  Demange’s  algorithm  does  not  run  in  polynomial  time  for  non-superadditive  games,  it  can  be  seen 
that  it  does  so  for  superadditive  ones.  In  fact,  this  is  the  best  one  can  hope  for,  given  that  computing  an  element  in  the 
coalition  structure  core  is  known  to  be  NP-hard,  even  over  (i) trees [53,32],  and  over  (ii) simple  and  monotone  games 
with  interaction  graphs  having  treewidth  2 (cf.  [32]).  Our  results  evidence  that  hardness  holds  in  the  same  setting,  but 
even  on  marginal  contribution  networks.  Moreover,  in  addition  to  the  computation  problem,  we  have  considered  the  de-
cision problems CS-Core-NonEmptiness and CS-Core-Membership, by providing completeness results for the classes co-NP
and (cid:2)P
2 .

Moving  to  the  standard  setting  where  all  coalitions  are  allowed  to  form,  several  works  in  the  literature  can  be  found 
where  the  complexity  of  core-related  questions  is  addressed  (see,  e.g.,  [26,24,27,25,5,28,9]).  However,  these  works  tacitly 
assume that the goal is to distribute the total payoff available to the grand-coalition, and they do not take into account the 
possibility of forming coalition structures. In fact, our main source of knowledge for the complexity of the coalition structure 
core  is  the  work  by  Elkind  et  al. [42],  where  NP-hardness  results  for  CS-Core-NonEmptiness and  CS-Core-Membership
problems over weighted voting games are illustrated. In the paper, we have provided non-trivial upper bounds that apply 
to any game that is given in compact representation (and hence apply to weighted voting games, too), and we have shown 
the corresponding hardness results over games encoded as marginal contribution networks.

Closely related to our research are also complexity studies where the traditional concept of the core is adopted (again 
with all coalitions being allowed to form), but where the focus is on games that are superadditive. Indeed, in this setting, 
the coalition structure core reduces to the (standard) core. With this respect, we refer the reader to the work by Conitzer 
and  Sandholm [5] on  games  based  on  synergies  among  coalitions,  by  stressing  however  that  this  work  does  not  ﬁt  our 
deﬁnition of P-representation, as even computing the payoff associated with some given coalition is NP-hard there. Instead, 
it is worth noticing that a study of the complexity of the problems CS-Core-NonEmptiness and CS-Core-Membership over 
superadditive marginal contribution networks has been recently carried out by Li and Conitzer [31], in fact independently 
of our work. The authors considered an extension of marginal contribution networks where the Boolean connective ‘∨’ can 
be used (in addition to ‘∧’ and ‘¬’), and charted the picture of complexity results as the allowed connectives vary. For the 
case where all values associated with the rules are non-negative, they observed that without disjunction and negation the 
problems are tractable, but they become co-NP-hard when negation is additionally taken into account. Our results stated in 
Theorem 4.9 and Theorem 4.10 further strengthened this ﬁnding, as they evidence that intractability suddenly emerges as 
soon as even just one occurrence of ‘¬’ is allowed in each rule.

and CS-LCV+

Note  that,  in  addition  to  the  problems  CS-Core-NonEmptiness and  CS-Core-Membership,  we  have  considered  other 
core-related  questions  involving  approximations  of  the  core,  namely  the  problems  CS-CoS and  CS-LCV (with  its  variants 
CS-LCV−
). The complexity analysis conducted over them does not have counterparts in the existing literature. 
However, one should point out that the cost of stability has been studied in depth from an analytical viewpoint, even in its 
general formulation over coalition structures, and in the presence of interaction graphs (see [54,38,32,39]). In particular, the 
cost of stability has been connected to the treewidth of the interaction graph in [32,54]. Connections with other parameters 
of the games and of the interaction graphs have been studied by Meir et al. [38], who also provided results for a least core 
notion,  which  nevertheless  differs  from  ours  in  that  it  imposes  a  penalty  for  leaving  the  grand-coalition  (rather  than  for 
an arbitrary coalition structure to be rendered stable). Finally, bounds on the cost of stability for general, subadditive, and 
anonymous games are given in [39], where the special case of facility games is also discussed.

Interestingly,  as  a  side  result  of  our  analysis,  we  have  shown  the  tractability  of  the  problem  of  computing  an  optimal 
coalition structure over lines and cycles. This (optimal) coalition structure generation (CSG) problem has attracted much atten-
tion in the literature, because of its applications in the design and analysis of multi agent systems (see, e.g., [63–67]). The 
framework discussed by Voice et al. [68], in particular, is very close to ours. Indeed, they studied a model for coalition for-
mation where feasible coalitions are also identiﬁed on the basis of an underlying interaction graph. However, their results 
are  for  payoff  functions  that  are  independent of disconnected members—that  is,  two  agents  have  no  effect  on  each  other’s 
marginal contribution to their vertex separator. In addition, several tractability results are known in the CSG literature for 
speciﬁc representation schemes and for speciﬁc kinds of interaction graphs [66,68,69]. A number of useful results are known 
for games encoded in terms of marginal contribution networks [70–72]. However, it must be observed that our results are 
independent of the speciﬁc representation scheme used (provided that payoff functions are computable in polynomial time), 
while being speciﬁc for interaction graphs that are lines and cycles.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

109

Finally, we note that our work is originating from two earlier papers, namely [53] and [36]. Nevertheless, we stress that 
the results reported in this paper signiﬁcantly extend and generalize those discussed in [53,36]. In particular, the analysis 
of  the  computational  issues  arising  with  lines  and  cycles  (excluding  the  problems  related  to  the  cost  of  stability  and  to 
the least core) appears in a preliminary form in [53]. The work of [36] focuses on deriving complexity results for complete 
interaction graphs and for bounded treewidth graphs. An oracle setting has been considered in [36], which ignores any issues 
related to the representation of the payoff functions, and even the space needed for the encodings and the time necessary 
to build them in the reductions. In our paper, completely different machineries have therefore been employed in order to 
show  that  the  results  hold  even  on  marginal  contributions  networks.  Finally,  we  also  note  that  the  classiﬁcation  of  the 
complexity based on the degree of the nodes and the analysis of the problems CS-LCV−
(together with the 
characterizations for the least coalition structure core) are entirely novel contributions.

and CS-LCV+

8.  Conclusions

We analyzed stability issues in compact coalitional games—i.e., games described via a compact encoding, and equipped 
with interaction graphs constraining the formation of coalitions among agents according to the model introduced by Myer-
son [14]. We studied the complexity of interesting computational problems in this setting over various (interaction) graph 
structures, and we presented a classiﬁcation based on the degree of the nodes. In particular, positive complexity results have 
been obtained for graph structures, such as trees and cycles, that form the backbone of networks found in the real world. 
Our results can serve as indications for the tractability of respective real world coalitional game settings, and could help to 
design practical solution algorithms.

Our  results  are  summarized  in  Table 1,  Table 2,  and  Table 3.  All  the  entries  are  either  tractability  results  or  hard-
ness results (over marginal contribution networks) for which the corresponding membership result is given (over arbitrary 
P-representations).  A  completeness  result  is  missing  only  for  the  CS-LCV+
problem  on  arbitrary  games  over  cycles  and 
bounded  treewidth  interaction  graphs.  Other  avenues  of  research  naturally  include  the  study  of  further  classes  of  inter-
action  graphs  (for  instance,  of  classes  of  graphs  having  bounded  vinewidth,  a  notion  generalizing  treewidth  and  recently 
introduced by [73] to analyze the cost of stability), and the study of hypergraph-based representations and restrictions (see, 
e.g., [74]). Moreover, it would be interesting to study alternative stability concepts and payoff allocation schemes, such as 
the kernel, the Shapley value, and the nucleolus [28,75]. In particular, it would be relevant to assess whether solution con-
cepts  can  be  singled  out  which  somewhat  satisfy  the  core  constraints  and  are  computationally  tractable  even  if  applied 
over  arbitrary  interactions  graphs.  Yet  another  avenue  for  research  is  the  study  of  approximation  algorithms  to  deal  with 
the  problems  analyzed  in  this  paper,  which  would  possibly  match  the  inapproximability  results  that  trivially  follow  from 
the reductions we exploited to prove the hardness results. Finally, we also envisage to concretely link our theoretical results 
to real-world applications. For instance, virtual power plants corresponding to coalitions of electricity consumers or (poten-
tially heterogeneous) alternative energy producers, present natural paradigms where the grouping of agents is restricted by 
technical or legal considerations [76].

Acknowledgements

We  are  grateful  with  the  anonymous  referees  for  their  useful  suggestions  that  helped  us  to  improve  the  qual-
ity  of  the  paper.  They  pointed  out  a  work [31] published  during  the  review  period,  where  co-NP-hardness  proofs  for 
CS-Core-Membership and CS-Core-NonEmptiness over MC-nets have been exhibited—stimulated by this reference, we fur-
ther improved the original proofs of Theorem 4.9 and Theorem 4.10, where hardness results were shown to hold for rules 
containing at most 3 negative literals.

We also thank E. Malizia, L. Palopoli, F. Scarcello, and N.R. Jennings for their permission to adapt co-authored material 

for this article.

G. Greco was also supported by a Kurt Gödel Research Fellowship, awarded by the Kurt Gödel Society.
E. Markakis  was  also  supported  by  the  European  Union  (European  Social  Fund)  and  Greek  national  funds  through  the 
Operational  Program  “Education  and  Lifelong  Learning”  of  the  National  Strategic  Reference  Framework  (NSRF)—Research 
Funding Program: THALES.

Appendix A.  Proofs of the claims

Claim 4.2. Let R be any compact P-representation, and let G be any class of graphs. On the class CG(R), computing the maximum 
social welfare and an optimal coalition structure is feasible in F(cid:2)P
2 .

Proof. We exhibit an algorithm that works in two steps.

First, let n be the number of bits used to represent the encoding ξ R((cid:4)), and consider an oracle that receives as input a 
natural number h > 0, and checks whether there is a feasible coalition structure (cid:2), such that the size required to encode 
R(ξ R((cid:4)), C) is at least h. Since R is a P-representation, the 
(in the standard fractional form) the rational number 
encoding for the social welfare of any feasible coalition structure requires polynomially many bits. Therefore, the oracle can 
just guess (in NP) the coalition structure (cid:2), in order to subsequently check in polynomial time that the desired conditions 

C∈(cid:2) v

(cid:2)

110

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

∗

∗

such that nk

hold. This oracle is ﬁrstly invoked over the input h = nk, with k = 1. If the oracle succeeded to ﬁnd a coalition structure of 
this kind, then it is invoked over h = nk, with k = 2, and so on for increasingly large values of k. Eventually, after a constant 
number of invocations, the process converges to a value k
is an upper bound on the size required to encode 
the payoff associated with any feasible coalition structure. In the following, let m = nk
(cid:2)

For  the  second  step,  we  start  by  asking  an  oracle  whether  there  is  a  feasible  coalition  structure  (cid:2) such  that 
R(ξ R((cid:4)), C) ≥ 0.  Let  us  analyze  the  scenario  where  this  is  actually  the  case,  so  that  SW opt((cid:4)) is  a  value  such 
C∈(cid:2) v
that  0 ≤ SWopt((cid:4)) ≤ M.  In  order  to  compute  SWopt((cid:4)),  one  can  use  well-known  methods  to  search  for  rational  num-
bers  encoded  in  the  fractional  form  p/q (see [77],  and  the  references  therein).  More  formally,  observe  that  the  value 
α∗ = SWopt((cid:4)) × 2 × M2 is such that 0 ≤ α∗ ≤ 2 × M3, and let us compute the integer value μ such that μ ≤ α∗ < μ + 1. 
This  task  can  be  easily  accomplished  by  means  of  a  binary  search  using  an  oracle  receiving  as  input  an  integer  y with 
R(ξ R((cid:4)), C) × 2 × M2 ≥ y. 
0 ≤ y ≤ 2 × M3, and checking whether there is a feasible coalition structure (cid:2) such that 
In  fact,  the  search  space  is  exponential  in  the  size  of  the  representation  of  the  game,  but  the  number  of  calls  made  to 
the  oracle  is  polynomial  (w.r.t. m)  because  we  have  to  focus  on  integer  values  only  and  because  we  are  using  a  binary 
search  (with  M = 2m).  Therefore,  after  polynomially  many  NP oracle  calls,  we  have  computed  the  integer  value  μ,  with 
0 ≤ μ ≤ 2 × M3, such that

and M = 2m.

C∈(cid:2) v

(cid:2)

∗

μ
2 × M2

≤ SWopt((cid:4)) <

μ + 1
2 × M2

.

∗

∗

q

∗

(cid:2)

(cid:2)

(cid:2)

1
M2

q∗×q

≥ 1

≥ 1

C∈(cid:2)∗ v
= p

C∈(cid:2) v
(cid:2)
+

M2 . Therefore, 

Now,  assume  that  (cid:2)∗
C∈(cid:2) v

R(ξ R((cid:4)), C) ≥ μ
tional  forms  for  the  values 
(cid:2)
R(ξ R((cid:4)), C) <
C∈(cid:2) v

is  an  optimal  coalition  structure  and  that  (cid:2) (cid:15)= (cid:2)∗

2×M2 .  We  claim  that  (cid:2) is  optimal,  too.  Indeed,  let  p/q and  p
(cid:2)
(cid:2)

is  a  feasible  coalition  structure  such  that 
∗/q
be  the  irreducible  frac-
R(ξ R((cid:4)), C),  respectively.  Assume  by  contradiction  that 
∗×q−p×q
R(ξ R((cid:4)), C) ≥
q∗ − p
q∗×q
2×M2 , which is impossible.

R(ξ R((cid:4)), C) and 
C∈(cid:2) v
R(ξ R((cid:4)), C). Then,  p
2×M2 > μ+1
+ μ

C∈(cid:2)∗ v
R(ξ R((cid:4)), C) ≥ 1
M2

In light of the above observation, we now aim to compute an arbitrary coalition structure (cid:2) such that 

R(ξ R((cid:4)),
R(ξ R((cid:4)), C) = SWopt((cid:4)) holds. To this end, 
C) ≥ μ
2×M2 , since we are guaranteed that for any coalition of this kind, 
we use another NP oracle deﬁned as follows. The oracle receives as input a set {S 1, . . . , Sm, Sm+1} of disjoint coalitions and 
decides whether there is a feasible coalition structure  ¯(cid:2) ⊇ {S1, . . . , Sm, S
2×M2 and where 
∗
⊇ Sm+1.  The  oracle  is  invoked  starting  with  m = 0.  At  each  step,  Sm+1 is  initially  deﬁned  as  the  empty  set,  and  it 
S
m+1
is progressively enlarged by including agents that are not covered so far, ending up with a maximal set  Sm+1 over which 
the oracle still returns a positive answer. At this point, m is incremented and the process is repeated, until all agents are 
covered in the current set of disjoint coalitions. By the non-deterministic nature of the computation, we are immediately 
guaranteed that the set computed in this way, say (cid:2), is an optimal coalition structure for (cid:4).
Eventually, now that an optimal coalition structure (cid:2) is at hand, its associated value 

R(ξ R((cid:4)), C) can be explic-
itly computed—note that, so far, we just exploited the knowledge of a lower bound for it. Overall, we have shown that the 
whole computation, for the case where SWopt((cid:4)) ≥ 0 holds, is feasible in F(cid:2)P
2 .

R(ξ R((cid:4)), C) ≥ μ

} with 

C∈(cid:2)∗ v

C∈(cid:2) v

C∈(cid:2) v

C∈(cid:2) v

C∈(cid:2) v

∗
m+1

(cid:2)

(cid:2)

(cid:2)

(cid:2)

In  order  to  complete  the  proof,  we  need  now  to  consider  the  case  where,  at  the  beginning  of  the  second  phase,  we 
(cid:2)
R(ξ R((cid:4)), C) ≥ 0. This means that SWopt((cid:4)) < 0 and 
realize that there is no feasible coalition structure (cid:2) such that 
the same line of reasoning as above can be applied, by just inverting the sign of the payoff function and by considering a 
minimization problem in place of a maximization one. (cid:3)

C∈(cid:2) v

Claim 4.7. ∃∀CNF-UNSAT is (cid:3)P
existentially and universally quantiﬁed variables of (cid:10), respectively, σ a (cid:25) σ b |= (cid:10) if, and only if, σ a (cid:25) ¯σ b |= (cid:10).

2 -hard even restricted to formulas (cid:10) such that, for each pair of assignments σ a and σ b over the 

(cid:13)(cid:13)
i

∨ P and c

= y j,1 ∨ · · · ∨ y j,k j

Proof. Assume  that  (cid:7) = c1 ∧ · · · ∧ cm is  a  Boolean  formula  in  conjunctive  normal  form  over  the  sets  N∃ and  N∀ of  exis-
(cid:13)(cid:13)
tentially and universally quantiﬁed variables, respectively. Consider the formula (cid:10) = c
m such that 
(cid:13)
= h( y j,1) ∨ · · · ∨ h( y j,k j ) ∨ ¬P , for each  j ∈ {1, . . . , m}, where  P is a fresh universally quan-
c
i
tiﬁed variable and h is a function such that h(Z ) returns the literal  Z (resp., the complement  ¯Z ) whenever  Z is built over a 
(cid:13)
∀ = N∀ ∪ {P }. By construction, we immediately observe that for each pair of assignments σ a
variable in N∃ (resp., N∀). Let N
(cid:13)
∀, respectively, σ a (cid:25) σ b |= (cid:10) if, and only if, σ a (cid:25) ¯σ b |= (cid:10). We now show that (cid:10) is “equivalent” to (cid:7).
and σ b over N∃ and N
Let σ a be any truth assignment over N∃. Then, the following statements are equivalent: (1) for each assignment σ b over 
(cid:13)
(cid:15)|= (cid:7).  The  fact  that  (1)  implies  (2)  is  immediate,  by  just 
∀, σ a (cid:25) σ b (cid:15)|= (cid:10);  (2)  for  each  assignment σ b
N
considering  the  assignments  σ b such  that  σ b(P ) is  false.  To  show  that  the  converse  holds,  assume  that  σ b is  such  that 
σ a (cid:25) σ b |= (cid:10), so (1) does not hold. In the case where σ b(P ) is false, then the restriction of σ b over the variables in N∀, say 
|= (cid:7). In both cases, 
(cid:7), is such that σ a (cid:25) σ b
σ b
(cid:7)
we get that (2) does not hold. (cid:3)

|= (cid:7). Instead, in the case where σ b(P ) is true, then  ¯σ b

(cid:7) is such that σ a (cid:25) ¯σ b
(cid:7)

(cid:7) over  N∀, σ a (cid:25) σ b
(cid:7)

∧ · · · ∧ c

∧ · · · ∧ c

∧ c

(cid:13)
m

(cid:13)(cid:13)
1

(cid:13)
1

Claim 4.8. Assume that ε = 1

3 . Then, CS-opt((cid:4)∃∀

(cid:2),-ε) = {{ A ∪ {r}, ˆA, N∀ ∪ ˆN∀} | A ⊆ N∃ ∪ ˆN∃ is ∃-consistent}.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

111

Proof. Let  (cid:2) A be  the  coalition  structure  such  that  (cid:2) A = { A ∪ {r}, ˆA, N∀ ∪ ˆN∀},  where  A ⊆ N∃ ∪ ˆN∃ is ∃-consistent.  Note 
that  v( A ∪ {r}) + v( ˆA) + v(N∀ ∪ ˆN∀) = 1 + 0 + 0 = 1. In fact, (cid:2) A belongs to CS-opt((cid:4)∃∀). In particular, note that  v( ˆA) = 0, 
because  ˆA is  ∃-consistent,  r /∈ ˆA,  and  ˆA ⊆ N∃ ∪ ˆN∃.  Since  we  are  assuming  ε ≥ 0,  then  (cid:2) A belongs  to  CS-opt((cid:4)∃∀
(cid:2) A ,-ε), 
(cid:13) ⊆ N∃ ∪ ˆN∃ which is ∃-consistent. 
too.  Consider  now  any  coalition  structure  (cid:2) such  that  (cid:2) (cid:15)= (cid:2) A(cid:13) holds,  for  each  set  A
C∈(cid:2) v(C) < 0. Instead, 
Note that 
v(cid:2),-ε( A ∪ {r}) + v(cid:2),-ε( ˆA) + v(cid:2),-ε(N∀ ∪ ˆN∀) ≥ 1 − ε + 0 − ε + 0 − ε = 1 − 3
(cid:2),-ε . (cid:3)

C∈(cid:2) v(C) < 0 holds, by deﬁnition of the payoff function  v. Hence, 

= 0 holds. That is, (cid:2) is not optimal in (cid:4)∃∀

C∈(cid:2) v(cid:2),-ε(C) =

(cid:2)

(cid:2)

(cid:2)

3

Claim 5.8. Let R be any compact P-representation such that mcn (cid:3)e R. On the class CTW-1(R), computing the maximum social 
welfare is NP-hard. In particular, a reduction can be exhibited where optimal coalition structures one-to-one correspond to optimal 
tours for a TSP instance provided as input.

Proof. By deﬁnition of the marginal contribution network  M, each coalition C with t /∈ C is such that  v(C) = 0. Therefore, 
if (cid:2) ∈ CS-opt((cid:4)), then (cid:2) includes an optimal coalition C , whose corresponding optimal tour is T (C). All other agents occur 
in (cid:2) as singletons, as there is no way to form coalitions consisting of more than two agents in absence of t. Eventually, we 
get SW((cid:2)) = n × W −
ei, j ∈T (C) w(ei, j). On the other hand, it is immediate that if  T is an optimal tour, then there is an 
optimal coalition structure (cid:2) including C and all other agents as singletons. As optimal coalition structures correspond to 
optimal tours, their computation is NP-hard, given the hardness of the traveling salesmen problem. (cid:3)

(cid:2)

Claim 5.12. Let R be any compact P-representation, let (cid:4) ∈ C sa
{N} ∈ CS-opt((cid:4)-ε). Moreover, CS-LCV−

is in co-NP.

TW-1(R), and let ε ≤ 0. Then, CS-LCV((cid:4)) ≤ ε holds if, and only if, 

Proof. Since  the  coalition  structure  core  of  (cid:4) is  always  non-empty [19],  by  Fact 3.5 CS-LCV((cid:4)) ≤ ε holds  if,  and  only  if, 
there is a feasible coalition structure (cid:2) such that (cid:2) ∈ CS-opt((cid:4)(cid:2),-ε). However, because (cid:4) is superadditive and ε ≤ 0, the 
check can be restricted to the grand-coalition {N}. Moreover, concerning the complexity of CS-LCV−
, we can just focus on 
the  complementary  problem  of  deciding  whether  CS-LCV((cid:4)) > ε,  and  observe  that  it  can  be  solved  in  NP by  guessing  a 
feasible coalition structure  ¯(cid:2) and by checking that 

¯C∈ ¯(cid:2) v-ε( ¯C) > v(N) holds. (cid:3)

(cid:2)

Claim 6.2. Let R be any compact P-representation. On the class CL(R), computing the maximum social welfare (and a feasible coalition 
structure with this value) is in FP.

Proof. Let  (cid:4) = (cid:6)N, v, G(cid:7) be  a  game  where  G is  a  line,  with  N = {1, . . . , n}.  To  keep  notation  simple  and  without  loss  of 
generality, assume that, for each  j ∈ {1, . . . , n − 1}, there is an edge in G connecting  j and  j + 1, and that there is no further 
edge in G. Consider the following recursive deﬁnition of the values sw j , for each  j ∈ {0, . . . , n}:

(cid:12)

sw 0 = 0;
sw j = max{v({i, . . . , j}) + sw i−1 | i ∈ {1, . . . , j}}, for each j ∈ {1, . . . , n}.

Moreover, for each  j ∈ {1, . . . , n}, let (cid:4) j = (cid:6){1, . . . , j}, v j, G j(cid:7) denote the game where  G j is the subgraph of  G induced 
over  the  nodes  {1, . . . , j} (therefore  a  line  with  endpoints  1 and  j),  and  where  v j
is  such  that  v j(C) = v(C),  for  each 
coalition C ∈ F (G j). By keeping this notation, it is immediate to check that for each  j ∈ {1, . . . , n}, sw j = SWopt((cid:4) j) holds. 
Therefore,  SWopt((cid:4)) coincides  with  the  value  sw|N|.  By  implementing  the  above  deﬁnition  via  dynamic  programming,  it 
C∈(cid:2) v(C) = SWopt((cid:4)) can be computed in 
immediately follows that SWopt((cid:4)) and an optimal coalition structure (cid:2) with 
polynomial time when (cid:4) is given according to any P-representation. (cid:3)

(cid:2)

Claim 6.4. Let R be any compact P-representation. On the class CC(R), computing the maximum social welfare (and a feasible 
coalition structure with this value) is in FP.

Proof. Assume that (cid:4) = (cid:6)N, v, G(cid:7) is a game where  G is a cycle with |N| = n, and let  L1, . . . , Ln be the n lines that can be 
obtained by removing exactly one edge from G. Then, an optimal coalition structure is either the grand-coalition  N, or the 
best coalition structure over the optimal coalition structures of  L1, . . . , Ln. Since SWopt(Li) can be computed in polynomial 
time (with a witness for it), for each i ∈ {1, . . . , n} (cf. Claim 6.2), the result is established. (cid:3)

References

[1] J. von Neumann, O. Morgenstern, Theory of Games and Economic Behavior, 3rd edition, Princeton University Press, Princeton, NJ, USA, 1953.
[2] M.J. Osborne, A. Rubinstein, A Course in Game Theory, The MIT Press, Cambridge, MA, USA, 1994.
[3] T. Ågotnes, W. van der Hoek, M. Wooldridge, Reasoning about coalitional games, Artif. Intell. 173 (1) (2009) 45–79.
[4] Y. Bachrach, D.C. Parkes, J.S. Rosenschein, Computing cooperative solution concepts in coalitional skill games, Artif. Intell. 204 (0) (2013) 1–21.
[5] V. Conitzer, T. Sandholm, Complexity of constructing solutions in the core based on synergies among coalitions, Artif. Intell. 170 (6–7) (2006) 607–619.
[6] T. Sandholm, V.R. Lesser, Coalitions among computationally bounded agents, Artif. Intell. 94 (1–2) (1997) 99–137.
[7] M. Wooldridge, P.E. Dunne, On the computational complexity of qualitative coalitional games, Artif. Intell. 158 (1) (2004) 27–73.

112

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

[8] M. Wooldridge, P.E. Dunne, On the computational complexity of coalitional resource games, Artif. Intell. 170 (10) (2006) 835–871.
[9] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, On the complexity of core, kernel, and bargaining set, Artif. Intell. 175 (12–13) (2011) 1877–1910.
[10] A.B. MacKenzie, L.A. Da Silva, Game Theory for Wireless Engineers, Synthesis Lectures on Communications, 2006, pp. 1–86.
[11] D.E. Charilas, A.D. Panagopoulos, A survey on game theory applications in wireless networks, Comput. Netw. 54 (18) (2010) 3421–3430.
[12] W. Saad, Z. Han, M. Debbah, A. Hjørungnes, T. Basar, Coalitional game theory for communication networks: a tutorial, CoRR, arXiv:0905.4057.
[13] L. Militano, A. Iera, F. Scarcello, A fair cooperative content-sharing service, Comput. Netw. 57 (9) (2013) 1955–1973.
[14] R.B. Myerson, Graphs and cooperation in games, Math. Oper. Res. 2 (3) (1977) 225–229.
[15] F.Y. Edgeworth, Mathematical Psychics: An Essay on the Mathematics to the Moral Sciences, C. Kegan Paul & Co., London, 1881.
[16] D.B. Gillies, Solutions to general non-zero-sum games, in: A.W. Tucker, R.D. Luce (Eds.), Contributions to the Theory of Games, vol. IV, in: Annals of 

Mathematics Studies, vol. 40, Princeton University Press, Princeton, NJ, USA, 1959, pp. 47–85.

[17] M. Le Breton, G. Owen, S. Weber, Strongly balanced cooperative games, Int. J. Game Theory 20 (4) (1992) 419–427.
[18] G. Demange, Intermediate preferences and stable coalition structures, J. Math. Econ. 23 (1) (1994) 45–58.
[19] G. Demange, On group stability in hierarchies and networks, J. Polit. Econ. 112 (4) (2004) 754–778.
[20] J. Greenberg, Coalition structures, in: R.J. Aumann, S. Hart (Eds.), Handbook of Game Theory with Economic Applications, vol. 2, in: Handbooks in 

Economics, vol. 11, North-Holland, Amsterdam, the Netherlands, 1994, pp. 1305–1337, Ch. 37.

[21] R.J. Aumann, J.H. Dreze, Cooperative games with coalition structures, Int. J. Game Theory 3 (4) (1974) 217–237.
[22] N. Megiddo, Computational complexity of the game theory approach to cost allocation for a tree, Math. Oper. Res. 3 (3) (1978) 189–196.
[23] E. Kalai, E. Zemel, On totally balanced games and games of ﬂow, Discussion paper 413, Northwestern University, Center for Mathematical Studies in 

Economics and Management Science, Evanston, IL, USA, 1980.

[24] X. Deng, C.H. Papadimitriou, On the complexity of cooperative solution concepts, Math. Oper. Res. 19 (2) (1994) 257–266.
[25] S. Ieong, Y. Shoham, Marginal contribution nets: a compact representation scheme for coalitional games, in: Proc. of EC’05, 2005, pp. 193–202.
[26] U. Faigle, W. Kern, S.P. Fekete, W. Hochstättler, On the complexity of testing membership in the core of min-cost spanning tree games, Int. J. Game 

[27] E. Elkind, L.A. Goldberg, P.W. Goldberg, M. Wooldridge, On the computational complexity of weighted voting games, Ann. Math. Artif. Intell. 56 (2) 

[28] G. Chalkiadakis, E. Elkind, M. Wooldridge, Computational Aspects of Cooperative Game Theory, Synthesis Lectures on Artiﬁcial Intelligence and Machine 

Theory 26 (3) (1997) 361–366.

(2009) 109–131.

Learning, 2011, pp. 1–168.

[29] N. Robertson, P. Seymour, Graph minors iii: planar tree-width, J. Comb. Theory, Ser. B 36 (1) (1984) 49–64.
[30] J. Greenberg, S. Weber, Strong Tiebout equilibrium under restricted preferences domain, J. Econ. Theory 38 (1) (1986) 101–117.
[31] Y.  Li,  V.  Conitzer,  Complexity  of  stability-based  solution  concepts  in  multi-issue  and  MC-net  cooperative  games,  in:  Proc.  of  AAMAS’14,  2014, 

[32] R. Meir, Y. Zick, J.S. Rosenschein, Optimization and stability in games with restricted interactions, in: Proceedings of the 3rd Workshop on Cooperative 

[33] Y. Bachrach, E. Elkind, R. Meir, D.V. Pasechnik, M. Zuckerman, J. Rothe, J.S. Rosenschein, The cost of stability in coalitional games, in: Proc. of SAGT’09, 

pp. 581–588.

Games in Multiagent Systems, 2012.

2009, pp. 122–134.

[34] M. Maschler, B. Peleg, L.S. Shapley, Geometric properties of the kernel, nucleolus, and related solution concepts, Math. Oper. Res. 4 (4) (1979) 303–338.
[35] T. Service, Coalition structure generation in characteristic function games, Ph.D. thesis, Vanderbilt University, 2012.
[36] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, On the complexity of the core over coalition structures, in: Proc. of IJCAI’11, 2011, pp. 216–221.
[37] A. Iwasaki, S. Ueda, M. Yokoo, Finding the core for coalition structure utilizing dual solution, in: Proc. of IAT’13, vol. 2, 2013, pp. 114–121.
[38] R. Meir, J.S. Rosenschein, E. Malizia, Subsidies, stability, and restricted cooperation in coalitional games, in: Proc. of IJCAI’11, 2011, pp. 301–306.
[39] R. Meir, Y. Bachrach, J.S. Rosenschein, Minimal subsidies in expense sharing games, in: Proc. of SAGT’10, 2010, pp. 347–358.
[40] E. Elkind, L.A. Goldberg, P.W. Goldberg, M. Wooldridge, A tractable and expressive class of marginal contribution nets and its applications, Math. Log. 

Q. 55 (4) (2009) 362–376.

[41] L. Blum, F. Cucker, M. Shub, S. Smale, Complexity and Real Computation, Springer-Verlag New York, Inc., Secaucus, NJ, USA, 1998.
[42] E. Elkind, G. Chalkiadakis, N.R. Jennings, Coalition structures in weighted voting games, in: Proc. of ECAI’08, 2008, pp. 393–397.
[43] C.H. Papadimitriou, Computational Complexity, Addison Wesley, Reading, MA, USA, 1994.
[44] E. Malizia, L. Palopoli, F. Scarcello, Infeasibility certiﬁcates and the complexity of the core in coalitional games, in: Proc. of IJCAI’07, 2007, pp. 1402–1407.
[45] M.W. Krentel, The complexity of optimization problems, in: Proc. of STOC’86, 1986, pp. 69–76.
[46] T.J. Schaefer, The complexity of satisﬁability problems, in: Proc. of STOC’78, 1978, pp. 216–226.
[47] G. Greco, F. Scarcello, On the power of structural decompositions of graph-based representations of constraint problems, Artif. Intell. 174 (5–6) (2010) 

382–409.

[48] G. Gottlob, N. Leone, F. Scarcello, A comparison of structural CSP decomposition methods, Artif. Intell. 124 (2) (2000) 243–282.
[49] R.I. Brafman, C. Domshlak, Y. Engel, M. Tennenholtz, Transferable utility planning games, in: Proc. of AAAI’10, 2010, pp. 709–714.
[50] H.L. Bodlaender, A linear-time algorithm for ﬁnding tree-decompositions of small treewidth, SIAM J. Comput. 25 (6) (1996) 1305–1317.
[51] M. Elberfeld, A. Jakoby, T. Tantau, Logspace versions of the theorems of Bodlaender and Courcelle, in: Proc. of FOCS’10, 2010, pp. 143–152.
[52] C.H. Papadimitriou, On the complexity of unique solutions, J. ACM 31 (2) (1984) 392–400.
[53] G. Chalkiadakis, E. Markakis, N.R. Jennings, Coalitional stability in structured environments, in: Proc. of AAMAS’12, 2012, pp. 779–786.
[54] R. Meir, Y. Zick, E. Elkind, J.S. Rosenschein, Bounding the cost of stability in games over interaction networks, in: Proc. of AAAI’13, 2013, pp. 690–696.
[55] M.R. Garey, D.S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. Freeman & Co., New York, NY, USA, 1979.
[56] C.H. Papadimitriou, K. Steiglitz, Combinatorial Optimization: Algorithms and Complexity, 2nd edition, Dover Publications, 1998.
[57] A. Schrijver, Theory of Linear and Integer Programming, John Wiley & Sons, New York, NY, USA, 1998.
[58] O. Skibski, T.P. Michalak, T. Rahwan, M. Wooldridge, Algorithms for the Shapley and Myerson values in graph-restricted games, in: Proc. of AAMAS ’14, 

[59] T.P. Michalak, T. Rahwan, N.R. Jennings, P.L. Szczepa ´nski, O. Skibski, R. Narayanam, M.J. Wooldridge, Computational analysis of connectivity games with 

applications to the investigation of terrorist networks, in: Proc. of IJCAI’13, 2013, pp. 293–301.

[60] M.M. de Weerdt, Y. Zhang, T. Klos, Multiagent task allocation in social networks, Auton. Agents Multi-Agent Syst. 25 (1) (2012) 46–86.
[61] L. Sless, N. Hazon, S. Kraus, M. Wooldridge, Forming coalitions and facilitating relationships for completing tasks in social networks, in: Proc. of 

AAMAS’14, 2014, pp. 261–268.

[62] H. Scarf, The core of an n-person game, Econometrica 35 (1967) 50–69.
[63] E. Elkind, T. Rahwan, N.R. Jennings, Computational coalition formation, in: Multiagent Systems, MIT Press, 2013, pp. 329–380.
[64] T. Rahwan, S.D. Ramchurn, N.R. Jennings, A. Giovannucci, Anytime algorithm for optimal coalition structure generation, J. Artif. Intell. Res. 34 (2009) 

521–567.

[65] T. Sandholm, K. Larson, M. Andersson, O. Shehory, F. Tohmé, Coalition structure generation with worst case guarantees, Artif. Intell. 111 (1–2) (1999) 

209–238.

2014, pp. 197–204.

G. Chalkiadakis et al. / Artiﬁcial Intelligence 232 (2016) 76–113

113

[66] H. Aziz, B. de Keijzer, Complexity of coalition structure generation, in: Proc. of AAMAS’11, 2011, pp. 191–198.
[67] T. Service, J. Adams, Constant factor approximation algorithms for coalition structure generation, Auton. Agents Multi-Agent Syst. 23 (1) (2011) 1–17.
[68] T. Voice, M. Polukarov, N.R. Jennings, Coalition structure generation over graphs, J. Artif. Intell. Res. 45 (1) (2012) 165–196.
[69] Y. Bachrach, P. Kohli, V. Kolmogorov, M. Zadimoghaddam, Optimal coalition structure generation in cooperative graph games, in: Proc. of AAAI’13, 2013, 

pp. 81–87.

tions, in: Proc. of CP 2009, 2009, pp. 623–638.

nalities, in: Proc. of AAMAS’11, 2011, pp. 1173–1174.

Proc. of AAMAS’12, 2012, pp. 795–804.

[70] N. Ohta, V. Conitzer, R. Ichimura, Y. Sakurai, A. Iwasaki, M. Yokoo, Coalition structure generation utilizing compact characteristic function representa-

[71] R. Ichimura, T. Hasegawa, S. Ueda, A. Iwasaki, M. Yokoo, Extension of MC-net-based coalition structure generation: handling negative rules and exter-

[72] S. Ueda, T. Hasegawa, N. Hashimoto, N. Ohta, A. Iwasaki, M. Yokoo, Handling negative value rules in MC-net-based coalition structure generation, in: 

[73] N. Bousquet, Z. Li, A. Vetta, Coalition games on interaction graphs: a horticultural perspective, in: Proc. of EC’15, 2015, pp. 95–112.
[74] G. Gottlob, G. Greco, Decomposing combinatorial auctions and set packing problems, J. ACM 60 (4) (2013) 24:1–24:39.
[75] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, The complexity of the nucleolus in compact games, ACM Trans. Comput. Theory 7 (1) (2014) 3:1–3:52.
[76] G. Chalkiadakis, V. Robu, R. Kota, A. Rogers, N.R. Jennings, Cooperatives of distributed energy resources for eﬃcient virtual power plants, in: Proc. of 

AAMAS’11, 2011, pp. 787–794.

[77] S. Kwek, K. Mehlhorn, Optimal search for rationals, Inf. Process. Lett. 86 (1) (2003) 23–26.

