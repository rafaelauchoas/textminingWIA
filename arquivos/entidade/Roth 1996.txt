ELSEVIER Artificial Intelligence 88 ( 1996) 3 17-347 Artificial Intelligence Using action-based hierarchies for real-time diagnosis David Ash *, Barbara Hayes-Roth Knowledge Systems Laboratory, Computer Science Department, Gates Computer Science Building, Stanford University, Stanford, CA 94305, USA Received February 1996; revised March 1996 Abstract An intelligent agent diagnoses perceived problems so that it can respond to them appropri- ately. Basically, the agent performs a series of tests whose results discriminate among competing hypotheses. Given a specific diagnosis, the agent performs the associated action. Using the tra- ditional information-theoretic heuristic to order diagnostic tests in a decision tree, the agent can maximize the information obtained from each successive test and thereby minimize the average time (number of tests) required to complete a diagnosis and perform the appropriate action. How- ever, in real-time domains, even the optimal sequence of tests cannot always be performed in the time available. Nonetheless, the agent must respond. For agents operating in real-time domains, we propose an alternative action-based approach in which: (a) each node in the diagnosis tree is augmented to include an ordered set of actions, each of which has positive utility for all of its children in the tree; and (b) the tree is structured to maximize the expected utility of the action available at each node. Upon perceiving a problem, the agent works its way through the tree, performing tests that discriminate among successively smaller subsets of potential faults. When a deadline occurs, the agent performs the best available action associated with the most specific node it has reached so far. Although the action-based approach does not minimize the time required to complete a specific diagnosis, it provides positive utility responses, with step-wise improvements in expected utility, throughout the diagnosis process. We present theoretical and empirical results contrasting the advantages and disadvantages of the information-theoretic and action-based approaches. Keywords: Reactive planning; Decision trees; Diagnosis; Real-time planning; Heuristics * Corresponding author. Present address: Brightware Inc., 90 Park Avenue, Suite 1600, New York, NY 10016, USA. E-mail: 70363.45@compuserve.com. 0004-3702/96/$15.00 PIf SOOO4-3702(96)00024-O Copyright @ 1996 Elsevier Science B.V. All rights reserved. 318 Table I Desiderata for a parachutist on perceiving a delay in parachute opening Possible situations Conditional probabilities Optimal actions Deadline Good parachute Low speed malfunction High speed malfunction No parachute 1. Introduction 0. I 0.4 0.4 0. I Steer normally Now + I20 seconds If malfunction on deadline: Now + 45 seconds Release main parachute Activate reserve parachute If malfunction on deadline: Now + S seconds Release main parachute Activate reserve parachute Activate reserve parachute Now + 3 seconds at all. As summarized fall whose parachute seems to be taking longer than in free to take appropriate different situations: parachute with a low-speed Consider to open. fall, or no parachute a parachutist In order four qualitatively usual among a malfunctioning high-speed have different conditional responses, and different deadlines parachutist: (a) speed or high speed; and (b) involving test should a good parachute, the parachutist perform probabilities (given a malfunctioning first‘? perspective, for response. Two diagnostic look at the altimeter for a few seconds look at the main parachute action, the parachutist must discriminate a good parachute fall, a malfunctioning that will open soon, parachute with a the initial observation), in Table 1, these situations different optimal to the the situation as low the situation as one parachute, or no parachute at all. Which to classify to classify tests are available From an information-theoretic the parachutist should look at the altimeter likely hypotheses-low- this test will distinguish first, because between speed versus high-speed malfunctions. However, tify an appropriate response. or a low-speed malfunction. parachute and high-speed malfunction parachute and then activate outcome of the altimeter he performs the second may not be enough the two most the outcome of this test does not iden- If the rate of fall is low, there is either a good parachute the main Should is either a the reserve ? If the rate of fall the main the reserve or simply activate the reserve? Regardless of the cannot choose an appropriate action until is that there test, the parachutist test, looking at the parachute. The real problem or no parachute at all. Should steer normally or release the deadline occurs. time to perform the parachutist the parachutist is fast, there then activate release should If there perspective, look at the parachute From a utility-oriented If there is no parachute at all, he should activate the results of this test will identify positive utility actions, particularly because most critical contingencies. normally. there the parachutist has an appropriate speed or high speed, it until the deadline occurs. If the parachute malfunction parachutist if the main parachute first for the should steer If even without knowing whether he is falling at low response, but need not perform the the reserve; otherwise the main parachute and then activate the parachutist the reserve the parachutist should use it is a parachute malfunction, persists until the deadline, is a good parachute, inflate before the deadline, immediately. release should should that test before the parachutist D. Ash. B. H~cyes-Roth/Artificial Intelligence RR (1996) 317-347 319 in table which assumes for the competing an original opening in case of a subsequent problem. The default deadline and keep his reserve parachute fault hypotheses. this case should be the shorter of the two deadlines In the case of the above altitude of about 2500 feet, this would be Now + 5 seconds, but with higher opening altitudes more time the second would be available. During test, looking at the altimeter. the that he parachutist the parachute can use his main parachute and keep his reserve. In sum, by performing test in some cases, if time first, the parachutist permits, performing the altimeter can improve his choice of action by subsequently can choose an appropriate action immediately; that he has a low-speed malfunction, the parachutist test. to Now + 45 seconds, can start to perform If he determines the parachutist this interval, the deadline can extend the chance increasing This simple example of the parachutist illustrates key features of real-time diagnosis problems: Perceived problems deadline. For example, no parachute require some form of response by an uncertain, possibly fault- immediate dependent response when the original opening occurred at 2500 feet, while a parachute malfunction allows a variable which the problem on the speed of falling as well as the altitude at at all requires an almost latency, depending is perceived. test discriminates DifSerent tests discriminate among different subsets of potential faults. For example, (good parachute or low- versus no parachute or high-speed malfunction), while the parachute [high three subsets of faults (good parachute, malfunctioning the altimeter speed malfunction test discriminates speed or low speed] parachute, and no parachute). two subsets of faults between between Diferent tests require different amounts of time and other resources. For example, eyes, while test, primarily to accurately than the parachute the altimeter must be observed over a period of several seconds rate of fall. test require use of the parachutist’s both the altimeter the altimeter because estimate test takes a few seconds test and the parachute longer to perform Sometimes the sequence of tests required for specijc diagnosis of a perceived problem first perceives his time to perform both the altimeter if the parachutist tests. cannot be completed by the deadline. For example, problem at a lower altitude, he may not have enough and parachute Different ately activating lower utility ment with the malfunctioning main parachute), in the case of a good parachute. the reserve parachute has high utility in the case of a malfunctioning responses have different utilities for different faults. For example, immedi- in the case of no parachute at all, (because of possible entangle- and very low (actually negative) utility parachute Specific diagnoses permit optimal (within the available knowledge) that he has a malfunctioning parachute at low speed (as opposed at high speed) allows the parachutist to wait longer for his main parachute responses. For to a it and activating his reserve parachute. diagnoses permit positive utility nonspecijc knows only if responses. For example, parachute, but does not know it is at low speed or high speed, he can release his main parachute and activate that he has a malfunctiong example, knowing malfunction to inflate before releasing Nonspecijc the parachutist whether his reserve parachute for a positive utility in either case. 320 D. Ash. B. Hayes-Rotiz/Art~ciul Intelligence RR (1996) 317-347 The agent has su.cient advance time, knowledge, and other resources to prepare a decision context-appropriate can anticipate of analysis described above, and decide performing the altimeter the parachute test. tree for diagnosis and action. For example, that his main parachute might not open on time, go through the parachutist the kind to such situations by first that he will respond test and, if time and circumstances warrant, then performing In this paper, we present an action-based node in the diagnosis decision each of which has positive utility to maximize structured a problem, perceiving discriminate among the agent performs occurs, diagnosis node it has reached so far. successively approach in which: to diagnosis, tree is augmented for all of its children (a) each to include an ordered set of actions, the tree is the expected utility of the action available at each node. Upon tests that the agent works faults. When a deadline the best available action associated with the most specific in the tree; and (b) the tree, performing subsets of potential its way through smaller The remainder of this paper is organized as follows. for the two phases of real-time diagnosis, In Section 3, we describe our action-based the action-based approach using formal analysis, In Section 2, we formally reactive planning and approach. Sections abstract experiments, in a particular domain, intensive care monitoring. Sections 7 and 8 and identify open problems for future research. characterize requirements reactive plan execution. 4-6 evaluate and demonstration summarize conclusions 2. The problem remain At the most basic level, we are interested in the problem of identifying there is actually more than one different and acting on one of a set of faults. For the purposes of this paper, we define a fault as the most in which an agent is interested within a given domain. Thus, a fault is specific diagnosis a property both of the domain and the goals of an agent. For example, domain, might stuck packed, etc. The difference between the parachutist with a diagnosis debriefing might be viewed as different rather an attempt these total malfunctions in free fall, and hence from the point of view of the parachutist to faced the same fault. At a later point, when in the parachuting parachute incompetently irrelevant the two different the goal then of the malfunction. types of total malfunction is not critical they are one and on the ground, or the parachute may have been type of total malfunction-the to prevent a reoccurrence in its container, the malfunction faults because response but is completely problem, For dealing with a set of faults, the agent will have available to it a reactive plan. tree called an action-based in detail a particular type of reactive plan-an that a reactive plan consists of a series of actions important to realize form of decision in this paper, we will analyze Later augmented most agent may take in order to diagnose a particular for remedying deployed and other resources, to identify useful actions running and that it have an anytime to perform even in real time, it is desirable to completion. the fault that it diagnoses. Because for now hierarchy-but it is that an fault in real time, together with actions to be time it its flavor [ 141 to it which will allow in cases when resources do not permit is intended that it consume a minimum of computational the reactive plan D. Ash. B. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 321 an emergency reactive plan-for landing because of engine dealing with this emergency from the agent that executes a reactive plan. Consider, For the purposes of this paper, the reactive planner that constructs the reactive plan for example, failure. The pilot it the pilot is the for all pilots it indicates in the desired properties of the reactive plan versus the reactive planner. The it may have in real time. However, for the reasons noted above. may be quite distinct a pilot faced with making has a checklist-a is generally not the case that the pilot designed agent who will execute flying a particular differences reactive planner need not be especially substantial the plan that it generates must be computationally This distinction will guide the design of reactive plans in this paper. the checklist. Although is likely to be recommended is important time to complete a plan prior to it ever being needed type of aircraft. This distinction situation. However, efficient, because computationally the checklist the plan, efficient because and to handle it is essential the possibility are quite possible in many domains, Partial diagnoses reactive plan be able ample, a physician may recommend type and that the patient has an anemic condition-even type of anemic condition necessarily recommendation-but must enable an agent but taking an action that the of making a partial diagnosis. For ex- if he/she knows a patient’s blood the specific is not type of anemia would enable an optimal to save the life of the patient. The reactive plan an optimal acton if time permits, may be necessary to reach similar goals-finding if necessary because of a deadline. from. Such a recommendation that is less than optimal without knowing optimal-knowing the particular a transfusion is suffering the patient in the domain, with their attached prior probabilities, We take the view that a partial diagnosis is a single research this represents an approximation and a complete diagnosis probabilities, of 1.0. Clearly cannot assert anything with probability topic for further we went this route, we would need a mechanism probability refined to the particular fault that is present We have stated that we view a fault as something the set of all faults 1.0, and from is not 0.0. As the reactive plan is executed, to provide more sophisticated in a given situation. is a set of faults, together with their current fault, with an attached probability since we usually be an interesting to the real situation, it would certainly reasoning under uncertainty. for ruling a fault out even though If its the diagnosis will gradually be it is not interested recognizes in designing that some solutions the reactive plan. Because a long sequene of corrective that needs to be corrected. Because of this, the agent also has a set of corrective actions, sometimes also known as responses, the agent is executing a reactive which it can take in executing it plan, to a fault. However, views the execution of a single corrective action as being a solution the reactive planner than others, are potentially and so it has a notion of the value of performing a corrective action. This is a purely heuristic estimate given either directly by the domain expert or by some well-understood computation within “values” a corrective action corrective will not fix a broken-down explicitly or implicitly. the domain. For the moment, to be positive-negative costs of actions) will be discussed below. For each combination of the value of that in that most the tires with air this either actions have no value for most faults. For example, engine, but the reactive planner needs for that fault. The resulting matrix to be rather sparse action and a fault, is a value number it is assumed representing is expected to know (actually actions: rather filling better there 322 D. Ash, B. Haves-Rntlz/Artificial Inrelligence 88 (1996) 317-347 Because of the sparseness of the value matrix, to fill in the entire matrix. Rather, would need only for those actions of the matrix would be automatically the entire matrix would not need to be represented reactive planner. that have an interesting that a domain expert it is not expected the domain expert would fill in values faults, and the rest effect on particular in a large domain, filled in with zeroes. Indeed, the explicitly even internally within There are also COSTS associated with pairs of actions and faults. Again, a particular a heuristic estimate of the cost of performing particular be independent of the particular that if the action has no value for the particular makes is in general by the expert by simply providing particular it undesirable independent to perform that action. Because of the fault involved, again faults. fault, fault it is being applied action to. This captures the cost is in the presence of a an action will the notion it the cost of performing an action the cost matrix can be provided for the cost of performing then fault. Here we expect that in most cases the cost of performing costs for the actions and then noting exceptions the difference between In practice, we combine the notion of value and cost into a single notion of total the value and the cost. This utility can to be the appro- utility, which represents therefore be negative. The difference between value and cost appears priate combining cost would be more desirable clearly not a desirable If we took the ratio, actions with little value but infinitesimal than actions with high value but moderate cost-this situation. function. is The utility of the agent’s response declines over time. For example, in the parachuting in the utility of the response as the parachutist there response is not known to still result instantaneously, the time is measured is a very sharp decline to the point of being essentially useless. though injury. The decline role in the desigrl of the reactive plan, because to the ground. Note that this decline does not occur domain, gets closer couple of reasons: will take to reach the ground very close is likely plays a major plan, the planner will try to make sure that the best possible agent before for a in seconds, but the exact amount of time that it in advance; and also, there is a time range, it may save the parachutist’s life, in value of the utility of response a reactive in designing to the to the ground, where a response, in serious from the time when invoke the reactive plan after noticing its utility decays The time axis in these utility graphs plan is first invoked. The agent will generally appears something a parameter value obvious time when the fault first appeared, so the reader may ask why we do not measure from the time when make use of such knowledge. after invoking if the planner only knows how long the agent will have since the fault first appeared, cannot be sure when the plan will be invoked and therefore will be operating Thus, in providing utility decay information to measure be when the first indication of the fault appeared, not when the fault itself appeared. the reactive that it had a regular plan which called for that range. It is to the time is that the reactive planner cannot how long the agent will have the plan accordingly. But it in the dark. to the reactive planner, one must be careful might time from the point where the reactive plan will be invoked-which to be going wrong-perhaps to be in a particular that the invocation of the reactive plan does not necessarily the reactive plan to take action, the fault appeared. The answer If it knows approximately range, and the value it can construct is measured is available correspond is outside D. Ash, B. Hayes-Roth/Artijicial Intelligence 88 (I 996) 317-347 323 to it a set and each test has a set of possible outcomes, (a subset of the full set). Thus, when a test is performed it has available to help that the actual the agent knows is a set of faults it can perform. Each If the agent already has information is obtained, to that outcome. the agent diagnose one of the faults, In order of tests which outcome and an outcome corresponding group of tests that the actual fault falls within some &fSeerential diagnosis probabilities), with by narrowing complete test need not be disjoint-some the other about certain information about how this test outcome affects the probability to produce a new, smaller differential tests may not provide any the current outcome faults. Each fault the agent hopes the intersection the agent can the differential the diagnosis process. The fault sets associated with the outcomes to reduce it to a single fault and for a given one way or in each outcome of a test also has attached information from another to the set test or (with attached diagnosis diagnosis. Gradually of the differential fault belongs of this fault. down then take action the agent a monitoring or diagnostic is up against, and the results amount of time is always available action represents an increase action the world. Both is an attempt by the agent to gain information A test also has associated with it a set of monitoring actions and diagnostic actions. from in the rate at which anyway, to the agent at some frequency is a request to obtain a single value of a particular types of actions have two types of costs associated costs-the that it takes for the action to come back. Because of the real-time nature of the to the agent. Temporal time taken in the world for the parameter values in analyzing resources consumed by the agent A monitoring the world. Specifically, a given parameter, which is monitored. A diagnostic parameter from with them. There are temporal to be performed deadlines costs in turn have two components-the to be obtained, the parameter values the temporal resources these two types the amount of physical of costs must be traded off against one another-we could perform all possible actions with great frequency and save on temporal costs, but at great expense regarding physical costs. Similarly, we could save on physical costs by performing only one monitoring diagnostic necessary) a particular outcome for a test. The exact value of the amount of computational upon task. There are also physical costs- therefore vary depending the agent has to devote to the diagnosis action at a time (thereby performing but this would and the computational to determine only the temporal costs. resources consumed by the action. temporal costs are important that are absolutely those actions In general, costs will increase or Faults have associated with them a set of prior probabilities. Because we assume that the reactive plan when must sum to at least 1.0. In the event that we make single fault assumption, which this paper we do, the sum of the priors must be exactly 1 .O. is invoked, at least one fault is present, the prior probabilities in that tests be performed, of the basics of the problem It follows from the above description a form of anytime algorithm. At various points and the results of these tests will result plan will be executing request of the differential diagnosis. However, for any differential diagnosis, a corrective action such an action would be one differential, way that it is likely that the reactive in time, it will in a refinement to find Ideally, in the in such a along the way that have good corrective actions that is better than all others, on average, for this differential. that the reactive plan be constructed value for most of the faults that had substantial to find differentials and as a result it is desirable it is possible 324 D. Ash, B. H~i~es-Rnth/Art;~~~f~i Inreiligence 88 (1996) 317-347 the value of the best corrective action available is likely for most of their faults. The algorithm refined, made more specialized action associated with the current differential for particular faults. When the deadline is to improve as it can be the corrective is reached, is anytime in the sense that as the differential can be recommended and performed. 2.1. Formal statement of the problem The previous section gave an intuitive statement of the problem we are interested In this section we will state the problem more precisely. However, problem precise and tractable, we will make first a number of simplifying which will be adhered the remainder of the paper. to throughout in. in order to make the assumptions 2.1.1. (1) (2) (3) (4) (5) (6) the probabilities that they were in originally. is not, however, necessarily known precisely for a given fault is constant for that fault, and is zero thereafter. The value in the diagnosis of all faults in the differential diagnosis are either zero Simplifying assumptions There is only trivial uncertainty handling. That is, at all times process, or in the same proportions Deadlines are hard. The utility of a given response up until a particular hard deadline of the hard deadline Temporal costs of tests are constant. The amount of time taken for a given test to come back is known The agent knows when it has reached its (hard) deadline. When the hard deadline referred the agent will know, by means not discussed The single fault assumption invocation of the reactive planner. Tests provide will not learn any additional performing revealed by that test. ,faults, not about deadlines. The agent it has left by faults is made. Exactly one fault will be present for a given in this paper, and can therefore act. time the information information it can (2) has been reached, a test beyond what about how much to in number only about information in advance. in advance. infer from about 2.1.2. The problem The reactive planner is given a 9-tuple with which to construct a plan: (ERD,A,KT,O,C,S). These are defined as follows: l F: the set of faults. l P: the set of prior probabilities. P is a function mapping F to the interval [O, 11. l D: the set of deadline distributions. D is a function mapping F to the set of functions, Df, such that 30 D,r( t)dt = 1. D. Ash, B. Hayes-Roth/ArtQicial Intelligence 88 (1996) 317-347 325 Here deadline the semantics if D(f) for fault f lies in the interval are that then = Df, [ tl , t2] is: the probability that the hard J Df( t)dt. [ - 1, 11. in more detail below. the set of outcomes of tests. 0 is a function mapping T to sets of faults. For . . ,ok} is a set of outcomes, then each Oi is a subset A: the set of actions. U: the matrix of utilities. U is a function mapping F x A to the interval The semantics of this will be discussed T: the set of tests. 0: example, of F corresponding C: the set of temporal costs of tests. This nonnegative S: the set of physical nonnegative It will be noted to one possible outcome of the test 7. that the notions of monitoring is a function mapping T to the set of is a function mapping T to the set of costs of tests. This if O(r) = {oi,o2,. real numbers. real numbers. into a single notion of tests. A test consists of a set of monitoring actions, together with the necessary and diagnostic actions have been and analysis of the results of those actions. and diagnostic properties (from our point of view) of these monitoring in the temporal costs and the physical costs of tests. the goal of the agent vis-a-vis the reactive plan. The agent’s goal, collapsed diagnostic The interesting actions can be captured We now describe roughly speaking, is to recommend a series of tests tests 70, q ,72,. . . are recommended. at time the invocation times are measured that have come back already-that to < tl < t2 < .. . are the times at which from tk, the agent will have available is, all outcomes where All recommendation tests ti + C (Ti) < tk. The agent must also recommend action a. The agent to know when perform an action at that point, but it continues deadline unless and until it reaches a complete diagnosis. is assumed of the reactive plan. When making its to it the outcomes of all i < k, where to tests ri, some and the at the deadline the deadline to perform diagnosis after reaching is and to recommend (and perform) particular that in the case of multiple outcomes The action a is a function of the time t at which the deadline occurs. It also depends tests the same fault, all are equally to the is actually a function of three variables: a( t, f, 0). Thus, that occurs and the outcomes including on two things-the (noting likely). Letting tests, we can see the action is a step function: the utility the various possible outcomes the fault and o denote to the various f denote fault u ,,utcon,r(t,f,o) = U(4tYfYo)7f). This function during a single intuitively represents the improving utility of the action obtained to date the mean over all outcomes invocation of the reactive plan. By taking 326 I). Ash. B. Ha?es-Rotllr/Art~cicll Intellipnce X8 (I 996) 317-347 of the test consistent with this fault, we can reduce U,,,,, (t, f) which should also be a step function, albeit with many more steps. Now we can reduce this value function by the deadline distribution this to a function only of the fault itself by weighting this to a function of two variables: for this fault: function x. Ufardt ( .f‘) = D/(t)U,,,,(t.f)dt. Finally we may compute sum over all faults: the overall performance of the agent by calculating the weighted u,o, = c ~,fdr ( f 1 p ( f 1 .fEF Intuitively, what we have done the overall performance of the agent on this reactive plan. reactive plans may therefore be compared by computing different values is: take the various actions the values of those the for a single fault because over time fault. These values are then plotted on a graph and then that are possible in time and determine the average performance the integral weighted by deadline distribution. by the agent at different points in test outcome. We then determine for a particular is taken of the different performances This number, Utot, represents Two different for U,,,, and comparing. recommended actions average of uncertainty of the agent on this fault by computing Finally, we compute average of these functions weighted by probabilities graphically recommended AX. Because between 2.5 and 3.5, only the utilities of the actions are relevant, interval. of the faults. This for a fault over time as the action changes is illustrated in Fig. 1. This shows the improving performance of the utility of the action from AO, A 1, A2, through to have a uniform distribution at those time points that in this case the hard deadline the integral computing overall performance recommended is calculated is assumed the average performance of the agent over all faults by taking over and the So far the analysis has taken into account only the utility of performing tests as described into account when we compute actions. What in the last section? The temporal cost of the time axis of these graphs. tests will itself be a step function of time, in this case invocation of the for a single to be nondecreasing, which can be computed of the cost of performing performing tests is taken The physical cost of performing guaranteed reactive plan as follows: As with values, we can compute particular to give: fault to give S,,,,,( t, .f). Now we can compute the average over all test outcomes consistent with the integral over time the weighted Sfmdt ( f 1 = I’ Df(t)&,,(t,f)dt. D. Ash. B. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 327 I .oo 0.15 1 Value of best action 0.50 to date 0.25 Action A0 Action A3 Action A2 Deadline is uniformly distributed between 2.5 and 3.5. Overall performance is 0.625 0 I 2 3 4 5 Deadline Fig. I. Reactive plan performance on a single fault. Finally, we can compute computing the weighted average over different faults: the overall average physical cost of this reactive plan by S tot = c ~fou!t(f)~(f). fEF true performance of a reactive plan may then be computed by determining the The utility-cost difference Utot - St,,. Our goal in this paper is not to directly produce reactive plans. It is, rather, to produce that will generate good reactive plans. Thus, we will have a space of the for the same problem, we will be It is our goal in this paper to propose and evaluate a {(E P, D, A, VT, 0, C, S)}. By computing reactive planners a reactive planner of problems reactive plans produced by different able to compare set of reactive planners on just the average performance reactive planners. this criterion. 2.2. Related work The most obvious attempted solutions to this type of problem to appear in the liter- ature are the anytime planning work of Dean and Boddy [ 141, the decision-theoretic 328 Il. Ash. B. Hoyes-Rotll/Arti~cicll Intelligence 8% (1996) 317-347 involves the problem is to analyze in this general [ 371. Anytime planning regardless of how long the algorithm from a theoretical point of view. However, improves over time. Dean and Boddy’s contribution in general but not to propose a particular anytime algorithm; [ 27 J , and the concept of bounded rationality elucidated by Russell analysis of Horvitz the idea of an anytime algorithm which and Wefald runs for, but the value of the returns an answer the properties answer this of anytime algorithms paper will follow framework but will present a particular anytime algo- rithm whose properties can be analyzed. Horvitz and Russell and Wefald do a good job the goals of these of analyzing that researchers all differ somewhat deliberation computational current the agent computational the results of tests, not deciding what test to perform next. We are willing potentially a much smaller amount of time mentioned above are unable agent does both deliberation acting. it. In the it is an important goal, because of the urgent nature of the domains level. Any to analyzing to incur a stage in order to save itself. The approaches that a single lost is time to make they assume and acting, and so time spent deliberating In other words, they devote significant than actually doing expense at the reactive planning the reactive plan resources used by the agent should be devoted exclusively from the present research goals in that they assume or metareasoning resources to deciding what to do, rather in, to keep metareasoning this tradeoff because high computational time is nontrivial. time at a trivial in executing is expected to operate research Although we characterize it and the existing diagnosis been cast as a problem a model of the domain advantage over our work-the nificant disadvantage-meeting diagnosis that we agree with. logic the connections between this work as a diagnosis problem, literature do not seem too close. Classically diagnosis has in first-order that one have in order to do diagnosis. As such Reiter offers one significant has one sig- to do first principles diagnosis-and is impossible. Reiter also shows that is made-a ability a real-time deadline [ 35). This approach conclusion requires is greatly simplified when the single fault assumption expensive the approach the computational On the subject of multiple faults, that diagnosing multiple the seminal paper is [ 16 1. De Kleer and Williams and is computationally they suggest beginning a number of techniques faults for reducing the conflict sets to produce minimal the flawed behavior of the system. This works when doing diagnosis take complexity so they provide the search with small potential of the search. For example, sets that actually conflict sets and then expanding from first explain principles but seems to be a hard idea to apply to our problem. Our agent starts with a to smaller sets of faults. large differential and then gradually works it down However, we agree with their basic observation is but we cannot expect the small, then coping with their interactions problem of diagnosing tractable. all possible subsets of the set of all faults to be computationally that if the number of possible remains manageable, diagnosis faults Other researchers such as Cooper [ II ] have addressed of diagnosis without that inference complexity Cooper has shown to attempt the n most likely diagnoses. to control the search; the TOP N algorithm In addition to the lack of meeting looking at meeting in belief networks the problem of computational real-time deadlines. For example, to this is is NP-hard. The response [25] can be used to generate only this real-time deadlines, D. Ash, B. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 329 approach differs from ours in the use of a Bayesian belief net to represent uncertainties. The current work worthwhile possible extension to deal with uncertainty, is not an attempt to attempt to do so. although it might be a Other approaches to diagnosis reasoning (e.g. [ 81, qualitative cation the medical AI literature problem of diagnosis an adaptation of Quinlan’s decision describe it in the next section. include model-based [ 22,3 11, decision reasoning trees [ 331, and various [ 411) . None of these approaches attempt in real time, and so they are of limited usefulness trees will prove to be central [ 131, heuristic classifi- in techniques to deal with the to us, although to our approach as we Another large body of literature of interest the relationship time planning. Before describing should define what we mean by these different purposes. For us, reactive planning to situations respond our definition of reactive planning. if we have to do substantial planning that may arise in real time for which terms as different to us is the work on reactive and reul- of this work to the present paper, we for in advance response time to at run time. The work in this paper fits there will not be adequate authors may use them is the task of planning is universal planning [40] where the in advance exactly what to do in all situations in advance. Rather, we enumerate [23] has shown that in general universal planning is it may be in specific cases. We do not attempt a set of faults those that to than and then plan that response to (including, for example, is hopeless), example of reactive planning to enumerate attempts The ultimate reactive planner the agent may encounter. Ginsburg not computationally to enumerate [ 121 which we expect are likely respond only Schoppers did, but with greater chance of success. situations to be desirable to be critical, but not so critical tractable, although all possible to respond A much is triangle less extreme example execute, but also has a series of preconditions when the situation has changed unexpectedly thereby planning, providing good actions but it is limited to perform in such a case. to that set of faults. We therefore are attacking a narrower problem the agent can replan. This work represented one of the first efforts to recognizing when a plan no longer applies as opposed tables [ 211 where the agent has a plan to to each step in the plan, so that it knows so that the plan no longer applies and in reactive to Brooks’ subsumption architecture not classify his work as reactive planning. The approach task into a number of layers, with the lower layers providing [S] is part of this general body of work, although involves he would probably simple a robot’s dividing abilities such as avoiding objects, and the higher layers providing more complex abilities such as identifying objects. This allows reactivity at the lower levels while still permitting more complex operations that there provided convincing three layers, Kaelbling is in a robot. Although Brooks has robot with two or it is not clear that it can scale up. and Rosenschein at a high level. Perhaps Brooks’ most controversial that his approach works for a simple is no need for a central control have authored a number of papers on situated uutomatu that an agent can accurately theory [ 2830,361. track and represent that they can provide guaranteed to imply This theory is based on the assumption the state of the world in real time. The basic idea that they have is time) cycle. This seems (or at least that their approach would be useful if all deadlines were constant in a single (constant response evidence structure claim 330 D. Ash. B. Hayes-Rorh/Art~cinl Intelligence 88 (1996) 317-347 level response is required within a constant cycle to be successful when agent behavior can be mapped but in the case of our problem, not only do the deadlines vary to cycle time either, into their approach seems difficult. Their approach seems far more into levels of competence multiples of a constant) in a much richer way, the costs of tests may not correspond exactly so fitting our problem likely such that at each not obvious Chrisman that our problem can be divided up in this way. and Simmons into the analysis of reactive planning. A robot often needs in order to diagnose to determine which of several possible sensing procedures the notion of sensible planning which brings to perform the state of the world. Chrisman and Simmons use the is probably quite effective, in decision theory sensing actions decision theory minima1 expected cost. For simple worlds, but they have no notion of meeting using their approach real-time objectives-they time. It simply is [ 71 introduce are simply interested involves to real-time planning closest to the work in the literature. in the from states to actions) on the basis value, averaged over time, of the in their view to a decision (their notion of action corresponds that states in the sense in ours, and a policy corresponds taken a test to ours is similar have been to perform (a mapping [ 151 attack the problem to differential sensing procedure. the future discounted diagnoses in a certain the best possible A number of approaches Of these, perhaps Dean et al. present paper. They compute a policy they can maximize of which world state. This problem correspond of ours to our notion of test; our notion of action can be used the value of a state). However, our problem differs from respects. Firstly, all possible of our fault set; for a reasonable there seems is constant to another to require specific mathematical their algorithm distribution, which means deadline distribution. tractable. This function to be an unstated number of faults in their domains; in our domains corresponds assumption the time situation states that that in our world correspond their notion of to compute theirs in several important to the set of all subsets this would be intractable. Second, from one state they seem function to make to our notion of deadline type of to progress it is not. Finally, roughly properties of the value discounting their approach only works for one particular the main in both classical planning based upon flaws (MARUTI). Dynamic planning the nature of the task. Dynamic planning and yet it also does not require anticipation Hendler and Agrawala 124 J describe a system that a complete plan can be laid out in advance with no unforeseen system the amount of time devoted in which they unify a dynamic plan- systems to the two tasks is de- it ning system with a real-time operating are able to both react and plan, and itself varies dynamically signed to address does not assume difficulties, advance, either. Hendler criticizes existing planning assume a reaction component advance. However, we go a step further by not assuming ponent has complete knowledge replanning also have other replanning. in that they that the planner has complete knowledge of the world. He therefore provides in that even the reaction com- of the world. But we do not provide any dynamic that an agent using our reactive plans will that will be capable of dynamic of all possible systems on the grounds that the planner could not foresee either, although we anticipate and reactive planning: those situations in its arsenal techniques to handle reasoning situations D. Ash, B. Hayes-Roth/Art$cial Intelligence 88 (1996) 317-347 331 3. Action-based hierarchies In this section we will describe the approach, which we call action-based hierarchies, the approach to a simplified version of the problem, in the last section. We will first describe the that we take to solve the problem outlined for illustrative purposes, approach as it applies and then extend to deal with the complete problem. We will also discuss the feasibility of the approach along several dimensions. First, the time complexity of the reactive plan must be very low. Second, the space complexity of the reactive plan must the time complexity of the reactive planner, although at least be manageable. not central (and possibly Finally, to our goals, must be low enough the use of our approach replanning). to permit to allow some dynamic The simplified version of the problem that we will solve first makes the following set of assumptions: ( I ) Tests have no physical costs. (2) No more than one test can be in progress at a time. If the agent performs test, it must wait for the outcome of that test before performing in its reactive plan. The first simplifying number of tests that can be performed; taken (3) Deadline absolute better can merely observe which deadline values one reactive plan which other deadline values another plan is better for. limits into account. As such we cannot make it performs of a reactive plan unless for all possible values of the deadline. Otherwise we is better for, and the next tends to vastly increase are not the performance assumption this assumption distributions claims than its competitors the number. about (4) The reactive plan is invoked as soon as the fault appears (the previous assumption requires this assumption to also be made). (5) The fault sets associated with the outcomes of each test are disjoint any given fault, there is exactly one possible outcome of each test). (that is, for a test the The basic data structure that is used to represent action-based Action-based hierarchy. An example of an action-based hierarchies have the following properties: hierarchy ( 1) The basic structure of an action-based a reactive plan hierarchy is known as an in Fig. 2. is shown is similar to that of a decision tree. (2) The leaf nodes of the hierarchy correspond to individual faults (unlike to classes of faults one wishes in a to decision diagnose). tree where they may correspond (3) Each higher-level node has associated with it a set of faults that is the union of the sets of faults associated with its children. (4) The top node has associated with it the set of all faults. (5) Each node has associated with utility it a corrective in the associated for all faults action, which ideally will have fault set, but if no such action substantial exists, may simply have substantial idea behind an action-based if the agent only has time the action associated with the set of faults related the benefit associated with that action. The goal, ideally, utility for the most likely such faults. hierarchy to make a partial diagnosis, is that by identifying actions with it will be able to that partial diagnosis, is still to perform The central sets of faults, to perform and derive 332 D. Ash, B. Hrryes-Rot/z/Artificial Intelligence RR (I 996) 317-347 / Faults: Fl,F2,F3,F4 1 / Test: TI \\ / Faults: Fl ,F2 Action: A2 \ Faults: F3,F4 Action: A3 Faults: Fl Faults: F2 Action: A2 Action: A4 Faults: F3 Action: A3 Fig. 2. Sample action-based hierarchy. but it is also necessary to be able to provide good response in a complete diagnosis, suboptimal situation where complete diagnosis is not possible. As shown in Fig. 2, there is also associated with each nonterminal chy a test from the set T (defined with it a test r, and O(r) that node n has an associated hierarchy, one corresponding thereby in the last section). Suppose node in the hierar- that node n has associated (the set of outcomes of the test 7) = {ot,oz, . . , ok}, and in the to each outcome oi for which Oi n F, is nonempty. We can fault set F,,. Then n will have up to k children formally define an action-based hierarchy as follows: ( 1) The hierarchy itself consists of a pair (R, N) where R is the root node of the hierarchy and N is the set of all other nodes. (2) Each node n in the hierarchy is a 4-tuple (L, 7, a, F,,) defined as follows: ( 1) L is the set of children nodes of this node. In the case of a terminal node, (2) this would be empty. r is the test associated with this node (or the empty set in case L happens to be empty and we are dealing with a terminal node). (3) a is the action associated with this node (how this is computed will be explained below). (4) F,, is the set of faults associated with this node. If a node n = (L,r,a, F,,) has children L = {nl,n2,. The property given above relating a node to its children may be formally stated as . ,ni}, with each child follows: , ok}, then IZ; having for each ok for which ok n F,, # Q), there exists exactly one child node n,i for which Fn, =OknFn. the form (Li, ri, a;, F,,,), and the test r has k outcomes {ot,o2,. Having defined the relationship that define conditions node in the hierarchy associated with that node in the hierarchy. an action for a set of faults by extension between a node and its children, we now state the the action for each node. Specifically, we always associate with a that gives the best expected utility for the set of faults the action the utility of terms, we can define In formal from the definition for a single fault: D. Ash, 6. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 333 U(F u) “9 = Cm, P(f)U(f3u) c fEF,, P(f) the probability of fault f. Next, we can formally define the property is where P(f) that the best action, a,, at a particular node in the hierarchy must have: n = (L, 7, a,, F,,), then if the node denotes U(F,,a,,) =yi;WF,,a). In this case we write a, = a( F,). Having defined now specify the best action for a node, and thus the action-based hierarchy, we can the algorithm that constitutes the reactive plan that the agent will use: Algorithm 1. Reactive plan. Step 1. Step 2. Step 3. Step 4. Step 5. to the root node, R, in the hierarchy. the test associated with the current best hypothesis. Set the current best hypothesis Perform If the test result does not come back before the deadline 5. Otherwise, modify best hypothesis If the current best hypothesis associated with that node and stop. Otherwise, go to Step 2. Recommend the current best hypothesis is a terminal corresponding to the outcome of the test that occurs. node, recommend the action associated with the current best hypothesis is reached, go to Step to the child of the current the action and stop. Thus, the reactive plan is completely determined once the agent knows structure. This property of the reactive plan is designed Section 2 that the computational Given structure resources consumed structure, this property of the hierarchy It is structured using the hierarchy. to meet the criterion described in executing it should be minimal. the hierarchy in the reactive planner needs to be able to the following algorithm: Algorithm 2. Hierarchy structuring algorithm ( The reactive planner). Step 1. Step 2. Step 3. Step 4. Step 5. Step 6. Step 7. Step 8. in the hierarchy the set of all faults in DFS (depth-first hierarhcy, associating to expand. Associate with this leaf node search) order, or stop the that has the highest expected utility for the set of faults associated with Start at the top of the yet-to-be-built with this top node. Pick a leaf node if there are no more leaf nodes action this node. If the leaf node cannot be expanded another Find all tests relevant If no tests were found node. Determine which test found Expand come of the test found in Step 6, and the associated Go back to Step 2 and pick one of the children of the current node. to some heuristic. to each possible out- fault sets suitably adjusted. to the set of faults associated with the current node. the current node with one child corresponding to Step 2 and pick another in Step 4 is best according to Step 2 and pick in Step 4, go back further, go back leaf node. leaf 334 D. Ash, B. Heroes-Roth/Arf~cic~l htelligence 88 (1996) 317-347 The structuring described above tree. The only part of this algorithm heuristic used to determine which structuring heuristics which could be used. is very much like that used in structuring a decision that is not completely specified is in Step 6-the test is optimal. There are several possible hierarchy 3.1. Hierurchy structuring heuristics heuristic structuring A hierarchy tests to the real numbers, is a function within the context of a particular node in the hierarchy, such that the larger the result, the that could be used is more desirable [ 331. Specifically, the information-theoretic let the set of faults associated with the current node be F,, and compute the following function of the test 7: it is to perform at the node. The simplest heuristic heuristic used in structuring decision that maps trees where and pw(f) = P(f) # (0 E 7: .f E o} the information in the hierarchy. Hence content gained as one moves it would be expected, This heuristic maximizes to a child node minima1 number of tests to move from the root node to a terminal node in the hierarchy. However, tests, or the utility nodes in the hierarchy. Thus, we would of the best action available at the intermediate terms of the evaluation expect in Section criteria proposed that does take these factors into account. 2-by that we could do better-in using a structuring heuristic it does not take into account either the cost of performing from a parent to take a in general, Therefore, we propose an action-based hierarchy structuring heuristic as follows: where U(Fo) =tm&‘(Fo,(~) for any set of faults FO gives the definition of utility for a set of faults, and “(7, F ) II = CoEs I/con Ffl)P(o) ILET P(o) It will be noted heuristic of tests, not physical costs. As such, it relies rather heavily on a particular assumption that this structuring into account only temporal costs takes D. Ash, B. Hayes-Roth/Art~cial Intelligence 88 (I 996) 317-347 335 of this section-that than one test were allowed made at the beginning at a time. If more costs of tests were not taken form as many section we will relax account. into account, tests as quickly as possible, this assumption no more than one test can be in progress to be in progress at a time, and physical to per- cost. In the next into then as they have no intrinsic the agent would be advised at the same time as we take physical costs This gives two possible heuristics for structuring the hierarchy; [ 11. One can hypothesize about the behavior of an agent executing from either of these heuristics. One would expect heuristic the information-theoretic to find actions of higher value heuristic would converge so for higher values of the deadlines could be that the overall performance is likely to be better to prove these hypotheses (when for the action-based cases, but experimentally we can and will test these hypotheses there are others which a that the agent for shorter values faster on this heuristic would be better. integrated over all heuristic. As we in a few very later in the formally except in the action-based are given reactive plan derived is using of the deadline. However, terminal nodes, Another hypothesis values of the deadline) will see, it will be difficult specialized paper. reasonable At this point a word on nomenclature is appropriate. An action-based hierarchy is a to structure an action- heuristic. Al- heuristic, being hierarchy, will provide better hierarchy perfor- to tree. There are two heuristics being proposed the action-based heuristic, and the information-theoretic type of decision based hierarchy: it is certainly though specifically designed mance all decision The hypothesis choices at a high level in the hierarchy which do not particularly more specific diagnoses could fail if the planner using an action-based experimentally. heuristic makes “greedy” the help it in making heuristic which has a more general applicability trees, this hypothesis must be verified at a lower level in the hierarchy. than the information-theoretic that the action-based for the action-based to hypothesize theoretically and/or 3.2. Multiple tests at a time node in the hierarchy if it had to wait for the test’s outcome We now seek to relax the first and second assumptions the planner now takes the physical costs of tests into account stated at the beginning of this section. Specifically, in deciding when to perform a test. The idea is that the reactive agent may wish to perform that would a test in advance of its really being needed so as to avoid the delay in acting the agent be involved reaches a particular to perform not only the test associated with that node but also the tests associated with one or more of its children or other descendants. The process by which it does so is known a test so that it is performed earlier as test promotion because the deadline distribution than it is really needed. The hierarchy heuristic to take into account deciding whether promotion is greater simple: is first structured using distribution is essential Then in is done. Test than necessary is fairly involves deciding whether than the benefit gained by performing it early. The basic algorithm the test promotion process in its diagnosis process, later on. That is, when it involves “promoting” the cost in performing to do test promotion). it may decide a test earlier described (deadline [ l] in 336 D. Ash. B. Hayes-Roth/Art@cicrl lntellipmce 88 (1996) 317-347 Algorithm 3. Test promotion. Step 1. Structure Step 2. Set the current node to the root node in the hierarchy. Step 3. First recursively do test promotion by executing Steps 2-4 with the current the algorithm given above. the hierarchy using node being set to each of the children of the current node. Step 4. Then for each child of the current node in turn, determine whether the perfor- mance profile will improve or be worse if the tests for that child are moved to the current node. If the profile will improve, move the tests up. A formal description of test promotion may be found in [ 1 1. 3.3. Nondisjoint test outcomes The assumption has been made to date that the outcssumption for a test are always disjoint, or alternatively date that the outcomes partition of the set of faults or that any test has exactly one possible outcome fault. In this section, we examine what happens when this assumption weaker assumption but those outcomes will all be equally has been made to that each test is a for a given to the that a test may have multiple outcomes consistent with a given fault, is relaxed likely imposes in the presence of that fault. is that now that this for a node to determine it is possible the reactive plan, to a set of faults) (which corresponds The primary difference the likely winner of a presidential in to have multiple parents, whereas the hierarchy for the agent, before a node could have only one parent. It will therefore be necessary to keep track of the set of tests that have been executed in executing is in reaching a particular node in the hierarchy. One example where this could happen if we are trying nomination. One easy test is to determine whether any candidate has a majority of delegates yet. The set of and if this test fails to show a candidate with a faults here is the set of all candidates, the set of all candidates. However, majority, the agent needs so as not to perform test, and each node will have associated with it a set of tests, instead of just a single when test on that list that has not previously been executed will be performed. Each node will have a number of sets of children, in the one set corresponding hierarchy. to know that the ‘check knowing to each of the tests that can be performed for majority” has been performed is not enough. Furthermore, then the set of possible the highest ranking the set of possible faults will remain at this node it again-just is reached, the node faults Structuring to be created, the hierarchy will proceed similarly as before. The only difference will be that when a child node is potentially the reactive planner will look at the list of existing nodes and determine whether a node already exists with the same set of faults. If so, no new child node will be created, but rather a pointer will be created is a test to to the existing child node. The planner will then determine whether there the hierarchy. be performed If through if there is, then no there is not, further expansion of the child node will be necessary; algorithm will change further expansion to determine in reaching this node in the hierarchy. at this child node consistent with this trajectory is necessary. Step 6 in the hierarchy structuring those that have not already been performed the best test among D. Ash, B. Hayes-Rofh/Art@cial Intelligence 88 (1996) 317-347 337 Formally, the only difference is that the 6-tuple that defines each node now becomes: so that essentially important One each node now has a set of children assumption has been made in order sets instead of just one. to reduce the possibility of a combinatorial ities of lower nodes outcomes in lower nodes probabilities that different explosion in expanding the prior probabil- the search space. This regards in the hierarchies. Because of the differing numbers of competing of faults as the original prior faults may have for a given test, the prior probabilities in the hierarchy may not be in the same proportion of the faults. However, the above approach assumes that they are. in structuring trees is that they are being used not merely trees is not new. What decision is to do but also to provide meaningful is impossible. Since the heuristics used here are tailored in the interim when a complete to this application, It is because of this substantially term, action-based hierarchies, for our 3.4. Related work The idea of varying the heuristic responses used in the literature. that we prefer a different new about this application of decision classification, classification they have not been previously application different trees. decision is a fairly extensive body of literature devoted There tree structuring. An information-theoretic for decision [ 61, by Fayyad searchers: by Cheng et al. in GID3 [ 341, by Breiman introduce and Irani measures not the information into the different classes. This presupposes, however, tree is to diagnose down to the level of an individual unclear, some delineation first. GID3 and GID3* differ from ID3 (the original Quinlan) approaches have also been taken in the literature. therefore, how this approach could be applied a class separation et al. in CART of classes approach (C-SEP [ 41, and by Clark and Niblett content of a test but the degree to which it separates in GID3* [ 191, by Quinlan is used by various to exploring different heuristics re- heuristic in C4 [ 91. Fayyad the heuristic faults the decision in CN2 [ 201) where in that the goal of using class, not an individual fault. It is to the current problem without the action-based heuristic that would in turn require applying approach of in that only some of the outcomes of a test are used in branching. Many other information-theoretic A novel approach to structuring decision Murthy et al. [ 321. The idea here is that their algorithm, OCl, determines oblique hyperplane with which for us would be to design our own tests, rather than using a pre-defined a given domain. This would be an interesting the scope of the current paper. trees, oblique decision trees, is introduced by the optimal to split the set of data points. The equivalent problem set of tests from topic for further research, but is beyond 4. Formal results Ideally, one would be able to prove formally represents the best possible solution to the problem given that the approach presented in Section 3 in Section 2. If this could be 338 0. Ash, B. HLlyes-Roth/Art~Cial lrmlligence 88 (1996) 317-347 immediately it turns out this cannot be done, be concluded without the need for any experiments done, the paper could or examples! Although two forma1 results will be presented without proof. The first result shows that under certain well- defined assumptions, in the and no matter what other strong sense hierarchy will perform at least as structuring well. The second is very small. that no matter what the value of the deadline heuristic might be used, the action-based result gives a similar conclusion the best performance hierarchy provides in the case where the action-based in this section the hierarchy 4.1. Optimal action-based hierarchies The assumptions that are required the claim that action-based hierarchies provide optimal performance to make are the following: ( I ) All the assumptions made for the most basic version of the problem described (2) in Section 3 must be made. In addition, one of the following ( I ) The temporal costs of all tests must be equal. (2) There must be no time wastage at the deadline: two conditions must hold: that is, the deadline does not occur during after a test result comes back. the middle of performing a test but rather immediately (3) The really strong assumption that must be made is that the utilities of tests are for each fault. The utility of a group of tests for a fault is the amount after the that the utility of any group of tests is the sum additive by which performing group of tests. Additivity means of the utilities of performing the utility of the best action available the group of tests versus what is before performing for that fault each test. its utility improves 4.2. Very small hierarchies A similar claim can be made-that than any possible competitor-under mance very small hierarchy: action-based hierarchies provide better perfor- the following conditions which mandate a ( I ) All the assumptions made for the most basic version of the problem described in Section 3 must be made. (2) The temporal costs of all tests must be equal. two tests are required (3) At most resulting hierarchy has depth at most two). to complete the diagnosis process (hence the 5. Abstract experiments As we saw in Section 4, the set of conditions that action-based provide this section and the next, we shall seek other means of validating there will be three separate approaches described the best performance hierarchies under which we can formally prove in this work. In fact, In this section, in these two sections. limited. Thus, is quite D. Ash. B. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 339 regard the values of the inputs domly without the action-based If the performance tistically will be evidence domains. to the hierarchy structuring algorithm will be assigned to any specific domain, and the performance heuristic versus the information-theoretic significant margin than in favor of using under the action-based heuristic that of the information-theoretic this approach is found for structuring hierarchies ran- derived by using heuristic will be compared. to be better by a sta- this then in real-time heuristic, The validation method described in this section can both be criticized and praised on that criticism, of any particular domain. To answer that it is independent the grounds in the next section we will explore validation of the approach intensive care unit patient monitoring. in a particular domain- Specifically, ( 1) Using in this section we wish to evaluate the following two hypotheses: the action-based hierarchy will provide substantially better performance than the decision (2) Using the decision tree when evaluated as described tree will provide substantially in Section 2. better performance when only speed in reaching a leaf node matters. 5.1. Experimental design The problem size, prior probabilities, test outcomes, and values of actions for faults were assigned as follows: Problem size The problem size was allowed to vary and was equal to the number of faults, actions, is, the number of faults, actions, and tests were all kept or tests in the domain. That equal, and this number is what was allowed to vary. Prior probabilities The difficulty randomly, of n prior probabilities ables uniformly generator: they must also sum to 1. The following method was used in assigning prior probabilities (for n faults) PI ,p2,. on the interval distributed is that although they must be assigned to assign a set . . ,p,,: First a set of n - 1 random vari- [ 0, 1] was assigned by a random number XI,X2,...,&-I. Then these numbers were permuted so that they were in nondecreasing order: Xi, < Xi* < ” ’ < Xi,,_, where{it,iz ,..., i,_l}={1,2 ,..., n-l} and finally the priors are assigned as follows: PI =xil>P2=Xi* -Xilr*..tPn-l =Xi,,_j -Xi,,_2tpn- - 1 - Xi,,_, . The important property of this distribution bility generated in this way is the same. is that the distribution for each prior proba- Tests into two disjoint The number of tests, ~1, must be even. For each test, the fault set is randomly par- to offer any bias approaches subsets of size n/2. This does not appear titioned in favor of either approach. Both the action-based tend will partitioning proach. The partition to favor partitions which give a roughly equal split of the fault set, so in to each ap- is given the (,,y,) possible ways of doing the fault set in this way, a roughly equal advantage and information-theoretic from among is assigned randomly this. 5.1.1. Values of actions The value of an action In performing for a fault is uniformly distributed these experiments, we added another hierarchy in the interval [0, 11. information-theoretic selects a test at random at a given node. Formally, and action-based from this heuristic structuring heuristics: heuristic a random the set of all relevant is defined as to the basic in addition heuristic. The random heuristic tests follows: that can be performed R(t) = uniform o 1. [0, 1 1. i I‘ Elo t t: (il c o i-1 F,, c F,, , otherwise. 5.2. Statistical \,alidation In order to make any claims about these experiments, we need some means used will be the t-statistic and with sets of 100 trials, the t-statistic performance corresponds between to two standard deviations. two heuristics for computing [ 261. Under reasonable the statistical validity of the results derived from statistical validity. The method the experiments, about that a difference of I .75% in hierarchy and 3.5% to one standard deviation assumptions indicates corresponds 5.3. Experiment results that over heuristic but that for diagnosis), in performance, time, of action-based and random heuristics, using a problem the difference (DT), the action-based Fig. 3 shows information-theoretic This shows approaches, no matter what the value of the deadline able to a maximum values. This corresponds, equally well at their is an advantage there be about 8% for deadline sponds cant. (ABH), size of 64 faults. always does at least as well as the other (the amount of resources avail- from nil at time zero, to nil for large deadline perform nodes to in Section 5.2, corre- signifi- that at the over others. The advantage to at least 5 standard deviations, which can be taken root and their for certain hierarchies for deadline values of around 3 or 4, back values of 3 or 4, which as noted that all hierarchies to be statistically leaf nodes, but this advantage to the fact varies over intermediate speaking, appears roughly time D. Ash, B. Hayes-RothIArtijicial Intelligence 88 (1996) 317-347 331 0.65 value of Best Action To Date o,6 0.75 0.7 0.55 L 0.6 ” ‘ABH’ ‘,,T’ - ____ “Random’ ..... 2 4 Deadline 6 6 10 Fig. 3. Hierarchy performance with different deadlines and heuristics. 6. Domain results The experiments described a good preliminary to the that can be realized by taking deadline distributions in Section 5 were successful validation or random heuristics, information-theoretic of the approach of using provided opposed benefits account. As such, which was extremely provably optimal. However, this section we apply can be realized they significantly extended the scope of the limited in that it required very strict assumptions to date the approach has been completely to a real-world problem the approach in such a problem. The first part of this section will describe tensive care unit patient monitoring-and this problem will be presented. These results, while suggestive, validated because significant. the performance then results cannot be statistically of a single generated hierarchy cannot be statistically the approach the domain of application-surgical from applying in- to as far as they went. They as the action-based as well as the increased into analysis, to be and test promotion theoretical in order in the abstract-in to show that similar results 6. I. Intensive care unit patient monitoring The domain to which intensive care unit (ICU) . A patient is placed on a ventilator problems these ideas are applied is that of monitoring in an in the ICU typically has multiple organ failure and to assist with breathing. Because of this, there can be many is attractive because of this domain a patient that might arise that require fast response; 342 D. Ash, B. Hccyes-Roth/ArtiJciul Intelligence RX (1996) 317-347 the need to provide such response, and because available of differing different sizes. specificity there are often several different responses that can be undertaken given differential diagnoses of life support) the immediate The areas requiring immediate response can be broadly categorized algorithm or treatment of the underlying and oligemic hypoxia problems generally settings or treatment of the underlying into three groups: require a transfusion of some type; oligemic (advanced invocation of an ALCS time anemic hypoxia problems which generally hypoxia problems which may require cardiac available; the ventilator actions order to diagnose therapy for definitive for a particular the value of each action, a medical domain expert provided a heuristic estimate of the numerical value of each action for each fault on a scale of 0.0 to 1 .O. for a wide range of problems; or they can represent the structuring cause of the problem. Corrective time in in this domain can be of several types; they can buy a medical practitioner the definitive requires a particular number is if more either some tweaking of they can be effective but not necessarily the real underlying problem; fault. Because algorithm requiring cause The tests available in this domain tended to fit into two large categories-lab require an average of 20-30 minutes checking parameters-these this domain not a limitation particular domain. require a minimum on the action-based to come back-and could be completed of computational hierarchy approach but rather tests that involving monitoring in under a minute. The actual to be analyzed; complexity actions tests in is this is an artifact of this Many of the inputs for structuring the algorithm will depend on the type of patient the purposes of illustration. in the ICU. For were given by a domain expert based on a typical patient at the Palo Alto Veteran’s Administration artery bypass graft (CABG) 67 year old male who had just undergone in this demonstration the values used hospital-a coronary surgery. system algorithms system, VM the KARDIO that is solved typical vehicles [ 181, is similar to be impossible to half the problem in KARDIO. Another than here. In particular, [3] precompiles ECG descriptions Various medical domains have been for applying AI ideas over the based on reasoning, which it uses to classify arrhythmias at run time. This represents solutions but is impossible. years. For example, model-based in this paper; we precompile a solution also can make tradeoffs at run time in cases where a complete diagnosis This appears the present work in that it is a real-time medical AI system, but it handled in a different manner of reasoning with deadlines. Therefore, using action-based to handle Specific to real time it was concerned with the complexity incomplete data, but the notion of meeting a deadline to the problem of intensive care unit patient monitoring, stale over time, but not that a system [lo] was able body of literature. Factor and colleagues process consists of a graph of decision processes which execute provide parallelism little knowledge seem to be a major advantage there is a fairly wide [ 171 developed an architecture known as the it to the problem of ICU patient monitoring. The process trellis to is done by domain experts with to do parallel processing would the fact that the processes modeled all even when knowledge of parallelism. Although can. Another medical system, TraumAID and with when data values became acquisition the ability to make the necessary trellis and applied to this approach, it has the ability it was unable in parallel; is missing. hierarchies tradeoffs D. Ash, B. Hayes-Roth/Art@cial Intelligence 88 (1996) 317-347 343 directly correspond physiologically to deadlines. Response on deadline deadlines and not necessarily An ICU patient monitoring to the domain requires a component restricts its usefulness that knows specifically in responding about about specific organ systems. system with a strongly decision-theoretic component is [ 38,391. The that effectively VentPlan preferences than the one made by action-based it would be interesting results. where better when complete It appears plausible incomplete information information trades off complexity and accuracy. This is a different idea here is to select a decision-theoretic model of physician tradeoff hierarchies, which trade off time for specificity. Still, the better to see which yields hierarchies would perform better in cases is available, while conversely VentPlan would perform the two approaches that action-based to compare is available but time is short. EINTHOVEN [ 441 is another ICU monitoring tation of ECGs. As such it attacks a different subproblem of the ICU problem one discussed SIMON [43], and the work of King and colleagues in this paper. Other ICU monitoring systems at Vanderbilt [45]. system devoted chiefly to the interpre- than the [42], include WEANPRO 6.2. Results in the domain The hierarchy theoretic heuristics, it is computationally and measure not statistically hierarchy this complete domain, with the action-based approximation hierarchy is possible. structuring algorithm was run, with both action-based and information- on the medical problem outlined to generate a complete hierarchy in Section 6.1. As noted above, for a set of 58 faults are of that hierarchy, but the results generated tractable the expected performance significant. Further information is computationally analysis tractable can be found is possible does not mean so in that sense we are solving a simplified or information-theoretic to the real problem, a complete in that there [ 11. Of course, about why the generation of a complete the fact that in the is no uncertainty version of the actual problem heuristics. However, given this simplified analysis of the value of a particular The basic assumption that is made in moving from the actual problem algorithm to the simplified are fixed and to come back from the lab in and known the is that the various inputs to the hierarchy structuring in advance. For example, a given test is assumed problem known a fixed amount of time; only other inputs in the actual domain the time would be uncertain to have a certain approximate mean. Similar comments may be made about algorithm. to the hierarchy structuring that the goal of this research It should also be remembered is to compare different possible approaches to the same general problem of reacting when faced with limited resources and only basic associative knowledge about the domain. Other approaches such as model-based first principles domain knowledge better) or belief networks better) might perform better in certain cases especially uncertainty when the agent has greater resources with which necessary comparison, to make topic for further research. it would definitely be an interesting It is not the goal of the present its diagnosis research and has the this domain knowledge. to complete reasoning (handling (handling although Fig. 4 shows the results for the performance of best action plotted against deadlines. For short values of the deadline, of the medical hierarchy, with value it should be 344 D. Ash. B. Hayes-Roth/Artijicial lnfelligence 88 (1996) 317-347 0.9 0.6 Value a5 Best Action To Dat 84 0.3 0.2 0.1 i 0 0 50 100 150 Deadha 200 in Mmtes 250 300 350 Fig. 4. Hierarchy performance on medical problem (costs factored in). “ABH’ “DT” - hierarchies outperformed that action-based larger values of the deadline, noted some results, which as noted earlier are not statistically the deadline response, whereas may be better. for larger values of the deadline, to be short, then action-based is expected information-theoretic information-theoretic significant, hierarchies. For hierarchies do better. These that if the best approach seem hierarchies are provided to suggest the information-theoretic 7. Directions for future research The work provides an important contribution to the field in several ways. It represents on existing diagnosis work in that this work either addresses diagnosis ( [ 351, [ 161, and many others), or the specific notion of meeting a real-time deadline this approach to come up with a response within a single systems assume deliberation systems, of having issues without an improvement but not from the point of view of real-time constraints addresses complexity ( [ 111 and some others). With regard to existing reactive planning takes us beyond the limitations cycle or not at all ( [28] and others). Existing (deciding what (doing [ 371 and others) -this time. As will be discussed the approaches to decision it would be interesting for the real-time problem to do next) and action approach requires further below, than entropy-this and advantages do not address limitations anytime that all deliberation it would be interesting this approach may offer. Existing take place at planning further selection tree construction the real-time question, although to try many of them out to see whether others might do better to examine attribute issue has not been fully explored. at run time ( [ 141, it) are interleaved D. Ash, B. Hayes-Roth/Artificial Intelligence 88 (1996) 317-347 345 The question thus arises as to what the limitations is reasonable will seek to identify a number of the more promising intended the description it that further work could push back the limitations. This section ideas for extension of the work; to be complete. are of this approach and whether is by no means in this section to believe 7.1. Reasoning under uncertainty Perhaps capability that would need to be added the most would be the ability in the sense that the system can handle more than one fault. However, the probability can only be zero or in the same proportion beginning important to this approach to reason under uncertainty. Right now there is only a limited ability that are consistent with in of a fault that existed at the of faults as the reasoning process progresses. The probability of the execution of the reactive plan. to handle arbitrary changes there is no general ability tests that have outcomes to other possible faults 7.2. Deliberation in real time The assumption in real time in advance process pile solutions the structuring scarce not the only researchers [ 31 or Widman made. But is it a reasonable addressed by this research. underlying much of this research to reactive problems, is that it is desirable to precom- at least as much as possible, because sufficiently resources is sufficiently complex and computational that it cannot be wasted on hierarchy to make this assumption-implicit [ 441 or any decision tree structuring algorithm structuring. Certainly we are in the work of Bratko et al. is this same assumption that has not been assumption to make? This is something 7.3. Decay in values of actions The value of an action for a particular fault is assumed deadline, and then zero thereafter. This clearly [ 381 has proposed a function of time. A useful Rutledge’s ideas into this work. (or similar) that various models be used for the decay in the value of actions as topic of further research, therefore, would be to incorporate is not valid in general. to be constant up to the hard Indeed, Rutledge 8. Conclusions This paper has illustrated both the strengths and limitations of the action-based as the action-based turing approach. The greatest strength of the approach approach to the problem previously described the problem described primary drawback real time and making one technology is that they are not simultaneously in the literature do not address that can be applied the planning/real-time structuring to this problem-decision tradeoff so essential the problem addressed by this research; capable of providing their in to this approach. The to be an response trees-proves struc- competing is as effective at solving approach. Many of the other technologies is that no possible in the literature 346 D. Ash, B. Hayes-Roth/Art~cial Intelligence 88 (19961 317-347 effective approach, but capable of being made more so by a number of refinements in this paper. which have been described in detail represents In problem domains where reasoning under uncertainty the best known manner of providing approach for reasoning under uncertainty proach could also be combined with known in cases where it is necessary, and such a combination would represent an improvement of the state of the art in such cases. is not necessary, real-time this refined response. This ap- techniques Acknowledgements This research was supported by ARPA through NASA grant NAG2-58 1 (ARPA order 8607) and Teknowledge contract 7 17 15 under ARPA contract DAAA21-92-C-0028. References 1 I 1 D. Ash, Diagnosis using action-based hierarchies for optimal real-time performance, Ph.D. dissertation, 121 131 141 151 161 17 18 I9 110 real-time Intelligence resources, eds. Machine of cardiological knowledge, 11 (Oxford University Press, J. Friedman, R. Olshen and C. Stone, Ck~ssijication and Regression Trees (Wadsworth & response with limited synthesis and compression Computer Science Department, Stanford University, Stanford, CA ( 1994) D. Ash, G. Gold, A. Seiver and B. Hayes-Roth, Guaranteeing Infell. Med. 5 ( 1992) 49-66. .I. Arf$ I. Bratko, 1. MozetiE and N. LavraE, Automatic in: J.E. Hayes, D. Michie and J. Richards, Oxford, 1987) 435454. L. Breiman, Brooks, Monterey, CA. 1984). R. Brooks. A robust 14-23. J. Cheng, U. Fayyad, K. lrani and Z. Qian. Proceedings Fifth InrernntionrrI Conference on Machine Learning, Ann Arbor, Ml ( 1988) 100-108. L. Chrisman and R. Simmons, Sensible planning: Anaheim, CA ( 1991) 756-761. W. Clancey, Heuristic classification, Artif. P Clark and T. Niblett, The CN2 induction algorithm, Mach. Learn. 3 ( 1989) 261-284. I. Clarke, M. Niv, B. Webber, K. Fisherkeller, D. Southerland for managing for a mobile robot, IEEE J. Robot. Automat. focusing perceptual attention, lnfell. 27 ( 1985) 289-350. layered control system levels of resources, Improved decision trauma at various and R. Ryack, TraumAID: a decision aid in: Proceedings Thirteenth Annual Sympnsium on trees: a generalized version of lD3, in: in: Proceedings AAAI-91, (March 1986) Computer Applications I I I I G. Cooper, The computational in Medical Cure, Washington, DC ( 1989). complexity of probabilistic inference on Bayesian belief networks, Art$ Intell. 42 ( 1990) 353-405. I I2 1 V. Dabija, Deciding whether to plan to react. Ph.D. dissertation. Computer Science Department, Stanford University, Stanford, CA ( 1994). [ 13 I R. Davis and W. Hamscher, Model-based reasoning: troubleshooting, the National Conference on Artijicial in: H. Shrobe, ed., Explorin,q ( 1988) Intelligence Artificial 297-346. Intelligence: Survey Talks .from [ I41 T. Dean and M. Boddy, An analysis of time-dependent planning, in: Proceedings AAAI-RR, St. Paul, MN (1988) 49-54. [ IS I T. Dean, L. Kaelbhng, J. Kirman and A. Nicholson, Planning with deadlines in stochastic domains, in: Proceedings AAAI-93, Washington, DC ( 1993) S74-579. I 161 J. de Kleer and B. Williams, Diagnosing multiple I 17 I M. Factor, The process trellis software architecture Yale University, New Haven, CT ( 1990). faults, Artif: Intell. 32 (1987) 97-130. for parallel real-time monitors, Ph.D. dissertation, D. Ash, B. Hayes-Roth/Ari@ial Intelligence 88 (1996) 317-347 347 I I8 I L. Fagan, VM: representing time-dependent relations in a medical setting, Ph.D. dissertation, Computer Science Department, Stanford University, Stanford, CA ( 1980). [ 191 U. Fayyad, On the induction of decision trees for multiple concept learning, Ph.D. dissertation, EECS Department, University of Michigan, Ann Arbor, MI ( 199 1). [201 U. Fayyad and K. lrani, The attribute selection problem in decision tree generation, in: Proceedings AAAI-92, San Jose, CA ( 1992) 104-I 10. [ 211 R. Fikes, P Hart andized [22] K. Forbus, Qualitative process [ 23 1 M. Ginsburg, Universal planning: an (almost) [ 24 1 J. Hendler and A. Agrawala, Mission critical planning: AI on the MARUTI robot plans, Artif Intell. 3 ( 1972) 251-288. theory, Artif Infell. 24 ( 1984) 85-168. universally bad idea, Al Mag. 4 ( 1989) 40-44. real-time operating system, ed., Proceedings Workshop on Innovative Approaches to Planning, Scheduling, and in: K. Sycara, Control ( 1990) 77-84. 125 I M. Henrion, Search-based methods to bound diagnostic probabilities in very large belief nets, in: Proceedings Seventh International Conference on Uncertainty in AI, Los Angeles, CA ( 1991) 142-150. 126 I P. Hoel, introduction to Mathematical Statistics (Wiley, New York, 1947). [ 27 1 E. Horvitz, Reasoning about beliefs and actions under computational Third Workshop on Uncertainty in Al, Seattle, WA (1987). resource constraints, in: Proceedings [ 28 1 L. Kaelbling, An architecture for intelligent reactive systems, in: M. Geotgeff and A. Lansky. eds., Reasoning about Actions and Plans ( 1987) 395-410. specifications, [ 29 I L. Kaelbling, Goals as parallel program 1301 L. Kaelbling, Specifying complex behavior Approaches to Planning, Scheduling, and Control ( 1990) 433-438. simulation, Artif Intell. 29 ( 1986) 289-338. for computer agents, [ 3 I 1 B. Kuipers, Qualitative I32 I S. Murthy, S. Kasif, S. S&berg in: Proceedings AAAI-88, St. Paul, MN ( 1988) in: Proceedings Workshop on Innovative and R. Beigel, A randomized induction of oblique decision trees, in: Proceedings AAAI-93, Washington, DC ( 1993) 322-327. inference 1331 R. Quinlan, in: R.S. Michalski, T.M. Mitchell and J. Carbonell, eds., Machine Learning (Tioga, Palo Alto, CA, 1983). trees, in: Y. Kodratoff and R. Michalski, eds., Machine Learning: An of high-performance the construction [ 341 R. Quinlan, Probabilistic as a tool programs, Inductive decision for Artificial Intelligence Approach 3 (Morgan Kaufmann, San Mateo, CA, 1990). [ 35 I R. Reiter, A theory of diagnosis [ 361 S. Rosenschien, from first principles, Art$ Intell. 32 ( 1987) 57-95. environment automata information-tracking in: Proceedings First International Conference on Principles of Knowledge Representation and Reasoning, Toronto, Ont. ( 1989). Synthesizing descriptions, from I37 I S. Russell and E. Wefald, Principles of metareasoning, Artif Intell. 49 ( 1991) 361-395. [ 381 G. Rutledge, Dynamic selection of models under time constraints, in: Proceedings Second Annual Conference on AI Simulation and Planning in High Autonomy Systems, Cocoa Beach ( 199 1) 60-67. [ 39 1 G. Rutledge, G. Thomsen, B. Fart-, M. Tovar. J. Polaschek, I. Beinlich, L. Sheiner and L. Fagan, The design and implementation of a ventilator-management 1401 M. Schoppers, Universal plans for reactive robots 87, Milan ( 1987). advisor, Arttf Intell. Med. ( 1993). environments, in unpredictable in: Proceedings IJCAI- 1411 E. Shortliffe, MYCIN: Computer-Based Consultations in Medical Therapeutics (Elsevier, New York, 1976). [ 42 I D. Tong, Weaning patients from mechanical ventilation: a knowledge-based system approach, Compuf. Meth. Programs Biomed. 35 ( 1991) 267-278. 1431 S. Uckun, B. Dawant and D. Lindstrom, Model-based reasoning in intensive-care monitoring: the YAQ approach, Arttf Infell. Med. ( 1993). approach 1441 L. Widman, A model-based l-19. (1991) to the diagnosis of the cardiac arrhythmias, Artif Intell. Med. 4 [ 45 I J. Xu, S. Hyman and l? King, Knowledge-based flash evoked potential recognition system, Artif: Intell. Med. 4 (1992) 93-109. 