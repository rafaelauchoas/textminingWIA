ELSEVIER Artificial Intelligence 101 (1998) 35-62 Artificial Intelligence Using modeling knowledge to guide design space search Andrew Gelsey *, Mark Schwabacher I, Don Smith 2 Computer Science Department, Rutgers University, New Brunswick, NJ 08903, USA Received 26 March 1997; received in revised form 5 January 1998 Abstract Automated search of a space of candidate designs is an attractive way to improve the traditional engineering design process. To make this approach work, however, an automated design system must include both knowledge of the modeling limitations of the method used to evaluate candidate designs and an effective way to use this knowledge to influence the search process. We argue that a productive approach is to include this knowledge by implementing a set of model functions which measure how much each modeling assumption is violated. The search is then guided by using the values of these model constraint functions as constraint inputs to a standard constrained nonlinear optimization numerical method. A key result of our work is a successful demonstration of the application of AI techniques to an important engineering problem. In an empirical study of parametric conceptual aircraft design, we observed a cost improvement of two orders of magnitude. The principal contribution of our work is a new design optimization methodology which makes explicit the interaction between models of artifacts, and validity models of artifact models. @ 1998 Elsevier Science B.V. All rights reserved. constraint Keywo&r Design; Engineering; Model; Optimization; Physics; Search; Aircraft; Constraint; Numerical 1. Introduction Automated search is not commonly widely held belief process by producing that search automation better designs used in real-world design in spite of the engineering in less time. We explain why automated design the traditional improve should tasks, * Corresponding author. Email: gelsey@cs.rutgers.edu. ’ Email: schwabac@cs.rutgers.edu. 2 Email: dsmith@cs.rutgers.edu. 0004-3702/98/$19.00 PII: SOOO4-3702(98)00012-5 @ 1998 Elsevier Science B.V. All rights reserved. 36 A. Gelsey et al. /Arti$cial Intelligence I01 (1998) 35-62 their limits), do not know can of the simulators. The is a new design optimization methodology which the interaction between models of artifacts, and validity models of artifact problem, and show how this problem to an important engineering of AI techniques the limitations that model an effective compromise as given, or, on the other hand, completely between, on the one hand, using re-engineering the results of a it declaratively. in previous research (e.g. [9], see Section 7) but contribution of our work (simulators is not used be overcome using model constraints principal makes explicit models. We show an application presenting simulator Re-engineering may be prohibitively A key contribution has been successful expensive. AI techniques conceptual The details of this study appear improvements may transfer If the design process of our work is a successful demonstration of the application of to an important engineering problem. In an empirical aircraft design, we observed a cost improvement study of parametric of two orders of magnitude. later in this paper, as well as some evidence that such to other domains. simulation is automated, each step of the automated this evaluation must be done by computational search requires evalu- (e.g., aircraft, our main simulation. However, compu- is based on a model of the physics of the artifact, and this model tractable. to be used by human experts, and ating the quality of candidate designs, and for complex artifacts example), tational will generally make simplifying Most existing computational thus Instead, from portions of the design space that will violate are intended of their modeling representation that the experts will use their domain knowledge simulators include no explicit assumptions. to stay away typically it is assumed in order to be computationally the simulator’s assumptions. assumptions they is a physical phenomenon that occurs when a wing For example, a typical assumption for an aircraft simulator might be that the wings is operated at will not stall. Stall lift. The physics of stall is too high an angle of attack and therefore ceases to generate understood, and there is in principle no reason not to model it in a simulator. However, a human expert aircraft designer does not want to design a plane that stalls during normal operation, In our interactions with aircraft in fact be quite satisfied with an incomplete them the ability to recognize candidate design would actually stall and should be discarded. that human experts may lift model. Their domain knowledge gives that the so he does not need a detailed prediction of stall behavior. industry expert design engineers, we have found high” lift coefficients and thus realize “impossibly However, rather the design the simulator’s the simulator may be invoked by another program than by a human expert. In this case the automated space, such as an automated that it is quite search procedure will examine designs the evaluation search procedure in exploring which violate of the design quality computed by the simulator may be meaningless. Furthermore, value may appear better than the value for any physically meaningless thus leading the search procedure problem engineering this realizable design, to a worthless but apparently very good design. This is one reason design. For those candidate designs, is not commonly that automated in “real-world” assumptions. search likely used In our earlier work [ 161, we have investigated are needed so that a simulator also described algorithms can be reliably for detecting assumption the types of modeling knowledge that invoked by another program. We have that and other problems violations A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 31 might lead to incorrect or unreliable the question of how information communicated procedure which contains candidate designs to an automated to focus simulation about model assumption violations search procedure. This communication results. In the present article, we address can be effectively allows the search the subset of the design space its search for good designs within that do not violate model assumptions. 2. Communication strategies As mentioned above, the focus of this research is the effective communication of about model assumption information search procedure which is exploring work we have used a gradient-based procedure. discussing following more general of information search procedure which (This search procedure the details of this particular about model assumption violation between a simulator a space of candidate designs. constrained optimization and an automated In our experimental algorithm as our search in Section 4.) However, before the like to present is further described search method, we would list of strategies. These strategies can be used for communication violation between a simulator and an automated is exploring a space of candidate designs: The Null Strategy: ignore the model violation-the search procedure uses whatever value to be computed by the inapplicable model for the quality of the candidate happens design. The Boolean Strategy: when any model violation occurs, always give the search proce- dure a standard “very bad value” as the quality of the candidate design. Model Constraints: when a candidate design is evaluated, give the search procedure not only a value for the quality of the candidate design, but also values for a set of “model constraint” are satisfied or violated. functions which measure how much the various modeling assumptions Model Penalties: same as the model constraints is returned strategy, except that only the value for to the search procedure, and that value to the amount by which the various modeling assumptions the quality of the candidate design is penalized are violated. in proportion In this article we will focus primarily on the boolean strategy and model constraints. The null strategy as either be useful - the boolean its advantages include: is unlikely to be useful unless strategy or the model penalties it coincidentally to be the same strategy. The boolean strategy can happens l easy to implement: as soon as a violation is detected, just return immediately with a standard “very bad” value for the objective function, l it can be used even with unconstrained search methods. The model constraints strategy, but our experimental search method is considerably penalties strategy strategy is more complicated to implement than the boolean results that allows constraints, better than that of the boolean strategy. We do not investigate later in this article show that when used with a strategy the performance of the model constraints the model in this article, but discuss possible uses for it in Section 8. 38 A. Gelsey et ul./Art@icial Intelligence IOI (1998) 35-62 0 engine&ale = 1.532 wingArea = 4652 aspectRatio = 1.57 fuselageTaperLength = 121.3 WingThicknessRatio = 3 ws_div_dma = 1 .I58 \ taperRatio = 0 drawingscale = 2.09 -42 I 0 n i 42 Fig. 1. Supersonic transport aircraft designed by our system (dimensions in feet). Phase 1 2 3 Mach 0.227 0.85 2.0 Altitude (ft. ) Duration (min.s) Comment 0 40,000 60,000 5 85 180 “takeoff subsonic cruise (over land) supersonic cruise (over ocean) capacity: 70 passengers Fig. 2. Mission specification for aircraft in Fig. I A. Gelsey et al. /ArtQicial Intelligence 101 (1998) 35-62 39 3. Aircraft design We have pursued our investigation aircraft. However, in our design in the domain of conceptual design of supersonic task the key design variables have already so a more level industry design expert) of our problem might be “parametric design at a system (in collaboration with an aircraft transport identified been precise characterization of abstraction”. Fig. 1 shows a diagram of an airplane designed transport, passenger to fly the mission shown in Fig. 2. This is the passenger so a key requirement in this case). The mission has three key phases: a short, low-speed, travel cruise phase a subsonic cruise phase representing and finally a supersonic is prohibited, flight is for a supersonic (70 persons mission capacity ground over land where supersonic corresponding level phase to test takeoff capability, to an ocean crossing. implementation, such as wing area, aspect ratio, engine size, etc. The experiments For conceptual design, we represent an aircraft just by a set of values for major aircraft in later in Section 6. In our the takeoff mass of the aircraft, a industry at the conceptual design stage. of the design variables this article use eight such design variables, which are listed current measure of merit commonly used in the aircraft Takeoff mass operating of the cost of building particular mission cost of the aircraft, and “dry” mass, which provides a rough approximation is the sum of fuel mass, which provides a rough approximation the aircraft. Takeoff mass of a particular the design goal is to minimize is computed as follows: aircraft design for a 1. Compute “dry” mass using historical data to estimate the weight of the aircraft as a function of the design variables and passenger capacity for the mission. the landing mass m(tc,,t) which is the sum of the fuel reserve plus the required 2. Compute “dry” mass. 3. Compute the takeoff mass by numerically solving the ordinary differential equation indicates which that the rate at which to the rate of fuel consumption, which of the aircraft and the current tor’s aerodynamic model propulsion model the thrust which will compensate to compute is used the mass of the aircraft changes is equal in turn is a function of the current mass time in the mission. At each time step, the simula- the current drag, and the simulator’s to generate the fuel consumption required for the current drag. is used to compute A complete mission simulation 250 41266 desktop workstation. requires about l/4 second of CPU time on a DEC Alpha 4. Design Associate Fig. 3 shows a block diagram of our automated conceptual design system. The design the system has two major components: (DA), which searches the Design Associate 10 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 Design Associate Model/Simulation Associate 1 Search - Manager Random Starting Point Generator Design Constraint i* Evaluation Multidisciplinary +-+ Aircraft Simulator J Constrained Nonlinear Numerical Optimizer v’ -z > ( Model Constraint Evaluation -~Aerodynamics IPropulsion - Fig. 3. Automated design system block diagram. designs, the quality of candidate designs. Unlike the Model/Simulation and space of candidate DA uses to evaluate more commonly design problem can be varied continuously space, of continuous to a set of nonlinear nonlinear objective candidate aircraft design the Model/Simulation function studied by AI researchers, involves design variables throughout the DA uses a constrained design variables nonlinear to minimize3 equality and inequality to be minimized Associate (MSA), which the the discrete search spaces the search space for the aircraft conceptual ratio which such as wing area or aspect this the set subject constraints. As mentioned the is the takeoff mass required for a particular are computed within an interval of possible values. To search numerical optimizer, which varies function a nonlinear previously, objective to fly a particular mission. The constraints in Section 5. Associate and are described The data flow in Fig. 3 is as follows: nonlinear optimizer represented to the constrained nonlinear optimizer (in conjunction with starting point generator) the random a design as a vector of this initial the same to the evaluation modules a design, again represented the values of the design variables. The optimizer uses The search manager passes real numbers, design as a starting point and later passes back an improved design using representation. The constrained (directly or via the gradient computation mod- as a vector of ule) passes values of the design variables. The design constraint evaluation module passes back the values of the design constraints. The a vector of real numbers representing model constraint module does the same for model constraints, and the objective evaluation module passes back a scalar value for design quality, which function however is only meaningful The evaluation modules pass on to the simulator the simulator evaluation module passes back a complete then extracts to them, and from which each if all the constraints the design passed the data it needs. set of simulation are satisfied. results ’ To instead maximize the objective function, just multiply it by - I and minimize A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 41 The numerical optimizer used in this article im- of the Sequential Quadratic Programming method. 5 Sequential Quadratic plementation Programming that solves a nonlinear constrained optimization is a quasi-Newton method problem by fitting a sequence of quadratic programs6 these problems using a quadratic programming method to it, and then solving each of [ 20,431. is CFSQP 4 [ 231, a state-of-the-art CFSQP begins candidate design), all terminate starting point generator designs, improving and typically its search of the design space at a particular point (i.e., a particular from several starting points will not the DA includes a random so that CFSQP can be started from several different candidate at or near a single global optimum. Therefore, a set of searches the likelihood of finding an excellent design. to compute a component is unevaluable, if the DA evaluates points. For example, to handle unevaluable (i.e., points each of whose objective points the boolean strategy standard “very bad” value), function the DA includes methods gradient computation. The gradients used by CFSQP are computed by accuracy in three candidate of the gradient using a central difference the unevaluable In order was assigned for “intelligent” using a set of rules that specify how to compute gradients with reasonable the presence of unevaluable designs in order formula, and if one of the points formula. The DA’s rules for point and uses the other two points for gradient computation are described to terminate when they encounter unevaluable points. These the line searches strategy, enhancements the which results are model constraints so some unevaluable points exist even when using not modeled in this article, with the boolean strategy, model constraints. reported strategy, 76% of the points encountered were unevaluable, 4% of the points encountered were unevaluable.’ to CFSQP are crucial when using in numerous unevaluable communication in the model constraints, In the experiments points. They can also be helpful when using of the simulator limitations in a forward difference in detail In addition, we have arranged and with the model constraints the boolean communication then the DA ignores strategy, since some in CFSQP in [35]. 5. Model/Simulation Associate Our automated design system sociate the DA uses tidisciplinary responsible (DA), described to evaluate ’ simulator which for communicating (Fig. 3) has two major components: above, and the Model/Simulation Associate the quality of candidate designs. The MSA the Design As- (MSA), which a mul- includes is it uses to evaluate candidate designs, and the MSA about to the DA information the quality of a candidate 4 CFSQP stands for “C code for Feasible Sequential Quadratic Programming”. s Earlier we tried doing optimization in this domain using several different optimization packages, and found that we obtained h A quadratic constraints. the best results when using CFSQP. program consists of a quadratic objective function to be optimized, and a set of linear 7 The optimizer tends average density of unevaluable article. to avoid unevaluable points points, so these percentages are considerably in the search spaces, as indicated by the data presented lower than the later in this s We call engineering the simulator wudtidisciplinary because disciplines, including weights, aerodynamics, and propulsion. it contains code to evaluate the aircraft using several 42 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 are satisfied, and how well the simulator’s strategy. When strategies described design, how well other design constraints modeling assumptions the communication constraints uate a candidate design, of design constraint constraints communication to the DA. To implement value for the objective function, which functions strategy, are satisfied. Our current version of the MSA implements the MSA runs the multidisciplinary it computes values two of in Section 2: the boolean strategy and the model to eval- and a set the model the MSA just returns values for all these functions function functions. To implement for both the objective aircraft simulator and model constraint the boolean communication strategy, is computed as follows: the MSA returns only a l if one or more constraints are violated, to the DA as the value of the objective the MSA sends the MSA sends a standard “very bad” value function; to the DA the value of the objective function computed l otherwise, by the simulator, which will be the takeoff mass the candidate design complete the mission. requires to For the experiments in this article, the MSA computes the following model constraint functions, which are < 0 if a constraint is satisfied and positive otherwise: the simulation will continue using extrapolation, required during mission simulation) - (maximum If an impossibly high throttle is required but the value of MaxThrottle are violated. to fly the to which throttle setting allowed the engine model assumptions for engine) - (minimum throttle re- MaxThrottle throttle = (maximum throttle setting allowed for engine). mission, will indicate MinThrottle the extent = (minimum quired during mission DragTableLl, DragTableUl simulation). , DragTableL2, DragTableU2: Similar to above-violation of bounds for a two-dimensional table of experimental data on supersonic drag. LOAD = (maximum wing loading during mission simulation) - (maximum wing loading simulator can validly model). FUEL = (fuel mass that current candidate design requires to complete mission) - (fuel mass that can be stored in available volume lift coefficient during mission for current candidate design). - (maximum simulation) STALL = (maximum lift coef- ficient simulator can validly model). The simulator assumes wings will not stall, and this constraint function computes how well that assumption is satisfied. These model constraint functions are continuous the design variables as their values change sign. This smoothness that when MSA numerical optimizer) aircraft design which can fly the given mission with minimal the model constraint can follow constraint boundaries communication is using and usually smooth with respect is very important to so (the if necessary as it searches for an strategy, CFSQP takeoff mass. We believe that if, for a given model constraint, a design space can be partitioned in which the constraint holds or does not hold, then it into a small number of regions a model constraint which will smoothly approach will usually be possible throughout zero as the boundaries the design space a model constraint oscillates with high frequency between satisfaction and violation, In this case the model will almost certainly need to be revised then it probably will not be smooth. to formulate of the “good” in order to be useful for design. regions are approached. If, however, A. Gelsey et al. /Artijicial intelligence 101 (1998) 35-62 43 In addition to these model constraints, MSA computes the following design con- straint: PASS = (passenger capacity required for the mission) - (passenger capacity available with current design variables). To clarify the distinction between model constraints and design constraints, we note the following differences: l Design constraints model constraints model on which l Design constraints can be extracted directly requires carefully examining from design goals, while formulating the underlying assumptions of the the simulator is based. can be violated without reducing is violated, computed by the simulator function if the PASS constraint computed by the simulator, but when a model constraint the correctness of the objective the function cannot be trusted. For value of the objective the simulator can still correctly even example, carrying whatever the mission compute the if a model to hold. However, number of passengers the takeoff mass computed by the simulator may be constraint is violated, the STALL wildly wrong. For example, constraint, the optimizer may design an aircraft with very small wings operated at a very high angle of attack. This design may appear to be a very efficient aircraft, much better than the best physically plausible design, but in fact is not capable of flying at all. takeoff mass needed the aircraft then is violated, to fly though is actually able if the simulator is allowed to violate l If a design constraint happens is satisfied effect on the optimization. However, to be inactive at the optimal design the optimal design, then the “null” communication the con- (i.e., so the optimum does strategy will be the constraint may safely be ignored to this constraint-i.e., for all designs near straint not lie on a constraint boundary), effective when applied without a detrimental strategy will not in general be effective when applied if they are inactive at the optimal design. is violated, include by the null strategy, apparent having (spurious) design satisfying the optimizer and keep if from getting constraint is inactive at the true optimum. local optima of the objective the value of the objective random meaningless If the model constraint violations to model constraints, even In the region where a model constraint computed by the simulator may are ignored is violated may include there may be points function better than the best value for any can “trap” to the true optimum, even though the model function. Even worse, values of the objective all the model assumptions. Either of these conditions the region where the model constraint the null communication in question function values. 6. Experimental results To experimentally the optimizer test MSA communication varied range of values: the following which continuous strategies, we used a design in design variables over a space aircraft conceptual 44 A. Gelsey et al. /Artijicial Intelligence 101 (1998) 35-62 (1) (2) (3) (4) (5) (6) (7) (8) size, taper length (how “pointed” engine wing area, wing aspect ratio, fuselage effective structural thickness), wing sweep over design math angle sweep ) , wing taper ratio (wing fuel annulus width (space available thickness over chord (a nondimensionalized measure of wing the fuselage is), (a nondimensionalized measure of wing tip chord divided by wing root chord), for fuel storage), in collaboration with an aircraft in these experiments we omitted discrete parameters in fuselage This set of design variables was chosen expert. 9 However, of engines which did not fit well with our continuous method. Since design methodology engines, approach would be the use of mixed search procedure, but that would require significant there are only a small number of choices, could simply be repeated several and times using different numbers of the best of these four or five designs could be chosen. A more general as a integer/continuous programming techniques industry design such as number search programming in practice our continuous nonlinear Fig. 4 shows the two subsets we explored research. in the design space defined by these design is an eight-dimensional is the product of the intervals of for the eight design variables. The volume of the “big box” is about 300 “box” which additional variables. Each values allowed times larger than the volume of the “small box”. lo To rest considered the effect of the MSA communication the following strategy combinations: ( 1) Return values of all model constraint constraints. (2) Return values of all model constraint inequality strategy on the design process, we functions to the optimizer as nonlinear except MinThrottle to the optimizer, but for candidate designs where the engine Throttle straints were violated strategy and return a standard “very large” value for takeoff mass. and Max- table con- positive), use the “boolean” or MaxThrottle (MinThrottle functions (3) Return values of all model constraint and DragTableU2 TableUl, DragTableL2, for points which required extrapolation functions Drag- except DragTableLl, to the optimizer; use “boolean” strategy outside the aerodynamics table bounds. 9 Dr. Gene Bouchard of Lockheed. “‘This nondimensional volume ratio is the product of the ratios of the ranges of the design variables, 300 n. rI iEdesign variables " where hi is the range of design variable smaller box. Since for a given product of all these ratios by linear transformations volume a nonlinear fashion. ratio could be changed by a problem of the design variables, i, hi and Si have the same units, i in the larger box and Si is the range of design variable their ratio This nondimensional is itself also nondimensional. i in the is nondimensional and thus the volume ratio will be preserved the in though the set of design variables for example by changes in units of measurement, reformulation which transformed A. Gelsey et ul. /Artificial Intelligence 101 (1998) 35-62 4s Design variable Small box Big box engine size wing area (sq. ft.) wing aspect ratio fuselage taper length (ft.) effective structural thickness over chord wing sweep over design math angle wing taper ratio fuel annulus width (ft.) low 0.5 1500 I 100 1 1 0 0 high 3 13500 2 200 5 I .45 0.1 4 low 0.1 500 0.5 50 0.5 0 0 0 high 5 20000 3 300 IO I .45 0.1 8 Fig. 4. Subsets of design space explored. (4) (5) (6) (7) (8) Return values of all model constraint Return values of all model constraint ean”. Return values of all model constraint Use the “boolean” A two-level approach find a feasible point then all model constraints these combinations communication We chose constraint by comparing left out. functions except FUEL, which is “boolean”. is “bool- except STALL, which functions functions except LOAD, which is “boolean”. strategy for all model constraint functions. in which the “boolean” communication for which all constraints (i.e., a design strategy are satisfied), is used to and are used to find an optimum. test so we could the impact of each results with all model constraints to results with a given type of model type the boolean our system randomly chose points (i.e., points whose objective For each strategy combination, it found 74 “evaluable” strategy points standard “very bad” value). until assigned was then used as a starting point for a design optimization using CFSQP optimal aircraft design for the mission shown in Fig. 2. (We required to be evaluable because if CFSQP happened all components immediately.) Fig. 5, and a diagram of this aircraft appears The best design found for this mission in the “small box” function was not ” Each of these 74 points to try to find an the starting points then region, terminate of the gradient would be zero and the optimization would to be started in an unevaluable in all the experiments is shown in in Fig. 1. of the strategy combinations for each strategy combination The performance column found aircraft designs having “Success” mizations of the apparent “global optimum”-the The “Start Cost” column points while finding number of simulations the 74 optimization in a table is shown in Fig. 6. The shows what fraction of the 74 opti- takeoff masses within 1% of the takeoff mass (Fig. 5). best design we found for this mission shows how many simulations had to be run on unevaluable that were run during each set of 74 optimizations. starting points, and “Opt. cost” shows the total ‘* The “Est. ” 74 is not a “magic” number; ‘* As mentioned Alpha 250 4/266 workstation. it was just a convenient choice given available disk space. earlier, a complete mission simulation requires about l/4 second of CPU time on a DEC 46 A. Gelsey et al. /Art$cial Intelligence 101 (1998) 35-62 Design variables: engine size wing area wing aspect ratio fuselage taper length effective structural thickness over chord wing sweep over design math angle wing taper ratio fuel annulus width Objective function: Takeoff Mass Model constraints: MaxThrottle MinThrottle DragTableL 1 DragTableUl DragTableL2 DragTableU2 LOAD FUEL STALL Design constraint: PASS 1.532 4652 sq. ft 1.570 121.3 ft. 3.002 1.158 0 0 167.4 tonnes -41.57 -0.76 -2.2 -1.8 -1.5 -8.5 - 149.8 -0.0011 tonnes 0 -2 Fig. 5. Best design found for mission of Fig. 2. Strategy combination Success start cost opt. cost Est. 99% cost All model constraints returned Min/MaxThrottle “boolean” FUEL “boolean” STALL “boolean” DragTable* “boolean” LOAD “boolean” All model constraints “boolean” Two level 65174 52174 o/74 18174 67174 62114 O/74 72114 16 3203 603 5441 57 721 21946 18098 42375 67158 99215 81566 47042 39404 75804 39389 1252 3609 >> 456565 19427 1242 1372 ,> 447106 990 Fig. 6. Performance of the various strategy combinations. in Fig. 6 gives the estimated cost with each strategy combination to 99% cost” column have a 99% chance of finding ing the average cost per optimization P&sired is the desired probability is the probability P S”CCC?SS the global optimum. This cost is computed by multiply- log( 1 - Pdesired)/ log( 1 - PSuCCeSS), where in this case) and (99% (which of finding of any single optimization the global optimum the global optimum finding times A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 47 Throttle constraints Two level -t-- -o-- “boolean” --x--- STALL “boolean” Drag Table constraints LOAD “boolean” “boolean” A-- -w.- 1.02 1.025 Quality 1.03 1.035 1.04 1.045 1.05 Fig. 7. Cost to achieve a range of design qualities with 99% confidence. Quality by the best takeoff mass found ‘All model constraints of the best takeoff mass found. is takeoff mass, normalized and do not appear as they did not find designs within 5% (Fig. 5), so quality = 1.01 corresponds to Fig. 6. The ‘FUEL “boolean” strategy combinations “boolean”’ with the value in the “Success” column). we estimate the only cases whose success was O/74, 99% cost” is that it will be greater than the cost we would have computed rate had been different design qualities. for the the “Est. if the success the “Est. 99% cost” to achieve a range of information we can compute about l/74. Fig. 7 shows graphically I3 As the table indicates, I3 Derivation of formula: (I - PsUccess) is the probability optimum, thus ( 1 - ( 1 - ~WCC~SS To lind the cost of P&i&. so ( 1 - PSUCCeSS) n is the probability )“) is the probability that a single optimization wili not find the global that none of n optimizations will find the global optimum, and that at least one of n optimizations will find the global optimum. a given desired probability of finding the global optimum, solve Pdeskd = 1 - ( 1 - Psuccess )” for n, which gives fZ = lOg( 1 - Pdesired ) / l’Jg( 1 - PWCCSS ) and finally multiply n by the average cost per optimization. We note that the computed value of n is not necessarily an integer, so a more precise calculation would round n up to the nearest integer. 48 A. Gelsey et al. /Artificial Intelligence IO1 (1998) 35-62 smaller communication of the different at a cost which to this performance strategy combinations that the model constraints The data in Fig. 6 indicates active at the global optimum than the cost to achieve comparable strategy can is one or more or- results with the boolean indicates are values M 0 in Fig. 5). How- the constraints which are inactive at the global optimum may give a fac- the to three speedup when handled using model constraints then CFSQP must for the optimum. This navi- is defined by a smooth model constraint, but much in the objec- “very bad” value. Model con- some parts of from getting find the global optimum with a 99% confidence ders of magnitude communication strategy. Examination that the model constraints which contribute most the constraints ever, even tor of two strategy. boolean along “navigate” gation is easy when more difficult when tive function straints which are inactive the search and thus can help guide stuck. at the optimum may still be active during If a constraint the constraint is active at the global optimum, the boundary the boundary is marked only by a sudden boundary when searching the search and prevent from a reasonable to the boolean the optimizer (constraint difference rather value jump than Model constraints which are active at the global optimum are more critical, but it is to note that there will typically be no reliable a priori way to determine which that the model even functions may require more work than important model constraints will be active at the global optimum. This fact suggests constraints though implementing strategy should be used to handle all model assumptions, the simpler boolean communication smooth model constraint communication implementing strategy. indicate lift initially this situation boundary which An issue to consider is why any model constraints rises as a function of angle of attack and later begins are active for the globally optimal that there are actually better designs on the other the optimizer would be able to find if only we design. Does side of the constraint that did not need as many constraints? Not necessarily. had a more sophisticated model For example, falling rapidly as stall occurs for higher angles of attack. The STALL constraint, which is active at its peak so that the lift at our global optimum simulator function stall would not find better designs on the other side of the STALL which modeled to be monotonic constraint is also active at our global when the boundary was crossed. The MinThrottle is too the throttle (see Fig. 5). In this case, optimum low. Modifying low and pressure produced by the engine when designs. temperatures it stops running would not uncover better stops running when the sudden the engine to correctly predict (see Fig. 5) cuts off this function is satisfied. A more sophisticated find that the lift function is monotonic where the engine model the constraint boundary-it constraint ceased would just To test the effect of box size on our conclusions, we repeated our experiments in a than in the design space used in our experiments. larger box. Fig. 4 shows the two “boxes” The bigger box contains times greater Fig. 8 shows the performance and Fig. 9 shows graphically qualities. Search cost increases cost orders of magnitude the volume of the smaller box, as explained the smaller box, and the volume of the larger box is about 300 footnote. in the larger box, of the various communication the “Est. 99% cost” to achieve a range of different design still in the larger box, as expected, but model constraints in an earlier strategies less than the boolean strategy. A. Gelsey et al. /Artijicial Intelligence IOI (1998) 35-62 49 Strategy combination success start cost Oat. cost Est. 99% cost All model constraints returned Min/MaxTluottle “boolean” FUEL “boolean” STALL “boolean” DragTable* “boolean” LOAD “boolean” All model constraints “boolean” Two level 5504 14114 o/74 15174 40174 60174 o/74 54174 48 6979 879 21669 280 2181 354761 301917 58376 124796 128618 78508 176113 58976 80835 56198 2674 39102 >> 5923 17 27520 14114 2285 >> 1992408 17034 Fig. 8. Performance of the various strategy combinations in a bigger box 1 e+06 F All model constraints Throttle constraints returned +- Two level -+-. -a-- “boolean” x--. STALL “boolean” * “boolean” - -*-- LOAD “boolean” Drag Table constraints Fig. 9. Cost to achieve a range of design qualities with 99% confidence mass, normalized by the best takeoff mass found (Fig. 5), so quality = 1 .Ol corresponds to Fig. 8. in a bigger box. Quality is takeoff It is important to compare the performance of the “two-level” strategy combination for the two boxes. In the “small” box, the two-level approach was actually superior the pure model constraints to find a feasible point before starting The reverse was true was a factor of six less expensive plausible, because to strategy to find the optimum. approach then the two-level approach. These results are quite that the the “start cost” data for “all boolean” combination the pure model constraints in the big box, however: to use model constraints it was slightly better to use a boolean approach: indicates 50 Phase I 2 3 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 Mach 0.227 0.85 2.0 Altitude (ft.) Duration (mins) 0 40,000 60,000 5 50 225 Comment “takeoff’ subsonic cruise (over land) supersonic cruise (over ocean) capacity: 70 passengers Fig. 10. Another mission specification. Design variables: engine size wing area wing aspect ratio fuselage taper length effective structural thickness over chord wing sweep over design math angle wing taper ratio fuel annulus width Objective function: Takeoff Mass Model constraints: MaxThrottle MinThrottle DragTableL 1 DragTableUl DragTableL2 DragTableU2 LOAD FUEL STALL Design constraint: PASS 1.146 3690 sq. ft. 1.089 130.1 ft. 2.728 1.235 0 0 134.8 tonnes -2.89 -18.19 -1.83 -2.17 -2.03 -7.97 - 143.8 -0.00038 tonnes 0 -2 Fig. 11. Best design found for the second mission (Fig. IO). density of feasible points box it is only 74/354761 that the benefit of using model constraints the model constraints feasible feasible extremely useful for searching within region cheaply enough region overhead, while in the small box is 74/21946 (FZ l/4800). (Z The big box has such a small feasible l/300) while in the big region region outweighs to search for the feasible that the overhead of using model constraints in the smaller box random probes can find the to find the are still is not justified. However, even in the small box model constraints Note that in our smaller box is the case than the feasible in our larger box. This observation region of the volume using a much smaller box, the feasible region will fill so much of box that specialized suggests that by the feasible region in order to find an optimum. forms a much higher proportion A. Gelsey et al. /Artificial Inrelligence 101 (1998) 35-62 engine&ale = 1.146 wingArea = 3690 aspectRatio = 1.089 fuselageTaperLength = 130.1 WingThicknessRatio = 2.728 ws_div_dma = 1.235 taperRatio = 0 drawingscale = 2.04 -31 I 0 31 Fig. 12. Aircraft designed by our system for the second mission (dimensions in feet). treatment of modeling optimization restrict design variable model constraints will not scale to allow is possible with our explicit approach issues becomes unnecessary. We suspect is often done by using human expertise and historical experience today to greatly ranges so that optimization will be done in such a small box that in the sense that it exploration of the design space which to modeling To test the effect of the design goal on our conclusions, we repeated our experiments are not needed. However, the sort of wide-ranging that in practice this approach is brittle issues. with a different goal. We used instead shows the best design found, which differs considerably but the best aircraft for the mission shown in Fig. 10. Fig. 11 from the optimal design for the the same boxes as for the previous experiments, the goal was to design 52 A. Gelsey et al./ArtiJicial Intelligence IO1 (1998) 35-62 Strategy combination Success start cost Oot. cost Est. 99% cost All model constraints returned Min/MaxThrottle “boolean” FUEL “boolean” STALL “boolean” DragTable* “boolean” LOAD “boolean” All model constraints “boolean” Two level 62114 57/74 II74 36174 65114 64174 o/74 64174 13 1275 31 1681 55 227 6516 4307 36204 65556 65105 50847 40377 34899 67046 34417 1238 2827 297930 4904 1194 1092 >> 336745 1205 Fig. 13. Performance of the various strategy combinations for the second mission. 1 e+06 All model constraints returned + Throttle constraints “boolean” -o-- ~.~.~..~..~..*..~..~.~.~._x..~..~..~..~..*..~..*..~..~.~.~..~..~..~..*..*-.~~~.~~~~.~..~~. “boolean” Drag Table constraints -*-- 1.02 1.025 Quality 1.03 1.035 1.04 1.045 1.05 Fig. 14. Cost to achieve a range of design quaiities with 99% confidence takeoff mass, normalized by the best takeoff mass found (Fig. 11). so quality = 1.01 corresponds for the second mission. Quality is to Fig. 13. flight compared for the mission as a whole has smaller, narrower wings previous mission. A diagram of this best design appears mission has a higher proportion of supersonic the most efficient design the best design mission would have tiny wings and look like a missile.) We performed of experiments 15, and 16 supports our previous conclusion strategy can cut search cost by an order of magnitude or more. data which appears that the model constraint in Fig. 12. Note that as this to the previous mission, than for a purely supersonic the same set in Figs. 13, 14, communication for this case, and the experimental for the previous mission. (An optimal design A. Gelsey et al. IArtijicial Intelligence 101 (1998) 35-62 53 Strategy combination Success start cost opt. cost Est. 99% cost All mode1 constraints returned Min/MaxThrottle “boolean” FUEL “boolean” STALL “boolean” DragTable* “boolean” LOAD “boolean” All model constraints “boolean” Two level 48174 13174 o/74 39174 34174 51174 O/74 49174 41 S616 162 7602 342 1420 133265 231396 57607 145770 93146 64000 131652 56171 I17224 48049 3429 48765 >> 426789 5951 I3352 3066 >> 1145732 16025 Fig. 15. Performance of the various strategy combinations for the second mission in the bigger box. le+06 LOAD “boolean” -*--- I I I I I I I I 1.005 1 .Ol 1.015 1.02 1.025 Quality 1.03 1.035 I 1.04 I 1.045 1.05 Fig. 16. Cost bigger box. Quality corresponds to Fig. 15. to achieve a range of design qualities with 99% confidence is takeoff mass, normalized by the best takeoff mass found for the second mission in the (Fig. 1 I), so quality = I .Ol To get some experience our results extensive the use of optimization and genetic algorithms provide significant by allowing validation independent of the quality of our designs, we presented to our domain expert, Dr. Gene Bouchard of Lockheed. Dr. Bouchard has research on [ 2,3] to in aircraft design, using both numerical aircraft design and has also conducted that model constraints [ 4,5]. Dr. Bouchard in traditional optimization appeared reported improvements today, particularly the use of large design spaces with very small feasible regions. As mentioned as used in industry over optimization 54 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 previously, model constraints provide are used to greatly feasible. However, finding better restrict design variable this restricted design innovative designs little benefit if expertise and historical experience ranges so that most of the design space space approach eliminates the possibility is of in unexpected the aircraft designs produced regions of the design space. evaluation in our experiments Dr. Bouchard examined industry and to similar mission and reported based on his experience was that our designs compared techniques, if applied with specifications. However, a of the particular numerical values generated by our design system to from industry was not feasible. Designs seriously generated by industry and design knowledge which would not be made in Fig. 3 the weights computation would could be, about the for our missions information that his informal favorably with what he would expect from today’s similar available domain knowledge formal comparison existing numbers use extensive proprietary available to academic depend on proprietary and the propulsion engines’ from scratch using available by funding to us. about how light various aircraft components information researchers. For example, information component would depend on very proprietary thrust capabilities standard to us would have been a fairly and by the level of aircraft flight regimes. Designing both available industry collaboration that was precluded the nonproprietary involved project techniques with considerations information in various industry exact 7. Related work [ 161 we examine In simulator detecting unreliable failures sequel which remedies can be reliably assumption simulation this deficiency. the types of modeling knowledge that are needed invoked by another program and we describe algorithms violations results. Strategies and other problems that might lead for communicating information so that a for to incorrect or about modeling to an automated design systems are not discussed, and the present paper is a The theme of our work in many cases be used is to re-engineer can The alternative the compositional modeling process use of qualitative By incorporating the need for communicating re-engineering may be prohibitive simulation knowledge in this paper is that existing “legacy” simulation software in automated design with relatively minor enhancements. a simulator declaratively, using an approach such as introduced by [9] (which in turn builds on the qualitative to check of potential model this information the correctness of numerical failures into is alleviated. However, simulation [ I l-131 discuss the results. the simulator, much of the cost of such theory of [ lo] ). Continuing along this research direction in the case of large legacy simulation software. Other automated 15,30,45,48], assurance. but intelligent these do not address controllers for numerical simulators are described the issue of model and simulation in [ 14, quality Intelligent monitoring for complex systems has received considerable attention [7] ), but this work has focused on diagnosis physical which are attempting systems as opposed to problems to simulate of problems in dynamically in the execution of computational the behavior of physical systems. (e.g., changing algorithms A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 55 A great deal of work has been done in the area of numerical optimization algorithms to optimize though not much has been published [ 20,25-27,431, attempting functions defined by large “real-world” number of research efforts have combined AI techniques with numerical optimization [ l-3,6,8,19,21,28,32,33,37,42,44], simulation about the particular difficulties of simulators. A the issue of model and but have not addressed quality assurance. numerical optimization Work on the use of numerical includes This work is to some extent able to avoid problems of model assumption to restrict design variable using human expertise tolerate. However, sort of wide-ranging approach [ 22,40,4 1 ] . violations by to values which the model will in the sense that it will not scale to allow the exploration of the design space which is possible with our explicit in aircraft design this approach to modeling is brittle issues. ranges We have found that using model constraints results in good optimization include jets [ 46,471. All of these domains use simulators [ 17,38,39], than our aircraft simulator. For example, for supersonic missiles in several other design domains. These domains [ 8,3 l-33,37], for hypersonic the design of inlets inlets more expensive hypersonic dimensional Navier-Stokes for a single different optimization not performed It would be very costly the sorts of comparative inlets are computational simulation. equations, fluid dynamics strategies using such a simulator, (CFD) performance the design of racing yachts and the design of that are that we use for the two- time of so in those domains we have the simulators codes that solve and take between 2 and 5 hours of CPU to perform extensive comparisons studies we present in this article. 8. Limitations and future work (of course) communication be representable The model constraints requires functions, which strategy using model constraint that model as- sumptions limi- tation since some problem domains may include assumptions which are not amenable in the concep- to such representation. However, we did not encounter tual design of aircraft domain, and the appendix of this article presents another domain having also representable in Section 7 we list a number of other design domains as model constraints. in which we have successfully sorts of model assumptions which are nevertheless used model constraints.) such a difficulty is a possible significantly different (Also, into a small number of connected that, for a given assumption It appears be partitioned or does not hold. Under such conditions, found, an artificial one may be constructible boundaries. However, high frequency useful model constraint revised in order to be useful for design. in the aircraft domain, the design space can in which the assumption holds cannot be to the region the design space a model assumption oscillates with to form a In this case the model will almost certainly need to be even if a natural model constraint based on geometrical closeness it will be difficult and violation, if throughout satisfaction function. between regions then CFSQP, continuous whose design variables are fundamentally the numerical optimizer used in this article, assumes design variables range of values, so our approach would not work as it stands for problems to a discrete set of values. However, limited take a 56 A. Gelsey et al. /Artijicial Intelligence 101 (1998) 35-62 idea of representing model assumptions problems, as well as for continuous as constraints makes sense assuming appropriate for discrete search methods are from the extensive body of research on constraint satisfaction the problems used, such as methods problems. Our experiments have been performed in a domain in which the global optimum has fails large “basin of attraction”, from a small number of random so that a local optimization method to hold, global optimization methods a fairly if Quadratic Programming will give a high confidence this started or property Genetic Algorithms will often be preferable. Such methods would not typically be able to make direct use of model constraint the functions, “model penalties” strategy described communication area for future work. We have found model penalties for the design of inlets for supersonic missiles in Section 2 might be a worthwhile to be useful in a Genetic Algorithm (See also [ 291.) in which such as Simulated Annealing starting points. For domains so for such a domain the global optimum like Sequential investigating of finding [46,47]. An interesting but very challenging area for future research would be the automated of a model from a declarative representations functions generation and its assumptions. of model constraint 9. Conclusion the search process. We suggest to influence this knowledge by implementing search of a space of candidate designs engineering design process. To make this approach work, however, limitations is an attractive way to improve the of include both knowledge of the modeling to evaluate candidate designs and also an effective way to use this is that a productive a set of model constraint functions which is violated. The search is then guided by to a standard is a Automated the traditional automated design system must the method used knowledge to include measure how much each modeling using constrained successful demonstration problem. a cost improvement improvements may transfer a new design optimization methodology which makes explicit models of artifacts, and validity models of artifact models. to an important engineering aircraft design, we observed that such of our work is between of two orders of magnitude. We also present evidence to other domains. The principal contribution as constraint numerical method. A key result of our work the values of these model constraint of the application of AI techniques study of parametric In an empirical the interaction optimization assumption conceptual approach functions nonlinear inputs Acknowledgments in The this article depended on our collaboration with Gene research and Ron Luffy and Steve Scavo of General Electric Aircraft Bouchard of Lockheed Engines. Our work benefited greatly from conversations with Saul Amarel, Tom Ell- man, Haym Hirsh, Keith Miyake, Khaled Rasheed, Gerard Richter, Elisha Sacks, and supported by NASA under grant NAG2-817 Lou Steinberg. This research was partially critically A. Gelsey et al. /Artijicial Inrelligence 101 (1998) 35-62 51 and was also part of the Rutgers-based HPCD supported by the Advanced Research Projects Agency of the Department 63-93-C-0064. through contract ARPA-DABT (Hypercomputing and Design) project of Defense Appendix A. Model constraints for a different design problem We have also implemented model constraints different a particular aircraft, exhaust nozzles are complex, adjustable mechanical for a different design problem having sorts of model assumptions. Here we look at the problem of In a subcomponent systems, and a number of model assumptions which have a the engine’s exhaust nozzle. of an aircraft: simulation flavor not found requires in the work we described above. significantly designing supersonic a computational geometrical r, scheduled the axisymmetric the class of nozzles we considered, t-10 is the outer radius of the engine exhaust nozzles often found in supersonic aircraft is the radius of the duct leaving of the movable convergent Fig. A.1 shows convergent-divergent r10, ye, and r7 are fixed radii, and rg and t-9 are radii which are mechanically during aircraft operation. attached, at the beginning radius of the nozzle this nozzle lengths l,, so that the cross-sectional formance. Since a four-bar r9 C181. throat, and r-9 is the (variable) linkage, with three movable in Fig, A.1 by their rs is moved throat will produce desired engine per- rs also sets [ 241. In Fig. A. 1, varied is r-7 is the radius of the duct rg is the (variable) nozzle exit radius. Mechanically, links labeled is a four-bar ld, and I,. During linkage has one degree of freedom, section of the nozzle, area at the nozzle aircraft operation, the linkage the engine, the nozzle to change to which setting We approach the exhaust nozzle design problem as follows: ( 1) Design an aircraft for a particular mission as described is used, and the exhaust nozzle in the main body of this is not modeled article. A high level of abstraction explicitly. Fig. A. 1. Axisymmetric convergent-divergent exhaust nozzle (flow from left to right) 58 A. Gelsey et al. /Art@cial Intelligence 101 (1998) 35-62 (2) Fix (almost) all of the major aircraft parameters at the optimal values add an explicit model of the exhaust nozzle found to the in the abstract optimization, simulation, using minimize the same optimization and vary the parameters describing criterion the nozzle geometry as in the main body of the article (Fig. A.l), (i.e., takeoff mass of the aircraft required to complete a given mission). The explicit model of the exhaust nozzle used dimensional gas dynamics heavily supplemented lowing additional model constraint constraint functions is satisfied and positive otherwise) in the second stage by experimental is based on one- data tables. The fol- are used (which, as before, are 6 0 if a : ELMAX = (length could have, with allowing the nozzle ELMIN = (minimum I, of external nozzle the given values to be connected length external nozzle flap) - (maximum length external nozzle flap for the rest of the nozzle geometry, while still as a convergent-divergent nozzle). flap could have, with the given values for as a to be connected the nozzle the rest of the nozzle geometry, while still allowing convergent-divergent - (length I, of external nozzle flap). CA = (minimum angle flap can move, while still maintaining nozzle) to which convergent configuration) convergent-divergent move, while still maintaining - (maximum angle to which convergent a convergent-divergent configuration). a flap can R8LOW = (smallest value rs can achieve with current geometry) - (smallest value for rs required during mission simulation). R8HIGH = (largest value for rs required during mission simulation) a convergent-divergent - (largest value rs config- can achieve with current geometry while maintaining uration). NGl = 0 - z7. Nozzle geometry bound. NG2 = 16 - ~10. Nozzle geometry bound. NG3 = r7 - ~-10. Nozzle geometry bound. NG4 = zlo - ( z7 + 1, + Id). Nozzle geometry bound. NG5 = (r7 - I,) CAlLB, CAlUB, CA2LB, CA2UB: violation of bounds data on nozzle angularity - 16. Nozzle geometry bound. experimental thrust loss. for a two-dimensional table of CVlLB, CVlUB, CV2LB, CV2UB: violation of bounds for a two-dimensional table of experimental data on nozzle friction velocity/thrust loss. CBlLB, CBlUB, CB2LB, CB2UB: violation of bounds drag. data on nozzle boattail experimental (external) for a two-dimensional table of The model constraints defined in the main body of the article also continue to be used. compared We experimentally to see if the model constraints the model constraints and boolean communication strate- gies for this new design problem, strategy again proved superior, as it did in the main body of this article. For our experiments, we focused on stage two of the two-stage design process described above, since stage one does not in- volve the explicit nozzle model. (Note that stage one is just the design process described extensively design space consisting of the four nozzle geometry parameters In stage two we used a five-dimensional in the main body of the article.) l,, ld, I,, and t-7, and A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 59 Strategy combination All model constraints returned All model constraints “boolean” success 5/100 3/100 start cost opt. cost Est. 99% cost 21504 2674928 54291 39106 68055 4103386 Fig. A.2. Performance of the various strategy combinations for the nozzle design problem. 1 e+06 1 e+07 100000 10000 All model constraints “boolean” +- All model constraints returned -+-- 1.02 1.03 1.04 1.05 Quality to achieve a range of design qualities with 99% confidence for the nozzle design problem. Fig. A.3. Cost Quality is takeoff mass, normalized by the best takeoff mass found. also the aircraft wing area. Wing area was added to give some “looseness” aircraft design, design to the main that will fit the exact optimal in finding a nozzle to avoid difficulties in stage one. found The mission of Fig. 2 was used again for these experiments. For the nozzle prob- individual model constraint experiments instead are available its effect, but lem, we did not do extensive for model constraints straints are handled with indicating imental as we found of magnitude, of feasible points constraints locate probes. in this space this small results, simply compared to CFSQP the “boolean” that using model constraints testing each a multistart to an optimization optimization in which all in which all model con- strategy. Figs. A.2 and A.3 show the exper- reduces search cost by orders the density that that model and than do random (M l/27000), region much more efficiently loo/2674928 in the main body of the article. Note is only feasible 60 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 experiment, As an additional after the second stage of the two-stage design process, we added a third stage in which a single optimization with all twelve design variables the design was started from the best point found somewhat, but the improvement was rather small since two are fairly decomposable design problems in stage two. This third stage improved the stage one and stage [ 34,361. References 1 I ] A.M. Agogino, AS. Almgren, Techniques for integrating qualitative reasoning and symbolic computing, Engineering Optimization 12 1 E.E. Bouchard, Concepts 12 (1987) 117-135. for a future aircraft design environment, in: 1992 Aerospace Design Conference, Irvine, CA, 1992, AIAA-92-I 188. [ 31 E.E. Bouchard, G.H. Kidwell, J.E. Rogan, The application aeronautical Atlanta, GA, 1988, AIAA-88-4426. system design, in: AIAA/AHS/ASEE to Aircraft Design Systems and Operations Meeting, of artificial intelligence technology of genetic algorithms 1990. to [4] M.F. Bramlette, E.E. Bouchard, Genetic algorithms in the parametric design of aircraft, in: L. Davis (Ed.), Handbook of Genetic Algorithms, Van Nostrand Reinhold, New York, 1991. [ 5 I M.F. Bramlette, E.E. Bouchard, E.Buckman, L.A. Takacs, Current applications aeronautical system, in: 6th Annual Aerospace Applications techniques in engineering: learning Intelligence, of Artificial to speed up numerical optimization, 161 G. Cerbone, Machine Ph.D. Thesis, Technical Report 92-30-09, Department of Computer Science, Oregon State University, Corvallis, OR, 1992. 171 D. Dvorak, B. Kuipers, Process monitoring 18 ] T. Ellman, aided Washington, DC, MIT Press, Cambridge, MA, 1993, pp. 594-599. J. Keane, M. Schwabacher, in: Proceedings 1 Ith National Conference Intelligent model selection and diagnosis, design, IBEE Expert 6 (3) for hillclimbing on Artificial (1991) 67-74. search Intelligence in computer- (AAAI-93), 19 1 B. Falkenhainer, K.D. Forbus, Compositional modeling: finding the right model for the job, Artificial Intelligence 5 I (1991) 95-143. IlO ] K.D. Forbus, Qualitative process [11 I K.D. Forbus, B. Falkenhainer, Self-explanatory in: Proceedings knowledge, 1990, pp. 380-387. theory, Artificial Intelligence 24 ( 1984) 85-168. 8th National Conference on Artificial simulations: an integration of qualitative and quantitative (AAAI-90), Boston, MA, Intelligence [ 121 K.D. Forbus, B. Falkenhainer, Self-explanatory simulations: Scaling up to large models, in: Proceedings 10th National Conference on Artificial Intelligence (AAAI-92), [ 131 K.D. Forbus, B. Falkenhainer, 14th International Proceedings MIT Press, Cambridge, MA, 1995, pp. 1798-1805. [ 141 A. Gelsey, Using intelligently 9th National Conference Proceedings Cambridge, MA, 1991, pp. 880-887. on Artificial controlled Scaling up self-explanatory Joint Conference on Artificial simulation [ 15 ] A. Gelsey, Automated Intelligent [ 161 A. Gelsey, reasoning about machines, Artificial quality automated control San Jose, CA, 1992. simulations: polynomial-time Intelligence in: (IJCAI-95). Montreal, Quebec, compilation, to predict a machine’s in: long-term (AAAI-92), Anaheim, CA, MIT Press, behavior, Intelligence Intelligence 74 ( 1) ( 1995) I-53. for computational simulation, Artif. Intell. for Engineering Design, Analysis and Manufacturing 9 (5) ( 1995) 387-400. [ 171 A. Gelsey, D.D. Knight, S. Gao, M. Schwabacher, NPARC simulation and redesign of the NASA P2 hypersonic inlet, in: 3 1st Joint Propulsion Conference, San Diego, CA, 1995, AIAA-95-2760. 1 IS] A. Gelsey, D. Smith, Computational environment for exhaust nozzle design, J. Aircraft 33 (3) ( 1996) 470-476. [ 191 A. Gelsey, D. Smith, M. Schwabacher, K. Rasheed, K. Miyake, A search space toolkit: SST, Decision Support Systems 18 (1996) 341-356. [20] P.E. Gill, W. Murray, M.H. Wright, Practical Optimization, Academic Press, New York, 1981. 1211 D. Hoeltzel, W. Chieng, Statistical machine in engineering for the cognitive selection of nonlinear programming in Design Automation, Boston, MA, 1987. design optimization, in: Advances algorithms learning A. Gelsey et al. /Art$cial Intelligence 101 (1998) 35-62 61 1221 1. Kroo, S. Altus, R. Braun, P. Gage, design, I. Sobieski, Multidisciplinary for aircraft optimization methods Symposium on Multidisciplinary Analysis and preliminary Optimization, [ 231 C. Lawrence, in: 5th AIAA/USAF/NASA/ISSMO Panama City, FL, 1994, AIAA-94-4325. J. Zhou, A. Tits, User’s guide for CFSQP version 2.3: a C code for solving constrained constraints, College Park, MD, 1995. nonlinear (minimax) Technical Report TR-94-16r1, optimization problems, Institute generating satisfying for Systems Research, University iterates (large scale) all inequality of Maryland, 1241 J.D. Mattingly, W.H. Heiser, D.H. Daley, Aircraft Engine Design, AIAA Education Series, American Institute of Aeronautics and Astronautics, New York, 1987. [ 25 1 J.J. More, S.J. Wright, Optimization 1261 P. Papalambros, [ 271 A.L. Peressini, F.E. Sullivan, J. Wilde, Principles of Optimal Design, Cambridge University Press, New York, 1988. Springer, New J.J. Uhl Jr, The Mathematics of Nonlinear Programming, Software Guide, SIAM, Philadelphia, PA, 1993. York, 1988. [28] D. Powell, Inter-GEN: a hybrid approach to engineering design optimization, Ph.D. Thesis, Department of Computer Science, Rensselaer Polytechnic Institute, Troy, NY, 1990. I29 1 K. Rasheed, H. Hirsh, A. Gelsey, A genetic algorithm for continuous design space search, Artif. lntell. Engineering 1 I (3) ( 1997) 295-305. 1301 E.P. Sacks, Automatic analysis of one-parameter ordinary differential equations by intelligent numeric simulation, Artificial Intelligence 48 ( 1) (1991) 27-56. 13 1 1 M. Schwabacher, engineering Rutgers University, New Brunswick, NJ, 1996, http://www.cs.rutgersedu/++chwabac/thesis.html. designs, Ph.D. Thesis, Technical Report HPCD-TR-45, Department the numerical optimization The use of artificial to improve intelligence of complex of Computer Science, I32 ] M. Schwabacher, T. Ellman, H. Hirsh, Learning to set up numerical optimizations of engineering designs, Artif. Intell. for Engineering Design, Analysis, and Manufacturing 12 (2) (1998) (to appear). [ 33 1 M. Schwabacher, in: J. Gero, F. Sudweeks optimization ‘96, Kluwer Academic Publishers, Dordrecht, The Netherlands, T. Ellman, H. Hirsh, G. Richter, Learning of engineering designs, to choose a reformulation for numerical in Design Intelligence (Eds.), Artificial 1996, pp. 447-462. simulation and numerical optimization of complex engineering Multidisciplinary Analysis & Optimization Symposium, Bellevue. I34 1 M. Schwabacher, A. Gelsey, Multi-level in: 6th AIAA/NASA/USAF designs, I. WA, 1996, AIAA-96-402 135 1 M. Schwabacher, A. Gelsey, Intelligent gradient-based search of incompletely defined design spaces, Artif. Intell. for Engineering Design, Analysis and Manufacturing 11 (3) (1997) 199-210. I36 I M. Schwabacher, A. Gelsey, Multi-level J. Aircraft 35 (2) designs, ( 1998) (to appear). simulation and numerical optimization of complex engineering 1371 M. Schwabacher, H. Hirsh, T. Ellman, Learning prototype-selection Intelligence 10th IEEE Conference on Artificial in: Proceedings 1994. pp. 56-62. rules for case-based for Applications, iterative design, San Antonio, TX, [38] V. Shukla, A. Gelsey, M. Schwabacher, D. Smith, D.D. Knight, Automated hypersonic inlet using numerical optimization, in: AIAA Joint Propulsion Conference, redesign of the NASA PX 1996. 1391 V. Shukla, A. Gelsey, M. Schwabacher, D. Smith, D.D. Knight, Automated design optimization for the P2 and P8 hypersonic [ 40 ] J. Sobieszczanski-Sobieski, recent developments, 96-07 I I. inlets, AIAA J. Aircraft 34 (2) ( 1997) 228-235. R.T. Haftka, Multidisciplinary Survey of in: 34th AIAA Aerospace Sciences Meeting and Exhibit, Reno, NV, 1996, AIAA- design optimization: aerospace [ 41 I J. Sobieszczanski-Sobieski, (1985) AlAA J. 23 (11) B.B. James, A.R. Dovi, Structural optimization by multilevel decomposition, 1775-1782. 142 1 S.S. Tong, D. Powell, S. Goel, Integration of artificial intelligence and numerical optimization for the design of complex aerospace AIAA-92-1189. systems, in: 1992 Aerospace Design Conference, [ 431 G.N. Vanderplaats, Numerical Optimization Techniques for Engineering Design: With Applications. McGraw-Hill. New York, 1984. 1441 B.C. Williams, reasoning, 1994, pp. 1217-1223. J. Cagan, Activity analysis: the qualitative analysis of stationary in: Proceedings 12th National Conference on Artificial Intelligence points for optimal ( AAAI-94)) Seattle, WA, techniques Irvine, CA, 1992, 62 A. Gelsey et al. /Artificial Intelligence 101 (1998) 35-62 [45 I K.M.-K. Yip, Understanding 179-221 51 (l-3) (1991) complex dynamics by visual and symbolic reasoning, Artificial Intelligence 1461 G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. GeIsey, D. Knight, M. Haas, High performance Multidisciplinary supersonic missile inlet design using automated optimization, in: 6th AIAA/NASA/USAF Analysis & Optimization Symposium, Bellevue, WA, 1996, AIAA-96-4142. [47] G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, D. Knight, M. Haas, High performance .I. Aircraft 34 (6) ( 1997) 697-705. in phase space, Artificial supersonic missile [ 481 F. Zhao, Extracting inlet design using automated optimization, AIAA qualitative behaviors of complex systems and representing Intelligence 69 (l-2) ( 1994) 51-92. 