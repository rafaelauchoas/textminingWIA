Artificial Intelligence 227 (2015) 190–213Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintOptimal social choice functions: A utilitarian view ✩Craig Boutilier a,1, Ioannis Caragiannis b, Simi Haber c, Tyler Lu a,2, Ariel D. Procaccia d,∗, Or Sheffet ea Dept. of Computer Science, University of Toronto, Canadab Computer Technology Institute “Diophantus” and Dept. of Computer Engineering and Informatics, University of Patras, Greecec Dept. of Mathematics, Bar-Ilan University, Israeld Computer Science Dept., Carnegie Mellon University, United Statese Center for Research on Computation and Society, Harvard SEAS, United Statesa r t i c l e i n f oa b s t r a c tArticle history:Received 12 April 2014Received in revised form 11 June 2015Accepted 14 June 2015Available online 25 June 2015Keywords:Computational social choiceWe adopt a utilitarian perspective on social choice, assuming that agents have (possibly latent) utility functions over some space of alternatives. For many reasons one might consider mechanisms, or social choice functions, that only have access to the ordinal rankings of alternatives by the individual agents rather than their utility functions. In this context, one possible objective for a social choice function is the maximization of (expected) social welfare relative to the information contained in these rankings. We study such optimal social choice functions under three different models, and underscore the important role played by scoring functions. In our worst-case model, no assumptions are made about the underlying distribution and we analyze the worst-case distortion—or degree to which the selected alternative does not maximize social welfare—of optimal (randomized) social choice functions. In our average-case model, we derive optimal functions under neutral (or impartial culture) probabilistic models. Finally, a very general learning-theoretic model allows for the computation of optimal social choice functions (i.e., ones that maximize expected social welfare) under arbitrary, sampleable distributions. In the latter case, we provide both algorithms and sample complexity results for the class of scoring functions, and further validate the approach empirically.© 2015 Elsevier B.V. All rights reserved.1. IntroductionClassic models in social choice theory assume that the preferences of a set of agents over a set of alternatives are represented as linear orders; a social choice function, given these preferences as input, outputs a single socially desirable alternative. A host of clever social choice functions have been designed to satisfy various normative criteria. Most work in computational social choice studies computational aspects of these models, addressing questions such as the complexity of computing social choice functions [5,17] or manipulating them (see the survey by Faliszewski and Procaccia [13]).E-mail addresses: cebly@cs.toronto.edu (C. Boutilier), caragian@ceid.upatras.gr (I. Caragiannis), simi@math.biu.ac.il (S. Haber), tl@cs.toronto.edu (T. Lu), ✩A preliminary version of this paper appeared in the proceedings of EC’12.* Corresponding author.arielpro@cs.cmu.edu (A.D. Procaccia), osheffet@seas.harvard.edu (O. Sheffet).1 Currently on leave at Google, Inc., Mountain View, CA.2 Currently at Google, Inc., Mountain View, CA.http://dx.doi.org/10.1016/j.artint.2015.06.0030004-3702/© 2015 Elsevier B.V. All rights reserved.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213191Under ordinal preferences, an axiomatic approach to obtaining a socially desirable outcome seems—on the face of it—necessary, absent concrete measures of the quality of an alternative. In contrast, some work in economics assumes cardinalpreferences and takes a utilitarian approach. This viewpoint dates to the work of Bentham at the end of the 18th century, who argued that “it is the greatest happiness of the greatest number that is the measure of right and wrong.” This axiom suggests that happiness can be quantified, and indeed, having coined the term utility, Bentham proposed that the goal of government is to maximize the sum of individual utilities—the social welfare (defying contemporary wisdom that the goal of government is to enrich the coffers of the ruler). The utilitarian approach is prevalent, for example, in mechanism design, and perhaps even more so in algorithmic mechanism design [25].In this paper we view the social choice problem through this utilitarian lens. Our premise is that agents have (possibly implicit) utility functions, and the goal of a social choice function is to maximize the (utilitarian) social welfare3—i.e., (possibly weighted) sum of agent utilities—of the selected alternative. The utilitarian perspective is not appropriate for all social choice problems (a point we discuss further below). However, the methods of social choice—especially voting systems—are finding increasing application in recommender systems, web search, product design, and many more practical domains, in which the primary aim is often, as in much of mechanism design, to aggregate preferences so that utility or efficiency is maximized. Indeed, one motivation for our work is the development of group recommendation systems for a variety of domains, including low-stakes consumer applications and higher profile public policy and corporate decisions. Our work can be viewed as a step toward supporting groups of users making decisions using social choice functions that are automatically optimized for their needs. In these settings, a utilitarian perspective is often called for.If we could directly access the utilities of agents, the socially desirable alternative could be easily identified. However, such access is often not feasible for a variety of reasons. As a result, we use agent preference orders as a proxy for their utility functions; and the social choice function, taking preference orders as input, should perform well with respect to the underlying utilities. From this point of view, a social choice function is optimal if it maximizes social welfare given the available information. Using a preference order as proxy for utility in this fashion serves several purposes. First, behavioral economists have argued that people find it difficult to construct utilities for alternatives. Second, the cognitive and commu-nication burden of articulating precise utilities has long been recognized within decision analysis, behavioral economics, and psychology. By contrast, simply comparing and ordering alternatives is considerably easier for most people, which makes soliciting preference orders more practical than eliciting utilities. Furthermore, choice behavior among alternatives can of-ten be interpreted as revealing ordinal (rather than cardinal) preference information, providing ready access to (sometimes incomplete) orders in many of the domains described above. Hence we content ourselves with orders as inputs.1.1. Our resultsOur study of optimal social choice functions incorporates three distinct but related models, each with its own assump-tions regarding available information and therefore its own notion of optimality. One common thread is that the family of scoring functions—social choice functions that score alternatives based only on their position in each agent’s preference order—plays a key role in optimizing social welfare.In Section 3 we study a model where no information about agents’ utility functions is available when constructing the so-cial choice function. A worst-case analysis is thus called for. We believe that the study of this model is of theoretical interest, but it is certainly the least practical of our three models. Specifically, given a collection of agents’ preferences—a preference profile—there are many consistent collections of utility functions—utility profiles—that induce this preference profile in the natural way (by ranking alternatives with higher utility closer to the top). The distortion of a social choice function on a preference profile is the worst-case ratio (over feasible utility profiles) of the social welfare of the best alternative to the social welfare of the alternative that is selected by the function. A worst-case optimal social choice function minimizes the distortion on every preference profile.√We first derive upper and lower bounds on the least distortion that one can hope for, focusing on randomized social choice functions. We show that there exists a preference profile where every randomized social choice function must have m), where m is the number of alternatives. We complement this result with a randomized social distortion at least (cid:2)(∗choice function whose distortion on every preference profile is O(m). A slightly weaker upper bound is obtained via a randomized variation of a natural scoring function that we call the harmonic scoring function (a new canonical scoring function that may be of independent interest). Finally, we establish that the worst-case optimal social choice function (which achieves minimum distortion on every profile) is polynomial-time computable. The proof is based on linear programming, and (roughly speaking) relies on embedding the dual of a sub-problem within a carefully constructed larger LP, in order to avoid quadratic constraints.m log√In Section 4 we study an average-case model, assuming a known distribution D over utility functions. We assume that the utility function of each agent is drawn independently from D. Given reported agent preferences, one can compute the expected utility any agent has for an alternative with respect to D. An average-case optimal social choice function selects an alternative that maximizes expected social welfare given the reported profile. We show that when D is neutral, i.e., symmetric with respect to alternatives, the average-case optimal social choice function must be a scoring function. The 3 Hereinafter, we simply write “social welfare” to refer to “utilitarian social welfare”.192C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213proof leverages Young’s [36] characterization of the family of scoring functions. As a corollary, we show that when D is uniform over an interval, the average-case optimal social choice function is the famous scoring function known as the Borda count.In Section 5 we develop and analyze a learning-theoretic model. Rather than assuming a known distribution D over utility profiles, we have access only to sampled utility profiles from D. We use these profiles to compute sample-optimal social choice functions. The quality of a sample-optimal function is measured by comparing its expected social welfare to that of the (truly) optimal social choice function for D. We address two natural questions. First we derive sample complexity results for two classes of social choice functions, k-approval functions and more general scoring functions; specifically, we derive necessary and sufficient bounds on the number of samples such that the sample-optimal function in this class will have social welfare that is within a small tolerance of the optimal choice function with high probability. Second, we show that computing the sample-optimal scoring function is APX -hard, but describe a mixed integer programming formulation of this problem that solves it in practice. Empirical results on a random utility model and a real data set suggest that sample-optimal scoring functions (as well as several more stylized functions, including Borda count) have very low expected distortion.1.2. Perspective and related workWhile the utilitarian perspective on social choice—especially the goal of optimizing the (possibly weighted) sum of indi-vidual utilities—has been overshadowed by the more axiomatic perspective to a great extent, its foundations are nonetheless firm [15], and it does have its advocates. Our work adopts this utilitarian perspective, and assumes that social welfare is measured using the sum of individual agent utilities in the classic “Benthamite” fashion. Naturally, this position requires making a number of assumptions about the problem domain including: the existence of agent (cardinal) utility functions; the validity of interpersonal comparison of utilities; and having as one’s goal the maximization of the sum of individual utilities.None of these assumptions is valid in all social choice settings. The foundations of von Neumann and Morgenstern [32]expected utility theory treat the strength of preference for alternatives expressed by a utility function as representing an individual’s (ordinal) preferences over lotteries or gambles involving those alternatives. While this theory can be operational-ized to (roughly) determine an individual’s utility function (e.g., using standard gamble queries, as is common in decision analysis), it provides little foundation for a satisfactory account of interpersonal utility comparison. Furthermore, even if one accepts that such interpersonal comparisons are meaningful, many social choice functions and voting schemes studied in the social choice literature cannot, in any sense, be interpreted as maximizing the sum of individual utilities, or as assuming that individual utilities even exist.Despite this, the three key assumptions above hold (at least approximately) in many settings, including those of interest in computational economics, algorithmic mechanism design, and e-commerce. Most work in mechanism design assumes that agents possess real-valued utility or valuation functions over alternatives, and while arbitrary social choice functions may be considered, one of the most common is social welfare maximization, which is, for example, the social choice function implemented by the celebrated VCG mechanism [25], which requires monetary transfers (in order to achieve truthfulness). Other papers also assume cardinal utilities and deal with truthfulness and social welfare maximization but in settings without money. For example, in a recent paper, Azrieli and Kim [4] characterize social choice functions that maximize social welfare subject to truthfulness when there are two alternatives—they are weighted majority rules with appropriate weights. In this light, our work can be viewed as providing the means to approximately maximize social welfare, while reducing the elicitation burden of classic mechanisms by having agents rank alternatives rather than specify valuations.While many of our results on the optimality of scoring rules in the worst-case and average-case models depend on using the sum of utilities as our social choice function, our learning-theoretic model and corresponding empirical optimization framework could, in principle, be adapted to other measures of social welfare (including the “Rawlsian” maximin and other measures) that take as input the utility functions of a collection of agents. In this sense, our framework does not require a commitment to maximizing the sum of individual utilities.Some researchers argue that agents should express their preferences by explicitly reporting utilities. While very common in decision analysis, this perspective is also sometimes adopted in social choice. For example, utilitarian voting [18] (or range voting) allows voters to express utilities for alternatives in some predefined range, e.g., {1, . . . , 10}, {−1, 0, 1}, or {0, 1} (the last coincides with approval voting [8]). While utilitarian in approach, such work differs from ours, as we take the (prevalent) view that human voters are far more comfortable expressing ordinal preferences—we seek to optimize the choice of alternative with respect to implicit utility functions.The worst-case model in Section 3 is closely related to work by Procaccia and Rosenschein [27]. Their work shares the premise that ordinal utilities are a proxy for underlying cardinal utilities. They too argue that a social choice function should maximize social welfare, and introduce the notion of distortion to quantify the gap between optimum social welfare and the total utility of the social choice based on the induced preference orders. The main difference from our approach is that they consider deterministic social choice functions, whereas we focus on randomized functions. Deterministic functions inevitably have trivially high distortion, which Procaccia and Rosenschein mitigate by focusing attention on highly structured utility functions. In contrast, our study provides rich theoretical results under a very mild assumption on utility functions.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213193Fig. 1. A comparison of our worst-case model (Section 3) with Caragiannis and Procaccia [10]. The text above (resp., below) the arrows describes our (resp., their) work. SCF stands for social choice function.A recent paper by Caragiannis and Procaccia [10] builds on [27], and is also closely related to our worst-case results. Al-though they also aim to optimize social welfare, their work is fundamentally different on a conceptual level: they consider settings where agents are software agents that can easily compute exact utilities for alternatives, and the need for voting arises because of communication restrictions. Hence they focus on simple, fixed social choice functions with low commu-nication requirements, and optimize the embedding by which agents translate their utility functions into reported votes. For example, an agent can map its utility function to a plurality vote—which designates a single, favorite alternative, and therefore requires only log2 m bits—by voting for each alternative with probability proportional to that alternative’s utility. While such embeddings are well-motivated in cooperative multiagent systems, in our setting, agents may be people whose utility functions are translated into preference orders in the natural way; thus we optimize the social choice function. Fig. 1illustrates the two different optimization processes.Several papers study models that are similar to our average-case model in Section 4. For example, Pivato [26] shows that when cardinal utilities are drawn from a distribution satisfying certain assumptions, a Condorcet winner exists and maximizes the social welfare with high probability. And early empirical work by Bordley [7] and Merrill [24] shows that plurality achieves lower social welfare than other social choice functions.The unpublished work of Weber [34] is even more closely related. His motivation is similar to ours, but his model and results differ in several important ways. First, he optimizes a measure different from ours. Second, he restricts attention to (a slight generalization of) the family of scoring functions (whereas we identify optimal social choice functions, which just happen to be scoring functions). Third, he assumes that the utility of each agent for each alternative is independently and uniformly distributed on an interval, while our assumptions are less restrictive. Weber’s main result is that Borda count is asymptotically optimal (w.r.t. his measure) among scoring functions. Interestingly, under his more restrictive assumptions we show that Borda count is average-case (exactly) optimal (w.r.t. our measure, expected social welfare of the winner) among all social choice functions.Section 4 is also closely related to independent4 work by Apesteguia et al. [3], who prove a result that is very similar to our Theorem 4.2. Our result is somewhat stronger, in that we assume that the utility function of each agent is drawn i.i.d. from a neutral distribution D, whereas they assume that each agent’s utility for each alternative is drawn i.i.d. Moreover, our proof—which builds on a result by Young [36]—is completely different.The learning-theoretic model in Section 5 is related to a study of the learnability of social choice functions by Procaccia et al. [28]. They consider the reconstruction of a scoring function based on examples, where an example is a preference profile and a winning alternative for that profile. In contrast, in our learning-theoretic setting we optimize expected social welfare, and examples are utility profiles. On a conceptual level, their motivation is fundamentally different; on a technical level, we require new tools, but leverage some of their results to derive novel results in our setting.Finally, we are seeing increasingly more work in computational social choice that views the social choice problem as an optimization problem [21,12]. One such approach views social choice functions as maximum likelihood estimators [11]. This line of work, dating to the 18th century, was revived by Young [37], who studied “optimal” voting rules, but his notion of optimality is very different from ours. Specifically, the maximum likelihood perspective assumes that agents order alterna-tives reflecting their personal assessment of the relative likelihood that particular alternatives are “objectively best”. Voting is intended to determine the alternative (or ranking) with maximum likelihood of being the best given these assessments, assuming that each agent is more likely to rank any pair of alternatives correctly than incorrectly. Young’s view of optimal-ity (and the MLE perspective more broadly) is thus purely statistical and does not address issues of social welfare or utility maximization.52. PreliminariesLet N = {1, . . . , n} be a set of agents and A = {a1, . . . , am} a set of alternatives. Each agent has a preference order over A, which is a strict total order. Letting [k] = {1, . . . , k}, we can equivalently view a preference order as a bijection σ : A → [m]mapping each alternative to its rank. Let Sm be the set of such bijections. The alternative ranked in position k under ranking σ is given by σ −1(k).For each i ∈ N, let σi be the preference order of agent i. The vector of agent preferences (cid:6)σ = (σ1, . . . , σn) ∈ (Sm)n is a preference profile. A social choice function f : (Sm)n → A maps preference profiles to alternatives. We draw special attention to a class of social choice functions known as scoring functions. A scoring function is defined by a vector (cid:6)s = (s1, . . . , sm). 4 The conference version of this paper was published in 2012, shortly after the publication of the paper of Apesteguia et al. [3].5 Even in his discussion of compromise among preference orderings using Kemeny’s rule, Young appeals to a statistical justification, namely, the medianrelative to Kemeny’s distance metric.194C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213Given preference profile (cid:6)σ , the score of a ∈ A is i∈N sσi (a), i.e., a is awarded sk points for each agent who ranks it in position k. The scoring function f(cid:6)s induced by (cid:6)s selects some a ∈ A with maximum score with ties broken in some fashion (we revisit tie breaking as it becomes relevant). The well-known Borda scoring function (or count) is induced by the vector (m − 1, m − 2, . . . , 0).(cid:2)Unlike classical social choice models, we assume that agents have utility functions over alternatives. As discussed above, however, these are not reported or used by the social choice function. Let u : A → R+ be a utility function. We say a (cid:7)); i.e., alternatives with higher utility must be ranked ranking σ is consistent with u if u(a) > u(ahigher than those with lower utility.(cid:7)) implies σ (a) < σ (aLet p(u) be the set of rankings consistent with (or induced by) u; p(u) is a set to account for ties in utility. We occasionally presume agents use some (randomized) method for selecting a specific ranking σ ∈ p(u) when they possess utility function u; in such a case, we use σ (u) to denote the corresponding random variable (with domain p(u)). Abusing −1(σ ) be the set of utility functions u such that σ ∈ p(u), i.e., the set of utility functions consistentnotation slightly, let pwith σ . The vector (cid:6)u = (u1, . . . , un) of agent utility functions is a utility profile. Let p((cid:6)u) = p(u1) × · · · × p(un) be the set of preference profiles consistent with (cid:6)u. Similarly, let (cid:6)σ ((cid:6)u) denote the random variable over p((cid:6)u) representing the (joint) −1( (cid:6)σ ) denote the set of utility profiles consistent with preference profile (cid:6)σ .choice of rankings, and pPositing a utility model allows one to quantify the social welfare of an alternative. For utility profile (cid:6)u, let sw(a, (cid:6)u) =(cid:2)i∈N ui(a) be the (utilitarian) social welfare of a.3. The worst-case modelWe begin our study of optimal social choice functions with a worst-case model. A social choice function has access only to a preference profile, but this preference profile is induced by some unknown utility profile. To quantify the quality of a social choice function, we use the notion of distortion [27,10], which reflects the degree to which the social choice can become distorted when cardinal preferences are mapped to ordinal preferences. More precisely, the distortion of social choice function f on a preference profile (cid:6)σ is given bydist( f , (cid:6)σ ) = sup(cid:6)u∈p−1( (cid:6)σ )maxa∈ A sw(a, (cid:6)u)sw( f ( (cid:6)σ ), (cid:6)u).In other words, distortion is the worst-case ratio (over consistent utility profiles) of the social welfare of the optimal alter-native to that of the alternative selected by f .As observed by Procaccia and Rosenschein [27], deterministic social choice functions must have high distortion. For example, consider a preference profile where n/2 agents rank a first, and n/2 agents rank b first. Assume (w.l.o.g.) a social choice function selects a. Suppose the agents that rank b first have utility 1 for b and 0 for other alternatives, while agents that rank a first have utility 1/m for all alternatives. The ratio between the social welfare of b and a is (cid:2)(m). To reduce potential distortion, Procaccia and Rosenschein [27] adopt an extremely restrictive assumption on utility functions (specifically, that utilities are Borda scores). We instead turn to randomization.We consider randomized social choice functions f : (Sm)n → (cid:4)( A), in which f ( (cid:6)σ ) is a distribution (or random variable) over A. We extend the definition of distortion to randomized functions in the natural way:dist( f , (cid:6)σ ) = sup(cid:6)u∈p−1( (cid:6)σ )maxa∈ A sw(a, (cid:6)u)E[sw( f ( (cid:6)σ ), (cid:6)u)].In general, even randomized social choice functions cannot achieve a distortion lower than (cid:2)(m). Consider a preference profile where each a ∈ A is ranked first at least once. Given a randomized social choice function, there is some alternative ∗ ∈ A that is selected with probability at most 1/m given this preference profile. However, this profile is induced by the a∗, and all other utilities are arbitrarily low. The ratio between utility profile where one agent gives arbitrarily high utility to athe social welfare of aand the function’s expected social welfare would therefore be (cid:2)(m).∗To avoid this, we make the following assumption in this section:Assumption 3.1. (Only in Section 3.) For each agent i ∈ N, (cid:2)a∈ A ui(a) = 1.This ensures that agents have equal “weights,” or equal pools of “utility points” to distribute among the alternatives. Otherwise, if, say, agent 1 has utility 1 for a and 0 for the rest, and agent 2 has utility 1/2 for b and 0 for the rest, then agent 1 has twice as much influence as agent 2 in determining the socially optimal alternative. The same assumption is also made by Caragiannis and Procaccia [10].Our first result establishes a lower bound on the distortion of randomized social choice functions under Assumption 3.1(which is almost tight, see below).√Theorem 3.2. Assume that n ≥(cid:2)(m).√m. Then there exists a (cid:6)σ ∈ (Sm)n such that for any randomized social choice function f , dist( f , (cid:6)σ ) =C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213195Proof. For ease of exposition assume that the preference profile (cid:6)σ where σi(ak) = 1, for all i ∈ Nk, and the remaining alternatives are ranked arbitrarily.√∗ ∈ {1, . . . , For any randomized f there must be a km divides n. Partition the agents into m} such that Pr[ f ( (cid:6)σ ) = ak∗ ] ≤ 1/m equal subsets N1, . . . , N√√that for all i ∈ Nk∗ , v i(ak∗ ) = 1 and ui(a) = 0 for all a ∈ A \ {ak∗ }. For all i /∈ Nk∗ and a ∈ A, v i(a) = 1/m. It holds thatm. Let (cid:6)u be a utility profile such m. Consider √√n√m≤ sw(ak∗ , (cid:6)u) ≤ 2n√m,and for all a ∈ A \ {ak∗ }, sw(a, (cid:6)u) ≤ n/m. Therefore:dist( f , (cid:6)σ ) ≥n√1√m· 2n√mm+√m−1√m· nm≥√m3.(cid:2)We next establish the existence of a randomized social choice function that nearly achieves this lower bound on everym (iterated logarithm of m).preference profile, leaving a tiny gap of only log∗Theorem 3.3. There exists a randomized social choice function f such that for every (cid:6)σ ∈ (Sm)n, dist( f , (cid:6)σ ) = O(√m · log∗m).The rather intricate proof of this theorem is provided in Appendix A. Here we present a much simpler proof of a weaker m log m). This latter proof uses the novel harmonic scoring function, given by score vector (h1, . . . , hm), (cid:3)upper bound of O(where hk = 1/k.(cid:2)m log m). Let sc(a, (cid:6)σ ) be the score of a under (cid:6)σ using the harmonic scoring function. Proof of weaker upper bound of O(It holds that ui(a) ≤ 1/σi(a) for all i ∈ N and a ∈ A, because if i ∈ N ranks a ∈ A in position k and gives it utility ui(a), each of the k − 1 alternatives ranked above a must have utility at least ui(a), but the sum of utilities is one. Therefore, for any (cid:6)u ∈ p−1( (cid:6)σ ) and any a,sw(a, (cid:6)u) ≤ sc(a, (cid:6)σ ).In addition, note that for any (cid:6)σ ,(cid:4)a∈ Asc(a, (cid:6)σ ) = n ·m(cid:4)k=11k≤ n(ln m + 1).(1)(2)Consider the randomized f that chooses one of the following two schemes (each with probability 1/2): (i) select an (cid:7), (cid:6)σ )) (i.e., proportional alternative uniformly at random, and (ii) select an alternative with probability sc(a, (cid:6)σ )/(to sc(a, (cid:6)σ )). Let (cid:6)σ ∈ (Sm)n, (cid:6)u ∈ p−1( (cid:6)σ ), and a ∈ A. It is sufficient to show thata(cid:7)∈ A sc(a(cid:2)sw(a, (cid:6)u)E[sw( f ( (cid:6)σ ), (cid:6)u)]≤ 2(cid:3)m(ln m + 1).We consider two cases. First, assume that sc(a, (cid:6)σ ) ≥ n(cid:3)(ln m + 1)/m. With probability 1/2, a winner is selected propor-tionally to its score. Using Eq. (2), the probability that a is selected is at least(cid:5)ln m+1mn ·n(ln m + 1)·12=2It follows that1√m(ln m + 1).E[sw( f ( (cid:6)σ ), (cid:6)u)] ≥ Pr[ f ( (cid:6)σ ) = a] · sw(a, (cid:6)u) ≥√· sw(a, (cid:6)u).12m(ln m + 1)(cid:3)Second, assume that sc(a, (cid:6)σ ) < n ·(ln m + 1)/m. From Eq. (1) it follows that sw(a, (cid:6)u) < n ·bility 1/2, a winner is selected uniformly at random. We have thatE[sw( f ( (cid:6)σ ), (cid:6)u) | uniform selection] =i∈N(cid:2)(cid:2)a∈ A ui(a)m= nm,(cid:3)(ln m + 1)/m. With proba-and therefore E[sw( f ( (cid:6)σ ), (cid:6)u)] ≥ n/(2m). We conclude that(cid:5)sw(a, (cid:6)u)E[sw( f ( (cid:6)σ ), (cid:6)u)]n ·≤ln m+1mn2m= 2(cid:3)m(ln m + 1).(cid:2)196C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213An interesting aspect of this proof is its use of the harmonic scoring function. Despite a large body of (especially com-putational) work on scoring functions (see, e.g., [16,35,28]), only three scoring functions are considered canonical: Borda count; plurality, defined by vector (1, 0, . . . , 0); and veto (or anti-plurality), defined by vector (1, . . . , 1, 0). We hope that the harmonic function, with natural parameters and attractive theoretical properties, may in time be accepted into this exclusive club.While Theorem 3.3 offers attractive theoretical guarantees, its randomized social choice function need not be optimal. While there are preference profiles where distortion must be at least (cid:2)(m), there may be many profiles where low distortion is achievable but this function nevertheless yields relatively high distortion. We are thus most interested in worst-case optimal (randomized) social choice functions. By this, we simply mean that for every (cid:6)σ ∈ (Sm)n, the function fhas minimum possible distortion on (cid:6)σ . We can show that such a social choice function is polynomial-time computable via linear programming duality.√Theorem 3.4. The worst-case optimal randomized social choice function is polynomial-time computable.Proof. For an alternative a(cid:6)∗ ∈ A and (cid:6)σ ∈ (Sm)n, let(cid:7)U ( (cid:6)σ , a∗) =(cid:6)u ∈ p−1( (cid:6)σ ) : a∗ ∈ argmaxa∈ A{sw(a, (cid:6)u)}.Given a preference profile (cid:6)σ ∈ (Sm)n, an alternative adefine the set of inequalities INEQ({pa}a∈ A, β, (cid:6)σ , a∗) as follows:∗ ∈ A, a vector of non-negative values {pa}a∈ A , and non-negative β, (cid:4)j∈Nβ +y( j, a(cid:4)a∈ A∗) ≥ 0x(a, a∗) ≤ 0∀ j ∈ N, ∀a ∈ A : σ j(a) = 1, pa + x(a, a∀ j ∈ N, ∀a ∈ A : 2 ≤ σ j(a) ≤ m − 1, pa + x(a, a∀ j ∈ N, ∀a ∈ A : σ j(a) = m, pa + x(a, a∀a ∈ A \ {a∗, ax(a∀ j ∈ N, y( j, a∀k ∈ [m − 1], j ∈ N, z(k, j, a∗}, x(a, a∗) ∈ (−∞, +∞)∗) ∈ (−∞, +∞)∗) ≥ 0∗) ≥ 0∗) − y( j, a∗) − z(σ j(a), j, a∗) ≥ 0∗) − y( j, a∗) − z(σ j(a), j, a∗) + z(σ j(a) − 1, j, a∗) − y( j, a∗) + z(σ j(a) − 1, j, a∗) ≥ 0(3)∗) ≥ 0The connection of this set of inequalities to randomized social choice functions is revealed in the following statement.Lemma 3.5. A randomized social choice function fhas distortion at most β−1 when β ∈ (0, 1] with respect to utility profiles in U ( (cid:6)σ , aINEQ({pa( (cid:6)σ )}a∈ A, β, (cid:6)σ , athat uses probability distribution {pa = Pr[ f ( (cid:6)σ ) = a]}a∈ A for profile (cid:6)σ∗) if and only if the set of inequalities ∗) is satisfied.Proof. The fact that the distortion is at most β−1 is equivalent to the following linear program having a non-negative objective value.(cid:4)(cid:4)pau j(a) − βqminimizesubject toj∈N(cid:4)a∈ Au j(a∗) = q(cid:2)j∈N u j(a) ≤ q∗},a∈ A u j(a) = 1j∈N∀a ∈ A \ {a(cid:2)∀ j ∈ N,∀ j ∈ N, k ∈ [m − 1], u j(σ −1∀ j ∈ N, a ∈ A, u j(a) ≥ 0q ≥ 0j(k)) ≥ u j(σ −1j(k + 1))In the above LP, the variable u j(a) denotes the utility of agent j ∈ N for alternative a ∈ A while the variable q is the maximum social welfare among all alternatives. The constraints guarantee that (cid:6)u ∈ U ( (cid:6)σ , aNext, consider the dual linear program using the variable x(a∗) for ∗) for the the second set of constraints, the variables y( j, a∗) except fourth set of constraints. This program maximizes Equation (3). By LP duality, the maximum objective value of the dual LP should be non-negative as well. Observe that this is exactly the requirement that INEQ({pa( (cid:6)σ )}a∈ A, β, (cid:6)σ , a∗) for the third set of constraints, and the variables z(k, j, a(cid:2)∗), subject to the constraints in INEQ({pa}a∈ A, β, (cid:6)σ , a∗) for the first constraint, the variables x(a, a∗) is satisfied. (cid:2)j∈N y( j, a∗, a∗).C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213197We are now ready to define the worst-case optimal randomized social choice function f, i.e., the one that achieves optimal distortion β( (cid:6)σ )−1 with respect to every profile (cid:6)σ ∈ (Sm)n. To do so, we consider the probability distribution ∗( (cid:6)σ ) = a]}a∈ A as a set of variables and β( (cid:6)σ ) as our objective that has to be maximized. We employ an LP that {pa( (cid:6)σ ) = Pr[ fis defined as follows.∗maximize β( (cid:6)σ )subject to ∀a(cid:4)∗ ∈ A, INEQ({pa( (cid:6)σ )}a∈ A, β( (cid:6)σ ), (cid:6)σ , apa( (cid:6)σ ) = 1∗) is satisfieda∈ A∀a ∈ A, pa( (cid:6)σ ) ≥ 0Using Lemma 3.5 we find that the probability distribution obtained as (part of) the solution to this LP induces the lowest possible distortion β( (cid:6)σ )−1 with respect to (cid:6)σ .We conclude that in order to compute the worst-case optimal social choice function fwith respect to any preference profile, it suffices to solve a linear program with O(nm2) variables and O(nm2) constraints. We observe that leveraging LP duality is crucial to the proof, as naïvely embedding the primal LP presented in Lemma 3.5 into the above LP would result in a quadratic program. (cid:2)∗Interestingly, even though we can concisely describe the optimal function, we do not know whether its distortion on m). Of course, by Theorem 3.3, we do know that its distortion on any profile can only be √every profile is at most O(√slightly larger: at most O(∗m logm).4. The average-case modelWe now consider a model in which agent utility functions are drawn from a probability distribution D. As discussed in Section 1, this model is closely related to independent work by Apesteguia et al. [3]. We do not assume that utilities are nor-malized (as in Section 3), but we do assume (in this section only) that each agent’s utility function is drawn independently from the same distribution.Assumption 4.1. (Only in Section 4.) Agent utility functions u1, . . . , un are drawn i.i.d. from D.This assumption, while admittedly restrictive, enables us to prove strong results; it will not be used when we move to a more general learning-theoretic model in Section 5.This model gives rise to the product distribution Dn over utility profiles. As above, utility profiles induce preference profiles in the natural way, but since we will need to reason about the induced distribution over preference profiles, we make the specific, but mild, assumption that ties in utility are broken uniformly at random; that is, if u(a) = u(b) then Pr[(σ (u))(a) < (σ (u))(b)] = Pr[(σ (u))(b) < (σ (u))(a)] = 1/2. This assumption is essentially without loss of generality under non-atomic distributions (since ties occur with probability zero).The notion of optimality takes a slightly different meaning in this setting: instead of maximizing the ratio to the optimal social welfare, a social choice function should perform as well as possible on average. We say that a social choice function fis average-case optimal if for every preference profile (cid:6)σ it maximizes expected social welfare E[sw( f ( (cid:6)σ ((cid:6)u)), (cid:6)u) | (cid:6)σ ((cid:6)u)]. Note that expectation is conditional on the reported preference profile (cid:6)σ ((cid:6)u).In this section, we consider distributions D that possess a special structure. Distribution D is neutral6 if for any measur-+ and any permutation π ∈ Sm, we have D(U ) = D(U ◦ π ), where U ◦ π = {u ◦ π : u ∈ U } (here u ◦ π denotes a able U ⊆ Rmpermutation of utility function u). Informally, a neutral distribution is symmetric with respect to alternatives. A neutral dis-tribution induces a distribution over preference profiles where each agent draws a ranking σ independently and uniformly at random; this is exactly the impartial culture assumption, a model that plays an important role in social choice theory [31,30]. We now show that scoring functions play a crucial role in the average-case model, underscoring even more deeply the importance of this family in the study of optimal social choice functions.Theorem 4.2. Assume a neutral distribution D over utility functions. Then the average-case optimal social choice function is a scoring function.Apesteguia et al. [3] independently prove a similar theorem, but make the stronger assumption that each agent’s utility for each alternative is drawn i.i.d. Importantly, they use a direct proof, whereas we provide a completely different, potentially more broadly useful proof by exploiting machinery developed by Young [36].To this end, we define a social choice correspondence as a function from preference profiles to nonempty subsets of A. A scoring correspondence is defined by a vector (cid:6)s as before, but selects all alternatives with maximum score. An anonymous 6 Neutrality is also known as exchangeability in this context.198C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213social choice correspondence operates on anonymous preference profiles, i.e., vectors (cid:6)x ∈ Nm!that count the number of agents holding each of the m! possible rankings of A in the preference profile (i.e., without regard for which agent holds what preference). Let xσ denote the number of agents holding ranking σ in (cid:6)x.An anonymous social choice correspondence fis: consistent if f ((cid:6)x + (cid:6)y) = f ((cid:6)x) ∩ f ((cid:6)y) when f ((cid:6)x) ∩ f ((cid:6)y) (cid:15)= ∅; continuousif whenever f ((cid:6)x) = {a} then for any anonymous profile (cid:6)y there is T ∈ N such that f ((cid:6)y + t(cid:6)x) = {a} for every t ≥ T ; and neutral if f ◦ σ = σ ◦ f for every σ ∈ Sm. Denote by p∗((cid:6)u) the set of anonymous preference profiles consistent with (cid:6)u.Lemma 4.3. (See Young [36].) An anonymous social choice correspondence is a scoring correspondence if and only if it is neutral, consistent, and continuous.Proof of Theorem 4.2. An optimal social choice function is clearly anonymous and neutral because agent utilities are i.i.d. and D is neutral. Thus, we restrict our attention to functions that receive anonymous preference profiles as input.be the social choice correspondence that, given an anonymous preference profile (cid:6)x, returns all a ∈ A that maximize Let f∗E[sw(a, (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)], i.e.,∗f((cid:6)x) = argmaxa∈ AE[sw(a, (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)].It is sufficient to show that ffrom fis exactly the set of optimal choice functions.(i.e., a choice from f∗∗is a scoring correspondence. Indeed, if f∗∗( (cid:6)σ ) for every preference profile (cid:6)σ ) is a scoring function. Moreover, the set of choices from fis a scoring correspondence then any choice ∗∗To show that f∗is consistent, let (cid:6)x and (cid:6)y be two anonymous profiles such that ftinuous. To see that f∗((cid:6)y) and a∗((cid:6)x) ∩ fsuch that a ∈ fis a scoring correspondence, it suffices, by Lemma 4.3, to demonstrate that f∗((cid:6)x) ∩ f∗((cid:6)y). Then∗((cid:6)x) ∩ f(cid:7) /∈ f∗∗((cid:6)y) (cid:15)= ∅, and let a, ais consistent and con-(cid:7) ∈ AE[sw(a, (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)] ≥ E[sw(a(cid:7), (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)]andE[sw(a, (cid:6)u) | (cid:6)y ∈ p∗((cid:6)u)] ≥ E[sw(a(cid:7), (cid:6)u) | (cid:6)y ∈ p∗((cid:6)u)],where one of the inequalities is strict. Moreover, for any b ∈ A,E[sw(b, (cid:6)u) | (cid:6)x + (cid:6)y ∈ p∗((cid:6)u)] =(cid:4)(xσ + yσ ) · E[u(b) | σ ∈ p(u)]=σ ∈Sm(cid:4)σ ∈Smxσ · E[u(b) | σ ∈ p(u)] +(cid:4)σ ∈Smyσ · E[u(b) | σ ∈ p(u)]= E[sw(b, (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)] +E[ sw(b, (cid:6)u) | (cid:6)y ∈ p∗((cid:6)u)].This last equality simply says that the overall expected social welfare of an alternative with respect to two separate electorates—whose preferences are represented as (cid:6)x and (cid:6)y on the right hand side—is equal to the expected social wel-fare of that alternative when the two electorates are put together. We conclude thatE[sw(a, (cid:6)u) | (cid:6)x + (cid:6)y ∈ p∗This shows that a ∈ f∗((cid:6)x + (cid:6)y) and aTo prove continuity, assume f(cid:7)((cid:6)u)] > E[sw(a(cid:7) /∈ f, (cid:6)u) | (cid:6)x + (cid:6)y ∈ p((cid:6)u)].∗((cid:6)x + (cid:6)y), proving that f ((cid:6)x + (cid:6)y) = f ((cid:6)x) ∩ f ((cid:6)y).∗((cid:6)x) = {a}. Then there exists an (cid:7) > 0 such that∗∗E[sw(a, (cid:6)u) | (cid:6)x ∈ p, (cid:6)u) | (cid:6)x ∈ p((cid:6)u)] − E[sw(a(cid:7) ∈ A \ {a}. Let (cid:6)y and let T > (E[sw(a(cid:7)for every a(cid:7) ∈ A \ {a},a∗((cid:6)u)] ≥ (cid:7)(cid:7), (cid:6)u) | (cid:6)y ∈ p∗((cid:6)u)])/(cid:7) for every a(cid:7) ∈ A. Then for every t ≥ T and every E[sw(a, (cid:6)u) | (cid:6)y + t · (cid:6)x ∈ p∗= E[sw(a, (cid:6)u) | (cid:6)y ∈ p((cid:6)u)] − E[sw(a(cid:7)((cid:6)u)] − E[sw(a∗+ t · (E[sw(a, (cid:6)u) | (cid:6)x ∈ p∗≥ T · (cid:7) − E[sw(a(cid:7), (cid:6)u) | (cid:6)y ∈ p((cid:6)u)] − E[sw(a∗((cid:6)u)] > 0∗((cid:6)u)](cid:7), (cid:6)u) | (cid:6)y + t · (cid:6)x ∈ p∗, (cid:6)u) | (cid:6)y ∈ p(cid:7)((cid:6)u)], (cid:6)u) | (cid:6)x ∈ p∗((cid:6)u)])It follows that f∗((cid:6)y + t(cid:6)x) = {a} for every t ≥ T , and therefore continuity is satisfied. (cid:2)The proof implies that the optimal social choice function scores alternatives based only on their position in each agent’s preference order. This observation allows us to construct the optimal scoring function given the distribution D.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213199Corollary 4.4. Assume a neutral distribution D over utility functions. For each k = 1, . . . , m, let sarbitrary a ∈ A. Then the average-case optimal social choice function is a scoring function with parameters (s= E[u(a) | (σ (u))(a) = k] for some ∗m).∗1, . . . , s∗kThe optimal scoring function has an especially natural form: the score s∗k for position k is simply the expected utility of any alternative a for any agent conditional on a being ranked kth by that agent. (Notice that the arbitrary choice of ais justified by the neutrality of D.) We now consider the special case where agent utilities for each alternative are drawn uniformly from some interval (w.l.o.g., take this to be [0, 1]).Corollary 4.5. Let D be the uniform distribution over [0, 1]m (i.e., the utility for each alternative is drawn independently and uniformly from [0, 1]). Then the average-case optimal social choice function is the Borda count.∗k for k = 1, . . . , m. A folk theorem about the expectation of k-order statistics immedi-Proof. It suffices to compute s∗= (m + 1 − k)/(m + 1); we provide an informal proof for completeness. Consider the random vari-ately implies that skables X1, . . . , Xm, where Xk is the utility of the alternative ranked in position k. The lengths of the m + 1 intervals [0, Xm], [ Xm, Xm−1], . . . , [ X1, 1] are identically distributed (to see this, choose m + 1 points on a circle uniformly at random—their distances are identically distributed—and then cut the circle at the first point, which becomes both 0 and 1), and the sum of their lengths is 1. Thus the expected length of each interval is 1/(m + 1).Now, clearly the scoring functions defined by the vectors (cid:6)s and c · (cid:6)s, or (cid:6)s and (cid:6)s + (c, . . . , c), are identical (up to tie breaking). The optimal scoring function defined by the vector (m/(m + 1), . . . , 1/(m + 1)) is therefore equivalent to the Borda count. (cid:2)5. The learning-theoretic modelWe now consider a learning-theoretic model for computing optimal social choice functions that is likely to have the greatest practical impact of our three models. Similarly to the average case model in the previous section, we assume some (possibly unknown) distribution D over utility profiles (rather than utility functions, as in Section 4). However, strong analytical results were made possible in the average case model only by accepting strong assumptions about the distribution, essentially equivalent to the impartial culture assumption. This model is unrealistic for a variety of reasons (e.g., see critiques by Regenwetter et al. [29]).Instead, we devise techniques to compute approximately optimal social choice functions—specifically, optimal scoring functions—for arbitrary distributions D over utility profiles, without assuming a specific parameterized or stylized form, or independence of agent preferences. Most realistic distributions are likely to be analytically intractable, so we develop a sample-based optimization framework for this purpose. We assume access only to a set of sampled profiles from D—or the ability to generate such samples from a known distribution. With sufficiently many samples, the optimal scoring function with respect to these samples will be approximately optimal for D.Because we rely only on samples from D, the model can be interpreted as learning an optimal social choice function. We first address the question of sample complexity by deriving bounds on the number of samples needed to compute approximately optimal scoring functions (as well as the more restricted class of k-approval functions). We then consider the problem of computing an optimal scoring function for a given sample set. We show that this problem (i.e., computing scores to optimize social welfare) is APX -hard, but develop a mixed integer program (MIP) for its optimization. While we discuss the model in learning-theoretic terms, we emphasize that the approach is equally valid when D is known: sample-based optimization offers a viable and very general computational model in this case.75.1. Requisite conceptsTo quantify sample complexity, we rely on two well-known measures of the complexity of a class of functions. Let F be some class of functions of the form f : X → A for some set A. We say a sample x1, . . . , xd ∈ X is shattered by F if there exist f , g ∈ F such that f (xi) (cid:15)= g(xi) for each i ≤ d, and for every boolean vector (b1, . . . , bd) ∈ {0, 1} there is an h ∈ F such that h(xi) = f (xi) if bi = 1 and h(xi) = g(xi) if bi = 0. The generalized dimension D G (F ) of F is the maximum d such that some sample x1, . . . , xd ∈ X is shattered by F .8 The pseudo-dimension is a variation of this concept defined for real-valued functions. If F is a class of functions of the form f : X → R, the pseudo-dimension D P (F ) of F is the maximum d such that there are some x1, . . . , xd ∈ X and thresholds t1, . . . , td ∈ R such that, for every (b1, . . . , bd) ∈ {0, 1}d, there exists an h ∈ F such that h(xi) ≥ ti if bi = 1 and h(xi) < ti if bi = 0.We will use bounds on the pseudo-dimension to derive bounds on the sample complexity. We first observe:Observation 5.1. For any finite function class F , its (generalized or pseudo-) dimension is no greater than log2|F |.7 Our sample complexity results make no distributional assumptions. If sampling a known distribution D for computational reasons, much tighter distribution-dependent sample size results should be possible.8 The generalized dimension is a generalization of the VC dimension; the latter notion is only defined for Boolean-valued functions.200C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213Let F n,m be some class of randomized social choice functions over n agents and m alternatives. For any f ∈ F n,m, we can adopt the usual perspective, where f : (Sm)n → (cid:4)( A) maps preference profiles into distributions over alternatives—in this case, we focus on the generalized dimension of F n,m, by which we refer to the generalized dimension of the correspondence defined by mapping (cid:6)u to the support of f ((cid:6)u). We can take a different perspective by transforming f as follows: define ˆf ((cid:6)u) = E[sw( f ( (cid:6)σ ((cid:6)u)), (cid:6)u)], where ˆf maps a utility profile (cid:6)u into the expected social welfare realized by applying f to the preference profile (cid:6)σ ((cid:6)u) induced by (cid:6)u. Define ˆF n,m = { ˆf : f ∈ F n,m}. With this view, we focus on the pseudo-dimension ofˆF n,m. These are not unrelated:Lemma 5.2. For any set of randomized social choice functions F n,m, D G (F n,m) ≤ D P ( ˆF n,m).Proof. Assume D G (F n,m) = d. Let (cid:6)σ 1, . . . , (cid:6)σ d be d preference profiles that are shattered by F n,m, and let f , g ∈ F n,m be two social choice functions that differ on each of these profiles. Define utility profiles (cid:6)u1, . . . , (cid:6)ud that induce (cid:6)σ 1, . . . , (cid:6)σ dsuch that E[sw( f ( (cid:6)σ i), (cid:6)ui)] (cid:15)= E[sw(g( (cid:6)σ i), (cid:6)ui)] for all i; this is always possible using some small perturbation in the utility of a relevant candidate. For each i ≤ d, let ti = (E[sw( f ( (cid:6)σ i), (cid:6)ui)] + E[sw(g( (cid:6)σ i), (cid:6)ui)])/2.= 1 and ˆh((cid:6)ui) < tid) ∈ {0, 1}, we need to show that there is some ˆh ∈ ˆF n,m such that ˆh((cid:6)ui) ≥ ti if bGiven any (b(cid:7)= 0. Let (b1, . . . , bd) be a binary vector which we set as follows: if E[sw( f ( (cid:6)σ i), (cid:6)ui)] ≥ ti and E[sw(g( (cid:6)σ i), (cid:6)ui)] < ti , set if bi(cid:7)(cid:7)i ; otherwise if E[sw( f ( (cid:6)σ i), (cid:6)ui)] < ti and E[sw(g( (cid:6)σ i), (cid:6)ui)] ≥ ti , set bi = 1 − bi . Since F n,m shatters (cid:6)σ 1, . . . , (cid:6)σ d, there is bi = ban h ∈ F n,m that serves as a witness for (cid:6)σ 1, . . . , (cid:6)σ d w.r.t. (b1, . . . , bd). By construction, its corresponding ˆh ∈ ˆF n,m serves as a witness (relative to ˆf , ˆg) to the shattering of the same d profiles given (bd). Hence D P ( ˆF n,m) is at least d. (cid:2)(cid:7)1, . . . , b(cid:7)1, . . . , b(cid:7)i(cid:7)(cid:7)5.2. Sample-based optimizationLet F n,m be some class of social choice functions from which we must select an optimal function frelative to some (possibly unknown) distribution D over utility profiles. We assume access to t sampled profiles, (cid:6)u1, . . . , (cid:6)ut . These may be samples from a population of interest, or drawn randomly from a generative model or known distribution. For each (cid:6)ui , we also sample, generate, or compute the corresponding (possibly random, due to ties) preference profile (cid:6)σ i . We treat these collectively as our sample: T = [((cid:6)u1, (cid:6)σ 1), . . . , ((cid:6)ut, (cid:6)σ t)]. A sample-optimal social choice function for sample T is∗ˆf ∈ argmaxf ∈F n,mt(cid:4)i=1Ef ( (cid:6)σ i )[sw( f ( (cid:6)σ i), (cid:6)ui)].In a learning-theoretic sense, ˆfsample-based optimization problem.is the empirical risk minimizer, while from an optimization standpoint, ˆfis the solution to a In a sample-based model, we must content ourselves with approximate optimality. Let fbe an optimal social choice function w.r.t. distribution D. We say a social choice function ¯fis ε-optimal for some ε ≥ 0 if, for any utility profile (cid:6)u,∗E[sw( ¯f ( (cid:6)σ ((cid:6)u)), (cid:6)u)] ≥ E[sw( f∗( (cid:6)σ ((cid:6)u)), (cid:6)u)] − ε.This definition will also be used relative to restricted classes of functions F n,m .5.3. Sample complexity of k-approvalWe first consider the class of social choice functions known as k-approval functions. For any 1 ≤ k ≤ m − 1, the k-approval function is the scoring function, denoted fk, with score vector (cid:6)sk = (1, 1, . . . , 0, 0) that has exactly k ones and m − k zeros. We assume ties among highest-scoring alternatives are broken uniformly at random.Given distribution D, the optimal k-approval function—where our only choice is over the value of k—maximizes expected social welfare w.r.t. D. We denote this function by f Dk∗ . With only a collection of t sample profiles, the best we can attain is approximate optimality with the sample-optimal function ˆf . We determine the required sample complexity t, that is, the number of samples needed to ensure that ˆfis approximately optimal to some desired degree ε with high probability 1 − δ(for some δ > 0).Our class of social choice functions is very limited: let F n,mapp = { fk : 1 ≤ k ≤ m − 1} be the class of k-approval functions with n agents and m alternatives. Define, as above, ˆF n,mapp }. Let sck( (cid:6)σ , a) be the k-approval score of a ∈ Aunder preference profile (cid:6)σ . Sample complexity depends on the pseudo-dimension of k-approval functions; since there are only m − 1 such functions, we can provide an immediate upper bound using Observation 5.1:app = { ˆfk : fk ∈ F n,mObservation 5.3. D P ( ˆF n,mapp ) ≤ log2(m − 1).This bound is asymptotically tight:C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213201Theorem 5.4. For all m ≥ 6 and n ≥ 2m − 3, D P ( ˆF n,mapp ) = (cid:2)(log m).Proof. Let d ≥ 1 be an integer. We will show that the generalized dimension D G (F n,mapp ) of k-approval functions on pref-erence profiles with m ≥ 2d+1 + 2 alternatives and n ≥ 2d+2 + 1 agents is at least d. We will first construct d preference profiles (cid:6)σ 1, (cid:6)σ 2, . . . , (cid:6)σ d with exactly 2d+1 + 2 alternatives, including two special ones a and b, and exactly 2d+2 + 1 agents with the following property. For any integers k = 2, 3, . . . , 2d + 1 and t = 1, 2, . . . , d, k-approval returns as the sole winner in profile (cid:6)σ t :• alternative a, if the t-th bit in the binary representation of k − 2 is 1, and• alternative b otherwise.Then, we will show how to easily extend our construction for m ≥ 2d+1 + 2 alternatives and n ≥ 2d+2 + 1 agents. As a corollary, we will have obtained that the particular sample of d profiles is shattered by the class of k-approval functions. The theorem will then follow by Lemma 5.2 and by the relation between d, m, and n.Our construction for preference profile (cid:6)σ t is as follows. The set of alternatives contains the two special alternatives aand b as well as two disjoint sets of alternatives A1 and A2, each of size 2d. Each profile has 2d+2 + 1 agents partitioned into five disjoint sets: a set of 2d agents Nq for q = 1, 2, 3, 4, and an extra agent. For q ∈ {1, 2}, the agents in Nq rank alternatives a and b in the first two positions (in arbitrary order), then the alternatives in Aq (in arbitrary order), and then the alternatives in A3−q (again, in arbitrary order). All the agents in N3 rank alternative a last. For j = 0, 1, . . . , 2d−t − 1, 2t agents of N3 rank alternative b in position 2 + j2t . The remaining top 2d + 1 positions in the ranking of each agent in N3 are occupied by alternatives in A1 in arbitrary order; the next 2d positions are occupied by alternatives in A2 (again, in arbitrary order). All the agents in N4 rank alternative b last. For j = 0, 1, . . . , 2d−t − 1, 2t agents of N4 rank alternative a in position 2 + 2t−1 + j2t . The remaining top 2d + 1 positions in the ranking of each agent in N4 are occupied by alternatives in A2 in arbitrary order; the next 2d positions are occupied by alternatives in A1 (again, in arbitrary order). Finally, the extra agent ranks alternative a first, alternative b last, and the alternatives in A1 ∪ A2 in between in arbitrary order.Now, note that each alternative in Aq is ranked in the first 2d + 1 positions by at most 2d+1 + 1 agents (the agents in Nq ∪ N2+q and, possibly, the extra agent). Hence, the k-approval score of each alternative in A1 ∪ A2 is at most 2d+1 + 1for every k in {2, . . . , 2d + 1}. Also, observe that alternative b is ranked in one of the top two positions by at least 2d+1 + 2agents (the agents in N1 ∪ N2 as well as 2t agents of N3). Hence, no alternative from A1 ∪ A2 is a winner in profile (cid:6)σ tunder k-approval, for t = 1, . . . , d and k = 2, . . . , 2d + 1.It remains to compute the k-approval score of alternatives a and b. Consider profile (cid:6)σ t . Observe that, for every k =2, . . . , 2d + 1, the number of agents in N3 that rank alternative b in the top k positions is(cid:10)(cid:8)(cid:9)(cid:11)(cid:9)(cid:10)2tk − 22t+ 1= 2tk − 2 + 2t2tand similarly the number of agents in N4 that rank alternative a in the top k positions is 2t (cid:18) k−2+2t−1(cid:19). Hence, the k-approval scores of a and b are 2d+1 + 1 + 2t(cid:18) k−2+2t−1(cid:19), respectively. Let bt be the t-th least significant bit in the binary representation of k − 2 and let λ, ν be unique integers such that 0 ≤ λ ≤ 2t−1 − 1, 0 ≤ ν ≤ 2d−t − 1, and k − 2 = λ + bt 2t−1 + ν2t . Then,(cid:19) and 2d+1 + 2t(cid:18) k−2+2t2t2t2t(cid:9)k − 2 + 2t−12t(cid:10)(cid:9)− 2t(cid:10)k − 2 + 2t2t(cid:10)sck(a, (cid:6)σ t) − sck(b, (cid:6)σ t) = 1 + 2t(cid:9)(cid:9)(cid:9)= 1 + 2t= 1 + 2t= 1 + 2tλ + bt 2t−1 + ν2t + 2t−12tλ + bt 2t−1 + ν2t + 2t−12t(cid:10)λ + bt 2t−1 − 2t−12t(cid:9)λ + bt 2t−1 + ν2t + 2t2t(cid:10)− 2t(cid:10)− 2t(ν + 1)= 1 + 2t(bt − 1),where the third and fifth equalities hold because 0 ≤ λ ≤ 2t−1 − 1 (and bt ∈ {0, 1}). Using the fact that t ≥ 1, observe that sck(a, (cid:6)σ t) − sck(b, (cid:6)σ t) is strictly positive if bt = 1 and strictly negative if bt = 0. Hence, the sole winner under k-approval is alternative a if bk = 1 and alternative b otherwise.To complete the proof, it suffices to modify the construction above and capture the more general case of m ≥ 2d+1 + 2alternatives and n ≥ 2d+2 + 1 agents as follows. Each of the 2d+2 + 1 agents in the above construction ranks the m − 2d+1 − 2additional alternatives in the last positions of its ranking. In addition to these agents, there are n − 2d+2 − 1 agents that rank alternatives a and b in the first two positions (in arbitrary order) and then the remaining alternatives (again, in arbitrary 202C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213order). These modifications do not change the winner of profile (cid:6)σ t under k-approval for every k ∈ {2, 3, . . . , 2d + 1}. This is due to the facts that alternative b still has strictly higher k-approval score than any other alternative different than a(alternative b is ranked above all alternatives besides a by the additional agents and is clearly ranked above the additional alternatives by all agents), and the difference in the k-approval scores between a and b is not affected by the additional agents (since k ≥ 2). (cid:2)Observation 5.3 and Theorem 5.4 show that D P ( ˆF n,mapp ) = (cid:12)(log m) provided that n ≥ 2m − 3. Standard learning-theoretic results [2] allow us to bound sample complexity for optimizing k-approval (within a constant factor).Theorem 5.5. For any ε, δ > 0, there exists a C > 0 such that if t ≥ C log(m/δ)/ε2, then for any distribution D over utility profiles, with probability at least 1 − δ over t i.i.d. utility profiles, the sample-optimal k-approval function ˆfk is ε-optimal for D. Furthermore, (cid:7) > 0 such that no algorithm can construct an ε-optimal k-approval function, with probability at least for n ≥ 2m − 3, there is a C(cid:7)1 − δ, if t < Clog(m/δ)/ε2.5.4. Sample complexity of scoring functionsThe class of k-approval functions is quite restrictive, so we now consider construction of an approximately optimal scoring function without restricting score vector structure. Limiting attention to scoring functions does not ensure optimality within the class of arbitrary functions. However, it is a natural restriction, first, because of the prominence of scoring functions as illustrated above, and second, because of the natural interpretation and appeal of such social choice functions.9: (cid:6)s ∈ Rm} be the class of all scoring functions with n agents and m alternatives. We again assume ties among highest-scoring alternatives are broken uniformly at random. Define ˆF n,m}. We derive the sample complexity for scoring functions, i.e., the number of sampled utility profiles needed to ensure that the sample-optimal ˆf(cid:6)s is ε-optimal for some desired ε, with probability at least 1 − δ.Let f(cid:6)s denote the scoring (social choice) function induced by score vector (cid:6)s, and let F n,m∈ F n,ms= { ˆf(cid:6)s= { f(cid:6)s: f(cid:6)sssWe first bound the pseudo-dimension of ˆF n,m. Procaccia et al. [28] prove a lower bound of m − 3 on D G (F n,m) for all ssn ≥ 4 and m ≥ 4. By Lemma 5.2, we obtain the following statement.Corollary 5.6. For all n ≥ 4 and m ≥ 4, D P ( ˆF n,ms) ≥ m − 3.In the same paper, Procaccia et al. [28] prove that the number of distinct scoring functions is at most 2O(m2 log n). Even though their original result assumes a deterministic tie-breaking rule, their proof can be adapted for randomized tie-breaking. Using this bound together with Observation 5.1, we immediately obtain that D P ( ˆF n,m) = O(m2 log n). We can derive a significantly better upper bound that depends only on m:sTheorem 5.7. D P ( ˆF n,ms) = O(m log m).We require the following result of Warren [33] (though we use an extension due to Alon [1], where the signum function takes values in {−1, 0, 1}):Lemma 5.8. (See [33,1].) Let P be a set of K polynomials of degree τ on (cid:14) real variables. Then, the number of different sign patterns P(cid:12)may have is at most (cid:13)(cid:14).8eτ K(cid:14)In the context of the lemma, a sign pattern is a vector of values in {−1, 0, 1} that is obtained by applying each polynomial in P to the same input.Proof of Theorem 5.7. Let A be a set of m ≥ 3 alternatives. Consider a sample of d preference profiles (cid:6)σ 1, (cid:6)σ 2, . . . , (cid:6)σ dfrom (Sm)n, corresponding utility profiles (cid:6)u1, . . . , (cid:6)ud, and real thresholds t1, t2, . . . , td such that for every binary vector bif bi = 1 and with d entries, there exists a scoring function f(cid:6)sbE[sw( f(cid:6)sb ( (cid:6)σ i), (cid:6)ui)] < ti otherwise. Denote by F ∗ ⊆ F n,mthe set of these scoring functions. We will show that d < 6m log2 m.= {a ∈ A : sw(a, (cid:6)ui) ≥ ti} and A= {a ∈ A :−i are non-empty. In addition, for i = 1, . . . , dFor i = 1, . . . , d, we partition the set of alternatives A into the sets A, with score vector (cid:6)sb, such that E[sw( f(cid:6)sb ( (cid:6)σ i), (cid:6)ui)] ≥ tisw(a, (cid:6)ui) < ti}. By definition of the scoring functions in F ∗and any pair of alternatives a, the sets A, define the function+i and A+ ∈ A− ∈ A+i−is+i and a−i9 Optimization over the class of arbitrary social choice functions may well give results that cannot be communicated without enumerating all possible profiles.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213203a+,a− ((cid:6)s) = sc(cid:6)s(aLi+, (cid:6)σ i) − sc(cid:6)s(a−, (cid:6)σ i).This is a linear function on m variables, the entries of the score vector (cid:6)s. Let sgn : R → {−1, 0, 1} denote the signum function. under f(cid:6)s on profile (cid:6)σ i is lower than, equal to, or higher The sign of Li−than the score of alternative a, respectively. Let L denote the collection of the functions above and observe that there are at most dm2/4 such functions.a+,a− ((cid:6)s) denotes whether the score of alternative a+We will show that the score vectors of the functions in F ∗define at least 2d different sign patterns for L. Consider = 0. For k ∈ {0, 1}, let = 1 and b0i∩ A1bk ( (cid:6)σ i). Observe that the sets A+itwo binary vectors b1 and b0 that differ in the i-th coordinate. W.l.o.g., assume that b1iAk = argmaxa∈ A−and Aibk (a, (cid:6)σ i)} be the set of alternatives with the highest score under f(cid:6)sb0 ( (cid:6)σ i), (cid:6)ui)] < ti .∩ A0 are non-empty since E[sw( f(cid:6)s{sc(cid:6)sb1 ( (cid:6)σ i), (cid:6)ui)] ≥ ti and E[sw( f(cid:6)s∩ A1 and a0 ∈ AWe claim that there are two alternatives a1 ∈ A−∩ A0 such that either a0 /∈ A1 or a1 /∈ A0. Assume i∩ ( A0 \ A1) = ∅. Hence, for every a ∈ A0 \ A1 (if any) that this is not the case; it follows that A−it holds that a ∈ Ai and hence sw(a, (cid:6)ui) < ti . Using these observations together with the fact that f(cid:6)sb1 ( (cid:6)σ i) and f(cid:6)sb0 ( (cid:6)σ i) select the winning alternative uniformly at random among A1 and A0, respectively, and E[sw( f(cid:6)sb1 ( (cid:6)σ i), (cid:6)ui)] ≥ ti > E[sw( f(cid:6)sb0 ( (cid:6)σ i), (cid:6)ui)], we obtaini and hence sw(a, (cid:6)ui) ≥ ti . Similarly, for every alternative a ∈ A1 \ A0 (if any) it holds that a ∈ A∩ ( A1 \ A0) = ∅ and A−i+i+i+(cid:4)(cid:4)(cid:4)sw(a, (cid:6)ui) =sw(a, (cid:6)ui) +sw(a, (cid:6)ui) ≥ | A1| · ti + | A0 \ A1| · tia∈ A1∪ A0a∈ A1a∈ A0\ A1= | A0| · ti + | A1 \ A0| · ti >(cid:4)=a∈ A1∪ A0sw(a, (cid:6)ui),(cid:4)a∈ A0sw(a, (cid:6)ui) +(cid:4)a∈ A1\ A0sw(a, (cid:6)ui)a contradiction.If a1 ∈ A1 \ A0, this means that sc(cid:6)sb1 (a1, (cid:6)σ i) ≥ sc(cid:6)sb1 (a0, (cid:6)σ i) and sc(cid:6)sb0 (a1, (cid:6)σ i) < sc(cid:6)sb0 (a0, (cid:6)σ i) (i.e., Lia1,a0Lia1,a00 and Li((cid:6)sb0 ) < 0). Similarly, if a0 ∈ A0 \ A1, then sc(cid:6)sb1 (a1, (cid:6)σ i) > sc(cid:6)sb1 (a0, (cid:6)σ i) and sc(cid:6)sb0 (a1, (cid:6)σ i) ≤ sc(cid:6)sb0 (a0, (cid:6)σ i) (i.e., Li((cid:6)sb0 ) ≤ 0). Both cases imply that the sign patterns of L corresponding to (cid:6)sb1 and (cid:6)sb0 are different.a1,a0((cid:6)sb1 ) ≥ 0 and ((cid:6)sb1 ) >a1,a0Hence, we have obtained a lower bound of 2d on the number of different sign patterns of L. By applying Lemma 5.8(with K ≤ dm2/4, τ = 1, and (cid:14) = m), we obtain an upper bound of (2edm)m on the number of different sign patterns for L. Hence, 2d ≤ (2edm)m and, equivalently, 2d/dm ≤ (2em)m.For the sake of contradiction, assume that d ≥ 6m log2 m and observe that 2d/dm increases with d in this range. Then, (cid:12)which, together with the above inequality, yields m4 ≤ 12e log2 m; a contradiction since m ≥ 3. (cid:2)2d/dm ≥m66m log2 m(cid:13)mAgain, standard results allow us to bound the sample complexity:Theorem 5.9. For any ε, δ > 0, there exists a C > 0 such that if t ≥ C[m log2 m + log(1/δ)]/ε2, then for any distribution D over utility profiles, with probability at least 1 − δ over t i.i.d. utility profiles, the sample-optimal scoring function ˆf(cid:6)s is ε-optimal for D. (cid:7) > 0 such that no algorithm can construct an ε-optimal scoring function, with probability at least 1 − δ, if Furthermore, there is a C(cid:7)[m + log(1/δ)]/(cid:7)2.t < C5.5. Computing optimal scoring functionsWe now turn our attention to the question of computing approximately optimal scoring functions. Specifically, given a sample T = [((cid:6)u1, (cid:6)σ 1), . . . , ((cid:6)ut, (cid:6)σ t)], we must compute the scoring vector (cid:6)s corresponding to the sample-optimal scoring function ˆf(cid:6)s:ˆf(cid:6)s∈ argmaxf(cid:6)st(cid:4)i=1Ef(cid:6)s( (cid:6)σ i)[sw( f(cid:6)s( (cid:6)σ i), (cid:6)ui)].This problem turns out to be computationally hard.Theorem 5.10. Computing the sample-optimal scoring function is APX -hard.The theorem, whose proof appears in Appendix B, implies that, if P (cid:15)= N P , the problem does not even admit a polyno-mial time approximation scheme.204C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213On the positive side, we formulate the problem of computing sample-optimal scoring functions as a MIP. Its primary variables are the scores si . We describe key variables and constraints in the MIP in turn.10Any scoring vector (cid:6)s = (s1, . . . , sm) can be normalized without impacting the choice function, so we constrain (cid:6)s as follows:s1 + · · · + sm = 1,si ≥ si+1 ∀i ≤ m − 1,and sm ≥ 0.(4)Ties are again broken uniformly at random. Function f(cid:6)s selects an alternative for each (cid:6)σ i . To encode this, first abbreviate the score of a given (cid:6)σ i via the linear expressionsc(a, (cid:6)σ i) =m(cid:4)j=1J ajis j ∀a ∈ A, i ≤ t,(5)where J aji is the number of agents in (cid:6)σ i that rank a in position j. Note that J aji is a constant and sc(a, (cid:6)σ i) ∈ [0, n] is continuous as a function of (cid:6)σ i . Let Iabi, for any alternatives a (cid:15)= b and i ≤ t, be a binary variable indicating whether a’s score is at least that of b given (cid:6)σ i . We encode this as follows:(n + γ )Iabi − γ ≥ sc(a, (cid:6)σ i) − sc(b, (cid:6)σ i) ∀i ≤ t, a (cid:15)= b,nIabi − n ≤ sc(a, (cid:6)σ i) − sc(b, (cid:6)σ i) ∀i ≤ t, a (cid:15)= b,(6)(7)where γ is a (fixed) parameter that handles optimization-dependent floating point accuracy (corresponding to the level of discretization among scores). If the score difference is non-negative then constraint (6) forces Iabi = 1 and (7) must be satisfied. If the difference is negative, then (7) forces Iabi = 0 and (6) is satisfied. Let binary variable Iai indicate if a is selected (possibly tied), given (cid:6)s under (cid:6)σ i . We require:(cid:4)(cid:4)m − 2 + Iai ≥and (m − 1)Iai ≤Iabi ∀a, i ≤ t.Iabib:b(cid:15)=ab:b(cid:15)=a(8)Our objective is to choose (cid:6)s to maximize the average social welfare over our samples; however, we must account for random tie-breaking, leading to the following objective:t(cid:4)i=1max(cid:6)s,I(cid:2)(cid:2)a sw(a, (cid:6)ui) · Iaia Iai.We can linearize the objective using indicator variables Ski, for k ≤ m and i ≤ t, where Ski = 1 iff k =m(cid:4)k=1kSki =(cid:4)aIaiandm(cid:4)k=1Ski = 1 ∀i ≤ t.Our objective then becomest(cid:4)m(cid:4)i=1k=1max(cid:6)s,I,S(cid:2)a sw(a, (cid:6)ui) · Iaik· Ski.Finally, let Z aki indicate if Iai · Ski = 1, which is encoded as1 + Z aki ≥ Iai + Ski and 2 Z aki ≤ Iai + Ski ∀a ∈ A, k ≤ m, i ≤ t.Pulling these together, our MIP is:t(cid:4)m(cid:4)(cid:4)1max(cid:6)s,I,S, Zi=1subject to (4, 6, 7, 8, 9, 10),k=1asw(a, (cid:6)ui) · Z akik(cid:2)a Iai, requiring that(9)(10)(11)which has (2m2 + m + 1)t variables and 4m2t + 2t + m + 1 constraints.10 With suitable constraints on scores, the MIP can be used to compute optimal k-approval functions; however, direct evaluation of the small number of such restricted functions is feasible (if m is small).C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213205Fig. 2. Histograms of distortion ratios for uniform and jester experiments (average distortions are shown).5.6. ExperimentsWe now empirically investigate the performance of both average-case optimal social choice functions and sample-optimal scoring functions by measuring their distortion. In the former case, we consider random utility profiles, while in the latter, we use a real data set with user-provided ratings of alternatives as a surrogate for utilities.Our first experiment (uniform) investigates the uniform utility distribution described in Section 4. While Borda op-timizes expected social welfare in this model (Corollary 4.5), it may not minimize distortion. We empirically measure its expected distortion by randomly generating t = 1000 profiles from the uniform model for various values of m and n, and computing the distortion of Borda count (vis-à-vis the socially optimal alternative). Results are shown in the four leftmost histograms of Fig. 2. Each histogram shows the distortions of the 1000 utility profiles, for a fixed m and n (note the log-arithmic scaling on the y-axis). Clearly, overall distortion is very small: average distortion is much less than 1.01 in each case, and never exceeds 1.1 for any random profile. We also see that average distortion decreases as either m or n increases.Our second experiment uses the jester dataset [14], which consists of 4.1M user ratings of 100 different jokes by over 60,000 users. Ratings are on a continuous scale between [−10, 10], which we rescale to the range [0, 20]. We define the set of alternatives to be the eight most-rated jokes, and draw agents from the set of 50,699 users who rated all eight. We create a sample of 100 “training profiles” from this data set, each with 100 voters, and use this sample to learn an approximately ∗ = (0.25, 0.15, 0.14, 0.13, 0.12, 0.11, 0.1, 0.0). Note the signif-optimal scoring function.11 The score vector that results is (cid:6)sicant dip from s1 to s2, the gradual drop to s7, then the significant drop to s8, which is rather “un-Borda-like.” We divide the remaining users into 406 test profiles (each with 100 users), and evaluate the distortion of the learned function f(cid:6)s∗on each. For comparison, we also evaluate the Borda, harmonic and 3-approval functions on the same profiles. Results are shown in the four rightmost histograms of Fig. 2. We see clearly that distortion is almost negligible for the f(cid:6)s∗ , Borda and harmonic functions, with average distortion less than 1.009 (and at worst roughly 1.1). By contrast, 3-approval is somewhat worse, with average distortion of 1.0113 (and in the worst case about 1.15). The sample-optimal function f(cid:6)s∗ performs slightly worse than Borda, due to mild overfitting on the training profiles (note that the theoretical sample complexity for this problem is much greater than the 100 samples used). These results are of course limited, and merely suggestive; but they do indicate that scoring functions, either empirically optimized, or relying on stylized scoring vectors like Borda and harmonic score, can very closely approximate optimal social choice functions in practice.6. DiscussionOur work offers three different but related perspectives on utilitarian social choice. Each model makes fundamentally dif-ferent assumptions about the mechanism’s knowledge of the agents’ utility information. In the worst-case model, we study the distortion of randomized social choice functions assuming no information about the underlying utilities. In the average-case model, we derive the optimal social choice function with respect to distributions that are i.i.d. and neutral. Finally, in the learning-theoretic model, we develop a method for approximately optimizing (scoring-based) social choice functions under arbitrary utility distributions, establish sample complexity bounds and provide encouraging empirical results.Our work raises a number of important questions and directions for future research. Access to sampled utility profiles, as assumed in our learning-theoretic model, may be difficult to obtain in practice. However, techniques from decision analysis 11 CPLEX 12.2 on a modern workstation took 23.6 hrs. to solve the resulting MIP (accuracy gap of 1.52%).206C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213and preference elicitation using lotteries, or more readily comprehensible queries involving simple comparisons, can be used to assess the utility functions of specific agents [9], while econometric techniques often use revealed preference or stated choice data to develop probabilistic models of utilities [20]. Applying these methods to the design of optimal (ranking-based) social choice functions is an important direction for future work.One of our motivations is to reduce the cognitive and communication burden associated with utilities or valuations by allowing the agents to specify rankings. This burden can be further reduced by intelligent elicitation of partial ranking information [19,22]. Our utilitarian model offers a novel perspective on vote elicitation and raises the possibility of designing schemes that perform well with respect to utilitarian social welfare.The utilitarian perspective also suggests new ways of assessing the potential manipulation of social choice functions. By assuming agents have utility functions, and probabilistic information about the utilities of their counterparts, one can quantify the gains of potential misreports in terms of expected utility, providing a Bayesian view of manipulation [23]. The design of scoring functions that make appropriate trade-offs between degree of optimality and degree of manipulability is another important problem to which our methods may be adapted.AcknowledgementsWe thank Yury Makarychev, Hervé Moulin, and Tasos Sidiropoulos for helpful discussions, and the anonymous referees for valuable comments. Boutilier and Lu were supported by NSERC. Procaccia was supported in part by the NSF under grants IIS-1350598 and CCF-1215883, and by a Sloan Research Fellowship. Sheffet was supported in part by the NSF under grants CCF-1101215 and CCF-1116892 as well as by the MSR-CMU Center for Computational Thinking.Appendix A. Proof of Theorem 3.3We begin by defining a randomized social choice function f . For a non-negative integer i, define the sets of alterna-tives B i( (cid:6)σ ) as follows. Set B0( (cid:6)σ ) consists of all alternatives in A. For i ≥ 1, an alternative a ∈ B i−1( (cid:6)σ ) belongs to B i( (cid:6)σ ) if there exists a utility profile (cid:6)ua ∈ p−1( (cid:6)σ ) in which a has maximum social welfare and, furthermore,|B(cid:14)( (cid:6)σ )|√m3sw(a, (cid:6)ua) ≥(cid:4)a(cid:7)∈B(cid:14)( (cid:6)σ )sw(a(cid:7), (cid:6)ua)(12)for all (cid:14) ∈ {0, i − 1}.Given the preference profile (cid:6)σ ∈ (Sm)n, our randomized social choice function f first computes the sets B 0( (cid:6)σ ), m or Bk+1( (cid:6)σ ) = ∅. Deciding whether an B1( (cid:6)σ ), . . . , Bk( (cid:6)σ ) where k is the smallest integer such that either |Bk( (cid:6)σ )| < 3alternative of B i−1( (cid:6)σ ) is included in B i( (cid:6)σ ) can be done in polynomial time by checking the feasibility of a straightforward linear program. Then, the function f picks an integer i ∈ {0, . . . , k} uniformly at random, and selects equiprobably among the alternatives in B i( (cid:6)σ ).√√m · log∗m). Specifically, we will establish that the distortion is less than 3In the remainder of the proof we show that for every (cid:6)σ ∈ (Sm)n, dist( f , (cid:6)σ ) = O(m(logGiven a preference profile (cid:6)σ , consider a utility profile (cid:6)u consistent with (cid:6)σ , and let am + 1) for m ≥ 9.√∗∗social welfare. Let t be the largest integer in {0, 1, . . . , k} such that aand |Bk( (cid:6)σ )| < 3m; f picks alternative awith probability higher than √∗be an alternative with the highest ∗ ∈ Bt( (cid:6)σ ). First consider the special case where t = k.mdoes not belong to set Bt+1( (cid:6)σ ). This means that (cid:6)u (and every other utility profile ∗13(k+1)√in pIn any other case, alternative a−1( (cid:6)σ ) in which a(cid:4)∗1|B(cid:14)( (cid:6)σ )|sw(aa(cid:7)∈B(cid:14)( (cid:6)σ )(cid:7), (cid:6)u) >1√3msw(a∗, (cid:6)u)has the highest social welfare) satisfiesfor some (cid:14) ∈ {0, t}. With probability 1welfare is at leastk+1 , the algorithm picks a random alternative from B(cid:14)( (cid:6)σ ). Therefore, its expected social 1(k + 1)|B(cid:14)( (cid:6)σ )|(cid:4)a(cid:7)∈B(cid:14)( (cid:6)σ )sw(a(cid:7), (cid:6)u) >1√3(k + 1)msw(a∗, (cid:6)u).The theorem will follow by proving that k ≤ logi ≥ 1 such that |B i−1( (cid:6)σ )| ≥ 3m, it holds that√∗m. To do this, we assume that m ≥ 9, and show that, for every integer 2|B i( (cid:6)σ )|√m3≤ log22|B i−1( (cid:6)σ )|√m3.(13)This implies that |Blog∗ (cid:14)2√m/3(cid:15)( (cid:6)σ )| < 3m and, hence,√k ≤ log∗(cid:14)√(cid:15)2m/3∗≤ logm.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213207The remainder of the proof is therefore devoted to establishing Equation (13).In the following, we will show that inequality (13) is true for i ≥ 1 assuming that |B i−1( (cid:6)σ )| ≥ 3m. For each alternative a ∈ B i( (cid:6)σ ), let (cid:6)ua be a utility profile satisfying inequality (12). For such an alternative, denote by N1(a) the set of agents which rank less than |Bi−1( (cid:6)σ )|(cid:4)alternatives of B i−1( (cid:6)σ ) above a. Let N2(a) = N \ N1(a). Also, for s ∈ {1, 2}, let(cid:4)√m√U s =uaj(a).a∈B i ( (cid:6)σ )j∈Ns(a)First, observe that for each agent j ∈ N2(a), there are at least |Bi−1( (cid:6)σ )|√alternatives a(cid:7)of B i−1( (cid:6)σ ) with uaj(a(cid:7)) ≥ uaj(a). mHence, we have(cid:4)(cid:4)a∈B i ( (cid:6)σ )a(cid:7)∈B i−1( (cid:6)σ )sw(a(cid:7), (cid:6)ua) =≥≥(cid:4)(cid:4)(cid:4)a∈B i ( (cid:6)σ )(cid:4)a(cid:7)∈B i−1( (cid:6)σ )(cid:4)j∈N(cid:4)uaj(a(cid:7))uaj(a(cid:7))j∈N2(a)a(cid:7)∈B i−1( (cid:6)σ )(cid:4)(cid:4)a∈B i ( (cid:6)σ )|B i−1( (cid:6)σ )|√ma∈B i ( (cid:6)σ )j∈N2(a)j(a) =ua|B i−1( (cid:6)σ )|√mU 2.In addition, since each alternative in B i( (cid:6)σ ) satisfies inequality (12) for (cid:14) = i − 1, we have|B i−1( (cid:6)σ )|√m|B i−1( (cid:6)σ )|√sw(a, (cid:6)ua) =(U 1 + U 2)., (cid:6)ua) ≤sw(a(cid:4)(cid:4)(cid:4)m33(cid:7)a∈B i ( (cid:6)σ )a(cid:7)∈B i−1( (cid:6)σ )a∈B i ( (cid:6)σ )It follows from (14) and (15) that U 1 ≥ 2U 2. Now, using inequality (12) for (cid:14) = 0, we have3U 1 ≥ 2(U 1 + U 2) = 2j(a) = 2uasw(a, (cid:6)ua)(cid:4)(cid:4)(cid:4)√≥ 6m|B0( (cid:6)σ )|j∈Na∈B i ( (cid:6)σ )(cid:4)(cid:4)sw(aa∈B i ( (cid:6)σ )a(cid:7)∈B0( (cid:6)σ )a∈B i ( (cid:6)σ )(cid:7), (cid:6)ua) = 6n√m|B i( (cid:6)σ )|,where the last equality follows from Assumption 3.1 and the fact that |B0( (cid:6)σ )| = m. Also, observe that U 1 is upper-bounded by the total harmonic score of alternatives in the first (cid:20)|B i−1( (cid:6)σ )|/m(cid:21) positions in each agent’s preference, i.e.,√3U 1 ≤ 3nH(cid:20)|B i−1( (cid:6)σ )|/√m(cid:21) ≤ 9n log22|B i−1( (cid:6)σ )|√m3,where Hk is the kth harmonic number. The second inequality follows from the fact that |B i−1( (cid:6)σ )| ≥ 32t3 log2complete. (cid:2)m and H(cid:20)t(cid:21) ≤3 for every t ≥ 3. By (16) and (17), we obtain inequality (13) as desired. The proof of Theorem 3.3 is therefore √Appendix B. Proof of Theorem 5.10We will use a reduction from Independent Set in 3-regular graphs and an explicit inapproximability result due to Berman and Karpinski [6].Theorem 6.1. (See Berman and Karpinski [6].) Given a 3-regular graph G with 284T nodes and 426T edges for some integer T ≥ 2and any constant (cid:7) ∈ (0, 1/2), it is N P -hard to distinguish between the following two cases:• G has an independent set of size at least (140 − (cid:7))T .• Any independent set of G has size at most (139 + (cid:7))T .The proof of Theorem 6.1 in [6] can be thought of as a polynomial-time reduction that transforms an instance φ of the generic N P -hard problem of Satisfiability to an instance of Independent set on a 284T -node 3-regular graph. The reduction is such that G has an independent set of size (140 − (cid:7))T if φ is satisfiable while any independent set of Ghas size at most (139 + (cid:7))T otherwise. Our reduction will use the particular instances in the proof of [6]. Given such an instance with an integer parameter T ≥ 2 and any constant (cid:7) ∈ (0, 1/2), our reduction constructs in polynomial time a (14)(15)(16)(17)208C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213Rank12··vv + 1v + 2··|V | + 1|V | + 2|V | + 3··2|V |2|V | + 1··3|V | − 1N1×(2T − 2)a1a2··N2×140Ta1a2··N3×(2T − 2)b1b2··N4×140Tb1b2··avav+1av+2··b1c2c3··c|V |b2··b|V |avb1av+1··a|V |c2c3··c|V |b2··b|V |bvbv+1bv+2··a1a2a3··a|V |c2··c|V |a1bvbv+1··b|V |a2a3··a|V |c2··c|V |N5×1b1c2c vc v+1c v+2a1b2b3b|V |a2a|V |Fig. 3. The preference profile corresponding to node v. The corresponding utility profile (cid:6)u v is such that sw(a1, (cid:6)u v ) = 70T , sw(b1, (cid:6)u v ) = T , and sw(a, (cid:6)u v ) ≤ Tfor alternative a different than a1 and b1, so that it uniquely induces (cid:6)σ v .family of 710T utility profiles that uniquely defines a family R of corresponding preference profiles for some integer T ≥ 2, so that:• If the input graph has an independent set of size at least (140 − (cid:7))T , then there is a scoring vector (cid:6)s such that the total expected social welfare of the winning alternatives under f(cid:6)s over all profiles in R is at least (39,764 − 69(cid:7))T 2.• If any independent set of G has size at most (139 − (cid:7))T , then for every scoring vector (cid:6)s, the total expected social welfare of the winning alternatives under f(cid:6)s over all profiles in R is at most (39,695 + 69(cid:7))T 2.In this way we will conclude that distinguishing between these two cases for the profiles returned by our reduction is an N P -hard problem. In other words, the problem is hard to approximate within a factor better than 39,764/39,695 ≈1.00174.The reduction Let G = (V , E) be a 3-regular graph with 284T nodes (and 426T edges). We assume that the nodes of Vare identified by the integers 1, 2, . . . , |V |. We construct |V | preference profiles corresponding to the nodes in V and |E|preference profiles corresponding to the edges of E (i.e., 710T profiles in total). Denote by R the family of these prefer-ence profiles. All profiles have 284T − 3 agents and 3|V | − 1 = 852T − 1 alternatives. Among them, there are two special alternatives a1 and b1 as well as alternatives ai , bi , and ci for i = 2, . . . , |V |. The corresponding utility profiles are such that the total utility of each agent for all alternatives is exactly 1 and, furthermore, these utilities are all different so that the corresponding preference profile is uniquely defined.Specifically, for each node v, the preference profile (cid:6)σ v is defined as follows. The agents are partitioned into 5 sets N1, . . . , N5:• Set N1 consists of 2T − 2 agents that rank alternative ai at position i for i = 1, . . . , |V |, alternative b1 at position |V | + 1, and alternatives ci and bi at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N2 consists of 140T agents that rank alternative ai at position i for i = 1, . . . , v, alternative b1 at position v + 1, alternative ai at position i + 1 for i = v + 1, . . . , |V |, and alternatives ci and bi at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N3 consists of 2T − 2 agents that rank alternative bi at position i for i = 1, . . . , |V |, alternative ai at position |V | + ifor i = 1, . . . , |V |, and alternative ci at position 2|V | + i − 1 for i = 2, . . . , |V |.• Set N4 consists of 140T agents that rank alternative a1 at position v, alternative bi at position i for i = 1, . . . , v − 1, alternative bi at position i + 1 for i = v + 1, . . . , |V | + 1, and alternatives ai and c2 at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N5 consists of one agent that ranks alternative b1 first, alternative ci at position i for i = 2, . . . , |V |, alternative a1at position |V | + 1, and alternatives bi and ci at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.See Fig. 3 for an example. The corresponding utility profile (cid:6)u v is such that sw(a1, (cid:6)u v ) = 70T , sw(b1, (cid:6)u v ) = T , and sw(a, (cid:6)u v ) ≤T for alternative a ∈ A \ {a1, b1}, so that it uniquely induces (cid:6)σ v . Observe that the 142T − 2 agents of N1 ∪ N2 always rank alternative a1 first and the 2T − 1 > T agents of N3 ∪ N5 always rank alternative b1 first; hence the definition of (cid:6)u v is clearly feasible and the construction can be implemented in polynomial time.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213209Rank12··vv + 1v + 2··ww + 1w + 2··|V | + 1|V | + 2|V | + 3··2|V |2|V | + 1··3|V | − 1N1×(71T − 1)a1a2··N2×(71T − 1)a1a2··b1avav+1··aw−1awaw+1··a|V |b2b3··b|V |c2··c|V |avav+1av+2··b1awaw+1··a|V |b2b3··b|V |c2··c|V |N3×1a1c2··c vc v+1c v+2··c wc w+1c w+2··b1a2a3··b|V |b2··b|V |N4×(71T − 1)b1b2··N5×(71T − 1)b1b2··bva1bv+1··b w−1b wb w+1··b|V |c2c3··c|V |a2··a|V |bvbv+1bv+2··b wa1b w+1··b|V |c2c3··c|V |a2··a|V |Fig. 4. The preference profile (cid:6)σ e corresponding to edge e = (v, w) with v < w. The corresponding utility profile (cid:6)ue is such that sw(a1, (cid:6)ue) = 70T , sw(b1, (cid:6)ue) = T , and sw(a, (cid:6)ue) ≤ T for alternative a different than a1 and b1, so that it uniquely induces (cid:6)σ e .For each edge e = (v, w) with v < w, the preference profile (cid:6)σ e is defined as follows. The agents are partitioned into 5sets N1, . . . , N5:• Set N1 consists of 71T − 1 agents that rank alternative b1 at position v, alternative ai at position i for i = 1, . . . , v − 1, alternative ai at position i + 1 for i = v, . . . , |V |, and alternatives bi and ci at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N2 consists of 71T − 1 agents that rank alternative ai at position i for i = 1, . . . , w − 1, alternative b1 at position w, alternative ai at position i + 1 for i = w + 1, . . . , |V |, and alternatives bi and ci at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N3 consists of one agent that ranks alternative a1 first, alternative ci at position i for i = 2, . . . , |V |, alternative b1at position |V | + 1, and alternatives ai and bi at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N4 consists of 71T − 1 agents that rank alternative bi at position i for i = 1, . . . , v, alternative a1 at position v + 1, alternative bi at position i + 1 for i = v + 1, . . . , |V |, and alternatives ci and ai at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.• Set N5 consists of 71T − 1 agents that rank alternative bi at position i for i = 1, . . . , w, alternative a1 at position w + 1, alternative bi at position i + 1 for i = w + 1, . . . , |V |, and alternatives ci and ai at positions |V | + i and 2|V | + i − 1, respectively, for i = 2, . . . , |V |.See Fig. 4 for an example. The corresponding utility profile (cid:6)ue is such that sw(a1, (cid:6)ue) = 70T , sw(b1, (cid:6)ue) = T , and sw(a, (cid:6)ue) ≤T for a ∈ A \ {a1, b1}, so that it uniquely induces (cid:6)σ e . Observe that the 71T agents of N1 ∪ N3 always rank alternative a1 first and the 142T − 2 agents of N4 ∪ N5 always rank alternative b1 first; hence the definition of (cid:6)ue is clearly feasible and the construction can be implemented in polynomial time.Proof of correctness We proceed with some definitions. For a preference profile (cid:6)σ ∈ R, we use the notation (cid:6)u( (cid:6)σ ) to denote its corresponding utility profile. Also, defineSW((cid:6)s) =(cid:4)(cid:6)σ ∈RE[sw( f(cid:6)s( (cid:6)σ ), (cid:6)u( (cid:6)σ ))]to be the total expected social welfare of the winning alternative under score (cid:6)s. We remark that in order to simplify the proof (and avoid reasoning about monotonicity of the score vector entries), we consider each scoring rule as computing a linear combination of k-approval scores for k = 1, . . . , 3|V | − 1. The non-negative entries of the score vector are the multipliers of the corresponding approval score in this linear combination. In particular, denote by appk(a, (cid:6)σ ) the number of agents that rank alternative a in some of the first k positions in the preference profile (cid:6)σ (i.e., the k-approval score of alternative a). Then, the score under the score vector (cid:6)s is defined as sc(cid:6)s(a, (cid:6)σ ) =appk(a, (cid:6)σ ) · sk. Clearly, this definition is equivalent to the standard one for scoring rules (by adjusting the score vector entries appropriately).3|V |−1k=1(cid:2)210C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213The next three claims provide information about the winning alternatives in each profile depending on the entries of the score vector (cid:6)s.Claim B.2. Let (cid:6)s be a score vector. In every profile of R, one of the alternatives a1 and b1 has the highest score under (cid:6)s. If an alternative a /∈ {a1, b1} has the highest score under (cid:6)s in some profile of R then sk = 0 for k = 1, . . . , |V | and alternatives a1 and b1 have the highest score as well.Proof. Observe that in each profile, the 284T − 3 agents have one of the alternatives a1 and b1 in their top position. Furthermore, all agents rank alternatives a1 and b1 in one of the first |V | + 1 positions. Hence, the sum of the scores of these two alternatives is at least(284T − 3)|V |(cid:4)k=1sk + 2(284T − 3)3|V |−1(cid:4)k=|V |+1sk.For every other alternative a, the number of agents that rank it in some of the first |V | positions is at most 142T − 2. Hence, the score of such an alternative is at most(142T − 2)|V |(cid:4)k=1sk + (284T − 3)3|V |−1(cid:4)k=|V |+1sk.Clearly, if sk > 0 for some k ∈ {1, . . . , |V |}, then at least one of the alternatives a1 and b1 has score strictly higher than a. Otherwise, the alternatives a1 and b1 still have the highest score (possibly together with some alternative a /∈ {a1, b1}). (cid:2)Claim B.3. Let v ∈ V be a node of G. Given a score vector (cid:6)s, defineWitv ((cid:6)s) = (140T − 1)sv −(cid:4)sk.k∈V \{v}Then• Alternative a1 is the sole winner under (cid:6)s in profile (cid:6)σ v if and only if Witv ((cid:6)s) > 0.• Alternative b1 is the sole winner under (cid:6)s in profile (cid:6)σ v if and only if Witv ((cid:6)s) < 0.• Alternatives a1 and b1 are tied as highest-scoring alternatives under (cid:6)s in profile (cid:6)σ v if and only if Witv ((cid:6)s) = 0.Proof. Consider a node v ∈ V and its corresponding preference profile (cid:6)σ v . By the definition of (cid:6)σ v , we have that the difference appk(a1, (cid:6)σ v ) − appk(b1, (cid:6)σ v ) of the k-approval scores of alternatives a1 and b1 is −1 for k = 1, . . . , v − 1, v +1, . . . , |V |, 140T − 1 for k = v, and 0 for k = |V | + 1, . . . , 3|V | − 1. Thereforesc(cid:6)s(a1, (cid:6)σ v ) − sc(cid:6)s(b1, (cid:6)σ v ) =3|V |−1(cid:4)k=1(appk(a1, (cid:6)σ v ) − appk(b1, (cid:6)σ v ))sk(cid:4)skk∈V \{v}= (140T − 1)sv −= Witv ((cid:6)s).Now the claim follows using Claim B.2, because Witv ((cid:6)s) (cid:15)= 0 implies that sk > 0 for some k ∈ {1, . . . , |V |} and, hence, no alternative other than a1 and b1 can have maximum score. (cid:2)Claim B.4. Let e = (v, w) ∈ E be an edge of G. Given a score vector (cid:6)s, defineWite((cid:6)s) = (71T − 2)sv + (71T − 2)sw −(cid:4)sk.k∈V \{v,w}Then• Alternative a1 is the sole winner under (cid:6)s in profile (cid:6)σ e if and only if Wite((cid:6)s) < 0.• Alternative b1 is the sole winner under (cid:6)s in profile (cid:6)σ e if and only if Wite((cid:6)s) > 0.• Alternatives a1 and b1 are tied as highest-scoring alternatives under (cid:6)s in profile (cid:6)σ e if and only if Wite((cid:6)s) = 0.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213211Proof. Consider an edge e = (v, w) ∈ E and its corresponding preference profile (cid:6)σ e . By the definition of (cid:6)σ e , the difference appk(a1, (cid:6)σ e) − appk(b1, (cid:6)σ e) of the k-approval scores of alternatives a1 and b1 is 1 for k = 1, . . . , v − 1, v + 1, . . . , w − 1, w +1, . . . , |V |, −71T + 2 for k = v or k = w, and 0 for k = |V | + 1, . . . , 3|V | − 1. We havesc(cid:6)s(a1, (cid:6)σ e) − sc(cid:6)s(b1, (cid:6)σ e) =3|V |−1(cid:4)k=1(appk(a1, (cid:6)σ e) − appk(b1, (cid:6)σ e))sk(cid:4)= −(71T − 2)sv − (71T − 2)sw +skk∈V \{v,w}As before, the claim now follows directly from Claim B.2. (cid:2)= −Wite((cid:6)s).The correctness of our reduction will follow by the next two lemmas.Lemma B.5. For every independent set I of size K ∈ [71T , 140T ) in G, there is a scoring protocol (cid:6)s such that SW((cid:6)s) ≥ 30,104T 2 +69TK.Proof. For every node v of G, we set sv = 1/K if v ∈ I , and sv = 0 otherwise. We also set sv = 0 for every v in {|V | +1, . . . , 3|V | − 1}. First, consider the preference profile (cid:6)σ v for some node v of G. We haveWitv ((cid:6)s) = (140T − 1)sv −sk = 140T sv −sk = 140T sv − 1.(cid:4)(cid:4)k∈V \{v}k∈VNow, observe that the right-hand side in the above equality is strictly positive if v ∈ I (since sk = 1/K and K < 140T ) and strictly negative if v /∈ I (since sv = 0). Hence, by Claims B.2 and B.3, we conclude that alternative a1 (respectively, b1) is the sole winner in profile (cid:6)σ v if v ∈ I (respectively, if v /∈ I ).Now, consider the preference profile (cid:6)σ e for some edge e = (v, w) of G. We have(cid:4)skk∈V \{v,w}Wite((cid:6)s) = (71T − 2)sv + (71T − 2)sw −= (71T − 1)(sv + sw ) −(cid:4)k∈Vsk= (71T − 1)(sv + sw ) − 1≤ 71T − 1K− 1< 0.The first inequality holds since at most one of the adjacent nodes v and w belongs in the independent set I and the second one since K ≥ 71T . By Claims B.2 and B.4, we conclude that alternative a1 is the sole winner under (cid:6)s in profile (cid:6)σ e , for every edge e of E.Summing the expected social welfare of the winner under (cid:6)s over all profiles, we have(cid:4)(cid:4)(cid:4)SW((cid:6)s) =sw(a1, (cid:6)u v ) +sw(b1, (cid:6)u v ) +sw(a1, (cid:6)ue)v∈Iv∈V \Ie∈E= 70TK + T (|V | − K ) + 70T |E|= 30,104T 2 + 69TKas desired. (cid:2)Lemma B.6. Let (cid:6)s be a score vector such that SW((cid:6)s) ≥ 30,104T 2 + 69TK. Then G has an independent set of size K .Proof. First, we will prove that sk > 0 for some k ∈ {1, . . . , |V |}. Indeed, if this not the case, by Claims B.3 and B.4, a1and b1 are both highest-scoring alternatives (possibly, together with some other alternative). Then, the expected social welfare of the winner under (cid:6)s in any profile (cid:6)σ ∈ R is at most 12 (sw(a1, (cid:6)u( (cid:6)σ )) + sw(b1, (cid:6)u( (cid:6)σ ))) = 71T /2. In total, we have that SW((cid:6)s) ≤ (|E| + |V |)71T /2 = 25,205T 2, contradicting the assumption of the lemma.Furthermore, we can assume that Witv ((cid:6)s) (cid:15)= 0 for every node v ∈ V and Wite((cid:6)s) (cid:15)= 0 for every edge e ∈ E. If this is not the case, we can transform the score vector in order to get another one that satisfies these conditions as well as the assumption of the lemma. This can be done as follows. Let η be the minimum non-zero value of the quantities |Witv ((cid:6)s)| and |Wite((cid:6)s)|212C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213(cid:7)vas follows: set sover all nodes v ∈ V and edges e ∈ E. Now, let v ∈ V be a node with sv > 0 (by the argument above, such a node certainly (cid:7)(cid:7)(cid:7)(cid:7)(cid:7)200T ; all other scores in (cid:6)sexists). Define two score vectors (cid:6)sand (cid:6)sand (cid:6)s(cid:7)(cid:7)) are non-zero and have the same are the same as those of (cid:6)s. Observe that for every non-zero Witv ((cid:6)s), Witv ((cid:6)s(cid:7)(cid:7)) are non-zero and have the same sign as Wite((cid:6)s). sign as Witv ((cid:6)s). Similarly, for every non-zero Wite((cid:6)s), Wite((cid:6)s(cid:7)(cid:7)(cid:7)This means that each such profile (cid:6)σ v or (cid:6)σ e has the same sole winner under scores (cid:6)s, (cid:6)s, and (cid:6)s. For every node v such (cid:7)(cid:7)) < 0, i.e., they are non-zero and have different signs. Similarly, for every edge e such that that Witv ((cid:6)s) = 0, Witv ((cid:6)s(cid:7)(cid:7)Wite((cid:6)s) = 0, Wite((cid:6)sand (cid:6)s(cid:7)(cid:7)) ≥ 2SW((cid:6)s) which implies that one of the while they both have the same highest score under (cid:6)s. Clearly, SW((cid:6)s(cid:7)score vectors (cid:6)shas the desired properties.(cid:7)(cid:7)(cid:7)) < 0. Hence, alternatives a1 and b1 are the only winners in profiles (cid:6)σ v and (cid:6)σ e under (cid:6)s(cid:7)v(cid:7)) and Witv ((cid:6)s(cid:7)) and Wite((cid:6)s200T and s= sv − η= sv + η(cid:7)) + SW((cid:6)sSo, in the following, we assume that Witv ((cid:6)s) (cid:15)= 0 and Wite((cid:6)s) (cid:15)= 0 for every node v ∈ V and every edge e ∈ E. Define H = {e ∈ E : Wite((cid:6)s) < 0} and I = {v ∈ V : Witv ((cid:6)s) > 0}. Hence, the sole winner under (cid:6)s in profile (cid:6)σ e is alternative a1 if e ∈ Hand alternative b1 otherwise. Similarly, the sole winner in profile (cid:6)σ v is alternative a1 if v ∈ I and alternative b1 otherwise. It follows that(cid:7))Witv ((cid:6)s(cid:7))Wite((cid:6)s(cid:7)(cid:7)or (cid:6)s(cid:7)(cid:4)(cid:4)(cid:4)(cid:4)SW((cid:6)s) =sw(a1, (cid:6)u v ) +sw(b1, (cid:6)u v ) +sw(a1, (cid:6)ue) +sw(b1, (cid:6)ue)v∈Iv∈V \Ie∈He∈E\H= 70T |I| + T (|V | − |I|) + 70T |H| + T (|E| − |H|)= T |V | + 69T |I| + T |E| + 69T |H|Also, observe that the assumption of the lemma implies thatSW((cid:6)s) ≥ 30,104T 2 + 69TK= 70T |E| + T |V | + 69T K .By the above two equations, we obtain that |I| ≥ K + |E| − |H|. Now, consider the subgraph Gof I and let E(G(cid:7)) be its set of edges. Since for each edge e = (v, w) of E(G(cid:7)), nodes v and w belong to I , it holds thatof G induced by the nodes (cid:7)Wite((cid:6)s) = (71T − 2)sv + (71T − 2)sw −(cid:4)skk∈V \{v,w}(cid:14)(cid:15)Witv ((cid:6)s) + Witw ((cid:6)s)+ (T − 1)(sv + sw )= 12> 0,(cid:7)) ⊆ |E \ H|. Since |I| − |E(Gi.e., E(Gconsequently, graph G) has an independent set of size |I| − |E(G(cid:7))| ≥ |I| − |E \ H| ≥ K . (cid:2)(cid:7))| is a lower bound on the number of connected components in G(cid:7), the graph G(cid:7)(and, The properties of our reduction follow from the last two lemmas. If G has an independent set of size (140 − (cid:7))T , using Lemma B.5, we obtain that there is a score vector (cid:6)s such that SW((cid:6)s) ≥ (39764 − 69(cid:7))T 2. On the other hand, if any independent set in G has size at most (139 + (cid:7))T , then SW((cid:6)s) ≤ (39,695 + 69(cid:7))T 2. Assuming otherwise, we obtain a contradiction using Lemma B.6. (cid:2)References[1] N. Alon, Tools from higher algebra, in: R.L. Graham, M. Grötschel, L. Lovász (Eds.), Handbook of Combinatorics, vol. 2, MIT Press, 1996, pp. 287–324.[2] M. Anthony, P.L. Bartlett, Neural Network Learning: Theoretical Foundations, Cambridge University Press, 1999.[3] J. Apesteguia, M.A. Ballester, R. Ferrer, On the justice of decision rules, Rev. Econ. Stud. 78 (2011) 1–16.[4] Y. Azrieli, S. Kim, Pareto efficiency and weighted majority rules, Int. Econ. Rev. 55 (2014) 1067–1088.[5] J. Bartholdi, C.A. Tovey, M.A. Trick, Voting schemes for which it can be difficult to tell who won the election, Soc. Choice Welf. 6 (1989) 157–165.[6] P. Berman, M. Karpinski, On some tighter inapproximability results, in: Proceedings of the 26th International Colloquium on Automata, Languages and Programming, ICALP, 1999, pp. 200–209.[7] R.F. Bordley, A pragmatic method for evaluating election schemes through simulation, Am. Polit. Sci. Rev. 77 (1983) 123–141.[8] S.J. Brams, P.C. Fishburn, Approval Voting, 2nd edition, Springer, 2007.[9] D. Braziunas, C. Boutilier, Assessing regret-based preference elicitation with the UTPREF recommendation system, in: Proceedings of the 11th ACM Conference on Economics and Computation, EC, 2010, pp. 219–228.[10] I. Caragiannis, A.D. Procaccia, Voting almost maximizes social welfare despite limited communication, Artif. Intell. 175 (9–10) (2011) 1655–1671.[11] V. Conitzer, M. Rognlie, L. Xia, Preference functions that score rankings and maximum likelihood estimation, in: Proceedings of the 21st International [12] E. Elkind, P. Faliszewski, A. Slinko, On distance rationalizability of some voting rules, in: Proceedings of the 12th Conference on Theoretical Aspects of Joint Conference on Artificial Intelligence, IJCAI, 2009, pp. 109–115.Rationality and Knowledge, TARK, 2009, pp. 108–117.[13] P. Faliszewski, A.D. Procaccia, AI’s war on manipulation: are we winning?, AI Mag. 31 (4) (2010) 53–64.[14] K. Goldberg, T. Roeder, D. Gupta, C. Perkins, Eigentaste: a constant time collaborative filtering algorithm, Inf. Retr. 4 (2) (2001) 133–151.[15] J. Harsanyi, Cardinal welfare, individualistic ethics, and interpersonal comparisons of utility, J. Polit. Econ. 63 (4) (1955) 309–321.[16] E. Hemaspaandra, L.A. Hemaspaandra, Dichotomy for voting systems, J. Comput. Syst. Sci. 73 (1) (2007) 73–83.[17] E. Hemaspaandra, L.A. Hemaspaandra, J. Rothe, Exact analysis of Dodgson elections: Lewis Carroll’s 1876 voting system is complete for parallel access to NP, J. ACM 44 (6) (1997) 806–825.C. Boutilier et al. / Artificial Intelligence 227 (2015) 190–213213[18] C. Hillinger, The case for utilitarian voting, Discussion papers in econ. No. 653, U. Munich, 2005.[19] M. Kalech, S. Kraus, G.A. Kaminka, C.V. Goldman, Practical voting rules with partial information, Auton. Agents Multi-Agent Syst. 22 (1) (2011) 151–182.[20] J.J. Louviere, D.A. Hensher, J.D. Swait, Stated Choice Methods: Analysis and Application, Cambridge University Press, 2000.[21] T. Lu, C. Boutilier, The unavailable candidate model: a decision-theoretic view of social choice, in: Proceedings of the 11th ACM Conference on Eco-nomics and Computation, EC, 2010, pp. 263–274.Artificial Intelligence, IJCAI, 2011, pp. 287–293.[22] T. Lu, C. Boutilier, Robust approximation and incremental elicitation in voting protocols, in: Proceedings of the 22nd International Joint Conference on [23] D. Majumdar, A. Sen, Bayesian incentive compatible voting rules, Econometrica 72 (2) (2004) 523–540.[24] S. Merrill, A comparison of efficiency of multicandidate electoral systems, Am. J. Polit. Sci. 28 (1984) 23–48.[25] N. Nisan, Introduction to mechanism design (for computer scientists), in: N. Nisan, T. Rougarden, É. Tardos, V. Vazirani (Eds.), Algorithmic Game Theory, Cambridge University Press, 2007, chapter 9.[26] M. Pivato, Condorcet meets Bentham, Thema working paper No. 2014-17, 2014.[27] A.D. Procaccia, J.S. Rosenschein, The distortion of cardinal preferences in voting, in: Proceedings of the 10th International Workshop on Cooperative Information Agents, CIA, in: Lecture Notes in Computer Science (LNCS), vol. 4149, Springer, 2006, pp. 317–331.[28] A.D. Procaccia, A. Zohar, Y. Peleg, J.S. Rosenschein, The learnability of voting rules, Artif. Intell. 173 (12–13) (2009) 1133–1149.[29] M. Regenwetter, B. Grofman, A.A.J. Marley, I. Tsetlin, Behavioral Social Choice: Probabilistic Models, Statistical Inference, and Applications, Cambridge University Press, 2006.[30] A. Slinko, How large should a coalition be to manipulate an election?, Math. Soc. Sci. 47 (3) (2004) 289–293.[31] I. Tsetlin, M. Regenwetter, B. Grofman, The impartial culture maximizes the probability of majority cycles, Soc. Choice Welf. 21 (2003) 387–398.[32] J. von Neumann, O. Morgenstern, Theory of Games and Economic Behavior, Princeton University Press, 1944.[33] E.H. Warren, Lower bounds for approximation by nonlinear manifolds, Trans. Am. Math. Soc. 133 (1) (1968) 167–178.[34] R.J. Weber, Reproducing voting systems, Cowles Foundation discussion paper No. 498, 1978.[35] L. Xia, V. Conitzer, Generalized scoring rules and the frequency of coalitional manipulability, in: Proceedings of the 9th ACM Conference on Economics and Computation, EC, 2008, pp. 109–118.[36] H.P. Young, Social choice scoring functions, SIAM J. Appl. Math. 28 (4) (1975) 824–838.[37] H.P. Young, Condorcet’s theory of voting, Am. Polit. Sci. Rev. 82 (4) (1988) 1231–1244.