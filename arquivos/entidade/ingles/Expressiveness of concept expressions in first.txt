ELSEVIER Artificial Intelligence 107 (1999) 303-333 Artificial Intelligence Expressiveness of concept expressions in first-order description logics Natasha Kurtonina a, 1, Maarten de Rijke b,, a 1RCS, University of Pennsylvania, 3401 Walnut Street, Phildelphia, PA 19104-6228, USA b 1LLC, University of Amsterdam, Plantage Muidergracht 24, 1018 TVAmsterdam, The Netherlands Received 4 January 1998; received in revised form 15 November 1998 Abstract We introduce a method for characterizing the expressive power of concept expressions in first- order description logics. The method is essentially model-theoretic in nature in that it gives preservation results uniquely identifying a wide range of description logics as fragments of first-order logic. The languages studied in the paper all belong to the well-known ,Y'/~- and ,AZ~ hierarchies. © 1999 Published by Elsevier Science B.V. All rights reserved. Keywords: Knowledge representation; Description Logic; Expressive power; Model theory; Semantic characterizations I. Introduction Description logics have been proposed in knowledge representation to specify systems in which structured knowledge can be expressed and reasoned with in a principled way. They provide a logical basis to the well-known traditions of frame-based systems, semantic networks and KL-ONE-like languages, object-oriented representations, semantic data models, and type systems. Generally speaking, description logics have three main ingredients: (1) a language for defining concept expressions, (2) means to specify knowledge about concepts and individuals, and (3) methods for reasoning about the knowledge being represented. * Corresponding author. Email: mdr@wins.uva.nl. 1 Email: natashak@linc.cis.upenn.edu. 0004-3702/99/$ - see front mauer © 1999 Published by Elsevier Science B.V. All fights reserved. PII: S0004-3702(98)00109-X 304 N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 In this paper we are only concerned with the first aspects, i.e., with languages for defining concept expressions. In the design of such languages two important theoretical consider- ations are complexity and expressive power. A popular slogan here is "complexity versus expressiveness": the more expressive a description logic is, the higher the complexity of the reasoning tasks that can be performed in it. The complexity of satisfiability and sub- sumption problems for description logics has been studied extensively (cf. 9,10), but the problem of expressiveness of concept expressions has hardly been addressed so far; we are aware of only three publications on this topic 2,6,7. The purpose of this paper is to help fill this gap. We characterize and compare the expressive power concept expressions definable in all logics in two well-known hierarchies of description logics. The methods we use first identify the concept expressions definable in description logics as fragment of first-order logic, and then characterize these fragments in terms of a unique model-theoretic property. The main technical tool used is preservation under a suitable notion of (hi-)simulation. More precisely, with each description logic ~ we associate a characteristic (bi-)simulation such that all and only the /Z-concepts are preserved under this (bi-)simulation. Then, the expressive power of concept expressions of two description logics can be compared by comparing the model-theoretic behavior of their concepts with respect to their respective (bi-)simulations. The characteristic (bi-)simulations can then be used to classify the concepts that are definable in description logics. We think that our results are significant for the knowledge representation community because, for the first time, they give exact and expficit model-theoretic characterizations of the expressive power of concept expressions definable in a wide range of description logics. In addition, they illustrate a general method for coping with expressiveness issues; we hope they may be useful for understanding knowledge based systems, especially with respect to the descriptive desiderata one may have. Baader 2 seems to have been the first to propose a formal definition of the expressive power of description logics; the only other formal papers on the issue are 6,7. Our definition of expressive power is somewhat simpler than Baader's, as we are only concerned with the expressive power of concept descriptions. Implicitly, Borgida 6 considers the same notion of expressive power as we do. Cadoli et al. 7 explore notions of expressive power that are appropriate for hybrid languages that combine description logics with rule-based query languages. Our paper differs from 2,6,7 in that we give exact and explicit model-theoretic characterizations of the expressive power of concept expressions definable in a wide range of logics (cf. Section 5 for further discussion). The results in this paper are based on preservation theorems that are similar to ones found in the literature on modal and temporal logic and the modal/z-calculus 4,19,21. However, as description logics often lack some boolean operations, the proofs of our preservation theorems require novel technical tools and methods. Our preservation results arc: similar in spirit to the characterizations of finite variable fragments in terms of pebble games due to 17. Furthermore, there is a considerable body of work on the expressive power of query languages, but most of this is phrased in terms of complexity classes 1,18. The results in the present paper, however, are entirely model-theoretic. We proceed as follows. In Section 2 we describe the technical prerequisites for the paper, and review our notation. Section 3 then explains our method and the definition of N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 305 expressive power used. The main results of the paper are contained in Section 4, together with illustrations of their use. Section 6 contains concluding remarks and describes ongoing work. Formal proofs of the main characterization results are included in two appendices. 2. Technical background The main ingredients of description logics are c o n c e p t s  a n d  roles. The former are interpreted as subsets of a given domain, and the latter as binary relations on the domain. Table 1 lists constructors that allow one to build (complex) concepts and roles from (atomic) concept names and role names. For instance, the concept Man rq 3Child.T n ¥Ghild.Human denotes the set of all fathers. Description logics differ in the constructions they admit. By combining constructors taken from Table 1, two well-known hierarchies of description logics may be obtained. The logics we consider here are extensions of f £ - ; this is the logic with T, 2 ,  universal quantification, conjunction and unqualified existential quantification 3 R . T .  2 ,AE extends .TE- by negation of concept names (that is, negations of the form -,A, where A is an atomic concept name). Extensions of .T'E- and ,A£ are denoted by postfixing the name of the constructors being added. For instance, 5rECL/- is ) r E -  with (full) existential quantification and disjunction. Table 1 Constructors in first-order description logics Constructor name Syntax Concept name Top Bottom Conjunction Disjunction (ld) Negation (C) Universal quantification Existential quantification (E) Number restriction (At') Role name Role conj. (7-4.) A T ± C (cid:127) D C u D ~ C ¥ R . C 3R.C (t> n R) (<. n R ) R Q n R Semantics A Z c_ A Z A 27 13 C Z (7 D Z C Z tO D Z A Z \ C Z {dl I ¥d2 (dl, d2) e R Z ~ d 2 e C Z} {dl I Bd2 (dl, d2) 6 R Z A d 2 e C Z} {dt I{(dl, d2) e R27}>>. n} {dl l{(dl,d2) eRZ}<~n} R Z C_ A Z x A Z Q z  N R Z Description logics are interpreted on i n t e r p r e t a t i o n s  Z ---- (A I ,  .I), where A 2: is a non- empty domain, and .z is an interpretation function assigning subsets of A 2- to concept 2 Some definitions of ~ ' £ -  don't include T and ± in the logic; cf. 10. To simplify the formulation of our results we have decided to include them. 306 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 names and binary relations over A 7: to role names; complex concepts and roles are interpreted using the recipes specified in Table 1. The semantic value of an expression E in an interpretation 2- is simply the set E I .  Two expressions are called equivalent if they have the same semantic value in every interpretation. For further details on both applications and theoretical aspects of description logics, / / d l .  k r . we refer the reader to 10, or to the description logic home page at h t t p : org/dl/. 3. Defining expressive power In this section we define our notion of expressive power, and explain our method for determining the expressive power of a given description logic. Our aim in this paper is to determine the expressive power of concept expressions of every extension of 9rE - and ,A£ that can be defined using the constructors in Table 1. We say that a logic £1 is at least as expressive as a logic £2 if for every concept expression in £2 there is an equivalent concept expression in £~; notation: £2 <<, £1. If £2 ~< £j and /~1 ~ £2, we write £2 < £~; if both £1 ~< £2 and £:2 ~ £1 hold, we write £1 : £2. The method we use for explaining the expressive power of description logics has the following ingredients: (1) a mapping taking concept expressions in description logics to fragments of first- order logic; (2) characterizations of these fragments by model-theoretic means; and (3) comparisons between (the expressive power of) the concepts definable in description logics based on comparisons between the corresponding first-order fragments; cf. Fig. 1, where the rectangle denotes first-order logic, and the closed curves denote (fragments corresponding to) concepts definable in description logics. In line with our methodology we will pursue the above items (1), (2), and (3) for each of the description logics considered in this paper. First, item (1) is next to trivial. The semantics given in Table 1 induces translations (.)~ and (.)~ taking concepts and roles, respectively, to formulas in a first-order language whose signature consists of unary FOL Fig. 1. The method. N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 307 predicate symbols corresponding to atomic concepts names, and binary predicate symbols corresponding to atomic role names: A rx A x (C rq D) r~ = C rx A D t~ T r ~  = ( x = x ) ( C U D )  ~ =  C r * v D  r~ /rx__-- (x # x) (-~C) ~ = --,C ~ (VR.C) r* = Vy (R ~y ~ c r y ) ,  where y is a fresh variable (3R.C) r~ = 3y (R tray A CRY'), where y is a fresh variable (~> n R) r~ = 3YI'"Yn(i~jYi~yjAAR~rxYi)i where all Yi are a fresh variables (<~nR)rx= Vyl...Yn+l(AYiS~Yj--~V~R~rxYi i is~j where all Yi are a fresh variables ) R °xy = R x y (Q rq R) c~xy = Q,rxy/\ R~x~. Observe that to translate concepts and roles in description logics without number restrictions we only need two individual variables. To be able to state that concepts and roles are equivalent to their translations under r and a ,  we need to relate the semantics of description logics and first-order logic. But interpretations can naturally be viewed as models for the first-order language we consider to denote that the first-order formula c~ here. Thus, we will for example write 2- ~ a ( x ) d is true in 2- (viewed as a first-order model), with d assigned to c~'s free variable x. Below we will exploit this connection, often without making it explicit. Proposition 3.1. Let C be a concept and R a role. For any interpretation Z and any d, e E A 2r we have the following equivalences: (1) d c C I i f f Z  ~ C~d, (2) (d, e) ~ R :r i f f Z  ~ R crx~ de. in Given this proposition we are allowed to simply identify concepts definable description logics with their corresponding first-order fragments, and if no confusion is possible we write C instead of C r, and R instead of R ~ . Proposition 3.1 settles item (1) of our method. Next comes item (2) this is much more work. The semantic characterizations that we are after will be formulated in terms of preservation under a suitable relation between interpretations. To make this strategy more concrete we first recast a result from modal logic in description logical terms. Schild 25 was the first to give a precise formulation of the connection between description logics and modal logics. Readers familiar with multi-modal logic will immediately recognize the similarity between existential quantification 3 R . C  and the diamond operator (R)C, and between universal quantification VR.C and the box operator 308 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 RC. Given this connection between description logics and modal logics, results in the one domain become available to the other. In modal logic, the following notion is now being used as an important model-theoretic tool, even at the textbook level, cL 23. Definition 3.2. Let 2" = (/1 2-, .I) and ,7 == (A`7, .3) be two interpretations. A non-empty relation Z c (212- x 21`7) is called a bisimulation if it satisfies the following clauses. (1) If dlZd2, then, for every (atomic) concept name A, dl ~ A77 iff d2 ~ A "7. (2) For every (atomic) role name R, if dl Zd2 and RIdl el, then there exists e2 in 21,7 such that R`7d2ee and elZe2. (3) For every (atomic) role name R, if dl Zd2 and RJdee2, then there exists el in 212- such that R77dl el and el Ze2. A first-order formula or(x) is said to be preserved under bisimulations if for all interpretations Z, ,7, all objects dl e 2177 and de ~ 21`7, and all bisimulations Z between 2- and ,7, we have that Z ~ adl implies ,7 ~ otd2 whenever dl Zd2. Bisimulations are also used extensively in concurrency theory 22, and to a lesser extent in the area of semistructured data 3. What is the relevance of bisimulations for the purposes of the present paper? Briefly, bisimulations are relations between interpretations that preserve all .A£C-concepts. This is clear for atomic concept names (clause (1) in Definition 3.2), and a simple induction shows it to hold for boolean combinations as well. The back-and-forth clauses (2) and (3) guarantee preservation of existential and universal quantification, respectively. The following theorem establishes a kind of converse for this preservation result; it is the starting point for our investigations. Theorem 3.3. Let or(x) be a first-order figrmula. Then or(x) is (equivalent to) an .A£C- concept iff it is preserved under bisimulations. Proof. The proof consists of two parts: as explained above, by a simple induction one can show that A£C-concepts are preserved under bisimulations. The proof of the other .A£.C is a notational direction can be obtained as follows. As was first observed in 25, variant of normal multi-modal logic (with full boolean expressivity). The corresponding preservation theorem for mono-modal logic may be found in 4, but it can easily be extended to the multi-modal case. In words, preservation under bisimulations is the unique model-theoretic property that characterizes the concepts definable in .A£C as a fragment of first-order logic. One can put this property to good use in the following way: to show that a description logic L; (extending .A/~C) is more expressive than .A/~C, by Theorem 3.3 it suffices to identify an /~-concept that is not preserved under bisimulations. Corollary 3.4. Let £. be a description logic that can be obtained from .4£C by adding any non-empty combination of T~ or A/'. Then .Af-.C < £.. Proof. To prove .AL;C < .AL;CTZ (or .4£C.Af or A£C7"¢~, respectively), it suffices to provide two interpretations 27, ,7 and objects dl E A 2;, dx E A "7 as well as a bisimulation Z N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 309 linking dl and d2, such that for some AECT~-concept C (or AECN'-concept or A£.C.M~- concept) we have dl ~ C :/7 but d2 ¢ C J . Consider the interpretations 2- and J depicted below. (The arrows denote the interpre- tation of R, an object is labeled A if it is in the interpretation of A, and the dotted lines indicate the bisimulation.) 2 ......... R I .  dl d2 • I Let C1 := (3(R n S).T) and C2 :~- (~ 2 R). Then, clearly, dj 6 C11 and dl 6 Cf, but d2 ~ C f  and d2 ~ C2 J . We leave it to the reader to check that the relation indicated by the dotted lines is indeed a bisimulation. It follows from Theorem 3.3 that neither 3(R n S).T nor (/> 2 R) is (equivalent to) an AEC-concept. Hence, AEC < A£C7~, AECN', ,A£CRN'. Now, what do we need to do to adapt the above result for other extensions of 7-/2- defined by Table 1? For logics less expressive than )tE, C we can not just use bisimulations, as such logics lack negation or disjunction, and these are automatically preserved under bisimulations; moreover, the proof of Theorem 3.3 uses the presence of the booleans in an essential way. For logics more expressive than ,AEC some of their constructors need not be preserved under bisimulations. Therefore we have to develop new notions of (bi-) simulation; this will be the focus of our attention in Section 4. 4. Separating description logics This section contains the main results of the paper. For 7 - £ - ,  At;, and all of their extensions that can be defined using the constructors in Table 1, we present semantic characterizations analogous to Theorem 3.3. We subsequently use these to separate logics, thus completing items (2) and (3) of the methodology outlined in Section 3, and we obtain a complete classification of the full Y £ -  and AE-hierarchies. We proceed as follows. We first consider the "minimal" logic Y £ - ,  characterize its concepts semantically, and use the characterization to separate 7 - E -  from richer logics. After that, we treat each of the constructors in Table 1 that are not in Y £ - ,  and examine which changes are needed to characterize the concepts definable in the resulting logics. This is followed by a brief section in which we consider combinations of constructors. Our classification results are summarized in a diagram at the end of the section. Proofs of the characterization and combination results are given in two appendices. Throughout this section the following abbreviations will prove to be useful; let X, Y be subsets of a given domain. 310 N. Kurton&a, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 X R ? Y iff for all d 6 X there exists e E Y such that Rde, XR+ Y iff for all e 6 Y there exists d 6 X such that Rde. In words, X is Rt-related to Y if every object in X "sees" an object in Y; and X is R+- related to Y if every object in Y is "seen" by an object in X. As an aside, the two relations R 1" and R~ are two particular instances of "lifting" a binary relation on objects to a binary relation on sets of objects. In the setting of program semantics they are known as the Hoare power order and the Egli-Milnerpower order, respectively; cf. 27. 4.1. The base case: . T £ - Recall that the logic U £ -  has T, l ,  universal quantification VR.C, conjunction C n D, and unqualified existential quantification 3R.T. What do we need to develop a notion of bisimulation that can be used to characterize .T'£--concepts? First of all, ordinary bisimulations as defined in Definition 3.2 preserve negations of concepts--this is obviously too much for 5v£ - ,  as it does not have negations. To destroy preservation of negations we will introduce a direction in the atomic clause of Definition 3.2, and hence make bisimulations non-symmetric. This change will enable us to preserve positive (negation-flee) information only. However, disjunctions would still be preserved under such non-symmetric bisimulations. As 5t-£ - does not allow disjunctions of concepts, we need to block this as well. To achieve this, we change the format of bisimulations: instead of linking an object to an object, we will link a set of objects to an object. The notion of preservation will then say that if a concept or formula holds for every object in the set, then it must hold in the "similar" object. If a disjunctive concept or formula holds for all objects in a set (of size at least two) this no longer implies that one of the disjuncts holds for all objects in the set; as a consequence the inductive argument needed to prove Theorem 3.3 may break down. 3 Definition 4.1. Let Z = (A z, 3 )  and J := (A J ,  . J )  be two interpretations. An . T E - - simulation is a non-empty relation Z ___ T'(zl I )  x A J such that the following hold. (1) If Xl Zd2 then, for every (atomic) concept name A, if X1 ~ A I, then d2 6 A J . (2) For every (atomic) role name R, if XI(RI)~Y1 and X1Zd2, then there exists e2 E AJ with RJd2e2. (3) For every (atomic) role name R, if RJd2e2 and X1Zd2, then there exists Y1 ~ ,4Z with X1 (R Z) j. Y1 and Y1Ze2. A first-order formula c~(x) is preserved under .Y'£--simulations if for all interpretations 2- and ,7, all sets X _ A I and objects de E A J ,  and all 5t'£ --simulations Z between 2- and ,7, we have that if XZd2 and for all dl 6 X, 2- ~ adl, then ,7 ~ ~td2. The basic intuition underlying the clauses in Definition 4.1 is that atomic concepts need to be preserved (clause ( 1)); we only need to preserve unqualified existential quantifications 3 As an aside, by linking sets (or objects) to sets we would also be able to deal with logics without conjunction. N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 311 (clause (2)), but we need to preserve full universal quantification VR.C, where C may itself be a complex concept--this necessitates the "and Y1Ze2" in clause (3). Of course, in addition we need to preserve conjunctive concepts C n D, but this we get for free. Theorem 4.2 (Characterization of f £ - ) .  Let or(x) be a first-order formula. Then or(x) is equivalent to an f F_.- -concept iff it is preserved under f £--simulations. Corollary 4.3. Let £ be either ~A£ or any description logic that can be obtained from r E -  or .A£ by adding any non-empty combination oflg, C, E, A/', or TO. Then r E -  < £. Proof. We only show this for one logic, and we do so by displaying a concept that can not be equivalent to a concept in f £ - .  The concept 3R.A (which lives in f E E - and its extensions) is not equivalent to an f £ - - c o n c e p t ,  as it is not preserved under r E - - simulations. To see why, consider the interpretations Z and ,7 depicted below. (The dashed boxes indicate sets.) Z " ....." A J ----. . . . . . . . . . . • . . . . . . . Here we have that {dl} _ (3R.A) z but d2 ~ (3R.A) J ,  even though there is an r E - - simulation relating {dl} to d2. Hence, by Theorem 4.2, 3R.A can not be equivalent to an r E - - c o n c e p t .  As f £ -  <. f £ E - is obvious, it follows that OrE- < f E E - . 4.2. Adding negation We now consider the changes that need to be made to the basic set-up for r E - - simulations if some form of negation is present in the logic. In particular, we consider the logic .AE; recall that it extends r E -  by negation of (atomic) concept names. It turns out that only minor changes are required as compared to Definition 4.1. Definition 4.4. Let Z = (A z, .2:) and J = (A J ,  . J )  be two interpretations. An .AE- simulation is a non-empty relation Z c T'(A I )  × A,7 such that the following hold. (1) If XIZd2 then, for every (atomic) concept name A, if Xl _ A s, then d2 6 A "y, and if X1 ___ --,A I ,  then d2 6 "-'A J . (2) For every (atomic) role name R, if X I ( R I ) t Y 1  and X1Zd2, then there exists e2 6 A J  with RJd2e2. (3) For every (atomic) role name R, if RJd2e2 and X1Zd2, then there exists Y1 c z~ 2: with X1 (RI)$ Yl and Yl Ze2. A first-order formula a ( x )  is preserved under .A£-simulations if for all interpretations 77 and ,.7, all sets X __c z~ I and objects d2 E A J ,  and all .AE-simulations Z between 77 and ,7, we have that if XZd2 and for all dl ~ X, Z b ~dl, then f f  ~ ad2.  312 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 The intuition underlying the change in clause (1) of Definition 4.4 (as compared to clause (1) of Definition 4.1) is that both positive and negative atomic information now needs to be preserved in passing from Z to J . Theorem 4.5 (Characterization of AE). Let a(x) be a first-order formula. Then or(x) is equivalent to an ¢4E-concept iff it is preserved under ,Ate-simulations. Corollary 4.6. Let £ be a description logic that can be obtained from e4E by adding any non-empO, combination oflg, C, g, .Af, or T~. Then ~ < E. Also, if E is obtained from f E -  by adding one ofbt, g, Af, or TO, then E ¢ AE. Proof. As in Corollary 4.3, by way of example we only consider one case for the proof of the first claim. We show that .AE is strictly less expressive than .A£Z/by providing an ¢4EM-concept that is not equivalent to any ,AE-concept. 2- i .............. • ........................................................... i el • d 2 The ~4£L/-concept A u B is not equivalent to an .AE-concept. In the two interpretations 17, J depicted above we have that {dl, el } ~ (A t~ B) ~, and there exists an .AE-simulation linking {dl,d11} to d2, but d2 ~ (A H B) J .  By Theorem 4.5, then, (A u B) can not be equivalent to an .AE-concept. Similar arguments may be used to establish the second claim of the corollary. 4.3. Adding existential quantification Next we consider adding full existential quantification as a constructor to 5rE - .  For the resulting logic 5r/~g - we obtain the appropriate notion of simulation by taking Definition 4.1 and adding "and Y1Ze2" as a conjunct to clause (2). Clearly, what we need for ~'Eg--concepts to be preserved by an appropriate notion of simulation, is that concepts of the form 3R.C are preserved, and the additional condition "Y1Ze2" achieves this--it simply mirrors clause (3) (which achieves preservation of universal quantifications), and hence to a certain degree it restores symmetry. Definition 4.7. Let Z = (z3 g, J )  and J = (A J ,  . J )  be two interpretations. An . T E g - - simulation is a non-empty relation Z _c p ( A I )  x z3 J such that the following hold. (1) If XI Zdz then, for every (atomic) concept name A, if Xt c_ A 7, then d2 6 A "y. (2) For every (atomic) role name R, if XI(Rg)tY1 and X1Zd2, then there exists e2 E z3 J with RJd2e2 and Y1Ze2. (3) For every (atomic) role name R, if RJd2e2 and X1Zd2, then there exists Yl c A 2 with Xt (RI)~ Y1 and 111Ze2. N. Kurtonina, 1IlL de Rijke / A rtificial Intelligence 107 (1999) 303-333 313 A first-order formula a ( x )  is preserved under ,~£E--simulations if for all interpretations 2- and ,7, all sets X ___ A2- and objects d2 e A 'y, and all f ' £ E - - s i m u l a t i o n s  Z between 2- and ,7, we have that if XZd2 and for all dl 6 X, 2- ~ ord1 , then ,7 ~ c~d2. T h e o r e m  4.8 (Characterization of ~ E g - ). Let a(x ) be a first-order formula. Then or(x) is equivalent to an ,~EC- -concept iff it is preserved under ~ E - -simulations. Corollary 4.9. Let E be a description logic that can be obtained from . ~ £ S -  by adding any non-empty combination of Ll, C, iV', or 7g. Then 5r~E- < E. Also, if £ is either A L or obtained from 5rE- by adding one oflA, iV', or T~, then E ¢~ ~ E C - . Proof. As before, we will only prove the corollary for one case. We will show that 5 r E E - is strictly less expressive than 5rECA/'-. The interpretations in the following figure show that the ,T'£EA/'--concept (/> 2 R) is not equivalent to an 5t'/2C --concept. ....... I 2- d, ii i ,;r ii !.. • ........... d2 In the above figure we have {dl} _ (~> 2 R)2- but d2 ~ (/> 2 R) J even though there is an 5rEg--simulation (indicated by the dotted lines) that links {dl} to d2. 4.4. Adding disjunction For 5r£Z/- we obtain the appropriate notion of simulation by taking Definition 4.1, but instead of linking sets of objects to objects, we now link objects (or: singleton sets) to objects. As explained in the introduction to this section, if a notion of simulations links sets of objects to single objects, disjunctions need not preserved, the reason being that if X is a set, then X _ (C u D) 2- does not imply X c C2- or X c D2-. Working with single objects, however, we would of course be able to infer from d 6 (C ~ D) 77 that d 6 C I or d 6 D 77, and this would allow us to give an inductive proof of a preservation result for disjunctions. Definition 4.10. Let Z = (A2-, .X) and ,7 = (.4 J ,  - J )  be two interpretations. An 5rE/g - - simulation is a non-empty relation Z c A I × LI ,y such that the following hold. (1) If dl Zd2 then, for every (atomic) concept name A, if dl ~ A z, then d2 ~ A J . (2) For every (atomic) role name R, if RZdlel and dlZd2, then there exists e2 ~ A J with R J dze2. (3) For every (atomic) role name R, if RJdae2 and dlZd2, then there exists el E A 77 with RIdlel and el Ze2. A first-order formula a (x) is preserved under 5r£Lt--simulations if for all interpretations Z and J ,  all objects dl c A I ,  d2 ~ A J ,  and all 5rEU--simulations Z between Z and ,7, we have that if dl Zd2 and Z ~ ad! , then J ~ ot d2. 314 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 Theorem 4.11 (Characterization of)t-EL/-). Let ~t(x ) be a first-order formula. Then a(x ) is equivalent to an f E L t - - c o n c e p t  iff it is preserved under f T_.Zl--simulations. Corollary 4.12. Let £ be a description logic that can be obtained from f E L t -  by adding any non-empty combination of C, E, Af, or ~. Then a~ fl_.lg - < £. Also, if £ is either ,4£ or obtained from ~ E -  by adding one of ~;, A;, or T~, then E ¢ f lSlJl-. Proof. As before, we will only prove the corollary for one case. We will separate fF__L/- from .TEL/P,.-. The interpretations in the following figure show that the 5~F__L/7~ --concept 3(R n S).T is not equivalent to an r E / g - - c o n c e p t . 2- . ! ......... ......... ................................. .......... 1 J In the above figure we have dl 6 (3(R n S).T) z but d2 ¢ (3(R rq S).T) J even though there is an fEb/--simulation (indicated by the dotted lines) that links dl to de. 4.5. Adding number restrictions To arrive at a notion of simulation for f £ . A / ' -  we use the above ideas together with ideas from 24. The main feature of the notion of f l 2 N - - s i m u l a t i o n  is that in order to guarantee preservation of number restrictions it records the size of sets of objects taking part in the simulation. It does this using a whole sequence of relations between sets of sets of objects on the one hand and sets of objects on the other; later on, in the presence of disjunction we will be able to simplify these to relations between sets of objects on both sides. The following notation will prove to be useful. We write R'dl Y1 if for all el ~ Yl, Rdl e~ holds. As before, since f £ A / ' -  is a logic without disjunction, our notion of simulation for f E N ' -  needs to relate sets of objects to objects. But we need a bit more. For, let 77 be an interpretation, and let X1 __c A I be such that X1 __c (~> n R)~; then, for each dl E X1 there exists Yd~ C A I with IYdll >>- n and (R:r)°diYd~. Now, to ensure preservation of (~> n R) from XI to any object d2 similar to X1, we need to consider the collection of all these sets Yd~, where di ranges over elements of X1. The following definition captures this idea. Definition 4.13. Let R be a role name, and i > 0. Assume that X1 __c d 2;, where 77 is some interpretation. An i-cloud is a set ,V of subsets of A 7; such that for all Y ~ X, IVl = i . An/-cloud ?( is said to be R-above Xt c_ A ~ if for all d l e  X1 there exists Y1 ~ Af such that (RZ)'dx Yl. N. Kurtonina, M. de Rijke /Artific&l Intelligence 107 (1999) 303-333 315 A set XI is said to be R-below a n / - c l o u d  X if for every Yl ~ X there exists dl E X1 such that ( Rg)°dl Y1. By indexing i-clouds with the set above which they hang, we can ensure that every cloud is above exactly one set only. We are ready now for the definition of an .T'E.Af--simulation. We use T'<'°(X) to denote the collection of finite subsets of X. Definition 4.14. Let Z = (A s, .I) and f f  = (A 3", .`7) be two interpretations. An 5r£A/"-- simulation between Z and f f  is a sequence of relations Z = (Z0, Zl . . . . .  Zn . . . . ) such that the following hold. (1) Z0 is non-empty. (2) (a) Z0 _c 79(A z) x A J . (b) For all i > 0, Zi C Jg(p<°J(A2-)) × ~O<~°(Z~'-7"). (3) For all i > 0, if XZiY2, then, for any X ~ X, X = Y2I = i. (4) If X1Zod2, then, for any (atomic) concept name A, if X1 _c A 2- then d2 6 A`7. (5) I f X l Zod2 and X ___ 7~(79<°~(AI)) is a non-empty/-cloud R-above X1, where i > 0, then there exists 172 ___ ,4'7 with (RJ)*d2Y2 and X Z i Y2. (6) If XIZod2 and (R'7)'d2Y2, where Y2 =: i > 0, then there exists a non-empty i- cloud 2( ___ 7~(79<C°(A7:)) such that XI is R-below X and XZiY2. (7) If R`Td2e2 and X1Zod2, then there exists a 1-cloud X such that Xl is R-below X and ( U  X)Zoe2. A first-order formula ot (x) is preserved under .T£A/'--simulations if for all interpretations Z and ,7, all sets of objects XI c_ ,4 77 and objects d2 6 A`7, and all ~ £ N ' - - s i m u l a t i o n s Z = (Zo, Zt . . . . ) between 2" and J ,  we have that if XlZod2 and for all dl ~ X1, 2" ~ otdl, then ,.7 ~ ord2. To grasp the intuition behind Definition 4.14, observe that Z0 is the "engine" of the simulation that guarantees preservation, and the other relations ZI, Z2 . . . .  are needed for matching finite sets of the same size. Clauses (1)-(3) of Definition 4.14 are bookkeeping clauses, and clause (4) is the familiar one about preservation of atomic concepts. Clauses (5) and (6) are the back-and-forth clauses that guarantee preservation of number restrictions (~- i R) and (~< i R), respectively. Clause (7) is needed to preserve universal quantifications VR.C. T h e o r e m  4.15 (Characterization of 5C£N "-). Let a(x ) be a first-order formula. Then or(x) is equivalent to an (cid:127)£jV'--concept iff it is preserved under .T£.J~- -simulations. Corollary 4.16. Let £ be a description logic that can be obtained from Y £ N ' -  by adding any non-emp~, combination ofld, C, g, or 7~. Then Y E N ' -  < £. Also, if £ is either .A£ or obtained from Y £ -  by adding one of g, LI, or ~, then £ ¢ Y E N - . Proof. We only prove the corollary for one case: f ' £ N ' -  < ~ - £ N ' C - .  Consider the interpretations 2-, J depicted below (the dotted lines indicate Z0; other relations Zi, for i > O, are specified in the text below). 316 N. Kurtonina, M. de Rijke /Artificial lnteUigence 107 (1999) 303-333 I el i(-'O"--ii ............... } ' t ............. ~ 2 , l J" I .................... fl ":.-.-.-.-.? .......... " il ,:7..z.f2 Clearly, {dl} c (3R.A) z, but d2 ~ (3R.A) "7, so if there exists an Y£A/'--simulation linking {d~} and d2, then 3R.A cannot be (equivalent to) an 5r£.M--concept. We leave it to the reader to show that the following tuple Z is indeed an f ' £ . N ' - - s i m u l a t i o n  linking {d~} and d2: Z = (Zo, Zj, Z2 . . . .  ), where, for i > 2, Zi = 0, while Zo = {({all }, d2), ({el }, e2), ({fl }, j2), ({el, fl }, e2), ({el, fl }, .2)}, Z1 = {({el, {fl }}, {ca}), ({el, {fl }}, {./2})}, Z2 = {({el, fl}, {e2, f2})}. 4.6. Adding role conjunction Combining ideas from 16,20 and the preceding sections, we arrive at a notion of simulation for 5=£7Z - .  Its distinguishing feature is that it not only relates sets of objects to objects (as in Definition 4.1), but to cater for role intersection it also links pairs of (sets of) objects to pairs of objects. We will need the following auxiliary notion. Let X, Y be two sets of objects. A collection of (atomic) role names 7-4 is called meet closed for X and Y if X(-ITZ) 1" Y. Definition 4.17. Let 2- = (A I ,  .z) and J = ( A J ,  . J )  be two interpretations. An 5~£7Z - - simulation is a triple Z = (Z0, Zl, Z2) such that the following hold. (1) (a) Zo _c 7~(AZ) × A J . (b) ZI _c (7'(A z) × 7~(AZ)) x (,6 J × 7a(AJ)). (c) Z2 _c (7~(AZ) x P(AZ)) x (A J x AJ). (2) If X1Zod2, then, for every (atomic) concept name A, if X1 c A z, then d2 e A "7. (3) (a) If (XI, Y1)Zl(d2, E2) then, for every collection of role names 7-4 that is meet closed for X1 and Y1, there exists an e2 6 E2 such that (--TZ)Zd2e2. (b) If (XI, Y1 )Zz(d2, e2) then, for every role R, if RJdze2 holds, then X1 (RZ),~ Y1. (4) (a) If XtZod2, then, for every (atomic) role name R, if X~(RZ)tYI, then there exists E2 c A ,y with (XI, YI)Zj (d2, E2). (b) If XlZod2, then, for every (atomic) role name R, if RJdze2, then there exists yj c A I with (Xj, YI)Zz(d2, e2). (5) If (X~, Y1)Z2(d2, e2), then YI Zoe2. A first-order formula or(x) is preserved under ~ETZ--simulations if for every two interpretations Z and J ,  all sets X c zl I and objects d2 e J J ,  and all 5~£7-4 --simulations Z between 2- and J ,  we have that if Xi Zod2 and for all d l e  X1, Z b c~dl, then J ~ o'd2. Let us briefly explain what the clauses in Definition 4.17 are meant to achieve. Clause (2) is the familiar clause about preservation of atomic concepts. Clause (3a) is N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 317 about preservation of intersecting roles from 2- to ,f; there is slight technical complication here: X I R t Y I  and X~StY1 does not imply X1 (R n S ) ? Y I ,  and this failure forces us to consider only those collections of role names ~ (with Xj R "t YI, for R 6 7~) that are closed under intersection in this sense; the notion of meet closure tries to capture this idea. Next, clause (3b) simply tries to mirror intersections from ,ff to 2". Clauses (4a) and (4b) are the real back-and-forth clauses, where simulations between sets and objects extend to pairs of sets and pairs of objects (and sets). Clause (5) relates such simulations between pairs to simulations between sets and objects (but, by analogy with clauses (2) and (3) of Definition 4.1, this is only required in one direction, viz. from J to 2-). T h e o r e m  4.18 (Characterization of 5 t - E ~ - ) .  Let or(x) be a first-order formula. Then or(x) is equivalent to an .T127-~- -concept iff it is preserved under .T12T~--simulations. Corollary 4.19. Let £ be a description logic thai can be obtained from f E T e -  by adding any non-erupt, combination of Lt, C, £, or A/'. Then a~127~ - < 12. Also, if E is either .A12 or obtained from .UE- of A ~  by adding one of C, Lt, or J~ r, then E ¢ .U£.7~-. Proof. We only prove the corollary for the case 5t-£7~ T M  < 5t-ETa.A/"-. Consider the two interpretations below. i e ............. 1t .... ij, ........... ....... . ......... 1 J The dotted lines indicate the Z0-component of an F E ~ - - s i m u l a t i o n  linking {dl} to d2; it, and the remaining components, are defined as follows: Z0 = {({dl},d2), ({el}, e2), ({fl}, e2), ({el, fl}, e2)}, Zl = {(({dl}, {el}), (62, {e2})), (({dl }, {/1}), (d2, {e2})), (({dl }, el, fl}), (d2, {e2})), Z2 = {(({dl }, {el}), (d2, e2)), (({dl}, {fl }), (d2, e2)), (({dl }, {el, fl }), (d2, e2))}. We leave it to the reader that this (Zo, ZI, Z2) is indeed an 5 r E ~ - - s i m u l a t i o n  such that {dl}Zod2. Clearly, {dj} c (j> 2 R) I ,  but d2 ~ (3; 2 R) "7. It follows that (~> 2 R) is not equivalent to an 5t-C7~ --concept. As we obviously have f E T e -  ~< 5t-E~A/"- , we conclude 5 v £ ~ - < ~ - £ ~ A / ' - . 4. 7. Combinations The semantic characterization results obtained so far form the basic building blocks for our further results. Briefly, the idea is that one should obtain semantic characterizations of  318 N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 logics that contain combinations of the constructors C, L/, £, Af and 7~ by combining the characterizations of the logics admitting only one of the constructors. It turns out that there is surprisingly little interaction between the various characterizations, and where there is interaction this results in a simplification (especially when L/ is added) or in restoring symmetry of various clauses (when £ or C is added). Only in rare cases (such as Y1;.A/'~-) does the characteristic notion of simulation become more complex. As the details do not add too much to the analysis, we do not include them here, but in Appendix B. 4.8. Harvest We summarize our results in Fig. 2. The way one should read the diagram is as follows. Every logic coincides with one of the logics in the diagram, and if a description logic £ t is above a logic £2 (via a sequence of one or more arcs), then Z;2 < 1;1. If two logics are incomparable in the diagram, then they are incomparable with respect to their expressive power. Several comments are in order. First, the diagram does not mention all possible combinations of the constructors listed in Table 1. The reason for this is that some logics coincide with others (for example, U E C -  coincides with .A1;CL/-). Second, it should be noted that the classification obtained in Fig. 2 is exactly the classification that one would expect from an intuitive point of view (where one logic is more expressive than another if it has more constructors). We view this absence of surprises both as an intuitive justification of our resttlts, and as an indication that we have provided ....... ~i.;:;.:.:sl '~: ::.:: :~ ~ ........................ -- .......... ........ . L.I . A L C J v " , i  ~ . A £ C 7 ~ 7 " £ £ U N ~ - ~ ~'--.~. . A £ E X T ~ ............. , .... . A £ L / ~ r ~ .... ~ ~'~ i.i . . . . . . . • ............ " \ . .... :.::"::""'" . . . . . . . . . . . . . . . . . . . :5: "::":'~'"" ' ' " ..... A C C Y C £ U + f f - Y C E U T ~ -  A C E . A { ¢ 4 £ £ 7 ~ .TCEArT:L - . A £ L 4 ~ " .A£~17~ S~£L4ArT~ - ~ 4 £ A f T L ...... . .  ~<~/ ~- . . . . . . . . . . . ' ... ............ ~., . . . . . . . . . ..., . i ~ - ............ i~i,- ,~ . . . . . . . . . . ........ . ....... ., ...,.~ ..... ~ , . . / ., .. -.,~< Y E £ L / ¢ 4 £ £ " ~ ' £ £ A 1 " 7 " £ £ 7 ~ ~4,CL¢ 7 : £ L ~ J V ' - 7 - £ L 4 7 ~ - ~ t £ A r ~ 4 £ 7 ~ 7 " £ . ~ 7 ~ - 7 " £ £ 7 " £ L 4 ............................ y Z 2 2 ~  ~ - Y ' £ 7 ~ ........... ...... A £ ........... . F C Fig. 2. Classifying description logics. N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 319 Table 2 A complexity theoretic classification Complete for Description logic P NP coNP A£, A £ X A££, A£7~, A££7¢. A£U, .A£LCN" PSPACE A£C, Ag_MT~, A£AfT-4, .A£CAf, A£C7~, A£gA/', A££AfT~, AEMA/'/~, ALCAf/-4 a mathematical underpinning for the basic intuitions one has concerning the expressive power of description logics. And finally, we should point out that expressive power as studied here and complexity of the satisfiability problem do not induce the same classifications of description logics: there are description logics that have the same complexity results for their satisfiability problems but have different expressive power in our sense. To substantiate this claim, let us consider the complexity theoretic classification of .AE-based description logics that has been obtained in 9; see Table 2.4 Notice the following: - The satisfiability problems for A £  and ,A£N" are both decidable in polynomial time, but according to our analysis AE.Af is strictly more expressive than A £ . - The satisfiability problems for .A£S, A£7¢,, and . A £ E ~  are all NP-complete, yet A £ S R  is the most expressive of these. - The satisfiability problems for A E b / a n d  A/E/N" are coNP-complete, but A E H N " is strictly more expressive than AE2g. - The satisfiability problems for AEC, AEMT~, AEN'T~, A E C N ' ,  A£C7~, . A £ g N ' , AEEAfT~, ~4£L/A/'T4, and .AECN'7-4 are all PSPACE-complete, yet the logic A£CN'7-4 is the most expressive of these. What is the upshot? Description logics whose satisfiability problems are complete for the same complexity class need not have the same expressive power in our sense. There are two sides to this. Of course, at equal computational costs one may wish to opt for the most expressive logics. At the same time, the precise relation between these alternative ways of classifying description logics remains to investigated---we think that this is one of the most challenging issues in the area. 5 .  D i s c u s s i o n We see two major lines of work related to this paper, the first one centered around the use of model-theoretic methods similar to the ones we have used, the second one focusing on the expressive power of description logics. As to the first theme, the technique of Ehrenfeucht-Fraiss6 games in first-order logic is closely related to our simulations, and it has been used to obtain numerous separation and 4 Observe that there is no completeness result for A££N" in 9; the PSPACE-hardness result included in Table 2 is due to 14. 320 N. Kurtonina. M. de Rijke /Artificial Intelligence 107 (1999) 303-333 preservation results; see l 11. 17 use pebble games to obtain model-theoretic expressivity results about finite variable logics, and related techniques have been used in modal logic as well; for instance, 21 use various kinds of bisimulations to characterize temporal logics with Since and Until. Also, 26 use similar methods to separate query languages over temporal databases. One of the principle advantages shared by these methods is their explicit and intuitive descriptions of the languages being studied. The results in this paper are different from the above ones, as we are interested in relatively poor languages with limited expressive power and without closure under some of the boolean operators; this focus necessitates both new notions of simulations and novel techniques for proving the characterization results. As to the second theme----expressiveness of description logics--we know of only three earlier references: 2,6, and 7. We will briefly discuss each of these. Baader's work is different from ours in two important ways. First, Baader's definition 2, Definition 3.2 of expressive power differs from ours. Recall that we we define a logic E1 to be at least as expressive as a logic E2 if for every £2-concept there is an equivalent El-concept over the same vocabulary. Thus, we focus on definable concepts over a given vocabulary only, but, at least intuitively, Baader's definition allows El to use additional concepts and roles in finding El-equivalents for every E2-concepts. More formally, let F be a collection of concepts, and let Voc(F) denote the collection of all atomic concepts and roles occurring in F .  Further, assume that we have a mapping f : Voc(Fl) ~ Voc(F2), and interpretations 2-1 and :272 that satisfy all of 2-1 and 2-2, respectively. Then f embeds 2-1 in 2-2 if for all S 6 Voc(F1 ) we have S 2-J = f ( S ) 2-2. Then, F2 can be expressed by Fl if there exists f :  Voc(F2) -+ Voc(F1) such that (1) every interpretation that validates all of F2 can be embedded by f in some interpretation that validates all of F1, and (2) for every interpretation Zl that validates all of Fl there exists an interpretation 2-2 that validates all of F2 and that can be embedded in ZI by f . Then, £ t  is at least as expressive as E2 (according to Baader) if every collection of E2- concepts can be expressed by some collection of £ l-concepts. Clearly, this more involved definition allows one to equate more description logics with respect to the concepts they can define than ours does; for instance, under Baader's definition negation of atomic concepts can be simulated by number restrictions over additional roles, whereas according to our results negations of atomic concepts cannot be expressed using number restrictions (over the same vocabulary).5 While we agree that it may be useful to be able to use additional concepts and roles in finding equivalent expressions, as Baader himself points out, what is lacking from his definition is a measure on how much additional material one may use and on the complexity of the function that maps E2-expressions to equivalent El-expressions over a richer vocabulary. A second important difference between Baader's work and ours lies in the type of results that have been obtained. Baader only establishes a small number of separation results, whereas we provide a complete classification of all languages definable using the constructors in Table 1. More importantly, our separation results are based on semantic 5 As an aside, the difference between our definition and Baader's is analogous to the difference between definability and projective definability in the area of model-theoretic logics; see 5. N. Kurtonina, M. de Rijke / A rtificial Intelligence 107 (1999) 303-333 321 characterizations; this gives a deeper insight into the properties of logics than mere separation results. Let us now turn to Borgida's 6. There, the author shows that certain description logics have the same expressive power as the two or three variable fragment of first-order logic (over the same vocabulary). A few remarks are in order here. First, like us Borgida has a strong focus on definable concepts, and he ignores other aspects of description logics. Next, it is well-known that there is a correspondence between some description logics and modal logics (see 25), and modal logicians have considered the links with finite variable fragments for quite some time (see 13). Thus, Borgida's results could also have been obtained this way. Finally, the description logics considered in this paper are all expressible in the two variable fragment of first-order logic (possibly with counting), however, none coincides with the full two-variable fragment. The third (and final) reference on expressive power of description logics that we are In this paper the authors consider hybrid knowledge bases that consist aware of is 7. of a TBox, an ABox, a set of Horn rules, and a relational database. The description logic for which we gave a semantic characterization underlying the TBox and Abox is A £ C A f ~ , in the present paper (see Section 4.8). The authors of 7 focus on capturing the expressive power of their hybrid knowledge bases in terms of collections of finite structures (in some complexity class) that are definable by means of queries to such knowledge bases. How are such complexity theoretic characterizations related to the model theoretic findings of the present paper? To start, results such as Fagin's Theorem 12 provide links between complexity theoretic characterizations of expressive power and linguistic descriptions in terms of sets of logical formulas; this is the level at which the work of 7 is situated. Next, these linguistic descriptions may be characterized in terms of special, independent model theoretic properties; and this is the level at which the present paper is located. 6. Conclusion In this paper we have introduced a model-theoretic method for determining the expressive power of concept expressions definable in description logics. The method consists of three components: a translation into a common background logic (here first- order logic over a suitable vocabulary), semantic characterizations of the translated logics, and using these characterizations to separate logics. The method was successfully applied to obtain expressiveness results for all logics in the .T'E- and ,A£ hierarchies. The main benefits of our methods are that they give exact and explicit characterizations of the concept expressions that are definable in the description logics that we consider. Our characterizations explain in semantic terms why one logic is or is not different from another. While the proofs of the semantic characterizations in terms of various notions of (bi)-simulation are admittedly somewhat technical, the use of the characterizations in separating logics is fairly intuitive, as we hope to have demonstrated with our examples. As summarized in Fig. 2, our mathematical findings corroborate the intuitions one has concerning the expressive power of description logics; we view this as additional evidence in support of our methods. 322 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 It should be noted that the role of our semantic characterization results is in separating the expressive power of description logics, not in showing that they coincide with respect to the concept expressions that these logics can define. For the latter, we use explicit syntactic definitions of the constructions of one logic in terms of the constructions of the other. Future research in this area will concentrate on the following themes. (1) As was pointed out above, the proofs for our characterization results use first-order techniques in an essential way. We aim to avoid these techniques, and thus to extend our methods to description logics with non-first-order features. The latter could like transitive closure of roles, or least fixed points; see 8,25 for further examples of such logics. (2) How well do our methods and results behave in the presence of side conditions, either on interpretations or on specific roles? For example, what if we restrict attention to finite interpretations only? Or to interpretations where certain roles are transitive or functional? Preliminary work indicates that the restriction to finite interpretations is harmless in that the main results of this paper go through, even though the techniques of this paper cannot be applied. At present, we don't know how to deal with special properties of roles. (3) We want to gain a better understanding of the difference between our approach and In particular, we want to extend our model-theoretic tools in ways that that of 2. will characterize the expressive power of description logics in Baader's sense. (4) What is the complexity of separating description logics? It is known from the literature on bisimulations that, in general, even the question whether two given interpretations are bisimilar, is undecidable, but for finite interpretations the question becomes decidable. In our case, the question is not just to check bisimilarity, but to determine whether there exists an £1-concept that is not preserved under/:z- relations. Are there special cases of this question that become decidable? Acknowledgements We would like to thank Franz Baader, Henry Chinaski, Wilfrid Hodges, Mike Paterson, and two anonymous referees of the journal for useful comments on earlier versions of this paper. Maarten de Rijke was supported by the Research and Teaching Innovation Fund at the University of Warwick, and the Spinoza project "Logic in Action" at ILLC, the University of Amsterdam. Appendix A. Proofs of the main results For each of the logics obtained from .Y'E- l and ,AE by adding constructors from Table 1 we will now prove the main semantic characterization theorems announced in Section 4. The proofs all follow the same basic strategy. One half of the result is proved by a simple induction; the other half is more involved and uses compactness arguments, and, in some cases, additional techniques from first-order logic. iV, Kurtonina, M. de ROke / Artificial Intelligence 107 (1999) 303-333 323 Theorem 4.2 Let t~(x) be a first-order formula. Then a ( x )  is equivalent to an J r £ - - concept iff it is preserved under 9r~--simulations. Proof. The implication from left to right is proved by induction on concepts. The atomic case is immediate from the definition of 9rE--simulations, and conjunction is easy. Let us consider the existential case. Assume Xl Zd2. Suppose that X1 _ ( ~ R . T ) I .  Let Y1 : :  {v 6 A s  3w E X1 (RZwv)}. Then X1R q' Y1. So by clause (2) of Definition 4.1 there exists e2 with RJd2e2 . Clearly, d2 6 (3R.T)`7, as required. The universal case is next. Assume that X~ c (¥R.C) I .  Suppose that there is a e2 with R'Yd2e2 hut e2 ¢ C,7. Then, by clause (3) of Definition 4.1 there exists YI _c A Z with X I R~, YI and Y1 Ze2. By induction hypothesis, e2 ~ C,7 implies YI ~ C Z. This contradicts Xt _c (¥R.C) ~. Now, for the right to left implication, assume that a ( x )  is preserved under 5t-£ - - simulations, and let Con(a) be the set of its 9r£--consequences. Claim A.1. Con(a) b a. If we can prove Claim A.I, then, by compactness, there exists a finite conjunction of elements of Con(a) that is equivalent to a(x). So let us prove Claim A.1. Assume that I ~ Con(a)w. We need to show that 5 ~ aw. Let F = {~C I C is in 9 r £ -  and w ~ CZ}. Claim A.2. For every "-,C E F, the set {a(x), --,C} is consistent. If the claim were false, then C would be a consequence of a, contradicting the definition of F. As a corollary we find, for every --,C c F ,  an interpretationZc and element vc c ,4Ic such that vc E a ( x ) Ic f3 (--,C) Ic . Let f l  be the disjoint union of the pairs (Zc, vc), where - , C  E F .  6 By results from standard modal logic (cf. 4), it follows that for every --,C 6 F there is a bisimulation linking vc in ,4zc to vc ~ "4J. Then, for every ~ C  E F there is an 5t'£--simulation linking {vc} in A I c ,  and an 9rE--simulation linking {vc} in "4,7 to vc in "4~c__ simply link every singleton {d} in the one interpretation to the copy of d in the other interpretation. By assumption, a ( x )  is preserved under 9r£--simulations, so {vc} ~ a ( x ) zc implies vc E c~(x),7, for every vc. Also, as there is an 9rE--simulation linking {vc} in ,4,7 to vc c A Ic , the fact that vc ~ C :~c implies vc q~ C J . Claim A.3. 'br ever)' 9 r £ - - c o n c e p t  D, if f o r  all vc (with "-,C E F), vc E D`7, then w e  D ~. To see why, assume w ~ D I .  Then ~ D  E F ,  so there exists vD E J with v~ ~ D "7. Next, define a relation Z _ 79(,4 '7) x A I by putting XI Zd2 iff for all 9 r £ - - c o n c e p t s  D, X I c__ D`7 implies d2 E D I . 6 That is, ,~..7 is the disjoint union of the sets z3 Zc ; for every concept D, D 3 is the disjoint union of the sets 79Zc; and for every role R, R J is the disjoint union of the sets R :~c . 324 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 Claim A.4. The relation Z is an .~£--simulation. Clause (l) of Definition 4.1 is trivially satisfied. For the second clause, suppose that Xj RtYI and Xl Zd2; we have to show that there exists e2 e A 2- with R~d2e2. This is easy: if X1R 1" Yl, then X1 c (3R.T).Y; so from X1Zd2 we get d2 e (BR.T) 77, so the required e2 exists. For the third clause, assume that RId2e2 and XI Zd2; we need to find a Y1 c A I with Xl ( R I ) ,  Y1 and Y1Ze2. Let C be any concept with e2 ~ C I ;  then de q~ (¥R.C) I. So from XiZd2 we get X1 ~ (¥R.C) J .  Therefore, there exists dl e XI and el e A "y with R J d l e l  but et 6 C J .  If we repeat this argument for every concept C with d2 ¢ C 17, we obtain a set Y1 ___ A I  with X I R , YI and YtZe2, as desired. Finally, then, as a corollary to Claims A.3 and A.4 there is an 5r£--simulation relating {vc E A "y  -,C • F} and w. As for every vc e A "y with -,C • F we have ,,7 b a(x)vc and as a(x) is preserved under U£--simulations, it follows that Z ~ a(x)w. This proves Claim A.1, and hence the theorem. T h e o r e m 4.5 Let a(x ) be a first-order formula. Then a(x ) is equivalent to an .A£-concept iff it is preserved under .A£-simulations. Proof. Repeat all of the Claims A.1, A.2, A.3 and A.4 verbatim, but with .T'££- instead of ~ ' £ - . The key result used in the proofs of' Theorems 4.2 and 4.5 is the compactness theorem. To prove characterization results for languages that are richer than ) r £ -  we need additional semantic tools, over and above the compactness theorem. The proof of our characterization result for U £ E - ,  Theorem 4.8, uses so-called w-saturated models. Briefly, an interpretation 2- for a first-order language £ is co-saturated if whenever A is a set of first-order formulas in a language £', where £' extends £ l  by the addition of finitely many new individual constants, and each finite subset of A is satisfiable in an £'-expansion of 2-, then A itself is satisfiable in this expansion. A key result about co-saturated models that will be used in our proofs below says that, in a countable language, every interpretation 2- has an co-saturated elementary extension 2-*; that is, for every interpretation 2- there is an co-saturated interpretation 2"* such that A 5c _c A I* and for every first-order formula a(xl . . . . .  Xn) and any objects dl . . . . . dn 6 A Z, 2- ~ adl . . . . .  dR iff 2-* ~ adl . . . . .  dn. We refer the reader to any textbook on model theory for further details; see, e.g., 15. T h e o r e m  4.8 Let a(x) be a first-order formula. Then a(x) is equivalent to an a~£E-- concept iff it is preserved under ~£E--simulations. Proof. We leave the left to right direction to the reader, and only give a sketch of the right to left direction to the extent that it differs from the proof of Theorem 4.2. As in the proof of Theorem 4.2 we assume that a(x) is preserved under .Y'£g-- simulations, and we concentrate on proving that Con(a) ~ a, where Con(a) is the set of ~ E g - - c o n s e q u e n c e s  of or(x). So, we assume that Z ~ Con(a)w, and we need to show that 2- ~ a(x)w. Let F = {~C I C is in .T'£.E- and w ~ C:z}. As in Claim A.2 one  N. Kurtonina, M. de Rijke / Artificial Intelligence 107 (1999) 303-333 325 can show that for every --,C 6 iF, the set {~(x), --C} is consistent. Consequently, for every --,C 6/-" there are interpretations 2-c and objects vc such that vc ~ or(x) 7;c fq (-,C) ~c . Let J be the disjoint union of the interpretations 2-c. The relation {(Xa, d)  d ~ Xd} is an 5r££--simulation linking {vc} in f f  (or 2-c) to vc in 2-c (or ,7). It follows that vc ~ o4x) J \ C J . We leave it to the reader to establish an analog of Claim A.3. As explained above, there exists an co-saturated elementary extension 2-* of 2-. It follows that for every U / 2 £ - - concept D, v c DT; iff v E DT;*. Next, define a relation Z c_ ( ' p ( A J )  x AT;*) by putting X1Zd2 iff for all f ' / 2 £ - - concepts D, X i _c D ,y implies d2 6 D 2:* . Claim A.5. The relation Z is an Y £ £ - - s i m u l a t i o n . We only check clause (2) of Definition 4.7. (Clause (1) is easy, and clause (3) is similar to clause (2) in the proof of Claim A.4.) Assume that X I ( R J ) ~ Y 1  and XIZd2. We need to find an e2 6 -47;* with RI*d2e2 and Yl Ze2. Let C1 I7 .-. n Cn be an arbitrary finite conjunction of concepts such that Y1 _ (C1 n --. r3 Cn) J .  Clearly, then, Xj c (3R.(CI n ... n Cn)) J .  By the definition of Z we find that d2 ~ (3R.(Cj n . . .  n Cn)) I*. This implies that there exists e2 ~ AT;* such that e2 ~ (C1 n ... rq Cn)7;*. At this point we use the fact that 2-* is co-saturated. As we have been able to find an object e2 in 2-* that satisfies RT;* d2e2 together with an arbitrary finite collection of concepts satisfied by all the objects in YI, by co-saturation we can in fact find an object e2 in 2-* with RT;*d2e2 that satisfies all concepts satisfied by the objects in Y1. This means that Y1Ze2, as required. With the proof of Claim A.5 completed, we have found an f'Z2£--simulation between J and 2-* that relates {vc ~ -4J I ~ C  ~ F} and w. Hence we have the situation depicted in the following diagram. 9t-E~C--si S ' w 2-* I elementary  extension I I J {vc ~ a J L-.c ~ 1"} w 2- A walk around the diagram completes the proof. From {vc E A J  L --,C ~ F} c__ ~ ( x ) J and the fact that there is an .T/2g--simulation linking {vc E A J  L --,C ~ F} to w in Z*, it follows that w 6 c~(x) 17. . As 2-* is an elementary extension of Z, we get w ~ a(x)7;, and we are done. Recall that the change required to prove a characterization result for UEL¢- is that we no longer work with simulations involving sets, but with ones involving single objects only. for this characterization result we will also need to use w-saturated models. 326 N. Kurtonina. 34. de Rijke /Artificial Intelligence 107 (1999) 303-333 Theorem 4.11 Let a(x) be a first-order formula. Then or(x) is equivalent to an .TF_Jg-- concept iff it is preserved under .TriLl--simulations. Proof. As before, we leave the left to right direction to the reader, and only give a sketch of the right to left direction to the extent that it differs from previous proofs (Theorems 4.2 and 4.8). Assume that or(x) is preserved under .TEL/--simulations, and consider the set of its consequences in 5rEH - ,  Con(a). As before it suffices to prove that Con(a) ~ a. So, we assume that Z ~ Con(a)w, and we need to show that 2- ~ a(x)w. Let F = {--,C I C is in .TEL/- and w ¢ Cz}. Claim A.6. The set {c~(x)} U F is consistent. If the claim were false, there would be concepts - ' C l . . . . . -"Cn E F such that t~ ~(~C1 n . . .  n "Cn), or, in other words, a ~ C1 u .-. u Cn. So w c (CI u ... u Cn) :r as w ~ a ( x ) I ,  and hence w 6 C {  for some i with 1 ~< i ~< n. But, as C1 . . . . .  Cn are f e b / - - concepts, then --,Ci ¢ F, which is a contradiction. This proves Claim A.6. As a corollary we find an interpretation ,.7 and an object v ~ A "7 with v ~ (a(x) "7 A{-,c J I--c ~ r}). Claim A.7. For every .TELl--concept D, if v E D "7, then w ~ D Z. Now, let `7* be an co-saturated elementary extension of ,7. It follows that for every f E L t - - c o n c e p t  D, v 6 D "y iff v ~ D J~ . Next, define a relation Z ___ (A 3* x .4 1;) by putting dl Zd2 iff for all f E H - - c o n c e p t s  D, dl ~ D J* implies de ~ D 77. Claim A.8. The relation Z is an fELt--simulation. We only check clauses (2) and (3) of Definition 4.10. Assume that R J d l  el and dl Zd2. We need to find an e2 E A 2- with RZ*d2e2. But this is almost trivial: given the existence of el we have dl E (~R.T) 'y*, and hence d2 E (3R.T) I ,  as dl Zd2; from this the existence of the required e2 follows. As to clause (3), assume RT;d2e2 and dlZd2. We need an el E A J* with R J ' d l e l and el Ze2. Let Cl . . . . .  Cn be an arbitrary finite number of f E H - - c o n c e p t s  such that e2 ~ (Cl n ... n Cn) z. Then, d2 ~ (¥R.(CI n .-, r~ Cn)) z. By the definition of Z we find that d l ¢  (YR.(C1 n - . .  n Cn)) J*. So there exists el 6 Aft* with e2 ~ (C1 n . . .  n Cn) J*. By co-saturation of J *  this argument can be generalized to the collection of all f E L / - - concepts not satisfied by e2. So, there exists an el E z~ "7. such that RJ*dl el and, for any D, e2 ~ D Z implies el ~ D J*. Hence, el Ze2. This proves Claim A.8. The proof may now be completed in the same way as the proof of Theorem 4.8. O Theorem 4.15 Let or(x) be a first-order fonnula. Then or(x) is equivalent to an JrLN'-- concept iff it is preserved under .TEJ~ r--simulations. Proof. We first prove the left to right direction. We prove by induction on f E N ' - - concepts that if X1Zod2 and Xl c D I ,  then d2 6 D 'y. We only treat the quantificational N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 327 cases. First, assume that XlZod2 and Xt c_ (i> i R) y" . Then, for every dl E XI there exists Ydl C zX J: with ( RZ)°dl YI and Yd~  = i. Collect these sets Ydj together into a collection 2( c_ 7~(T~<'O(AI)); then X is a an /-cloud that is R-above X~. So, by clause (5) of Definition 4.14 there exists g2 _ A'7 with (RJ)'d2Y2 and ,VZi Y2. By clause (3) it follows that 1 I:21 = i, as required. Next, to prove preservation of (~< i R), assume Xl Zod2 as before, while d2 ~ (<~ i R ) : . Choose Y2 _c A ,7 such that IY21 = i + 1 and (RJ)°dzY2. By clause (6) of Definition 4.14 there exists an i + l-cloud ,t" ___ T'(Tv<~°(Z~:)) such that Xl is R-below X. Then, for all YI 6 A', Yll = i + 1, by clause (3), so Xl ~ (~< i R) z, as required. Finally, we have to prove preservation of concepts of the form VR.C (the case qR.T is covered by (>~ 1 R)). Assume X1Zod2, RJd2e2 and e2 ¢ C J .  By clause (7) of Definition 4.14 there exists a 1-cloud 2( c_ 79(79<'°(A37)) such that X1 is R-below X and ( U  2() Zoe2. By induction hypothesis, ( U  A') ~ C :r. That is, there exists e, 6 U X such that el q~ C Z. As Xi is R-below X, there exists dl E X1 with (R:r)'dl{et}, or in other words, RZdlel. It follows that dl ~ (VR.C) z, and therefore X1 ~£ (VR.C) z, and we are done. Now, to prove the harder right to left direction, assume that a ( x )  is preserved under ~ £ N ' - - s i m u l a t i o n s .  As in the proofs of our previous preservation results, we proceed to prove that Con(or) ~ or, where Con(or) is the set of f £ N ' - - c o n s e q u e n c e s  of a ( x ) .  So, we assume that Z ~ Con(a)w, Let F = {'-,C I C is and w ¢ CZ}. As in Claim A.2 we find interpretations Zc and objects vc such in ~ £ N ' - that vc ~ a(x) 75c N (--,C) zc , and we form the disjoint union J of the interpretations Yc. Clearly, the relation {(Xd, d)  d 6 Xj} is the "Z0"-component of an f £ N ' - - s i m u l a t i o n linking {vc} in ff (or Zc) to vc in Zc (or J ) .  As a consequence, we obtain that vc e c~(x): \ C J . and we need to show that Y ~ a(x)w. We leave it to the reader to establish an analog of Claim A.3. Define the following sequence of relations Z0, Z~ . . . .  : Z0 :~--- {(Xl, d2) I Xl ~-- A J ,  d2 ~ z3 Z, and for all D, Xt ___ D : implies d2 ¢ D I } , Zi := {(X, I:2) l i > 0, X c_ P ( P < ~ ( a : ) ) , Y2 c zX z, and for all YL s X, Yl I = I g2i = i J. We tacitly assume that all the collections of sets ,V occurring in the above definition are /-clouds above some set Xi c__ A J ,  for some i. C l a i m  A.9. The tuple Z = (Zo, Z1 . . . . .  Zn .... ) is an 5;£./V'--simulation. To prove the claim, observe first that clauses (1)-(4) of Definition 4.14 are trivially fulfilled, so we only have to check clauses (5)-(7). As to clause (5), assume that X1Zod2, and that 2( c p(T'<~°(A,7)) is a n / - c l o u d  which is R-above X1. We need a set Y2 c_ A I with (R:r)'d2Y2 and JY2 = i. Clearly, we have that for every d j e  Xj, d~ ~ (>~ i R) J , hence Xl ___ (>~ i R) J .  Then, XlZod2 gives d2 c (>~ i R) z. This implies the existence of the required Y2. 328 IV. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 Next comes clause (6) of Definition 4.14. Assume X1Zod2, and (RI)'dzY2, where 11121 = i > 0. We need to find an/-cloud 2( c T'(Tz'<°~(A,7)) such that X1 is R-below 2( and 2(ZiY2. Reason as follows: as d2 ~ (~< i - 1 R) 7~, we get XI ~ (~< i - 1 R) J ,  and it follows that for some dl e A J  we have d l ¢  (~< i - 1 R) J ,  so dl e (>~ i R) J .  Let 2(d~ = {Y c__ A J  I IyJ = i  and ( R J ) ' d j Y } , and put 2(~--- U {2(all Idl ~ X anddl e (>~ i R ) J } . Then 2( is a non-empty i-cloud such that X1 is R-below ,%' and 2(Zi Y2, as required. Next we turn to clause (7). Assume XiZod2 and RZd2e2; we need to find a 1-cloud 2( such that Xx is R-below X and ( U  2() Zoe2. For every concept C such that e2 ¢ C z, we can find el, dl e A J  with dl e X1 and R J d l e l .  Let 2( be the collection of all singletons {el } obtained in this way; then X1 is R-below 2( and ( U z )  Zoe2, as required. This proves Claim A.9. Using a by now familiar argument the proof of Theorem 4.15 can now be completed. Theorem 4,18 Let or(x) be a first-orderjbrmula. Then a(x) is equivalent to an f £TZ-- concept iff it is preserved under .Y'fTg--simulations. Proof. We first prove the left to right direction. We prove by induction on .Y'E~--concepts that if X1Zod2 and X1 c D I, then d2 e D J .  We only treat the quantificational cases. First, assume that XtZod2 and X1 c_ (B(Rl n ... n Rn).T) Z, where all Ri are atomic role names. For each dt E Xl select ee e A 2 with (R1 q • • • n Rn)Zdxex, and collect these ex's together in a set YI. Let 7Z be a collection of (atomic) role names such that R1 . . . . .  Rn E 7"~ and such that R is meet closed for Xl and Y1. By clause (4(a)) of Definition 4.17 there exists E2 _ A I with (X1, Y1)Z1 (d2, E2). By clause (3(a)) there exists e2 e E2 such that (-7-~)Jd2e2. Hence, d2 e (3(I-7~).T) J ,  and therefore d2 e (3(R~ n .-- n R , ) . T ) 'y, as required. Next, to prove preservation of YR.C, assume that X1Zod2 and d2 ~ (YR.C) "7. Let e2 be such that R'Yd2e2 and e2 ~ C 'y. Then, by clause (4(b)), there exists YI with (Xz, Yl )Z1 (d2, e2). By clause (3(b)), X1 (R37)j, Y1, and clause (5) gives Yl Zoe2. Together with e2 ~ C "y and the induction hypothesis this implies Xl Z (YR.C)/7, and we're done. Next, to prove the right to left direction, we assume that o~(x) is preserved under f E ~ - - simulations, and proceed to prove that Con(~) ~ c~, where Con(or) is the set of .Y'E7~-- consequences of ~(x). So, we assume that Z ~ Con(oOw, and we need to show that Z ~ ot(x)w. Let /" = {--,C  C is in ~/27Z- and w ¢ C2-}. As in Claim A.2 we find interpretations Zc and objects vc such that vc e or(x) Zc A (--,C) 7;c, and we form the disjoint union ,7 of the interpretations Zc. We leave it to the reader to check that there is an lET-g--simulation linking {vc} in Lr (or Zc) to vc in Zc (or ,,7). It follows that vc ~ o4x) J \ C J . We also leave it to the reader to establish an analog of Claim A.3. Next, take w-saturated elementary extensions ,7"* and 27* of , f  and 27, respectively. Define the following relations Z0, Z l, and Ze: Z0 := (Xl,d2)  for all D, X1 c D J* implies d2 e D2-* }. N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999)303-333 329 Z1 := {((X1, Y1), (de, Ee))  for some R, X1R?Y1, and for every meet closed collection of atomic concepts 7~ for Xl and Y1 there exists e2 6 E2 with (77~)Z*d2ee}. Z2 := {((X1, Yl), (de, e2)) I YIZoe2 and for all concepts R, RZr'* dze2 implies X1 ( R'Y*) ; Y1 }. Claim A.10. The tuple Z = (Zo, ZI, Z2) is an Y£7~--simulation. To prove the claim, observe first that conditions (1)-(3), and (5) of Definition 4.17 are trivially satisfied. As to condition (4a), assume that X1Zod2 and Xl (R3*) i" Y1. Let 7~ be any meet closed collection of atomic role names for Xj and YI, and consider the set X'(d2, y) :----- { Rd2y  R c Tg}. LT(d2, y) is finitely satisfiable in 2-*. For, consider Rld2y . . . . .  Rndzy 6 Z'(d2, y). As 7~ is meet closed for Xl and 111, it follows that XI((Rt rq -.. n R n ) J * ) t Y I ,  and hence X1 c_ (3(R~ rq... rq Rn).T) J*. Since XiZod2 it follows that d2 6 (3(R1 n . . -  rq Rn).T) 5c*, hence there exists e2 with (RI rq-. -n Rn)Z*d2e2. Now, using the fact that 2-* is co-saturated, it follows that all of 22(d2, y) is satisfiable in 2-*, say by e2. Clearly, for this e2 we have (-7"~)Z* dze2. Repeat the above argument for every collection of atomic role names that is meet maximal for XI and Y1, and collect the satisfying objects e2 together in a set E2. This proves clause (4a). As to clause (4b), assume XaZod2 and R~C*d2e2. We need a Y1 ~ AJ* with (XI, Y1)Z2(d2, e2). Choose C with e2 ~ C Z*, and define r ( x ,  y) := { ~ c / u  {Rxy I R dee2}. 2-* We claim that 27(x, y) is finitely satisfiable in J *  in such a way that x takes its value in X1. To see this, take R1 (x, y) . . . . .  Rn(x, y) 6 r ( x ,  y). Then d2 ~ (V(R1 vl... I-1Rn).C) z*, and hence X1 ~ (V(RI N ... n Rn).C) J*, as XIZod2. It follows that there exists dL 6 X1 and el 6 A J* with (Rl rq . . . rq Rn)3* dlel and el q~ C 3 . .  By w-saturation, all of Z;(x, y) is satisfiable in ,7* in such a way that x takes its value in X1. This yields an object el such that for some dl 6 X1 ( d r , e l ) E N {  R J(cid:127) 2-* IR d2e2} and el ~ C 3 . . Repeating this argument for every C such that e2 ~ C 2:*, we obtain a set Y1 as desired. Using a by now familiar argument, we can use the existence of an f'L;7C--simulation as the main step in showing that 2- ~ a(x)w. Appendix B. Combinations Let us briefly consider the various combinations now. So as not to get lost in a plethora of logics, we will focus on extensions of A £ ,  .7"Z;$-, ~'£Z{-, 5 r £ N "-, and YZ;7~- by the addition of a single construction. By way of example we show how a characteristic 330 N. Kurtonina, M. de R~jke /Artificial Intelligence 107 (1999) 303-333 notion of simulation for any logic in the .TE- and .AE-hierarchy may be obtained from such extensions. B. 1. Extensions of .A~. As we have seen from the definitions of bisimulation and ,A£-simulation (Definitions 3.2 and 4.4), in the presence of negation or negated atomic concept names, the clause guaranteeing preservation of atomic concept names either becomes symmetric (in the case of full negation) or we have to add preservation of negated atomic concepts as well. That is, let A/2X be one of AEC, .AITlg, AEjX/', or .AE~. To obtain a characteristic notion of simulation for ,AEX, we simply take the characteristic notion of simulation for .f'E2(-- and add to the clause for preservation of atomic concept names the clause that negations of atomic concepts should also be preserved (as in Definition 4.4). Then, the relevant preservation theorems may be proved. B.2. Extensions of Fl~C- With full (qualified) existential quantification 3R.C present in the logic, the back-and- forth condilions that record the presence of roles, have to become symmetric: not only does the relational pattern need to be matched, but it needs to be matched with a similar object. For the semantic characterization results for the logics F E E L / - ,  F/~&N r-, and F/~ET~-, this requires the following. - FECLl--simulations are de fined just like FEb/--simulations (Definition 4.10) except for clause (2), which needs to be: (2') For every (atomic) role name R, if RZdl el and dl Zd2, then there exists e2 E A G with R'Y d2e2 and el Ze2. - FEEH--simulations are defined like .FE.A/'--simulations (Definition 4.14) except for clause (7), which needs to be: (7') (a) If Xl(RZ)?Y~ and X1Zod2, then there exists e2 such that RJd2e2 and YI Zoe2. (b) If R3d2e2 and X1Zod2, then there exists a l-cloud X such that X1 is R- below 2( and ( U 2()Zoe2. - f E ~ g - - s i m u l a t i o n s  are defined like .~-E~--simulations (Definition 4. l 7) except for clause (5), which needs to be: (5') (a) If(X1, Yl)Zt(dz, e2),then YIZoe2. (b) If (XI, Y1)Zz(d2, e2), then YIZoe2. Using the above definitions, semantic characterizations may be given for each of the languages involved. B.3. Extensions of f FSbt- From a logical point of view having disjunctions of concepts available in a description logic simplifies matters considerably: we no longer have to relate sets of objects to single objects, but can simply relate objects to objects. Extending f ' £ 2 g -  by number restrictions N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 33 l or role conjunction requires the following changes to arrive at a characteristic notion of simulation. - YEb/A/'--simulations are defined just like YEN--simulations (Definition 4.14) except that Z0 should now be a relation linking objects to objects, and the Zi (i > O) should link finite sets to finite sets (of the same size). Clauses (4)-(7) should then be replaced by: (4') If dl Zod2 then, for any (atomic) concept name A, if dl ~ A I then d2 ~ A 3. (5 ~) If dlZod2 and (RZ)'dlY1, where IYl = i > 0, then there exists I"2 ___ A 3  with ( Rff )°dz Y2 and Y1Zi Y2. (6') If dlZod2 and (RJ)'d2Y2, where 1121 = i > 0, then there exists Yl ~ A27 with (R:r)°dl Yl and Y1Zi Y2. (7') If Rfd2e2 and dlZod2, then there exists el 6 A y such that R:~dlel and elZoe2. - YLTdT~--simulations are defined just like Y/27~--simulations (Definition 4.17) except that Z0 should now link objects to objects, and Zl and Z2 should link pairs of objects to pairs of objects. Then, clause (2) should be replace by clause (4') above, while clauses (3)-(5) should be replace by: (3') (a) If (dl, el)Zl(d2, e2) then, for every role name R, if RZdlel, then R3d2e2. (b) If (dl, el)Z2(d2, e2) then, for every role name R, if Rffd2e2, then R:rdlel. (4') (a) If dlZod2, then for every role name R, if R:7;dlel, then there exists e2 E A ff with (dl, el)Zl(d2, e2). (b) If dl Zod2, then for every role name R, if R3d2e2, then there exists el 6 A :/: with (all, el)Z2(d2, e2). (5') If (all, el)Z2(d2, e2) then elZoe2. Using the above changes, semantic characterizations may be given for each of the languages involved. B.4. Extensions of Y/2Af- The only extension of Y/2.M- (with a single constructor) that has not been considered so far is Y £ A f ~ - .  The notion of an Y/2.N'R--simulation is arrived at by simply adding together the definitions for an YEA/'--simulation and an Y/2R--simulation, respectively. That is, an Y/2AfT~--simulation is a tuple (Z0, ZI. Z2 . . . .  ; Z~, Z~) such that (Z0, Z1, Z2, ...) is an YEAr--simulation, and (Z0, Z~, Z~) is an Y/27~--simulation. Then, the usual semantic characterization results may be given for Y E A f R - . B.5. Extensions of Y / 2 ~ - Extensions of Y / 2 ~ -  by one of C, £, U, or .Af are all covered in the preceding paragraphs. B.6. Classifying an arbitrary description logic: To obtain a characterization of an arbitrary description logic (defined from Table 1), simply combine the observations listed in Sections B. 1-B.5. More concretely, one may proceed as follows. Let /2 be an arbitrary description logic. First, determine how much 332 N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999) 303-333 negation it admits. If it admits full negation, then we have at least .A/ZC ~</: and we can use the ideas in Sections B. 1 and B.2; the only further options are that/~ admits Af or ~ , and in that case Section B.3 applies. If, on the other h a n d , / :  does not admit full negation, we first see whether it does admit H, and we consult Sections B . 1 - B . 3  if it does. If/Z does not admit H, then one o f Sections B. l, B.2 and B.4 applies. As a concrete example, consider 1: = ¢4Z:EAf~. As .A/~ ~</Z, the atomic clause in the notion of an /Z-simulation needs to preserve both atomic concepts and their negations. O n  top o f  that we need to ensure preservation of C (as explained in Section B.2), and of .Af and ~ (as explained in Section B.4). Putting things together, we get that the n o t i o n of simulation needed to characterize v4/2EAf~, is a tuple (Z0, Zj . . . .  ; Z~, Z~), where (Z0, Z l . . . .  ) is an .A£CA/'-simulation (which is just like ~ / ~ E . A f - - s i m u l a t i o n s , except for the atomic clause), and where (Z0, Z~, Z~) is an . A / ~ E ~ - - s i m u l a t i o n  (which is just like br/:C.M - - s i m u l a t i o n s , except for the atomic clause). References  1  S. Abiteboul, R. Hull, V. Vianu, Foundations of Databases, Addison-Wesley, Reading, MA, 1995. 2 E Baader, A formal definition for the expressive power of terminological knowledge representation languages, J. Logic Comput. 7 (1997) 33-54. 3 E Buneman, S. Davidson, G. Hillebrand, D. Suciu, A query language and optimization techniques for unstructured data, in: Proc. 1996 ACM SIGMOD International Conference on Management of Data, 1996. 4 J. van Benthem, Modal Logic and Classical Logic, Bibliopolis, Napoli, 1985. 5 J. Barwise, S. Feferman (Eds.), Model-Theoretic Logics, Springer, Berlin, 1985. 6 A. Borgida, On the relative expressiveness of description logics and predicate logics, Artificial Intelligence 82 (1996) 353-367. 7 M. Cadoli, L. Palopoli, M. Lenzerini, Datalog and description logics: Expressive power, in: Proc. International Workshop on Database Programming Languages 1997, Lecture Notes in Computer Science, Vol. 1369. Springer, Berlin, 1998. 8 G. De Giacomo, M. Lenzerini, A uniform framework for concept definitions in description logics, J. Artificial Intelligence Research 6 (1997) 87-110. 9 EM. Donini, M. Lenzerini, D. Nardi, W. Nutt, The complexity of concept languages, Inform. and Comput. 134 (1997) 1-58. 10 EM. Donini, M. Lenzerini, D. Nardi, A. Schaerf, Reasoning in description logics, in: G. Brewka (Ed.), Principles of Knowledge Representation, Studies in Logic, Language and Information, CSLI Publications, Stanford, CA, 1996, pp. 191-236. l11 K. Doets, Basic Model Theory, CSLI Publications, Stanford, CA, 1996. 12 R. Fagin, Generalized first-order spectra and polynomial-time recognizable sets, in: R.M. Karp (Ed.), Complexity of Computation, AMS, Providence, RI, 1974, pp. 43-74. 13 D.M. Gabbay, Expressive functional completeness in tense logic, in: U. Miinnich (Ed.), Aspects of Philosophical Logic, Reidel, Dordrecht, 198 l, pp. 9 l - l 17. 14 E. Hemaspaandra, 1998 (personal communication). 15 W. Hodges, Model Theory, Cambridge University Press, Cambridge, UK, 1993. 16 M. Hollenberg, Bisimulations for intersection, Manuscript, University of Utrecht, 1996. 17 N. Immerman, D. Kozen, Definability with bounded number of bound variables, in: Proc. LICS-87, Washington, 1987, Computer Society Press. 18 N. Immerman, Relational queries computable in polynomial time, Inform. and Control 68 (1986) 86--104. 19 D. Janin, I. Walukiewicz, On the expressive completeness of the propositional /z-calculus w.r.t, monadic second-order logic, in: Proc. CONCUR-96, 1996. 20 N. Kurtonina, M. de Rijke, Bisimulations for temporal logic, J. Logic, Language and Information 6 (1997) 403-425. N. Kurtonina, M. de Rijke /Artificial Intelligence 107 (1999)303-333 333 21 N. Kurtonina, M. de Rijke, Simulating without negation, J. Logic Comput. 7 (1997) 503-524. 22 R. Milner, Communication and Concurrency, Prentice-Hall, Englewood Cliffs, NJ, 1989. 23 S. Popkorn, First Steps in Modal Logic, Cambridge University Press, Cambridge, UK, 1994. 24 M. de Rijke, A note on graded modal logic, Studia Logica (to appear). 25 K. Schild, A correspondence theory for terminological logics, in: Proc. IJCAI-91, Sydney, Australia, 1991, pp. 466--471. 26 D. Toman, D. Niwifiski, First-Order Queries over Temporal Databases Inexpressible in Temporal Logic, Manuscript, 1997. 27 S. Vickers, Topology via Logic, Cambridge University Press, Cambridge, UK, t 989. 