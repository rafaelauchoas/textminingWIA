Artificial Intelligence 217 (2014) 43–75Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintSpatial reasoning with RCC8 and connectedness constraints in Euclidean spacesRoman Kontchakov a, Ian Pratt-Hartmann b,c,∗a Department of Computer Science and Information Systems, Birkbeck, University of London, UKb School of Computer Science, University of Manchester, UKc Institute of Mathematics and Computer Science, University of Opole, Poland, Michael Zakharyaschev aa r t i c l e i n f oa b s t r a c tArticle history:Received 10 March 2014Received in revised form 15 July 2014Accepted 31 July 2014Available online 7 August 2014Keywords:Qualitative spatial reasoningSpatial logicEuclidean spaceConnectednessSatisfiabilityComplexity◦◦The language RCC8 is a widely-studied formalism for describing topological arrangements of spatial regions. The variables of this language range over the collection of non-empty, +(Rn), and its regular closed sets of n-dimensional Euclidean space, here denoted RCnon-logical primitives allow us to specify how the interiors, exteriors and boundaries of these sets intersect. The key question is the satisfiability problem: given a finite set of atomic RCC8-constraints in m variables, determine whether there exists an m-tuple +(Rn) satisfying them. These problems are known to coincide for all of elements of RCn ≥ 1, so that RCC8-satisfiability is independent of dimension. This common satisfiability problem is NLogSpace-complete. Unfortunately, RCC8 lacks the means to say that a spatial region comprises a ‘single piece’, and the present article investigates what happens when this facility is added. We consider two extensions of RCC8: RCC8c, in which we can state that a region is connected, and RCC8c, in which we can instead state that a region has a connected interior. The satisfiability problems for both these languages are easily seen to depend on the dimension n, for n ≤ 3. Furthermore, in the case of RCC8c, we show that there exist finite sets of constraints that are satisfiable over +(R2), but only by ‘wild’ regions having no possible physical meaning. This prompts RCus to consider interpretations over the more restrictive domain of non-empty, regular +(Rn). We show that (a) the satisfiability problems for RCC8cclosed, polyhedral sets, RCP+(R) are distinct and both NP-complete; (equivalently, RCC8c+(R2) are identical and(b) the satisfiability problems for RCC8c over RC+(R2)+(R2) and RCPNP-complete; (c) the satisfiability problems for RCC8care distinct, and the latter is NP-complete. Decidability of the satisfiability problem for RCC8care not interestingly different from RCC8. We finish by answering the following question: given that a set of +(Rn), how complex is RCC8c- or RCC8cthe simplest satisfying assignment? In particular, we exhibit, for both languages, a sequence +(R2), such that the size of Φn grows polynomially of constraints Φn, satisfiable over RCPin n, while the smallest configuration of polygons satisfying Φn cuts the plane into a +(R2), RCC8cnumber of pieces that grows exponentially. We further show that, over RCagain requires exponentially large satisfying diagrams, while RCC8ccan force regions in satisfying configurations to have infinitely many components.+(R2) is open. For n ≥ 3, RCC8c and RCC8c+(R2) and RCP◦over RC-constraints is satisfiable over RC+(R) and RCP+(Rn) or RCP) over RCover RC◦◦◦◦◦© 2014 Elsevier B.V. All rights reserved.* Correspondence to: School of Computer Science, University of Manchester, UK.E-mail addresses: roman@dcs.bbk.ac.uk (R. Kontchakov), ipratt@cs.man.ac.uk (I. Pratt-Hartmann), michael@dcs.bbk.ac.uk (M. Zakharyaschev).http://dx.doi.org/10.1016/j.artint.2014.07.0120004-3702/© 2014 Elsevier B.V. All rights reserved.44R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 1. RCC8-relations over discs in R2.Fig. 2. Two arrangements of regions in the plane satisfying (1).1. IntroductionSpatial reasoning in everyday life possesses two distinctive—and related—characteristics: it is primarily concerned with extended, as opposed to point-like entities, and it typically invokes qualitative, as opposed to quantitative, concepts [1–3]. This observation has prompted consideration, within the Artificial Intelligence community, of representation languages whose variables range over some specified collection of extended spatial objects, and whose non-logical primitives are interpreted as qualitative spatial properties and relations involving those objects. As might be expected, the logical proper-ties of such languages depend on the geometry of the spaces over which they are interpreted—in most applications, two-and three-dimensional Euclidean space. The present article draws attention to some hitherto overlooked subtleties regarding this dependency.By far the best-known language for Qualitative Spatial Reasoning is RCC8, originally proposed—in essentially equivalent formulations—by Egenhofer and Franzosa [4], Egenhofer and Herring [5], Randell et al. [6] and Smith and Park [7]. This quantifier-free language allows us to specify how regions and their interiors are related to each other. It employs an infinite collection of variables r1, r2, . . . , ranging over spatial regions, together with six binary predicates: NTPP (non-tangential proper part), TPP (tangential proper part), EQ (equality), PO (partial overlap), EC (external contact) and DC (disjointness). The relations denoted by these predicates are illustrated, for closed discs in the plane, in Fig. 1. More formally: NTPP(r1, r2) if r1is included in the interior of r2; TPP(r1, r2) if r1 is included in r2 but not in its interior; PO(r1, r2) if the interiors of r1 and r2 intersect, but neither is included in the other; and EC(r1, r2) if r1 and r2 intersect, but their interiors do not. A constraintis a statement R(ri, r j), where R is one of these six predicates. For example, the constraintsEC(r1, r2), TPP(r1, r3), NTPP(r2, r4)(1)state that regions r1 and r2 are in external contact, with the former a tangential proper part of r3 and the latter a non-tangential proper part of r4. Fig. 2 shows two arrangements of regions satisfying these constraints.−1 and TPPThe RCC8-relations mentioned above were defined in [6] by means of a formalism referred to there as the Region −1, we Connection Calculus. Of these, the relations NTPP and TPP are asymmetric: counting their converses, NTPPobtain eight relations in all, hence the name RCC8. Syntactically, the original Region Connection Calculus is the language of first-order logic (with equality) over the signature consisting of a single binary predicate C , variously referred to as ‘contact’, or (confusingly) ‘connection.’ The origin of this predicate can be traced back, via Clarke [8,9], to the philosophical work of Whitehead [10] and de Laguna [11]. Semantically, one is supposed to think of C as holding between two regions just in case they share at least one point, though matters are somewhat muddied by the recurrent suggestion that this notion should be regarded as an (undefined) primitive. However, the etymology of the term RCC8 need not concern us further: it is now standardly used for the quantifier-free language featuring the six primitives illustrated in Fig. 1, and we simply follow suit. The motivation for focussing on this particular collection of primitives is not always clear. Egenhofer and Franzosa [4] and Egenhofer and Herring [5] classify relationships between regions in terms of intersections of their interiors, exteriors and boundaries and show, in particular, that only the RCC8 relations are possible between closed disc-homeomorphs in the −1 are Euclidean plane. Düntsch, Wang and McCloskey [12] observe that NTPP, TPP, EQ, PO, EC, DC, NTPPexactly the atoms of the smallest relation algebra defined on the set of closed discs in the Euclidean plane that contains the contact relation, C . In fact, Li and Ying [13] show that the set of closed disc-homeomorphs in the Euclidean planerealizes the same relation algebra. (See also Li and Li [14] for an interesting extension of this result.) In any case, the language RCC8 is by now firmly established as a basic formalism in the field of Qualitative Spatial Reasoning. In particular, −1 and TPPR. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7545Fig. 3. Non-regular and regular closed subsets of a) R2, and b) R3.the standard geographic query language for RDF data GeoSPARQL,1 suggested by the Open Geospatial Consortium, is based on the RCC8 relations.How are we to understand spatial reasoning in RCC8? Observe that, in (1), nothing is said about the relation between r3 and r4. What are the possibilities? A little thought suffices to convince us that DC and EC are both impossible. As we might say, the two sets of constraintsEC(r1, r2), TPP(r1, r3), NTPP(r2, r4), DC(r3, r4),EC(r1, r2), TPP(r1, r3), NTPP(r2, r4), EC(r3, r4)(2)(3)are unsatisfiable. Allowing ourselves to combine RCC8-constraints using arbitrary sentential connectives, we could express this knowledge as a formula(cid:2)(cid:3)EC(r1, r2) ∧ TPP(r1, r3) ∧ NTPP(r2, r4)(cid:2)→ ¬(cid:3)DC(r3, r4) ∨ EC(r3, r4),which we take to be true of all tuples of regions r1, . . . , r4. The validity of this formula thus represents a geometrical fact to which an agent employing RCC8 as a spatial representation language should have access. Satisfiability and validity being dual notions, it suffices, from a computational perspective, to consider only the former. And since, in this context, nothing essential is added by sentential connectives, we may confine attention in the sequel to finite sets of constraints, interpreted conjunctively. Following common practice, we refer to such a set as an RCC8-constraint network (or, simply, RCC8-network).When introducing the notion of satisfiability of RCC8-networks, we employed the term spatial region as if it needed no clarification, giving as examples the regions in Figs. 1 and 2. But what is a spatial region, exactly? In formal terms, when we ask whether an RCC8-network is satisfiable, over what domain are we taking its variables to range? Fix some topological space T . A subset X ⊆ T is said to be regular closed if X is the topological closure of some open set in T (equivalently, if it is +(T ). Most recent literature equal to the closure of its interior). We denote the non-empty, regular closed subsets of T by RC+(Rn) for some fixed n (usually 2 or 3). Roughly on Qualitative Spatial Reasoning takes regions to be elements of RCspeaking, the regular closed subsets of R2 are those closed sets with no ‘filaments’ or ‘isolated points’ (Fig. 3a); similarly, the regular closed subsets of R3 are those closed sets with no ‘flanges,’ ‘filaments’ or ‘isolated points’ (Fig. 3b). Determining the +(Rn) has been the subject of intensive research; see, e.g. [15–18]. satisfiability of collections of RCC8 constraints over RC+(Rn) for It is known that satisfiability does not depend on dimension: that is, if an RCC8-network is satisfiable over RC+(Rn) for every such n [19]. This (common) satisfiability problem is known to some n ≥ 1, then it is satisfiable over RCbe NLogSpace-complete [15,17,20,21]. We mention in this connection that some authors allow RCC8-constraints to feature sets of the basic RCC8-relations of Fig. 1, interpreted disjunctively. Thus, for example, the constraint {NTPP, TPP, EQ}(r1, r2)states that r1 is a (proper or improper) part of r2. This extension entails a computational cost: the satisfiability problem for sets of disjunctive RCC8 constraints is NP-complete [22], though optimized algorithms have been developed to attack it [23]. More generally, one could allow the unrestricted use of Boolean connectives in RCC8-constraints, in which case it +(Rn) is also NP-complete. However, from the point of is easy to see that the problem of determining satisfiability over RCview of this article, nothing is gained by considering such extensions of the RCC8-formalism, and we do not consider them in the sequel.At first glance, the regular closed sets in Euclidean space serve as an attractive mathematical model of our pre-theoretic notion of a spatial region. No two regular closed subsets of Rn differ only with respect to boundary points; at the same time, the regular closed sets of any topological space form a Boolean algebra under the natural operations of ‘fusion,’ ‘complementation’ and ‘taking common parts.’ Thus, confining attention to regular closed sets allows us to finesse the apparently senseless question of whether the regions occupied by physical objects include their boundaries, while at the same time retaining a simple algebra for manipulating regions. Closer inspection, however, reveals a more complicated picture. Most obviously, regular closed sets may consist of more than one ‘piece,’ and may contain ‘holes’; and such sets may not necessarily be what we have in mind when we speak of regions. In 3-dimensional space (or more), this matter may +(Rn) (n ≥ 3) is satisfiable by regions safely be ignored: any collection of RCC8-constraints satisfiable by elements of RChomeomorphic to n-dimensional balls. In dimensions 1 and 2, by contrast, we are not free to assume that regions are so simple, and in particular are not free to assume that they are connected. This is most easily seen in 1-dimensional space, 1 www.opengeospatial.org/standards/geosparql.46R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 4. a) satisfying (5) over RC+(R2) and b) a connected but not interior-connected region.where the connected, non-empty, regular closed subsets are the intervals of the forms (−∞, b], [a, b] or [a, ∞) (with a < b). Thus, for example, the RCC8-networkEC(r3, r1)EC(r1, r2),is satisfiable over RCsatisfiable by connected elements of RCnot by connected elements of RCthat the notion of regionhood provided by the non-empty regular closed sets may be too liberal for many applications.EC(r2, r3),(4)+(R) by the assignment r1 = [0, 1], r2 = [1, 2], r3 = [−1, 0] ∪ [2, 3]; however, (4) is obviously not +(R2), but +(R2). (We shall encounter an example in Section 4.) The moral of these observations is +(R). Likewise, there exist RCC8-networks that are satisfiable over RCWhat, then, would a more conservative approach look like? We have two options. The first is to restrict, by fiat, the domain over which our variables can range to those regular closed sets satisfying certain additional properties; the second is to expand our language with additional primitives able to express those properties. An example of the first approach is provided by Schaefer, Sedgwick and Štefankoviˇc [24,25], who considered the RCC8-satisfiability problem over sets of closed +(R2). disc-homeomorphs in R2. They showed that this problem is NP-complete rather than NLogSpace-complete over RC(However, it is membership in NP rather than NP-hardness that is remarkable.) An example of the second approach is provided by Davis, Gotts and Cohn [26], who investigated the extension of RCC8 with constraints of the form conv(r) (‘r is +(R2), is again decidable, though convex’). They showed that the satisfiability problem for this language, interpreted over RCwith the same complexity as the satisfiability problem for quantifier-free real arithmetic. The present article also takes this latter approach. In particular, we investigate the language RCC8c, which extends RCC8 with constraints of the form c(r)(‘r is connected’). Unlike RCC8, RCC8c can discriminate between low-dimensional Euclidean spaces. Indeed, as we saw in our discussion of (4), the RCC8c-networkEC(r2, r3),EC(r3, r1),EC(r1, r2),(5)+(R2), for example, as in Fig. 4a. In Section 4, is not satisfiable over RC+(R3). However, it is easily we present an RCC8c-network that is not satisfiable over RC+(Rn) coincides for all n ≥ 3. As we might put it, RCC8c can tell seen that the satisfiability of RCC8c-networks over RCthe difference between dimensions 1, 2 and 3; however, it cannot tell the difference between dimensions greater than or equal to 3.+(R); on the other hand, (5) is satisfiable over RC+(R2), but is satisfiable over RCc(r2),c(r1),c(r3)Actually, the topological notion of connectedness is perhaps not quite what we might have in mind for certain applica-tions of qualitative spatial reasoning. Consider, for example, the region formed by two closed triangles touching externally at a common vertex, as in Fig. 4b. This set is—according to the usual definition—connected, though its interior is not. And indeed, we are loath to take such a figure to represent, say, a contiguous plot of land on a map, since no extended ob-ject, however small, could squeeze from one part of this region to another without crossing its boundary.2 Accordingly, we ◦(r) (‘r has a connected additionally consider the language RCC8cinterior’). For regular closed sets in Euclidean space of dimension greater than 1, the property of having a connected interior +(R), connectedness and the property of having a con-is strictly stronger than the property of being connected. (For RC◦nected interior coincide.) Again, it is routine to show that RCC8ccan tell the difference between dimensions 1, 2 and 3, but no more., which extends RCC8 with constraints of the form c◦The property of having a connected interior, however, brings into relief a further important issue regarding the sets of points which we are prepared to countenance as regions—one that has gone largely unnoticed in the literature on Qualitative Spatial Reasoning. Consider the two closed subsets of R2 depicted in Fig. 5. The left-hand region is disconnected—indeed it has infinitely many components spiralling endlessly inwards towards a limit point. (Note that, since the set in ques-tion is closed, it must contain this limit point.) By contrast, the right-hand region is connected—indeed it has a connected interior—but spirals endlessly outwards in ever more compressed cycles towards a limiting hexadecagon. (Again, since the set in question is closed, it includes this limiting hexadecagon.) Both sets are easily seen to be regular closed. Nevertheless,2 One famous exception (proving the rule) is the town Jungholz, an exclave of Austria connected to the rest of that country by a single point (en.wikipedia.org/wiki/Jungholz). This configuration caused various problems before Austria joined the EU. See also jungholz.enclaves.org.R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7547Fig. 5. Non-tame regular closed subsets of R2.both are in some sense illegitimate: they could never correspond to the parts of surfaces occupied (or left unoccupied) by physical objects. The question thus arises as to whether such ‘regions’ make a difference to the satisfiability of spatial constraints. After all, it might be of little comfort to know that a collection of constraints is satisfiable if the only satisfying assignments involve regions which make no physical sense. The answer depends, of course, on where we draw the distinc-tion between legitimate and illegitimate regions; but fortunately, we have a natural answer at hand. Let us say that a region is polyhedral if it is a finite union of finite intersections of closed half-planes. Equivalently, a polyhedral region is a regular closed region that is semi-linear—definable (using standard Cartesian coordinates) by means of a Boolean combination of linear inequalities. Polyhedral sets, in this sense, are not required to be connected, or bounded, and are not required to have connected complements; however, they never exhibit the strangeness of the regular closed sets depicted in Fig. 5. In particular, all polyhedra consist of finitely many ‘pieces’ (contrast Fig. 5a), and have boundaries that are ‘reachable’ from their interiors (contrast Fig. 5b). (We make the relevant notions precise below.) The regular closed polyhedral sets in Rnform a Boolean sub-algebra of the regular closed algebra, and we denote its non-empty elements by RCP+(Rn).◦◦◦+(Rn), rather than over RCArguably, the really important problem regarding any language for Qualitative Spatial Reasoning is that of determining +(Rn). For any bounded subset of Rn can be approximated the satisfiability of networks over RCP+(Rn), a fact which underlies the almost universal adoption of semi-linear with arbitrary precision by an element of RCPsets as a spatial data model for Geographical Information Systems (GIS). Does restricting attention to polyhedral regions make a difference to satisfiability? For RCC8 (which lacks connectedness constraints), the answer is no: any collection +(Rn); as we might put it, of RCC8-constraints satisfiable over RC+(Rn). In the sequel, we show that RCC8c (equivalently, RCC8 is insensitive to the difference between RC+(R); we further show that RCC8cRCC8cis sensitive to the +(R2), but that RCC8c is not. Both languages are easily seen to be insensitive to the difference between RC+(Rn) for n ≥ 3. Thus, when working with RCC8 or RCC8c in the Euclidean plane, difference between RCwe can ignore the issue of ‘wild’ regions; when working with RCC8cover the Euclidean plane, we have two problems to consider: satisfiability over RCP) is sensitive to the difference between RC+(R2) and RCP+(Rn) and RCP◦, we cannot. That is, when interpreting RCC8c+(R2).+(R2) and satisfiability over RC+(Rn) (n ≥ 1) is easily seen to be satisfiable over RCP+(Rn) and RCP+(R) and RCP+(Rn) and RCP+(R2) and RCPThe plan of the article is as follows. Section 2 provides formal definitions of the languages RCC8, RCC8c and RCC8c◦+(R2), but that RCC8c is insensitive to the difference between RC◦. +(R2). Section 3 establishes various topological facts about their principal domains of interpretation, RCSection 4 provides a systematic treatment of various results on RCC8 that have appeared in the literature. Specifically, +(Rn) all coincide, and are we show that, for n ≥ 1, the satisfiability problems for RCC8 over both RC◦NLogSpace-complete. We also obtain, as a simple corollary, corresponding results for the languages RCC8c and RCC8cwhere n ≥ 3. In Section 5, we show that RCC8c and RCC8care sensitive to dimension n in the range 1 ≤ n ≤ 3; we further show that these languages are sensitive to the difference between RCis sensitive +(R2) and +(R2) and RCPto the difference between RC+(R2). Having mapped out the landscape of satisfiability problems, we then turn to the question of computational com-RCPplexity. Section 6 deals with the one-dimensional case: we show that the satisfiability problems for RCC8c (equivalently, +(R) are both NP-complete. Section 7 considers the more interesting, and challenging, RCC8c+(R2)—is two-dimensional case. We show that the satisfiability problem for RCC8c over RC+(R2) is also NP-complete. The decidability NP-complete; and we show that the satisfiability problem for RCC8c+(R2) is left open. In the final section, we investigate the ability of the of the satisfiability problem for RCC8clanguages considered above to enforce ‘fragmented’ satisfying arrangements, showing that RCC8, RCC8c and RCC8call +(R2), we are guaranteed a satisfying tuple whose exhibit different behaviour. For any RCC8-network satisfiable over RCdiagram is bounded in size by a polynomial function of the number of constraints. We show that, when interpreted over : specifically, we construct a sequence of satisfiable constraints ΦnRCP(in either language) such that the size of Φn grows polynomially as a function of n, and such that the smallest configuration of polygons satisfying Φn cuts the plane into a number of pieces that grows exponentially in n. We further show that,can force regions in satisfying over RC+(R2), RCC8c again requires exponentially large satisfying diagrams, while RCC8c+(R2), this result fails for RCC8c and RCC8c+(R2)—equivalently, over RCP+(R), that RCC8c+(R) and RCP+(R) and RCP) over RCover RCPover RC◦◦◦◦◦◦◦48R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75configurations to have infinitely many components. The differences that emerge between the superficially similar languages RCC8c and RCC8cin the Euclidean plane provide a striking illustration of the subtleties that need to be confronted when working with even relatively simple languages extending RCC8.◦2. Preliminaries−◦◦ −− \ X, the interior of X by X. We call X regular closed if X = XLet T be a topological space. We denote the closure of any X ⊆ T by X, and the boundary of X by δ X = X, and denote by RC(T ) the set of all regular closed subsets of T . We preferentially use the (possibly decorated) letters p, q, r, s, t to range over regular closed sets. It is a standard result ◦ )−◦ ∩ sthat RC(T ) is a Boolean algebra under the operations r + s = r ∪ s, r · s = (r, 1 = T and 0 = ∅; in (cid:7)−◦ )for any X ⊆ T [27, pp. 25–27]. We write fact, this Boolean algebra is complete, with and X+(T ) as an abbreviation for RC(T ) \ {∅}. A subset X ⊆ T is compact if any cover of X by open sets has a finite subcover; RCwhen T = Rn, this property coincides with that of being closed and bounded. Any subset X ⊆ T has a subspace topology, whose open sets are those of the form O ∩ X , where O is open in T ; X is connected if it cannot be covered by the union of two non-empty and disjoint subsets which are open in the subspace topology. A maximal connected subset of X is called a component of X . We say that X is interior-connected if Xis connected. For elements of RC(T ), interior-connectedness implies connectedness (indeed, if Xis connected then its closure, X , is connected as well), but not vice versa., −r = (T \ r)−X = ((X = (◦X)−)(cid:4)(cid:5)(cid:6)◦◦◦2.1. Constraint networksIf T is any topological space, we define eight binary relations on RC+(T ) as follows:DC(r1, r2)EC(r1, r2)PO(r1, r2)EQ(r1, r2)TPP(r1, r2)NTPP(r1, r2)−1(r1, r2)TPP−1(r1, r2)NTPP◦1r1 ∩ r2 = ∅,iffr1 ∩ r2 (cid:14)= ∅ but riff◦◦∩ rriff12r1 = r2,iffr1 ⊆ r2 but r1 (cid:2) riffr1 ⊆ riffiff TPP(r2, r1),iff NTPP(r2, r1).∩ r(cid:14)= ∅, r1 (cid:2) r2 and r2 (cid:2) r1,= ∅,◦2◦2 and r2 (cid:2) r1,◦2 but r2 (cid:2) r1,◦◦Together, these are known as the RCC8-relations. The first six are illustrated, for closed discs in the plane, in Fig. 1. It is +(T ) for any topological routine to show that the RCC8-relations are jointly exhaustive and pairwise disjoint (JEPD) over RCspace T : given r, s ∈ RC+(T ), the ordered pair (r, s) lies in exactly one of the RCC8-relations.−1 or NTPP−1 and NTPPFix some countably infinite set of variables, V . An RCC8-constraint is an expression R(r, s), where r, s ∈ V and R is −1; an RCC8c-constraint is either an RCC8-constraint or one of the symbols DC, EC, PO, EQ, TPP, NTPP, TPP-constraint is either an RCC8-constraint or an expression of the an expression of the form c(r), where r ∈ V ; an RCC8c◦(r), where r ∈ V . An RCC8-constraint network is a finite set of RCC8-constraints; and similarly for RCC8c-constraint form c−1 can always network and RCC8cbe eliminated by transposing variables. In the sequel, therefore, we typically employ only the six relations DC, EC, PO, EQ, TPP and NTPP.-constraint network. When writing constraint networks, the relations TPPIf T is a topological space, a frame over T is a subset F ⊆ RC+(T ). Typical examples of frames are the set of closed disc-homeomorphs in R2 or the set of regular closed polyhedra in R3. Where F is clear from context, we refer to its elements as regions. An assignment over a frame F is a function a: V → F. We say that a satisfies an RCC8-constraint ◦(r) if a(r) is R(r, s) if a(r) stands in the relation R to a(s); we say that a satisfies c(r) if a(r) is connected, and a satisfies cinterior-connected. A constraint network Φ is satisfied by a if a satisfies all the constraints in Φ; and Φ is satisfiable over F if some a: V → F satisfies Φ. To aid readability, we use the (possibly decorated) letters p, q, r, s, t, . . . both for variables and for the regions they are mapped to by some (putative) assignment. We remark that, since, for regular closed sets, ◦interior-connectedness implies connectedness, any assignment satisfying an RCC8c-constraint network Φ automatically ◦satisfies the RCC8c-constraint network obtained by replacing every occurrence of cin Φ by c. We remark in passing that, in place of regular closed sets, we could just as easily have worked with regular open sets. (A set X is regular open if X = ( X.) The regular open subsets of a topological space T form a Boolean algebra isomorphic to RC(T ). Of course, in that case, we would have to work with the predicates c(denoting the property of having a connected closure) and c, in place of c and c; but otherwise, there would be no difference. Our choice of regular closed sets is purely a matter of convention.We employ the convention that, if ¯r = r1, . . . , rn is some tuple of variables, Φ(¯r) is the constraint network Φ with variables taken in the indicated order. (Thus, for instance, we can meaningfully say that the two constraint networks Φ(¯r)and Ψ (¯s) are satisfied by the same tuples of regions.) We take the notation Φ(¯r) to indicate that Φ contains no variables other than r1, . . . , rn; however, we do not insist that each ri actually occurs in Φ. If L is any of the languages RCC8, RCC8cand RCC8c, we denote by Sat(L, F) the satisfiability problem for L-constraint networks over F, namely:◦−)−◦◦R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7549Given: an L-constraint network Φ.Return: yes, if Φ is satisfiable over F; no, otherwise.2.2. Type-certificates and point-certificates◦For a set V of variables, we take the set V ◦ = {r◦ | r ∈ V} and call its elements interior terms. Interior terms will be used in some of the proofs below; however, we stress that they are not part of the syntax of the languages RCC8, RCC8c or RCC8c. Variables and interior terms will be referred to as terms.Let Φ(¯r) be an RCC8-constraint network. Observe that the semantics of RCC8-constraints was defined above us-ing universal conditions such as r1 ⊆ r2 (that is, ∀x (x ∈ r1 → x ∈ r2)) and existential conditions such as r2 (cid:2) r1 (that is, +(T ) providing witnesses for ∃x (x ∈ r2 ∧ x /∈ r1)). Thus, to satisfy Φ in RCall the existential conditions given by Φ (including non-emptiness of regions) and complying with the universal ones. The following notion will be used to characterize membership of points in regions assigned to variables of Φ. A Φ-type (or simply type when Φ is clear) is any set τ of terms with variables from Φ such that+(T ), we have to find an assignment a over RC(type) for each variable r in Φ, if r◦ ∈ τ then r ∈ τ .A set of Φ-types τ 1, . . . , τ m is called a type-certificate for Φ if it satisfies the following existential conditions:◦ ∈ τ k;(reg-e) for each variable r in Φ, there is k (1 ≤ k ≤ m) for which r(ec-e) for each EC(ri, r j) ∈ Φ, there is k (1 ≤ k ≤ m) for which ri, r j ∈ τ k;(po-e) for each PO(ri, r j) ∈ Φ, there is k (1 ≤ k ≤ m) for which r∈ τ k;(diff-e) for each PO(ri, r j) ∈ Φ, each PO(r j, ri) ∈ Φ, each TPP(ri, r j) ∈ Φ and each NTPP(ri, r j) ∈ Φ, there is k (1 ≤ k ≤ m) ◦i , r◦jfor which r∈ τ k and ri /∈ τ k (note that r j (cid:2) ri if and only if r\ ri (cid:14)= ∅ for regular closed ri and r j );◦j◦j(tpp-e) for each TPP(ri, r j) ∈ Φ, there is k (1 ≤ k ≤ m) for which ri ∈ τ k and r◦j /∈ τ k,as well as the following universal conditions, for all k (1 ≤ k ≤ m):(dc-u) for each DC(ri, r j) ∈ Φ, either ri /∈ τ k or r j /∈ τ k;(ec-u) for each EC(ri, r j) ∈ Φ, either r∩ r j = ∅ and ri ∩ r= ∅ for regular closed ri and r j );◦i /∈ τ k or r j /∈ τ k and either rto r◦i◦j(eq-u) for each EQ(ri, r j) ∈ Φ, ri ∈ τ k if and only if r j ∈ τ k, and r◦(tpp-u) for each TPP(ri, r j) ∈ Φ, if ri ∈ τ k then r j ∈ τ k, and if ri(ntpp-u) for each NTPP(ri, r j) ∈ Φ, if ri ∈ τ k then r∈ τ k.◦i∈ τ k then r∈ τ k if and only if r◦j∈ τ k;◦j∈ τ k;Given an assignment a over RC(cid:8)+(T ), we associate with every point x ∈ T the Φ-type(cid:9)(cid:9)(cid:8)(cid:2)τ (x, a) =r ∈ ¯r | x ∈ a(r)∪◦ | x ∈ra(r), r ∈ ¯r◦j(cid:3)◦◦j /∈ τ k or ri /∈ τ k (note that r◦i∩ r◦j= ∅ is equivalent and call it the Φ-type of x under a. By the semantics of RCC8, if a satisfies Φ(¯r) then there are points xi , for 1 ≤ i ≤ 3|Φ|, whose Φ-types τ (xi, a) form a type-certificate for Φ; we call any such set a point-certificate for Φ (under a). Thus, every satisfiable constraint network Φ has a type-certificate of cardinality at most 3|Φ|. In Theorem 11, we establish a converse: +(R). Lemma 24 extends this result if a set of RCC8-constraints Φ has a type-certificate, then Φ is satisfiable over RCPto the language RCC8c: if there is a type-certificate for Φ that satisfies certain additional ‘planarity’ conditions, then Φ is +(R2) with some chosen regions being connected. Lemma 26 gives a (partial) analogue for the language satisfiable over RCPRCC8c◦.2.3. Important framesVarious frames over Rn present themselves for consideration. Obviously, RC+(Rn) itself is a frame; however, as men-tioned in Section 1, we may wish to consider more restricted frames of ‘well-behaved’ regions.A function T → S from one topological space to another is continuous if the inverse image of any open set is an open set. A homeomorphism is a continuous function having a continuous inverse (on its range). We refer to a homeomorphism α: [0, 1] → Rn as a Jordan arc. The points α(0) and α(1) are called the endpoints of α; all other points of α are called internal points. Where no confusion results, we identify any Jordan arc α with its locus α([0, 1]). Two Jordan arcs α and βproperly intersect if there is a point x which is an internal point of both α and β. If α, β are Jordan arcs having the unique common point α(1) = β(0), we write αβ to denote, ambiguously, any Jordan arc from α(0) to β(1) with locus α ∪ β. If x1 = α(a1) and x2 = α(a2) are points on α with a2 > a1, then α[x1, x2] denotes a Jordan arc whose locus is the segment of α between x1 and x2, and α[x2, x1] denotes the same Jordan arc but with reversed orientation. A subset X of Rn is arc-connected if any two points of X are joined by a Jordan arc lying in X . Arc-connectedness implies connectedness, and, 50R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75for open sets, the converse implication holds. If X ⊆ Rn and x ∈ Rn, an end-cut (to x) in X is a Jordan arc α ⊆ X ∪ {x}with endpoint x. If such an end-cut exists, then x is accessible from X . Denote by S1 the unit circle (in R2) and by S2the unit sphere (in R3), with both sets having the subspace topology. Topologically, we may think of Sn (n = 1, 2) as the result of adding a ‘point at infinity’ to Rn. We refer to a homeomorphism γ : S1 → T , where T is either R2 or S2, as a Jordan curve. Again, we identify Jordan curves with their loci, where convenient. The Jordan curve theorem states that, for any Jordan curve γ in S2, its complement S2 \ γ has exactly two components. This theorem has a converse: if X is a closed set such that S2 \ X has two components, with each x ∈ X accessible from both of them, then X is (the locus of) a Jordan curve (see, e.g., [28]). The Schönflies theorem states that, if γ1 and γ2 are Jordan curves in S2 and fis a homeomorphism from (the locus of) γ1 onto (the locus of) γ2, then f can be extended to a homeomorphism from S2 onto itself.A subset X ⊆ R2 (or X ⊆ S2) is a closed disc-homeomorph if it is the homeomorphic image of the unit disc {(a, b) |a2 + b2 ≤ 1}. (The Schönflies theorem tells us that, topologically speaking, closed disc-homeomorphs in S2 —or indeed in R2—are all the same.) Let D denote the set of all closed disc-homeomorphs in R2. Every element of D is a non-empty, regular closed subset of R2; thus, D is a frame over R2.A half-space (in Rn) is the set of points satisfying any non-degenerate linear inequality a1x1 + · · · + anxn ≥ c. Thus, every half-space is regular closed. Let the Boolean subalgebra of RC(Rn) (finitely) generated by the half-spaces be denoted by +(Rn) as polyhedraRCP(Rn), and write RCP+(Rn) is a frame over Rn. Note that polyhedra, in in Rn. (If n = 2, we speak of polygons rather than polyhedra.) Thus, RCPour sense, need not be connected, and need not have connected complements.+(Rn) as an abbreviation for RCP(Rn) \ {∅}. We refer to the elements of RCPA subset of Rn is said to be semi-algebraic if it is the solution set of a Boolean combination of polynomial inequalities with n variables. (Equivalently, a subset of Rn is semi-algebraic if it is the set of points of Rn satisfying a first-order formula in the language of arithmetic with n free variables.) The regular closed semi-algebraic subsets of Rn can be shown to form a Boolean subalgebra of RC(Rn); hence, the non-empty regular closed semi-algebraic subsets of Rn also form a frame.◦Let X be any collection of subsets of a topological space. We say that X has finite decomposition if every X ∈ X is the +(Rn) has this property. On the other hand, +(Rn) lacks finite decomposition, since it evidently contains regions with infinitely many components: the region in +(Rn) has the curve selection property if every x ∈ δr is accessible . It is immediate that all polyhedra have curve selection. On the other hand, curve selection fails for elements of +(Rn). Consider, for example, the spiral region illustrated in Fig. 5b: there are no end-cuts in the interior of that region +(Rn) tame if it has finite decomposition and each +(Rn) is not.union of finitely many connected elements of X. It is simple to show that RCPRCFig. 5a is an example in the case n = 2. A set r ∈ RCfrom rRCto any points lying on the limiting hexadecagon. We call a frame F ⊆ RCof its elements has curve selection. Thus, the frame RCP+(Rn) is tame for all n ≥ 1, but RCIn fact, the frame of non-empty, regular closed, semi-algebraic subsets of Rn can also be shown to be tame, for all n ≥ 1(see [29, Theorems 2.4.4 and 2.5.5] for proofs). However, in R, the regular closed, semi-algebraic subsets coincide with the regular closed, semi-linear subsets; and it is well-known that we may transform any finite collection of regular closed semi-algebraic subsets of R2 into a collection of regular closed polygons by means of a homeomorphism of R2 onto itself; hence satisfiability of any topological constraint network over the non-empty, regular closed semi-algebraic subsets of R2 is +(R2). Since the languages considered in this article cannot distinguish between regular equivalent to satisfiability over RCP+(R3), for n ≥ 3, it follows that they cannot distinguish between polyhedra and closed sets RCregular closed, semi-algebraic sets in any dimension; in the sequel, therefore, we concentrate on the former for simplicity. The issue of tameness will play a large part in the ensuing discussion.+(Rn) and polyhedra RCP2.4. Graphs and designsWe employ the usual concepts and terminology of graph theory, with one or two non-standard extensions. A graph is a pair G = (V , E), where V is a finite set and E a set of 2-element subsets of V . We call the elements of V vertices and the elements of E edges. If |V | = n and E is the set of all 2-element subsets of V , we denote G by Kn, the complete graph on n(cid:18) ⊆ E. If e = (u, v) is an edge in some graph, we consider vertices. A graph Gthe operation of ‘shrinking’ that edge: e itself disappears, and the vertices u and v are replaced by a single new vertex, joined by edges to all and only those other vertices to which either u or v were joined in G. A graph H is a minor of G if H is the result of first taking a subgraph of G and then successively shrinking some number of edges.(cid:18)) is a subgraph of G if V(cid:18) ⊆ V and E(cid:18) = (V(cid:18), EIf G = (V , E) is a graph, a realization of G (in R2) is an injective mapping ffrom V to points of R2 and from E to Jordan arcs in R2 such that, for each e = (u, v) ∈ E: (i) the endpoints of f (e) are f (u) and f (v); and (ii) no internal points of f (e) are in f (V ). It is sometimes more convenient to replace R2 in this context with the space S2, in which case we speak of a realization in S2. Of particular interest are realizations in which no two arcs have any internal points in common. (By the definition of realization, no internal point of one arc can be an endpoint of another.) We call such a realization a drawing of G. It is well-known that a graph G has a drawing in R2 if and only if it has a drawing in S2. If G has a drawing (in R2 or S2), G is said to be planar, and any drawing of G is called a plane graph. It is easy to see that any minor of a planar graph is a planar graph. Given any drawing of a (planar) graph G, we can recover G up to isomorphism. It is thereforeR. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7551customary to treat plane graphs as graphs, without comment. A graph G is k-connected if it has at least k vertices, and the removal of up to k − 1 of those vertices leaves G connected. Whitney’s theorem (see [30, p. 79]) states that a 3-connected, planar graph has a unique drawing in S2, up to a homeomorphism of S2 onto itself.The following generalization of the notion of planar graph will be used in this article. A design is a pair D = (G, S), where G = (V , E) is a graph and S a set of 2-element subsets of E. If D = (G, S) is a design, a drawing of D (in either R2(cid:18)) have an or S2) is a realization f of G = (V , E) with the additional property that, for all distinct e, e(cid:18)) ∈ S. We take the size of D to be |D| = |V | + |E| + |S|. Again, a design has a internal point in common if and only if (e, edrawing in R2 if and only if it has a drawing in S2. By the drawing problem for designs, we understand the following:(cid:18) ∈ E, f (e) and f (eGiven: a design D.Return: yes, if D has a drawing; no, otherwise.It is immediate from the above definitions that a graph G is planar if and only if the design (G, ∅) has a drawing. In fact, we can without loss of generality assume that all drawings have the following, rather particular form. Let us say that a drawing is rectified if all arcs are piecewise-linear (i.e., consist of finitely many straight line segments), and no two arcs share any (non-punctual) line segment. In that case, two arcs share an internal point if and only if they cross at that point (in the obvious sense); we call any such point an arc-crossing of the drawing. The following upper bound on the complexity of drawings of designs was obtained by Schaefer and Štefankoviˇc:Proposition 1. (See [25].) Any drawable design D has a rectified drawing with 2O (|D|) arc-crossings.The corresponding lower bound is due to Kratochvíl and Matoušek:Proposition 2. (See [31].) There exists a sequence of drawable designs {Dn}n≥1, with Dn of size O (n), such that any rectified drawing of Dn has at least 2n arc-crossings.This lower bound notwithstanding, we have the following remarkable complexity result due to Schaefer, Sedgwick and Štefankoviˇc:Proposition 3. (See [24].) The drawing problem for designs is NP-complete.These authors then derive the following corollary, mentioned in Section 1:Proposition 4. (See [24,25].) Sat(RCC8, D) is in NP.We note in passing that Proposition 1 places an immediate upper bound on the total size of drawings for designs, via the following result of Schnyder:Proposition 5. (See [32].) Any plane graph with n vertices has a drawing on a 2n × 2n grid in which all vertices have integer coordinates and all edges are straight lines.Closely related to the drawing problem for designs is the so-called string graph problem. Let α1, . . . , αn be Jordan arcs. Form the graph (V , E) where V = {α1, . . . , αn} and (αi, α j) ∈ E just in case i (cid:14)= j and αi and α j have at least one point in common. Any graph G isomorphic to such a (V , E) is called a string graph, and the sequence of Jordan arcs α1, . . . , αn is called a string representation of G. By the string graph problem, we understand the following:Given: a graph G.Return: yes, if G is a string graph; no, otherwise.Kratochvíl obtained the following lower bound:Proposition 6. (See [33].) The string graph problem is NP-hard.A matching upper bound can be obtained from Proposition 3, as shown in [24].3. RCC8c and RCC8c◦in the Euclidean plane: technical lemmasThis section presents some technical lemmas concerning the frames RCP+(R2) and RC+(R2); the reader may prefer to omit the proofs, which are straightforward, on first reading.52R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 6. A bounded region r in RCP+(R2) (dark grey) with 3 i-components.3.1. Components, i-components and thickeningsWe make use of the following simple facts about RC+(Rn) is arc-+(Rn): the region in Fig. 5b is connected, but not arc-connected (there is no arc connecting connected. This is not true for RCa point on the limiting hexadecagon to a point in the interior of the region). On the other hand, for any interior-connected +(Rn) is closed under taking compo-r ∈ RC+(Rn): the region in Fig. 5a nents: if r ∈ RCPhas, as a component, the singleton set containing the central point; but this set is not regular closed.◦+(Rn) and s is a component of r, then s ∈ RCPis arc-connected. The collection of sets RCP+(Rn), the (connected) open set r+(Rn). Any connected r ∈ RCP+(Rn). This is not true for RC+(Rn) and RCPThe following terminology will be useful. If r ∈ RC+(Rn) are closed under taking i-components. Any r ∈ RCPan i-component+(Rn)of r (Fig. 6). Thus, r is interior-connected just in case it has exactly one i-component. It is easily verified that both RC+(Rn) is the sum (in the Boolean algebra sense) of and RCP+(Rn), then r has only finitely many its components, and any r ∈ RCi-components (hence only finitely many components), so that the relevant sums are finite. The proofs in this section make occasional use of i-components; however, i-components of a region are so visually salient that it is natural to ask what the languages RCC8c and RCC8ccan say about them: we address this question in Section 8.+(Rn) is the sum of its i-components. If r ∈ RCP+(Rn) and X is a component of r, then we call X−◦◦The following lemma establishes a technique that will be used throughout this article.Lemma 7. Let X and Y be closed subsets of Rn. Then there exist elements r, s of RC, such that (i) X ∩ Y = ∅ ⇒ r ∩ s = ∅; (ii) X (cid:2) Y ⇒ r (cid:2) s; (iii) Y (cid:2) X ⇒ s (cid:2) r; (iv) X is connected ⇒ r is interior-connected; (v) Y is connected ⇒+(Rn).s is interior-connected. In addition, if X and Y are both bounded, then r and s may be assumed to be bounded elements of RCPand Y ⊆ s+(Rn) with X ⊆ r◦◦Proof. We consider first the case where X and Y are disjoint. Let P and Q be disjoint closed sets such that X lies in the interior of P and Y in the interior of Q . If x, y are elements of X , Y , respectively, let rx, s y be (non-intersecting) closed n-dimensional hyper-cubes containing x and y in their respective interiors, and contained within the interiors of Pand Q , respectively. Recalling that RC(Rn) is a complete Boolean algebra, set r =y∈Y s y . Notice that +(Rn). Moreover, we remark that each +(Rn), but not necessarily in RCPthese sums are infinite, so that r and s are in RCrx is interior-connected, and similarly for each s y . Also, the interiors of the rx form an open cover of X , and similarly for Y . This ensures that X is in the interior of r, and Y in the interior of s, while maintaining implications (i)–(iii). The other cases are handled similarly.x∈ X rx and s =(cid:4)(cid:4)Implication (iv) follows from the fact that each rx is interior-connected. Similarly for implication (v). For the final state-} y∈Y and }x∈ X0 . We then define the regions r and s by taking the sums only over +(Rn), as required. (cid:2)ment of the lemma, suppose in addition that X and Y are bounded (hence compact). Then the open covers {s◦{rxthose elements of the finite subcovers. In that case, these regions will be bounded elements of RCP}x∈ X have finite subcovers, say {s} y∈Y 0 and {r◦y◦y◦xThus, we can in effect ‘thicken’ arbitrary connected closed subsets of Rn into interior-connected elements of RC+(Rn)without spoiling the properties of disjointness and non-inclusion. Indeed, bounded closed sets can be thickened into regions which are not merely bounded, but also polyhedral. For unbounded closed subsets of Rn , we cannot in general insist that their thickened versions are polyhedral.Lemma 7 can be generalized: given a collection of sets X1, . . . , Xm, we may thicken them all simultaneously, maintaining pairwise satisfaction of the relevant spatial relations.Lemma 8. Let ¯X = X1, . . . , Xm be a tuple of closed subsets of Rn. Then there exist elements ¯r = r1, . . . , rm of RC+(Rn) such ◦that, for all i and j (1 ≤ i, j ≤ m), (i) Xi ⊆ ri ; (ii) Xi is connected ⇒ ri is interior-connected; (iii) Xi ∩ X j = ∅ ⇒ ri ∩ r j = ∅;(iv) Xi (cid:2) X j ⇒ ri (cid:2) r j . In addition, if X1, . . . , Xm are all bounded, then r1, . . . , rm may be assumed to be bounded elements of RCP+(Rn).Proof. We first observe that the proof of Lemma 7 yields slightly more than advertised. Conditions (ii) and (iii) can be ) Y (cid:2) X ⇒ Y (cid:2) r. Now, for all i, j with 1 ≤ i < j ≤ m, apply Lemma 7) X (cid:2) Y ⇒ X (cid:2) s; and (iiistrengthened as follows: (iito X = Xi and Y = X j to obtain the sets ri, j = r and si, j = s. For all 1 ≤ i ≤ m, let(cid:18)(cid:18)R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7553Fig. 7. A drawing f of K4 (with xi = f (v i ) and α j = f (e j )) and its strong embedding in the tuple r1, . . . , r4, s1, . . . , s6.(cid:10)i−1(cid:11)(cid:12)(cid:10)s j,i·m(cid:11)(cid:12)ri, j.(cid:18)ir=j=1j=i+1If Xi is connected, let ri be the i-component of reasy to see that the ri are as required. (cid:2)(cid:18)i including Xi ; otherwise, let ri = r(cid:18)i . Using Conditions (ii(cid:18)) and (iii(cid:18)), it is Lemmas 7 and 8 are required in the sequel only in the case n = 2.3.2. Encoding graphs and designs in RCC8c and RCC8c◦Let D = (G, S) be a design, and let the vertices v 1, . . . , vn and edges e1, . . . , em of G be ordered in some fixed way. We denote by u( j) and v( j) the indices of the vertices incident on e j (with u( j) < v( j)). Now let ¯r = r1, . . . , rn and ¯s = s1, . . . , smbe tuples of elements of RC+(R2). We say that a drawing f of D is strongly embedded in the tuple ¯r¯s iff (v i) ∈ r◦ifor all i (1 ≤ i ≤ n) andf (e j) ⊆ r◦u( j)∪ s◦j∪ r◦v( j)for all j (1 ≤ j ≤ m).(6)If D has a drawing that is strongly embedded in the tuple ¯r ¯s, then D is said to be strongly embeddable in ¯r¯s. If G is a planar graph such that the design (G, ∅) is strongly embeddable in ¯r¯s, then G is said to be strongly embeddable in ¯r¯s. Fig. 7 shows that the planar graph K4 is strongly embeddable in the tuple r1, . . . , r4, s1, . . . , s6.We employ RCC8cvertices v 1, . . . , vn and edges e1, . . . , em ordered in some fixed way. Define the RCC8c¯r = r1, . . . , rn and ¯s = s1, . . . , sm, by taking, for 1 ≤ i (cid:14)= i-constraint networks to capture strong embeddability of planar graphs. Let G be a graph with ◦G (¯r, ¯s), for -constraint network Ω(cid:18) ≤ n and 1 ≤ j (cid:14)= j(cid:18) ≤ m,◦◦◦(ri),◦(s j),ccDC(ri, ri(cid:18) ),DC(s j, s j(cid:18) ),PO(ri, s j)DC(ri, s j)if v i is incident on e j,if v i is not incident on e j.(7)Lemma 9. Let G be a graph. (a) If G is planar then Ωany number (possibly zero) of the DC-constraints in ΩG is planar, and any satisfying tuple has a rectified (= piecewise-linear) drawing of G strongly embedded in it.◦G is satisfiable over RCP◦G by the corresponding EC-constraints. If ˆΩ+(R2). (b) Conversely, let ˆΩ◦G be the result of replacing +(R2) then ◦G is satisfiable over RC(b) Conversely, if Ω+(R2) satisfying Ω◦G is satisfiable over RCProof. (a) If G is planar, consider any drawing f of G with points xi = f (v i), for 1 ≤ i ≤ n, and arcs α j = f (e j), for 1 ≤ j ≤ m. For all i, 1 ≤ i ≤ n, let di be a disc centred on xi , with the di pairwise disjoint. For all j, 1 ≤ j ≤ m, let α(cid:18)j be some segment of α j which meets du( j) and dv( j) only at its endpoints. Applying Lemma 8 to the sets d1, . . . , dn, α(cid:18)m, ◦we obtain r1, . . . , rn, s1, . . . , sm in RCPG .i not lying on any of the α(cid:18)v( j), and a piecewise-linear Jordan arc α(cid:18)+(R2), let r1, . . . , rn, s1, . . . , sm be a satisfying assignment. From the ◦PO-constraints, any s j partially overlaps the two regions ru( j) and rv( j). For each j, 1 ≤ j ≤ m, pick points y j ∈ su( j)joining y j to z j . Now, for each i, 1 ≤ i ≤ n, pick a point and z j ∈ s◦xi ∈ rfrom xi to y j , and for each j with v( j) = i, draw a piecewise-linear arc γi, j ⊆ rfrom z j to xi . It is easy to see that this can be done in such ◦i , intersect precisely at their common endpoint xi , a way that, for each i, the arcs βi, j and γi, j (with j varying), lying in rand that they intersect any arc α j(cid:18) only when j = j, and then precisely at the other end-point, y j or z j . For each j, let ◦α j = βu( j), jα(cid:18)= ∅, and similarly for the jconstraints DC(ri, s j)/EC(ri, s j) and DC(s j, s j(cid:18) )/EC(s j, s j(cid:18) ). It follows that the various piecewise-linear arcs α j intersect only at shared endpoints, and thus constitute a rectified drawing of G, which is strongly embedded in r1, . . . , rn, s1, . . . , sm. (cid:2)(cid:18)jγv( j), j ; thus, α j joins xu( j) to xv( j). But either DC(ri, ri(cid:18) ) or EC(ri, ri(cid:18) ) imply rj , and for each j with u( j) = i, draw a piecewise-linear arc βi, j ⊆ r1, . . . , α(cid:18)⊆ s∩ r∩ r∩ r◦i◦i◦i◦j◦j◦j◦j54R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 8. Encoding designs using RCC8c-networks. The crossing of an edge e j by edges ei and ei(cid:18) corresponds to the ‘strings-of-sausages,’ s j , si and si(cid:18) , arranged as shown.A weaker form of embeddings will also be required in the sequel. As before, let D = (G, S) be a design; let the vertices v 1, . . . , vn and edges e1, . . . , em of G be ordered in some fixed way; and let ¯r = r1, . . . , rn and ¯s = s1, . . . , sm be tuples of elements of RC+(R2). We say that a drawing f of D is weakly embedded in the tuple ¯r¯s if◦ifor all i (1 ≤ i ≤ n) andf (e j) ⊆ r∪ s j ∪ rfor all j (1 ≤ j ≤ m).◦u( j)◦v( j)f (v i) ∈ r(Thus, we have replaced s¯s = s1, . . . , sm, by taking, for 1 ≤ i (cid:14)= i◦j(cid:18) ≤ n and 1 ≤ j (cid:14)= j(cid:18) ≤ m,in (6) by s j .) Now define the RCC8c-constraint network ΘD (¯r, ¯s), where ¯r = r1, . . . , rn and c(ri),c(s j),DC(ri, ri(cid:18) ),DC(s j, s j(cid:18) )EC(s j, s j(cid:18) )if (e j, e j(cid:18) ) /∈ S,if (e j, e j(cid:18) ) ∈ S.PO(ri, s j)DC(ri, s j)if v i is incident on e j,if v i is not incident on e j,(Thus, we have replaced the constraints DC(s j, s j(cid:18) ) in (7) by EC(s j, s j(cid:18) ) whenever (e j, e j(cid:18) ) ∈ S, and we have replaced cby c.)◦Lemma 10. Let D be a design. If D has a drawing, then ΘD is satisfiable over RCPthen D has a drawing; furthermore, any satisfying tuple has a rectified drawing of D weakly embedded in it.+(R2). Conversely, if ΘD is satisfiable over RCP+(R2)Proof. The first statement of the lemma is proved in an almost identical way to that of Lemma 9. If D has a drawing, then it has a rectified drawing. The regions ri are defined as before; however, the regions s j have the ‘string-of-sausages’ form shown in Fig. 8, allowing any crossing arcs αi to lie in a region si such that EC(s j, si). For the converse, we use the fact +(R2) to construct, for any tuple ¯r¯s satisfying ΘD , a rectified drawing that connectedness entails arc-connectedness in RCPf of D weakly embedded in ¯r¯s. (cid:2)We remark that Lemma 10, in contrast to Lemma 9, makes reference to satisfiability over RCP+(R2) only. However, we will show later (Theorem 25) that D has a drawing if ΘD is satisfiable over RC4. Complexity and separation results for RCC8+(R2).In this section, we summarize what is known about the satisfiability problem for RCC8-constraint networks over various frames. Although most of the results are not new, we give them with proofs which will serve as a starting point for constructions later on in the article.Nebel [17] considered the problem of determining whether, for a given RCC8-constraint network Φ, there exists a +(T ). He showed this problem to be in NLogSpace by reducing topological space T such that Φ is satisfiable over RCit—via Bennett’s [15] encoding of RCC8 in intuitionistic propositional logic—to 2SAT, which is known to be in NLogSpace+(T ), (a different proof was given in [21]). Renz [20] observed further that any RCC8-constraint network satisfiable over RC+(Rn), for any n ≥ 1; moreover, for n ≥ 3, it can be satisfied for some topological space T , can also be satisfied over RCP+(Rn) by a tuple of interior-connected regions. The next two theorems give a direct and concise proof of these over RCPresults.Theorem 11. Let Φ(¯r) be an RCC8-constraint network. Then the following are equivalent:(a) there exists a type-certificate for Φ;(b) Φ is satisfiable over RC(c) Φ is satisfiable over RCP+(T ) for some topological space T ;+(Rn) for any n ≥ 3; moreover, the satisfying assignment may be chosen so that all the regions in ¯p are interior-connected and all the regions in ¯q are not connected, for any partitioning ¯p ¯q of ¯r;+(R2).(d) Φ is satisfiable over RCP+(R) and RCP+(R). Take any satisfying assignment under Proof. The implication (d) ⇒ (c) is easy. Suppose Φ is satisfiable over RCPwhich every region in ¯r is disconnected (this can always be achieved by taking a disjoint copy of a given satisfying assign-ment). Then we cylindrify this assignment in R3 and use the third dimension to make the regions in ¯p interior-connected (in the same way as in [20]) while keeping the regions in ¯q disconnected.R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7555Fig. 9. Three types of intervals in the proof of Theorem 11.The implication (c) ⇒ (b) is trivial. The implication (b) ⇒ (a) follows from the observation in Section 2.2 that, for every satisfiable Φ, there is a type-certificate (of at most 3|Φ| types).Thus, it remains to prove (a) ⇒ (d). Suppose there exists a type-certificate for Φ(¯r). Without loss of generality, we may assume that Φ contains no EQ(ri, r j)—if this is not the case, we replace all occurrences of ri with r j and remove EQ(r j, r j). We write r j <Φ ri if there is a sequencej = k1 < · · · < kl = isuch that (N)TPP(rk1 , rk2 ), . . . , (N)TPP(rkl−1 , rkl ) ∈ Φ.By (type), (reg-e), (tpp-u), (ntpp-u) and (diff-e), <Φ is a strict partial order on ¯r. We also write r j ≤Φ ri if either r j = ri or r j <Φ ri , and write r j (cid:20)Φ ri if r j <Φ ri and at least one of the relations in the sequence above is NTPP. In view of (type),(tpp-u) and (ntpp-u), we then have the following, for each type τ in the type-certificate for Φ:ifififr j ≤Φ rir j ≤Φ rir j (cid:20)Φ riand r j ∈ τ then ri ∈ τ ,◦j∈ τand rthen rand r j ∈ τ then r◦i , ri ∈ τ ,◦i , ri ∈ τ .(8)(9)(10)As <Φ is a strict partial order, we can assume the variables ¯r = r1, . . . , rn to be ordered in such a way thatr j <Φ ri.j < i wheneverWe begin by considering RCP(11)+(R). First we define regions Z 1, . . . , Zn to satisfy the existential conditions of the con-straints in Φ and then, by taking account of the TPP and NTPP constraints, extend Z 1, . . . , Zn to regions X1, . . . , Xn+i j be the non-empty adjacent intervals [ni + j − 1/4, ni + j]satisfying Φ. For 0 ≤ i ≤ n and 1 ≤ j ≤ n, let W+and [ni + j, ni + j + 1/4], respectively, and let W i j be the union of Wi j . Each Z j is defined to be the union of the following intervals (see Fig. 9):−i j and W−i j and WWW 0 j,−i j ,+i j ,W i j,Wif EC(ri, r j) ∈ Φ,if EC(r j, ri) ∈ Φ,if PO(ri, r j) ∈ Φ or PO(r j, ri) ∈ Φ.The centre of each W 0 j is a point whose Φ-type is guaranteed by (reg-e) and (diff-e), while the centre of each W i j with i > 0 is a point whose Φ-type is guaranteed by the respective (ec-e) or (po-e). In addition, the construction we are about to present will ensure that the two boundary points, ni + j − 1/4 and ni + j + 1/4, of each W i j provide a Φ-type required by (tpp-e). By construction, (dc-e), (po-e) and (type), the following conditions are respected by the Z i :Z j ∩ Z j(cid:18) (cid:14)= ∅ (cid:21)⇒ any type-certificate for Φ has a type τ such that r j, r j(cid:18) ∈ τ ;◦◦◦j(cid:18) ∈ τ .j(cid:18) (cid:14)= ∅ (cid:21)⇒ any type-certificate for Φ has a type τ such that rj◦j , r∩ ZZ(12)(13)Note that all the intervals W i j are of length 1/2. We fix some ε such that 0 < ε ≤ 1/(6n). Given a union s of disjoint intervals +ε the union of the intervals [ai − ε, bi + ε]. We shall define a sequence of regions X1, . . . , Xn by [ai, bi], we denote by srepeated application of the ·+ε -operator to unions of the W i j . The choice of ε guarantees that distinct intervals W i j and W i(cid:18) j(cid:18) remain disjoint even after n applications of ·+ε .We proceed step-by-step in the order X1, . . . , Xn and set, for 1 ≤ i ≤ n,(cid:13)(cid:13)Xi = Z i +X j +X+εjTPP(r j ,ri )∈ΦNTPP(r j ,ri )∈Φ.(14)This definition is legitimate by (11). The constructed regions for the constraint network (1) are illustrated in Fig. 10.We now prove that X1, . . . , Xn satisfy Φ. First, we show, by induction on i, that, for all j, j(cid:18) ≤ i,X j ∩ X j(cid:18) (cid:14)= ∅ (cid:21)⇒ any type-certificate for Φ has a type τ such that r j, r j(cid:18) ∈ τ ;◦◦j(cid:18) (cid:14)= ∅ (cid:21)⇒ any type-certificate for Φhas a type τ such that rj◦j , r j(cid:18) ∈ τ or r j, r∩ XX◦j(cid:18) ∈ τ .56R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 10. An assignment satisfying the constraint network (1).(cid:18) = i (because the case with The basis of induction, i = 1, is trivial. For the inductive step, it is enough to consider only j < jj, j(cid:18) < i trivially follows from the induction hypothesis).Suppose X j ∩ Xi (cid:14)= ∅. Two cases are possible. If X j ∩ Z i = ∅ then, by (14) and the choice of ε, there is j(cid:18) < i such (cid:14)= ∅ and either TPP(r j(cid:18) , ri) ∈ Φ or NTPP(r j(cid:18) , ri) ∈ Φ, that is, r j(cid:18) ≤Φ ri ; the required type exists by the induc-(cid:18) < j such that (cid:18) < j such that NTPP(r j(cid:18) , r j) ∈ Φ and ( X j(cid:18) )+ε ∩ Z i (cid:14)= ∅. Thus, by the choice of that X j ∩ X j(cid:18)tion hypothesis and (8). Otherwise, we have X j ∩ Z i (cid:14)= ∅ and so, by (14), either Z j ∩ Z i (cid:14)= ∅ or there is jTPP(r j(cid:18) , r j) ∈ Φ and X j(cid:18) ∩ Z i (cid:14)= ∅ or there is jε and (14), there is j◦∩ Xi◦∩ Xj(cid:18)(cid:18) ≤ j such that Z j(cid:18) ∩ Z i (cid:14)= ∅ and r j(cid:18) ≤Φ r j , and so the required type exists by (12) and (8).(cid:14)= ∅. Two cases are possible. If X(cid:14)= ∅ and r j(cid:18) ≤Φ ri , or X j ∩ X j(cid:18)◦j , r j(cid:18) ∈ τ or r j, r(cid:18) < i such = ∅ then, by (14) and the choice of ε, there is jSuppose X◦(cid:14)= ∅ and r j(cid:18) (cid:20)Φ ri . In the former case, by the induction hypothesis, any that either Xj◦◦j , ri ∈ τ or j(cid:18) ∈ τ , from which, by (8) and (9), we obtain rtype-certificate for Φ has a type τ such that r◦∈ τ . In the latter case, by the induction hypothesis, any type-certificate for Φ has a type τ such that r j, r j(cid:18) ∈ τ , which r j, ri(cid:14)= ∅ and gives r j, rr j(cid:18) ≤Φ r j or Z j(cid:18) ∩ Z i (cid:14)= ∅ and r j(cid:18) (cid:20)Φ r j . The required type exists by (13) and (9) in the former case and by (12) and (10) in the latter case.(cid:14)= ∅ then, by (14) and the choice of ε, there is j(cid:18) ≤ j such that either Z∈ τ by (10). If X◦j(cid:18) ∩ Z∩ Z∩ Z◦i◦i◦i◦j◦j◦j◦iNext, we show that R( X j, Xi), for all R(r j, ri) ∈ Φ.– If DC(r j, ri) ∈ Φ then X j ∩ Xi = ∅, for otherwise the type-certificate for Φ would contain a type with both r j and ri , contrary to (dc-u).– If EC(r j, ri) ∈ Φ then, by construction, Z j ∩ Z i (cid:14)= ∅, whence, by (14), X j ∩ Xi (cid:14)= ∅. We also have X◦i , contrary to (ec-u).◦jthe type-certificate for Φ would contain a type with either r◦j , ri or r j , r(cid:14)= ∅, whence, by (14), X◦– If PO(r j, ri) ∈ Φ then, by construction, Zjtype τ in the type-certificate for Φ with rri ∈ τ , which is impossible. Symmetrically, we cannot have Xi ⊆ X j .∩ Z(cid:14)= ∅. By (diff-e) and (type), there is a ◦j , r j ∈ τ and ri /∈ τ . If we assume X j ⊆ Xi then, by (14), r j ≤Φ ri and, by (8), – If TPP(r j, ri) ∈ Φ then, by (14), X j ⊆ Xi . By (diff-e) and (type), there is a type τ in the type-certificate for Φ with then, by (14), r j (cid:20)Φ ri , and, by (10), ri ∈ τ , which is impossible. We cannot ◦j∩ X◦i(cid:14)= ∅, for otherwise ∩ X◦i◦i◦j , r j ∈ τ and ri /∈ τ . If we assume X j ⊆ Xralso have Xi ⊆ X j because j < i.◦i– If NTPP(r j, ri) ∈ Φ then, by (14), we have X j ⊆ X◦i .The construction for RCPTheorem 11. (cid:2)+(R2) uses rectangles instead of intervals; the argument is identical. This completes the proof of As a consequence of Theorem 11, we obtain the following:Theorem 12. All of the problems Sat(RCC8, RCNLogSpace-complete.+(Rn)) and Sat(RCC8, RCP+(Rn)), where n ≥ 1, are identical andProof. We can encode the satisfiability problem for RCC8-constraint networks as satisfiability of binary clauses with the quantifier prefix of the form ∃∗∀. Indeed, for each variable r in Φ, we take two unary predicates, P r(x) and P r◦ (x), to represent membership of the respective terms, r and r, in Φ-types. Recall that Φ has a type-certificate in case it has a type-certificate of at most 3|Φ| types. Then the existential and universal conditions for the type-certificate can easily be encoded as binary clauses: for example,◦P r1 (xi) ∧ P r2 (xi),P r1 ( y) → P r( y),¬P r1 ( y) ∨ ¬P r◦2◦2( y), ¬P r2 ( y) ∨ ¬P r( y),◦1(ec-e)(nttp-u)(ec-u)where the xi are 3|Φ|-many existentially quantified variables and y is a single universally quantified variable. The up-per complexity bound follows then from the fact that satisfiability of binary clauses of this form is NLogSpace-complete [34, Exercise 8.3.7].NLogSpace-hardness can be shown by reduction of the reachability problem for directed acyclic graphs (DAGs), which is known to be NLogSpace-complete. Let G = (V , E) be a DAG with V = {v 1, . . . , vk}. We take variables v 1, . . . , vk and R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7557Fig. 11. Graph K5 and satisfying Φ over RC+(R2).Fig. 12. A drawing of the graph K−5 and satisfying Ξ over I.consider the set ΦG of constraints containing NTPP(v i, v j) just in case (v i, v j) ∈ E. It should be clear that vk is reachable from v 0 if and only if DC(v 0, vk) is inconsistent with ΦG . (cid:2)Note that if instead of atomic RCC8-constrains we consider unions of RCC8-predicates, then the satisfiability problem becomes NP-complete; for this and related tractability results consult [22,19,20,35].◦Let Φ be a set of constraints in either RCC8c or RCC8c, and let Ψ be the result of removing from Φ all constraints ◦(r). Then, as a consequence of Theorem 11, we see that the following are equivalent: Ψ is satisfiable of the form c(r) or c+(Rn), for over RCn ≥ 3. Thus, RCC8 is not sensitive to the dimension of the Euclidean space or to tameness of regions; and in dimension 3 or above, RCC8c and RCC8c+(T ) for some topological space T ; Φ is satisfiable over RC+(Rn), for n ≥ 3; Φ is satisfiable over RCPare not interestingly different from RCC8.We end this section with some separation results for RCC8 over various salient sub-frames of RC+(R2). To make the presentation more compact, we help ourselves with a result to be proved below (Theorem 25), which establishes the insensitivity of RCC8c to tameness in the plane. Recall that D denotes the frame of all closed disc-homeomorphs in R2. +(R2), and I the frame of all interior-connected elements of Define C to be the frame of all connected elements of RC+(R2)). In fact, we have RCthe following:+(R2). It was observed [16] that Sat(RCC8, D) (cid:3) Sat(RCC8, RC+(R2). Thus, D ⊆ I ⊆ C ⊆ RC◦Theorem 13. Sat(RCC8, D) (cid:3) Sat(RCC8, I) (cid:3) Sat(RCC8, C) (cid:3) Sat(RCC8, RC+(R2)).Proof. The inclusions are trivial. To show that they are proper, we employ the graph K 5, with vertices and edges numbered identically to the points and arcs in Fig. 11a.To show that Sat(RCC8, C) (cid:3) Sat(RCC8, RC+(R2), and thus Φ is unsatisfiable over C. On the other hand, Φ is trivially satisfiable over RC+(R2)), let Φ be the result of removing all c-constraints from Θ(K5,∅). Since +(R2), whence, by Theorem 25, Θ(K5,∅) is not +(R2), as K5 is non-planar, Lemma 10 ensures that Θ(K5,∅) is not satisfiable over RCPsatisfiable over RCwe see from Fig. 11b. Note that s10 is not connected in this assignment.◦To show that Sat(RCC8, I) (cid:3) Sat(RCC8, C), let ˆΩK5EC(s7, s10), and let Ψ be the result of removing all cover RCs10 in Fig. 11b to be crossing strings-of-sausages as in Fig. 8.by is unsatisfiable +(R2), whence Ψ is not satisfiable over I. On the other hand, Ψ is easily satisfiable over C by taking s7 and be the result of replacing the constraint DC(s7, s10) in Ω-constraints from ˆΩ◦. By Lemma 9 (b), ˆΩTo show that Sat(RCC8, D) (cid:3) Sat(RCC8, I), we consider the graph K5 with vertices and edges numbered identically to −5 is 3-connected, by Whitney’s−5 be the graph K5 without the edge α10. Since Kthe points and arcs in Fig. 11a and let K◦K5◦K5◦K558R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 13. Subsets of R used in the proof of Theorem 15.◦theorem (see [30, p. 79]), Fig. 12a presents its only drawing in S2 up to a homeomorphism of S2 onto itself. In particular, in all drawings (in R2), the points x3 and x5 are separated by the arcs α1, α7 and α8. Let Ξ be the result of removing +(R2)—and hence Ξ is satisfiable over I. all cHowever, by Lemma 9 (b), in any such satisfying assignment, the regular closed set r1 ∪ s1 ∪ r2 ∪ s7 ∪ r4 ∪ s8 separates r3from r5. Now let t be a new variable, and Ξ (cid:18)the result of adding to Ξ the constraints. As we see from Fig. 12b, Ωis satisfiable over RC-constraints from Ω−5−5KK◦◦TPP(r1, t), TPP(s1, t), TPP(r2, t), TPP(s7, t), TPP(r4, t), TPP(s8, t),DC(r3, t), DC(r5, t).Setting t = r1 ∪ s1 ∪ r2 ∪ s7 ∪ r4 ∪ s8 yields a satisfying assignment over I. On the other hand, we have shown that t separates r3 and r5, and so must have a non-connected complement. Therefore, Ξ (cid:18)is not satisfiable over D. (cid:2)5. Separation results with connectedness constraintsWe now turn to the main subject of the present article: the languages RCC8c and RCC8cin one- and two-dimensional space. Our first task is to show that these languages are indeed sensitive to dimension up to 3. Again, to obtain a compact presentation, we anticipate the result of Theorem 25 stating that RCC8c is insensitive to tameness in the Euclidean plane.◦Theorem 14. Let L be either of the languages RCC8c or RCC8c◦. Then+Sat(L, RCSat(L, RCP(R)) (cid:3) Sat(L, RC+(R)) (cid:3) Sat(L, RCP(R2)) (cid:3) Sat(L, RC+(R2)) (cid:3) Sat(L, RCP(R3)),+(R3)).+++(Rn) can easily be cylindrified to form a tuple in RC+(Rm), for m > n, Proof. The inclusions hold because any tuple in RCsatisfying the same L-networks. To show that the leftmost inclusions are proper, consider the network (5), saying that +(R)three connected regions r1, r2 and r3 are in external contact with each other. This network cannot be satisfied over RC+(Rn)because the ri must be non-empty, closed, non-punctual intervals. However, we can easily satisfy (5) over any RCP◦for n ≥ 2 (see Fig. 4a). The same argument holds for the RCC8c.◦To show that the rightmost inclusions are proper for RCC8cfor the non-planar K5+(R2); on the other hand, it is clearly +(R3). To show that the inclusions are proper for RCC8c, consider the constraint +(R2), whence, by Theorem 25, it is not graph K5. By Lemma 9 (b), it is not satisfiable over RCsatisfiable over RCPnetwork Θ(K5,∅) for the same graph K5. By Lemma 10, it is not satisfiable over RCPsatisfiable over RC-network obtained from (5) by replacing c with c◦, consider the constraint network Ω+(R2). On the other hand, again, it is clearly satisfiable over both RCP+(R2), and thus over RCP+(R3), and so over RC+(R3) and RC+(R3). (cid:2)◦What of sensitivity of RCC8c and RCC8cto tameness in low dimensions? Here a more complicated picture emerges. In one-dimensional space (where connectedness and interior-connectedness coincide) we indeed observe sensitivity to tame-ness:◦Theorem 15. Sat(RCC8c, RCPRC+(R)) (cid:3) Sat(RCC8c, RC+(R), but only by tuples some of whose elements have infinitely many components.+(R)). Indeed, there exists an RCC8c-formula that is satisfiable over Proof. The inclusion is trivial. Consider the RCC8c-networkc(r1),c(r2), EC(r1, r2), EC(r1, r3), EC(r1, r4),(15)DC(r2, r3), DC(r2, r4), EC(r3, r4).+(R). To Figure 13, where 0 is the accumulation point for r3 and r4, shows how this network can be satisfied over RC+(R), let r1 = [c, d] and r2 = [a, b]. Since EC(r1, r2), and by applying a reflection if see that it cannot be satisfied over RCPnecessary, b = c. Since DC(r2, r3) and EC(r1, r3), r3 includes some interval [d, e] (with e > d). Since EC(r3, r4) and DC(r2, r4), it follows that r4 has no points in (a, b) ∪ (d, e), contrary to EC(r1, r4). (cid:2)In two dimensions, we find that RCC8c◦is sensitive to tameness.Theorem 16. Sat(RCC8c◦, RCP+(R2)) (cid:3) Sat(RCC8c◦, RC+(R2)).Proof. Again, the inclusion is trivial. To show it is proper, we exhibit an RCC8cnot over RCP+(R2). Let G = (V , E) be the cyclic graph C8 (see Fig. 14a), i.e.,◦-network Φ satisfiable over RC+(R2), but R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7559Fig. 14. The network Φ given in the proof of Theorem 16 is not satisfiable over RCP+(R2).V = {v 1, . . . , v 8} and E =+(R2) in Theorem 16.Fig. 15. A satisfying assignment for Φ over RC(cid:9)(v 8, v 1)(v i, v i+1) | 1 ≤ i ≤ 7∪(cid:8)(cid:8)(cid:9).Let ¯r = r1, . . . , r8 and ¯s = s1, . . . , s8 be tuples of variables and consider the network Ωvariables. We form the network Φ(¯r, ¯s, ¯t) by adding to Ω◦G the constraints◦G (¯r, ¯s). Let ¯t = t1, t2 be a pair of fresh ◦c(tk),EC(tk, ri),EC(tk, si),1 ≤ k ≤ 2, 1 ≤ i ≤ 8,(16)EC(t1, t2).◦i◦8◦i◦8∪ r∪ r∪ s∪ s◦i and αi ⊆ r(17)+(R2). For suppose to the contrary that there exist regular closed polygons We first show that Φ is not satisfiable over RCP¯r, ¯s, ¯t making Φ true. By Lemma 9 (b), there exists a drawing of the cyclic graph C8, with points x1, . . . , x8 and arcs ◦α1, . . . , α8, such that xi ⊆ r1 . Let γ denote the Jordan curve α1 . . . α8. Note that the four points x2, x4, x6 and x8 divide γ into the four segments α2α3, α4α5, α6α7 and α8α1, as shown in Fig. 14b.◦i+1, for 1 ≤ i ≤ 7, and α8 ⊆ rSetting k = 1 in (16), we have EC(t1, r1) and EC(t1, r5), so let y2 ∈ t1 ∩ r1 and y3 ∈ t1 ∩ r5. From Ωconnected; and using the curve selection property, we can construct a Jordan arc β 01construct a Jordan arc β 03again ensures the existence of a Jordan arc β2 ⊆ { y2} ∪ tand let β1 = β 0[ y1, y2] (that is, β1 is the segment of β 01let β3 = β 03Furthermore, β = β1β2β3 ⊆ r1 ∪ tjoining an internal point of α2α3 to an internal point of α6α7. Since γ ⊆disjoint from γ . In addition, (17) ensures that t1 and t2—and hence also the chords β and β(cid:18)◦By inspection of Fig. 14, β and β(cid:18)1the ri are pairwise disjoint; moreover (16) prevents tcontradicting (17). This completes the proof that Φ is not satisfiable over RCP◦G , r1 is interior-⊆ r1 from x1 to y2. Similarly, we can ⊆ r5 from y3 to x5. By (16), t1 is also interior-connected, whence the curve selection property 1 lying on γ , 3 lying on γ , and ◦G , y1 must be an internal point of α8α1, and y4 an internal point of α4α5. ∪ r7◦i ), (16) guarantees that t1 and t2 are —lie on the same side of γ . ◦∪ r7—intersect. On the other hand, Ω∪ r5 and r3 ∪ tG ensures that ◦◦◦◦2 , 1 intersects t2 from intersecting any of the r j . Therefore, t1 or t∪ r5 is a chord of γ . By setting k = 2 in (16), we can find another chord β(cid:18) ⊆ r3 ∪ t(cid:5)1 between y1 and y2). Let y4 be the first point of β 0∪ { y3} from y2 to y3. Let y1 be the last point of β 0[ y3, y4]. From the DC-constraints in Ω—and hence r1 ∪ tWe next show that Φ is satisfiable over RCas in Fig. 15. Denote the inner disc of the annulus by d ∈ RCand converging to the frontier of the annulus as shown; and let t2 = d · (−t1). It is obvious that Ω+(R2). Let r1, . . . , r8 and s1, . . . , s8 be arranged as a (hexadecagonal) annulus +(R2). Now let t1 be an infinitely long spiral strip lying in d, ◦G and (16)–(17) hold. (cid:2)+(R2).8i=1(r∪ s◦i◦1◦2◦1◦260R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 16. Satisfying (18)–(20) over RC+(R).We remark that it was falsely claimed [36] that Sat(RCC8c+(R2)).3 Observe that the set ◦, RCP+(R2) illustrated in Fig. 15 lacks the curve selection property: we can find points y2 ∈ t1 ∩ r1 and y3 ∈ t1 ∩ r5; but t1 ∈ RC+(R2)there is no arc β2 ⊆ { y2} ∪ t◦collapses if we replace the interior-connectedness predicate care arcs ◦◦lying in t1 and t2, respectively, but not necessarily in t2 , then the condition EC(t1, t2) cannot be used to force their 1 and tdisjointness. Indeed, as we shall see below (Theorem 25), RCC8c is insensitive to tameness in two dimensions.∪ { y3} connecting them. Observe also that the proof that Φ is unsatisfiable over RCPwith the connectedness predicate c: if β and β(cid:18)+(R2)) = Sat(RCC8c◦, RC◦16. NP-completeness over RCP+(R) and RC+(R)In the one-dimensional space R, the notions of connectedness and interior-connectedness coincide: a non-empty regular closed subset of R is (interior-) connected if and only if it has one of the forms [a, b], (−∞, b], [a, +∞) or (−∞, +∞), for some a < b in R. Hence, we only consider the language RCC8c. Note also that polyhedra in R are finite unions of regular closed, connected subsets—i.e., finite unions of non-punctual, closed intervals. Arbitrary regular closed subsets of R may be infinite unions of such intervals together with their accumulation points (see Figs. 13 and 19).We show first that the satisfiability problem for RCC8c-networks is harder over R than over R3 (cf. Corollary 12) unless NLogSpace = NP:Theorem 17. Both Sat(RCC8c, RCP+(R)) and Sat(RCC8c, RC+(R)) are NP-hard.4Proof. The proof is by reduction of the 3-colourability problem, which is known to be NP-complete: given a graph, decide whether its vertices can be painted in 3 different colours in such a way that no two vertices connected by an edge of the graph are of the same colour. So suppose we are given a graph G = (V , E). We are going to construct an RCC8c-network +(R) if and only if G is 3-colourable. (The idea of the construction is ΦG such that ΦG is satisfiable over RCPsimilar to the one used to prove NP-hardness of Allen’s interval calculus [38].) We represent the colours by the connected regions p1, p2, p3: the constraints+(R) or RCTPP(p1, p), NTPP(p2, p), TPP(p3, p),c(p),EC(p1, p2), EC(p2, p3), DC(p1, p3),c(pi),for i = 1, 2, 3,(18)(19)say that p is a closed interval divided into three subintervals, p1, p2 and p3, with p2 being in the middle. The constraintsPO(qi, pi), PO(qi, pi+1), NTPP(qi, p),c(qi),for i = 1, 2,and DC(q1, q2)(20)say that the meeting point of p1 and p2 is in the interior of some interval q1, the meeting point of p2 and p3 is in the interior of some interval q2, and that the qi are disjoint and lie inside p, as shown in Fig. 16.The constraintsDC(v, q1), DC(v, q2), NTPP(v, p),c(v),for v ∈ V ,(21)ensure then that each interval v, for v ∈ V , lies entirely inside one of the pi (here we deliberately overload notation and use v to denote both vertices of G and the region variables representing those vertices). Thus, it remains to ensure that the intervals corresponding to adjacent vertices in G are of different colours. This can be done using the following constraints, for all (u, v) ∈ E:NTPP(tuv , p), EC(u, tuv ), EC(v, tuv ), DC(u, v),c(tuv ),NTPP(suv , tuv ), PO(suv , p2),c(suv ).(22)(23)By (23), one of the end-points of the interval suv belongs to p2, while the other either to p1 or p3. It follows that the end-points of tuv are of different colours, and so u and v must be of different colours, too. Thus, if the union ΦG of (18)–(23) is satisfiable, then G is 3-colourable.3 This is the second statement of Theorem 6, p. 537; the first statement of that theorem, repeated here as Theorem 25, is correct.4 As observed by one of the anonymous reviewers, this theorem follows from the classification of tractable subalgebras of Allen’s interval algebra given in [37].R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7561Fig. 17. Satisfying Φ over RCP+(R).To prove the converse, suppose that G is 3-colourable with the colours p1, p2 and p3. First we satisfy (18)–(20) as shown in Fig. 16. Now, take any edge (u, v) ∈ E. If u is of colour p1 and v of colour p2, then we define suv and tuv such that their left ends are in p1, right ends are in p2, NTPP(q1, suv ) and NTPP(suv , tuv ), and take u to be some interval inside p1 for which EC(u, tuv ) holds, and v to be some interval inside p2 for which EC(v, tuv ) holds. If v is of colour p3, then we define suv as before, but extend tuv to some point inside p3 after q2, and take v to be in p3 as well. The remaining cases are mirror-images, and left to the reader. It should be clear that we can define such an assignment simultaneously for all edges in G. (cid:2)Now, we establish a matching upper bound. Let us assume first that an RCC8c-network Φ(¯r) is satisfied over RCPby some assignment a. For any open interval I of the form (a, b), (−∞, b) or (a, ∞), we take the set+(R)(cid:8)χ a(I) =r ∈ ¯r | a(r) ∩ I (cid:14)= ∅(cid:9)and call it the Φ-character of I under a. We say that a is uniform over I if each of its points belongs to each of the regions of +(R) is a finite union χ a(I); in other words, if χ a(I) = χ a(Iof closed intervals, we can find finitely many points z1 < · · · < zk in R such that a is uniform over each of the open intervals (zi, zi+1), for 0 ≤ i ≤ k, where z0 = −∞ and zk+1 = +∞. For all i (0 ≤ i ≤ k), let χ i be the Φ-character of (zi, zi+1) under a. Notice that zi ∈ a(r) if and only if r ∈ χ i−1∪ χ i . As the exact values of z1, . . . , zk are irrelevant as far as satisfiability is concerned, we can think of a as given by the tuple (χ 0, . . . , χ k). We illustrate this representation by an example.(cid:18) ⊆ I . Since every element of RCP(cid:18)), for each open subinterval IExample 18. Consider the following RCC8c-network Φ:DC(p, q), EC(p, r), EC(q, r),c(r),NTPP(p, p1), NTPP(p1, p2), NTPP(q, q1), NTPP(q1, q2), DC(p2, q2).This network is satisfied over RCPi = 0, . . . , 6, in Fig. 17 (for instance, χ 0= {p, p1, p2}).+(R) by the assignment (χ 0, . . . , χ 6), where each χ i is the Φ-character of (zi, zi+1), Our plan is to show that, given an assignment a satisfying Φ, we can transform it into an assignment that has a small (polynomial in |Φ|) number of Φ-characters.+(R) and let x1, . . . , xm be a point-Lemma 19. Let Φ(r1, . . . , rn) be an RCC8c-network satisfied by an assignment a over RCPcertificate for Φ under a. Let [z1, z2] be a closed non-punctual interval containing no xi and such that a is uniform over (z1 − ε, z1)and (z2, z2 + ε), for some ε > 0. Then Φ is satisfied by an assignment a(cid:18)that differs from a only on [z1, z2] in such a way that [z1, z2]is partitioned into 2n − 1 intervals with a(cid:18)uniform over the interior of each of them.Proof. Without loss of generality, we may assume that Φ contains no EQ(ri, r j)—if this is not the case, we replace all occurrences of ri with r j and remove EQ(r j, r j). Denote the Φ-character of (z1 − ε, z1) by χ − and the Φ-character of (z2, z2 + ε) by χ +. Starting with χ − and χ +, we construct a tuple of Φ-characters that gives the required assignment between z1 and z2.It may be impossible (due to connectedness constraints in Φ) to take the empty set for the character of (z1, z2): cf. r in Example 18. On the other hand, due to DC-constraints in Φ, it may also be impossible to split [z1, z2] in half to obtain a pair of adjacent open intervals with the characters χ − and χ +, respectively: in Example 18 (see Fig. 18), χ − contains p1and χ + contains q1, which cannot share boundary points because they are included in disjoint p2 and q2, respectively. The following notation will be useful. If χ is a set of variables of Φ, denote by χ↑ the smallest extension of χ that contains each s with r ∈ χ↑ and either TPP(r, s) ∈ Φ or NTPP(r, s) ∈ Φ. Our strategy, then, will be to ensure that (z1, z2) has character(cid:8)=χ 0r ∈ χ − ∩ χ + | c(r) ∈ Φ(cid:9)↑(although the assignment a(cid:18)⊆χ − ∩ χ +. Moreover, χ 0 respects all the universal conditions of the constraints in Φ. (In Fig. 18, we have χ 0= {r}.) However, χ 0 cannot be simply assigned to (z1, z2) and thus made adjacent to χ − and χ + because of the NTPP constraints in Φ, = {r}: since NTPP(p1, p2) ∈ Φ, the regions p1 and p2 cannot as illustrated by Example 18, where χ − = {r, p1, p2} and χ 0we are constructing will not necessarily be uniform over this interval). By definition, χ 062R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 18. Proof of Lemma 19: construction of the assignment a(cid:18)for Example 18.share boundary points, and so we have to insert an intermediate character χ −1In general, we define two sequences of characters= {r, p2} between χ − and χ 0; see Fig. 18. χ − = χ −n⊇ · · · ⊇ χ −0= χ 0= χ +0⊆ · · · ⊆ χ +n= χ +.(24)We begin with χ −nχ − j=(cid:2)χ 0∪= χ − and, if χ −n, . . . , χ −( j+1) have already been defined, then we set(cid:8)s ∈ χ −( j+1)| r ∈ χ −( j+1) and NTPP(r, s) ∈ Φ↑.(cid:9)(cid:3)Intuitively, χ − j eliminates from χ −( j+1) the elements that are minimal with respect to NTPP: in Example 18, χ −1 elimi-⊆ χ −( j+1), for all j, 0 ≤ j < n. nates p1 from χ −2 and χ −0 further eliminates p2 from χ −1. First, observe that χ 0\ χ 0. Then there is some s1 ∈ χ −1 such Moreover, we claim that χ −0that NTPP(s1, s0) ∈ Φ. We have s1 /∈ χ 0 for otherwise s0 ∈ χ 0, which is impossible. Thus, there is some s2 ∈ χ −2 such that NTPP(s2, s1) ∈ Φ. As Φ is satisfied (by a), we cannot repeat this argument more than n times, which proves our claim. The other sequence, χ +n, . . . , χ −0, is defined symmetrically.= χ 0. Indeed, assume that χ −0We can redefine the assignment a over [z1, z2] by taking the tuple of characters (24). We claim that the resulting satisfies Φ. Indeed, by construction, a(cid:18)(r) is connected, for all c(r) ∈ Φ. The existential conditions of the assignment a(cid:18)constraints in Φ are satisfied by a(cid:18)because their adjacent Φ-characters are the same as under a. The new characters are subsets of χ − and χ +, and so respect all the DC constraints in Φ; the universal conditions of the EC constraints in Φ are respected because the characters (24) are subsets of χ − and χ + and touch only them; the universal conditions of the TPPand NTPP constraints in Φ are satisfied by construction. (cid:2)(cid:4) χ 0. Let s0 ∈ χ −0⊆ χ − jAs an almost immediate consequence, we obtain:Theorem 20. Sat(RCC8c, RCP+(R)) is NP-complete.Proof. NP-hardness is by Theorem 17. The matching upper bound follows from a polynomial model property of the kind established by Lemma 19: if Φ is satisfied by a then we can fix at most 3|Φ| points of a point-certificate for Φ under aand, by Lemma 19, find a tuple of at most 3|Φ| × 2|Φ| Φ-characters that induce a satisfying assignment for Φ. Clearly, we can guess such a tuple of 6|Φ|2 Φ-characters and check in polynomial time that: (i) the set of Φ-types obtained by taking ∪ χ 2, for each pair of adjacent Φ-characters χ 1 and χ 2, is a type-certificate for Φ; and (ii) any region {rr with c(r) ∈ Φ is connected in the sense that the set of Φ-characters containing r is contiguous in the tuple. (cid:2)◦ | r ∈ χ 1} ∪ χ 1∩ χ 2We now show how the construction above can be modified to the case of arbitrary regular closed regions in R. Recall (cf. Fig. 13) that such regions can be infinite unions of closed non-punctual intervals with their accumulation points. The first +(R), however, a satisfying assignment step in the proof of Theorem 20 was to pick some point-certificate for Φ(¯r). Over RCmay not be uniform in any of the intervals to the left or to the right of a point z in the point-certificate. Nevertheless, since the regions are regular closed sets, there is an interval (z − ε, z) such that each of its subintervals of the form (z − ε(cid:18), z), 0 < ε(cid:18) < ε, contains points not only from the same collection of a(ri ) as (z − ε, z) but also points from the same collection of −a(ri); recall that − X = (R \ X)−. For example, in the context of Fig. 13, the point 0 belongs to any point-certificate because its type is required for EC(r1, r3), EC(r1, r4) and EC(r3, r4). Every sufficiently small neighbourhood (−ε, 0) contains points in a(r1) only (these points are also in the complements of a(ri) for i = 2, 3, 4); but every sufficiently small neighbourhood (0, ε) contains not only points in a(r3) and points in a(r4) but also points in the complements of a(r3) and a(r4).We say that a is left-uniform in z2 over (z1, z2) if every subinterval (z2 − ε, z2) ⊆ (z1, z2) satisfies the following:X ∩ (z1, z2) (cid:14)= ∅ iff X ∩ (z2 − ε, z2) (cid:14)= ∅,for all X of the form a(r) and − a(r).We say that a is right-uniform in z1 over (z1, z2) if the mirror image condition is satisfied. For example, the assignment in Fig. 13 is right-uniform in 0 over (0, +∞) but it is not uniform over any (0, ε). On the other hand, if a is uniform over (a, b) then it is both left-uniform in b over (a, b) and right-uniform in a over (a, b). Note that an interval with a left-or right-uniform assignment can contain points of exponentially many distinct Φ-types (this is in contrast to an interval with a uniform assignment, all points of which are of the same Φ-type). Nevertheless, an assignment left-uniform in z2over (z1, z2) can be redefined on that interval so that it is uniform over each of the intervals forming an infinite sequence converging to z2; moreover, the converging intervals can be made to have a small (linear in |Φ|) number of Φ-characters (the case of right-uniform assignments is symmetrical). This will provide us with polynomial representations of assignments.R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7563Fig. 19. Subsets of (z − ε, z) to represent the tuple χ 1, χ 2, χ 3.+(R). Fix a point-certificate for Φ under Lemma 21. Let Φ(r1, . . . , rn) be an RCC8c-network satisfied by an assignment a over RCa. Let z be one of them and ε > 0 be such that the distance between any two points in the certificate is at least 3ε. If a is left-uniform in z over (z − ε, z) (right-uniform in z over (z, z + ε)) then Φ has a satisfying assignment a(cid:18)that differs from a only on [z − ε, z)(respectively, on (z, z +ε]) and such that this interval is a union of intervals converging to z and having at most 2n distinct Φ-characters under a(cid:18)uniform over the interior of each of these intervals., with a(cid:18)(cid:18)r⊆ (z − ε, z) such that Ir ⊆ a(r) and IProof. Let Θ be the set of all r with a(r) ∩(z −ε, z) (cid:14)= ∅ and (−a(r)) ∩(z −ε, z) (cid:14)= ∅. If Θ = ∅ then a is uniform over (z −ε, z)and we are done. Otherwise, for each r ∈ Θ , z is a boundary point of a(r), and so, since a(r) is regular closed, there is a (cid:18)pair of open intervals Ir, Ir (that is, each of the two intervals is either entirely in a(ri) or does not intersect a(ri), for any ri , 1 ≤ i ≤ n). Let χ 1, . . . , χ 2k be a (cid:18)r , for r ∈ Θ . Consider an infinite sequence of intervals in (z − ε, z) converging tuple of Φ-characters of the intervals Ir and Ito z and assign the characters χ 1, . . . , χ 2k to the members of this sequence in a cyclical way (see Fig. 19). Define a(cid:18)by taking the Φ-types of points induced by this sequence of Φ-characters over [z − ε, z); a(cid:18)coincides with a elsewhere. To see that a(cid:18)coincides with the type of z under a, and so the existential conditions of all constraints are satisfied because the types of the points in the point-certificate have not changed. The Φ-characters under a(cid:18)are all taken from a, and thus satisfy the universal conditions of the DC, TPP and NTPP constraints in Φ. Finally, the Φ-type of z − ε is also consistent with Φ (for otherwise, asatisfies Φ, observe that a(cid:18)(r) is connected, for each connected a(r). The Φ-type of z under a(cid:18)∩ a(r) = ∅ with a uniform over both Ir and I(cid:18)rD D Dwould not be left-uniform in z over (z − ε, z)). (cid:2)Theorem 22. Sat(RCC8c, RC+(R)) is NP-complete.Proof. NP-hardness was shown by Theorem 17. The matching upper bound follows from the polynomial model prop-erty established by Lemmas 19 and 21. Indeed, suppose an RCC8c-network Φ(r1, . . . , rn) is satisfied by an assign-+(R). Let z1 < · · · < zm, for m ≤ 3|Φ|, be a point-certificate for Φ under a. Take some ε such that ment a over RC0 < ε < min1≤i<m(zi+1 − zi)/3, a is left-uniform in zi over each (zi − ε, zi) and right-uniform in zi over each (zi, zi + ε). By Lemma 21, we can construct a satisfying assignment a(cid:18)differs from a only on [zi − ε, zi) and (zi, zi + ε], 1 ≤ i ≤ m, and on each of these intervals a(cid:18)is induced by a converging sequence of 2n Φ-characters. Next, by Lemma 19, each closed interval [zi + ε, zi+1 − ε], 1 ≤ i < m, is subdivided into a sequence of 2n − 1 subintervals and a(cid:18)is redefined so that the result is uniform over each of the subintervals; the two infinite intervals, (−∞, z1 − ε] and [zm + ε, ∞), are dealt with in a similar way. This gives us a polynomial representation of a satisfying assignment. More precisely, we obtain a sequence of 6mn Φ-characters that are arranged in the following structurefor Φ such that a(cid:18)· · · = χ j(cid:14)2n,L, . . . , χ j(cid:15)(cid:16)2n Φ-characters,1,L(cid:17)z j|↓ χ j(cid:14)1,R , . . . , χ j(cid:15)(cid:16)2n Φ-characters2n,R(cid:17)= χ j(cid:14)−n, . . . , χ j−0= χ j+1(cid:15)(cid:16)2n−1 Φ-characters+0 , . . . , χ j+1+n(cid:17)and such that the following Φ-types form a type-certificate for Φ:= χ j+1(cid:14)2n,L, . . . , χ j+11,L(cid:17)(cid:15)(cid:16)2n Φ-charactersz j+1|↓ χ j+1(cid:14),1,R , . . . , χ j+12n,R(cid:17)(cid:15)(cid:16)2n Φ-characters= · · ·– τ j– {r– τ j– {r∩ χ j+i and τ j−i , for i, 0 ≤ i ≤ n, and j, 1 ≤ j ≤ m;◦ | r ∈ χ j} ∪ χ j+(i+1) and {r+i+ii,L and τ ji,R , for i, 1 ≤ i ≤ 2n, and j, 1 ≤ j ≤ m;(cid:5)(cid:7)◦ | r ∈i=1(χ ji,Li=1(χ ji,Li,R )} ∪∪ χ j∪ χ j∩ χ j+(i+1)2n2ni,R ), for j, 1 ≤ j ≤ m,◦ | r ∈ χ j−i∩ χ j−(i+1)} ∪ χ j−i∪ χ j−(i+1), for i, 0 ≤ i < n, and j, 1 ≤ j ≤ m;σ is the Φ-type for χ jwhere τ jσ } ∪ χ jσ . Informally, the Φ-types of the first and the third sort correspond to the internal points of the respective Φ-characters; the Φ-types of the second sort correspond to the boundary points shared by pairs of adjacent intervals having characters either χ j−(i+1); finally, the+(i+1), or χ j+1−iσ , that is, τ j+i and χ jand χ j+1σ = {r◦ | r ∈ χ j64R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Φ-types of the fourth sort correspond to the points z j , which are on the boundary of all the intervals converging to z j from both the left and the right.Our NP satisfiability checking algorithm guesses such a structure of O (|Φ|) Φ-characters and then checks whether its induced Φ-types form a type-certificate for Φ and every region ri with c(ri) ∈ Φ is connected in the obvious sense. (cid:2)7. NP-completeness of RCC8c and RCC8c◦in the Euclidean planeIn this section, we show that the problems Sat(RCC8c, RCPNP-complete. In addition, we show that the problem Sat(RCC8c◦, RCSat(RCC8cdecidability of Sat(RCC8c+(R2)) are identical and +(R2)) is NP-complete, and that the problem +(R2)) is NP-hard. We showed in Section 5 that these problems are distinct. At the time of writing, the +(R2)) and Sat(RCC8c, RC◦, RCP+(R2)) is open.◦, RCWe begin with the lower bounds, which are established by reduction of the NP-complete string graph problem (Proposi-tion 6).Lemma 23. Let L be either of RCC8c or RCC8c◦. Then the problems Sat(L, RCP+(R2)) and Sat(L, RC+(R2)) are NP-hard.Proof. Given a graph G = (V , E) with V = {v 1, . . . , vn}, let ΦG be the following RCC8c-network:c(v i),PO(v i, v j),DC(v i, v j),for v i ∈ V ,for (v i, v j) ∈ E,for (v i, v j) /∈ E;◦◦+(R2); (e) Φ◦G is satisfiable over RC+(R2); (c) ΦG is satisfiable over RCP+(R2) such that, for all i, j (1 ≤ i, j ≤ n): (i) αi ⊆ vin ΦG . It suffices to show that the following are equiva-+(R2); (d) ΦG is satisfiable -network obtained by replacing c by cG is satisfiable over RCP+(R2).and let Φ◦G be the RCC8clent: (a) G is a string graph; (b) Φ◦over RC(a) ⇒ (b): Let α1, . . . , αn be a string representation of G. Note that (the loci of) these arcs are closed, bounded sets. By ◦i ; (ii) if i (cid:14)= j, then v i (cid:2) v j ; and Lemma 8, we can find v 1, . . . , vn in RCP(iii) if αi and α j do not intersect, then DC(v i, v j). Thus, v 1, . . . , vn satisfies Φ◦G .(b) ⇒ (c) and (c) ⇒ (d): Trivial.(d) ⇒ (e): Suppose v 1, . . . , vn ∈ RCRCr1, . . . , rn satisfies Φ◦(e) ⇒ (a): Suppose v 1, . . . , vn ∈ RCconsider the collection of those xe in vstring representation of G. (cid:2)+(R2) satisfies ΦG . By Lemma 8, we can find interior-connected regions r1, . . . , rn in ◦i ; (ii) if i (cid:14)= j, then ri (cid:2) r j ; and (iii) if DC(v i, v j), then DC(ri, r j). Thus, ◦j . For each i, 1 ≤ i ≤ n, ◦i be a Jordan arc connecting all these points. Then α1, . . . , αn is a G . Notice that we do not require r1, . . . , rn to be polygons.+(R2) such that, for all i, j (1 ≤ i, j ≤ n): (i) v i ⊆ r+(R2) satisfies Φ◦◦i , and let αi ⊆ vG . For any e = (v i, v j) ∈ E, select xe ∈ v∩ v◦iWe next establish the matching upper complexity bounds by giving criteria for satisfiability of a given constraint network Φ in terms of a type-certificate for Φ and certain planarity conditions, which ensure that the type-certificate for Φ is realizable on the plane (and not just in some topological space as in Theorem 11). Let Φ(r1, . . . , rn) be an RCC8c-constraint network and let ¯τ = τ 1, . . . , τ m be a type-certificate for Φ. We proceed to construct a graph GΦ, ¯τ . For all k (1 ≤ k ≤ m), let V k = {v i,k | 1 ≤ i ≤ n} and let Gk = (V k, Dk) be a fresh copy of the cyclic graph of order n. Take a fresh vertex vand set ∗) | 1 ≤ k ≤ m}. For any i (1 ≤ i ≤ n), define the set of edgesT = {(v 1,k, v(cid:18)∗(cid:18) ≤ m, ri ∈ τ k ∩ τ k(cid:18) },mk=1 V k ∪ {v∗} and E =if c(ri) ∈ Φ,otherwise.k=1 Dk ∪ T ∪m(cid:5)(cid:5)ni=1 Ci . Finally, let SΦ, ¯τ be the set of all pairs of (25)Ci ={(v i,k, v i,k(cid:18) ) | 1 ≤ k (cid:14)= k∅,Let GΦ, ¯τ = (V , E), where V =distinct edges of E given by(cid:5)(cid:19)(cid:19)SΦ, ¯τ =(Ci × T ) ∪(Ci × C j).(26)1≤i≤n1≤i(cid:14)= j≤nDC(ri ,r j ) /∈ΦLemma 24. Let Φ(¯r) be an RCC8c-constraint network. Then the following are equivalent:(a) Φ is satisfiable over RC(b) there exist a type-certificate ¯τ for Φ of 3|Φ| types and S ⊆ SΦ, ¯τ such that the design (GΦ, ¯τ , S) has a drawing;(c) Φ is satisfiable over RCP+(R2) by a tuple of bounded polygons, each of which has at most 3|Φ| components.+(R2);R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7565Fig. 20. Three sorts of edges in the graph GΦ, ¯τ .+iProof. In demonstrating these equivalences, we rely in several places on Lemma 8. Accordingly, if X1, . . . , Xn is some col-++n . We silently assume lection of sets under consideration, we denote their ‘thickenings,’ obtained by Lemma 8, by X1 , . . . , X+i —and in particular, that any set (mentioned in the context of the discussion) not intersecting Xi also does not intersect Xthat any point (mentioned in the context of the discussion) not contained in Xi is also not contained in X. Likewise, we silently assume that Xis interior-connected if Xi is connected.+(R2). By adding dummy arguments if necessary, we may (a) ⇒ (b): Suppose Φ(r1, . . . , rn) is satisfied by some a: V → RCassume n ≥ 3. Let x1, . . . , xm be a point-certificate for Φ under a and let ¯τ = τ 1, . . . , τ m, where τ k = τ (xk, a), for 1 ≤ k ≤ m. ++(R2) be the thickenings of X1, . . . , Xn guaranteed by Lemma 8. Let Let Xi = a(ri), for 1 ≤ i ≤ n, and let X1 , . . . , X◦++d1, . . . , dm be closed discs, centred on the respective points x1, . . . , xm, such that xk ∈ ( Xi )iimplies dk ∩ Xd1, . . . , dm.is disconnected by (simultaneous) removal of all the = ∅. It is then obvious that none of the sets ( Ximplies dk ⊆ ( X, and xk /∈ XFixing k (1 ≤ k ≤ m), take a set of points { y1,k, . . . , yn,k} lying on δdk. Thus, for all i (1 ≤ i ≤ n), the following are ◦+i )◦+i )∈ RC+i+i+nequivalent:(cid:2)(cid:3)◦ ⇐⇒ yi,k ∈(cid:2)+i(cid:3)◦+i◦◦∗∗.++XX+i )+i )i )◦i )◦, and so fri ∈ τ k ⇐⇒ xk ∈ Xi ⇐⇒ xk ∈(27)Since n ≥ 3, we can decompose each Jordan curve δdk into a collection Δk = {γ1,k, . . . , γn,k} of Jordan arcs connecting the be a point lying outside all the dk, and let θk be a Jordan arc connecting y1,kvarious points yi,k in a cycle. In addition, let yto y. Evidently, we may choose the θk in such a way that, together with the arcs γi,k, they form a plane graph; see Fig. 20. Set Θ = {θ1, . . . , θm}. Fixing i (1 ≤ i ≤ n), we define a further set of edges Γi as follows. If c(ri) /∈ Φ, then Γi = ∅. Otherwise, , such ( Xis not disconnected by that γ avoids all the disks dh , except at the endpoints yi,k and yi,k(cid:18) . (This is possible because ( Xsimultaneous removal of the d1, . . . , dm.), we may draw a Jordan arc γ ⊆ ( X◦+i )is connected. Hence, for any pair of distinct points yi,k and yi,k(cid:18) ∈ ( Xinduces a natural map from the edges in each Ci to the arcs in Γi . That is: fRecalling the definition of GΦ, ¯τ = (V , E), we see that the function f : v i,k (cid:27)→ yi,k and f : vinduces a natural map from the edges in each Dk to the arcs in Δk, and from the edges in T to the arcs in Θ . Furthermore, by (27), ri ∈ τ k if and only if yi,k ∈ ( Xis a realization of GΦ, ¯τ . Furthermore, suppose α and β are arcs in this realization which cross at some point—i.e., which have points in common other than a common endpoint. By the construction of these arcs, and exchanging α, β if necessary, we have +α ∈ Γi for some i, and either β ∈ Θ , or β ∈ Γ j for some j such that DC(ri, r j) /∈ Φ. (Indeed, DC(ri, r j) ∈ Φ implies Xi and +j are disjoint, whence no arc in Γi can intersect an arc in Γ j .) Thus, the pair (α, β) is in the set SΦ, ¯τ of allowed edge Xcrossings, and we have a drawing of (GΦ, ¯τ , S), for some S ⊆ SΦ, ¯τ , as required.(b) ⇒ (c): Let ¯τ = τ 1, . . . , τ m be a type-certificate for Φ and S ⊆ SΦ, ¯τ . If there is a drawing of (GΦ, ¯τ , S) in R2, then there is one in the closed plane, S2. Let f be such a drawing. Write f (v i,k) = yi,k, f (Ci) = Γi and f (Dk) = Δk for all i and kand f (T ) = Θ . Thus, each Δk defines a Jordan curve in S2, with the set of (1 ≤ i ≤ n and 1 ≤ k ≤ m); and write f (v. Denote by dk the closed allowed edge-crossings SΦ, ¯τ ensuring that none of these Δk separates any other from the point y, we may disc-homeomorph enclosed by Δk and not containing yregard f as a drawing of (GΦ, ¯τ , S) in R2: the various dk will still be closed disc-homeomorphs, and ywill lie outside all of them. Indeed, without loss of generality, we may assume that this drawing is rectified. (Hence, any two arcs which intersect +(R2) of at an internal point cross each other in the obvious sense.) We proceed to construct an assignment a: V → RCPpolygons satisfying Φ.. By taking the point at infinity so that it is close to y∗) = y∗ (cid:27)→ y∗∗∗∗∗∗Without loss of generality, we may assume that Φ contains no EQ(ri, r j). By (type), (tpp-u), (ntpp-u), we can order the variables ¯r = r1, . . . , rn in such a way thatj < i whenever TPP(r j, ri) ∈ Φ or NTPP(r j, ri) ∈ Φ.For each i (1 ≤ i ≤ n) and each k (1 ≤ k ≤ m), we select a region W i,k ∈ RCP(R2) as follows:◦i– If r– If ri ∈ τ k but r∈ τ k, let W i,k ⊆ dk be a lozenge such that xk ∈ (W i,k)◦and yi,k ∈ δW i,k; see Fig. 21a.◦i /∈ τ k, let W i,k ⊆ dk be a lozenge such that xk, yi,k ∈ δW i,k; we may choose these W i,k in such a way that no two of them have intersecting interiors; see Fig. 21b.– Otherwise, i.e., if ri /∈ τ k, let W i,k = ∅.66R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 21. Wedges involving the point xk (and disks dk ).Fig. 22. Connecting together wedges W i,k and W i,k(cid:18) .We refer to the W i,k as wedges. The construction of a will ensure that W i,k ⊆ a(ri), for any i and k; the function of these wedges is to guarantee the existential conditions of the RCC8-constraints in Φ.Fix any i (1 ≤ i ≤ n). If c(ri) /∈ Φ, let Y i = ∅. Otherwise, i.e., if c(ri) ∈ Φ, the arcs of Γi connect together all the wedges +(R2) by covering all these arcs with a finite series of lozenge-shaped regions, +(R2), we rely on the fact that, by construction, arcs in Γ are piecewise W i,k (for varying k). Form a region Y i ∈ RCPas shown in Fig. 22. Note that, to ensure Y i ∈ RCPlinear and have no line segments in common.It is immediate by construction that Y i does not intersect the interior of any of d1, . . . , dm. Moreover, we have= ∅,i (cid:14)= j (cid:21)⇒ YDC(ri, r j) ∈ Φ (cid:21)⇒ Y i ∩ Y j = ∅.∩ Y◦i◦j(29)To see (29), it suffices to show that α and β do not intersect where α ∈ Γi and β ∈ Γ j . By definition, these arcs share no endpoints; on the other hand, if DC(ri, r j) ∈ Φ then SΦ, ¯τ ∩ (Γi × Γ j) = ∅, so that α and β cannot cross.Now defineZ i = Y i +(cid:13)1≤k≤mW i,k.◦◦∈ τ k ⇐⇒ xk ∈ Zi ,riri ∈ τ k ⇐⇒ xk ∈ Z i.Thus, if c(ri) ∈ Φ, then Z i is connected. (Note that Z i will not in general be interior-connected, as we see from Fig. 22.) By construction:(31)By (ec-u), if EC(ri, r j) ∈ Φ, then, for all k, the interiors of the wedges W i,k and W j,k cannot intersect. And, by (dc-u), if DC(ri, r j) ∈ Φ, then, for all k, one of the two wedges W i,k and W j,k must be empty. By the definition of the Z i and (28)and (29),EC(ri, r j) ∈ Φ (cid:21)⇒ Z= ∅,DC(ri, r j) ∈ Φ (cid:21)⇒ Z i ∩ Z j = ∅.∩ Z◦i◦jWe now define polygons Xi (1 ≤ i ≤ n) by recursion on i. We simultaneously ensure that, for all k (1 ≤ k ≤ m):◦◦∈ τ k ⇐⇒ xk ∈ Xi ,riri ∈ τ k ⇐⇒ xk ∈ Xi.And we likewise ensure that, for all j (1 ≤ j ≤ n):EC(r j, ri) ∈ Φ (cid:21)⇒ X= ∅, if j < i,DC(r j, ri) ∈ Φ (cid:21)⇒ X j ∩ Xi = ∅, if j < i,∩ X◦j◦i◦j◦∩ Xand Ziand Z j ∩ Xi = ∅, if j > i.= ∅, if j > i,(32)(33)(34)(35)(36)(37)(28)(30)R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7567Base case: Let X1 = Z 1. Conditions (34)–(37) are simply (30)–(33).Inductive step: Suppose now that, for 1 < i ≤ n, the polygons X1, . . . , Xi−1 have been defined satisfying (34)–(37). We first +i−2 have already been take Xdefined in previous iterations. Observe that, since all the sets in the context of discussion are bounded, we may assume that +i−1 is a bounded element of RCPX+i−1 to be the thickening of Xi−1 guaranteed by Lemma 8, it being supposed that X+(R2). Next, we define+1 , . . . , X(cid:13)(cid:13)Xi = Z i +X j +TPP(r j ,ri )∈ΦNTPP(r j ,ri )∈ΦX+j .(38)This definition is legitimate, because TPP(r j, ri) ∈ Φ or NTPP(r j, ri) ∈ Φ implies j < i.◦We must establish that (34)–(37) hold. For (34), notice that, by construction, if ri◦∈ τ k then xk ∈ Zi and if ri ∈ τ k◦◦i /∈ τ k. That could happen only if either xk ∈ Xthen xk ∈ Z i ⊆ Xi . Conversely, suppose xk ∈ Xj , for some j < i with ◦+, for some j < i with NTPP(r j, ri) ∈ Φ. In the former case, applying (34) to j < i, by the TPP(r j, ri) ∈ Φ, or if xk ∈ ( Xj )◦◦∈ τ k, whence rinduction hypothesis, we have ri . In the jlatter case, by (34), r j ∈ τ k, whence ri ∈ τ k, by (ntpp-u), and the conclusion again follows. Condition (35) follows by an almost identical argument. Conditions (36)–(37) are immediate by construction. This completes the induction.◦i by (35)—contradicting xk /∈ X∈ τ k, by (tpp-u), whence xk ∈ X◦i but r⊆ X◦i◦iConsider the mapping a: ri (cid:27)→ Xi . We show that a satisfies the RCC8-constraints in Φ. If EC(r j, ri) ∈ Φ then, by (ec-e), there is k with r j, ri ∈ τ k, whence, by (34) and (35), xk ∈ X j ∩ Xi . The existential conditions generated by constraints of the forms PO(r j, ri), TPP(r j, ri) and NTPP(r j, ri) are handled similarly using (po-e) and (diff-e). We turn now to the ◦universal conditions. By (38), TPP(r j, ri) ∈ Φ implies X j ⊆ Xi , and NTPP(r j, ri) ∈ Φ implies X j ⊆ Xi . If EC(r j, ri) ∈ Φ, then X= ∅ by (36); and if DC(r j, ri) ∈ Φ, then X j ∩ Xi = ∅ by (37).◦j◦i∩ XFinally, we claim that, if c(ri) ∈ Φ, then Xi and X+i are connected. By construction, Z i is connected. But if X j or X+jis one of the summands in (38), then any component of this set will, by (reg-e), contain at least one lozenge W j,k. And since Φ contains either TPP(r j, ri) or NTPP(r j, ri), we know that W j,k shares xk with the lozenge W i,k, which is part of +(R2) satisfies Φ, as required. the connected set Z i . Hence Xi is connected. Thus, the tuple X1, . . . , Xn of elements of RCPFinally, observe that, by construction, the polygons X1, . . . , Xn are all bounded and are built up from wedges W i,k in at most 3|Φ| discs and connecting sausage-like regions. So, if a region is connected then it has just a single component; otherwise, all wedges within one disc form a component (as they share its central point xk ), resulting in at most 3|Φ| components.(c) ⇒ (a): Trivial. (cid:2)It is then immediate from Lemmas 23 and 24 that we have the following result.Theorem 25. The problems Sat(RCC8c, RCP+(R2)) and Sat(RCC8c, RC+(R2)) coincide and are NP-complete.The case of RCC8c◦and ¯τ = τ 1, . . . , τ m a type-certificate for Φ, we first define, in place of the edge-sets Ci given in (25), the edge-setsis similar to that of RCC8c, and we briefly indicate the main differences. If Φ is an RCC8c◦-network (cid:18)◦iC={(v i,k, v i,k(cid:18) ) | 1 ≤ k (cid:14)= k∅,(cid:18) ≤ m, ri ∈ τ k ∩ τ k(cid:18) },if c◦(ri) ∈ Φ,otherwise.(25◦)◦(Intuitively, the condition ri ∈ τ k ∩ τ k(cid:18) states that region ri —but not necessarily ri —contains both xk and xk(cid:18) ; hence if ri is ◦i .) This yields, in place interior-connected, then there are points in r(cid:5)◦k=1 Dk ∪ T ∪of the graph GΦ, ¯τ , the graph Gi . We next define, in place of the set of allowed edge-crossings SΦ, ¯τ given in (26), the set of allowed edge-crossings◦i close to xk and xk(cid:18) , and connected by an arc lying in r= (V , E) where V =k=1 V k ∪ {v∗} and E =(cid:5)ni=1 C◦Φ, ¯τ(cid:5)mm◦Φ, ¯τS=(cid:19)(cid:2)(cid:3)∪◦iC× T(cid:19)(cid:3)(cid:2)◦iC× C◦j.(26◦)1≤i≤n1≤i(cid:14)= j≤nDC(ri ,r j ) /∈Φ and EC(ri ,r j ) /∈Φ(Intuitively, since the arcs in Cr j have interior points in common.) The proof then proceeds as for Lemma 24, but with GSΦ, ¯τ , respectively.◦i are all meant to lie in the interior of ri , arcs in C◦j can intersect those in C◦Φ, ¯τ and S◦i only if ri and ◦Φ, ¯τ replacing GΦ, ¯τ and Lemma 26. Let Φ(¯r) be an RCC8c◦-constraint network. Then the following are equivalent:+(R2);(a) Φ is satisfiable over RCP(b) there exist a type-certificate ¯τ for Φ of 3|Φ| types and S ⊆ S(c) Φ is satisfiable over RCPi-components.+(R2) by a tuple of bounded regions, each of which has at most 3|Φ| components and at most 3|Φ|2◦Φ, ¯τ such that the design (G◦Φ, ¯τ , S) has a drawing;68R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Proof. (a) ⇒ (b): The argument proceeds similarly to that for (a) ⇒ (b) in the proof of Lemma 24. We suppose that +(R2), where n ≥ 3. Let x1, . . . , xm be a point-certificate for Φ under a and Φ(r1, . . . , rn) is satisfied by some a: V → RCPlet ¯τ = τ 1, . . . , τ m, where τ k = τ (xk, a), for 1 ≤ k ≤ m. Set Xi = a(ri), for 1 ≤ i ≤ n. Notice that these regions are by as-+(R2). This allows us to choose points yi,k so that ri ∈ τk ⇔ yi,k ∈ X(cf. (27); we have no use for the sumption in RCP++n , and we do not create them). The arc sets Δk and Θ are defined as before. However, the arc sets Γiregions X1 , . . . , X◦◦(ri), we choose γ connecting any pair of distinct points yi,k and yi,k(cid:18) ∈ Xare chosen slightly differently: if Φ contains ci◦so that γ ⊆ Xi . (This is possible because connected, open sets are arc-connected.) This choice of the Γi ensures that, even ◦◦Φ, ¯τ , with the restricted collection of allowed crossings given by (26as required.), we still have a drawing of (GΦ, ¯τ , S), for some S ⊆ S◦i◦(b) ⇒ (c): The argument proceeds similarly to that for (b) ⇒ (c) in the proof of Lemma 24. The only significant change is that we no longer employ the ‘sausage’ construction of Fig. 22: we simply take each polygon Y i to be the result of ‘thickening’ the closed, bounded set(cid:19)1≤k≤mW i,k ∪(cid:19)γ ∈C◦iγ◦to a polygon, as guaranteed by Lemma 8. Thus, for any arc γ ∈ Ci . The construction of X1, . . . , Xn and the argument that this tuple satisfies Φ then proceeds essentially as for Lemma 24 and, again, the polygons are bounded and are built up from wedges W i,k in 3|Φ| discs and connecting regions (which are interior-connected and overlap the respective wedges). So, if a region is interior-connected then it has just a single i-component; otherwise, each wedge within one disc can form an i-component, resulting in at most 3|Φ|2 i-components.◦i , we have γ ⊆ Y(c) ⇒ (a): Trivial. (cid:2)It is then immediate from Lemmas 23 and 26 that we have the following result.Theorem 27. Sat(RCC8c◦, RCP+(R2)) is NP-complete.◦iIt is illuminating to ask why the proof of Lemma 26 fails when RCP+(R2). The answer lies to points xk ∈ δ Xi . The problem in the innocent-looking wedges W i,k, which may be required to connect points yi,k ∈ X+(R2), we cannot guarantee that these wedges exist (cf. Fig. 15), and hence, we cannot use arcs included is that, for RC◦(ri). When dealing with RCC8c, we could afford to be more relaxed, in X, and using sausage-like regions Y i to connect up the drawing the wedges W i,k and arcs Γi within the expanded region Xpieces. But sausage-like regions do not suffice for RCC8c, since they do not secure interior-connectedness. We remark that a purported proof of Theorem 25 was presented in [21]; however, this proof contains an error.5 Another incorrect proof of the same theorem was given in [36].6to ensure the satisfaction of the constraint c+(R2) is replaced by RC+i◦i◦8. The fragmentation of satisfying configurationsLet Φ be a constraint network in any of the languages RCC8, RCC8c or RCC8c+(Rn) or RCP, and suppose Φ is satisfiable over +(Rn). What can we say about the amount of information required to store some satisfying assignment, as RCa function of the number of variables involved? In particular, what can we say about the extent to which Φ forces satisfying assignments to ‘chop up’ the space in which they are embedded? As we shall see, the answer is only loosely related to the complexity-theoretic bounds derived above.We first consider the fragmentation of satisfying assignments for the language RCC8 over RC+(Rn), for all n ≥ 1. Bearing in mind that any satisfiable RCC8-constraint network Φ has a point-certificate of at most 3|Φ| points, +(R), it can be satisfied by an assignment dividing R into at most Lemma 19 guarantees that if Φ is satisfiable over RCP6|Φ|2 intervals over each of which it is uniform.+(Rn) and RCP◦Corollary 28. If Φ is an RCC8-network satisfiable over RCPregions all of whose vertices have integer coordinates in the range [0, O (|Φ|2)].+(Rn) (n ≥ 1), then Φ has a satisfying assignment of bounded polyhedral We next consider the fragmentation of satisfying assignments for the languages RCC8c and RCC8c+(Rn) for all n ≥ 3.RCP◦over RC+(Rn) and 5 The first sentence on p. 105 makes a false claim.6 Theorem 9, p. 539; the preceding Lemma 2 is false, as shown by the first inequality Sat(RCC8, D) (cid:2) Sat(RCC8, I) of Theorem 13 of the present article.R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7569Fig. 23. The construction of Kratochvíl and Matoušek [31].Corollary 29. If Φ is an RCC8c- or RCC8cbounded polyhedral regions all of whose vertices have integer coordinates in the range [0, O (|Φ|2)].-network satisfiable over RC◦+(Rn) (n ≥ 3), then Φ has a satisfying assignment of be the result of removing all c- or c+(R) whose Proof. Let Φ−◦+(R3), and connect up vertices have integer coordinates in the range [0, O (|Φ|2)]. Now cylindrify to an assignment in RCPregions as necessary using points whose coordinates in the second and third dimensions are bounded by O (|Φ|). For n > 3, cylindrify again. (cid:2)-constraints from Φ. We take a satisfying assignment in RCPThe fragmentation of satisfying assignments for RCC8c over RCwith (recall that connectedness coincides with interior-connectedness over R, and so RCC8cTheorem 15 tells us that RCC8c-networks satisfiable over RCBy contrast, Lemma 19 shows that RCC8c-networks satisfiable over RCPcoordinates in the range [0, O (|Φ|2)].+(R) and RCP+(R) has likewise already been dealt is the same as RCC8c). +(R) can force regions to have infinitely many components. +(R) have satisfying assignments with integer +(R2) and RCPover RC+(R2). By Lemma 24, Φ is satisfiable over RCPThis leaves the more interesting case of the fragmentation of satisfying assignments for the languages RCC8c and +(R2). We consider first the language RCC8c. Let Φ be an RCC8c-network satisfiable RCC8c+(R2) (by bounded polygons). But how complicated does this ar-over RCrangement of polygons have to be? In terms of numbers of components, not very. Recall the terminology introduced in Section 3.1: if r ∈ RCis an i-component of r (Fig. 6). As we noted, both +(R2) is the sum of its i-components. By +(R2) and RCPRCLemma 24,+(R2) are closed under taking i-components, and every r ∈ RCP+(R2) and X is a component of r, then X−◦◦◦(r)if Φ is an RCC8c-constraint network satisfied by a tuple of regions in RC+(R2) each of which has at most 3|Φ| components.bounded regions in RCP+(R2), then it is satisfied by a tuple of Similarly, by Lemma 26,◦)(rif Φ is an RCC8cof bounded regions in RCP◦-constraint network satisfied by a tuple of regions in RCP+(R2), then it is satisfied by a tuple +(R2) each of which has at most 3|Φ| components and at most 3|Φ|2 i-components.As we might say, over RCRCP+(R2) and RCP+(R2), RCC8c can force no more than linearly many components; and over ◦can force no more than quadratically many i-components.+(R2), RCC8cWe now proceed to show that (r) becomes false if ‘component’ is replaced by ‘i-component’: RCC8c-constraint networks ) be--constraint networks, satisfiable ◦can in general force satisfying tuples to have exponentially many i-components (Theorems 30 and 31). Likewise, (rcomes false if ‘RCPover RC+(R2), but only by tuples of regions some of which have infinitely many components (Theorem 32).+(R2)’—indeed radically so: there exist RCC8c+(R2)’ is replaced by ‘RC◦The following result uses the construction originally devised by Kratochvíl and Matoušek [31] to establish Proposition 2.Theorem 30. There exists a sequence Φn of RCC8c-constraint networks, satisfiable over RCPsatisfying assignment contains some element with 2Ω(n) i-components.+(R2), such that |Φn| is O (n), but every Proof. Let G 3 = (V 3, E 3) be the planar graph given by the solid lines in Fig. 23. We generalize this graph by inserting new vertices (of degree 2) as follows. If G i is defined for i ≥ 3, we take G i+1 = (V i+1, E i+1) to be the result of inserting a new vertex ui+1 into the edge (ui, y), a new vertex w i+1 into the edge (w i, w), a new vertex v i+1 into the edge (ui, ui−1) and (cid:18)adding a new edge (ui+1, w i+1). Having defined Gn = (V n, En) for some fixed n ≥ 3, let En be a set of additional edges (cid:18)= (V n, En ∪ Einvolving the vertices V n such that Gn can easily be constructed). (cid:18)(cid:18)n be the set of edges {(u1, v 1), . . . , (un, vn)}, realized by arcs arranged as shown (for n = 3) by the grey In addition, let E(cid:18)lines in Fig. 23. We call the edges in En ∪ En invisible. (Note that the latter cannot be ∗∗n is a non-planar graph; however, it has a specific realization in which seen in Fig. 23.) Let Gn(cid:18)n) is a 3-connected planar graph (such an E(cid:18)(cid:18)n visible, and we call the edges in E= (V n, En ∪ E(cid:18)(cid:18)n). Thus, G∪ E(cid:18)n(cid:18)n70R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Fig. 24. The plane graph H used in the proof of Theorem 32.∗n∗n∗n, Sthe visible edges En ∪ E∗n) by definition has a drawing, and, by inspection of Fig. 23, permits visible edges e and erealization. Thus, D(cid:18)(cid:18) = (x, u0); or (ii) e = (ui, v i) for some i (2 ≤ i ≤ n) and ecross only if either: (i) e = (ui, v i) for some i (1 ≤ i ≤ n) and eon the line-segment ui−2, z.(cid:18)(cid:18)n are arranged as in Fig. 23. Let S= (G∗n be the set of pairs of distinct edges of G∗n which cross in this to lies By the first statement of Lemma 10, ΘD. By the second statement of Lemma 10, this tuple weakly embeds a rectified drawing of ΘD(cid:18)n. By Whitney’s theorem, G+(R2). Conversely, suppose (¯r, ¯s) is a satisfying assign-, which contains ment for ΘD(cid:18)n has only one drawing in S2 (up to homeomor-a drawing of the 3-connected planar graph Gphism of S2 onto itself). Hence—by applying a homeomorphism if necessary—we may assume that the induced drawing of the subgraph Gn is exactly as depicted (for n = 3) by the solid lines in Fig. 23. Since the allowed crossings of visible ∗edges are given by S, the arc realizing the n , it is then obvious from inspection of Fig. 23 that, in the given drawing of ΘD∗n(visible) edge (un, vn) must cross (x, u0) at least 2n−1 times. And since, in ΘD, regions corresponding to pairs of crossing edges are required to satisfy EC, we see that the member of the tuple ¯s corresponding to the edge (un, vn) must have at least (2n−1 + 1) i-components—each separated from the others by these crossing points. (cid:2)is satisfiable over RCP∗n∗n∗n(cid:18)The next observation shows that this is as bad as things get.Theorem 31. If Φ is an RCC8c- or RCC8cdrawn using points with integer coordinates in a square grid of size 2O (|Φ|).-network satisfiable over RCP◦+(R2), then Φ has a satisfying assignment that can be Proof. Immediate from the proofs of Lemmas 24 and 26 together with Propositions 1 and 5. (cid:2)Thus, over RCP+(R2) (and hence also over RC+(R2)), RCC8c can force arrangements with polynomially many compo-nents, but exponentially many i-components.◦◦Turning now to RCC8c-network Φ is satisfiable over RCP, a different pattern emerges. We consider first satisfiability over RCP+(R2). As we have al-ready observed, in terms of counting i-components, there is even less scope for forcing complexity than with RCC8c: by +(R2), then Φ has a satisfying assignment in which no region Lemma 26, if an RCC8chas more than 3|Φ|2 i-components. Of course, just because each region in a satisfying assignment has only polynomially many i-components, that says nothing about how these i-components intersect. And indeed, a simple modification of the +(R2), such argument of Theorem 30 shows that there exists a sequence {Φn}n≥1 of RCC8cthat |Φn| is O (n), but every satisfying assignment involves a drawing with 2Ω(n) arc-crossings. (Again, we know from The-can force arrangements with polynomially many orem 31 that this is as bad as things get.) Thus, over RCPi-components, but exponentially complicated drawings.-networks, satisfiable over RCP+(R2), RCC8c◦◦Finally, we consider the complexity of satisfying assignments for RCC8c-networks over RC◦+(R2). We show that, in 2-dimensional space, RCC8c◦-networks can force regions in satisfying assignments to be infinitely fragmented.Theorem 32. There exists an RCC8cinfinitely many components.◦-formula that is satisfiable over RC+(R2), but only by tuples some of whose elements have Proof. We briefly outline the underlying intuition. Using Lemma 9, we write RCC8c-constraints whose only satisfying assignments strongly embed the plane graph in Fig. 24. By adding the constraints (39)–(45) we ensure the existence of a region t, including the point v 1, and containing points close to w 2, and a region u, including the point w 1, and containing points close to v 2. The regions t and u are both confined to the interior of the large triangle, and have no internal points in common. These constraints thus force t and u to consist of infinitely many interleaving ‘fingers’, arranged as indicated by the bold lines in Fig. 25. By adding the constraints (46)–(47), we ensure the existence of a region u0 ⊆ u such that infinitely many of the fingers of u contain points of u0.◦R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7571Fig. 25. Constructing a satisfying assignment of Ψ in the proof of Theorem 32.+Let H be the plane graph depicted in Fig. 24. We label the points of H as v 1, . . . , v 7, w 1, . . . , w 7 and its arcs as +α0, . . . , α7, β1, . . . , β7, the double sets of letters broadly reflecting the symmetry of H about the central arc α0. Let Hbe a 3-connected, plane graph extending H .We may regard H and H◦H and Ω◦H + are as defined in Section 3. Let us write Ωas graphs (as opposed to plane graphs) in the usual way, so that the constraint networks ◦◦H ( ¯p ¯q; ¯r¯s), where the variables ¯p = p1, . . . , p7 and ¯q =ΩHq1, . . . , q7 correspond to the points (vertices) v 1, . . . , v 7 and w 1, . . . , w 7, respectively, and the variables ¯r = r0, r1, . . . , r7 and ¯s = s1, . . . , s7 correspond to the arcs (edges) α0, α1, . . . , α7 and β1, . . . , β7, respectively. Letting the variables ¯pcorrespond ◦+H + =not present in H , we may write Ωto those points of H◦(cid:18); ¯r¯s¯rH as a subset. We shall sometimes refer to the regions denoted by ¯p ¯q ¯pas Ωvertex-regions, and those denoted by ¯r¯s¯rnot present in H , and the variables ¯r+(cid:18)). Obviously, Ω◦H + with the constraints (39)–(47)given below. To help motivate the construction, we divide these constraints into groups. We have included some deliberate redundancies for the sake of clarity.(cid:18), t, u, u0) be the union of Ωas edge-regions.Now let t, u and u0 be fresh variables, and let Ψ ( ¯p ¯q ¯p◦H + includes Ωto those arcs of HH + ( ¯p ¯q ¯p(cid:18), ¯r¯s¯r= Ω◦(cid:18)(cid:18)(cid:18)(cid:18)We shall require t and u to be interior-connected regions, in external contact with both p2 and q2, and with eachother:◦c(t),◦c(u),EC(p2, t),EC(q2, t),EC(p2, u),EC(q2, u),EC(t, u).In addition, t◦includes p1 and u◦includes q1:NTPP(p1, t),NTPP(q1, u).(39)(40)(41)(42)We further insist that neither t nor u intersect any of the vertex-regions p3, . . . , p7 or q3, . . . , q7. In addition, t may not intersect any of the edge-regions ¯r, ¯s, except (possibly) r0 or r1; and u may not intersect any of ¯r, ¯s, except (possibly) r0or s1.DC(ph, t),DC(qh, t),DC(ph, u),DC(qh, u)DC(ri, t),DC(si, t),DC(si, u),DC(ri, u)(3 ≤ h ≤ 7),(2 ≤ i ≤ 7),DC(s1, t),DC(r1, u).Finally, we take u0 to be a region included in u, in external contact with p2 but disjoint from both r0 and r1.TPP(u0, u),DC(u0, r0),EC(u0, p2),DC(u0, r1).Notice that we do not require u0 to be interior-connected.We first show that Ψ is satisfiable. Returning to the view of H+of regions obtained by canonically thickening the vertices and edges of His satisfied. Thus, each point of H lies in the interior of the corresponding vertex-region: v i ∈ p+as a plane graph, let ¯p, ¯q, ¯pbe the tuples , as in the proof of Lemma 9 (a), so that Ω ◦H +◦(1 ≤ i ≤ 7). i and w i ∈ q, ¯r, ¯s and ¯r◦i(cid:18)(cid:18)(43)(44)(45)(46)(47)72R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75(cid:18)(cid:18)(cid:18)0 and ζ0 in the proof of Theorem 32.0, xFig. 26. The construction of x0, x◦7◦0∪ r∪ qFurthermore, each arc of H lies in the union of the interiors of the corresponding edge- and vertex-regions: for example, α0 ⊆ p◦7 , and so on. Fig. 25 shows some representative examples.∗Let {xi}i≥0 be an infinite sequence of points, arranged as shown in Fig. 25, and having an accumulation point xon the boundary of q2. For each i ≥ 0, let ζi be an arc from v 1 to xi , drawn as shown (up to i = 1) in Fig. 25. Let the points yi and arcs ηi be constructed similarly, with the yi having an accumulation point yon the boundary of p2, and ηi connecting w 1 to yi . Now let t be the result of thickening all the ζi and taking the infinite sum in RC(R2); and let ube the result of thickening all the ηi and taking the infinite sum in RC(R2). Clearly, this may be done in such a way that constraints (39)–(45) are satisfied. Finally, draw a small disc around each yi , lying in the interior of u. Clearly, this may be done so that each disc maintains some fixed minimum distance from both r0 and r1. Let u0 be the infinite sum, in RC(R2), of these discs. Then the constraints (46)–(47) are satisfied: in particular, the accumulation point ylies on the frontier of +(R2), as required. Observe that, in this satisfying assignment, u0 has infinitely many u0. Thus, Ψ is satisfiable over RCcomponents, namely, the discs around the yi .∗∗(cid:18), ¯r¯s¯rNow suppose Ψ ( ¯p ¯q ¯p(cid:18), t, u, u0) holds; we show that u0 has infinitely many components. Since Ψ ⊇ Ω◦H + ⊇ ΩH , the +(cid:18); ¯r¯s¯r), by Lemma 9 (b), strongly embeds some drawing of the planar graph H . In fact, since the graph Htuple ( ¯p ¯q ¯pis 3-connected, it has at most one drawing in S2 up to isomorphism, so that, applying a homeomorphism if necessary, the induced embedding of the subgraph H is exactly as shown in Fig. 24. Thus, each point of H lies in the interior of the (1 ≤ i ≤ 7). Furthermore, each arc of H lies in the union of the interiors corresponding vertex-region: v i ∈ p◦of the corresponding edge- and vertex-regions: for example, α0 ⊆ p7 , and so on. In what follows we assume some orientation of arcs (which should be clear from the context) and often identify arcs with their loci, to reduce clutter.Denote by V 0 the closed trapezoid indicated in Fig. 26 by the dark grey shading. From the constraints in Ω◦i and w i ∈ q∪ q∪ r◦0◦7◦i◦. On the other hand, by (42), v 1 ∈ t◦H + , we have ◦. Since t0 lies entirely within the large triangle. Let ] lying on α1. Consider ζ0 = ζ (cid:18)]. Thus, (cid:18)(cid:18)(cid:18)[x0, x0◦0◦0∩ t (cid:14)= ∅, whence there exists a point x0 ∈ V◦q2 ⊆ V0 and so, by (40), Vis connected, by (39), there exists an arc ζ (cid:18)◦⊆ t00 be the first point of ζ (cid:18)(cid:18)(cid:18)(cid:18)0 lying on α0 and let xx(cid:18)(cid:18)(cid:18)] is a Jordan curve, which we denote by Γ0.0, v 7]α3α4α1[v 4, xζ0α0[x0We claim that Γ0 separates the region p2 from the point w 1. To see this, note that ζ0 ⊆ tfrom v 1 to x0. By (43)–(45), ζ (cid:18)0 be the last point of ζ (cid:18)(cid:18)[v 1, x0∩ t◦0◦0◦◦2◦2∪ r∪ pcan intersect, by (43)–(45), ◦neither α2 ⊆ p3 nor the triangle T bounded by β1, β5 and β6. Now connect p2 to w 1 by first following α2upwards, and then proceeding along the dashed path in Fig. 26—i.e. leave the large triangle at v 3; re-enter it at w 5; and proceed directly to w 1. Since ζ0 ∩ (α2 ∪ T ) = ∅, this path intersects Γ0 at a single point, namely, v 3, establishing that Γ0separates p2 and w 1. Denote by U 0 the closed region with frontier Γ0 that includes p2 (light grey shading in Fig. 26).(cid:18)(cid:18)Now fix any i ≥ 1, and assume that the points xi−1(cid:18)◦∈ α1, x∈ α0 and arc ζi−1 ⊆ thave been constructed such that ζi−1i−1(cid:18)(cid:18)(cid:18)(cid:18)(cid:18)(cid:18)] is the frontier of a closed region U i−1i−1, v 7]α3α4α1[v 4, xi−1, and the Jordan curve Γi−1 = ζi−1α0[xconnects xi−1 to xi−1including the region p2 in its interior, but not containing the point w 1 (dark grey area in Fig. 27). By the second constraint ◦∩ u. On the other hand, in (46), Ui−1by (42), w 1 ∈ ui lies entirely within the large triangle.is connected, by (39), there exists an arc η(cid:18)i◦0 . By the first constraint in (46), yi ∈ ufrom w 1 to yi (Fig. 27). By (43)–(45), η(cid:18)∩ u0 (cid:14)= ∅, whence there exists a point yi ∈ Ui intersects Γi−1. Indeed, by (43)–(45) and (41), η(cid:18)We know that η(cid:18)i be the point of η(cid:18)(cid:18)i−1, v 7]. Let ytherefore intersects α0[xpoint of η(cid:18)] lying on β1, and let ηi = η(cid:18)(cid:18)(cid:18)[ y[w 1, yi , yii need not be the first, or the last point of η(cid:18)(cid:18)by Δi . We remark that ythe nearest to v 7.(cid:18)i−1, v 7] lying nearest to v 7 (Fig. 27). Let y∩ α0[xi(cid:18)i, v 7]β3β4β1[w 4, y]. Thus, ηiα0[ ymust be disjoint from α1, α3, α4 and ζi−1, and (cid:18)(cid:18)i be the last ] is a Jordan curve, which we denote i lying on α0 as we travel from w 1 to yi ; it is simply We claim that Δi separates the region q2 from the point v 1. To see this, note that ηi ⊆ ucan intersect, by (43)–(45), ◦3 , nor the triangle S bounded by α1, α5 and α6. Hence, using a mirror image of the construction for neither β2 ⊆ q. Since u◦i−1⊆ u⊆ u∪ q∪ s◦2◦2(cid:18)(cid:18)i(cid:18)i(cid:18)i◦◦◦◦◦◦(cid:18)iiR. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7573Fig. 27. The construction of yi and ηi in the proof of Theorem 32.Fig. 28. The construction of xi+1 and ζi+1 in the proof of Theorem 32.ii◦◦◦◦(cid:18)(cid:18)i◦2◦2◦i◦i∪ r⊆ t∪ p. Since tΓ0, we may connect q2 to v 1 by a path guaranteed to intersect Δi at a single point, namely, w 3. Denote by V i the regular closed region with boundary Δi which includes q2 (light grey area in Fig. 27).◦Having constructed V i on the basis of U i−1, we proceed to construct U i on the basis of V i . We know that q2 ⊆ Vi , and ◦∩ t. On from v 1 to xi . By (43)–(45), ζ (cid:18)i lies ]. By (40), Vis connected, by (39), there exists an arc ζ (cid:18)i∩ t (cid:14)= ∅, whence there exists a point xi ∈ Vthat the frontier of V i is Δi = ηiα0[ ythe other hand, by (42), v 1 ∈ tentirely within the large triangle (Fig. 28).(cid:18)i, v 7]β3β4β1[w 4, yintersects Δi . Indeed, ζ (cid:18)i be the last point of ζ (cid:18)(cid:18)(cid:18)(cid:18)lying on α0[ yi, v 7] and let x] is a Jordan curve, which we denote by Γi .We claim that Γi separates the region p2 from the point w 1. To see this, note that ζi ⊆ tmust be disjoint, by (43)–(45) and (41), from β1, β3, β4 and ηi , and ]We know that ζ (cid:18)⊆ tii be the first point of ζ (cid:18)(cid:18)(cid:18)therefore intersects α0[ yi, v 7]. Let xi(cid:18)(cid:18)(cid:18)(cid:18)(cid:18)(cid:18)lying on α1. Let ζi = ζ (cid:18)i, v 7]α3α4α1[v 4, x]. Thus, ζiα0[x[xi , xiican intersect, by (43)–(45), ◦neither α2 ⊆ p3 nor the triangle T bounded by β1, β5 and β6. Now connect p2 to w 1 by first following α2upwards, and then proceeding along the dashed path as with the construction of Γ0 (in Fig. 26). Since ζi ∩ (α2 ∪ T ) = ∅, this path intersects Γi at a single point, namely, v 3, establishing that Γi separates p2 and w 1. Denote by U i the closed region with frontier Γi which includes p2 (light grey shading in Fig. 28).(cid:18)(cid:18)◦∈ α0 and an arc ζi ⊆ tWe have constructed points xi(cid:18)(cid:18)(cid:18)i, v 7]α3α4α1[v 4, xζiα0[xithus repeats indefinitely, generating series of points xall i ≥ 1. We remark in passing that U i is not necessarily a subset of U i−1 (as shown in Figs. 27 and 28).(cid:18)(cid:18)(cid:18)i , and the Jordan curve Γi =i to x, such that ζi connects x] forms the frontier of a region U i including p2, but not containing the point w 1. The construction (cid:18)i and arcs ζi , ηi , with the properties established above, for ◦i−1 for all i ≥ 1. We claim that y j /∈ U i−1, for all j < i − 1. To see this, note first that, by construction, By definition, yi ∈ U(cid:18)(cid:18)the sequence of points xj lies (non-strictly) below 0, y∩ α0 lying nearest to v 7: hence η(cid:18)(cid:18)(cid:18)i−1. Also by definition, yi−1, which in turn lies strictly below xyj(cid:18)cannot intersect α0[x⊆ ucannot intersect any of ζi , α3, α4 or α1 either, by (43)–(45). That is, η(cid:18)j does not intersect Γi−1, and joins w 1 /∈ U i−1 to y j . It follows that y j /∈ U i−1, as claimed.Consider the infinite sequence of points y1, y2, . . . in u0, and the infinite sequence of closed sets U 0, U 1, . . ., with respec-◦(cid:18)(cid:18)(cid:18)i, v 7]α3α4α1[v 4, xtive boundaries Γ0, Γ1, . . .. Since Γi = ζiα0[x1 , it does not intersect i(cid:18)2, . . . on the central arc α0 creeps steadily upwards: hence, y(cid:18)i−1, v 7]. On the other hand, η(cid:18)j is that point of η(cid:18)(cid:18)∈ α1, xi(cid:18)(cid:18)(cid:18)i , yi , x(cid:18)(cid:18)1, y1, x(cid:18)[v 1, xi(cid:18)(cid:18)i , y◦ ∪ r] ⊆ t∪ p∪ p∪ p∪ r∪ r∪ r◦4◦0◦3◦4◦7◦3◦◦jji74R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–75Table 1Summary of the obtained separation and complexity results.RC+(R)NP[Theorem 22]R(cid:14)=[Theorem 15]RCP+(R)NP[Theorem 20]Language◦RCC8cRCC8cRCC8R2(cid:14)=RCP+(R2)RC+(R3)RCP+(R3)R3RC+(R2)NP-hard [Lemma 23]NLogSpace [Theorem 12][Theorem 16]NP [Theorem 25]NP [Theorem 27]u0, by (41) and (45)–(47). Further, we have established that, for 1 ≤ j < i, y j ∈ U j−1 \ U i−1 and y j ∈ u0. Thus, yi and y j(i (cid:14)= j) lie in different components of u0. Hence, u0 has infinitely many components. (cid:2)It is not known whether Sat(RCC8c◦, RC+(R2)) is decidable. Theorem 32 suggests that resolving this issue may not be completely straightforward.9. Conclusion◦In this article, we investigated the widely studied qualitative spatial representation language known as RCC8. This lan-guage allows us to write qualitative descriptions of spatial configurations in the form of networks of atomic constraints, with variables ranging over spatial regions, usually modelled as regular closed sets of some topological space. The satisfiability problem for this language is known to be largely independent of the topological space in question, and to have low com-putational complexity. Algorithms for solving this problem based on constraint satisfaction techniques have been known for some time, and their behaviour investigated in detail. Our point of departure was the observation that this formalism does not allow us to state that regions are connected (i.e. consist of a single piece), and we asked what would happen if such a facility were added. We considered two extensions of RCC8: RCC8c, in which we can state that a region is connected, and RCC8c, in which we can instead state that a region has a connected interior. And we investigated the satisfiability prob-lems for these languages over regular closed sets of low-dimensional Euclidean spaces. The work reported here is similar in spirit to Davis, Gotts and Cohn’s analogous extension of RCC8 by means of a convexity predicate [26], and partly relies on the remarkable results of Schaefer, Sedgwick and Štefankoviˇc [24,25] on the satisfiability problem for RCC8 interpreted over the collection of disc-homeomorphs in the plane.◦It is easy to see that, for both RCC8c and RCC8con n, for n ≤ 3, but is identical for all n ≥ 3. Less obviously, we showed that, in the case of RCC8cconstraints that are satisfiable over RCus to consider interpretations over the more restrictive domain of non-empty, regular closed, polyhedral sets, RCPWe found that the satisfiability problems for RCC8c (equivalently, RCC8cboth NP-complete; the satisfiability problems for RCC8c over RC+(R2) and RCPand the satisfiability problems for RCC8cover RC◦Decidability of the satisfiability problem for RCC8cover RCinterestingly different from RCC8. The obtained separation and complexity results are collected in Table 1., the satisfiability problem over the regular closed sets of Rn depends , there exist finite sets of +(R2), but only by ‘wild’ regions having no possible physical meaning. This prompted +(Rn). +(R) are distinct and ◦+(R2) and RCP+(R2) are identical and NP-complete; +(R2) are distinct, with the latter being NP-complete. are not +(R2) remains open. For n ≥ 3, RCC8c and RCC8c+(R) and RCP) over RCWe finished by answering the following question: given that a set of RCC8c- or RCC8c+(Rn) or RCP-constraints is satisfiable over +(Rn), how complex is the simplest satisfying assignment? For both languages, we exhibited a sequence of +(R2), such that the size of Φn grows polynomially in n, while the smallest configuration +(R2), the situation is +(R2), RCC8c again requires exponentially large satisfying diagrams, while RCconstraints Φn, satisfiable over RCPof polygons satisfying Φn cuts the plane into a number of pieces that grows exponentially. Over RCstill more dramatic: we showed that, over RCRCC8ccan force regions in satisfying configurations to have infinitely many components.◦◦◦◦◦References[1] A. Galton, Qualitative Spatial Change, Oxford University Press, Oxford, 2000.[2] A. Cohn, S. Hazarika, Qualitative spatial representation and reasoning: an overview, Fundam. Inform. 46 (2001) 1–29.[3] A. Cohn, J. Renz, Qualitative spatial representation and reasoning, in: F. van Harmelen, V. Lifschitz, B. Porter (Eds.), Handbook of Knowledge Represen-tation, Elsevier, 2008, pp. 551–596.[4] M. Egenhofer, R. Franzosa, Point-set topological spatial relations, Int. J. Geogr. Inf. Syst. 5 (1991) 161–174.[5] M. Egenhofer, J. Herring, Categorizing topological relationships between regions, lines and point in geographic databases, Tech. rep., Department of Surveying Engineering, University of Maine, 1991.[6] D. Randell, Z. Cui, A. Cohn, A spatial logic based on regions and connection, in: B. Nebel, C. Rich, W. Swartout (Eds.), Proc. of the 3rd International Conference on Principles of Knowledge Representation and Reasoning (KR’92), Morgan Kaufmann, 1992, pp. 165–176.[7] T. Smith, K. Park, An algebraic approach to spatial reasoning, Int. J. Geogr. Inf. Syst. 6 (1992) 177–192.[8] B. Clarke, A calculus of individuals based on ‘connection’, Notre Dame J. Form. Log. 23 (1981) 204–218.[9] B. Clarke, Individuals and points, Notre Dame J. Form. Log. 26 (1985) 61–75.[10] A. Whitehead, Process and Reality, The MacMillan Company, New York, 1929.[11] T. de Laguna, Point, line and surface as sets of solids, J. Philos. 19 (1922) 449.[12] I. Düntsch, H. Wang, S. McCloskey, Relation algebras in qualitative spatial reasoning, Fundam. Inform. 39 (1999) 229–248.[13] S. Li, M. Ying, Extensionality of the RCC8 composition table, Fundam. Inform. 55 (3–4) (2003) 363–385.R. Kontchakov et al. / Artificial Intelligence 217 (2014) 43–7575[14] S. Li, Y. Li, On the complemented disk algebra, J. Log. Algebr. Program. 66 (2006) 195–211.[15] B. Bennett, Spatial reasoning with propositional logic, in: J. Doyle, E. Sandewall, P. Torasso (Eds.), Proc. of the 4th International Conference on Principles of Knowledge Representation and Reasoning (KR’94), Morgan Kaufmann, 1994, pp. 51–62.[16] M. Grigni, D. Papadias, C. Papadimitriou, Topological inference, in: Proc. of the 14th International Joint Conference on Artificial intelligence (IJCAI’95), Morgan Kaufmann, 1995, pp. 901–906.[17] B. Nebel, Computational properties of qualitative spatial reasoning: first results, in: I. Wachsmuth, C.-R. Rollinger, W. Brauer (Eds.), Proc. of the 19th Annual German Conference on Artificial Intelligence (KI-95), in: Lecture Notes in Computer Science, vol. 981, Springer, 1995, pp. 233–244.[18] B. Bennett, Determining consistency of topological relations, Constraints 3 (1997) 1–13.[19] J. Renz, Maximal tractable fragments of the region connection calculus: a complete analysis, in: T. Dean (Ed.), Proc. of the 16th International Joint Conference on Artificial Intelligence (IJCAI’99), Morgan Kaufmann, 1999, pp. 448–454.[20] J. Renz, A canonical model of the region connection calculus, in: A. Cohn, L. Schubert, S. Shapiro (Eds.), Proc. of the 6th International Conference on Principles of Knowledge Representation and Reasoning (KR’98), Morgan Kaufmann, 1998, pp. 330–341.[21] A. Griffiths, Computational properties of spatial logics in the real plane, Ph.D. thesis, School of Computer Science, University of Manchester, 2008.[22] J. Renz, B. Nebel, On the complexity of qualitative spatial reasoning, Artif. Intell. 108 (1999) 69–123.[23] M. Westphal, S. Wölfl, Qualitative CSP, finite CSP, and SAT: comparing methods for qualitative constraint-based reasoning, in: C. Boutilier (Ed.), Proc. of the 21st International Joint Conference on Artificial Intelligence (IJCAI-09), AAAI Publications, 2009, pp. 628–633.[24] M. Schaefer, E. Sedgwick, D. Štefankoviˇc, Recognizing string graphs in NP, J. Comput. Syst. Sci. 67 (2) (2003) 365–380.[25] M. Schaefer, D. Štefankoviˇc, Decidability of string graphs, J. Comput. Syst. Sci. 68 (2) (2004) 319–334.[26] E. Davis, N. Gotts, A. Cohn, Constraint networks of topological relations and convexity, Constraints 4 (3) (1999) 241–280.[27] S. Koppelberg, Handbook of Boolean Algebras, vol. 1, North-Holland, 1989.[28] M. Newman, Elements of the Topology of Plane Sets of Points, Cambridge University Press, Cambridge, 1964.[29] J. Bochnak, M. Coste, M.-F. Roy, Real Algebraic Geometry, Ergebnisse der Mathematik und ihrer Grenzgebiete, vol. 36, Springer, 1998.[30] R. Diestel, Graph Theory, Graduate Texts in Mathematics, vol. 173, Springer Verlag, New York, 1991.[31] J. Kratochvíl, J. Matoušek, String graphs requiring exponential representations, J. Comb. Theory, Ser. B 53 (1991) 1–4.[32] W. Schnyder, Embedding planar graphs on the grid, in: D.S. Johnson (Ed.), Proc. of the 1st Annual ACM–SIAM Symposium on Discrete Algorithms (SODA’90), SIAM, 1990, pp. 138–148.[33] J. Kratochvíl, String graphs. II. Recognizing string graphs is NP-hard, J. Comb. Theory, Ser. B 52 (1991) 67–78.[34] E. Börger, E. Grädel, Y. Gurevich, The Classical Decision Problem, Perspectives in Mathematical Logic, Springer, 1997.[35] M. Bodirsky, S. Wölfl, RCC8 is polynomial on networks of bounded treewidth, in: T. Walsh (Ed.), Proc. of the 22nd International Joint Conference on Artificial Intelligence (IJCAI 2011), IJCAI/AAAI, 2011, pp. 756–761.[36] R. Kontchakov, I. Pratt-Hartmann, M. Zakharyaschev, Interpreting topological logics over Euclidean spaces, in: F. Lin, U. Sattler, M. Truszczynski (Eds.), Proc. of the 12th International Conference on Principles of Knowledge Representation and Reasoning (KR 2010), AAAI Press, 2010, pp. 534–544.[37] A. Krokhin, P. Jeavons, P. Jonsson, Reasoning about temporal relations: the tractable subalgebras of Allen’s interval algebra, J. ACM 50 (5) (2003) 591–640.[38] M. Vilain, H. Kautz, Constraint propagation algorithms for temporal reasoning, in: T. Kehler (Ed.), Proc. of the 5th National Conference on Artificial Intelligence (AAAI’86), Morgan Kaufmann, 1986, pp. 377–382.