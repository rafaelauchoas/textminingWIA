Artificial Intelligence 174 (2010) 749–766Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintDesigning competitions between teams of individuals ✩Pingzhong Tang a,∗, Yoav Shoham b,c, Fangzhen Lin aa Department of Computer Science, Hong Kong University of Science and Technology, Clear Water Bay, Hong Kongb Computer Science Department, Stanford University, CA 94305, United Statesc Microsoft Israel R&D Center, Herzliya, Israela r t i c l ei n f oa b s t r a c tArticle history:Received 15 June 2009Received in revised form 26 April 2010Accepted 26 April 2010Available online 29 April 2010Keywords:Team competitionMechanism designTruthfulnessMoral hazardDominant strategy implementation1. IntroductionWe consider a setting with two teams, each with a number of players. There is an orderingof all players that determines outcome of matches between any two players from theopposing teams. Neither the teams nor the competition designer know this ordering, buteach team knows the derived ordering of strengths among its own players. Each teamannounces an ordering of its players, and the competition designer schedules matchesaccording to the announced orderings. This setting in general allows for two types ofmanipulations by a team: Misreporting the strength ordering (lack of truthfulness), anddeliberately losing a match (moral hazard). We prove necessary and sufficient conditionsfor a set of competition rules to have the properties that truthful reporting are dominantstrategies and maximum effort in matches are Nash equilibrium strategies, and certainfairness conditions are met. Extensions of the original setting are discussed.© 2010 Elsevier B.V. All rights reserved.Once upon a time in ancient China, the emperor Qi threw down the gauntlet to his minister Tian for a horse race.The rule was that each of them would announce a ranking of his three horses and each time the two horses with thesame rankings would race. As the story goes, Tian learnt that his best horse was not as good as the emperor’s bestbut better than his second best one, and his second best one was not as good as the emperor’s second best but betterthan the emperor’s worst one. Knowing that the emperor would be confident enough to announce the true ordering,the clever minister put forward his worst horse first and his best horse second followed by his second best. As a result,while Tian’s worst horse lost badly to the emperor’s best horse in the first match, he won the second and third matchesnevertheless by taking the advantage of mismatches. Tian explained afterwards his strategy to the emperor and itspotential application in military matters and as a result, he was promoted to be the general in chief.Similar examples abound.1 A somewhat more recent example is the international team competition of table tennis. Theschedule is a modification of the horse racing one by adding two matches between the first player and the second playerfrom each team. Smart coaches can also benefit from strategically reporting the orderings. We will return to these exampleslater after we formally define the problem, which is henceforth called team competition problem.Competition among teams, each consisting of several players, presents at least two types of challenge. The first regardsthe desirable outcomes. Typically, the basic information is the relative strength of pairs of players, one from each team.✩An earlier version entitled “Team Competition” appeared in Proceedings of AAMAS’09.* Corresponding author.E-mail addresses: kenshin@cse.ust.hk (P. Tang), shoham@stanford.edu (Y. Shoham), flin@cse.ust.hk (F. Lin).1 For a related example in game theory, the Colonel Blotto game, cf. Section 7.0004-3702/$ – see front matter © 2010 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2010.04.025750P. Tang et al. / Artificial Intelligence 174 (2010) 749–766But how does this information get aggregated to decide the relative merit of the two teams? For example, should a teamwith one strong player and the rest very weak players beat a team consisting entirely of mediocre players? This amounts todefining the appropriate social-choice functions in this domain. One contribution of this paper is to establish criteria for suchfunctions; specifically, we adapted the notions of player anonymity, team anonymity, monotonicity, and Pareto efficiency tothis setting.The second challenge is that relative strengths among players are typically not common knowledge. Each team hasprivate information about its players, and the only objective way of getting this information is to play a match and observethe outcome. Playing all pairwise matches is usually not feasible, and so typically a competition among teams proceedsas follows: The teams announce a ranking of their players, and the organizer schedules individual matches based on theserankings according to a formula announced in advance. The matches then take place, and each match adds a certain scoreto the team of the winner. The team with the highest aggregate score wins the competition. But this opens the door to twoways in which teams can manipulate the outcome: It can misreport the true ordering of their players, and it can throw amatch (that is, deliberately lose). This is the problem of implementing the social-choice function, or of mechanism design(see [10,14] for introductions).Another contribution of this paper is the identification of necessary and sufficient conditions for implementing in dom-inant strategies social choice functions which satisfy the specified axioms. That is, identifying conditions under which it isbest for a given team to truthfully reveal the ordering among its players – no matter what the other team does, as wellas the conditions under which it is best for a given team to play its best in each match – knowing the other team alsoplays its best. These results are extended to a more general setting where the outcome of a match between two players isprobabilistic – decided according to a winning probability matrix [6].The remainder of the paper is organized as follows: We next formulate the team competition problem as a mechanismdesign problem, identify the basic forms of mechanisms and state the desirable properties in this domain. In Sections 4and 5, we characterize the conditions under which the mechanisms satisfy these properties. We then generalize our resultsin two directions in Section 6 and discuss related work in Section 7. Finally in Section 8, we briefly discuss future researchtopics related to team competition.2. Basic modelsWe now give the mathematic models for analyzing team competition.2.1. Team competition environmentsTeam competition environment is the setting where the designer operates.Definition 2.1. A team competition environment C is a tuple ( A, B, Θ, O , R), where• A = {a1, . . . , an} is the set of players of team A.• B = {b1, . . . , bn} is the set of players of team B.• Θ is the set of possible states, where:– Each state θ ∈ Θ uniquely defines a linear order >θ on A ∪ B. If a >θ b, then a beats b in state θ .– We denote by θ A and θB the orderings on A and B that are derived from θ respectively. θ A and θB can be seen asthe private information of A and B. We denote by Θ A and ΘB the sets of all possible θ A and θB .• O = {(s A, sB ) | s A, sB ∈ R} is the set of outcomes of the competition. s A and sB are the scores for teams A and B,respectively.• R is a preference relation over O .We consider R to be the one that team A weakly prefers (s A, sB ) to (s(cid:5)A, s(cid:5)B ) iffs A (cid:2) s(cid:5)Aand sB (cid:3) s(cid:5)B ,and team A strictly prefers (s A, sB ) to (s(cid:2)s A > s(cid:5)A and sB (cid:3) s(cid:5)B(cid:3)(cid:2)ors A (cid:2) s(cid:5)B ) iff(cid:5)A, s(cid:5)A and sB < s(cid:3).(cid:5)BTeam B has the opposite preference. We note that when s A > sis not defined.2(cid:5)A and sB > s(cid:5)B , the preference between (s A, sB ) and (s(cid:5)A, s(cid:5)B )An easy way to complete the preference defined above is to restrict a mechanism on certain set of outcomes satisfying,for each state θ , s A + sB = c, for some constant c. Such a mechanism is called a constant-sum mechanism.2 We will get back to another type of preference where each team is not so sensitive about scores but only cares about winning or losing. In this case,2 : 3 is as desirable as 3 : 4.P. Tang et al. / Artificial Intelligence 174 (2010) 749–7667512.2. StrategiesTypically, each team communicates with a mechanism by sending it a message. In team competition context, such amessage is confined to the form of an ordering of players of that team. A strategy of each team then specifies how tochoose among its orderings of players, given its true ordering of strengths.Definition 2.2. S A : Θ A → L A , is the set of A’s pure strategies that map A’s private information to a linear order on A,where L A is the set of all linear orders on A. Similarly for S B .When there is no restriction on Θ , both Θ A and L A denote the set of all permutations on A. We use different notationshere to clarify that Θ A is the set of private information (types) based on which A chooses an ordering in L A to report.Similarly, we can define the set of A’s mixed strategies to be σ A : Θ A → Ω(L A), where Ω(L A) is the set of probabilitydistributions over L A . We assume both teams are risk neural. As a result, when they play a mixed strategy, the outcome isequivalent to the expected score profile.2.3. Generalized round-robin mechanismsDefinition 2.3. Given a team competition environment and a message profile (L A, L B ) reported by A and B, a generalizedround-robin mechanism specifies an outcome via a matrix C , where:• Each entry ci, j in C denotes the score assigned to the match between ai and b j , where ai is the i-th player of L A andb j the j-th player of L B .• The winner of the match gets ci, j and the loser gets 0.• The total score that team A can get in state θ is s A =• Such a pair (s A, sB ) creates an outcome in O .(cid:4)(ai >θ b j )∈ A×B ci, j . Similar for sB .In comparison with standard mechanism definition [11, Chapter 10], the matrix C plays the role of an outcome function:for each state, the matrix maps the reports from A and B to an outcome (s A, sB ) ∈ O . Note that s A + sB = c, where(cid:4)c =1(cid:2)i, j(cid:2)n ci, j , which implies that every generalized round-robin mechanism is constant-sum and the preference relationP over O is complete.Note that there are potentially n2 matches since there are n2 entries in the matrix. However, if ci, j = 0, then a matchbetween ai and b j is not necessary. Note also that, if ci, j (cid:7)= 0, it does not necessarily mean that there is only one matchbetween ai and b j . It means that the sum of scores of the matches between ai and b j is ci, j .Both examples mentioned at the beginning of the paper can be categorized as generalized round-robin mechanisms,with the following score matrices:Example 2.1 (Horse race).(cid:5)(cid:6).1 0 00 1 00 0 1Example 2.2 (Table tennis).(cid:5)(cid:6).1 1 01 1 00 0 12.4. Sequential mechanismsConsider a generalized round-robin mechanism where there are 4 matches: (a1 vs b1), (b1 vs a2), (a2 vs b2) and(a1 vs b2). Suppose these matches take place sequentially and the first player always beats the second. We can predictafter the first three matches that a1 >θ b2, without observing the outcome of the fourth one.The above intuition can be realized in designing more compact mechanisms called sequential mechanisms, where matchestake place sequentially and the current match is jointly scheduled by the reported orderings as well as the results ofprevious matches.Definition 2.4. Given a team competition environment and a message profile (L A, L B ) reported by A and B, a sequentialmechanism is a tuple (H, fn, R s) where752P. Tang et al. / Artificial Intelligence 174 (2010) 749–766• H = H T ∪ H N is a set of histories, where H T denotes the set of terminal histories and H N the set of nonterminal ones.They are defined inductively as follows:– ∅ ∈ H N .– If h ∈ H N , then h :: (ai > b j) ∈ H and h :: (b j > ai) ∈ H . It says if h is a nonterminal history, by concatenating it withthe match where ai beats b j or b j beats ai , a new history is generated. The new history can be either terminal ornonterminal.• fn : H N × L A × L B → A × B, is a next function that maps each nonterminal history as well as the reported messages toa pair of players to compete in the next match.• R s : H T → O , is a scoring rule that maps each terminal history to an outcome, that is, a score profile.Sequential mechanism generalizes round-robin mechanism in a trivial sense that every round-robin mechanism can berepresented by a sequential one: the one that schedules a list of independent matches sequentially. Quite often, it is moreinteresting to focus on certain specific classes of sequential mechanisms. For instance, the following “knock-out” competitionis popular in the Go community.Example 2.3 (Knock-out competition). Upon receiving the reported lists {a1, . . . , an} and {b1, . . . , bn},• a1 vs b1 will be initiated as the first match.• In the following rounds, if the current match is ai vs b j , then the next function assigns ai+1 vs b j if b j beats ai andai vs b j+1 otherwise.• The set of terminal histories are those with every player in one team has lost. The scoring rule assign the winning teamn points and the losing team the number of matches that it wins.There are at most 2n − 1 matches in a knock-out competition because each match eliminates one player. This propertyperfectly fits into the context of Go competitions, where a match normally takes hours.3. Desirable propertiesThere are several desirable properties a designer wishes to implement. In the horse race story, one might hope fora mechanism that forces both teams to report the truth. Assuming the truth, one might hope that the outcome of thematch should fairly reflect the true strengths: it seems fair to anticipate the emperor to win. One might also hope the totalnumber of matches to be as small as possible. We present some of the standards using social-choice function and ask whatmechanisms truthfully implement the social choice function.3.1. Social-choice functionsAs already mentioned, a social-choice function describes which outcome should occur for a given state.Definition 3.1. A social choice function f : Θ → O maps a state to an outcome.3.1.1. AxiomsThe first axiom on a choice function fis the so-called player anonymity, which says players are indistinguishable insidea team.Definition 3.2 (Player anonymity). If p : A → A is a permutation function and f (θ) = o, then f (θ (cid:5)) = o where θ (cid:5)from θ by replacing each a ∈ A by p(a). Similar for team B.is obtainedFor example, statea >θ1 b >θ1 > b(cid:5)>θ1 a(cid:5),should lead to the same outcome as state(cid:5)a>θ2 b >θ2 > b(cid:5)>θ2 a,as well as state(cid:5)a >θ3 b>θ3 > b >θ3 a(cid:5).The second axiom, team anonymity, says that a choice function f does not discriminate for or against one particularteam.P. Tang et al. / Artificial Intelligence 174 (2010) 749–766753Definition 3.3 (Team anonymity). If p : A → B is a bijection between A and B and f (θ) = (s A, sB ), then f (θ (cid:5)) = (sB , s A)where θ (cid:5)is obtained from θ by swapping each a ∈ A and p(a) ∈ B.For example, again if f (θ1) = (s A, sB ) and θ1 is as follows:a >θ1 b >θ1 > b(cid:5)>θ1 a(cid:5),then f (θ4) = (sB , s A), where θ4 is as follows:b >θ4 a >θ4 > a(cid:5)>θ4 b(cid:5).The third axiom is the so-called monotonicity, which says no worse outcome is brought about for a team if none of itsplayers falls in the overall ranking.Definition 3.4 (Monotonicity). For any two states θ and θ (cid:5)is at least as good as o to A. A state θ (cid:5)then oin state θ (cid:5)(cid:5)is improved or stays the same as in state θ . Similar for team B.and θ (cid:5)is an improvement to θ for team A,is an improvement to another state θ for team A, if ∀a ∈ A, the ranking of a, if f (θ) = o, f (θ (cid:5)) = o(cid:5)Finally, the last axiom, called Pareto efficiency, says that if one team has the better i-th best player for all i, then itshould get a no lower score in the final outcome.Definition 3.5 (Pareto efficiency). If in any state θ satisfying ∀0 (cid:3) i (cid:3) n, the i-th ranked player of team A is better rankedthan team B, then f (θ) = (s A, sB ) satisfies s A (cid:2) sB .For example, ifa >θ5 b >θ5 > a(cid:5)>θ5 b(cid:5),then s A (cid:2) sB . Pareto efficiency is not independent of team anonymity and monotonicity since we can prove the latter twoproperties imply Pareto efficiency.Proposition 3.1. A social choice function f satisfies Pareto efficiency if it is both anonymous and monotonic.Proof. Suppose otherwise, then there exists a state θ such that ∀0 (cid:3) i (cid:3) n, the i-th ranked player ai of team A is betterranked than that bi of team B and s A < sB . Now we swap the role of ai and bi for all i in θ and we call the new state θ (cid:5). Byteam anonymity, we have f (θ (cid:5)) = f (sB , s A), which is a worse outcome than f (θ) for B. However, since θ (cid:5)is an improvementto θ for team B, the new outcome should be no worse for team B by monotonicity. This leads to a contradiction. (cid:2)3.1.2. Examples of social-choice functionsIt is not difficult to see that the following four social-choice functions satisfy all the axioms mentioned above.• Borda Count: Suppose >θ on A ∪ B with | A ∪ B| = 2n, we assign the top-ranked player 2n − 1 points, the second-ranked2n − 2 points, . . . , and the last-ranked 0 point. Let s A be the sum of points of all the players in A. sB can be definedsymmetrically. f BC(θ) = (s A, sB ).(cid:5)1 > a• Horse Race: Suppose in θ , (a(cid:5)n). Define s A = |{(a}| and sB = n − s A .(cid:5)2 > · · · > b(cid:5)2 > · · · > a(cid:5)n) and (b(cid:5)1 > b(cid:5)i >θ b(cid:5)i) | a(cid:5)i, b(cid:5)if HR(θ) = (s A, sB ).• Max: Suppose the best players of A and B by θ are a and b respectively, then f Max(θ) = (1, 0) if a >θ b and f Max(θ) =(0, 1) otherwise.• Min: Suppose the worst players of A and B by θ are a and b respectively, then f Min(θ) = (1, 0) if a >θ b, f Min(θ) = (0, 1)otherwise.In other words,f BC sums up the rankings of all players in each team and f HR the winnings of pairwise comparisonsf BC is abetween players of the same rank. In addition,natural extension of the seminal rank-order (aka Borda count) voting rule to the context where voters’ objectives are toselect a cabinet of n candidates. f HR captures a class of barter auctions where each bidder places n non-monetary, indivisiblebids to compete for n equally valuable objects. One fair allocation for such an auction is that of f HR. f Max is widely employedin Olympic competitions such as the Long Jump, when each athlete is thought of as a team, each jump attempt is thoughtof as an individual player and the gold medal is for the athlete with the longest jump attempt, that is, the choice of f Max.f Min, on the other hand, embodies the preservative attitude of maxmin, according to which a set of players are evaluated attheir worst player.f Max and f Min compare the best and worst players respectively.754P. Tang et al. / Artificial Intelligence 174 (2010) 749–7663.2. Truthfulness and truthful implementationDefinition 3.6. A mechanism is dominant-strategy truthful if for every state and each team, reporting truthful order yieldsa no worse outcome than any other order, no matter what the other team does.An outcome o1 is worse than o2 to team A if A strictly prefers o2 to o1. Aware of its private information, each team insuch a mechanism would choose to report its truthful ordering because it is in its best interest to do so.Definition 3.7. A mechanism M truthfully implements a social-choice function fstrategy truthful and if both teams report truthfully, the resulting outcome coincides with the one prescribed by f .in dominant strategies, if M is dominantIf a mechanism truthfully implements a choice function in dominant strategies, both teams prefer to report truthfully.f HR and f Min, when thought of asMoreover, truthful reports lead to the desirable outcome prescribed by f . For example,mechanisms, are not truthful while f Max is truthful as a mechanism.3.3. FrugalityAs we shall show, the canonical generalized round-robin mechanism whose score matrix consisted of all 1’s, is alwaystruthful but wasteful in terms of number of matches. It is thus reasonable to pursue frugality, that is, when implementinga social choice function, select a mechanism with the smallest number of matches.4. The resultsThis section presents answer to the question asked earlier: what mechanisms are truthful and implement the desirablesocial choice functions.4.1. Implementation by generalized round-robin mechanismsWe say that a matrix Cn×n is double-decreasing if ci1, j1(cid:2) ci2, j2 whenever i1 (cid:3) i2 and j1 (cid:3) j2 hold simultaneously.Theorem 1.1. A generalized round-robin mechanism M is dominant strategy truthful iff its score matrix Cn×n is double-decreasing.2. If a generalized round-robin mechanism M truthfully implements a social choice function f in dominant strategies, then• f is player anonymous;• f is team anonymous iff the score matrix satisfies C = C T , where C T is the transposition of C ;• f is monotonic iff the score matrix of M has no negative entry.Proof.1. ⇒: If M is dominant strategy truthful, without loss of generality, suppose there exist i, j such that ci, j < ci+1, j . Nowconsider such a state θ : b1 > b2 > · · · > bn−1 > a1 > · · · > ai, bn, . . . , an. In other words, θ is a state where team A canwin only i matches against the worst player bn of B. Now if B reports bn as its j-th player, then if A reports honestly,he will get c1, j + · · · + ci, j while if A swaps ai and ai+1, A will get a better score a1, j + · · · + ci−1, j + ci+1, j , whichcontradicts the dominant strategy truthfulness of M.⇐: If Cn×n is double-decreasing, for any state θ and any b ∈ B reported as j-th player, suppose according to θ , wehave a1 > · · · > ai > b > ai+1 > · · · > an. If A reports honestly, it will get c1, j + · · · + ci, j from b, otherwise, it will getcm1, j + · · · + cmi , j . Since C is double-decreasing, we have c1, j, . . . , ci, j are the greatest i entries in column j of C , soc1, j + · · · + ci, j (cid:2) cm1, j + · · · + cmi , j . Since j and θ are arbitrarily chosen, we have that A is dominant strategy truthful.2. This part follows from definitions. (cid:2)Note that, the score matrix in neither the horse racing example nor the table tennis example is double-decreasing.According to Theorem 1, they are not dominant strategy truthful. In the table tennis example, if the state is as follows:a1 > b1 > b2 > a2 > b3 > a3. Note that if both A and B report truthfully, B would lose the competition with 3 : 2. However,if B misreport his order as b1 >(cid:5)b2 and A still reports truthfully, B would win the competition with 2 : 3.b3 >(cid:5)We also remark that Theorem 1 still holds if we change the solution concept to ex post equilibrium.3 For the proof, weonly need to adjust the state θ in the proof of Theorem 1 to state θ (cid:5)asb1 > b2 > · · · > b j−1 > a1 > · · · > ai, b j, . . . , an, b j+1, . . . , bn.3 Ex post truthfulness says that, regardless of the state, it is in each team’s best interest to report truthfully, as long as the other team also reportstruthfully.Theorem 2.P. Tang et al. / Artificial Intelligence 174 (2010) 749–7667551. The generalized round-robin mechanism truthfully implements f BC in dominant strategies if its score matrix Cn×n = 1n×n, where2. The generalized round-robin mechanism truthfully implements f Max in dominant strategies if its score matrix satisfies c1,1 = 11n×n is the matrix with every entry being 14;and ci, j = 0 otherwise;3. There is no generalized round-robin mechanism truthfully implements either f HR or f Min in dominant strategies.Proof.1. It is not hard to see that for 1n×n, the mechanism simply counts the sum of the number of opponents that are weakerfor each player. Moreover, it is non-decreasing. So it truthfully implements f BC minus a constant n(n−1)in dominantstrategies. The constant stands for the sum of additional scores if they are allowed to play with their own team mates.22. This part follows directly from definition.3. • Suppose M with score matrix C truthfully implements f HR. Now consider θ : a1 > b1 > · · · where f HR(θ) = (s A, sB ),then by only swapping a1 and b1 in θ , we obtain θ (cid:5): b1 > a1 > · · · , where f HR(θ (cid:5)) = (s A − 1, sB + 1). This is possible(cid:5)only if c1,1 = 1. Similarly, consider θ (cid:5)(cid:5)B ). Again, by swapping an and bn,we obtain θ (cid:5)(cid:5)(cid:5)+ 1). This is possible only of cn,n = 1. Since M is dominanttruthful, we have C is non-increasing, which further implies C = 1n×n. However, 1n×n obviously does not implementf HR. A contradiction.: · · · > an > bn where we have f PC(θ (cid:5)(cid:5)) = (s: · · · > bn > an where f PC(θ (cid:5)(cid:5)(cid:5)) = (s− 1, s(cid:5)A, s(cid:5)A(cid:5)B• Suppose M with score matrix C truthfully implements f Min. Now consider θ : a1 > b1 > · · · where f HR(θ) = (s A, sB ),: b1 > a1 > · · · , where f HR(θ (cid:5)) = (s A, sB ), as long as n (cid:2) 2. This is(cid:5)(cid:5)B ). Again, by swappingA, s+ 1). This is possible only of cn,n = 1. We nowthen by swapping a1 and b1 in θ , we obtain θ (cid:5)possible only if c1,1 = 0. Similarly, consider θ (cid:5)(cid:5)an and bn, we obtain θ (cid:5)(cid:5)(cid:5)− 1, shave cn,n = 1 > c1,1, contradicting to the truthfulness condition. (cid:2): · · · > an > bn where we have f PC(θ (cid:5)(cid:5)) = (s(cid:5)B: · · · > bn > an where f PC(θ (cid:5)(cid:5)(cid:5)) = (s(cid:5)AWe remark that the current international team competition for tennis (aka Davis Cup) uses a generalized round-robinmechanism whose score matrix is 12×2, thus it implements Borda Count.4.2. Implementation by sequential mechanismsUnlike a generalized round-robin mechanism, the preference P of which is a total order relation on a constant-sumset of outcomes, there are cases where P is not complete for non-constant-sum sequential mechanisms. Thus, it makessense to focus on certain specific mechanisms. We now introduce a particular class of sequential mechanisms called “knock-in” competition in contrast to the “knock-out” one mentioned in Example 2.3. In a knock-in competition, the loser of theprevious match stays to compete with the winner’s successive team mate.Definition 4.1 (Knock-in competition). Upon receiving the reported lists of players {a1, . . . , an} and {b1, . . . , bn},• a1 vs b1 is initiated as the first match.• In the following rounds, let the current match be ai vs b j , the next function assigns ai+1 vs b jif ai beats b j andai vs b j+1 otherwise.• The set of terminal histories are those where every player has won in one team, which we call the winning team. Theother team is called the losing team.Note that the losing team does not necessarily lose the competition in terms of score. The observation below followsimmediately from definition.Observation.1. Every knock-in competition has a number of at most 2n − 1 matches.2. By assigning 1 to the winning team and 0 to the losing team in each terminal history, the knock-in mechanism alwaysyields an outcome that coincides with the one prescribed by f Min, and therefore truthfully implements f Min in dominantstrategies.We remark similarly that a knock-out competition truthfully implements f Max, by assigning 1 to the winning team.f Max is essentiallyHowever, unlike knock-in competition which can implement many other social-choice functions as well,4 In fact, it implements Borda Count minus a constant n(n−1)2.756P. Tang et al. / Artificial Intelligence 174 (2010) 749–766the only desirable choice function that knock-out can truthfully implement, since the team with the best player will alwaysput this player on top and he will beat the whole other team in turn.The flexibility of designing a knock-in competition lies in the choice of scoring rules. The scoring rule should be designedin a way such that, on the one hand, the preference for the set of terminal histories is well defined and, on the other hand,the scores align with the incentives of truth reporting. There are at least two possible classes of scoring rules.4.2.1. Score by play orderWith this type of scoring rule, we assign a constant score c1 to the winner of the first match, c2 the second match, andso on. Score and outcome are defined as usual. Note that the number of matches in such a knock-in competition rangesfrom n to 2n − 1. In order to preserve the constant-sum property, we assign 2n constants as follows:Definition 4.2. In a score-by-play-order rule, we have a list of 2n constants {c1, c2, . . . , c2n}, we assign c1 to the winnerof the first match, c2 the winner of the second match and so on. When reaching a terminal history after n0 matches,n (cid:3) n0 (cid:3) 2n − 1, we assign the remaining constants cn0+1, . . . , c2n to the remaining players (the order does not matter). Inthe end, each player receives a score.In this way, we have s A + sB =(cid:4)1(cid:2)i(cid:2)2n ci , a constant. The following theorem characterizes the dominant strategytruthfulness of knock-in competitions with this type of scoring rules.Theorem 3. For a knock-in competition M with a score-by-play-order rule,1. M is dominant strategy truthful iff {c1, c2, . . . , c2n} is non-increasing.2. If M truthfully implements a social choice function fin dominant strategies, then fis player anonymous, team anonymous,monotonic.3. M truthfully implements:• f BC with {2n − 1, 2n − 2, . . . , 1, 0};• f Max with {1, 0, . . . , 0};in dominant strategies.Proof.1. ⇒: If M is dominant strategy truthful and suppose {c1, c2, . . . , c2n} is not non-increasing. Without loss of generality, letcm < cm+1. Suppose the m-th match is between ai and b j . Now consider a stateθ : ai > b j > ai+1 > b j+1.If A reports truthfully, the competition goes as follows:(a) ai beats b j , team A gets cm;(b) ai+1 loses to b j , team B gets cm+1;(c) ai+1 beats b j+1, team A gets cm+2.If A swaps ai and ai+1, the competitions goes as follows:(a) ai+1 loses to b j , team B gets cm;(b) ai+1 beats b j+1, team A gets cm+1;(c) ai beats b j+1, team A gets cm+2.Thus by lying, team A gets a better outcome. A contradiction.⇐: We first introduce the notations for this part. Note that given a non-increasing score sequence, a knock-in mech-anism can be fully characterized at any stage by a tuple ( Aare the current lists of playersthat stay in the competition and c is the current winning score. We denote U A( A, B, c) as the remaining score thatteam A will get afterwards. Similar for team B. To show the dominant strategy truthfulness, it suffices to show thatU A( A T , B, c1) (cid:2) U A( AU , B, c1) for any AU , where A T and AU are the truthful and untruthful lists of team A, respec-tively. We now prove it by induction on the size of A and B.• Base case: It is trivial that we have U A( A T , B, c1) (cid:2) U A( AU , B, c1) when | A| = 1 and |B| = 1.• Inductive case: Assume that the claim holds when | A| + |B| < k. Now consider the case that | A| + |B| = k. Supposethat B reports b1, b2, . . . , bt as its play list and the truthful list for A is a1 > a2 > · · · > as. Compare the truthful anduntruthful reports of the first player by A.5 There are two cases:– Case 1. a1 < b1(cid:5), c), where Aand B(cid:5), B(cid:5)(cid:5)(a) If A reported truthfully, b1 beats a1, A would then get a score of U A( A T , {b2, . . .}, c2).5 In principle, we should also compare the case where A truthfully reports a1 as its first player but misreports some players afterwards, however, thiscase is covered in the inductive assumption.P. Tang et al. / Artificial Intelligence 174 (2010) 749–766757(b) If A misreported some other player ai , b1 beats ai again, A would then get a score of U A( AU , {b2, . . .}, c2),denotes the misreported list. We know that U A( AU , {b2, . . .}, c2) (cid:3) U A( A T , {b2, . . .}, c2) by inductive(cid:5)where Aassumption.We conclude that in Case 1, truthful reporting is no worse than misreporting.– Case 2. a1 > b1(a) If A reported truthfully, a1 beats b1, A would then get a total score of c1 + U A({a2, . . .}, {b1, b2, . . .}, c2).(b) If A misreported some other player ai , there are two subcases:∗ Subcase 1. ai > b1. ai beats b1, A would then get a total score of c1 + U A( AU \ {ai}, {b1, b2, . . .}, c2). Byinductive assumption, this score is no more than c1 + U A( A T \ {ai}, {b1, b2, . . .}, c2). In the meanwhile, byknowing ai > b1, we know that a j > b1 for all j < i. Thus, c1 + U A( A T \ {ai}, {b1, b2, . . .}, c2) = c1 + · · · + ci +U A({ai+1, . . .}, {b1, b2, . . .}, ci+1). This is the exact score when A reported truthfully since it would win thefirst i matches in a row.∗ Subcase 2. ai < b1. b1 beats ai , A would then get a score of U A( AU , {b2, . . .}, c2), which is no more thanU A( A, {b2, . . .}, c2) by inductive assumption. We will show in a later section that U A( A, {b2, . . .}, c2) (cid:3) c1 +U ({a2, . . .}, {b1, b2, . . .}, c2), which is the definition of moral hazard freeness.We conclude in Case 2 that truthful reporting is also no worse than misreporting.2. • Suppose that M truthfully implements a social choice function fis not player anony-f yieldsmous, which means there exists one state where by swapping two players’ rankings of the same team,a different outcome for the new state. However, as we can see, this is impossible since the flows of the knock-incompetition are exactly the same for both states.in dominant strategies and f• Similarly for team anonymous.• Now consider monotonicity, suppose that M truthfully implements a social choice function fin dominant strategiesand fis not monotonic, which means when one player improves his overall ranking while the others remain thesame, f yields a worse outcome for that team. This amounts to saying that by giving up certain games and pretendingto be a weaker player, one can lead to a better outcome for his team. This contradicts to the fact that M is moralhazard free, which will be proved later.3. This part follows from the conclusion of part 1 as well as the definitions of f BC and f Max.This completes our inductive proof. (cid:2)For example, to truthfully implement f BC , we first let a1 play against b1 with the winner getting 2n − 1 and the loserstaying to compete with the next player of the other team, and so on. Since the earlier matches have higher scores and eachplayer would get a score anyway, each team then would like to win as early as possible, so truthful reporting is no worsethan misreporting.Note also that the same result hold if we replace the solution concept by ex post equilibrium, the proof of which isidentical.4.2.2. Score by positionWith this type of scoring rule, we assign a score to each match similarly to what we did in the generalized round-robinmechanism, except that each match is asymmetric: the score that ai gets from winning ai vs b j may not be the same as b jgets from winning the same match. This asymmetry undermines the constant-sum property of the mechanism, however, aswe will show, it enables a knock-in competition to truthfully implement f HR. Further, to maintain the team anonymity, werequire that the score that ai gets from beating b j be the same as the score bi gets from beating a j . Therefore, only onescore matrix is needed to fully specify a scoring rule.Definition 4.3. In a score-by-position rule with a score matrix Cn×n, for any match ai vs b j , ai gets ci, j if he wins and b jgets c j,i otherwise.As we mentioned, in general this type of mechanism is not constant-sum thus the preference relation may not be welldefined. However, the main purpose to include it is that it can truthfully implement f PC in dominant strategies with certainrestrictions on C .Theorem 4.• A knock-in competition M with score-by-position rule is dominant strategy truthful if its score matrix satisfies ∀1 (cid:3) i, j, i + 1, j +• A knock-in competition M with score-by-position rule truthfully implements f HR in dominant strategies with ci, j = 1 if i (cid:2) j and1 (cid:3) n:1. ci, j (cid:2) ci, j+1 (cid:2) 0.2. ci, j (cid:2) ci+1, j+1 (cid:2) 0.ci, j = 0 otherwise.758Proof.P. Tang et al. / Artificial Intelligence 174 (2010) 749–766• Note that, at any stage, the competition can be completely characterized by the current lists of players ( A, B), thus theremaining score that team A can get at this point can be denoted by U A( A, B), since the score matrix Cn×n is alwaysthe same one thus can be omitted. We can see that the proof of the first claim is identical to that of Theorem 3, whenwe replace in the proof of Theorem 3 any instance of U A( A, B, ci) by U A( A, B), c1 by c1,1, . . . , and ci by ci,1. Notealso that, in competition with score by position rule, it is also necessary to consider the score U B of team B whencomparing score profiles. However, this part is symmetric to that of U A .• First, if a mechanism with the score matrix C such that ci, j = 1 if i (cid:2) j and ci, j = 0 otherwise, then it satisfies:1. ci, j (cid:2) ci, j+1 (cid:2) 0.2. ci, j (cid:2) ci+1, j+1 (cid:2) 0.Thus according to the first claim, it is dominant strategy truthful. The implementation of f HR then follows from the factthat each player can get 1 point iff it beats some higher or equally ranked player. (cid:2)In other words, to implement f HR, we assign each player 1 point if he beats some higher ranked opponent while assigneach player 0 point if he loses to or wins against some lower ranked opponent. For example, if a3 beats b2, then a3 gets 1and b2 gets 0, otherwise both a3 and b2 get 0. This indicates a higher ranked player can never score by competing with alower ranked player, but he still has to win so that his lower ranked team mates can have a chance to score.Till now, we have solved the horse racing problem introduced at the beginning of the paper.4.3. Knock-in competition minimizes the number of matchesWe know that in general a generalized round-robin mechanism schedules O (n2) matches in comparison to O (n) matchesin a knock-in competition to truthfully implement a social-choice function. A natural question is if there exists any othermechanism that can do better. We now give a negative answer by proving that knock-in competition is worst-case optimal.Definition 4.4 (Worst-case optimal). A mechanism M is worst-case optimal with respect to a social-choice function ftruthfully implements f and M schedules the minimum number of matches in its worst case.if MIn other words, suppose K M is the minimal number of matches that suffices to guarantee the termination of M for anystate. M is worst-case optimal means K M (cid:3) K M(cid:5) for any M(cid:5).Theorem 5.• If a knock-in competition M truthfully implements a social-choice function f that is one-to-one, then M is worst-case optimalwith respect to f .• If a knock-in competition M truthfully implements f BC , then M is worst-case optimal with respect to f BC . The same holds for f Max.Proof.• Since fis one-to-one, truthfully implementing fimplies figuring out the true state given that the two teams reportedtruthfully. This is the problem of merging two sorted lists using minimum number of comparisons. Now consider theworst case for any knock-in competition, that is, when players from each team appear alternatively in the state,a1 > b1 > a2 > b2 > · · · > an > bn.Knock-in competition needs (a1, b1), (b1, a2), . . . , (an, bn), 2n − 1 matches to figure out this state. However, to tell thisstate apart, any of these matches has to be made explicit. Suppose not, say we omit (b1, a2), then we are not be ableto tell the original state from the following statea1 > a2 > b1 > b2 > · · · > an > bn.One can similarly verify other matches. This means knock-in minimizes the number of matches in its worst case (notnecessarily the worst case of other mechanism), thus we prove its worst-case optimality. In fact, one can view theknock-in competition as the simulation of the ‘merge’ procedure in the standard merge-sort algorithm, which is knownto be worst-case optimal when merging two sorted lists with an equal number of elements.• Now we prove that knock-in competition is optimal for f BC . Note that, although f BC is not one-to-one, f BC still producesdifferent values for the two states constructed in the previous part of the proof. Thus, to tell the two states apart,the comparison between (b1, a2) still has to be made explicit. One can verify this is true for any other comparisonlisted above. Thus f BC makes no difference to one-to-one in this sense and the proof above follows. For f Max, knock-inimplements it in only one match with score by play order rule {1, 0, 0, . . .}. (cid:2)P. Tang et al. / Artificial Intelligence 174 (2010) 749–766759Given the theorem above, one might ask if there exists such a one-to-one function that knock-in competition truthfullyimplements. The answer is affirmative. First note that, knock-in mechanism can truthfully implement any decreasing scoringfunction – a social-choice function in which each player is assigned a score that is a monotonic function of his rank in thestate and the associated outcome is computed by the sum of scores of each team – by trivially assigning each match thescore of the corresponding rank. The following decreasing scoring function is one-to-one.Example 4.1 (Borda Count with taxes). We consider a variation of Borda Count by imposing a different tax rate of each rank.For instance, suppose each team has two players, the best player gets 4 × (1 − 4%), the second 3 × (1 − 3%), the third2 × (1 − 2%) and the last 1 × (1 − 1%). One can verify that this is a one-to-one social-choice function which can be triviallyimplemented by a knock-in competition.One implicit assumption that we need to address is that the two teams have an equal number of players. Without theassumption, we do not know if the above theorem still holds, since the knock-in procedure is somewhat redundant foridentifying the true state in this case. In fact, Knuth ([7], Chapter 5.3.2, Exercise 8) demonstrated a procedure that canmerge any sorted list of length 2 with any another of length 8 in 6 comparisons (while knock-in needs 9 in the worst-case).However, it does not negate our theorem since that procedure is not truthful.Notice that we do not mention f HR or f Min in our theorem. As we shall introduce in the next subsection, we can doeven better than knock-in with respect to f HR and f Min by allowing randomization.4.4. Randomized sequential mechanismsAs mentioned, if we are allowed to randomize the next function (that is, non-deterministically select the next match) insequential mechanism, we can further design truthful mechanisms that are even more compact than knock-in. For instance,the following mechanism truthfully implements f HR in only n + 1 matches.A reports a1, . . . , an and B reports b1, . . . , bn, the mechanism schedules the following n + 1 matches:Example 4.2 (Implementing horse race in n + 1 matches).1. a1 vs b1, the winner gets 1 and the loser gets 0;2. a2 vs b2, the winner gets 1 and the loser gets 0;...n. an vs bn, the winner gets 1 and the loser gets 0;n + 1. ai vs b j , where ai and b j are uniformly selected from A and B respectively, the winner and the loser gets 0.However if we detect one of the following cases,1.2.j < i, bi beats ai and ai beats b j ;j > i, b j beats ai and ai beats bi ;we eject team B, which is an outcome equivalent to giving team B −∞ in payoff.Similarly, if we detect one of the following cases,1.2.j < i, ai beats b j and b j beats a j ;j > i, a j beats b j and b j beats ai ;we eject team A.One can see that if some team takes the advantage of misreporting and win certain game by mismatch, there is alwaysa positive probability (1/n2) that it will be detected in the (n + 1)-th match and gets severe punishment. In this way, thismechanism prevents manipulation. Similarly, we can truthfully implement f Min in two matches.Example 4.3 (Implementing Min in 2 matches).1. an vs bn, the winner gets 1 and the loser gets 0;2. an vs b j or ai vs bn, where ai and b j are uniformly selected from A and B respectively, the winner and the loser get 0.The detection and punishment techniques are similar to Example 4.2.We can see that, if one team benefits from misreporting in a deterministic sequential mechanism, it can be detectedwith positive probability using an additional match where the players are randomly chosen. In other words, using this760P. Tang et al. / Artificial Intelligence 174 (2010) 749–766additional match and the punishment technique, we can assume that both teams report truthfully without any conditionon the scoring rules.However, note also that the assumption of moral hazard freeness (introduced in the next section) is essential in thisexample since one team could throw the detecting (or some other) match to get the other team punished.5. Moral hazard freenessOne assumption on the environment is that once a state θ defines a >θ b, a always beats b. This is the case when playersare non-strategic individuals. For instance, each player is a card in some card game.However, sometimes a team has another level of strategic behavior by letting its players throw certain matches if it leadsto an increase in its score. Similar phenomenon is referred to as moral hazard in the principal-agent model [9].For example, if we assign a sufficiently large score to the second match in a knock-in competition, each team’s bestplayer would rather pretend to be a weaker player in order to compete the second match. This also happens when thereare negative entries in the score matrix of a generalized round-robin mechanism.The best way to tackle this is to ensure “playing one’s best” as a dominant strategy of a team. In other words, no matterwhat the other team does, it is always no worse to do one’s best. However, we argue that achieving moral-hazard freeness indominant strategy is sometimes difficult, if possible. To illustrate, consider in generalized round-robin mechanism a strategythat “if we win the match with the minimal score, we will give up the remaining ones”. Obviously, the other team has no incentiveto play their best since the current match does not outweigh the sum of the remaining matches. As a compromise, we usethe following definition, which amounts to moral-hazard freeness in Nash equilibrium.Definition 5.1 (Moral-hazard freeness).• For a generalized round-robin mechanism C and a message profile ( A, B), let U A( A, B, C) be the score A gets whenboth team compete with their full strength. We say C is moral-hazard free ifU A( A, B, C) (cid:3) U A(cid:2)A, B, C(cid:3)(cid:5)+ ci, j,(cid:5)i, jwhere C(cid:5)differs from C only in that c= 0. Similar condition is required for U B .• For a sequential mechanism D with current history h, current players (ai, b j) and a message profile ( A, B), denoteU A( A, B, h) the score A gets when both team compete with their full strength. We say D is moral-hazard free if(cid:2)(cid:3)A, B, h :: (b j > ai)U A(cid:3) U A( A, B, h) (cid:3) U A(cid:2)(cid:3)A, B, h :: (ai > b j).Similar condition is required to for team B.It follows from a simple backward induction that the above definition amounts to saying that when the other teamalways plays its best, it is no worse to play our best. That is, playing one’s best is a Nash equilibrium.The following theorem summarizes the result of moral hazard freeness in both generalized round-robin and sequentialmechanisms.Theorem 6.1. A generalized round-robin mechanism is moral hazard free iff its score matrix C has no negative entry.2. A knock-in competition with score-by-play-order rule is moral hazard free iff {c1, c2, . . . , c2n} is non-increasing.3. A knock-in competition M with score-by-position rule is moral hazard free if its score matrix satisfies ∀1 (cid:3) i, j, i + 1, j + 1 (cid:3) n,(a) ci, j (cid:2) ci, j+1 (cid:2) 0,(b) ci, j (cid:2) ci+1, j+1 (cid:2) 0.Proof. The theorem is a special case of Theorem 7. (cid:2)It is interesting that for knock-in competitions, the conditions that characterize moral hazard freeness coincide withthose of dominant strategy truthfulness. As a result, as long as these conditions are satisfied, the resulting mechanism isboth truthful and moral hazard free.It is also not hard to see that both randomized mechanisms introduced in the previous section are not moral hazard freesince there is no incentive for them to play their maximal strength in the detecting match, which, on the contrary, providesincentive for them to throw a match and get the other team punished.6. Generalization of the resultsIn this section, we generalize the previous results in two different directions.P. Tang et al. / Artificial Intelligence 174 (2010) 749–7667616.1. Win–lose-tieWe have considered an outcome to be a pair of real numbers representing the scores that each team will receive atthe end of the competition. One could argue that in many cases, what really matters is who wins the competition. In ourtwo-team competition setting, this can be done by assuming three possible outcomes 1 (team A won), 0 (tie), and −1 (teamA lost) (cf. [16]).An interesting question then is how this will affect the results so far. First of all, we notice that instead of changingthe set of outcomes, the same effect can be achieved by changing the preference relation P into the following ordering:A strictly prefers (s A, sB ) over (s(cid:5)A, s(cid:5)B ) iff eithers A > sBand s(cid:5)A(cid:3) s(cid:5)Bors A = sBand s(cid:5)A < s(cid:5)Band is indifferent to (s A, sB ) and (s(cid:5)A, s(cid:5)B ) iff eithers A > sBand s(cid:5)A > s(cid:5)Bs A = sBand s(cid:5)A= s(cid:5)Borors A < sBand s(cid:5)A < s(cid:5)B .It is similar for team B’s preference.One can reason that, if a condition is sufficient for dominant strategy truthfulness (or implementation of a social choicefunction), then it is also sufficient here because the weak preference persists (o1 is weakly preferred to o2 before implies o1is weakly preferred to o2 now). However, a previously necessary condition may not hold now. For example, one can verifythat the generalized round-robin mechanism with the following score matrix C2×2:(cid:7)(cid:8)910100is dominant strategy truthful although it is not double-decreasing.6.2. Probabilistic match outcomesOne could also argue that in many realistic cases, it is not always the case that the stronger player deterministically beatsthe weaker player. This is true, especially in sports where one exciting thing is the uncertainty about the match outcomeeven though the rankings of players are usually common knowledge.Probabilistic play models abound. Knuth [8] introduced a model for the knockout tournament problem. He assumed alinear ordering x1, x2, . . . of strengths among players where xi always beats x j when j (cid:2) i + 2 and xi beats x j only atprobability p when j = i + 1. Graham et al. [5] introduced an alternative model by assuming xi beats x j with probabilityp for any i, j such that i < j. Yet, the most popular one is the so-called monotonic model6 [6,13], widely adopted in theknockout tournament literature, an area that is concerned with reasonably seeding players in a knockout tournament. It isformally defined as follows,Definition 6.1 (Monotonic model). Suppose all the players are linearly ordered according to their strengths x1 > x2 > · · · > xn,there is a probability matrix Pn×n, whose entry pi, j specifies the chance that xi beats x j in a match. Further, Pn×n satisfiesthe following constraints,1. pi, j + p j,i = 1,2. pi, j (cid:2) p j,i if i < j,3. pi, j (cid:2) pi, j+1.6 We overload the notation of monotonicity, which could also denote an axiom of social-choice function. Each appearance should be clear from thecontext.762P. Tang et al. / Artificial Intelligence 174 (2010) 749–766Consider this model in the context of team competition. Since there are 2n players in total, a 2n × 2n matrix is neededto fully specify a state. We can condense this matrix into an n × n one by eliminating the entries describing matches withinthe same team. Thus, the above definition can be translated in the context of team competition as follows,Definition 6.2 (State). A state θ specifies a linear ordering >θ on A ∪ B and a play matrix Pn×n, whose entry pi, j specifiesthe chance that ai beats b j . Further, Pn×n satisfies the following constraints,1. pi, j (cid:2) 0.5 if ai >θ b j ,2. pi, j (cid:3) 0.5 if b j >θ ai ,3. pi, j (cid:2) pi,k if bk >θ b j ,4. p j,i (cid:2) pk,i if a j >θ ak.The definitions for other parts of team competition environment as well as two types of mechanisms remain unchanged.One should be able to conclude that the linearly ordering >θ (not necessarily unique, but equivalent for the purposeof this paper) can be derived from the play matrix P n×n if Pn×n satisfies the above constraints. Therefore, a state can becompletely characterized by its play matrix.As one can see, as long as a play matrix has no zero entry, any team can completely beat the other. In this subsection,we compute their expected scores whenever mentioning truthfulness, that is, the expectation of the sum of scores fromindividual matches.For constant-sum mechanisms such as generalized round-robin mechanism as well as sequential knock-in competitionwith rule of scoring by play order, it is apparent that any expected score profile is still constant-sum. Hence, the preferenceR defined at the beginning of the paper is still complete for the set of expected score profiles.Furthermore, to define the corresponding properties of social choice function based on the new definition of state, playeranonymity and team anonymity remain unchanged. The corresponding new definitions of monotonicity and Pareto efficiencyare as follows,Definition 6.3 (Monotonicity). For any two states θ and θ (cid:5)then oi, j. The same holds for team B.is no worse than o for A. A state θ (cid:5)(cid:5), if f (θ) = o, f (θ (cid:5)) = o(cid:5)and θ (cid:5)is an improvement to another state θ for team A, if pi, j (cid:3) pis an improvement to θ for team A,(cid:5)i, j for all possibleMonotonicity says that if in one team, every player weakly increases his chances against all players in the other team,the team should not end up in a worse score.Definition 6.4 (Pareto efficiency). If in any state θ , whose matrix P satisfies ∀i, pi,i > 0.5, then f (θ) = (s A, sB ) implies s A (cid:2) sB ,and vice versa.We still have that Pareto efficiency can be implied by team anonymity and monotonicity.Proposition 6.1. A choice function f satisfies Pareto efficiency if it is both team anonymous and monotonic.Proof. Suppose otherwise that P satisfies ∀i, pi,i > 0.5 and f (θ) = (S A, S B ) satisfies sB > s A in state θ . One can imagine= 1 − p j,ithat team B also has a play matrix Pis the probability that bi beats a j . We now transit to(cid:5)another state θ (cid:5)i, j (because ai > bi, a j > b j follows from ∀i, pi,i > 0.5), such atransition is an improvement for team B. By monotonicity, we still have s. However, by team anonymity, wehave ssuch that p(cid:5)i, j be pi, j . Since pi, j (cid:2) pby letting each pA in θ (cid:5)(cid:5)B > s= s A < sB = s(cid:5)A , a contradiction. (cid:2)(cid:5)i, j(cid:5)B(cid:5)(cid:5)We are now ready to derive similar results to what we did in the deterministic case.Theorem 7. In probabilistic settings, we have:1. A generalized round-robin mechanism M is dominant strategy truthful iff its score matrix Cn×n is double-decreasing.2. If a generalized round-robin mechanism M truthfully implements a social choice function f in dominant strategies, then:• f is player anonymous;• f is team anonymous iff the score matrix satisfies C = C T , where C T is the transposition of C ;• f is monotonic iff the score matrix of M has no negative entry.3. A generalized round-robin mechanism is moral hazard free iff its score matrix C has no negative entry.4. • A knock-in competition with score-by-play-order rule is moral hazard free iff {c1, c2, . . . , c2n} is non-increasing;• A knock-in competition with score-by-position rule is moral hazard free if its score matrix C satisfies ∀1 (cid:3) i, j, i + 1, j + 1 (cid:3) n,(a) ci, j (cid:2) ci, j+1 (cid:2) 0,(b) ci, j (cid:2) ci+1, j+1 (cid:2) 0.P. Tang et al. / Artificial Intelligence 174 (2010) 749–7667635. For a knock-in competition K with a score-by-play-order rule, K is dominant strategy truthful only if {c1, c2, . . . , c2n} is non-increasing.6. For a knock-in competition K , if K truthfully implements a social choice function f in dominant strategies, then• f is player anonymous, team anonymous, monotonic.Proof. See Appendix A. (cid:2)Theorem 7 states that for generalized round-robin mechanisms as well as sequential mechanisms (with scoring by playorder), the necessary and sufficient conditions for truthfulness as well as moral hazard freeness remain the same in thegeneralized probabilistic setting.7. Related work7.1. The Colonel Blotto gameWe now give a related game called the Colonel Blotto game, a classic one that has been put forward for almost a centuryuntil recently solved by Roberson [12] under some assumption. The game has found its resemblance and applications tomulti-object auctions where agents have budgetary limits [3,15]. It is as follows,Example 7.1. The Colonel Blotto games.• A two-person constant-sum game.• Each player has a fixed number of soldiers and is required to partition all his soldiers to a number of battlefields.• On each Battlefield, the player that allocate the most soldiers wins.• The payoff of each player is the number of battlefields won.The game has several variations include multiple players, incomplete information about other players’ budgets and dif-ferent winning prizes for different battlefields (cf. e.g. [1]). For its most original form, it can be considered as a class of teamcompetitions where each team does not know the other team’s partition (thus does not know the strength ordering either).As a result, it is strictly more complex than team competition in the sense that it can be thought of as a two-state gamewhere the first stage is for each team to partition the strength and the second is a specific team competition.7.2. Mechanism design in sportsOur work can also be categorized as a game-theoretic treatment of designing desirable sports rules. Although it is originalin the context of team competition, there has been some parallel work on the tournament design problem. Vu et al. [16]provided a computational treatment of seeding knockout tournament. Their main conclusion is that it is computationallyhard to maximize the winning probability of a target player by seeding. Thus, it assures that the designer cannot colludewith any player when the number of players is considerably large. Altman et al. [2] alternatively provided a social-choicetheoretical treatment of manipulations in tournament. Each tournament is treated as a social-choice function that mapsa strength state to a winner. They considered several desirable axioms on this setting and provided some possibility andimpossibility results.8. Future work and concluding remarksWe now consider several topics for future research.We have considered only mechanisms that require both teams to submit their players lists all at once. Sometimes,however, the teams may regret about their original strategies after observing the results of the first few matches. To ac-commodate this “change of heart”, one can consider using games in extensive form where the teams can incrementally addtheir players’ lists during a competition. For example, in a knock-in competition where there is no constraint among players’strengths, at any stage of the competition. One could choose a player has a high chance to beat the current opponent butlow chances to beat the other remaining opponents.It is also interesting to consider a more complicated setting where each match takes multiple players. Such examplesinclude various card games such as Bridge, in which a card can be considered as a player, and a hand of cards teams. Eachround can then be considered as a single match that takes multiple cards with the winner chosen and awarded certainscore according to the order of the cards. In this setting, a desirable mechanism would not necessarily need to be truthful,but rather it should encourage strategic behaviors.Instead of minimizing the number of matches, we can consider other criteria such as maximizing total revenue orrevenue per match. In this case, we need to define a model that maps strengths to revenue in each match and thenoptimize the objective accordingly subject to truthfulness and other constraints. One possible way of implementing this isto use the idea of automated mechanism design introduced by Conitzer and Sandholm [4].764P. Tang et al. / Artificial Intelligence 174 (2010) 749–766To sum up, motivated by real world examples, we have formulated the team competition problem in the frameworkof mechanism design. We have also proposed two typical forms of team competition, identified the desirable propertiesthat these competitions should satisfy and characterized the conditions under which our mechanisms satisfy the properties.We have further generalized our results in two directions and discussed how randomization can help design more compactmechanisms. For future work, it is worth further exploring sequential as well as randomized mechanism. It is also interestingto deploy knock-in competition in real sports competitions as well as multi-agent scenarios.AcknowledgementsWe are grateful to the AIJ editor in charge and anonymous reviewers for their helpful comments. This work was sup-ported in part by HK RGC GRFs 616707 and 616208 and by NSF grant IIS-0205633-001.Appendix A. Proof of Theorem 7Lemma A.1 (Rearrangement inequality).• If a1 (cid:2) · · · (cid:2) an and b1 (cid:2) · · · (cid:2) bn, then we havea1b1 + · · · + anbn (cid:2) a1bσ (1) + · · · + anbσ (n) (cid:2) a1bn + · · · + anb1.• If a1 > · · · > an and b1 > · · · > bn, then we havea1b1 + · · · + anbn > a1bn + · · · + anb1, when n (cid:2) 2where σ is any permutation of {1, . . . , n}.We now prove 1, 2, that is, the conditions for truthfulness and truthful implementation in generalized round-robinmechanism remain the same.Proof.1. ⇐: If the score matrix C is double-decreasing, we show that truthful report is a dominant strategy for team A. Fromthe definition, the final score of team A is the sum of the scores that they get by playing with every players in team B.Suppose team B reports b j as their i-th choice, we now compare the expected scores team A gets from b j with andwithout truthful report.• Truthful report, that is, to report a1 > a2, . . . , an:(cid:9)pk, jck,i.k=1,...,n• Otherwise, to report aσ (1), . . . , aσ (n), where σ is any permutation of {1, . . . , n}:(cid:9)pσ (k), jck,i.k=1,...,n(1)(2)Since p1, j (cid:2) p2, j (cid:2) · · · (cid:2) pn, j by the definition of P , and c1,i (cid:2) c2,i (cid:2) · · · (cid:2) cn,i by the non-increasing property of C , (1)(cid:2) (2) then follows from Lemma A.1. Since i, j here are arbitrarily chosen, we have therefore proved this part.⇒: If a generalized round-robin mechanism M is dominant strategy truthful, suppose otherwise that ci, j < ci+1, j forsome i, j, we compare the total expected score team A gets with and without truthful report, given team B reportstheir truthful order b1 > b2, . . . , bn.• Truthful report:(cid:9)(cid:9)k=1,...,nj=1,...,npk, jck, j.(3)• Untruthful report b1 > · · · > bi+1, bi, . . . , bn. That is, the one obtained from swapping bi+1, bi in the truthful report.(cid:9)(cid:9)(cid:9)(cid:9)pk, jck, j +pi+1, jci, j +pi, jci+1, j.(4)k(cid:7)=i,i+1j=1,...,nj=1,...,nj=1,...,nWe now construct a state θ whose play matrix P satisfying pi,l = pi+1,l, ∀l (cid:7)= j and pi, j > pi+1, j . It’s easy to see that itis a well defined play matrix. Now we get that(3) − (4) = pi, jci, j + pi+1, jci+1, j − pi+1, jci, j − pi+1, jci, j.P. Tang et al. / Artificial Intelligence 174 (2010) 749–766765Since ci, j < ci+1, j and pi, j > pi+1, j , again by Lemma A.1, we have in θ that(3) − (4) < 0.This implies that misreporting yields a better expected score for team A, which contradicts our assumption earlier thatM is dominant strategy truthful.2. This part follows from the definition. (cid:2)Next, we prove 3, 4, that is, the conditions for moral hazard freeness in both generalized round-robin and knock-incompetitions still hold.Proof. For 3, that is the condition of moral hazard freeness in generalized round-robin mechanisms follows directly fromthe definition.For the first claim of 4, that is, sequential mechanism with rule of score-by-play-order, we first introduce the notationsimilar to what we did when proving Theorem 3. After several rounds, the remainder of a knock-in competition can becompletely characterized by a triple ( Am, Bn, ci) where the lists of remaining players of teams A and B are Am with mplayers, and Bn with n players respectively and the current winning score ci . We denote U A( Am, Bn, ci) the expected scorethat team A gets from the remaining matches of the competition.⇒: If a knock-in competition K is moral hazard free and suppose otherwise that ci < ci+1 for some i. Suppose when(cid:5)(cid:5), . . .}, ci). We can construct a state whose playboth at probability 1. Now we can see that if team A play their best for(cid:5)(cid:5), . . .}, ci+2), while they will end up with a higher score. This contradicts to the fact that K is moralthe current score is ci , the rest of the competition is ({a(cid:5)matrix says that athe first two matches, they will end up with ci + U ({aci+1 + U ({ahazard free.(cid:5)(cid:5), . . .}, ci+2) if they throw the first match between a(cid:5)(cid:5), . . .}, {b(cid:5)(cid:5), . . .}, {b(cid:5)(cid:5), . . .}, {bbeats bbeats aand band b(cid:5), b(cid:5), a(cid:5)(cid:5)(cid:5)(cid:5)(cid:5)(cid:5)⇐: We prove this part by induction on m and n for competition ( Am, Bn, ci). More specifically, we prove the followinghold for all m and n if ci (cid:2) ci+1 for all i:U A( Am, Bn, ci) (cid:3) U A( Am−1, Bn, ci+1) + ci,U A( Am, Bn, ci) (cid:2) U A( Am, Bn−1, ci+1).In fact (5) and (6) are equivalent to (7),U A( Am−1, Bn, ci+1) + ci (cid:2) U A( Am, Bn−1, ci+1),sinceU A( Am, Bn, ci) = p(cid:2)U A( Am−1, Bn, ci+1) + ci(cid:3)+ (1 − p)U A( Am, Bn−1, ci+1).(5)(6)(7)(cid:5) = m, n(cid:5) = 1 and m(cid:5) =• Base case: One can easy verify that when ci (cid:2) ci+1 for all i, the above inequations hold for m1, n(cid:5) = n.• Inductive case: Assume (7) (hence (5) + (6)) holds for all m(cid:5) (cid:3) m + n − 1, now we show that itholds for m + n. We denote the left-hand side of (7) as LHS, and the right-hand side as RHS. By inductive assumption,we havesuch that m(cid:5) + n(cid:5), n(cid:5)U A( Am−1, Bn−1, ci+2) + ci (cid:3) LHS.Similarly, we haveU A( Am−1, Bn−1, ci+2) + ci+1 (cid:2) RHS,since ci (cid:2) ci+1, we have that LHS (cid:2) RHS. The inductive step holds as well.As to the second claim in 4 concerning score-by-position rule, it follows from the same inductive proof as the above onewhen we replace any instance of U A( A, B, c) by U A( A, B), ci by cm,n and ci+1 by cm,(n+1). (cid:2)Note that this also proves Theorem 6.At last, we prove 5, 6, the truthfulness conditions in knock-in mechanism still hold.Proof. ⇒ The same counter-example in the proof of Theorem 3 also applies here.For the ⇐ part, we are able to prove that this part holds where each team has two players. For general case, we believethis condition still holds, however we do not have a proof at the moment. (cid:2)766ReferencesP. Tang et al. / Artificial Intelligence 174 (2010) 749–766[1] T. Adamo, A. Matros, A Blotto game with incomplete information, Economics Letters 105 (1) (2009) 100–102.[2] A. Altman, A.D. Procaccia, M. Tennenholtz, Nonmanipulable selections from a tournament, in: C. Boutilier (Ed.), IJCAI, 2009, pp. 27–32.[3] J.-P. Benoit, V. Krishna, Multiple-object auctions with budget constrained bidders, Review of Economic Study 68 (2001) 155–179.[4] V. Conitzer, T. Sandholm, Complexity of mechanism design, in: Proceedings of the Uncertainty in Artificial Intelligence Conference (UAI), Edmonton,Canada, 2002.[5] R.L. Graham, D.E. Knuth, O. Patashnik, Concrete Mathematics: A Foundation for Computer Science, Addison–Wesley Longman Publishing Co., Inc.,Boston, MA, USA, 1994.[6] F.K. Hwang, New concepts in seeding knockout tournaments, Journal of American Mathematics Monthly 89 (4) (1982) 235–239.[7] D.E. Knuth, The Art of Computer Programming, vol. 3: Sorting and Searching, Addison–Wesley, 1973.[8] D.E. Knuth, Problem 86-2, a random knockout tournament (with solution), Journal of American Mathematics Monthly 93 (1987) 127–129.[9] J.-J. Laffont, D. Martimort, The Theory of Incentives: The Principal-Agent Model, Princeton University Press, 2001.[10] E. Maskin, T. Sjostrom, Implementation Theory, Handbook of Social Choice and Welfare, vol. 1, Elsevier, 2002.[11] M.J. Osborne, A. Rubinstein, A Course in Game Theory, MIT Press, 1994.[12] B. Roberson, The Colonel Blotto game, Economic Theory 29 (1) (2006) 1–24.[13] A.J. Schwenk, What is the correct way to seed a knockout tournament? Journal of American Mathematics Monthly 107 (2) (2000) 140–150.[14] Y. Shoham, K. Leyton-Brown, Multiagent Systems: Algorithmic, Game Theoretic and Logical Fundations, Cambridge Univ. Press, 2009.[15] B. Szentes, R.W. Rosenthal, Three-object two-bidder simultaneous auctions: chopsticks and tetrahedra, Games and Economic Behavior 44 (1) (2003)114–133.[16] T. Vu, A. Altman, Y. Shoham, On the complexity of schedule control problems for knockout tournaments, in: AAMAS’09, 2009, pp. 225–232.