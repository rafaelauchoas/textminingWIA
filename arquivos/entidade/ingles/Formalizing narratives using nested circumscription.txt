ELSEVIER Artificial Intelligence 104 (1998) 107-164 Artificial Intelligence Formalizing narratives using nested circumscription Chitta Baral a* *, Alfred0 Gabaldon a, I, Alessandro Provetti b,2 a Department of Computer Science, UniversiQ of Texas at El Paso, El Paso, TX 79968, USA b D.S.I., Universith di Milano, Via Come&o 39. i-20135 Milan. Italy Received 13 June 1997: received in revised form I5 June 1998 Abstract formalisms together with the ability to do hypothetical Representing and reasoning about narratives reasoning is important for agents in a dynamic world. These agents need to record their observations and action executions as a narrative and at the same time, to achieve their goals against a changing environment, they need to make plans (or re-plan) from the current situation. The early action formalisms did one or the other. For example, while the original situation calculus was meant for hypothetical reasoning the event calculus was more appropriate for narratives. Recently, there have been some and planning, attempts at developing there has also been a lot of recent that do both. Independently, research in reasoning about actions using circumscription. Of particular interest to us is the research on using high-level theories form of circumscription with blocks representation modular. (NATs)-a to allow concurrent actions, in the high-level Starting from theories reasoning. We initially to NATs that preserves both narrative and hypothetical we define a translation use the high level language L, and then extend it to allow concurrent actions. In the process, we study several knowledge representation issues such as filtering, and restricted monotonicity with respect to NATs. Finally, we compare our formalization with other approaches, and discuss how our use of NATs makes it easier to incorporate other features of action theories, such as constraints, to our formalization. 0 1998 Elsevier Science B.V. All rights reserved. languages and their logical representation language C. which is extended using nested abnormality that make knowledge Kq~ordst Narratives; Nested abnormality theories: Circumscription: Reasoning about actions: Value minimization * Corresponding author: Email: chitta@cs.utep.edu. ’ Email: alfredo@cs.utep.edu. ’ Email: provetti@dsi.unimi.it. 0004-3702/98/s - see front matter 0 1998 Elsevier Science B.V. All rights resewed PII: SOOO4-3702(98)00070-8 108 C. Bard et al. /Artificial Intelligence 104 (1998) 107-164 1. Introduction about incomplete A narrative is a possibly set of observations the world in terms of in the past. Initial instants [23] and Allen’s such as Kowalski and Sergot’s event calculus logic [I], were concerned about inferring values of fluents at time instants other of ’ in a possible is reasoning what actions/events occurred and the value of fluents at different formulations of narratives, temporal than those explicitly given actions not explicitly mentioned with hypothetical about values of fluents future world reached by executing a sequence of actions. Such hypothetical important normally a sequence of actions, to achieve a particular goal. from the point of view of planning, where an agent needs to construct a plan- in the narrative and also possibly “abduce” occurrences in the narrative. These formulations were not concerned and/or counterfactual reasoning The formalism of situation calculus [34] has been normally used for hypothetical reasoning about actions and forms the basis of classical planning. But in its original form it does not allow narratives; in it are about values of fluents in the initial situation. the only actual observations that can be expressed I. I. Allowing narratives with hypothetical reasoning Recently, of having researchers is necessary have realized the importance [5,19,33,35,36,39] that captures both narratives and hypothetical a reasoning about effects of actions. formalism Such a formalism to formulate planning and execution of actions of an agent in a dynamic environment, where exogenous actions may occur. The agent has to record about occurrences of actions (both its own action executions, and exogenous observations infer them. Also, the agent has to make plans happenings) or fluent values, and sometimes and more importantly may have to dynamically revise its plans or construct new ones when faced with exogenous events. These plans are not from the initial situation as in situation calculus, but from the current situation. Although the terms “dynamic planning”, “planning with execution”, formalism backbone of such planners-the and “reactive planning” have been used in the planning role situation calculus plays for classical planners. that allows both narratives and hypothetical a to form the is necessary community, reasoning contributions: both narratives and hypothetical [39] were perhaps Miller and Shanahan [35] and Pinto and Reiter the first who reasoning. Both formalisms made many to the former showed how situation calculus can be extended the concept of actual situations-those considered important incorporate narratives, that were reached by actual occurrences of actions. Still, both formalisms have several drawbacks. For example, Miller and Shanahan only allow fluent facts about the initial state, and require stated. Also, Pinto and Reiter’s [39] solution occurrences of actions that all action occurrences be explicitly from premature minimization the possible existence of new situations-those and the latter introduced i.e., while minimizing not specified as of occurrences, suffers B It was later shown that some of these formalisms can use abduction reasoning and planning. However, Reiter 1421 has argued that it is better to do hypothetical level. Besides, the action descriptions used in these formalisms were restrictive features such as constraints. in the meta-level to do hypothetical reasoning at the object in the sense that they did not allow C. Bard et al. /Artijicinl Intdligcwce 104 (19Y8) 107-164 I09 from it-is or not inferable part of the axiomatization being able to make plans. As a result, both approaches agent who, for instance, after making a plan of packing his suitcase and driving the airport and doing the packing, observes his car with demobilizing did not see the exogenous action that caused the damage so it cannot put a corresponding action occurrence observation ruled out. 4 This prevents them from ability of an the car to damage. The agent to its narrative, but it should be able to infer such an occurrence that the car is damaged. lack the re-planning from its 1.2. Expressiveness of ourformalism reasoning In this paper we focus on a more general and hypothetical of the earlier proposals. In particular, besides being able to express fluent values at the initial state, and effects of actions on fluents-as can also express observations and overcomes many of the limitations in A [12], the precursor of C-we that allows both narratives formalism allowed such as: fluent facts about non-initial states, - - actual occurrence constants), and of actions at different time points (labeled by actual-situation - ordering among actual situations. Given such descriptions, which includes observations, we can: - plan from the current situation by doing hypothetical _ explain observations - through inferring action occurrences infer new fluent facts (that are not in the narrative) about the various situations explain the observations or are implied by them, reasoning, (not explicitly mentioned), that - do counterfactual reasoning about action occurrences [36,39]. and hypothesis. is a hypothesis Moreover, our formalism allows a clear distinction between observations and makes it clear why the situation calculus atom ho&(,f, and not an observation. Our formulation [a 1. . , a,]) of narratives is done using a novel form of circumscription ity Theories (NATs) [24]. One important aspect of our approach earlier formalizations our formalization the first half of the paper we give a translation of descriptions theories and show their equivalence. Later, we extend L: to allow concurrent give a translation of descriptions ries. C is one of a family of high-level action languages [ 12,19,45]. called Nested Abnormal- is that unlike most of the language, language C developed by Baral et al. [7]. In actions and theo- in the literature [35,39] that were done directly in C to nested abnormality to nested abnormality recently proposed in this extended to the high-level in a logical is grounded language 1.3. High-level language upproach vs directformalization approach In general, researchers actions have normally followed that use a high level language the methodology of: to formalize reasoning about ’ Thi\ term was coined by Reiter this drawback. The later papers of Reiter and Pinto [ 38,421 avoid this drawback but to prevent it they abandon minimization of action occurrences. We further explain “premature minimization” and do a detailed comparison of our approach with theirs in Section 11 S. in [42] where he discussed fairly - developing a high-level language with English-like language-a syntax that can be easily followed, but with a precise semantics (that makes common- sense assumptions used in the formulation precise), often defined using an automata and that makes it easier to incorporate notions such as the “frame”, “qualification” “ramification” that are otherwise difficult to encode in a logical language, and translations of high-level - defining correct (sometimes complete) restricted language theories into classical systems and compare different approaches within a well known setting. logic or logic programming so as to apply existing query-answering formalization formalize that directly to be given in a particular The approaches reasoning about actions in a logical also often require upptmch, form and in a restricted language approaches, where queries are also required language, the initial subset of the logical to have to be any sentence this may seem like a big plus point for following faster querying the query language can be developed. This is the reality in most systems, such as databases and which we will refer to as the direct descriptions language. Unlike high-level a restricted syntax, in the logical the direct formalization mechanisms knowledge bases (including expert systems). approach, often by restricting approach allows queries language. Even though the direct formalization it forms to which the basis the logical the two approaches The other main difference between the correctness of a direct formalization approach the semantics it to an independent at first sight, and their correctness becomes a precise mathematical extra semantics, question where different examples is decided on whether formalization intuition or not. When examples are given in English, are often partially stated. thus opening up the possibility as a result the adequacy and correctness of a direct formalization precisely settled. A new example, often with different underlying the original is that in the direct formalization is directly defined in a standard logical language without grounding semantics. Although having an extra semantics may seem superfluous can be grounded formalization question. In the absence of this approach becomes an empirical and the adequacy of the of the examples matches our them and approach can never be than used in starts a debate about the adequacy of the formalization. the assumptions for multiple surrounding interpretations (in English) are formalized the formalization in the high-level the debate about pclrtially what happened semantics language approach (such as a state being a collection of fluents) a logical determine or not. Not having this extra semantics, and the inherent difticulty languages, make it hard to evaluate mathematics of the logical formulation often makes it easier to evaluate in the direct approach. is the Yale-shooting prohlenz. Also, the extra is defined using automata and structures in that make notions, difficult this semantics we can later precisely is correct (even for experts) of the of a the appropriateness language. if a logical formulation of a difficult notion (such as the frame problem) easy to formalize. By having its appropriateness with respect to examples.) the simplicity of the high level semantics formalization, (In contrast. assumptions to express during This logical Two anecdotal examples make this point. The first is the formalization of the frame in the various in the Yale- issues. The formulation of this in the high level language A is extremely simple: logical the can easily be settled once and for all by checking whether in A, the correctness of a particular that were the subject of debate problem shooting thus. for any example formulation semantics of the formulation in A. The second anecdotal example is the case of “premature that can be expressed it matches languages C. Bard et al. /Artijicirrl lntelli,qencr 103 (199X) 107-164 III in situation calculus. minimization” mentioned directly planning. Unfortunately, respect to an independent level prevented the oversight language In fact, their goal was to capture narratives earlier. This feature was not intended by researchers working together with logical formalization, which was not verified with consequence. Perhaps the high- and their direct semantics, had this unintended in the former anecdote the debate approach could have reduced in the latter. We would like to add that the high-level theories of action. The best example different languages by translating by having high-level descriptions with an independent circumscriptive theory, we agree with Hoare‘s v iew [ 171: them into .A and proving language approach facilitates the comparison of is Kartha’s [20] comparison of three action in this paper their equivalence. Finally, semantics and a corresponding of requirements For specifications formalization they are consistent or even equivalent consistent and complementary secure basis for software engineering. of the highest quality and importance I would recommend complete in two entirely different styles, together with a proof that for which two taken as a are provided may be confidently to each other. [. .] A language definitions 1.4. Advantages qf using nested abnorndit\~ theories theories it makes the absence of narratives, with NATs [ 15,221. Also, although in NATs may at first glance suggest [31], we believe loss of declarativeness it easier to represent knowledge, particularly One major advantage of using nested abnormality of additional in our work is that it allows features, such as constraints, which already have been the nesting and elaboration easy incorporation formalized-in of blocks in the tolerance action domain (see [ 15,22,24] for more on this). This is because we can develop blocks that in other units without worrying represent meaningful can be about undesired surgery on the elaborated by just changing rest of the theory. (In Section 9 we show how we can add constraints to our theory by function.) To some extent, using “flat” only changing is like writing a large program circumscription of C (as without using subroutines. We believe presented the appropriate block, without any nonlocal to formalize a large body of knowledge the usefulness of NATs for knowledge interactions. Besides, a sub-theory. structural units and use the blocks e.g., a predicate definition, in this paper) demonstrates the block that encodes that the simplicity of our translation representation. the transition 1.5. Other contributions a full, nontrivial An additional and important contribution of this work is that the formalization presented a technique in a circumscriptive here constitutes developed by Baral et al. [6] for minimizing theory. Value minimization only action occurrences which can be derived from a set of observations are necessary example of the use of value minimization, that the are those which is used in our formalization to capture the assumption the value of a function the observations themselves. to explain In reasoning with narratives, since we allow facts about noninitial knowledge about action occurrences, we need some form of abduction states and partial the to entail I12 C. Bud rt al. /Arr$ciul lntrlligmce 104 (1998) 107-164 occurrence of such actions and values of fluents at time points stated in the narrative. Unlike explanations the object-level. to restore consistency) [ 191, where a particular kind of abductive reasoning is done at the meta-level, we use filtering that are not explicitly (through [44,45] at To sum up, our formalization seems to be of independent and nonmonotonic logics, since it illustrates interest from the point of view the usefulness of [26], the use of value in and the formalization of filtering and restricted monotonicity representation representation of knowledge NATs in terms of ease of representation in knowledge of functions minimization NATs. 1.6. Organization of the rest of the paper in our translation. We start with an overview of the high-level in Section 4. In Section 7 we formally l language C from [7,8] in Section 2 and an in C into the NAT characterization with respect to some examples of functions and its role in our in L to actions, to NATs and relate in terms of NATs the and show the relation between In Section 11 we compare our overview of NATs in Section 3. We then give a translation of domain descriptions NATs in Section 4 and illustrate in Section 6. In Section 5 we discuss value minimization translation described the entailment give a translation of domain descriptions relation. their entailment can be easily extended restricted monotonicity abductive work with earlier work on combining narratives and hypothetical by Miller, Shanahan, Pinto, Reiter and McCarthy. Finally, all the proofs are given in the Appendixes A and B. to take into account constraints property of our NAT formulation filtering and restricted monotonicity. In Section 8 we extend in this extended relate the entailment to allow concurrent In Section 9 we show how our formulation and in Section 10 we discuss reasoning-particularly reasoning, language 2. Overview of L The high-level language C was developed by Baral et al. [7,8] to allow representation of and reasoning with narratives together with hypothetical reasoning. Beside the syntax and semantics of C, [8] defines a translation to logic programs and Prolog for a subclass of this language. Here, we start with a translation of domain it to allow concurrent descriptions actions. Let us make in L to NATs, and then extend it clear that the contribution of this paper is not the development of L but rather the of C in NATs, which allows easy integration of additional features such as formalization constraints; and the study qf our NAT formalization in terms qf its impact to knowledge representation in general. Let us now give a brief overview of the syntax and semantics of C. To make this paper in this language and self-contained, we present motivations give several examples. Additional detailed motivations and examples can be found in [8]. sets of symbols F, A and S, called juents, actions, and actual situations. Elements of A and S will be denoted by (possibly The alphabet of C consists of three disjoint nonempty for the choice of constructs C. Baral et al. /Artificial Intelligence 104 (1998) 107-164 113 indexed) situations SO and SN called initial and current situation, letters A and S, respectively. We will also assume respectively. that s contains two special A fluent literal is a fluent possibly preceded by 1. Fluent literals will be usually denoted --F will be equated to F. For a fluent F, by -F we by letters F, P and Q with indexes. mean F, and by F we mean -F. There are two kinds of propositions in L called causal laws and facts. Causal laws are the same as effect propositions in A [ 121, i.e., a causal law is an expression of the form: A causes F if PI, . . . , P,, . (1) where A is an action, and F, PI, . . , P,, (n 3 0) are fluent literals. PI, . . . , P, are called preconditions of (1). We will read (1) as “F is guaranteed to be true after the execution of an action A in any state of the world where PI, . . , P,* are true”. If n = 0, we write the causal law as A causes F. An atomicJlr*erztfact is an expression of the form F at S, (2) were F is a fluent observed about the world by adding such fluent facts (based on its observations) literal and S is a situation. 5 The intuitive to be true in situation S”. An agent in a dynamic world can update its knowledge reading of (2) is “F was An atomic occurrence fact is an expression of the form ff occurs-at S, to its database. (3) where ff is a sequence of actions, and S is a situation. of actions was observed sequence knowledge about action occurrences-both the agent itself, by adding such occurrence to have occurred exogenous facts to its database. It states that “the sequence a in a its actions, and actions executed by that actions follow each other immediately.) An agent in a dynamic world can update in situation S”. (We assume An atomic precedence fact is an expression of the form: SI precedes SZ. (4) where St and S2 are situations. in situation St. The agent can use such precedence between situation precedes the initial one, e.g., its observations about fluent facts and occurrence It states that the domain was in situation S2 after being facts to record the temporal ordering facts. Precedence facts saying a S1 precedes So, are of course forbidden. Since propositions of type (1) express general knowledge about effects of actions, are referred to as luws. Propositions A fuct is a propositional called domain description; be denoted by Dt and Df , respectively. Domain descriptions following properties: they (2) (3) and (4) are called atomicfacts or observations. of atomic facts. A collection of laws and facts is the sets of laws and facts of a domain description D will to satisfy the are required combination ’ Unless otherwise stated, by situations we will mean actual situations - its propositions do not contain the situation constant SN, and - for every situation there is at most one occurrence The first property situation constant S,V, which represents property is very impo~nt is to prohibit concurrent actions in C. and allows fact. the nonl~onotoni~ of the the current situation. The purpose of the second inte~retation An important incomplete with observations feature of an agent associated with an 1: theory is the ability narratives and make revisable and nonmonotonic conclusions to reason about it might have missed. ’ The following example further illustrates our point. Example 1 (Discc~vering o~curwnces). Consider the following version of the stolen-car example: We know that initially we have a car (in the garage). However, at a later instance that we no longer have the car. We also know that after our car gets of time we observe is a description of this story stolen in C: then we will no longer have the car. The following sreuljcar-) causes -hns(cur), D _ I- ha.s(car) at SO. -hu.s(crrr) at S1. SO precedes SI . / t like to conclude that action Intuitively, from this description we as smart agents would steal(car) must have occurred in situation So thus explaining the fact that in that situation we had a car but in situation St we no longer have it. In other words, we abduce that action to become false. The semantics ~~~~z~(~~~~~ occurred in the initial situation causing has(cnr) that DI entails of the language C as defined in Section 2.2, indeed ensures .s~Pu/( RI/*) occurs_at SO. It is clear that in reaching this conclusion we are making some assumptions domain. We are, for example, assuming cause has(cclr) to become false. Otherwise, be explained by the occurrence of another action. AI1 the assumptions embodied descriptions about the is the only action that may the conclusion would be unsustained as it could in domain in the subsection below. that action steul(czr) in C are discussed Note that fluent facts about situations other than Su are allowed and, as it is shown in this example, a semantics of .L must be able to capture some form of abducrive reusoning to be able to abduce the explanations to these observations. 2. I. Assumptions embodied irz L domain descriptions Domain descriptions in L: are used assumptions which restrict the language so that the agent can perform hasty, and thus revisable) in conjunction with reasoning: the following intelligent informal (perhaps -.-_ ’ Unlike in [ 19.351 WC would like our agent to make this conclusion m the abject language itdf, not through meta-level reasoning. C. Bad rt al. /Arti$cial Intelli,qmcu 104 (i9YKI 107-164 II5 (a) 0)) (cl (d) in the values of fluents can only be caused by execution of actions; changes there are no actions except those from the language of the domain description: there are no effects of actions except those specified by the causal laws; no actions occur except those needed to explain the facts in the domain description. and (e) actions do not overlap or happen simultaneously. in C. We now in [8], which precisely the semantics of domain descriptions the sets of acceptable conclusions which can be reached from such descriptions These assumptions give an intuitive understanding present specifies and assumptions of domain descriptions in C as defined (a)-(e). 2.2. Semantics of C to causal In L, states of the world are represented by sets of fluents. A fluent belongs to the set in a particular state may add/remove such fluents iff it holds in the state. Actions executed laws. Thus, the set of all possible evolutions of the world described according by the causal laws can be represented by a transition diagram with states corresponding to states of the world and transitions the facts in a domain description consists of selecting a state as the initial one, and a path in the diagram describing the actual evolution of the domain. labeled by actions. Satisfying intuitively A .stute is a set of fluent names. A cuusul interpretutiorz sequences of actions to states such that: (i) the empty sequence, of P ; and (ii) ly is prefix-closed. ’ is a partial function P from to the domain [ 1. belongs P ([ 1) is called the initial state of 9. A partial function IL serves as an interpretation the laws of D. If a sequence cx belongs initial state of 9. to the domain of P, we say that (Y is possible ’ of in the Given a fluent F and a state CT, we say that F holds in CJ (F is true in a) if F E CJ; -F holds in c (F is j&e CJ is defined as usual. in CJ) if F $ CJ. The truth of a propositional formula with respect to the role P plays in interpreting domain descriptions let us define To better understand models of descriptions consisting entirely of causal laws. To this goal, we will attempt to carefully define effects of actions as determined by such a description D and our informal assumptions (a)-(c) and (e). A fluent F is an immediate effect of (executing) A in u if there is a causal law ( 1) in II whose preconditions hold in (T. Let us define the following sets: E:(a) = (F: F is an immediate effect of A in a), ’ By “prefix closed” we mean that for any sequence of actions 01 and action A. if (Y A is in the domain of @ then so is LY, where cx A means the sequence of actions where A follows (Y. ’ In A 1121, laws are interpreted using a transition to atatea. and this function tocgether with the interpretation of the initial state form the interpretation of the domain description. Because of our restricted syntax, we could use this formulation, to stick to the original semantics of L3. which at that time was chosen trigger\ and actions with nondetermimstic effects. function from states and actions future extension\ to accommodate but decided involving E;(a) = (F: 1 F is an immediate effect of A in o ). Res(A. a) = c~ u E,+(a) \ E,(a). The following definition captures the meaning of causal laws of D. Definition 1 (Causul interpretation). A causal interpretation P sati.$fies causal laws of D if for any sequence c~ A from the language of D, P((r A) = Res(A. P(a)), if Ei(P(a)) n E;(P(a)) = Y), 1 undefined, otherwise. We say that v/ is a causd model of D if it satislies all the causal laws of D. Causal models are uniquely determined by their initial values, i.e., for any two causal models PI and Ir/? of a domain description D, if Pt ([ J) = Pz([ 1) then @Y, = Pz. We are now ready to discuss how observations arbitrary domain description and let a causal interpretation interpret So. Sj , Sz, from the language of D. the observations of D we first need to define the meaning of situation constants . from S. To do that we consider a mapping C from S to sequences of actions are interpreted in C. Let D be an II/ be a causal model of D. To Definition 2 (Situation asxigrzment). A mapping C from S to sequences of actions called a situation assignment ofS if it satisfies the following properties: is (ij C(k) = 1 I; (ii) t/s, E S. C(si) is a prefix of C(SN). the first condition ensures Intuitively, condition ensures that have happened so far. Hence. C maps them to action sequences action sequence that all the situation constants that has happened until now, which is denoted by C(SN). in S refer to actual situations-situations that So is indeed the initial situation. The second that are prefix of the Definition 3 (Znterprrtatinn). An interpretation M of C is a pair (P. C), where P is a causal mode1 of D, C is a situation assignment of S and C(S,v) belongs to the domain of I/r. C(&j will be called the actual path of M. Now we can define the truth of facts of 1) with respect to an interpretation M. Facts which are not true in M will be called,fiz/se in M. Definition 4. For any interpretation M = (U. C). (Fat S) is true in M (or satisfied by M) if F is true in P(C(S)j: (i) (ii) (a occurs_at S) is true in M if C(S) (iii) (St precedes S2) is true in M if C(Sr) (Y is a prefix of the actual path of M: is a proper prefix of C($). Truth of nonatomic interpretation M if all its members are true in M. facts in M is defined as usual. Of course, a set of facts is true in To complete the definition of model we need only to formalize assumption descriptions: “no actions occur except those needed to explain (d) on domain the facts in the domain C. Bard rt rd. /Artiji~icd Inrelligencr 104 (1998) 107-I64 117 description”. by imposing following definition. (A similar assumption a minimality condition on situation assignments is used by Pinto and Reiter in [37,39].) This is done leads to the of S, which Definition 5 (Model). An interpretation M = (9, C) is a model of’ a domain description D in C if the following conditions are satisfied: (i) ly is a causal model of D; (ii) facts of D are true in M; (iii) there is no other interpretation N = (p. C’) such that N satisfies condition C’(S,v) is a subsequence” of C(S,v). (ii) and It is important that we are only minimizing the initial situation and the current situation. No such minimization to note the actual action occurrences is done about to avoid the trap of “premature in Section 11.5. The final definition is instrumental for our formalization 1421, which we will further discuss between the future. This minimization” is matter of course. Definition 6. A domain description D is said to be consistent description D entails a fact 4 (written D + 4) iff 4 is true in all models of D. if it has a model. A domain 2.2.1. Hypotheses and their entailment in C Planning from the current situation for an agent in a dynamic environment is necessary where exogenous events may occur; our agent may need to revise its plan and construct new ones starting from the current situation. the the changed conditions make it not effective any more, it no execution of the plan-that longer makes sense for the agent to make a plan from the initial situation. That is because the agent cannot wish away what has already happened. Hence, it needs to make a plan from the situation such plans and also to be able to do counterfactual form: reasoning, C has a construct called hq‘potheses which is of the following In fact, once the agent realizesduring is in. To describe it currently (-IF after [AI.. ., A,,] at Si. Intuitively, the above hypothesis means , A, are executed in S;. Note, that A 1. followed from S;, thus making A 1. that actually S,v. we Just write: (5) that F holds (does not hold) after actions , A, may not be the sequence of actions statement. When Si is this a counterfactual (-)F after [Al.. . , A,]. (6) Statements Intuitively, A 1. reasoning like (61 denote the a’bove hypothesis means situation. the current (does not hold) after actions in S,v. Note that the above construct has a different meaning about plans starting that F holds from . A,, are executed ’ Recall that u = A 1. A, is a subsequence of p = BI it’ there exists a strictly increasing sequence (, _... i,,,ofindicesofPsuchthatforall,i=I . , B,, . ~.wehaveA,=B,~. in the language A. There, it means that F holds (does not hold) after actions A 1, . . A, are executed in the initial situation SO. If y1 = 0, then we write the hypothesis as currently (7) F. (7) Hypotheses are not part of a domain description, rather they are part of the query language. We say a hypothesis of the form (5) is true in a model (q, C) of a domain description D if (7) F holds in ‘P(C(S;) . Al . ..A.,) and, D entails a hypotheses forms (6) and (7) is defined accordingly. if it is true in all models of D. Truth of hypotheses of the We can now define a notion of a plan from the current situation. Definition 7 (Baru, Geljond and Provetti [S]). Let D be a domain description a set of fluent achieving a goal G if D + ,f after ar for every fluent literal literals. A sequence u of actions is a plan from the current situation ,f E G. and G be for We now describe several examples that illustrate the expressibility of the language C, as earlier mentioned in Section 1.2. 2.3. Examples illustrating expressibility of J!Z 2.3.1. Explaining observations First let us formally show how the intuition discussed semantics of C. In that example an observation occurrences, in Example 1 are captured by the is explained by discovering missing action Example 2 (Inferring missing action occurrences). Consider domain description DI from Example 1. By the fact has(car) at S-J we have that has(car) E p (C(S0)). By the causal law sfeal(car) causes -ha.s(car) we have has(car) +! p([steal(car), stea/(car). satisfying Therefore, DI entails steal(car) occurs-at So. . steal(car)]) It is easy to see that C(.SN) = C(Sl) = [steal(car)] for any sequence of one or more sequence is the minimal the facts in the domain description. Thus, C ( SO) steal(car) is a prefix of C (S,v ). Let us now discuss another example where observations are explained by discovering both missing facts (that were not known before). Suppose our agent has the following domain description consisting of some laws and some observations: action occurrences and new fluent shoot causes -1ouded .shoot causes -alille if louded mload causes -loaded t =D2. ulive at So -alive at S1 SO precedes SI Using the entailment some of the features of L. relation of L we can make the following conclusions that illustrate - Missing action occurrences: 02 b .rhoot occurs-at SO. Thus. while explaining action shoot must have occurred at SO. the observation that alive is false in St we conclude that the about the past: the observation that alive is false in St we conclude that loaded - Discor~ering newjhentfacts ubout the current situation: - Discovering ne~Jluentfurts D, + loaded at SO. Thus while explaining must have been true at SO. -loaded. D2 + currently Explaining also to make new conclusions conclude observations - C’ountet$actuul reasoning: not only allow us to discover new facts about the past but In this case, we are able to about the current situation. that the gun is not loaded in the current situation. D2 b alive after unload, shoot at SO. Earlier we concluded would have happened would conclude counterfactual Since this reasoning is counter that is possible reasoning in L. that shoot occurred at SO. If we were now to reason about what if the gun was unloaded at SO and then shoot had happened, we that alive would be true in the resultant situation. This is the type of to what really happened, this is a form of counterfactual reasoning. and we can do such reasoning in C. 2.3.2. Plunning,from the current situation In the following example we use L to show the planning and re-planning done by an from the point of view of an agent the world and adds the observation in a dynamic world. This is very important observes agent architecture where the agent continuously to its domain description, makes a new plan-from and executes part of the plan, records its actions back to observe again. The planning the agent is in at that moment situation. itself or by the environment-since (referred to as the current situation) In fact. the agent can not wish away what has happened-be the current situation-to reach its goal in its domain description, before going in each cycle needs to be done from the situation rather than the initial it performed by the the initial situation. lo “I Note that, given the complexity of planning [ 1 l] such an architecture may not be useful for agents such as mobile robots that need to react in real time-a it may Ml be useful for Internet agents where there is more time to plan. reactive architecture would be more appropriate in that case-but 120 C. Bud rt ul. /Artijiciul Intellipm 104 (1998) 107-164 Example 3. Suppose our agent has the following actions and their effects and the values of fluents in the initial situation. initial knowledge, in terms of the various load causes loaded unload causes -loaded set-target causes target-set shoot causes target-hit if loaded, target-set loaded at SO -target-set at SO = Dhypo. I I the agent’s goal to have the target-hit, it develops the plan [set-target, shoot] by Given checking that indeed &,n b target-hit after [set-target, shoot] the agent proceeds holds. Then, set-target occurs_at S1 and SO precedes S1 to the domain description. updated domain description &,t entails: the first action: to execute .) At this point, the agent’s domain description, &,,I, set-target, and adds (Let us call the currently loaded, currently target-set the next action, however, it observes that the gun is no longer loaded, and its domain description by adding -loaded at S2 and St precedes S2. (Let us call Before executing updates the updated domain description &2.) It concludes that: Dhyp2 + currently target-set, Dhyp2 + currently -loaded, Dhyp2 b [set-target, unload] occurs-at So v [unload, set-target] occurs-at So. The agent then notices that it can no longer continue with its original plan, since Dhyp2 F target-hit after shoot. Hence, the agent proceeds from the current situation SN, rather than from the initial situation, SO. While the initial plan starting from So is still [set-target, shoot], the new plan is [loud, shoot] since to re-planning &,,2 1 target-hit after [loud, shoot] Assuming current plan to reach the goal. that no other untoward incident takes place, the agent can proceed with its 3. Overview of nested circumscription 121 (NATs) is a novel circumscription the circumscription must be done with Theories Nested Abnormality introduced by Lifschitz [24]. With NATs it is possible each with respect to only parts of the theory of interest, as opposed to previous where underlying multiple circumscription of blocks. A block is characterized by a set of axioms A 1, . . . , A,-possibly the abnormality Ct. predicate Ab-which , C,,. The notation for such a theory is all the complications in a theory are avoided theory. Furthermore, axioms a set of predicate/function to circumscribe “describe” respect arising from to all of the axioms the interaction in the of in NATs with the introduction containing constants [25,30] technique several predicates techniques (Cl. . , cm : AI,...,&], where each Ai may itself be a block of form (8). The “description” block may depend on other descriptions between circumscription in embedded blocks. in different blocks Interference predicate Ab with an existentially “local” role, i.e., the interesting The next section contains to the block where it is used, since abnormality consequences the formal definitions of this concepts. quantified variable. Lifschitz’s is prevented by replacing a idea is to make Ab predicates play only an auxiliary of the theory are those which do not contain Ab. (8) of Ct, . . . . C, by a 3. I. Syntax and .semantics of NATs The following definitions are from [24]. Let L be a second-order language which does not include Ab. For every natural number k, let Lk be the language obtained by adding the : AI, . . . A,) is a block if each Cl, . . , C, k-ary predicate constant Ab to L. {Cl. . . , A, is a formula of Lk or a block. is a predicate or a function constant of L, and each A I, A Nested Abnormality Theory is a set of blocks. The semantics of NATs is characterized , C, by a mapping cp from blocks stands for the universal closure of A, otherwise into sentences of L. If A is a formula of language Lk, cpA (P(CI. . . . . C, : AI. . . . . A,) = (3ab)F(ab), where F(Ab) = CIRC[cpA1 A . A cpA,; Ab; Cl. , C,,] that CIRC[T; P; Q], means circumscription of the theory T, by minimizing the Recall predicates in P, and varying the objects in Q. For any NAT T, VT stands for {VA 1 A E T}. A model of T is a model of VT in the logic. A consequence of T is a sentence 4 of language L that is true in sense of classical all models of T. In this paper, as suggested in [24], we use the abbreviation ]CI,....C*, min P:Al,....A,) to denote blocks of the form (Cl,. ., C,,. P : P(x) > Ah(x), Al.. ., A,,). As the notation suggests, this type of block is used when it is necessary to circumscribe a particular predicate P in a block. In [24] it is shown that V(CI....,C,, minP:Al....,A,,} is equivalent to the formula CIRC[A, A...AA,,: P:Cl...., C,j,] when each A; is a sentence. 4. From domain descriptions in C to NATs We are now ready to present our translation from C to NATs. We will start by formally describing some rather typical relations on sequences which we will use later in our proofs. 4.1. Relations on sequences in are prefix, subsequence The relations we are interested and concatenate. These rela- tions are captured by the NAT blocks B,,retiX_eq, &ubSeqUencr, and Bconcatenate, respectively, which are presented important in models of the theory described prefix relation which will be denoted by 5: instances of these relations are included the sections. Let us start by defining in a later section. Given the formal description of these relations, to ensure that all and only the intended in the following it is A,, o...oAl 5 B,, o...o B1 +Vi.i <n. A; = B;. where above and in the rest of this section by *‘=” we mean syntactic relation we need to describe is subsequence: identity. The second A,,o...oAl <<B,,,o...oB] ~~~Vi.Ai=B,,;,r\li~,jj~(i)~~(j)J. Relation << formalizes the elements of (II, in the same order, but it may contain more elements. This relation defined by block Bsubsequence in the theory. the notion of subsequence: if a << B then intuitively fi contains all is The third for dealing with sequences corzcatenate sequences of actions in reverse, i.e., a . fi = pa: relation needed is concatenation. We will (A,oA,,_~o~~~oA~)~(B,,,~B,,,_~~~~~~B~) = B,, o Bnlpl o... o Bl oA, oA,,_~ o...oAl. Block &oncatenate defines this relation. 4.2. The target language The language of the theory T is many-sorted from the standard situation calculus. The sorts are: actions, _/bents. .situations and sequences. The variables letters u. ,f’ and s, respectively, unless otherwise stated. Variables for sequences will be denoted by possibly for the first three sorts will be denoted by possibly and borrows much notation indexed C. Bard et al. /Art$cirrl Intrllipnce 104 (1998) 107-164 12.3 letters CX, ,6 and y. The language indexed Greek constants, of F as fluent constants, sequence constant E which stands for the empty sequence. includes and S as situation constants. the elements of A as action the It also includes Sequences of actions are defined by means of a function o from sequences and actions to sequences. Sequences of actions are then constructed by multiple application of the to the Res function widely function o. We will use infix notation for o-given used in situation calculus-and is an example of a sequence: ignore parenthesis without ambiguity. The following its similarity A,, oA,,_~ o...oA1 OE. In addition to o, we have the following function and predicate constants: - Sit_mup: a function _ Prejix_eq(u. that maps situations into sequences; /3): both arguments of sort situation, this predicate captures relation 5 on sequences, i.e., (Y 5 /I; - Subsequence(cr, B): captures relation <, - Holds(,f. a): with sorts fluent and sequence, meaning i.e., (Y < B; resulting from executing ac in the initial situation; that ,f is true in the state _ Concatenate(a, - Cuu.ses+(-‘(a, /!I, y): captures relation f, CY): with sorts action, fluent and sequence, meaning on sequences, i.e., y = o . j?; that executing a in the state resulting from executing ac in the initial situation makes f true(false). 4.3. Framework axioms To yield the expected results, the theory includes a set of extra axioms which represent (b): “there are the domain-closure no actions except those from the language of the domain description”. Also unique-name assumptions assumption of C theories, and in particular assumption for actions, fluents and situations are in the theory. (VU).N = /1. I v . . . v u = A/. (Vf’).f‘= FI v . ..v f = F,,,, (vs).s=s~v~..vs=sp/. lJMA[actions]. UNA[fluents]. UNA[situations], (Vu. a).& # a 0 a, (V~l.h,(~~,P).noa=boB>a=bAcr=B, where UNA(sort) is the standard set of inequalities between each distinct pair of constants from sort, e.g., UNA[situations] stands for SO # S) , S1 # S2. . . etc. In the rest of the paper we will refer to the above sentences as Framework uxioms. 4.4. Trunslation of.fucts Atomic facts are translated as follows: (1) F at S 3 (-)Holds(F, Sit-map(S)) a occurs_at S * (3~).Concutennte(Sit_mup(S). U, fi) A fWix_eq(B, Sit_mupP(SN)) Sl precedes S2 =+ Prefix_eq(Sit_mup(SI ), Sit_mup(S~)) A -Pre~~_eq(sit_mu~(S2), Sit_mup(S~ )) facts are translated Nonatomic denote its translation. For the collection of facts Df formulae t (4) for each 4 E DJ. will be denoted by' t (D f ). in the obvious way. For any fact C#I, we will use r(4) to in a domain description D, the set of 4.5. The resulting NAT We now present our translation of domain descriptions in C into NATs (universal quantification with the highest scope is implicit on free variables): T(D) = ( Sit-map : (a) Sit_mup(So) = E (b) Prefix_eq(sit_mup(s), Sit_mup(SN)) (c) Subsequence(a. sit_mup(sN)) 3 Ah(a) t(Df.1. SC(D/) Bpretix_eq. ~subsequence~ B concatenate Framework axioms where: SC(D/) = I -Cuuses+(a. f. (-u) A -CUUS~.S-(u. ,f, (u) > [ff~h(,f. ~1 G Hd+(f; u oa)l Causes+(u. .f, cx) > Holds(f, a O(Y) Causes-(a, ,f. w) > -Holds(,f. a o (-u) ( min Causes+ : H(Pl,a)r\...~H(P,,w)>Causes+(A.F.w) (for each A causes F if PI. Pn E D) ( min Causes- : H(Pl,cx) A...A H(P,,,(Y) 3 CausesP(A. F,a) (for each A causes -F if PI . Pm E D) C. Baral et al. /Art&in1 Intelligence 104 11998) 107-164 12s In the above translation, for a negative fluent literal -G, H(-G, in the form used above comes originally for a positive fluent literal F, H( F, a) denotes Holds(F, a); while -Holds(G, a). Predicate Causes+(~’ [24]. (II) denotes from Lifschitz &lrefix_eq = (min Prejk_eq : Pre$x_eq(a, a> Pre$x_eq(a, B) 3 Prefix_eq(a, a 0 19 1 B subsequence = (min Subsequence : Subsequence(cx, cx) Subsequence(cx, ,!3) > Subsequence(a, a o B) Subsequence(cx, fi) > Subsequence(a o (2, a o 8) B concatenate = { min Concatenate : Concatenate(a, e, LY) Concatenate(cz, p, y) 3 Concatenate(a, a 0 /3. a 0 y) I Let us now compare the axioms of T(D) with the definitions - The blocks Bprefix_eq, B subsequence and Lmtenate define and Concatenate, Subsequence respectively. The axioms are definite clauses and in the appendix we use results indeed they are a correct representation of their corresponding in the section on semantics. the predicates Prejix_eq, inside each of these blocks from [25,29] to show that relations. - SC(Dl) is the part of T(D) most similar to standard situation calculus and captures the meaning of causal laws. Models of SC(Q) to the causal models of D. (We show this in Section 7.) Inside SC(Di) we have two blocks that minimize the (c) they encode the informal assumption predicates Causes+ and Causes-. in Section 2.1, saying that there are no effects of actions except those specified by the (a) causal laws. The first axiom of SC(Dl) encodes the frame axiom-the in Section 2.1, as a first order statement while the second and the third axioms in SC( Or), encode the effect of actions on tIuents. assumption correspond Intuitively, - The axioms (a) and (b) encode Definition 2 in a straightforward manner. - The axioms in t (Of) encode Definition 4 in a straightforward way. - Finally, (iii) of Definition 5 (which corresponds the minimality in condition (d) of Section 2.1) is encoded by axiom Cc) plus circumscription assumption Intuitively, here minimization through axiom (c) by minimizing Ab while varying Sit-map. A discussion on this axiom and the technique of the value of the term Sit_map(SN) follows in Section 5. is accomplished it exemplifies to the of Ah. - Before moving on, let us quickly review how the various informal assumptions in Section 2.1 are encoded (d); assumption that assumption described assumptions (a), (c) and work axioms”. Verifying slightly more and B occurs-at S, are tion S. As a result, Concatena~e(Sit_mu~(S), Concatenate(Sit_map( /3. It is not hard to prove that this implies A = B. suppose in D, involved: in our NAT. We already discussed (b) is captured (e) is captured by the the “Frame- is translation is a situation S s.t. A occurs-at S at situa- through the concurrently that i.e., A and B occurred there A. u), Prejx_eq(cr. Sir_map(S~)), S), B, /?) and Prejix_eq@, Sit_mUp( SN)) hold for some w and 4.6. Translation of hypotheses Even though hypotheses do not appear in domain descriptions, we define a translation so that we can check whether they are entailed by the NAT theory. For hypotheses of the form (.5), the translation, ~((7) F after [A 1, . . , A,] at Si), is defined as follows: (3~).Concatenate(Sit_mup(S;), A, 0. .. o A1 o E. B) > (-)Holds(F. ,B). (9) 5. Value minimization of functions criterion In [6], we introduced the concept of value minimizing a function. That is, forcing a to map the elements of its domain onto minimal elements of its range, where the function minimality is with respect to an arbitrary partial order defined on the range. This is completely different from all earlier formulations of circumscription where function and predicates (or formulas) were allowed to vary but only the latter could be minimized. this applies technique. the value of function Sit_mup on term S,v, with respect to the partial order on sequences defined by predicate Subsequence. Therefore, this forces Sit-map and all the axioms remain satisfied. Intuitively, this is an instance of “term minimization”. to map SN onto the “minimal” possible sequence such that the facts of narrative (iii) of Definition 5, we minimize In order to capture condition As we mentioned our formalization introduction, the in By using the syntactic definition of value minimization with respect our application, we can express the minimization let T3ubseq stand for T(D) minus axiom (c), and let Ttubseq((;Y) denote Tsubaeq A Sif_map(SN) = (Y, for an arbitrary sequence (1~. Term Sif_mUp(SN) is minimized with respect to Subsequence by postulating: of Sit_mup(SN) as follows: (‘Ja).Tsubse&) 1 (va’).(&ubaeq( (11’ A u se uence(cll’, cz)) > Subsequence(a, s b q ) cry’). (10) In [6] we show that value minimization of a function C$ in a theory T with respect to an ordering R (which itself is defined in a block inside T) while varying the predicate/function constants 2, can be achieved by the following NAT: (4, z: (V-x, ~1. WY. 4(x)> 3 Abb, ~1 T C. Baral et al. /Artijicial Intelli,~enw 104 (1998) 107-164 127 Moreover, becomes: to minimize 4 at only one term (T, the corresponding NAT characterization (4.2: By applying this result and observing and cr is SN. we obtain the following NAT characterization that in our case 4 is the function Sit-map, R is of the predicate Subsequence, the Formula (10). (Sit-map : (VP). Subsequence(y, Sit_map(SN)) 3 Ah(J) Tsubseq This is exactly our translation T(D) 6. NAT characterization of some simple domain descriptions In this section we illustrate our NAT characterization of domain description in C through some examples. Example 4. Consider again the domain description Dt from Example 1, the translation corresponds to I Hc&iIs(has(car), Sit_map(&)) +folds(has(car), Sit_mup(Sl)) T(Df) = ’ Prejix_eq(Sit_map(So), Sit_map(Sl)) /\ +VeJix_eq(Sit_map( SO). Sit_map(Sl)) and the sub-block of SC(Dt,) defining Causes-: (min Causes- : Causes-(steal(car), has(car), (Y) which is equivalent to (Vu, f; ac).Cuuses-(a, f, cr) = a = steal(car) A .f’ = has(car). (11) The sub-block defining Causes+ From stea/(car) (11). this, the axiom Causes-(a, is empty, i.e., Cau.ws+(a. f. a) > -Hol&(J; f, a) is false for all a, f, cx. that a o a), and the fact is the only action in our language; it follows that for every sequence B, +fold.~(has(car), B) iff p = steal(car) 0 (Y, for some cr. 128 C. Bard et al. /Artijicial Intelligencr 104 (1998) 107-164 -Holds(has_car, From sequence 01. By value minimization and axiom (b), Sit_mup(S))) we have Sit_mup(S)) = steal(car) o Q! for some Sit_mup(SN) = Sit_mup(Sl) = steal(car) 0 c and from this and the blocks Bconcatenate and Bprehx_eq we get that Concatenate(Sit_mup(So), steal(car) 0 6. steal(car) 0 E) and Pre$x_eq(steal(car) 0 e, Sit_mup(SN)). Hence, r (steal(car) occurs-at So) holds. We now consider a slightly different example where by using the observations we can “abduce” new truth values of fluents. Example 5 (Abduction ofjuent-values). Consider another scenario where there is a gun that causes Fred to die if fired at him when loaded. Suppose we know that Fred had been observed to be alive at some moment of time and to be dead at a later moment. Description D2 below captures this scenario: shoot causes -alive if loaded. I D2 = I alive at SO. -alive at Sl, I So precedes SI . Let us consider sub-block defining Causes+ is empty we have the corresponding NAT, T(Dz), starting from the inner blocks. Since the (Vu, f, a).-Cuuses+(u, f. a). (12) The sub-block defining Causes- contains only the axiom Holds(loaded, a) > Causes-(shoot. alive, a). By minimization of CuusesP in this block we obtain. (Vu, f, w).Cuuse.sP (n% ,f. a) = (u = shoot A ,f’ = alive A Holds(loaded, a)). (13) includes Holds(alive, Sit_mup(So)) and -Holds(alive, Sit_mup(Sl)). Let us Now, t(Df) reason about the value of the fluent loaded in the initial state. There are two cases: false (-HoZds(loaded, and since there is no action (a) Loaded was initially that E)) affects this fluent, loaded, a), we have that i.e., for all a, (Y, -Cuuses+(a, loaded, o) and +Zauses-(a, (Vu)-Holds(loaded, cx). From this and (13) it follows that (‘da, ,f, w)-Cuuses-(a. f, a). (14) (15) C. Baral et al. /Artijicial Intelligence 104 (1998) 107-164 12Y From the fact t(alive at SO) and axiom (a) we obtain Holds(alive, E). From this, ( 12), ( 15), and axiom -Cuuses+(a, f, a) A -%~-(a. f: a) > [Holds(.f. a) = Holds(,f, a o a)] (Vw)Holds(ulive. a). However, Sit_mup(SI)). we conclude that have yHolds(alive, assumption of loaded being initially The other possibility From (13) this implies that Causes- (shoot, alive. E) and by axiom This false is ruled out. is that loaded was initially is a contradiction, from fact (b) -alive therefore at SI we the initial true, i.e., Holds(louded. E) holds. Causes-(a, f, a) > -Holds(f, a o w) we obtain -Holds(ulive, St and SN are mapped into sequence shoot o E satisfies r (D.f ) and minimization Sit_map(SN). the theory and that it entails r (shoot occurs_at SO). shoot o E). Clearly, an interpretation of Sit-map such that of is the only model of It remains easy to prove that this interpretation 7. Correctness of the NAT formalization In this section we formulate the results about the correctness of our NAT formalization in C. In the process, the language with additional and causal models of D. This between models of SC(Dt) of our NAT formulation; for a domain description D, we show the of domain descriptions the equivalence later, (in Section 9) we discuss how this allows modularity by only features, such as constraints, us to easily extend replacing SC( 01). The proofs of the lemmata and the theorem of this section are given in the appendix. Throughout the paper, we will use (Y. B to denote sequences both in the context of the if c~ stands for a sequence with , A,, we may write Holds(F, a) u F E P(a) meaning Holds(F, A, O...O semantics of L and its NAT formalization. For instance, actions A 1, AI 0 E) + F E ‘P([AI, illustrates . . , A,]). The equivalence of SC and 9 is first proved under the assumption that ly is defined in Section 8 when concurrent for every sequence of actions. actions are considered. ’ ’ This restriction is removed Proposition 1 (Causal equivalence). (1) For evev cuusul model P of Dl there exists a model Msc (8 SC(Dl) U Framework Axioms such thutfor all F,a: F E ‘P(a) + Msc + Holds(F. a). (16) (2) For every model Msc qf SC(Dl) there exists a cuusul model W of Di such that (16) holds. ’ ’ This conditions and A causes -FifQl,..., is satisfied by disallowing contradictory Q,aresaidtobecontradictoryif(Pl..... causal labs; two axioms A causes F if PI , . . . . . Q,)=ti. P,,]n{Qt , P,, Proposition 2 (Equivalence of models). For uny domain description D, tithe tion (P, C) is a model qf D then there exists a model M of T (D) such thatfor eveyfuct C/I in the language qf D: interpretu- (9. C) kr. 4 * M I= 7(4) (17) and if M is u model of T (D) then there exists a model (P, C) qf D such that (17) holds. Proposition 3 (Equivalence). ?fD: For any domain description D and fact 4 in the language following The hypotheses. proposition shows the correctness of our theory with respect to Proposition 4. For uny domuin description D and hypothesis 4 in the lunguage qf D: D t~=r. 4 + T(D) k t(4). 8. Narratives with concurrent actions reasoning about concurrent In this section we consider that the informal assumption actions (e) of Section 2.1 is weakened tives.This means concurrent contemporaneous ping actions. The semantics of C is extended consider concurrent actions consisting of the simultaneous basic actions with noncontradictory rent actions with the extended semantics as C,. together with narra- to allow overlap- actions. We will only execution of a finite number of treatment of concur- setting see, e.g., [3] and [28]. We will refer to the language actions. Still, we do not allow noncontemporaneous effects. For a more sophisticated to allow concurrent in a nonnarrative 8. I. Extended semantics Concurrent actions will be characterized by finite nonempty sets of basic actions. Let the changes that are required us consider in the semantics of L to account for concurrent actions. First, we need to redefine what the effect of an action is since we now have a more general notion of action. Since a singleton concurrent the same as basic action A, from now on by action we will mean concurrent action. action {A] is basically We say that a fluent F is an effect of an action A in a state cr if there is an action B E A such that F is an immediate effect of B in (T. Furthermore, we replace the definitions of sets E:(a) and Ei(a) with the following: E:(a) = (F: F is an effect of A in a), E,(G) = (F: -F is an effect of A in a). We will also need the following notions. Let a = [Al. say #l is embedded in c~ (written as /? C: a) if Bi C Ai for each i. Intuitively, , Ak] and B = [Bt , . . , Bk]. We /-l c 01 means C. Baral et al. /Artijcial Intellipm 104 (1998) 107-164 131 that we can obtain B from CY by removing some basic actions from each (concurrent) action in the action sequence CX. Furthermore, we say that /I is an embedded-subsequence (Y of y such that /I is embedded assignment, interpretation, need to modify Definitions 4 and 5. in w. The definitions of causal and consistent domain description of )/ if there is a subsequence situation the same. We only interpretation, remain Definition 8. For any interpretation M = (P, C): (i) (Fat S) is true in M (or satisfied by M) if F is true in Iy(C(S)); (ii) (a occurs_at S) is true in M if there is /I such that C(S) . B is a prefix of the actual pathofMandac!I. (St precedes ST) is true in M if C(St ) is a proper prefix of C(&) (iii) The above definition differs from its counterpart Definition 4 on point (ii), where truth of action occurrences is defined for concurrent actions. Definition 9. An interpretation M = (P/. C) will be called a model of a domain description D in C if the following conditions are satisfied: (i) 9 is a causal model of D; (ii) facts of D are true in M; (iii) there is no other interpretation N = (P, C’) such that N satisfies condition C’(.SN) is an embedded-subsequenceof C(S,v). (ii) and This definition differs from Definition 5 on point (iii) where the minimality condition is now in terms of the relation embedded-subsequence. 8.2. Translation into NATs Let us now modify the NAT translation of Section 4 to accommodate the semantics OfC,. In our translation, we will use sets to represent concurrent actions. We will not, however, I2 For but assume sets and actions we introduce a new sort called c-actions. Function o will now be of axiomatize concurrent sorts c-action x sequence H sequence. Some new predicates will be introduced below. their operations their standard interpretation. We need to change the sub-theory SC(Dl) to capture the effects of concurrent actions. The kind of concurrent actions considered here are such that they inherit the effects of their constituent actions. Thus, we include f. a) f. ac), both with arguments of the sorts, c-action, and one defining predicate fluent and sequence, two blocks, one defining predicate Znherits+(a, respectively: Inherits-(a, (min Inher& : b E a A Causes+(h, ,f, a) > Znherits’(a, f, CY) ” For a formulation of LC in NAT without set theory, please see http://cs/utep/edukhitta/papers/L-NAT-ext,ps, 132 C. Bard et al. /Artificial Intelligence 104 (19%‘) 107-164 The block for Inherits- is that concurrent action a inherits after (Y is executed. is defined similarly. The intuitive meaning of Znherits+(-)(a, the effect f (-f), from its sub-actions, f. a) in the situation We also add the following block defining the predicate Undef characterizing action sequences where the causal interpretation @ is undefined. (min Undcf : Inhrrits+(a, f, a) A Inherits-(a, f, a) > Undef(u o a) Undef (a) > Undef (u o a) Next, we replace the first three axioms of SC(Q) with the following axioms: -Znherits+(u. f. a) A -Inherits- (a, f, a) > [Holds( f, a) = Holds( f, u 0 a)], -Undef(a oa) ~lnherits+(a, f, a) > Holds(f, a ecu). -Undef (a o a) A Inherits-(a, f, a) > -Holds( f, a o a). Next, we add a new block, &bed&d, at the same level of neSting as blocks defining Bprehx_eq etc., which defines Embedded, with two arguments of sort sequence: &bedded = (min Embedded : Embedded(E, E) [a E b > a E c] > Embedded(b o E. c o E) [Embedded(b o E, u o E) A Embedded@, a)] > Embedded(b o B, u o a) I The new ordering embedded-subsequence terms of the relations Embedded and Subsequence in the following block: is captured by predicate Embsubseq, defined in B embaubseq = (min Embsubseq : Embedded(w, /3) A Subsequence(B, y) > Embsubseq(w, y) I At the top level of nesting we add the following axiom -Undef (Sit_mup(S~)) which restricts actual situations T(D), because our restriction on D not to allow contradictory the causal interpretation P was defined for all action sequences.) to be mapped onto defined states. (We did not need this in that causal laws guaranteed C. Bar-al et al. /Artijcial Intelligence 104 (1998) 107-164 133 Finally, Sit_map(SN) is now minimized with respect to the partial order Embsubseq by replacing axiom (c) with axiom Embsubseq(w, Sit_map(SN)) > Ah(a). (18) We will denote the new theory by Tc and the modified block SC by SC,.. T,(D) = [ Sit-map : -Zhtdef(Sit_map(SN)) (a) Sit-map ( SO) = 6 (b) Prejx_eq(Sit_mup(s), Sit_map(SN)) (c’) Embsubseq(cr, Sit_map(SN)) > Ah(a) t(Df), SCc(Dt) Bpretix_eq3 B subsequence3 B concatenate, B embedded 3 B embsubseq Framework axioms where: :C,.(Dt) = -Znherits+(a, f, a) A -Inherits-(a, f, a) > [Holds(f, U) = Holds(f, a o cr)] -Undef (a o a) A Inherits+(a, f, a) > Holds(f, a o cz) -Undef (a o a) A Inherits- (a, ,f, a) > -Holds( f, a o a) ( min Causes +(-I . . H(Pl,w) A...A H(P,,a) > Causes+(-)(A, F.cr) (for each A causes (1) F if PI. . . , P, E D) I (min Inherits +(-I . . b E a A Causes +(-) (b, f, a) > Inherits +(-)(a, f.cx) I {min Undef : Znherits+(a, f, a) A Znherits-(a, ,f, a) > Undef (a o a) Undef (a) > Undef (a o a) 134 C. Bard etal. /Arfificial Intelligrncc 104 (1998) 107-164 The translation of facts from D is the same except for occurrence facts; let 5 (a occurs-at S) stand for: (I/3, y).Embedded(a, #I) A Concatennte(Sit_mup(S), b. y) A Prejix_eq(y, Sit_mup(SN)). We now state the correctness of our NAT formulation of Cc with propositions those in Section 7. The proofs are given in the Appendixes A and B. similar to Proposition 5 (Causal equivalence). (1) For every causal model P of Dt there exists a model Msc, of’SC,.(Dt) such that for all F, CX: F E ‘P(a) + Msc b;r. Holds( F. a) and *(c-r) is undejined ej Msc /= Undef(ac). (19) (2) For every model Msc of SC,(Dt) there exists a causal model W of Dt such that ( 19) holds. Proposition 6. For any domain description D, $ interpretation then there exists a model M qf Tc( D) such that for every,fact 4 in the language of’ D: (P, C) is a model of D (‘~7 C) k=c 4 * M I= ~(4) (20) and if M is a model of’ Tc( D) then there exists a model (W, C) of D such that (20) holds. Proposition 7. For any domain description D andfact 4 in the language oj” D: Example 6. Consider a scenario where there are two guns which cause Fred to die if fired at him when loaded. Suppose all we know is that initially either gun was loaded and that both were fired at him. The following domain description captures this story: shoot( 1) causes --alive if loaded( 1) shoot(2) causes -alive if loaded(2) alive at SO ) = &un\ (louded( 1) at SO) v (louded(2) at SO) (shoot( I ), shoot(2)} occurs-at SO It is easy to see that Dguns entails Talive at SN. C. Baral et al. /Arti$cial lntrlligence 104 (1998) 107-164 135 9. Further extension of C-allowing actions with indirect effects In this section we discuss how the NAT formalization of C can be easily extended constraints, and axioms ubout e.recutability of actions. Giunchiglia to allow ram$cation et al. [ 15,221 introduced features the high-level (and some additional ones, such as actions with nondeterministic effects) with nonpropo- sitional fluents, but in the absence of narratives. They then give a formulation of temporal to projection problems to a causal boolean fluents, model P for an extended con- ditions and non-deterministic then we can say that their NAT characterization language AR with the above mentioned in AR using NATs. Essentially. that allows ramification constraints, their formulation if we restrict executability corresponds language effects. Since NATs are nestings of independent blocks. we can replace the SC(D/) part of the the causal model of our original but restricted language. of an extension of C where constraints NAT T(D) of Section 4.5-that language, by a new theory Moreover, the resultant NAT gives a characterization and executability the causal model of the extended conditions are allowed. that captures characterizes We now present the syntax of (ramification) constraints, and executability conditions and touch upon how their addition to C necessitates some changes in the semantics. Constraint are of the form always c’. (21) where C is a propositional fluent formula. Intuitively, a constraint always (in-lake > wet) asserts that if someone is in the lake then he/she is wet. The semantics of L extended with constraints is defined by requiring Res(A, a) to be the set of valid states closest (in the sense of set difference) and do not contain any element of Ei(a))-where and requiring @ (01. A) to be an element of Res( A, !P (cr)). This guarantees the constraints; that for all a, either C holds in P(a) or *(01) is undefined and captures the indirect effect of actions due to constraints. condition valid states are states that satisfy all to B which contain E:(a) An executability is of the form impossible A if Q 1, . . , QI1, (22) where Q I. . , Q,? are fluent literals. From the semantics point of view, a proposition of this type is satisfied by a causal interpretation . . Q,! are satisfied by @(a). For instance, 9 if P (a . A) is undefined when Q 1, impossible get_out_qf_the_lake if -in-lake means in-lake that it is impossible is false. to execute the action get_out_of_the_lake in a state where 136 C. Bard et al. /Art$cial Intelligence 104 (1998) 107-164 We are now ready to discuss the theory, T + obtained the transition from T (of Section 4.5) by in the presence of function P replacing SC with SC+ which encodes constraints and executability conditions. We now present the theory SC+: scf = (h) volC (for each constraint (21)) (i) Holds* (f, a o a) = HoZds(f, u o a) {Holds* : (i) -Undef(a o a) A -Ab(f, a, a) > [Holds(f, (II) = Holds*(f, a o a)] {Holds*. min Undef : (k) H(Pl,cx)~...r\ H(P,,,a) A -Lhdef(A o a) > H*(F. A o a) (for each causal law (1)) (1) H(QI.u) A... A H(Q,,.cx) II Undef(Aoa) (for each proposition (22)) (m) Undef(a) > Undef(u o a) (n) v,*,,C (for each constraint (21)) I where, v~C stands for the universally replacing each fluent literal F by H (f, a). Note also that: closed formula obtained from a constraint (21) by - SC+ is a slightly modified and simplified version of the main part of the NAT in [ 15,211. The main differences are: our use of boolean if part of (1) and ones as in [21] and our use of conjunction (22) and in the causes part of (1) instead of fluent formulas, as in [21]. We make these for simplicity, and to stay as close to C as possible, while still being able restrictions to make our point about easy incorporation of constraints and executability conditions into Cc. fluents instead of nonboolean of fluent literals in the _ The outer block of SC+ encodes Res(u, a), for all actions a, and for all states o that are mapped to by some action sequence. While o is encoded using Holds, Res(u, a) is encoded using Holds*. The inner block defines which actions are undefined (or not executable) The reason behind having two different predicates Holds and Holds* and only varying the latter when minimizing Ab is to individually minimize the difference between o all such differences as a whole. The latter and Res(u, a) without globally minimizing being ruled out. precludes many models and may result in which state. interpretations in intuitive C. Baral et al. /Artt@ial Intelligence 104 (1998) 107-164 137 the example where we have a causes f if p and always -f in our domain Consider description. in SC+ by Holds. Then minimizing Undef while varying Holds in the inner block would result in -Holds(p, CY) being true in all models of the inner block. This is prevented by using separate Holds and Holds*. If we had replaced Holds* - Although at first glance it seems that only (1) and (m) are necessary in the inner block, that may arise because as it might happen is constrained to specify undefined action sequences (k) and (n) are needed interaction between effect axioms and constraints, of the possible to have P initially when the domain i.e., if we have always -(f A g) Note that our constraints are meant for ramifications; and a causes ,f, then application of a in a state where g is true (directly) makes f true in the resulting situation and (indirectly, because of ramifications) makes g false in the resulting state. On the other hand, if we have always -(.f A g), a causes f and a causes g if p, then a is not executable and (n) in the inner block. in any situation where p is true. To capture this we need (k) true. - Axiom (j) encodes the law of inertia. - Axiom (h) restricts all states to be valid, making sure they satisfy all the constraints. _ Axiom (i) relates Holds and Holds*. Once the minimizations are done appropriately in the inner and outer blocks, axiom (i) selects only those models where Holds and Holds* agree. - Another difference between SC+ and the corresponding theory in [21,22] is that in our case the second argument of Holds is a sequence of actions while in the other in our language are mapped ones it is a state. This is because all situation constants in [21,22]. there is no such requirement onto a sequence of actions; - Finally, although we did not discuss allowing indeterminate be can A possibly_cbanges easily incorporated. An indeterminate F if PI, . . , Pk may be incorporated proposition propositions of [21], they form the into SC+ by adding H(PI,~~)~\...~\H(P~.(;Y)>A~(F.A,~) just before (j) inside the outer block defining Holds*. Although we do not formally between P of a domain description D with constraints and executability state and prove the equivalence the causal conditions between domain descriptions SC+, the equivalence directly the and and the corresponding NATs, with SC replaced by SC+, follows from [21]. Moreover, ,!Z (with constraints follows in the extended interpretation and the corresponding correspondence executability (with slight modifications) conditions) from [21] and the proof of Lemma 2. We would like to stress that the ability of NATs to allow us to treat blocks in a similar in structured programming makes NATs a strong tool for knowledge from This allowed us to take a block the formalization of actions of et al. and “insert” it into our theory with practically no complications. way as subroutines representation. Giunchiglia 10. Filtering and restricted monotonicity in T and T+ To the best of our knowledge, T and T+ are among the largest circumscriptive in the literature, in terms of the number of levels of minimization and filtering theories [44]. in general) testbed examples They are thus good circumscription Section 5 we already discussed how value minimization using NATs in the theory T. In this section we focus on two additional aspects-filtering and restricted monotonicity with respect to T and Tf. of NATs (and In incorporate. [6] of functions was expressed for analyzing in terms of the various KR features the expressibility they IO. I. Filtering The notion of filtering was first introduced by Sandewall in [44]. We define it as follows: Definition 10. Let T be a (possibly nonmonotonic) of sentences the models of T that are first-order models of Q. in first-order theory and Q (an observation) be a set logic. By Filter(T, Q), we refer to the theory whose models are Proposition 8. Filter(T. Q) is monotonic with respect to Q. Proof. Follows directly only decrease the models of Filter( T, Q). q from the definition of Filter(T. Q); adding sentences to Q can 10.2. Restricted monotonicitl injltering The concept of restricted monotonicity was introduced [26]. In this subsection we first recall some of his definitions and then show how filtering and restricted monotonicity are related and how restricted monotonicity by Lifschitz is captured in NATs. [26]). A declarative formalism Definition 11 (Lifschitz is defined by a set S of symbolic expressions called sentences. a set P of symbolic expressions called postulates, and a map Cn from sets of postulates A set of postulates theory T is A E Cn(T). to as a theory; and a sentence A is a consequence to sets of sentences. is referred of a [26]). Let (S, P. Cn) be a declarative Definition 12 (Lifschitz of S be designated A theory T is said to satisfy the restricted monotonicity Pu if, for any sets p, q C PO, as the set of assertions, and a set Pa of P as the set of parameters. condition with respect to Se and formalism. Let a subset Se pCq=-+Cn(TUp)nSocCn(TUq)flSo. In [26], Lifschitz gives several examples of restricted monotonicity and in [ 16,221 Kartha in /l’R and ARa. Here we generalize some of the above et al. prove restricted monotonicity results and discuss the restricted monotonicity that In case of filtering, we can say the restricted property with respect to Q. This follows directly by considering parameters monotonicity as statements of the language of observations, defining Cn( T U p) to be the set {f true in all models of Filter( T, Q) ) and considering So to be the set of all sentences. theory Filter(T, Q) has the j f is associated with filtering in general. C. Baral et al. /Artijicial Intelligence 104 (1998) 107-164 139 Filtering is easily achieved in NATs by means of two blocks representing Q and T: thus in NATs. This is exactly what happens it easy I3 to express restricted monotonicity making in T and T+, respectively. circumscriptive representation reasoning they allow us to encode nonmonotonicity Before moving on to analyze blocks of T and T+, let us say a few more words language. Besides the issue of recent advances about NATs as a knowledge that benefit NATs, NATs are good for [lo] of automated representing knowledge because about certuin aspects, and at the same time guarantee encoding of restricted monotonicity with respect to others. Moreover, nesting allows several levels of filtering. Prima facie, the equivalence of Filter(Filter(T, Q), Q’) and FiZterCT, Q U Q’) may suggest filtering are not needed. On the other hand, often Filter(Min(Filter(T, ordering < before varying PI, Filter(Min(Filter(T. levels of to compute to an that < can be encoded by . P,, and T itself is a NAT, we can represent Q), <), Q’), where we minimize Filter(T, Q) with respect filtering the result by Q’. Assuming Q). <), Q’) by the following: & and minimizing Pk+t , (as in [44]), we need that several Q' ( PI. . . , Pk, minPk+l , . . . , Pn Q T 10.3. Analyzing blocks and sub-blocks of T and Ti - Consider the inner block of SC+. Let us call it B. Inner. Intuitively, this block (among from Holds literals to Undef literals. The axioms (k), refined by the to /I has this function, which of Vndef while varying Holds*. This leaves open the possibility about the successful execution of sequences. So, if sequence other things) encodes a function (l), (m), and (n) partially define minimization add observations succeeded, we can add YUndef (j3) as a new block Bt consisting only of ~Undef(f3), added at the same level of axiom (j). In the NAT B2 consisting filtering Binner by BI and the resultant models are the models of Binner that are also models of B1. Thus B2 is monotonic with respect with respect to addition of causal laws, constraints, or executability of Binner and B1 we are basically to addition of observations to B1 but nonmonotonic conditions, which is further change Binner. - Let us call B,,t,, Holds literals to Undef and Holds* literals. Observations the outer block of SC+, which intuitively encodes a function from about Holds* are put outside I3 Among other knowledge representing hierarchy of integrity constraints. Thus, multiple levels of tiltering are not easily represented as integrity constraints. On the other hand, is easily done representation observations languages, by logic programs do not easily allow a in logic programming in logic programs. filtering 140 C. Bard et al. /Artificial Intelligence 104 (19%‘) 107-164 of &,,, as axioms also, the observations monotonicity property about the observations. (h) and (i) in SC+, and axioms FACTS and (e) in T+. Here theory has the restricted filter the NAT L&,,. The resulting - The block T(D), represents a function literals of predicates At, Occurs, to mappings of the function Precceds, Holds, Subsequence, Prefi_eq, Concatenate Sit-map. Observations by putting them outside T(D). These observations will then filter the models of T(D) and keep only those that agree with them. about the value of Sit-map can be incorporated from in C. We can incorporate - In [8] hypothesis of the form F after a! at S were treated as observations on top of the them to our NAT consisting of T(D), inside that domain description by adding V/3Concatenate(Sit_map(S), T (0). These observations will filter T(D), and select only those models of T(D) agree with the observations. The theory FiZter(T(D), Obs) will thus be monotonic with respect to the hypotheses, while it is nonmonotonic with respect to facts, which are incorporated by changing T(D). /I) to the NAT-not I_X, B) > Holds(F, 11. Related work Until recently there were two distinct directions in reasoning about actions; one based reasoning and planning, and normally consid- on situation calculus which did hypothetical actions, no actions with durations, etc.), while the ered simple actions (i.e., no continuous other (in particular, Allen’s temporal [23]) focused on reasoning with narratives and often allowed actions with durations, and con- tinuous actions, but did not consider hypothetical In the late eighties and early nineties several influential works [ 12,13,4 1,451 have had a big impact in this field, and trig- gered a flurry of new research. Some of these appear in the special journal issues [ 14,271, in the workshops AAAI-96 Workshop on Reasoning about actions and AAAI-95 Spring symposium on Extending Theories of Action, and in the recent AAAI, IJCAI and KR con- ferences. logic [ 11, Kowalski and Sergot’s event calculus reasoning. In general, our work has been languages [3,8,12,16], description using nested circumscription. circumscription acknowledge Sandewall’s and influenced by the approach of using high-level of AR action [16]) In the previous sections we argued why we believe nested and listed some of its features. Also, we formalization (particularly their is an excellent KR language, idea of filtering [44] with which NATs has much in common. In this section we first compare NATs with Sandewall’s then give a detailed comparison of our work with other proposals reasoning; particularly, and hypothetical Miller and Sham&an [35], and Pinto and Reiter [38,39]. those by McCarthy filter preferential entailment and that do both narrative [33], Kakas and Miller [19], 11.1. Sandewall’sjlterpreferential entailment The notion of filtering was first introduced by Sandewall [44] to be able to formally (in terms obtain explanations of conditions about values of fluents at specific time instants. He argued that his approach can also be used to obtain a plan for in terms of action occurrences given action descriptions laws, and observations and effects), physical C. Bard et al. /Artijiciol lntelligrncr 104 (1998) 107-164 141 a specific goal, by considering considering an explanation as a plan that achieves the goal. the goal as an observation which needs to be explained, and Sandewall’s notion of filtering is a general one. The NATs formalism that we use in is used for minimizations. with local this paper is an instance of it, where circumscription abnormal predicates. He motivates action descriptions and natural models of the theory containing appealing to an example in Section 10; Eve show monotonicit?, property with respect to the observutions. involving that by using jltering laws (no observations) action descriptions, a moving object. by observations, natural laws and observations. instead of the by IVe give a diferent justijication theory has the restricted the resulting the intuition behind using filtering of the models of a theory containing formalism Although Sandewall’s [44] considers one of the important aspects of narra- it tives (i.e., explaining values of fluents at different reasoning in presence of narratives and un- does not cover the whole issue of hypothetical like ours it does not have a notion of planning from the current situation, which we have in this paper. On the other hand, Sandewall considers actions with durations, which are not considered time instants by action occurrences), in this paper. 11.2. McCurth~‘s,formulation ofsituution calculus with concurrent events and narratives In this section we relate our work with McCarthy’s draft titled “Situation Calculus with concurrent events and Narrative” we make several quotes from his draft. [33] available - McCarthy says: through his Web page. In our comparison Situations ordered, but the narrative does not include full information in a narrative are partially ordered in time. The real situations are totally about this ordering. We agree with the above statement, but in our formalization of a narrative description this partial rather with partially ordered situations, ordering, each model encodes a possible than having models encoding total ordering of the situations. - He also writes: it is not necessary (even nonmonotonically) that what is said to hold in a situation be a of what was said to hold about a In a narrative, logical consequence previous situation and known common sense facts about the effects of events. . . We want to introduce a concept Nevertheless, of proper narrutive, but it is not clear exactly what it should be. The fluents holding that have been in a new situation reported, except for those fluents that are newly asserted, e.g., [. .] should be reasonable outcomes of the events some narratives are anomalous.. is said to hold in a situation, if something In our formulation, follow from the rest of the description that it must have an explanation. Since this assumption when something occurrences be all explicitly stated in the original description, is said to hold in a situation, it is a logical consequence leading up to this situation. Yet, these action occurrences it may not logically the assumption is part of our formulation, of action need not from the itself, though we incorporate some may be abduced that are made. Of course, a description may have several models, each observations suggesting a different action occurrence. We believe suggests a definition not defined in [33], and in our formulation we require that models of the description encode proper narratives, to not having a unique leading proper narrative results in multiple models of the description. for proper narrative, which is and lack of information that our formulation - McCarthy goes on writing: Perhaps narrative seems easy, since it is not yet clear what facts must be included in a narrative and what assertions should be inferable from a narrative. We hope that in the previous sections we have given a satisfactory answer to this. of actions in a narrative by finer actions and - McCarthy also discusses elaborations sub-narratives; we do not consider informally - McCarthy discusses them here. an interesting example involving narratives. The example has two versions, one consisting of two narratives occurring concurrently and independently, interaction. can be represented representation and another where the same two narratives have a few points of In the following example, we show how the second version of the example is a subset of the in C. (The representation of the second version.) of the first version Example 7 (Glasgocv, London, Moscow and New York [33]). The story is the following: in New York who is stacking blocks. At the same time, there is a person called Daddy there is a person called Junior who is in Glasgow and has tickets for and is traveling from into London, Junior loses his ticket and sends a Glasgow to Moscow via London. Arriving to Daddy asking for money. Daddy then sells one of his blocks to get the money telegram and sends ticket and finishes his trip. then gets the money, buys a London-Moscow it to Junior. Junior Part of a domain description Causal law schemata: in C which captures this story would be the following: Flies(Prsn. X. Y) causes At(Prsn, Y) if AtPprsn. X), Hus(Prsn, tkt(X, Y)) Flies(Prsn, X, Y) causes -At(Prsn. X) if At(Prsn. X). Has(Prsn, tkt(X. Y)) Lose(Prsn, X) causes -Has(Prsn, X) Ruys(Prsn, X) causes Ha.s(Prsn. X) if Has(Prsn. money) Sells(Prsn. blkl) causes Has(Prsn, money) Sells(Prsn. blk2) causes Has(Prsn, money) Sends(Prsn 1. P rsn2, X) causes Sent(Prsn 1, Prsn2, X) if Has(Prsn 1, X) Receives(Prsn 1, Prsn2, money) causes Has(Prsn 1, money) if Sent(Prsn2, Prsnl, money) Receive.s(Prsn 1, Prsn2. tlgrm) causes Rcvd(Prsn1, tlgrm) if Sent(Prsn2, Prsn 1, tlgrm) Stack(Prsn. X. Y) causes On(X. Y) if Clear(X), Clear(Y) 143 Fluent facts about the initial situation: Junior: At@, gw) at SO Daddy: At(ddy. n.v) at Sh Hus(jr, tkt(gw. ldn)) at So -Ha.s(ddx. money) at Sh Has(jr. tkt(Idn. mscw)) at So H~s(ddy. hlk 1) at S{, Has(d&. blk2) at S;, On(hlk1, thl) at Sb On(hlk2. thl) at S;, Occurrences of actions: Junior: Daddy: Flies(jr, gw, Idn) occurs_at SO Stacks (ddy. hlk2, hlk 1) occurs-at S;, Lose(jr, tkt(ldn, mscw)) occurs-at SI Sendstir. ddy, t&m) occurs-at Sz Receives(dd\,, jr, tlgrm) occurs-at S; Sells(ddy. blkl ) occurs-at S; Sends(ddx, jr, money) occurs-at S; Receivestir, ddy, money) occurs-at S3 BuysCjr, tkt(ldn, mscw)) occurs-at S4 Fliesor, ldn, mscw) occurs-at S5 Ordering on situations: So precedes SI SI precedes S2 Sz precedes S3 S.1 precedes S4 S4 precedes S5 S;, precedes S; S; precedes S; Si precedes Si S2 precedes S; Sj precedes S3 144 C. Bard rt al. /Art~fificid Intellipwcr 104 (199X) 107-164 For this domain description, the semantics of L tells us among other that currently At(jr, mscw); and that neither Has(ddy, money) at S;, Hastir, money) at S4, Intuitively, we Si precedes Sh nor S;J precedes SI are entailed by the domain description. occurring simultaneously with few points of interaction. Although have two sub-narratives in reality there is a total order of all the events, the domain description does not entail such an order because it contains only partial information about it. things 11.3. Miller and Shanahan ‘s circumscriptive approach introduced a formalization Their formalization In [35] Miller and Shanahan of narratives using the situation function State which maps calculus and circumscription. our work. Their (constructed using the function Res, an initial situation SIJ and action constants) to our C which maps situation constants requires to sequences of actions. l4 that the domain description of narrative has many similarities (real numbers) their formalization time points However, to situations is similar include all occur- to rences of actions and fluent facts are restricted to be about the initial situation only. of fluent Our approach combinations in our formalization. Our semantics is then more general with respect to the above restrictions. And further, facts are reasoning propositional also allowed necessary in different situations, even if they are not explicitly stated in the domain description. On the other hand, [35] contains discussions on allowing divisible and overlapping actions, which we do not discuss in this paper. regarding occurrences of actions and values of fluents facts and precedence the abductive to make conclusions facts, occurrence incorporates 11.4. Kakas and Miller’s & Kakas and Miller [ 191 have introduced a high-level in their A domain description i-propositions, which are similar to causal laws, atomic occurrence facts in our language. Their time points correspond The major differences between their work and that of ours are: language consists of c-propositions, to situation constants h-propositions and facts, and atomic fluent in our language. language E based on event-calculus. - In our language the ordering between situation constants is part of the domain description while in their language reasoning _ Hypothetical it is rather part of the domain language. two consecutive these A-sequences. These definitions hypothetical to each hypothetical situations; in & is done by defining A-sequences situation, and then defining (which are hypothetical and for a time point the ordering language. action occurrences are added to the domain description. The situation the hypothetical in the domain are included illustrates how we can reason about time points) corresponding between between In addition hypothetical following Res(Shoot, Res(Load, SO)) in 1. _ First the domain (i) (O), (ii) ((WadI)), example language will contain the A-sequences: I4 They do point out that these restrictions can be weakened using abduction. C. Bural et al. /Artijicinl Intelligence 104 (199X) 107-I64 145 ((Iload], load)), ((]load], loud, Ishootl)), and (iii) (iv) (v) ((lloudl, loud, lshootl. shoot)). (i), (iii) and (v) above correspond The A-sequences SO). and Res(Shoot, Res(Loud, SO)), respectively. The A-sequences above correspond and Res(Loud. SO) and Res(Shoot, Res(Loud, So)), respectively. The A-sequences (ii). and (iv) are necessary the A-sequences _ Next the domain (ii) and that the action Shoot happened language will also contain in the A-sequences the following ordering between (ii), and (iv) the situations So and Res(Loud. So). to be able to specify that the action Loud happened to the situations Sn, Res(Loud. to the time point between (iv). the A in sequences: (0) precedes precedes _ Finally, (( Iloudl)) precedes (( Iloudl. loud)) precedes (( Iloudl, loud, Ishootl)) ((I Zoudl, loud, lshootl, shoot)). the domain description will contain action occurrences the domain infinite; also the number of action occurrences will be infinite. However, thus making is infinite, loud happened at (( Iloudl)), and shoot happened at (( lloudl, loud. Ishootl)). It should be noted that the number of 6 sequences language both can be finitely expressed hopefully It seems to us-and in C (as opposed formulation hypothetical reasoning simulating hypothetical is important can be done in a narrative-based in C, in & information _ Unlike in a logical language such as logic programming. it-that the above example to A) that is used for incorporating illustrates (i.e., going from A to C) is much less than that necessary in the narrative based language 1. Nevertheless, reasoning the additional into narratives in it to know, and Kakas and Miller [ 191 show us, how hypothetical reasoning language. about action occurrences this seems very restrictive, (called h-propositions) is they later simulate a notion of explanation in a assumption makes it contradictory. They first start with and then incorporate that restores inconsistency (h-explanation), (our causal laws). In ourformuli~ution we (our atomic to be complete. Although assumed incompleteness by introducing theory where the completeness an explanation consisting of action occurrences an explanation consisting of c-propositions usutne our set of cuusul laws to be complete. Kakas and Miller t-propositions (such t-propositions observations referred in terms of additional terms of both i-propositions h-propositions In contrast, our domain descriptions occurrences, specification of the ordering between thut each model oj' the domuin description are used to restore consistency. allow about fluent values at noninitial to as o-propositions). i-propositions They and h-propositions then consider projection domain descriptions, i.e., those where fluent facts) are only allowed about the initial situation and discuss how to incorporate (such t-propositions time points are referred to as i-propositions), are incorporate (called observations by first explaining i-explanations) (called and then explaining in ih-explanations), where the values of fluents at both initial and noninitial incomplete information situations, about action and a partial is such the situation constants. Ourformulution ,$lls in the missing action occurrences, 146 _ the situation constants. (The ordering between and has a total ordering between points in E cannot be total as it also orders the hypothetical Thus, we incorporate in the object language explanation. Still, we do not allow explanations which we consider as fixed. Finally, we believe that our notions of current situation and planning from the current situation to be very important. These notions are not considered and h-explanation to restoring consistency or meta-level laws, the concept of ih-explanation, itself without resorting through c-propositions/causal i-explanation time-points.) in [ 191. time- 11.5. Pinto and Reiter’s actual and legal situutions Pinto and Reiter in [39] were among the first ones to introduce a time line into situation inherent of situation calculus but time instants. and values of fluents at different reasoning calculus, allowing not only the hypothetical also the expression of event occurrences Their upproach, bused on Reiter’s 1411 solution nonconcurrent actions, and appealed formalization, that lie on the path that describes allows of inferring are not explicitly superfluous actions they minimize the formalism they introduced the possibility the predicate occurs. to circumscription a predicate actual on situations to the frame problem, was restricted to minimize occurrences. to In their situations to C their formalism to characterize the world’s real evolution. Similar but that specified as part of the axiomatization. To avoid inferring occurrence of that explain observations action occurrences from the current situation. Their notion of planning that satisfy a given goal. Because of the minimization in C [8], they do not have the notion of a current situation and I5 then boils down to of occurs in not specified as part of the or not inferable from it, is ruled out; this results in not being able to find new Unlike of planning finding actual situations the actual line, the possible existence of new situations-ones axiomatization situations where the goal is satisfied. Reiter refers to this as the “premature minimization problem” Even though we also minimize this problem, because planning our formalism does not suffer from is only used to define the current situation while [42] and points out that Miller and Shanahan’s is still possible from the current situation. the minimization reasoning) also suffers from it. action occurrences, (by hypothetical formalism concurrent Pinto in his thesis [37] builds up on the work in [39], and discusses many new issues the core of actions and natural events; since to the frame problem, definition of actual, and from [39], his work also suffers from the same actions, continuous the use of Reiter’s solution of occurs, remains unchanged including the approach: minimization problem of premature minimization and inability to make executable plans. In their later work [38,40,42], Pinto and Reiter abandon minimization of occurrences, actual branches”- and in [42] and [38] they allow the possibility of several “hypothetical that restores the whose situations is based on finding a capability @making plans. But even here, their approach to planning legal situation where the goal is satisfied. It is not clear to us if this notion of planning is useful in the scenario of an agent in a dynamic world. The agent does not need a plan from instead of “actual”, are now referred to as “legal” I5 The issue of planning minimization” i\ not directly mentioned in [NI. but based on the discussion in 1421 on “premature and the notion of planning there, it seems that this is what Pinto and Reiter had in mind. C. Bard et al. /ArtQ‘icid Intelligmw 104 (1998) 107-164 147 the initial situation-as from the current one. Pinto and Reiter’s approach would give us; rather, it needs a plan Let us now try to list the major differences between our approach and that of Pinto and Reiter’s. - - - Our approach replaces in a branch in their sense. actual branches” language, C, which is based on a high-level that have both holds and occurs in [37,38,42]. the only restriction on the legality of actions is due to conditions. Thus our branches consist of “legal” situations and are is restrictive compared to that of Pinto and Reiter’s. For example, our domain description does not allow statements in them. Moreover, we do not allow triggers, and natural events, which are considered In our formalism the executability “hypothetical In [38,42] “legal situation” case in our formalism. While all situations situations in a finite line-called at the “current” situation are considered ofactions of premature minimization while minimizing abandon not allow statements itself is an important aspect of our work. We believe-and of in minimizing action occurrences on the description of the evolution of the world up until the current situation. We avoid the problem of “premature minimization” because line”. while they only the action occurrences of carefully minimizing minimize action occurrences without restraint. Our notion of current situation comes in handy. the notion of “actual situation”. Such is not the in our branches are legal, only a finite set of the actual line, from the initial situation and ending the occurrences in this actual line. In contrast, Pinto and Reiter in [37,39] face the problem occurs, while in later work [38,42] they it seems I7 that Pinto in [38] ~Ioes such language .statements about values of jhents at r~oninitinl situations; allowing and abducing to be “actual”. We minimize so do Pinto and Reiter from them in the object of occurrences. Also, I6 minimization in the “actual intuitiveness information [37,39]-on additional the - Pinto and Reiter stay within first-order logic as much as possible. except the induction axiom, and the minimization logic; and later [38,42] all their axiomatization axiomatization is in first-order axiom is in first-order logic. Our formalization here is based on circumscription, and seemingly makes it easier to allow constraints and even actions with uncertain effects together with effect axioms. Pinto concurs and in [38] says: In [37,39] all their of occurs at the end. except the induction An important advantage of the circumscriptive frame problem constraints on circumscription as well as effect axioms. However, is hard to assess. is more general and can be applied approach is that the solution to the that include state the correctness of solutions based to theories ” In [38], Pinto shows how to characterize within the first-order logtcal sequences based on some minimality define particular kind of minimal plans. it is not clear how such minimizations occurrences criteria. Although, in the actual line. as he shows, such a characterization language preferences between action can be used to can be used to minimize action I7 This is based on the remark Pinto makes in the Conclusion extend his work to study the effect of adding statements regarding section of [38], where he says he would like to the value of Ruents at different points in time. In our case since we show our circumscriptive the semantics of the high-level of solutions based on our approach. formulation to be correct with respect to language L; it makes it easier to assess the correctness 12. Conclusion and future work In this paper we discussed the necessity of allowing both narratives and hypothetical language L into nested abnormality of circumscription where values of functions translation of domain descriptions theories. Our translation in the reasoning and presented a sound and complete uses a action description are minimized. We then new formulation that the extended further by earlier NAT translation adding actions with indirect effects, and discussing filtering, NATs and restricted monotonicity. Finally, we give a detailed comparison of our approach with other approaches execution of actions and showed for this case. We continued the relation between the language C to allow concurrent can be easily elaborated in the literature. In the future, we would like to continue on several fronts. In particular, we would like to: that will allow us to discover missing action occurrences based on - Develop algorithms our observations. Also, we would like to explore learning of environment patterns based on the past occurrences and use that information - Carefully extend our language time. continuous the simple ones occurrences, events, explicit beyond conditional us [9] has already participated active databases; but this high-level circumscription. interaction to make future plans. such as natural to allow additional actions. and various kinds of action occurrences occurrences, as non preventable constructs and triggered occurrences. One of in extending C to allow triggers so as to formulate using has not been axiomatized formulation that we have-such eventual occurrences, ~ Introduce the notion of “current situation” and “planning and allow minimization to Pinto and Reiter’s formalism; situations, With these additional notions we would and our circumscriptive comparison axiomatization in [20]. in Section from the current situation” and have separate notions of “legal” and “actual” line. of actions of occurrences in the actual then like to compare on domain descriptions their axiomatization in C, similar to the - Finally. IO we discussed the relation between in general and instances of filtering and restricted monotonicity monotonicity and Tf. We believe reasoning, to further study this issue and identify all instances of abduction discuss under what circumstances filtering and restricted in T that each filtering step in 7’ and T+ also encodes abductive is done in T and T+ through filtering. We need in T and T+, and abduction can be done through filtering. i.e.. abductive reasoning Acknowledgement The authors wish suggestions which greatly the NSF grants IRI-92 11662 and IRI-9.501577. improved to thank Michael Gelfond for their this paper. The first two authors were supported by and the anonymous referees C. Baral et nl. /Artijicial Intelligence 104 (19%) 107-164 149 Appendix A. Correctness of translation T In proofs we will use the following notation: will stand for the set of tuples which belong M. With functions we use to the extent of predicate n in interpretation MUcpll(r) to denote the object which function cp maps t into in interpretation M. In what follows, by a model of a single block or a sub-theory we will mean a model of a block or sub-theory plus the Framework Axioms. Readers who are familiar with logic programming might have noticed and the other relations on sequences defining Pre$x_eq definition of these relations are similar, are analogous useful in logic programming. Our lemmata consider only particular predicates, that the blocks to the typical lemma, and those which [29] which is very to a lemma due to Marek and Subrahmanian in logic programming. The following are very similar though. (23 (24) Lemma 1. Let M be a model of Bprehx_eq. Then, for all a, ar, /I, l8 (a, E) E M [IPre$x_eqD + a = E. Cc~faoB. (~.aoB)EMUPre~~_eqlllJ[(a,P)EMUPre~x_eqlll. Proof. Note that the axioms in Bprefix_eq are definite clauses, ” so their conjunction, which [25. Section 3.51 in Prejix_eq. By is a definite formula we will denote by A(Pre$x_eq), Corollary 3.53 from [25], Bprefix_eq = CIK]A (Pr&-eq); Pre$,x-eql is equivalent to (Vu, B).Prefix_eq(a, B) = (Vp).A(p) 1 ~(a, B). (25) (26) that there is a model M of (25) s.t. M k that o! # E. It is easy to see that the model M’ is is a model of (25). satisfies A(PreJx_eq) that M and in that from M only (a, E) $ M[[Prejx_eqJ that (23) holds. Assume to M. But this contradicts our assumption Let us show Prejix_eq(a, E) for some a. Suppose differing therefore preferable Therefore, a = E. Let us show Prefix_eq(cr, a o /I) for some sequences a # a o 6. Suppose Consider satisfied while A(P) > P(cY, a o ,t3> is not. Hence our assumption Pr+x_eq(a, that (24) holds. Assume fi). Therefore, there that (24) is satisfied by all models of (25). q a predicate P with extent M [IPrejx_eqn \ (a, a o /3). Clearly, A(P) is wrong and M is f= is a model M of (25) s.t. M + that M + -Pre&_eq(a, 8). ‘* Recall that constant F denotes the empty sequence. I9 A clause is said to be definite if exactly one of its liter& is positive. I50 C. Bard et al. /Art$cial Intelligence 104 (1998) 107-164 Lemma 2. Let M be a model of Bpretix_eq and cz, /J be sequences of actions. Then M + Pre$x_eq(c B) ifsa i B. (=k) Let M be a model of Bpretix_eq. We will show that for all ac, B, if M + Proof. Pre$x_eq(cr, B) then cx 5 B by induction on the length of fi. Let n 3 0 be the length of (Y and m > 0 be the length of /I. Base case: m = 0. Then, B = F. Suppose that n > m. Then, a! # E and by (23) we get a contradiction. Thus, n < m. Since m = 0 and n 3 0, we have that n = 0, i.e., CY = B = E. Therefore, w 5 p. Inductive hypothesis: for all B of length m < k and for all a’, if M b Pre$x_eq(a, ,!I) thencr55?. Induction: let a o fi be an arbitrary sequence of length k + 1. Let us show that if /= Pre$x_eq(a, a o fi) then w 5 a o /I. From M + Pre$x_eq(a, a o B) and (24) we that cx 5 p. By M have that M + Prejix_eq(a. definition of 5, CI 5 a o fi follows from CI 5 /J. /I). By the inductive hypothesis, this implies (+) Let M be a model of Bpretix_eq. For all CX, B, if a! 5 /I then, by definition of 5, . . , B, and n 3 0. B = B, o . o B) o CY for some B1, o B1 o (Y) for all (Y. Now, let us show by induction on n that M Base case: n = 0. We need to show M b Prefix_eq(a, a). But this is an axiom of /= Prejx_eq(w, B, 0. Bpretix_eq. Induction hypothesis: for any n < k and cz, M + Pre$x_eq(c-w, B, o /= Pre$x_eq(a, Bk+l o Bk 0. Induction step: we need to show that M o BI o (Y). o B) oa). By the induction hypothesis we have that M + Prefix_eq(a, Bk o o B1 o a). Then, by axiom (Vcr, /3, a).Pre$x_eq(a, fi) > Prefix_eq(cr. a 0 B) of Bprehx_eq, we have that M b Prejix_eq(a, Bk+l o Bk o . o B1 o a). 0 Lemma 3. Let M be a model qf Bsubsequence. Then,jor all a, p, a # 6. (a o LY, b o ,b) E M[rSubsequencel] + (a o cx, B) E M[ISubsequence], (a o (Y, a o /?) E M [SubsequenceJ + (CX. t!?) E M USubsequenceJ. (27) (28) Proof. Similar to the proof of Lemma I. q Lemma 4. Let M be a model of Bsubsequence. Then, for all tx, ,9, M + Subsequence(a, iff cz << B. j?) Proof. This can be proved by induction on the lengths of cx and ,!l in a manner similar to the proof of Lemma 2. 0 Lemma 5. Let M be a model of Bconcatenate. Then, for all a. B, Y, [(a, E. y) E M[IConcatenatel] I =+ a = y. [(a. a o /3, b o y) E M [IConcatenateJ ] + [(a. p, y) E M UConcatenateJ A a = b]. (29) (30) C. Rural et al. /Artijicial Intelligence 104 (1998) 107-164 IS1 Proof. Similar to proof of Lemma 1. 0 Lemma 6. Let M be a model of Bconcatenate. Then, for all (Y,/?, y, M + Concatenate(c~. j?. y) gfy =a.B. Proof. By induction on the length of the second argument of Lemma 2. 0 in a manner similar to the proof In the lemma below we will use the following notation: let A be an action and F be a fluent, formula Hi,(F)( (Y ) will stand for the disjunction of all the premises of axioms of the form: H(p1.o) A... A H (Pn, a) 3 causes+(-)(a, f, a) such that u = A and f = F. For instance, Holds(Q, a) > Cuuses’(A, then H’ ,4.F(a) stands for Holds(P, a) v Holds( Q. a). if axioms Holds(P, CY) > Cuuses+(A, F, a) and F, a) are all the axioms with consequent Cuuses+(A, F, (Y), Lemma 7. Let D he a domain description. Black (min Causes+(-) : H(P,,cr) A... A H(P,,(-Y) > Causes+(-)(A. F,(Y) f$orearhAcausesFifPI....,P,,ED) is equivalent to the conjunction offormulas of the form: (Vcu).H~,(~)(o) = Cau.ses+(-)(A. F, a) one,fiw each pair of action-fluent constunts that appear in (3 1). (31) (32) from Proposition formula can be simplified by predicate completion. 3.1.1 of [25] which shows under what conditions q a Proof. Follows circumscription Proposition 1. ( 1) For every causal model p of Dt there e.xists a model Msc of SC(Dt) such that jar all F,cr: F E ~(c-u) + Msc + Holds(F, (-w). (33) (2) Far eve? model Msc of SC( Dr) there exists u causal model p of Dt such that (33) holds. (1) Let !? be a causal model of Dt and let us consider an interpretation Msc of Proof. SC( Dt) such that, Msc(IHoldsl] = [(F. a): F E I} 152 and C. Bard et al. /Artijiciul Intelligence 104 (1998) 107-164 Msc[Causes+(-‘l] = ((A, F.a): F E E$‘-‘(p(w))}. We will show that Msc Causes+(-) are satisfied. By Lemma 7 it is sufficient to show that is a model of SC(Q). First, let us show that the blocks defining @,(;)(u) = Causes+(-‘(A. F, w). Suppose HA+$)( cz holds in Msc there is a causal 1 . . . . , II. Again, by construction ) law A causes F if PI, of Msc, for arbitrary A, F,a. Then, by construction of Msc, , P, E D such that H(Pi, u) holds for i = for i = 1, . . , n, that Pi E p(u) this implies which in turn implies that F E EAf(-) (*(a)). By constructionof Msc, F E EAf’-‘(W(a)) implies that Causes +(-)(A. F, cx) holds in Msc. Suppose now that Causes +‘-)(A, F, a) holds in Msc for arbitrary A, F, cx. Then, by construction A causes F if PI, . . . P, E D such that Pi E p(u) F E Ei(-) of Msc, (Iii (a)). This implies that there is a causal law for i = 1, . . . n. Again, by construction of Msc, it follows that H(Pi, a) holds for i = 1, . . n. Therefore, HAf(F)(cy) holds in Msc. Now, let us show that axiom -Causes+(u, f. cxy) A ~Causes-(a, f, w) 3 [Holds(.f. cl) = Holds(f, a 0 cx)] such is satisfied by Msc. Let A, F, a! be an arbitrary respectively, we have that F $ Ei( that F E @(a) Holds(F, A o cx) holds in Msc. that LHS of the axiom holds iff F E !&(cx A). Therefore, by construction action, fluent and sequence in D, in Msc. By construction of Msc, this implies of Msc, Holds(F, a) = ly (w)) U EA (p(a)). By definition of causal model, Now, consider the axioms Causes+(a, f, w) > Holds(f, a o 01). Causes-(a, f, a) > -Holds(f, a o a). Suppose that Causes+(A, F, a) holds in Msc of Msc, (Section 7), we have that F 4 Ez (p(a)) 9 (a . A). Therefore, by construction of Msc, Holds(F. A o cx) holds. Given our assumption fl EA (W (a)), F E Ei(p(a)). that for arbitrary A, F, cx. Then, by construction ly is defined on all sequences thus by definition of q, F E A similar argument holds for the second axiom. (2) Let Msc be a model of SC(Dl). Let us consider a transition (33) holds. We show ly to be a causal model of Dl, i.e., for each A. u function P such that ly(cr .A) = p((a) U EAf(p(ct)) \ E,(9(w)). We show this is indeed the case by induction on the length of the sequence. Base case: the length of (Y is 0. We need to show that for any A, ‘@4) = *‘(l I) u EA+(p(l I>) \ E&V[ I,) where F E p([ 1) iff Holds( F, E) by construction of q. (4 *([Al) 2 @([ I) U Ei(*(l 1)) \ E,(*Y([ I>). C. Baral et al. /Artijicial Intelli,syxe 104 (1998) 107-164 IS3 Let F and A be an arbitrary fluent and action in D respectively, such that F E @([ ])uE~(P([]))\E~(@([])).Letusshowthat hence there is no causal law A causes 1 F if Q I, . . , Qnl E Dr such that the preconditions hold in @ ([ I). By construction of P this means that MSC some 1 < i < m, for all such causal laws. By Lemma 7, this implies that l= H (Qi , E) does not hold for F E *([Al).Clearly, F $ E,W([I)), Msc b -Causes-(A. F, e). There are two cases of interest (i) F E Ei (p(] I)). (34) (ii) F $ E~(*([ I)>. If (i) is the case, then there must be a causal that the preconditions H( P;. E) for each Cuu.~es+(u, f: o) 3 Holds(f. a o a) we have that Msc construction of P, F E cY([A]). is the case, hold in @ ([ I). By construction If (ii) i = 1. . . , n. Therefore, Msc + Cuusesf(A, of P, law A causes F if PI, . . . , P, E DI such b this implies F, E) and by axiom b Holds(F, A o E). Thus, by that Msc then F E p([ 1) which F q! Ei(p([ that law Msc + Holds( F, E). Furthermore, A causes F if PI, I= H (P; , E) does not hold for some 1 < i < n, for all causal laws of this form and Msc + +2~ses+(A. . . , P, E Dl such that the preconditions by construction there F, F). From this, (34) and axiom of P, is no causal hold in UJ ([ I). Hence, Msc implies, I)) implies -Cuuses+(n. ,f. CY) A Suuses-(a, f. a) 3 [Holds(f, a) = Holds(f, a o a)] we conclude that Msc I= Holds( F, A o E), and by construction of P that F E p ([A]). @) *([Al) E *(I Let F and A be an arbitrary fluent and action in D. respectively, I> U E,fW’([ I)) \ &W([ I)). such that F E p([A]). of P, Msc t= Holds(F. A o E). Thus, Msc + -Causes-(A, By construction by Lemma 7, for every causal H( Q; , E) does not hold for some 1 < i < m. By construction its preconditions cases: F. E), and if Ql , . . . , Qm E Dl we have Msc + of P, for every causal law do not hold in P ([ 1) either. Thus, F 4 EA (p ([ I)). We again have two law A causes -F k Cuuses+(A, F. E), (i) Msc (ii) Msc b -Cuuses+(A, If (i) is the case, then by Lemma 7 there is a causal F, E). Dl such that Msc preconditions we assume that P of such a causal b H (Pi, E) for each is defined on every sequence law A causes F if PI, . P, E of 9, all the law hold in P([ I). Therefore, F E EAf (p([ I)), and since (Section 7) F $ Ei(@([ 1)). Thus, i = 1, . , n. By construction F E p(] I) U E,+WI([ I)) \ &WY([ I)). If (ii) is the case then by virtue of the first axiom of SC(D/), Msc implies, by construction of P, that F E p( [ I). We showed above that F $ EA (p([ Therefore, F E p([ I) U EiW([ I)) \ EiW([ I>). Induction hypothesis: for each A, (Y P(a . A) = q(a) U EA+(IJ/(cx)) \ E;(!&a)). Inductive case: it can be proved by following the same steps as in the proof of the base case. 0 b Holds( F, E). This I)). 154 C. Bard ct al. /Artificial Intelligence 104 (IWK) 107-164 Proposition 2. For any domain description D, if interpretation then there exists a model M of T(D) such thatfor every jiict 4 in the language of D: (p, C) is a model of D (‘K W k 4 * M I= ~(4) (35) and if M is a model of T (D) then there exists a model (@, C) of D such that (35) holds. (=k) Let M = (ly. C) be a model of D. Let MM be an interpretation of T(D) such Proof. that (i) The universe of actions,juents, in the sets A, 3 and S of D, respectively. The universe of sequences consists of a unique object for each possible sequence of actions from A. (ii) Holds and Causes +(-) are interpreted as follows: and situations consist of the symbols M,+.t[HoldsZ] = ((F-w): F E @(a)), MM [Causes +‘-‘1 = {(A, F.c-u): FE E,+“(cw)}. (iii) All action, fluent and situation constants are interpreted as themselves. Predicates as the corresponding and Concatenate are interpreted Pre$x_eq, Subsequence intended (iv) Sit-map relation. is interpreted as follows: for each S in D, M ,QJ [Sit_mupJ(S) = A,,, o o AlosifC(S)=[A1,...,A,]. We will show that MM First, note that the framework axioms are trivially satisfied. The blocks defining prefix, the intended and concatenate have already been proven to correctly capture is a model of T(D). subsequence relations. Axioms (a) and (b) are satisfied by definition of Z, condition (iii) and correctness of Bprefix_eq (Lemma 2). Note that condition that such an interpretation Proposition I ), thus axioms SC( Dt ) are satisfied. (ii) on Holds and Causes +(G) is the same condition used to show (see the proof of is a model of SC(Dt) of these predicates It remains respect to the circumscription F at S E D: 5 (D) includes to be shown that MM satisfies axioms policy. the axiom Holds( F, Sit-map(S)). t(D) and is a minimal model with By the same fact from D, F E WI/(X(S)). By condition F E 9 (C(S)) implies that MM + Holds( F. (;Y), where a is the same sequence as C(S). (iv) on Sit-map and condition (ii), a occurs-at S E D: r(D) includes the axiom (3/3).Concatenate(Sit_mup(S), (Y. /3) A Prefix_eq(B, Sit_mup(SN)). By the same fact from D, cz concatenated with C(S) on Sit-map, Sit-map(S) and Sit_map(SN) By correctness of BcOncatenate and Bpreex_eq the axiom is satistied. is a pretix of C (S,v). By condition (iv) are the same sequences as Z(S) and C(S,v). St precedes S2 E D: s(D) includes the axiom Prefix_eq(Sif_mup(S1), Sit-map(&)) A ~Pre$x_eq(Sit_mup(S~), Sit_map(S))). C. Bard et al. /Artificial Intelligence 104 (1998) 107-164 155 By the same fact from D, C(Sl ) is a proper prefix of C(&,). By condition correctness of Bprefix_eq, the axiom is satisfied. (iv) and Finally, the value minimization axiom (c) captures exactly the minimality Section 5 for a detailed discussion), with respect C (5~) by the definition of models of domain descriptions in C. to ordering subsequence, condition (see imposed on (*) Let M be a model of T(D). By Proposition 1 there is a causal model p such that for all F. a, W(u) = {F: M ~Hdds(F,a)]. (36) Let r& be such a causal model and let C be a situation assignment such that for each S, C(S)=[AI,.... A,]~MIISit_mup~(S)=A,o~~~oA1o~. (37) Let us show M = (q, C) is a model of D. First of all, by axiom we have C(Su) = [ 1, and by axiom Prefi_eq(Sit_mup(s), Sit_mup(S~)) we have that, for all situations S in the language of D, E(S) thus, C is a situation assignment. Since we assume that p is defined on all sequences, &Jj (C (SN)) is defined and therefore W and C form an interpretation of D. is a prefix of C(SN); It only remains to be shown that facts in D are true in M and that there is no N’ = (p, C’) such that C’(SN) << Z(SN) and N’ is a model of D. (F at S) E D. /= Holds(F, Sit_mup(S)). By (37), Sit_mup(S) in M is the same sequence as Therefore, (F at S) is true in M. The same argument Then, M C(S), holds for negated fluent facts. thus, by (36), F E @(C(S)). (cr occurs_at S) E D. I= (Concutenute(Sit_mup(S), a, /?) A Prefix_eq(#l, Sit_mup(S~)), Then, M Let cxs and (YN be the same sequences correctness of Bconcatenate (Lemma 6), #? is the same sequence as CX,~ concatenated with (;Y. By correctness of Bpretix_eq (Lemma 2), B is a prefix of sequence UN. By Condition (37) on C, /I is equal to Z(S) concatenated with (Y and ,9 is a prefix of C(SN). Therefore, (a occurs_at S) is true in M. (S) precedes ST) E D: then, ,!I. in M. By and Sit_map(SN) as Sit_mup(S) for some M + t’refix_eq(Sit_mup(SI), Sit_mup(S2)) A -Pre~ix_eq(Sit_mul,(S2), Sit_mup(S~)). By correctness (St precedes S2) is true in M. of Bprefx_eq and (37), C(Sl) is a proper prefix of C(S2). Therefore, Finally, we need to show there is no interpretation N’ = (ly. C’) of D such that _E’(SN) is a subsequence that there is such (not equal) of C(SN) and N’ is a model of D. Assume a model N’. Then, by part (=+) of this lemma, there would be a model M’ of T(D) which 156 C. Bard et al. /Artijiciul Intelligence 104 (199X) 107-lh4 differs from M only on the interpretation M’[ISit_mapJ our assumption Sit_map(SN) with respect to ordering subsequence is a model of T(D) is subsequence that M (SN) of function Sit-map and such that sequence (not equal) of M [[Sit_mapJ (SN). This contradicts since T(D) includes value minimization of (see Section 5). 0 Proposition 3. For any domain description D and hypothesis $ in the language of D: D +r. 4 * T(D) I= t(4). Proof (Sketch). Let F after (Y be an arbitrary hypothesis show that for all models (p, Z) of D, F E ly (I=(SN) . or) iff for all models M of T(D), in the language of D. We need to (38).COnCUtenUte(Sit_mUp(SN), This can be proved by following construct a model M of T(D) following holds: for all F, (Y a, p) > H(F, B). the proof of Proposition 2 where we show how to from a model (p, C) of D, and vice versa, such that the c(SN) = (Y a M + (Sit_mUp(SN) = W). Appendix B. Correctness of translation T, Lemma 8. Let M be a model of Bernbedded. Then, for all u 1, @,a and B, (a~o~,a~o~)~M[1EmbeddedT]~(Va).u~a1~a~a2. (al o B, a2 o a) E MUEmbedded =+ [(/I, a) E MUEmbedded, (al o E, a2 o e) E M[IEmbeddedJ]. (38) (39) Proof. Similar to the proof of Lemma 1. 0 Lemma 9. Let M be u model of Bernbedded. Then, for all cr. b, M + Embedded(cr, /3) ifs a GB. Proof. This can be proved by induction on the length of the sequences and Lemma 8. q Lemma 10. Let M be a model qf Bembsubseq. Then, for all CX. b, (w, j3) E MUEmbsubseql] + ($).(a, v) E M[[EmbeddedJ A (v, /?) E M([Subsequencelj. (40) Proof. Similar to the proof of Lemma 1. q Lemma 11. Let M be a model of Bembsubseq. Then, for all CY, /?, M ifscz is an embedded-subsequence in p. /= Embsubseq(a, t4) C. Rural et al. /Art$cial Intelligence 104 (1998) 107-164 157 (=%) Let M be a model of &&&seq /= Proof. Enzb.subseq(cr, /I). Then. by (40) we have M + Embedded(c-u, y) A Subsequence(y, B) for some sequence y. By correctness of &m&d&d (Lemma 9) we have that Q is embedded in y, and by correctness of &&sequence (Lemma 4) that y is a subsequence of /I. Therefore. cx is an embedded-subsequence and let CX, B be sequences such that M of ,‘I). (+) Let M be a model of &mbsubseq and let cr, #I be sequences of B. Then, by definition of embedded-subsequence, embedded-subsequence sequence y such that y is a subsequence of B and (II is embedded of &ubsequence (L emma 4) we have that M b Subsequence(y, B) and by correctness of &Inb&ed (Lemma 9) that M k Embedded(a. y). Therefore, by axiom in y. By correctness such that a! is an there is a Embedded(a. ,6) A Subsequence@, y) > Embsubseq(cr. y) of &mbsubseq> Jb’f b= Embsubwk B). 0 Lemma 12. The block which defines Inherits+(-): {min lnherzts . +c-, . b E a A Causes’(-)(b, f. cx) > Inherits +(-)(U, .f. a) I is equivalent to the following formula (VQ, f, a).[@b).b E a A Causes+(-)(b, ,f, a)] = Inherits+‘-)(a. f. a). (41) Proof. circumscription It follows from Proposition 3.1.1 of [25] which shows under what conditions a formula can be simplified by predicate completion. q Lemma 13. Let M be a model of {min Undef : Inherits+(a. f, a) A Inherits-(u, f. o) > Undef(a o (Y) Undef (a) > Undef (a o (Y) I Then, for all a, a, (a oa) E M[[Undefl + [((3f).(a, ,f, a) E M[Ilnherits+Ij A (a, f, o) E M[[lnherits-I]) v (a) E M[[UndefJ]. Proof. Similar to proof of Lemma 1. 17 (42) (43) IS8 Proposition 4. (1) For every cuusul model P of Dl there exists a model Msc of SC,(Dl) such thut,fbr all F, a, F E P(a) e Msc b Holds(F. a). and P(w) is undejned + Msc + Undef (a). (44) (2) For every model Msc of SC,.(Dl) there exists a causal model P of Dl such that (44) holds. Proof. that (i) (ii) (iii) (iv) (1) Let i& be a causal model of D/. Let M SC be an interpretation of SC,.( Dl) such M&UndefJ M&Causes+‘-)I] = {a: P(a) is undefined], = {(A. F. a): F is an immediate effect of A in Ly(u)), Msc[lZnheritsf(p)J Msc[[Holdsl] = ((F, a): F E ‘P(a)). = {(A, F, a): F E Ed’-‘(@(a))) “, Note, that (i) and (iv) correspond to condition (44). We will show Msc is a model of SC,.(&). We showed in Proposition 1 that a model built as above satisfies the blocks which define predicates Causes+ and Cuuses-. Given f’ E;(a) (iii) corresponds and thus this intersection the definition of E~‘~‘, it IS clear that condition is undefined. By this and condition F, a) holds in Msc. Then by condition Let us show the block defining Undef is satisfied. Assume t formula (41), therefore the blocks defining predicates Inherits+ and Inherits- to exactly are satisfied. that there are A, F, cz such (iii) we that (i) we have that M b Undef(A o a). Therefore for some and is not minimal there is no F such that F. a) holds, nor CJnd<f(a) holds in M. This however this block that Inherits+(A. F. a) A Inherits-(A, have that F E E:(w) p(o) the first axiom in the block is satisfied by M. Now, suppose 9(a) (Y. Then, since the second axiom only Inherits+(A) F, CY) A Inherits-(A. contradicts Lemma 13. thus the extent of Undqf must be minimal and therefore is satisfied by M. i& is prefix closed, for every action A, Ir/(a A) is also undefined if there exist A, a such that Undef(A o a) holds while It is easy to see that the extent of Undef is not empty. This implies is undefined is satisfied. It is easy to see that the axioms +nherits+(u. f. a) A -Inherits-(a, ,f, a) > [Holds(f, cx) = Holds(f. a o a)]. -Undef(u o a) A Znherits+(u, f, a) > Holds( f, a o a), --Undef(u oa) A Inherits-(a. f. a) > -Holds(f, u o a). of SC,( 01) are satisfied by Msc. (2) Let Msc be a model of SC,.( Dl). Let i& be a transition function such that (44) holds. We show i& to be a causal model of DJ. X’ Recall fuenh that become true (false) after executing a concurrent action A. that the meaning of EAf’-) (IT) is now different from that in previous proofs. It stands for the bet of C. Bum1 et al. /Art@ial Intelliqencr 104 (1998) 107-164 I.59 Consider necessarily contains E and satisfies the axioms and is a subset. Since the block chooses a minimal Undcrf’(e) does not hold in Msc. Thus, lu([ 1) is defined. the axioms in the block for Undef. Note, that the consequences of both axioms that involve a nonempty that satisfies of Undcf, sequence. Hence the axioms we can obtain another for any interpretation interpretation interpretation of Undef Let us show that p is prefix-closed. Assume the contrary and let cx and ,8 be sequences such that cy is a prefix of B and ly (B) is defined while 9 (ar) is undefined. By construction of 9, it follows that Undef(a) and -Undef(B) hold in JLLSC. However. from axiom (‘dol. a).lJndef(a) > Undef(a ecu) and the fact that (Y is a prefix of /J, we conclude contradicts our assumption. Therefore, p is prefix-closed. Now, let us show that for all A. a, if E,:(a) n E,(a) that Undef (/I) holds in Msc. which # I/) then p is undefined on sequence A o a. Suppose F E E:(u) and F E E,(a) for fluent F, action A and sequence IX. This means that F and -F are effects of A in s(a), i.e., there exist causal laws B causes F if PI. . . PA B’causes-FifQl,...,Ql (45) in L)/. where B E A and B’ E A and such that P; (i = 1, . , k) and Qi (i = 1, are true in p(a). (i=l,..., (45). This implies . . I) of p that Msc + H( Pi. a) I), for any pair of causal laws of the form that Cuuses+(B, F, a) and Causes-( B’. F, a) hold in Msc. By axiom From k)andMsc~H(Q;,(~)(i=I this and construction ,.... it follows h E a A Causes+(-) (h, ,f: a) 3 Inherits+(-) (a 1 ,f: w) we have that Inherits+(A, F. a) and Inherits-(A, F, a) hold in Msc, and by axiom Znherits’~(u, ,f, a) A Inherits-(a. f. a) > Undef(u o (-u) we have that Und<f(A o a) holds in Msc. Therefore, by construction undefined. of q, U(a A) is Now, let us show that for all A, a, if E:(a) f? E;(U) = GI, then p((w . A) = p/(a) U \ E,(cr). This proof is very similar to that of Proposition 1. We will prove the base E:(a) case only. Base case: length of a! is 0. We will show P([Al) = P([ I) U EA+(W I)) \ &WY([ 1,). (4 qUAI) 2 p(L I) U EiW([ I)) \ EiW([ I)). Assume F 6 E,(p([ -F since this holds for all h such that h E A, Msc + -Inherits-(A. that F E @([ 1) U E,f(S([ I)). This implies I)). Let us show F E p([A]). Clearly, that there does not exist an atomic action B in A such that F, c). And is an immediate effect of B. Again, this implies that Msc + -Causes-(B, I)) \ E,(p([ F. F). Now, there are two cases of interest: I)), (i) F E Ei(p([ (ii) F ti E,‘(pJI([ I)). 160 C. Bard et al. /Artificial Intelligence 104 (19%‘) 107-164 Consider case (i). There must be an action B in A such that B causes F if PI, . . , P, E Dt and the preconditions that Msc /= Causes+(B, F. F) and by axiom hold in P([ I). As shown in the first part of this proof, this implies 0 E a A Causes+(b, f, (Y) > Znherits+(a, .f, w) /= Inheritsf (A, F, E). Since we are considering the case when -Undef (A o a) holds Msc in Msc for all a, by axiom -lJndef(a o a) r\Znherits+(a, ,f, a) > Holds(f, a o o) we get that Msc + Holds( F, A o E), which by construction of P implies that F E p([A]). Now consider case (ii). Since F 6 Ei (q ([ I)), we have F E p([ I), which by construc- that Msc b Holds( F, E). We showed above that from F $ Ei (@ ([ I)) F, E). The same can be shown for positive effects, /= -Inherits-(A, tion of P implies it follows that Msc i.e., that from F 6 E,f(@([ I)) it follows that Msc + -Znherits+(A, F, E). Thus, we have that Holds(F, E), -Inherits+(A. F, E), and -Inherits-(A. F, 6) hold in Msc. Then, by the axiom -Znherits+(a, f. cx) A -Inherits-(a, ,f, a) > [Holds(f. a) = HoZds(f, a o a)] it follows that Msc b Holds(F, A o E) and-by (b) ‘J”([al) C p’([ I) U 4fW’([ I)) \ E,W([ I)>. construction of ly-F E ly([a]). Let F E p([A]). Let us show that F E p([]) U E,f(P([])) construction Msc /= -Undef of 9, Msc + Holds(F, A o E). Since we are considering (A o E), Msc + -Inherits- (A. F, F) would imply, by the axiom \ E,(!P([ I)). By the case when -Undef(a o a) A Inherits-(a, f, a) > -Holds(f, a o cx) b -Holds(F, A o E). Therefore, Msc + -Inherits-(A, that Msc Lemma 12, we have that for every B E A, Msc b -Causes- every B E A such that B causes -F P([ I). From this it follows that F $ Ei(p([ if Q t , . . . , Qm E Dt , the preconditions (B, F, E). Consequently, F. 6). Then, by for do not hold in I)). Now, there are two cases of interest: (i) Msc + Znherits+(A, F. E), F, E). (ii) Msc b -Znherits+(A, Consider case (i). By Lemma 12 we have that there exists an action B E A such that . Msc + Cuuse?( B, F. E) and by Lemma 7 that there is a causal law B causes F if PI , P, E Dt such that Msc + H( P;, E) for i = 1, . . . , n. By construction I)). From this and F q! E,(p([ hold in P([ I). Therefore, F E Ei(p([ I)). we conclude of P, all Pi must I)), shown above, that F E PI/(] I) U E, (9(] I)) \ E,(p(] Now consider case (ii). By virtue of the first axiom of SC,(Dt), Holds(F, E). By I)) was shown above, F E P([ I) U of P, F E p([ 1). Since F $ E,(@([ construction E,+(‘WL I)) \ E,WU I)). 0 Proposition 5. For any domain description D, if interpretation then there exists a model M of T,.(D) such that,for eveq,fact 4 in the language of D: (ly, C) is a model of D (p’. c) +L< 4 * M k= ~(4) (46) und if M is u model of Tc (D) then there exists a model (p, C) of D such that (46) holds. C. Baral et al. /Art$icial Intelligence 104 (1998) 107-164 I61 Proof. (+) Let M = (p, C) be a model of D. Let MM be an interpretation of T,(D) such that: (i) The universe ofJluents and situations consist of the symbols in the sets 3- and S of is 2A - {@I. The universe of sequences D, respectively. The universe of c-actions consists of a unique object for each possible sequence of c-actions. is undefined}. = {CX: p(cr) = {(A, F, a): F is an immediate effect of A in F(U)}. (ii) M~~Ilndefl) (iii) MM[rCauses+(-)Ij (iv) M~[Ilnherits+~-)l] (v) M,vt[IHoldsJ = {(A, F, a): F E p(a)). (vi) All action, fluent and situation constants = ((A, F,c-r): FE Efic-‘(IL(cu))]. are interpreted as their corresponding universe element. Predicates Prefix_eq, Subsequence, Concatenate, Embedded and Embsubseq are interpreted as the intended relation. = A, o . ..o Al OE if C(s) = [Al,. , A,]. (vii) Foreach S, M,[Sit_mupJ(S) We will show that MM The blocks defining relations on sequences is a model of T,(D). (Pre$x_eq, etc.) have been shown to capture the intended relations. The framework axioms are trivially satisfied. By definition of models of D, p is defined on C(SN), thus by conditions (ii) and (vii) on MM, axiom -Und<f(Sit_mup(SN)) is satisfied. By definition of situation assignment, C(S()) = [ ] and for each S, C(S) (vii) on M,+J, axioms C(S,v). Thus, by condition is a prefix of Sit_mup( SO) = E, Prejx_eq(Sit_map(s), Sit_mup(SN)) are satisfied. Note, that conditions Inherits+‘-) and Holds, are the same as those used to show that such an interpretation of these predicates is a model of SC,. (Dl) (see the proof of Proposition 4), therefore SC,( 01) is satisfied. (ii), (iii), (iv) and (v) on predicates Undef, Causes+(-), Fluent facts and precedence facts are translated into the same sentences as in T and can be shown to be satisfied as in the proof of Proposition 2. a! occurs_at S E D: t(D) includes an axiom: ($3. y).Embedded(cY, B) A Concatenate(Sit_map(S), B. y) A Prejx_eq(y, Sit_map(SN)). By the same fact in D, there is /I s.t. C(S) . j?. By condition then Sit-map(S) = US and Sit_map(SN) = d!N hold in MM. By correctness and c~ C ,9. (vii) if C(S) = cxs and Z(S,v) = of (Lemma 6) /I, v> holds. Moreover, by correctness of Bpretix_eq (Lemma 2), Prejix_eq Let y stand for the sequence C(S) aN &m&t&& (Lemma 9), Embedded(a, B) holds and by correctness of &,,,,t,,,r, Concatenate(ws, (y, a~) holds. Therefore, axiom (f’) . ,f3 is a prefix of Z(S,v) is satisfied by MIw. axiom (c’) exactly captures condition, with the minimality imposed on sequence Z(SN) by the definition Finally, value minimization respect to ordering embedded-subsequence, in -C,.. of models of domain descriptions (+=) Let M be a model of T,.(D). By Proposition 4 there exists a causal model 9 such that for all F. cx, F E U(a) iff M + Holds( F, w), and *(a) is undefined iff MSC + Undef(cy). Let p be such a causal model and C be a situation assignment such that for every S, C(S) = ws ($ M[L.!%_rnU~~(S) = o&y. We will show M = (ly, Z;) is a model of D. As before, by (48) and axiom (47) (48) Sit_mup(S()) = F we have C(So) = [ 1, and by axiom Pre~~_eq(Sit_mup(s). Sit_mu~$ SN)) we have C(S) is a prefix of Z(S,v) C is a situation assignment. By (47) and axiom for any situation symbol S in the language of D. Thus, -Undef(Sit_mup(SN)) of TC( D) we have that C(S,v) belongs interpretation of D. to the domain of q. Therefore, C and p form an It only remains N’ = (p, C’) such that C’(S,v) of D. to be shown that facts in D are true is an embedded-subsequence in M and is no of C(S,v) and N’ is a model that there Fluent and precedence facts are translated into the same sentences as in T and it can be shown as in the proof of Proposition 2 that M satisfies these types of fact. We need to show M satisfies facts of the form (Y occurs_at S. Suppose (CX occurs-at S) E D Then M entails (38. y).Embedded(cz. B) A Concutenute(Sit_map(S), /3. y)r\ Pve$x_eq(y, Sit_mup(SN)). such that the above sentence holds and consider Let /J. y be sequences Sit-map(S) = aye and Sit_mup(SN) = (YN hold in M. Then, by correctness of &&&jed (Lemma 9), we have that cz C B, by correctness of BcOncatenate (Lemma 6), y is equal to US concatenated with /I, and by correctness of Bprehx_eq (Lemma 2), y is a prefix of UN. . B is a prefix of C(SN). By this and By (48), Z(S) = CYS and C(S,v) = (YN. Hence C(S) (Y & /?, M satisfies (u occurs-at S). to show there is an embedded-subsequence there is such a model N’. Then, by part (+) of this lemma, is no interpretation N’ = (p, C’) of D such (not equal) of c(SN) Finally, we need acs. oN s.t. C’(SN) Suppose M’ of T,(D) which differs and such that sequence M’[rSit_mupjj(SN) that and N’ is a model of D. there is a model of function Sit_mup (not equal) of from M only on the interpretation is an embedded-subsequence C. Baral rt ul. /Art$cial Intelli,yencr 104 (199X) 107-164 163 ,bl [ISit_mupJ ( SN). This contradicts our assumption T<(D) includes value minimization 0 (see Section 5). subsequence since of Sit_map(S,v) with respect to ordering emhedded- is a model of T,(D), that M References [I ] J.F. Allen, Towards a genera1 theory of action and time, Artiticial Intelligence 23 (1984) 1233154. [2] C. Baral, Reasoning about actions: nondeterministic effects, constraints in: Proc. 14th and qualification. (IJCAI-95). Montreal. Quebec, 1995, pp. 2017- Intelligence and knowledge in extended logic programming, (IJCAI-93). Chambery. France, 1993. pp. 866-871. Journal of Logic Programming representation. in: Proc. 13th International 2023. Joint Conference on Artificial Intelligence [3] C. Baral, M. Gelfond, Representing concurrent actions International Joint Conference on Artificial 1.41 C. Baral, M. Gelfond, Logic programming I9 (20) (1994) 73-148. 151 C. Baral, A. Gabaldon, A. Provetti, Formalizing National Conference on Artificial Intelligence [6] C. Banal, A. Gabaldon, A. Provetti, Value minimization S. Shapiro 481. (Eds.), Proc. Principles of Knowledge Representation and Reasoning narratives using nested circumscription, (AAAI-96), Portland, OR, 1996. pp. 652657. in circumscription, in: Proc. 14th in: L.C. Aiello. J. Doyle, (KR-96). 1996. pp. 474- 171 C. Baral. M. Gelfond, A. Provetti, Representing actions-I: laws. observations and hypothesis, Notes of AAAI Spring Symposium, Applications, 1995. Extending Theories of Actions: Forma1 Theories in: Working and Practical 181 C. Baral, M. Gelfond, A. Provetti, Representing actions: laws, observations and hypothesis. Journal of Logic Programming 3 1 ( l-3) ( 1997) 20 l-243. 191 C. Baral, J. Lobo, Formal characterization Databases, 1996. of active databases. in Proc. International Workshop on Logic in [IO] P. Doherty. W. Lukaszewicz, A. Szalas, Computing circumscription to appear. of Automated Reasoning, revisited: a reduction algorithm. Journal [I I] K. Erol, D. Nau, VS. Subrahmanian, Complexity. independent planning, Artificial Intelligence 76 (l-2) decidability (1995) 7S--88. and undecidability results for domain- [I21 M. Gelfond, V. Lifschitz, Representing actions Conference and Symposium on Logic Programming. in extended logic programs. in: Joint International 1992, pp. 559-573. [131 M. Gelfond, V. Lifschitz, A. Rabinov. What are the limitations of the situation calculus?, in: R. Boyer (Ed.), Automated Reasoning: Essays in Honor of Woody Bledsoe. Kluwer Academic, Dordrecht, 199 I. [l4] M. Georgeff (Ed.), Special Issue on Action and Processes, Journal of Logic and Computation 4 (5) (1994). [ 151 E. Giunchiglia, N. Kartha, V. Lifschitz, Actions with indirect effects (extended abstract), Working notes of AAAI Spring Symposium Extending Theories of Actions: Formal Theories and Practical Applications. Stanford. 1995. [ 161 E. Giunchiglia, N. Kartha, V. Lifschitz, Representing actions: indeterminacy and ramifications, Artiticial Intelligence 07 (2) (1997) 409-443. [I 71 C. Hoare, An overview of some formal methods for program design IEEE Computer 85-9 I (September 1987). [IX] A. Kakas, R. Kowalski. F. Toni. Abductive logic programming, Journal of Logic and Computation 2 (6) ( 1992) 7 19-770. [ 191 A. Kakas, R. Miller, A simple declarative 3 I (l-3) (1996) 157-200. Programming language for describing narratives with actions, Journal of Logic [20] G.N. Kartha. Soundness International and completeness Joint Conference on Artificial for three formalizations in: Proc. 13th (IJCAI-93). Chambery, France, 1993. pp. 7 12-7 IX. investigation of reasoning about actions. Ph.D. thesis. University of Texas at theorems Intelligence of action, [211 C.N. Kartha, A mathematical Austin, 1995. [22] N. krthd, V. Lifschitz, Actions with indirect effect\ (preliminary report). in: Proc. 3rd Internat. Conf. on Principles of Knowledge Representation and Reasoning (KR-941, Bonn. Germany, 1994. pp. 341-350. 164 C. Bard et al. /Artijicial Intelligence 104 (IYW) 107-1154 1231 R. Kowalski. M. Sergot, A logic-based calculus of events, New Generation Computing 4 (1986) 67-95. 1241 V. Lifschitz, Nested abnormality 1251 V. Lifschitz, Circumscription, theories, Artificial Intelligence 74 (I 995) 35 l-365. in: D.M. Gabbay, C.J. Hogger, J.A. Robinson (Eds.), The Handbook of Logic in Al and Logic Programming, Vol. 3. Oxford University Press, 1994, pp. 298-352. 1261 V. Lifschitr, Restricted monotonicity. 1271 V. Lifschitz (l-3) (Ed.). Special (1997). in: Proc. AAAI-93, Washington, DC, 1993. pp. 432437. issue on reasoning about actions and change. Journal of Logic Programming 31 [2X] F. Lin. Y. Shoham, Concurrent actions in the situation calculus. in: Proc. AAAI-92, San Jose, CA, 1992, pp. logic programs, The relationship stable, supported. default and auto-epistemic in: G. Levi, M. Martelli (Eds.), Proc. 6th International Conference between 1989, pp 6OG-620. of circumscription to formalizing common sense knowledge, Artificial Intelli- 590-59s. 1291 W. Marek, V.S. Subrahmanian. semantics for general in Logic Programming, 1301 J. McCarthy. Applications gence 26 (3) (1986) 89-l 16. 1311 J. McCarthy. Mathematical [32] J. McCarthy. Overcoming 1331 J. McCarthy, Situation logic in Artificial Intelligence, Dmdalus (1988) 297-311. an unexpected obstacle, Manuscript, 1992. calculus with concurrent events and narrative, Preliminary Manuscript, 1995 (available only at http://www-formal.stanford.edu/jmc/narrative.dvi). from 1341 J. McCarthy, P. Hayes, Some philosophical problems the standpoint of artificial intelligence, in: B. Meltzer, D. Michie (Eds.). Machine Intelligence, Vol. 4, Edinburgh University Press, 1986, pp. 4633502. in the situation calculus, Journal of Logic and Computation 4 (5) (1994) 1351 R. Miller, M. Shanahan. Narratives 5 13-530. [36] A. Provetti, Hypothetical reasoning: from situation calculus to event calculus. Computational Intelligence Journal 12 (3) (1996) 478X498. 1371 J. Pinto, Temporal reasoning in the situation calculus, Ph.D. thesis. Department of Computer Science, University of Toronto. Canada. 1994. [3X] J. Pinto, Occurrences and narratives as constraints in the branching structure of the situation calculus. Manuscript. 1996 (http://lyrcc.ing.puc.cl/jpinto/). 1391 J. Pinto, R. Reiter, Temporal reasoning in logic programming: a case for the situation calculus, in: Proc. 10th International Conference in Logic Programming, 1993, pp. 203-221. time in the situation calculus, I40] J. Pinto. R. Reiter. Reasoning about (24) (1995) 25 l-268. in: Annals of Mathematics and AI I4 14 I ] R. Reiter, The frame problem for goal regression, in the situation calculus: a simple solution (sometimes) and a completeness Intelligence and Mathematical (Ed.), Artificial in: V. Lifschitz Theory of result Computation. 199 I, pp. 359-380. [42] R. Reiter. Natural actions. concurrency and continuous time in the situation calculus, in: Proc. KR-96, 1996. pp. 2-13. 1431 H. Leveaque, R. Reiter, Y. Lesperance, F. Lin, R. Scherl. Golog: a logic programming language for dynamic domains. Journal of Logic Programming 3 1 ( l-3) (I 997). 1441 E. Sandewall. Filter preferential entailment for the logic of action I I th International Joint Conference on Artificial Intelligence in almost continuous worlds, (IJCAI-X9), Detroit, MI, 1989, pp. 894899. in: Proc. 1451 E. Sandewall, Features and Fluents: A Systematic Approach to the Representation of Knowledge about Dynamical Systems. Oxford University Press, 1992. [..I61 M. Shanahan. A circumscriptive 1471 M. Shanahan, Solving calculus of events. Artificial Intelligence 75 (2) (1995) 249-284. the frame Problem: A Mathematical Investigation of the Commonsense Law of Inertia, MIT Press. Cambridge. MA. 1997. 