Artificial Intelligence 175 (2011) 1722–1736Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintAlgorithms and complexity results for persuasive argumentation ✩,✩✩Eun Jung Kim a, Sebastian Ordyniak b, Stefan Szeider b,∗a AlGCo project-team, CNRS, LIRMM, Montpellier, Franceb Institute of Information Systems, Vienna University of Technology, Austriaa r t i c l ei n f oa b s t r a c tArticle history:Received 1 October 2010Received in revised form 2 March 2011Accepted 4 March 2011Available online 8 March 2011Keywords:Abstract argumentationValue-based argumentation frameworksComputational complexityGraphical modelsBounded treewidthThe study of arguments as abstract entities and their interaction as introduced byDung (1995) [1] has become one of the most active research branches within ArtificialIntelligence and Reasoning. A main issue for abstract argumentation systems is theselection of acceptable sets of arguments. Value-based argumentation, as introduced byBench-Capon (2003) [8], extends Dung’s framework. It takes into account the relativestrength of arguments with respectto some ranking representing an audience: anargument is subjectively accepted if it is accepted with respect to some audience, it isobjectively accepted if it is accepted with respect to all audiences.Deciding whether an argument is subjectively or objectively accepted, respectively, arecomputationally intractable problems.In fact, the problems remain intractable understructural restrictions that render the main computational problems for non-value-basedargumentation systems tractable. In this paper we identify nontrivial classes of value-basedargumentation systems for which the acceptance problems are polynomial-time tractable.The classes are defined by means of structural restrictions in terms of the underlyinggraphical structure of the value-based system. Furthermore we show that the acceptanceproblems are intractable for two classes of value-based systems that where conjectured tobe tractable by Dunne (2007) [12].© 2011 Elsevier B.V. All rights reserved.1. IntroductionThe study of arguments as abstract entities and their interaction as introduced by Dung [1] has become one of the mostactive research branches within Artificial Intelligence and Reasoning, see, e.g., [2–4]. Argumentation handles possible con-flicts between arguments in form of attacks. The arguments may either originate from a dialogue between several agents orfrom the pieces of information at the disposal of a single agent, this information may even contain contradictions. A mainissue for any argumentation system is the selection of acceptable sets of arguments, where an acceptable set of argumentsmust be in some sense coherent and be able to defend itself against all attacking arguments. Abstract argumentation pro-vides suitable concepts and formalisms to study, represent, and process various reasoning problems most prominently indefeasible reasoning (see, e.g., [5,6]) and agent interaction (see, e.g., [7]).Extending Dung’s concept, Bench-Capon [8] introduced value-based argumentation systems that allow to compare argu-ments with respect to their relative strength such that an argument cannot successfully attack another argument that isconsidered of a higher rank. The ranking is specified by the combination of an assignment of values to arguments and an✩Ordyniak and Szeider’s research was supported by the European Research Council, grant reference 239962. Kim’s research was partially supported bythe EPSRC, grant reference EP/E034985/1.✩✩A preliminary and shortened version of this paper appeared in COMMA 2010.* Corresponding author.E-mail address: stefan@szeider.net (S. Szeider).0004-3702/$ – see front matter © 2011 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2011.03.001E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361723ordering of the values; the latter is called an audience [9]. As laid out by Bench-Capon, the role of arguments in this settingis to persuade rather than to prove, demonstrate or refute. Whether an argument can be accepted with respect to all possibleor at least one audience allows to formalize the notions of objective acceptance and subjective acceptance, respectively.An important limitation for using value-based argumentation systems in real-world applications is the computationalintractability of the two basic acceptance problems: deciding whether a given argument is subjectively accepted is NP-hard, deciding whether it is objectively accepted is co-NP-hard [10]. Therefore it is important to identify classes of value-based systems that are still useful and expressible but allow a polynomial-time tractable acceptance decision. However,no nontrivial tractable classes of value-based systems have been identified so far, except for systems with a tree structurewhere the degree of nodes and the number of nodes of degree exceeding 2 are bounded [11]. In fact, as pointed out byDunne [12], the acceptance problems remain intractable for value-based systems whose graphical structures form trees, instrong contrast to the main computational problems for non-value-based argumentation that are linear-time tractable fortree systems, or more generally, for systems of bounded treewidth [12].1.1. Our contributionIn this paper we introduce nontrivial classes of value-based systems for which the acceptance problems are tractable.The classes are defined in terms of the following notions:• The value-width of a value-based system is the largest number of arguments of the same value.• The extended graph structure of a value-based system has as nodes the arguments of the value-based system, two argu-ments are joined by an edge if either one attacks the other or both share the same value.• The value graph of a value-based system has as vertices the values of the system, two values v 1 and v 2 are joined by adirected edge if some argument of value v 1 attacks an argument of value v 2 [11].We show that the acceptance problems are tractable for the following classes of value-based systems:(P1) value-based systems with a bipartite graph structure where at most two arguments share the same value (i.e., systemsof value-width 2);(P2) value-based systems whose extended graph structure has bounded treewidth; and(P3) value-based systems of bounded value-width whose value graphs have bounded treewidth.In fact, we show that both acceptance problems are linear-time tractable for the classes (P2) and (P3), the latter beinga subclass of the former. Our results suggest that the extended graph structure is a suitable structural representation ofvalue-based argumentation systems. The positive results (P1)–(P3) hold for systems with unbounded number of arguments,attacks and values.We contrast our positive results with negative results that rule out classes conjectured to be tractable. We show that theacceptance problems are (co)-NP-hard for the following classes:(N1) value-based systems of value-width 2;(N2) value-based systems where the number of attacks between arguments of the same value is bounded (systems ofbounded attack-width);(N3) value-based systems with bipartite value graphs.In fact, we show that both acceptance problems are intractable for value-based systems of value-width 2 and attack-width 1.Classes (N1) and (N2) were conjectured to be tractable [12], the complexity of (N3) was stated as an open problem [11].The reminder of the paper is organized as follows. In Section 2 we provide basic definitions and preliminaries. In Sec-tion 3 we define the parameters value-width and attack-width and establish the results involving systems of value-width 2,we also discuss the relationship between systems of value-width 2 and dialogues [9]. In Section 4 we consider value-basedsystems with an extended graph structure of bounded treewidth and show linear-time tractability. We close in Section 5with concluding remarks. Some proofs of technical lemmas are given in Appendix A.The main results of this paper have been presented in preliminary and shortened form at COMMA’10 [13]. Here weprovide full proofs, examples, and additional discussions. Further new additions are the results (P3) and (N3) involvingvalue graphs, and the discussion of the relationship between systems of value-width 2 and dialogues.2. Arguments, attacks, values, and audiencesIn this section we introduce the objects of our study more formally.2.1. Abstract argumentation systemDefinition 1. An abstract argumentation system or argumentation framework is a pair ( X, A) where X is a finite set of elementscalled arguments and A ⊆ X × X is a binary relation called the attack relation. If (x, y) ∈ A we say that x attacks y.1724E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736Fig. 1. The abstract argumentation system F 0 and value-based system F of Examples 1 and 2, respectively.An abstract argumentation system F = ( X, A) can be considered as a directed graph, and therefore it is convenient toborrow notions and notation from the theory of directed graphs [14]. For example we say that a system F = ( X, A) is acyclicif ( X, A) is a DAG (a directed acyclic graph).Example 1. An abstract argumentation system F 0 = ( X, A) with arguments X = {a, b, c, d, e, f } and attacks A = {(a, d), (a, e),(b, a), (c, d), (d, b), ( f , c)} is displayed in Fig. 1.Next we define commonly used semantics of abstract argumentation systems as introduced by Dung [1]. For thediscussion of other semantics and variants, see, e.g., Baroni and Giacomin’s survey [15]. Let F = ( X, A) be an abstractargumentation system and S ⊆ X .1. S is conflict-free in F if there is no (x, y) ∈ A with x, y ∈ S.2. S is acceptable in F if for each x ∈ S and each y ∈ X with ( y, x) ∈ A there is some x3. S is admissible in F if it is conflict-free and acceptable.4. S is a preferred extension of F if S is admissible in F and there is no admissible set S(cid:5) ∈ S with (x(cid:5), y) ∈ A.(cid:5)of F that properly contains S.For instance, the admissible sets of the abstract argumentation system F 0 of Example 1 are the sets ∅ and { f }, hence { f } isits only preferred extension.Let F = ( X, A) be an abstract argumentation system and x1 ∈ X . The argument x1 is credulously accepted in F if x1 iscontained in some preferred extension of F , and x1 is skeptically accepted in F if x1 is contained in all preferred extensionsof F .In this paper we are especially interested in finding preferred extensions in acyclic abstract argumentation systems. Itis well known that every acyclic system F = ( X, A) has a unique preferred extension GE(F ), and that GE(F ) can be foundin polynomial time (GE(F ) coincides with the “grounded extension” [1]). In fact, GE(F ) can be found via a simple labelingprocedure that repeatedly applies the following two rules to the arguments in X until each of them is either labeled in orout:1. An argument x is labeled in if all arguments that attack x are labeled out (in particular, if x is not attacked by anyargument).2. An argument x is labeled out if it is attacked by some argument that is labeled in.The unique preferred extension GE(F ) is then the set of all arguments that are labeled in.2.2. Value-based systemsDefinition 2. A value-based argumentation framework or value-based system is a tuple F = ( X, A, V , η) where ( X, A) is anargumentation framework, V is a set of values, and η is a mapping X → V such that the abstract argumentation systemF v = (η−1(v), {(x, y) ∈ A | x, y ∈ η−1(v)}) is acyclic for all v ∈ V .We call two arguments x, y ∈ X to be equivalued (in F ) if η(x) = η( y).The requirement for F v to be acyclic is also known as the Multivalued Cycles Assumption, as it implies that any set ofarguments that form a directed cycle in F = ( X, A) will contain at least two arguments that are not equivalued [8].Definition 3. An audience for a value-based system F is a partial ordering (cid:2) on the set V of values of F . An audience (cid:2) isspecific if it is a total ordering on V .For an audience (cid:2) we also define < in the obvious way, i.e., x < y if and only if x (cid:2) y and x (cid:8)= y.Definition 4. Given a value-based system F = ( X, A, V , η) and an audience (cid:2) for F , we define the abstract argumentationsystem induced by (cid:2) from F as F (cid:2) = ( X, A(cid:2)) with A(cid:2) = {(x, y) ∈ A | ¬(η(x) < η( y))}.E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361725Fig. 2. Acyclic abstract argumentation system relative to the six specific audiences on values T , S, E.Note that if (cid:2) is a specific audience, then F (cid:2) = ( X, A(cid:2)) is an acyclic system and thus, as discussed above, has a uniquepreferred extension GE(F (cid:2)).Example 2. Consider the value-based system F = ( X, A, V , η) obtained from the abstract argumentation framework F 0 ofExample 1 by adding the set of values V = {S, E, T } and the mapping η with η(a) = η(b) = S, η(c) = η(d) = E, η(e) =η( f ) = T . The value-based system F is depicted in Fig. 1 where the three ellipses indicate arguments that share the samevalue.Definition 5. Let F = ( X, A, V , η) be a value-based system. We say that an argument x1 ∈ X is subjectively accepted in Fif there exists a specific audience (cid:2) such that x1 is in the unique preferred extension of F (cid:2). Similarly, we say that anargument x1 ∈ X is objectively accepted in F if x1 is contained in the unique preferred extension of F (cid:2) for every specificaudience (cid:2).Example 3. Consider our running example, the value-based system F given in Example 2. Suppose F represents the interac-tion of arguments regarding a city development project, and assume the arguments a, b are related to sustainability issues(S), the arguments c, d are related to economics (E), and the arguments e, f are related to traffic issues (T ).Now, consider the specific audience (cid:2) that gives highest priority to sustainability, medium priority to economics, andlowest priority to traffic (S > E > T ). This audience gives rise to the acyclic abstract argumentation system F (cid:2) obtainedfrom F by deleting the attack (d, b) (as η(b) = S > E = η(d), d cannot attack b with respect to the audience) and deletingthe attack ( f , c) (as η(c) = E > T = η( f ), f cannot attack c with respect to the audience).Fig. 2 exhibits the acyclic abstract argumentation systems induced by the six possible specific audiences. The uniquepreferred extension for each of the six systems is indicated by shaded nodes. We conclude that all arguments of F aresubjectively accepted, and e, f are the arguments that are objectively accepted.2.3. Computational problems for value-based systemsWe consider the following decision problems.Subjective AcceptanceInstance: A value-based system F = ( X, A, V , η) and a query argument x1 ∈ X .Question: Is x1 subjectively accepted in F ?Objective AcceptanceInstance: A value-based system F = ( X, A, V , η) and a query argument x1 ∈ X .Question: Is x1 objectively accepted in F ?As shown by Dunne and Bench-Capon [10], Subjective Acceptance is NP-complete and Objective Acceptance is co-NP-complete. Indeed, there are k! possible specific audiences for a value-based system with k values. Hence, even if k ismoderately small, say k = 10, checking all k! induced abstract argumentation system becomes impractical. Dunne [11]studied properties of value-based systems that allow to reduce the number of audiences to consider.2.4. Graphical models of value-based systemsIn view of the general intractability of Subjective Acceptance and Objective Acceptance, the main decision problems forvalue-based systems, it is natural to ask which restrictions on shape and structure of value-based systems allow tractability.A natural approach is to impose structural restrictions in terms of certain graphical models associated with value-basedsystems. We present three graphical models: the graph structure (an undirected graph on the arguments of the value-basedsystem under consideration, edges represent attacks) the value graph (a directed graph on the values of the value-basedsystem under consideration, edges represent attacks) and the extended graph structure (an undirected graph on the argumentsof the value-based system under consideration, edges represent attacks and “equivaluedness”). The concept of value graphswas recently introduced and studied by Dunne [11]. The concept of extended graph structures is our new contribution.1726E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736Fig. 3. A value-based system F with its graph structure G F , value graph G valF , and extended graph structure G extF.Definition 6. Let F = ( X, A, V , η) be a value-based system.The graph structure of F is the (undirected) graph G F = ( X, E) whose vertices are the arguments of F and where twoarguments x, y are joined by an edge (in symbols xy ∈ E) if and only if X contains the attack (x, y) or the attack ( y, x).The value graph of F is the directed graph G valF= (V , E) whose vertices are the values of F and where two values u, v arejoined by a directed edge from u to v (in symbols (u, v) ∈ E) if and only if there exist some argument x ∈ X with η(x) = u,some argument y ∈ X with η( y) = v, and (x, y) ∈ A.The extended graph structure of F is the (undirected) graph G ext= ( X, E) whose vertices are the arguments of F andFwhere two arguments x, y are joined by an edge if and only if (x, y) ∈ A or η(x) = η( y).Fig. 3 shows the value-based system of Example 2 and the three associated graphical models.Definition 7. A value-based system F = ( X, A, V , η) is called bipartite if its graph structure is a bipartite graph, i.e., if X canbe partitioned into two conflict-free sets.3. Value-width and attack-widthDunne [12] suggested to consider restrictions on the number of arguments that share the same value, and the numberof attacks between equivalued arguments. We state these restrictions in terms of the following notions.Definition 8. Let F = ( X, A, V , η) be a value-based system. The value-width of F is the largest number of arguments thatshare the same value, i.e., maxv∈V |η−1(v)|. The attack-width of F is the cardinality of the set {(x, y) ∈ A | η(x) = η( y)}.For instance, the value-based system of Example 2 has value-width 2 and attack-width 2.Value-based systems of value-width 1 are not very interesting: Every argument x in such a value-based system is subjec-tively accepted (x is accepted with respect to any specific audience where η(x) is largest), and objectively accepted if andonly if x is not attacked by any argument y (if y attacks x then x is not accepted with respect to any specific audiencewhere η( y) is largest). Thus, for value-based systems of value-width 1 the problems Subjective and Objective Acceptanceare trivial, and the expressive power of such value-based systems is very limited.On the other hand, value-based systems of value-width 3 are already too expressive to allow a tractable acceptancedecision: Dunne [12] showed that the problems Subjective and Objective Acceptance are intractable (NP-complete andco-NP-complete, respectively) for value-based systems of value-width 3, even if their graph structure is a tree.This leaves the intermediate class of value-based systems of value-width 2 as an interesting candidate for a tractable class.In fact, Dunne [12] conjectured that both acceptance problems are polynomial-time decidable for value-based systems ofvalue-width 2. He also conjectured that the problems are polynomial for value-based systems with an attack-width thatis bounded by a constant. We disprove both conjectures and show that the problems remain intractable for value-basedsystems of value-width 2 and (simultaneously) of attack-width 1.On the positive side, we show that under the additional assumption that the value-based system is bipartite (that entailsvalue-based systems whose graph structures are trees) both acceptance problems can be decided in polynomial time forvalue-based systems of value-width 2.Theorem 1.(A) Subjective Acceptance remains NP-hard for value-based systems of value-width 2 and attack-width 1.(B) Objective Acceptance remains co-NP-hard for value-based systems of value-width 2 and attack-width 1.Theorem 2.(A) Subjective Acceptance can be decided in polynomial time for bipartite value-based systems of value-width 2.(B) Objective Acceptance can be decided in polynomial time for bipartite value-based systems of value-width 2.In the remainder of this section we will demonstrate the two theorems.E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–173617273.1. Certifying pathsThe key to the proofs of Theorems 1 and 2 is the notion of a “certifying path” which defines a certain path-like sub-structure within a value-based system. We show that in value-based systems of value-width 2, the problems of Subjectiveand Objective Acceptance can be expressed in terms of certifying paths. We then show that in general finding a certifyingpath in a value-based system of value-width 2 is NP-hard (3SAT can be expressed in terms of certifying paths) but is easyif the system is bipartite.Definition 9. Let F = ( X, A, V , η) be a value-based system of value-width 2. We call an odd-length sequence C =(x1, z1, . . . , xk, zk, t), k (cid:3) 0, of distinct arguments a certifying path for x1 ∈ X in F if it satisfies the following conditions:C1 For every 1 (cid:2) i (cid:2) k it holds that η(zi) = η(xi).C2 For every 1 (cid:2) i (cid:2) k there exists a 1 (cid:2) j (cid:2) i such that zi attacks x j .C3 For every 2 (cid:2) i (cid:2) k it holds that xi attacks zi−1 but xi does not attack any argument in {zi, x1, . . . , xi−1}.C4 Argument t attacks zk but it does not attack any argument in {x1, . . . , xk}.C5 If there exists an argument z ∈ X \ {t} with η(z) = η(t) then either t attacks z or z does not attack any argument in{x1, . . . , xk, t}.Lemma 1. Let F = ( X, A, V , η) be a value-based system of value-width 2 and x1 ∈ X . Then x1 is subjectively accepted in F if and onlyif there exists a certifying path for x1 in F .The rather technical proof of this lemma is given in Appendix A. We discuss the intuition behind the concept of certifyingpaths by means of an example.Example 4. Consider the value-based system F of Example 2. We want to check whether argument a is subjectively ac-cepted, i.e., to identify a specific audience (cid:2) such that a is in the unique preferred extension GE(F (cid:2)) of F (cid:2). Since a isattacked by b and we cannot eliminate this attack (a and b are equivalued), we need to defend a by attacking b. The onlypossibility for that is to attack b by d. Hence we need to put S < E in our audience. However, since d is attacked by theequivalued argument c, we need to defend it by attacking c by f , hence we need to put S < E < T . Since fis not attackedby any other argument we can stop. Via this process we have produced a certifying path Ca = (a, b, d, c, f ), and we cancheck that Ca indeed satisfies Definition 9. For the other subjectively accepted arguments of F we have the certifying pathsCb = (b), Cc = (c), Cd = (d, c, f ), Ce = (e) and C f = ( f ).In order to use the concept of certifying paths for objective acceptance, we need the following definition.Definition 10. Let F = ( X, A, V , η) be a value-based system and v ∈ V a value. We denote by F − v the value-based systemobtained from F by deleting all arguments with value v and all attacks involving these arguments.Lemma 2. Let F = ( X, A, V , η) be a value-based system of value-width 2 and x1 ∈ X . Then x1 is objectively accepted in F if and onlyif for every argument p ∈ X that attacks x1 it holds that η(p) (cid:8)= η(x1) and p is not subjectively accepted in F − η(x1).Again, the technical proof is moved to Appendix A.Example 5. In our example, consider the argument e. We want to check whether e is objectively accepted. Since e is onlyattacked by a, and since η(a) (cid:8)= η(e), it remains to check whether a is not subjectively accepted in F − η(e). In fact, F − η(e)contains no certifying path for a. Hence e is objectively accepted in F .3.2. Hardness for value-based systems of value-width 2This subsection is devoted to prove Theorem 1. We devise a polynomial reduction from 3SAT. Let Φ be a 3CNF formulawith clauses C1, . . . , Cm and C j = x j,1 ∨ x j,2 ∨ x j,3 for 1 (cid:2) j (cid:2) m. In the following we construct a value-based systemF = ( X, A, V , η) of value-width 2 and attack-width 1 such that the query argument x1 ∈ X is subjectively accepted in F ifand only if Φ is satisfiable. See Fig. 4 for an example.The set X contains the following arguments:1. a pair of arguments x j, z j for 1 (cid:2) j (cid:2) m;2. a pair of arguments xi3. an argument t.j, zij for 1 (cid:2) j (cid:2) m and 1 (cid:2) i (cid:2) 3;1728E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736Fig. 4. The value-based system F in the proof of Theorem 1 for the 3CNF formula (x1 ∨ x2 ∨ x3) ∧ (¬x1 ∨ x2 ∨ ¬x3) ∧ (x1 ∨ ¬x2 ∨ ¬x3).The set A contains the following attacks:j, z j) and (zi1. (z1, x1);2. (xi3. (x j+1, zim) for 1 (cid:2) i (cid:2) 3;4. (t, zij(cid:5) ) for 1 (cid:2) jj, xi5. (xij) and (z j+1, xi(cid:5)j, x j) for 1 (cid:2) j (cid:2) m and 1 (cid:2) i (cid:2) 3;j) for 1 (cid:2) j (cid:2) m − 1 and 1 (cid:2) i (cid:2) 3;(cid:5) < j (cid:2) m and 1 (cid:2) i, i(cid:5) (cid:2) 3 whenever x j,i and x j(cid:5),i(cid:5) are complementary literals.The set V contains one value for each x, z pair, and one value for argument t, i.e., |V | = 4m + 1. Consequently, the mappingη is defined such that η(x j) = η(z j) = v j , η(xij for 1 (cid:2) j (cid:2) m, 1 (cid:2) i (cid:2) 3, and η(t) = vt . Evidently F hasj) = η(ziattack-width 1 and value-width 2, and it is clear that F can be constructed from Φ in polynomial time.j) = v iWe establish part (A) of Theorem 1 by showing the following claim.Claim 1. Φ is satisfiable if and only if x1 is subjectively accepted in F .Proof. First we note that every certifying path for x1 in F must have the form (x1, z1, xi12 , x3, z3, . . . , xm, zm,i jximm , zimj ) ∈ A. Hencethere exists a certifying path for x1 in F if and only if there exists a set L of literals that corresponds to a satisfying truthassignment of Φ (i.e., L contains a literal of each clause of Φ but does not contain a complementary pair of literals). (cid:2)m , t) where i j ∈ {1, 2, 3} for every 1 (cid:2) j (cid:2) m and for every pair 1 (cid:2) j < j2 , zi2(cid:5) (cid:2) m there is no attack (x1 , x2, z2, xi21 , zi1i jj(cid:5) , x(cid:5)In order to show part (B) of Theorem 1, let F be the value-based system as constructed above and define F(cid:5), A(cid:5), η(cid:5)) to be the value-based system with(cid:5), V( X(cid:5) =(cid:5) := X ∪ {x0},(cid:5) := A ∪ {(x1, x0)},(cid:5) := V ∪ {v 0},1. X2. A3. V4. η(cid:5)(x0) = v 0 and η(cid:5)(x) = η(x) for every x ∈ X .Part (B) of Theorem 1 follows from the following claim which follows from Claim 1 and Lemma 2.Claim 2. Φ is satisfiable if and only if x0 is not objectively accepted in F(cid:5).By a slight modification of the above reduction we can also show the following, answering a research question recentlyposed by Dunne [11]. The detailed argument is given in Appendix A.E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361729Corollary 1. Subjective and Objective Acceptance remain NP-hard and co-NP-hard, respectively, for value-based systems whosevalue graphs are bipartite.3.3. Certifying paths and dialoguesBench-Capon, Doutre, and Dunne [9] developed a general dialogue framework that allows to describe the acceptanceof arguments in a value-based system in terms of a game, played by two players, the proponent and the opponent. Theproponent tries to prove that a certain argument (or a set of arguments) is accepted, the opponent tries to circumventthe proof. An argument is subjectively accepted if the proponent has a winning strategy, that is, she is able to prove theacceptance regardless of her opponent’s moves.In the following we outline a simplified version of the dialogue framework that applies to value-based systems of value-width 2. We will see that certifying paths correspond to winning strategies for the proponent.Let F = ( X, A, V , η) be a value-based system of value-width 2. We have two players, the proponent and the opponent,who make moves in turn, at each move asserting a new argument. This produces a sequence (x1, y1, x2, y2, . . .) of argu-ments and a set of audiences (cid:2) with η(x1) = η( y2) < η(x2) = η( y2) < · · · . The proponent has the first move, where sheasserts the query argument x1 whose subjective acceptance is under consideration. After each move of the proponent, as-serting argument xi , the opponent asserts a new argument yi ∈ X \ {x1, y1, . . . , xi−1, yi−1, xi} which has the same valueas xi but is not attacked by xi , and attacks some argument asserted by the proponent. If no such argument yi exists, theproponent has won the game. After each move of the opponent asserting an argument yi , it is again the proponent’s turnto assert a new argument xi+1 ∈ X \ {x1, y1, . . . , xi, yi}. This argument xi+1 must attack the opponent’s last argument yi , butmust not attack any argument asserted by the proponent. If no such argument xi+1 exists, the proponent has lost the game.Because the value-width of F is assumed to be 2, the opponent has at most one choice for each move. Therefore, the pro-ponent’s wining strategy does not need to consider several possibilities for the opponent’s counter move. Hence, a winningstrategy is not a tree but just a path and can be identified with a sequence (x1, y1, . . . , xn−1, yn−1, xn) that corresponds toa play won by the proponent. It is easy to verify that such a sequence is exactly a certifying path.Example 6. Consider again the value-based system F of Example 2. The proponent wants to prove that argument a issubjectively accepted in F and asserts a with her first move. Now, it is the opponent’s turn. He has no other choice but toassert b (the only argument different from a with the same value as a). Now, it is again the proponent’s turn. She mustassert an argument x /∈ {a, b} that attacks b but does not attack a. Argument d satisfies this property (it happens that thisis the only choice). Next, the opponent asserts c, and the proponent asserts f , and it is again the opponent’s turn. Theis argument e, but e does not attack any of the arguments in {a, d, f }. Hence, theonly argument with the same value as fproponent wins. The sequence of arguments (a, b, d, c, f ) produced by this play is indeed a certifying path for a in F . Hencea is subjectively accepted.3.4. Polynomial-time algorithm for bipartite value-based systems of value-width 2In this subsection we prove Theorem 2. Throughout this section, we assume that we are given a bipartite value-basedsystem F = ( X, A, V , η) together with a query argument x1. Furthermore, let Xeven and Xodd be the subsets of X containingall arguments x such that the length of a shortest directed path in F from x to x1 is even and odd, respectively.Lemma 3. Let C = (x1, z1, . . . , xk, zk, t) be a certifying path for x1 in F . Then {xi | 1 (cid:2) i (cid:2) k} ∪ {t} ⊆ Xeven and {zi | 1 (cid:2) i (cid:2) k} ⊆ Xodd.Proof. The claim follows easily via induction on k by using the properties of a certifying path and the fact that F isbipartite. (cid:2)Based on the observation of Lemma 3, we construct an auxiliary directed graph H F := (V , E) as follows. The vertex setof H F is the set V of values of F . There is a directed edge from u to v if and only if there is an argument x ∈ Xeven withη(x) = u and an argument z with η(z) = v such that (x, z) ∈ A. Note that z ∈ Xodd since F is bipartite.Lemma 4. If C = (x1, z1, . . . , xk, zk, t) is a certifying path for x1 in F , then (η(t), η(xk), . . . , η(x1)) is a directed path from η(t) toη(x1) in H F .Proof. By the definition of a certifying path, we have (t, zk) ∈ A and for every 2 (cid:2) i (cid:2) k it holds that (xi, zi−1) ∈ A. Lemma 3implies that for t and xi are contained in Xeven for every 1 (cid:2) i (cid:2) k, and hence (η(t), η(xk)), (η(xi), η(xi−1)) ∈ E for every2 (cid:2) i (cid:2) k. (cid:2)Lemma 4 tells us that each certifying path in F gives rise to a directed path in H F .1730E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736Fig. 5. A bipartite value-based system F , the associated axillary graph H F , and various subgraphs obtained by deleting a value.Example 7. Fig. 5 shows a bipartite value-based system F and the associated auxiliary graph H F . The query argu-ment is x1. Hence Xeven = {x1, . . . , x5} and Xodd = {z1, . . . , z5}. The query argument x1 is subjectively accepted in F asC = (x1, z1, x2, z2, x4, z4, x5) is a certifying path for x1 in F . Indeed, C gives rise to the directed path v 5, v 4, v 2, v 1 (i.e.,η(x5), η(x4), η(x2), η(x1)) in H F , as promised by Lemma 4.It would be desirable if we could find certifying paths by searching for directed paths in H F . However, not every directedpath in H F gives rise to a certifying path in F . To overcome this obstacle, we consider for each value v ∈ V the subgraphH−vFIf there is an argument z ∈ Xodd ∩ η−1(v) that is not attacked by some equivalued argument, then for every argumentof H F which is obtained as follows:y ∈ Xeven that is attacked by z we remove the vertex η( y) from H F .Fig. 5 shows the graphs Hfor the value-based system F of Example 7.−vFLemma 5. Consider an odd-length sequence C = (x1, z1, . . . , xk, zk, t) of distinct arguments of a bipartite value-based system F ofvalue-width 2. Then C is a certifying path for x1 in F if and only if the following conditions hold:(1) η(xi) = η(zi) for 1 (cid:2) i (cid:2) k.(2) (η(t), η(xk), . . . , η(x1)) is a directed path from η(t) to η(x1) in H(3) None of the sub-sequences η(xi), . . . , η(x1) is a directed path from η(xi) to η(x1) in H−η(t)F.−η(xi )Ffor 1 (cid:2) i (cid:2) k.Proof. Assume C = (x1, z1, . . . , xk, zk, t) is a certifying path for x1 in F . Property (1) follows from condition C1 of a certifyingpath, property (2) follows from condition C5 and Lemma 4. Property (3) follows from conditions C2 and C3.To see the reverse assume that C satisfies properties (1)–(3). Condition C1 follows from property (1). Conditions C3, C4and C5 follow from property (2) and the assumption that F is bipartite. Condition C2 follows from property (3). Hence C isa certifying path for x1 in F . (cid:2)Indeed, consider the certifying path C of Example 7 which gives rise to the sequence of values v 5, v 4, v 2, v 1. This, v 2, v 1 is not a directed path in, however v 4, v 2, v 1 is not a directed path in Hsequence is a directed path in H−v5F−v4F−v2FH, and v 1 is not a directed path in H−v1F.Lemma 5 suggests a simple strategy for finding a certifying path for x1 in F , if one exists. For each value v we searchfor a directed path vk, . . . , v 1 from v = vk to v 1 = η(x1) in H. If we find such a path vk, . . . , v 1, we check for eachsubsequence v i, . . . , v 1, 1 (cid:2) i < k, whether it is a directed path in H. If the answer is no for all i, then vk, . . . , v 1satisfies the conditions of Lemma 5. Hence the sequence of arguments in X whose values form P is a certifying path for x1in F . If, however, the answer is yes for some i < k, we take the smallest i for which the answer is yes. Now the sequencev i, . . . , v 1 satisfies the conditions of Lemma 5 and so gives rise to a certifying path for x1 in F . On the other hand, if thereis no value v such that Hcontains a directed path from v to v 1, then there is no certifying path for x1 in F .−v iF−vF−vFThe pseudocode for this algorithm is given in Fig. 6.Proposition 1. The algorithm Detect Certifying Path correctly returns a certifying path for x1 in F = ( X, A, V , η) if one exists andreturns NO otherwise in time O (|V |2 · (| X| + | A| + |V |)).Proof. The correctness of Detect Certifying Path follows from Lemma 5. For v ∈ V , building Hand finding a shortestdirected path from v to v 1 = η(x1), if one exists, takes linear time in the input size of F (which we estimate by the termO (| X| + | A| + |V |)). As we iterate over all vertices of V , and we check for at most |V | subsequences v i, . . . , v 1 whether itis a directed path in H, the claimed running time follows. (cid:2)−vF−v iFE.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361731Algorithm Detect Certifying PathInput: value-based system F = ( X, A, V , η), query argument x1 ∈ XOutput: a directed path in H F that corresponds to a certifying path for x1 in F ,or no if there is no certifying path for x1 in Ffor all v ∈ V do−vFcheck if Hif yes docontains a directed path from v to v 1find such a path, vk, . . . , v 1, v = vkfor i = 1, . . . , k docheck if v i , . . . , v 1 is a directed path in Hif yes, output v i , . . . , v 1 and terminate−v iFreturn NO and terminateFig. 6. Polynomial-time algorithm for the detection of a certifying path in a bipartite value-based system of value-width 2.We are now ready to combine the above results to a proof of Theorem 2. Statement (A) of the theorem follows fromLemma 1 and Proposition 1. Statement (B) follows from Statement (A) and Lemma 2.4. Linear-time algorithm for value-based systems of bounded treewidthAs mentioned above, it is known that both acceptance problems remain intractable for value-based systems whose graphstructure is a tree. This is perhaps not surprising since two arguments can be considered as linked to each other if theyshare the same value. In fact, such links may form cycles in an otherwise tree-shaped value-based system. Therefore wepropose to consider the extended graph structure of the value-based system (recall Definition 6 in Section 2.4) that takessuch links into account. We show that the problems Subjective and Objective Acceptance are easy for value-based systemswhose extended graph structure is a tree, and more generally, the problems can be solved in linear time for value-basedsystems with an extended graph structure of bounded treewidth.Treewidth is a popular graph parameter that indicates in a certain sense how similar a graph is to a tree. Many otherwiseintractable graph problems (such as 3-Colorability) become tractable for graphs of bounded treewidth. Bounded treewidth(and related concepts like induced width and d-treewidth) have been successfully applied in many areas of AI, see, e.g., [16–19]. Deciding acceptance for argumentation frameworks of bounded treewidth has been investigated by Dunne [12] andby Dvorák, Pichler, and Woltran [20]. However, for value-based argumentation, the concept of bounded treewidth has notbeen applied successfully: the basic decision problems for value-based systems remain intractable for value-based systemsof value-width 3 whose graph structure has treewidth 1 [12]. Hardness even prevails for value-based systems whose valuegraph has pathwidth 2 [11]. These negative results are contrasted by our Theorem 3, which indicates that the extendedgraph structure seems to be a suitable and adequate graphical model for value-based systems.The treewidth of a graph is defined using the following notion of a tree decomposition (see, e.g., [21]).Definition 11. A tree decomposition of an (undirected) graph G = (V , E) is a pair (T , χ ) where T is a tree and χ is a labelingfunction that assigns each tree node t a set χ (t) of vertices of the graph G such that the following conditions hold:1. Every vertex of G occurs in χ (t) for some tree node t.2. For every edge {u, v} of G there is a tree node t such that u, v ∈ χ (t).3. For every vertex v of G, the tree nodes t with v ∈ χ (t) form a connected subtree of T .The width of a tree decomposition (T , χ ) is the size of a largest bag χ (t) minus 1 among all nodes t of T . A tree decompo-sition of smallest width is optimal. The treewidth of a graph G is the width of an optimal tree decomposition of G.Example 8. Fig. 7 exhibits a graph (the extended graph structure of the value-based system of Example 2) and a treedecomposition of it. The width of the tree decomposition is 2, and it is not difficult to see that this is optimal. Hence thetreewidth of the graph in the figure is 2.4.1. Linear-time tractability for value-based systems with extended graph structures of bounded treewidthWe are going to establish the following result.Theorem 3. The problems Subjective and Objective Acceptance can be decided in linear time for value-based systems whose ex-tended graph structure has bounded treewidth.1732E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736Fig. 7. A graph and its tree decomposition.To achieve tractability we have to pay a price in generality: The mentioned hardness results of [11,12] imply that if Sub-jective Acceptance is fixed-parameter tractable for any parameter p, then, unless P = NP, parameter p cannot be boundedby a function of any of the following three parameters: the treewidth of the graph structure, the treewidth of the valuegraph, and the value-width. This even holds if the bounding function is exponential. Indeed, the treewidth of the extendedgraph structure can be arbitrarily large for value-based systems where any of these three parameters is bounded by aconstant.The reminder of this section is devoted to a proof of Theorem 3. We shall take a logic approach and use the celebratedresult of Courcelle [22], which states that all properties that can be expressed in a certain formalism (Monadic Second-Order logic, MSO) can be checked in linear time for graphs (or more generally, for finite structures) of bounded treewidth.Courcelle’s Theorem is constructive in the sense that it not only promises the existence of an algorithm for the particularproblem under consideration, but it provides the means for actually producing such an algorithm. The algorithm producedin this general and generic way leaves much room for improvement and provides the basis for the development of problem-specific and more practical algorithms.In the following we use Courcelle’s result as laid out by Flum and Grohe [23]. Let S denote a finite relational structureand ϕ a sentence in monadic second-order logic (MSO logic) on S. That is, ϕ may contain quantification over atoms (el-ements of the universe) and over sets of atoms. Furthermore, we associate with the structure S its Gaifman graph G(S),whose vertices are the atoms of S, and where two distinct vertices are joined by an edge if and only if they occur togetherin some tuple of a relation of S. We define the treewidth of structure S as the treewidth of its Gaifman graph G(S). NowCourcelle’s Theorem states that for a fixed MSO sentence ϕ and a fixed integer k, one can check in linear time whether ϕholds for a given relational structure of treewidth at most k. The proof of Theorem 3 boils down to the following two tasks:Task A.Task B.To represent a value-based system F and a query argument x1 by a relational structure S[F , x1] such that boundedtreewidth of the extended graph structure of F implies bounded treewidth of S[F , x1].To construct formulas ϕs and ϕo in MSO logic such that for every value-based system F and every argument x1of F it holds that ϕs is true for S[F , x1] if and only if x1 is subjectively accepted in F , and ϕo is true for S[F , x1]if and only if x1 is objectively accepted in F .4.2. Reference graphsFor many problems it is rather straight-forward to find an MSO formulation so that Courcelle’s Theorem can be applied.In our case, however, we have to face the difficulty that we have to express that “a certain property holds for some totalordering” (subjective acceptance) and “a certain property holds for all total orderings” (objective acceptance), which cannotbe directly expressed in MSO. Our solution to this problem lies in the introduction of an auxiliary directed graph R, thereference graph, which will allow us to quantify over total orderings of V . The relational structure S[F , x1] will then bedefined to represent F together with R.Definition 12. Let F = ( X, A, V , η) be a value-based system and let ≺ be an arbitrary but fixed total ordering of V . Thereference graph R = (V , E R ) is the directed graph where V is the set of values of F and E R consists of all directed edges(u, v) for which1. u ≺ v in the fixed ordering, and2. A contains an attack (x, x(cid:5)) with η(x) = u and η(x(cid:5)) = v or η(x) = v and η(x(cid:5)) = u.For a subset Q ⊆ E R let R[Q ] = (V , E R [Q ]) be the directed graph obtained from the reference graph R by reversing alledges in Q , i.e., E R [Q ] := {(u, v) | (u, v) ∈ E R \ Q } ∪ {(v, u) | (u, v) ∈ E R ∩ Q }.We also define the abstract argumentation system F [Q ] := ( X, A[Q ]) as the system obtained from F with A[Q ] :={(u, v) ∈ A | (η(u), η(v)) /∈ E R [Q ]}.E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361733Fig. 8. Value-based system F of Example 2 and the corresponding Gaifman graph G(S[F , x1]).Note that the reference graph R is by definition acyclic (in contrast to the value graph G valF whose definition is similarbut distinct).Every specific audience (cid:2) of F can now be represented by some subset Q ⊆ E R for which the directed graph R[Q ] isacyclic, and conversely, every set Q ⊆ E R such that R[Q ] is acyclic represents a specific audience (cid:2). These observations aremade precise in the following lemma whose easy proof is omitted.Lemma 6. An argument x1 is subjectively accepted in F if and only if there exists a set Q ⊆ E R such that R[Q ] is acyclic and x1 is inthe unique preferred extension of F [Q ]. An argument x1 is objectively accepted in F if and only if for every set Q ⊆ E R such that R[Q ]is acyclic it holds that x1 is in the unique preferred extension of F [Q ].Since we can test for acyclicity with MSO logic (see the next subsection), we can now express subjective and objectiveacceptance in MSO logic as “a certain property holds for some subset Q of E R for which R[Q ] is acyclic” and “a certainproperty holds for all subsets Q of E R for which R[Q ] is acyclic”, respectively. Next we give a more detailed description ofhow to accomplish the two tasks for our proof.4.3. Task A: representing the value-based systemWe define a relational structure S[F , x1] that represents the value-based system F together with the reference graph R =∗a and four binary(V , E R ). The universe of S[F , x1] is the union of the sets X , V , and E R . S[F , x1] has one unary relation Urelations H , T , Ba and Bη that are defined as follows:∗a (x) if and only if x = x1 (used to “mark” the query argument).1. U2. T(t, (u, v)) if and only if t = u (used to represent the “tail relation” of E R ).3. H(h, (u, v)) if and only if h = v (used to represent the “head relation” of E R ).4. Ba(x, y) if and only if (x, y) ∈ A (used to represent the attack relation).5. Bη(x, v) if and only if η(x) = v (used to represent the mapping η).Consequently, the Gaifman graph of S[F , x1] is the graph G(S[F , x1]) = (V S[F ,x1], E S[F ,x1]) with V S F= {{u, v} | (u, v) ∈ T ∪ H ∪ Ba ∪ Bη}, see Fig. 8 for an illustration.E S F= X ∪ V ∪ E R andLemma 7. The treewidth of S[F , x1] is at most twice the treewidth of the extended graphs structure of F plus 1.The easy proof is given in Appendix A.4.4. Task B: expressing acceptance in MSOIn order to define ϕs and ϕo we introduce the following auxiliary formulas:A formula TH(t, h, a) that holds if and only if t is the tail and h is the head of a ∈ E R :TH(t, h, a) := T(t, a) ∧ H(h, a)A formula E(t, h, Q ) that holds if and only if the directed edge (t, h) is contained in R[Q ]:E(t, h, Q ) := ∃a(cid:2)(cid:3)(cid:4)¬Q a ∧ TH(t, h, a)(cid:3)∨Q a ∧ TH(h, t, a)(cid:4)(cid:5)A formula ACYC(Q ) that checks whether R[Q ] is acyclic. We use the well-known fact that a directed graph contains adirected cycle if and only if there is a nonempty set C of vertices each having an out-neighbor in C (see, e.g., [14]):ACYC(Q ) := ¬∃C∃xC x ∧ ∀t∃hCt →Ch ∧ E(t, h, Q )(cid:3)(cid:2)(cid:3)(cid:4)(cid:5)(cid:4)1734E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736(cid:5)a(t, h, Q ) := Ba(t, h) ∧ ∃vh∃vtB(cid:5)a(t, h, Q ) that holds if and only if t attacks h in F [Q ]:A formula B(cid:5)(cid:2)Bη(t, vt) ∧ Bη(h, vh) ∧ ¬E(vh, vt, Q )A formula ADM(S, Q ) that checks whether a set S ⊆ X is admissible in F [Q ]:(cid:5)a(x, y, Q ) ∧ S yBNow the formula ϕs can be defined as follows:(cid:2)ACYC(Q ) ∧ADM(S, Q ) := ∀x∀ y(cid:5)S z ∧ Ba(z, x, Q )∧ ADM(S, Q )(cid:4)∗a (x) → SxUϕs := ∃Q¬Sx ∧ ∃z(cid:3)∀x∃S(cid:4)(cid:4)(cid:5)→(cid:2)(cid:3)(cid:3)(cid:3)(cid:4)(cid:3)(cid:3)(cid:4)(cid:4)(cid:5)It follows from Lemma 6 that ϕs is true for S[F , x1] if and only if x1 is subjectively accepted in F . A trivial modificationof ϕs gives us the desired sentence ϕo:(cid:3)∀x(cid:2)ACYC(Q ) →ϕo := ∀Q∃S(cid:3)(cid:3)(cid:4)∗a (x) → SxU∧ ADM(S, Q )(cid:4)(cid:4)(cid:5)It follows from Lemma 6 that ϕo is true for S[F , x1] if and only if x1 is objectively accepted in F .We summarize the above construction in the next lemma.Lemma 8. There exists an MSO sentence ϕs such that ϕs is true for S[F , x1] if and only if x1 is subjectively accepted in F . Similarly,there exists an MSO sentence ϕo such that ϕo is true for S[F , x1] if and only if x1 is objectively accepted in F .In view of Lemmas 7 and 8, Theorem 3 now follows by Courcelle’s Theorem.If both the treewidth of the value graph and the value-width of a value-based system are bounded, then also theextended graph structure has bounded treewidth, hence we have the following corollary.Corollary 2. The problems Subjective and Objective Acceptance can be decided in linear time for value-based systems for whichboth value-width and the treewidth of their value graphs are bounded.(cid:5)Proof. Let k and kk and assume the value-width of F is kgraph structure of F . Since |χ (cid:5)(t)| (cid:2) |χ (t)| · kis bounded by the constant kproblems for F in linear time. (cid:2)be constants. Let (T , χ ) be a tree decomposition of the value graph of a value-based system F of widthv∈χ (t) η−1(v) is a tree decomposition of the extendedholds for all nodes t of T , it follows that the width of (T , χ (cid:5))(cid:5) − 1. We conclude, in view of Theorem 3, that we can decide both acceptance. Then (T , χ (cid:5)) with χ (cid:5)(t) =(cid:5) (cid:2) (k + 1)k(cid:5)(cid:5) = (k + 1)k(cid:6)(cid:5)(cid:5)5. ConclusionWe have studied the computational complexity of persuasive argumentation for value-based argumentation frameworksunder structural restrictions. We have established the intractability of deciding subjective or objective acceptance for value-based systems with value-width 2 and attack-width 1, disproving conjectures stated by Dunne. It might be interesting tonote that our reductions show that intractability even holds if the attack relation of the value-based system under considera-tion forms a directed acyclic graph. On the positive side we have shown that value-based systems with value-width 2 whosegraph structure is bipartite are solvable in polynomial time. These results establish a sharp boundary between tractabilityand intractability of persuasive argumentation for value-based systems with value-width 2. Furthermore we have introducedthe notion of the extended graph structure of a value-based system and have shown that subjective and objective acceptancecan be decided in linear time if the treewidth of the extended graph structure is bounded (that is, the problems are fixed-parameter tractable when parameterized by the treewidth of the extended graph structure). This is in strong contrast to theintractability of the problems for value-based systems where the treewidth of the graph structure or the treewidth of theirvalue graph is bounded. Therefore we conclude that the extended graph structure seems to be an appropriate graphicalmodel for studying the computational complexity of persuasive argumentation. It might be interesting for future work toextend this study to other graph-theoretic properties or parameters of the extended graph structure.AcknowledgementsWe thank the anonymous reviewers for valuable suggestions and for pointing out the connection between certifyingpaths and dialogues.Appendix A. Technical proofsProof of Lemma 1. Let C = (x1, z1, . . . , xk, zk, t) be a certifying path for x1 in F . Take a specific audience (cid:2) such thatη(x1) < · · · < η(xk) < η(t) and all other values in V are smaller than η(x1). We claim that the unique preferred extensionP = GE(F (cid:2)) of F (cid:2) includes {x1, . . . , xk, t} and excludes {z1, . . . , zk}, which means that x1 is subjectively accepted in F . ItE.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–17361735follows from C5 that t is not attacked by any other argument in F (cid:2) and hence t ∈ P (see also Section 2 for a description ofan algorithm to find the unique preferred extension of an acyclic abstract argumentation system). From C4 it follows thatzk /∈ P . Furthermore, if there exists an argument z (cid:8)= t, η(t) = η(z) then either (t, z) ∈ A(cid:2) or z does not attack an argumentin {x1, . . . , xk, t}. In the first case z /∈ P and does not influence the membership in P for any other arguments in X . In thesecond case z ∈ P but it does not attack any argument in {x1, . . . , xk, t}. In both cases it follows that xk ∈ P . Using C3 itfollows that zk−1 /∈ P and since we already know that zk /∈ P it follows that xk−1 ∈ P . A repeated application of the abovearguments establishes the claim, and hence x1 ∈ P follows.Conversely, suppose that there exists a specific audience (cid:2) such that x1 is contained in the unique preferred extensionP = GE(F (cid:2)) of F (cid:2). We will now construct a certifying path C for x1 in F . Clearly, if there is no z1 ∈ X \ {x1} with η(z1) =η(x1) and (z1, x1) ∈ A, then (x1) is a certifying path for x1 in F . Hence, it remains to consider the case where such a z1exists. Since x1 ∈ P it follows that z1 /∈ P . The sequence (x1, z1) clearly satisfies properties C1–C3. We now show that wecan always extend such a sequence until we have found a certifying path for x1 in F . Hence, let S = (x1, z1, . . . , xl, zl) besuch a sequence satisfying conditions C1–C3, and in addition assume S satisfies the following two conditions:S1 It holds that η(x1) < · · · < η(xl).S2 For every 1 (cid:2) i (cid:2) l we have xi ∈ P and zi /∈ P .Clearly, the sequence (x1, z1) satisfies S1 and S2, hence we can include these conditions in our induction hypothesis. Itremains to show how to extend S to a certifying path. Let Y := { y ∈ P | ( y, zl) ∈ A ∧ η( y) > η(xl) = η(zl)}. Then Y (cid:8)= ∅because zl /∈ P by condition S2 and the assumption that P is a preferred extension.For each y ∈ Y let C y = (x1, z1, . . . , xl, zl, y). If there is an argument y ∈ Y such that C y is a certifying path for x1 in Fwe are done. Hence assume there is no such y ∈ Y .We choose xl+1 ∈ Y arbitrarily. Note that C xl+1 satisfies the condition C4; (xl+1, zl) ∈ A (as xl+1 ∈ Y ) and (xl+1, xi) /∈ A for1 (cid:2) i (cid:2) l (as xl+1, xi ∈ P and P is conflict-free). Since we assume that C xl+1 is not a certifying path, C xl+1 must violate C5.It follows that there exists some argument zl+1 with η(zl+1) = η(xl+1) such that (xl+1, zl+1) /∈ A and (zl+1, xi) ∈ A for(cid:5) = (x1, z1, . . . , xl, zl, xl+1, zl+1) satisfies conditions C1–C3 and S1–S2. Hence, we aresome 1 (cid:2) i (cid:2) l + 1. We conclude that Sindeed able to extend S and will eventually obtain a certifying path for x1 in F . (cid:2)Proof of Lemma 2. Assume that x1 is objectively accepted in F . Suppose there is a p ∈ X that attacks x1 and η(p) = η(x1). Ifwe take a specific audience (cid:2) where η(x1) is the greatest element, then x1 is not in the unique preferred extension of F (cid:2),a contradiction to the assumption that x1 is objectively accepted. Hence η(p) (cid:8)= η(x1) for all arguments p ∈ X that attackx1. Next suppose there is an argument p ∈ X that attacks x1 and is subjectively accepted in F − η(x1). Let (cid:2) be a specificaudience such that p is in the unique preferred extension of (F − η(x1))(cid:2). We extend (cid:2) to a total ordering of V ensuringη(x1) (cid:2) η(p). Clearly x1 is not in the unique preferred extension of F (cid:2), again a contradiction. Hence indeed for all p ∈ Xthat attack x1 we have η(p) (cid:8)= η(x1) and p is not subjectively accepted in F − η(x1).We establish the reverse direction by proving its counter positive. Assume that x1 is not objectively accepted in F . Weshow that there exists some p ∈ X that attacks x1 and where either η(p) = η(x1) or p is subjectively accepted in F − η(x1).Let (cid:2) be a specific audience of F such that x1 is not in the unique preferred extension P = GE(F (cid:2)) of F (cid:2). In view ofthe labeling procedure for finding P as sketched in Section 2, it follows that there exists some p ∈ P that attacks x1 withη(x1) (cid:2) η(p). If η(x1) = η(p) then we are done. On the other hand, if η(p) (cid:8)= η(x1), then p is in the unique preferredextension of (F − η(x1))(cid:2), and so p is subjectively accepted in F − η(x1). (cid:2)Proof of Corollary 1. We slightly modify the reduction from 3SAT as given in Section 3.2. Let C1, . . . , Cm be the clauses ofthe 3CNF formula Φ. It is well known that 3SAT remains NP-hard for formulas where each clause is either positive (all threeliterals are unnegated variables) or negative (all three literals are negated variables), see [24]. Hence we may assume that forsome 2 (cid:2) k (cid:2) m, C1, . . . , Ck are positive clauses and Ck+1, . . . , Cm are negative clauses. Let F and Fbe the two value-basedsystems corresponding to Φ as constructed in Section 3.2. We obtain from F the value-based system F B by adding a newpair of arguments xB , y B with a new value v B = η(xB ) = η( y B ) and inserting the pair between the pairs xik and the pairxk+1, zk+1. That is, for 1 (cid:2) i (cid:2) 3 we replace the attacks (xk+1, zik), and(cid:5)we add the attacks (xk+1, zB ), (zk+1, xB ). By the same modification we obtain from FB . ClearlyClaims 1 and 2 still hold for the modified value-based systems, i.e., Φ is satisfiable if and only if x1 is subjectively acceptedin F , and Φ is satisfiable if and only if x1 is not objectively accepted in Fk) with the attacks (xB , zithe value-based system Fk) and (zk+1, xik) and (zB , xik, zi.(cid:5)(cid:5)(cid:5)In order to establish the corollary it remains to show that the value graphs of F B and FWe partition the set of arguments into two sets X0 and X1. X0 contains the values v j for j (cid:2) k, the value v B , and the(cid:5)B , X1 contains also(cid:5)B havevalues v ithe value v 0. It is easy to check that there is no attack (a, b) with η(a), η(b) ∈ X0 or η(a), η(b) ∈ X1, hence F B and Fbipartite value graphs. (cid:2)j for j > k. X1 contains the values v j for j > k, the values v ij for j (cid:2) k, and the value vt . For F(cid:5)B are bipartite.(cid:5)Proof of Lemma 7. Let G(t, (t, h), h) for t, h ∈ V by an edge {t, h}; i.e., Gbe the graph obtained from G(S[F , x1]) = (V S[F ,x1], E S[F ,x1]) by replacing every path of the form(cid:5) = (E S[F ,x1] ∩ {{u, v} | u, v ∈ X ∪(cid:5) = X ∪ V and E(cid:5)) where V(cid:5) = (V(cid:5), E1736E.J. Kim et al. / Artificial Intelligence 175 (2011) 1722–1736by subdividing all edges of the form {t, h} forV }) ∪ {{t, h} | (t, h) ∈ E R }. Conversely one can obtain G(S[F , x1]) from Gt, h ∈ V and (t, h) ∈ E R with a vertex (t, h). However, subdividing edges does not change the treewidth of a graph [21],is at most twice the treewidth of the extended graph structure of Fhence it suffices to show that the treewidth of Gplus 1. Let T = (T , χ ) be a tree decomposition of the extended graph structure of F . We observe that T (cid:5) = (T , χ (cid:5)) whereχ (cid:5)(t) = χ (t) ∪ {η(v) | v ∈ X ∩ χ (t)} is a tree decomposition of Gwhere |χ (cid:5)(t)| (cid:2) 2 · |χ (t)| for all nodes t of T ; hence thewidth of T (cid:5)is at most twice the width of T plus 1. (cid:2)(cid:5)(cid:5)(cid:5)References[1] P.M. Dung, On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games, ArtificialIntelligence 77 (2) (1995) 321–357.[2] T.J.M. Bench-Capon, P.E. Dunne, Argumentation in artificial intelligence, Artificial Intelligence 171 (10–15) (2007) 619–641.[3] P. Besnard, A. Hunter, Elements of Argumentation, The MIT Press, 2008.[4] I. Rahwan, G.R. Simari (Eds.), Argumentation Artificial Intelligence, Springer-Verlag, 2009.[5] J.L. Pollock, How to reason defeasibly, Artificial Intelligence 57 (1) (1992) 1–42.[6] A. Bondarenko, P.M. Dung, R.A. Kowalski, F. Toni, An abstract, argumentation-theoretic approach to default reasoning, Artificial Intelligence 93 (1–2)(1997) 63–101.[7] S. Parsons, M. Wooldridge, L. Amgoud, Properties and complexity of some formal inter-agent dialogues, Journal of Logic and Computation 13 (3) (2003)347–376.[8] T.J.M. Bench-Capon, Persuasion in practical argument using value-based argumentation frameworks, Journal of Logic and Computation 13 (3) (2003)429–448.[9] T.J.M. Bench-Capon, S. Doutre, P.E. Dunne, Audiences in argumentation frameworks, Artificial Intelligence 171 (1) (2007) 42–71.[10] P.E. Dunne, T.J.M. Bench-Capon, Complexity value-based argument systems, in: J.J. Alferes, J.A. Leite (Eds.), Logics in Artificial Intelligence, Proceedings ofthe 9th European Conference, JELIA 2004, Lisbon, Portugal, September 27–30, 2004, in: Lecture Notes in Computer Science, vol. 3229, Springer-Verlag,2004, pp. 360–371.[11] P.E. Dunne, Tractability in value based argumentation, in: P. Baroni, F. Cerutti, M. Giacomin, G.R. Simari (Eds.), Computational Models of Argumentation,Proceedings of COMMA 2010, in: Frontiers in Artificial Intelligence and Applications, vol. 216, IOS, 2010, pp. 195–206.[12] P.E. Dunne, Computational properties of argument systems satisfying graph-theoretic constraints, Artificial Intelligence 171 (10–15) (2007) 701–729.[13] E.J. Kim, S. Ordyniak, S. Szeider, Algorithms and complexity results for persuasive argumentation, in: P. Baroni, F. Cerutti, M. Giacomin, G.R. Simari(Eds.), Computational Models of Argumentation, Proceedings of COMMA 2010, in: Frontiers in Artificial Intelligence and Applications, vol. 216, IOS,2010, pp. 311–322.[14] J. Bang-Jensen, G. Gutin, Digraphs: Theory, Algorithms, Applications, Springer Monographs in Mathematics, Springer-Verlag, London, 2001.[15] P. Baroni, M. Giacomin, Semantics of abstract argument systems, in: I. Rahwan, G. Simari (Eds.), Argumentation in Artificial Intelligence, Springer-Verlag,2009, pp. 25–44.[16] E.C. Freuder, A sufficient condition for backtrack-bounded search, Journal of the ACM 32 (4) (1985) 755–761.[17] R. Dechter, Bucket elimination: A unifying framework for reasoning, Artificial Intelligence 113 (1–2) (1999) 41–85.[18] A. Darwiche, Recursive conditioning, Artificial Intelligence 126 (1–2) (2001) 5–41.[19] G. Gottlob, R. Pichler, F. Wei, Bounded treewidth as a key to tractability of knowledge representation and reasoning, in: 21st National Conference onArtificial Intelligence and the 18th Innovative Applications of Artificial Intelligence Conference, AAAI Press, 2006.[20] W. Dvorák, R. Pichler, S. Woltran, Towards fixed-parameter tractable algorithms for argumentation, in: F. Lin, U. Sattler, M. Truszczynski (Eds.), Principlesof Knowledge Representation and Reasoning: Proceedings of the Twelfth International Conference, KR 2010, Toronto, Ontario, Canada, May 9–13, 2010,AAAI Press, 2010.[21] H.L. Bodlaender, A tourist guide through treewidth, Acta Cybernetica 11 (1993) 1–21.[22] B. Courcelle, Recognizability and second-order definability for sets of finite graphs, Tech. Rep. I-8634, Université de Bordeaux, 1987.[23] J. Flum, M. Grohe, Parameterized Complexity Theory, Texts in Theoretical Computer Science. An EATCS Series, vol. XIV, Springer-Verlag, Berlin, 2006.[24] M.R. Garey, D.R. Johnson, Computers and Intractability, W.H. Freeman and Company, New York, San Francisco, 1979.