Artificial Intelligence 173 (2009) 901–934Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintReasoning about preferences in argumentation frameworksSanjay Modgil∗Department of Computer Science, Kings College London, Strand, London WC2R 2LS, UKa r t i c l ei n f oa b s t r a c tArticle history:Received 17 December 2007Received in revised form 23 December 2008Accepted 3 February 2009Available online 7 February 2009Keywords:ArgumentationDungPreferencesNon-monotonic reasoningLogic programmingThe abstract nature of Dung’s seminal theory of argumentation accounts for its widespreadapplication as a general framework for various species of non-monotonic reasoning, and,more generally, reasoning in the presence of conflict. A Dung argumentation frameworkis instantiated by arguments and a binary conflict based attack relation, defined by someunderlying logical theory. The justified arguments under different extensional semanticsare then evaluated, and the claims of these arguments define the inferences of theunderlying theory. To determine a unique set of justified arguments often requires apreference relation on arguments to determine the success of attacks between arguments.However, preference information is often itself defeasible, conflicting and so subjectin this paper we extend Dung’s theory to accommodateto argumentation. Hence,arguments that claim preferences between other arguments, thus incorporating meta-level argumentation based reasoning about preferences in the object level. We then defineand study application of the full range of Dung’s extensional semantics to the extendedframework, and study special classes of the extended framework. The extended theorypreserves the abstract nature of Dung’s approach, thus aiming at a general framework fornon-monotonic formalisms that accommodate defeasible reasoning about as well as withpreference information. We illustrate by formalising argument based logic programmingwith defeasible priorities in the extended theory.© 2009 Elsevier B.V. All rights reserved.1. Introduction1.1. BackgroundThe formal study of argumentation has come to be increasingly central as a core study within Artificial Intelligence [12].Logic based models of argumentation are being applied to formalisation of defeasible reasoning and conflict resolutionover beliefs and goals, and to decision making over actions [1,8,24,25,35]. The inherently dialectical nature of these modelshave provided foundations for formalisation of argumentation-based dialogues [5], where, for example, one agent seeksto persuade another to adopt a belief it does not already hold to be true [33], or when agents deliberate about whatactions to execute [21], or negotiate over resources [4]. Furthermore, recent major research projects [6,7] are developinggeneral models of argumentation based inference, decision making and dialogue, and implementations of these models fordeployment in agent and semantic grid applications.Many of the above theoretical and practical developments build on Dung’s seminal theory of argumentation [19]. A Dungargumentation framework is a directed graph consisting of a set of arguments Args and a binary conflict based attack re-lation R on Args. The extensions, and so justified arguments of a framework are then defined under different semantics,* Tel.: +44 (0)207 8481631.E-mail address: sanjay.modgil@kcl.ac.uk.0004-3702/$ – see front matter © 2009 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2009.02.001902S. Modgil / Artificial Intelligence 173 (2009) 901–934where the choice of semantics equates with varying degrees of scepticism or credulousness. Extensions are defined throughapplication of an ‘acceptability calculus’, whereby an argument X ∈ Args is said to be acceptable with respect to S ⊆ Args iffany argument Y that attacks X is itself attacked by some argument Z in S (intuitively, any such Z is said to reinstate X ).For example, if S is a maximal (under set inclusion) set such that all its contained arguments are acceptable with respectto S, then S is said to be an extension under the preferred semantics.Recent years have witnessed intensive formal study, development and application of Dungs ideas in various directions.This can be attributed to the abstract nature of a Dung argumentation framework, and the encoding of intuitive, genericprinciples of commonsense reasoning through application of the acceptability calculus. The underlying logic, and defini-tion of the logic’s constructed arguments Args and attack relation R is left unspecified, thus enabling instantiation of aframework by various logical formalisms. A theory’s inferences can then be defined in terms of the claims of the justifiedarguments constructed from the theory (an argument essentially being a proof of a candidate inference – the argument’sclaim – in the underlying logic). Dung’s theory can therefore be understood as a semantics for non-monotonic reasoning. Inthis view, what appropriately accounts for the correctness of an inference is that it can be shown to rationally prevail in theface of opposing inferences, where it is application of the acceptability calculus that encodes logic neutral, rational meansfor establishing such standards of correctness. Indeed, many logic programming formalisms and non-monotonic logics (e.g.default, auto-epistemic, defeasible, non-monotonic modal logics and certain instances of circumscription) have been shownto conform to Dung’s semantics [13,18–20].Dung’s extensional semantics may yield multiple extensions. The sceptically justified arguments are those that appearin every extension. However, one may then be faced with the problem of how to choose between conflicting credulouslyjustified arguments that belong to at least one, but not all extensions. To illustrate, consider two individuals P and Qexchanging arguments A, B . . . about the weather forecast:P1: “Today will be dry in London since the BBC forecast sunshine” = A.Q1: “Today will be wet in London since CNN forecast rain” = B.A and B claim contradictory conclusions and so attack each other (symmetrically attack). Under Dung’s preferred semantics,there are two extensions: { A} and {B}. Neither argument is sceptically justified. One solution is to provide some means forpreferring one argument to another. Some works (e.g., [32,34]) formalise the role of preferences in the underlying logicalformalisms that instantiate a Dung framework. For example, in [32], if X undercuts Y (where ‘undercut’ denotes a certaintype of conflict based interaction), then XRY if Y is not stronger than (preferred to) X . Other approaches formalise therole of preferences at an abstract level. In Amgoud and Cayrol’s Preference based Argumentation Frameworks [3], a Dungframework is augmented with a preference ordering on Args, so that an attack by X on Y is successful only if Y is notpreferred to X . In Bench-Capon’s Value based Argumentation Frameworks (VAFs) [11], a Dung framework is augmented withvalues and value orderings, so that an attack by X on Y is successful only if the value promoted by Y is not ranked higherthan the value promoted by X according to a given ordering on values.Examining the role of preferences in the above weather example, one might reason that A is preferred to B because theBBC are deemed more trustworthy than CNN. Hence B does not successfully attack A, and so this attack can be removedand we are only left with the successful attack from A to B. Thus only { A} will be a preferred extension; A is scepticallyjustified. This example illustrates resolution of an argumentation framework obtained by replacing symmetric attacks withasymmetric attacks. Properties relating frameworks and their resolutions have been studied in [9] and [26]. Properties offrameworks obtained through removal of asymmetric attacks have also been studied in the context of VAFs.1.2. Overview of paperInformation required to determine the success of an attack is often assumed pre-specified, as a given preference or valueordering. However, preference information may be contradictory, given that preferences may vary according to context, anddistinct sources may valuate the strengths of arguments using different criteria, or indeed assign different valuations for anygiven criterion. Thus, one often needs to reason, and indeed argue about, as well as with, defeasible and possibly conflictingpreference information. To illustrate, consider continuation of the above dialogue about the weather:P2: “But the BBC are more trustworthy than CNN” = C .Q2: “However, statistically CNN are more accurate forecasters than the BBC” = CQ3: “And basing a comparison on statistics is more rigorous and rational than basing a comparison on your instinctsabout their relative trustworthiness” = E..(cid:5)(cid:5)expresses a preference for B over A. C and C(cid:5)Argument C is not an argument that attacks B; rather it is an argument expressing a preference for A over B. However,attack each other since they express contradictory preferences. Finally,Csuccessfully attacks C . We thus have a sceptically justifiedargument E claims that Cargument Cclaiming that B is preferred to A, and so B is sceptically justified.is preferred to C , and so only C(cid:5)(cid:5)(cid:5)S. Modgil / Artificial Intelligence 173 (2009) 901–934903In this paper we are thus motivated to extend Dung’s theory to accommodate argumentation about preferences. Thepaper is organised as follows. In Section 2 we review Dung’s theory of argumentation. In the sections that follow wedescribe our contributions to the formal study and application of argumentation:• In Sections 3 and 4, Dung’s theory of argumentation is extended to integrate ‘metalevel’ argumentation about pref-erences between arguments. The extended theory preserves the abstract nature of Dung’s approach. Arguments expressingpreferences (preference arguments) are simply nodes in a graph, and application of preferences is abstractly characterised; bydefining a new attack relation that originates from a preference argument, and that attacks an attack between the argumentsthat are the subject of the preference claim. Thus, no commitment is made to how preferences are defined and appliedin the formalism instantiating the framework. Preference arguments expressing contradictory preferences attack each other,where these attacks can then themselves be attacked by preference arguments. We then extend Dung’s acceptability calcu-lus so that both arguments and attacks need to be reinstated. The extensional semantics for the extended framework arethen defined in exactly the same way as for a Dung framework, and some basic results that hold of the extensional se-mantics for a Dung framework are also shown to hold for the extended framework. Our aim is to therefore lay foundationsfor straightforward modification of applications and developments of Dung’s work to accommodate argumentation aboutpreferences.• The extended theory provides a general setting for formally studying the application of preferences in argumentation,and, more generally, the removal of attacks. Thus, the above mentioned work on resolutions of frameworks [9,26] can nowbe extended to account for the use of preference arguments in obtaining such resolutions. In this paper we study twospecial classes of extended argumentation framework: Section 5 studies hierarchical frameworks that posit restrictions oninteractions between arguments at the object and metalevel, and Section 6 studies preference symmetric frameworks thatonly allow for removal of attacks between symmetrically attacking arguments.• The extended theory is proposed as a unifying framework in which to formalise and extend works that augment Dung’sframework with preferences [3,11]. In support of this proposal, Section 5 describes how value based argumentation [11] canbe formalised and extended in hierarchical frameworks in order to integrate metalevel reasoning about values and valueorderings.• The extended theory is proposed as a semantics for object level non-monotonic formalisms that accommodate defea-sible reasoning about priorities. Such formalisms extend the object level logical languages for argument construction withrules for deriving priorities amongst rules, e.g., in default logic [14] and logic programming [24,34]. One can then construct‘priority arguments’ whose claims determine preferences between other mutually attacking arguments. Arguments claimingconflicting priorities may be constructed and preferences between these can be established on the basis of other priorityarguments. Our approach generalises these formalisms in that preferences may be based not only on rule priorities, buton any criterion for valuating argument strength, including criteria that relate to the argument as a whole (such as thevalue promoted by an argument). Furthermore, these formalisms do not straightforwardly allow for application of Dung’sacceptability calculus, and evaluation of the justified arguments under the full range of Dung’s semantics. The extendedframework provides for such evaluation, through provision of an abstract characterisation of preference application whileretaining the basic conceptual machinery of Dung. In Section 7 we show how the extended theory can serve as a semanticsfor Prakken and Sartor’s argument based logic programming with defeasible priorities (ALP-DP) [34].1 Arguments definedby an ALP-DP theory instantiate a preference symmetric framework, so that in contrast with [34], one can then evaluate thejustified arguments of an ALP-DP theory under all of Dung’s semantics.In Section 8 we discuss related work; in particular the work of Kakas and Moraitis [23,24], and conclude and indicatedirections for future work in Section 9. Finally, the reader is referred to the appendix for proofs of the paper’s proposi-tions.2. Dung’s theory of argumentationIn this section we review Dung’s theory of argumentation [19].Definition 1. A Dung argumentation framework is a tuple AF = (Args, R), where Args is a set of arguments, and R ⊆Args × Args.Fig. 1 shows an argumentation framework in which an arrow from X to Y denotes that ( X, Y ) ∈ R.Dung then defines the acceptability of arguments, and the characteristic function and admissible extensions of a frame-work.1 Note that extended frameworks and their instantiation by [34]’s logic programming formalism were first introduced in [28]. This paper contains amodified (simplified) account of the formalism described in [28], as well as additionally providing proofs of results, a formal description of the special casesof the extended frameworks and their properties, and formalisation of metalevel reasoning about values and value orderings in the extended framework.904S. Modgil / Artificial Intelligence 173 (2009) 901–934Fig. 1. A Dung argumentation framework.Definition 2. Let AF = (Args, R), S ⊆ Args and let A, B, C, . . . denote arguments in Args. Then:1. S is conflict free iff ∀ A, B ∈ S it is not the case that ( A, B) ∈ R.2. A is acceptable with respect to S iff ∀B ∈ Args: if (B, A) ∈ R then there is a C ∈ S such that (C, B) ∈ R.3. The characteristic function of AF, denoted F AF , is defined as follows:– F AF : 2Args (cid:7)→ 2Args;– F AF(S) = { A | A is acceptable w.r.t. S}.4. If S is conflict free, then S is an admissible extension of AF iff each argument in S is acceptable with respect to S (i.e.,S ⊆ F AF(S)).Intuitively, an argument A is acceptable with respect to S if for any argument B that attacks A, there is a C in S thatattacks B, in which case C is said to defend or ‘reinstate’ A. An admissible extension S can then be interpreted as a coherentdefendable position. From hereon, since we will refer to an arbitrary but fixed argumentation framework, we will write Finstead of F AF .Admissibility is augmented by preferred, complete, stable and grounded semantics:Definition 3. Let AF = (Args, R), S a conflict free subset of Args, and F the characteristic function of AF. Then:• S is a preferred extension iff S is a set inclusion maximal admissible extension.• S is a complete extension iff each argument which is acceptable w.r.t. S is in S (S = F (S)).• S is a stable extension iff ∀B /∈ S, ∃ A ∈ S such that ( A, B) ∈ R.• S is the grounded extension iff S is the least fixed point of F (the smallest complete extension).For s ∈ {complete, preferred, stable, grounded}, an argument is said to be sceptically justified under the s semantics ifit belongs to all extensions. An argument is said to be only credulously justified under the s semantics if it belongs toat least one, but not all, extensions. Sceptical and credulous justification coincide for the grounded semantics given that aframework only ever has a single grounded extension.The admissible extensions of the framework in Fig. 1 are: ∅, { A}, {B}, { A, D}, and {B, D}. { A, D}, and {B, D} are thepreferred and stable extensions. ∅, { A, D}, and {B, D} are the complete extensions, and ∅ the grounded extension. Note thatD is sceptically justified under the preferred semantics, but is not sceptically justified under the grounded semantics.3. Extended argumentation frameworksIn this section we motivate extending Dung’s framework to include arguments that express preferences between otherarguments, and so determine whether attacks succeed. Following convention, we may in what follows synonymously write‘defeats’ instead of ‘successfully attacks’.Recall the weather forecast example in Section 1 in which arguments A and B symmetrically attack (( A, B), (B, A) ∈ R).Hence { A} and {B} are admissible. We have that A is preferred to B (claimed by argument C ). Hence B does not successfullyattack (defeat) A, but A does defeat B. If we were to evaluate admissibility on the basis of defeats, then { A} is admissible,and {B} is not an admissible extension.The impact of argument C could conceivably be modelled by letting C attack B ((cid:2)1 in Fig. 2). This would yield therequired result: only { A} is admissible. However, suppose an argument D that defeats A (e.g. D = “the BBC forecast is forGlasgow and not London”). Then {B} would still not be admissible ((cid:2)2 in Fig. 2), which is clearly inappropriate. C expressesa preference for A over B, but if A is defeated by another argument, then B should be reinstated.Intuitively, C is an argument about the relationship between A and B. Specifically, in expressing a preference for A overB, C is an argument for A’s defence against B’s attack on A. That is, C defence attacks B’s attack on A ((cid:2)3 in Fig. 2) sothat B’s attack on A does not succeed as a defeat. B’s attack on A is, as it were, cancelled out, and we are left with Adefeating B. Now, if D defeats A, D reinstates B and {B, D} is an admissible extension of (cid:2)4 in Fig. 2.Of course, given Cclaiming a preference for B over A and so defence (d) attacking A’s attack on B, then the issue ofclaim contradictory preferences and sowhich attack succeeds as a defeat is once again unresolved. Intuitively, C and Cattack each other ((cid:2)5 in Fig. 2). These attacks can themselves be subject to d attacks in order to determine the defeatand so A and B. In (cid:2)6 in Fig. 2, E d attacks the attack from C to C, and so determines thatrelation between C and C(cid:5)(cid:5)(cid:5)(cid:5)S. Modgil / Artificial Intelligence 173 (2009) 901–934905Fig. 2. Arguing about the weather.Fig. 3. The EAF for the weather forecast example.(cid:5)defeats C . Hence, C ’s d-attack on B’s attack on A is cancelled out, and we are left with B defeating A; the discussionCconcludes in favour of Q’s argument that it will be a wet day in London.We now formally define the elements of an Extended Argumentation Framework (EAF). As suggested by the above example,this involves extending Dung’s argumentation framework to include a second attack relation D that ranges from argumentsX to attacks (Y , Z ) ∈ R, where R is the standard binary attack relation in a Dung framework. If X attacks (Y , Z ) then X(cid:5)expresses that Y is preferred to Z . Hence, EAFs are requiredexpresses that Z is preferred to Y . If Xto conform to the constraint that any such arguments expressing contradictory preferences must attack each other (i.e.,( X, Xattacks ( Z , Y ), then X(cid:5), X ) ∈ R).), ( X(cid:5)(cid:5)Definition 4. An Extended Argumentation Framework (EAF) is a tuple (Args, R, D) such that Args is a set of arguments, and:• R ⊆ Args × Args,• D ⊆ Args × R,• If ( X, (Y , Z )), ( X(cid:5), (Z , Y )) ∈ D then ( X, X(cid:5)), ( X(cid:5), X) ∈ R.Notation 1. From hereon we may use the following notation:• Y (cid:3) Z denotes (Y , Z ) ∈ R. If in addition (Z , Y ) ∈ R, we may write Y (cid:2) Z .• X (cid:3) (Y (cid:3) Z ) denotes ( X, (Y , Z )) ∈ D.Example 1. The EAF for the weather forecasting example is (see Fig. 3):Args = { A, B, C, C(cid:5), E},R =(cid:2)( A, B), (B, A), (C, C(cid:5)), (C(cid:5)(cid:3), C),D =(cid:2)(cid:4)(cid:5)C, (B, A),(cid:4)C(cid:5)(cid:5),, ( A, B)(cid:4)E, (C, C(cid:5)(cid:5)(cid:3)).In an EAF, preferences are not defined by some externally given preference ordering, but are themselves claimed byarguments. Intuitively, given that an argument A attacks B, then one would reason that A defeats B, only if the arguments Sthat one is currently committed to, contain no argument claiming that B is preferred to A. That is to say, the success of anattack as a defeat is parameterised w.r.t. the preference arguments available in some such set S of arguments.22 Note that the logic programming formalisms in [34] and [24] similarly qualify the success of an attack A on B w.r.t. arguments, in some given set S,expressing priorities over rules in A and B. These works are discussed in Sections 7 and 8 respectively.906S. Modgil / Artificial Intelligence 173 (2009) 901–934Fig. 4. EAF for Example 3.Definition 5. Let (Args, R, D) be an EAF and S ⊆ Args. Then A defeatsS B iff ( A, B) ∈ R and ¬∃C ∈ S s.t. (C, ( A, B)) ∈ D.If A defeatsS B and B does not defeatS A then A strictly defeatsS B.From hereon we may write A →S B to denote that A defeatsS B and A (cid:2)S B to denote that A does not defeatS B.Example 2. Let (cid:2) be the EAF:A (cid:2) B, C (cid:3) ( A (cid:3) B).A and B defeatS each other for S = ∅, { A} and {B}. Also, B defeats{C} A, but A does not defeat{C} B (i.e., B strictlydefeats{C} A).We state an obvious property of the defeat relation:Proposition 1. If A defeatsS B, then ∀S(cid:5) ⊆ S, A defeatsS(cid:5) B.We now define a conflict free set S of arguments. One might define such a set as one in which no two argumentsattack each other. However, if A asymmetrically attacks B ( A (cid:3) B) but an argument C claims that B is preferred to A(C (cid:3) ( A (cid:3) B)) then B and A may both be justified. We may therefore want to allow both A and B to appear in anadmissible extension of an EAF, which (as in the case of a Dung framework) will be defined as a conflict free set S whosecontained arguments are acceptable w.r.t. S. This would clearly be inappropriate if arguments A and B refer to logicallyincompatible states of affairs as when arguing about what is believed to be the case. However, this may be appropriatein a practical reasoning context. Consider value based argumentation over action [8] in which an argument B justifying acourse of action, such as a medical treatment, is asymmetrically attacked by an argument A claiming that the treatment isprohibitively expensive. If the value promoted by B (improving patient health) is ranked higher than that promoted by A(reducing costs), then the attack is removed and both arguments may then be held as justified. One accepts that the actionis expensive, while still pursuing the course of action (this example will be formalised in Section 5). Hence, a conflict freeset is defined as follows:Definition 6. Let (cid:2) = (Args, R, D) be an EAF. Then S ⊆ Args is conflict free iff ∀ A, B ∈ S: if ( A, B) ∈ R, then (B, A) /∈ R and∃C ∈ S s.t. (C, ( A, B)) ∈ D.Intuitively, if A, B ∈ S and A attacks B, then S is conflict free only if B does not attack A and there is a C that defenceattacks the attack from A to B. Suppose the EAF (Args = { A, B, C}, R = {( A, B)}, D = {(C, ( A, B))}). Then S = { A, B} is notconflict free, but S(cid:5) = { A, B, C} is conflict free. Note that no two arguments in a conflict free set defeat each other:Proposition 2. Let S be conflict free subset of Args in (Args, R, D). Then for any X, Y ∈ S, X does not defeatS Y .The right to left half of Proposition 2 does not hold. The following is a counter-example that will be discussed later inSection 7.Example 3. Referring to the EAF in Fig. 4, no two arguments in {S} = { A, B, C, D} defeatS each other. However S is notconflict free since it contains arguments that symmetrically attack.4. Extensional semantics for extended argumentation frameworksIn this section extensional semantics for an EAF are defined in much the same way as for Dung frameworks. However,the definition of acceptability for EAFs extends Dung’s definition.S. Modgil / Artificial Intelligence 173 (2009) 901–934907Fig. 5. Examples motivating definition of acceptability for EAFs.4.1. Defining the acceptability of argumentsConsider Example 2 (see Fig. 5a). Is A acceptable w.r.t. S = { A}? We have that B →S A, and the only argument that canreinstate A is A itself, via the defeat A →S B denoting that A successfully attacks B w.r.t. S. However, the success of A’sattack on B is under challenge by the d attack from the argument C expressing that B is preferred to A. Hence, we needto ensure that some argument in S defeatsS C , effectively ‘reinstating’ A →S B. One might therefore propose the followingdefinition of acceptability:Ac1: Let (Args, R, D) be an EAF. A ∈ Args is acceptable w.r.t. S ⊆ Args iff ∀B ∈ Args such that B →S A, there is a C ∈ Ssuch that C →S B and ∀D ∈ Args s.t. (D, (C, B)) ∈ D, there is a E ∈ S s.t. E →S D.Recall that an admissible Dung extension is a set S whose contained arguments are acceptable w.r.t. S. One can thenmotivate a suitably ‘rational’ definition of acceptability by appealing to some basic intuitions that the derived notion ofadmissibility should satisfy. Specifically, Dung’s ‘Fundamental Lemma’ [19] expresses that if S is admissible, and A is accept-able w.r.t. S, then S ∪ { A} should be admissible. Intuitively, an admissible extension represents a coherent set of arguments– a ‘position’ – that defends (in the sense of reinstating) each of its contained arguments. If I have already establishedsuch a position S in the course of an argument with an adversary, and show that given this position I can defend anotherargument A that I propose, then clearly I would want that upon inclusion of A in S, A does not undermine S by makingsome argument in S no longer defended by S.Ac1’s definition of acceptability, and the derived notion of admissibility, fails to satisfy the fundamental lemma. ConsiderFig. 5b, in which A1 and A2 (which is not attacked by any argument) are Ac1 acceptable w.r.t. S, and so S is Ac1 admissible.(cid:5) = { A1, A2} ∪ {B3} is not admissible sinceHowever, B3 (which is not attacked by any argument) is acceptable w.r.t. S, but S(cid:5)means that A2 (cid:2)SA1 is now not Ac1 acceptable w.r.t. SB2. Dung frameworkssatisfy the fundamental lemma because every attack originating from an argument in an admissible extension is preservedby inclusion of an argument acceptable w.r.t. the extension. This is not the case for EAFs. Inclusion of B3 cancels out theattack from A2 to B2, so that A2 no longer defeats B2. Hence, a definition of acceptability that ensures satisfaction ofthe fundamental lemma will require that when checking the acceptability of A1 w.r.t. S, one not only needs to check thatA1 →S B1 is reinstated, but also that A2 →S B2 is reinstated. The latter is not the case since no argument in S defeatsS B3.In general, we need to check for the existence of a defeat reinstatement set.. This is because the inclusion of B3 in S(cid:5)(cid:5)Definition 7. Let S ⊆ Args in (Args, R, D). Then R S = { X1 →S Y 1, . . . , Xn →S Yn} is a reinstatement set for C →S B, iff:1. C →S B ∈ R S ,2. for i = 1 . . . n, Xi ∈ S,(cid:5)3. ∀ X →S Y ∈ R S , ∀Ys.t. (Y(cid:5), ( X, Y )) ∈ D, there is a X(cid:5) →S Y(cid:5) ∈ R S .We now formally define the acceptability of an argument:Definition 8. Let (Args, R, D) be an EAF. A ∈ Args is acceptable w.r.t. S ⊆ Args, iff: ∀B s.t. B →S A, there is a C ∈ S s.t.C →S B and there is a reinstatement set for C →S B.Under this definition of acceptability, S in Fig. 5b is not admissible since A1 is not acceptable w.r.t. S. In Fig. 5c, Ais acceptable w.r.t. S, given the reinstatement set {C →S B, C 1 →S B1, C 2 →S B2} for C →S B. If in addition we had anargument B3 such that B3 (cid:3) (C 2 (cid:3) B2) and no argument in S that defeatsS B3, then no reinstatement set for C →S Bwould exist. Note that the acceptability of an argument with respect to a set S does not amount to checking whether Sis admissible. In Fig. 5c, suppose an additional argument B4 that attacked and defeatedS C 2. A would still be acceptablew.r.t. S, but S would not be admissible.908S. Modgil / Artificial Intelligence 173 (2009) 901–9344.2. Defining the extensions of an extended argumentation frameworkThe admissible, preferred, complete and stable extensions of an EAF are now defined in the same way as for Dungframeworks:Definition 9. Let S be a conflict free subset of Args in (Args, R, D). Then:• S is an admissible extension iff every argument in S is acceptable w.r.t. S.• S is a preferred extension iff S is a set inclusion maximal admissible extension.• S is a complete extension iff each argument which is acceptable w.r.t. S is in S.• S is a stable extension iff ∀B /∈ S, ∃ A ∈ S such that A defeatsS B.For s ∈ {preferred, complete, stable}, A is sceptically, respectively credulously, justified under the s semantics iff A is in(cid:5), E} is the single preferred, complete, and stable extension inevery, respectively at least one, s extension. Note that {B, CExample 1.We now state some basic results that hold of Dung and Extended Argumentation Frameworks. In particular, checking forexistence of a reinstatement set when defining acceptability ensures that Dung’s fundamental lemma holds for EAFs:Proposition 3. Let (cid:2) = (Args, R, D) be an Extended Argumentation Framework, S an admissible extension of (cid:2), and let A, Aarguments which are acceptable w.r.t S. Then:(cid:5)be1. S2. A(cid:5) = S ∪ { A} is admissible.(cid:5)is acceptable w.r.t. S.(cid:5)Proposition 4 follows immediately from Proposition 3:Proposition 4. Let (cid:2) = (Args, R, D) be an Extended Argumentation Framework.1. The set of all admissible extensions of (cid:2) form a complete partial order w.r.t. set inclusion.2. For each admissible extension E of (cid:2) there exists a preferred extension Eof (cid:2) such that E ⊆ E(cid:5)(cid:5).Since ∅ is an admissible extension of every EAF, then Proposition 4 implies that:Corollary 1. Every EAF possesses at least one preferred extension.As in the case of a Dung framework, not every EAF has a stable extension. For example, the EAF A (cid:3) A does not have astable extension. Finally:Proposition 5. Every stable extension of an EAF is a preferred extension but not vice versa.In [19], the grounded extension of a Dung framework AF = (Args, R) is defined as the least fixed point of the framework’s(cid:5)), where S andcharacteristic function F (see Definitions 2 and 3). F is shown to be monotonic, i.e., if S ⊆ S(cid:5)Sare both subsets of Args. The monotonicity of F guarantees the existence of a least fixed point and gives it a constructiveflavour: its least fixed point – the AF’s grounded extension (GE(AF)) – can be approached under iterated application of F tothe empty set. Defining the sequence:then F (S) ⊆ F (S(cid:5)• F 0 = ∅,• F i+1 = F (F i),(cid:6)∞then GE(AF) ⊆i=0(F i).If AF is finitary, i.e., every argument is attacked by at most a finite number of arguments, then the grounded extensioncan be obtained by iterative application to the empty set:GE(AF) =∞(cid:7)(cid:4)(cid:5).F ii=0We now define the characteristic function of an EAF. For reasons that will become apparent later, the domain of the functionis restricted to conflict free sets.S. Modgil / Artificial Intelligence 173 (2009) 901–934909Definition 10. Let (cid:2) = (Args, R, D) be an EAF, S ⊆ Args, and 2ArgsC denote the set of all conflict free subsets of Args. Thecharacteristic function F (cid:2) of (cid:2) is defined as follows:• F (cid:2) : 2ArgsC (cid:7)→ 2Args,• F (cid:2)(S) = { A | A is acceptable w.r.t. S}.From hereon, since we will always refer to an arbitrary but fixed EAF, we will simply write F rather than F (cid:2). As forDung frameworks, for any conflict free S ⊆ Args in (cid:2) = (Args, R, D), S is admissible iff S ⊆ F (S), and complete iff S is afixed point of F . We now define a procedure iteratively applying F to an EAF:Definition 11. Define for any EAF (Args, R, D) the following sequence of subsets of Args.• F 0 = ∅,• F i+1 = F (F i).However, an EAFs characteristic function F is not, in general, monotonic. For example, A is acceptable w.r.t. S ={C, C 1, C 2} in Fig. 5c), but is not acceptable w.r.t. the conflict free {C, C 1, C 2, B1, B2}.Since in general F is not monotonic, existence of a least fixed point is not guaranteed. However Proposition 6 statesthat each F i in Definition 11 is conflict free (hence F can be applied iteratively), and that the sequence is monotonicallyincreasing under ⊆.Proposition 6. Let F be the characteristic function of an EAF, and F 0 = ∅, F i+1 = F (F i). Then ∀i, F i ⊆ F i+1 and F i is conflict free.Hence, rather than define the grounded extension as the least fixed point, the grounded extension of a finitary EAF isdefined in terms of the sequence in Definition 11.Definition 12. (Args, R, D) is finitary iff ∀ A ∈ Args, the set {B | (B, A) ∈ R} is finite, and ∀( A, B) ∈ R, the set {C | (C, ( A, B)) ∈D} is finite.Definition 13. Let (cid:2) be a finitary EAF and F 0 = ∅, F i+1 = F (F i). Then(cid:6)∞i=0(F i) is the grounded extension GE((cid:2)) of (cid:2).It should be obvious to see that the grounded extension of any EAF (Args, R, D) will contain any argument that is notattacked (i.e. the set { X | ¬∃Y , (Y , X) ∈ R}). The following example illustrates that in general it does not hold that thegrounded extension is a subset of the sceptically justified arguments under the preferred semantics (a result that does holdfor Dung frameworks).Example 4. C (cid:3) B (cid:3) A, B (cid:3) (C (cid:3) B).The ‘self reinstating argument’ B is excluded when adopting a ‘constructivist’ approach: F 1 = {C}, F 2 = {C, A}, F 3 ={C, A} is the grounded extension. However, adopting a ‘declarative’ perspective, {C}, {C, A} and {C, B} are admissible, and{C, A} and {C, B} the preferred extensions. Hence, only C is sceptically justified under the preferred semantics. The groundedsemantics excludes self-reinstating arguments such as B, and so gives justified status to arguments such as A.To conclude, we have extended Dung’s theory of argumentation to accommodate metalevel arguments that expresspreferences between arguments. The extended theory preserves the abstract nature of Dung’s approach, and based on anovel notion of acceptability that additionally requires reinstatement of defeats, defines the extensional semantics in thesame way (apart from the grounded semantics) as for a Dung framework. We have also shown that some of the basicresults that hold of the extensional semantics for Dung frameworks, also hold for the extended frameworks. We thereforesuggest that applications and developments of Dung’s work can be readily modified to accommodate argumentation aboutpreferences. For example, game based proof theories (e.g., [15,37]) and dialogue models that build on these games (e.g., [33]),make core use of the notion of reinstatement encoded in the acceptability calculus. Notice also, that Proposition 4 impliesthat (as with Dung’s theory) when defining games for determining the credulous acceptance of an argument, it will sufficeto show that A belongs to an admissible extension rather than having to construct a preferred extension containing A.Finally, note that while in general the characteristic function of an EAF is not monotonic, the following two sections studytwo special classes of EAF whose characteristic functions are monotonic.5. Value based argumentation in hierarchical extended argumentation frameworksIn this section we study a special class of EAF – hierarchical EAFs – and then show how Bench-Capon’s value basedargumentation [11] can be formalised in hierarchical EAFs, and extended to integrate metalevel reasoning about values andvalue orderings.910S. Modgil / Artificial Intelligence 173 (2009) 901–934Thus far we have considered EAFs in which no restrictions are placed on the interaction between object level argumentsand metalevel arguments expressing preferences over the object level arguments. In hierarchical EAFs, the argumentationis ‘stratified’ into levels so that, intuitively, each level is a Dung framework in which all binary attacks are restricted toarguments within the framework. These binary attacks are then attacked by defence attacks that exclusively originate fromarguments expressing preferences in the immediate metalevel.Definition 14. (cid:2) = (Args, R, D) is a hierarchical EAF iff there exists a partition (cid:2)H = (((Args1, R1), D1), . . . , ((Args j, R j), D j),. . .) such that:(cid:6)∞Di , and for i = 1 . . . ∞, (Argsi, Ri ) is a Dung argumentation framework.(cid:6)∞i=1(cid:6)∞i=1• Args =• (C, ( A, B)) ∈ Di implies ( A, B) ∈ Ri , C ∈ Argsi+1.i=1 Argsi , R =Ri , D =(cid:2) is a bounded hierarchical EAF iff its partition (cid:2)H is of the form (((Args1, R1), D1), . . . , ((Argsn, Rn), Dn)), where Dn = ∅.The characteristic function of a bounded hierarchical EAF satisfies monotonicity:Proposition 7. Let F be the characteristic function of a bounded hierarchical EAF (Args, R, D). Let S and Sof Args such that S ⊆ S. Then F (S) ⊆ F (S(cid:5)).(cid:5)(cid:5)be conflict free subsetsIf F ’s domain were not restricted to conflict free sets then F would not be monotonic. Consider the following counter-example that assumes an unrestricted domain:Example 5. Let (cid:2) = C (cid:2) B (cid:3) A, E (cid:3) D, D (cid:3) (C (cid:3) B).A ∈ F ({C, E}) since although B →{C,E}A, we have C →{C,E}B for which there is a reinstatement set {C →{C,E}B, E →{C,E}D}. However, A /∈ F ({C, E, D}) where {C, E, D} is not conflict free. B →{C,E,D}A but C (cid:2){C,E,D}B.The monotonicity of F guarantees existence of a least fixed point.Definition 15. The grounded extension of a bounded hierarchical EAF (cid:2), denoted GE((cid:2)), is the least fixed point of itscharacteristic function F .Hence, as in the case of a Dung framework, the grounded extension can be approached, and under the finitary restric-tion be obtained, by iterative application to the empty set. Note that Proposition 6 implies that the iteration defined inDefinition 11 is indeed possible, i.e., that each F i is conflict free.Proposition 8. Let (cid:2) = (Args, R, D) be a bounded hierarchical EAF, F 0 = ∅, F i+1 = F (F i). Then:(cid:6)∞i=0(F i) ⊆ GE((cid:2)).1.2. If (cid:2) is finitary, then(cid:6)∞i=0(F i) = GE((cid:2)).The extended argumentation theory provides a unifying framework in which to formalise and extend works that augmentDung’s framework with preferences [3,11]. In support of this claim we formalise and extend value based argumentation inhierarchical EAFs. Firstly, we recall [11]’s value based argumentation:Definition 16. (cid:13)Args, R, V , val, P (cid:14) is a value-based argumentation framework (VAF), where val is a function from Args to anon-empty set of values V , and P is a set {a1, . . . , an}, where each ai names a total ordering (audience) >ai on V × V .An audience specific VAF (aVAF) is a 5-tuple (cid:13)Args, R, V , val, a(cid:14) where a ∈ P .Definition 17. Let (cid:13)Args, R, V , val, a(cid:14) be an aVAF. Then A ∈ Args defeatsa B ∈ Args iff ( A, B) ∈ R and it is not the case thatval(B) >a val( A).We say that ( A, B) ∈ Ra iff A defeatsa B.The extensions and justified arguments of an aVAF Γ = (cid:13)Args, R, V , val, a(cid:14) are those of the Dung framework (Args, Ra).Symmetric attacks in Γ are thus resolved to obtain asymmetric defeats in (Args, Ra), and (as discussed in Section 3)asymmetric attacks may be removed so that if A asymmetrically attacks B, but B’s value is ordered (by audience >a)above A’s value, then neither argument defeatsa each other, and so both may appear in the same extension. [11] showsthat if for every ( A, B) ∈ R either val( A) >a val(B) or val(B) >a val( A), and assuming no cycles in the same value in Γ ,then there is guaranteed to be a unique, non-empty preferred extension of Γ , and a polynomial time algorithm to findit. Thus, for problematic odd cycles such as A (cid:3) B (cid:3) C (cid:3) A which only yield ∅ as an admissible extension of a DungS. Modgil / Artificial Intelligence 173 (2009) 901–934911Fig. 6. Integrating meta-level argumentation about values and value orderings.framework, then if A, B and C do not promote the same value, any audience derived defeat relation will yield a singlepreferred extension.Reasoning about values and value orderings can be accommodated by formalising value based argumentation in a hi-erarchical EAF in which the first level includes the arguments and attacks in an aVAF. Pairwise orderings on values in Vare value preference arguments in the second level, so that if v1, v2 ∈ V then ‘v1 > v2’ and ‘v2 > v1’ are value preferencearguments that attack each other in the second level (see Fig. 6a)). If level 1 arguments A and B respectively promote v1and v2, and B (cid:3) A, then (v1 > v2) (cid:3) (B (cid:3) A). Finally, an audience is represented by a level 3 audience argument thatdenotes a choice of ordering, and thus defence attacks the binary attacks between value preference arguments. Thus,v1|v2 (cid:3) ((v2 > v1) (cid:3) (v1 > v2)), where v1|v2 is a level 3 argument representing an audience that selects v1 > v2. Now,the unique preferred extension of the EAF in Fig. 6a) is { A, v1 > v2, v1|v2}. In this way, we can represent the meta-levelreasoning required to find the preferred extension of an aVAF.Definition 18. Let Γ be an aVAF (cid:13)Args, R, V , val, a(cid:14). Then the EAF(cid:2) = (Args1 ∪ Args2 ∪ Args3, R1 ∪ R2 ∪ R3, D1 ∪ D2 ∪ D3)is defined as follows:1. Args1 = Args, R1 = R.(cid:5) | v, v2. {v > v(cid:5), v{(v > v3. {a} ⊆ Args3, ∅ ⊆ R3.4. – {(v > v(cid:5) ∈ V , v (cid:15)= v(cid:5) > v) | v > v(cid:5)} ⊆ Args2,(cid:5), v(cid:5) > v ∈ Args2} ⊆ R2.(cid:5), ( A, B)) | ( A, B) ∈ R1, val(B) = v, val( A) = v(cid:5)} ⊆ D1 (i.e., value preference arguments in Args2 defence attackattacks between arguments in Args1);(cid:5) > v) ∈ R2, v(cid:5) > v)) | a ∈ Args3, (v > v– {(a, (v > vattack attacks between value preference arguments in Args2);– D3 = ∅ (the framework is bounded).(cid:5), v(cid:5), v(cid:5) >a v} ⊆ D2 (i.e., audience arguments in Args3 defenceIf in 2, 3 and 4, the ⊆ relation is replaced by =, then Γ and (cid:2) are said to be equivalent.Proposition 9. Let Γ = (cid:13)Args, R, V , val, a(cid:14) be an aVAF and (cid:2) its equivalent EAF. Let s ∈ {preferred, grounded, complete}. Then ∀ A ∈Args, A is a sceptically, respectively credulously, justified argument of Γ under the s semantics, iff A is a sceptically, respectivelycredulously, justified argument of (cid:2) under the s semantics.Notice that (cid:2) is defined so that one could additionally consider other arguments and attacks in levels 2 and 3. Forexample, arguments in level 2 that directly attack value preference arguments, or arguments in level 3 representing differentaudiences.(cid:5) ∈ P , (a, (v > vIndeed, given a VAF (cid:13)Args, R, V , val, P (cid:14), then its EAF is obtained as in Definition 18, except that now {a | a ∈ P } ⊆ Args3(recall that P is the set of all possible audiences). A VAF and its obtained EAF are then said to be equivalent if {a | a ∈ P } =(cid:5))) ∈ D2, then it follows from the definitionArgs3. Notice that if for any a, a(cid:5), a) ∈ R3. Since each possible audience argumentof an EAF (Definition 4) that a and a(cid:5) > v are value preference argumentscorresponds to a different total ordering on values, and ∀v, vin Args2, then every audience argument will R3 attack every other audience argument. Intuitively, a level 1 argument inthe EAF will then be sceptically justified under the preferred semantics iff it is objectively accepted [11] (justified irrespectiveof the chosen audience) in the corresponding VAF. A level 1 argument will be credulously justified iff it is subjectivelyaccepted [11] (justified for at least one chosen audience). Of course, given representation of multiple audiences, one can in(cid:5), (vattack each other, i.e. (a, a(cid:5) > v, v > v(cid:5)), (a(cid:5) ∈ V , v > v(cid:5) > v)), (aand v(cid:5), v(cid:5)(cid:5)912S. Modgil / Artificial Intelligence 173 (2009) 901–934principle incorporate a fourth level to model argumentation over preferences between audiences.3 Notice, that an audienceargument is not necessarily restricted to instantiation by the value ordering that constitutes the audience, but may beinstantiated by some justification for the ordering that is the claim of the argument. Furthermore, Definition 18 also allowsfor arguments that express preferences that are not derived on the basis of value orderings. We now illustrate the aboveideas with an example of value based argumentation over action.Example 6. In what follows, we assume instantiation of level 1 arguments about actions ( A1, A2, A3 in Fig. 6b)) in a BDIlogic, as described in [8]. A1 and A2 are arguments for the medical actions ‘give aspirin’ and ‘give chlopidogrel’ respectively.These arguments relate the current beliefs that warrant (are preconditions for) the actions bringing about states of affairsthat realise a desired goal and so appeal to a value. Both A1 and A2 appeal to the value of improving the patient’s health.They symmetrically attack since they claim alternative actions for the goal of preventing blood clotting.In [27] we describe construction of level 2 arguments that claim preferences between level 1 arguments based on therelative degree of promotion of a desired value by the level 1 arguments. Thus, B1 is an argument based on clinical trial 1’sconclusion that A2’s chlopidogrel is more efficacious than A1’s aspirin at preventing blood clotting. Hence B1 (cid:3) ( A1 (cid:3) A2).Suppose also B2 based on clinical trial 2’s conclusion that the opposite is the case. Hence B1 (cid:2) B2. At this stage neither A1or A2 are sceptically justified under any semantics. However C 1 claims that trial 1 is preferred to trial 2 since the formeruses a more statistically robust design. Now A2 and not A1 is sceptically justified.However, A3 appealing to the value of cost, states that chlopidogrel is prohibitively expensive and so asymmetricallyattacks A2. B3 is the value preference argument ordering improving the patient’s health over cost, and B4 the value preferenceargument ordering cost over improving the patient’s health. Now, neither A2 or A1 are sceptically justified (notice that nowthere is a preferred extension containing B3, A2 and A3). Finally, C 2 is an audience argument that selects B4’s valuepreference over B3. This choice is justified by appealing to the utilitarian principle: since financial resources are low, andchlopidogrel is costly, then use of chlopidogrel will compromise treatment of other patients, and so one should preferentiallyorder cost over improving the patient’s health (such a trade off is often made in medical contexts). Hence, A3’s attack on A2succeeds, and so A1 is now sceptically justified; aspirin is now the preferred course of action.In this section we have integrated metalevel reasoning about values and value orderings in a hierarchical EAF. Thequestion naturally arises as to whether it is always possible, or indeed desirable, to stratify argumentation according to thehierarchical prescription. Pragmatically, it may well be computationally expensive to ensure that for a given knowledge base,the arguments and attacks defined conform to the hierarchical restriction. Philosophically, a bounded hierarchical modelassumes a highest level of reasoning in which knowledge is certain and so immune to doubt and conflict. For example, forvalue based argumentation, a three level hierarchical framework assumes that preferences over value orderings (audiences)are given, and not themselves subject to reasoning. To avoid such an assumption, while avoiding having to ascend levelsto infinity, one can appeal to the intuition that our metalevel reasoning is often informed by our object level reasoning;argumentation at lower levels may thus impact on argumentation at higher levels. As Searle puts it [36], values are oftenthe product of practical reasoning rather than an input to it. Indeed, we refer the reader to an intuitive illustration ofnon-hierarchical extended argumentation in Example 14 (Section 7).6. Preference symmetric extended argumentation frameworksThis section focuses on preference symmetric EAFs in which only attacks between symmetrically attacking arguments canbe attacked by arguments expressing preferences. This restriction is satisfied by formalisms in which all attacks betweenarguments are symmetric (e.g. [16]), and formalisms in which asymmetric attacks succeed as defeats irrespective of prefer-ences between arguments. An example of the latter is the argument based logic programming formalism in [34], in whichA asymmetrically attacks B iff A claims (proves) what was assumed non-provable (through negation as failure) by a rulein B. This attack succeeds as a defeat irrespective of whether B is preferred to A. The formalism of [34] will be describedand formalised as an instance of a preference symmetric EAF in Section 7.Definition 19. (cid:2) = (Args, R, D) is a preference symmetric EAF iff: if (C, (B, A)) ∈ D, then ( A, B) ∈ R.No conflict free set and so admissible extension S of a preference symmetric EAF (ps-EAF) (cid:2) can contain arguments thatattack each other. Suppose such a set. Then by Definition 6, if for A, B ∈ S, (B, A) ∈ R, then ∃C ∈ S such that (C, (B, A)) ∈ D,and ( A, B) /∈ R, contradicting (cid:2) is a ps-EAF.As already noted, value based argumentation does not conform to the restriction imposed by ps-EAFs. Hence, it may bethat (B, A) ∈ R and yet B and A both appear in an admissible extension and are both justified. As discussed in Section 3 andillustrated in Example 6, this may be appropriate when applying argumentation to practical reasoning, where an argumentfor an action may be accepted while acknowledging the validity of a challenge represented by an asymmetrically attacking3 One could in this way express constraints on value preferences that effectively identify classes of audiences; for example an argument preferringaudiences that order religious over secular values will denote the religious class of audiences.S. Modgil / Artificial Intelligence 173 (2009) 901–934913argument. However, it is not appropriate when the arguments relate to inherently contradictory states of affairs. ConsiderPollock’s argumentation system [32] in which if B ‘Pollock undercuts’ A, and A is preferred to B, then B does not defeat A.The standard example describes A to be an argument claiming that an object is red, given that it looks red and the rulethat things that look red are red. This argument is undercut (the application of the rule is invalidated) by an argument Bclaiming that the object is illuminated by red light. Now, if A is preferred to B, then A and B may both be justified. This issomewhat strange; that one should accept together an argument that makes use of a rule, and an argument that invalidatesuse of the rule.4 We suggest that the Pollock undercut be reformulated, either as a symmetric attack, or as an asymmetricattack that succeeds as a defeat irrespective of the relative preference.Note that we do not claim that the only way to ensure that attacking arguments do not appear in the same admissibleextension is by requiring that the arguments and attacks instantiate a ps-EAF. It may well be that this property is satisfiedgiven the way in which arguments, attacks and preferences are defined in the underlying logic. For example, preferencebased argumentation frameworks [3] are instantiated by arguments defined on the basis of a propositional knowledge base.Only asymmetric attacks are defined, and a preference relation on arguments may result in the removal of these attacks.However, in [2] it is shown that if the preference relation applied satisfies some intuitively desirable properties, then notwo arguments with contradictory propositions will be jointly justified.We now present some results that hold for preference symmetric EAFs. Firstly, recall our motivation of the definition ofacceptability for EAFs in Section 4.1. We proposed a definition of acceptability (Ac1) that is more formally defined here as‘preference symmetric’, or ps, acceptability.Definition 20. Let (Args, R, D) be a EAF. Then for any S ⊆ Args:1. C →S B is reinstated iff ∀D ∈ Args s.t. (D, (C, B)) ∈ D there is a E ∈ S s.t. E →S D.2. A ∈ Args is ps acceptable w.r.t. S iff ∀B ∈ Args such that B →S A, there is a C ∈ S such that C →S B, and C →S B isreinstated.We saw that when evaluating the acceptability of A1 w.r.t. S in Fig. 5b), ps acceptability does not suffice. We are requiredto not only check that A1 →S B1 is reinstated, but also A2 →S B2, since otherwise S would be admissible, and inclusionthat is not admissible. However, the requirement that one checks forof the acceptable B3 in S would result in an Sreinstatement of A2 →S B2 would not arise if B2 (cid:3) A2, as would be the case in a ps-EAF. This is because S would notbe admissible, since A2 would not be acceptable w.r.t. S (under ps acceptability or the more general definition). Indeed, psacceptability and the general definition of acceptability in Definition 8 coincide for ps-EAFs, in the sense that:(cid:5)Proposition 10. Let (Args, R, D) be a preference symmetric EAF. Let S be a conflict free subset of Args. Then, every argument in S isps acceptable w.r.t. S iff every argument in S is acceptable w.r.t. S.Proposition 10 implies that extensional semantics for ps-EAFs can equivalently be defined on the basis of ps acceptability.Furthermore, the characteristic function of a ps-EAF is monotonic. We can therefore define the grounded extension of a ps-EAF in terms of its characteristic function’s least fixed point, and under the finitary restriction obtain the grounded extensionby iterative application to the empty set.Proposition 11. Let F be the characteristic function of a preference symmetric EAF (Args, R, D). Let S and Sof Args such that S ⊆ S. Then F (S) ⊆ F (S(cid:5)).(cid:5)(cid:5)be conflict free subsetsDefinition 21. The grounded extension of a preference symmetric EAF (cid:2), denoted GE((cid:2)), is the least fixed point of itscharacteristic function F .Proposition 12. Let (cid:2) = (Args, R, D) be a preference symmetric EAF, F 0 = ∅, F i+1 = F (F i). Then:(cid:6)∞i=0(F i) ⊆ GE((cid:2)).1.2. If (cid:2) is finitary, then(cid:6)∞i=0(F i) = GE((cid:2)).Example 7. For (cid:2) in Fig. 7, F1 = { A, H}, F2 = { A, H, G}, F3 = { A, H, G, C}, F4 = { A, H, G, C, E} where F (F4) = F4 is thegrounded extension.We now show that the grounded extension of a ps-EAF can be obtained on the basis of ‘strict acceptability’ (recall thedefinition of strict defeatS given in Definition 5):4 Notice that in the usual formalisation of Pollock undercuts, A’s rule is represented as a defeasible implication α ⇒ β (where α and β are wff in somefirst order language) and B’s claim is of the form ¬(α ⇒ β).914S. Modgil / Artificial Intelligence 173 (2009) 901–934Fig. 7. { A, H, G, C, E} is the grounded extension of the ps-EAF.Definition 22. Let S ⊆ Args in (Args, R, D). Then A is strict-acceptable w.r.t. S iff ∀B s.t. B defeatsS A, ∃C ∈ S s.t. C strictlydefeatsS B.Definition 23. Let (cid:2) = (Args, R, D), S ⊆ Args, and 2ArgsC denote the set of all conflict free subsets of Args. The characteristicfunction F st of (cid:2) is defined as:• F st : 2ArgsC (cid:7)→ 2Args.• F st(S) = { A | A is strictly acceptable w.r.t. S}.Define for any EAF the following sequence of subsets of Args.• F ∗0 = ∅.• F ∗i+1 = F st (F ∗i).Proposition 13 states that for a ps-EAF, the iteration obtained by the characteristic function F based on the standarddefinition of acceptability, is the same as the iteration obtained by F st based on strict acceptability. This implies that thegrounded extension of a finitary ps-EAF is given by(cid:6)∞i=0(F ∗i).Proposition 13. Let (cid:2) be a preference symmetric EAF, and let F i be defined as in Definition 11, F ∗i defined as in Definition 23. ThenF ∗i = F i .Referring to the ps-EAF in Example 7, one can see that each argument in F i+1–F i is strictly acceptable w.r.t. F i . Forexample, E is strict-acceptable w.r.t. F3: D defeatsF 3 E, and since G ∈ F3, then D does not defeatF 3 C , and so C strictlydefeatsF 3 D.7. Formalising logic programming with defeasible priorities in an extended argumentation frameworkExtended argumentation provides an abstract characterisation of preference application while retaining the basic concep-tual machinery of Dung. We therefore propose that it provides a semantics for object level non-monotonic formalisms thataccommodate defeasible reasoning about preferences (e.g. [14,24,34]). Arguments and attacks defined by these formalismscan instantiate an EAF and the justified arguments under all of Dung’s semantics can be evaluated. In this section we showhow the inferences obtained in Prakken and Sartor’s argument based logic programming with defeasible priorities (ALP-DP)[34], equate with the claims of justified arguments of a preference symmetric EAF instantiated by arguments and attacksdefined by an ALP-DP theory. Furthermore, unlike [34], one can then determine the justified arguments of an ALP-DP theoryunder all of Dung’s extensional semantics.7.1. Defining arguments on the basis of an ALP-DP theoryIn ALP-DP, arguments are chained sequences of named logic program rules. The head of a rule can express a priorityordering on the names of other rules. Hence, given arguments A1 and A2, one can identify ‘priority’ arguments B1, B2, . . .such that an ordering on rules in A1 and A2 is defined by the heads of rules in B1, B2, . . . . One can then define a preferencerelation (cid:4) on A1 and A2 based on the ordering claimed by B1, B2, . . . . In ALP-DP, rules are defeasible or strict, where onlythe former express debatable information.Definition 24. An ALP-DP theory is a tuple (S, D), where:– S is a set of strict rules of the form s : L0 ∧ · · · ∧ Lm → Ln;– D is a set of defeasible rules r : L0 ∧ · · · ∧ L j∧ ∼ Lk ∧ · · · ∧ ∼ Lm ⇒ Ln, and:• Each rule name r (s) is a first order term.• Each Li is a strong literal, i.e., an atomic first order formula, or such a formula preceded by strong negation ¬.• Each ∼ Li is a weak literal, where Li is a strong literal, and ∼ denotes negation as failure, so that ∼ Li is read as “thereis no evidence that Li is the case”.S. Modgil / Artificial Intelligence 173 (2009) 901–934915As usual, a rule with variables is a scheme standing for all its ground instances. Henceforth, head(r) denotes the con-sequent Ln of the rule named r. Also, for any atom A, we say that A and ¬ A are the complement of each other. In themetalanguage, L denotes the complement of a literal L. The language is assumed to contain a two-place predicate symbol ≺for expressing priorities on rule names. To ensure that ≺ is a strict partial order, the strict rules S are always assumed tocontain the following:• o1 : (x ≺ y) ∧ ( y ≺ z) → (x ≺ z);• o2 : (x ≺ y) ∧ ¬(x ≺ z) → ¬( y ≺ z);• o3 : ( y ≺ z) ∧ ¬(x ≺ z) → ¬(x ≺ y);• o4 : (x ≺ y) → ¬( y ≺ x).Definition 25. An argument A based on the theory (S, D) is:1. a finite sequence s = [r0, . . . , rn] of ground instances of rules such that:(a) for every i (0 (cid:4) i (cid:4) n), for every strong literal L in the antecedent of ri there is a k < i such that head(rk) = L.If head(rn) = x ≺ y then A is called a ‘singleton priority argument’(b) no two distinct rules in the sequence have the same heador:2. a finite sequence [s1, . . . , sn], such that for i = 1 . . . n, si is a singleton priority argument. A is said to be a ‘composite(cid:6)ni=1 head(ri), where r1, . . . , rn are, respectively, the last rules in thepriority argument’ that concludes the orderingsingleton priority arguments s1, . . . , sn.An argument A is based on the theory (S, D) iff all rules in A are in S ∪ D. In the definitions that follow we assume thatarguments are relative to a theory (S, D).Definition 25-1(a) says that arguments formed by chaining rules can ignore weak literals. Definition 25-1(b) preventsarguments from containing circular chains of reasoning. In [34], arguments are exclusively defined by 25-1. Preferencesbetween arguments are then parameterised w.r.t. a set T , based on the ordering claimed by the set of singleton priorityarguments in T . In this paper, we have additionally defined composite priority arguments in 25-2, so that an ordering,and hence a preference, is claimed by a single argument. This is the only modification we introduce to ALP-DP as definedin [34]. From hereon, to enhance readability we will describe only propositional examples, and as an abuse of notation writearguments as sequences of rule names rather than the rules that the names identify.Example 8. Let S = {o1, . . . , o4} and D the set of rules:r1 : ⇒ a,r5 : ⇒ r2 ≺ r1,r2 : ⇒ ¬a,r3 : a ⇒ b,r6 : ⇒ r1 ≺ r2,r4 : ¬a ⇒ ¬b,r7 : ⇒ r4 ≺ r3,r8 : ⇒ r6 ≺ r5.Amongst the arguments that can be constructed are:A2 = [r2],A1 = [r1],B4 = [r6, r7],A3 = [r1, r3],C 1 = [r8].Note that B3 is a composite argument concluding the ordering r2 ≺ r1, r4 ≺ r3.A4 = [r2, r4],B5 = [r7],B1 = [r5],B2 = [r6],B3 = [r5, r7],Example 9. Let S = {o1, . . . , o4} and D the set of rules:1 : ∼ b ⇒ a,r2 : ⇒ b,r3 : b ⇒ ¬a,r4 : ⇒ r3 ≺ r1.Amongst the arguments that can be constructed are:A1 = [r1],A2 = [r2],A3 = [r2, r3],B1 = [r4].In [34] the following is defined:Definition 26. For any arguments A, A(cid:5)and literal L:(cid:5)is a sub-argument of A iff A• A is strict iff it does not contain any defeasible rule; it is defeasible otherwise.• A• L is a conclusion of A iff L is the head of some rule in A.• L is an assumption of A iff ∼ L occurs in some antecedent of a rule in A.• If T is a sequence of rules, then A + T is the concatenation of A and T .• By definition, A = [ ] is an argument of any ALP-DP theory, and is referred to as the empty argument.is a subsequence of A.(cid:5)916S. Modgil / Artificial Intelligence 173 (2009) 901–9347.2. Defining attacks and preferences between ALP-DP argumentsIn [34], the authors motivate definition of attacks between arguments that account for the ways in which arguments canbe extended with strict rules:Definition 27. A1 attacks A2 iff there are sequences S1 and S2 of strict rules such that A1 + S1 is an argument withconclusion L and1. A2 + S2 is an argument with a conclusion L, in which case A1 and A2 are said to symmetrically conclusion–conclusionattack on the pair (L, L); or2. A2 is an argument with an assumption L, in which case A1 is said to undercut A2 on the pair (L, L).Example 10. In Example 8, B3 = [r5, r7] and B4 = [r6, r7] conclusion–conclusion attack since [r5, r7] has the conclusionr2 ≺ r1 and [r6, r7] + [o4] has the conclusion ¬(r2 ≺ r1). Also, A3 and A4 conclusion–conclusion attack on the pairs (a, ¬a)and (b, ¬b). In Example 9, A1 and A3 symmetrically conclusion–conclusion attack on the pair (a, ¬a), and both A2 and A3undercut A1 on the pair (b, ¬b).In general, since arguments A and Acan attack each other on more than one pair of conclusions, then there maydifferent sequences of strict rules that extend these arguments to account for the pairs of conclusions on which they attack.Note that arguments can conclusion–conclusion attack or undercut themselves. For example, [r : ∼ a ⇒ a] undercuts itself,and [r1 : ⇒ a, r2 : a ⇒ ¬a] conclusion–conclusion attacks itself.(cid:5)Notation 2. A is incoherent iff A conclusion–conclusion attacks or undercuts itself.In [34], a preference amongst conclusion–conclusion attacking arguments is based on a comparison of the sets of defea-sible rules that contribute to derivation of the conflicting conclusions.Definition 28. If A + S is an argument with conclusion L, the defeasible rules R L( A + S) relevant to L are:1. {rd} iff A includes defeasible rule rd with head L,2. R L1 ( A + S) ∪ · · · ∪ R Ln ( A + S) iff A is defeasible and S includes a strict rule s : L1 ∧ · · · ∧ Ln → L.We define [34]’s ordering on the above sets, and hence preferences amongst arguments, w.r.t. an ordering concluded bya single composite priority argument (rather than a set of singleton priority arguments as in [34]):Definition 29. Let C be a priority argument concluding the ordering ≺. Let R and Riff ∃r ∈ R s.t. ∀rimplies r ≺ r(cid:5) ∈ R, r.(cid:5)(cid:5)(cid:5)(cid:5)be sets of defeasible rules. Then R(cid:5) > RIntuitively, R can be made better by replacing some rule in R with any rule in R, while the reverse is impossible. Givena priority ordering ≺ concluded by an argument C , we say that A is preferred≺ to B if for every pair (L, L) on which theyconclusion–conclusion attack, the set of A’s defeasible rules relevant to L is stronger (>) than the set of B’s defeasible rulesrelevant to L.(cid:5)(cid:5)(cid:5)Definition 30. Let C be a priority argument concluding ≺. Let (L1, L1), . . . , (Ln, Ln) be the pairs on which A and Bconclusion–conclusion attack, where for i = 1 . . . n, Li and Li are conclusions in A and B respectively. Then A is preferred≺to B if for i = 1 . . . n, R Li ( A + S i) > R Li(B + S(cid:5)i).Example 11. In Example 8, B3 concludes r2 ≺ r1, r4 ≺ r3, and so Ra( A3) > R¬a( A4), Rb( A3) > R¬b( A4), and A3 ispreferred≺ to A4. In Example 9, B1 concludes r3 ≺ r1, and so Ra( A1) > R¬a( A3) and A1 is preferred≺ to A3.Observe that:1. If A and B are strict arguments that conclusion–conclusion attack (recall that they cannot undercut since strict rulescontain no weak literals) then the sets of relevant defeasible rules for the pairs of conclusions on which they attack areobviously empty. Hence, it cannot be the case that A is preferred≺ to B, or B is preferred≺ to A, for any ordering ≺.2. By Definition 29, R(cid:5) > R whenever R(cid:5)is empty and R is non-empty. Hence, if A is strict and B defeasible, and thesearguments conclusion–conclusion attack, then for any ordering ≺, A is preferred≺ to B.S. Modgil / Artificial Intelligence 173 (2009) 901–9349177.3. Evaluating the status of ALP-DP arguments in extended argumentation frameworksPrior to instantiating an EAF with ALP-DP arguments, we review [34]’s definition of the acceptability of arguments andthe grounded extension of an ALP-DP theory:Definition 31. Let (S, D) be an ALP-DP theory. [34] defines:1. Args to be the set of arguments as defined in Definition 25-1.2. A1 ∈ Args conclusion–conclusion or undercuts attacks A2 ∈ Args as defined in Definition 27.3. ∀T ⊆ Args, ≺T = {r ≺ s | r ≺ s is the conclusion of an argument in T }.A ∈ Args is preferred≺T to B ∈ Args as defined in Definition 30, except that ≺T is defined as above rather than by asingle priority argument.4. Let T ⊆ Args. Then A ∈ Args T -defeats B ∈ Args iff A is the empty argument and B is incoherent (attacks itself), or elseif(a) A and B conclusion–conclusion attack and B does not undercut A and B is not preferred≺T to A; or(b) A undercuts B.5. A strictly T -defeats B if A T -defeats B and B does not T -defeat A.6. A ∈ Args is ALP-DP-acceptable w.r.t T ⊆ Args if all arguments that T -defeat A are strictly T -defeated by an argumentin T .7. Let T ⊆ Args be conflict free if no argument in T attacks an argument in T , and let 2ArgsC be the set of all conflict freesubsets of Args. Then:• G : 2ArgsC (cid:7)→ 2Args, G(T ) = { A | A is ALP-DP-acceptable w.r.t. T },• G 0 = ∅, G i+1 = G(G i).8. If (S, D) is finitary, i.e., each argument in Args is attacked by at most a finite number of arguments, then the least fixedpoint of G (the grounded extension of (S, D)) is obtained byObserve that:(cid:6)∞i=0(G i).1. [34] obviate against the malign impact of incoherent arguments5 by having them defeated by the empty argument [ ].We will adopt the same approach when instantiating an EAF. Thus, R will be defined by the set of pairs ( A, B) whereA undercuts or conclusion–conclusion attacks B, or where B is incoherent, in which case A = [ ].2. If A undercut attacks B then A defeats B irrespective of their relative preference.6 Hence, only conclusion–conclusionattacks will be subject to d-attack by preference arguments.3. If A does not undercut B, A conclusion–conclusion attacks B, and in addition B undercuts A, then A cannot defeatB (irrespective of the relative preference of A and B). The rationale for undercuts overriding conclusion–conclusionattacks appeals to intuitions arising from the modelling of legal examples. The fact that B undercuts A effectivelymeans that the conclusion–conclusion attack from A to B cannot succeed as a defeat. This is modelled by the d-attack [ ] (cid:3) ( A (cid:3) B), where, as we will show, the empty argument cannot be attacked and therefore defeated by anyargument.Definition 32. The EAF (Args, R, D) for a theory (S, D) is defined as follows.1. Args is the set of arguments given by Definition 25.2. R = R1 ∪ R2 ∪ R3, where:(a) R1 = {( A, B) | A undercuts B}.(b) R2 = {( A, B) | A conclusion–conclusion attacks B}.(c) R3 = {([ ], B) | (B, B) ∈ (R1 ∪ R2)}.3. Let R(cid:5) = R − (R1 ∪ R3). Then ∀( A, B) ∈ R(cid:5):(a) ∀C ∈ Args, if C concludes ≺ and B is preferred≺ to A then (C, ( A, B)) ∈ D.(b) if (B, A) ∈ R1 then ([ ], ( A, B)) ∈ D.Notice that R1 and R2 may not be disjoint. Hence, R(cid:5)excludes (from being subject to d-attack by preference arguments)those conclusion–conclusion attacks ( A, B) in R2 that are also undercut attacks ( A, B) in R1. Also, by Definition 27, theempty argument cannot participate in a conclusion–conclusion or undercut with any argument. This means that R3 isnecessarily disjoint from R1 ∪ R2. The following observations are shown to hold in Lemma 11 in Appendix A:5 Suppose { A1, A2, . . . , An}, where A1 alone is incoherent, and no two distinct arguments in the set attack each other. A1 cannot be in a conflict freeset and so a stable extension. Hence, no stable extension exists, since no argument in { A2, . . . , An} attacks and so defeats A1. This is counter-intuitive. It’sas if the incoherence of A1 has ‘infected’ the other arguments. However, by letting A1 be defeated by the empty argument, then {[ ], A2, . . . , An} is now astable extension.6 This is justified by intuitions arising in the legal domain. However, in [34], the authors acknowledge that this may not be warranted in other domains.918S. Modgil / Artificial Intelligence 173 (2009) 901–934Fig. 8. a) shows the EAF for Example 9; b) shows the EAF for Example 8.Remark 1. Let (cid:2) = (Args, R, D) be the EAF for (S, D). Let A, B ∈ Args. Then:1. (cid:2) is preference symmetric.2. If A undercuts B, then A defeatsS B for any S ⊆ Args.3. If ([ ], ( X, Y )) ∈ D then there does not exist a (Z , (Y , X)) ∈ D.4. ([ ], B) ∈ R iff B is incoherent.5. There is no B such that (B, [ ]) ∈ R.6. If A does not undercut B, A conclusion–conclusion attacks B and B undercuts A, then A does not defeatS B for anyS ⊆ Args such that S contains [ ].7. If A ∈ Args is incoherent, then A is not acceptable w.r.t. any S ⊆ Args.Since the instantiated EAF is preference symmetric, its extensions can be obtained on the basis of ps acceptability. Note(cid:5), C) ∈ R, is satisfied by Definition 32’s(cid:5), (B, A)) ∈ D then (C, C(cid:5)), (Cthat the requirement on EAFs that if (C, ( A, B)), (Cinstantiation of an EAF, given that:Proposition 14. Let (Args, R, D) be the EAF for a theory (S, D). If (C, ( A, B)), (Cattack.(cid:5), (B, A)) ∈ D then C and C(cid:5)conclusion–conclusionExample 12. For Example 9, we obtain the ps-EAF shown in Fig. 8a), in which B1 cannot d-attack the attack from A3 to A1since A3 undercuts A1. The undercut also means that the empty argument d-attacks the conclusion–conclusion attackfrom A1 to A3. { A2, A3, B1, [ ]} is the single preferred/complete/stable/grounded extension.Example 13. For Example 8 we obtain the EAF in Fig. 8b). {C 1, B1, B3, B5, A1, A3} is a subset of the single grounded,preferred, complete and stable extension E.In general we can show that:Proposition 15. Let (cid:2) be the EAF for the ALP-DP theory (S, D). Then for s ∈ {grounded, complete, stable, preferred}, if A is sceptically,respectively credulously, justified under the s semantics, then all sub-arguments of A are sceptically, respectively credulously, justifiedunder the s semantics.The definition of ALP-DP acceptability in [34] (given here in Definition 31-6) requires that a reinstating argument strictlydefeat, and thus precludes definition of admissible and preferred extensions. To see why, suppose one defined an admissibleextension as a conflict free set T whose members are ALP-DP acceptable w.r.t. T . Consider then the theory (S, D) whereD = {r1 : ⇒ a, r2 : ⇒ ¬a}, and A = [r1], B = [r2]. A is not ALP-DP acceptable with respect to { A} since A does not strictly T -defeat B. Also, B is not ALP-DP acceptable with respect to {B}. Hence neither can be defined to be admissible (or preferred).Both the instantiated Dung framework ( A (cid:2) B) and the instantiated EAF both return { A} and {B} as admissible and preferredextensions. Suppose ALP-DP-acceptability was weakened to:A ∈ Args is ALP-DP2 acceptable w.r.t. T ⊆ Args if all arguments that T -defeat A are T -defeated by an argument in T .Then, if in addition to r1 and r2 the aforementioned theory also contained r3 : ⇒ r1 ≺ r2, A and C = [r3] would be ALP-DP2 acceptable with respect to { A}, but A would not be ALP-DP2 acceptable with respect to { A, C}, i.e., { A, C} would notbe admissible. That is, Dung’s fundamental lemma would not hold. As already discussed in Section 4.1, one would wantthat any definition of acceptability ensure satisfaction of the fundamental lemma. Also, the properties of admissible andpreferred extensions described in Proposition 4 and all that is implied by this proposition (including Corollary 1) wouldS. Modgil / Artificial Intelligence 173 (2009) 901–934919not hold. By instantiating an EAF, our definition of acceptability provides for a well defined notion of an ALP-DP theory’sadmissible extensions and the justified status of ALP-DP arguments under the preferred semantics.Example 14. Consider a theory’s arguments: A = [guardian : ⇒ sky ≺ bbc], B = [sun : ⇒ bbc ≺ sky], C = [bbc : ⇒ sun ≺guardian], D = [sky : ⇒ guardian ≺ sun], where x : ⇒ y ≺ z is interpreted as x is the source for the claim that y is lesstrustworthy than z.We obtain the non-hierarchical EAF in Example 3 (see Fig. 4). Recall the observation that no two arguments defeatSeach other in S = { A, C, B, D}. Hence, if we had defined a conflict free set as one in which no two arguments defeateach other, then { A, C, B, D} would be the single preferred extension. This strikes us as counter-intuitive; that one shouldsimultaneously hold as justified, arguments that claim contradictory preferences. As it is, we have that ∅ is the groundedextension, and { A, C}, {B, D} the preferred extensions, each of which represent the mutually supportive media outlets; wecan either adopt a ‘sky and sun’ perspective on the world, or a ‘guardian and bbc’ perspective on the world.We conclude with a result relating the grounded extension of an ALP-DP theory as defined in [34], to the groundedextension of the theory’s EAF. In [34], the grounded extension of a finitary ALP-DP theory is the least fixed point of thetheory’s characteristic function (as described in Definition 31-8). However, a finitary ALP-DP theory does not necessarilyyield a finitary EAF (recall the definition of a finitary EAF in Definition 12). It may be that in the theory’s EAF, an attackbetween two conclusion–conclusion attacking arguments may be d-attacked by an infinite number of arguments.Example 15. Let D in (S, D) be the infinite set of defeasible rules:{m : ⇒ a, n : ⇒ ¬a, p : ⇒ m ≺ n} ∪ {r X : ⇒ r X+1 ≺ r X+2 | X is a positive integer}.Let A = [m], B = [n], C0 = [p], and C1 = C0 + [r1], C2 = C0 + [r2], . . . .The theory’s non-finitary EAF is A (cid:2) B, where for i = 0, 1, 2, . . . , Ci (cid:3) ( A (cid:3) B).Hence, we will only consider ALP-DP theories that contain a finite set of rules deriving a priority relation.Definition 33. (S, D) is priority-finitary iff• {r | r ∈ D, head(r) = r• Any argument in Args is attacked by at most a finite number of arguments in Args (where Args and attack are defined(cid:5) ≺ r(cid:5)(cid:5)} is finite.in Definitions 25 and 27 respectively).Proposition 16. If (S, D) is priority-finitary then its EAF (cid:2) = (Args, R, D) is finitary.Proposition 17 states that the grounded extension of a priority-finitary ALP-DP theory as defined in [34], is the same,modulo the composite priority arguments, as the grounded extension of the theory’s EAF. That is to say, the grounded extensionof the theory’s EAF differs only in the contained composite priority arguments.Definition 34. The sets of arguments S and S(cid:5)are said to be equivalent modulo composite priority arguments, iff:(cid:5) ⊆ S.1. S2. if A ∈ S, A /∈ S(cid:5)where n > 1, and for i = 1 . . . n, Ai ∈ S(and so Ai ∈ S given 1).(cid:5)then A is a composite priority argument constructed from the singleton priority arguments A1, . . . , An,Proposition 17. Let (S, D) be a priority-finitary ALP-DP theory, and let GE((S, D)) be the grounded extension of (S, D) as defined inDefinition 31-8. Let (cid:2) = (Args, R, D) be the theory’s EAF and GE((cid:2)) the grounded extension of (cid:2). Then GE((cid:2)) and GE((S, D)) areequivalent modulo the composite priority arguments.8. Related workThe formalisms of Prakken and Sartor [34] and Kakas and Moraitis [24], both construct arguments from logic program-ming rules, where these rules may express priorities over other rules. Our work can be viewed as a generalisation of theseapproaches in that we abstract from the underlying logic and the criteria used for determining preferences. Furthermore,these formalisms do not straightforwardly conform to application of Dung’s acceptability calculus, whereas our approachallows for such application, through provision of an abstract characterisation of preference application while retaining thebasic conceptual machinery of Dung. We have already shown how arguments defined by an ALP-DP theory instantiate apreference symmetric framework, so that unlike [34], one can define extensions under the admissible and preferred seman-tics.920S. Modgil / Artificial Intelligence 173 (2009) 901–934(cid:5)(cid:5)(cid:5)(cid:5), P, where r and r) iff T ∪ P (cid:19) L and TIn [24], arguments are built from a partitioned theory (T , P ) consisting of logic programming rules with explicit nega-(cid:5)) expressing that rtion, but without negation as failure. P denotes the set of rules with heads that are of the form hp(r, rname rules in T ∪ P . An argument is a pair (T , P ) such that T ⊆ T , P ⊆ P andhas higher priority than r(T , P ) derives (by application of modus ponens) some literal L (T ∪ P (cid:19) L) (notice that (T , P ) may derive more than oneliteral, and so may contain multiple sets of rules chained through modus ponens). Then, (T , P ) symmetrically conflicts with(cid:5) (cid:19) ¬L (where L and ¬L may be contradictory priorities on rules). It is the attack relation that(T) attacks (T , P ) iff they conflict on some L and ¬L, and such that theaccounts for the priorities over rules, so that (Tminimal subset T 1 ∪ P 1 of Tused to derive L is preferred to (in the sense of being ‘at least as strong as’) the minimalsubset T 2 ∪ P 2 of T ∪ P used to derive ¬L. We refer the reader to [24] for how such a preference is defined; suffice it to) derived relative priorities of rules in (T 1, P 1) andsay that the preference for (T 1, P 1) over (T 2, P 2) is based on the (T(T 2, P 2). Let us here isolate the ‘preference argument’ (T, P[24] defines the admissibility of an argument (T , P ):) that minimally derives these priorities.(cid:5), P(cid:5)⊆ T(cid:5)p ) (T(cid:5) ∪ P(cid:5)p, P(cid:5) ∪ P⊆ P(cid:5), P(cid:5)p(cid:5)p(cid:5)(cid:5)(cid:5)(cid:5)(T , P ) is admissible iff it is conflict free, and for any (T(cid:5)(cid:5), P) that attacks (T , P ), (T , P ) attacks (T(cid:5)(cid:5), P).This definition equates with our definition of admissibility. Informally, one can see how to instantiate a preference symmet-ric EAF: by enumerating all (T , P ) defined arguments that are only comprised of single sets of chained rules (as in [34]);identifying preference arguments; defining R in terms of [24]’s symmetric conflict relation, and; defining D attacks frompreference arguments to R attacks, corresponding to [24]’s definition of attack. Then, one can see that (T , P ) is admissi-(cid:6)ble in [24] iff S = {(T 1, P 1), . . . , (Tn, Pn)} is admissible in the instantiated EAF (where T =ni=1 P i ). Notice,that acceptability of a single argument with respect to set of arguments (and so articulation of a Dung style acceptabilitycalculus and characteristic function) is not defined in [24]. Acceptability would need to be derived from the definition of(cid:5) ∪ P ) is admissible. This imposes stronger requirements(cid:5) ∪ T , Padmissibility, i.e., (T , P ) is acceptable w.r.t. (Tthan our definitions of acceptability and ps acceptability, neither of which would require showing that all arguments in(T(cid:5) ∪ T , POther non-monotonic formalisms that enable reasoning about preferences, but that do not employ concepts from argu-mentation theory, include [14] and [17]. For example, [17] make use of a preference operator ⊗, so that a defeasible rulesuch as ¬sun_shining ⇒ raining ⊗ snowing expresses that if it is believed that the sun is not shining, then it is believed thatit is raining; but if it is not raining then it is believed that is snowing. Given that the sun is not shining, one can see howthe defeasible rule could be used in the construction of an argument A1 claiming that it is raining, and a symmetricallyattacking argument A2 claiming that it is snowing, and an argument expressing a default preference for A1 over A2. If itturns out to be the case that it is not raining, this would constitute an argument defeating A1, so that A2 would now bereinstated.(cid:5) ∪ P ) (as highlighted at the end of Section 4.1).(cid:5) ∪ P ) are acceptable w.r.t. (Ti=1 T i , P =(cid:5) ∪ T , P) if (T(cid:6)n(cid:5), P(cid:5)We conclude by mentioning the work of [10], in which argument frameworks are similarly extended to allow attacks onattacks. In this way, the strength of one argument’s attack on another can be modified by another argument. The authorsthen describe how the strengths of arguments can propagate through the framework. However, this work does not addressthe issue of how to define the status of arguments under Dung’s semantics.9. ConclusionsThis paper has extended Dung’s theory of argumentation to integrate metalevel argumentation about preferences. Dung’slevel of abstraction is preserved, so that arguments expressing preferences are distinguished by being the source of asecond attack relation that abstractly characterises application of preferences by attacking attacks between the argumentsthat are the subject of the preference claims. Dung’s acceptability calculus has been extended to additionally account forreinstatement of attacks, and extensional semantics are then (apart from the grounded semantics) defined in exactly thesame way as for a Dung framework. The extended theory thus retains the basic conceptual machinery of Dung’s theory,and some basic results that hold for a Dung framework are also shown to hold for the extended framework. We thereforepropose that applications and developments of Dung’s theory can be readily modified to accommodate argumentation aboutpreferences. In particular, proof theories [30] to determine the justified status of an argument A, take the form of gamesplayed between the proponent and opponent of A. Each player responds to its counterpart’s move (argument) with anargument that attacks its counterpart’s argument, and rules on the legality of moves vary according to the semantics underwhich the justified status of A is to be established. Ongoing work is focusing on adapting these proof theories to EAFs, byadditionally allowing players to move arguments against the attacks that are implicitly moved by their counterparts.Future work will also focus on development of dialogue frameworks in which participants can argue about preferences.Dung’s inherently dialectical theory, and subsequent development of argument games, has informed development of dia-logue frameworks in which participants’ locutions implicitly define arguments that can be organised into a Dung framework.For example, Prakken defines a general framework for conflict resolution dialogues [33] that we believe can readily be gen-eralised to accommodate preference arguments that can then be organised into an EAF. In a recent general framework fornegotiation dialogues [4], an agent can decide to accept or reject offers based on its own argumentation based model ofreasoning about offers. The model assumes a given preference ordering on arguments. However, a comprehensive accountof negotiation will also require that agents can justify and debate their preferences. Work on deliberation dialogues [21], inS. Modgil / Artificial Intelligence 173 (2009) 901–934921which agents collaboratively decide on a preferred course of action, have also highlighted the need to debate the preferencesthat each agent uses when proposing or rejecting a course of action.Our work provides a formal setting for studying application of preferences, and more generally, removal of attacks. Wehave shown that a less involved definition of acceptability suffices for preference symmetric EAFs, and that while in generalan EAF’s characteristic function is not monotonic, the characteristic functions of hierarchical and preference symmetric EAFsdo satisfy monotonicity. Our work on preference symmetric EAFs can also inform work on resolution based semantics [9,26], whereby a framework’s resolutions obtained by substituting asymmetric for symmetric attacks; indeed, the choice ofresolution can now be explicitly modelled through integration of preference arguments.The extended theory is proposed as a unifying formalism for works that augment Dung’s abstract theory with prefer-ences, and as a framework for instantiation by non-monotonic logics whose object level languages allow for expression ofpriorities over rules. In Section 5 we described how value based argumentation [11], extended to allow integration of meta-level reasoning about values and value orderings, can be formalised in hierarchical EAFs. In Section 7, the inferences of anALP-DP theory [34] were shown to correspond with the claims of arguments in the grounded extension of an EAF instanti-ated by the theory’s arguments and attacks. In contrast with [34], we also provided a well defined notion of the admissibleand preferred extensions of an ALP-DP theory. It remains to formally show that extended argumentation semantics can begiven for other object level formalisms such as [14,17,24].In Section 5 we described a practical reasoning example that assumed arguments constructed in an underlying BDI logicas described in [8]. This work is one amongst a number of recent works (e.g., [24,25,35]) that propose argumentation basedapproaches to agent reasoning over the whole gamut of mental attitudes, including beliefs, goals, intentions, etc. We sug-gest that the framework described in this paper will facilitate development of agent reasoning formalisms that provide fordefeasible reasoning about preferences, and thus provide for agent flexibility and adaptability (this proposal is explored inmore detail in [29,31] and also by Kakas and Moraitis [23,24]). For example, the BOID agent architecture characterises gen-erated candidate goal sets as extensions of a prioritised default logic theory in which rules for inferring goals are modelledas defaults, and a prioritisation of these defaults resolves conflicts between goals [22]. Agent behavioural types correspondto different prioritisations. For example, a ‘social’ agent uniformly prioritises defaults for obligation derived goals abovedefaults for desire derived goals. However, certain contexts may warrant selfish behaviour (corresponding to the reverseprioritisation). Such behavioural heterogeneity requires reasoning as to which prioritisation (agent type) is appropriate in agiven context. In [29], we suggest that extended argumentation frameworks will facilitate development of logical formalismsfor contextual reasoning of this type.AcknowledgementsThis work was funded by the EU FP6-IST-002307 ASPIC project. I would like to thank Martin Caminada for early dis-cussions that inspired development of the ideas in the paper. Many thanks also to Trevor Bench-Capon and P.M. Dung forvaluable discussions and comments that have helped improve the paper. Finally, thanks to the anonymous reviewers whosecomments helped improve the paper.Appendix AA.1. Proofs of propositions in Section 3Proposition 1. If A defeatsS B then ∀S(cid:5) ⊆ S, A defeatsS(cid:5) B.Proof. Follows straightforwardly from Definition 5. (cid:2)Proposition 2. Let S be conflict free subset of Args in (Args, R, D). Then for any X, Y ∈ S, X does not defeatS Y .Proof. Suppose X, Y ∈ S, X →S Y . In which case ( X, Y ) ∈ R and ¬∃Z ∈ S s.t. (Z , ( X, Y )) ∈ D, contradicting S is conflictfree. (cid:2)A.2. Proofs of propositions in Section 4Lemma 1 is required for the proof of Proposition 3.Lemma 1. Let S be a conflict free subset of Args in (Args, R, D), and let A be an argument that is acceptable w.r.t. S. Then:1. A does not defeatS A.2. ∀C ∈ S, C does not defeatS A.922S. Modgil / Artificial Intelligence 173 (2009) 901–934Proof. (1) Suppose A →S A. By assumption of A acceptable w.r.t. S, ∃D ∈ S s.t. D →S A, ∃E ∈ S s.t. E →S D, contradictingProposition 2. (2) Suppose ∃C ∈ S s.t. C →S A. By assumption of A acceptable w.r.t. S, ∃D ∈ S s.t. D →S C , contradictingProposition 2. (cid:2)The following lemma and proof of Proposition 3 refer to an EAFs characteristic function defined in Definition 10.Lemma 2. Let S and S(cid:5)).F (S) ⊆ F (S(cid:5)be subsets of Args in (Args, R, D). If S ⊆ S(cid:5)and no argument in S defeatsS an argument in S(cid:5) − S. ThenProof. Let A ∈ F (S). Suppose ∃B s.t. B →Sset R S for C →S B. We show that C →S(cid:5)Suppose otherwise. In which case X (cid:2)S(cid:5)then by assumption of R S being a reinstatement set, ∃Cin S defeatsS an argument in S(cid:5) − S. (cid:2)A. By Proposition 1, B →S A, and so ∃C , C →S B and there is a reinstatementB and there is a reinstatement set R S(cid:5) for C →SY for some X →S Y ∈ R S , i.e., X (cid:3) Y and ∃B(cid:5)B:(cid:5) ∈ S(cid:5)(cid:5) ∈ S s.t. C(cid:5) →S B(cid:5)(cid:5) (cid:3) ( X (cid:3) Y ). But, contradicting the assumption that no argument(cid:5) − S s.t. BProposition 3. Let (cid:2) = (Args, R, D) be an Extended Argumentation Framework, S an admissible extension of (cid:2), and let A, Aarguments which are acceptable w.r.t. S. Then:(cid:5)be1. S2. A(cid:5) = S ∪ { A} is admissible.(cid:5)is acceptable w.r.t. S.(cid:5)Proof. 1) By assumption of A acceptable w.r.t S and Lemma 1-2, no argument in S defeatsS an argument in SHence, by Lemma 2, F (S) ⊆ F (Si.e., S(cid:5)). Since S is admissible and A is acceptable w.r.t. S, then S ∪ { A} ⊆ F (S), and so Sis admissible.(cid:5)2) Follows from F (S) ⊆ F (S(cid:5)) and assumption of A(cid:5)acceptable w.r.t. S. (cid:2)(cid:5) − S (= { A}).(cid:5)),(cid:5) ⊆ F (SProposition 4. Let (cid:2) = (Args, R, D) be an Extended Argumentation Framework.1. The set of all admissible extensions of (cid:2) form a complete partial order w.r.t. set inclusion.2. For each admissible extension E of (cid:2) there exists a preferred extension Eof (cid:2) such that E ⊆ E(cid:5)(cid:5).Proof. Immediately from Proposition 3 and definition of preferred extensions (Definition 9). (cid:2)Corollary 1. Every EAF possesses at least one preferred extension.Proof. From Proposition 4 and the fact that ∅ is an admissible extension of any EAF. (cid:2)Proposition 5. Every stable extension of an EAF is a preferred extension but not vice versa.Proof. It is clear that each stable extension is a preferred extension. To show the reverse does not hold, one need onlyconsider an EAF containing a single argument that attacks itself. ∅ is the single preferred extension. There is no stableextension. (cid:2)We establish some lemmas required for the proofs of the propositions that follow.Lemma 3. Let (cid:2) = (Args, R, D) be an EAF. If ( X, Y ), (Y , X) ∈ R, then for any conflict free S ⊆ Args, either X →S Y or Y →S X .Proof. Suppose otherwise, i.e., X (cid:2)S Y and Y (cid:2)S X . In which case ∃Z , Zdefinition of an EAF, Z (cid:2) Z, contradicting S is conflict free. (cid:2)(cid:5)(cid:5) ∈ S s.t. Z (cid:3) ( X (cid:3) Y ), Z(cid:5) (cid:3) (Y (cid:3) X), and so byLemma 4. Let S be a conflict free subset of Args in (Args, R, D), and A, B be arguments such that A defeatsS B. Then it cannot be thatboth A and B are acceptable w.r.t. S.Proof. Suppose B is acceptable w.r.t. S. Then ∃C ∈ S s.t. C →S A. Suppose A is acceptable w.r.t. S. Then ∃Ccontradicting Proposition 2. (cid:2)(cid:5) ∈ S s.t. C(cid:5) →S C ,Lemma 5. Let S be a conflict free subset of Args in (Args, R, D). Suppose S ⊆ F (S). Then F (S) is conflict free.Proof. Assume F (S) is not conflict free. Then ∃ A, B ∈ F (S) such that eitherS. Modgil / Artificial Intelligence 173 (2009) 901–9349231. ( A, B) ∈ R, (B, A) /∈ R, ¬∃C ∈ F (S) s.t. (C, ( A, B)) ∈ D. Since S ⊆ F (S), then A →S B; or2. ( A, B) ∈ R, (B, A) ∈ R. By Lemma 3, either A →S B or B →S A.In both cases ∃ X, Y ∈ F (S) s.t. X defeatsS Y , contradicting Lemma 4. (cid:2)Proposition 6 is a special case of Lemma 6:Lemma 6. Let F be the characteristic function of (Args, R, D), F 0F (F i+). Then ∀i, F i+ is conflict free.+ ⊆ F i+1+ and F i+ any subset of the set { A | A is acceptable w.r.t. ∅}, and F i+1+ =A and so A cannot be acceptable w.r.t. ∅.+ is some subset of { A | ∀B ∈ Args, (B, A) /∈ R}, i.e., some subset of the set of arguments that are not defeatedS forProof. Base case: i = 0, 1. If (B, A) ∈ R, then by Definition 5, it must be that B →∅Hence, F 0any S ⊆ Args. Hence, F 0By Lemma 5, F 1+) is conflict free. By Lemma 1-2 no argument in F 0an argument in F 1+. Hence, by+ ⊆ F 1+ = F (F 0+ is conflict free.+ and F 0+ defeatsF 0+Lemma 2, F (F 0+), i.e., F 1+ ⊆ F 2+.j+ ⊆ F+) ⊆ F (F 1Inductive hypothesis: For j < i, FGeneral case: i. By inductive hypothesis, F i−1++ is conflict free. Since F i−1++. Given F i−1+ ⊆ F ian argument in F ij+1+and Fj+ is conflict free.is conflict free and F i−1+ = F (F i−1+, then by Lemma 2, F (F i−1is conflict free and F iLemma 5 F idefeatsF i−1++, and so since F i+ ⊆ F i+ ), then by+ ), then by Lemma 1-2 no argument in F i−1++ ) ⊆ F (F i+). That is, F i+ ⊆ F i+1+ . (cid:2)+ = F (F i−1Proposition 6. Let F be the characteristic function of an EAF, and F 0 = ∅, F i+1 = F (F i). Then ∀i, F i ⊆ F i+1 and F i is conflict free.Proof. Follows as a special case of Lemma 6, where F 0+ = F 0 = ∅. (cid:2)A.3. Proofs of propositions in Section 5Proposition 7. Let F be the characteristic function of a bounded hierarchical EAF (cid:2) = (Args, R, D). Let S and Ssubsets of Args such that S ⊆ S. Then F (S) ⊆ F (S(cid:5)).(cid:5)(cid:5)be conflict freeProof. Assume A is acceptable w.r.t. S. We show that A is acceptable w.r.t. S(cid:5)Suppose ∃B1 s.t. B1 →SA. By Proposition 1, B1 →S A, and by assumption of A acceptable w.r.t. S, ∃C 1 ∈ S s.t. C 1 →S(cid:5).B1 and there is a reinstatement set R S for C 1 →S B1.Since S ⊆ SB1.C 1 →S(cid:5)(cid:5), C 1 ∈ S(cid:5), and so to show A is acceptable w.r.t. S(cid:5), it is sufficient to show there is a reinstatement set R S(cid:5) forSince (cid:2) is hierarchical, we can identify a sequenced partition of the reinstatement set R S for C 1 →S B1. Let (cid:2)H =(((Args1, R1), D1), . . . , ((Argsn, Rn), Dn)) be the partition of (cid:2). Since (cid:2) is bounded (Dn = ∅) one can represent R S by thefinite:(cid:2)(cid:3)C 1 →S B1∪ R S i+1∪ · · · ∪ R Sk ,=R S iwhere:1) for each defeat in R S j ,j < k, any defence attack on the defeat originates from an argument that is itself defeatedjm) ∈ R j , and if2 . . .} such that for m = 1, 2, . . . , (C→S B→S Bjm, Bj1, Cj2j1jin R S j+1 . That is, for j = i . . . k − 1: R S jB (cid:3) (C= {Cm) then B is some B j+1 ∈ Args j+1, and C j+1 →S B j+1 ∈ R S j+1→S Bkis a set of defeats {C k12) since (cid:2) is bounded, R Skjm (cid:3) B→S Bk1, C k2j2, . . .} such that for m = 1, 2, . . . , ¬∃B ∈ Args s.t.B (cid:3) (C km (cid:3) Bkm).We show the existence of R S(cid:5) by showing that if C →S B ∈ R S then C →S(cid:5)B. Proof is by induction on the abovesequenced partition:(cid:5)Base case: C →S B ∈ R Sk . Suppose C (cid:2)S, B(cid:5)Inductive hypothesis: For l > j, C →S B ∈ R Sl implies C →SGeneral case: C →S B ∈ R S j . Suppose C (cid:2)S(cid:5) ∈ Args j+1, CCassumption, this contradicts Proposition 2. (cid:2)B. Then ∃B(cid:5) ∈ R S j+1 . By inductive hypothesis, CB. Then ∃B(cid:5) →S B(cid:5) ∈ S(cid:5) →S(cid:5)(cid:5) ∈ S(cid:5)(cid:5) (cid:3) (C (cid:3) B), contradicting 2).B.(cid:5), B(cid:5)B(cid:5)(cid:5) (cid:3) (C (cid:3) B). Since R S is a reinstatement set, ∃C(cid:5) ∈ S. But then since C(cid:5) ∈ S,is conflict free byand S(cid:5), B(cid:5)(cid:5)Lemma 7 states that the characteristic function of a finitary EAF is ω-continuous. This is required for the proof ofProposition 8.924S. Modgil / Artificial Intelligence 173 (2009) 901–934Lemma 7. Let F be the characteristic function of a finitary EAF (cid:2) = (Args, R, D). Then F is ω-continuous.Proof. Let S0 ⊆ · · · ⊆ Sn ⊆ · · · be an increasing sequence of sets of arguments, and let S = S0 ∪ · · · ∪ Sn ∪ · · ·. Let A ∈ F (S).Since there are finitely many arguments B that attack and so defeatS A, and for any such B →S A, there are finitely manyarguments C s.t. (C, (B, A)) ∈ D, then there exists a number m s.t. A ∈ F (Sm). Therefore, F (S) = F (S0) ∪ · · · ∪ F (Sn) ∪ · · · . (cid:2)Proposition 8. Let (cid:2) = (Args, R, D) be a bounded hierarchical EAF. Then:(cid:6)∞i=0(F i) ⊆ GE((cid:2)).1.2. If (cid:2) is finitary, then(cid:6)∞i=0(F i) = GE((cid:2)).Proof.1. Immediately from the monotonicity of F for bounded hierarchical EAFs (Proposition 7).2. From Lemma 7. (cid:2)Proposition 9. Let Γ = (cid:13)Args, R, V , val, a(cid:14) be an aVAF and (cid:2) its equivalent EAF. Let s ∈ {preferred, grounded, complete}. Then ∀ A ∈Args, A is a sceptically, respectively credulously, justified argument of Γ under the s semantics, iff A is a sceptically, respectivelycredulously, justified argument of (cid:2) under the s semantics.Proof. Let (Args, Ra) be obtained on the basis of Γ as defined in Definition 17. Let (cid:2) = (Args(cid:2), R(cid:2), D). Then ∀Z , Y ∈ Argss.t. val(Z ) = v, val(Y ) = v: ( Z , Y ) ∈ Ra iff(cid:5)• Args(cid:2) contains the arguments Z , Y , val(Z ) > val(Y ), val(Y ) > val(Z ) and a.• R(cid:2) contains the attacks ( Z , Y ), (val(Z ) > val(Y ), val(Y ) > val(Z )), and (val(Y ) > val(Z ), val(Z ) > val(Y )).• D contains the defence attacks (val(Y ) > val(Z ), (Z , Y )) and (a, (val(Y ) > val(Z ), val(Z ) > val(Y ))).By definition (for both Dung and extended frameworks), a complete extension is a fixed point of a framework’s characteristicfunction, and the grounded and preferred extensions are, respectively, the least and maximal (under set inclusion) completeextensions. Hence, let F Γ and F (cid:2) be the characteristic functions of (Args, Ra) and (cid:2) respectively. The proposition is provedis a fixed point of F (cid:2), where S ⊆ Sby showing: S is a fixed point of F Γ iff S(cid:5) − S) ∩ Args = ∅, which holds iff:and (S(cid:5)(cid:5)∀Z ∈ Args, Z is acceptable w.r.t. S iff Z is acceptable w.r.t. S(cid:5).Prior to proving (i), note that since a ∈ Args(cid:2) is not attacked by any argument, then:(cid:3) (cid:4)(cid:2)(cid:8)(cid:8)(cid:5)(cid:4)a, (v(cid:5)> v, v > v(cid:5)(cid:5))∈ D= {v > vevery fixed point of F (cid:2) contains a, andv > v(i) is shown by showing 1) and 2) below:(cid:5) | v >a v(cid:5)}(cid:5).(i)(ii)1. ∀Y , X ∈ Args, (Y , X ) ∈ Ra iff Y →SX .(cid:5)This follows from (Y , X ) ∈ Ra iff val( X) ≯a val(Y ) iff val(Y ) >a val( X) iff (by (ii)) val(Y ) > val( X) ∈ Sval(Y ) /∈ SX .Y then there is a reinstatement set R S(cid:5) for Z →Sis conflict free) and so Y →S(cid:5), if Z →S(cid:5), ∀Y /∈ S(since S(cid:5)Y .2. ∀Z ∈ S(cid:5)(cid:5)(cid:5)(cid:5)(cid:5)and so val( X) >(cid:5)There are two cases to consider:a) Suppose Z , Y ∈ Args. Given 1), val(Z ) > val(Y ) ∈ S(cid:5) ∈ Args(cid:2) s.t. aval(Y ) →SY , val(Z ) > val(Y ) →Sb) Suppose either Z /∈ Args or Y /∈ Args. Then Z is of the form v > vand since ¬∃a(cid:5)(cid:5) > v} is a reinstatement set for v > vval(Y ) > val(Z ), and ¬∃aval(Y ) > val(Z )}.(cid:5) (cid:15)= a, {v > v(cid:5) →Sv(cid:5)(cid:5)(cid:5). We have (val(Y ) > val(Z )) (cid:3) (Z (cid:3) Y ). But then val(Z ) >(cid:5) (cid:3) (val(Z ) > val(Y ) (cid:3) val(Y ) > val(Z )). Hence R S(cid:5) = {Z →S(cid:5)and Y is of the form v(cid:5) > v. (cid:2)(cid:5) →Sv(cid:5)(cid:5) > v, and by (ii), v >a v(cid:5)A.4. Proofs of propositions in Section 6Lemma 8 is used in the proof of Proposition 10.Lemma 8. Let (cid:2) = (Args, R, D) be a preference symmetric EAF, and X, Y ∈ Args such that ( X, Y ) ∈ R. Then ∀S ⊆ Args:1. If S is conflict free, either X →S Y or Y →S X .2. If X →S Y , and for some conflict free superset S3. If X strictly defeatsS Y , then X strictly defeatsS(cid:5) Y for all conflict free supersets SY , then Y →S X .of S, X (cid:2)S(cid:5)(cid:5)(cid:5)of S.S. Modgil / Artificial Intelligence 173 (2009) 901–934925Fig. 9. Conditions under which there is no reinstatement set for C 1 →S B1.Proof.1. Assume that for some S, X (cid:2)S Y . Hence there is a Z ∈ S s.t. Z (cid:3) ( X (cid:3) Y ). Since (cid:2) is preference symmetric, (Y , X) ∈ R.By Lemma 3, Y →S X .(cid:5)2. Since S3. Assume that for some Sis conflict free and X (cid:2)S(cid:5), X (cid:2)S(cid:5)Y , then given (1), Y →SY . Then given (2), Y →S X , contradicting X strictly defeatsS Y . Assume Y →SX , and so by Proposition 1, Y →S X .(cid:5)X . By(cid:5)(cid:5)Proposition 1, Y →S X , contradicting X strictly defeatsS Y . (cid:2)Proposition 10. Let (Args, R, D) be a preference symmetric EAF. Let S be a conflict free subset of Args. Then, every argument in S isps acceptable w.r.t. S iff every argument in S is acceptable w.r.t. S.Proof. Right to left half : Let A ∈ S. If ∃B s.t. B →S A, then ∃C ∈ S s.t. C →S B and there is a reinstatement set R S for C →S B,i.e., ∀Y such that Y (cid:3) (C (cid:3) B), there exists a X →S Y ∈ R S such that X ∈ S. Hence, by Definition 20, A is ps acceptablew.r.t. S.Left to right half : Let A ∈ S. If ∃B1 s.t. B1 →S A, then ∃C 1 ∈ S s.t. C 1 →S B1, and C 1 →S B1 is reinstated. We show theremust be a reinstatement set R S for C 1 →S B1 (and so A is acceptable w.r.t. S). Suppose otherwise. Then, there exists atleast one set of sequences of the form:(cid:2)Bn+11(cid:3) (Cn1 (cid:3) Bn), Cn1(cid:5)→S Bn . . . B2 (cid:3) (C 1 (cid:3) B1), C 1 →S B1(cid:3) (Cnm (cid:3) Bn), Cnm(cid:5)→S Bn . . . B2 (cid:3) (C 1 (cid:3) B1), C 1 →S B1(1)(cid:4)...(cid:4)Bn+1m(cid:3)such that:∈ S s.t. Cn+1 j} is the set of all arguments in S that defeatS Bn– for some n (cid:5) 2, {Cn1 . . . Cnm(2)– for j = 1 . . . m, ¬∃Cn+1 j(3)Intuitively, given a preference argument Bn attacking an attack that originates from an argument in S, then for the set{Cn1→S Bn} of all potential reinstating defeats, each such defeat must itself be challenged and not defeat→S Bn . . . Cnmreinstated (this is visualised in Fig. 9). Note that it must be that n (cid:5) 2 since C 1 →S B1 is reinstated, and so there mustat least be a set {C21 . . . C2m→S Bn is challenged by a preference argument, thensince (cid:2) is preference symmetric, we have that for j = 1 . . . m, (Bn, Cn j ) ∈ R.}. Note also that since for j = 1 . . . m, Cn j→S Bn+1 j .Proof is by contradiction. Suppose no reinstatement set R S for C 1 →S B1, and so there exists a set of sequences asdescribed in (1)–(3). There are two cases to consider:i) Suppose that for some j = 1 . . . m, Bn (cid:2)S Cn j . Hence, ∃B(cid:5) ∈ S s.t. B(cid:5) (cid:3) (Bn (cid:3) Cn j ). By (1) and (2), ∃Bn+1 j , Bn+1 j(cid:3)(Cn j (cid:3) Bn) and Cn jHence, ∃B→S Bn, and so it must be the case that Bn+1 j /∈ S.(cid:5) ∈ S, Bn+1 j /∈ S, and since they express contradictory preferences, B(cid:5) →S Bn+1 j . If Bby Lemma 8-1, either Bn+1 j(cid:5) ∈ S and by assumption every argument in S is ps acceptable w.r.t. S, then there must exist a CBcontradicting (3).(cid:5) (cid:2) Bn+1 j . Since S is conflict free, then, then since(cid:5) →S Bn+1 j ,(cid:5)→S B(cid:5) ∈ S s.t. C(cid:5) →S Bn+1 j , then this contradicts (3). If Bn+1 j→S Bor B(cid:5)ii) Suppose that for j = 1 . . . m, Bn →S Cn j . Since by (2), {Cn1 . . . Cnm} is the set of all arguments in S that defeatS Bn, and→S Bn is reinstated (otherwiseby assumption each Cn j is ps acceptable w.r.t. S, then it must be the case that at least one Cn jno Cn j would be ps acceptable). That is, for some Bn+1 j there exists a C(cid:5) ∈ S s.t. C(cid:5) →S Bn+1 j , contradicting (3). (cid:2)Corollary 2. Let (cid:2) = (Args, R, D) be a ps-EAF. Let S be an admissible extension of (cid:2). If A ∈ Args is ps acceptable w.r.t. S then A isacceptable w.r.t. S.Proof. The proof proceeds in the same way as for the left to right half of Proposition 10, except that A ∈ Args (rather thanrestricting to A ∈ S) and in i) and ii) the assumption of arguments in S being ps acceptable w.r.t. S is replaced by theassumption of arguments in S being acceptable w.r.t. S. (cid:2)926S. Modgil / Artificial Intelligence 173 (2009) 901–934Proposition 11. Let F be the characteristic function of a preference symmetric EAF(Args, R, D). Let S and Sof Args such that S ⊆ S. Then F (S) ⊆ F (S(cid:5)).(cid:5)(cid:5)be conflict free subsetsProof. Given Lemma 2 it suffices to show that no A ∈ S defeatsS some B ∈ SSince Sis conflict free, (C, ( A, B)) ∈ D and (B, A) /∈ R, contradicting (cid:2) being a ps-EAF. (cid:2)(cid:5)(cid:5) − S. Suppose otherwise. Hence ( A, B) ∈ R.Proposition 12. Let (cid:2) = (Args, R, D) be a preference symmetric EAF, F 0 = ∅, F i+1 = F (F i). Then:(cid:6)∞i=0(F i) ⊆ GE((cid:2)).1.2. If (cid:2) is finitary, then(cid:6)∞i=0(F i) = GE((cid:2)). (cid:2)Proof.1. Immediately from the monotonicity of F for preference symmetric EAFs (Proposition 11).2. From Lemma 7. (cid:2)Lemmas 9 and 10 are used in the proof of Proposition 13.Lemma 9. Let S be an admissible extension of a ps-EAF(cid:2). If A is strict-acceptable w.r.t. S then A is acceptable w.r.t. S.Proof. Given Corollary 2, it suffices to show that if A is strict-acceptable w.r.t. S then A is ps acceptable w.r.t. S. Suppose∃B s.t. B defeatsS A, and so ∃C ∈ S s.t. C strictly defeatsS B. We need to show that C →S B is reinstated:Suppose ∃B1 s.t. (B1, (C, B)) ∈ D. Since (cid:2) is a ps-EAF, then B (cid:3) C . By assumption of C strictly defeatingS B, B (cid:2)S C ,and so ∃D1 ∈ S s.t. (D1, (B, C)) ∈ D. Hence, D1 (cid:2) B1. S is conflict free and so (by Lemma 3) B1 →S D1 or D1 →S B1. IfD1 →S B1 then C →S B is reinstated. If D1 (cid:2)S B1, B1 →S D1, then since by assumption of S being admissible, D1 ∈ S isacceptable w.r.t. S, and so ∃C1 ∈ S s.t. C1 →S B1. Hence C →S B is reinstated. (cid:2)Lemma 10. Let (cid:2) be a ps-EAF (Args, R, D) and F i be defined as in Definition 11. Then ∀Y ∈ Args, if Y is acceptable w.r.t. F i then Y isstrict-acceptable w.r.t. F i .Proof. Base case. By Proposition 6, ∀i, F i ⊆ F i+1. Hence:BC1 F 1 = { A1, . . . , An} is the set of arguments acceptable w.r.t. ∅. Hence:for i = 1 . . . n: ∀ X ∈ Args, ( X, Ai) /∈ R, and so Ai is strict acceptable w.r.t.any S ⊆ Argsand since (cid:2) is a ps-EAF, ¬∃Y s.t.(cid:4)(cid:5)Y , ( Ai, X)∈ D, and so:for i = 1 . . . n: ∀ X ∈ Args s.t. ( Ai, X) ∈ R, ∀S ⊆ Args, Ai strictly defeatsS X.(i)(ii)BC2 F 2 = {B1, . . . , Bm, A1, . . . , An} is the set of arguments acceptable w.r.t. F 1BC2.1 By (i), each Ai is strict acceptable w.r.t. F 1.BC2.2 Suppose for some i = 1 . . . m, ∃ X s.t. X →F 1By (ii), A j strictly →F 1X .B i . By assumption of B i acceptable w.r.t. F 1, ∃ A j ∈ F 1 s.t. A j →F 1X .BC3 F 3 = {C1, . . . , Ck, B1, . . . , Bm, A1, . . . , An} is the set of arguments acceptable w.r.t. F 2.BC3.1 By (i), each Ai is strict acceptable w.r.t. F 2.BC3.2 Suppose for some i = 1 . . . m, ∃ X s.t. X →F 2w.r.t. F 1, ∃ A j ∈ F 1 s.t. A j →F 1X . By (ii), A j strictly →F 2X .B i . By Proposition 1, X →F 1B i . By assumption of B i acceptableBC3.3 Suppose for some i = 1 . . . k, ∃ X s.t. X →F 2Suppose Z ∈ { A1, . . . , An}. Then by (ii), Z strictly →F 2→F 2X . Then X →F 2Z . But then BC3.2 shows that for some j = 1 . . . n, A j strictly →F 2X .Ck. By assumption of Ck acceptable w.r.t. F 2, ∃Z ∈ F 2 s.t. Z →F 2X .X . Suppose Z ∈ {B1, . . . , Bm}, and Z does not strictlyInductive hypothesis: For j < i, if Y is acceptable w.r.t. F j then Y is strict-acceptable w.r.t. F j .General case: Let Y be any argument acceptable w.r.t. F i . Suppose X →F iY . Hence, ∃Z ∈ F i s.t. Z →F idoes not strictly →F ithen by inductive hypothesis Z is strict-acceptable w.r.t. F i−1; that is, there exists a ZProposition 6, F i−1 ⊆ F i , and so Z(cid:5) ∈ F i , and by Lemma 8-3, ZX . Then X →F istrictly →F iX . (cid:2)Z . By Proposition 6, F i−1 ⊆ F i , and so by Proposition 1, X →F i−1(cid:5) ∈ F i−1 s.t. Z(cid:5)(cid:5)X . Suppose ZZ . Since Z ∈ F i ,X . Bystrictly →F i−1S. Modgil / Artificial Intelligence 173 (2009) 901–934927Proposition 13. Let (cid:2) be a preference symmetric EAF, and let F i be defined as in Definition 11, F ∗i defined as in Definition 23. ThenF ∗i = F i .Proof. Base case: F ∗0 = F 0 = ∅. F ∗1 = F 1 = { A | ∀B ∈ Args, (B, A) /∈ R}.Suppose A is acceptable w.r.t. F 1. By Lemma 10, A is strict-acceptable w.r.t. F 1, and so F ∗1. Suppose A is strict-acceptablew.r.t. F ∗1. Since F ∗1 = F 1,and F 1 is admissible, then by Lemma 9, A is acceptable w.r.t. F 1.Inductive hypothesis: For j < i, F ∗ j = F j , and F j is admissible.General case: Suppose A is acceptable w.r.t. F i−1. By Lemma 10, A is strict-acceptable w.r.t. F i−1 (= F ∗i−1 by inductivehypothesis). Suppose A is strict-acceptable w.r.t. F ∗i−1. By inductive hypothesis, F ∗i−1 = F i−1, and F i−1 is admissible. ByLemma 9, A is acceptable w.r.t. F i−1. (cid:2)Corollaries 3 and 4 are used in proofs in Section 7. Corollary 3 restates Proposition 13 showing equivalence of the+ (containing some subset of arguments acceptable w.r.t. ∅)iterations obtained by F and F st respectively starting with F 0and F ∗0+ (containing some subset of arguments strict acceptable w.r.t. ∅).+ be defined as in Lemma 6. Let F ∗0Corollary 3. Let (cid:2) be a preference symmetric EAF, and let F iA is strict-acceptable w.r.t. ∅}, F ∗i+1+ = F i+.+). Then F ∗i+ = F st(F ∗i+ be some subset of { A |Proof. Proof follows from Lemma 9 and Lemma 10, where:+’ substitutes for ‘F i ’ in the statement of Lemma 10.• ‘F i• In the proof of Lemma 10: i) Lemma 6 substitutes for Proposition 6; ii) in proof of the base case, F 0+ and F 2+respectively substitute for F 1, F 2 and F 3; iii) in BC1, “{ A1, . . . , An} is some subset of the arguments { A1, . . . , An}acceptable w.r.t. ∅” replaces “{ A1, . . . , An} is the set of arguments acceptable w.r.t. ∅”.+ substitutes for F i in the inductive hypothesis and general case. (cid:2)+, F 1• F iCorollary 4. Let (cid:2) be a preference symmetric EAF, F ∗0∀i, F ∗i+ is conflict free.+ ⊆ F ∗i+1+ and F ∗i+ be some subset of { A | A is strict-acceptable w.r.t. ∅}, F ∗i+1+ = F st (F ∗i+). ThenProof. It follows immediately from Lemma 6 and Corollary 3. (cid:2)A.5. Proofs of propositions in Section 7Lemma 11 proves results stated in Remark 1.Lemma 11. Let (cid:2) = (Args, R, D) be the EAF for (S, D), and let A, B ∈ Args. Then:1. (cid:2) is preference symmetric.2. If A undercuts B, then A defeatsS B for any S ⊆ Args.3. If ([ ], ( X, Y )) ∈ D then there does not exist a (Z , (Y , X)) ∈ D.4. ([ ], B) ∈ R iff B is incoherent.5. There is no B such that (B, [ ]) ∈ R.6. If A does not undercut B, A conclusion–conclusion attacks B and B undercuts A, then A does not defeatS B for any S ⊆ Args suchthat S contains [ ].7. If A ∈ Args is incoherent, then A is not acceptable w.r.t. any S ⊆ Args.Proof.1. If (C, ( A, B)) ∈ D as defined in Definition 32-3(a) then ( A, B) ∈ R2, i.e., A and B conclusion–conclusion attack, and so(B, A) ∈ R2. If (C, ( A, B)) ∈ D as defined in Definition 32-3(b) then ( A, B) ∈ R2, (B, A) ∈ R1. Hence, if (C, ( A, B)) ∈ D,then ( A, B), (B, A) ∈ R, i.e., (cid:2) is preference symmetric.2. If A undercuts B, then by Definition 32-3, there does not exist a (C, ( A, B)) ∈ D. Hence A S-defeats B for any S ⊂ Args.3. Suppose ([ ], ( X, Y )) ∈ D. Since [ ] cannot conclude an ordering, then by Definition 32-3(b), it must be that Y under-cuts X . Hence (Y , X ) ∈ R1, and so by Definition 32-3, ¬∃Z s.t. (Z , (Y , X)) ∈ D.4. By Definition 32-2(c), B is incoherent implies ([ ], B) ∈ R3. By Definition 27, [ ] does not conclusion–conclusion or(cid:5), (Y , X)) ∈(cid:5), (Y , X)) ∈ D.undercut attack any argument, and so ([ ], B) cannot be in R1 ∪ R2. By definition of an EAF, if (Z , ( X, Y )), (ZD, then (Z , ZHence, ([ ], B) ∈ R iff B is incoherent.(cid:5), Z ) ∈ R. Hence, suppose Z = [ ] and ([ ], ( X, Y )) ∈ D. By 3 there does not exist a (Z(cid:5)), (Z928S. Modgil / Artificial Intelligence 173 (2009) 901–9345. By Definition 27, no argument can conclusion–conclusion or undercut [ ]. By 4, B cannot be [ ]. By 3 it cannot be that(B, [ ]) ∈ R on account of (B, ( X, Y )), ([ ], (Y , X)) ∈ D. Hence, there is no B such that (B, [ ]) ∈ R.6. It cannot be that A = B (i.e., A is incoherent) since this would imply (by assumption of B undercutting A) that Ain Definition 32-3, and since B undercuts A, ([ ], ( A, B)) ∈ D. Hence, for any S s.t.undercuts B. Hence, ( A, B) ∈ R(cid:5)[ ] ∈ S, A does not defeatS B.7. By Definition 32-2(c), if A is incoherent then ([ ], A) ∈ R. By Definition 32-3, no argument can d-attack ([ ], A), andso [ ] defeatsS A for any S. By 5, no argument can attack and so defeatS [ ]. Hence, A cannot be acceptable w.r.t.any S. (cid:2)Proposition 14. Let (Args, R, D) be the EAF for a theory (S, D). If (C, ( A, B)), (Cattack.(cid:5), (B, A)) ∈ D then C and C(cid:5)conclusion–conclusion(cid:5) (cid:15)= [ ]. By Definition 32-3, A does not undercut B, B does not undercut A, andProof. By Lemma 11-3, C (cid:15)= [ ], C( A, B), (B, A) ∈ R where A and B conclusion–conclusion attack. Without loss of generality, we can assume that they attackon a single pair of conclusions, such that R B and R A are the relevant sets of defeasible rules for B and A. By assumption of(cid:5), (B, A)) ∈ D, ∃r(cid:5) ∈ R B s.t.(C, ( A, B)) ∈ D, ∃r ∈ R A s.t. ∀r(cid:5)(cid:5) ≺C (cid:5) r. That is, C and C∀r ∈ R A , rconclusion–conclusion attack. (cid:2)(cid:5) ≺C (cid:5) r. But then the latter can only be the case if for some r ∈ R A , r). By assumption of (C(cid:5) ∈ R B , r ≺C r(cid:5) ∈ R B , C concludes r ≺ r(denoted by r ≺C rand r(cid:5)(cid:5)(cid:5)Lemmas 12 and 13 are required for the proof of the following Proposition 15.Lemma 12. Let Aundercut X . Let B be an argument s.t. (B, ( X, A)) ∈ D. Then (B, ( X, A(cid:5))) ∈ D.be a sub-argument of A, X an argument such that X conclusion–conclusion attacks both A and A(cid:5)(cid:5), and A does notProof. It cannot be the case that B = [ ], since B cannot conclude an ordering, and by Definition 32-3(b), ([ ], ( X, A)) ∈ D(cid:5)only when A undercuts X . Since A does not undercut X then no sub-argument Aof A undercuts X . It cannot be that X(cid:5)of A, since by Definition 32-3 we can not then have that (B, ( X, A)) ∈ D. Hence,undercuts A, and so any sub-argument Alet Ω = {(L A1 , L X1 ), . . . , (L An , L Xn )} be the set of pairs of conclusions on which A and X attack, (R A1 , R X1 ), . . . , (R An , R Xn )the respective sets of relevant rules, where for j = 1 . . . n, R A j > R X j , based on the ordering concluded by B. Since Ais asub-argument of A, Ω (cid:5) ⊆ Ω is the set of pairs of conclusions on which Aand X attack. Hence (B, ( X, A(cid:5))) ∈ D. (cid:2)(cid:5)(cid:5)Lemma 13. Let (cid:2) = (Args, R, D) be the EAF for (S, D), and let E be a conflict free subset of Args. If A ∈ Args is acceptable w.r.t. E thenall sub-arguments Aof A are acceptable w.r.t E.(cid:5)Proof. Suppose for some sub-argument A(cid:5)) ∈ R iff A([ ], Aset for Z →E X :(cid:5)cannot be incoherent, and sinceis incoherent (by Lemma 11-4), then X (cid:15)= [ ]. We show that there is a Z s.t. Z →E X and a reinstatement. By Lemma 11-7, A and so A(cid:5)of A, X →E A(cid:5)(cid:5)If X →E A then by assumption of A acceptable w.r.t. E, there is a Y ∈ E, Y →E X and there is a reinstatement set forY →E X . Suppose X (cid:2)E A. Hence (by Lemma 11-2) X does not undercut Aand(cid:5)A, and ∃B ∈ E s.t. (B, ( X, A)) ∈ D. If A does not undercut X , then by Lemma 12, (B, ( X, A. IfA undercuts X , then A →E X (by Lemma 11-2), and by Definition 32-3 there does not exist a (C, ( A, X)) ∈ D, and so wehave the reinstatement set { A →E X}. (cid:2)(cid:5)(cid:5))) ∈ D, contradicting X →E Aor A, X conclusion–conclusion attacks A(cid:5)Proposition 15. Let (cid:2) be the EAF for the ALP-DP theory (S, D). Then for s ∈ {grounded, complete, stable, preferred}, if A is sceptically,respectively credulously, justified under the s semantics, then all sub-arguments of A are sceptically, respectively credulously, justifiedunder the s semantics.Proof. Follows immediately from Lemma 13. (cid:2)Proposition 16. If (S, D) is priority-finitary then its EAF (cid:2) = (Args, R, D) is finitary.Proof. Since (S, D) is priority-finitary, any Y ∈ Args is conclusion–conclusion or undercut attacked by a finite number ofarguments, and so { X | ( X, Y ) ∈ R} is finite. Since, there is a finite number of rules deriving priorities, then the set ofcomposite priority arguments is finite, and so {Z | (Z , ( X, Y )) ∈ D} is finite. Hence, by Definition 12, (cid:2) is finitary. (cid:2)Proof of Proposition 17 below makes use of the following lemmas and notation. In what follows we will refer to [34]’sdefinition of arguments, attack, defeat, acceptability and an ALP-DP theory’s characteristic function, as they are defined herein Definition 31.S. Modgil / Artificial Intelligence 173 (2009) 901–934929Notation 3. S is said to be closed under priority arguments if A1 + · · · + An is a composite priority argument in S iff{ A1, . . . , An} ⊆ S, where for i = 1 . . . n, Ai is a singleton priority argument.7 be the sets of arguments obtained by Definitions 25 and 31-1 respec-Lemma 14. Given an ALP-DP theory (S, D), let Args and ArgsPS97tively. Then Args is closed under priority arguments, and Args and ArgsPS97 are equivalent modulo composite priority arguments(as defined in Definition 34).Proof. Obvious, from Definitions 25 and 31-1. (cid:2)Notation 4. In what follows we assume that:• SPS97, T PS97 . . . denote subsets of ArgsPS97, where ArgsPS97 denotes the arguments as defined by an ALP-DP theory in [34](Definition 31-1 in this paper).• Uppercase letters S, T . . . denote subsets of Args, where Args is the arguments defined by an ALP-DP theory for instan-tiation of an EAF (i.e., ArgsPS97 plus composite priority arguments as defined in Definition 25). Henceforth, we assumethat for X = Args, S, T . . . : X is closed under priority arguments, and X and XPS97 are equivalent modulo compositepriority arguments.Proposition 17 states that the grounded extension of an EAF (cid:2) instantiated by an ALP-DP theory (S, D) (as defined inthis paper) and the grounded extension of (S, D) as defined in [34], are equivalent modulo composite priority arguments(emcpa). We give an outline of the proof of the proposition:1. Lemmas 15 and 17 are used in the proof of Lemma 18 which states that A ∈ ArgsPS97 is acceptable w.r.t. an admissi-ble XPS97 as defined in [34] iff A is strict-acceptable w.r.t. an admissible X as defined in this paper.2. Corollary 5, following on from Lemma 19, states that the grounded extension of (cid:2) is obtained by iterating the charac-teristic function F st defined by strict acceptability, where the iteration starts with {[ ]}.3. Lemma 21 shows that the grounded extension of (S, D), as defined in [34], is obtained by iterating the characteristicfunction G defined in [34], where the iteration starts with {[ ]}.4. Given Corollary 5 and Lemma 21, Proposition 17 is proved by showing that starting with {[ ]}, the iterations of F st andG yield sets that are emcpa. The proof is by induction on the iteration, whereby the base case is shown, and then thegeneral case is shown by use of Lemma 18.Lemma 15. Let (Args, R, D) be the EAF for an ALP-DP theory, S ⊆ Args such that S is closed under priority arguments, and [ ] ∈ S.Let A, B ∈ Args such that A defeatsS B, and A is a composite argument. Then, there exists a sub-argument Ais asingleton priority argument, and Aof A such that A(cid:5)(cid:5)(cid:5)defeatsS B.Proof. Let A = A1 + · · · + An where for i = 1 . . . n, Ai is a singleton priority argument. If A defeatsS B, then either:• A undercuts B, in which case for some i, Ai undercuts B. By Lemma 11-2, Ai defeatsS B.• A does not undercut B, A conclusion–conclusion attacks B, and B does not undercut A (since if B did undercut A,then by Lemma 11-6, A would not defeatS B), and ¬∃C ∈ S s.t. (C, ( A, B)) ∈ D, i.e.:¬∃C ∈ S s.t. C concludes ≺, and B is preferred≺ to A.(i)Let { Ak . . . Am} be the singleton priority sub-arguments in A, such that for j = k . . . m, A j conclusion–conclusion attacks B.Without loss of generality we assume each such attack on a single pair (L j, L j). Suppose that for j = k . . . m, A j does notdefeatS B:Since B does not undercut A, then for j = k . . . m, B does not undercut A j . Hence, for j = k . . . m, ∃C j ∈ S such thatC j concludes ≺ j and (by Definition 30), B is preferred≺ j to A j , where the relevant rule set for L j is strictly greater than(>) the relevant rule set for L j , and > is defined on the basis of ≺ j (as in Definition 29). Since S is closed under priority≺ j , and so (by Definition 30) B isarguments, Ck + · · · + Cm is a composite priority argument in S that concludes ≺ =preferred≺ to A, contradicting (i). (cid:2)mj=k(cid:6)For Lemma 16, recall the definition of a priority argument C concluding an ordering ≺ (Definition 25-2), and [34]’sdefinition of an ordering ≺T PS97 concluded by singleton priority arguments in a set T PS97 ⊆ ArgsPS97 (Definition 31-3).Lemma 16. Let S ⊆ Args, SPS97 ⊆ ArgsPS97. Then, C ∈ S concludes ≺ iff there exists a T PS97 ⊆ SPS97 such that ≺T PS97= ≺.7 PS97 refers to Prakken and Sartor’s paper [34] published in 1997.930S. Modgil / Artificial Intelligence 173 (2009) 901–934Proof. Left to right half : Suppose C ∈ S concludes ≺, where C = C1 + · · · + Cn. Since S and SPS97 are emcpa, then there is a= ≺. Right to left half : Suppose T PS97 ⊆ SPS97, and let {C1, . . . , Cn} be the singletonT PS97 = {C1, . . . , Cn} ⊆ SPS97, where ≺T PS97priority arguments in T PS97 concluding ≺T PS97 . Since S and SPS97 are emcpa, {C1, . . . , Cn} ⊆ S. Since S is closed under priorityarguments, C = C1 + · · · + Cn ∈ S, where C concludes ≺ = ≺T PS97 . (cid:2)For Lemmas 17 and 18 recall [34]’s definition of defeat parameterised w.r.t. a set S PS97 of arguments (Definition 31-4).Lemma 17. Let (Args, R, D) be the EAF for (S, D). Let S ⊆ Args, SPS97 ⊆ ArgsPS97, such that [ ] ∈ S, [ ] ∈ SPS97. ∀ A, B ∈ ArgsPS97, ASPS97-defeats B iff A defeatsS B.Proof.• Suppose B = [ ]:By Definition 31-2 and 31-4, B is not SPS97-defeated by any argument.Given Lemma 11-5, B cannot be defeatedS by any argument.• Suppose A = [ ]:By Definitions 31-2 and 31-4, [ ] SPS97-defeats B iff B is incoherent.By Lemma 11-4, ([ ], B) ∈ R iff B is incoherent. By Definition 32-3, there does not exist a (C, ([ ], B)) ∈ D. Hence, [ ]defeatsS B iff B is incoherent.• Suppose A (cid:15)= [ ], B (cid:15)= [ ]:– If A undercuts B, then A SPS97-defeats B (Definition 31-4(b)), and A defeatsS B (Lemma 11-2).– If A does not undercut B, A conclusion–conclusion attacks B and B does not undercut A, then:A SPS97-defeats B iff B is not preferred≺SPS97A defeatsS B iff there is no C ∈ S such that C concludes ≺ and B is preferred≺ to A (Definition 32-3(a)).Since preferred≺SPS97iff there is no C ∈ S such that C concludes ≺ and B is preferred≺ to A. Hence, A SPS97-defeats B iff A defeatsS B.– If A does not undercut B, A conclusion–conclusion attacks B and B undercuts A, then A does not S PS97-defeats Band preferred≺ are defined in the same way, then given Lemma 16, B is not preferred≺SPS97to A (Definition 31-4(a)).to A(Definition 31-4(a)), and A does not defeatS B (Lemma 11-6). (cid:2)Lemma 18. Let (cid:2) = (Args, R, D) be the EAF for (S, D). Let S ⊆ Args, SPS97 ⊆ ArgsPS97, such that [ ] ∈ S, [ ] ∈ SPS97, S is conflictfree and SPS97 is conflict free. Suppose that every argument in SPS97 is ALP-DP acceptable w.r.t. SPS97, and every argument in S isstrict-acceptable w.r.t. S. Then, ∀ A ∈ ArgsPS97:A is ALP-DP acceptable w.r.t. SPS97 iff A is strict-acceptable w.r.t. S.Proof. A is ALP-DP-acceptable w.r.t SPS97 iff ∀B ∈ ArgsPS97 s.t. B SPS97-defeats A, ∃C ∈ SPS97 s.t. C strictly SPS97-defeats B.A is strict-acceptable w.r.t S iff ∀B ∈ Args s.t. B defeatsS A, ∃C ∈ S s.t. C strictly defeatsS B.Right to Left half : Assume A ∈ ArgsPS97 is strict-acceptable w.r.t. S. Suppose a B ∈ ArgsPS97 s.t. B SPS97-defeats A. SinceArgs and ArgsPS97 are equivalent modulo composite priority arguments (emcpa), B ∈ Args. By Lemma 17, B defeatsS A. Byassumption of A being strict-acceptable w.r.t. S, ∃C ∈ S s.t. C strictly defeatsS B. There are two cases to consider:1. C ∈ ArgsPS97, B ∈ ArgsPS97, and so by Lemma 17, C strictly SPS97-defeats B. Since S and SPS97 are emcpa, C ∈ SPS97. Hence,A is ALP-DP-acceptable w.r.t SPS97.2. C /∈ ArgsPS97. Hence, C is the composite priority argument C1 + · · · + Cn. By Lemma 15, there is a set {Ck, . . . , Cm} ofsingleton priority arguments that defeatS B. Since S and SPS97 are emcpa, {Ck, . . . , Cm} ⊆ SPS97. B ∈ ArgsPS97, and soby Lemma 17, for i = k . . . m, Ci SPS97-defeats B. Suppose for some i = k . . . m, Ci strictly SPS97-defeats B. Then A isALP-DP-acceptable w.r.t SPS97. Suppose for i = k . . . m, Ci does not strictly SPS97-defeat B, i.e., B SPS97-defeats Ci . Butthen by assumption of each Ci being ALP-DP-acceptable w.r.t. SPS97, there must be an argument in SPS97 that strictlySPS97-defeats B. Hence, A is ALP-DP-acceptable w.r.t SPS97.Left to Right half : Assume A ∈ ArgsPS97 is ALP-DP acceptable w.r.t. SPS97. Suppose some B ∈ Args s.t. B defeatsS A. Weshow that there is an argument in S that strictly defeatsS B. There are two cases to consider:1. B ∈ ArgsPS97. By Lemma 17, B SPS97-defeats A. By assumption of A being ALP-DP acceptable w.r.t. SPS97, ∃C ∈ SPS97 s.t. Cstrictly SPS97-defeats B. Since S and SPS97 are emcpa, C ∈ S. Since C, B ∈ ArgsPS97, then by Lemma 17, C strictly defeatsSB. Hence, A is strict-acceptable w.r.t S.2. B /∈ ArgsPS97. Hence, B is the composite priority argument B 1 + · · · + Bn. By Lemma 15 there is a singleton B i s.t. B idefeatsS A. Since Args and ArgsPS97 are emcpa, B i ∈ ArgsPS97. Hence, by Lemma 17, B i SPS97-defeats A, and since Ais ALP-DP acceptable w.r.t. S, ∃C ∈ SPS97 s.t. C strictly SPS97-defeats B i . Since S and SPS97 are emcpa, C ∈ S, and byLemma 17, C strictly defeatsS B i . To show A is strict-acceptable w.r.t. S, we show that there must be an argument in Sthat strictly defeatsS B = B1 + · · · + Bn:S. Modgil / Artificial Intelligence 173 (2009) 901–934931(cid:5)(cid:5) ∈ S s.t. C– Suppose B undercuts C . Then B defeatsS C by Lemma 11-2. By assumption of C ∈ S being strict-acceptable w.r.t. S,there is a C– Suppose B does not undercut C (and so B i does not undercut C ), and:• C undercuts B i , and so C undercuts B. By Lemma 11-2, C defeatsS B. If C and B do not conclusion–conclusion attackthen C strictly defeatsS B. Suppose C and B conclusion–conclusion attack. Since C undercuts B, then by Lemma 11-6,B cannot defeatS C , and so C strictly defeatsS B.strictly defeatsS B.• C does not undercut B i , C conclusion–conclusion attacks B i , and so C conclusion–conclusion attacks B. Hence,(C, B), (B, C) ∈ R, S is conflict free, and so by Lemma 3, either C →S B or B →S C .Suppose B (cid:2)S C . Then C strictly defeatsS B.Suppose B →S C . Then by assumption of C being strict acceptable w.r.t. S, there exists a CB. (cid:2)(cid:5) ∈ S s.t. C(cid:5)strictly defeatsSLemma 19. Let (cid:2) = (Args, R, D) be the EAF for a priority-finitary ALP-DP theory, and GE((cid:2)) the grounded extension of (cid:2). Let F bethe characteristic function of (cid:2) as defined in Definition 10. Let F 0+). Then GE((cid:2)) =+ = {[ ]}, F i+1+ = F (F i(cid:6)∞+).i=0(F iProof. By Proposition 16, (cid:2) is finitary. By Lemma 11-1, (cid:2) is preference symmetric. Hence, by Proposition 12, GE((cid:2)) =(cid:6)∞i=0(F ii=0(F i), where F 0 = ∅, F i+1 = F (F i). Hence, GE((cid:2)) =+) if the following holds:(cid:6)∞for i = 0, 1, . . . , F i ⊆ F i+, and if A ∈ F i(1)Firstly, note that by Lemma 11-5, no argument can defeatS [ ], and so [ ] must be acceptable w.r.t. ∅. Hence, by Lemma 6:+, A /∈ F i, then A ∈ F i+1.each F i+ in the above defined sequence is conflict free.(2)Base case:i = 0: F 0 (= ∅) ⊆ F 0i = 1: Trivially, F 0 and F 0tion 11) F 1 ⊆ F 1+.+ (= {[ ]}), and by Lemma 11-5 no argument defeats∅ [ ], and so [ ] ∈ F 1.+ are conflict fee. F 0 ⊆ F 0+ and F 1 = F (F 0), F 1+ = F (F 0+), and so by monotonicity of F (Proposi-+ and F 1 both contain all arguments that are not attacked by other arguments ({B | ∀ A ∈ Args, ( A, B) /∈ R}). F 1F 1a) {B | ∀ A ∈ Args, if ( A, B) ∈ R then ([ ], ( A, B)) ∈ D}∪b) {B | ∀ A ∈ Args, if A →{[ ]}B then [ ] →{[ ]}A}. Note that by Lemma 11-5 A must be incoherent, and so by Defini-A then [ ] →S A for any S ⊆ Args, and {[ ] →S A} istion 32-3 there is no C ∈ Args s.t. (C, ([ ], A)) ∈ D, and so if [ ] →{[ ]}the reinstatement set for [ ] →S A.+ − F 1 =Since [ ] ∈ F 1, then given a) and b), (F 1Inductive hypothesis: (1) holds for j < i.General case: F i ⊆ F i+, and if A ∈ F i+ − F 1) ⊆ F 2.+, A /∈ F i , then A ∈ F i+1: By inductive hypothesis, F i−1 ⊆ F i−1+ . By Proposition 6,F i−1 is conflict free. By (2), F i−1By Proposition 6: a) F i−1 ⊆ F i . By inductive hypothesis: b) (F i−1+ is conflict free. Hence, by monotonicity of F , F i ⊆ F i+.+ − F i−1) ⊆ F i . a) and b) imply: c) F i−1+ ⊆ F i . Suppose+ is conflict free by (2); F i is conflict free by Proposition 6;+ and A /∈ F i . We therefore have that: A ∈ F (F i−1A ∈ F iand so given c), then by monotonicity of F , A ∈ (F (F i) = F i+1). (cid:2)+ ); F i−1Corollary 5. Let (cid:2) = (Args, R, D) be the EAF for a priority-finitary ALP-DP theory, and GE((cid:2)) the grounded extension of (cid:2). Let F st+). Then, GE((cid:2)) =be the characteristic function of (cid:2) based on strict acceptability (Definition 23). Let F ∗0(cid:6)∞+ = {[ ]}, F ∗i+1+ = F st (F ∗ii=0(F ∗i+).Proof. Proof follows immediately from Lemma 19 and Corollary 3. (cid:2)In the following Lemmas 20 and 21 we refer to [34]’s definitions of an ALP-DP theory’s arguments Args, the attackrelation on Args, conflict free subsets of Args, T -defeat, ALP-DP-acceptability, an ALP-DP theory’s characteristic function G,and its grounded extension (all of which are defined in this paper in Definition 31).Lemma 20. Let (S, D) be an ALP-DP theory and T a conflict free subset of Args. Then G(T ) is conflict free.Proof. Suppose G(T ) is not conflict free. Then ∃ A, B ∈ G(T ) s.t. A attacks B, in which case A conclusion–conclusion orundercut attacks B, in which case one can straightforwardly show that A T -defeats B and/or B T -defeats A. By assumptionof A and B acceptable w.r.t. S, there must exist arguments C, D ∈ T s.t. C T -defeats D, in which case T is not conflict free.Contradiction. (cid:2)Lemma 21. Let (S, D) be a priority-finitary ALP-DP theory and GE((S, D)) the grounded extension of (S, D) as defined as definedin [34] (defined in this paper in Definition 31-8). Then GE((S, D)) =+) = { A |A is ALP-DP-acceptable w.r.t G i+ = {[ ]}, G i+1+), where G 0+), and G(G i+ = G(G ii=0(G i(cid:6)∞+}.932S. Modgil / Artificial Intelligence 173 (2009) 901–934(1)Proof. The lemma is shown by showing that for i = 0, 1, . . .:+ are conflict free, G i ⊆ G i+, and if A ∈ G i+, A /∈ G i , then A ∈ G i+1.G i and G iBase case:i = 0: Trivially, G 0 and G 0+ are conflict fee, G 0 (= ∅) ⊆ G 0+ (= {[ ]}), and by Definition 31-4 no argument ∅-defeats [ ],and so [ ] ∈ G 1.i = 1: G 0 ⊆ G 0+, and G 1 = G(G 0), G 1+ = G(G 0+), and since G 0 and G 0+ are conflict fee, then by monotonicity of G (Propo-sition 5.5 in [34]) G 1 ⊆ G 1+ are conflict free.+ − G 1) = { X | ∀Y s.t. Y {[ ]}-defeats X, then [ ]{[ ]}-defeats Y }. One can straightforwardly show that if [ ] {[ ]}-defeats+ − G 1) ⊆ G 2.Y then [ ] T -defeats Y for ny T . Hence, since [ ] ∈ G 1, (G 1+, and by Lemma 20 G 1 and G 1(G 1Inductive hypothesis: (1) holds for j < i.General case: G i and G iBy inductive hypothesis, G i−1 and G i−1+ are conflict free, G i ⊆ G i+, and if A ∈ G i+, A /∈ G i , then A ∈ G i+1:+ are conflict free, G i−1 ⊆ G i−1+ , and so by monotonicity of G, G i ⊆ G i+, and byLemma 20 G i and G i+ are conflict free.By monotonicity of G: a) G i−1 ⊆ G i . By inductive hypothesis: b) (G i−1+ ⊆ G i . Sup-+ is conflict free, G i is conflict free, and so given c), then by monotonicity+ − G i−1) ⊆ G i . a) and b) imply: c) G i−1pose A ∈ G iof G, A ∈ (G(G i) = G i+1). (cid:2)+ and A /∈ G i . Hence, A ∈ G(G i−1+ ), G i−1Proposition 17. Let (S, D) be a priority-finitary ALP-DP theory, and let GE((S, D)) be the grounded extension of (S, D) as defined inDefinition 31-8. Let (cid:2) = (Args, R, D) be the theory’s EAF and GE((cid:2)) the grounded extension of (cid:2). Then GE((cid:2)) and GE((S, D)) areequivalent modulo the composite priority arguments.Proof. Let F st be the characteristic function of (cid:2) based on strict acceptability, and F ∗0the characteristic function of (S, D) and G 0that for ∀i, F ∗i+ = {[ ]}, G i+1+ = G(G i+ = {[ ]}, F ∗i+1+). Let G be+). Given Corollary 5 and Lemma 21, it is sufficient to show+ = F st (F ∗i+ and G i+ = G({[ ]}) = { X | ∀Y s.t. Y {[ ]}-defeats X , then [ ] strictly {[ ]}-defeats Y }∪ the arguments not {[ ]} defeated+ are equivalent modulo composite priority arguments (emcpa).Base case: G 1by any argument, i.e.:a) the arguments B that are not undercut or conclusion–conclusion attacked by any argument, and;b) the arguments B that are not undercut by any argument, and for any A that conclusion–conclusion attacks B, Bundercuts A.+ = F st ({[ ]}) = { X | ∀Y s.t. Y defeats{[ ]} X, then [ ] strictly defeats{[ ]}Y }∪ the arguments not defeated{[ ]} by any argu-F ∗1ment, i.e.:a) the arguments B that are not undercut or conclusion–conclusion attacked by any argument, i.e., {B | ∀ A ∈ Args, ( A, B) /∈R}, and;b) the arguments B that are not undercut by any argument, and for any A that conclusion–conclusion attacks B (( A, B) ∈R), B undercuts A (and so ([ ], ( A, B)) ∈ D).Note that:if B1, . . . , Bn are singleton priority arguments in F ∗1+ thenB = B1 + · · · + Bn is a composite priority argument in F ∗1+since: i) if any A conclusion–conclusion attacks B, then A conclusion–conclusion attacks some B i , and so by b). B iundercuts A, hence B undercuts A and so ([ ], ( A, B)) ∈ D; ii) ∀Y s.t. Y defeats{[ ]} B, Y defeats{[ ]} some B i , and so byassumption of B i ∈ F ∗1+, [ ] strictly defeats{[ ]}Y .(1)Since Args and ArgsPS97 are emcpa, then given the above:+ ⊆ F ∗1a) G 1+.+, A /∈ G 1b) If A ∈ F ∗1is a singleton priority argument.+, then A must be a composite priority argument A1 + · · · + An where i > 1, and for i = 1 . . . n, Ai+ iff { A1, . . . , An} ⊆ F ∗1c) By Lemma 13 and (1), A1 + · · · + An ∈ F ∗1d) { A1, . . . , An} ⊆ G 1+.a)–d) establish that F ∗1Inductive hypothesis: For j < i, F ∗ jGeneral case: F ∗iWe establish the following pre-conditions for applying Lemma 18:+ is closed under priority arguments, and F ∗1+ are emcpa.+ and G i+ is closed under priority arguments, and F ∗ j+ and G 1+ are emcpa.j+ are emcpa.+ and G+, and so given a) and b):S. Modgil / Artificial Intelligence 173 (2009) 901–934933+ = G(G i−1+ ), where by inductive hypothesis F ∗i−1+ is closed under priority arguments, and+ . By Lemma 6 and Corollary 3, F ∗i−1+ is conflict free and F ∗i−1+ ⊆ F ∗i+ (every argument in F ∗i−1 is strict-• [ ] ∈ G i−1+ , and by Lemma 20 and monotonicity of G, G i−1+ is conflict free, and every argument in G i−1+ is ALP-DP• F ∗i+ = F st(F ∗i−1+ and G i−1+ ) and G i+ are emcpa.F ∗i−1• [ ] ∈ F ∗i−1acceptable w.r.t. F ∗i−1).acceptable w.r.t. G i−1+ .Given the above, then by Lemma 18:∀ A ∈ ArgsPS97, A is ALP-DP acceptable w.r.t. G i−1strict-acceptable w.r.t. F ∗i−1+ .Suppose A ∈ Args, A /∈ ArgsPS97, and A is strict-acceptable w.r.t. F ∗i−1A1 + · · · + An, where i > 1. By Lemma 13, { A1, . . . , An} ⊆ F ∗iequivalent modulo composite priority arguments. (cid:2)+ iff A is+ . Then A ∈ F ∗i+. Given (4) { A1, . . . , An} ⊆ G i+ must be a composite priority argument+. Hence, F ∗i+ are+ and G i(4)References[1] L. Amgoud, A formal framework for handling conflicting desires, in: Proc. 7th European Conference on Symbolic and Quantitative Approaches toReasoning with Uncertainty (ECSQARU’2003), Aalborg, Denmark, 2003, pp. 552–563.[2] L. Amgoud, C. Cayrol, Inferring from inconsistency in preference-based argumentation frameworks, International Journal of Automated Reasoning 29 (2)(2002) 125–169.[3] L. Amgoud, C. Cayrol, A reasoning model based on the production of acceptable arguments, Annals of Mathematics and Artificial Intelligence 34 (1–3)(2002) 197–215.[4] L. Amgoud, Y. Dimopolous, P. Moraitis, A unified and general framework for argumentation-based negotiation, in: Proc. 6th International Joint Confer-ence on Autonomous Agents and Multi-Agents Systems (AAMAS’2007), Honolulu, Hawai’i, 2007.[5] L. Amgoud, N. Maudet, S. Parsons, Modelling dialogues using argumentation, in: Proceedings of the Fourth International Conference on MultiAgentSystems (ICMAS-00), 2000, pp. 31–38.[6] ArguGRID, www.argugrid.org July 2007 onwards.[7] ASPIC, Argumentation services platform with integrated components, www.argumentation.org, March 2004–September 2007.[8] K.M. Atkinson, T.J.M. Bench-Capon, P. McBurney, Computational representation of practical argument, Synthese 152 (2) (2006) 157–206.[9] P. Baroni, M. Giacomin, Resolution-based argumentation semantics, in: Proc. 2nd International Conference on Computational Models of Argument,Toulouse, France, 2008, pp. 25–36.[10] H. Barringer, D.M. Gabbay, J. Woods, Temporal dynamics of support and attack networks: From argumentation to zoology, in: Mechanizing Mathemat-ical Reasoning, 2005, pp. 59–98.[11] T.J.M. Bench-Capon, Persuasion in practical argument using value-based argumentation frameworks, Journal of Logic and Computation 13 (3) (2003)429–448.[12] T.J.M. Bench-Capon, P.E. Dunne, Argumentation in artificial intelligence, Artificial Intelligence 171 (2007) 10–15.[13] A. Bondarenko, P.M. Dung, R.A. Kowalski, F. Toni, An abstract, argumentation-theoretic approach to default reasoning, Artificial Intelligence 93 (1997)63–101.[14] G. Brewka, Reasoning about priorities in default logic, in: Proceedings of the National Conference on Artificial Intelligence, AAAI’94, Seattle, Washington,1994, pp. 940–945.[15] C. Cayrol, S. Doutre, J. Mengin, On decision problems related to the preferred semantics for argumentation frameworks, Journal of Logic and Computa-tion 13 (3) (2003) 377–403.[16] S. Coste-Marquis, C. Devred, P. Marquis, Symmetric argumentation frameworks, in: Symbolic and Quantitative Approaches to Reasoning with Uncer-tainty, 8th European Conference (ECSQARU), Barcelona, Spain, 2005, pp. 317–328.[17] M. Dastani, G. Governatori, A. Rotolo, L.W.N. van der Torre, Preferences of agents in defeasible logic, in: Australian Conference on Artificial Intelligence,Sydney, Australia, 2005, pp. 695–704.[18] P.M. Dung, An argumentation semantics for logic programming with explicit negation, in: Proceedings of the Tenth Logic Programming Conference,Cambridge, MA, 1993, pp. 616–630.[19] P.M. Dung, On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games, ArtificialIntelligence 77 (1995) 321–357.[20] G. Governatori, M.J. Maher, G. Antoniou, D. Billington, Argumentation semantics for defeasible logic, Journal of Logic and Computation 14 (5) (2004)675–702.[21] D. Hitchcock, P. McBurney, S. Parsons, A framework for deliberation dialogues, in: Proc. 4th Biennial Conference of the Ontario Society for the Study ofArgumentation, 2001.[22] J. Broersen, M. Dastani, J. Hulstijn, L.W.N. van der Torre, Goal generation in the boid architecture, Cognitive Science Quarterly Journal 2 (3–4) (2002)428–447.[23] A. Kakas, P. Moraitis, Argumentative agent deliberation, roles and context, in: Computational Logic in Multi-Agent Systems: Recent Advances and FutureDirections, 2002, pp. 35–48.[24] A. Kakas, P. Moraitis, Argumentation based decision making for autonomous agents, in: Proc. Second International Joint Conference on AutonomousAgents and Multiagent Systems, Melbourne, Australia, 2003, pp. 883–890.[25] S. Modgil, Nested argumentation and its application to decision making over actions, in: Proc. Second Int. Workshop on Argumentation in Multi-AgentSystems, 2005, pp. 57–73.[26] S. Modgil, Hierarchical argumentation, in: Proc. 10th European Conference on Logics in Artificial Intelligence, Liverpool, UK, 2006, pp. 319–332.[27] S. Modgil, Value based argumentation in hierarchical argumentation frameworks, in: Proc. 1st Int. Conference on Computational Models of Argument,Liverpool, UK, 2006, pp. 297–308.[28] S. Modgil, An abstract theory of argumentation that accommodates defeasible reasoning about preferences, in: Proc. 9th European Conference onSymbolic and Quantitative Approaches to Reasoning with Uncertainty, Tunisia, 2007, pp. 648–659.934S. Modgil / Artificial Intelligence 173 (2009) 901–934[29] S. Modgil, An argumentation based semantics for agent reasoning, in: Proc. Workshop on Languages, Methodologies and Development Tools for Multi-agent Systems, Durham, UK, 2007, pp. 37–53.[30] S. Modgil, M. Caminada, Proof theories and algorithms for abstract argumentation frameworks, in: I. Rahwan, G. Simari (Eds.), Argumentation in AI,Springer-Verlag, 2009, in press.[31] S. Modgil, M. Luck, Argumentation based resolution of conflicts between desires and normative goals, in: Proc. Fifth Int. Workshop on Argumentationin Multi-Agent Systems, Portugal, 2008, in press.[32] J.L. Pollock, Defeasible reasoning, Cognitive Science 11 (1987) 481–518.[33] H. Prakken, Coherence and flexibility in dialogue games for argumentation, Journal of Logic and Computation 15 (2005) 1009–1040.[34] H. Prakken, G. Sartor, Argument-based extended logic programming with defeasible priorities, Journal of Applied Non-Classical Logics 7 (1997) 25–75.[35] I. Rahwan, L. Amgoud, An argumentation based approach for practical reasoning, in: Proc. Fifth International Joint Conference on Autonomous Agentsand Multiagent Systems, Hakodate, Japan, 2006, pp. 347–354.[36] J.R. Searle, Rationality in Action, MIT Press, Cambridge, MA, 2001.[37] G.A.W. Vreeswijk, H. Prakken, Credulous and sceptical argument games for preferred semantics, in: Proc. 7th European Workshop on Logic for ArtificialIntelligence, 2000, pp. 239–253.