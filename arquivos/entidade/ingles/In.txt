AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptHHS Public AccessAuthor manuscriptComput Biol Med. Author manuscript; available in PMC 2023 January 31.Published in final edited form as:Comput Biol Med. 2021 May ; 132: 104353. doi:10.1016/j.compbiomed.2021.104353.In-silico development and assessment of a Kalman filter motor decoder for prosthetic hand controlMai Gamala,b, Mohamed H. Mousac, Seif Eldawlatlyb,d, Sherif M. Elbasiounyc,e,*aCenter for Informatics Science, Nile University, Giza, EgyptbComputer Science and Engineering Department, Faculty of Media Engineering and Technology, German University in Cairo, Cairo, EgyptcDepartment of Biomedical, Industrial, and Human Factors Engineering, Wright State University, Dayton, OH, USAdComputer and Systems Engineering Department, Faculty of Engineering, Ain Shams University, Cairo, EgypteDepartment of Neuroscience, Cell Biology, and Physiology, Wright State University, Dayton, OH, USAAbstractUp to 50% of amputees abandon their prostheses, partly due to rapid degradation of the control systems, which require frequent recalibration. The goal of this study was to develop a Kalman filter-based approach to decoding motoneuron activity to identify movement kinematics and thereby provide stable, long-term, accurate, real-time decoding. The Kalman filter-based decoder was examined via biologically varied datasets generated from a high-fidelity computational model of the spinal motoneuron pool. The estimated movement kinematics controlled a simulated MuJoCo prosthetic hand. This clear-box approach showed successful estimation of hand movements under eight varied physiological conditions with no retraining. The mean correlation coefficient of 0.98 and mean normalized root mean square error of 0.06 over these eight datasets provide proof of concept that this decoder would improve long-term integrity of performance while performing new, untrained movements. Additionally, the decoder operated in real-time (~0.3 ms). Further results include robust performance of the Kalman filter when re-trained to more severe post-amputation limitations in the type and number of motoneurons remaining. An additional analysis shows that the decoder achieves better accuracy when using the firing of individual motoneurons as input, compared to using aggregate pool firing. Moreover, the decoder demonstrated robustness to noise affecting both the trained decoder parameters and the decoded motoneuron activity. These results demonstrate the utility of a proof of concept Kalman filter decoder that can support prosthetics’ control systems to maintain accurate and stable real-time movement performance.*Corresponding author. 3640 Colonel Glenn Hwy, Dayton, OH, 45435, USA., sherif.elbasiouny@wright.edu (S.M. Elbasiouny). Declaration of competing interestThe authors do not have any conflict of interest.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.KeywordsMotoneurons; Firing rate; Decoding; Kalman filter; Prosthetic control1. IntroductionPage 2Limb loss dramatically limits the lifestyle of an amputee, and upper-limb prostheses have helped amputees to overcome this functional disability [1–3]. Muscle-based electromyographic (EMG) signals and neural-based electroneurographic (ENG) signals [4] have all been used to drive prosthesis control. The peripheral EMG and ENG signals particularly have potential to provide naturalistic control, as they contain detailed low-level information about the neural drive to the muscles [5]. This information, encoded via motoneuron action potentials or spike trains, provides a fine resolution of movement intention [6]. Thus, motor unit activity has been recorded in amputees from ENG signals through electrodes implanted in peripheral nerves [4,7–12]. Numerous spike-sorting algorithms have been applied to peripheral nerve recordings to extract individual motor unit activity [13]. Motor unit activity can also be indirectly measured by decoding from EMG activity using decomposition algorithms [4–6,14–22]. Such algorithms achieved better performance in movement estimation than did the conventional amplitude-based features of EMG activity [6,19–23]. More recently, the activity of individual motor units, indirectly measured from EMG with high-fidelity pin electrodes, has been demonstrated to provide more responsive, smooth, and proportional control compared to the conventional EMG features [23].However, several limitations and difficulties still impede amputees from attaining full, natural movement with their prostheses [1,24,25]. While state-of-the-art prostheses can perform complex movements, the control algorithms for prosthetic motion are a major reported factor in limited prosthesis functionality [1,24,25]. Thus, enhanced control systems are needed to provide more naturalistic control of prostheses [25,26]. Specific needs include improved prosthesis movement accuracy and response time [4,27]. In addition, amputees need the control system to respond accurately to new and different intended movements without retraining of the control algorithm [4,27]. Most importantly, amputees require improved longevity of prosthetic control systems. Currently, motor decoders become unreliable after a short period of real-life use. This greatly hinders their usefulness outside the laboratory [5], probably contributing to the abandonment of their upper-limb prostheses by up to 50% of amputees [25]. While the variety of decoding approaches and the limited duration of clinical testing [13] has made it difficult to quantitate the extent of this issue, some studies report neural features used by decoders degrading in just a few days [5] or that training is required on a weekly or even daily basis [9]. In consequence, amputees are burdened by either frequent recalibrations of their prostheses or a rapid decline in their limbs’ responsiveness.Such degraded performance occurs because the amputee’s physiological state changes continually, yet the limb is calibrated to one or few states and tested in one, or a few limited, conditions. For instance, one’s neuromodulatory state (the excitability level of one’s Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 3motoneurons) fluctuates throughout the day in response to the intensity of motion required [28]. Second, decoders are also generally designed to mimic a limited range of “normal” motoneuron output, which result primarily from orderly recruitment (in which motoneurons are recruited from smallest to largest). However, reversed and mixed recruitment orders have been observed in animals and humans [29–31]. Third, on a longer timescale, amputation commonly causes neurodegeneration and ongoing shifts in motoneuron numbers and their electrical properties. These changes continue well beyond the original injury and lead to fewer and loss of certain types of motoneurons as well as higher heterogeneity in the electrical properties of remaining MNs [32]. These changes also allow procedures like bionic reconstruction and targeted muscle reinnervation (TMR) to take place leading to pool compartmentalization and changes in MN firing characteristic [33,34]. Also, hardware problems, such as electrode and wire breakage, lead to fewer cells or data channels to record from to feed the decoder with incoming information [5,35,36]. Together, these issues continue to represent critical barriers to the development of prosthesis control systems that provide long-term reliability and accuracy.Efforts to produce robustly accurate prosthetic control algorithms include pattern recognition and non-pattern recognition methods [4,27,37,38]. However, the ability of such approaches to generate naturalistic movements is limited [37,38]. Here, we propose to use the Kalman filter, which has been extensively utilized in neural decoding for prosthesis control [39,40] due to its high accuracy and fast computational speed [40]. Moreover, it is known to generate stable output from noisy input signals, which occur in motor decoding problems [5,9,41]. Importantly, the Kalman filter was also shown to be robust even without large amounts of training data [9]. Multiple studies used the Kalman filter in movement estimation by decoding data recorded either from the motor cortex [41–44], ENG signals [9,45,46], EMG signals [47–49], or by combining peripheral neural and EMG signals [50,51]. Together, these studies suggest that the Kalman filter has potential to enhance the performance of prosthetic control algorithms.Therefore, the objective of this study was to develop a motoneuron-based Kalman filter decoder to support advanced prosthetic hand control systems that maintain long-term, accurate, real-time performance, in the context of both new, untrained movements and ongoing physiological changes. To accomplish this, we employed a recently developed multi-scale, high-fidelity computational model of the motor pool by Ref. [52] to input simulated motoneuron spiking activity into our proposed decoder. The model, developed in our prior work, provides high-fidelity, 3D representations of all three types of motoneurons in the pool, and has been shown to provide a highly accurate simulation of firing behaviors [53]. The Kalman-based algorithm decodes the simulated activity to estimate the underlying synaptic input (i.e., excitation level) that drives the firing of the modeled motoneurons. The estimated synaptic input is then mapped to specific movements of a simulated prosthetic hand (by MuJoCo software). Using simulated input allows us to control, alter, and know the exact biological conditions in which the decoder is performing. Further, by using a simulated prosthetic hand, we can accurately compare hand movements resulting from decoded signals against hand movements resulting from the actual synaptic inputs, which can be directly input to the simulated prosthesis. Additionally, the computational model of the motor pool allowed us to simulate various biological conditions (such as multi-speed movements, varied Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 4motoneuron recruitment orders, and higher heterogeneity of motoneuron properties) and complications (such as fewer available motoneurons and loss of their types), which occur after amputation, and which a control system must accommodate to sustain performance levels over time.The Kalman-based decoder showed both high accuracy and high computational efficiency while producing various hand movements under differing physiological conditions. Results also show that decoding the firing activity of individual motor units outperforms decoding the aggregate firing activity of the entire motor pool. Moreover, our analysis shows that the proposed Kalman decoder performs robustly despite changes in the types, the number of motoneurons, values of the estimated decoder parameters, and the noise in motoneuron activity. Our simulations predict that the decoder would be able to address long-term shifts in motoneuron populations and properties with occasional re-calibration.2. Methods2.1. System overviewThe Kalman decoder proposed in this study uses the motoneuron firing rate to estimate the synaptic current/excitation level, which is then correlated to a hand movement. Fig. 1 illustrates the block diagram of the Kalman-based control system. The motoneuron activity is the input to the system. The decoding process is the core of the system. In the decoding process, the motoneuron firing rate is calculated from the motoneuron spiking activity. The Kalman decoder then uses the calculated firing rate to estimate the synaptic input, which represents the excitation level. The synaptic input is then correlated/converted into a hand movement. Finally, the estimated hand movement is converted into control commands to move a simulated prosthetic hand.2.2. Kalman filterThe Kalman filter is a technique that estimates the state of a system using a recursive solution [54,55]. In this study, the Kalman filter is used with the excitation level xk as the input state to be estimated at time instant k, and the motoneurons’ firing rate yk as the measurement, in which yk is a M × 1 vector, and M is the number of observed motoneurons.The Kalman filter formulates the system model and the neural firing model, respectively, as follows [41,54,55]:xk + 1 = Akxk + wkyk = Hkxk + qk(1)(2)where Ak is the coefficient matrix that linearly relates the input at time instant k to the input at time instant k + 1; Hk is a matrix that linearly relates the input xk to the measurement yk at the time instant k; and wk and qk are noise terms, in which wk N 0, Wk and qk N 0, Qk . For simplification, it is assumed that Ak, Hk, Wk and Qk are constant time Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 5invariant parameters. In our model, A and W are scalar values because the input xk is a scalar value, H ∈ RM×1, and Q ∈ RM×M.2.3. Training and testing datasetsIn this study, one dataset is used to train the decoder and eight datasets are used to test the decoder’s performance. These datasets were generated from a computational model [52], which delivers input to the pool via synaptic conductances along the motoneuron dendrites. In the motor pool, 51 motoneurons are modeled, consisting of three cell types: Slow-twitch fatigue resistant (S), fast-twitch fatigue-resistant (FR), and fast-twitch fatigable (FF). The cells in the pool are divided as follows: 13 (~25%) S cells, 13 (~25%) FR cells, and 25 (~50%) FF cells. These ratios of motoneuron types match the numbers reported from the experimental data of the cat MG muscle [52]. All motoneurons receive uniform synaptic inputs with equal magnitude. In each dataset generated from the model, the synaptic input signal corresponds to a hand movement form. The sampling rate of the cells’ firing in the model is 40 samples per millisecond (one sample per 0.025 ms).2.4. Data preprocessingMotoneuron firing of both training and testing datasets undergoes preprocessing before decoding. The firing of motoneurons is either zero or one, in which zero indicates no spike and one indicates the firing of a spike (i.e. action potential) at a specific time step. The firing rate of each motoneuron, in spikes per second (Hz), is used as the measurement in the Kalman filter decoder. When a motoneuron fires, the firing rate of this cell is updated. On the other hand, when there is no firing, the firing rate value at instant k is kept at the same firing rate as at instant k − 1. Therefore, the firing rate value does not change unless the cell fires. The change from zero firing rate to the first firing rate per cell, which is usually more than 10 Hz, is a relatively high change compared to the average rate of change of the firing rate. This high rate of change at the first firing rate value was found to be an abrupt change in the cell’s firing rate. We observed that these abrupt changes decreased decoding accuracy. Therefore, to enhance accuracy, the first firing rate value per cell, denoted by fm, is subtracted from all the firing rate values for the same cell. Thus, the firing rate is calculated separately for each cell every 0.025 ms using the following equation:ymk =1tk − tk − 1− fm(3)where ymk is the firing rate of motoneuron cell m at time tk, and fm is the first firing rate of motoneuron cell m.The Kalman filter uses the value of the decoded excitation level at the previous time instant, xk − 1, to find the prior decoded input at time instant k. The prior decoded input is the first estimation of the input per time instant. The filter then uses the measurement value yk to correct the estimation error and update the estimation. The following equations are the decoding equations used in estimating the excitation level xk [41,54,55].−xk = xk−+ Kk yk − Hxk(4)Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.−xk= Axk − 1Kk = Pk−HT HPk−HT + QPage 6(5)(6)−1in which xk is the posterior decoded excitation level at time instant k, and xkdecoded excitation level at the same time instant, and Kk is the Kalman gain matrix. This is the matrix used in minimizing the final estimation error. The value of the Kalman gain is −inversely proportional to the measurement error matrix. The prior error covariance matrix Pkis given by Refs. [41,54,55].− is the prior − = APk − 1AT + WPkAnd the posterior error covariance matrix Pk is given by Refs. [41,54,55].−Pk = I − KkH Pk(7)(8)The parameters A and H in equations (4)–(8) are estimated using the least squares approach; these parameters are then used to estimate the parameters W and Q [41]. The equations to learn the Kalman filter parameters are given by Ref. [41].(9)(10)(11)(12)A = X2X1T X1X1T −1in which:H = YXT XXT −1W = X2 − AX1 X2 − AX1T/(N − 1)Q = (Y − HX)(Y − HX)T/NX = x1 … xN , X1 = x1 … xN − 1X2 = x2 … xN , Y =y1, 1 … y1, N⋮⋱ ⋮yM, 1 … yM, Nand N is the number of samples in the training data.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 72.5. Excitation level to movement conversionIn order to assess the efficacy of the Kalman-based decoder in controlling a prosthetic hand, the synaptic input is converted to a movement signal that drives a simulated hand by MuJoCo (Multi-Joint dynamics with Contact, which is a physics engine for model-based control) [56]. MuJoCo HAPTIX is the system we used in our analysis of hand movement simulation [57]. The simulated hand used in this study is the “Luke Hand,” which simulates the hand of the real bionic “Luke Arm,” which was created at DEKA Research and Development Corp. as part of DARPA’s Revolutionizing Prosthetics program [58].The simulated Luke Hand movement is derived by providing MuJoCo software with the movement command that represents the required hand gripping angle (termed hereafter hand position). The final decoded synaptic input per 0.025 ms is smoothed by a 100 ms scrolling window; then it is converted to hand position. The smoothing is needed to achieve reliably smooth hand movement and to filter out any associated noise and hand jerk. In this study, the synaptic input is converted to hand movement to either open or close the hand. Conversion of synaptic input to hand position is represented by the following equation:zk =M0, ∑190xmaxMdk, ∑1ymk = 0ymk > 0(13)in which zk is the decoded hand position at time instant k, Xmax is the maximum excitation level value of the simulated signal, and dk is the decoded input after smoothing.The maximal position the hand can reach in MuJoCo is 90°, which corresponds to a closed hand. This position is correlated to the maximal synaptic input value of the simulated signal. The minimal position of the hand is 0°, which corresponds to an open hand and is correlated to zero synaptic input. The term is either zero or positive because there is no negative firing rate. The conversion of the actual hand position – that is, the hand’s position converted from the actual, not the estimated, synaptic input – is implemented the same way using the same equation above.The decoder is implemented to run in real-time, where it receives the firing of all cells every 0.025 ms. For every sample, it calculates the firing rate and decodes it to estimate the synaptic input. The decoded synaptic input is averaged (smoothed) using a scrolling window of 100 ms, and the averaged synaptic input is then mapped to hand position. MuJoCo receives the decoded hand position and moves the hand. The hand movement is then read by MuJoCo sensors. The actual hand position (from direct, not decoded, synaptic input) is also read using MuJoCo sensors. In this study, the actual and decoded hand positions read by MuJoCo sensors are compared to evaluate the performance of the decoder. The average decoding computational time per instant (every 0.025 ms) is 0.3 ms. The decoding algorithm was implemented in Matlab, and the tests were run on a computer with an Intel CPU 2.60 GHz processor. Some of the early tests were run on high-performance computer hardware using the Neuroscience Gateway [59].Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.2.6. Pool firing analysisPage 8In addition to the spiking activity of individual motoneurons, the proposed decoder was examined using the aggregate firing of a pool of cells. In this case, the spiking activity of the pool is represented in one spike train. As in the individual cell case, the pool firing is either zero or one. However, in the pool firing, zero indicates no firing from any cell, while one indicates firing from one or more cells. The firing rate equation used in calculating the single cell firing rate (Eq 3) is also used in calculating the pool firing rate, but without subtracting the fm value. In the case of pool firing, the firing rate values are very high because the pool spike train comprises spike trains of all pool cells. Accordingly, unlike the single cell firing case, the change for zero firing rate to the first firing rate is not considered an abrupt change, and it does not decrease the decoding accuracy. In addition, there are a few instances in which the firing rate is high compared to the mean of the pool firing rate. These high frequencies are considered outliers due to their low occurrence. They were also found to decrease decoding accuracy. Therefore, in the case of very high firing rate values, as compared to the mean firing rate, the firing rate at instant k is not updated but is kept at the same firing rate as at instant k − 1. A high firing rate is defined as any rate larger than the threshold rate l. The rate l is defined asl = μy + σy * 2(14)where μ y is the mean and σy is the standard deviation of the firing rate values of the training dataset. The threshold l is calculated from the training dataset and applied to the testing dataset.2.7. Performance evaluationTwo metrics are used in this study to evaluate the decoder’s performance:2.7.1. Correlation coefficient (CC)—Pearson’s linear correlation coefficient is used to evaluate the correlation between the actual (direct synaptic input) and the decoded hand positions, as read by MuJoCo [60,61].CC =N∑k = 1zk − z zk − zNzk − z 2∑k = 1zk − zN∑k = 12(15)in which zk is the actual hand position read by MuJoco, z is the mean of the actual hand position, zk is the decoded hand position read by MuJoCo, and z is the mean of the decoded hand position.2.7.2. Normalized root mean square error (NRMSE)—NRMSE is the measure of the normalization of the root mean square error. Root mean square error is the square root of the average of the squared errors/differences between the actual and the decoded hand positions read by MuJoCo [61,62].Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.RMSE =N1N ∑k = 12zk − zkNRMSE =RMSEmax(z) − min(z)2.8. Performance comparisonPage 9(16)(17)To assess the Kalman filter decoder performance, we compared its performance against that of Linear Regression decoder, another linear algorithm that is commonly used in prosthetic control [5,39,41–43]. The linear regression algorithm estimates the excitation level as a linear combination of the firing rates at time instant k as [39]xk = Cyk + a(18)where xk is the decoded excitation level at time instant k, yk is a M × 1 vector representing the motoneurons’ firing rate at the same time instant with M as the number of observed motoneurons, C is a 1 × M vector representing the regression coefficients, and a is a constant offset (intercept). The parameters C and a are estimated from the training data using the least squares approach [39].As seamless and smooth prosthetic movements are important and critical especially with noisy measurements as the case in motor decoding [5], we assessed and compared the performance of the Kalman decoder and the linear regression decoder in presence of a varying noise level and quantified the jerk in the generated movement using the root-mean-square jerk (RMS-jerk) metric [63,64] which is defined asRMS− jerk =N1N ∑k = 1z⃛2k(19)where zk is the decoded hand position at time instant k (with or without applying smoothing to the decoded excitation level).3. ResultsOur objective was to provide proof of concept that the Kalman filter improves prosthetic hand control, specifically in context of ongoing physiological changes, when used to decode the firing activity of individual motoneurons. Importantly, this decoder was tested against datasets that were generated under different physiological conditions to represent common complications that amputees experience, such as loss of motoneurons or changes in their electrical properties. Such changes are ongoing; thus, decoders need to perform well under all of these conditions to avoid degradation of performance. In the next sections, we first explain the training dataset and its firing characteristics. We will then present the results Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 10of applying the proposed Kalman decoder, without retraining, to eight physiologically varied testing datasets. We also study the decoder’s accuracy, with retraining, when fewer motoneurons remain and when some motoneuron types are missing.3.1. Training data and firing characteristicsTo train the proposed decoder with inputs that span the full range of motion, a 3-min long dataset was used, with a staircase-shaped waveform and maximal synaptic current of 10 nA, which evokes ~80% of the maximum voluntary contraction, as shown in Fig. 2a. The overall waveform takes a triangular shape, while each step of synaptic current value takes the shape of a hold waveform that lasts for 3 s on average. The rate of change of the synaptic current (the activation speed) is zero in this data except at the transition moment from one synaptic current to another. These characteristics in terms of amplitude and shape make this dataset suitable for training the decoder to decode other datasets with different amplitudes, speeds, and waveforms.Fig. 2a shows the corresponding firing rate of 3 cells; each cell is the first cell in each type to fire. The figures demonstrate that the S cell is the first cell that fires, followed by the FR and, finally, the FF – in agreement with the size principle [65]. The staircase synaptic input, shown in Fig. 2a, starts at 0 nA and increases to 10 nA; then decreases again to −25.3 nA. This negative synaptic input provided inhibition to stop the cells’ self-sustained firing, which results from persistent inward currents (PIC). The PIC effect, indicated by the difference in recruitment and de-recruitment current, on the three sample cells is shown in Fig. 2b. These firing characteristics are general to all the datasets (except the reverse-recruitment dataset) generated from the motor pool model.We next examine the linearity of motoneuron firing. Fig. 2b shows the firing rate of the same 3 cells examined in Fig. 2a, but using different synaptic input currents from the staircase training data. The figure demonstrates the inherent linearity in the firing. The correlations between the synaptic current and the firing rate of the first cell in the S type, FR type, and FF type is 0.94, 0.93, and 0.98, respectively. These high correlation values demonstrate the linearity between the synaptic current and the firing rate. This motivated the use of the linear Kalman filter as opposed to other non-linear approaches.3.2. Performance under different testing waveforms/physiological conditionsTo examine the decoder’s performance with different waveforms, we used two waveforms to represent essential hand movements that are vital for a prosthetic arm. The first movement we examined is closing and opening the hand, for example, in the case of grabbing or leaving an object. The second movement is closing the hand and then keeping its position constant, for example, in the case of grabbing and holding an object. These two movements are represented by two different waveforms: “Triangular” and “Ramp-and-Hold,” respectively. (It should be noted that the triangular close-and-open dataset also incorporated the 90° angle analyzed in 3.3, below, as well as the 1 nA/s speed analyzed in 3.4, below. Thus, these were counted as one testing dataset, though these movement characteristics were analyzed separately). These two testing waveforms are different from the staircase training waveform demonstrated in the previous section. Fig. 3a and Fig. Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 113b demonstrate the actual and decoded hand positions for both movements. The figure illustrates the significant similarity between the actual and decoded positions, and the decoder estimated the two waveforms with high accuracy (Triangular: CC = 0.99, NRMSE = 0.01; Ramp-and-Hold: CC = 0.99, NRMSE = 0.03).We analyzed the decoded input in the Ramp-and-Hold data and found higher noise levels vs. the average noise of the other testing datasets. This noise could arise from the high firing rate of the neurons during the hold part of the movement. To reduce the effect of this noise, the Ramp-and-Hold decoded synaptic input was averaged in a larger scrolling window of 200 ms instead of the default 100 ms. The increased window did not affect the decoder’s performance in terms of CC and NRMSE, but did successfully reduce the movement jerk in the MuJoCo hand movement. Fig. 3c shows the hold part of the decoded hand position for different smoothing windows, and how the larger window reduces the hand movement jerk. In conclusion, these results show that the proposed Kalman decoder performs various hand movements with high accuracy, even with waveforms different from the training data. Such capabilities are essential to avoiding degradation of prosthesis performance.3.3. Performance for different degrees of hand openingWe next examined the decoder’s performance with three different synaptic current amplitudes. The synaptic current amplitude is correlated to the hand position angle. The decoder’s robust performance at all synaptic amplitudes is important, given the need for a prosthetic hand to move, open, and close at many different angles. The decoder was trained at 10 nA maximal amplitude. Here, we examined the performance of the decoder at 10 nA, 7 nA, and 2 nA, which respectively correspond to hand positions of 90°, 63°, and 18°, as shown in Fig. 4.Fig. 4d–f, below, demonstrate notable similarity between the actual and decoded inputs in each case, with a slight increase in similarity as amplitude increases (10 nA: CC = 0.99, NRMSE = 0.01; 7 nA: CC = 0.99, NRMSE = 0.02; 2 nA: CC = 0.97, NRMSE = 0.08). In sum, these results demonstrate the decoder’s ability to closely estimate different degrees of hand opening.3.4. Performance at different activation speedsHigh decoding accuracy is required at different speeds to allow smooth hand movement at different speeds. Thus, we next compared the decoder’s performance using three different activation speeds. The activation speed is the rate of the synaptic current injected into the motoneurons, which correlates to the speed at which the hand moves, opens, or closes. The algorithm decoded three triangular-shaped datasets at three speeds: 1 nA/s, 6 nA/s, and 10 nA/s. These speeds simulate hand movement speeds realistic to daily life. The hand takes 10 s, 1.5 s, and 1 s to become fully closed at speeds of 1 nA/s, 6 nA/s, and 10 nA/s, respectively. Fig. 5a–c demonstrate the success of the decoder to estimate hand positions at different synaptic activation speeds (1 nA/s: CC = 0.99, NRMSE = 0.01; 6 nA/s: CC = 0.98, NRMSE = 0.06; 10 nA/s: CC = 0.96, NRMSE = 0.11). However, as the speed increases, the decoder’s performance slightly deteriorates. That the decoder was trained using a dataset with a staircase command may explain the decoder’s better performance at low speeds. Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 12However, the relationship between the activation speed and the initial synaptic current value can provide another explanation of the decoder’s better performance at low speeds. It was found that the initial value of the hand position in the movement is directly proportional to the activation speed. This means that, as the speed increases, the initial value of the hand position increases. The initial synaptic current value which is correlated to hand position, is the value of the synaptic current at the first firing rate occurrence.The initial synaptic current values at the speeds 1 nA/s, 6 nA/s, and 10 nA/s, are 1.0098 nA, 1.9561 nA, and 2.4163 nA, respectively, corresponding to hand position values of 9.0082°, 17.6049°, and 21.7467°, respectively. At higher speeds, the first firing rate value occurs at higher current values. This can explain why the decoder at low speeds can estimate the low initial current/position values and follow the actual position more accurately compared to the high speeds. However, despite the slight deterioration in the performance with the increase of the speed, the results show that the decoder successfully estimates hand movements at different speeds.We next examined the decoder’s performance with a multi-speed movement, in which the activation speed changes during movement. In natural movements, the hand’s motion (and synaptic current speed) may change within one movement. Thus, the decoder’s ability to capture the change of the speed instantaneously is essential for creating reliable hand movement in real-time. We examined the decoder with a triangular-shaped dataset that changed among three speeds: 0 nA/s (constant position), 2 nA/s, and 6 nA/s. As shown in Fig. 5d, the decoder successfully estimated the triangular input with variable speeds with CC of 0.99 and NRMSE of 0.03. The figure also demonstrates the ability of the decoder to track the changes in speed accurately and with no delay.3.5. Performance for reverse MN recruitmentTo further examine the decoder under new and biologically varied conditions, we tested its performance under reversed motoneuron recruitment in which FF cells are initially recruited, followed by FR, then S cells [52]. Reversed recruitment has been observed in animals and humans [29–31]. Moreover, electrical stimulation of the peripheral nerve is usually used to restore lost motor functions like hand grasping and walking. In peripheral nerve stimulation, reverse recruitment is one of the main challenges that cause rapid muscle fatigue and poor grading of muscle force. While there are several stimulation techniques developed to overcome this challenge and achieve normal recruitment [66–68], we examined the decoder’s performance in the case of reverse recruitment because, in a few cases, it represents a challenge in restoring hand function. Fig. 6a and Fig. 6b show the characteristics of the firing rate and the firing time, respectively, of all the pool motoneuron cells in the normal and reverse recruitment cases. As shown in Fig. 6a and b, with reverse recruitment, FF motoneurons fire first and at much higher firing rates than with orderly recruitment; whereas S motoneurons fire last and at a much lower firing rate vs. orderly recruitment. Fig. 6c demonstrates that the decoder succeeds in decoding a triangular-shaped testing dataset with reverse recruitment: CC of 0.98 and NRMSE of 0.20. While the accuracy, in this case, is slightly lower than the decoder’s performance under normal Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 13recruitment cases, demonstrated in previous sections, this level of accuracy is expected to still provide reasonable control in the few or rare cases of reverse recruitment movements.3.6. Performance using a reduced pool sizeAfter amputation, few accessible cells with reliable firing might be available. Also, after amputation, some motoneurons may continue to degenerate over time. Moreover, in empirical experiments, the number of motoneurons actually used to record EMG or ENG signals may differ. In addition, the micro-movement and shifting of electrodes, which may happen during a single day or from day to day [35], makes it difficult to record from the same neuron for a long time [5]. A lot of movement control methods require retraining as a result of electrode displacement [35]. The retraining requirement increases the methods’ computational load and makes it harder to be applied in real-life applications [35]. Therefore, to make our research more relevant to all of these cases, we examined the decoder’s performance, without retraining, in estimating the movement of the triangular close-and-open dataset with the spiking of only ~48% of its originally active cells. Fig. 7 shows the decoded position of the triangular close-and-open dataset in both the case of full availability of cells vs. the case of availability of only ~48% of the cells. The figure shows that reducing the number of cells does not affect the shape of the decoded movement (CC = 0.99). This means that the decoder can preserve the movement accuracy and smoothness even with the absence of more than 50% of the cells. However, the movement amplitude decreased (NRMSE = 0.24) in comparison to the original case. This decrease in the amplitude can be compensated by scaling the decoded amplitude.3.7. Performance using small numbers of cellsIn this case, the decoder was retrained to decode the movements using a smaller number of cells. Fig. 8 shows that reducing the number of available cells in the decoding process from 51 to 21 to 9 still resulted in highly accurate performance (51 cells: CC = 0.99, NRMSE = 0.01; 21 cells: CC = 0.99, NRMSE = 0.01; 9 cells: CC = 0.99, NRMSE = 0.03). Accordingly, these results show that the decoder can estimate the hand movements accurately with under 20% of active cells. While we did retrain the decoder here for the loss of available numbers of cells, and below (in 3.8) for loss of cell types, such changes take many months or more to occur. Thus, the need to recalibrate for shifts in neuronal populations would be far less frequent than what real-life patients currently require.3.8. Performance with different cell typesBecause post-amputation motoneurons often undergo degeneration or changes in their electrical properties over time [32], which can result in a transition in their types, some motoneuron types might be unavailable for recording. To examine the decoder’s robustness in the absence of cell types, we used testing datasets where one or two cell types are absent. First, the decoder was re-trained to use only one cell type (the absence of two cell types). Specifically, it was retrained for each type of remaining cells. Fig. 9a demonstrates the performance of the decoder when only one cell type – S, FR, or FF – is available. The decoder achieved better decoding accuracy when using S type and FR type vs. FF type. In the case of FF type, NRMSE is larger than in S and FR types, while the CC values are close Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 14in all the three cases (S type: CC = 0.99, NRMSE = 0.03; FR type: CC = 0.99, NRMSE = 0.04; FF type: CC = 0.97, NRMSE = 0.21).Second, we retrained, then examined the performance of the decoder under the condition of only two cell types available (only one type absent). Specifically, we re-trained to each type-pairing available. Fig. 9b shows that the decoder achieved high decoding accuracy using any pair of types (S and FR types: CC = 0.99, NRMSE = 0.02; S and FF types: CC = 0.99, NRMSE = 0.01; FR and FF types: CC = 0.99, NRMSE = 0.03). However, the accuracy is slightly better in the presence of the S type. These results in conditions of limited numbers and/or types of cells available demonstrate that retraining maintains the decoder’s robustness under a variety of situations of limited motoneuron availability. In sum, the data presented in 3.7 and here in 3.8 show proof of concept that recalibration after more severe complications of amputation have emerged allows the decoder to continue to perform robustly.3.9. Performance using pool firing dataOne of the important considerations is whether the input to the decoder will be the pool’s aggregate firing activity or the firing of individual motoneurons. All the results we demonstrated earlier are based on using the firing of individual cells as the measurement. To compare the performance of individual cell vs. pool firing, we examined the decoder’s performance, by first retraining it to aggregate pool firing. We then used the pool firing as input, with the triangular-shaped testing dataset. Fig. 10 demonstrates the actual and decoded hand positions for the pool firing case. As shown in the figure, the decoding accuracy in the pool firing case (CC = 0.81 and NRMSE = 0.23) is notably lower than the accuracy achieved when the decoder was trained and tested with single-cell firing (CC = 0.99 and NRMSE = 0.01). This result shows that using the firing of individual cells in prosthetic control could better characterize the underlying synaptic input compared to using the pool firing.3.10. Sensitivity analysisTo test the decoder robustness against variations in the decoder parameters, training signal, or in presence of noisy inputs, a comprehensive sensitivity analysis was conducted. First, because the performance of the Kalman decoder depends on the A, H, W, and Q parameters estimated from the training dataset (see Eq 1 and Eq 2), we sought to examine the decoder’s performance under systematic variation in the values of these four parameters. Such variations may result from using different training datasets or noisy measurements. Thus, we first examined the decoder’s performance when the values of each of the four parameters was changed in the range −30% to +30% (with a step of 10%) of the values obtained during the training of the Kalman filter. The change in the parameters was done by adding/subtracting the percentage change to/from the original values of the parameters obtained from the training data. Thus, the percentage change was measured relative to the value of the changed parameter. For the matrices H and Q, the same percentage change was applied to each element in the matrix. Given the dependency in the computation between the parameters A and W, and between the parameters H and Q, a change in one parameter required a dependent change in the other. We examined the decoder’s performance under these changes by estimating the hand position of the seven different Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 15testing datasets presented in sections 3.2, 3.3, and 3.4; namely, triangular waveform at speed of 1 nA/s and maximum amplitude of 10 nA, the Ramp-and-Hold waveform, two triangular waveforms at speed of 1 nA/s and maximum amplitudes of 7 nA and 2 nA, two triangular waveforms at maximum amplitude of 10 nA and speeds of 6 nA/s and 10 nA/s, and, finally, the multi-speed waveform. Table 1 shows the mean CC and NRMSE averaged across the 7 testing conditions as a result of increasing or decreasing the value of each of the four parameters. The results demonstrate that changing parameters A, W and Q has almost very little or no impact on the decoder’s performance in terms of CC and NRMSE, and the results were not statistically significant (P > 0.5, Wilcoxon rank-sum test). This demonstrates that the Kalman decoder is robust to changes in these parameters that could result from noisier measurements. For parameter H, Table 1 shows that changing this parameter has a slight effect on the CC, where the mean CC value was at least 0.9 across all the changes. Such slight change in the CC was also not statistically significant (P > 0.1, Wilcoxon rank-sum test). For the NRMSE values, the changes applied to the parameter H led to statistically significant differences in performance relative to not changing the parameters, however, the maximum NRMSE value in this case was in the range of 0.25. This shows that incorrect estimation of the relationship between the synaptic input and the firing rate could only lead to a smaller range of hand movement.Second, because in all previous tests the decoder was trained using firing data generated in response to a staircase synaptic input - which could be obtained experimentally by concatenating different trials in which each trial represents a certain synaptic input level [69,70], we sought to further examine the decoder’s performance using a different training dataset. Accordingly, we examined the performance of the decoder when using a triangular-shaped dataset as the training dataset and compared its performance to using the staircase training dataset. The triangular ramp training signal, as shown in Fig. 11, is 20-s long, with a maximal synaptic current of 10 nA, and varying at a rate of 1 nA/s. The change of the training dataset led to some differences in the parameters’ values as compared to using the staircase training dataset: no difference in parameter A, 8 ± 13% average absolute difference in parameter H across the cells, 98% difference in parameter W, and 50 ± 80% absolute difference in parameter Q across the cells. Despite these changes in the parameters, the decoder was able to preserve its high performance when tested on different testing conditions such as the Ramp-and-Hold data and the multi-speed data (previously demonstrated in sections 3.2 and 3.4, respectively). When the triangular-trained decoder was tested using the Ramp-and-Hold data shown in Fig. 3b, the decoder estimated this signal successfully with a CC of 0.99 and NRMSE of 0.01. Additionally, when the triangular-trained decoder was tested using the multi-speed triangular signal shown in Fig. 5d, the decoder estimated this signal successfully with a CC of 0.98 and NRMSE of 0.05. These results show that the decoder is robust to the changes in the training parameters that could result from changing the training data.Third, as signal smoothing applied to the decoder output results in a delay before the prosthesis could move, we examined the performance of the Kalman decoder without applying the 100 ms smoothing window to the decoded output, which would make the decoder more responsive, but risks its seamless and smooth output (i.e., generates jerky Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 16prosthetic movement). In this analysis, we used the 17 testing datasets that were previously analyzed in sections 3.2 to 3.8 and quantified the jerk in the movements. Our results showed that the Kalman decoder without the smoothing step had a very small RMS jerk value (see Fig. 12a, 1st bar) with average CC and NRMSE of 0.98 and 0.06, respectively, which are equal to the values obtained when applying the smoothing step. This result shows that the Kalman decoder’s performance and generated smooth movement are not dependent on the smoothing step.Fourth, as computer simulations is a clean environment, we evaluated the decoder’s performance when Gaussian noise was added to the firing rate of the testing datasets to mimic noisy measurements that could be encountered in motor decoding [5]. The noise was added while the smoothing step was still removed. We tested five noise levels by applying Gaussian noise with zero mean and standard deviation values ranging from 1 to 5 with a step of 1. In this analysis, we tested all the 17 testing datasets that were previously analyzed in sections 3.2 to 3.8 at each noise level and quantified the jerk in the decoded output. Fig. 12b shows the Kalman filer decoded output (red trace) relative to the actual signal output (blue trace) for the multi-speed condition in presence of the highest level of Gaussian noise of standard deviation of 5. Despite the high noise, the decoded output was still largely smooth and had a CC of 0.99 and a NRMSE of 0.02, a performance largely comparable to the decoder performance for the same condition without noise and with smoothing (CC of 0.99 and NRMSE of 0.03) as previously shown in section 3.4. When the jerk level was quantified in the Kalman filter decoder output across all the 17 testing conditions previously analyzed, the jerk remained steady despite the increase in noise level (Fig. 12a). These results indicate that the Kalman decoder is insensitive to noise and could maintain its smooth and stable output.Fifth, to compare the robustness of the Kalman filter versus other decoding methods, we compared its performance against that of the linear regression; a well-known and commonly used decoding algorithm in neural prosthetic control [5,39,41–43]. We compared their performance in estimating the hand position of the same 17 different testing datasets analyzed in sections 3.2 to 3.8 with no smoothing and with different levels of Gaussian noise added. Our results show that while the average performance of the Kalman and linear regression decoders are comparable (the linear regression had mean CC and NRMSE of 0.98 and 0.06, respectively), the linear regression decoded output suffered much higher jerk than that of the Kalman filter (Fig. 12b, compare the green trace to the red trace for the multi-speed condition). Fig. 12a shows the mean jerk level for all the 17 datasets compared between the Kalman and linear regression decoders at different noise levels. Under all conditions, the linear regression decoded output suffered much higher jerk level than that of the Kalman decoder (P < 0.0001, Wilcoxon rank-sum test), and the jerk level, as expected, was proportional to the applied noise level (Fig. 12a, see the supplementary video for the MuJoCo hand driven by both decoders). Together, these results show that 1) the Kalman filter decoder could provide robust and reliable decoded output that is insensitive to noise even under noisy conditions, and 2) the linear regression decoder is very sensitive to noise level.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 174. Discussion4.1. Study summaryThis study presents a Kalman-filter based approach to decoding the spiking activity of individual motoneurons for prosthetic hand control. The cellular spiking activity generated from a high-fidelity computational model of the motoneuron pool was used to develop and test the decoder under various physiological conditions common to amputation. Our results show that the proposed Kalman decoder succeeded in estimating the input to motoneurons even when the synaptic input differed from the training set in waveform, amplitude, speed, and recruitment order, or with over 50% reduction of cell numbers. Also, with retraining, when the decoded cells were even more limited in number and limited in type, the decoder still performed robustly. The mean of all CCs (correlation coefficients) achieved by the decoder in the first eight datasets examined without retraining is 0.98. Also, the mean of all eight NRMSEs (mean normalized root mean square errors) is 0.06. Furthermore, the average decoding time per time step is 0.3 ms. Also, when retrained to perform under more extreme complications, the decoder still performed robustly: 1) Under reduced numbers of motoneurons, 21 cells: CC = 0.99, NRMSE = 0.01; 9 cells: CC = 0.99, NRMSE = 0.03; 2) With only two motoneuron types available, S and FR types: CC = 0.99, NRMSE = 0.02; S and FF types: CC = 0.99, NRMSE = 0.01; FR and FF types: CC = 0.99, NRMSE = 0.03; and 3) With only one type available, S type: CC = 0.99, NRMSE = 0.03; FR type: CC = 0.99, NRMSE = 0.04; FF type: CC = 0.97, NRMSE = 0.21. Another interesting finding is that the decoder’s performance in decoding the spiking activity of individual cells outperformed decoding the aggregate spiking activity of the motoneuron pool. Additionally, the Kalman decoder was found to be robust in the face of changes in the training parameters and to noise in the motoneuron firing activity.4.2. Novelty of the workThe limited integrity of prosthesis control systems – in that they require frequent calibration to continue to accurately decode intended movement – represents a major barrier to amputees’ quality of life, and the literature calls for a solution [5,13]. To help address this barrier, the present study developed a Kalman filter-based decoder and assessed its performance both initially and after long-term post-amputation complications emerge. The latter is very novel and cannot be done experimentally, requiring computer simulations like the ones presented here. To the authors’ best knowledge, no analysis to predict a decoder performance under post-amputation conditions currently exist in the literature, making this study a useful addition to the literature.This study represents proof of concept that the proposed Kalman-based decoder could support controls which perform new, untrained movements with a high level of accuracy and in real-time. While this decoder will need to be tested in humans, the present results support the likelihood of a reduced need for recalibration. Also, when retrained to conditions that mimic the neurodegeneration and shifts in motoneuron types that amputees often experience over time, the decoder performed robustly when fewer cells were available, or cell types were missing. The decrease in the number of available motoneurons simulated in our study represents several practical and real-life problems noted in amputees, such as: a) the Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 18signal lost due to a shift in the position of the implanted electrodes, b) breakage in the electrodes wire and/or interfaces, c) transition in motoneuron type after amputation, or d) neurodegeneration at the electrode interface, which can occur as an immune response [5]. These are all well-known problems that commonly arise after amputation and contribute to the high percentage of amputees (up to 50%) abandoning their upper-limb prostheses [25]. While recalibration would be required to accommodate these longer-term changes, such processes take place over many months or even years. Thus, these simulations predict a greatly reduced need for recalibration sessions. Moreover, the decoder’s robust performance at the availability of fewer cells or types shows its ability to function with a small number of interfaces which is important to real-life prosthetic use. Taken together, the above results provide proof of concept that a Kalman-based decoder utilizing signals from individual motoneurons could provide a novel solution to sustain real-time, accurate prosthesis movement, with infrequent need for recalibration.Another novel aspect of this study was the use of physiologically varied datasets generated from a high-fidelity, 3D computational model of the motor pool [52] which is currently the most advanced such model. Specifically, this model simulates experimental data faithfully in which it incorporates the full 3D anatomy of its motoneurons [71], as well as their types, numbers, and proportions; the spatial distribution and activation of nonlinear voltage- and time-dependent ion channels including dendritic persistent inward currents [53,72,73]; and various synaptic activation orders of different motoneuron types in the spinal pool. Other computational models that study pool motoneuron firing behaviors and rates use simplified morphologies [74–78]. A simpler neural computational model, such as an integrate-and-fire model or cellular models with reduced dendrites, would not simulate the dendritic ion channels and the firing behaviors of motoneurons accurately [53,79] nor differentiate accurately between motoneuron types. Thus, and to the authors’ best knowledge, no other computational model in the literature currently matches the accuracy and level of detail in simulating the nonlinear firing behaviors of spinal motoneurons as the model we used in our work. Accordingly, using this model, we were able to simulate and examine conditions that, also to the best of our knowledge, were not examined experimentally. The model allowed us to identify and control the types, numbers, and conditions of cells being recorded, unlike previous studies [9,45–51]. In experimental studies, the longevity of decoders is hard to predict. Here, we used our novel “clear-box” approach to develop and validate the specific capabilities needed to support the long-term performance of prosthesis control systems.Given that the computational model simulated in high detail the cellular mechanisms that transform the synaptic input (which is the physiological source of motoneuron activation) to the motoneuron pool along with its different motoneuron cell types (which differ in their contractile force and fatigue properties) into a neural command, factors such as recruitment and rate coding, as well as force and fatigue properties of different motoneuron types, their biological properties and heterogeneity, and their contribution to the speed of dynamic movements were therefore considered in the present work. Because the time scale of the movements simulated in this study is short (under 10s), fatigue (which appears after prolonged contractions) is therefore expected not to contribute much to the movements simulated here. While some studies in amputees have used electrode insertions at proximal locations, many other studies have inserted electrodes at distal locations [8–10], such that Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 19they are effectively recording from a single motor pool. Thus, our study, which simulated a single motor pool to drive a prosthetic hand, is more relevant to this scenario. The computational model also allowed us to examine decoding performance by using the firing activity of individual cells vs. aggregate pool firing. That the decoder performed more accurately using individual motoneuron firing is important, given the practicality of real-time extraction of motoneuron spike trains [6]. This finding is in agreement with reports that activity of individual motor units outperformed traditional amplitude-based myoelectric signals in upper-limb prosthetic control [23]. This finding may also guide improved strategies for recording ENG signals, especially in patients with few viable cells.Finally, the prosthetic hand simulation platform we used was developed specifically for studies, such as this one, which seek to develop more intelligent prosthetic hand controllers - as part of DARPA’s Hand Proprioception & Touch Interfaces (HAPTIX) program [57], which funded this study. It has been also used to study optimization algorithms and closed-loop control of biological systems [80–83]. Accordingly, both the computational model and the prosthetic hand simulation platform are state-of-the-art, and thus are appropriate tools for this proof-of-concept investigation.4.3. Kalman filter performance assessment and comparisonThis study also demonstrates the accuracy and efficiency of the linear Kalman filter in decoding individual motoneuron signals. The Kalman filter is well-known in context of neural prosthesis control due to its accuracy, simplicity, and computational speed [40,51]. The linear Kalman filter has been used by multiple studies in estimating hand kinematics from neural recordings [41–43,46,84,85]. More specifically, in Ref. [46], a linear Kalman filter was used to model linearly the relationship between the finger position and neural data. Despite the complexity of the motor neurophysiology and the usefulness of nonlinear modeling for neural activity decoding, their complexity renders them inefficient for neural prosthetic applications [42]. Moreover, it was found that nonlinear models do not functionally outperform linear models, and that simple linear models are sufficient to model the relationship between the hand kinematics and neural data with high precision [42,84]. It was also found that linear methods can achieve very good performance (with simple linearization) similar to nonlinear methods in myoelectric control of wrist movements at lower computational costs [86]. In addition, in Ref. [87], linear regression was also relied on after applying a simple nonlinear activation to predict the wrist kinematics from neural features. Taken together, the aforementioned studies along with our study demonstrate the utility of linear estimators in this problem.We have demonstrated the robustness of the Kalman filter to different physiological variabilities in the examined datasets. To further demonstrate the robustness of the Kalman filter, we examined its performance with different variations that could occur in the four training parameters A, H, W, and Q estimated from the training dataset. Such variations may occur as a result of using different training datasets or noisier measurements. We have shown that the Kalman decoder’s performance is robust to the changes in the parameters A, W, and Q, but is sensitive to extreme variations in the parameter H in terms of the amplitude of the estimated signal (measured in NRMSE). Additionally, we assessed the robustness of Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 20the Kalman decoder to different levels of noise in the testing datasets and to the smoothing applied to the decoded movement. Our results show that the performance of the Kalman decoder was not affected by noise in the testing data or by removing the smoothing step of the estimated movement.Several methods additional to the Kalman filter have been proposed for decoding continuous hand kinematics, such as linear regression, neural networks, and particle filter [39,42]. The particle filter is a powerful algorithm but, due to its high computational cost, is difficult to operate in real-time [42]. Neural networks were also found to perform well in movement estimation, but their computational burden is very high compared to the Kalman filter [28]. The Kalman filter and the linear regression techniques are usually preferred in online human neural prosthetic control [5,39,41–43], not only because of their efficiency and accuracy but also because of their simple implementation [42]. Although multiple studies have used the Kalman filter to decode the firing activity of multiple units [9,46,50], to this point, the field has not examined the Kalman filter in decoding individual motor unit activity. Instead, support vector machine classifier [8,10,12] and multiple linear regression [88] have been used. However, the Kalman filter is expected to generate more naturalistic movements compared to the pattern recognition techniques, such as support vector machine, which have deficient proportional control [38]. Accordingly, we employed the Kalman filter, as we expected it to perform robustly when decoding firing activity of individual motor units. Our results demonstrate such robust performance of the Kalman filter in addition to the fact that it can be well generalized, which [51] has noted.We compared the performance of the Kalman filter decoder with a linear regression decoder [5,39,41–43]. Our results show that while both algorithms are comparable in their decoding performance (i.e., CC and NRMSE), the linear regression decoder suffers greatly from increased jerk in its decoded movement when noise is present. This result is consistent with previous studies that demonstrated the inability of linear regression to produce smooth outputs [41,43]. The Kalman decoder continued to generate seamless and smooth movements even in presence of high noise (see the supplementary video showing a comparison between the prosthetic movement driven by the Kalman and linear regression decoders in presence of noise). Such high jerk and sensitivity to noise of the linear regression decoder requires a smoothing step to generate a smooth reliable prosthetic movement [43]. However, this will introduce a dead time for initial data recording [41], which would delay the prosthetic movement and prevent the linear regression decoder from decoding rapid or sudden movements [41,43]. Unlike the linear regression decoder, the Kalman decoder is less dependent on the smoothing step and does not generate jerky movement. The robustness of the Kalman filter in noisy environments, such as motor decoding, is one of its main advantages that has been mentioned in multiple studies [5,9,41].Supplementary video related to this article can be found at https://doi.org/10.1016/j.compbiomed.2021.104353Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.5. ConclusionsPage 21In this study, we developed an approach based on the Kalman filter to decode motoneuron activity for prosthetic hand control. The decoder was successful in estimating hand movements under various physiological conditions of motoneuron activity, which were tested in eight datasets without retraining, resulting in a mean correlation coefficient of 0.98 and a mean normalized root mean square error of 0.06. Additionally, the average decoding time was 0.3 ms, which would support real-time performance. In the most extreme simulations of complications, in which the decoder was retrained, it still performed robustly: with only 9 cells: CC = 0.99, NRMSE = 0.03; and with only one type of cell: S type: CC = 0.99, NRMSE = 0.03; FR type: CC = 0.99, NRMSE = 0.04; FF type: CC = 0.97, NRMSE = 0.21. Novel aspects of the study include our use of high-fidelity computational modeling as a “clear-box” approach to analyzing the decoder’s performance in completely known and controlled conditions. However, the key novelty of this study is proof of concept that a Kalman-based approach has great potential to provide highly accurate, robust, noise-insensitive, real-time decoding in presence of many physiological complications commonly experienced by amputees. Even in simulations of long-term motoneuron loss and type loss, retraining the decoder allowed it to perform robustly. Ultimately, we expect this approach to support long-term integrity of responsive prothesis function without frequent recalibration, and thereby enhance independence and quality of life for amputees.Supplementary MaterialRefer to Web version on PubMed Central for supplementary material.FundingFunding for this work was provided to Sherif M. Elbasiouny by: (1) the Defense Advanced Research Projects Agency (DARPA) BTO under the auspices of Dr. Douglas Weber through the DARPA Contracts Management Office Contract No. HR0011-15-C-0083, (2) the U.S. National Institute of Health–National Institute of Neurological Disorders and Stroke (NINDS) and National Institute on Aging (NIA) grant # NS091836, and (3) the National Academy of Sciences (NAS) and the United States Agency for International Development (USAID), NAS Subaward No: 2000009148. Any opinions, findings, conclusions, or recommendations expressed in this article are those of the authors alone, and do not necessarily reflect the views of NIH, USAID or NAS. Funding was also provided by the Google PhD fellowship awarded to Mai Gamal.References[1]. Cordella F, Ciancio AL, Sacchetti R, Davalli A, Cutti AG, Guglielmelli E, Zollo L, Literature review on needs of upper limb prosthesis users, Front. Neurosci. 10 (2016) 209. [PubMed: 27242413] [2]. Fougner A, Stavdahl Ø, Kyberd PJ, Losier YG, Parker PA, Control of upper limb prostheses: terminology and proportional myoelectric control—a review, IEEE Trans. Neural Syst. Rehabil. Eng. 20 (2012) 663–677. [PubMed: 22665514] [3]. Hashim NA, Abd Razak NA, Abu Osman NA, Gholizadeh H, Improvement on upper limb body-powered prostheses (1921–2016): a systematic review, Proc. IME H J. Eng. Med. 232 (2018) 3–11.[4]. Micera S, Carpaneto J, Raspopovic S, Control of hand prostheses using peripheral information, IEEE Reviews in Biomedical Engineering 3 (2010) 48–68. [PubMed: 22275201] [5]. Tam W.-k., Wu T, Zhao Q, Keefer E, Yang Z, Human motor decoding from neural signals: a review, BMC Biomedical Engineering 1 (2019) 22. [PubMed: 32903354] Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 22[6]. Roche AD, Lakey B, Mendez I, Vujaklija I, Farina D, Aszmann OC, Clinical perspectives in upper limb prostheses: an update, Curr. Surg.Rep 7 (2019) 5.[7]. Dhillon GS, Horch KW, Direct neural sensory feedback and control of a prosthetic arm, IEEE Trans. Neural Syst. Rehabil. Eng. 13 (2005) 468–472. [PubMed: 16425828] [8]. Rossini PM, Micera S, Benvenuto A, Carpaneto J, Cavallo G, Citi L, Cipriani C, Denaro L, Denaro V, Di Pino G, Double nerve intraneural interface implant on a human amputee for robotic hand control, Clin. Neurophysiol. 121 (2010) 777–783. [PubMed: 20110193] [9]. Wendelken S, Page DM, Davis T, Wark HA, Kluger DT, Duncan C, Warren DJ, Hutchinson DT, Clark GA, Restoration of motor control and proprioceptive and cutaneous sensation in humans with prior upper-limb amputation via multiple Utah Slanted Electrode Arrays (USEAs) implanted in residual peripheral arm nerves, J. NeuroEng. Rehabil. 14 (2017) 121. [PubMed: 29178940] [10]. Micera S, Rossini PM, Rigosa J, Citi L, Carpaneto J, Raspopovic S, Tombini M, Cipriani C, Assenza G, Carrozza MC, Decoding of grasping information from neural signals recorded using peripheral intrafascicular interfaces, J. NeuroEng. Rehabil. 8 (2011) 53. [PubMed: 21892926] [11]. Cracchiolo M, Valle G, Petrini F, Strauss I, Granata G, Stieglitz T, Rossini PM, Raspopovic S, Mazzoni A, Micera S, Decoding of grasping tasks from intraneural recordings in trans-radial amputee, J. Neural. Eng. 17 (2020), 026034. [PubMed: 32207409] [12]. Micera S, Citi L, Rigosa J, Carpaneto J, Raspopovic S, Di Pino G, Rossini L, Yoshida K, Denaro L, Dario P, Decoding information from neural signals recorded using intraneural electrodes: toward the development of a neurocontrolled hand prosthesis, Proc. IEEE 98 (2010) 407–417.[13]. Hong K-S, Aziz N, Ghafoor U, Motor-commands decoding using peripheral nerve signals: a review, J. Neural. Eng. 15 (2018), 031004. [PubMed: 29498358] [14]. Kapelner T, Negro F, Aszmann O, Farina D, Decoding motor unit activity from forearm muscles: perspectives for myoelectric control, IEEE Trans. Neural Syst. Rehabil. Eng. 26.1 (2017) 244–251.[15]. Farina D, Holobar A, Merletti R, Enoka RM, Decoding the neural drive to muscles from the surface electromyogram, Clin. Neurophysiol. 121 (2010) 1616–1623. [PubMed: 20444646] [16]. Farina D, Jiang N, Rehbaum H, Holobar A, Graimann B, Dietl H, Aszmann OC, The extraction of neural information from the surface EMG for the control of upper-limb prostheses: emerging avenues and challenges, IEEE Trans. Neural Syst. Rehabil. Eng. 22 (2014) 797–809. [PubMed: 24760934] [17]. Monsifrot J, Le Carpentier E, Aoustin Y, Farina D, Sequential decoding of intramuscular emg signals via estimation of a markov model, IEEE Trans. Neural Syst. Rehabil. Eng. 22 (2014) 1030–1040. [PubMed: 24733022] [18]. Negro F, Muceli S, Castronovo AM, Holobar A, Farina D, Multi-channel intramuscular and surface EMG decomposition by convolutive blind source separation, J. Neural. Eng. 13 (2016), 026027. [PubMed: 26924829] [19]. Farina D, Vujaklija I, Sartori M, Kapelner T, Negro F, Jiang N, Bergmeister K, Andalib A, Principe J, Aszmann OC, Man/machine interface based on the discharge timings of spinal motor neurons after targeted muscle reinnervation, Nat. Biomed. Eng. 1 (2017) 1–12.[20]. Chen C, Chai G, Guo W, Sheng X, Farina D, Zhu X, Prediction of finger kinematics from discharge timings of motor units: implications for intuitive control of myoelectric prostheses, J. Neural. Eng. 16 (2019), 026005. [PubMed: 30523815] [21]. Dai C, Cao Y, Hu X, Estimation of finger joint angle based on neural drive extracted from high-density electromyography, in: 40th Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBC), IEEE, 2018, pp. 4820–4823, 2018.[22]. Dai C, Hu X, Finger joint angle estimation based on motoneuron discharge activities, IEEE J. Biomed Health Inf. 24.3 (2019) 760–767.[23]. Twardowski MD, Roy SH, Li Z, Contessa P, De Luca G, Kline JC, Motor unit drive: a neural interface for real-time upper limb prosthetic control, J. Neural. Eng. 16 (2019), 016012. [PubMed: 30524105] [24]. Dudkiewicz I, Gabrielov R, Seiv-Ner I, Zelig G, Heim M, Evaluation of prosthetic usage in upper limb amputees, Disabil. Rehabil. 26 (2004) 60–63. [PubMed: 14660200] Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 23[25]. Carey SL, Lura DJ, Highsmith MJ, Differences in myoelectric and body-powered upper-limb prostheses: systematic literature review, J. Rehabil. Res. Dev. (2015) 52.[26]. Millstein S, Heger H, Hunter G, Prosthetic use in adult upper limb amputees: a comparison of the body powered and electrically powered prostheses, Prosthet. Orthot. Int. 10 (1986) 27–34. [PubMed: 3725563] [27]. Oskoei MA, Hu H, Myoelectric control systems—a survey, Biomed. Signal Process Contr. 2 (2007) 275–294.[28]. Dantas H, Warren DJ, Wendelken SM, Davis TS, Clark GA, Mathews VJ, Deep learning movement intent decoders trained with dataset aggregation for prosthetic limb control, IEEE (Inst. Electr. Electron. Eng.) Trans. Biomed. Eng. 66 (2019) 3192–3203.[29]. Cope TC, Clark BD, Are there important exceptions to the size principle of α-motoneurone recruitment?, in: Alpha and Gamma Motor Systems Springer, 1995, pp. 71–78.[30]. Bawa PN, Jones KE, Stein RB, Assessment of size ordered recruitment, Front. Hum. Neurosci. 8 (2014) 532. [PubMed: 25120446] [31]. Heckman C, Enoka RM, Motor unit, Compr. Physiol. 2 (2012) 2629–2682. [PubMed: 23720261] [32]. Titmus MJ, Faber DS, Axotomy-induced alterations in the electrophysiological characteristics of neurons, Prog. Neurobiol. 35 (1990) 1–51. [PubMed: 2217820] [33]. Farina D, Castronovo AM, Vujaklija I, Sturma A, Salminger S, Hofer C, Aszmann O, Common synaptic input to motor neurons and neural drive to targeted reinnervated muscles, J. Neurosci. 37 (2017) 11285–11292. [PubMed: 29054880] [34]. Kapelner T, Jiang N, Holobar A, Vujaklija I, Roche AD, Farina D, Aszmann OC, Motor unit characteristics after targeted muscle reinnervation, PloS One 11 (2016), e0149772. [PubMed: 26901631] [35]. Kyranou I, Vijayakumar S, Erden MS, Causes of performance degradation in non-invasive electromyographic pattern recognition in upper limb prostheses, Front. Neurorob. 12 (2018) 58.[36]. Jiang N, Dosen S, Muller K-R, Farina D, Myoelectric control of artificial limbs—is there a need to change focus?[In the spotlight], IEEE Signal Process. Mag. 29 (2012) 152, 150.[37]. Roche AD, Rehbaum H, Farina D, Aszmann OC, Prosthetic myoelectric control strategies: a clinical perspective, Curr. Surg.Rep 2 (2014) 44.[38]. Geethanjali P, Myoelectric control of prosthetic hands: state-of-the-art review, Medical Devices (Auckland, NZ) 9 (2016) 247–255.[39]. Warren DJ, Kellis S, Nieveen JG, Wendelken SM, Dantas H, Davis TS, Hutchinson DT, Normann RA, Clark GA, Mathews VJ, Recording and decoding for neural prostheses, Proc. IEEE 104 (2016) 374–391.[40]. Li Z, Decoding methods for neural prostheses: where have we reached? Front. Syst. Neurosci. 8 (2014) 129. [PubMed: 25076875] [41]. Wu W, Black M, Gao Y, Bienenstock E, Serruya M, Donoghue J, Inferring hand motion from multi-cell recordings in motor cortex using a Kalman filter. SAB’02-workshop on Motor Control in Humans and Robots: on the Interplay of Real Brains and Artificial Devices, 2002, pp. 66–73.[42]. Wu W, Hatsopoulos NG, Real-time decoding of nonstationary neural activity in motor cortex, IEEE Trans. Neural Syst. Rehabil. Eng. 16 (2008) 213–222. [PubMed: 18586600] [43]. Wu W, Shaikhouni A, Donoghue J, Black M, Closed-loop neural control of cursor motion using a Kalman filter, in: Engineering in Medicine and Biology Society, IEMBS’04. 26th Annual International Conference of the IEEE, IEEE, 2004, pp. 4126–4129, 2004.[44]. Malik WQ, Truccolo W, Brown EN, Hochberg LR, Efficient decoding with steady-state Kalman filter in neural interface systems, IEEE Trans. Neural Syst. Rehabil. Eng. 19 (2011) 25–34. [PubMed: 21078582] [45]. Clark GA, Wendelken S, Page DM, Davis T, Wark HA, Normann RA, Warren DJ, Hutchinson DT, Using multiple high-count electrode arrays in human median and ulnar nerves to restore sensorimotor function after previous transradial amputation of the hand, in: Engineering in Medicine and Biology Society (EMBC), 2014 36th Annual International Conference of the IEEE, IEEE, 2014, pp. 1977–1980.[46]. Davis T, Wark H, Hutchinson D, Warren D, O’Neill K, Scheinblum T, Clark G, Normann R, Greger B, Restoring motor control and sensory feedback in people with upper extremity Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 24amputations using arrays of 96 microelectrodes implanted in the median and ulnar nerves, J. Neural. Eng. 13 (2016), 036001. [PubMed: 27001946] [47]. Triwiyanto T, Wahyunggoro O, Nugroho HA, Herianto H, Evaluating the performance of Kalman filter on elbow joint angle prediction based on electromyography, Int. J. Precis. Eng. Manuf. 18 (2017) 1739–1748.[48]. ElMohandes H, Eldawlatly S, Audí JMC, Ruff R, Hoffmann K-P, Decoding arm kinematics from EMG signals using kalman filter, in: Proceedings of the 2018 8th International Conference on Biomedical Engineering and Technology, ACM, 2018, pp. 96–102.[49]. Vu PP, Irwin ZT, Bullard AJ, Ambani SW, Sando IC, Urbanchek MG, Cederna PS, Chestek CA, Closed-loop continuous hand control via chronic recording of regenerative peripheral nerve interfaces, IEEE Trans. Neural Syst. Rehabil. Eng. 26 (2017) 515–526.[50]. George JA, Davis TS, Brinton MR, Clark GA, Intuitive neuromyoelectric control of a dexterous bionic arm using a modified Kalman filter, J. Neurosci. Methods 330 (2020) 108462. [PubMed: 31711883] [51]. Dantas H, Nieven J, Davis TS, Fu X, Clark GA, Warren DJ, Mathews VJ, Shared human-machine control for self-aware prostheses, in: IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), IEEE, 2018, pp. 6593–6597, 2018.[52]. Allen JM, Elbasiouny SM, The effects of model composition design choices on high-fidelity simulations of motoneuron recruitment and firing behaviors, J. Neural. Eng. 15 (2018), 036024. [PubMed: 29182156] [53]. Elbasiouny SM, Development of modified cable models to simulate accurate neuronal active behaviors, J. Appl. Physiol. 117 (2014) 1243–1261. [PubMed: 25277743] [54]. Grewal MS, Andrews AP, Kalman Filtering: Theory and Practice Using MATLAB, John Wiley & Sons, 2014.[55]. Welch G, Bishop G, An Introduction to the Kalman Filter, Citeseer, 1995.[56]. Todorov E, Erez T, Tassa Y, MuJoCo: a physics engine for model-based control, in: IEEE/RSJ International Conference on Intelligent Robots and Systems, IEEE, 2012, pp. 5026–5033, 2012.[57]. Kumar V, Todorov E, MuJoCo HAPTIX: A virtual reality system for hand manipulation, in: IEEE-RAS 15th International Conference on Humanoid Robots (Humanoids), IEEE, 2015, pp. 657–663, 2015.[58]. Resnik L, Klinger SL, Etter K, The DEKA arm: its features, functionality, and evolution during the veterans affairs study to optimize the DEKA arm, Prosthet. Orthot. Int. 38 (2014) 492–504. [PubMed: 24150930] [59]. Sivagnanam S, Majumdar A, Yoshimoto K, Astakhov V, Bandrowski AE, Martone ME, Carnevale NT, Introducing the neuroscience Gateway, IWSG (2013) 993.[60]. Lee Rodgers J, Nicewander WA, Thirteen ways to look at the correlation coefficient, Am. Statistician 42 (1988) 59–66.[61]. Artemiadis PK, Kyriakopoulos KJ, EMG-based teleoperation of a robot arm using low-dimensional representation, in: IEEE/RSJ International Conference on Intelligent Robots and Systems, IEEE, 2007, pp. 489–495, 2007.[62]. Sheiner LB, Beal SL, Some suggestions for measuring predictive performance, J. Pharmacokinet. Biopharm. 9 (1981) 503–512. [PubMed: 7310648] [63]. Hogan N, Sternad D, Sensitivity of smoothness measures to movement duration, amplitude, and arrests, J. Mot. Behav. 41 (2009) 529–534. [PubMed: 19892658] [64]. Young RP, Marteniuk RG, Acquisition of a multi-articular kicking task: jerk analysis demonstrates movements do not become smoother with learning, Hum. Mov. Sci. 16 (1997) 677–701.[65]. Henneman E, Relation between size of neurons and their susceptibility to discharge, Science 126 (1957) 1345–1347. [PubMed: 13495469] [66]. Fang Z-P, Mortimer JT, A method to effect physiological recruitment order in electrically activated muscle, IEEE Trans. Biomed. Eng. 38 (1991) 175–179. [PubMed: 2066127] [67]. Lertmanorat Z, Gustafson KJ, Durand DM, Electrode array for reversing the recruitment order of peripheral nerve stimulation: experimental studies, Ann. Biomed. Eng. 34 (2006) 152–160. [PubMed: 16453204] Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 25[68]. Durand DM, Yoo P, Lertmanorat Z, Neural interfacing with the peripheral nervous system, in: Engineering in Medicine and Biology Society, IEMBS’04. 26th Annual International Conference of the IEEE, IEEE, 2004, pp. 5329–5332, 2004.[69]. Oliveira AS, Gizzi L, Farina D, Kersting UG, Motor modules of human locomotion: influence of EMG averaging, concatenation, and number of step cycles, Front. Hum. Neurosci. 8 (2014) 335. [PubMed: 24904375] [70]. Williams AH, Kim TH, Wang F, Vyas S, Ryu SI, Shenoy KV, Schnitzer M, Kolda TG, Ganguli S, Unsupervised discovery of demixed, low-dimensional neural dynamics across multiple timescales through tensor component analysis, Neuron 98 (2018) 1099–1115, e1098. [PubMed: 29887338] [71]. Cullheim S, Fleshman J, Glenn L, Burke R, Three-Dimensional architecture of dendritic trees in type-identified α-motoneurons, J. Comp. Neurol. 255 (1987) 82–96. [PubMed: 3819011] [72]. ElBasiouny SM, Bennett DJ, Mushahwar VK, Simulation of Ca2+ persistent inward currents in spinal motoneurones: mode of activation and integration of synaptic inputs, J. Physiol. 570 (2006) 355–374. [PubMed: 16308349] [73]. ElBasiouny SM, Bennett DJ, Mushahwar VK, Simulation of dendritic CaV1. 3 channels in cat lumbar motoneurons: spatial distribution, J. Neurophysiol. 94 (2005) 3961–3974. [PubMed: 16120667] [74]. Powers RK, ElBasiouny SM, Rymer WZ, Heckman CJ, Contribution of intrinsic properties and synaptic inputs to motoneuron discharge patterns: a simulation study, J. Neurophysiol. 107 (2012) 808–823. [PubMed: 22031773] [75]. Powers RK, Heckman CJ, Synaptic control of the shape of the motoneuron pool input-output function, J. Neurophysiol. 117 (2017) 1171–1184. [PubMed: 28053245] [76]. Elias LA, Watanabe RN, Kohn AF, Spinal mechanisms may provide a combination of intermittent and continuous control of human posture: predictions from a biologically based neuromusculoskeletal model, PLoS Comput. Biol. 10 (2014), e1003944. [PubMed: 25393548] [77]. Moritz CT, Barry BK, Pascoe MA, Enoka RM, Discharge rate variability influences the variation in force fluctuations across the working range of a hand muscle, J. Neurophysiol. 93 (2005) 2449–2459. [PubMed: 15615827] [78]. Moritz CT, Christou EA, Meyer FG, Enoka RM, Coherence at 16–32 Hz can be caused by short-term synchrony of motor units, J. Neurophysiol. 94 (2005) 105–118. [PubMed: 15744005] [79]. Hendrickson EB, Edgerton JR, Jaeger D, The capabilities and limitations of conductance-based compartmental neuron models with reduced branched or unbranched morphologies and active dendrites, J. Comput. Neurosci. 30 (2011) 301–321. [PubMed: 20623167] [80]. Wang X, Li T, Cheng Y, Chen CP, Inference-based posteriori parameter distribution optimization, IEEE transactions on cybernetics (2020) 1–12.[81]. Richards CT, Eberhard EA, In vitro virtual reality: an anatomically explicit musculoskeletal simulation powered by in vitro muscle using closed-loop tissue–software interaction, J. Exp. Biol. 223 (2020).[82]. Rajeswaran A, Kumar V, Gupta A, Vezzani G, Schulman J, Todorov E, Levine S, Learning Complex Dexterous Manipulation with Deep Reinforcement Learning and Demonstrations, arXiv, 2017 preprint arXiv:1709.10087.[83]. Marasco PD, Hebert JS, Sensinger JW, Shell CE, Schofield JS, Thumser ZC, Nataraj R, Beckler DT, Dawson MR, Blustein DH, Illusory movement perception improves motor control for prosthetic hands, Sci. Transl. Med. 10 (2018).[84]. Sanchez JC, Erdogmus D, Principe JC, Wessberg J, Nicolelis M, A comparison between nonlinear mappings and linear state estimation to model the relation from motor cortical neuronal firing to hand movements, in: Proceedings of SAB Workshop on Motor Control in Humans and Robots: on the Interplay of Real Brains and Artificial Devices, 2002, pp. 59–65.[85]. Wu W, Black MJ, Gao Y, Serruya M, Shaikhouni A, Donoghue J, Bienenstock E, Neural decoding of cursor motion using a Kalman filter, in: Advances in Neural Information Processing Systems, 2003, pp. 133–140.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 26[86]. Hahne JM, Biessmann F, Jiang N, Rehbaum H, Farina D, Meinecke FC, Müller K-R, Parra LC, Linear and nonlinear regression techniques for simultaneous and proportional myoelectric control, IEEE Trans. Neural Syst. Rehabil. Eng. 22 (2014) 269–279. [PubMed: 24608685] [87]. Kapelner T, Vujaklija I, Jiang N, Negro F, Aszmann OC, Principe J, Farina D, Predicting wrist kinematics from motor unit discharge timings for the control of active prostheses, J. NeuroEng. Rehabil. 16 (2019) 47. [PubMed: 30953528] [88]. Chen C, Ma S, Sheng X, Zhu X, Continuous estimation of grasp kinematics with real-time surface EMG decomposition, in: International Conference on Intelligent Robotics and Applications, Springer, 2019, pp. 108–119.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 27Fig. 1. Block diagram of hand control system using the Kalman decoder.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 28Fig. 2. Staircase-shaped data. (a) the shape of synaptic input (top) and smoothed firing rate of 3 cells (bottom), the first cell in each type: S cell (blue), FR cell (red), and FF cell (yellow). (b) Firing characteristics of the modeled MNs. The effect of persistent inward currents (PICs) (top) and the linear relationship (bottom) between the synaptic input, starting from 0 nA to 10 nA, and the firing rate of 3 cells, the first cell in each type: S cell (blue), FR cell (red) and FF cell (yellow).Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 29Fig. 3. Decoded hand position for different waveforms. All pool model cells are used in the decoding process for testing datasets with a speed of 1 nA/s and a maximum hand position of 90°. Waveforms (a) Triangular-shaped and (b) Ramp-and-Hold shaped are demonstrated comparing the actual position (blue) and the decoded position (red). (c) Decoded hand position at different smoothing window sizes. The 10 s of the ‘Hold’ part from the decoded Ramp-and-Hold data are demonstrated at 100 ms, 150 ms, and 200 ms smoothing window sizes.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 30Fig. 4. MuJoCo hand position at (a) 90°, (b) 63°, and (c) 18°. Decoded hand positions for different hand positions of maximum values (d) 90°, (e) 63°, and (f) 18° are demonstrated comparing the actual position (blue) and the decoded position (red). All pool model cells are used in the decoding process for triangular-shaped testing dataset with a speed of 1 nA/s.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 31Fig. 5. Decoded hand position at different activation speeds. All pool model cells are used in the decoding process for triangular-shaped testing dataset with a maximum hand position of 90°. Synaptic current of speeds (a) 1 nA/s, (b) 6 nA/s and (c) 10 nA/s are demonstrated comparing the actual input (blue) and the decoded input (red). (d) Comparison of the actual hand position (blue) versus the decoded hand position (red) of multi-speed (0 nA/s, 2 nA/s, and 6 nA/s speeds) testing dataset.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 32Fig. 6. The characteristics of (a) the firing rate and (b) the firing time of the reverse recruitment (red) in comparison with the normal recruitment (blue). (c) Comparison of the actual hand position (blue) versus the decoded hand position (red) of the triangular-shaped testing dataset with reverse recruitment.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 33Fig. 7. Comparison of the actual hand position (blue) versus the decoded hand position of the triangular-shaped testing dataset using 100% of the active cells (red) and ~48% of the active cells (yellow).Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 34Fig. 8. Decoded hand position using a different number of motor neuron cells. Different number of motor neuron cells are used in the decoding process for triangular-shaped testing dataset with a speed of 1 nA/s and a maximum hand position of 90°. Number of motor neuron cells (a) 51 (all cells), (b) 21 cells (7 per type), and (c) 9 cells (3 per type) are used in comparing the actual position (blue) and the decoded position (red).Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 35Fig. 9. Decoded hand position using different single/double types of motor neuron cells. Different single/double types of motor neuron cells are used in the training phase and the decoding process for triangular-shaped testing dataset with a speed of 1 nA/s and a maximum hand position of 90°. Single type of motor neuron cells (a) S cells, FR cells, and FF cells, and double type of motor neuron cells (b) S and FR cells, S and FF cells, and FR and FF cells are used in comparing the actual input (blue) and the decoded input (red).Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 36Fig. 10. Comparison of the actual hand position (blue) versus the decoded hand position (red) of triangular-shaped testing dataset with the motoneuron pool spiking.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 37Fig. 11. Triangular-shaped data. (a) the shape of synaptic input and (b) smoothed firing rate of 3 cells, the first cell in each type: S cell (blue), FR cell (red), and FF cell (yellow).Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  AuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscriptGamal et al.Page 38Fig. 12. (a) RMS-jerk values of the movements estimated by the Kalman filter and linear regression across 17 testing conditions for different levels of Gaussian noise applied to the firing of the testing conditions (mean ± std.) without smoothing the estimated movement. ***P < 0.0001. Wilcoxon rank-sum test. (b) Comparison of the actual hand position (blue) of the multi-speed testing dataset versus the hand position decoded by the Kalman filter (red) and the linear regression (green), when applying Gaussian noise with a standard deviation of 5 without smoothing.Comput Biol Med. Author manuscript; available in PMC 2023 January 31.  Gamal et al.Page 391elbaT,W,H,AsretemarapretlifniegnahcrofsnoitidnocgnitsetnevesssorcaE)SMRNdnaC Cfonoitaiveddradnats±naem(ecnamrofreps’redocednamlaK.ylevitcepser,30.0±50.0dna10.0±99.0erasretemarapehtfoynaniegnahconrofE SMRNdnaC CehT.%03+ot%03−foegnarehtniQdnaAuthorManuscriptAuthorManuscriptAuthorManuscriptAuthorManuscript30.0±50.030.0±50.030.0±50.030.0±50.030.0±50.030.0±50.0ESMRN30.0±50.030.0±50.030.0±50.030.0±50.030.0±50.030.0±50.0ESMRN50.0±81.050.0±41.040.0±90.030.0±80.030.0±61.030.0±52.0ESMRN70.0±59.050.0±69.030.0±79.030.0±79.070.0±49.031.0±9.0CCH10.0±99.010.0±99.010.0±99.010.0±99.010.0±99.010.0±99.0CCW30.0±50.030.0±50.030.0±50.030.0±50.030.0±50.030.0±50.0ESMRN10.0±99.010.0±99.010.0±99.010.0±89.010.0±89.010.0±89.0CCQ%03+%02+%01+%01−%02−%03−sretemaraPniegnahCegatnecrePcirteMnoitaulavE10.0±99.010.0±99.010.0±99.010.0±99.010.0±99.010.0±99.0CCAretemaraPdegnahCComput Biol Med. Author manuscript; available in PMC 2023 January 31.                                                                                  