ELSEVIER Artificial Intelligence 95 ( 1997) 409-438 Artificial Intelligence Representing action: indeterminacy and ramifications Enrico Giunchiglia ‘, G. Neelakantan Kartha b, Vladimir Lifschitz ‘,* a DIST-University of Genoa, 16145 Genoa, Italy h i2 Technologies, 1603 L&l Freeway, Suite 780, Dallas, TX 75234, USA c University of Texas at Austin, Austin, 7X 78712, USA Abstract We define and study a high-level language for describing actions, more expressive than the action language A introduced by Gelfond and Lifschitz. The new language, A’R, allows us to describe actions with indirect effects (ramifications), nondeterministic actions, and actions that may be impossible to execute. It has symbols for nonpropositional fluents and for the fluents that are exempt from the commonsense law of inertia. Temporal projection problems specified using the language JR can be represented as nested abnormality theories based on the situation calculus. @ 1997 Elsevier Science B.V. Keywords: Action languages; Circumscription; Nested abnormality Ramification problem theories; Nondeterministic actions; 1. Introduction Mary jumped Common into the lake, then got out of the water and put her hat on. sense allows us to answer some questions about the outcome of this series of events. l Is Mary in the lake? Of course not. She just got out of it. l Does she have the hut on? Of course she does. She just put it on. l Is she wet? Of course she is. She just got out of the lake. These are examples of reasoning this reasoning has long been considered one of the central problems their effects. Formalizing about actions and form of commonsense * Corresponding author. Email: vl@cs.utexas.edu 0004-3702/97/$17.00 PIISOOO4-3702(97)00037-4 @ 1997 Elsevier Science B.V. All rights reserved 410 E. Giunchiglia et al. /Art$cial Intelligence 95 (I 997) 409-438 of Artificial or branching used (classical details of the formalization etc.). logic, Intelligence. Existing approaches differ by their temporal ontologies time, time points or intervals, situations, events or histories), its nonmonotonic extensions, logic programming), (which objects are reified, how circumscription (linear by the logic and by other is applied, Properties of actions can be conveniently described in specialized “action the background in the examples of commonsense for instance, languages”, knowledge reasoning [7]. Consider, such as the language A from about the effects of actions into the lake (J), getting out of the above. Mary has performed lake (G) and putting her hat on (P). We are interested in the effect of each of these actions on whether or not Mary is in the lake (L). In the language A, the effects of the actions J and G on L can be described by the propositions that is involved three actions: jumping J causes L, G causes TL. is no need There incorporates assumed by default the “commonsense to remain the same. to specify that P has no effect on L, because law of inertia”: when an action is performed, the semantics of A things are The language d has been used as a tool for investigating actions. For instance, for describing between for in [ 251 and [ 26 J , as well as the use of the relationship in [ 111, the methods in classical logic developed in [ I], are described as translations from d, and each of the translations to be sound and complete relative that can be represented to the semantics of A. These theorems show in A, the three formalization methods actions several other techniques formalizing circumscription is found that, for the action domains results. produce equivalent In this paper, we introduce a new action language, AR, which is in several ways more expressive than A. ( 1) In AR, actions may have indirect effects, or rumijications. Consider, for instance, into the lake has on Mary being wet ( W). In d, it can the effect that jumping be described by the proposition J causes W We would prefer, however, effect on L. Any action Mary walks her boyfriend, can be described to treat the effect of J on W as a ramification of its true will make W true also: if into the lake by she will get wet all the same. This relationship between L and W into the lake, or is thrown that causes L to become into the lake, or crawls language by writing in the new action always L 3 W (2) Actions described in AR can be nondeterministic. into the lake then maybe she will lose her hat, or maybe not. In If Mary jumps while having her hat on (H) this indeterminacy AR, can be described by the proposition J possibly changes H if H. E. Giunchiglia et al. /Artijicial Intelligence 95 (1997) 409-438 411 (3) In AR, an action can be impossible cannot get out of the lake if she is already on the shore. We will write this as to execute in some states. For instance, Mary impossible G if 4 In fact, this will be treated as an abbreviation for the proposition G causes False if ?L. (4) The language AR has symbols for nonpropositionalj7uents. [ 241 is something in the lake), W (being wet) and H (having can be false or true depending of these fluents are the truth values of propositional formalization, we might wish to introduce elaborate representing Mary’s current symbol Location, Generally, a “fluent” that depends on the state of the world. For instance, L (being the hat on) are fluents, because each situation. The possible values logic, F and T. In a more fluent the nonpropositional location. AR allows us to write on the particular Location is Luke (5) instead of L, and to use other location symbols, such as Shore, Home or Library, in place of Lake. In AR, a fluent can be classified as noninertial, which makes law of inertia. For instance, the commonsense clouds later, no matter what Mary will be doing during noninertial. Noninertial (Section 4.3). from the that this will be still the case a minute this time. The fluent C is fluents are needed also for expressing explicit definitions (C), but there is no guarantee the sun may be now behind it exempt to the action the verification of several properties of the language The next two sections of the paper describe language A from the syntax and semantics of AR and relate [ 71. Our work on the “debugging” of the that in and of this language semantics of AR has involved to hold for action languages; can be naturally expected Section 4. In Section 5, we define the syntax and semantics of “initial conditions” “value propositions”. This allows us to express formally involving actions described problems of this kind can be expressed called nested abnormality connection with recent advances The relation of this paper to earlier work on action relegated temporal projection problems In Section 6 we show how temporal projection [22] in [ 3,6]. reasoning in Section 7. Proofs are in terms of the version of circumscription [ 181. Reductions of this kind are of special interest in the automation of circumscriptive these properties are discussed to the appendix. is discussed theories in AR. Preliminary reports on this work are published symbols the language AR0 described not include instead of possibly changes, out to be less satisfactory preliminary AR, and their use is restricted problems. publications in the first of these papers for nonpropositional fluents the construct it used (see Section 4.1) . Furthermore, in that “value propositions” as [ 141 and [ 81. d72 differs from in two ways. First, AT& did (see the end of Section 4.4). Second, turned this paper differs from both are not treated here as part of releases, whose semantics to the conceptually simpler case of temporal projection 412 E. Giunclzigliu et al. /Artificial Intelligence 95 (1997) 409-438 2. Syntax To be precise, AR is not a single language, but rather a family of languages. A particular language in this group set of symbols is characterized by that are called Jluent names, l a nonempty l a function, associating with every fluent name F a nonempty set RngF of symbols that is called the range of F, l a subset of fluent names l a nonempty set of symbols that are called inertial, that are called action names. 2.1. Formulas, propositions and action descriptions An atomic formula is an expression of the form (F is V) where F is a fluent name, and V E RngF. A formula atomic formulas. is a propositional combination of There are three types of propositions in AR-constraints, effect propositions. A constraint sitions, and indeterminate always C determinate effect propo- is an expression of the form (1) where C is a formula. A determinate effect proposition is an expression of the form A causes C if P (2) where A is an action name, and C, P are formulas. An indeterminate is an expression of the form effect proposition A possibly changes F if P (3) where A is an action name, F an inertial fluent name, and P a formula (“precondition”). An action description is a set of propositions. 2.2. Notational conventions In formulas, we will omit some parentheses, logic. We will formula by True, and TTrue by False. A determinate as customary in classical denote some fixed tautological effect proposition (2) will be written as A causes C if P is True, and as impossible A if P if C is False. An indeterminate effect proposition (3) will be written as A possibly changes F E. Giunchiglia et al. /Art@d Intelligence 95 (I 997) 409-438 413 if its precondition P is True. For any action name A and formula C, A initiates C stands for the pair of propositions A causes C, impossible A if C. A fluent name F is propositional if RngF = {F,T}. If F is a propositional fluent name, we will abbreviate the atomic formula F is T by F, and the atomic formula F is F by 7. Using these notational conventions, we can formalize the example from the Introduc- tion as follows: always L 3 W; J initiates L, J possibly changes H if H, G initiates -L, P initiates H. (4) Here L, W, H are inertial propositional lhtent names, and J, G, P are action names. 3. Semantics The meaning of an action description D is represented by the corresponding function, ResD. This function maps an action name and a state (defined below) of states. Intuitively, ResD (A, a) is the set of outcomes A in state (T. transition to a set that may result from executing 3.1. States A valuation is a function fluent name F to an element of its range. A valuation formulas in a standard way: that is defined on the set of fluent names and maps each to atomic (+ can be extended c(F is V) = T if c(F) = V, F otherwise. 414 E. Giunchiglia et aI. /Art@cial Intelligence 95 (1997) 409-438 It can be further extended sitional logic. A valuation u satisjes A state for an action description D is a valuation the states for description For instance, a formula C, or a constraint that satisfies all constraints ( 1) , if U(C) = T. in D. (4) are the truth-valued functions on {L, w H} to arbitrary formulas according to the truth tables of propo- that satisfy L > W. There are 6 such functions: -- L WH, LWi?, EWH, LWH, EW H, L W H. (We represent each state by the set of atomic formulas that are satisfied in that state.) 3.2. The transition function For any action name A and state (T, let Resi( A, v) stand for the set of states cr’ that, for each determinate satisfies C whenever such v satisfies P. The set ResD (A, a) will be defined as the subset of Resi (A, a) whose elements are “close” effect proposition in D, d to (+. (2) In order to make this precise, the following notation is needed. For any action name A and any states U, u’, by New; ( U, cl) we denote the set of formulas F is d(F) such that l F is inertial and d(F) l for some indeterminate # (T(F), or effect proposition (3) in D, c satisfies P. (5) a’(F) The condition “new fact” that becomes set New$( g, cr’) includes noninertial that the change effect proposition happens then it is not expected in its value f a(F) in the definition of this function expresses true if the execution of A in state (T results such “new facts” for all inertial is a that (5) in state u’. The fluent names F. (If F is an action, so to keep its old value after performing is disregarded.) On the other hand, if some indeterminate allows F to change, we treat its value in state u’ as “new” even if it Now the transition to coincide with the value of F in state g. function ResD states U’ E Res$ (A, UT) for which New; (c, (T’) is minimal other words, for which there is no cr” E Rest (A, a) such that Newt (u, (T”) is a proper is the feature of the semantics of AR subset of Newi ((+, a’). This minimality that represents is defined as follows: Reso( A, v) to set inclusion-in the commonsense law of inertia. is the set of condition relative We will sometimes drop the subscript D in the symbols New$, Rest and ResD, when the action description D is understood from the context. 3.3. Example As an illustration, consider the transition function for example (4). The action name J is described by the propositions J causes L, J causes False if L, J possibly changes H if H. E. Giunchiglia et al. /Artijicial Intelligence 95 (1997) 409-438 415 - EWWH J LWH< J -- LWH P --- LWH Fig. I. Transition diagram for the lake example. For any states v and u’, (T’ E Res’(J, (T) iff cr’( L) = T and a(L) = F. Consequently, ResO( J, a) = { LWH, LW??} if a(L) = F, 0 otherwise. Furthermore, {LWR} if c(L) = (T(H) = F, Res( J, g) = {LWH, LWB} if cr( L) = F and a(H) = T, 0 otherwise. As an example, first case, note that let us verify these assertions for (T equal to L W H and to L WH. In the --- -- NewA(~~~, LWE) = {L is T, W is T}, iVewA(Epi7H, LWH) = {L is T, W is T, H is T}. Consequently, condition the element LWH of Res’( J, L W H) does not satisfy the minimality and is not included in Res( J, L W H). In the second case, --- --- NewA(EwH, LWH) = {L is T, W is T, H is T}, NewA(zwH, LW??) = {L is T, W is T, H is F}, the minimality and -- Res”( J, L WH) . condition does not require removing any of the elements of 416 E. Gimchiglicl et al. /Art@crul Intellipnce 95 (1997) 409-438 The values of Res for the other way. The following notation helps express valuation U, any fluent name F and any V in the range of F, the expression u[F/V] stands for the valuation that takes the value V on F and otherwise agrees with (T: two action names can be computed the results of computation in a similar concisely. For any u[F/V](F’) = V if F’ = F, a( F’) otherwise. For instance, (LWH)[L/F] = (LWH). In this notation, Resf G, CT) = {(T[L/F]} if (T(L) = T, 0 otherwise, Res(P, v) = {a[H/T]} if (T(H) = F, 0 otherwise. represented by Fig. 1. The transition Let us go back now to the scenario described function Res is graphically into then got out of the water (G) and put her hat on (P). The examples of the lake (J), given there can be interpreted as assertions about paths in the conclusions commonsense transition diagram. Consider any path of length 3 whose arcs are labeled J, G, P, and let (T be the end node of this path. Mary is not in the lake: a(L) = F. Mary has her hat on: a(H) = T. Mary in the Introduction: Mary jumped is wet: a(W) = T. 3.4. Simple descriptions There is a special case when the definition of the transition A formula if it is a conjunction is simple of atomic formuias. A simple function can be simplified. formulas. Note that the empty is contradictory formula in simple a pair of atomic parts F is VI, F is Vz with VI # V2; otherwise, effect proposition (2) is simple it is if both C and P are True is included conjunction if it includes noncontradictory. A determinate noncontradictory simple formulas. An action description D is simple a each fluent name of D is inertial, l each proposition l for any propositions if in D is a simple determinate effect proposition, A ca&es Cl if PI, A causes CZ if PI in D such that Pi A P2 is noncontradictory, Ci A CT is noncontradictory also. Here is an example. Each of m blocks BI, . . . , I?,,, can be located on any of n tables ( I < i < m); all of them are inertial T, , . . . , z,. The fluent names are Location E. Giunchigliu et al. /Artijicial Intelligence 95 (I 997) 409-438 417 and have the range consisting MoveOnto( B;, Tk) (move block Bi onto table Tk) and MoveNextTo( Bi, Bj) Bj onto the table that has B,i on it). The action description of the symbols Tk ( 1 < k 6 n). The action names are (move block consists of the propositions MoveOnto( 6, t) causes (Location(b) is t) , MoveNextTo( b, b’) causes (Locution(b) is t) if (Lucation(b’) is t) for all b,b’ E {Bl,..., B,,,} and t E {TI, . . . , T,}. This description is simple. The following shows theorem that, for a simple action description D, every value in any state. the only element of Reso (A, CT) can be described without an explicit reference is exactly one way to execute any action of ResD is a singleton-there Moreover, to the minimality condition. Let D be a simple action description, A an action name, and (T a state. By ResZ, ( A, u) a the state (r’ defined as follows: For any fluent name F, if D includes effect proposition we denote determinate (2) such that (i) o satisfies P, and (ii) C has a conjunctive term of the form F is V then a’(F) = V; if not then (T’(F) = (T(F). the state (+’ uniquely. except when a different value is “required” by a proposition In the state ResT, (A, a), It is clear that this definition characterizes fluents have the same values as in g in D. Theorem 1. Let D be a simple action description. For any action name A and any state (+, Reso(A.a) = {Res*,(A,v)}. An “effect proposition” language d (2) which does not include nonpropositional of the action is essentially [7] fluent names and of the semantics of such propositions in A is similar of Res;j( A, a) given above. In this sense, Theorem 1 shows a simple propo- in which C is to the that A is a sition atomic. The description definition “sublanguage” of AR. 4. The mathematics of action descriptions The mathematical properties of AR established to hold for any action in this section are not surprising- language of this kind. The verification them one would expect of these properties was, however, an important element of our work on the design of in earlier the language, because versions. it has allowed us to catch a few nontrivial oversights 4.1. Replucement Mary has a little lamb, and the lamb always follows Mary wherever she goes. In AR, this can be expressed by the constraints always Location(Mury) is X > Location(Lamb) is X 418 E. Giunchiglin et al. /Art@ciul Intelligence 9.5 (1997) 409-438 for all symbols X Locution ( Mary) and Location ( Lamb). that includes In an action description the range in changeable: replacing Location(Mury), would not affect the meaning of the description. (assumed to be common) of the fluent names these constraints, in one or many occurrences, by Location(Lumb) the two fluent names are inter- To state this replacement principle in a general form, we need the following definition. Fluent names F, F’ are equivalent with respect to a set S of constraints if l they are either both inertial or both noninertial, l they have a common l for every valuation (T that satisfies all constraints range, in S, a(F) = a( F’). Theorem 2. Let S be a set of constraints, D an action description, and F: F’ fluent names equivalent with respect to S. If an action description D’ is obtained from D by replacing some occurrences of F with F’ then Ressun = Ressuol As mentioned indeterminate that version was that communicated of verifying Besides formula. We say constraints effect propositions in the Introduction, the earlier version of AR described in [ 141 treats in a less satisfactory way. A problem with the assertion of Theorem 2 does not hold for it. An example the importance to us by Fangzhen Lin (October 26, 1993) demonstrated differently, this replacement property. the replacement of a fluent name, we can consider that formulas B and B’ are equivalent with respect the replacement of a to a set S of if every valuation satisfying all constraints in S satisfies B E B’. Theorem 3. Let S be a set of constraints, D an action description, and B ,B' formulas equivalent with respect to S. If an action description D’ is obtained from D by replacing some occurrences of B with B’ then i?eSSuD = ReSSuDl. Consider, for -L is T). Theorem 3, with S = 0, shows that the meaning of (4) will not change for the formula if in (4), which stands the expression instance, -(L we replace this formula by z, which stands for (L is F). 4.2. Constraints Constraints play a double are counted as states. Second, valuations indirect effects of actions. of determinate effect propositions: role in the semantics of AR. First, tell us which the In this second function, a constraint can be replaced by a set they are taken into account in calculating they effect Theorem 4. Let S be a set of constraints, and let S’ be the set of determinate propositions A causes C for all constraints always C in S and all action names A. For any action description D, any action name A and any state cr of S U D, Ressub (A, a) = Ressjuo (A, (T) . E. Giunchiglia et al. /Artificial Intelligence 95 (1997) 409-438 419 For instance, the constraint always L 3 W in (4) can be replaced by the effect propositions J causes L > W, G causes L > W, P causes L 3 W The transition diagram the new description S’ U D: the former can be obtained nodes that violate for the description S U D is a part of the transition diagram from the latter by removing in these nodes. in S and the arcs that begin the constraints for the 4.3. Explicit dejinitions Mary is ready to go back home when she is not wet and has her hat on. We would of fluents, TWA H. fluent name for this propositional the propositional (4) by adding combination noninertial like to introduce an abbreviation To this end, extend description R to its language and by including in it the “explicit definition” of R: always R E (7W A H). to declare We chose because we expect the effect of any action on R to be determined by its effects on W and H and by the definition of R, not by inertia. the new name R noninertial The theorem leaves scription A constraint stated below shows that adding an explicit definition its semantics essentially unchanged. in an action description D is an explicit dejinition of a propositional to an action de- fluent name F if it has the form always F = C and F (6) 0 is noninertial, l does not occur in C, l does not occur in any other proposition An action description D that includes an explicit definition of a propositional to the action description D’ obtained fluent this name F is “equivalent” and deleting F from the set of fluent names, but not in the strong sense that definition they define the fluent names and the states of D’ are not the same as the fluent names and the states of D. We can only claim sense. between D and D’, in the following that there exists an isomorphism as in Theorem 2. Indeed, from D by deleting the same transition function, in D. Let D and D’ be action descriptions with the same action names. An isomorphism between D and D’ is a one-to-one function f from the set of states of D onto the set 420 E. Giunclziglia et al. /Art@&1 Intelligpzce 95 (I 997) 409-438 of states of D’ such Reso(A,~) onto Reso!(A,f(vT)). that, for every action name A and every state u of D, f maps Jluent name F, and let D’ be obtained from D by deleting Theorem 5. Let D be an action description propositional and by deleting F from restriction of CT to the set offuent is an isomorphism between D and D’. containing an explicit definition of a this definition the set of J-Gent names. For any state IT of D, let (T,V be the names that are different from F. The function CT H flF It is essential Without noninertial in the language. for the validity of this theorem to be noninertial. fluent names, we would not be able to express explicit definitions that F is required 4.4. Nonpropositionaljluents The next result shows that a nonpropositional in favor of propositional eliminated be replaced by IZ propositional require that exactly one of these fluents be true in any state. fluent name with a finite range can be fluent names. A fluent with n possible values can in the new description will included fluents; constraints Let D be an action description, of D such that every fluent name defined as follows. and let F be a set of fluent names in the language in F has a finite range. The action description DF is The language of DF is obtained from every F in fluent names F” for all V E Rng,r. The name F” is declared in the language of D. For any formula C in the language of D, the language of D by replacing F by new propositional if F is inertial inertial CF stands for the result of replacing all its atomic parts F is V such that F E F by F” is T. The propositions l the constraints of DF are for all constraints l the determinate (1) in D, effect propositions A causes CF if PF for all determinate effect propositions (2) in D, l the indeterminate effect propositions A possibly changes F if P,G for all indeterminate effect propositions (3) in D with F $! F, E. Giunchigliu et al. /Artijiciul Intelligence 95 (I 997) 409-438 421 l the indeterminate effect propositions A possibly changes FV if PF for all indeterminate range of F. l the constraints effect propositions (3) in D with F E F and all V in the always 7 ( F’/’ A FV? ) and always V F” “~Rnw for all fluent names F E F and all pairs of distinct values VI, V2 in the range of F. to D. For every state u of D, define The theorem below shows that DF is isomorphic the state (TF of DF as follows: for any F E F and any V E RngF, CF( Fv) = T F if g(F) = V, otherwise; for any F $ F, vF(F) =a(F). Theorem 6. Let D be an action description, and let F be a set of fluent names in the language of D such that every fluent name u I+ CF is an isomorphism between D and DF. in F has a jinite range. The function In this sense, nonpropositional description description that involves only fluents with finite ranges can be effectively that involves propositional fluents only. fluents with finite ranges are redundant. Any action to a reduced As an example, consider a disk divided into n sectors the disk by rotates fluent name Orientation whose range consists of n symbols 0, . the action Turn can be described by the proposition turn. One way to describe l/n of a full (n > 1) and an action which is to use the , n - 1. The effect of the system Turn causes (Orientation is (i + 1) mod n ) if (Orientation is t ) for i = I,..., I. Alternatively, we can Orientationi (0 6 i < n) and the propositions n - introduce n propositional fluent names Turn causes Orientation(‘+‘) mod n if Orientation’, always -(Orientation’ A Orientationi), always Orientation’ V . . V Orientatiod- (O<i<j<n) 422 E. Giunchiglin et al. /Art@crul Intelligence 95 (I 997) 409-438 4.5. Indeterminate effect propositions If an indeterminate effect proposition A possibly changes F if P in an action description is replaced by a determinate effect proposition of the form A causes (F is V) if P then the sets Res(A, a) will typically become smaller. Consider, sition for instance, the propo- J possibly changes H if H (7) from the lake example. In Section 3.3 we saw that, for every state cr with a(H) = T, Res(J, a) = {LWH, LWfj}. If we replace (7) by J causes (H is F) if H then the lake example will become “more determinate”: outcomes of the action J will lose the first of its two elements. the set Res(J, C) of the possible The theorem below shows if and only descriptions that a state is a possible outcome of an action A in the if it is a possible outcome of A in at least one of the to different choices of V in the range of corresponding at effect propositions indeterminate to many this process can be applied original description “more determinate” F. Moreover, once-for instance, to all indeterminate effect propositions in the given description. Let S be a set of indeterminate effect propositions. A choice function for S is a function c such that l the domain of c is the set of the fluent names F in all propositions l for every F in the domain of c, c(F) E RngF. (3) in S, For any choice function c, SC stands for the set of the determinate effect propositions A causes (F is c(F)) if P for all propositions (3) in S. Theorem 7. For any action description D, any set S of indeterminate efict proposi- tions, any action name A and any state u of D, ReSDus(A, or> is the union of the sets c for ResDusC (A, CT) over ali choice functions s. 5. Temporal projection As observed at the end of Section 3.3, some commonsense conclusions effects of actions described in AR can be viewed as assertions about paths about the in the E. Giunchiglia et al. /Artificial Intelligence 95 (I 997) 409-438 corresponding can be used, in conjunction with AR, to describe properties of such paths. In this section we introduce a “query transition diagram. language” 423 that that, should Mary jump Let us go back to the lake example. Even if nothing is known about the current state of affairs, we can predict into the lake, get out of the water and then put her hat on, she will be not in the lake but still wet, and she will have her hat the future on the on. This basis of what is known about the effects of actions. Symbolically, this conclusion will be expressed in the query language defined below as follows: is an example of “temporal projection”, that is, predicting TL A W IY H after J; G; f! (8) A temporal projection problem may include, in addition to an action description, some assumptions about the initial state of the world. In the lake example, if we know that initially L /1 H -Mary she return is in the lake and has her hat on right now-then to the shore, her hat will be still on her head: we can predict that, should H after G. (9) As in Section 2, consider a set of fluent names with their ranges, designated of the form as inertial, and a set of action names. An initial condition initially C some of them is an expression where C is a formula. A value proposition is an expression of the form C after Al ; . . . ; A,, where C is a formula and Al, . . . , A, (n > 0) are action names. Value propositions are conditions on the values that fluents would have should a certain sequence of actions be executed. A domain description is the union of an action description is a “consequence” and a set of initial condi- of a given domain tions. We will define when a value proposition description. First, we need two auxiliary definitions. A histov for an action description D is a path in the corresponding transition diagram, that is, a finite sequence m~>A~,w,...,&,u,, (12) (n 3 0) such that ao, @I,. . , u,~ are states, AI,. . , A,, are action names, and (+, E ResD(Ai,ui_l) (1 < i < n). A history ( 12) satisjies an initial condition (10) if (70 satisfies C. Consider proposition now an action description D, a set I of initial conditions, and a value ( 11). We say that ( 11) is a consequence of the domain description D u I (10) (11) 424 E. Giunchiglin et al. /Artifciul Intelligence 95 (1997) 409-438 if, for any history conditions in I, u,? satisfies C. for D of the form co,Al, ~1,. . . , A,,cr,,, that satisfies all initial For example, of the domain description obtained (8) is a consequence of action description from (4) by adding (4), and (9) is a consequence the initial condition (13) initially L A H. Note that by asserting that (11) is a consequence do not claim when For instance, that the actions A,, . , . , A,, can be executed. On the contrary, this string of actions is not executable, if instead of (13) we add to (4) the consequence the initial condition of a certain domain description we in the case trivially holds. relation initially H or even initially 1L A H, value proposition (9) will still be a consequence. The consequence relation defined above is nonmonotonic, because some consequences of D U I can be lost when a proposition ever, can only make the set of consequences property in the sense of [ 161. is added to D. Adding an initial condition, how- bigger. This fact is a restricted monotonicity 6. Temporal projection problems as abnormality theories that In this section, we assume fluent the underlying names, each with a finite range, and finitely many action names. We restrict attention temporal projection problem to finite action descriptions in this language. An arbitrary associated with such a description fashion, [ 181 based on the situation as a problem of reasoning calculus. language has finitely many in a simple and modular in a nested abnormality is encoded here, theory The abnormality theory corresponding to a given finite action description D and a set I of initial conditions will be denoted by NAT( D, I). 6.1. The language of NAT( D, I> The language of the theory ( 1) Actions. The universe of actions will be in a one-to-one is many-sorted, with the following sorts: correspondence with the set of action names of D. (2) Values. The universe of values will be in a one-to-one correspondence with the union of the ranges of the fluent names of D. (3) Sifuations. Intuitively, instant of time” object which stands for “undefined”. always executable. a situation at an [24]. The universe of situations will include also an auxiliary that are not It will help us represent actions state of the universe “is the complete E. Giunchigh et d. /Artificial lnfelligence 95 (1997) 409-438 425 (4) Aspects. As in [22], aspects will be used to distinguish between different kinds of abnormality. The variables of the first three sorts will be denoted by a, al ,a~, . ., L:, ~‘1, ~2,. . and s, S1, s2,. . . . includes The language l every action name of D is an action constant, l every element of the union of the ranges of the fluent names of D is a value the following object constants: constant, (“undefined”) and I the language l So (for the initial situation) l for every inertial includes Finally, l Result represents a function l every fluent name F of D represents a function l for every fluent name F of D, FR represents fluent name F of D, F is an aspect constant. the following that maps an action and a situation function and predicate constants: to a situation, that maps a situation to a value, the function that is explicitly defined are situation constants, by the formula FR(u,s) = F(Result(a,s)), l Poss represents the predicate that is explicitly defined by the formula Pos.r(u, s) s Result(u, s) + 1. (14) (15) Note that formulas in the sense of AR language with these nonlogical of the first-order refer here to the formulas formula C and any situation as the result of replacing each atomic part F is V by F(r) = V. For instance, in the sense of AR as “domain term t, by C(t) we denote the formulas constants. To avoid confusion, we will formulas”. For any domain from C (Section 2.1) are not among the formula obtained ( -(Orientation is 2) ) (SO) stands for Orientution( SO) # 3. For any domain we denote F is V by F’(tl,tz) = V. formula C, and action term tl and any situation from C as the result of replacing term t2, by CR( tl, t2) each atomic part the formula obtained 6.2. The axioms of NAT( D, I) The commonsense law of inertia will be expressed in NAT( D, Z) by the formulas Poss(u,s)Au=FR(u,s)A~Ab(&qz,s) >u=F(s) for all inertial action formulas by LZ. then u equals fluent names F (“normally, if L’ is the value of F after executing the value that F had previously”). We will denote an the list of these 426 E. Giunclzigh et nl. /Art@d Intelligence 95 (1997) 409-438 The formulas expressing the effect propositions from D are defined as follows. If Q is a determinate effect proposition (2) then G is the formula P(s) APoss(A,s) > CR(A,s). For instance, the translation of Turn causes (Orientation is 6) if (Orientation is 3) is Orientation(s) = 5 A Poss( Turn, s) 1 OrientationR( Turn, s) = 6. If Q is an indeterminate effect proposition (3) then 6 is the formula P(S) >Ab@,FR(A,s),A,s) Let FI , . . , F[ be all fluent names axioms of NAT( D, I), DA stands stands domain for the set of all indeterminate formulas that includes for the set of all determinate propositions in the language of D. In the following list of in D, Di in D, and D, stands for the set of propositions l the formulas C for all constraints always C in D, and l the formulas v Fi is V V~Rngr, for all i (1 < i 6 I). Group I, Unique names axioms: cl # c2 for all pairs ~1, cl of distinct object constants of the same sort. In particular, this group includes the axiom SO f 1. Group 2. Domain closure axioms: a=Al V...Va=A,,,, L’ = v, v . . v u = v, , where Ai, _ _ . , A,,, are ali action constants, language. Group 3. Translations of the constraints: and Vi,. . . , v, are all value constants in the C(s) (C ED,). Group 4. Explicit definjtions: (15) of Pass. definition definitions (14) of FR for all fluent names F, and Group 5. Characterization of the effects of actions: E. Giunchiglia et al. /Artijicial Intelligence 95 (1997) 409-438 421 {F,R,...,F;: LI, 6 (QED;), {Ff,...,F/?,maxPoss: TPOSS( a, I), e^ (QED~), CR(a,s) (c E DC) Group 6. Translations of the initial conditions: for every proposition initially C in 1. (16) tells us that an Group 5 is, of course, action can be executed unless and constraints of D. The outer circumscription of blocks reflects our intention what the effects of these actions are. the main part of the theory. The inner block this is prohibited by the determinate effect propositions the idea of inertia. The nesting to decide first which actions can be executed, and then encodes 6.3. The soundness and completeness theorem To express value propositions in the language of the situation calculus, we need the following notation: for any actions Al, . , A,,, stands for the term If Q is a value proposition (11) then Q stands for [AI,...,A,,I f 13 ct[A~>...,A,,l). The following described above. theorem expresses the soundness and completeness of the translation Theorem 8. For any $nite action description D, any set I of initial conditions and any value proposition Q, Q is a consequence of the nested abnormality theory NAT( D, Z) iff Q is a consequence of the domain description D II 1. 428 E. Giunchiglia et al./Artijiciul Intelligence 95 (1997) 409-438 7. Related work Early attempts to describe properties of actions is performed. The assumption discovery of the frame problem-the when an action has it after looking up a number have been developed way [5,26,29]. for expressing An alternative approach to the frame problem logic have in classical led to the problem of specifying which facts do not change that “if a person has a telephone, he still is an example. Methods such “frame axioms ” in a systematic and compact [24] in the telephone book’ law of inertia, which, in combination with any set of domain-specific the same conclusions the first examples of default including logics, as the appropriate is to formalize, once and for all, the ef- set of frame that motivated the first [ IO]. in- circumscription, However, [ 1 ] was particularly reasoning to the frame problem [ 221 turned out to be unsatisfactory proposed in response to this criticism, of nonmonotonic idea was among commonsense fect axioms, would lead to exactly axioms. This the development circumscriptive Among fluential, because A survey of nonmonotonic be argued and “nonmonotonic’‘-is the formalizations solution that the difference between it could handle actions with indirect effects; see [ 121 on its limitations. solutions to the frame problem can be found in [ 281. It can the two kinds of theories of action-“classical” [ 18, Section 5.31. thought the possibilities to discuss as commonly not as significant it turned out to be difficult to be evaluated In research on action, of the available methods limitations tradition was to explain every new approach with reference such as the blocks world or the shooting used examples and their enhancements. of each method. More recently, several researchers attempted applicability action this problem and to discuss way. Three approaches study of actions most actively are associated with the ideas of a causal system and in a precise and general way. For a long time, the to a few standard examples, approaches these Such analysis does not say much about the range of to overcome sound today [ 201, of a dynamical and theoretically that are being pursued theory representing to the systematic in terms of their ability [ 271, and of an action and compared mostly [lo]. Competing in a methodical to handle language scenario from Some extensions of the original action that are not incorporated [ 7 I. language d proposed in the language AR studied in the literature include in this paper: parame- [ 19,2 1,301. laws [ 21, dependent fluents [ 91 and static causal approach in one action language to action presented is a topic for future work. in Section 6 uses nested abnormality the “theory update” view of [ 311 with the syntax of the situation are experiments based on a similar use of circumscription features ters 143, concurrency Combining these proposals The circumscriptive theories to combine calculus. Some computational in [ 151. described Acknowledgments We are grateful Turner for comments National Science Foundation under grant IRI-930675 1. to Michael Gelfond, Fangzhen Lin, Norman McCain and Hudson supported by on a draft of this paper. This work was partially E. Giunchiglia et al. /ArtQicial Intelligence 9.5 (I 997) 409-438 429 Appendix A. Proofs A.1. Proof of Theorem I (Section 3.4) Theorem 1. Let D be a simple action description. For any action name A and any state c7. ResDtA,u) = {ResE(A,a)}. Consider an action name A and a state g. Recall that (T’ is defined as follows: For any Ruent name F, if D includes a determinate effect proposition (2) such that (i) u satisfies P, and (ii) C has a conjunctive term of the form F is V then (T’(F) = V; if not then V’(F) = a(F). It is clear that V’ E Res’( A, a). We will show that, for any valuation U” in Res’( A, u) that is different from (T’, NewA (v, g’) is a proper subset of New* (a, a”). Let A be the set of fluent names F such that D includes a determinate effect propo- sition (2) with properties (i) and (ii). Since u” E Res’( A, a), c’(F) = U”(F) if F E A, c(F) otherwise. Consequently, New”(cr.p’) = {F is (T’(F) 1 g’(F) Z (T(F)} = {F is u’(F) 1 F E A, c+‘(F) f a(F)} = {F is d’(F) 1 F E A, a”(F) #= a(F)} C_ New*(u,&‘). that the f g”(F). To see a’(F) be in NewA (g, a’) and hence lows New*(a,cr’). that g”(F) v(F), 0 f two sets cannot be equal, consider For this F, u’(F) = g(F), in New* (g, g”), so that F is d’(F) any fluent name F such that because otherwise F is d(F) would to the choice of F. It fol- in in New*( c+, a”), but not contrary is A.2. Proof of Theorem 2 (Section 4. I) Theorem 2. Let S be a set of constraints, D an action description, and F; F’ fluent names equivalent with respect to S. If an action description D’ is obtained from D by replacing some occurrences of F with F’ then Ressuo = Ressuol. Consider C’ is obtained two different from a formula C by replacing fluent names F, F’ that are equivalent with respect to S. If some occurrences of F with F’ then, for 430 E. Giunchiglia et al. /Arrijicral Intelligence 95 (1997) 409-438 every valuation the same states, and, furthermore, (T satisfying S, c+(C) = a(C’). It follows that S U D and S U D’ have Red&, = Rest,,, , Take an action name A and states U, u’, u” of S U D. We need to verify that New&D (u, a’) 2 New&,, (u, a”) iff New&, (u, u’) C New&,,, (u, u”). (A.1) (-4.2) Let W he the set of the fluent names F’ such that D includes an indeterminate effect proposition A possibly changes F* if P (A.31 for which fl satisfies P. For any state u*, New&(a, set of all atomic formulas F* is V such that is inertial and V = CT*(F*) f a(F*), (i) F’ (ii) F’ E w and V = c*(F*). or u*) can he characterized as the let W’ he the set of the fluent names F* such that D’ includes a proposition is the set of all atomic formulas for which u satisfies P; then NewA sUD, (q, u*) Similarly, (A.3) F* is V that satisfy (i) or (ii’) F’ E w’ and V = u*(F*). (A.1 ) . To prove (A.2)) Assume Case (i): F* is inertial and V = a’( F’) # u( F*). Then F* is V belongs take any formula F’ is V in New&, ((T, u’). to the left- side also, so that V = u”( F* ) . hand side of (A. 1) , and consequently It follows that F* is V belongs Case (ii): F* E w’ and V = u’( F*). to New& to the right-hand (u, u”). If F* E w then, as in Case (i), we conclude by (A. 1) that V = u”( F* ) , which again implies Otherwise F’ E W’\W. Recall that D’ is obtained of F with F’, so that that F* is V belongs (u, a”). from D by replacing some occurrences to New&,, w u {F’} = W’ U {F}, (A.4) and consequently F’ E W’ and F E W. From left-hand u’(F) = u”(F) Thus F* = F’ and V = u’( F’). Moreover, equality (A.4) the last condition we see that F is u’(F) belongs side of (A.1 ). Consequently, it belongs . Since both u’ and u” satisfy S, u’(F) = u’( F’) and u”(F) to the right-hand implies that to the side also, so that = u”( F’). V = u’( F’) = u’(F) = u”(F) = u”( F’). Since F’ E W’, it follows that the formula F* is V is in New&,, The proof in the other direction, from (A.2) to (A.l), is similar. (u, u”) 0 E. Giunchiglin et al. /Artijicial Intelligence 95 (1997) 409-438 431 A.3. Proof of Theorem 3 (Section 4.1) Theorem 3. Let S be a set of constraints, D an action description, and B, B' formulas equivalent with respect to S. If an action description D’ is obtainedfrom D by replacing some occurrences of B with B’ then Ressuo = RessuDf . Consider formulas B, B’ equivalent with respect to S. If C’ is the formula obtained some occurrences of B with B’ then, for every valuation that S U D and S U D’ have the same states, It follows from a formula C by replacing (T satisfying S, (T(C) = (T(C’). and, furthermore, Res& = ResgUD,, New&,, = New&D,1 ReSsuD =f?esSup. 0 A.4. Proof of Theorem 4 (Section 4.2) Theorem 4. Let S be a set of constraints, and let S’ be the set of determinate effect propositions A causes C for all constraints always C in S and all action names A. For any action description D, any action name A and any state u of S U D, Ressuo(A, (+) = ReSswo(A,g) Let S and S’ be as in the statement of the theorem, and let cr be a state of S U D. to Resi( A, c-r) and satisfies all to RestluD (A, C) iff it belongs in S, that is to say, iff it belongs to Resic,D (A, cr) . Consequently, A valuation V’ belongs constraints ResOsuD (A, CT) = Res$,D (A, a). Since S U D and S’ U D have the same indeterminate effect propositions, New&,, ((T, IT’) = New&, (g, c~‘) . These two formulas imply the assertion of the theorem. q A.5. Proof qf Theorem 5 {Section 4.3) 5. Let D be an action description jluent name F, and let D’ be obtained from D by deleting containing an explicit definition of a Theorem this definition propositional and by deleting F from the set of JEuent names. For any state CT of D, let fl,C be the restriction of cr to the set ofJuent names that are different from F. The function u H VF is an isomorphism between D and D’. It is clear that g H flF is a one-to-one the set of states of D’. We need Resof(A,aF). to show function from the set of states of D onto that this function maps ResD( A, a) onto where C Res$(A,u). Now 432 E. Giunchigliu et al. /Artijicial Intelligence 95 (I 997) 409-438 Observe first that it maps Rest (A, a) onto Rest, (A, (TF) . Indeed, then uk E Res$ (A, uF). On the other hand, if a valuation U* belongs then 8 = a; for the valuation LT’ defined by if g’ E Rest (A, a) to Resi, (A, uF) a’( F’) = u(C) if F’ = F, u* (F’) otherwise, is the right-hand side of the equivalence (6) defining F. Clearly P’ E it remains to note in indeterminate does not occur effect propositions, that, for any states g, u’ of D, since F is noninertial and NE?w$(a,(T’) =New&((TF,(Tk). 0 A.6 Proof of Theorem 6 (Section 4.4) Theorem 6. Let D be an action description, the language of D such that every fluent name is an isomorphism between D and DF. u H UF and let F be a set of fluent names in in F has a jinite range. The function t--+ uf that u function It is clear is a one-to-one the set of states of D into for every formula C in the language of D, is the set of states of DF. To the proof, we need to show that, for every action name A and every state u It is clear that the image of that for any states u’, u” the set of valuations of DF. Furthermore, u(C) = UF(CF); complete of D, this function maps Reso (A, u) onto ResDF (A, up). Resi (A, u) of D, the inclusion (A, UF). Thus, we only need to verify the range of this function consequently, is Rest, from (-4.5) (A.6) New$(u,u’) C Newi(u,u”) is equivalent to New&.(uF,Uk) & New&(gF,ug). Assume (AS), and take any formula for some F $ F then it belongs the right-hand Otherwise, side too, which to the right-hand this formula has the form F” is uk( F”) for some F E F. that it belongs implies to the left-hand side of (A.6). in New$,(crF, If this formula ub). side of (A.5), and consequently is F is V to Case 2: for some indeterminate Case 1: F” is inertial and a;( F”) so that F is a’( 8’) belongs to the right-hand u(F), belongs ub (F”), so that F” is a:, (F”) belongs side also, which implies to the left-hand # f UF( F”). Then F is inertial and u’(F) side of (AS). Consequently, it that u”(F) = u’(F). Then a:( F’) = to the right-hand (3) effect proposition side of (A.6). in D, uF satisfies PF. Then and that that u”(F) = u’(F) u satisfies P, and we can again use (AS) F” is a>( F”) belongs (A.6), to the left-hand to the right-hand and take any formula F is u’(F) to conclude side of (A.6). side of (A.6), and consequently Now assume then it belongs too, which implies that it belongs to the right-hand side of (A.5). Assume in New$(u,u’). to the right-hand If F $! F side that F E F. E. Giunchiglia et al. /ArtiJcial Intelligence 95 (I 997) 409-438 433 Case 1: F is inertial and g’(F) # a(F). and ffF ( FdCF) ) = F. It follows Consequently, it belongs that FdcF) to the right-hand side also, which implies that Then Fg’cF) is inertial, a;( FC’(F)) = T to the left-hand side of (A.6). is T belongs Hence g”(F) = (T’(F), so that F is d(F) Case 2: for some indeterminate satisfies PJZ, and we can again use (A.6) and c”(F) and that F is d(F) = a’(F), belongs effect proposition to conclude belongs side of (A.5). to the right-hand (3) in D, CT satisfies P. Then flF that P:( FdCF)) = a;( FdcF)) = T 0 to the right-hand side of (A.5). A.7. Proof of Theorem 7 (Section 4.5) Theorem 7. For any action description D, any set S of indeterminate effect propositions, anq’ action name A and any state u of D, ResDu.~( A, CT) is the union of the sets ResnusC (A, (T) over all choice functions c for S. For any valuation U, define S’ to be S’ where c is the choice function obtained by lemma. c to the domain of c. We will derive the theorem from the following restricting Lemma. For any state d of D, (T’ E ResD”s( A, a) ifi u’ E Res,,s,f (A, v). The fact ResousC (A, a) consider any choice function c such that U’ E Resousc (A, (T) ; we will show that follows is contained the union of all sets of from the lemma. To prove the opposite in the form inclusion, that Reso”s(A,a) immediately (A.7) (A.8) (A.9) Resn”s<(A,cT) = Res,,,+(A,g). Consider a proposition A causes (F is c(F)) if P in S” such that u satisfies P, and the corresponding proposition A causes (F is g’(F)) if P in S”‘. Since U’ E Re$,,,(A,cr), quently, g’(F) = c(F), so that (A.9) equals (A.8). Conse- ResiuF ( A, a) = Re&,,, (A, a). Since D U S” and D U S” have follows. immediately 0 the same indeterminate effect propositions, (A.7) Proof of the lemma. The proof is based on the following observations. Let r be the set of formulas F is d(F) (3) for which c (3) for which u satisfies P, and (iii) satisfies P, (ii) D does not contain a proposition to NewgUs( V, u’) g(F) = g’(F) such that (i) S contains at least one proposition is the set of all formulas that belong (Intuitively, r 434 E. Giunclziglin et ~1. /Artijicial Intelligence 95 (1997) 409-438 only because of some proposition in S.) For every V* in ResODUS”, (A, CT), if F is a’(F) belongs to r then g’(F) = CT*(F). It follows that, for all U* E Rest,,,, (A, a), New&s(a, IJ*) = New&,,, (g, (T*) U 1: Moreover, the two sets in the right-hand side are disjoint: New&,f ( cr,fl*) nr =0. (A.10) (A.1 I) Assume that a’ E Resms( A, CT). Then IZT’ belongs to Re.&,,, (A, (T) , because, for every determinate C has the form F is a’(F). We need to show that there is no c” E ResLUS”, (A, CT) such that (2) which is in DUS”’ but not in DUS, effect proposition the formula New&~ ((T, a”) c New&,, (c, v’) . Assume that such a V” exists. Then, by (A. 11) , New&,scrf ((~,d’) UTC New&,,,(o,~‘) UT. By (A.lO) we conclude that NewAUs(g,cr”) C NewiUs(a,a’), which contradicts Now assume the assumption that g’ E ResD”s(A, a). that U’ E ResDus,,r (A, a). Then U’ E Resi,s( A, a), because every determinate is no uff E Restus (A, a) such that effect proposition in D U S belongs to D U d. We need to show that there New& (o, (T”) C New&s (a, c’) . (A.12) Assume inclusion. To this end, we need to prove that 8 E Rest,,,, that such a U” exists. We want to use (A.lO) to simplify both parts of this (A, a). Consider any deter- minate effect proposition P. This proposition in S. Furthermore, quently to the right-hand F is a’(F). We showed and (A. 10) we can conclude has the form (A.9) belongs F is d’(F) (2) which is in D U S”’ but not in D U S, such that (T satisfies (3) and conse- so that g” satisfies to ResiuS.,, (A, a). Now from (A. 12) for some indeterminate to the left-hand side also. It follows that g” that c”(F) = a’(F), effect proposition side of (A.12), indeed belongs that New&,,,, (g,g”) U r C New&,,(u,fl’) U IY Then, by (A.1 l), New&,, (~,cr”) c fVew&sC,J ((T, cr'>, which contradicts the assumption that cr’ E ResDus,,l (A, (T) . 0 E. Giunchiglia et al. /Artificial Intelligence 95 (1997) 409-438 435 A.8. Proof of Theorem 8 (Section 6.3) Theorem 8. For any$nite value proposition Q, Q is a consequence of the nested abnormality iff Q is a consequence of the domain description D U I. action description D, any set I of initial conditions and any theory NAT( D, 1) theorem is technically more difficult in is only an outline of the proof. A complete proof of a similar result can be than the others, and what is presented This this section found in [ 13, Chapter 81. Recall that the result of circumscribing constants Z varied, and/or predicate The semantics of nested abnormality translates blocks is defined recursively: into sentences of the underlying a predicate constant P, with object, function in a sentence A is denoted by CIRC[A; P; Z]. by a map q that theories logic. The map [ 181 is characterized language of classical p{Ct,. . ,C,,, : AI,. . . ,A,} = 3abF(ab), where F(Ab) =CIRC[~A~A...A~A,;A~;C,,...,C,,]. The first in the series of lemmas needed to prove Theorem 8 relates the inner block of Axiom Group 5 {Ff,. . . , F;” , max Poss : lPoss( a, I>, 6 (QcDd), CRta,s) tc E D,) (A.13) (+, 5 stands for the conjunction to the function Res. The statement of the lemma uses the following notation. For any valuation . such that Res(A, cr) = 8. Note that, in this By L? we denote replaced by its superset Res’( A, a), definition, because, the latter is empty also. of all domain formulas of the form F is c(F) the set Res( A, a) can be equivalently the former cannot be empty unless for a finite action description, the set of pairs (A,a) Lemma 9. Assume that the result of applying p to block (A.13) universal closures) of the formulas that the set of states of D is nonempty. Axiom Groups is equivalent to the conjunction l-3 entail (of the lPoss( a, I), Q <Q~Dci)t CR(&s) (c E D,) (A.14) (A.15) (A.16) 436 E. Giunchiglia et al. /Arti$cinl intelligence 95 (1997) 409-438 Poss( a, s) ZE 1 s = _L v v (a=Ar\T(s))j. (Ao)ET (A.17) The proof of the lemma consists of two steps. First, introduce a new predicate constant Imposs, and let A (Imposs, FF, . . . , Fp) be the conjunction with dmposs substituted result of applying 9 to block (A.13) varied, the following general fact [ 17, Proposition 3.4.11: to the circumscription . . . , Fp). Second, in A( Imposs, Ff, for Pass. Propositions 1 and 2 from [ 181 allow us to reduce the of imposs, with Fp, . . . , FfR this circumscription can be computed using of formulas (A. 14)-(A.16) Theorem. Let E be a predicate expression without parameters, nor Z. If the sentences containing neither P A(P, 2) 3 3zA(E, z) A(P,Z) > E < P are universally valid, then so is the sentence CIRC[A(P,Z);P;Z] =A(P,Z) r\P=E. (A.18) In our case, P is Imposs, Z is Ff, . , Fr, and we take E to be /\as[s=iV V (a=Ar\a(s))]. (A,rr)E\‘ To verify the condition A(fmposs,Ff,.,.,F/? >3fl,...,fiA(E,fl,...,fi), consider the following formulas c/i (a, s, u) : I/;(a,s,o)= V (a=AAT(s)Ao=g(F)) V v (LZ=AA\(S)/\U=YA,,(F)), (A,v)@Z’ where r,Q, is a fixed element of Res”( A, (T). The function condition fi is selected to satisfy the Vas U;li(a,s, fi(a,s)). Using Lemma 9, we can prove the following two lemmas that together establish the validity of Theorem 8 in both directions. 0 E. Giunchiglin et al. /Artificial Infelligence 95 (1997) 409-438 431 Lemma 10. For every history UO, Al, CTI,. . , A,, g, in I there exists a model M of NAT( D, I) that satisfies that satisjes all initial conditions ~,([AI,...,A,I)A[AI,...,A,I f 1 Lemma 11. For any model M of NAT( D, I), any actions Al,. states CT and u’, if M satisfies . , A,,, A,,+, and arq ~([AI,... ,&I) A;ST([A,,...>&,A,+,l) A [A~>...,&,&+ll # J- then g’ E Res(A,,+I,cr). References [ I 1 A. Baker, Nonmonotonic reasoning in the framework of situation calculus, Arfificial lntellipxce 49 (1991) 5-23. 121 C. Baral Proceedings and M. Gelfond, Representing IJCAI-93, Chambery, France concurrent actions in extended logic programming, in: ( 1993) 866-87 1. and A. Szalas, Computing circumscription revisited: A reduction algorithm, ( 3 1 P. Doherty, W. tukaszewicz J. Automuted Reasoning (4 1 PM. Dung, Representing ( 1997), actions to appear. Proceedings 10th International 238. in logic programming and Conference on Logic Programming, Budapest, Hungary its applications in: ( 1993) 222- in database updates, 15 I C. Elkan, Reasoning about action in first-order logic, in: Proceedings 1992 Canudian Conftirence on Arf#ciicinl Intelligence, Vancouver, BC ( 1992). [ 6 1 D. Gabbay and H. Ohlbach, Quantifier elimination in second-order predicate logic, in: B. Nebel, C. Rich and W. Swartout, Representation and Reasoning, Cambridge, MA ( 1992) 425-435. eds., Proceedings 3rd Inrernaiionul Conference on Principles of Knowledge 17 1 M. Gelfond and V. Lifschitz, Representing action and change by logic programs, J. Logic Programming 17 (1993) 301-322. 18 1 E. Giunchiglia, G.N. Kartha and V. Lifschitz, Actions with indirect effects (extended abstract). in: Working Notes qf the Symposium on Extending Theories of Actions ( 1995). 19 I E. Giunchiglia I 964- 1969. and V. Lifschitz, Dependent fluents, in: Proceedings IJCAI-95, Montreal, Que. ( 199s) I 10) S. Hanks and D. McDermott, Nonmonotonic logic and temporal projection, Arfificin2 Intelligence 33 (1987) 379-412. [ I I I G.N. Kartha, Soundness and completeness theorems for three formalizations of action, in: Proceedings IJCAI-93, Chambery, France I 121 G.N. Kartha, Two counterexamples ( 1993) 724-729. related Intelligence 69 ( 1994) 379-39 1. to Baker’s approach to the frame problem, Artijiciul I 13 1 G.N. Kattha, A mathematical investigation of reasoning about actions, Ph.D. Thesis, University of Texas at Austin, 1995; available by anonymous ftp from ftp.cs.utexas.edu as /pub/techreports/tr%-17,~s. I 14 I G.N. Kartha and V. Lifschitz, Actions with indirect effects Conference otz Principles of Knowledge Representation (preliminary report), in: Proceedings nnd Reusoning, Bonn 4th ( 1994) Intermttionctl 341-350. I IS ) G.N. Kartha and V. Lifschitz, A simple formalization of actions using circumscription, in: Proceedings 1970-1975. IJCAI-9.5, Montreal, Que. (1995) I 16 1 V. Lifschitz, Restricted monotonicity, I 17 I V. Lifschitz, Circumscription, Lo@ in Al and L&c I I8 I V. Lifschitz, Nested abnormality I 19 I V. Lifschitz. Two components in: Proceedings AAAI-93, Washington, DC ( 1993) 432-437. in: D.M. Gabbay, C.J. Hogger and J.A. Robinson, eds.. The Handbook of Programming, Vol. 3 (Oxford University Press, Oxford, 1994) 298-352. theories, Arrifcial Infelligence 74 ( 1995) 35 l-365. of an action language, Ann. Math. Arr$ hell. ( 1997), to appear. 438 E. Giunchiglia et al. /Artificial Intelligence 95 (1997) 409-438 I 201 E Lin and Y. Shoham, Provably correct theories of action (preliminary report), in: Proceedings AAAI-Yf, Anaheim, CA ( 199 I ) 349-354. 12 I 1 N. McCain and H. Turner, A causal Montreal, Que. (1995) 1978-1984. theory of ramifications and qualifications, in: Proceedings IJCAI-95, 122) J. McCarthy, Applications of circumscription Intelligence 26 ( 1986) 89-116; John McCarthy ( Ablex, Norwood, NJ, 1990). reproduced to formalizing sense knowledge, Art@&1 in: J. McCarthy, Formalizing Common Sense: Paper.7 by common [ 23 1 J. McCarthy, Formalizing Common Sense: Papers by John McCarthy ( Ablex, Norwood, NJ, 1990). ( 24 I J. McCarthy and P Hayes, Some philosophical intelligence, problems B. Meltzer and D. Michie, eds., Machine Intelligence, Vol. 4 (Edinburgh University Press, Edinburgh, 1969) 4633502; Reproduced ( Ablex, Norwood, NJ, 1990). 125 ] E. Pednault, ADL: exploring in: R. the middle ground between STRIPS and Brachman, H. Levesque and R. Reiter, eds., Proceedings 1st International Conference on Principles (f Knowledge Representation und Reasoning, Toronto, Ont. ( 1989) 324-332. in: J. McCarthy, Formulizing Common Sense: Puper,T by John McCarthy from the standpoint of artificial the situation calculus, in: in the situation calculus: a simple solution (sometimes) and a completeness result Computation: Papers in Honor of John McCarthy (Academic Press, New York, 199 I ) 359-380. ed., Artificial Intelligence and Mafhematicul Theory of in: V. Lifschitz, ( 27 1 E. Sandewall, Features and Fluents, Vol. 1 (Oxford University Press, Oxford, 1995). 128 1 E. Sandewall in: D.M. Gabbay, C.J. Hogger and temporal J.A. Robinson, eds., Tire Handbook of Logic in AI and Lrq+c Programming, Vol. 4 (Oxford University Press, Oxford, 1995) 439-498. and Y. Shoham, Non-monotonic reasoning, 1291 L. Schubert, Monotonic solution of the frame problem for worlds with fully specified actions, Represenfation und Dej&sible Reasoning (Kluwer, Dordrecht, Netherlands, 1990) 23-67. in the situation calculus: an efficient method in: H.E. Kyburg, R. Loui and G. Carlson, eds., Knowledge I 30 1 H. Turner. Representing actions in logic programs and default theories: a situation calculus approach, J. Logic Programming ( 1997), to appear. I.7 I I M. Winslett, Reasoning about action using a possible models approach, in: Proceedings AAAI-88, St. Paul, MN ( 1988) 89-93. I26 1 R. Reiter, The frame problem for goal regression, 