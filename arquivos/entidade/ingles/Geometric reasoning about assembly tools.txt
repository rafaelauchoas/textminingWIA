Artificial Intelligence 98 (1998) 237-279 Artificial Intelligence Geometric reasoning about assembly tools Randall H. Wilson * Intelligent Systems and Robotics Center, Sandia National Laboratories, Albuquerque, NM 87185-1008, USA Received January 1997 Abstract Planning for assembly requires reasoning about various tools used by humans, robots, or other automation to manipulate, attach, and test parts and subassemblies. This paper presents a general framework to represent and reason about geometric accessibility issues for a wide variety of such assembly tools. constraints Central to the framework is a use volwne encoding a minimum space that must be free in an on where that volume must be assembly state to apply a given tool, and placement placed relative to the parts on which the tool acts. Determining whether a tool can be applied in a given assembly state is then reduced to an instance of the FINDPLACE problem (Lozano-Perez, 1983). In addition, we present more efficient methods to integrate the framework into assembly planning. For tools that are applied either before or after their target parts are mated, one method preprocesses a single tool application for all possible states of assembly of a product in polynomial time, reducing all later state-tool queries to evaluations of a simple expression. For tools applied after their target parts are mated, a complementary method guarantees polynomial-time assembly planning. We present a wide variety of tools that can be described adequately using the approach, and survey tool catalogs to determine coverage of standard tools. Finally, we describe an implementa- tion of the approach in an assembly planning system and experiments with a library of over one hundred manual and robotic tools and several complex assemblies. @ 1998 Elsevier Science B.V. Keywords: Assembly; Geometric reasoning; Planning; Manufacturing; Robotics * Present address: Eastman Kodak Company, 2901 Juan T&o NE, Suite 210, Albuquerque, NM 87112-1881, USA. Email: Iwilson@kodak.com. 0004-3702/98/$19.00 @ 1998 Elsevier Science B.V. All rights reserved. PIISOOO4-3702(97)00062-3 238 R.H. Wihon/Art$cial Intelligence 98 (1998) 237-279 1. Introduction is a tool-using “Man all.” - Thomas Carlyle, Sartor Resartus, book I, 1833. . . . . Without animal tools he is nothing, with tools he is and disassembly of a product for that product. In addition, is a critical assembly planning step can to help designers process important servicing, for assembly, realization Planning in the design supply feedback standpoint. Computer-aided to produce assembly plans while need straints on assembly straints. This paper proposes an approach and describes system. an implementation to manipulate, increasing assembly planning of the approach attach, and test parts and subassemblies plans, methods must be developed improve promises to reduce the design their quality and completeness. from a manufacturing the labor required the con- these con- to cover a wide variety of such constraints planning to reason about in a prototype to important assembly Since leads We focus on representing and reasoning about the geometric in assembly. Assembly tools are implements test parts and subassemblies during the processes of assembly in this sense include manual tools such as screwdrivers and hammers, requirements used to manipulate, of applying attach, and disassembly. robotic items such as laser such as welders and bolt drivers, and a number of other riveters, and part-manipulation traditional robotic cameras, coordinate measuring machines, devices used include these may seem like a diverse group of implements, in more automation. and human they all share in a common way. We call the that allow them to be reasoned about from the need to use various tools in assembly on assembly plans deriving tool constraints. tools various and Tools tooling welders, Inspection eyesight. Although certain aspects constraints or disassembly tools to apply reference constraints in assembly to a canonical tools by whether reference this representation, the tools act. A use volume encodes a minimum We present a framework resulting the tool, and placement constraints determine where frame at the position of required a tool can be applied frame. A particular application the tool acts upon and places the tool’s of to represent and reason about the geometric accessibility in necessary on assembly plans. We begin by they are used before, during, or after mating of the parts space that must be free that tools classifying upon which in a subassembly volume must be placed relative of the tool then defines which parts of a product canonical Given placement that satisfies not collide with any parts in the subassembly. This is an instance of the FINDPLACE problem accessibility their target parts are mated polynomial-time methods assembly of a product, Moreover, extension assembly planning with tools. [ 281. However, a typical assembly planner will make many queries about tool for a single tool application. For tools that are applied either before or after the great majority of tools), we describe for all possible states of tool use. in a given subassembly constraints that are applied after their target parts are mated, we present an to evaluations of a simple expression. to preprocess a single tool application for tools to previous of its use volume exists reducing all later queries only if a and does that guarantees polynomial-time the placement techniques assembly planning includes (which R. H. Wilson /Art$cial Intelligence 98 (1998) 237-279 239 While issues, to geometric accessibility for a tools. We present a number of examples and survey catalogs of limited wide variety of assembly typical assembly standard mechanical tools. We also describe in an assembly planning system and show experiments with a library of over one hundred manual and robotic tools and several complex assemblies. tools to determine how well the approach covers the approach provides coverage an implementation of the approach The next section describes tool constraints. and tivates our approach, previous work addressing work for approach constraints Iplanning assembly Finally, Section 9 discusses open issues, and concludes. are evaluated assumptions and describes the problem of planning with tools in greater detail, mo- Section 3 describes this and related problems. Sections 4 and 5 present our frame- the the results of our tool catalog surveys. Section 7 then shows how the into an Section 6 gives examples for single operations as well as efficiently system. Section 8 describes our implementation represented limitations. of tools using and integrated and experiments. future work and several aspects of the approach, describes 2. Problem and motivation “But “Economy”, lo! men have become 1854. the tools of their tools.” - Henry David Thoreau, We are primarily interested in representing and reasoning about assembly tools be- the assembly process and costly mistakes are of- is demanding the constraints and time-consuming, cause of their impact on assembly plans and planning. Planning for a complex product accurately ten made because in complex geometric enough or quickly enough. Determining situations in the design process unless costly (in time and money) prototypes are fabricated. Automated or partially automated meth- these ods problems. plans would help alleviate tool access constraints cannot be reasoned about and resolved for humans early to reason about tool constraints and assembly :is particularly difficult Althouglh assembly planning about tools, we hope areas where assembly visualization. We believe assembly planning on the tool representation that the framework developed here will be applicable tools are used, such as assembly plan simulation, is our main motivation and application area for reasoning to other and than validation, that at least some of these areas will be less demanding and reasoning methods. 2.1. Assembly planning An assembly is a product consisting of two or more independently-fabricated called pan’s; a subassembly is any nonempty assembly plan for a product transforms of an assembly, assembly planning is the problem of determining plan for it. Closely parts into the finished product. Given a complete description a feasible assembly plans and service plans, is a sequence of motions and manipulations to assembly plans are disassembly pieces, subset of the parts of an assembly. An of the parts that the individual related 240 R.H. Wilson /Artijicial Intelligence 98 (1998) 237-279 the latter being plans for partial disassembly can differ somewhat assembly planning. planning. Most of the methods for these processes, but and re-assembly. The planning techniques in this paper we will mainly discuss and service to disassembly transfer easily In theory, a complete assembly plan down to the factory floor, including it together and full descriptions assembly plans are almost never written down line workers decide process abstractions: they specify the corresponding Automated itself is its only true description. their own body motions complete plan to be determined. planners Instead, includes every detail of the assembly process the motions of all parts, humans, and robots that put of the fixtures, jigs, tools, etc. that are used. In practice, least, the product. The assembly in that much detail; at the very to assemble the assembly plan down to a certain representations of assembly plans are level of detail, and leave assembly therefore must plan they don’t reason about the constraints below their abstraction level of level, abstraction. Because are not feasible. they often produce plans This paper to generate assembly plans in more detail that are therefore more likely to be feasible. Alternatively, the resulting planners will require input in an interactive assembly planning system. are considered, the abstraction hierarchy, as one step further down those constraints for assembly less human that, when is intended at some two rigid subassemblies We will limit consideration to monotone two-handed assembly plans [ 37,391. In an abstract view, such plans consist of a sequence of operations, where each operation Si and S2 in their final relative positions via a mating places assembly trajectory plans. For an assembly with n parts, any monotone plan has n - 1 operations. At a lower level of abstraction, the operations break down into many some of which sub-operations, products are made with monotone two-handed assembly the use of tools. two-handed industrial t. Most involve Disassembly planning is a standard approach assembly plans. The planner begins with the full assembly, that could be placed as the last operation. This to automatically generating monotone and attempts the is called then it partitions each of the two resulting individual parts remain. Although we take this view is compatible with other assembly planning two-handed to find a subassembly partitioning problem. If the planner succeeds, subassemblies, throughout the paper, approaches with some modifications. and continues until the tool framework 2.2. Tool constraints A tool is an implement used to manipulate, attach, in an assembly. We call the constraints from the need to use various tools in assembly or disassembly are important to consider when determining test, modify, or otherwise affect on assembly plans de- tool constraints. an assembly plan for and by tool tool set In some cases, is determined the optimal assembly plan the main goal is to ensure assemblability with a given in a facility or servicer’s tools cannot be used to implement tool kit. a given assembly plan, then a different tools must or special-purpose the product must be redesigned, a part or set of parts riving Tool constraints designing In others, constraints. that is already present a product. If standard plan must be chosen, R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 241 Fig. 1. Special-purpose tools used to avoid geometric accessibility problems while servicing engines from a single manuFacturer [ 21. Photo used by permission of Snap-on Inc. be fabricated. Fig. 1 shows a set of tools whose only purpose is to solve geometric accessibility problems while servicing a particular make of engine. Such special-purpose tools can be quite expensive, especially when they must be distributed to and stored at every in-field service center for the product. Taking tool constraints into account early in product design will help minimize the need for such tools. In man,y cases process engineers find it difficult to determine tool accessibility for assembly operations. This is especially true in cramped spaces containing geometrically complex parts that may interfere with the operation, such as inside the engine com- partment of a modern automobile. The problem is exacerbated by products designed by a large group of designers. Even when humans can accurately determine the feasible uses of tools, automated assembly planners that include tool constraints would produce assembly plans with less human effort, allowing the results to be used earlier and more often in product realization and design-for-assembly. 2.3. Tool-level assembly planning Let a given use of a tool to affect a particular set of parts be called an application of that tool. For instance, an application might be to use wrench2 into block3. We assume that an unordered list of all tool applications required during assembly is given as input to the assembly planner. Note that in this model the tool ap- plications required cannot depend on the order of assembly: we do not allow constraints such as “attaching part A to part B requires tool T only if part C is missing.” We also assume that a tool is used within a single operation, i.e. it is used just before, during, or just after a single mating of two subassemblies. This rules out, for instance, including fixtures in our framework, because they affect multiple operations. to tighten bolt6 242 R. H. Wilson/Art@ial Intelligence 98 (1998) 237-279 is a sequence of part motions for a product the product A tool-level assembly plan that will construct applications include all required is the following: level assembly plan for the product, or determine tool-level assembly plan is an abstraction, lower-level details are considered. tool parts. The plan must tool applications. Then the problem of tool-level assembly planning tool- that no such plan exists. Because a such a feasible plan may of course fail once given an assembly and a list of tool applications, find a feasible its constituent from and The two main questions tool are “When does In our approach, any used?’ it is applied before, during, or after target part set, which determines to accomplish. We give necessary the tool’s geometric together with constraints a basic variety of common ner. representation requirements assembly tool need a tool-level assembly planner must be able to answer about tool be this time (whether the tool application’s is addressed by a tool’s relative to be used?” and “When can the mating of parts) and this the first issue the assembly operations that the tool must be used for the second constraints as a volume issue by representing the assembly, of that volume. This framework provides to a wide constraints that tools and can be efficiently used by an assembly plan- that must be free is applicable in on the placement of tool accessibility 2.4. Limitations of the approach This paper focuses on representing and reasoning about geometric accessibility issues regarding the use of tools. Thus we are mainly concerned with the question “Is there space for this tool to be used?” This is the main question product designers have told us about they struggle with, and we have attempted in a practical geometric the framework does not cover many other questions one might wish to way. Although issue, ask about tools, and in fact does not completely we believe to address it achieves broad coverage and lays the foundation that captures as much of the issue as possible solve the geometric accessibility to design a framework those other questions. for further extensions tool constraints for reasoning Among - Determining the issues we do not address are: applications. Many in the assembly (such as weld points and press fits), or can be inferred easily from the CAD that, feature- is needed to tighten each screw). Beyond tool applications that a screwdriver required tool applications are specified determining a difficult becomes design data (for instance, automatically recognition task. - The tool wielder. Reasoning about the spatial requirements of the agent wielding in particular tool (a robot or human arm, or hard automation) Human hands a whether tool is very complex in this paper are necessary but not sufficient constraints on tool-level assembly plans. is- is beyond flexible, and determining tool wielders) will be able to reach and manipulate considered (see e.g. [25] ). As a result, the tool constraints a task often depends on non-geometric tools can accomplish they (or mechanical are extremely automatically - Mechanics. Which the the scope of this work. sues such as the force that must be applied, accuracy required, expected deformation forces, possible damage to the parts, and so on. R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 243 - Optimal tool-level plans. The desirability factors, including it can be used, and on many which tions. A planner based on our framework to support tools phase. the forces the tools needed to accomplish task, each required, of using a certain tool can depend the speed and accuracy with opera- and following could easily output a list of possible in a later planning such optimization for previous - Tool interaction. There might be two tools required that interfere with each other. We assume independently in the same operation. time can b’e determined sequence) in an operation at the same that the the feasibility of each tool or in of other tools used (either simultaneously - Nonsfandard tools. In some cases a special-purpose tool can be created when stan- tool can be used in a nonstandard way (e.g. dard tools do not suffice, or a standard using a screwdriver to pound a nail). - Design changes, The inability to use a standard tool often suggests that the design to allow such access, but we do not go beyond be changed Some of .the above issues are addressed given below. We believe many of these framework, but they are not the main focus of this work. issues can be addressed in previous work on reasoning this observation. about tools, in the context of our 3. Previotus work “You ought to be able to show that you can do it a good deal better than anyone to bring tools before you have a license else with in your own 1925. Selected Letters, improvements.” (on punctuation), 1981. - Ernest Hemingway the regular The previous work related to representing into five parts: assembly tools, general-purpose tools, and work on estimating are present. reasoning In addition, our approach is based on now standard configuration-space tool constraints and reasoning about sequencing work on “attachments,” about tools, special-purpose can plan- planners the difficulty of fastening operations when about introduced by to representing and reasoning techniques be roughly divided ning for machine for specific obstructions tool acces:sibility Lozano-Perez [ 281. 3. I. Assembly sequencing and attachments The past decade has seen a great deal of research on assembly planning topics (see, e.g., [ 1,19,29] ). Most focuses on graph-theoretic languages for more rigorous and powerful methods and on collision avoidance. However, much of this research points to reason about tool constraints. techniques and related and constraint to a need instance, Homem de Mello and Sanderson For assemblies includes attachments between parts in the assembly, which correspond erations. Each attachment [ 18,201 use a relational model of approach. The relational model to fastening op- a list of the other parts whose presence prevents as the basis of their assembly sequencing contains 244 R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 the attachment from being accomplished. ’ However, [ 18,201 do not address how to determine which parts prevent which attachments. This paper provides a partial an- swer. Henrioud and Bourjault [ 161 use a similar product model, including attachment information. However, their model does not represent parts that prevent attachments; instead, they defer to the expert judgement of an engineer to determine the feasibility of an attachment in a given subassembly. The answer is stored in a database of constraints on the assembly. This can cause many hundreds of questions to be asked of the engineer, some of which can be very difficult to answer accurately in complex assemblies. As a result the system cannot reasonably be applied to assemblies with more than about 20 parts. Miller and Hoffman [ 301 describe a system that requires access space above screws, bolts, and nuts before they can be removed. However, the tests used to determine access are very simple, consisting of ray casting and box tests, and only approximately distinguish between feasible and infeasible tool applications. It is also unclear how these tests could be generalized to other tool requirements. Other assembly planning systems described in the literature either take an approach similar to the above systems, or do not consider tool constraints at all; the author’s previous work in assembly planning (e.g. [ 381) falls into the latter category. Automated and general methods to apply tool constraints would make these systems easier and more accurate to use. 3.2. Machine tools Reasoning about the effects and use of machine tools is a well-studied problem ([33] is a good but slightly out-of-date survey). GARI [9] was an early example of a machining expert system, compromising among pieces of advice to order machining op- erations, including choosing tools to accomplish them. A recent comprehensive system is described in [ 3 11. Practical methods to help generate tool paths and check machin- ing plans have matured to the point that they are now regularly used in commercial CAD/CAM packages such as AutoCAD@ and Pro/ENGINEER’@. However, the constraints applying to the use of machine tools have little in common with assembly tools. Machine tools are essentially subtractive in their effect-always are much more homogeneous than assembly tools, which vary removing material-and widely in shape, purpose, and use. Furthermore, the constraints on machining include such issues as cutting forces, fixturing, satisfying tolerances, and material deformations that rarely appear in the same form in assembly. Finally, machine tools are in the main applied to single parts, rather than assemblies, and do not affect the assembly plan. Note that in some cases a machine tool is applied to multiple assembled parts, such as when parts are aligned then holes are drilled for fasteners. These operations are ’ Note that it is not possible in the relational model to represent, I and 2 together, but not by either alone.” The model could be extended for example, the statement “Attachment to represent 1 is prevented by Parts such constraints, but this does not help to derive them. R. H. Wlson/Artifcial Intelligence 98 (1998) 237-279 245 common tool applied in our approach. in industries such as aircraft construction to assembled parts to be an assembly and shipbuilding. We consider any these cases tool, and hope to handle 3.3. General-purpose tool reasoning and recognition Initial work on an ambitious by Brady et al. [6]. Their system, called “Mechanic’s Mate”, was to recognize from imag;es, determine new tools automatically. However, could be made. See [ 121 for a more recent effort along system to reason about tools and their uses was reported tools and even design the project was canceled before significant progress or from first principles, their uses analogically these lines. 3.4. Special-purpose planners systems have been created to reason about specific tools and plan their in [ 341, the position and approach path are planned for a coordinate- Special-purpose use. For instance, measuring machine. Determining camera related mathematical and bolts fall into this category as well is a tool when used to facilitate or inspect an assembly operation) to aspect graphs in computer vision [26], similarities. Miller and Hoffman’s constraints for a camera (in our definition, a is closely to which our methods have some of screws on accessibility visibility regions [ 301. Robotic grippers are a special case of assembly is quite relevant tools that have been widely studied since to assembly planning, to and hard automation) the need in human assembly (and even ). Grasp planning for our purposes are approaches (see, e.g., [ 13,21,32,35] in robotic assembly grasp parts often determines interesting and task to be performed robotic grippers are within our definition implemeniation, in using a pair of pliers or a robotic gripper hand. in determining that consider the feasibility of assembly mating operations. Particularly environment a grasp for a part, such as in [ 211. Although in our the versatility less a human address (see Section 6), much of tools and we have included the surrounding some the methods of this paper do not adequately 3.5. Quantifying obstructed access Experiments have been performed on the time human workers fastening operations under varying conditions take to execute certain studied and pop riveting, using a variety of tools and under to obstructed access and restricted visibility conditions. [ 51. The operations mechanical include conditions screwing, nut tightening, from normal ranging Diaz-Calder6n et al. [ lo] present progress the dif- in a particular assembly operation. They assign qualitative toward automatically determining ficulty of using a screwdriver costs to thte available access angle, operation angle, and clearance screwdriver, and compare to develop methods accessibility for a wide variety of assembly expect most of the above work to be complementary these to the values given in [ 51. to reason about geometric that can be used tools in a single to our approach. This paper aims issues framework. We for a hand around the 246 R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 Physical Tool Physical Tool Canonical Tool Canonical Tool Canonical Tool Canonical Tool Tool Tool Application Application Tool Tool Application Application Fig. 2. Schematic of the tool constraint representation. Fig. 3. An open-end wrench 4. Representing tools “Intelligence make tools.” - Henri Bergson, L’Evolution Crhztrice, 1907. . . . is the faculty of making artificial objects, especially tools to is divided information information Our representation for tool constraints of any assembly, and (2) independent particular specific assembly. The information parts. A tool’s relative time specifies whether the actual mating of parts in an operation. A use volume is a minimum that must be free in an assembly constraints are constraints on where the use volume can be located relative the tool must act on. Together, tool. This section describes our representation next section describes assembly. into (1) about a tool about an application of a tool in a to a tool consists of the following three the tool is applied before, during, or after region of space the placement to the parts define a c~nonicul in more detail. The tool applications, which specify a particular need for a tool in an three pieces of information tools the tool. Finally, to effectively of canonical apply these This organization is illustrated graphically several canonical tools corresponding cal tool may have many applications is to determine bly plan. Except where otherwise tool. part motions and order to the ways in Fig. 2. A single physical tool may have it can be used, and each canoni- in an assembly. The job of an assembly planner assem- to a canonical the tool applications into a feasible in this paper refers stated, “tool” We will illustrate each piece of the representation with the example of a simple open-end wrench, shown in Fig. 3. Other tool examples are given in Section 6. R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 241 4.1. Relative time of application Tools have very different characteristics depending on when they are applied relative tools into three sets: we divide (and will require different reasoning methods) to when the affected parts are mated. Hence - Pre-tools are tools The best example it with another. that are applied strictly before together. is a glue gun that is used to apply glue to one part before mating the parts are brought - In-tools are tools that are applied while to each other. Examples the parts are being mated, include wrenches, i.e. while screwdrivers, they and are moving robotic grippers. relative - Post-tools are applied strictly after the parts have been mated in the target operation. tools such as welders and riveters are and many fastening inspection, Testing, common examples. The set a tool belongs to is called the tool’s relative time. to determine whether a tool can be applied The criteria S1 or & mated on the tool’s relative depending of the two subassemblies in the resulting feasible since they must be feasible In Section 7 we describe tool. subassembly to apply time. Pre-tools need only be feasible in a given operation vary to one and post-tools need only be S = & U Sz. In-tools are the most complex case, relative motion. to 5’1 and S2 under a particular in the operation, to apply the methods used to determine the feasibility of applying a Because of the complexity of reasoning about in-tools, them as post-tools or pre-tools where appropriate. the wrench it is often desirable to approx- In fact, the wrench example is employed while the bolt is moving, i.e. the process, imate (Fig. 3) is one such case. Although we instead as a post-tool. Section 4.4 discusses represent the operation as if the bolt does not move during this issue in greater depth. be used tool might be usable at different times. For instance, In some cases a single it with a glue gun might conceivably another, but also to apply glue to two parts that are already mated. We will consider tools for these two ways of using that planning can be glue gun on a single workcell handled by grouping physical that group operations using such considerations to apply glue to a part before mating tool to be two distinct canonical tools rather than canonical plans might be desired purposes. Assembly the same physical tool duplication; to avoid relative tools. 4.2. Use volume We represent the spatial constraints on applying in the assembly. The first and most obvious volume is the spatial extent of the tool tools, volumes volume, which for a simple open-end wrench. For some be free in an assembly only obstructions. the space occupied to apply by the welding machine tools as problems of placing certain is the tool to consider the tool volume to the tool: to spot weld two parts with a laser welder, laser beam must be free of itself. Fig. 3 shows the tool volume is all that needs and 248 R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 (a) (b) Fig. 4. Some use volumes corresponding to distinct canonical tools for the wrench in Fig. 3: (a) a d-turn swept volume, (b) two h-turns, (c) a full turn. However, many tools move when in use. Let a tool use volume be a minimum volume that must be free in the assembly for the tool to be applied. For pre- and post-tools, a placement of the use volume must exist in a subassembly such that the use volume does not intersect any parts of the subassembly. For in-tools, the use volume has a more complex meaning: there must be a placement of the use volume in subassembly St such that as St and SZ are mated, the use volume collides with neither St nor S2. For instance, a robotic gripper must not intersect with St (the object it is holding), nor may it collide with S2 as it places St into S2. R.H. Wilson/Ar@cial Intelligence 98 (1998) 237-279 249 For many tools the use volume is the space swept out by the tool as it is applied for the wrench i turn, is raised off the bolt, returns turns a bolt a set of parts. One use volume wrench is replaced, shown wrench ready for another in Fig. 4(a). This is the minimal to tighten a bolt in the standard way. turn. A two-dimensional to in Fig. 3 is the volume swept out as the and is for the to the original orientation, projection of this use volume space that must be free in the assembly Several different use volumes may exist for the same physical different ways of moving it or using will treat these different use volumes instance, bolt & rotation, position bolt axis, ,when the wrench another use volume Still another tightens flips over, turns (see Fig. 4(b)). tool, corresponding it to accomplish for a physical to a task. For planning purposes we tools. For the to its initial is the rotational closure of the wrench about the is the volume the bolt another & rotation, and returns tool as distinct canonical swept out as it turns for the wrench the bolt without detaching (Fig. 4(c)). is removed In many cases, a small volume to avoid intersection with the parts being acted on. For instance, a pure swept volume of the wrench would intersect with the corners of the bolt head. An alternative is to list pairs of features from the use volume and other parts them. and disregard from the use volume to intersect during that are expected the computation, The use volume is usually only a subset of the space that must be free in the assembly the volume the use volume for the wrench does not include to apply a tool; for instance, the tool to the application point, or the space required by a robot or swept out moving human arm. Moving the tool to its application position might sweep out many different volumes, and a human hand is very agile, so in most cases the tool use volume will not include for tool application. represents only a necessary condition this space. Hence the use volume It is also possible to represent represents volume might it; such a volume to apply instance, this “sufficient” the human or robot arm that wields applied, and removed. However, a sufficient volume tool and the configurations present using a motion planning wielder. subassembly. algorithm in a particular a sufficient condition for each tool an upper bound on the space required for tool application. For the space swept out by the tool, plus the assembly, is not unique, since the motion of the it, as the tool is brought from outside include of the wielder might change depending on the obstructions flexible approach to find approach and removal paths for tool and Section 7.1 discusses a more 4.3. Placement constraints Not only does a tool’s use volume need to be placed in a collision-free position in an assembly, but the placement must satisfy other constraints. For instance, a screwdriver’s tip must mate with apply relative frame relative the screw head, and its axis must be close enough torque. The tool’s placement constraints describe to vertical these constraints this canonical to the parts the tool acts on. frame. The tool application to a canonical the required then locates reference to In the simplest case, the tool use volume must be placed at a completely to certain parts of the assembly. For instance, specified a laser spot weld must relative position 250 R. H. Wilson /Artificial Intelligence 98 (1998) 237-279 (a) (b) Fig. 5. (a) A bolt (in black) to be tightened among other parts, and (b) a placement of the b-turn wrench use volume (from Fig. 4(a) ) that allows tightening. symmetric, be welded by a conical beam whose axis is normal is rotationally its geometry completely with the beam bly. to the welded surfaces. The beam so is intersect then the laser cannot weld that spot in that subassem- is irrelevant. As a result, relative to the weld spot. If any parts of a subassembly the use volume placement and the laser head for the laser beam in that position, is never placed the assembly, specified inside consider in the placement tools have some freedom On the other hand, many of their use in Fig. 4(a). The use is aligned with the axis that axis. In other words, the bolt it from any angle. Yet at the chosen angle the tool. if the bolt is not at first aligned with an extremal position of the wrench, position on the first turn. Fig. 5 shows one to tighten a bolt, given a set of other volumes. For instance, the i-turn wrench use volume volume must be placed such that the center of the wrench jaws of the bolt, but it can be placed at any angle around can be accessed and tightened by approaching of access, a certain volume Of course, the wrench will begin possible placement parts as obstacles. The placement (the use volume) must be free in order to apply of the wrench’s use volume are given in a canonical in an intermediate constraints from which is the direction tation the origin of this frame is considered z-axis used as long as the tool application the assembly configuration-space A position techniques and orientation [ 27,281. of the use volume (see below). The placement constraints reference the point of tool application, the tool is applied. However, any convention frame. In our implemen- and the positive can be in can be represented using standard frame correctly the canonical reference places is called a conjgurution, and the set of all configurations space called a con$gurufion space, or C-space. Let C be the C-space of a tool’s use volume, for the tool and let C c C be the subset of C that satisfies (disregarding If m is the of the subset C, then we say that the tool is an m-degree of freedom dimensionality constraints for now the possible collisions with parts of the assembly). form a six-dimensional in its canonical the placement reference frame R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 251 (m-DOF) placements. is completely detaching constrained, making tool. In other words, the use volume has m degrees of freedom the laser spot welder above For instance, specified. The wrench is l-DOE except when (Fig. 4(c) ) , in which case its rotationally-symmetric in its feasible its position is O-DOE because it spins the bolt without use volume can be fully it O-DOE Note that tool degrees of freedom refer to the freedom of placing tool”: during assembly, to inspect certain points, such as solder or weld sites. For a point to either a robotic camera or a human not to the motion of the tool itself. Consider an “inspection may be necessary be visible from inspection angles of incidence inspection during of the inspection is 2-DOF, although neither tool, and has two degrees of freedom the tool use volume, it to inspector, a line of sight must exist for the to the surface. So the the inspector nor the line of sight moves the assembly. 2 The line of sight is the use volume corresponding line of sight with the inspected in placement, to outside inspection. the point tool 4.4. Choice of relative times Although the definition of pre-, post-, and in-tools may seem straightforward, it makes sense to represent a tool with a different several situations when than constrain& is obvious. We have only found examples of approximating One case but other cases may exist. is when an in-tool does not move rigidly with one subassembly there are time in-tools by post-tool relative during the possible operations. Our wrench is used to tighten a bolt or nut; in other the wrench tightened, and as at the end to other parts. Therefore little while being the same at the start of tightening relative to compensate). But our representation in Fig. 4(c)), whereas the tightening, resulting to move with one subassembly throughout the wrench can disconnect the and in the much smaller and the i.e. as a in final position, to the bolt and 4(b). For these reasons, we represent the bolt or nut moves very is almost to manipulate it while it is moving (Fig. 3) falls in this case. A wrench mating, so an in-tool use volume will overconstrain example words, is an in-bool. However, the height of the wrench (the use volume can also be grown vertically of in-tools operation reconnect with a bolt to accomplish less constraining bolt-tighte:ning post-tool. process as applying the use volume the use volume in Figs. 4(a) the wrench volumes requires (e.g. In-tools are the most difficult and expensive (see Section 7). Hence even is constant then a post-tool tools to reason about, and post-tools are if the in-tool moves rigidly with one for all mating paths (for instance when only is often better. This is the it moves with the screw, the the screw always follows representation to act vertically: although is always the same because if the use volume the most efficient subassembly, one mating path is possible), case for a screwdriver constrained space it requires in the assembly the same Ipath while being tightened. *This ignores the possibility that the operator could put their head inside the assembly to inspect. 252 R.H. Wilson/Arti$cial Intelligence 98 (1998) 237-279 5. Tool applications “A tool knows exactly how it is meant can only have an approximate and Forgetting, 1978. to be handled, while the user of the tool idea.” - Milan Kundera, The Book of Laughter The previous tools, which give the section describes our representation constraints on the application of a given tool relative frame. This section describes a tool application, which gives the position and timing of the required tool use to construct an assembly. A single tool might be required many times in a given assembly; one tool application must be specified of canonical to a standard reference for each. The lirst piece of a tool application is simply second piece is a target part set; the tool is applied in the target part set come together transform, simply gives the position and orientation of the canonical in the assembly. Together with the tool representation, information the operations to determine necessary for the first time. The last piece, the canonical tool to be used. The in an assembly plan when all parts the application frame gives all the to apply a tool. to allow one a tool application tool reference are modified in which it is feasible This section concludes by describing how tool applications of a set of possible tools to satisfy the application. 5. I. Target parts specifies An operation target operations by means of a target part set, which requiring use of a tool is a target operation for a tool application. An is a subset that brings all of the for the other parts) St and Sz to make a for an application with target part application is any operation of the parts of the assembly. A target operation including in a single subassembly target parts first time. To be more precise, an operation mating subassemblies larger subassembly set T if and only if S = St U S2 is a target operation (possibly together TCS A TgSS1 A TgS2. (1) of when an attachment is equivalent This condition is activated parts; however, parts seem a more natural way to specify when a large subset of parts is the target. [ 181. His attachments to Homem de Mello’s determination are specified by a set of contacts rather than a set of target operations, especially target part set consists of two parts, where The most common the parts together fasten open-end wrench might be {bolt,parti}, into part I, as in Fig. 6. In this case part2 part collision constraints require (i.e. an attachment). For example, the tool is used to a target part set for the is used to tighten bolt where need not be in the target part set, because are mated. 3 the wrench and part it to be present before bolt s If this were not the case (e.g. if part2 were a U-shaped electrical connector), a good assembly plan might place bolt in part 1, then add part2, because assembly while sequence, but applying it is tightened. the tightening must happen after part2 finally tightening bolt. Here the target part set should include partl, this is a nonmonotone the bolt needn’t move is present. Note that strictly speaking, that makes a wrench a post-tool, the same reasoning R.H. Wilson/Art$icial Intelligence 98 (1998) 237-279 253 ._ Frame t bol part2 part1 Assembly Reference Frame Fig. 6. Specifying an application of the wrench: the target part set is {bolt,partl} transform positions the wrench’s canonical reference frame within the assembly. and the application a nut onto a bolt might require Tightening with the same target part set {nut, bolt}), screwing, and gluing operations Welding, two simultaneous wrench applications (each one to hold the bolt and one to turn the nut. also apply to two parts in most cases. However, part sets sometimes than testing or inspection operation, where the subassembly operations present is checked in the subassembly, include more for quality. two parts. A common resulting from previous assembly case is a In most cases, parts that are not being tested may be as long as they do not interfere with the test. information some additional involved subassembly in an operation is required. For pre-tools, For pre-tools and in-tools, Note that this representation includes P is the identified it identifies which subassembly the primary part for a glue gun application this the tool is applied identifies which of the two subassemblies to. For in-tools, the tool moves with. We implement this as a primary part P, which must be a member of the target part set. Whichever for the pre-tool or in-tool. For subassembly is the part to which glue is applied. example, assembly plans, for nonmonotonic to others in the the tool might need to be the since it assumes every part is placed subassembly re-applied first or second for other cases, such as when two parts are fastened only after adding other parts (for fit reasons, tool applications the target part set representation to use easily. or it might only need to be applied into its final position with respect If a part were moved again, time (e.g. for a subassembly for instance). However, test). The representation handles most assembly a screw, for instance), is not specific enough and is simple enough and never moved. is also inadequate (to re-tighten adequately 5.2. Application transform An application’s target part set specifies when a tool needs to be used; the application must specify where the tool must be used. This is accomplished in addition, simply 254 R.H. Wilson/Art@cial Intelligence 98 (199%) 237-279 the tool’s canonical reference frame in the correct position and orientation by placing relative placement the real constraints reference different corresponding to the assembly. We call this relative position the application constraints of the tool can be transformed by the application transform. The to get transform in this application. For any subassembly with a the it is straightforward to determine on the use volume frame from the whole assembly, transform within application For example, the application the subassembly. for the wrench has its origin at the base of the head of the bolt, with the positive z-axis pointing out of the bolt head and parallel for the wrench are with symmetric that axis is arbitrary. the bolt’s axis, as in Fig. 6. Since its z-axis, the rotation of the application the placement constraints transform transform about about 5.3. Alternate applications box wrench, of tool constraints, In many cases, an operation can be performed by more than one possible tool. For a bolt can be tightened with an open-end wrench, a socket wrench, a socket form to accomplish a to specify a list is in the opera- instance, driver, a ratcheting of disjunction task alternate applications. This simply of possible the action, feasible tion. these possible ways requires each tool application than a single rather tools tool. The application is feasible and many other choices. This if at least one of the possible in an operation is a restricted and we call to execute tools Allowing alternate applications has no effect on any of the results to follow. For clarity of presentation, we will not emphasize and tested them (see Section 8). that conjunction of tool constraints, Note tightens a nut, is already supported. However, that if each tool can be applied individually, the case: sometimes tools interfere with each others’ operation. the problem could be solved by simultaneously interfere. However, in practice that might them. However, we have implemented such as requiring to hold a one wrench framework the current then both can be used together. In placing all of the use volumes this solution will be computation- In our experiments the problem of interfering use volumes has not is not always bolt while another assumes This theory, for tools ally appeared. impractical. 6. Tools covered “My own experience tobacco, at Work, 1958. food, and a little whiskey.” has been that the tools I need for my trade are paper, in Writers - William Faulkner, interview Our representation of geometric tool constraints is designed a large variety of common low reasoning special-purpose assembly about many assembly algorithms. tools tools without In this section we present evidence in a single implementing framework. The goal to achieve coverage of is to al- a large number of that the representation R.H. Wlson/Artij?cial Intelligence 98 (1998) 237-279 255 Fig. 7. The use volume for a screwdriver. achieves broad coverage. First we give a number of example tools and describe how to represent them in the framework, as well as some tools that resist being adequately represented. We then present two informal surveys of typical assembly tools, determin- ing such factors as the percentage of tools judged to be adequately covered by our approach, and the distribution of tools into relative times, degrees of freedom, and other factors. 6. I. Examples Following are some example tools and descriptions of how their accessibility con- straints might be represented using the above framework. Some tools can be used in more than one way; remember that a distinct canonical tool represents each way of using a physical tool. Open-end wrench. The open-end wrench has been covered extensively in the previous section, with the placement constraints allowing either I-DOF (for the i-turn and h- turn use volumes in Figs. 4(a) and 4(b)) or 0-DOF (for the full-turn use volume in Fig. 4(c) , which is rotationally symmetric). Note that in some cases a wrench is applied at an angle out of the xy plane to avoid a short obstruction. This constitutes a 2-DOF use. However, the use volume is not only placed out of the plane, but changes shape slightly due to this rotation, which cannot be handled exactly in our framework. For small angle use volumes (such as the A-turn) and small angles out of the plane, a single volume is an adequate approximation. Screwdriver. The most natural way to apply a screwdriver is from directly above the screw. Because the use volume is rotationally symmetric about the z-axis, this is a 0-DOF post-tool. The tip is cut off the use volume to avoid intersection with the screw (see Fig. 5’). All screwdriver types (slotted, Phillips, hex-head) are handled the same way; a nut- or bolt-driver is the same with a slightly different use volume. A power 256 R.H. Wilson/Artijcial Intelligence 98 (1998) 237-279 screw- or bolt-driver are present, angle encoded by the placement the nonsymmetric power tool). that is not symmetric about the z-axis the screwdriver might be angled slightly is l-DOE When obstructions from vertical, with a maximum constraints; this canonical tool is 2-DOF (3-DOF for Hammer. Since a hammer does not move rigidly with the nail, we model tool, i.e. the space required The use volume use volume has one degree of freedom: are similar. manual striking it as a post- then strike it after. is the volume swept as the hammer rises over the nail and strikes. This the nail is struck. Other the side from which is that to place the nail in final position implements Laser welder. As described laser welder its use volume is dependent laser spot weld applications in Section 4.3, a laser spot welder is a 0-DOF post-tool. A because by a set of It can be approximated in our representation, on the part geometry. evenly spaced along the curve. that tracks a curve cannot be fully modeled Resistance welder. A resistance welder uses two pads to contact on both sides, so it is a post-tool. The use volume tool, and it has one degree of placement all tools, successfully the welding position. A manual pop riveter joined metal pieces is just the volume of the welder end the spot to be welded. As with that the welder can reach this volume does not guarantee freedom around is very similar. placing Glue gun. A glue gun used pre-tool, depending spreading number of point applications. on whether tool used to place adhesive on a curve or area must be approximated to place a drop of glue on a surface the gun is rotationally is a 2- or 3-DOF symmetric. A glue gun or other by a Inspecting is simply a 2-DOF and Visual inspection. to the the use volume point of inspection. Robotic cameras often require placement directly above the point of inspection, the results of an assembly operation in which case they are O-DOE line of sight (slightly widened is a post-tool, to a cylinder) tip that Coordinate measuring machine. A typical CMM has a rotationally can reach a point from a number of discrete angles. To be exact, each angle setting could be modeled as a distinct 0-DOF canonical as problem continuous, to resulting the special-purpose CMM planning can be taken at any point on a given face, our representation does not suffice, since in this case the placement a single 2-DOF post-tool will suffice. Note that the FINDPLACE constraints depend on the shape of the face. to a computation if the measurement reduces in [ 341. However, tool; if the angles are instead approximated the 2-DOF case (see below) very similar symmetric from Drill. Although drills are usually used in machining are aligned and then drilled for fasteners. Here the drill becomes an assembly use volume is a vertical sweep of the drill, and one degree of freedom around in some cases parts tool. The the hole piece parts, R. H. Wilson /Artificial Intelligence 98 (1998) 237-279 251 exists for access. 4 A drill can be either a post-tool are mated) or a pre-tool target part set). (if the fastener is considered (applied after the two drilled parts a part and is a member of the Note that the difficult cases above are tools whose placement (e.g. a CMM measuring (a curve-tracing on the application the application the tool surveys below. We have chosen broad limitations. cov(erage, but laser welder). We will see more of these cases constraints depend a face) or whose use volume varies with in and these for simplicity address that partially representation the current in Section 9 we discuss extensions 6.2. Tool survey tools an informal and reasoning We performed in this paper cover standard survey of two listings of assembly to assess how well the representation tools used techniques in assembly. The listings surveyed are a recent Snap-on Catalog [2] and the Reader’s Digest Book of Skills & Tools [ 111, both of which cover a variety of manual and power tools used and inspection robotic tools that would be tools used for general purpose and service used on an assembly than most work will generally be more flexible, and hence more difficult such tools. Hence we believe in this paper. of the methods in assembly, The listings do not cover such tools as visual these surveys give some evidence of broad applicability above, nor do they cover some high-speed line. However, manual tools mentioned to represent, The surveys were not rigorous is subject constraints for several reasons. First, a representation to the ingenuity of the person creating of a tool’s accessibility the representa- tion, and less-common ways to use a tool might not be noticed or captured. For instance, as noted above, a screwdriver might be seen as 0-DOF or 2-DOF, and in some cases a use volume can encode more or less of the accessibility the tools, and the Book of Skills & Snap-on Catalog contains to similarities of Tools contains hundreds, which were grouped the Snap-on Catalog contains perhaps one hundred use and representation. ratchets in the survey that have similar use volumes, degrees of freedom, and functions. This into ten types the author of grouping this paper performed (and even more sockets and attachments) which were grouped and hence skews the results of the survey. Finally, imparting an explicit source of bias. in the survey according For instance, is subjective In addition, the survey, constraints. individual thousand several The results of the two surveys are summarized tools were skipped, since each use is represented by a single other tool, and only tools that might in reasonably be used in assembly were considered. Results are shown for each listing in Table 1. Combination 4 In practice, many assembly models consist of the piece parts in their initially fabricated form, rather than their final assembled form. For a part drilled after assembling with other parts, such parts will usually not have the holes modeled. If this is the case, a swept use volume for the drill would intersect with the parts, causing the planner to decide the drill use is not feasible. To solve this problem, the use volume should not include the space that would intersect with the drilled parts, yet should still include the volume on the “other side” that the drill tip enters; another solution lists features that are expected to intersect and ignores them. 258 R. H. Mlson/Arti$cial Intelligence 98 (1998) 237-279 Table 1 Summarv of data from informal surveys of assembly tool listings Data set Tools Covered Relative time Degrees of freedom Snap-on Catalog Book of Skills & Tools Full Mech Full Mech lnsp 45 37 87 19 16 32 28 50 16 10 Pre In Post 1 0 7 0 2 1 0 1 0 0 32 28 44 16 8 0 7 7 14 4 4 2 7 5 7 1 1 15 13 27 9 420 3 3 3 2 2 >3 0 0 0 0 0 those full, plus several subsets: and tools which are mainly those mainly used for inspection. Each line shows the total number of tools in the data set and the number to be adequately using the methods of this paper. The covered tools are further broken down representable tools could be used at more than one by relative tools. The largest relative reasonable number of degrees of freedom was identified time, so those columns do not sum to the number of covered time and degrees of freedom. Some that are “covered” by our approach, for mechanical for each tool. i.e. judged assembly, Roughly, our representation achieves adequate coverage of 71% of the Snap-on in the Book of Skills & Tools. When is 76% and 84%, respectively. Overall coverage and 57% of those the coverage bly tools, Book of Skills & Tools because alworking, relatively Catalog. simple and common, The most common reasons it includes many electrical work, masonry, etc. However, so coverage of that subset limited to mechanical tools, assem- is lower in the tools used for woodworking, met- tools are its mechanical assembly is higher than in the Snap-on and variations constraints at any point along its length; our representation independent Even more complex placement must constitute cannot of the application, whereas represent. is a pair of pliers, which tools could not be represented were variations in placement in use volumes. For instance, a pipe wrench can grip a pipe to be requires the placement constraints length depends on the application. the pipe’s a stable grasp of a part, which our placement constraints is essentially a grasping device: its is a pair of calipers. The volume An example of a variable use volume that depends on the area to be painted. Moreover, some very flexible they occupy requires a free tools in the that vary not only depending on the application but joints they are applied, such as tools with universal ratcheting box wrench shown in Fig. 8. Section 9 discusses extensions constraints that can handle some cases of variable placement depends on the size of the measured object. Similarly, volume Snap-on Catalog have use volumes also on the subassembly in which or the T-handle to the current and use volumes. 5 a paint brush framework 5 Note that a ratchet with a single universal joint, although an articulated tool, can be represented tool applications: one of a socket, and one of a disconnected is 0-DOF, hence the handle volume can be constrained in the ratchet handle. to meet a point in current framework as two required This is possible because space at the end of the socket. the socket R. H. Wilson /Art@cial Intelligence 98 (I 998) 237-279 259 Fig. 8. A T..handle ratcheting box wrench [2]. Push-pull operation enables use in subassemblies without enough lateral swing area to use other wrenches. Photo used by permission of Snap-on Inc. Also note in the table assembly. This mechanical well as the possibility is also fortuitous, efficient for post-tools. the preponderance of post-tools, particularly is due to the large number of tools used for fastening, as post-tools where appropriate. of approximating the reasoning in-tools techniques because in the following in the area of as It section are most 7. Planning with tools is the answer which “Hers tools, and we will finish the job.“- Winston Churchill I will give to President Roosevelt . . . . Give us the is a very of applying and show how to accomplish This sec:tion describes how the tool representation in assembly operations tools feasibility that an assembly planner has generated a possible operation tool constraints, approach more efficient methods a simple expression subassemblies a fast evaluation with previous disassembly-based po1ynomia.Ltime inefficient way that apply can be determined to structure to certain the tool application assembly planning. in polynomial is feasible, techniques in which planning above can be used to determine and plans. We begin by assuming that must be tested against the this test. However, this generate-and-test an assembly planner, so we examine types of tools. For pre- and post-tools, those to time that encodes exactly so that future tests reduce can be integrated in an efficient way that guarantees of the expression. Moreover, post-tool constraints 7.1. Tool jhasibility Consider an assembly operation mating to make a larger subassembly T. We wish to determine whether or T c S;!, then tool constraint parts are not yet present at the end of the operation, t S = S1 U &, and a tool application with target part set If T C S1 so the if T $Z S, i.e. all the target again does not in building to this operation. Similarly, either S1 or S2 respectively, the tool was applied the tool constraint. then the constraint S1 and & along does not apply the operation subassemblies trajectory satisfies 260 R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 apply to this operation. is a target operation applied. This computation A tool can be applied If on the other hand Eq. (1) from Section 5.1 holds, for the application, and we must compute whether then this the tool can be depends on the tool’s relative time. in a given subassembly that obeys the application’s placement only if there exists a placement of the and does not inter- tool’s use volume then it is applied after sect with any parts of the subassembly. in S, the subassembly the subassemblies created when the parts are mated. If instead then the application’s primary part P must be a member of either Sr or S2. If P E Si, then the use volume must be placed If the tool is a post-tool, are mated, so the use volume must be placed the tool is a pre-tool, constraints placement of a use volume U in a subassembly instance of the FINDPLACE Finding straightforward define a subset C of the use volume’s configuration is n-DOE conj&uration configurations we compute the “free” region of C-space then C is an n-dimensional obstacle O”(P;:) of Pi with respect of U in which U intersects with Pi. To solve the FINDPLACE space that satisfies them; if the tool subset of the C-space. For each part P;: E S, the to the use volume U is the set of all problem, [ 281. The placement constraints problem S is a in Si. a collision-free FREE = C \ U Ou(Pi) P,ES then no collision-free and the tool cannot be applied is empty, constraints, all the C-obstacles given by subtracting straints. 6 If FREE placement FREE is not empty, then any configuration volume, and therefore details. Note FINDPLACE that alternate problems. In a fixed-dimensional the tool can be applied tool applications exists the placement from the region satisfying placement in the subassembly S. However, con- the if in FREE is a valid placement of the tool’s use for further independent in the operation. See [27,28] simply give rise to multiple that satisfies C-space, FINDPLACE can be solved in time polynomial in the total number of surfaces describing the parts, use volume, and placement constraints [ 71, as long as the surfaces are all algebraic of bounded degree. By computing directly in the n-dimensional constraints, tools, only one configuration this computation satisfies the placement constraints, test between to an intersection the use volume and the parts. See [ 211 for a good example of practical FINDPLACE calculations can be even more efficient. For 0-DOF reduces in low-dimensional manifolds of C-spaces. of the C-space defined by the placement and feasibility submanifold Theorem 1. The feasibility of an operation mating a pre- or post-tool constraint can be determined of surfaces describing constraints. placement the parts of the subassemblies in time polynomial two subassemblies with respect to in the total number and the tool’s use volume and A subassembly and feasible placement for the i-turn wrench use volume are shown in Fig. 5. ’ Here “\” stands for the set subtraction operation. R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 Finally, suppose that the tool is an in-tool, and assume without the primary part P E SI. Then a placement of the use volume satisfies three constraints simultaneously: loss of generality in Si must be found 261 that that satisfies l the placement constraints l the placement does not intersect any parts in Si, and l the use volume, moving rigidly with Si along the tool’s placement in St, the mating trajectory t, does not collide with any parts of Sz. involving Determining an in-tool can still be reduced effort, Consider t; conceptually feasibility of an operation problem with some additional the negative of trajectory FINDPLACE sweeping & along of S2 if 5’1 and S2 follow use volume at the endpoint of its motion along 1. Hence we use this new constraint third constraint that it satisfies motions involves to a the volume V defined by is the motion the same relative motion as in t, but Si is held fixed. The intersects V in place of the problem: place the use volume such and does not intersect Si U V. For some if t computing V is relatively computing V can be very difficult above, resulting the tool’s placement t., such as a single rotations or many in a FINDPLACE constraints t will collide with S2 if and only if the use volume simple. However, this negative in practice. following translation, translations, in Section 4.2, the use volume As mentioned to apply a tool; for instance, the volume swept out moving is usually only a subset of the space that the use volume for the wrench must be free in the assembly does not include the tool to the application point, or the space required by a robot or human arm. Determining whether an approach or removal path exists for the tool wielder are Iof the FINDPATH problem instances expensive than FINDPLACE. A motion planner to plan approach and removal paths for tool and wielder; the goal for the approach path. the use volume determine [ 27,281, which is in general more computationally [ 8,24,25] ) could be incorporated for the tool, and planning manipulation motions the placement constraints (e.g. for 7.2. Prep,rocessing pre- and post-tool applications During the course of assembly planning, particular assembly planner, a single very large number of operations. Using a great deal of similarity between place the same use volume, with the same placement constraints, sition to all the parts, but with differing sets of parts present with differing mating cation with respect swered very quickly. Although not asymptotically in the worst case, the following PLACE Instead, such that every feasibility trajectories). to its assembly, it is possible technique and depending on the approach tool application might be tested for feasibility the above approach will work; however, these many FINDPLACE problems. Each attempts taken by the in a there is to in the same relative po- (and in the case of in-tools, to preprocess each tool appli- test thereafter can be an- faster than the repeated calls to FIND- is potentially much faster in practice. tests for pre- in sub- Feasibility the use volume be placed The preprocessing reduce is based on the following observation. to a question of the form “Can or post-tools assembly S?” (in-tools the use volume inter@-ence set, The tool can be applied the interference are considered set. To preprocess a tool application in the next subsection). In a given configuration, in any subassembly called an that contains no parts from for an assembly, we compute a set intersects with a certain subset of the parts of the assembly 262 R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 of all its interference a subassembly in S. Consider that satisfies all parts in the assembly tool can be applied set. sets in the given assembly. Then the tool application S if and only if at least one of the interference in sets is completely missing is feasible first the 0-DOF case. A 0-DOF its placement constraints, tool application has only one configuration that intersect with the use volume so it also has only one interference set: the set of in its required placement. The in any subassembly that has a null intersection with the interference A tool with more than zero degrees of freedom has an infinite number of configu- that satisfy its placement is in the C-obstacle 0” (Pi), if and only if the configuration the C-space of the use volume constraints. A part Pi is in the interference set as long as they do not cross a C-obstacle boundary intersects with Pi in that configuration. Hence nearby configurations rations configuration volume same interference in the assembly. The boundaries of the C-obstacles of all the parts of the assembly divide set is the same for all configurations the surfaces of the parts and use volume are algebraic of bounded degree, of cells in this subdivision point can be found of polynomial in each subassembly, into a finite number of cells, and the interference in a single cell of this subdivision. Again assuming the number in the number of surfaces, and a representative set for a i.e. if the use have the for some part sub- in each in polynomial size. If the planner needs that allows application set. can be stored with each interference time [4]. The set of interference to know the placement a configuration is polynomial sets is also Note that if alternate tool applications exist (i.e. the task could be accomplished by independently with no than one tool), each alternate application is preprocessed more additional complexity. Figs. 9(a) and 9(b) show a l-DOF wrench application in ray from the use volume’s origin has to tighten a bolt (shown angles of the use volume. The one-dimensional to illustrate placement that satisfy in Fig. 9(c) . The cells of the subdivision black), using a i-turn use volume. A reference been attached set of configurations shown the interference of the reference The use volume interference in a configuration sets for this wrench application can be mapped onto a circle, in this case are intervals of the circle; is shown. The boundaries of the intervals are angles set for each interval ray where the use volume either starts or stops intersecting with a part. So the set of is shown on the boundary of O&B). is the placement constraints {{A}, {A,B}, {B}, {KC}, {B, C, 01, {C, D}, {D}, {R E}, {E}, {A, E}}. The wrench can tighten part sets. the bolt in any subassembly that is missing at least one of those In most cases, the set of interference is redundant and can be simplified. set II is a subset of another set 12, then I2 need not be kept, because that does not intersect with 12 also does not intersect with Ii. For sets computed the interference sets for the wrench application above can be simplified to If one interference any subassembly instance, In assembly, the limit, when a collision-free placement exists for the use volume in the full then one of the part sets is empty, and therefore a subset of all others. R.H. Wilson/Artificial Intelligence 98 11998) 237-279 v-1 Fig. 9. Preprocessing a wrench application: (a) the use volume, (b) the bolt (in black) and other parts of the assembly in the plane of the wrench motion, (c) the subdivision of the circle of use volume placements, with corresponding interference sets. 264 R. H. Wilson/Artificial Intelligence 98 (1998) 237-279 It might be possible to use this observation to compute only the subset of the subdivi- sets are minimal. For instance, any cell in the subdivision sion in which the interference with a neighbor clear how to take advantage of this fact, but a similar concept yielded performance implementation cell covered by fewer C-obstacles need not be computed. in [ 141. benefits It is un- and 7.3. Pre-processing in-tool applications The feasibility of a pre-tool or post-tool application only depends on the subassembly in which the tool must be used. On the other hand, the feasibility of an in-tool depends trajectory, making preprocessing much more on two subassemblies difficult. We believe polynomial-time for simple mating trajectories t, but it is unlikely is still possible to be practical due to its complexity. the set of all mating is one approach. Suppose The following preprocessing their mating plus infinite single the above approach for the mating translations trajectories can be in 3D can be repre- to in-tools, we add d dimensions trajectory parameters. A point of the use volume and a mating in this trajectory. We this space into cells such that for all points within each cell, the possible and that can be mated with from the feasibility of a feasibility given in Section 7.1. To determine use volume placement the corresponding trajectory are constant. The boundaries of these cells must be derived both a configuration described by d parameters. For instance, sented by two angles. To extend to the C-space of the use volume space represents then subdivide subassemblies mating three constraints on in-tool particular operation, to determine whether ments. As noted above, approach make it unattractive. the subassemblies the implementation the subspace given by the operation’s mating is traversed can be mated for any of the use volume place- and run-time complexity of this complexity trajectory 7.4. Polynomial-time assembly partitioning with post-tools that guarantees polynomial-time assembly planning trajectories, sequence In [ 36,381 a method is described level of abstraction. Assuming simple two-handed a monotone subassembly, i.e. identifying blocking graph or NDBG types of mating assembly the for an central step solves in which no parts collide. The algorithm’s a removable at a certain method finds (through disassembly) assembly of polyhedra, the partitioning problem, of a non-directional feasibility tool constraints, the constraints. the NDBG approach The technique can also be used with other disassembly [ 3,16,17,20] the NDBG approach next subsection assembly planning with post-tools. but they do not give an efficient way to generate operations In this subsection we describe how tool constraints the tool- tests described above allow us to determine whether a given operation satisfies that satisfy can be merged with assembly partitioning with post-tools. (e.g. are different. We first summarize then show how post-tools are added efficiently. The that recursing on the subassemblies for the assembly. Meanwhile, the details of the integration to achieve polynomial-time results in polynomial-time through construction based planning to partitioning, ), although approaches shows R.H. Wilson/Art$cial Intelligence 98 (1998) 237-279 265 Problem allowable mating trajectories, that the operation mating S with A \ S along no such subassembly :L (Assembly Partitioning). Given an assembly A of polyhedra and a class of t in the class such identify a subassembly S and trajectory If t causes no parts to collide. S exists, report failure. trajectory translations In general, the NDBG approach requires by a finite number of parameters. Examples include single and paths consisting these examples appear amenable besides mating trajectories since the same technique that mating that have been worked out in full detail [ 381, rotations and translations types of motions the class of t is such a class, but will not refer to the type of trajectory directly, to all, differing only in implementation [ 151. However, other to the approach. We will assume to infinity and infinitesimal translations be parameterized of multiple trajectories details. applies exists Let A == {PI, . . . , P,,} be an assembly of polyhedra. A blocking graph of A for a t is a directed graph with a node for each part of A and an arc from Pi to Pj trajectory if and only if Pi will collide with Pj when moved along subassembly S1 is blocked by no other parts, i.e. no arcs connect parts in S1 to parts in Sz = A \ SI. Such if and only if the blocking graph for t a subassembly is not strongly connected. The non-directional blocking graph of A is a subdivision of t into cells such that all trajectories within a cell have the the space of all trajectories of the blocking graphs for same blocking graph. By checking in subassembly all cells, al removable polynomial plan is found for the product. the strong connectedness can be found time. By recursing on the subassemblies (at most n - 1 times), an assembly (and can be found easily) (or failure returned t. A removable if none exists) Now as,sume we have a list of tool applications to find an operation want none exists. When Partitioning problem. that mates two subassemblies the tool applications are limited required to assemble A, and we to make A, or determine that to post-tools, we have the Post-Tool for A, and a class of allowable mating Problem 2 (Tool Partitioning). Given an assembly A of polyhedra, a list of tool appli- identify a subassembly S and cations t trajectory causes no parts to collide and satisfies all tool applications S exists, report failure. t in the class such that the operation mating S with A \ S along trajectory for A. If no such subassembly trajectories, for A, and a class of allowable mating Problem 3 (Post-Tool Partitioning). Given an assembly A of polyhedra, a list of post- tool applications identify a subassem- t in the class such that the operation mating S with A \ S along bly S and trajectory for A. If no such trajectory subassembly t causes no parts to collide and satisfies all tool applications S exists, report failure. trajectories, A post-tool application with target part set T imposes the following constraint on an operation 0 that mates subassemblies S1 and SZ to make A: “If T is not a subset of either S1 or S2, then the use volume must be placed A.” in 266 R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 Because we know A but not Si or S2, we instead use the contrapositive: “If the use volume cannot be placed in A, then T must be a subset of Si or Sz.” In other words, if the use volume cannot be placed in A, then any subassembly from A must include all or none of the parts in T. removed are infeasible To keep T together arcs between a pair of parts places in T. If many post-tool applications in a blocking graph, we add bidirectional arcs between every pair in A, we do the same for of parts those parts the target part set of each. Bidirectional of the blocking graph, so that they cannot be split. We in the same strong component call this the augmented blocking graph of t; its edges are a superset of the edges of the blocking graph of t. We call the standard NDBG with all augmented blocking graphs a is correct post-tool NDBG. The standard NDBG algorithm applied it and complete will produce a removable or correctly subassembly report that one does not exist. for assembly partitioning with post-tool constraints. the post-tool constraints, to a post-tool NDBG that also satisfies In other words, trajectory t. Because To see this, suppose first that the NDBG calculation from S2 = A \ SI along connect Si to & in the augmented blocking graph of t. This implies Sr collide with parts of Sz along target part set T is strongly connected be a subset of either Si or &. Therefore target operation collision finds a subassembly Si removable is correct, no arcs that no parts of in A, the for any infeasible post-tool in the augmented blocking graph of t, so it must the operation mating Si and S2 is only a satisfies both tool and part for feasible post-tools. Hence the NDBG calculation t. Furthermore, the operation constraints. Conversely, in A, or 0 is not a target operation assume an operation 0 mating Si with S2 along t to make A is collision- free and satisfies all the post-tool constraints. Because no parts collide, no arcs connect Si to S2 in the blocking graph of t. In addition, is either feasible the above algorithm places no added arcs in the blocking graph of t. If 0 is not a target in Si or S2. operation In each case, no arcs connect St to S2 in the blocking graph of t, and therefore it is not strongly connected. Hence and by the previous paragraph, By Theorem each post-tool for it. If the application the NDBG calculation will find an operation7 then all added arcs are included completely is guaranteed of each post-tool that operation 1, the feasibility for the application, can be determined to be valid. is feasible, application the corresponding time. Adding by the NDBG computation polynomial dominated in the bound depend on the class of mating and the degrees of freedom of the tools; however, both these sources give small constant exponents. We now have the following in the NDBG [ 381. The exponents time, which trajectories theorem. application arcs to blocking graphs is polynomial in is Theorem 2. When the class of mating post-tool NDBG algorithm number of surj%aces describing the in the total the parts, the use volumes, and the placement constraints. solves Post-Tool Partitioning to NDBG analysis, in time polynomial is amenable trajectories 7 Note that the operation found is not guaranteed to separate S1 and S2, but this is not required. R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 267 Note that this theorem holds equally well when alternate applications (Section 5.3) are allowed. We have been unable to prove a similar result for pre- and in-tools. However, twice: once requiring similar the NDBG computation to the above. This case is more common target part sets are the norm, and pre-tool applications case of a small number of 0-DOF pre-tools with 2-part with an approach since 2-part each pre-tool, we run be a target for the tool, and once requiring target, we connect we modify not be strongly connected, the other target part and from the parts in the interference This modification not be covered of pre-tools number of pre-tools tools. the target part set with arcs as above. When to not only require in more detail here. Because we must choose the blocking graph calculation and thus only useful it not to be. When but also to require this approach the operation is a target, for which considered the target part sets can be handled than it might seem, are uncommon. For to the operation is not a is a target, the operation that the blocking graph from the operation set of the tool application. in advance a combination in the for a very small number of pre- is exponential relies on the details of the blocking graph analysis [35], and will that the primary part is separated 7.5. Assembly planning with tools is found Once a single operation to construct an n-part assembly A from two sub- until only assemblies, we can apply Tool Partitioning single parts are left. Reversing in an assem- bly plan that satisfies part collision and tool constraints. Exactly n - 1 Tool Partitioning problems must be solved. the direction of this disassembly to the subassemblies, tree results recursively But what do we do when no operation can be found to build a particular to backtrack assembly? Do we have vious subassemblies? We will prove here any subassembly with tools implies isfies all constraints. In particular, collision ctonstraints are considered, time. and consider different operations that the answer is no: failure that no plan exists for the full assembly this implies assembly planning that when only post-tools can be performed sub- to build pre- to partition that sat- and part- in polynomial Problem 4 (Tool-Level Assembly Planning). Given an assembly A of polyhedra, of tool applications sequence to collide, ure. for A, and a class of allowable mating its individual If no such sequence a list trajectories, a parts, causes no parts fail- that constructs A from the tool constraints. of operations and satisfies identify exists, report applications Problem :5 (Post-Tool Assembly Planning). Given an assembly A of polyhedra, of post-tool a sequence of operations to collide., and satisfies ure. for A, and a class of allowable mating that constructs A from a list identify parts, causes no parts fail- its individual If no such sequence the tool constraints. trajectories, exists, report 268 R. H. Wilson/ArtQicial Intelligence 98 (1998) 237-279 To see that no backtracking is required in tool disassembly planning, assume that there exists a tool-level S G A can be assembled, S from two smaller superassembly S’ = S{ u S{ such that assembly plan for a product A. Then we claim that any subassembly to assemble that creates a the first operation S’ 2 S. In other words, find the operation 0’ mating S{ and Si to make an operation 0 in the plan it by constructing subassemblies. and prove Find scs’ A s&S: A s&S;. in the plan will satisfy Exactly one operation operation 0 that is the same as 0’, but limited S:! = Si n S along neither can be empty. Furthermore, two subassemblies mated are subsets of those mated by 0’ and they follow trajectory. an in S: mate St = S{ fl S with to make S. Neither St nor S2 can be equal to S, so the the same this condition. We now construct to parts can be caused by 0, because the same trajectory no part collisions Now consider any tool application for A, and let T be the application’s We claim is 0. If 0’ is not a target operation, that if operation 0’ is not a target operation for the application, then Eq. (1) tells us that target part set. then neither TgS’ V TCS; V TCS;. If T g S’, S & S’ implies that T $Z S, so 0 is not a target operation either. If instead T is a subset of S{ or Si (assume Si ), then there are two cases. If T g S, then 0 is not If T C S, then T 2 S1 = Si n S, so 0 is again not a target operation. a target operation. In all cases, whenever operation 0’ then neither is not a target operation for the application, is 0. Finally, suppose 0’ is a target operation for the application. Because 0’ is feasible, there must exist a placement of the tool’s use volume such that it collides with no parts (i.e. S’ for a post-tool, Si or S; for a pre-tool, and both in the relevant for an in-tool). Because Sr C Si and S2 & S$, the same placement of the use volume is valid for 0 as well. subassemblies We have constructed an operation 0 that builds an arbitrary to collide or violating causing parts to the two subassemblies mated by 0, and so on. This means sembly planner need never backtrack, because for any subassembly a plan exists corollaries. of it. We now have the following any tool constraints. The same reasoning if a plan exists for the assembly, subassembly S without applies that a tool-level disas- then two result and Theorem 3. If a tool-level assembly plan exists for an assembly A, then a tool-level assembly plan exists for any subassembly S C A. Corollary 4. Tool-Level Assembly Planning can be solved by n - 1 applications of an algorithm that solves Tool Partitioning. Corollary 5. Repeated application of the post-tool NDBG algorithm Assembly Planning parts, in time polynomial the use volumes, and the placement constraints. in the total number of surjaces describing solves Post-Tool the R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 269 7.6. Lazy 4evaluation This subsection presents above an improvement but is important for all assembly over the techniques their asymptotic to preprocess complexity a single application infeasible post-tool constraints have polynomial worst-case performance, the more straightforward that does not in practice. Section 7.2 gives an states, and Section 7.4 these in fact in practice part instance, tool may be held in place by its contacts with change algorithm shows how to include two techniques be slower requiring other parts until late in the disassembly planning process. The few resulting FINDPLACE computations only consider a few parts, and might be much faster than preprocessing the tool application against the blocking graphs requires operation in all tests against all the parts; waiting until the target the rest of the parts. Similarly, placing feasibility is generated will be faster in some cases. in blocking graphs. Although they may a particular approaches. For of a fastening an application the constraint than It is possible in practice to get the benefits of both approaches, through the use of and saves the same data structure as the preprocessing technique a standard programming computes mentally creates only the pieces of the data structure query. well as the good best-case In many cases, lazy evaluation guarantees called run time of the naive approach. that are needed the good worst-case lazy evaluation. Essentially, lazy evaluation algorithm, but incre- to answer a current time bound as In the case of preprocessing an application (Section 7.2)) lazy evaluation of the use volume’s C-space for parts as those parts appear in subassembly consists of incrementally, only adding C- tests. If parts never appear in a test, then their C-obstacles are never computed or added to the subdivision. is stored, and when the cell boundaries corresponding the use volume must be placed in to any new parts (whose pres- the subdivision the subdivision computing obstacles subassembly Between calls, a new subassembly, ence might affect the computed construction algorithms operate more difficult For 0-DGF to implement tools lazy evaluation result) are added to the subdivision. Many subdivision incrementally than the preprocessing anyway, so this approach may not be any version. simply involves caching the results of part-intersection tests. Rather than precomputing tested for membership the application. The current been tested for membership the interference set for a tool application, parts are only test for set is stored, along with a list of parts that have in a feasibility they appear set when interference but found not to intersect with the use volume. in the interference For inchtding post-tool constraints adds no arcs to the blocking graphs is tested against the tools for which operation, subsequent it becomes a real constraint on operations, resulting l-hen bidirectional blocking graphs in blocking graphs (Section 7.4)) to begin with. When an operation it is a target. If a post-tool lazy evaluation is generated, is not feasible it for the in all is not checked until it is handled efficiently. The in the worst case. arcs between in that NDBG. Hence tool feasibility the target parts of the tool are placed at which point algorithm Lazy evaluation is fast in practice and polynomial-time requires careful but straightforward programming to ensure good per- scenarios. Both forms of lazy evaluation tool-level planner described in the formance above have been next section. in both the best-case and worst-case implemented in the experimental 270 R.H. Wilson/Artificial Intelligence 98 (1998) 237-279 8. Implementation and experiments if thou wilt make me an altar of stone, for if thou lift up thy tool upon “And stone: King James Version, Exodus 20:25. thou shalt not build it of hewn it.” - The Bible, it, thou hast polluted 8.1. Implementation We have implemented geometric tool constraints using in C++ in the Archimedes 3 assembly plan- sequence planner, to assembly assembly process constraints [ 22,231. Archimedes 3 is a disassembly-based the ACIS@ solid modeling kernel. The planner allows users ning system written add product-specific [ 221; tool constraints were implemented assembly Animation times reported below were run on an SGI 1OOMhz R4000 Indigo tion. interface type of process constraint. Dis- [38]. the NDBG approach discussed routines use OpenGLTM and X WindowsTM. All program II Extreme worksta- through an intuitive graphic are generated using and user interface as just another operations above in mechanical (16 at present) type of placement assembly algorithms Only 0-DOF and l-DOF feasibility predicates have been implemented to date; these to a single freedom the test a fixed the to test for intersection of a use volume with other routines. in-tools, and post-tools. The l-DOF predicates are limited is the most common tools. Because of the complexity in Section 7.2, the l-DOF predicates apply to pre-tools, rotational degree of freedom, which found exact combinatorial number user can choose either of two routines parts The second workstation a vertical path for insertion of the use volume of the application transform). Lazy evaluation and placing arcs in the blocking graphs for infeasible post-tools. that there be the z-axis is used for both feasibility in the subassembly. The first uses ACIS@ solid geometry of sample values of the free angle. For each application, [ 231 for details). The latter is much faster, but requires into the assembly (Section 7.6) the Zbuffer of a 3D graphics-accelerated is a discretized (see of implementing test employing intersection (i.e. along instead We have constructed a library of 124 manual, robotic, and miscellaneous assembly assembly tool types identified to Sandia applications. The tool library covers 11 of the tools, chosen for their relevance 37 mechanical (see Section 6.2)) plus a laser welder and two types of robotic grippers. The majority of these are post-tools, reflecting tool is labeled by brand and part number the library at this level of detail because tools and use volumes can be critical. Table 2 summarizes tool library. questions, having accurate and correctly-sized the tools in the Archimedes of common for concreteness. We constructed for geometric accessibility in the Snap-On catalog in our survey. Each the distribution tools found The large number of canonical tools in the library of certain common 22 mm in increments Phillips, and cabinet physical be used by rotating tool types. For instance, of 1 mm. Similarly, screwdrivers it includes crowfoot wrenches tip, many in offset, stubby, or long-handled in sizes is mostly due to the many sizes lo- include various sizes of slotted, forms. Finally, a single tools, such as hex keys that can rotating i turn. them tool often has two or more distinct canonical them continuously or by repeatedly R.H. Wilson/Art$cial Intelligence 98 (1998) 237-279 271 Table 2 Summary of the Archimedes 3 tool library Tool Number DOF Time Screwdrivers (slotted, Phillips, and cabinet tip) standard long-handled short-handlIed (stubby) offset Sockets (4-14 mm) wrench deep socket with wrench extension and wrench socket driver Crowfoot wrenches ( IO-22 mm) Ratcheting box wrenches (7-17 mm) Hex keys (1.510mm) full turning partial turn Pipe wrenches Laser spot welder Rubber mallet Pliers Robotic grippers notched parallel jaw suction We have simplified the use of certain 12 4 3 8 11 11 11 11 13 10 9 9 3 1 1 2 4 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 post post post post post post post post post post post post post post post in in in screwdrivers For instance, implementation. tools in order to include degree of freedom the user must specify our limited at a small angle from the vertical, but we represent the translational ignored them. For t.hese tools, be required extreme examples are the pliers and robotic grippers, whose placement quite complex specify a cy1indrica.l part feature, users have found these tools to be very useful despite places on their use. them in the library with are in fact 2-DOF, allowing use them as O-DOE Similarly, we have that pipe wrenches have in order to include than would tools. More are the user to jaw grippers with a vertical notch grasping freedom. Our their placement more rigidly as higher degree of freedom canonical (see Section 6). In these cases, we simply allow can have one degree of rotational the extra constraints Archimedes if they were represented their placement the placement for parallel constraints in reality exactly; is organized in both representations as an object hierarchy and reasoning socket drivers, and full-turning times and placement constraints The tool library tools screwdrivers, ties between (non-offset) the same class. Their relative differences partial-turning down by degrees of freedom, are the tool and use volumes. Similarly, offset screwdrivers, wrenches, related. The top level of the hierarchy breaks time. Each followed by relative hex keys are closely to take advantage of similari- techniques. For example, the hex keys are all instances of the only and tools tool also has routines are the same; 212 R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 Tool Vertical r Lateral X I Lateral Y I Free Parameter , .s:riti jM&J 0 -L..l 0 .J”A 0 _J_J Done 1 Reset 1 Fig. 10. Defining the application transform for a socket wrench. The bottom slider allows the user to fix the degree of freedom. The translucent region shows the use volume. tool-level animations large amounts of memory, of assembly plans. Because for each tool they are only loaded when a constraint using the tool the volumes to create require is defined. Tool constraints are defined using a graphical interface outlined selects the target part set using the mouse and chooses the tool from a hierarchical of canonical user defines tools. * A primary part is then chosen the application transform by graphically if the tool requires one. Finally, positioning in [22]. The user listing the the tool’s reference * The tool hierarchy the user sees is organized by function, and is themfore quite different from the internal object hierarchy used to implement the library. R.H. Wilson/Artijcial Intelligence 98 (1998) 237-279 273 (a) (b) Cc) Fig. 11. (a) The pattern wheel assembly, (b) a laser welding operation, and (c) a robot suction gripper placing a part. frame with respect to the target parts. If the tool is l-DOE the user has the option of specifying the value of the degree of freedom, rather than letting it vary. This effectively makes the tool 0-DOF for that application. Fig. 10 shows the application transform being defined for a socket wrench. Finally, alternate tool applications can be specified to accomplish the same assembly purpose (Section 5.3). The alternate applications have the same target part set, but all other details are independent. An operation is feasible if at least one of the alternate tool applications is feasible. 8.2. Experiments Tool constraints have been tested on a number of assemblies. We will summarize three examlples: 214 R.H. Wilson /ArtiJicial Intelligence 98 (1998) 237-279 (a) (b) Cc) Fig. 12. The discriminator: (a) An exploded view, (b) a Phillips screwdriver tightening a motor-mounting screw, and (c) a hex key tightening a hex-head screw. (1) (2) (4 parts) and a parallel-jaw gripper of a mechanical It is held together by 36 laser spot welds and assembled by robot (9 parts). Once the finding assembly plan for the pattern wheel takes 15 seconds. Figs, 11 (b) The pattern wheel shown in Fig. 11 (a) is a 13-part subassembly safety device. using a suction gripper assembly geometry has been read and a part contact graph constructed, a tool-level and 11 (c) show two of the resulting operations as animated by Archimedes. The discriminator accidental operation of a system (Fig. 12). Assembling 55 laser spot welds, 8 applications of a hex key, and one use of the pliers. Snap-ring pliers and a light-duty press are also finds a tool-level assembly required but are not in the tool library. Archimedes plan for the discriminator from the animated output of the resulting plan. in 50 seconds. Fig. 12 shows screen dumps of a Phillips screwdriver, 4 applications is a 42-part mechanical to prevent requires safety device designed the discriminator R. H. Wilson /Artificial Intelligence 98 (1998) 237-279 275 (a) (b) Fig. 13. The Rockwell assembly: (a) the full assembly, and (b) a socket driver tightening a nut, while the bolt is held from below by a screwdriver. (3) The Rockwell assembly is a circuit board in a case, a relatively in low-volume that is currently simple assembly Interna- its assembly, however, a number of tight tool questions arise. The assembly has 78 parts including all fasteners and it requires and 4 socket driver applications, (the circuit board is modeled as a single part). Assembling screwdriver, 5 slotted screwdriver, at Rockwell production (see Fig. 13(a) ). During mechanically, tional accessibility hardware 28 Phillips plus one use of a long-handled for the Rockwell applying assembly screwdriver. Finding a tool-level takes 129 seconds. Fig. 13(b) assembly plan shows an operation a socket driver from above and screwdriver from below. 9. Discussion “A sharp tongue Washington is the only edged tool that grows keener with constant use.” - Irving, The Sketch Book of Geoffrey Crayon, 1820. As the (evidence in Section 6 shows, the framework this paper can represent remaining while extensions accessibility constraints simple enough to implement easily. and future work that would provide greater capability for a wide variety of assembly for tool constraints presented in tools, In this section we sketch some and coverage. in Section 6 is variations Variable placement constraints. One of the most common represented example. Our representation whereas the application. With a good user interface, tools could not be is a good for each tool, (and hence where the use volume may be placed) varies with constraints might be moved in placement constraints. A pipe wrench requires placement the pipe’s length to be constant the placement constraints reasons 216 R.H. Wilson/Arhjicial Intelligence 98 (1998) 237-279 from canonical believe this will be quite complex to handle. tools to applications, allowing them to vary as needed. However, we A solution of intermediate complexity is to allow parameterized placement constraints. The application would specify a tool, target set, application parameters. For the tool’s placement parameter The z-axis of the application at one end, and parameter ZI would be set to the length of the pipe. for the pipe wrench might have a single from z = 0 to z = zl. transform would then align with the pipe, with its origin to be placed anywhere the use volume zl, and allow and values transform, instance, However, neither of the above extensions handle more complex placement constraints, a part. In these situations, to do with stability and applied to determine such as those for a pair of pliers or tweezers used to manipulate the placement force. As a result, special-purpose tool placement functions will very likely be required functions having for such tools. are complex constraints reason is variation using parameterized tools cannot be represented Variable use volumes. The other common current framework umes can be represented calipers occupy volume ume is different relative position the caliper points. The application ter within a possible calculated. in the in their use volumes. Some cases of variable use vol- a pair of the use vol- for each application. The calipers consist of two rigid bodies whose by an angle CY or by a distance d between can be parameterized the value of the parame- to specify range given by the tool, from which a rigid use volume can be that depends on the measured dimension. Hence use volumes. For simply needs instance, constraints, parameterized to be placed simultaneously, to have a given form relative But as with variable placement extension would allow articulated use volumes consisting use volumes do not handle of by the tool’s place- to each other. For instance, a ratchet with joints could be represented by three use volumes: one for the socket, one for the handle. The positions of the this approach in the all cases. An additional several rigid use volumes ment constraints two universal for the intermediate handle and intermediate is likely composite C-space of the interrelated volumes. link, and one a swept volume in the obvious way. However, requiring a FINDPLACE to be computationally link are constrained computation constrained expensive, Still other tools resist characterization in Fig. 8 is an example; even with articulated use volumes. The T-handle the volume swept by the handle depends the two links, which can differ depending on the subassembly ratcheting box wrench upon the angle between in which it is being applied. simultaneously then all fastened lines, it is common Less strict target operations. On industrial assembly parts placed, framework does not currently allow this assembly tool be applied the efficiency operation or it can’t be used later either. One might define application other direction, not allowing earlier application to see several or in succession by the same tool. Our that the fastener it requires after it is placed. Note that this only affects in its target the target part set for each the tool use in the to include all the parts fastened, but this overconstrains to each part immediately assembly plan: each tool must be usable of the resulting if needed. sequence: R.H. Wilson /Artificial Intelligence 98 (1998) 237-279 217 This limitation can be addressed by a two-stage planning process. First, a feasible a tool to be applied as soon as its target parts are requiring is found, forward or backward In-tools (can often be applied earlier and post-tools assembly plan present, as in this paper. This plan can then be optimized by allowing to move pre-tools terms of geometric accessibility, before at any point after its target part set comes together and before any parts are present prevent placing cannot typically move at all, but later than in the original plan. In to its primary part at any time it is mated with the rest of the target parts. Similarly, a post-tool can be applied that a pre-tool can be applied tool applications in the plan. its use volume. the tool applications Moving is usually constraints. For instance, adhesive it dries or contaminates welded framework optimizations. to ensure in this paper can only support (a post-tool) other parts or equipment. its stability during (a common pre-tool) further constrained by other assembly process cannot be applied so early that to be a part may need or operations. The during such later transportation tool accessibility considerations Similarly, (up to 2, perhaps 3) in a higher-dimensional FINDPLACE methods. As indicated few degrees of freedom (6D, and more for articulated industrial assemblies these constraints efficient methods use volumes). in Sections 6 and 8, most tools have relatively space configuration the 3D geometry of typical to and find practical In addition, problems subject can be very complex. Because FINDPLACE are at the core of tool-level planning, we must to compute them. Acknowledgments early discussions I would like to thank David Strip, Jean-Claude Latombe, Randy Brost, and Arlo Ames on this topic. Ron Jones provided a powerful assembly tool constraints into the the majority of the tools for thought-provoking graphic yet intuitive planning NDBG framework and other useful in the Archimedes :system. Michael Goldwasser insight. Jim Dedig modeled in the Archimedes the integration tool library. of pre-tools contributed to define interface This work was supported by Sandia National Laboratories under DOE contract DE- AC04-94AL85000. AutoCAD@, Pro/ENGINEER@, trademarks of Autodesk, Inc., and Snap- On Tools Corp., respectively. OpenGLTM and X WindowsTM are trademarks of Silicon Graphics, Inc., Parametric Technology Corp., Spatial Technology ACIS@, and Snap-on@ Inc. and X Consortium, are registered Inc. References [ 1 J Proceedings IEEE International Symposium on Assembly and Task Planning ( 1995). Inc., Kenosha, WI, 1995). [2] Snap-on Catalog (Snap-on 278 R.H. Wilson/Arttjicial Intelligence 98 (1998) 237-279 [3] D.F. Baldwin, T.E. Abell, M.-C.M. Lui, T.L. De Fazio and D.E. Whitney, An integrated computer aid for generating and evaluating assembly sequences for mechanical products, IEEE Trans. Robotics and Automation 7 (1) (1991) 78-94. [4] S. Basu, R. Pollack and M.-F. Roy, A new algorithm to find a point in every cell defined by a family of polynomials, in: B. Caviness and J. Johnson, eds., Quantifier Elimination and Cylindrical Algebraic Decomposition (Springer, Berlin), to appear. [S] G. Boothroyd, P. Dewhurst and W. Knight, Product Design for Manufacture and Assembly (Marcel Dekker, New York, 1994). [6] M. Brady, P.E. Agre, D.J. Braunegg and J.H. Connell, The mechanic’s mate, in: T. O’Shea, ed., Advances in Artificial intelligence (Elsevier, Amsterdam, 1985). [7] J.F. Canny, The Complexity of Robot Motion Planning (MIT Press, Cambridge, MA, 1988). [S] P.C. Chen and Y.K. Hwang, Sandros: a motion planner with performance proportional to task difficulty, IEEE International Conference on Robotics and Automation, Nice, France (1992) in: Proceedings 2346-2353. [9] Y. Descotte and J.-C. Latombe, Making compromises among antagonist constraints in a planner, Artificial Intelligence 27 (2) (1985) 183-217. [lo] A. Diaz-Calderbn, D. Navin-Chandra and P.K. Khosla, Measuring the difficulty of assembly tasks from IEEE International Symposium on Assembly and Task Planning tool access information, in: Proceedings (1995) 87-93. [ 1 l] S. French and R.V. Huber, eds., Reader’s Digest Book of Skills & Tools (The Reader’s Digest Assoc., Inc., 1993). [ 121 K. Green, D. Eggert, L. Stark and K. Bowyer, Generic recognition of articulated objects through reasoning about potential function, CVGIP: Image Understanding 62 (2) (1995) 177-93. [ 131 R. Grupen, T. Henderson and I. McCammon, A survey of general-purpose manipulation, fntemat. J. Robotics Research 8 ( 1) (1989) 38-62. [ 141 L.J. Guibas, D. Halperin, H. Hirukawa, J.-C. Latombe and R.H. Wilson, A simple and efficient procedure IEEE International ( 1995) 1585-1592. IEEE International Conference IEEE International Conference on Robotics and Automation for polyhedral assembly partitioning under infinitesimal motions, in: Proceedings Conference on Robotics and Automation (1995) 2553-2560. D. Halperin and R.H. Wilson, Assembly partitioning along simple paths: the case of multiple translations, in: Proceedings J.M. Hemioud and A. Bourjault, LBGA: a computer-aided generator of assembly plans, in: L.S. Homem de Mello and S. Lee, eds., Computer-Aided Mechanical Assembly Planning (Kluwer, Dordrecht, 1991) 191-215. R.L. Hoffman, Automated assembly in a CSG domain, in: Proceedings on Robotics and Automation, Scottsdale, AZ ( 1989) 210-215. L.S. Homem de Mello, Task sequence planning for robotic assembly, Ph.D. Thesis, Carnegie-Mellon University, Pittsburgh, PA ( 1989). L.S. Homem de Mello and S. Lee, eds., Computer-Aided Mechanical Assembly Planning Dordrecht, 1991). L.S. Homem de Mello and A.C. Sanderson, A correct and complete algorithm for the generation of mechanical assembly sequences, IEEE Trans. Robotics and Automation 7 (2) ( 1991) 228-240. J. Jones and T. Lozano-Wrez, Planning two-fingered grasps for pick-and-place operations on polyhedra, in: Proceedings R.E. Jones, R.H. Wilson and T.L. Calton, Constraint-based interactive assembly planning, in: Proceedings IEEE International Conference on Robotics and Automation S.G. Kaufman, R.H. Wilson, R.E. Jones, T.L. Calton and A.L. Ames, The Archimedes 2 mechanical assembly planning system, in: Proceedings IEEE International Conference on Robotics and Automation (1996) 3361-3368. L.E. Kavraki, P. Svestka, J.-C. Latombe and M.H. Overmars, Probabilistic roadmaps for path planning in high-dimensional configuration spaces, IEEE Trans. Robotics and Automation 12 (4) (1996) 566-580. Y. Koga, K. Kondo, J. Kuffner and J.-C. Latombe, Planning motions with intentions, in: Proc. SIGGRAPH (1994) 395-408. D.J. Kriegman and J. Ponce, Computing exact aspect graphs of curved objects: solids of revolution, Infernat. J. Computer Vision 5 (2) (1990) 119-135. IEEE International Conference on Robotics and Automation (1990) 683-688. (1997) 913-920. (Kluwer, [I51 1161 Cl71 [181 t191 [201 1211 1221 1231 ~241 [251 1261 R. H. Wilson /Artificial Intelligence 98 (I 998) 237-279 219 [27] J.-C. Latombe, Robot Motion PZanning (Kluwer, Dordmcht, 1991). [28] T. Lozano-P&ez, Spatial planning: a configuration space approach, IEEE Trans. Compurers 32 (2) (1983) 108-120. [29] D. Lyons, S. Lee, C. Ramos and J. Troccaz, eds., Assembly and Task Planning (special issue), IEEE Trans. Robotics and Automation 12 (2) (1996). [30] J.M. Miller and R.L. Hoffman, Automatic assembly planning with fasteners, in: Proceedings IEEE Intermxtional Conference on Robotics and Automation, Scottsdale, AZ (1989) 69-74. [31] R. Namng and G. Fisher, Development of a framework to automate process planning functions and to determine machining parameters, Intemat. J. Production Research 31 (8) (1993) 1921-1942. [32] J. Ponce, S. Sullivan, A. Sudsand, J.-D. Boissonnat and J.-P. Merlet, On computing four-finger (1998), equilibrium and force-closure grasps of polyhedral objects, Infernaf. J. Robotics Research to appear. [ 331 A. Requicha and J. Vandenbrande, Automatic process planning and part programming, Tech. Rept. 217, Institute for Robotics and Intelligent Systems ( 1987). [34] A. Spyridi and A. Requicha, Accessibility analysis for the automatic inspection of mechanical parts by coordinate measuring machines, in: Proceedings IEEE International Conference on Robotics and Automation (1990) 1284-1289. [35] A.S. Wallack and J.F. Canny, Planning for modular and hybrid fixtures, in: Proceedings IEEE International Conference on Robotics and Automation ( 1994) 520-521. [36] R.H. !Vilson, On geometric assembly planning, Ph.D. Thesis, Stanford Tech. Rept. STAN-CS-92-1416, Stanford University, Stanford, CA (1992). [37] R.H. Wilson, L. Kavraki, T. Lozano-P&ez and J.-C. Latombe, Two-handed assembly sequencing, Internat. J. Robotics Research 14 (4) (1995) 335-350. [ 381 R.H. Wilson and J.-C. Latombe, Geometric reasoning about mechanical assembly, Artificial Intelligence 71 (2) (1994) 371-396. [ 391 J.D. Walter, On the automatic generation of plans for mechanical assembly, Ph.D. Thesis, University of Michigan, Ann Arbor, MI (1988). 