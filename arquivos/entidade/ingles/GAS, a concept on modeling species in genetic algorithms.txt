Artificial Intelligence 99 (1998) 1-19 Artificial Intelligence GAS, a concept on modeling species in genetic algorithms ’ MGrk Jelasity a**, J6zsef Dombi b*2 a Research Group of Artificial Intelligence, Jdzsef Attila University and the Hungarian Academy of Sciences, Aradi Vertanuk tere 1, H-6701 Szeged, Hungary b Department of Applied Informatics, .I&sef Attila University, Szeged, Hungary Received April 1996; revised December 1996 Abstract chart) using a radius function This paper introduces a niching structure creates a su.bpopulation radius, and a “cooling” method similar to simulated annealing. GAS offers a solution radius prob:lem with the help of these presented domains. We also discuss coding examined empirically. The first is a difficult second the traditional genetic algorithm. @ 1998 Elsevier Science B.V. technique called GAS (S stands for species) which dynamically instead of a single (taxonomic to the niche is the radius function. Speed functions are given for both real and binary tools of the sphere packing problem on binary domains using some the output of the system. Finally two problems are test function with unevenly spread local optima. The to techniques. A method based on the speed of species task, where a comparison to make it possible is a-n NP-complete for determining combinatorial is presented optimization to evaluate theory Keywords: Multimodal optimalization; Niching; Niche radius problem; Genetic algorithms 1. Introduction In recent years much work has been done with the aim of extending genetic algorithms to make it possible (GAS) reduce the probability purpose are known as niching techniques. Besides to find more than one local optimum of a function and so to for this the greater probability of the success the global optimum. The techniques developed of missing * Corresponsling ’ This work was supported by the OTKA grant TO20150 and the MKM grant 220. * Email: dombi@inf.u-szeged.hu. author. Email: jelasity@inf.u-szeged.hu. http://www.inf.u-szeged.hu/Njelasity. 0004-3702/98/$19.00 PIISOOO4-3702(97)00071-4 @ 1998 Elsevier Science B.V. All rights reserved. 2 M. Jelasity, J. Dombi/Artifcial Intelligence 99 (1998) I-19 of the algorithm and a significantly niche techniques provide useful in a wide range of applications better performance on GA-hard problems (decision making, several designing (see [ 1 ] ) , on the problem, which is very tasks, etc.). the user with more information 1.1. Best-known approaches Simple iteration runs the simple GA several [ 61. The fitness of an individual it and so the GA is forced near the results of the particular and Richardson individuals Subpopulations can also be maintained kind of communication them developed GA (or any other optimizing after every run the optimized so that the optimum between procedure) function just found will not be located again. runs. Fitness sharing has been is reduced times to the same problem, and collects introduced by Goldberg if there are many other to maintain in the population. diversity in parallel, usually with the allowance of some [4]). The GAS method has (see, for example, in [ 11. The times on the same problem, but is run many is modified (multiplied by a derating function) from this approach. The sequential niche technique is described 1.2. Problems These the evaluation techniques yield good results Simple iteration is unintelligent; from several viewpoints, but mention should be made of some of their drawbacks, which do not arise in the case of our method, GAS. if the optima are not of the same value relatively bad local optima are found with low probability, while good optima are located several times in every which is highly unnecessary. Fitness sharing needs 0( n2) distance evaluations step, besides local optima to each other than the niche radius (a parameter of the method); that are much closer in other words, evenly spread throughout is known as the niche radius problem. The sequential niche technique also involves the niche radius problem. The complexity increases after every iteration due to the additional derating function of the optimized functions. too are found. the function Since The method seems difficult problems or structural optimization tasks, which are the most promising is modified many to use for combinatorial that the local optima are approximately the search space. This latter problem of the fitness function. times, “false” optima It cannot distinguish it is assumed GAS offers a solution to these problems the niche radius problem, which fields of GA applications. including is the most important drawback of all of the methods mentioned earlier. 1.3. Outline of the paper In Section 2 we give a brief description of GAS that is needed for an understanding of the following part of the paper. The reader who is interested refer to the Appendix on how to obtain more information in more details should or GAS itself. to the niche radius problem with the help of In Section 4 we give a possible solution the GAS system. Both real and binary problem domains are discussed. In Section 5 we present experimental demonstrates how GAS handles results. Two problems are examined. The first of the local optima of the the uneven distribution M. Jelasity, J. Dombi/Art$cial Intelligence 99 (1998) 1-19 3 optimized comparison function. The second is an NP-complete combinatorial problem, where a is presented to the traditional GA. 2. Species and GAS 2.1. Basic ideas and motivations The motivation optima of multimodal seemed to be the best choice. of this work was to tackle optimization problems. For this purpose, a subpopulation the problem of finding unevenly spread approach The obvious drawback of subpopulation approaches is that managing subpopulations and the system need special algorithms to use as well. There are considerable have its own attributes of the fitness mating different that make it possible landscape. The subpopulations subpopulations restrictions that usually allow breeding only to understand is relatively difficult and maybe advantages, however. Every subpopulation may regions local search due to the and the for them to adapt to the different perform effective inside of a subpopulation, can even communicate with each other. it is likely is intended (or species) spread optima, the same hill (heuristics will be given In our method GAS, every subpopulation of the fitness function. Thus, new species are created when to occupy a local that maximizer they are thought the parents are on different hills, and species have to be fused when later). To shed some light on the way to climb that is well GAS copes with unevenly and known from the field of simulated annealing. Thus, when illustrating our definitions the ability of escaping methods, we will talk about from an explicit attribute of every the “temperature” local optima. (it is the attraction of species, see Definition 5). This allowed us to offer an species algorithm are is that “warmer” allowed their own local species are allowed are of attraction. the system while species of different “temperatures” time. The basic to create “cooler” species autonomously that “cools down” to exist at the same In our system, we made idea of the algorithm to use a terminology the “temperature” it is natural of species, discovering Finally, llet us mention that due to our theoretical results, the large number of param- eters of GAS can be reduced to a couple of easy-to-understand ones (see Section 4). 2.2. Basic dejinitions Using the notations in the Introduction of [ 121, let D be the problem domain, f : D + W the fitness function function. ((GAS searches for the maxima of f!) and g : (0, 1)” --+ D for some m E {2,3,. . .} the coding Let us assume that a distance function d : D x D + R and term section (section : D x D + .P( D), where P(D) is the power set of D) are defined. Example 1. D C Em, D is convex. section(x,y) = {z 1 z = n + t(y -x), t E [O,l]}. 4 M. Jelasity. J. Dombi/Art@cial Intelligence 99 (1998) I-19 (a) (b) Fig. 1. (a) A possible radius function. (b) Terms related to species. Example2. D={O,l}” (soif~~Dthenn=(xr,...,x,)). section( x, y) = {Z 1 if Xj = yj then zj = xi}. Defmition 3. R : N -+ R is a radius function over D if it is monotonic positive, R(0) = max{ d(el,ez) 1 el,e2 E D} and decreasing, lim R(n) = 0. “‘CC Fig. 1 (a) exemplifies the in a given step (see speed of “cooling”. Section 3). This sheds some light on the special requirements we made in Definition 3. these properties. The radius function will be used to control In fact, it gives the “temperature” of the system Let us fix a radius function R. Definition 4. A species s over D is given by (0, 1, S) ), where S is a population als of s; o( E S) is the center of s and is such that f(o) = max f(S) radius index or the level of s, and so the radius of s is R(l). Recall (or bag) of individuals population the triplet over D and the members of S are the (e.g. S = (xi, x1, x2)). is a multiset (0, I, S) individu- ; l( E IV) is the that in GAS a (notation: s = Definition 5. attraction of s. s = (0, I, S) is a species. Let A(s) = {u E D 1 d(a, o) < R(I)} be the Fig. 1 (b) Species with small attraction behave as they were “cooler”; the terms defined above. illustrates small area, their motion that are relatively optima o is “almost” determined population would be one, Definition that S G A(s) . necessary in the space is slower but they can differentiate to each other. Note close by S. If the maximal number of different maximizers they discover a relatively local that for a species s = (0, I, S), in a that it is not between 4 would be redundant. Also note M. Jelasify, J. Dombi/Art$cial Intelligence 99 (1998) 1-19 5 procedure begin activity while (population size of T-n < maximum allowed) do begin two parents two off spring the parents and the offspring back in the population choose create place end dying-off fusion end Fig. 2. The basic algorithm that creates If,+, from Tn. Definition 6. Let T be a graph with the vertex set V(T), where V(T) over D. T is a fuxonomic chart (t.c.) root in T, and if ( sr =)so, ~1, . . . , s, is a path in T, then for the corresponding la < 1, < . . . < 1, holds. is a set of species is an s, = (or, 0, S,) levels if T is a tree and there Note that the root sr of every t.c. has the level 0 which means that its area of attraction A (s) covers the whole domain D (see Definitions 3 and 5). 2.3. The algorithm Let V( TO) (TO is a t.c.) contain only sr = (o,., 0, S,.), where S, is randomly chosen. The algorithm in Fig. 2 shows how GAS creates a Tn+l t.c. from a given T, t.c. Before describing l It is ,the flexibility of steady state selection the parts of the algorithm, we should make a few remarks. [ 131 that allows the algorithm to create and manage species, as will be shown later. l The algorithm can be implemented cycle and the level of the procedure. in parallel on two levels: the (However, our implementation level of the is not while parallel.) Let us now examine the parts of the algorithm. Populatialn size. The population size of a given T t.c. is ~s=~o,~,S~EV~T~ (S]. Choose probability two parents fitnesses of the elements of the species). this species, using proportional from two parents. From a given T, we first choose a vertex (a species) with a to the number of the elements of the vertices. Then, we choose to the the traditional (proportional probability two offspring. From Create onepoint crossover and mutation operators to the parents. individuals p1 and ~2, we create pi and pi by applying Placing elements back in the population. Since this is the most important are created, the given into two newly created offspring. If we decide two different two parents this is the point where new species to separate for the the parents, we must find new step. We have to decide here whether species and we have to find species to separate 6 M. Jelasity, J. Dombi/Arttj%ial Intelligence 99 (1998) I-19 if f(e) < f(pl),f(p2) then for x=pl,p2,pi',p2' do if (there is a child node s-c of s-p such that x is in A(s_c)) then move(x,s_c) 1 { With the restriction that pi end p2 I must not be put into the same species. 1 for x=(a parent not put in so far) do create a new child s=(x,maxIl_p +i,strict>,<x>) for s-p C else: The parents are left in s-p. ) for x=(an offspring not put in so far) do begin s:=s_p; while (x is not in A(s)) do s:-father node of s { if s=s_r then A(s)=D! ) move(p,s) end Fig. 3. The algorithm that places parents and offspring back in the population. is in Fig. 3. The notations of the algorithm: pi ,p2 are the parents, pi,pG are the that pi that connects pt and p2 (note and s,, is the original species of the parents. existing species for them or create new species for them. The placing-back shown two offspring, e is a random point on the section and pi are not on this section We always mean s, = (ox, 1,, S,) on s, for any symbol X. in general), algorithm Function move(p, s> moves p to S and updates o if necessary. Parameter of the system. i.e. the “temperature” the precision of the search, decreases “temperature”. The way of using this parameter is described strict Increas- in determines ing strict Section 3. It is clear that for a concave or for a unimodal one-dimensional fitness function GAS will never create a single species. Dying-off. Dying-off in the while inserted selecting elements function p: deletes as many elements cycle keeping the population from the population of the t.c. as were size constant. The method used for fitness to die is based on the ranking defined by the transformed f^(e) .= f(e) - (a global lower bound of f on the whole population) where e is in species s = (0, 1, S). ISI This means that species of small size have more chance (i.e. the level of competition) process. In Section 3 we discuss how to use this possibility. Dying-off can be varied during to grow). the has to survive (and (by definition) and does not delete the best individual The precision of the procedure optimization no effect on the species structure of a species. Fusion. The result of fusion ecuting fusion si,s2 E V(T’), depends on R and strict for a given T t.c., we get T’, for which 2 R(strict). then d(oi,02) described earlier. After ex- if the following will be true: M. Jelasity, J. Dotnbi/Artijicial Intelligence 99 (1998) I-19 create a starting t.c. T-0 for strict:=1 to ST-m ( 0 < ST_m(=strict_max) < 8 1 new species evolution stabilize iterate evolution until reaching I immigration x-strict function evaluations I for i=l to 5 do activity { evolution is the folloving macro: 1 C for i=l to IO do activity 1 1 1 Fig. 4. The high-level test algorithm. Fusion simply unites species of T that are too close to each other, and strict the result species is s = (0, min{ll tells it , Zz}, S1 u&), the and o is 01 or 02. In view of the tree structure, the other. If the species have the same level, either what is too close. If s1 and sz are united, where f(c)) = max{f(q), species with the lower level absorbs of them may absorb the other. f(02)) 3. Optimization with GAS For global optimization with GAS, we suggest the algorithm of the vector of evaluation numbers x and the radius in Section 4 based on the speed of species with a given radius shown in Fig. 4. For function R, we in a determination suggest a method given domain. The main for cycle performs the “cooling” operation. Increasing new species with smaller radii (see Fig. 3). The basic philosophy at the beginning areas. This kind of oscillation of every cycle and then perform optimization can be observed in biological strict results in is to increase diversity of the newly discovered systems as well. genetic operators, used in the algorithm shown in We now describe the species-level Fig. 4. Immigration. new individuals the species and makes For every species s = (0,1, S) in a given from A(s). are inserted Immigration t.c., IS]/2 randomly generated refreshes the genetic material of their motion faster. It has a kind of greasing effect. New speciies. This switch alters the state of the system ation. It randomizes dying-off of the fitness According experiments function, to some biologists and so decreases this opinion. support and relaxes competition by decreasing the relative differences between [ 31, species are born when the competition decreases; our towards managing species cre- the lower bound individuals. Stabilize. The effect of this is the contrary of new species. of new species and increases competition. It prohibits the creation As a summary, we give here some heuristical arguments that support the subpopulation structure approach and use a radius function instead of a single radius. 8 M. Jelasity, J. Dombi/Artificial Intelligence 99 (1998) I-19 l The number of distance calculations grows with the size of the t.c. instead of the size of the population. l Application l Lower-level l The advantages of the technique based on the radius function and increasing becomes possible. to create new species in their attraction. operators to root) species manage of species-level (closer (e.g. fusion, immigration) strict (see Fig. 4) are similar annealing method. to those of the “cooling” technique in the simulated Finally, to make our discussion more rigorous, we give the definitions of stability of in for the present discussion environment. However, when reader is free to skip these species and t.c. These definitions the sense that will not be used in any strict mathematical stability definitions. it is meant in this sense. The impatient are not really necessary is mentioned, Definition 7. W C D. Species s is stable in W if o E W, and if or, 02, . . . is a series of i new centers 0; sf w. inserted by GAS to s during then it is impossible that for some running Example 8. It is clear that s is stable in W = {e E D 1 f(e) > f(o)}. Definition 9. eo E D, eo is a local optimum eo if, for every ot,o2, o,, -+ ea (n -+ co) with probability . . . series of new centers 1. (with respect to d) of f, s is stable around running, inserted by GAS to s during Example 10. W G D, eo E W. If s is stable in W and eo is the global optimum of f in W (i.e. es is a local optimum of D or else s could not be stable in W) and there are no more optima of f in W, then s is stable around eo. This example would need a proof but we do not give it here because from the viewpoint of the paper. it is marginal Definition 11. T is a t.c. T is stable if every species of T is stable around distinct optima of f. local Definition 12. T is a t.c. T is complete species around every local optimum of f. if T is stable and there is exactly one stable 4. Theoretical results In this section we discuss the theoretical tools and new terms that can be used due to the exact definition of the t.c. data structure and GAS algorithm. 4. I. Speed of species We do not assume species instead niche on which that the optima of the fitness function are evenly spread; we create that “live their own lives” and can move in the search space and find the they are stable. It can be seen that from this point of view determining M. Jelasity, J. Dombi/Artifcial Intelligence 99 (1998) 1-19 9 of a given radius function R depends more upon the speed of the species (niches) than on the number the radius into the space. The speed of of spheres a given species s = (0, I, S) will depend on its radius R( 1). The larger the radius is the faster the !;pecies can move towards its stable state so the fewer the number of iterations the dividing to become it needs available number of function the values of the radius function R. idea will be used when simultaneously the species and setting that can be packed stable. This evaluations among radius parameter of the methods mentioned The solution of the sphere packing problem mentioned is the base of setting in the Introduction. This value the niche is useful when evaluating the output of the system since it tells us what percentage of the possible number of optima we have found. In Section 4.3 we discuss such packing problems in the case of binary domains. above 4.1.1. Real domains In real domains we have D 2 R” for some n E N. Let us fix a dimension n and a species s = (0, 1, S) and let us denote (Recall, o= that for a species s = (0, 1, S) the center of s, o, is an n-dimensional .,. ,oa).) (01,. number the radius of s by I (i.e. r = R(l)). real vector: for the definition of speed is an approximation. is the projection suggestion f function from the attraction of s, A(s), The following that the fitness individuals of generating one by one. The speed for a radius r and a dimension towards It is assumed = XI and GAS simply selects new instead them using parents and genetic operators and drops them into the species II will be the average step size randomly with a uniform distribution the better region. f(x) Definition gravity of the set 13. The speed u(r) of s is (cl - ot)/2, where c E B” is the center of S,,, == A(s) II {x E B” 1 x1 > ol}. In other words, let us choose a random element x* = (x7,. uniform dlistribution. Let ,$ = ot - x; if 01 > x7, and 5 = 0 otherwise. Than M(r) expected value of 6) is u(r) is given by the equation from A(s) with a (the . This means that o(r) . . , x;) where V( &) changed by GAS.) It can be proved that is the volume of S,,,. (Recall that if 6 = 0 then the center of s o is not (2), is defined with the help of the function (2) extension of t!. r( t + 1) = &” x’e-’ dx, r( l/2 + 1) = fi/2 holds. In the general case (if n is even) r( t + l), and r(t the continuous -t 2) = (t + l)r(t + 1). 10 M. klasity, J. Dombi/Ar@cial Intelligence 99 (1998) l-19 Empirical Speed of Species 1 I in Binary Domains I I I I sqIt(x)‘3.0/11 .o - n=l50 4 3.5 3 1 2.5 2 1.5 1 nc “..s 0 I 20 1 40 60 I 80 100 r (radius) 120 140 160 180 200 Fig. 5. Speed in binary domains. 4.1.2. Binary domains Let D = (0, 1)“. Let us fix a dimension the radius of s by r (i.e. r = R( 1)). We give a definition of speed similar 13. Like in the case of real domains, an approximation number n and a species s = (o,l, S) and let to is used. It is assumed x E D is given by the number of 1s in it, and GAS in the case of real domains. As in the binary case, the speed for a us denote Definition that the fitness of an individual works as described n will be the average size of the first step of o after receiving radius r and a dimension one random the starting is that in the case of binary domains, center has to be fixed too since the average step sizes change as the center changes. Let e E D such that the number of OS is equal to or greater by one than the number of 1s. Let e be the fixed starting center. Let individual. The difference Sri,,, = {e’ E D 1 d(e’, e) 6 r} where d is the Hamming random e* from S,,, with a uniform distribution 1s in e*, and let 5 = 0 otherwise. distance (the sum of the bit differences). Let us choose a and let 5 = d(e*, e) if there are more Definition 14. Let u(r) = M(t) be the speed of species s in D if the radius of s is r. We performed experiments to determine u(r) (Fig. 5). It can be seen if it > r, then the equation hf. Jela& J. Dombi/Artificial Intelligence 99 (1998) 1-19 11 the speed. If r approaches n, the growing of the speed becomes slower seems to describe than (3) would indicate. 4.2. Determining R and x the notations procedure, We use the “cooling” function evaluations type and the corresponding of Fig. 4 here. Recall the maximal value of strict, that ST,,, is the number of steps in the number of that the evaluation number N, the domain and xi denotes at step i. Let us assume speed function u are given. We know that ST”, ;t~~ = N. c i=l We suggest a setting for which the system of equations u(R(i))xi=C (i= l,...,ST,,) (4) (5) holds where C is a constant the different that follows (independent of i) . This simply means levels receive an equal chance to become stabilized. From that the species of it (4) and (5) (6) We note that C is the distance iterations. that a species of level i is expected to crosses during xi In GAS, the upper bound M of the number of species can be set. By default M = [population size/4]. Now we can give the value of C: C = R(O)Mv. (7) Recall that R(0) is the diameter of the domain we examine. v is a threshold value. Setting Y = 1 means that every species receives at least function evaluations sufficient of creating a stable t.c. very high. In Section 5 we examine settings of V. Finally for crossing let the whole space, which makes the probability the effect of several different R(i) = R(O)$ (i = 1,. . . ,ST,, /I E (0,l)). (8) Then, R is a valid radius function and subproblems defined by the species will be similar in view of the radii. Using (6), (7) and (S), we can write (P E (0, I)), (9) where everything is given except /I. 12 M. Jelasiry, J. Dombi/Artgicial Intelligence 99 (1998) I-19 Since v is monotonous, the right-hand side of (9) monotonically increases and so reaches of (9) is its minimum if p = 1. Using this fact, the feasibility decreases as p condition N R(O)Mv > ST,, v(R(O) > * t 10) If ( 10) holds, numeric methods (9) has exactly one solution. This property allows us to use effective for approximating p. In Section 5.1 we discuss the parameters that have to be set in GAS. 4.3. Evaluating the output We based is important (assuming what percentage of the maximal possible number of optima we have found. the setting of the parameters of GAS on the speed function. However, the maximal possible size of a t.c. for a given radius to know size) since an arbitrary it function R it tells us number and population large evaluation The problem leads to the general sphere packing problem and this has been solved neither for binary nor for real sets in the general case. Real case In n-dimensional real domains Deb’s method [5] can be used. P= fi” Yjy- > ( y where r is the species assuming radius, the domain is [ 0, I]” and p is the number of optima, that they are evenly spread. We note that this is only an approximation. Binary case Results of coding in binary domains theory can be used to solve the packing problem since it is one of the central problems of this field. We will need the definition of binary codes. Definition 15. d,n E W, d < n. C C (0, 1)” is a (n, ICI, d) binary code if V/cl, cz E C: dist(ci, ~2) 2 d. (The the sum of the bit differences.) is the Hamming distance, function “dist” Definition 16. d,n E IV. A(n,d) := max{jC] 1 C is a (n, ICl,d) binary code}. A(n, d) has not yet been calculated are known. Such bounds can be found for example is the Plotkin bound: in the general case; only lower and upper bounds in [ 151, [ 1 l] or [ lo]. One of these Theorem 17 (Plotkin bound). For d, n E N, we have Atn,d) 6 - d- d ;n ifdakn. M. Jelasity, J. Dombi/Art@cial Intelligence 99 (1998) I-19 13 Table 1 Plotkin upper bounds for A( 2n, d); the indicated values are exact d n-3 n-2 n-l n n+l n+2 n+6 n-t 16 n+40 32 3,328 896 240 *64 17 9 3 2 2n 128 15,616 3,968 1,008 ‘256 65 33 11 5 2 1024 130,304 32,640 8,176 *2&M 513 257 86 33 13 Proof. See [ 151. 0 In a special case, the exact value is also known: Theorem 18. For binary codes and m E N, we have A( 2m+‘, 2”‘) = 2”‘+*. In Table 1 we show the Plotkin upper bounds to the following according have been calculated for 2n = 32, 128 and 1024. The values formulas: A(2n, n + a) 6 n+a n + a - 2n/2 = i(n+a), A(2”‘+’ ,,,I) = p+*, A(2n,n - a) < 2*O+‘2(n - a). 5. Experimental results In this section we examine two problems. The first demonstrates the uneven distribution NP-complete GA. combinatorial of the local optima of the optimized problem, where a comparison how GAS handles is an function. The second is presented to the traditional 5.1. Setting of GA and GAS parameters In the following experiments, the settings of the traditional GA parameters (mutation probability) = 0.03 (see e.g. [ 71) and PC (crossover probability) are Pm = 1, while 14 M. Jelasity, J. Dombi/ArtiJkial Intelligence 99 (1998) 1-19 the population the maximum coding as suggested size = 100. In the while allowed population in [ 21. cycle of the basic algorithm size is 110. For continuous (shown in Fig. 2), domains, we used Gray The settings of the specific GAS parameters are the following: l R (radius and x (evaluation numbers) function) can be determined using the method described in Section 4. l M (maximal number of species larger value is not recommended in the t.c.) since too many small species could be created. is set to M = (pop. size) /4. Setting a l N (CET xi) depends on the available time and computational resources. We used N = 104. l Y (treshold) and ST, (maximal strict level) are the parameters we tested so we used several values (see the descriptions of the experiments). For simplicity, we run evolution only once after new species we note that increasing cases. The cost of one evolution stabilize at the above settings. that number can significantly is 275 evaluations improve after new species, the performance (see Fig. 4) but in some and 200 after 5.2. A function with unevenly spread optimas The problem domain D is [ 0, lo]. The fitness function .f : D + Iw. a= 3.040 1.098 0.674 3.537 6.173 8.679 4.503 3.328 6.937 0.700 , k= 2.983 2.378 2.439 1.168 2.406 1.236 2.868 1.378 2.348 2.268 , c= 0.140 0.127 0.132 0.125 0.189 0.187 0.171 0.188 0.176, 10 f(x) = c j=l (k(x-ai)12+ci’ 1 (shown f in [14]. in Fig. 6) is a test function for global optimization procedures suggested We have determined R and x for v = l/4,1/2,3/4 to the algorithm that according every case. Recall divisible by 200 (the cost of evolution be lo4 -ST,. 275. after stabilize) and 1 (see Table 2). ST,,, is 8 in in Fig. 4 the elements of x must be and the sum of them must M. Jelasity, J. Dombi/Artifcial Intelligence 99 (1998) l-19 15 A Possible Complete Taxonomic Chart I I Fig. 6. The function with unevenly spread optima. Table 2 Radius and evaluation numbers for Y = l/4, l/2,3/4 and 1 v=l V = 314 v= l/2 V= l/4 R 6.61 4.369 2.888 1.909 1.261 0.834 0.551 0.364 1 2 3 4 5 6 I 8 x 200 200 400 600 800 1200 1800 2800 R 6.333 4.011 2.54 1.609 1.019 0.645 0.409 0.259 x 200 200 200 400 800 1200 1800 3000 R x R x 5.978 3.573 2.136 I.217 0.763 0.456 0.273 0.163 0 200 200 400 600 1200 2000 3200 5.334 2.845 1.517 0.809 0.432 0.23 0.123 0.066 0 0 200 200 600 1000 2000 3600 We run the corresponding algorithms 100 times. The numbers of stable species converged is that no unstable species appeared to one of the local optima are shown in the output even for v = l/4. in Table 3. The most important that result The best results are observed in spite of its very small attraction. in the case of v = l/4. Here, even 03 was found 2 times Fig. 7 shows the average number of species detected before increasing From these values, we can gain for the old strict). stabilizing structure of the optima of the fitness strict information for radii greater (after on the than 3, function. For example, 16 A4. Jelasity J. Dombi/Art@cial Intelligence 99 (1998) l-19 Table 3 Number of stable species around the local optima 01 100 100 100 100 v=l v = 314 v= 112 v = 114 02 03 04 OS 06 07 08 0 1 34 25 0 0 0 2 100 100 100 100 60 65 74 85 97 87 99 100 48 72 58 90 94 94 98 100 Number of Stable Species before Increasing Strict nw1 - nu=3/4 a-- nu=1/2 -0.- nu=l/4 --B---. 6’f 6 $ w ‘.. h-p. 5- 2- b ..,......... _ .._._............................_..................... q 1 2 I 3 4 species radius 5 6 7 Fig. 7. The species number increasing history (average of 100 runs). very few species were created, which means other than 3. that the optima are probably closer to each 5.3. An NP-complete combinatorial problem We study the subset sum problem here. We are given a set W = {WI, ~2,. . . , w,} of n integers and a large integer C. We would like to find an S c W such that the sum of the elements to, without exceeding, C. This problem in S is closest is NP-complete. in [9]: D = (0, 1}12*. If We used the same coding and fitness function as suggested e E D (e= (el,ez,..., elzg)), then let P(e) = C;zF eiwi, and then -f(e) = a(C -P(e)) + (1 - a)P(e>, where a = 1 when e is feasible (C - P(e) ) 2 0), and a = 0 otherwise. M. Jelasity, J. Dombi/Artijicial Intelligence 99 (1998) 1-19 17 Table 4 Ra.dii and evaluation numbers - for ST, = 1,2,. ,6 ST,,, = 1 ST,,, = 2 ST, = 3 ST,,, =4 ST, = 5 ST, = 6 R x R x R x T2 9600 20 2600 3 6800 2 3 4 5 6 47 17 6 1800 2800 4600 R 72 41 23 13 n 1400 1800 2400 3200 R 93 67 49 35 26 x R x 1200 1400 1600 2000 2400 109 92 79 67 57 48 1200 1200 1400 1400 1600 1600 Table 5 Result of the experiment (50 runs) ST, opt. found/ run 1.56 2.62 2.1 2.12 2.08 1.0 1 2 3 4 5 6 avg. fitness of all species number of species -3.194 -15.616 -10.866 -12.568 -12.84 -6.943 201 1250 1250 1238 846 211 Here, ‘J-w E W 1 6 w < 1000 and C is the sum of a randomly chosen subset of W (every element is chosen with a probability 0.5). function here since D is the code itself. We do not need a coding We tested several values of ST,. Table 4 shows R and x for ST, = 1,2, . . . ,6. The value 8 is not feasible and 7 is also very close to that bound. v = 1 in every case. We run the corresponding For comparison, in experiments on the same problem with two times more (i.e. 2. lo4 in [9], 0.93 optimal solutions were found per run. instead of 104) evaluation numbers Here, this value is at least one for every ST,,,, and for ST, = 2 it is 2.62 (see Table 5). in Fig. 8) so we solutions were found algorithms 50 times. (as shown Besides this, many near-optimal received much more information with only lo4 function evaluations. 6. Summary In this paper we have introduced a method called GAS (or multimodal heuristic search). GAS dynamically optimization structure called a taxonomic and a “cooling” method similar to simulated annealing. chart, using a radius function instead of a single radius, for multimodal function creates a subpopulation 140 120 100 60 60 40 20 ‘,. b :. 0 -30 M. Jelasity J. Dotnbi/Art@cial Intelligence 99 (1998) l-19 1 Distribution of Species by Fitness Value max. level=3 max. level=1 mar. level=2 max. level=4 max. level=5 max. level=6 - ----. ----- .. ....... - -.- -.-.- -25 -20 -15 fitness value -10 -5 0 Fig. 8. Number of near-optimal solutions found during the 50 runs their relative binary domains. We performed We based setting of the parameters of the method on the speed of species size to the search space and we gave speed functions instead of for both real and optima and for an NP-complete experiments for a difficult combinatorial test function with unevenly problem. spread local In both cases our results are encouraging though much work will have to be done to examine the effects of the parameters of the method more thoroughly. Acknowledgements I would like to thank my reviewers for their constructive criticism; the paper more correct and much easier ours. to follow. Of course, Appendix it certainly made errors are the remaining GAS and a detailed description of the system is available via anonymous ftp at the following URL: ftp://ftp.jate.u-szeged.hu/pub/math/optimization/GAS This is a directory. Please read the file readme. M. Jelasity, J. Dombi/Arhjkial Intelligence 99 (1998) 1-19 19 The authors would highly appreciate using, etc.). regarding GAS (compiling, it if you informed them about any problems References [l] D. Beasley, D.R. Bull, R.R. Martin, A sequential niche technique 1 (2) J.D. Schaffer, Representation Evolutionary Computation (1993) 101-125. ]2] R.A. Caruana, algorithms, Arbor, MI, 1988, pp. 153-161. in: J. Laird, ed., Proceedings Fifth International Conference and hidden bias: Gray vs. binary coding for genetic on Machine Learning, Ann for multimodal function optimization, [3] V. Csrlnyi, General Theory of Evolution, Publ. House of the Hung. Acad. Sci., Budapest, 1982. [4] Y. DavIdor, A naturally niche and species phenomenon: the model and first results, occurring in: Proceedings Fourth ICGA, Morgan Kaufmann, San Mateo, CA, 1991, pp. 257-263. [ 51 K. Deb, Genetic algorithms in multimodal function optimization, Master’s Thesis, TCGA Report No. 89002, Department of Engineering mechanics, The University of Alabama, 1989. [ 61 K. Deb, D.E. Goldberg, An investigation of niche and species formation in genetic function optimization, in: Proceedings Third ICGA, Morgan Kaufmann, San Mateo, CA, 1989, pp. 42-50. [7] D.E. Goldberg, Genetic Algorithms in Search, Optimization and Machine Learning, Addison-Wesley, Reading, MA, 1989, ISBN o-201-15767-5. J. Dombi, GAS, an approach [ 81 M. Jelasity, GALESIA’95, 1995. to a solution of the niche radius problem, in: Proceedings [9] S. Khtni, T. Back, J. Heitkiitter, An evolutionary approach to combinatorial optimization problems, in: Proceedings CSC’94, 1993. [lo] F.J. MacWilliams, N.J.A. Sloan, The Theory of Error-Correcting Codes, North-Holland, Amsterdam, 1977. [ 111 R.J. McEliece, The Theory of Information [ 121 G.J.E. Rawlins, ed., Foundations [ 131 G. Syswerda, A study of reproduction Rawlinr, ed., Foundations of Genetic Algorithms, Morgan Kaufmann, San Mateo, CA, 1991. and steady state genetic algorithms, of Genetic Algorithms Morgan Kaufmann, San Mateo, CA, 1991. in generational in: G.J.E. and Coding, Addison-Wesley, Reading, MA, 1977. [ 141 A. Tom, A. iilinskas, Global optimization, in: Lecture Notes in Computer Science, Vol. 350, Springer, Berlin, 1989. [ 151 J.H. van Lint, Introduction to Coding Theory, Springer, Berlin, 1992. 