Artificial Intelligence 175 (2011) 814–847Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintA logic for reasoning about counterfactual emotions ✩Emiliano Lorini∗, François SchwarzentruberInstitut de Recherche en Informatique de Toulouse (IRIT), 118 route de Narbonne, 31062 Toulouse Cedex, Francea r t i c l ei n f oa b s t r a c tArticle history:Received 20 December 2009Received in revised form 22 November 2010Accepted 22 November 2010Available online 2 December 2010Keywords:Modal logicEmotionsSTITThe aim of this work is to propose a logical framework for the specification of cognitiveemotions that are based on counterfactual reasoning about agents’ choices. The prototypicalcounterfactual emotion is regret. In order to meet this objective, we exploit the well-knownSTIT logic (Belnap et al. (2001) [9], Horty (2001) [30], Horty and Belnap (1995) [31]). STITlogic has been proposed in the domain of formal philosophy in the nineties and, morerecently, it has been imported into the field of theoretical computer science where itsformal relationships with other logics for multi-agent systems such as ATL and CoalitionLogic (CL) have been studied. STIT is a very suitable formalism to reason about choices andcapabilities of agents and groups of agents. Unfortunately, the version of STIT with agentsand groups has been recently proved to be undecidable and not finitely axiomatizable. Inthis work we study a decidable and finitely axiomatizable fragment of STIT with agentsand groups which is sufficiently expressive for our purpose of formalizing counterfactualemotions. We call df STIT our STIT fragment. After having extended df STIT with knowledgemodalities, in the second part of article, we exploit it in order to formalize four typesof counterfactual emotions: regret, rejoicing, disappointment, and elation. At the end ofthe article we present an application of our formalization of counterfactual emotions to aconcrete example.© 2010 Elsevier B.V. All rights reserved.1. IntroductionA major objective of AI is to develop interactive cognitive systems which are more attractive and closer to the users andthat can be considered as believable interlocutors [8]. In this perspective, a challenge for AI is to build artificial agents whichare capable of: reasoning about emotions, showing their affective states and personalities, ascribing emotions to humans,predicting the effects of their actions on emotions of humans, and adapting their behaviors accordingly. With the aim ofcreating a new generation of emotional interaction systems, the study of affective phenomena has become a “hot” topic inAI where the domain of Affective Computing [44] has emerged in the last few years.Recently, some researchers have been interested in developing logical frameworks for the formal analysis of emotions(see, e.g., [39,40,58,20]). Their main concern is to exploit logical methods in order to provide a rigorous specification ofhow emotions should be implemented in an artificial agent. The design of agent-based systems where agents are capable ofreasoning about and of displaying some kind of emotions can indeed benefit from the accuracy of logical methods. Theselogical frameworks for the specification of emotions are based on the so-called BDI logics (see e.g. [17,41]). BDI logics allowto model agents’ mental states such as beliefs, desires, intentions, ideals, values, etc., which are the cognitive constituentsof emotions.✩This work is an extended and improved version of the article “A logic for reasoning about counterfactual emotions” appeared in the Proceedings of theTwenty-first International Joint Conference on Artificial Intelligence (IJCAI’09), pp. 867–872.* Corresponding author. Tel.: +33 0561556447; fax: +33 561556258.E-mail addresses: lorini@irit.fr (E. Lorini), schwarze@irit.fr (F. Schwarzentruber).0004-3702/$ – see front matter © 2010 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2010.11.022E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847815Although the application of logical methods to the formal specification of emotions has been quite successful, there isstill much work to be done in the field of computational and logical modeling of ‘counterfactual emotions’. In line withpsychological theories of ‘counterfactual emotions’, we use this term to denote those emotions such as regret which ariseduring ‘counterfactual thinking’, that is, when “[. . . ] reality is compared to an imagined view of what might have been” [33,p. 136]. In other terms, counterfactual emotions are based on an agent’s alteration of a factual situation and in the agent’simagination of an alternative situation that could have realized if something different was done [49].The aim of our work is to advance the state of the art on computational modeling of affective phenomena by providinga logic which supports reasoning about this kind of emotions. Our major concern here is to find a fair trade off betweenexpressivity and complexity of the formalism. We want a logic which is sufficiently expressive to capture the fundamentalconstituents of counterfactual emotions and, at the same time, with good mathematical properties in terms of decidabilityand complexity. To this aim, we exploit a well-known logic called STIT [9,30]. STIT logic has been proposed in the domainof formal philosophy in the nineties and, more recently, it has been imported into the field of theoretical computer sciencewhere its formal relationships with other logics for multi-agent systems have been studied (see, e.g., [12]). It is a verysuitable formalism to reason about counterfactual choices of agents and of groups. Unfortunately, the version of STIT withagents and groups proposed by Horty [30] has been recently proved to be undecidable and not finitely axiomatizable [29].In this work we study a decidable and finitely axiomatizable fragment of this logic which is sufficiently expressive for ourpurpose of formalizing counterfactual emotions.The paper is organized as follows. In Section 2 we introduce one of the most influential research approach to emotions:appraisal theory. We provide a general overview of existing models of emotions proposed in this area by devoting spe-cial attention to appraisal models of counterfactual emotions. We discuss how counterfactual emotions such as regret anddisappointment are defined in these models.Section 3 is the first step in developing a representation language for the formalization of counterfactual emotions. Weintroduce a fragment of the version of STIT logic with agents and groups proposed by Horty [30]. We call df STIT our STITfragment. Differently from Horty’s logic, we prove that our fragment is decidable and finitely axiomatizable.In Section 4, we exploit the STIT fragment df STIT in order to formalize counterfactual statements of the form “group J(or agent i) could have prevented χ to be true”. These statements are indeed basic constituents of counterfactual emotionsand will be fundamental for the formalization of counterfactual emotions given in Section 6.In Section 5, we extend the STIT fragment df STIT studied in Section 3 with knowledge operators. This is a necessarystep in order to capture the subjective dimension of the affective phenomena we intend to analyze in our work. We providedecidability results and a complete axiomatization for our epistemic extension of df STIT. We decided to present first theSTIT fragment without knowledge and then the extension with knowledge operators rather than to present a direct versionof a STIT fragment with knowledge operators for several reasons. The first one is because the STIT fragment withoutknowledge studied in Section 3 is interesting in itself since it already allows to express counterfactual statements which arean interesting component of counterfactual emotions. The second one is because the proof of decidability and the proof ofcompleteness of the STIT fragment with knowledge become much simpler after having studied the STIT fragment withoutknowledge.In Section 6, the logical framework of Section 5, is finally applied to the formalization of counterfactual emotions. Weprovide a formalization of four types of counterfactual emotions: regret and its positive counterpart rejoicing, disappointmentand its positive counterpart elation. The formal definitions of these four emotions will be based on the psychological modelsof counterfactual emotions discussed in Section 2. Section 7 presents an application of our logical formalization of counter-factual emotions to a concrete example. Before concluding we discuss in Section 8 some related works in the area of logicalmodeling of emotions and affective agents.Proofs of the main theorems are collected in the annex at the end of the article.2. Emotion theoriesOur general objective in this work is to provide a formal model of emotions which can be used as an abstract speci-fication for the design of artificial agents interacting with humans. To ensure the accuracy of a such a formal model, it isimportant to consider how emotions have been defined in the psychological literature. Indeed, in order to build artificialagents with the capability of recognizing the emotions of a human user, of anticipating the emotional effects of their actionson the human, of affecting the user’s emotions by the performance of actions directed to his emotions (e.g. actions aimedat reducing the human’s stress due to his negative emotions, actions aimed at inducing positive emotions in the human),we must endow such agents with an adequate model of human emotions.There exist several theoretical approaches to emotions in psychology. We here consider one of the most influential calledappraisal theory (see [53] for a broad introduction to the developments in appraisal theory).In Section 2.1, we provide a general introduction to appraisal theory by reviewing some of the most popular modelsproposed in this area. Then, in Section 2.2, we will focus on appraisal models of counterfactual emotions and of regretin particular. This section will provide the conceptual basis for the formalization of counterfactual emotions proposed inSection 6.816E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–8472.1. Appraisal models of emotionsAppraisal theory has emphasized the strong relationship between emotion and cognition, by stating that each emotioncan be related to specific patterns of evaluations and interpretations of events, situations or objects (appraisal patterns)based on a number of dimensions or criteria called appraisal variables (e.g. goal relevance, desirability, likelihood, causalattribution). Appraisal variables are directly related to the mental attitudes of the individual (e.g. beliefs, predictions, desires,goals, intentions). For instance, when prospecting the possibility of winning a lottery and considering ‘I win the lottery’ asa desirable event, an agent might feel an intense hope. When prospecting the possibility of catching the H1N1 flu andconsidering ‘I catch the H1N1 flu’ as an undesirable event, an agent might feel an intense fear.It is worth noting that most appraisal models of emotions assume that explicit evaluations based on evaluative beliefs(i.e. the belief that a certain event is good or bad, pleasant or unpleasant, dangerous or frustrating) are a necessary con-stituent of emotional experience. On the other hand, there are some appraisal models mostly promoted by philosophers[55,26] in which emotions are reduced to specific combinations of beliefs and desires, and in which the link between cog-nition and emotion is not necessarily mediated by evaluative beliefs. Reisenzein [47] calls cognitive-evaluative the formerand cognitive-motivational the latter kind of models. For example, according to cognitive-motivational models of emotions,a person’s happiness about a certain fact χ can be reduced to the person’s belief that χ obtains and the person’s desirethat χ obtains. On the contrary, according to cognitive-evaluative models, a person feels happy about a certain fact χ if shebelieves that χ obtains and she evaluates χ to be good (desirable) for her. In the present work, we stay closer to cognitive-evaluative models. In fact, we suppose that an agent’s positive (resp. negative) emotion requires the agent’s (evaluative)belief that a certain event, situation or object is good (resp. bad) for her. For example, according to the formalization ofrejoicing we will propose in Section 6, if an agent rejoices for a certain event χ then he believes that χ is something goodfor him.Now let us provide a more comprehensive overview of the research in appraisal theory by briefly discussing some of themost important models of emotions in this area.Lazarus’s model.Lazarus [56,36] distinguishes primary appraisal from secondary appraisal. These two kinds of appraisal arenot sequential: they can be executed in any order. During primary appraisal a person assesses the relevance and congruenceof an event with respect to her desires and goals, that is, she evaluates whether an event helps or threatens the achievementof her goals and/or the satisfaction of her desires. During secondary appraisal, the person evaluates available capabilities andresources to cope with a certain event. For instance, after feeling an intense fear because of the belief that the undesirableevent ‘I catch the H1N1 flu’ will probably occur, an agent might consider whether to get vaccinated against the H1N1 flu inorder to reduce his risks.1Scherer’s model.In Scherer’s model [52], the appraisal process is conceived as a sequence of processing levels of a givenstimulus (Stimulus Evaluation Checks) which underlies the assessment of the significance of the stimulus for an individual.In particular, according to Scherer’s model, an event is sequentially evaluated through the following four steps: relevancedetection (i.e. whether the event is novel and important with respect to the momentary goals of the individual), implicationassessment (i.e. whether the event will further or endanger the individual’s attainment of his goals), coping potential determi-nation (i.e. whether the individual can cope with the expected consequences of the event), normative significance evaluation(i.e. whether the event is significant with respect to the individual’s ideals and values). Contrarily to Lazarus’s model, inScherer’s model the different stages of the appraisal process are sequential.Roseman’s model. Roseman’s appraisal model [50,51] distinguishes seven appraisal dimensions that were found to differenti-ate a large number of emotions: unexpectedness, situational state, motivational state, probability, control potential, problemsource and agency. In Roseman’s model, unexpectedness refers to whether an event is expected or unexpected by a person,and situational state refers to whether the event is wanted or unwanted by the person. Motivational state refers to whetherthe person assesses that the event has positive or negative implications on her goals, and probability refers to whether theperson thinks that the occurrence of the event is merely possible/probable or is definite. Control potential refers to whetherthe person thinks she can cope with the event, and problem source refers to whether the event is unwanted by the per-son because she thinks that it blocks attainment of her goals or because of some inherent characteristic. Finally, agencyrefers to the person’s evaluation of the cause of the event (i.e. whether it was caused by the self, by someone else, or bycircumstances beyond anyone’s control).OCC model. According to Ortony, Clore and Collins’s model (OCC model) [42], emotion arises from valenced (a dimensionranging from positive to negative) reactions to consequences of events, actions of agents, or aspects of objects. In theOCC model, the consequence of an event can be appraised as pleased or displeased. A person can be focused either on the1 Lazarus also distinguishes appraisal from coping. Coping is the process of dealing with emotion, either externally by forming an intention to act in theworld or internally by changing the agent’s interpretation of the situation (e.g. by changing beliefs, shifting attention, shifting responsibility). Indeed, todischarge a certain emotion, an agent has to modify those mental attitudes that sustain her emotional state.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847817consequences of an event for the self or on the consequences for another person. For example, if the person is focusedon the self, she will feel hope when the consequences of the event are desirable for her, and she will feel fear when theconsequences of the event are undesirable for her. In the OCC model the action of an agent can be approved or disapproved.A person can be focused either on her actions or on the actions of another agent. For example, if the person is focusedon another agent’s action, she will fell admiration when she approves this action, and she will feel reproach when shedisapproves it. Finally, the aspects of an object can be liked or disliked. If a person likes the aspects of an object she will feellove. She will feel hate if she dislikes them.In Frijda’s model [22] appraisal is defined as a sequence of evaluation steps determining the characteristicsFrijda’s model.of a given stimulus: causes and consequences of the event, relevance and congruence with respect to current goals and in-terests, coping possibilities, and urgency. However, this model considers not only the appraisal patterns of different emotiontypes, but also the action tendencies induced by emotions. According to Frijda, actions tendencies are [22, p. 75] “. . . statesof readiness to achieve or maintain a given kind of relationship with the environment. They can be conceived of as plans orprograms to achieve such ends, which are put in a state of readiness.” For example, the action tendency associated to fearis escape. After a stimulus has been evaluated according to the previous appraisal dimensions, an action tendency is thencreated that induces physiological changes, and finally an action is selected and executed.22.2. Appraisal models of counterfactual emotionsRegret is the prototypical counterfactual emotion which has been widely investigated in psychology and in the field ofdecision theory in economics. Most authors (see, e.g., [37,59,48,33,32,71]) agree in considering regret as “. . . a negative,cognitively determined emotion that we experience when realizing or imagining that our present situation would havebeen better, had we acted differently” [71, p. 255]. In other words, regret stems from the comparison between the actualoutcome deriving from a given choice and a counterfactual better outcome that might have been had one chosen a differentaction. Such a definition highlights the strong connection between decision-making and regret: broadly speaking, regret canbe conceived as an emotion originating from a person’s perception of her ‘bad decision’. From this perspective, a senseresponsibility for a bad outcome has been often considered a specific characteristic of the phenomenology of regret, that is,the more a decision maker perceives himself to be responsible for a negative outcome, the more regret he experiences [23].3This aspect clearly distinguishes regret from disappointment. According to some economists [38] and to some psycholo-gists [19,70], disappointment too is part of the family of counterfactual emotions. But, although regret and disappointmentboth originate from the comparison between the actual outcome and a counterfactual outcome that might have occurred,disappointment follows from the comparison between the actual outcome and a counterfactual better outcome that mighthave been had a different state of the world occurred. That is, while regret is related to a sense of responsibility and in-volves an internal attribution of the cause of a bad outcome (i.e. when feeling regret a person considers her own choices tobe the cause of a bad outcome), disappointment is related to external attribution (i.e. when feeling disappointed a personconsiders external events to be the cause of a bad outcome).The positive counterparts of regret and disappointment have also been considered in the psychological literature (see,e.g., [68,69]). The former is called rejoicing, while the latter is called elation. Broadly speaking, one can say that whilerejoicing stems from the comparison between the actual outcome deriving from a given choice and a counterfactual worstoutcome that might have been had one chosen a different action, elation follows from the comparison between the actualoutcome and a counterfactual worst outcome that might have been had a different state of the world occurred.The next Section 3 is our first step in the development of a formal representation language for modeling counterfactualemotions. We study a decidable fragment of STIT logic with groups of agents proposed by Horty [30], and we give anaxiomatization of it. STIT is indeed a suitable framework for expressing counterfactual statements about actions and choicesof the form “group J (or agent i) could have prevented a certain state of affairs χ to be true now”. Such statements arefundamental building blocks for an analysis of counterfactual emotions.3. A decidable and finitely axiomatizable fragment of STITThe logic STIT (“Seeing to it that”) is a modal logic framework dealing with what agents and groups of agents do and cando. More precisely, STIT supports reasoning about the effects of actions of agents and groups, and about the capabilities ofagents and groups to ensure certain outcomes. In [9], the language of STIT with individuals but without groups is studied:Belnap et al. introduce constructions of the form [i stit : ϕ] to be read “agent i sees to it that ϕ” or “agent i brings it aboutthat ϕ”. They give a complete axiomatization of STIT without groups and prove that the logic is decidable. The extension of2 According to Lazarus [36], there is an important difference between action tendencies and coping strategies. While the former are innately programmedunconscious reflexes and routines, the latter are the product of a conscious deliberation process.3 Compared to the large number of authors relating regret with responsibility for a bad outcome, there are very few authors who separate the twoconcepts. According to [60,57] for instance, one can be regretful also for events that are partially or totally beyond one’s own control or for choices forwhich there was no alternative. However, we here adopt the definition of regret shared by the majority of authors emphasizing the link between regretand responsibility.818E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847STIT with groups has been proposed by Horty in [30]: it deals with constructions of the form [ J stit : ϕ] to be read “groupJ sees to it that ϕ”. For notational convenience, we write here [ J ]ϕ instead of [ J stit : ϕ]. Unfortunately, in [29] Horty’sSTIT logic has been proved to be undecidable and unaxiomatizable (with a finite number of axioms schemas, necessitationrules and modus ponens).We here introduce a decidable and axiomatizable fragment of STIT with agents and groups called df STIT which issufficiently expressive to formalize counterfactual emotions. First, in Section 3.1, we recall the syntax of STIT and define thesyntactic fragment df STIT. In Section 3.2, we recall definition of models of the logic STIT. Then, in Section 3.3, we recallthe logic NCL (Normal Coalition Logic) [5,61,54]. The logic NCL shares the same syntax with STIT and its semantics lookslike the semantics of STIT. Nevertheless, NCL is axiomatizable. The logic NCL will be a key point to prove the decidabilityof the STIT fragment df STIT and to give a complete axiomatization of df STIT (Section 3.4).3.1. SyntaxLet n be a strictly positive integer. Let ATM be a countable set of atomic propositions and let AGT = {1, . . . , n} be afinite set of agents. The language LSTIT of the logic STIT with agents and groups proposed by Horty [30] is defined by thefollowing BNF:ϕ ::= p | ϕ ∧ ϕ | ¬ϕ | [ J ]ϕwhere p ranges over ATM and J over 2AGT . (cid:4) J (cid:5)ϕ is an abbreviation of ¬[ J ]¬ϕ. Operators of type [ J ] are used to describethe effects of the action that has been chosen by J . IfJ has morethan one element we refer to J as a group. In Belnap et al.’s STIT, an agent i’s action is described in terms of the resultthat agent i brings about by his acting. For example, i’s action of killing another agent j is described by the fact that i seesto it that j is dead. In Horty’s STIT with agents and groups we can make a distinction between individual actions of agentsand joint actions of groups. The joint action of a group J is described in terms of the result that the agents in J bring aboutby acting together.J is a singleton we refer to J as an agent, whereas ifJIfJ has more than one element the construction [ J ]ϕ means “group J sees to it that ϕ no matter what the otheris a singleton {i} the construction [{i}]ϕ means “agent i sees to it that ϕ no matter whatagents in AGT \ J do”. Ifthe other agents in AGT \ {i} do”. For notational convenience, we write [i] instead of [{i}]. [∅]ϕ can be shorten to “ϕ isnecessarily true”. The operator [∅] is exactly the historic necessity operator already present in the individual STIT logic [9].The dual expression (cid:4)∅(cid:5)ϕ means “ϕ is possibly true”. Note that the operators (cid:4)∅(cid:5) and [ J ] can be combined in order toexpress what agents and groups can do: (cid:4)∅(cid:5)[ J ]ϕ means “ J can see to it that ϕ no matter what the other agents in AGT \ Jdo”.Here we are interested in a fragment of LSTIT we call Ldf STIT. It is defined by the following BNF:χ ::= ⊥ | p | χ ∧ χ | ¬χ (propositional formulas)ψ ::= [ J ]χ | ψ ∧ ψ (see-to-it formulas)ϕ ::= χ | ψ | ϕ ∧ ϕ | ¬ϕ | (cid:4)∅(cid:5)ψ (see-to-it and “can” formulas)where p ranges over ATM and J over 2AGT \ {∅}.LSTIT but is not in Ldf STIT.Ldf STIT is a syntactic restriction of LSTIT. We have Ldf STIT ⊆ LSTIT but LSTIT (cid:2) Ldf STIT. For instance, [1][{1, 2}]p is in3.2. ModelsWe give two semantics of STIT. It is proved in [29] that these two semantics are equivalent. The first one corresponds tothe original semantics of STIT with agents and groups proposed by Horty [30]. The other one is based on the product logicS5n [24] and will be used in Section 3.4 in order to characterize the satisfiability of a df STIT-formula. Let us first recall theoriginal semantics of STIT.Definition 1 (STIT-model). A STIT-model is a tuple M = (W , {R J } J ⊆AGT , V ) where:• W is a non-empty set of possible worlds or states;• For allJ ⊆ AGT, R J is an equivalence relation over W such that:1. R J ⊆ R∅;(cid:2)2. R J =3. for all w ∈ W , for all (w j) j∈AGT ∈ R∅(w)n,4. RAGT = idW .j∈AGT R{ j}(w j) (cid:10)= ∅;j∈ J R{ j};(cid:2)• V is a valuation function, that is, V : W → 2ATM.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847819As in the previous Constraint 3, it is convenient to view relations on W as functions from W to 2W , that is, for everyJ ∈ 2AGT , we define R J (w) = {v ∈ W | w R J v}.R J (w) is the set of outcomes that is forced by group J ’s action at world w, that is, at world w group J forces the worldto be in some state of R J (w). Hence, if v ∈ R J (w) then v is an outcome that is admitted by group J ’s action at world w.Note that if v is admitted by group J ’s action at world w (i.e. v ∈ R J (w)) then this means that, given what the agentsin J have chosen at w, there exists a joint action of the agents in AGT \ J such that, if the agents in AGT \ J did choose thisjoint action, v would be the actual outcome of the joint action of all agents.We recall that R∅ is the relation over all possible outcomes: if w is the current world and w R∅ v then v is a possibleoutcome at w. Thus, Constraint 1 on STIT models just means that the set of outcomes that is forced by J ’s action is a subsetof the set of possible outcomes. Constraint 2 just says that the set of outcomes that is forced by J ’s joint action at a worldw is equal to the pointwise intersection of the sets of outcomes that are forced by the individual actions of the agents in Jat w. Constraint 3 expresses a so-called assumption of independence of agents: if w 1, . . . , wn are possible outcomes at w thenthe intersection of the set of outcomes that is forced by agent 1’s action at w 1, and the set of outcomes that is forced byagent 2’s action at w 2, . . . , and the set of outcomes that is forced by agent n’s action at wn is not empty. More intuitively,this means that agents can never be deprived of choices due to the choices made by other agents. Constraint 4 expressesan assumption of determinism: the set of outcomes that is forced by the joint action of all agents is a singleton that is tosay we have RAGT (w) = {w} for all w ∈ W .Truth conditions for atomic formulas and the boolean operators are entirely standard. For every J ∈ 2AGT , the truthconditions of the modal operators [ J ] are classically defined by:M, w |(cid:12) [ J ]ϕ iff M, v |(cid:12) ϕ for all v ∈ W such that w R J v.The alternative semantics of STIT is based on the product logic S5n. It is defined as follows:Definition 2 (product STIT-model). A product STIT-model is a tuple M = (W , V ) where:• W = W 1 × · · · × W n where W i are non-empty sets of worlds or states;• V is a valuation function, that is, V : W → 2ATM.Truth conditions for atomic formulas and the boolean operators are also entirely standard. The truth conditions for themodal operators [ J ] in product STIT-models are:M, (w 1, . . . , wn) |(cid:12) [ J ]ϕ iff M, (v 1, . . . , vn) |(cid:12) ϕ for all (v 1, . . . , vn) ∈ W such that v j = w j if j ∈ J .Now let us just recall the notion of validity and satisfiability in STIT. As there is an equivalence between a STIT-modeland a product STIT-model as proved by [29], we can define those notions either with respect to STIT-models or withrespect to product STIT-models. A formula ϕ is STIT-valid (noted |(cid:12)STIT ϕ) if and only if ϕ is true in every world of everySTIT-model. Or, equivalently, a formula ϕ is STIT-valid if and only if ϕ is true in every world of every product STIT-model. A formula ϕ is STIT-satisfiable if and only if there exists a STIT-model M = (W , {R J } J ⊆AGT , V ) and a point w ∈ Wsuch that M, w |(cid:12) ϕ. Or, equivalently, a formula ϕ is STIT-satisfiable if and only if there exists a product STIT-modelM = (W , V ) and a point (w 1, . . . , wn) ∈ W such that M, (w 1, . . . , wn) |(cid:12) ϕ.3.3. The NCLlogicUnfortunately, STIT with agents and groups is not axiomatizable. Nevertheless, there exists an axiomatizable logic whichis very close to STIT. This logic is the fragment of Normal Coalition Logic (NCL) [5,61,54,13] in which we do not deal withthe next operator. Normal Coalition Logic was originally proposed in order to embed non-normal Coalition Logic CL [43]into a normal modal logic. This embedding uses a general technique developed by [25]. The reader can find more detailsabout this specific embedding in [5,61,13]. As CL, NCL is axiomatizable and decidable.Below we show that the fragment of Normal Coalition Logic without time axiomatizes the set of validities in the fragmentLdf STIT of STIT. Moreover, we prove our central characterization theorem of a STIT-satisfiable formula of the fragmentLdf STIT by using the Normal Coalition Logic without time. In rest of the paper, when we write NCL we refer to the fragmentof Normal Coalition Logic with the operators of group action [ J ] and without the next operator.3.3.1. DefinitionWe start by giving the definition of the logic NCL. Concerning the syntax, as here we do not deal with the next operator,the language of NCL-formulas is the same as the language of STIT-formulas, that is to say, LNCL = LSTIT. Concerning thesemantics, here is the definition of a NCL-model:Definition 3 (NCL-model). A NCL-model is a tuple M = (W , R, V ) where:• W is a non-empty set of worlds or states;820E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847• R is a collection of equivalence relations R J (one for every coalition J ⊆ AGT) such that:⊆ R J 11. R J 1∪ J 22. R∅ ⊆ R J ◦ RAGT\ J ;3. RAGT = IdW .∩ R J 2 ;• V : W → 2ATM is a valuation function.As in Definition 1, R J (w) represents the set of outcomes that is forced by group J ’s action at world w, and if v ∈ R J (w)then v is an outcome that is admitted by group J ’s action at world w. Hence, Constraint 1 says that if v is admitted bygroup J 1 ∪ J 2’s action at w, then v is admitted by group J 1’s action and by group J 2’s action at w. Constraint 2 is closeto the assumption of independence of agents of STIT logic. According to Constraint 2, if v is a possible outcome at w then,there exists a world u such that u is admitted by group J ’s action at w and v is admitted by group AGT \ J ’s action at u.Constraint 3 expresses an assumption of determinism for the set of all agents AGT.As usual truth conditions for atomic formulas and the boolean operators are entirely standard and the truth conditionsof the operators [ J ] are given in a traditional way by:M, w |(cid:12) [ J ]ϕ iff M, v |(cid:12) ϕ for all v ∈ W such that w R J v.In the same way, we introduce notions of validity and satisfiability in NCL. A formula ϕ is NCL-valid (noted |(cid:12)NCL ϕ)if and only if ϕ is true in every world of every NCL-model. A formula ϕ is NCL-satisfiable if and only if there exists aNCL-model M = (W , R, V ) and a point w ∈ W such that M, w |(cid:12) ϕ.3.3.2. Axiomatization of NCLConstraints 1, 2, 3 presented in the Definition 3 above directly correspond to Sahlqvist axiom schemas [10]. For instanceConstraint 2 (R∅ ⊆ R J ◦ RAGT\ J ) corresponds to the axiom schema (cid:4)∅(cid:5)ϕ → (cid:4) J (cid:5)(cid:4)AGT \ J (cid:5)ϕ. This is the reason why NCL logicis axiomatizable unlike STIT logic. The following Theorem 1, which has been proved by [13], sums up this fact.Theorem 1. The logic NCLis complete with respect to the following axiomatization:(ProTau) all tautologies of propositional calculusS5([ J ]) all S5-theorems, for every [ J ](Mon) [ J 1]ϕ ∨ [ J 2]ϕ → [ J 1 ∪ J 2]ϕElim(∅) (cid:4)∅(cid:5)ϕ → (cid:4) J (cid:5)(cid:4)AGT \ J (cid:5)ϕTriv(AGT) ϕ → [AGT]ϕplus modus ponens and necessitation for all [ J ].As NCL is axiomatizable, we can introduce the symbol (cid:17)NCL to deal with proofs. We write (cid:17)NCL ϕ to say that ϕ is atheorem of the axiomatization given in Theorem 1.3.3.3. Link between STITand NCLIn the case of individual STIT logic, i.e. when the STIT language only has operator [∅] and operators [i] with i ∈ AGT,the notion of satisfiability in STIT and the notion of satisfiability in NCL are equivalent [5, Theorem 14]. When we con-sider group STIT logic with operators of group action [ J ] (with J ⊆ AGT), the two notions are different. The followingProposition 1 highlights the relationship between satisfiability in group STIT logic and satisfiability in NCL.Proposition 1. Let ϕ be a formula of LSTIT.• If card(AGT) (cid:2) 2: ϕ is STIT-satisfiable iff ϕ is NCL-satisfiable;• If card(AGT) (cid:3) 3: if ϕ is STIT-satisfiable then ϕ is NCL-satisfiable. (The converse is false: there exists ϕ such that ϕ is NCL-satisfiable and ¬ϕ is STIT-valid.)Although the two logics NCL and STIT are different, the property of independence of agents holds in NCL. This fact isstated in the following Lemma 1 and illustrated in Fig. 1. Every NCL-model satisfies the Constraint 3 (assumption of indepen-dence of agents) of Definition 1. This property will be important in the constructive proof of Theorem 2. More precisely, itwill be used in the proof of Lemma 2 (see Appendix A at the end of the paper).Lemma 1. Let M = (W , R, V ) be a NCL-model. Let r be a positive integer.4 Let w 1, . . . , wr ∈ W be such that for all i, j ∈ {1, . . . , r},w i R∅ w j . Let J 1, . . . , J r ⊆ AGT be such that i (cid:10)= j implies J i ∩ J j = ∅. We have:4 Note that Lemma 1, in the degenerated case r = 0, says that(cid:2)by convention.i=1...0 R J i (w i ) (cid:10)= ∅. This is true because the intersection of zero subsets of W is W × WE. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847821Fig. 1. Independence of agents in NCL.Fig. 2. Overview of the languages L and Ldf STIT and of the logics STIT and NCL.(cid:3)i=1,...,rR J i (w i) (cid:10)= ∅.Our fragment df STIT of STIT logic with agents and groups has interesting computational properties. In the rest of thissection, we are going to show that df STIT can be axiomatized by the axiomatics of the logic NCL, and that df STIT isdecidable. To prove this, we are going to study the link between NCL and STIT when we restrict formulas to the fragmentdf STIT. Proposition 1 given above explains that in the general case, if a formula is STIT-satisfiable then it is NCL -satisfiable.The following Theorem 2 explains that the notion of satisfiability in STIT and in NCL is the same if we restrict formulas tothe fragment df STIT.Theorem 2. Let ϕ ∈ Ldf STIT. Then, the following three propositions are equivalent:1. ϕ is NCL-satisfiable;2. ϕ is STIT-satisfiable;3. ϕ is STIT-satisfiable in a polynomial sized product STIT-model.Fig. 2 highlights the relation between STIT and NCL. If we consider the whole set of formulas LSTIT, then we have thatall validities of NCL are validities of STIT but not the converse. But if we restrict formulas to the fragment Ldf STIT, then theset of validities of NCL is equal to the set of validities of STIT.3.4. Decidability and axiomatizationThe result of Theorem 2 is close to the result of Pauly in [43]. In [43], Pauly compares strategic form games (like STIT-models) and CL standard models (like NCL-models). Theorem 2 provides two crucial results: one about complexity andanother one about axiomatization of df STIT.The following corollary follows from the equivalence between point 2 and 3 in Theorem 2.Corollary 1. Deciding if a formula in Ldf STIT is STIT-satisfiable is NP-complete.The following corollary follows from the equivalence between point 1 and 2 in Theorem 2.Corollary 2. A formula ϕ in Ldf STIT is STIT-valid iff we have (cid:17)NCL ϕ.822E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847Of course, a proof of formula ϕ in Ldf STIT can contain formulas of LSTIT that are not in Ldf STIT.3.5. DiscussionBefore concluding this section, let us explain why we decided to use df STIT instead of NCL for our logical analysis ofcounterfactual emotions.The first reason is practical as the complexity of df STIT is lower than the complexity of NCL: the satisfiability problemfor NCL is NEXPTIME-complete [5] while it is NP-complete for df STIT (Corollary 1). Moreover, as we will show in Section 5(Theorem 3), the complexity of df STIT extended by epistemic modal operators is still lower than the complexity of NCL, inparticular the satisfiability problem for the epistemic extension of df STIT is PSPACE-complete.The second reason is theoretical. While STIT semantics has received several philosophical and conceptual justifications inworks by Belnap, Horty and col. (see, e.g., [9,30,31]) and is nowadays widely accepted in the fields of philosophical logic andof logics for multi-agent systems, NCL semantics does not have such a robust conceptual and philosophical basis. Indeed,NCL was developed mainly in order to embed CL into a decidable normal modal logic. For instance, we have shown that inHorty’s STIT logic, the set of outcomes that is forced by the joint action of a group J is equal to the pointwise intersectionof the sets of outcomes that are forced by the individual actions of the agents in J (Constraint 2 in Definition 1). This isa natural way to define the notion of group action which is well-justified by Horty in [30]. But such a property of groupaction does not hold in the NCL semantics, and this is one the reason why the notion of group action in NCL is not as clearas in STIT.5It is worth noting that NCL and STIT already differs with a formula of modal depth 3.Indeed, the formulaϕ = ¬[(cid:4){2, 3}(cid:5)p ∧ (cid:4){1, 3}(cid:5)q ∧ (cid:4){1, 2}(cid:5)r → (cid:4)∅(cid:5)[(cid:4){2, 3}(cid:5)((cid:4){1, 3}(cid:5)p ∧ (cid:4){2, 3}(cid:5)q) ∧ (cid:4){1, 3}(cid:5)((cid:4){2, 3}(cid:5)r ∧ (cid:4){1, 2}(cid:5)p) ∧ (cid:4){2, 3}(cid:5)((cid:4){1, 2}(cid:5)q ∧(cid:4){1, 3}(cid:5)r)]] is NCL-satisfiable and ¬ϕ is STIT-valid [24]. It is an open question whether NCL and STIT differs with a formulaof modal depth 2.4. Counterfactual statements in STITIn this section we exploit the STIT fragment df STIT studied in Section 3 in order to formalize counterfactual statementsof the form “group J (or agent i) could have prevented a certain state of affairs χ to be true now”. Such statements areindeed basic constituents of the appraisal patters of counterfactual emotions such as regret. In particular, counterfactualemotions such as regret originate from reasoning about this kind of statements highlighting the connection between theactual state of the world and a counterfactual state of the world that might have been had one chosen a different action. Thecounterfactual statements formalized in this section will be fundamental for the formalization of counterfactual emotionswe will give in Section 6.4.1.J could have prevented χThe following counterfactual statement is a fundamental constituent of an analysis of counterfactual emotions:(∗)J could have prevented a certain state of affairs χ to be true now.The statement just means that there is a counterfactual dependence between the state of affairs χ and group J (i.e. χcounterfactually depends on J ’s choice). The STIT fragment studied in Section 3 allows to represent it in a formal language.We write CHP J χ this formal representation, which is defined as follows:CHP J χ def= χ ∧ ¬[AGT \ J ]χ .The expression ¬[AGT \ J ]χ means that: the complement of J with respect to AGT (i.e. AGT \ J ) does not see to it that χ (nomatter what the agents in J have chosen to do). This is the same thing as saying that: given what the agents in AGT \ J havechosen, there exists an alternative joint action of the agents in J such that, if the agents in J did choose this joint action,χ would be false now. Thus, χ and ¬[AGT \ J ]χ together correctly translate the previous counterfactual statement (∗). If Jis a singleton {i}, we write CHPiχ instead of CHP{i}χ which means “agent i could have prevented χ to be true”.The following is the semantic counterpart of the operator CHP J . We have that M, w |(cid:12) CHP J χ if and only if, M, w |(cid:12) χand there is v ∈ RAGT\ J (w) such that M, v |(cid:12) ¬χ . That is, at world w of model M,J could have prevented χ to be true ifand only if, χ is true at w and, given what the agents in AGT \ J have chosen at w, there exists a joint action of the agentsin J such that, if the agents in J did choose this action, the actual outcome of the joint action of all agents would be astate in which χ is false.Example 1. Imagine a typical coordination scenario with two agents AGT = {1, 2}. Agents 1 and 2 have to take care of aplant. Each agent has only two actions available: water the plant (water) or do nothing (skip). If either both agents water the5 Note that in NCL semantics we only have R J ⊆(cid:2)j∈ J R{ j}.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847823Fig. 3. The four worlds w 1, w 2, w 3 and w 4 are in the equivalence class determined by R∅. Vertical circles represent the actions that agent 1 can choose,whereas horizontal circles represent the actions that agent 2 can choose. For example, w1 is the world that results from agent 1 choosing the action waterand agent 2 choosing the action skip.plant or both agents do nothing, the plant will die (dead). In the former case the plant will die since it does not tolerate toomuch water. In the latter case it will die since it lacks water. If one agent waters the plant and the other does nothing, theplant will survive (¬dead). The scenario is represented in the STIT model in Fig. 3. For instance both at world w 2 and w 4,formulas CHP1 dead and CHP2 dead are true: each agent could have prevented the plant to be dead. Indeed, at world w 2,dead and ¬[2]dead are true: given what agent 2 has chosen (i.e. water), there exists an alternative action of agent 1 (i.e.skip) such that, if 1 did choose this action, dead would be false now. At world w 4, dead and ¬[2] dead are also true: givenwhat agent 2 has chosen (i.e. skip), there exists an alternative action of agent 1 (i.e. water) such that, if 1 did choose thisaction, dead would be false now. The case for agent 2 is completely symmetrical.The following are some interesting properties of the operator CHP J . For every J and for every J 1,J 2 such that J 1 ⊆ J 2:|(cid:12)STIT CHP J 1 (χ1 ∨ χ2) → (CHP J 1χ1 ∨ CHP J 1χ2),|(cid:12)STIT CHP J 1χ → CHP J 2χ ,|(cid:12)STIT (CHP J 1χ1 ∧ CHP J 1χ2) → CHP J 1 (χ1 ∧ χ2),|(cid:12)STIT ¬CHP J (cid:18),|(cid:12)STIT ¬CHP J ⊥.(1)(2)(3)(4)(5)Proof. We give the proof of Validity 2 as an example. Let M be a STIT-model and w ∈ W such that M, w |(cid:12) CHP J 1 χ . Wehave M, w |(cid:12) χ and M, w |(cid:12) ¬[AGT \ J 1]χ . As RAGT\ J 1⊆ RAGT\ J 2 , it implies that M, w |(cid:12) ¬[AGT \ J 2]χ . That is why wehave M, w |(cid:12) CHP J 2 χ . (cid:2)According to Validity 1,J 1 could have prevented χ1 or χ2 to be true implies J 1 could have prevented χ1 or could haveJ 2 and J 1 could have prevented χ then,prevented χ2. Validity 2 expresses a monotonicity property: ifJ 2 could have prevented χ as well. Validity 3 shows how the operator CHP J behaves over conjunction: ifJ 1 could haveprevented χ1 to be true and could have prevented χ2 to be true separately then J 1 could have prevented χ1 and χ2 tobe true. Finally, according to the Validities 4 and 5, tautologies and contradictions cannot counterfactually depend on thechoice of a group: it is never the case that a coalition J could have prevented a tautology (resp. a contradiction).J 1 is a subset of4.2. DiscussionThe following two sections discuss some aspects related to the analysis of counterfactual statements presented above.We first motivate why we chose STIT logic instead of concurrent logics such as Coalition Logic (CL) and ATL in order toprovide a formal representation of such statements. Then, we make a brief excursus on the notion of “partial responsibilityup to a certain degree”.4.2.1. Limitations of CLcompared to STITIn recent times several logics of group actions and group abilities have been proposed. Roughly, we can distinguish twofamilies of such logics: those based on Coalition Logic (CL) [43], one for all Alternating-time temporal logic (ATL) [4] ofwhich several variants and extensions have been studied (see, e.g., [2,65,2,66]), and those based on STIT logic.824E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847As shown in [12], STIT embeds CL, and STIT extended with strategies (so-called strategic STIT) embeds ATL. The inter-esting point is that, while the statements:1. “the group of agents J has a joint strategy that forces χ ” and,2. “the group of agents J has not a joint strategy that forces χ ”are expressible in STIT but also in CL and ATL, the statements:3. “the group of agents J has chosen a joint strategy that forces χ ” and,4. “the group of agents J did not choose a joint strategy that forces χ ”are only expressible in STIT. More generally, while ATL and CL only support reasoning about what agents and coalitions ofagents can do together, STIT also allows to express what agents and coalitions of agents actually do together (see also [11]for a discussion on this matter). In formal terms, the previous statements 1 and 2 are expressed in STIT by the formulas(cid:4)∅(cid:5)[ J ]χ and ¬(cid:4)∅(cid:5)[ J ]χ , while the previous statements 3 and 4 are expressed in STIT by the formulas [ J ]χ and ¬[ J ]χ .As emphasized in Section 4.1, a logical analysis of counterfactual emotions is necessarily based on a logical analysis ofcounterfactual constructions of the form “agent i could have prevented χ to be true” which implies that:5. “given what the agents in AGT \ {i} have chosen, there exists an alternative action of agent i such that, if agent i didchoose this action, the state of affairs χ would be false now”.We have shown that the previous statement 5 is expressed in STIT by the formula ¬[AGT \ {i}]χ . As for statements 3 and 4above, CL and ATL cannot express the previous statement 5. More generally, while STIT allows to express what agents andcoalitions of agents could have done and could have prevented, this cannot be expressed in CL and ATL.4.2.2. Partial responsibility up to a certain degreeWe have given above a logical translation of the statement “agent i could have prevented χ to be true” noted CHPi χwhich expresses a counterfactual dependence between the state of affairs χ and agent i’s choice.It is worth noting that CHPi χ does not cover situations in which agent i is partially responsible for χ up to a certain de-gree without being fully responsible for χ . The following voting example illustrates the difference between full responsibilityand partial responsibility.Example 2. A and B are the two candidates for an election and 1, 2, 3 are the three voters. Suppose w 7 in the STIT modelin Fig. 4 is the actual world. In this world, voter 1 and voter 2 vote for candidate A while voter 3 votes for candidate Bso that A wins the election against B by a vote of 2–1. Formulas CHP1 Awin and CHP2 Awin are true at w 7. In fact, at w 7candidate A wins the elections and, given what the other voters have chosen, there exists an alternative action of voter 1(i.e. voting for candidate B) such that, if voter 1 did choose this action, candidate A would not win the elections. In otherwords, at w 7 the result of the election counterfactually depends on 1’s vote. The same is true for voter 2: at w 7 the resultof the election counterfactually depends on 2’s vote. In this case, voter 1 and voter 2 can be said to be fully responsible forcandidate A’s win.Suppose now w 5 in the STIT model in Fig. 4 is the actual world. At w 5 candidate A wins the election against candidateB by a vote of 3–0. In this case, CHPiAwin is false for every voter, that is, for every voter the result of the election does notcounterfactually depend on his vote. Nevertheless, we would like to say that each of the three voters is partially responsiblefor candidate A’s win up to a certain degree. Indeed, voter 1 is a cause of A winning even if the vote is 3–0 because, underthe contingency that one of the other voters had voted for candidate B instead, voter 1’s vote would have become critical;if he had then changed his vote, candidate A would not have won. The same is true for voter 2 and for voter 3.It is not the objective of this paper to provide a logical account of the notion of partial responsibility and of the cor-responding notion of degree of responsibility. These notions have been studied for instance in [16] in which the degree of1responsibility of an event A for an event B is supposed to beN+1 , where N is the minimal number of changes that haveto be made to the actual situation before B counterfactually depends on A. For instance, in the case of the 3–0 vote in theprevious example, the degree of responsibility of any voter for the victory of candidate A is 12 , since one change has to bemade to the actual situation before a vote is critical. In the case of the 2–1 vote, the degree of responsibility of any voterfor the victory is 1, since no change has to be made to the actual situation before a vote is critical.5. A STIT extension with knowledgeIn order to capture the subjective dimension of emotions, this section presents an extension of the fragment df STIT ofSTIT logic presented in Section 3 with standard operators for knowledge of the form Ki , where i is an agent. The formulaKiϕ means “agent i knows that ϕ is true”. This is a necessary step for the formalization of counterfactual emotions that willbe presented in Section 6.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847825Fig. 4. Vertical circles represent the actions that voter 1 can choose, horizontal circles represent the actions that voter 2 can choose, and rectangles representthe actions that voter 3 can choose. For example, w 1 is the world in which candidate B wins the election and that results from agent 1 voting for candidateA, and agents 2 and 3 voting for candidate B.5.1. DefinitionFirst we extend the language LSTIT of Section 3.1 with epistemic constructions Kiϕ. We give the language of all formulaswe can construct with STIT operators and knowledge operators. The language LKSTIT of the logic KSTIT is defined by thefollowing BNF:ϕ ::= p | ϕ ∧ ϕ | ¬ϕ | [ J ]ϕ | Kiϕwhere p ranges over ATM, i ranges over AGT and J over 2AGT .For the same reasons than in Section 3.1, we are here interested in a fragment of LKSTIT. Indeed, the satisfiabilityproblem of the logic KSTIT will be undecidable if the number of agents is more than 3 (because the logic KSTIT will bea conservative extension of the logic STIT which is already undecidable). So we focus into a syntactic fragment we calldf KSTIT.The language Ldf KSTIT of the logic df KSTIT is defined by the following BNF:χ ::= ⊥ | p | χ ∧ χ | ¬χ (propositional formulas),ψ ::= [ J ]χ | ψ ∧ ψ (see-to-it formulas),ϕ ::= χ | ψ | ϕ ∧ ϕ | ¬ϕ | (cid:4)∅(cid:5)ψ | Kiϕ (see-to-it, “can”, knowledge formulas),where p ranges over ATM,(cid:4)∅(cid:5)K1[{1, 2}]p /∈ Ldf KSTIT. Let us give the semantics of the logic df KSTIT.i ranges over AGT and J over 2AGT \ {∅}. For instance, K1(cid:4)∅(cid:5)[{1, 2}]p ∈ Ldf KSTIT. ButDefinition 4 (KSTIT-model). A KSTIT-model is a tuple M = (W , {R J } J ⊆AGT , {E i}i∈AGT , V ) where:• (W , {R J } J ⊆AGT , V ) is a STIT-model (see Definition 1);• For all i ∈ AGT, E i is an equivalence relation.826E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847We can also view epistemic accessibility relations on W as functions from W to 2W , that is, for every i ∈ AGT, E i(w) ={v ∈ W | w E i v}.As usual truth conditions for atomic formulas and the boolean operators are entirely standard. Truth conditions for theSTIT operators [ J ] are given in Section 3. Truth conditions for knowledge operators are defined in the standard way:M, w |(cid:12) Kiϕ iff M, v |(cid:12) ϕ for all v ∈ W such that w E i v.That is, agent i knows that ϕ at world w in model M if and only if ϕ is true at all worlds that are indistinguishable foragent i at world w.As usual, a formula ϕ is KSTIT-valid (noted |(cid:12)KSTIT ϕ) iff ϕ is true in every world of every KSTIT-model. A formulaϕ is KSTIT-satisfiable iff there exists a KSTIT-model M = (W , {R J } J ⊆AGT , {E i}i∈AGT , V ) and a world w ∈ W such that M,w |(cid:12) ϕ.5.2. DecidabilityThe following is an extension of Corollary 1 given in Section 3.4.Theorem 3. The satisfiability problem of df KSTIT is NP-complete if card(AGT) = 1 and PSPACE-complete if card(AGT) (cid:3) 2.5.3. AxiomatizationThe study of an axiomatization for df KSTIT relies on an epistemic extension of the logic NCL presented in Section 3.3which will also be axiomatizable. We call KNCL this epistemic extension of NCL. The syntax of the logic KNCL is the sameas the logic KSTIT, that is to say LKNCL = LKSTIT.Let us now give the definition of model for the logic KNCL.Definition 5 ( KNCL-model). A KNCL-model is a tuple M = (W , {R J } J ⊆AGT , {E i}i∈AGT , V ) where:• (W , {R J } J ⊆AGT , V ) is a NCL-model (see Definition 3);• For all i ∈ AGT, E i is an equivalence relation.Truth conditions, validity and satisfiability in KNCL are defined as usual. We can now prove an extension of Theorem 2,stating the equivalence between the satisfiability in KNCL and the satisfiability in KSTIT if we restrict the formula to thesyntactic fragment Ldf KSTIT.Theorem 4. Let ϕ be a formula of Ldf KSTIT. We have equivalence between:• ϕ is satisfiable in KNCL;• ϕ is satisfiable in KSTIT.In the same way, we have an extension of Corollary 2 about a complete axiomatization of the logic df KSTIT.Corollary 3. A formula ϕ in Ldf KSTIT is KSTIT-valid iff we have (cid:17)KNCL ϕ where (cid:17)KNCL ϕ means that there exists a proof of ϕ using allprinciples of the logic NCL, and all principles of modal logic S5 for every Ki .Of course, as for Ldf STIT, a proof of a formula ϕ in Ldf KSTIT can contain formulas of LKSTIT that are not in Ldf KSTIT.6. A formalization of counterfactual emotionsIn Section 2.2 we have provided an overview of psychological theories of counterfactual emotions and discussed defini-tions which are shared by most psychologists working in this area. In the following sections, we will use the STIT fragmentextended with epistemic operators studied in Section 5 and called df KSTIT, in order to provide a logical formalization ofthis class of emotions. We consider four types of counterfactual emotions: regret and its positive counterpart rejoicing,disappointment and its positive counterpart elation.6.1. Regret and rejoicingIn order to provide a logical characterization of counterfactual emotions such as regret, we need to introduce a conceptof agent’s preference. Modal operators for desires and goals have been widely studied (see e.g. [17,41]). The disadvantage ofsuch approaches is that they complicate the underlying logical framework. An alternative, which we adopt in this paper isE. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847827to label states with atoms that capture the “goodness” of these states for an agent. Our approach supposes a binary relationof preference between worlds.Let us introduce a special atom goodi for every agent i ∈ AGT. These atoms are used to specify those worlds which aregood for an agent.We say that χ is good for agent i if and only if χ is true in all good/pleasant states for agent i. Formally:GOODiχ def= [∅](goodi→ χ ).Now, we are in a position to define the concept of desirable state of affairs. We say that χ is desirable for agent i if andonly if, i knows that χ is something good for him:DESiχ def= KiGOODiχ .As the following valid formulas highlight, every operator DESi satisfies the principle K of normal modal logic, and theproperties of positive and negative introspection: χ is (resp. is not) desirable for i if and only if i knows this.(cid:4)(cid:5)DESiχ1 ∧ DESi(χ1 → χ2)|(cid:12)KSTIT|(cid:12)KSTIT DESiχ ↔ KiDESiχ ,|(cid:12)KSTIT ¬DESiχ ↔ Ki¬DESiχ .→ DESiχ2,(6)(7)(8)We have now all necessary and sufficient ingredients to define the cognitive structure of regret and to specify its counter-factual dimension. As emphasized in Section 2.2, such a dimension has been widely studied in the psychological literaturewhere several authors agree in considering regret as the emotion originating from an agent’s comparison between the ac-tual bad outcome and a counterfactual good outcome that might have been had the agent chosen a different action (see,e.g., [37,59,48,33,32,71]).We say that an agent i regrets for χ if and only if ¬χ is desirable for i and i knows that it could have prevented χ tobe true now. Formally:REGRETi χ def= DESi¬χ ∧ KiCHPiχ .The following is the semantic counterpart of the previous syntactic definition of regret. We have that M, w |(cid:12) REGRETi χif and only if for all v ∈ E i(w) it holds that:• for all u ∈ R∅(v), if M, u |(cid:12) goodi then M, u |(cid:12) ¬χ ;• M, v |(cid:12) χ and there is u ∈ RAGT\{i}(v) such that M, u |(cid:12) ¬χ .The former condition captures the motivational aspect of regret: if at world w agent i regrets for χ then, for every situationthat agent i considers possible at w, ¬χ is pleasant for him. The latter condition captures the counterfactual aspect ofregret: if at world w agent i regrets for χ then, for every situation that agent i considers possible at w, χ is true and, givenwhat the other agents have chosen, there exists an alternative action of i such that, if i did choose this action, χ would befalse now.The following example is given in order to better clarify our logical definition of regret.Example 3. Consider the popular two-person hand game “Rock-paper-scissors”. Each of the two players AGT = {1, 2} hasthree available actions: play rock, play paper, play scissors. The goal of each player is to select an action which defeatsthat of the opponent. Combinations of actions are resolved as follows: rock wins against scissors, paper wins against rock;scissors wins against paper. If both players choose the same action, they both lose. The scenario is represented in the STITmodel in Fig. 5. It is supposed winning is something good for each agent and each agent has the desire to win the game:GOOD1 1Win, GOOD2 2Win, DES1 1Win and DES2 2Win are true at worlds w 1–w 9. Suppose world w 1 is the actual world inwhich 1 plays rock and 2 plays paper. In this world 1 loses the game (¬1Win), and 1 knows that (by playing scissors) itcould have prevented ¬1Win to be true (i.e. K1CHP1¬1Win is true at w 1). It follows that at w 1 player 1 regrets for havinglost the game, that is, REGRET1¬1Win is true at w 1.As the following validity highlights, regret implies the frustration of an agent’s desire:|(cid:12)KSTIT REGRETi χ → (Kiχ ∧ DESi¬χ ).(9)More precisely, if agent i regrets for χ then, i knows that χ holds and ¬χ is something desirable for i (in this sense i feelsfrustrated for not having achieved ¬χ ). Moreover, regret satisfies the properties of positive and negative introspection:|(cid:12)KSTIT REGRETi χ ↔ KiREGRETi χ ,|(cid:12)KSTIT ¬REGRETi χ ↔ Ki¬REGRETi χ .(10)(11)828E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847Fig. 5. Vertical circles represent the actions that player 1 can choose, whereas horizontal circles represent the actions that player 2 can choose. For thesake of simplicity, we suppose that players 1 and 2 do not have uncertainty: everywhere in the model players 1 and 2 only consider possible the world inwhich they are (reflexive arrows represent indistinguishability relations for the two players).As emphasized by some psychological theories of counterfactual emotions (see, e.g., [68,69]), the positive counterpart ofregret is rejoicing: while regret has a negative valence (i.e. it is associated with the frustration of an agent’s desire), rejoicinghas a positive valence (i.e. it is associated with the satisfaction of an agent’s desire). According to these theories, a personexperiences regret when believing that the foregone outcome would have been better if she did a different action, whilstshe rejoices when believing that the foregone outcome would have been worse if she did a different action. More precisely,an agent i rejoices for χ if and only if, χ is desirable for i and, i knows that it could have prevented χ to be true now bychoosing a different action:REJOICEi χ def= DESi χ ∧ KiCHPiχ .In semantic terms, we have that M, w |(cid:12) REJOICEi χ if and only if for all v ∈ E i(w) it holds that:• for all u ∈ R∅(v), if M, u |(cid:12) goodi then M, u |(cid:12) χ ;• M, v |(cid:12) χ and there is u ∈ RAGT\{i}(v) such that M, u |(cid:12) ¬χ .The former condition corresponds to the motivational dimension of rejoicing, while the latter corresponds to the counterfac-tual dimension. According to the former condition: if at world w agent i rejoices for χ then, for every situation that agenti considers possible at w, χ is pleasant for him. According to the latter condition: if at world w agent i rejoices for χ then,for every situation that agent i considers possible at w, χ is true and, given what the other agents have chosen, there existsan alternative action of i such that, if i did choose this action, χ would be false now.Example 4. Consider again the game “Rock-paper-scissors” represented by the STIT-model in Fig. 5. Suppose world w 2 isthe actual world in which player 1 plays rock and player 2 plays scissors. In this world player 1 is the winner (1Win) andit knows that (by playing paper or scissors) it could have prevented 1Win to be true (i.e. K1CHP1 1Win is true at w 2). SinceDES1 1Win holds at w 2, it follows that at w 2 player 1 rejoices for having won the game, that is, REJOICE1 1Win is trueat w 2.The following validity highlights that rejoicing implies desire satisfaction:|(cid:12)KSTIT REJOICEi χ → (Kiχ ∧ DESi χ ).(12)i knows that χ and χ is something desirable for i (in this sense iMore precisely,feels satisfied for having achieved χ ). Like regret, rejoicing satisfies the properties of positive and negative introspec-if agent i rejoices for χ then,E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847tion:|(cid:12)KSTIT REJOICEi χ ↔ KiREJOICEi χ ,|(cid:12)KSTIT ¬REJOICEi χ ↔ Ki¬REJOICEiχ .That is, agent i rejoices (resp. does not rejoice) for χ if and only if it knows this.6.2. Disappointment and elation829(13)(14)As emphasized in Section 2.2, according to some authors [38,19,70], disappointment too is part of the family of counter-factual emotions: like regret, disappointment originates from the comparison between the actual outcome and a counter-factual outcome that might have occurred. However, there is an important difference between regret and disappointment.If an agent feels regret he considers himself to be responsible for the actual outcome, whereas if he feels disappointed heconsiders external events and other agents’ actions to be responsible for the actual outcome.Thus, we can say that an agent i feels disappointed for χ if and only if ¬χ is desirable for i and i knows that the otherscould have prevented χ to be true now. Formally:DISAPPOINTMENTi χ def= DESi¬χ ∧ KiCHPAGT\{i}χ .In semantic terms, we have that M, w |(cid:12) DISAPPOINTMENTi χ if and only if for all v ∈ E i(w) it holds that:• for all u ∈ R∅(v), if M, u |(cid:12) goodi then M, u |(cid:12) ¬χ ;• M, v |(cid:12) χ and there is u ∈ R{i}(v) such that M, u |(cid:12) ¬χ .Like in the cases of regret and rejoicing, the former condition captures the motivational aspect of disappointment, while thelatter captures the counterfactual aspect. According to the former condition: if at world w agent i feels disappointed for χthen, for every situation that agent i considers possible at w, ¬χ is pleasant for him. According to the latter condition: ifat world w agent i feels disappointed for χ then, for every situation that agent i considers possible at w, χ is true and,given what i has chosen, there exists an alternative joint action of the other agents such that, if they did choose this action,χ would be false now.Example 5. In the “Rock-paper-scissors” game represented in Fig. 5, regret is always joined with disappointment. For in-stance, at world w 1 player 1 not only regrets for having lost the game (i.e. REGRET1¬1Win), but also he feels disappointedfor this (i.e. DISAPPOINTMENT1¬1Win). In fact, at w 1, 1 knows that (by playing scissors) the others (i.e. player 2) couldhave prevented ¬1Win to be true (i.e. K1CHPAGT\{1}¬1Win is true at w 1).Like regret and rejoicing, disappointment satisfies the properties of positive and negative introspection:|(cid:12)KSTIT DISAPPOINTMENTi χ ↔ KiDISAPPOINTMENTi χ ,|(cid:12)KSTIT ¬DISAPPOINTMENTi χ ↔ Ki¬DISAPPOINTMENTi χ .Moreover, like regret, disappointment implies desire frustration:(15)(16)|(cid:12)KSTIT DISAPPOINTMENTi χ → (Kiχ ∧ DESi¬χ ).(17)It is worth noting that regret and disappointment do not necessarily occur in parallel, i.e. the formulas REGRETi χ ∧¬DISAPPOINTMENTi χ and ¬REGRETi χ ∧ DISAPPOINTMENTi χ are satisfiable. The following example illustrates thesituation in which an agent feels disappointed without feeling regret.Example 6. Two agents AGT = {1, 2} have made an appointment to dine together at a restaurant. When the time of theappointment comes near, each of the two agents can either go to the restaurant in order to meet the other, or stay home,or go to the cinema. The two agents will have dinner together only if each of them decides to go to restaurant to meetthe other. The scenario is represented in the STIT model in Fig. 6. It is supposed that having dinner with agent 2 issomething good for agent 1 and agent 1 desires to have dinner with agent 2: GOOD1 dinnerTogether and DES1 dinnerTogetherare true at worlds w 1–w 9. Suppose world w 1 is the actual world in which 1 goes to the restaurant, while 2 goes tothe cinema and breaks his appointment with 1. In this world 1 does not have dinner with 2 (¬dinnerTogether), and 1knows that (by going to the restaurant) the others (i.e. agent 2) could have prevented ¬dinnerTogether to be true (i.e.K1CHPAGT\{1}¬dinnerTogether is true at w 1). It follows that at w 1 agent 1 feels disappointed for not having dinner with2, that is, DISAPPOINTMENT1¬dinnerTogether is true at w 1. Note that at w 1 agent 1 does not feel regret for not havingdinner with agent 2 (i.e. REGRET1¬dinnerTogether is false at w 1). In fact, at w 1, 1 knows that ¬dinnerTogether only dependson what 2 has decided to do. Therefore, at w 1, 1 does not think that he could have prevented ¬dinnerTogether to be true(i.e. ¬K1CHP1¬dinnerTogether is true at w 1).830E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847Fig. 6. Again, vertical circles represent the actions that agent 1 can choose, whereas horizontal circles represent the actions that agent 2 can choose.In this example, we suppose that agents 1 and 2 can only have uncertainty about the current choice of the other (vertical dotted rectangles representindistinguishability relations for agent 1, whereas horizontal dotted rectangles represent indistinguishability relations for agent 2).We conclude with a formalization of the positive counterpart of disappointment, that is commonly called elation [68,69].We say that agent i elates for χ if and only if, χ is desirable for i and i knows that the others could have prevented χ tobe true now:ELATIONi χ def= DESi χ ∧ Ki CHPAGT\{i}χ .In semantic terms, we have that M, w |(cid:12) ELATIONi χ if and only if for all v ∈ E i(w) it holds that:• for all u ∈ R∅(v), if M, u |(cid:12) goodi then M, u |(cid:12) χ ;• M, v |(cid:12) χ and there is u ∈ R{i}(v) such that M, u |(cid:12) ¬χ .Like in the cases of regret, rejoicing and disappointment, the former condition captures the motivational aspect of elationwhile the latter captures the counterfactual aspect. According to the former condition: if at world w agent i elates for χthen, for every situation that agent i considers possible at w, χ is pleasant for him. According to the latter condition: if atworld w agent i elates for χ then, for every situation that agent i considers possible at w, χ is true and, given what i haschosen, there exists an alternative joint action of the other agents such that, if they did choose this action, χ would be falsenow.Like regret, rejoicing and disappointment, elation satisfies the properties of positive and negative introspection:|(cid:12)KSTIT ELATIONi χ ↔ KiELATIONi χ ,|(cid:12)KSTIT ¬ELATIONi χ ↔ Ki¬ELATIONi χ .Moreover, like rejoicing, elation implies desire satisfaction:|(cid:12)KSTIT ELATIONi χ → (Kiχ ∧ DESi χ ).(18)(19)(20)like regret and disappointment, elation and rejoicing do not necessarily occur in parallel,Finally,i.e. the formulasREJOICEi χ ∧ ¬ELATIONi χ and ¬REJOICEi χ ∧ ELATIONi χ are satisfiable. In fact, an agent might consider the othersto be responsible for the actual good situation, without considering himself to be responsible for the actual good situation.Before concluding, it is worth noting that the constructions REGRETi χ and REJOICEi χ require group STIT operators.This justifies the use of Horty’s STIT logic with agents and groups, and the study of a decidable fragment of this logicprovided in Section 3. On the contrary, Belnap et al.’s individual STIT logic [9] extended by knowledge operators wouldbe sufficient to write the formulas DISAPPOINTMENTi χ and ELATIONi χ . Let us recall that the fusion of two decidablemodal logics is decidable [24]. As the satisfiability problem of Belnap et al.’s individual STIT logic is decidable [7], thefusion of the latter and epistemic logic is also decidable. So, it is not necessary to introduce syntactic restrictions on theSTIT language in order to obtain a decidable logic in which we can reason about disappointment and elation.6.3. DiscussionLet us discuss some aspects we did not consider in the previous formalization of counterfactual emotions.According to [14], disappointment entails invalidation of an agent’s positive expectation. That is, an agent feels disap-pointed for χ , only if ¬χ is desirable for the agent and the agent believes that χ , and in the previous state he believedE. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847831¬χ to be true in the next state. In other words, an agent feels disappointed for χ because he would like χ to be false nowand he just learnt that χ is true and, before learning that χ is true, he believed ¬χ to be true in the next state. In theformalization of disappointment proposed in Section 6.2, this relationship between disappointment and expectations wasnot considered. We included in the definition of disappointment only the agent’s mental states at the moment in which theemotion arises.Another aspect we did not consider in our formalization of counterfactual emotions is the distinction between regretdue to a choice to act (i.e. action) and regret due to a choice not to act (i.e. inaction). A classical example which clarifies thisdistinction is the one given by [34] in which an agent i owned shares in company A, and he considered switching to stockin company B but he decided against it. He now finds out that he would have been better off if he had switched to the stockof company B (regret due to inaction). Another agent j owned shares in company B, and he switched to stock in company A.He now finds out that he would have been better off if he had kept his stock in Company B (regret due to action). The logicSTIT is not sufficiently expressive to make this distinction between regret due to action and regret due to inaction. Indeed,in STIT logic it is supposed that at a given state w every agent has made a choice. Moreover, STIT allows to reason aboutthe effects of the agents’ choices at a given state. Nevertheless, STIT does not allow to distinguish the situation in which, ata given state, an agent has made the choice to act from the situation in which the agent has made the choice not to act.7. A concrete exampleThe logical framework and formal analysis of counterfactual emotions proposed in this paper can also be exploited forincreasing the competence and performance of artificial emotional agents in emotion recognition, emotion anticipation,response to others’ emotions and emotion communication and expression. Such capabilities are fundamental for developinginteractive agent technologies which are particularly relevant for applications in health care, education and entertainment,like intelligent tutoring systems, robotic assistants to older or disabled people to improve quality of life, companions andtrainers in physical recovery and rehabilitation, etc. This section exposes more in detail how the results of the presentresearch can be exploited in order to design agents endowed with these capabilities.We imagine a scenario of human-agent interaction in which an intelligent tutoring agent has to take care of a humanuser. The tutoring agent has to reason about and to respond to the user’s emotions in order to sustain the user’s activity.Here we only focus on some particular competencies of the artificial agent, namely: the capacity of inferring the user’semotions by attributing mental states to the user; the capacity of adapting its behavior during the dialogue with the userin order to reduce the user’s negative emotions and in order to induce positive emotions on the user.7.1. Inferring the user’s emotion through the attribution of mental statesThe human user in this scenario is a student who has to pass a Certificate of Proficiency in English. The tutoring agent isan artificial agent who supervises the student’s preparation for the exam. The tutoring agent is endowed with the capabilityof reasoning about the student’s emotions.Let us suppose that, according to the tutoring agent (noted t): the user (noted u) would like to pass the exam, the userknows that he did not pass the exam, the user knows that necessarily if he studied then he would have passed the exam,and the user knows that he had the opportunity to study. Thus, the tutoring agent’s knowledge base KB can be formallyrepresented by the conjunction of the following four formulas:• KtDESupassu• KtKu¬passu• KtKu[∅]([u]studiedu → passu)• KtKu(cid:4)∅(cid:5)[u]studiedu.Note that all the four formulas are in Ldf KSTIT, even the third one which is equivalent to KtKu¬(cid:4)∅(cid:5)([u]studiedu ∧ ¬passu).We can prove that from its initial knowledge base, the tutoring agent infers that the user is feeling regret for having failedthe exam, that is|(cid:12)KSTIT KB → KtREGRETu¬passu(21)Now let us suppose that, according to the tutoring agent: the user would like to pass the exam, the user knows thathe passed the exam, the user knows that necessarily if he did not study then he would have failed the exam, and theuser knows that he had the opportunity not to study. Thus, the tutoring agent’s knowledge base KB∗can be formallyrepresented by the conjunction of the following four formulas:• KtDESupassu• KtKupassu• KtKu[∅]([u]¬studiedu → ¬passu)• KtKu(cid:4)∅(cid:5)[u]¬studiedu.832E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847We can prove that from its initial knowledge base, the tutoring agent infers that the user is rejoicing for having passed theexam, that is|(cid:12)KSTIT KB∗ → Kt REJOICEu passu.(22)We have only considered a tutoring agent’s capability of inferring a human user’s emotions by the attribution of mentalstates to the user. However, there are other important capabilities that a tutoring agent interacting with a human usershould be endowed with. In particular, the tutoring agent should be able to communicate with the human user in such away that it can adapt its behavior in order to reduce the user’s negative emotions and in order to induce positive emotionson the user. In order to model this kind of capability, we discuss in the next section an extension of our logical frameworkthat allows to represent the exchange of information between a tutoring agent and a human user.7.2. A ‘dynamification’ of KSTITWe present a dynamic variant of the logic of Section 5, where knowledge is updated, as in public announcement logic(PAL) [45,67] and, more precisely, as in the variant of PAL proposed by [63,64] where model update is redefined as anepistemic relation-changing operation of ‘link cutting’ that does not throw away worlds from a model.The logic KSTIT of Section 5 is here extended by dynamic operators of the form [(cid:20)θ(cid:20)]. The formula [(cid:20)θ(cid:20)]ϕ means ‘aftertheannouncement of the truth value of θ , ϕ holds’. The dual of [(cid:20)θ(cid:20)] is (cid:4)||θ||(cid:5), that is, (cid:4)||θ||(cid:5)ϕ def= ¬[(cid:20)θ(cid:20)]¬ϕ. We call KSTITextended logic. The language Lis defined by the following BNF:++ϕ ::= p | ϕ ∧ ϕ | ¬ϕ | [ J ]ϕ | Kiϕ |KSTIT+ of the logic KSTIT(cid:7)(cid:6)(cid:20)ϕ(cid:20)ϕwhere p ranges over ATM, i ranges over AGT and J over 2AGT .We are interested here in a decidable and finitely axiomatizable fragment of KSTIT+called df KSTIT+, which is nothingelse than the dynamic extension of the syntactic fragment df KSTIT of the logic KSTIT studied in Section 5.χ ::= ⊥ | p | χ ∧ χ | ¬χ (propositional formulas),ψ ::= [ J ]χ | ψ ∧ ψ (see-to-it formulas),(cid:7)(cid:6)(cid:20)ϕ(cid:20)ϕ ::= χ | ψ | ϕ ∧ ϕ | ¬ϕ | (cid:4)∅(cid:5)ψ | Kiϕ |ϕ (see-to-it, “can”, knowledge, update formulas),where p ranges over ATM, i ranges over AGT and J over 2AGT \ {∅}.The standard announcement operator [!θ] of PAL can be defined from the operator [(cid:20)θ(cid:20)] in a straightforward manner:[!θ]ϕ def= θ →(cid:7)(cid:6)(cid:20)θ(cid:20)ϕ.Formula [!θ]ϕ has to be read ‘after the announcement of θ , ϕ holds’. Indeed, the announcement of θ is nothing else thanthe announcement of the truth value of θ when θ is true. The dual of [!θ] is (cid:4)!θ(cid:5), that is, (cid:4)!θ(cid:5)ϕ def= ¬[!θ]¬ϕ.In order to give semantics to the operators [(cid:20)θ(cid:20)] we define the elements of the model M(cid:20)θ(cid:20)update of the model M = (W , {R J } J ⊆AGT , {E i}i∈AGT , V ) by the announcement of θ ’s truth value:which results from the(cid:20)θ(cid:20) = W ;• W• for every J ⊆ AGT, R• for every i ∈ AGT, E• V(cid:20)θ(cid:20) = V .(cid:20)θ(cid:20)J(cid:20)θ(cid:20)i= R J ;= {(w, v)|(w, v) ∈ E i and (M, w |(cid:12) θ iff M, v |(cid:12) θ)};Basically, the effect of the announcement of θ ’s truth value is to remove the epistemic links between all worlds u and v inwhich θ does not have the same truth value. In other words, for every world w in which θ is true and for every agent i,the effect of the operation (cid:20)θ(cid:20) is to restrict the set of epistemically possible worlds for i to the set of worlds in which θis true; for every world w in which θ is false and for every agent i, the effect of the operation (cid:20)θ(cid:20) is to restrict the set ofepistemically possible worlds for i to the set of worlds in which θ is false.models, that is, if M is a KSTIT-model then M(cid:20)θ(cid:20)It is just a routine to verify that the operation (cid:20)θ(cid:20) is well-defined, as it preserves the semantic constraints on KSTIT-is a KSTIT-model too.The following are the truth conditions of the dynamic operators [(cid:20)θ(cid:20)]:M, w |(cid:12) [(cid:20)θ(cid:20)]ϕ iff M(cid:20)θ (cid:20), w |(cid:12) ϕ.Note that under these truth conditions [(cid:20)θ(cid:20)]ϕ is equivalent to (cid:4)||θ||(cid:5)ϕ. Validity of a formula ϕ in KSTITis defined in the usual way.+(noted |(cid:12)KSTIT+ ϕ)E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847833-valid:(Red¬)(Redp)+Proposition 2. The following schemata are KSTIT(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)p ↔ p,(cid:7)(cid:6)¬ϕ ↔ ¬(cid:20)θ(cid:20)(ϕ1 ∧ ϕ2) ↔(cid:6)[ J ]ϕ ↔ [ J ]Kiϕ ↔ϕ,(cid:7)(cid:4)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:20)θ(cid:20)θ → Kiϕ,(cid:4)θ →(Red[ J ])(Red∧)(RedKi )(cid:4)(cid:4)(cid:6)ϕ1 ∧(cid:7)(cid:6)(cid:20)θ(cid:20)ϕ2(cid:5)(cid:7)(cid:20)θ(cid:20)(cid:5)(cid:5)ϕ∧,(cid:4)¬θ → Ki(cid:4)¬θ →(cid:5)(cid:5)(cid:5)(cid:7)(cid:6)(cid:20)θ(cid:20)ϕ.Remark. It is straightforward to verify that the announcement operators [!θ] defined above satisfy the standard principle ofPAL:(cid:4)(cid:5)[!θ]Kiϕ ↔θ → Ki[!θ]ϕ.The five equivalences of Proposition 2 together with the rule of replacement of proved equivalents provide a completeset of reduction axioms for the dynamic operators [(cid:20)θ(cid:20)]. We call red the mapping which iteratively applies the above equiv-alences from the left to the right, starting from one of the innermost modal operators. red pushes the dynamic operatorsinside the formula, and finally eliminates them when facing an atomic formula.The mapping red is inductively defined by:1. red(p) = p2. red(¬ϕ) = ¬red(ϕ)3. red(ϕ1 ∧ ϕ2) = red(ϕ1) ∧ red(ϕ2)4. red([ J ]ϕ) = [ J ]red(ϕ)5. red(Kiϕ) = Kired(ϕ)6. red([(cid:20)θ(cid:20)]p) = p7. red([(cid:20)θ(cid:20)]¬ϕ) = red(¬[(cid:20)θ(cid:20)]ϕ)8. red([(cid:20)θ(cid:20)](ϕ1 ∧ ϕ2)) = red([(cid:20)θ(cid:20)]ϕ1 ∧ [(cid:20)θ(cid:20)]ϕ2)9. red([(cid:20)θ(cid:20)][ J ]ϕ) = red([ J ][(cid:20)θ(cid:20)]ϕ)10. red([(cid:20)θ(cid:20)]Kiϕ) = red((θ → Ki(θ → [(cid:20)θ(cid:20)]ϕ)) ∧ (¬θ → Ki(¬θ → [(cid:20)θ(cid:20)]ϕ)))11. red([(cid:20)θ(cid:20)][(cid:20)(cid:6)(cid:20)]ϕ) = red([(cid:20)θ(cid:20)]red([(cid:20)(cid:6)(cid:20)]ϕ)).The following Proposition 3 is a straightforward consequence of Proposition 2 and the fact that the following rule ofreplacement of proved equivalents preserves validity:ϕ1 ↔ ϕ2ϕ ↔ ϕ[ϕ1 := ϕ2]where ϕ[ϕ1 := ϕ2] is the formula ϕ in which we have replaced all occurrences of ϕ1 by ϕ2.Proposition 3. Let ϕ ∈ LKSTIT++ . Then, red(ϕ) ↔ ϕ is KSTIT-valid.The following Proposition 4 is necessary in order to prove the completeness of the logic df KSTIT+.Proposition 4. Let ϕ ∈ Ldf KSTIT+ . Then, red(ϕ) ∈ Ldf KSTIT.+Corollary 4. The validities of dfKSTITlary 3 together with the reduction axioms of Proposition 2 and the rule of replacement of proved equivalents.are completely axiomatized by the axioms and inference rules of dfKSTIT provided in Corol-Decidability of the logic of df KSTIT+(Theorem 3) and from Propositions 3 and 4. Indeed, red provides an effective procedure for reducing a df KSTITinto an equivalent df KSTIT-formula red(ϕ).follows straightforwardly from the known decidability of the base logic df KSTIT-formula ϕ++Corollary 5. The satisfiability problem of dfKSTITis decidable.7.3. Adapting behavior during a dialogue with the userIt has to be noted that in PAL announcements are usually viewed as communicative actions performed by an agent thatis ‘outside the system’, i.e. that is not part of the set of agents AGT under consideration. However, communicative actionsperformed by agents in AGT can be modelled in PAL by considering a particular subset of announcements of agents’ mental834E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847states. In particular, we here identify the event “agent i announces that ϕ is true” (or “agent i says that ϕ is true”) withthe announcement of the formula Kiϕ. Thus, we write say(i, ϕ) instead of !Kiϕ, and [say(i, ϕ)]ψ abbreviates [!Kiϕ]ψ . Inother words, we here identify agent i’s act of announcing that ϕ with the announcement of the fact that i knows that ϕ.A similar point of view is taken by [3].The dynamic extension of the logic KSTIT presented in Section 7.2 can easily incorporate rules which specify how, duringa dialogue with a human user, an artificial agent should adapt its behavior depending on the expected effects of certaindialogue moves on the user’s emotions.In order to formalize this kind of rules in our logic, we introduce a function Pre such that, for every formula θ in+ , Pre(θ) is the feasibility (or executability) precondition of the public announcement of θ . We denote with (cid:4)(cid:4)!θ(cid:5)(cid:5)ϕ theLfact ‘the public announcement of θ will possibly occur, and ϕ will be true afterwards’, and we define it as follows:df KSTIT(cid:4)(cid:4)!θ(cid:5)(cid:5)ϕ def= Pre(θ) ∧ (cid:4)!θ(cid:5)ϕ.Consequently, (cid:4)(cid:4)!θ(cid:5)(cid:5)(cid:18) is logically equivalent to Pre(θ) ∧ θ , that is, the public announcement of θ will possibly occur if andonly if its feasibility precondition holds and θ is true. As we here identify the event “agent i announces that ϕ is true” (i.e.say(i, ϕ)) with the announcement of the formula Kiϕ (i.e. !Kiϕ), (cid:4)(cid:4)say(i, ϕ)(cid:5)(cid:5)ψ abbreviates (cid:4)(cid:4)!Kiϕ(cid:5)(cid:5)ψ .Remark. Note that the definition of the operator (cid:4)(cid:4)!θ(cid:5)(cid:5) forces agents to be sincere when performing a speech act. In particu-lar, we have that an agent i will possibly announce that ϕ is true (i.e. (cid:4)(cid:4)say(i, ϕ)(cid:5)(cid:5)(cid:18)) only if i knows that ϕ is true (i.e. Kiϕ).This assumption about sincerity is however acceptable for the scenario introduced in Section 7.1 in which a tutoring agentwhich has to take care of a human user can be reasonably supposed to be cooperative and sincere with the human user.Let us go back to the scenario introduced in Section 7.1. We suppose that in this scenario the tutoring agent’s decisionto perform a certain dialogue move depends on the tutoring agent’s expectations about the effects of this dialogue move onthe human user’s emotions. In particular, we suppose that:• the tutoring agent t will possibly tell to the human user u that he passed the exam if and only if, t knows that bytelling to u that he passed the exam u will rejoice for having passed the exam and that at the present stage u does notrejoice for having passed the exam;• the tutoring agent t will possibly tell to the human user u that he failed the exam if and only if, t knows that by tellingto u that he failed the exam u will not regret for having failed the exam.The previous two rules can be formally represented as follows:(cid:4)Pre(cid:4)Pre(cid:5)= Ktsay(t, passu)(cid:5)say(t, ¬passu)(cid:6)(cid:7)say(t, passu)(cid:7)(cid:6)say(t, ¬passu)= KtREJOICEupassu∧ Kt¬REJOICEupassu,¬REGRETu¬passu.Let us first suppose that, according to the tutoring agent: the user would like to pass the exam, the user does not knowwhether he passed the exam, the user knows that necessarily if studied then he would have passed the exam, and the userknows that he had the opportunity to study. Moreover, the tutoring agent knows that the user failed the exam. Thus, thetutoring agent’s knowledge base KB∗∗can be formally represented by the conjunction of the following five formulas:∧ ¬Ku¬passu)• KtDESupassu• Kt(¬Kupassu• KtKu[∅]([u]studiedu → passu)• KtKu(cid:4)∅(cid:5)[u]studiedu• Kt¬passu.The following validity highlights that, given its knowledge base KB∗∗user that he failed the exam., the tutoring agent will refrain from telling to the|(cid:12)KSTIT(cid:9)(cid:9)(cid:8)(cid:8)+ KB∗∗ → ¬(cid:18).say(t, ¬passu)(23)Now let us suppose that, according to the tutoring agent: the user would like to pass the exam, the user does not knowwhether he passed the exam, the user knows that necessarily if did not study then he would have failed the exam, andthe user knows that he had the opportunity not to study. Moreover, the tutoring agent knows that the user passed theexam. Thus, the tutoring agent’s knowledge base KB∗∗∗can be formally represented by the conjunction of the followingfive formulas:• KtDESu passu• Kt(¬Ku passu• KtKu[∅]([u]¬studiedu → ¬passu)∧ ¬Ku¬passu)E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847835• KtKu(cid:4)∅(cid:5)[u]¬studiedu• Kt passu.The following validity highlights that, given its knowledge base KB∗∗∗he passed the exam and, after that, the user will rejoice for having passed the exam., the tutoring agent will possibly tell to the user that|(cid:12)KSTIT+ KB∗∗∗ →(cid:8)(cid:8)(cid:9)(cid:9)say(t, passu)REJOICEupassu.(24)8. Related worksAs emphasized in the introduction emotion is a very active field in AI. Several computational architectures of affectiveagents have been proposed in the last few years (see, e.g., [46,21,18]). The cognitive architecture EMA (Emotion and Adap-tion) [27] is one of the best example of research in this area. EMA defines a domain independent taxonomy of appraisalvariables stressing the many different relations between emotion and cognition, by enabling a wide range of internal ap-praisal and coping processes used for reinterpretation, shift of motivations, goal reconsideration, etc. EMA also deals withcomplex social emotions based on attributions of responsibility such as guilt and shame.There are also several researchers who have developed formal languages which allow to reason about emotions and tomodel affective agents. We discuss here some of the most important formal approaches to emotions and compare themwith our approach.Meyer et al.’s logic of emotions. One of the most prominent formal analysis of emotions is the one proposed by Meyer etal. [40,58,62]. In order to formalize emotions, they exploit the logical framework KARO [41]: a framework based on a blendof dynamic logic with epistemic logic, enriched with modal operators for motivational attitudes such as desires and goals.In Meyer et al.’s approach each instance of emotion is represented with a special predicate, or fluent, in the jargon ofreasoning about action and change, to indicate that these predicates change over time. For every fluent a set of effectsof the corresponding emotions on the agent’s planning strategies are specified, as well as the preconditions for triggeringthe emotion. The latter correspond to generation rules for emotions. For instance, in [40] generation rules for four basicemotions are given: joy, sadness, anger and fear, depending on the agent’s plans. More recently [62], generation rules forsocial emotions such as guilt and shame have been proposed.Contrarily to Meyer et al.’s approach, in our logic there are no specific formal constructs, like special predicates or fluents,which are used to denote that a certain emotion arises at a certain time. We just define the appraisal pattern of a givenemotion in terms of some cognitive constituents such as desire and knowledge. For instance, according to our definition ofregret, an agent regrets for χ if and only if, he desires ¬χ and, i knows that it could have prevented χ to be true now. Inother words, following the so-called appraisal theories in psychology (see Section 2), in our approach an emotion is reducedto its appraisal variables which can be defined through the basic concepts of a BDI logic (e.g. knowledge, belief, desires,intentions).It has to be noted that, although Meyer et al. provide a detailed formal analysis of emotions, they do not take into accountcounterfactual emotions. This is also due to some intrinsic limitations of the KARO framework in expressing counterfactualreasoning and statements of the form “agent i could have prevented χ to be true” which are fundamental constituents ofthis kind of emotions. Indeed, standard dynamic logic on the top of which KARO is built, is not suited to express suchstatements. In contrast to that, our STIT-based approach overcomes this limitation.Note also that while Meyer et al. do not prove completeness and do not study complexity of their logic of emotions,these are central issues in our work. As emphasized in the introduction of the article, our aim is to develop a logic which issufficiently expressive to capture the fundamental constituents of counterfactual emotions and, at the same time, with goodmathematical properties in terms of decidability and complexity.Other logical approaches to emotions. Adam et al. [1] have recently exploited a BDI logic in order to provide a logical formal-ization of the emotion types defined in Ortony, Clore and Collins’s model (OCC model) [42] (see Section 2.1 for a discussionof this model). Similarly to our approach, in Adam et al.’s approach emotion types are defined in terms of some primitiveconcepts (and corresponding modal operators) such as the concepts of belief, desire, and action which allow to capturethe different appraisal variables of emotions proposed in the OCC model such as the desirability of an event, probabilityof an event, and degree of responsibility of the author of an action. However, Adam et al. do not consider counterfactualemotions. In fact, the logic proposed by Adam et al. is not sufficiently expressive to capture counterfactual thinking aboutagents’ choices and actions on which emotions like regret, rejoicing, disappointment and elation are based. Moreover, thisis due to some limitations of the OCC typology which does not contain definitions of emotions based on counterfactualthinking such as regret and rejoicing.In [20] a formal approach to emotions based on fuzzy logic is proposed. The main contribution of this work is a quan-tification of emotional intensity based on appraisal variables like desirability of an event and its likelihood. For example,following [42], in FLAME the variables affecting the intensity of hope with respect to the occurrence of a certain eventare the degree to which the expected event is desirable, and the likelihood of the event. However, in FLAME only basicemotions like joy, sadness, fear and hope are considered and there is no formal analysis of counterfactual emotions as theones analyzed in our work.836E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–8479. ConclusionA logical framework which allows to formalize and to reason about counterfactual emotions has been proposed in thisarticle. This framework is based on a decidable and finitely axiomatizable fragment of STIT logic called df STIT. We haveshown that an epistemic extension of df STIT called df KSTIT is sufficiently expressive to capture the fundamental con-stituents of counterfactual emotions and, at the same time, it has good mathematical properties in terms of complexity andaxiomatizability. We have proved that the satisfiability problem of df KSTIT is NP-complete if card(AGT) = 1 and PSPACE-complete if card(AGT) (cid:3) 2. This first result is fundamental in order to claim that we can write down algorithms in df KSTITto reason about counterfactual emotions such as regret, rejoicing, disappointment and elation. Moreover, we have provideda complete axiomatization of df KSTIT logic. This second result is also important because it shows that we can perform syn-tactic reasoning in df KSTIT about counterfactual emotions. We hope that the analysis developed in this paper will be usefulfor improving understanding of affective phenomena and will offer an interesting perspective on computational modelingof affective agents and systems.Directions for our future research are manifold. The STIT fragment studied in Section 3 has an interesting expressivity,as it allows to capture subtle aspects of counterfactual reasoning about agents’ choices. However, the reader may remarkthat there is a gap between the complexity of the satisfiability problem of a formula in df STIT (NP-complete) and thecomplexity of the satisfiability problem of a formula in df KSTIT (PSPACE-complete). Of course, the complexity for df KSTITcannot be improved because the satisfiability problem of S5n is already PSPACE-complete. An interesting open question isto identify a more expressive fragment of STIT such that its satisfiability problem is PSPACE-complete and such that addingknowledge will not increase the complexity of its satisfiability problem. However, we want to emphasize that the STITfragment studied in Section 3 already has an interesting expressivity. Indeed, as we have shown in Section 4, it allows tocapture subtle aspects of counterfactual reasoning about agents’ choices.We have presented in Section 7 a decidable dynamic extension of the logic df KSTIT called df KSTITand we have shownhow it can be used in order to capture interesting aspects of dialogue between an artificial agent and a human user. Wealso postpone to future research an analysis of the complexity of this logic.+An analysis of intensity of counterfactual emotions was also beyond the objectives of the present work. However, we in-tend to investigate this issue in the future in order to complement our qualitative analysis of affective phenomena witha quantitative analysis. Moreover, we have focused in this paper on the logical characterization of four counterfactualemotions: regret, rejoicing, disappointment and elation. We intend to extend our analysis in the future by studying thecounterfactual dimension of “moral” emotions such as guilt and shame. Indeed, as several psychologists have shown (see,e.g., [36]), guilt involves the conviction of having injured someone or of having violated some norm or imperative, and thebelief that this could have been avoided.Appendix A. AnnexA.1. Proof of Proposition 1Let ϕ be a formula of LSTIT.• If card(AGT) (cid:2) 2: ϕ is STIT-satisfiable iff ϕ is NCL-satisfiable;• If card(AGT) (cid:3) 3: if ϕ is STIT-satisfiable then ϕ is NCL-satisfiable. (The converse is false: there exists ϕ such that ϕ isNCL-satisfiable and ¬ϕ is STIT-valid.)instead of AGT \ J . LetProof. Let us prove that a STIT-model is a NCL-model. For notational convenience, we write JM = (W , {R J } J ⊆AGT , V ) be STIT -model and let us prove that it is an NCL model. It suffices to prove that the constraints on(cid:2)a NCL model are true in M. By the constraint 2 of Definition 1, we have R J 1∪ J 2R{ j} ==∩ R J 2 . Now let us prove R∅ ⊆ R J ◦ RAGT\ J . If w R∅ v, then the constraint 3 of Definition 1R J 1gives:j∈ J R{ j}(v) (cid:10)= ∅. That is to say: R J (w) ∩ R J (v) (cid:10)= ∅. So w R J ◦ R J v.∩ R J 2 . So we have R J 1∪ J 2j∈ J R{ j}(w) ∩Now given that a STIT-model is a NCL-model, for all cardinalities of AGT, we have the implication “ϕ is STIT-satisfiable⊆ R J 1R{ j} =R{ j} ∩j∈ J 1∪ J 2j∈ J 1j∈ J 2(cid:2)(cid:2)(cid:2)(cid:2)implies ϕ is NCL-satisfiable”.If card(AGT) = 1, we have that if ϕ is STIT -satisfiable then ϕ is NCL-satisfiable. Indeed, both the logic STIT and NCL arejust the logic S5 for the operator [∅] because the operator [1] is trivial (as we have [1]ϕ ↔ ϕ).If card(AGT) = 2, from [29] we have that STIT is exactly the logic S52 with operators [1] and [2]. (We do not care aboutoperators [{1, 2}] and [∅] because we have the two validities [{1, 2}]ϕ ↔ ϕ and [∅]ϕ ↔ [1][2]ϕ.) Concerning NCL, directlyfrom the axiomatics of NCL, we have that NCL is exactly [S5, S5] with operators [1] and [2]. As S52 = [S5, S5] [24], wehave that STIT and NCL have the same satisfiable formulas.If card(AGT) (cid:3) 3, the problem of satisfiability of NCL is in NEXPTIME (see [5] or [54]) whereas the problem of satisfiabilityof STIT is undecidable (see [29]). So the two logics do not have the same satisfiable formulas.To sum up, we have:• If card(AGT) = 1, STIT, S5 and NCL are the same logic;E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847837• If card(AGT) = 2, STIT, S52 and NCL are the same logic;• If card(AGT) (cid:3) 3, we have:◦ STIT and S5card(AGT) are the same logic;◦ If a formula is STIT-satisfiable then it is NCL-satisfiable. However, there exists a NCL-satisfiable formula which is notSTIT-satisfiable. (cid:2)A.2. Proof of Lemma 1Let M = (W , R, V ) be a NCL-model. Let r be a positive integer. Let w 1, . . . , wr ∈ W be such that for all i, j ∈ {1, . . . , r},w i R∅ w j . Let J 1, . . . , J r ⊆ AGT be such that i (cid:10)= j implies J i ∩ J j = ∅. We have:(cid:3)R J i (w i) (cid:10)= ∅.i=1...rProof. For r = 0 the lemma is true by convention. Let us prove the lemma by recurrence on r ∈ N∗statement of the lemma.. Let us call P(r) the• P(1) is true.• Let us prove P(2) because we need it in order to prove P(r + 1) from P(r).Let u and w be in W such that u R∅ w. Letu R J ◦ R J w. And then u R J ◦ R K w. This proves P(2).J , K ⊆ AGT be two coalitions such thatJ ∩ K = ∅. As u R∅ w, we have• Now, assume that P(r) is true for a fixed r ∈ N∗and let us prove that P(r + 1) is true. Let w 1, . . . , wr, wr+1 ∈ W besuch that for all i, j ∈ {1, . . . , r}, w i R∅ w j . Let J 1, . . . , J r, J r+1 ⊆ AGT be such that i (cid:10)= j implies J i ∩ J j = ∅. As P (r) isi=1,...,r R J i (w i) (cid:10)= ∅. Let us consider a worldassumed, we can apply it on (w 1, . . . , wr) and ( J 1, . . . , J r) and obtainw such that w ∈i=1,...,r J i (w) and R J r+1 (wr+1). By applying P (2) on (w, wr+1), andi=1,...,r R J i (w i). Now consider R(cid:10)i=1,...,r J i (w) ∩ R J r+1 (wr+1) contains((cid:2)i=1,...,r R J i (w) ⊆a point v. Note that by constraint 1 of Definition 3 we have R(cid:2)i=1,...,r J i (w) ∩ R J r+1 (wr+1) is not empty, i.e. R(cid:2)(cid:2)i=1,...,r J i, J r+1), we obtain that Ri=1,...,r R J i (w). Asi=1,...,r J i (w) ⊆(cid:10)i=1,...,r+1 R J i (w i). In other words, P(r + 1) is true.i=1,...,r R J i (w i), we have a point v in(cid:2)(cid:2)(cid:10)(cid:10)(cid:10)Conclusion: We have proved by recurrence that for all r (cid:3) 1, P(r) is true. (cid:2)A.3. Proof of Theorem 2Let ϕ ∈ Ldf STIT. Then, the following three propositions are equivalent:1. ϕ is NCL-satisfiable;2. ϕ is STIT-satisfiable;3. ϕ is STIT-satisfiable in a polynomial sized product STIT-model.Proof. As “2. implies 1.” has been investigated in Proposition 1, we focus here on the proof of “1. implies 3.” and we use aselection-of-points argument as in [35]. Let ϕ be a NCL-satisfiable formula: there exists a NCL-model M = (W , V ) and z0such that M, z0 |(cid:12) ϕ. The proof is divided in two parts. We first construct from M a product STIT-model M(cid:21) = (W(cid:21)).such that M(cid:21), (Z0, . . . , Z0) |(cid:12) ϕ. Broadly speaking, we takeSecondly we ensure that there exists a point (Z0, . . . , Z0) ∈ Wcare in the construction to create a new point in M(cid:21)for each subformula (cid:4)∅(cid:5)ψ of ϕ true in M. We also take care toconstruct enough points so that all subformulas (cid:4)∅(cid:5)ψ and [ J ]χ of ϕ false at z0 of M can also be false in M(cid:21)(cid:21), V.(cid:21)Notations.• Elements of W are noted x, y, etc. Elements of W(cid:21)are noted (cid:22)x, (cid:22)x0, (cid:22)y, etc. x j stands for the j-th coordinate of (cid:22)x. Given• (P , . . . , P ) denotes the vector (cid:22)x where for all j ∈ AGT, x j = P . Given a coalition J , (P , . . . , P ) J denotes (cid:22)x J where for allan element (cid:22)x, we note (cid:22)x J = (x j) j∈ J ;j ∈ J , x j = P ;• SF(ϕ) denotes the set of all subformulas of ϕ. SF1(ϕ) is the set of all subformulas of ϕ which are not in the scope ofa modal operator and which are of the form [ J ]χ where χ is propositional. For instance, if ϕ = [1]p ∧ (cid:4)∅(cid:5)[2]q, thenSF(ϕ) = {p, q, [1]p, [2]q, (cid:4)∅(cid:5)[2]q, ϕ} whereas SF1(ϕ) = {[1]p}.Part 1: we define the model M(cid:21). The definition of M(cid:21)relies on the following two sets of formulas:• Pos = {ψ | (cid:4)∅(cid:5)ψ ∈ SF(ϕ) and M, z0 |(cid:12) (cid:4)∅(cid:5)ψ} ∪ {Z0} where Z0 =are called positive formulas.(cid:11){[ J ]χ |[ J ]χ ∈SF1(ϕ) and M,z0|(cid:12)[ J ]χ }[ J ]χ . Formulas in Pos838E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847• Neg = {[ J ]χ | [ J ]χ ∈ ψ and (cid:4)∅(cid:5)ψ ∈ SF(ϕ) and M, z0 (cid:10)|(cid:12) (cid:4)∅(cid:5)ψ} ∪ Neg_in_z0 where Neg_in_z0 = {[ J ]χ | [ J ]χ ∈ SF1(ϕ) andM, z0 (cid:10)|(cid:12) [ J ]χ }. Formulas in Neg are called negative formulas.Example 7. Suppose that ϕ = (cid:4)∅(cid:5)([1]χ1 ∧ [{1, 3}]χ2) ∧ ¬(cid:4)∅(cid:5)([2]χ3 ∧ [4]χ4) ∧ [5]χ5 ∧ [6]χ6 ∧ ¬[7]χ7 ∧ ¬[8]χ8 and that M,z0 |(cid:12) ϕ.Then we have:• Z0 = [5]χ5 ∧ [6]χ6;• Pos = {[1]χ1 ∧ [{1, 3}]χ2, [5]χ5 ∧ [6]χ6};• Neg_in_z0 = {[7]χ7, [8]χ8};• Neg = {[2]χ3, [4]χ4, [7]χ7, [8]χ8}.First we define the Cartesian product W(cid:21) = C n = C × C ×· · ·× C where C = Pos ∪ {0, . . . , card(Neg) − 1}. Then we introducefew notations and prove the following Lemma 2 that allows us to define V• For all (cid:22)x ∈ W(cid:21), for all P ∈ Pos, we consider the set:(cid:21):Coord• For all (cid:22)x ∈ W(cid:22)x=P(cid:21)= { j ∈ AGT | x j = P }., we consider the set:(cid:12)(cid:13)(cid:13) P ∈ Pos, [ J ]χ ∈ SF(P ), J ⊆ Coordχ(cid:14);(cid:22)x=P=Pos(cid:22)xIntuitively Pos(cid:22)x denotes a set of boolean formulas that must be true in (cid:22)x because of positive formulas. Formulas areboolean because of the syntactic restriction over the language (definition of df STIT). For instance let us consider thepositive formula P = [1]p ∧ [{2, 3}]q. The model M(cid:21)will be designed so that the point (P , . . . , P ) is the world where Pmust be true. Indeed, for all α2, . . . , αn ∈ C , the set Pos(P ,α2,...,αn) contains p. In the same way, for all α1, α4, . . . , αn ∈ C ,the set Pos(α1,P ,P ,α4,...,αn) contains q.• For all (cid:22)x ∈ W(cid:21), we consider the formulaBoxes(cid:22)x=(cid:15)χ .χ ∈Pos(cid:22)xIntuitively Boxes(cid:22)x is the conjunction of all (boolean) formulas which have to be true in (cid:22)x because of positive formulas.• We fix a bijection i : {0, . . . , card(Neg) − 1} → Neg.We need such a bijection between integers in {0, . . . , card(Neg) − 1} and Neg in order to use arithmetic operations +(cid:21)and mod (modulo) for defining V• We extend i to a function from W(cid:16)to Neg in the following way:(cid:18).(cid:21)(cid:17)i((cid:22)x) = ij∈{1,...,n}|x j ∈{0,...,card(Neg)−1}x j mod card(Neg)where mod is the operation of modulo. Intuitively, i((cid:22)x) will correspond to the negative formula [ J ]χ which will be falseat (cid:22)x if there are no contradictions with Boxes(cid:22)x.Lemma 2. For all (cid:22)x ∈ W(cid:21), there exists y ∈ W such that M, y |(cid:12) Boxes(cid:22)x.Proof. We just recall that by definition of Pos, we have that for all P ∈ Pos, M, z0 |(cid:12) (cid:4)∅(cid:5)P . So for all P ∈ Pos, there exists apoint y P ∈ W , such that M, y P |(cid:12) P .Let (cid:22)x ∈ W(cid:21). In the proof, we first define y ∈ W . Secondly we prove that M, y |(cid:12) Boxes(cid:22)x.1. First, we define the candidate y ∈ W of our Lemma 2. As M is an NCL-model, M satisfies the assumption of indepen-dence of agents (Lemma 1). We are simply going to apply Lemma 1 where points are { y P | P ∈ Pos} and sets of agents(cid:22)xare {Coord=P , P ∈ Pos}. We take care that sets Coord(cid:3)(cid:22)x=P are disjoint if P ranges over Pos.6 Briefly, Lemma 1 leads to:R(cid:22)xCoord=PP ∈Pos( y P ) (cid:10)= ∅.As this set is not empty, let us consider y in it. Let y ∈(cid:2)P ∈Pos RCoord(cid:22)x=P( y P ).6 Indeed, for all P , Q ∈ Pos, Coord(cid:22)x=P∩ Coord(cid:22)x=Q(cid:10)= ∅, implies that there exists j ∈ Coord(cid:22)x=P∩ Coord(cid:22)x=Q . By definition of Coord(cid:22)x=P , we have x j = P . In thesame way, by definition of Coord(cid:22)x=P , we have x j = Q . Hence P = Q .E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847839Fig. 7. Model M(cid:21)in J performs action “ P ”.: a point (P , . . . , P ) and the subspace of all points (cid:22)x such that (cid:22)x J = (P , . . . , P ) J , that is, the subspace of worlds of M(cid:21)where every agent2. We have defined y ∈ W . Now let us prove that M, y |(cid:12) Boxes(cid:22)x. In other words, we are going to prove that for allχ ∈ Pos(cid:22)x, M, y |(cid:12) χ .Let χ ∈ Pos(cid:22)x. By definition of Pos(cid:22)x, there exists P ∈ Pos and [ J ]χ ∈ SF(P ) such that J ⊆ Coordand, consequently, we have M, (cid:22)y P |(cid:12) [ J ]χ . By definition of y, we have y P RRy. But as J ⊆ Coord⊆ R J . So, we have y P R J y and, consequently, we have M, y |(cid:12) χ . So we have M, y |(cid:12) Boxes(cid:22)x. (cid:2)(cid:22)x=P . Recall that M, (cid:22)y P |(cid:12) P(cid:22)x=P , we haveCoord(cid:22)x=PCoord(cid:22)x=PFinally, we define V(cid:21) = f ◦ V where fis a mapping from W(cid:21)to W defined by:• f (Z0, . . . , Z0) = z0;• For all (cid:22)x ∈ W(cid:21)such that (cid:22)x (cid:10)= (Z0, . . . , Z0), i((cid:22)x) is of the form [ J ]χ ∈ Neg.– If there exists y ∈ W such that M, y |(cid:12) ¬χ ∧ Boxes(cid:22)x then f ((cid:22)x) def= y.– Else, we choose a world y in W such that M, y |(cid:12) Boxes(cid:22)x (such a world exists because of Lemma 2) and we definef ((cid:22)x) def= y.Clearly, M(cid:21) = (W(cid:21), V(cid:21)) is a product STIT-model and its size is polynomial. As V(cid:21) = f ◦ V , we have immediately thefollowing lemma useful for the Part 2 of the proof.Lemma 3. For all (cid:22)x ∈ W(cid:21), M(cid:21), (cid:22)x |(cid:12) Boxes(cid:22)x.Proof. Let (cid:22)x ∈ WRecall also that Boxes(cid:22)x is a boolean formula. So we obtain M, (cid:22)x |(cid:12) Boxes(cid:22)x. (cid:2). By definition of f , M, f ((cid:22)x) |(cid:12) Boxes(cid:22)x. But recall that V(cid:21)(cid:21) = f ◦ V : in particular, we have V(cid:21)((cid:22)x) = V ( f ((cid:22)x)).Part 2 of the proof : we prove M(cid:21), (Z0, . . . , Z0) |(cid:12) ϕ. We prove the following two facts:Fact 1. For all (cid:4)∅(cid:5)ψ of ϕ, we have M, z0 |(cid:12) (cid:4)∅(cid:5)ψ iff M(cid:21), (Z0, . . . , Z0) |(cid:12) (cid:4)∅(cid:5)ψ .Fact 2. For all [ J ]χ ∈ SF1(ϕ), we have M, z0 |(cid:12) [ J ]χ iff M(cid:21), (Z0, . . . , Z0) |(cid:12) [ J ]χ .⇒ of Fact 1 and ⇒ of Fact 2 In order to prove it, it suffices to prove that for all P ∈ Pos we have M(cid:21), (P , . . . P ) |(cid:12) P .Let P ∈ Pos. P is a conjunction of formulas of the form [ J ]χ where χ is a Boolean formula. Let [ J ]χ ∈ SF(P ). We havesuch that (cid:22)x J = (P , . . . , P ) J , we have M, (cid:22)x |(cid:12) χ . The situation is drawn in Fig. 7. But for thoseto show that for all (cid:22)x ∈ W(cid:22)x such that (cid:22)x J = (P , . . . , P ) J , we have J ⊆ Coord→ χ . But, by Lemma 3, we haveM(cid:21), (cid:22)x |(cid:12) Boxes(cid:22)x and this leads to M(cid:21), (cid:22)x |(cid:12) χ . Finally, M(cid:21), (P , . . . , P ) |(cid:12) [ J ]χ . Therefore we have M(cid:21), (P , . . . , P ) |(cid:12) P .(cid:22)x=P . So χ ∈ Pos(cid:22)x implies that |(cid:12) Boxes(cid:22)x⇐ of Fact 1 Let N = [ J 1]χ1 ∧ . . . [ J k]χk be such that (cid:4)∅(cid:5)N ∈ SF(ϕ) and M, z0 (cid:10)|(cid:12) (cid:4)∅(cid:5)N. Let us prove that for all (cid:22)x0 ∈ W,(cid:21)(cid:21)M(cid:21), (cid:22)x0 |(cid:12) ¬N. We suggest the reader to look at Fig. 8 during this part.Consider y0 = f ((cid:22)x0) ∈ W . By definition off , we have M, y0 |(cid:12) Boxes(cid:22)x0 . We also have M, y0 |(cid:12) ¬N. So, there is i ∈{1, . . . , k} such that M, y0 (cid:10)|(cid:12) [ J i]χi . Notice that [ J i]χi belongs to Neg.Now we are going to prove that M(cid:21), (cid:22)x0 (cid:10)|(cid:12) [ J i]χi . We are going to define a vector (cid:22)x ∈ W¬χi . As depicted in Fig. 8, we want that J i performs the same joint action both in (cid:22)x0 and in (cid:22)x.(cid:21)such that (cid:22)x0 R(cid:22)x and M(cid:21), (cid:22)x |(cid:12)(cid:21)J iThe case where J i = AGT is trivial: we take (cid:22)x = (cid:22)x0. Else, let j0 be an arbitrary agent in J i and (cid:22)x ∈ W(cid:21)be the candidatevector such that:= (cid:22)x0 J i ;• (cid:22)x J i• x j = 0 for all j ∈ J i \ { j0};• x j0−1([ J i]¬χi) −= i(cid:19)j∈AGT| j(cid:10)= j0 and x j ∈{0,...,card(Neg)−1} x j mod N.840E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847Fig. 8. Proof of ⇐ of Fact 1.Now we check that M(cid:21), (cid:22)x |(cid:12) ¬χi . As M, y0 |(cid:12) (cid:4) J i(cid:5)¬χi , there exists y ∈ W such that y R J i y0 and M, y |(cid:12) ¬χi . Noticethat M, y |(cid:12) Boxes(cid:22)x. Indeed, Boxes(cid:22)x only contains subformulas χ1 such that [K ]χ1 is a subformula of Pos where K ⊆ J i(because only coordinates in J i of (cid:22)x are in Pos; the others are integer). Then we have |(cid:12) Boxes (cid:22)x0→ Boxes(cid:22)x. Hence M, y |(cid:12)∧ ¬χi . So, as i((cid:22)x) = [ J i]¬χi , by definition of f we have that f ((cid:22)x) is a such pointBoxes(cid:22)x. To sum up, we have M, y |(cid:12) Boxes(cid:22)xy where M, y |(cid:12) Boxes(cid:22)x∧ ¬χi . Finally, by definition of V, we have M(cid:21), (cid:22)x |(cid:12) ¬χi .⇐ of Fact 2 Let us prove now that M(cid:21), (Z0, . . . , Z0) |(cid:12) Neg_in_z0. More precisely we prove that for all [ J ]χ ∈ Neg_in_z0,M(cid:21), (Z0, . . . , Z0) |(cid:12) (cid:4) J (cid:5)¬χ . We know that M, z0 |(cid:12) (cid:4) J (cid:5)¬χ . So there exists y ∈ W such that y R J z0 and M, y |(cid:12) ¬χ . Thecase J = AGT is trivial. Let us consider j0 ∈ J and let us define the candidate vector (cid:22)x:(cid:21)• (cid:22)x J = (Z0, . . . , Z0) J ;• x j = 0 for all j ∈ J \ { j0};−1([ J ]χ ).• (cid:22)x j0= iLet us check that M(cid:21), (cid:22)x |(cid:12) ¬χ . Notice that Boxes(cid:22)x only contains Boolean formulas χ (cid:21)of Z0, where Jf ((cid:22)x) is a point y such that M, y |(cid:12) ¬χ ∧ Boxes(cid:22)x. By definition of Vare subformulas(cid:21) ⊆ J . Hence M, y |(cid:12) Boxes(cid:22)x. Furthermore, M, y |(cid:12) ¬χ . So by definition of f , as i((cid:22)x) = [ J ]χ , we have that(cid:21)where formulas [ J, M(cid:21), (cid:22)x |(cid:12) ¬χ .(cid:21)]χ (cid:21)The conclusion of the proof is left to the reader. (cid:2)A.4. Proof of Corollary 1Deciding if a formula in Ldf STIT is STIT-satisfiable is NP-complete.Proof. SAT is reducible to the STIT-satisfiability problem of a formula in Ldf STIT. Thus deciding if a formula in Ldf STIT isSTIT-satisfiable is NP-hard.Now let us see that it is in NP. According to Theorem 2, if a formula ϕ is STIT-satisfiable, ϕ is satisfiable in a polynomial-sized STIT-model. So a non-deterministic algorithm to solve the satisfiability problem can be as follows:• we guess a polynomial-sized model M(cid:21) = (W• we check whether M(cid:21), (cid:22)x |(cid:12) ϕ holds or not.(cid:21), V(cid:21)) and a world (cid:22)x ∈ W(cid:21);Note that checking whether M(cid:21), (cid:22)x |(cid:12) ϕ or not can be done in polynomial time in the size of M(cid:21)the size of M(cid:21)size of ϕ. (cid:2)and in the length of ϕ. Asis polynomial in the length of ϕ, checking whether M(cid:21), (cid:22)x |(cid:12) ϕ or not can be done in polynomial time in theA.5. Proof of Corollary 2A formula ϕ in Ldf STIT is STIT-valid iff we have (cid:17)NCL ϕ.Proof. We have:• for all formulas ϕ ∈ L, |(cid:12)NCL ϕ iff (cid:17)NCL ϕ (Theorem 1);• for all formulas ϕ ∈ Ldf STIT, |(cid:12)STIT ϕ iff |(cid:12)NCL ϕ (Theorem 2).Hence: for all formulas ϕ ∈ Ldf STIT, |(cid:12)STIT ϕ iff (cid:17)NCL ϕ. (cid:2)A.6. Proof of Theorem 3The satisfiability problem of df KSTIT is NP-complete if card(AGT) = 1 and PSPACE-complete if card(AGT) (cid:3) 2.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847841function sat(Σ, i)(∃) choose β a set of at most n subsets of CL(Σ) such that there exists S ∈ β such that Σ ⊆ S, where n is the number of operators Kiappearing in Σ .Check Ki ψ , ¬Ki ψ , K j ψ , Boolean coherence and STIT coherence:;(cid:21) ∈ β, Ki ψ ∈ S iff Ki ψ ∈ S(cid:21)1. for all S, S2. for all S ∈ β, Ki ψ ∈ S implies ψ ∈ S;3. for all S ∈ β, ¬Ki ψ ∈ S iff there exists S4. for all S ∈ β, for all j (cid:10)= i, K j ψ ∈ S implies ψ ∈ S;5. ψ1 ∧ ψ2 ∈ S iff (ψ1 ∈ S and ψ2 ∈ S);6. ψ1 ∨ ψ2 ∈ S iff (ψ1 ∈ S or ψ2 ∈ S);7. for all S ∈ β, ψ ∈ S xor ¬ψ ∈ S.8. check thatψ is STIT-satisfiable.(cid:11)ψ∈S|ψ∈LSTIT(cid:21) ∈ β such that ¬ψ ∈ S(cid:21);(cid:21) ∈ β(∀) choose S(∀) choose j ∈ AGT \ {i}if there exists a formula of the form ¬K j ψ in Scall sat({K j θ ∈ S(cid:21)} ∪ {¬K j θ ∈ S(cid:21)}, j)(cid:21),endIfendFunctionProof. card(AGT) = 1Fig. 9. An algorithm for the KSTIT-satisfiability problem of a given set of df KSTIT-formulas Σ .Let us consider the case card(AGT) = 1. In this case there are only three operators: [∅], [1], and K1. Nevertheless, the op-erator [1] can be removed because we force RAGT = idW in our models. As a K1 operator cannot appear after a [∅] operator,we can prove by a selected points argument that if a df KSTIT-formula is KSTIT-satisfiable, then it is in a polynomial sizedmodel (in [35], it is done for S5).card(AGT) (cid:3) 2Let us consider the case card(AGT) (cid:3) 2. Recall that the satisfiability problem of S5card(AGT) is PSPACE-hard [28]. But thelogic S5card(AGT) is embedded into df KSTIT. So deciding if a df KSTIT-formula ϕ is KSTIT-satisfiable is also PSPACE-hard.Now let us prove that the KSTIT-satisfiability problem of a given df KSTIT-formula is in PSPACE. As APTIME = PSPACE [15],it is sufficient to prove that this problem is in APTIME. Fig. 9 shows an alternating procedure sat(Σ , i) where Σ is a setof df KSTIT-formulas and i ∈ AGT. For all i ∈ AGT, when each formula of Σ starts with Ki or ¬Ki , then the call sat(Σ, i)succeeds if and only if the set of formulas Σ is KSTIT-satisfiable, that is, the conjunction of all formulas ϕ ∈ Σ is sat-isfiable. Note that Φ is satisfiable iff K1Φ is satisfiable. Thus, in order to check if Φ is satisfiable, we call sat({K1Φ}, 1).For all formulas ϕ, we define the set CL(ϕ) = SF(ϕ) ∪ {¬ψ | ψ ∈ SF(ϕ)}. CL(ϕ) contains all the subformulas of ϕ and theirnegations. For all sets of formulas Σ , we define CL(Σ) =ϕ∈Σ CL(ϕ).The procedure sat(Σ , i) is inspired by the algorithms of the satisfiability problem for S5n given in [28] and in [6]. Itchecks the satisfiability of a set of formulas Σ where all formulas of Σ starts with Ki or ¬Ki by first constructing anE i -equivalence class represented by the set of subsets of CL(Σ). A subset of CL(Σ) represents all formulas that are true ina given world of the E i -equivalence class.We require one of the worlds to satisfy Σ , that is, we require that there exists S ∈ β such that Σ ⊆ S. We then check thatall constraints on agent i’s knowledge are satisfied: steps 1, 2 and 3 in the algorithm of Fig. 9. We also check that constraintson other agents’ knowledge are satisfied in worlds of the E i -equivalence class: step 4. We check Boolean constraints: steps5, 6 and 7. We finally check that at each world of the E i -equivalence class all LSTIT-subformulas supposed to be true aretogether satisfiable: step 8. This verification can run non-deterministically in polynomial time thanks to Theorem 1.(cid:10)Finally we continue the construction of the model: at every point Sof the E i -equivalence class and for all agents j,we check if all constraints due to all subformulas of the form K jθ and ¬K jθ can be together satisfiable. Let l(Σ) be thenumber of epistemic modal operators in the formulas of Σ that have the maximal number of epistemic modal operators.(cid:21)}) < l(Σ) so that the termination is granted. During all the recursive call of the algorithmNote that l({K jθ ∈ Ssat({K1Φ}, 1), we only work with subformulas of K1Φ. The algorithm runs in polynomial time. (cid:2)(cid:21)} ∪ {¬K jθ ∈ S(cid:21)A.7. Proof of Theorem 4Let ϕ be a formula of Ldf KSTIT. We have equivalence between:• ϕ is satisfiable in KNCL;• ϕ is satisfiable in KSTIT.Proof. Unfortunately, the general results about completeness of fusion of logics given in [24] cannot be applied here becausewe are dealing with syntactic fragments.842E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847Fig. 10. From KNCL-model M to the KSTIT-model M(cid:21).⇑ We can prove that a KSTIT-model is a KNCL-model. The proof is similar to the proof of Proposition 1.⇓ Let Φ be a formula of Ldf KSTIT satisfiable in a KNCL-model, i.e. suppose that there exists a KNCL-model M =(W , {R J } J ⊆AGT , {E i}i∈AGT , V ) and w ∈ W such that M, w |(cid:12) Φ. We are going to define a KSTIT-model M(cid:21)from M satisfy-ing Φ. In order to do this, we are simply going to replace each “NCL-model” in the model M by an equivalent STIT-modelgiven by Theorem 2 as shown in Fig. 10.Consider the set:S = {s ∈ W | there exists a finite sequence i1, . . . in ∈ AGT such that w E i1◦ · · · ◦ E in s}where ◦ is the standard composition operation over binary relation.Let STIT-SF(Φ) be the set of all subformulas of Φ that do not contain an epistemic operator Ki .For all s ∈ S, we defineψs =(cid:15)(cid:15)ϕ ∧¬ϕ.ϕ∈STIT-SF(Φ)|M, s|(cid:12)ϕϕ∈STIT-SF(Φ)|M, s(cid:10)|(cid:12)ϕWe have M, s |(cid:12) ψs. As Φ is in the fragment df KSTIT, we have that ψs is in the fragment df STIT. So we can apply theTheorem 2: it gives the existence of a STIT-model Ms = (W s, {R s J } J ⊆AGT , V s) and rs ∈ W s such that Ms, rs |(cid:12) ψs.Now we define M(cid:21) = (W(cid:21), {R} J ⊆AGT , {E}i∈AGT , V(cid:21)) as follows:(cid:21)J(cid:21)i(cid:21) = {(s, t) | s ∈ S, t ∈ W s};• W(cid:21)= {(cid:4)(s, t), (s, t• RJ(cid:21)= {(cid:4)(s, rs), (s• Ei(cid:21)(s, t) = V s(t).• V(cid:21))(cid:5) ∈ W(cid:21), rs(cid:21) )(cid:5) | (s, s(cid:21) × W(cid:21) | (t, t(cid:21)) ∈ R s J };(cid:21)) ∈ E i} ∪ {(cid:4)(s, t), (s, t)(cid:5) | (s, t) ∈ W(cid:21)};Now we can prove by induction that for all subformulas ϕ of Φ, we have that for all s ∈ S, M, s |(cid:12) ϕ iff M(cid:21), (s, rs) |(cid:12) ϕ.(df STIT) If ϕ is a see-to-it formula or is of the form (cid:4)∅(cid:5)ψ where ψ is a see-to-it-formula, then ϕ does not containany epistemic operator. Hence by definition of ψs we have that ψs contains either ϕ or ¬ϕ. So, by definitionof the STIT-model Ms, we have M, s |(cid:12) ϕ iff Ms, rs |(cid:12) ϕ. And Ms, rs |(cid:12) ϕ is equivalent to M(cid:21), (s, rs) |(cid:12) ϕby definition of R(boolean cases) Boolean cases are left to the reader.(cid:21)J and V.(cid:21)(Kiϕ) Let us consider a subformula of the form Kiϕ. We have M, s |(cid:12) Kiϕ iff for all s(cid:21) |(cid:12) ϕ. By definition of S, this is equivalent to: for all shave M, sBy induction, this is equivalent to the fact that for all si this is equivalent to M(cid:21), (s, rs) |(cid:12) Kiϕ. (cid:2)definition of E(cid:21)(cid:21) ∈ S such that sE i s(cid:21)(cid:21)we have M(cid:21), (s(cid:21) ∈ W such that sE i swe have M, s(cid:21)we(cid:21) |(cid:12) ϕ.(cid:21), rs(cid:21) ) |(cid:12) ϕ. By(cid:21) ∈ S such that sE i sA.8. Proof of Validity (22) in Section 7.1|(cid:12)KSTIT KB∗ → Kt REJOICEu passu.Proof. We give a syntactic proof of the previous validity. We show that we have(cid:17)KNCL KB∗ → Kt REJOICEu passuby applying the axioms and rules of inference of KNCL. Then,|(cid:12)KSTIT KB∗ → KtREJOICEu passuE. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847843follows from Corollary 3 and the fact that KB∗ → KtREJOICEupassu∈ Ldf KSTIT.1. (cid:17)KNCL ¬[∅]([u]¬studiedu → [u]¬passu) → (cid:4)∅(cid:5)([u]¬studiedu ∧ ¬[u]¬passu)2. (cid:17)KNCL (cid:4)∅(cid:5)([u]¬studiedu ∧ ¬[u]¬passu) → (cid:4)∅(cid:5)([u]¬studiedu ∧ (cid:4)u(cid:5)passu)3. (cid:17)KNCL (cid:4)∅(cid:5)([u]¬studiedu ∧ (cid:4)u(cid:5)passu) → (cid:4)∅(cid:5)([u][u]¬studiedu ∧ (cid:4)u(cid:5)passu) by the standard S5 validity [ J ]χ ↔ [ J ][ J ]χ4. (cid:17)KNCL (cid:4)∅(cid:5)([u][u]¬studiedu ∧ (cid:4)u(cid:5)passu) → (cid:4)∅(cid:5)(cid:4)u(cid:5)([u]¬studiedu ∧ passu) by necessitation rule for [∅] and the standard va-lidity ([ J ]χ1 ∧ (cid:4) J (cid:5)χ2) → (cid:4) J (cid:5)(χ1 ∧ χ2)5. (cid:17)KNCL (cid:4) J (cid:5)ϕ → ((cid:4) J (cid:5)ϕ ∧ (cid:4)∅(cid:5)ϕ) by the NCL Axiom Mon6. (cid:17)KNCL (cid:4) J (cid:5)ϕ → (cid:4)∅(cid:5)ϕ by 57. (cid:17)KNCL (cid:4)∅(cid:5)(cid:4)u(cid:5)([u]¬studiedu ∧ passu) → (cid:4)∅(cid:5)(cid:4)∅(cid:5)([u]¬studiedu ∧ passu) by 6, necessitation rule for [∅] and the standard va-lidity ([∅]χ1 ∧ (cid:4)∅(cid:5)χ2) → (cid:4)∅(cid:5)(χ1 ∧ χ2)8. (cid:17)KNCL (cid:4)∅(cid:5)(cid:4)∅(cid:5)([u]¬studiedu ∧ passu) → (cid:4)∅(cid:5)([u]¬studiedu ∧ passu) by the standard S5 validity (cid:4)∅(cid:5)χ ↔ (cid:4)∅(cid:5)(cid:4)∅(cid:5)χ9. (cid:17)KNCL (cid:4)∅(cid:5)([u]¬studiedu ∧ passu) → ¬[∅]([u]¬studiedu → ¬passu)10. (cid:17)KNCL ¬[∅]([u]¬studiedu → [u]¬passu) → ¬[∅]([u]¬studiedu → ¬passu) from 1–4 and 7–911. (cid:17)KNCL [∅]([u]¬studiedu → ¬passu) → [∅]([u]¬studiedu → [u]¬passu) from 1012. (cid:17)KNCL ((cid:4)∅(cid:5)[u]¬studiedu ∧ [∅]([u]¬studiedu → [u]¬passu)) → (cid:4)∅(cid:5)[u]¬passu by the standard validity([∅]χ1 ∧ (cid:4)∅(cid:5)χ2) → (cid:4)∅(cid:5)(χ1 ∧ χ2)13. (cid:17)KNCL ((cid:4)∅(cid:5)[u]¬studiedu ∧ [∅]([u]¬studiedu → ¬passu)) → (cid:4)∅(cid:5)[u]¬passu from 11, 1214. (cid:17)KNCL Ku((cid:4)∅(cid:5)[u]¬studiedu ∧ [∅]([u]¬studiedu → ¬passu)) → Ku(cid:4)∅(cid:5)[u]¬passu by 13, Axiom K and necessitation rule for Ku15. (cid:17)KNCL (cid:4)∅(cid:5)[u]¬passu16. (cid:17)KNCL (cid:4)u(cid:5)[u]¬passu17. (cid:17)KNCL [u]¬passu18. (cid:17)KNCL (cid:4)u(cid:5)[u]¬passu19. (cid:17)KNCL (cid:4)AGT \ {u}(cid:5)(cid:4)u(cid:5)[u]¬passu→ (cid:4)AGT \ {u}(cid:5)(cid:4)u(cid:5)[u]¬passu by the NCL Axiom Elim(∅)→ [u]¬passu by Axiom 5 for [ J ]→ (cid:4)AGT \ {u}(cid:5)¬passu by 18, necessitation rule for [ J ] and the standard validity→ ¬passu by Axiom T for [u]→ ¬passu from 16, 17([ J ]χ1 ∧ (cid:4) J (cid:5)χ2) → (cid:4) J (cid:5)(χ1 ∧ χ2)→ (cid:4)AGT \ {u}(cid:5)¬passu from 15, 1920. (cid:17)KNCL (cid:4)∅(cid:5)[u]¬passu→ Ku(cid:4)AGT \ {u}(cid:5)¬passu by 20, Axiom K and necessitation rule for Ku21. (cid:17)KNCL Ku(cid:4)∅(cid:5)[u]¬passu22. (cid:17)KNCL Ku((cid:4)∅(cid:5)[u]¬studiedu ∧ [∅]([u]¬studiedu → ¬passu)) → Ku(cid:4)AGT \ {u}(cid:5)¬passu from 14, 2123. (cid:17)KNCL KtKu((cid:4)∅(cid:5)[u]¬studiedu ∧ [∅]([u]¬studiedu → ¬passu)) → KtKu(cid:4)AGT \ {u}(cid:5)¬passu by 22, Axiom K and necessitationrule for KtKi(χ1 ∧ χ2) ↔ (Kiχ1 ∧ Kiχ2)24. (cid:17)KNCL (KtKu(cid:4)∅(cid:5)[u]¬studiedu ∧ KtKu[∅]([u]¬studiedu → ¬passu)) → KtKu(cid:4)AGT \ {u}(cid:5)¬passu by 23, and the standard validity25. (cid:17)KNCL (KtDESu¬passu∧ KtKupassu∧ KtKu(cid:4)∅(cid:5)[u]¬studiedu ∧ KtKu[∅]([u]¬studiedu → ¬passu)) → REJOICEupassu from 24,definition of REJOICEi χ and the standard validity (Kiχ1 ∧ · · · ∧ Kiχn) ↔ Ki(χ1 ∧ · · · ∧ χn)26. (cid:17)KNCL KB∗ → REJOICEupassu from 25 andKB∗ = KtDESupassu∧ KtKupassu∧ KtKu(cid:4)∅(cid:5)[u]¬studiedu ∧ KtKu[∅]([u]¬studiedu → ¬passu) (cid:2)A.9. Proof of Proposition 2The following schemata are KSTIT+-valid:(Redp)(Red¬)(Red∧)(Red[ J ])(RedKi )(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:6)(cid:20)θ(cid:20)p ↔ p(cid:7)(cid:6)¬ϕ ↔ ¬(cid:20)θ(cid:20)(ϕ1 ∧ ϕ2) ↔(cid:6)[ J ]ϕ ↔ [ J ]Kiϕ ↔ϕ(cid:7)(cid:4)(cid:6)(cid:20)θ(cid:20)(cid:7)(cid:20)θ(cid:20)θ → Ki(cid:4)(cid:4)ϕ(cid:4)θ →(cid:7)(cid:6)(cid:20)θ(cid:20)ϕ2(cid:5)ϕ1 ∧(cid:5)(cid:5)(cid:6)(cid:7)(cid:20)θ(cid:20)ϕ∧(cid:4)¬θ → Ki(cid:4)¬θ →(cid:5)(cid:5)(cid:5)(cid:7)(cid:6)(cid:20)θ(cid:20)ϕProof. We here just prove the validity of reduction axioms Red[ J ] and RedKi . The proofs of the other reduction axioms goas in PAL [67].M, w |(cid:12) [(cid:20)θ(cid:20)]Kiϕ,IFF (if M, w |(cid:12) θ then M, w |(cid:12) [(cid:20)θ(cid:20)]Kiϕ) and (if M, w |(cid:12) ¬θ then M, w |(cid:12) [(cid:20)θ(cid:20)]Kiϕ),IFF (if M, w |(cid:12) θ then MIFF (if M, w |(cid:12) θ then for all v ∈ W such that w E(cid:20)θ(cid:20), w |(cid:12) Kiϕ) and (if M, w |(cid:12) ¬θ then M(cid:20)θ(cid:20), w |(cid:12) Kiϕ),v, M(cid:20)θ(cid:20)i(cid:20)θ(cid:20), v |(cid:12) ϕ) and (if M, w |(cid:12) ¬θ then for all v ∈ W such thatIFF (if M, w |(cid:12) θ then for all v ∈ W such that w E(cid:20)θ(cid:20)iv, M, v |(cid:12) [(cid:20)θ(cid:20)]ϕ) and (if M, w |(cid:12) ¬θ then for all v ∈ W such thatw E(cid:20)θ(cid:20)iv, M(cid:20)θ(cid:20), v |(cid:12) ϕ),w E(cid:20)θ(cid:20)iv, M, v |(cid:12) [(cid:20)θ(cid:20)]ϕ),844E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847IFF (if M, w |(cid:12) θ then for all v ∈ W such that w E i v and M, v |(cid:12) θ , M, v |(cid:12) [(cid:20)θ(cid:20)]ϕ) and (if M, w |(cid:12) ¬θ then for all v ∈ Wsuch that w E i v and M, v |(cid:12) ¬θ , M, v |(cid:12) [(cid:20)θ(cid:20)]ϕ),IFF (if M, w |(cid:12) θ then M, w |(cid:12) Ki(θ → [(cid:20)θ(cid:20)]ϕ)) and (if M, w |(cid:12) ¬θ then M, w |(cid:12) Ki(¬θ → [(cid:20)θ(cid:20)]ϕ)),IFF M, w |(cid:12) (θ → Ki(θ → [(cid:20)θ(cid:20)]ϕ)) ∧ (¬θ → Ki(¬θ → [(cid:20)θ(cid:20)]ϕ)).M, w |(cid:12) [(cid:20)θ(cid:20)][ J ]ϕ,(cid:20)θ(cid:20), w |(cid:12) [ J ]ϕ,IFF M(cid:20)θ(cid:20), v |(cid:12) ϕ,IFF for all v ∈ W such that w RIFF for all v ∈ W such that w R J v, M, v |(cid:12) [(cid:20)θ(cid:20)]ϕ,IFF M, w |(cid:12) [ J ][(cid:20)θ(cid:20)]ϕ. (cid:2)(cid:20)θ(cid:20)J v, MA.10. Proof of Proposition 4Let ϕ ∈ Ldf KSTIT+ . Then, red(ϕ) ∈ Ldf KSTIT.Proof. Proposition 4 is proved by induction on the structure of ϕ. For the atomic case, we have red(p) ∈ Ldf KSTIT. Then wehave to prove the following five inductive cases.1. Suppose: if ϕ1 ∈ L2. Suppose: if ϕ1 ∈ Lϕ1 ∧ ϕ2 ∈ Ldf KSTIT3. Suppose: if ϕ1 ∈ L4. Suppose: if ϕ1 ∈ L5. Suppose: if ϕ1 ∈ Ldf KSTITdf KSTIT+ then red(ϕ1) ∈ Ldf KSTIT. It follows that: if ¬ϕ1 ∈ L+ then red(ϕ1) ∈ Ldf KSTIT, and if ϕ2 ∈ L+ then red(¬ϕ1) ∈ Ldf KSTIT,+ then red(ϕ2) ∈ Ldf KSTIT. It follows that: ifdf KSTITdf KSTIT+ then red(ϕ1 ∧ ϕ2) ∈ Ldf KSTIT,df KSTIT+ then red(ϕ1) ∈ Ldf KSTIT. It follows that: if [ J ]ϕ1 ∈ L+ then red(ϕ1) ∈ Ldf KSTIT. It follows that: if Kiϕ1 ∈ L+ then red(ϕ1) ∈ Ldf KSTIT, and if θ ∈ L+ then red([ J ]ϕ1) ∈ Ldf KSTIT.+ then red(Kiϕ1) ∈ Ldf KSTIT.+ then red(θ) ∈ Ldf KSTIT. It follows that: ifdf KSTITdf KSTITdf KSTITdf KSTITdf KSTIT[(cid:20)θ(cid:20)]ϕ1 ∈ Ldf KSTIT+ then red([(cid:20)θ(cid:20)]ϕ1) ∈ Ldf KSTIT.Let us consider the case of negation (case 1). Suppose ¬ϕ1 ∈ L+ and, by induction hy-pothesis, we have red(ϕ1) ∈ Ldf KSTIT. By definition of Ldf KSTIT, it follows that ¬red(ϕ1) ∈ Ldf KSTIT. The latter impliesred(¬ϕ1) ∈ Ldf KSTIT, as ¬red(ϕ1) = red(¬ϕ1). We leave the case of conjunction (case 2) and of STIT operators [ J ] (case 3)to the reader.+ . Therefore, ϕ1 ∈ Ldf KSTITdf KSTITLet us consider the case of epistemic operators (case 4). Suppose Kiϕ1 ∈ L+ and, byinduction hypothesis, we have red(ϕ1) ∈ Ldf KSTIT. By definition of Ldf KSTIT, it follows that Kired(ϕ1) ∈ Ldf KSTIT. The latterimplies red(Kiϕ1) ∈ Ldf KSTIT, as Kired(ϕ1) = red(Kiϕ1).+ . Therefore, ϕ1 ∈ Ldf KSTITdf KSTITIn order to prove the case of dynamic operators (case 5), we need the following Lemma 4.Lemma 4. If ϕ ∈ Ldf KSTIT and red(θ) ∈ Ldf KSTIT then red([(cid:20)θ(cid:20)]ϕ) ∈ Ldf KSTIT.Proof. We prove Lemma 4 by induction on the structure of ϕ. For the atomic case, we have red([(cid:20)θ(cid:20)]p) ∈ Ldf KSTIT. Thecases of atomic propositions, negation, conjunction and STIT operators are just straightforward. Let us prove the case ofepistemic operators, that is, when ϕ = Kiϕ1.Suppose red(θ) ∈ Ldf KSTIT and Kiϕ1 ∈ Ldf KSTIT. Therefore, by definition of Ldf KSTIT, we have ϕ1 ∈ Ldf KSTIT and, by induc-tion hypothesis, red([(cid:20)θ(cid:20)]ϕ1) ∈ Ldf KSTIT. From the latter and the assumption red(θ) ∈ Ldf KSTIT, by definition of Ldf KSTIT, itfollows that(cid:4)(cid:5)(cid:5)(cid:5)(cid:5)(cid:5)(cid:5)(cid:4)(cid:6)(cid:4)(cid:6)(cid:4)(cid:4)red(θ) → Ki(cid:4)red(θ) → red(cid:7)(cid:20)θ(cid:20)ϕ1∧¬red(θ) → Ki¬red(θ) → red(cid:7)(cid:20)θ(cid:20)ϕ1∈ Ldf KSTIT.(cid:4)(cid:6)By definition of red, we have that(cid:7)(cid:20)θ(cid:20)red(θ) → redThus, we can conclude that red([(cid:20)θ(cid:20)]Kiϕ1) ∈ Ldf KSTIT.red(θ) → KiKiϕ1red=(cid:4)(cid:4)(cid:5)This concludes the proof of Lemma 4. (cid:2)(cid:4)(cid:6)(cid:7)(cid:20)θ(cid:20)(cid:5)(cid:5)(cid:5)(cid:4)∧ϕ1¬red(θ) → Ki(cid:4)(cid:4)¬red(θ) → red[(cid:20)θ(cid:20)]ϕ1(cid:5)(cid:5)(cid:5).Let us go back to the proof of Proposition 4. Suppose [(cid:20)θ(cid:20)]ϕ1 ∈ Ldf KSTIT+ and ϕ ∈L+ and, by induction hypothesis, we have red(θ) ∈ Ldf KSTIT and red(ϕ1) ∈ Ldf KSTIT. From the latter, by Lemma 4, itfollows that red([(cid:20)θ(cid:20)]red(ϕ1)) ∈ Ldf KSTIT. It is a routine task to check that red([(cid:20)θ(cid:20)]red(ϕ1)) = red([(cid:20)θ(cid:20)]ϕ1). Therefore, weconclude that red([(cid:20)θ(cid:20)]ϕ1) ∈ Ldf KSTIT. (cid:2)+ . Therefore, we have θ ∈ Ldf KSTITdf KSTITA.11. Proof of Corollary 4The validities of df KSTIT+are completely axiomatized by the axioms and inference rules of df KSTIT provided in Corol-lary 3 together with reduction axioms of Proposition 2 and the rule of replacement of proved equivalents.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847845++Proof. Soundness is guaranteed by Proposition 2, plus the fact that the rule of replacement of proved equivalences preservesvalidity. The completeness proof proceeds as follows. Suppose that ϕ ∈ L-valid. Then red(ϕ)-valid due to Proposition 3. Moreover, due to Proposition 4 we have red(ϕ) ∈ Ldf KSTIT and, due to the fact thatis KSTITis a conservative extension of KSTIT, we have that red(ϕ) is KSTIT-valid. By the completeness of df KSTIT (Corol-KSTIT+lary 3), red(ϕ) is also provable there. df KSTIT,too. As the reduction axioms and the rule of replacement of proved equivalents are part of our axiomatics, the formula ϕ isalso be provable in df KSTITbeing a conservative extension of df KSTIT, red(ϕ) is provable in df KSTIT+ and that ϕ is KSTIT. (cid:2)df KSTIT+++A.12. Proof of Validity (24) in Section 7.3|(cid:12)KSTIT+ KB∗∗∗ →(cid:8)(cid:8)(cid:9)(cid:9)say(t, passu)REJOICEu passu.Proof. First of all, note that (cid:4)(cid:4)say(t, passu)(cid:5)(cid:5)REJOICEupassu is logically equivalent to Pre(say(t, passu)) ∧ KtpassuREJOICEupassu. Thus, we just need to show that KB∗∗∗implies the latter.By definition of KB∗∗∗, we have that:∧ [(cid:20)Ktpassu(cid:20)]A. |(cid:12)KSTIT+ KB∗∗∗ → Kt passu.Let us prove that KB∗∗∗implies [(cid:20)Ktpassu(cid:20)]REJOICEupassu. By definition of KB∗∗∗and Axiom T for Kt we have that:B. |(cid:12)KSTIT+ KB∗∗∗ → (Ktpassu∧ DESupassu∧ Ku[∅]([u]¬studiedu → ¬passu) ∧ Ku(cid:4)∅(cid:5)[u]¬studiedu).From step 22 in the proof of Validity (22) (see Section A.8 in this appendix), we also have:C. |(cid:12)KSTIT+ (Ku[∅]([u]¬studiedu → ¬passu) ∧ Ku(cid:4)∅(cid:5)[u]¬studiedu) → Ku(cid:4)AGT \ {u}(cid:5)¬passu.Therefore, from the previous validities B and C, we have:D. |(cid:12)KSTIT+ KB∗∗∗ → (Ktpassu∧ DESupassu∧ Ku(cid:4)AGT \ {u}(cid:5)¬passu).Now, we are going to prove the following validity:E. |(cid:12)KSTIT+ (Ktpassu∧ DESupassu∧ Ku(cid:4)AGT \ {u}(cid:5)¬passu) → [(cid:20)Ktpassu(cid:20)](Kupassu∧ DESupassu∧ Ku(cid:4)AGT \ {u}(cid:5)¬passu).As [(cid:20)θ(cid:20)](ϕ1 ∧ · · · ∧ ϕn) is equivalent to [(cid:20)θ(cid:20)]ϕ1 ∧ · · · ∧ [(cid:20)θ(cid:20)]ϕn (by reduction axiom Red∧), in order to prove the previousvalidity E it is sufficient to prove that the following three formulas are valid:→ [(cid:20)Kt passu• Ktpassu• DESupassu• Ku(cid:4)AGT \ {u}(cid:5)¬passu→ [(cid:20)Kt passu(cid:20)]Ku passu(cid:20)]DESupassu→ [(cid:20)Ktpassu(cid:20)]Ku(cid:4)AGT \ {u}(cid:5)¬passu.We just give the proof of the first validity, leaving the proofs of the other two validities to the reader.1. |(cid:12)KSTIT+ [(cid:20)Ktpassu(cid:20)]Kupassu↔ ((Ktpassu→ Ku(Ktpassu→ [(cid:20)Ktpassu(cid:20)]passu)) ∧ (¬Ktpassu→ Ku(¬Ktpassu→ [(cid:20)Ktpassu(cid:20)]→ Ku(Ktpassu→ [(cid:20)Ktpassu→ passu)) ∧ (¬Ktpassu→ Ku(¬Ktpassu(cid:20)]passu)) ∧ (¬Ktpassu→→ passu))) by the reduction axiom Redp and the rule of replacement(cid:20)]passu))) ↔ ((Ktpassu→ Ku(¬Ktpassu→ [(cid:20)Ktpassupassu))) by the reduction axiom RedKi2. |(cid:12)+ ((KtpassuKSTITKu(Ktpassuof proved equivalence+ ((KtpassuKSTIT3. |(cid:12)→ Ku(Ktpassu→ passu)) ∧ (¬KtpassuKu(¬Ktpassu→ passu))) by Axiom T for Kt→ Ku(cid:18)) ∧ (¬Ktpassu+ ((KtpassuKSTIT4. |(cid:12)→ Ku(¬Ktpassudard validity of normal modal logic Kt(cid:18) ↔ (cid:18)→ passu))→ Ku(¬Ktpassu→ (¬Ktpassu(cid:20)]Kupassu from 1–4 and 5.→ [(cid:20)Ktpassu+ Ktpassu+ KtpassuKSTITKSTIT5. |(cid:12)6. |(cid:12)→ Ku(¬Ktpassu→ passu))) ↔ ((Ktpassu→ Ku(cid:18)) ∧ (¬Ktpassu→→ passu))) ↔ (¬Ktpassu→ Ku(¬Ktpassu→ passu)) by the stan-Therefore, by the previous validities D and E, we have:F. |(cid:12)KSTIT+ KB∗∗∗ → [(cid:20)Ktpassu(cid:20)](Kupassu∧ DESupassu∧ Ku(cid:4)AGT \ {u}(cid:5)¬passu).846E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847As REJOICEupassu abbreviates Kupassu∧ DESupassu∧ Ku(cid:4)AGT \ {u}(cid:5)¬passu, from the previous validity F, we have:G. |(cid:12)KSTIT+ KB∗∗∗ → [(cid:20)Ktpassu(cid:20)]REJOICEupassu.As Pre(say(t, passu)) = Kt[say(t, passu)]REJOICEupassuto prove that we have:∧ Kt¬REJOICEupassu, in order to conclude the proof, we just needH. |(cid:12)KSTIT+ KB∗∗∗ → (Kt[say(t, passu)]REJOICEupassu∧ Kt¬REJOICEupassu).By the definition of REJOICEupassu, it is straightforward to verify that KB∗∗∗that KB∗∗∗implies Kt[say(t, passu)]REJOICEupassu.implies Kt¬REJOICEupassu. Let us prove1. |(cid:12)2. |(cid:12)3. |(cid:12)4. |(cid:12)KSTITKSTITKSTITby Axiom 4 and Axiom 5 for Kt+ KB∗∗∗ → KtKB∗∗∗+ Kt(KB∗∗∗ → [(cid:20)Ktpassu+ KB∗∗∗ → Kt[(cid:20)Ktpassu+ KB∗∗∗ → Kt[say(t, passu)]REJOICEupassu by 3, the validity [(cid:20)θ(cid:20)]ϕ → [!θ]ϕ, Axiom K and necessitation rule(cid:20)]REJOICEupassu) by the previous validity G and necessitation rule for Kt(cid:20)]REJOICEupassu by 1, 2 and Axiom K for KtKSTITfor Kt. (cid:2)References[1] C. Adam, A. Herzig, D. Longin, A logical formalization of the OCC theory of emotions, Synthese 168 (2) (2009) 201–248.[2] T. Ågotnes, W. van der Hoek, M. Wooldridge, Quantified coalition logic, in: Proceedings of the Twentieth International Joint Conference on ArtificialIntelligence (IJCAI’07), AAAI Press, 2007, pp. 1181–1186.[3] T. Ågotnes, H. van Ditmarsch, Coalitions and announcements, in: Proceedings of the Seventh International Conference on Autonomous Agents andMultiagent Systems (AAMAS 2008), ACM Press, 2008, pp. 673–680.[4] R. Alur, T. Henzinger, Alternating-time temporal logic, Journal of the ACM 49 (2002) 672–713.[5] P. Balbiani, O. Gasquet, A. Herzig, F. Schwarzentruber, N. Troquard, Coalition games over Kripke semantics, in: C. Dégremont, L. Keiff, H. Rückert (Eds.),Festschrift in Honour of Shahid Rahman, College Publications, 2008, pp. 1–12.[6] P. Balbiani, O. Gasquet, E. Lorini, F. Schwarzentruber, An alternating procedure for the satisfiability problem of S5n , Tech. Rep. IRIT/RT–2009-1-FR, IRIT,2009.[7] P. Balbiani, A. Herzig, N. Troquard, Alternative axiomatics and complexity of deliberative STIT theories, Journal of Philosophical Logic 37 (4) (2008)387–406.[8] J. Bates, The role of emotion in believable agents, Communications of the ACM 37 (7) (1994) 122–125.[9] N. Belnap, M. Perloff, M. Xu, Facing the Future: Agents and Choices in Our Indeterminist World, Oxford, 2001.[10] P. Blackburn, M. de Rijke, Y. Venema, Modal Logic, Cambridge University Press, 2001.[11] J. Broersen, CTL.STIT: enhancing ATL to express important multi-agent system verification properties, in: Proceedings 9th International Conference onAutonomous Agents and Multiagent Systems (AAMAS 2010), ACM Press, 2010, pp. 215–219.[12] J. Broersen, A. Herzig, N. Troquard, Embedding Alternating-time temporal logic in strategic STIT logic of agency, Journal of Logic and Computation 16 (5)(2006) 559–578.[13] J. Broersen, A. Herzig, N. Troquard, Normal Coalition Logic and its conformant extension, in: D. Samet (Ed.), Theoretical Aspects of Rationality andKnowledge (TARK), Brussels, 25/06/2007–27/06/2007, Presses universitaires de Louvain, 2007, pp. 91–101.[14] C. Castelfranchi, Mind as an anticipatory device: For a theory of expectations, in: Proc. of the First International Symposium on Brain, Vision, andArtificial Intelligence (BVAI 2005), Springer-Verlag, 2005, pp. 258–276.[15] A.K. Chandra, D.C. Kozen, L.J. Stockmeyer, Alternation, J. ACM 28 (1) (1981) 114–133.[16] H. Chockler, J.Y. Halpern, Responsibility and blame: A structural-model approach, Journal of Artificial Intelligence Research 22 (2004) 93–115.[17] P.R. Cohen, H.J. Levesque, Intention is choice with commitment, Artificial Intelligence 42 (2–3) (1990) 213–261.[18] F. de Rosis, C. Pelachaud, I. Poggi, V. Carofiglio, B. De Carolis, From Greta’s mind to her face: modelling the dynamics of affective states in a conversa-tional embodied agent, International Journal of Human-Computer Studies 59 (2003) 81–118.[19] W.W. Dijk, M. Zeelenberg, Investigating the appraisal patterns of regret and disappointment, Motivation and Emotion 26 (4) (2002) 321–331.[20] M.S. El-Nasr, J. Yen, T.R. Ioerger, FLAME: Fuzzy logic adaptive model of emotions, Autonomous Agents and Multi-Agent Systems 3 (3) (2000) 219–257.[21] C. Elliot, The affective reasoner: A process model for emotions in a multi-agent system, Ph.D. thesis, Northwestern University, Institute for LearningSciences, 1992.[22] N. Frijda, The Emotions, Cambridge University Press, 1986.[23] N.H. Frijda, P. Kuipers, E. Ter Schure, Relations among emotion, appraisal, and emotional action readiness, Journal of Personality and Social Psychol-ogy 57 (2) (1989) 212–228.[24] D.M. Gabbay, A. Kurucz, F. Wolter, M. Zakharyaschev, Many-Dimensional Modal Logics: Theory and Applications, Studies in Logic and the Foundationsof Mathematics, vol. 148, Elsevier, North-Holland, 2003.[25] O. Gasquet, A. Herzig, Translating non-normal modal logics into normal modal logics, in: A. Jones, M. Sergot (Eds.), Proceedings International Workshopon Deontic Logic in Computer Science (DEON’94), TANO, Oslo, 1993.[26] R.M. Gordon, The Structure of Emotions, Cambridge University Press, Cambridge, 1987.[27] J. Gratch, S. Marsella, A domain-independent framework for modelling emotions, Journal of Cognitive Systems Research 5 (4) (2004) 269–306.[28] J.Y. Halpern, Y. Moses, A guide to completeness and complexity for modal logics of knowledge and belief, Artificial Intelligence 54 (2) (1992) 319–379.[29] A. Herzig, F. Schwarzentruber, Properties of logics of individual and group agency, in: Proceedings of Advances in Modal Logic 2008, College Publication,2008, pp. 133–149.[30] J.F. Horty, Agency and Deontic Logic, Oxford University Press, 2001.[31] J.F. Horty, N. Belnap, The deliberative STIT: A study of action, omission, and obligation, Journal of Philosophical Logic 24 (6) (1995) 583–644.[32] D. Kahneman, Varieties of counterfactual thinking, in: N.J. Roese, J.M. Olson (Eds.), What Might Have Been: The Social Psychology of CounterfactualThinking, Erlbaum, 1995.[33] D. Kahneman, D.T. Miller, Norm theory: comparing reality to its alternatives, Psychological Review 93 (2) (1986) 136–153.[34] D. Kahneman, A. Tversky, The psychology of preferences, Scientific American 246 (1982) 160–173.E. Lorini, F. Schwarzentruber / Artificial Intelligence 175 (2011) 814–847847[35] R.E. Ladner, The computational complexity of provability in systems of modal propositional logic, SIAM Journal on Computing 6 (3) (1977) 467–480.[36] R.S. Lazarus, Emotion and Adaptation, Oxford University Press, New York, 1991.[37] G. Loomes, R. Sugden, Regret theory: an alternative theory of rational choice under uncertainty, Economic Journal 92 (4) (1982) 805–824.[38] G. Loomes, R. Sugden, Testing for regret and disappointment in choice under uncertainty, Economic Journal 97 (1987) 118–129.[39] E. Lorini, C. Castelfranchi, The cognitive structure of surprise: looking for basic principles, Topoi: An International Review of Philosophy 26 (1) (2007)133–149.[40] J.-J.C. Meyer, Reasoning about emotional agents, International Journal of Intelligent Systems 21 (6) (2006) 601–619.[41] J.J.C. Meyer, W. van der Hoek, B. van Linder, A logical approach to the dynamics of commitments, Artificial Intelligence 113 (1–2) (1999) 1–40.[42] A. Ortony, G.L. Clore, A. Collins, The Cognitive Structure of Emotions, Cambridge University Press, 1988.[43] M. Pauly, A modal logic for coalitional power in games, Journal of Logic and Computation 12 (1) (2002) 149–166.[44] R.W. Picard, Affective Computing, MIT Press, 1997.[45] J.A. Plaza, Logics of public communications, in: M. Emrich, M. Pfeifer, M. Hadzikadic, Z. Ras (Eds.), Proceedings of the 4th International Symposium onMethodologies for Intelligent Systems, 1989, pp. 201–216.[46] W.S. Reilly, J. Bates, Building emotional agents, Tech. Rep., CMUCS-92-143, School of Computer Science, Carnegie Mellon University, 1992.[47] R. Reisenzein, Emotional experience in the computational belief-desire theory of emotion, Emotion Review 1 (3) (2009) 214–222.[48] N.J. Roese, Counterfactual thinking, Psychological Bulletin 121 (1) (1997) 133–148.[49] N.J. Roese, L.J. Sanna, A.D. Galinsky, The mechanics of imagination: automaticity and control in counterfactual thinking, in: R.R. Hassin, J.S. Uleman, J.A.Bargh (Eds.), The New Unconscious, Oxford University Press, 2005.[50] I.J. Roseman, A model of appraisal in the emotion system, in: K.R. Scherer, A. Schorr, T. Johnstone (Eds.), Appraisal Processes in Emotion: Theory,Methods, Research, Oxford University Press, Oxford, 2001.[51] I.J. Roseman, A.A. Antoniou, P.E. Jose, Appraisal determinants of emotions: constructing a more accurate and comprehensive theory, Cognition andEmotion 10 (1996) 241–277.[52] K. Scherer, Appraisal considered as a process of multilevel sequential checking, in: K.R. Scherer, A. Schorr, T. Johnstone (Eds.), Appraisal Processes inEmotion: Theory, Methods, Research, Oxford University Press, Oxford, 2001.[53] K.R. Scherer, A. Schorr, T. Johnstone (Eds.), Appraisal Processes in Emotion: Theory, Methods, Research, Oxford University Press, Oxford, 2001.[54] F. Schwarzentruber, Décidabilité et complexité de la logique normale des coalitions, Master’s thesis, Univ. Paul Sabatier Toulouse III, 2007.[55] J. Searle, Intentionality: An Essay in the Philosophy of Mind, Cambridge University Press, New York, 1983.[56] C. Smith, R. Lazarus, Emotion and adaptation, in: J. Pervin (Ed.), Handbook of Personality: Theory & Research, Guilford Press, New York, 1990.[57] R.C. Solomon, The Passions, University of Notre Dame Press, Notre Dame, 1976.[58] B.R. Steunebrink, M. Dastani, J.-J.C. Meyer, A logic of emotions for intelligent agents, in: Proceedings of AAAI’07, AAAI Press, 2007, pp. 142–147.[59] R. Sugden, Regret, recrimination and rationality, Theory and Decision 19 (1) (1985) 77–99.[60] G. Taylor, Pride, Shame and Guilt: The Emotions of Self-Assessment, Oxford University Press, New York, 1985.[61] N. Troquard, Independent agents in branching time, Ph.D. thesis, Univ. Paul Sabatier Toulouse III & Univ. degli studi di Trento, 2007.[62] P. Turrini, J.-J.C. Meyer, C. Castelfranchi, Coping with shame and sense of guilt: a dynamic logic account, Journal of Autonomous Agents and Multi-AgentSystems 20 (3) (2009) 401–420.[63] J. van Benthem, F. Liu, Dynamic logic of preference upgrade, Journal of Applied Non-Classical Logics 17 (2) (2007) 157–182.[64] J. van Benthem, S. Minic˘a, Towards a dynamic logic of questions, in: Proceedings of Second International Workshop on Logic, Rationality and Interaction(LORI-II), in: LNCS, vol. 5834, Springer-Verlag, 2009, pp. 27–41.[65] W. van der Hoek, W. Jamroga, M. Wooldridge, A logic for strategic reasoning, in: Proceedings of the Fourth International Joint Conference on Au-tonomous Agents and Multiagent Systems (AAMAS 2005), ACM Press, New York, 2005, pp. 157–164.[66] W. van der Hoek, M. Wooldridge, Cooperation, knowledge, and time: Alternating-time temporal epistemic logic and its applications, Studia Logica 75(2003) 125–157.[67] H. van Ditmarsch, W. van der Hoek, B. Kooi, Dynamic Epistemic Logic, Synthese Library, vol. 337, Springer, 2007.[68] M. Zeelenberg, J. Beattie, J. van der Pligt, N.K. de Vries, Consequences of regret aversion: effects of expected feedback on risky decision making,Organizational Behavior and Human Decision Processes 65 (2) (1996) 148–158.[69] M. Zeelenberg, W. van Dijk, A.S.R. Manstead, J. van der Pligt, On bad decisions and disconfirmed expectancies: The psychology of regret and disap-pointment, Cognition and Emotion 14 (4) (2000) 521–541.[70] M. Zeelenberg, W. van Dijk, J. van der Pligt, A.S.R. Manstead, P. van Empelen, D. Reinderman, Emotional reactions to the outcomes of decisions: therole of counterfactual thought in the experience of regret and disappointment, Organizational Behavior and Human Decision Processes 75 (2) (1998)117–141.[71] M. Zeelenberg, W.W. van Dijk, A.S.R. Manstead, Reconsidering the relation between regret and responsibility, Organizational Behavior and HumanDecision Processes 74 (3) (1998) 254–272.