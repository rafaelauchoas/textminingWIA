Artificial Intelligence 91 (1997) 3-32 Artificial Intelligence Gxm.rnatical description of behaviors of ordinary differential equations in two-dimensional phase space Toyoaki Nishida ’ Graduate School of Information Science, Nara Institute of Science and Technology, 8916-5 Takayama, Ikoma, Nara 630-01, Japan Received April 1996 Abstract The major task of qualitative analysis of systems of ordinary differential equations is to rec- ognize the global pattern of solution curves in the phase space. In this paper, I present a&v grammar, the phase space. a grammatical specification of all possible patterns of solution curves one may see in I describe a fiow pattern, a semi-symbolic representation of the patterns of solution patterns in the phase space, and show how an important class of flow patterns can be specified by the flow grammar. I then show that the flow grammar presented in this paper can generate any flow pattern resulting from any structurally stable flow on a plane. I also describe several properties of the flow grammar related to the enumeration of patterns. In particular, I estimate the upper limit of the number of applications of rewriting rules needed to derive a given flow pattern. Finally, I describe how the flow grammar is used in qualitative analysis to plan, monitor, and interpret the result of numerical computation. @ 1997 Elsevier Science B.V. Keywords: Qualitative reasoning; Intelligent scientific computation; Dynamical systems theory; Flow grammar; Flow mapping 1. Introduction In many domains behavior of differential in science and technology, one is often faced with understanding equations. The behavior of differential equations becomes the fairly * E-mail: nishida@is.aist-nara.ac.jp. 0004-3702/97/$17.00 @ 1997 Elsevier Science B.V. All rights reserved. PII SOOO4-3702(96)00055-O 4 Z Nishida/Artifcial Intelligence 91 (1997) 3-32 complex and subtle when nonlinearity comes into play. Even a small numerical error may result in an entirely different conclusion, due to sensitivity to initial conditions. In applied mathematics it is known that geometric methods are effective in qualitative analysis of nonlinear differential equations. Thus, one can understand qualitative behaviors of ordinary differential equations (ODES) by analyzing geometric and topological features of solution curves in the phase space. [2,3], I have taken a geometric approach and developed a program called PSX2NL [ 6,7]. Given a system of ODES, PSX2NL takes the following three steps to produce a semi- symbolic description of the behavior: l Step 1. Collect geometric features of solution curves using varieties of quantitative techniques. l Step 2. Infer the topology of the phase portrait from geometric cues. l Step 3. Reason about the global behavior by analyzing the topology of the phase portrait. In this paper, I present a Jlow grammar, a grammatical specification of all possible patterns of solution curves one may see in the phase space. I describe $0~ pattern, a semi-symbolic representation of the patterns of solution patterns in the phase space, and show how an important class of flow patterns can be specified by the flow grammar. I then show that the flow grammar presented in this paper can generate any flow pattern resulting from any structurally stable flow on a plane. I also describe several properties of the flow grammar related to the enumeration of patterns. In particular, I estimate the upper limit of the number of applications of rewriting rules needed to derive a given flow pattern. Finally, I describe how the flow grammar is used in qualitative analysis to plan, monitor, and interpret the result of numerical computation. 2. Qualitative theory of ODES and qualitative analysis In this paper, we consider systems of ODES with two state variables: 2 = f(x), where x(t) = {Xl(t)d2(t)} (t E R)? f:R24t2. (1) The space I@ spanned by the two state variables in ( 1) is called the phase space. Eq. into the phase space, as the right-hand side ( 1) is said to introduce the vector jeld of Eq. (1) specifies the velocity of state change at each point in the phase space. A trajectory resulting from traversing the phase portrait according to the vector field is called a solution curve, or an orbit. Each orbit represents a solution under some initial IR2 which returns a condition, and may be characterized as a function &(t) point in the phase space as a function of time. The collection of all orbits in the phase space is called the phase portrait, which might be thought of as introducing a flow characterized as a function a,(x) : x E R* t-+ c#+ ( t) E R2. : lR + T Nishida/Art$cial Intelligence 91 (1997) 3-32 5 Fig. 1. The phase portrait for ECq. (2). The following is a typical system of ODES we investigate in this paper: dx Tit = -2x3 + 2x + 2y, dY - dt = -_x. { (2) is nonlinear that the right-hand equations, no general algorithm in the sense linear differential This as x3. Unlike nonlinear ODES analytically. may become fairly complex ory [ 2,3], powerful means of understanding is not available. form of solution terms such for solving equations the- studying geometric and topological properties of the phase portrait provides a qualitative behaviors of ODES even when the explicit In addition, in certain situations. According sides contain nonlinear is known the behavior of nonlinear differential to dynamical systems Fig. 1 illustrates are approximately a portion of the phase portrait of Eq. (2), where a number of orbits drawn by numeric integration. according to their asymptotic Orbits are classified as t --t fco. As for systems of ODES with two state variables, that orbits may either diverge to place at infinity, or tend towards a jixed point (an orbit consisting of a single point side of Eq. (1) zero) or a limit cycle (a cyclic orbit which which makes attracts or repels nearby orbits). * the right-hand it is proved behaviors As for the phase portrait at (0,O) and a limit cycle around at (0,O) long run. In this sense, the limit cycle is called an o-limit cycles which attract nearby orbits as t -+ -co are called a-limit cycles. that all orbits except tend towards the limit cycle as t -+ cm and exhibit a periodical behavior the existence of a fixed point the fixed point in a those limit cycle. In contrast, in Fig. 1, one may conjecture it. It is known 2 This folXows from the Poincark-Bendixson theorem. See [ 3, p. 2481 for more details. 6 ‘I: Nishida/Artijicial Intelligence 91 (1997) 3-32 The goal of qualitative analysis is to identify the patterns of behaviors under all initial conditions, by investigating geometric and topological properties of orbits of a given system of ODES. We do not have a general means for representing x as an explicit function of t by symbolically manipulating Eq. ( 1) . It is possible to obtain an approximate picture of an orbit by using a numerical integration algorithm such as the Runge-Kutta algorithm, as was done for examples in this paper. However, numerical methods support only a small portion of the entire process of understanding the behavior, as pointed out in [ 111. Moreover, numerical methods may result in logical errors or incompleteness caused by numeric errors and incompleteness. In order to supplement numerical methods, I propose a method of representing knowl- edge about patterns of orbits in the phase space and applying it to planning, monitoring and interpreting numeric computation. The basic idea is to partition the phase space into regions called cells, and characterize the fragments of orbits in each region as flow and put together flow mappings for these regions to reason about global mappings, behavior. Currently, our technique cannot handle flow in open regions. This means that our method of global analysis is limited to flow in a bounded region. In the next two sections, I first describe a semi-symbolic representation of patterns of orbits in a bounded region and then introduce a grammatical specification of possible patterns of orbits in a bounded region. 3. Semi-symbolic description of patterns of orbits in a cell We assume a cell to be a convex region and the phase space to be two-dimensional. Generally, a fragment of an orbit in a cell C either approaches a fixed point or a limit cycle, or cuts across a boundary X of C, as t + &co. 3.1. Bundle of orbit intervals We call a contiguous segment of an orbit an orbit interval and denote it as &t), where t E R. When either end of the orbit interval 4 is a fixed point f, the orbit interval does not contain f although 4(t) asymptotically approaches f as f + cc or --co. To take into account an extended orbit interval containing both ends, we extend the region of parameters from the set of real numbers R to the set of hyperreals B* = R U {-co, co} and we consider the closure of the orbit interval 4, denoted as +*. Given a cell C and a couple of orbit intervals + and $ contained in C, we define the distance d( 4,@) between r#~ and $ as the maximal value of the minimal distance between a point on one orbit interval and another orbit interval. Namely, d(9.9) = r iff 3u,oEB*[fl(u) ECA~*(u)ECAI~(u)-~*(U)I=r], vuEW*[~(u)EC--t3vEIW*~*(u)ECA~~(u)-~*(u)~~r], vu E R*[$*(u) E c --) 3u E R*4*(u) E c A 14*(u) -+*(u)] < r]. T IVishida/Artifcial Intelligence 91 (1997) 3-32 (a) U’) Fig. 2. Points of contact. A bundle of orbit intervals in a cell is an aggregation of nearby orbit intervals in a cell. Namely, given a cell C and orbit intervals 4 and 9 in C, we consider that 4 and $ belong to the same bundle of orbit intervals iff for any positive number E there exists orbit intervals yi , . . . , ym such that d(4,syt) <eAVi(l ii < WI-- 1) [d(yi,Yi+l) < ~1 Ad(y,,$) <E. The collection of orbit intervals in a cell is classified into the collection of bundles of orbit intervals. It is noted that the set of bundles of orbit intervals is determined by the geometric relations between the flow and a cell. In order to compute the collection of orbit intervals, we identify the following char- acteristic points for a given cell: l Fixed points in the cell: the type of a fixed point is either a sink, a source, or a saddle node. l Points of contact on the boundary of the cell where an orbit is tangent to the boundary of the cell and lies in the same side of the boundary immediately before and after contact. A point of contact is called a concave node if the orbit passing on it lies inside the region immediately before and after contact, as shown in Fig. 2(a). Otherwise a point of contact is called a COMLX nude (Fig. 2(b) ). Those points such as the one in Fig. 2(c) are not called a point of contact, for the orbit on the point lies in the different side of the cell. l Landmarks: points where an orbit running on a concave node cuts across the cell boundary, or a stable or unstable manifold of a saddle node cuts across the cell boundary. We can compute the location of fixed points of Eq. ( 1) by solving f(x) =o, and that of points of contact by solving f(x) -a=O, where a denotes the orientation orthogonal to the boundary edge. In order to compute the location of landmarks, we have to track orbits from saddle nodes and concave nodes to find the position where they cut across the cell boundary. We use numeric integration for tracking orbits. A contiguous segment of the cell boundary delimited by points of contact is called a boundary segment. At one boundary segment, the orientation of the flow is qualitatively 8 K Nishida/Artificial Intelligence 91 (1997) 3-32 Fig. 3. (a) Part of the flow in Fig. 1. (b) Its schematization. the same, equally coming in or going out the cell. A boundary segment is called an entrance segment and exit segment if the flow is coming in and going out the cell, respectively. A boundary segment may be further partitioned into one or more boundary edges by landmarks on the boundary segment. A boundary segment which does not contain any landmarks makes one boundary edge. The collection of orbit intervals makes a bundle of orbit intervals if every orbit interval cuts across the same boundary edge. Example Let us consider part of the flow in Fig. 1, as in Fig. 3(a). The flow there can be schematized as Fig. 3 (b) . The cell contains four concave nodes and four convex nodes, which partition the boundary of the cell into eight boundary segments --- {A,S, S,B, B,P, . . . . R,}. Those boundary segments are further partitioned into boundary edges. For example, boundary segment A, S is partitioned into boundary edges A, Qi,’ (R) and CD,’ (R) , S by landmark @P,’ (R), where @I stands for the flow in the cell and @i’ (R) for the inverse image of the concave node R. 3.2, Flow mappings We represent a flow as a set of $0~ mappings which specifies how the flow maps point in the phase space. For example, consider the flow in the region ABEF shown in Fig. 3 (a). Some points on segment E, F are mapped from the fixed point X in the region, while other come from other points on the boundary. Although all points on Z Nishida/Art$cial Intelligence 91 (1997) 3-32 9 the open segment @t (Q) , F come from other points on the boundary, the source is not one contmuous segment, but a sum of four open segments: @;’ (P) , Q, @;’ (S) , P, CD;’ (R) ,s, and m, so we represent the flow related to @I (Q) , F as a collection of seven flow mappings: and three landmarks delimiting them: @t (P), @I (S), and @t (I?), -- ‘P~‘(P),Q -,@,(Q),@,(P) &(S),P -+@I(P),@I(S) G+‘(R),S + @l(S),@l(R) _- @ER+@l(R),F Thus, the flow in ABEF is represented as a sum of sixteen flow mappings, as follows: 3 @I =-@I,1 : A,@,‘(R) --f R,A $@1,2 :~,‘(R),S~~l(S),~l(R) @ cJQ,~ : B,@,‘(S) + S, B @@I,4 : @,‘WJ ---f @l(P),@(S) $c&,~ : E,@,‘(P) + P,E @@1,6 : @;‘U’LQ + @I(Q),@I(P) @@1,7:X+Q,@l(Q) @@1,8:ER+@l(R),F c@,‘(R) -+ R@R-+@l(R) @q’(S) --+S@S+@J1(S) w&-‘(P) -+P@X-+Q @Q-+%(Q) @X. (3) Generally, we represent a bundle of orbit intervals @ in a cell C as a flow mapping u and p are called generalized source and generalized sink, respectively. They are either a boundary edge or a fixed point or a limit cycle which orbits in @ cut across or tend towards when t + -oo or t -+ oo. 3 The first eight are essential. The others involve some subtlety, but this is not critical to our discussion. T. Nishida/Ar@cial intelligence 91 (1997) 3-32 (a) Symbolic renresentation I constituents: X : type = fixed-point, source A : type = convex-node A, G;‘(R) : type = boundary-edge, entrance @,l(R) : type = landmark, entrance @;‘(R), S : type = boundary-edge, entrance . . . boundary-list: flow-mappings: [A, A, @?(R), @?(R), fK1(R), S,. . . > R, al,1 : A, i9;l(R) -+ R, A 9 . . @1,1,2 : Q?(R) + R . . . %o :x1x (b) Schematic diagram fig. 4. The flow pattern for the local flow in region ABEF in Fig. 3 (b) 3.3. Flow patterns We use $0~ patterns to represent the collection of orbit intervals in a cell C as a collection of flow mappings. A flow pattern consists of: l constituents: the set of geometric constituents of C such as fixed points, limit cycles, convex nodes, concave nodes, boundary edges, landmarks, and their geometric properties; l boundary-list: the counterclockwise order of geometric cues on the cell boundary; l jaw-mappings: the set of flow mappings characterizing the flow in C. I: Nishida/Art@cial Intelligence 91 (1997) 3-32 11 Fig. 4 shows the flow pattern for the local flow in region ABEF in Fig. 3 (b) . A flow pattern focuses on the topology, rather than the shape, of the flow in a given cell. Note that there may exist multiple flow patterns for the same flow in the same cell, which differ from each other only in labeling. Flow patterns x and y are said to be equivalent if they differ only in the way labels are attached. The computability and complexity of generating flow patterns depend on the class of ODES. For two-dimensional piecewise linear differential equations, which result from approximating each occurrence of nonlinear terms in a nonlinear differential equation by a set of connected pieces of linear functions, almost all of the process is computable [ 83. For more complex classes of ODES, difficulties arise mainly because complete information may not be available due to the complexity of mathematical problems encountered [ 71. This implies that the procedure may fail when it tries to divide the phase space into uniform regions or to annotate flow at the boundary of the regions. Moreover, handcrafting procedures which can deal with these situations would be quite painstaking because of unmanageably many combinations of possibilities. To overcome these difficulties, we take a grammatical approach, which will be presented in the next section. The main stream of global analysis is to merge flow patterns in turn and examine topological properties of resulting flow patterns for larger regions. Limit cycles, if any, can be detected in finite steps as far as it is not totally contained in a single region as a result of phase space partition and the local flows in related regions are properly analyzed [ 71. We use several heuristics to back up the incompleteness. Since attracting and repelling sets of planar ODES are either fixed points or limit cycles, and since fixed points are determined in analysis of local flow, the above gives a complete process for global analysis in theory. Of course, there is a chance that the above method may fail or produce an incorrect result, due to the failure in characterizing the local flow or numerical error. This is a common difficulty we encounter in addressing nonlinear problems. 3.4. Composition of jlow mappings and recursive mapping Given a couple of bundles of flow mappings @1 : I + J and @2 : J + K, let us define composition @2 o @I of @I and @2 as: @2~@l(~) =cD2(@l(x)) =y iff 32 [@I(X) =z, @2(Z) =Yl- We can grasp the behavioral characteristics of the solution of ODES by partitioning the phase space into cells, and investigating the topological structure of compositions of flow mappings for each cell. We call a composite flow mapping &, o . . . o 41 a contracting if the range is a subset of the domain, namely, recursive mapping, tfBrn 0 . . .0&(Z) c I. Similarly., we call & 0. . . 0 ~$1 an extending recursive mapping, if CjIrn 0 . * *oqh(Z) 3 I. 12 I: Nishida/Art$cial Intelligence 91 (1997) 3-32 Existence of a contracting existence of an extending recursive mapping entails existence of an attractor. Similarly, recursive mapping entails existence of a repeller. 4. Flow grammar A JEow grammar specifies all possible regions as a formal grammar. 4 Generally, is a system G = (B, D, C), where B is a set of basic Jlow patterns, D a set of distortion rules, and C a set of composition rules. We say that a flow pattern the finite number of rules in D and C to a flow pattern is generated by G = (B, D, C) if it is obtained by applying a flow grammar flow patterns in closed in B. 4.1. Flow grammar FG1 In the remainder of this paper, we will describe one particular though other formulations might be possible as well. Particularly, we assume regions do not have fixed points on the boundary FGl, closed structurally stable.’ Moreover, limit cycles for efficiency. Limit cycles are handled flow grammar [ 71. flow grammar called that flow is the flow grammar presented below does not generate in the algorithm which calls for the that the given and 4.1.1. Basic Jlow patterns Basic flow patterns specify type of points of contact on the boundary. The flow pattern flow patterns which contain at most one fixed point. We in Fig. 5. Basic flow patterns have at most is the in Fig. 5(a) have four basic flow patterns as illustrated one simplest among are the simplest among those not containing those containing any fixed points. Flow patterns exactly one fixed point. in Fig. 5 (b)-(d) 4.1.2. Distortion rules Distortion rules specify flow patterns arising when the flow and the boundary segment becomes complex, without in the cell. We have two distortion the relative geometric relation the rules as shown in Fig. 6(a) increasing a sequence of a concave node and a convex node into a ment and the other introduces them in reverse order. between number of fixed points and hot (b). One ’ introduces 4.1. wition rules c ----1----- _ni rules specify the way in which flow patterns with more than one fixed point are computed. We consider to be a flow pattern with n (n 2 2) fixed points generated by fusing a couple of flow patterns: one with (n - 1) fixed points and another 4 The notion of flow grammar was inspired by process grammar [ 51. 5 Structurally stable flows are those which persist under an infinitesimal perturbation to their parameters. If the purpose is to analyze ODFs for physical systems, only structurally stable systems may be observed. Peixoto’s theorem suggests that fixed points which may appear in structurally stable flows are either sinks, sources, or saddle points (see [ 2, p. 601 for more detail). T Nishida/Artijcial Intelligence 91 (1997) 3-32 13 (a) Bo: no fixed points constituents : boundary-edge, A : convex-node AB B : convex-node BA : boundary-edge, entrance exit boundary-list [A, AB, B, BA] flow-mappings AB -+ BA constituents boundary-list flow-mappings 2 : boundary-edge, s- : fixed-point, [Xl - A + s- entrance sink constituents boundary-list ;i : boundary-edge, s+ : fixed-point, [a exit source flow-mappings s+ + 7i (b) B-: a sink (~1 B+: a source (d) B*: a saddle 1 constituents boundary-list flow-mappings entrance entrance L1 : landmark, L1 A : boundary-edge, A : convex-node . . sf : fixed-point, [L1, mA, A,. . .] L1 A + K saddle Fig. 5. Basic flow patterns. with exactly one fixed point, as shown in Fig. 7 where two flow patterns P1 and P2 are fused together at boundary segments al bl of PI and $& of P2. In order for flow to be properly fused, the flow at the boundary segments (~11, bl ) and patterns PI. and 9 (~2, b2) should be complementary: outgoing (incoming) flow of PI should correspond to incoming (outgoing) flow of P2, and each convex (concave) node of PI should correspond to a convex (concave) node of Pz. See Fig. 8. At the end points ar and bi, flow should be either one of the four patterns shown in Fig. 9. Note that we assume that each cell has to contain at least one fixed point in the cell, for all flow patterns resulting from fusing a flow pattern P and another not containing any fixed points can also be generated by applying distortion rules to P. 14 T Nishida/Artifcial Inielligence 91 (1997) 3-32 lfQ?TA i . ..’ Ic “. .( . . . . ” .‘... ,. . . . _.’ ..A ..i..“’ .‘. . . . “.\ . . . ..___._. (a) cv-distortion [rn . ..J Iti (b) vc-distortion ‘l. . . . ‘. _,......._... “. ._ ,..‘. ‘I, . ..’ .“. _. .. ..’ (c) effect of the application of a distortion rule on flow mappings ~~~~~~~~~ WI CW @l(b) @P(C) @D(O) Fig. 6. Distortion rules. Fig. 7. Composition of flow patterns by fusing. L Nishida/Artijicial Intelligence 91 (1997) 3-32 15 Fig. 8. Conditions for “fusing” a couple of flow patterns. Fig. 10 illustrates how the flow pattern shown in Fig. 4 can be obtained by applying a sequence of distortion rules to the basic flow pattern B+. Fig. 11 illustrates flow patterns formed by applying the composition rule to basic flow patterns & and B_. FGl introduced so far has the following characteristics: Proposition 1. Any Jrow pattern representing a structurally stable jlow in a region on the two-dimensional plane can be generated by FGl unless the jlow contains a limit cycle. Proof. Peixoto’s theorem’s endorses that the simplest flow patterns generated by any C’ flow on the two-dimensional plane and containing at most one fixed point are only those shown in Fig. 5. Now suppose that we are given an arbitrary structurally stable flow in a region on the two-dimensional plane not containing any limit cycle, and consider the process of growing and fusing small cells around fixed points in the region until they become as large as the region. 7 It is possible to find a small region around a fixed point whose flow pattern conforms to one of the basic flow patterns shown in Fig. 5, for the microscopic nature of a C’ flow is relatively simple in the sense that it can be approximated by a linear flow in an appropriately small region. The distortion rules shown in Fig. 6 cover all situations where convex and concave nodes are introduced due to the complication of the geometric relation between the cell boundary and the flow during growing single cells. The composition rule shown in Fig. 7 covers all situations where the flow is linked as two cells are put together. El We might have designed FGl so that each flow pattern could contain one or more limit cycles. However, such a flow grammar would not be useful for qualitative analysis, for such a design would unmanageably increase the number of possible flow patterns for the same observation. Our program PSX2NL [ 6,7] has a mechanism of partitioning 6 See [2, p. 601 for more detail. 7 When the region contains no fixed points, we will start by a region whose flow pattern conforms to the one shown in Fig. S(a). 7: Nishida/Art@cial Intelligence 91 (1997) 3-32 (1) introduction 01’ a concave ntxlc: E E - c (2) deletion of a convex node: E L’- E (3) merge into a convex node: I’ \I-+ L Fig. 9. Four patterns governing fusion of flow at the end points. l : convex INtiC 0 : concave no& Fig. 10. The derivation of the flow pattern shown in Fig. 4 (drawn schematically) T Nishida/Artificial Intelligence 91 (1997) 3-32 Fig. 11. Flow patterns formed from basic flow patterns Bk and B- a cell into smaller pieces so that no limit cycles may not be contained it finds out the symptom of limit cycles. in each piece, if 4.2. Indexing jbw parrems We classify We is a patt sources. involved. flow patterns by the number of fixed points and points of contact le called Jrow index as an index to the set of flow patterns. A flow index , n,, n,,, nss), where n, denotes in the flow the number of convex nodes at of concave nodes, nsa that of saddle nodes, and nSS that of sinks or For example, the flow index for the basic flow pattern Bo is (2,0,0,0), that for B- and B_ is both (O,O,O, I), and that for B+ is (4,0,1,0). As for the flow patterns (2,0,1,1): for (5), that for (l), (2), (6). (7), (9), and (11) Although the index appears shown in the following property: in Fig. 11, the flow (3), (8), (lo), is (4,2,1,1). four-dimensional, index for the flow pattern and (12) is equally (3,1,1,1); (4) is and that it is actually three-dimensional, as 18 ?: Nishida/Art$cial Intelligence 91 (1997) 3-32 Proposition 2. For any C’ structurally stable $0~ and a closed region R, let the number of saddle points and sinks or sources in R be nsa and nSS, respectively. Let the number of convex nodes and concave nodes at the boundary dR of R be n, and n,, respectively. Then we have the following relation: n, - nc = 2 x (nsa - nss + 1). (4) Proof. We use mathematical process of partitioning of generating to the basic flow patterns. the associated induction to prove Eq. (4). The idea is to observe the C’ flow in a given cell is exactly flow pattern by applying distortion that the the inverse of the process rules and composition First, Eq. (4) holds for basic flow patterns. 8 the application of a distortion Second, rule preserves IQ. (4), for it will increase the number of concave and convex nodes by one, respectively. Third, consider now that we apply the composition and (nV,2, nc,2, nsa,2, nSS,z), and assume rule to fuse two flow patterns with (4) that Eq. flow indices holds for each of them. Thus, we have (n,,l, n,,l, nsa,l, %,I) w - nc,l = 2 x (nsa,l - nss,l + l), nv,2 - k2 = 2 x (h.2 - nss,2 + 1) . (5) (6) On the other hand, from the two flow patterns. Then, we have let (n,, n,, %a, ss n ) be the flow index for the flow pattern resulting %a = flsa,i + nsa,2, nss = nss,i + nSS,2. (7) (8) The same number of convex nodes and concave nodes disappears at the segments fusion except may be introduced each of the four cases, n, - n, decreases by one. Hence, we have for in Fig. 8. A new convex or concave node in Fig. 9. In at the two ends of the segment the two end points, as shown for fusion, as shown nc - n, = (n,,t + nc,2) - (n,,t + nV,2) + 2. (9) From Eqs. (5)-(9), we have Eq (4). 0 Thus, the difference of the number of convex nodes and concave nodes is the same for the same number of sinks, sources and saddle nodes. Given a the same number of sinks, sources and saddle nodes, than the other if the number of convex and concave nodes of the flow patterns containing couple of flow patterns containing we say one is simpler former than that of the latter. is smaller 8 The interested user might refer to [ 2, Proposition 1.8.4, p. 5 11, which describes the basic properties of the index of fixed points. Z Nishida/Art@cial Inielligence 91 (1997) 3-32 19 Fig. 12. Minnmal flow patterns which cannot be derived from basic flow patterns without applying a distortion rule. Definition 3. Let the flow indices of flow patterns ( n’ n’ n’ pattern g if n, < n: A n, < nh A nsa = & A nss = n&. respectively. A flow pattern “, c, sa, n:J, f and g be (n,, n,, nSa, n,,) and flow than another f is said to be simpler Since n,,, n,, nsar and nss are computed for detecting numerical as a constraint used to enumerate follows from Eq. (4) from those with index (2,2,0,1). the flow patterns efficiently. For example, that nsa = nss - 1. Thus, we can start enumerating independently, errors or missing information. the above theorem can be used It can also be if both n, and n, are 2, it flow patterns 4.3. Enumerating jlow patterns The flow grammar presented in the sense that there usually exists more than one derivation which produces the same flow pattern. In order to cope with this unfortunate property, we have to rely on a generate and test method. In order to decrease in the previous is ambiguous subsection The first technique a sequence ‘otherwise. The second the cost of enumeration, we use two techniques. is to pose a constraint on the sequence of derivations of derivations which eventually technique produces is at the representation a flow pattern level, as described so as to to be in suppress generated Section 5.2. Definition 4. Flow pattern P is minimal if there is no other flow pattern Q such that P results from applying a distortion rule to Q. As for the twelve flow patterns shown in Fig. 11, only ( 1) , (2), (4), ( lo), and ( 12) are minimal. Let us consider flow patterns with flow index the strategy of deriving all flow patterns with flow index (n,, n,, nsa, nss). At a lirst glance, one might think that such flow patterns could be derived by firstly deriving minimal applying composition rules until n, and such a naive procedure may fail to generate n, become some flow patterns such as those shown in Fig. 12. The flow pattern shown in Fig. 12(a) cannot be derived by simply applying rule to a couple of basic flow patterns; one has to apply a distortion the composition rule first, as shown in Fig. 13. rules to basic flow patterns and then applying distortion the given values. Unfortunately, -, nsar nss) by repeatedly (-, 20 Z Nishida/Arti@ial Intelligence 91 (1997) 3-32 distortion t Fig. 13. Example of a derivation process for the flow pattern in Fig. 12(a). However, we can know the upper bound of the number of applications of the distortion and the composition rules to derive any flow pattern with a given flow index, as described below. Proposition 5. Whenever a flow pattern c is derived by applying the composition rule to flow patterns a and b and the internal segment of fusion s of a contains a couple of convex and concave nodes resulting from application of distortion rules, there exist other$ow patterns a’ and b’ derivable by FGl such that (i) a is den’ved from a’ by application of a distortion rule; (ii) b’ is equivalent to b except that b’ does not have a couple of points of contact on s; and (iii) c can be derived by applying the composition rule to a’ and b’. Proof. Without losing generality, we can assume that the flow pattern c is derived from flow patterns a and b by applying the composition rule to the portion of interval a, p of the segment of fusion s, as shown in Fig. 14(2). Consider partitioning c along with a surface s’ which differs from s only at the interval a’, p’ where orbits are coherently cutting across the boundary (see Fig. 14(3)). Such partitioning is possible from the continuity of C’ flow. Let the resulting flow patterns be a’ and b’ (see Fig. 14( 1)). Flow pattern a is derived by applying a distortion rule to a’. Flow pattern b’ is the same as b except that there are no points of contact at the interval a’,p’. It is generated by FGl, for it is also a structurally stable flow obtained by slightly perturbing the interval a,P of b and Proposition 1 holds. 0 T. Nishida/Artifcial Intelligence 91 (1997) 3-32 21 a) b and b’ are identical except the difference between q and (2 ’ ,? ’ composition via (I ’ /3 ’ - Fig. 14. A case where flow pattern c results from applying a distortion rule before applying the composition rule. In this case, the proposition suggests that there exists an alternative way of deriving c from flow patterns a’ and b’ which are both simpler than a aad b, respectively. The flow pattern a in the above proposition is thought of as one resulting from apply- ing a distortion rule before applying the composition rule. In this case, the proposition suggests that there exists an alternative way of deriving c from flow patterns u’ and b’ which are both simpler than a and b, respectively. Similarly, there are several other cases in which the application of a distortion rule immediately prior to the application of the composition rule can be avoided by employing an alternative, simpler derivation process, as shown in Fig. 15. Unfortu- nately, there is a case as shown in Fig. 16 in which the composition occurs at the boundary edge resulting from the application of a distortion rule, and there are no ways of replacing the derivation process by a simpler one not containing the applica- tion of a distortion rule immediately prior to the application of the composition rule. Thus: Proposition 6. We cannot derive allflow patterns unless the application of a distortion rule is pennitted prior to the application of the composition rule. However, it is also noted that peculiar cases in which the application of a dis- tortion rule is necessary prior to the application of the composition rule are limited to the case shown in Fig. 16 and its variants. In such cases, the number of con- Z Nishida/ArtQicial Intelligence 91 (1997) 3-32 ax 4 Fig. 15. Cases in which the application of a distortion rule immediately prior to the application of the composition rule can be avoided by employing an alternative, simpler derivation process. h’ is more complex than 0 Fig. 16. The composition occurs at the boundary edge resulting from the application of a distortion rule, and there are no ways of replacing the derivation process by a simpler one not containing the application of a distortion rule immediately prior to the application of the composition rule. is at least one more cave nodes flow patterns cation of a distortion have: to be fused. than In addition, one concave node to the application the total number of concave nodes of the two at the appli- rule. So we is introduced of the composition rule prior T Nishida/ArtiJcial Intelligence 91 (1997) 3-32 23 Proposition 7. A $0~ pattern with flow index (n,, nc, nsa, nss) can be derived by ap- plying a distortion rule at most n, times and the composition rule at most ( nsa + nss) times. 4.4. Evaluation of a flow grammar requirements General l sound’ness: any flow patterns generated by the flow grammar should correspond on a flow grammar are: to a realizable flow; l completeness: any flow patterns corresponding to an existing flow should be derived in fini.te steps; and above is partly complete in more than one way. This means a unambiguity: any single flow pattern should not be derived The flow grammar FGl mentioned while it is not unambiguous derived use FGl as a knowledge the upper bound of the number of steps for derivation, We do not know so far how we might enumerate addition, we need to devise an algorithm which can generate consistent with observed geometric cues. Some kind of constraint We do not have any idea about the soundness of FGl, in more than one way. in the sense of Proposition 1, as there might be the case in which a flow pattern may be to that redundant computation source for predicting behavior. Although Proposition 7 suggests its effect is not powerful enough. in an efficient fashion. In the set of all flow patterns satisfaction may help. is positive. though our conjecture is unavoidable flow patterns 5. Use of flow grammar in qualitative analysis of flow We have implemented an algorithm for enumerating flow patterns and incorporated it into a system called PSX2NL. 5.1. Bottom-up analysis by PSX2NL according to a prescribed In normal situations, PSX2NL examines description the given flow has one or more fixed points; the flow in a bottom-up manner, attempting fixed sequence: PSX2NL to build a qualitative first examines whether if so, it determines their type. If there is more than one fixed point in the given region, PSX2NL. partitions into several cells so that at most one fixed point may be contained the given features of the flow, traces key orbits in each cell; for the given by numerical about region, the qualitative behavior of the given region. Thus, an abstract description is gradually constructed if necessary, generates the properties of the flow mappings, it then examines integration from less abstract descriptions. a set of flow mappings and derives conclusions the geometric investigates region For example, Fig. 17 illustrates how PSX2NL analyzes the flow by Van der Pol’s situations. PSX2NL derives a set of flow equation mappings in region ABCD, (2) (3) for the cell ABEF and in normal I: Nishida/Ar@cial Intelligence 91 (1997) 3-32 Fig. 17. Reasoning about qualitative behavior with flow mappings. Z Nishida/Ar@cial Intelligence 91 (1997) 3-32 @2 :C,D,F,Q-Q,E,C for the cell FECD. By combining the two sets of flow mappings for the two cells, PSX2NL obtains _- @2(ic,Q) =&(F),Q c@i,‘V>,Q, @&D;‘(p),Q) =@l(Q>,@~(f’) c EQ, and hence, - @1 0@2(F,Q) - c EQ. 25 (10) (11) (12) (13) Since Eq. ( 13) suggests interval, PSX2NL concludes attracting bundle @C of orbits containing @I o &(.Fe). towards 0; lo It also follows as t 4 co. that all orbits passing through from the Poincar&Bendixon theorem9 at least one limit cycle the interval F, Q never leave the that there exists an to the interval F, Q tend that is transverse through that all orbits passing 5.2. Top-down analysis by PSX2NL If something goes wrong and the standard sequence to the top-down mode, trying turns out to be intractable, to find the most plausible the flow grammar FGl. The flow grammar provides PSX2NL with the observations made so far. As a knowledge the inter- source, PSX2NL theoretical analysis process switches pretation uses constraints, that matches allowing it to operate in a top-down manner. The top-down analysis consisting is basically of partially a generate and test method. The input traced orbits and estimated is a set of observations location of convex and concave nodes. A flow pattern P is an interpretation of an observation 0 if there a set of assumptions A such that 0 = P U A. An interpre- exists the observa- there tation tion with a smaller set of assumptions. PSX2NL uses the enumerator described in the previous tion. (possibly empty) is minimal when in turn and seeks for a minimal interpretation which explains flow patterns is no other to generate interpreta- section the observation shown For example, given interpretations, the number of observations when more than one minimal increase two of which are shown minimal simply found. Whenever PSX2NL detects a symptom suggesting in the given region, orbit. Focusing observation for future:. that a limit cycle is contained it will divide the region into two by a line across the limit cycle like left for resolving ambiguity would be an interesting problem in Fig. 18, PSX2NL produces twelve in Fig. 19. Currently, PSX2NL will is interpretation PSX2NL has additional First, features as described below. to predict the flow grammar allows PSX2NL the existence of key orbits and to plan numerical computation to find their location. For example, given an observation g See [ 3, p. 2481 for more details. loNote thar@l o&(m) =@1(Q).@10@2(0. 26 Z Nishida/Artij?cial Intelligence 91 (1997) 3-32 Fig. 18. Observation (drawn schematically). Fig. 19. Minimal interpretations of the observation in Fig. 18. the inferred location ol’ the predicted saddle node fig. 20. Planning numerical computation. invariant manifolds to find the location in Fig. 20(a), PSX2NL. predicts as illustrated attempts which given region by narrowing down the envelop enclosing invariant manifolds it infers (Fig. 20(d)). (Fig. 20(c) ), and finally in the phase space of the predicted the existence of a saddle node and at infers (Fig. 20(b)), of a the boundary the location intersect saddle node the saddle node and associated the location of the saddle node Z Nishida/Artijicial Intelligence 91 (1997) 3-32 (a) Observation :- --_.. .j__.._______ __p i t i _Q .._.... 0.; . . . . . . .._ .,. i w . .._.._ . i ..,__ +..+ ___._..... .____,__ 4% 1 ! c 27 search for interpretation f-rep inferred: ((- 1) (+ 5 1) (- 5 1) (+ 5) (- -1 1) (+ 5)) (b) Searching for flow patterns which explain the observation; candidates are listed from the simplest ones; in this case, twelve equally simple candidates are found; ((- 12 patterns match. > their f-reps are: No. 1: ((- -1 1) (+ 5) (- -1 1) (+ 5 1) (- 5 1) (+ 5)) No. 2: ((- -1 1) (+ 5 3) (- 1) (+ 5 1) (- 5 3 1) (+ 5)) -1 3 1) (+ 5) (- 1) (+ 5 3 1) (- 5 1) (+ 5)) No. 3: No. 4: ((- 5 3 1) (+ 5) (- 1 -1 1) (+ 5 5 3) (- 1) (+ 5 1)) No. 5: ((- 5 1) (+ 5) (- 3 1 -1 1) (+ 5 5) (- 1) (+ 5 3 1)) No. 6: ((- 5 -1 1) (+ 5) (- -1 1) (+ 5) (- -1 1) (+ 5 1)) No. 7: ((- -1 1) (+ 5) (- -1 3 1) (+ 5 1) (- 5 1) (+ 5 31) No. 8: ((- 5 3 -1 1) (+ 5) (- -1 1) (+ 5 3) (- 1) (+ 5 1)) No. 9: ((- 5 -1 11 (+ 5) (- -1 3 1) (+ 5) (- 1) (+ 5 3 1)) No. 10: (I- 5 1) (C 5) (- 3 -1 1) (+ 5) (- -1 1) (+ 5 3 1)) No. 11: ((- -1 5 1) (+ 5) (- 3 1) (+ 5 1) (- 5 1) (+ 5 3 1)) No. 12: ((- 5 1) (+ 5) (- 3 -1 3 1) (+ 5) (- 1) (+ 5 3 3 1)) candidate No. 7: candidate No. 9: I 5 . . . . I . . . s (c) In order to resolve ambiguity, numerical computation is planned and executed; (d) Candidate No. 9 is selected as the most plausible interpretation. Fig. 21. Focusing numerical computation. 28 7: Nishida/Art@cial intelligence 91 (1997) 3-32 (a) Symptom of an unexpected limit cycle is detected the region is divided; (b) Flow in each region is analyzed individually and the results are merged. Fig. 22. Rearranging the analysis process when an unexpected result is obtained. Second, the flow grammar permits PSX2NL to focus numerical interpretation computation of an observation that is expected computation. For (upper half the to resolve example, if there is more than one possible of Fig. 21), PSX2NL will plan numerical ambiguity Third, (lower half of Fig, 21). the flow grammar enables PSX2NL an unexpected result the analysis process when is obtained. For example, when a symptom of an unexpected to rearrange ‘I: Nishida/Artificial Intelligence 91 (1997) 3-32 29 most plausible interpreetation Fig. 23. Correcting inconsistency due to numerical errors. is observed, as in Fig. 22(a), PSX2NL will divide a region and symbolic the existence of a limit cycle by numerical into cells and computation limit cycle try to prove (Fig. 22(b)). Finally, a plausible violated because of numerical the most plausible the flow grammar helps to detect inconsistent For example, nonintersection results and propose of orbits may be errors, as in Fig. 23 (a). In such cases, PSX2NL suggests numerical constraints interpretation. To reduce interpretation the cost of comparing (Fig. 23 (b) ) . flow patterns, we use a short-hand representation segment are mapped by orbit intervals list ‘I of the form to a boundary denotes in the counterclockwise ((. . . , Si[Xi,ly. . . , ~l,~~~], . . .)). segment delimited by a couple of order how points on If the segment B, we use in the flow pattern. involved to xi,j is mapped from/to the relative position of B counted another boundary in the counterclockwise of flow patterns. An f-rep is a cyclic Each elernent of an f-rep corresponds points of contact and qualitatively the boundary interval corresponding a positive order from the current boundary we use a negative integer. si denotes flow comes from the outside, and “-” indicating integer segment. If it is either a fixed point or a limit cycle, if the the orientation of the flow there: it is “+” For example, an f-rep for the flow pattern if it leaves for the outside. in Fig. 24 is: ((+~5,3,11,-~-1,5,~1,+~51,-~3,~1,+t51,-~~1)), (14) is for boundary the first element where on. Note that f-rep for a set of flow mappings of variants which only differ from each other And importantly is left for future. it seems that different - - segment AC and the second is for CC, and so is uniquely defined except the existence in the way fixed points are numbered. f-reps. More study flow mappings give different 5.3. Implementation issues For the: procedure illustrated bolic computation act with each other. It should be noted that neither and a high-level qualitative in the previous subsection reasoning procedure to work, numerical and sym- inter- low-level procedures nor high-level should closely l1 We denote a cyclic list consisting of xl,. . ,xn as ((XI.. . . , n,)). By definition, ((XI,. . , xn)) = ((x2,..., Xn,Xl))=“‘=((Xn,XI,...,x”-l)). 30 T. Nishida/Artifcial Intelligence 91 (1997) 3-32 where the flow is governed by: b’ Fig. 24. A nonlinear flow and a flow pattern representing its portion. dynamical systems lhmy high-level, qualimive nlunelicxl routines I I symbolic algebra low-level, quantitative Fig. 25. A blackboard model as a basis of the control scheme of PSX2NL. to produce intensive procedures cannot yield any conclusion are incomplete need cilitate employed system has a shared memory knowledge The blackboard model makes are complete; high-level procedures unless evidence are incomplete is provided, whereas in the sense that they cannot determine how accurate an answer In order some important solution. in order to avoid missing coupling of the processes at different a blackboard model as a basis of a control in the sense that they low-level procedures is they to fa- levels of abstraction, we have (Fig. 25). Thus, the scheme (KSs: the contents of the blackboard. and a library of processes sources). KSs interact indirectly by updating space (the blackboard) it possible to implement multiple strategies. T Nishida/Artificial Intelligence 91 (I 997) 3-32 31 To allow the complex control structure to be implemented easily, we have employed the following features: (i) explicit representation of the control structure on the blackboard so that KSs can directly access and manipulate it; (ii) uniform On the other hand, our approach representation of all objects on the blackboard to designing and implementing as attribute-value pairs. PSX2NL has the following limitations: (i) all knowledge form as KSs; the terminology designed; (ii) used for problem solving must be represented in a procedural for representing objects and relations has not been carefully (iii) no attempt has been made to incorporate intuitive guidance, possibly obtained the horizontal coordination problem in designing and from statistics. Thus, we have not addressed implementing PSX2NE. 6. Related work Attempts information to incorporate have been made by several authors constraint of orbits and some other partial constraints, global lo]. Unfortunately, most computational methods developed the nonintersection the ability of reasoning mostly comes a flow grammar provide constraints, and asymptotic behaviors. [4, so far only make use of and hence limited. Their weakness flow patterns and about various aspects of geometric reason about the structure of global for reasoning to symbolically from the lack of adequate about global behaviors allowing an envisioner representation. is still quite In contrast, a means is not yet implemented and other programs based on the conventional Intelligent analysis of nonlinear ODES is quite a new field. POINCARE [9] would analysis of nonlinear ODES. POINCARE as PSX2NL does. Both POINCARE nonlinear ODES, though POINCARE in PSX2NL. The differ- intelligent in phase portrait analysis which analysis addressing be the first program integrates and quantitative methods, qualitative and PSX:ZNL work on planar ODES including supports bifurcation ence than POINCARE ogy. This leads for it keeps geometric ample, PSX2NL keeps POINCARE derive richer conclusion as demonstrated pleteness of information external package In contrast, PSX2NL grammar. to three consequences. and topological information in the previous and numerical has to keep fixed points. can switch in locating from the location of all points on orbits. Second, PSX2NL simulation is that PSX2NL makes use of more saves computational First, PSX2NL information representation technol- resources, form. For ex- in an more abstract about only a few essential points on orbits, while can analysis, from incom- relies on an too. to a robust, approximate method based on a flow obtained by quantitative is more robust errors. For example, POINCARE fails POINCABE section. Third, PSX2NL If the package fails, the same observation 32 T. Nishida/Artificial Intelligence 91 (1997) 3-32 A stochastic approach [l] is another candidate of uniform havior supported by mathematical complementary two. nature theories. Since to ours, it would be interesting treatment of global be- the stochastic approach possesses a the to seek a way for combining 7. Conclusion I have presented a$ow grammar, a grammatical specification of all possible patterns of solution semi-symbolic and studied grammar numerical is used computation. curves one may see in the phase space. I have described representation of the patterns of solution patterns the properties of the flow grammar. Finally, in qualitative analysis to plan, monitor, jlow pattern, a in the phase space I have described how the flow the result of and interpret An important work left for future research is the extension is quite challenging both theoretically the extension of this work into higher dimensional secondly, far more complicated, in that direction flow. The research Unfortunately, for firstly dimensional topological paper would be of much help in such extension. flow patterns become geometric objects structure of flow. However, we believe is hard, and thirdly it becomes subtle that the concepts exploited into higher dimensional and practically. flows is not trivial, higher representing the in this to characterize References [ l] J. Doyle and E.P Sacks, Stochastic analysis of qualitative dynamics, in: Proceedings IJCAI-89, Detroit, MI (1989) [ 21 J. Guckenheimer 1187-1192. and P Holmes, Nonlinear Oscillations, Dynamical Systems, and Bifurcations of Vector Fields (Springer, Berlin, 1983). [3] M.W. Hirsch and S. Smale, Di$erential Equations, Dynamical Systems, and Linear Algebra (Academic Press, New York, 1974). [4] W.W. Lee and B.J. Kuipers, Non-intersection simulation, for qualitative [5] M. Leyton, A process-grammar [ 61 T. Nishida and S. Doshita, A geometric approach in: Proceedings AAAI-88, St. Paul, MN ( 1988) 286-290. for shape, Artif: Intell. 34 (1988) 213-247. of trajectories in qualitative phase space: a global constraint to total envisioning, in: Proceedings IJCAI-91, Sydney (1991) 1150-1155. [7] T. Nishida, K. Mizutani, A. Kubota and S. Doshita, Automated phase portrait analysis by integrating qualitative and quantitative analysis, in: Proceedings AAAI-91, Anaheim, CA ( 1991) 8 1 l-8 16. [8] T. Nishida and S. Doshita, Qualitative analysis of behavior of systems of piecewise linear differential equations with two state variables, Artif: Intell. 75 ( 1995) 3-29. [9] E.P Sacks, Automatic analysis of one-parameter planar ordinary differential equations by intelligent numeric simulation, Art$ Intell. 48 (1991) 27-56. [ lo] P Struss, Global filters for qualitative behaviors, in: Proceedings AAAI-88, St. Paul, MN (1988) 275- 279. [ 111 K.M.-K. Yip, Generating global behaviors using deep knowledge of local dynamics, in: Proceedings AAAI-88, St. Paul, MN (1988) 280-285. 