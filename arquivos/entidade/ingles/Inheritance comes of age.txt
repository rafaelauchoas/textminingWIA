Artificial Intelligence 103 (1998) 237-271 Artificial Intelligence Inheritance comes of age: applying nonmonotonic techniques to problems in industry IBM ZJ. Watson Research Center; 30 Saw Mill River Road, Hawthorne, NY 10532, USA Leora Morgenstern ’ Abstract reasoning Nonmonotonic is virtually absent from industry and has been so since its inception; increasingly marginalized within AI. We argue that this the result is that the field is becoming is largely because researchers in the area focus exclusively on commonsense problems which are irrelevant to industry and because few efficient algorithms or tools have been developed. A sensible strategy is thus to focus on industry problems and to develop solutions within tractable subtheories of nonmonotonic logic. We examine an example of nonmonotonic formula-augmented reasoning insurance domain-and to a broader and more powerful kind of nonmonotonic in industry-inheritance of business rules show how the paradigm of inheritance with exceptions can reasoning. This is done by semantic networks (FANS), semantic networks which attach well- is that to other industry problems. 0 1998 Published by Elsevier Science B.V. All rights is given and discussed. Finally we discuss to nodes. The problem of inheriting well-formed formulae within this structure the underlying lessons in the medical be extended introducing formed formulae explored, and an algorithm can be generalized reserved. Keywords: Artificial intelligence; Inheritance; Inheritance networks; Semantic networks; Expert systems; Nonmonotonic reasoning; First-order logic; Rule-based systems; Insurance; Medical insurance; Benefits inquiry; Applications; Commercial applications; Medical AI; Nonmonotonic logic; Nonmonotonic techniques 1. Introduction Nonmonotonic logic, the formalization of plausible reasoning, is invisible and virtually nonexistent in industry. It is in a worse position, in this respect, than most other areas of ’ Email: leora@watson.ibm.com. 0004-3702/98/$ - see front matter 0 1998 Published by Elsevier Science B.V. All rights reserved. PII: SOOO4-3702(98)00073-3 238 L. Morgenstern /Artijkiul Intellipm 103 (1998) 237-271 Intelligence. It is true that AI researchers have long accustomed Artificial the huge gap between AI hype, which promises great things (e.g., housekeeping and AI reality, which delivers much less (robots that have a hard time collecting balls). themselves to robots), tennis reasoning circuit configuration, The absence of nonmonotonic that are based on nonmonotonic Yet AI as a whole is quite visible in the early eighties, when AI showed endless promise, and financial applications; such examples in industry and the marketplace. Although AI has delivered less than was anticipated one or two decades ago, there is enough going on: expert systems are used in medical diagnosis, dictation systems for restricted domains are on the market. Unfortunately, reasoning. 2 do not include applications from the commercial world may have been small cause for concern research money was plentiful, and the field was very young. As we approach the end of the nineties, for however, we have reason research programs future. There inhabit isolated; are no better off than researchers result the field will shrink, of a vibrant reasoning. to and research will dry up to the point where we that as a (or worse, philosophy); instead in to worry. Funding has shrunk, and there is little tolerance results in the foreseeable and industry is tackling one of the hardest problems reasoning will become marginalized leaving only a few die-hards research community which that do not promise-and is the real danger-if separate worlds-that for nonmonotonic in mathematics to one another deliver-practical nonmonotonic nonmonotonic that funding reasoning continue talking I believe of schadenfreude and I am concerned and the resentment of practitioners I do not feel happy about writing I am a member of the nonmonotonic about the current state of nonmonotonic one is used to hear from people outside the field of nonmonotonic rather than pessimism: and strengthen nonmonotonic that last paragraph. These are the sort of gloomy logic. in the past, I have usually put them down to some toward theorists. This reasoning prognostications When I have heard these sentiments combination is not the case here. On the contrary: research. But community, that we can stop the field from being this is concern reasoning as a central part of mainstream AI. marginalized, to In order to do so, we must find some way to make nonmonotonic industry. We need to understand why nonmonotonic reasoning and industry are so far apart and to figure out how to bridge the gap. We also need to see if there are any examples of nonmonotonic and mistakes The paper underlying strategies to bring these two areas closer together. Sections 3 through 5 examine example of a nonmonotonic inquiry the reasons reasoning and industry and suggests possible in detail an a benefits the standard paradigm in industry, and to study these examples for lessons to generalize as follows. Section 2 discusses industry. The system extends the gap between nonmonotonic system that I developed for industry-specifically, to avoid in the future. for the insurance reasoning useful is accordingly structured reasoning system ’ It might be argued that fuzzy logic [43], which also claims industrial applications. Without commenting fuzzy logic and nonmonotonic fuzzy logic in industry says little about the field of nonmonotonic (such as the logic programming nonmonotonicity. We discuss logic programming logic are quite separate in Section 2. to capture plausible reasoning, has been used in on the merits of this argument, we merely note that the fields of thus, the presence of in both philosophy and community; reasoning. It is also true that logic programming language Prolog [3]) is used in industry, though it is generally not used to capture L. Morgenstem / Artijcial Intelligence IO3 (1998) 237-2 71 239 inheritance formulae network. We explore how one can inherit well-formed by adding general well-formed of nonmonotonic an inheritance this structure, examine inquiry system with the necessary expressiveness we can avoid the complexity problems subsequently consider generalizations can be applied in general to joining nonmonotonic to the nodes in formulae using the benefits and reasoning ability, and discuss how systems. We reasoning of the system, and finally examine the lessons which reasoning and the commercial world. the ways in which nonmonotonic that beset nonmonotonic techniques provide 2. Analyzing the gap between nonmonotonic reasoning and industry 2.1. Reasons for the gap includes reasoning to conclusions Nonmonotonic in order to reasoning in the late 1970s [25,27,34] and retracting such conclusions ’ Plausible reasoning with default rules (rules that talk about a typical member of and if they are proved to be wrong. The first- that could reason more flexibly and fluently to make AI easier. logic would become a reasoning was first introduced formally capture plausible or default reasoning. with exceptions, a class, rather than all members of a class), reasoning with incomplete jumping aim in those early days was to construct a logic that is more powerful order logic and to aid in developing programs then available. Nonmonotonic than the programs As such, it could have been reasonably expected that nonmonotonic tool of software engineers In fact, this has not happened: is found only in academia and tolerant research labs. (as is the case, for example, with object-oriented two decades later, open activity logic was supposed in nonmonotonic programming). than classical information, research What went wrong? The answer, in a nutshell, near ready to handle industrial-strength been freely admitting is in itself cause for concern. Much of AI and all of industry Confession will not save us here: we need to determine why nonmonotonic not helped get things done. Three reasons come to mind. is nowhere freely admit this, and have it for the last twenty years. After this length of time, the admission is about getting things done. reasoning has problems. Researchers is that nonmonotonic reasoning (1) Nonmonotonic research has focussed almost exclusively on reasoning. The canonical Tweety problem-inferring is a bird and that birds that Tweety is a penguin-is typically seriously tackle when they develop new nonmonotonic toy problems oj’ that Tweety can fly that fly; and retracting still one of the benchmark logics the facts that Tweety upon discovering commonsense from conclusion problems or modify old ones. 4 that researchers 3 These papers, as well as other classic papers in the field. are collected in [ 121. 4 While all existing nonmonotonic on this problem are beyond some well-known nonmonotonic system based on consequence is a robin, robins are birds, and birds typically consequence-relation problem; reasoning problems. is that it is far from obvious systems. For example, a nonmonotonic Iogics, as far as I know, can solve the Tweety problem. simple variations reasoning infer that Tweety can fly from the facts that Tweety is in general not permitted in that can solve this variant Tweety systems can solve very simple logics.) A relatively simple fix [lo] results in a system the point, however, (as in [23]) cannot that nonmonotonic fly. (The problem is that chaining relations 240 L. Morgenstem /Artificial Intelligence 103 (1998) 237-271 Indeed, nonmonotonic as the well-known Yale Shooting problem a gun, waits, and then fires the gun at a turkey, the turkey will die. 5 theories have trouble solving a host of other toy problems such [ 171, which involves predicting that if one loads It can be argued with a good deal of justification that commonsense is one for AI to model [5] and that sneering at reasoning of the more difficult areas of intelligent behavior research on the Tweety and Yale Shooting problems merely reflects a lack of understanding of the difficulties of the underlying commonsense hardly be surprised research that is stymied by the likes of the Yale Shooting problem. It may very well be that toy problems of than industry problems. Nonetheless, one can based on that industry has been reluctant reasoning are more difficult in technology to invest issues. (2) In fact, industry is primarily concerned with problems which appear to have very ignore typically researchers reasoning. Examples these problems, preferring little to do with commonsense determining where oil is likely to be found, and predicting variations Nonmonotonic on problems of commonsense as discussed researchers have very little to offer industry. The irony that nontrivial nonmonotonic present in a wide variety of industry problems. For example, virtually any prediction must be done use causal rules which have exceptions; (such as nonmonotonic reasoning include diagnosing bacterial infections, in the stock market. to work is that these argue that some form of nonmonotonic is needed. above. The result is that one can plausibly information this suggests in the absence of complete indeed much commonsense task and must about one’s situation, temporal reasoning) reasoning-and reasoning-is reasoning, instead for nonmonotonic for the nonmonotonic researchers. The problem is community. The result is remains uncharted seems to offer fertile ground territory Industry that industry that this community problems. in reality easier to solve than the deceptively nonmonotonic buttressed with solid solutions to problems has not yet demonstrated It is all very well to argue that the seemingly hard problems that it is capable of solving any industry facing industry are problems upon which research focusses, but this argument, however cogently formulated, must be simple commonsense in industry. reasoning (3) Nonmonotonic techniques have not scaled up to industry. Even if the community were to start working on a problem directly relevant to industry, is crippled by decidability predicate nonmonotonic and to come up with a good solution, nonmonotonic and tractability problems, and by a lack of good tools. Specifically, nonmonotonic logic is in general undecidable logics are intractable. For example, determining whether a formula is in the extension of a propositional default theory is in general C{ -complete and even simple classes of propositional nonmonotonic reasoning [ 131. There are some bright spots in type of nonmonotonic efficient polynomial as inheritance with exceptions due to Horty et al. [20], and Stein this otherwise dark picture. There are relatively reasoning known is the for a particular [41], which algorithms 5 It is assumed that a gun that was loaded at one moment will remain that firing a loaded gun at a turkey always results in the death of the turkey. The difficulty arises the Yale instance of the multiple extension problem, which arises when two or more to the next to the next. Early papers on the in predicting Shooting problem default rules conflict. In this case, the default rule that guns typically conflicts with the default rule that turkeys Yale Shooting problem can be found in [ 121; for recent analyses. see [30.X9]. loaded at the next. More precisely, stay loaded from one moment stay alive from one moment is a particular typically 241 is L. Morgenstern /Artificial Intelligence 103 (1998) 237-271 [22]. This extended extension of inheritance, allows one to posit exceptions the Yale Shooting problem unless that dates back to Aristotle and the syllogism It easily handles Tweety-style problems. that problem foundation upon which the work in this paper is built. 6 Inheritance with exceptions the nonmonotonic and superclasses of inheritance reason with those exceptions. handle unnatural manner. The problem as a subclass-superclass inheritance with exceptions, which will be remedied ill suited for anything but taxonomic many promising subfield of nonmonotonic that are propositional, unique solution set for courteous is O(n’) a simple form of reasoning with subclasses form to the general behavior of classes and to (It cannot, however, in a somewhat is that temporal reasoning cannot generally be represented of standard to a large degree in this paper: it is to work in this area, there are In addition results in the area of logic programming, which is sometimes viewed as a for theories of a a restricted form of prioritized defaults, reasoning. For example, computation problem. This highlights the major disadvantage and in Horn form [7]; computation is reformulated nonrecursive, logic programs, of solutions reasoning.) is O(n) [1.5]. At least these positive however, industrial-strength results are in the case of inheritance, these weakened by the lack of corresponding tools for inheritance with algorithms. For example, for a exceptions, despite the fact that efficient algorithms have been known and published decade. Anybody who wishes to use the technology in industry must build the code from scratch. In an age and an industry where tools have become a sine qua non, the lack of a good tool can freeze any possibility of using a nonmonotonic theoretical tools which implement there are no commercially technique. available The importance in developing This was, indeed, my experience the inheritance the fact that it was clear that standard system described in inheritance would not inheritance was needed, existed, while tools that performed inheritance did not exist, caused many involved with the project to argue tool be used. It is a mark of the Dilbertian nature of the software and tool to get the job done badly but quickly Sections 4 and 5. Despite do the job, and that a system as least as powerful as nonmonotonic the fact that tools that performed standard nonmonotonic that the existing consulting is considered preferable today that using an existing inheritance industry to building of good tools the correct tool and doing the job slowly but well. is underscored by the relative success reasoning. Logic programming (see, e.g., the papers in [33]). Unfortunately, in industry of offers a basic tool: the language Prolog, which techniques are widely used the success of logic in industry. Logic as a specification reasoning abilities are rarely exploited. Perhaps this is because community’s community does not always share the nonmonotonic does not mean that nonmonotonic is present is often used because of its elegance and its usefulness reasoning logic programming. Logic programming supports simple nonmonotonic in practical applications programming programming language; the logic programming interest in modelling on using logic programming’s from its nonmonotonic researchers those nonmonotonic at the intersection capabilities of logic programming for practical applications and nonmonotonic and solving nonmonotonic reasoning problems. Indeed, the work comes ’ These algorithms are tractable. The tractability of Horty et al.‘s algorithms is discussed depends on the kind of chaining to tractable algorithms. Stein’s algorithm involved in path construction. The version presented is O(n5). in [38]; the complexity in [ 181, Section 2.1. leads 242 L. Morgenstern /Artificial lntelli~ence 103 (1998) 237-271 reasoning who also have a particular interesting programming as conflict handling. techniques with special-purpose interest in applications nonmonotonic reasoning (e.g.,[14,15,36]). standard techniques It is logic such to note that in these cases, researchers have had to augment 2.2. Closing the gap If the field of nonmonotonic first, nonmonotonic researchers have not yet developed integrating nonmonotonic research and industry and/or reasoning with industry becomes clear. efficient algorithms logic has remained entirely separate from industry because focus on very different problems, and second, for the strategy tools, First, researchers in nonmonotonic logic should familiarize in reasoning appears to be important, and focus in their research. Second, researchers ought to actively design efficient industrial- themselves with problems theories, and develop for the tractable portions of nonmonotonic industry, select a set in which nonmonotonic on those problems algorithms strength tools. Ideally, nonmonotonic be developed. That is not essential, however; what is important these endeavors problems in industry are found, should be carried out simultaneously. tools to implement to That is, as solutions these solutions should is that both tasks get done. At this point, relatively few industry problems have been solved using nonmonotonic techniques. The remainder of this paper will discuss one such problem and its solution. We the will outline nonmonotonic to other problems techniques used, and suggest how this method could be generalized the problem, explain why nonmonotonic is necessary, present in industry. reasoning 3. The problem: inheritance and inheriting rules in the medical insurance domain 3.1. The case in point: benejits inquiry 3. I. 1. Problem description inquiry Benefits is the process of querying an insurance to determine one’s inquiry also refers to the process benefits. In this paper, as well as in [31], the term benefits In the medical performed by insurance insurance is covered, industry, customers may wish to know whether a particular procedure the extent of the coverage, and the specific rules that limit coverage. Examples of questions that customers company employees typically ask are: such queries. in answering company Will my son’s tonsillectomy be covered? Can it be performed How many days can I stay in the hospital after a standard delivery? in an inpatient facility? inquiry occurs frequently industry and has become in the medical Benefits increasingly today companies the past few years: medical may have thousands of insurance products, each of which contains a myriad of services frequently. The vast amount of and regulations; these regulations complex during themselves insurance insurance change L. Morgenstern /Art$cial Intelligence 103 (1998) 237-271 243 is difficult information changing have exceptions, generally limited physician, but spinal manipulation, limit (around nonmonotonic to keep up with. In addition, there are many rules that and exceptions can be nested. For example, physical therapy might be to twenty visits per year, unless more visits are ordered in writing by a thirty visits). The importance of exceptions reasoning would be useful. a type of physical therapy, might have a more generous that some form of suggests Several years ago, I was asked to develop an expert system for benefits consulting insurance corporation was part of a comprehensive medical to update major portions of their information management system.) The primary goal of the expert system was to aid customer service representatives (CSRs), the insurance company employees who answer customers’ questions about their benefits. engagement between (This IBM Research and a large inquiry. 3.1.2. What had been done Customer information, through common sense and on-the-job experience. service representatives including basic charts, detailed manuals, have traditionally relied on a variety of sources for and implicit knowledge gained As insurance products have proliferated, there have been attempts to harness computing to placing power to help with the benefits charts and manuals on-line, which at least guarantees that all CSRs are looking at the same materials at the same time, and facilitates quick updating of these materials. Other efforts include task. Often, such efforts are limited systems, discussed below. text-based and code-based inquiry for which we consulted company is divided systems allow for some search and indexing of subject had a rudimentary into chunks or subject areas. A piece of care, and maternity. The text associated with preventive care lists the different Text-based insurance Information Text-based systems. areas. The medical text-based system. text is associated with each subject area. Subject areas might immunizations, types of preventive care available, such as routine physicals and standard as well as coverage with one of the topics described immunizations, a topic described by pulling down a menu of topics, clicking on a topic, and reading associated screen which comes up. frequency of services. Another screen may deal in one screen; e.g., there may be a screen devoted to in the preventive care screen. The CSR uses the system the information on the include preventive rates and allowed immunizations, The advantages to this system over on-line manuals that information search, and second, the information rudimentary This is helpful both for ensuring location and to ease updating. The disadvantages has merely pruned the amount of information make explicit the system care. The CSR must reason, e.g., that the schedule applies to routine immunizations. updating have schedule the many interconnections indicates a connection between the system difficult. rate information and this schedule are first, is partly organized on a topic can be found are: first, there is no reasoning; to be read; second, the system allows in a modular fashion. in a single the system the system does not in and preventive rate for preventive care most likely related screens makes screens do rate changes, the individual modifying If both the preventive care and immunization between subject areas. For example, nothing The lack of connection between the screens on immunization 244 L. Morgensterm /Artijicial Intelligence 103 (I 998) 237-271 the system must make changes to both screens. Third, there are a small number of screens relative to the number of types of questions a CSR may have to answer (there are literally thousands of services which a customer may inquire about). Thus, the CSR may not get the level of information that she needs. This is not an artifact to this application but is rather due to the logistical difficulties of creating and of a menu with too particular continually modifying a large number of screens, and the unwieldiness many screens. inquiry scheme, code-based inquiries via codes. Many insurance companies have a code-based scheme for Making answering customers’ questions. Whether automated or not, such schemes operate using a table-lookup methodology. When a customer calls to inquire whether a particular service is covered, he is asked to provide the CSR with a procedural the service which is to be performed, and a diagnostic the service which responds with the information appropriate cost of the service. The advantage of code-based (CPT) code, which represents (ICD-9) code, which explains why is to be performed. The CSR then feeds this pair of codes into the system, that the service is or is not covered, along with the the inquiry process and scheme allows questions only at a detailed is that often customers’ questions can be answered quickly and unambiguously. Moreover, since adjudication of claims is usually done using that the answer given by the a code-based there are CSR corresponds before several disadvantages. they can call to customers. Second, level of such as Are routine granularity. But customers often wish to ask general questions, immunizations covered? Third, code-based that rely on information other than the data represented by the codes. For example, code- based systems could not handle a question such as, I f a 4 4 -year-o Id woman had a mammogram two years ago, will she be covered for a routine mammogram now?, in which is relevant. Fourth, updating difficult process. There are tens of code-based thousands of CPT codes and tens of thousands of ICD-9 codes, and a large subset of the possible pairings of these codes must be considered. employ scores of people whose function the treatment history of the patient is an exceedingly ’ Insurance companies scheme. First, customers must know complete systems do not allow questions is tied solely to the code-based inquiry helps ensure receives. However, that the customer this slows down the code-based to the benefit is frustrating their CSRs; information typically systems exactly code 3.1.3. Desiderata-toward replacing existing technology We aimed to develop an expert system and code-based that supports benefits systems. inquiry but avoids In particular, we wished the to problems of both the text-based develop a system that: l allows questions at varying l gives clear, unambiguous 0 allows representation l allows navigation around a large information levels of granularity; of very large amounts of material; space; answers to commonly asked questions; ’ The nightmarish prospect of updating millions of code pairs is somewhat mitigated by the fact that CFT and ICD-9 codes have their own structure and support some rudimentary abstraction. L. Morgenstern /Artificial Intelligence 103 (1998) 237-271 245 l facilitates searching by topic; l supports connections l supports easy updates and modifications. The ability among related topics; to modify is important because products change so frequently; an outdated benefits inquiry system is useless. Thus, the system had to be usable not only by CSRs but also by policy modijiers (PMs), the insurance company employees for making changes within a particular insurance product, creating new products, and deleting old products. responsible 3.2. Why inheritance with exceptions is useful is taxonomic about medical services Much of the information in nature. For example, is a type of Physical Therapy; Physical Therapy, Speech Therapy, the Adult Primary Care Spinal Manipulation and Occupational Therapy are all types of Therapy. Likewise, Benefit is a subtype of the Primary Care Benefit. Coverage and accompanying for are to a large extent example, because is covered. On the other hand, there are exceptions: even though Drugs are covered by the Drugs Benefit, and OTC (over- the-counter) Drugs are a subclass of Drugs, OTC Drugs are not covered by the Drugs Benefit. it is a subtype of Therapy, and Therapy lines: Physical Therapy inherited along is covered, restrictions taxonomic These observations is of course not a purely taxonomic suggested to us that we needed some sort of inheritance network, and (this meant that we could not use a standard indeed, an inheritance network with exceptions [37] or K-REP [24]). An inheritance network with inheritance network such as KL-ONE it is instead a directed exceptions triangle: acyclic graph, as can be seen in the simple example of the well-known penguin from the penguins are birds; birds fly; penguins do not fly. (There are two links emanating frequently arises in this domain node representing penguins.) apart from the inheritance-with-exceptions issue, because certain services have multiple supertypes. For example, Genetic Testing is a subtype of both Diagnostic Services and of Family Planning Services. (treelike) structure; In fact, multiple inheritance 3.3. Representing coverage information the information in Figs. 1 and 2. One way (Fig. 1) is to introduce, There are two ways to encode coverage and exclusion link, covers and excludes to represent information within a semantic network, depicted to the subtype links which connect benefits and service nodes. Thus, for example, that Surgical Services are covered by the Surgical Benefit, one places a covers link between Surgical Benefit and Surgical Services; to represent is excluded by the Surgical Benefit, one places an excludes link between Surgical Benefit and Routine Endoscopy. links propagate along the taxonomy, so that, e.g., we can reason The covers and excludes that Surgical Benefit covers Orthopedic Surgery, since Orthopedic Surgery is a subtype of Surgical Services. The propagation so we do not is covered by the Surgical Benefit: use propagation is relative that Routine Endoscopy to specificity considerations, that Routine Endoscopy the information to conclude in addition 246 L. Mor,enstern /Art$cial Intelligence 103 (1998) 237-271 Maternity v Surgical Fig. I. One method of representing subtype and cancels here) represent cancels This representation can be mapped coverage information: covers and excludes links of inheritance networks. Solid lines represent links; double lines represent covers links; slashed double links are added to the standard is-a links; slashed solid lines (not present links. lines represent excludes to a standard inheritance network. the path from Routine Endoscopy than the path from Routine Endoscopy to Surgical Benefit along the excludes link is more direct to Surgical Benefit along the covers link. is simply information It is obvious that there is a close connection between this structure and the standard in [20]. In fact, the second way of encoding inheritance network with exceptions described covers and excludes network with exceptions. One can easily do so by rezfiing each benefit as the set of services which are that Surgical Services covered by that benefit (Fig. 2). Thus, to represent are covered by the Surgical Benefit, one would have a node representing Surgical Services, a node representing (is-a) link between the service has been transferred the services covered by Surgical Services, and a subtype from the covers link to the nodes and subtype these two nodes. The information that the benefit covers to use a standard the information inheritance link. between The close connection these two representations in the following way: replace each benefit node by a service node which represents all services covered by that particular benefit (so that, e.g., as described above, the Surgical Benefit node would be replaced by the node Services Covered by Surgical Benefit). Replace each link. One then covers link by a subtype uses a standard [20,41] to determine whether or not services are covered. link by a cancels networks with exceptions (is-a) link, and each excludes can be made precise traversal algorithm for inheritance Indeed, both representations are useful: allows us to use well-documented the standard inheritance network with excep- algorithms without modification, tions representation while the explicit use of covers and excludes The implementation representations: of the benefits representation the internal inquiry system (discussed used the standard links is more accessible to CSRs and PMs. in detail in [31]) used both inheritance network; while L. Morgenstern / Art$cial Intelligence IO3 (I 998) 237-2 71 241 (copay_pct(x)=20) (copay-pct(x)=lO} Maternity Benefit Maternlty v Surgical Fig. 2. Representing links; slashed lines represent cancels coverage information in a standard nonmonotonic is-a links, Medical benefits are reified as services covered by a particular benefit. inheritance network. Lines represent the graphical user interface manipulated by CSRs and PMs, representation, the external used explicit covers and excludes The importance of the cancels links. links in the standard is entirely covered or excluded by some benefit; inheritance representation is nonmonotonic. points It is rarely there is hardly surprising; proponents of its inception the business world). What is surprising that nonmonotonic reasoning is information for benefits inquiry out that much of the relevant the case that a class of services are almost always exceptions. This nonmonotonicity nonmonotonic is common how rarely nonmonotonicity forms such as inheritance with exceptions. Nonmonotonicity application logic [34] have argued since (including reasoning has entered commercial applications, in the regulations in everyday that apply to a node; we discuss this further in Section 5. even in well-understood is also present in this 3.4. Why inheritance with exceptions is not enough While much of the information among benefits relations specifically business central to the task of benefits to a service. in the medical insurance domain-in particular, the and services-is taxonomic, rules, does not seem to be taxonomic is inquiry, since CSRs must determine which regulations apply a large chunk of information, in nature. This information The problem with representing business rules in an inheritance hierarchy can best be appreciated by examining within a semantic network. Consider several rules. Some rules the rule: lend themselves to representation There is a copay of 20% for diagnostic services. 248 L. Morgetwtern /Artt$cial Intelligence 103 (1 WK) 237-271 this rule using To represent node representing Diagnostic Services node and this node. the standard the services which have a 20% copay, and a subtype inheritance network model, one could have a the link between On the other hand, a more complex rule such as Patients in Drug Rehabilitation programs lose all rehab benefits for a year if they are noncompliant that if patients are noncompliant with respect to that service, cannot be so easily represented. One could posit a node that represents have the property lose all benefits for a year, and then have a subtype node and this node. But such a node appears quite artificial and outside semantic network, where nodes are supposed the services which then they the Drug Rehab Services the spirit of a link between to represent easily understood concepts. in nature means is not taxonomic that The fact that much of the domain knowledge it is desirable to build on the inheritance inheritance with exceptions already solves part of the benefits we must go outside of the standard structure of an inheritance network with exceptions. On the other hand, first, because inquiry problem; is one of the few efficient nonmonotonic second, because techniques. taxonomic knowledge services-i.e., connection between nontaxonomic and rules often apply to particular this connection is an obvious in this domain. In particular, business in the network. Building on the existing network makes inheritance with exceptions Furthermore, to nodes structure: network explicit. there The next section suggests an extension in this context. inquiry process of benefits to the network structure: Section 5 explores the 4. The solution: integrating taxonomic and nontaxonomic information 4. I. Dejinition of a FAN We wish to introduce a knowledge structure that is capable of representing the taxonomic both taxo- information to the network the fact that business in some way. For the medical information. The aim is to represent inheritance network with exceptions and to attach the nontaxonomic nomic and nontaxonomic in a standard mation to represent benefits by attaching business concept of a Formula-Augmented tance network insurance domain, also represent other sorts of information, preferred providers). infor- like rules generally apply to specific medical services and the (FAN), an inheri- in which sets of logical formulae may be attached to nodes. In the medical rules, but they could lists or tables (e.g., price lists, lists of rules to nodes in the network. To do this, we introduce (or inheritance) Network insurance domain, we would represent business formulae usually the logical including semantic Formally, a FAN is a tuple (N, W, I?, Ll, L2,0), where: l N is a set of nodes. In the medical insurance domain, a node represents of medical services. services; e.g., Physical Therapy represents the set of physical some set therapy l The set of wffs W consists of well-formed formulae of a sorted first-order logic. L. Morgensiern /ArtiJicial Intelligence 103 (1998) 237-271 249 . The background D is a (possibly empty) set of wffs of first-order it includes the background all rules representing domain, may also include patients’ medical of nontaxonomic network. information In the medical logic, intuitively insurance information that are true of all medical is true. that records and pay scales. In general, services and benefits. It it consists to attach to a specific node in the that is too general . C 1 is the set of links on nodes, as described l 0, the ordering on links, gives a preference on links. This is useful for nonconflicting in Section 4.1.2. multiple-path inheritance, since it allows us to prefer one path over another. l C2 is the set of links connecting nodes and sets of wffs. If N is a node and W is a set this of wffs, N -+ W means that the set of wffs W is attached to node N. Intuitively, means that each wff of W is typically true at N. Intuitively, in this domain, each instance of a FAN represents a particular product of the medical insurance corporation. The elements of the tuple are described in detail below. The description of C 1, which is part of any standard inheritance network, may be safely skipped by those familiar with the work of Horty et al. [20]. W, B, L2 and 6, however, are unique to FANS. 4.1.1. Nodes In the medical insurance domain, a node represents Fig. 2, the node Surgical represents set of services Services Covered by Surgical Benefit represents covered by the Surgical Benefit. that are covered by a particular benefit. For example, some set of medical services. In the set of surgical services. A node may represent a in Fig. 2, the node that are the set of all medical services 4.1.2. WJi The set of wffs W consists of well-formed formulae of a sorted first-order logic. Wffs is insurance domain typically represent business rules. An example of a wff in the medical Vel,e2,e3,m,b,il,i2 (delivery-event(e1, m, 6) A hospital-event(e2, b) A assoc-hosp-stay(e2, el) A newborn-exam-ev(e3,b) A time(e2, i 1) A time(e3. i2) A - subinterval(i2, i 1)) > - covered-as(e3, newborn-exam) where e 1, e2, and e3 are variables ranging over events; i 1 and i2 are variables ranging over time intervals; and b and m are variables ranging over babies and mothers, respectively. This is the first-order translation of the business rule The initial newborn exam must be performed during the mother’s hospitalization for delivery. 250 L. Morgenstern /Artijcial Intelligence 103 (1998) 237-271 4.1.3. Background information The background or background context t3 is a (possibly empty) set of wffs of first-order logic. B includes all rules that are true of all medical services and benefits. 8 For example, context may include a wff which states that all medical services must be the background in order to qualify for reimbursement. B may provided by licensed medical professionals also include such as a patient’s medical records and the name of her primary care physician, as well as pricing charts for drugs and pay scales for medical professionals. As these examples make clear, although at 23 is considered may also be subject to frequent change. to be global in the sense that it applies to every node in the network, about particular the information information individuals, it 4. I .4. Links Links are relations on objects. There are two sorts of links: links joining nodes and links joining nodes to sets of wffs. The standard positive and negative to as cancels is-a links relate nodes. (Negative is-a links may If x and y are nodes, we write x + y and x + y to represent, Cl : links on nodes. is-a links will also be referred be strict or defeasible. respectively, represent, respectively, the defeasible positive and defeasible negative is-a links. Intuitively, x + y means that all x’s are y’s; x + y means that all x’s are not y’s (no x’s are y’s); x + y means that typically, x’s are y’s; x + y means that typically, x’s are not y ‘s. If x + y or x -+ y, we say that x is a child of y or that y is a parent of x. the strict positive and strict negative is-a links; we write x + y and x + y to links.) Positive and negative Our account of paths is based on Horty [ 181. A path is a restricted sequence of positive and/or negative links. We may define paths recursively in the following manner: There is a path from x to y iff there is a positive path from x to y or there is a negative path from x to y. If x + y or x + y (respectively, (respectively, negative) path from x to y . If there is a positive path from x to y, and y + z or y =+ z (respectively, y f, z or y + z), then there is a positive (respectively, negative) path from x to z. If there is a negative path from y to z and x + y or x =+ y, then there is a negative path from x to z. x + y or x + y), then there is a positive Note that positive paths can have only positive is-a links; negative paths can have just link at the very end of the path. Paths that contain only strict links are links are defeasible paths; paths that one negative called strict paths; paths that contain only defeasible contain both strict and defeasible this paper will be concerned almost exclusively with defeasible paths; extensions to strict and mixed paths are straightforward. 9 The notation X(X, CI, y) (respectively, n’(x, cr, y)) represents a positive (respectively, negative) path from x to y through the path a. We extend (respectively, so that X(.X, a) (respectively, n’(x, a)) represents a positive this notation links are called mixed paths. For ease of presentation, ’ If we wish, we may think of the wffs in f3 as being included in the set of rules at each node. ’ Note also that in all examples, nodes represent sets of objects, rather than individual objects. This is done to simplify the exposition; the extension to individuals is straightforward. L. Morgenstern /Artijicial Intelligence 103 (1998) 237-271 251 Fig. 3. Parts of the Drugs and Supplies portions of the medical insurance network negative) path from x to the last point of 0 going through the path consisting of all but the last point of 0. The function en&o&(a) the last point on the path 0. will be used to designate Often, there will be both positive and negative paths between two nodes. To determine r and a set of paths @ (intuitively, than 1) is inheritable or undefeated and neither preempted nor conjlicted. Briefly, a path is constructible [42] and Horty [ 181. ‘” Given a which path to choose, we follow the analysis of Touretzky a set of paths arising context-an inheritance network if it out of the network), a path (of length greater in a is constructible context if it can, recursively, be built out of the paths in the network; a path is conjlicted in a context if there is a path of opposite sign in the context with the same starting and ending points; a path is preempted about if there is a conflicting path with more direct information the path’s endpoint (i.e., a direct link from an earlier point in the path). We also say that a Intuitively, path X(X, (T, y) is preempted or conflicted the undefeated or inheritable paths are those which “win out” over their rivals. If there is an undefeated positive (respectively, negative) path between x and y, we say x -.A y (respectively, x + y). if X(X, a) is preempted or conflicted. Examples of paths can be seen in Fig. 3. There to Services Covered by Drugs Benefit. There are both positive and negative paths from OTC to Horty et al.‘s [20] Drugs to Services Covered by Drugs Benefit; however, according specificity criterion the positive path is [42] inferential distance criterion), preempted by the negative path. Thus, the negative path is undefeated. is a positive path from R, Drugs (or Touretzky’s lo H&y’s [ 181 exposition of nonmonotonic inheritance is a particularly clear and precise formulation of the ideas in [20]. 252 L. Morgmstern /Artijicial Intelligence 103 (1998) 237-271 inheritance (3: ordering on links. Multiple arises when there is an undefeated path from x to y, an undefeated path from x to z, and v # Z. We call any such point x a fork point ’ ’ Inheritance of the network, and the paths originating only when networks is the case in these multiple paths have been Fig. 3, where the multiple paths n(Injectable Insulin, Services Covered by Drugs Benefit) are initial segments of conflicting paths. We call such cases of multiple inheritance conjlicting-path multiple inheritance. Insulin, OTC Drugs) and n(Injectable in the literature have traditionally from a fork point multiple paths. initial segments of conflicting considered multiple inheritance paths-as In this paper, we will be interested segments of conflicting paths, i.e., nonconflicting-path multiple nonconflicting-path nonconflicting and Supplies. inheritance Insulin Syringes and Drugs, and between in multiple paths even where they are not initial inheritance. Examples of can be seen in Fig. 3, where there are distinct Insulin Syringes multiple paths between In such cases, we may allow the prioritization of a particular path. We do this by first , specifying a partial order on certain x + yn are elements of Cl and are not initial segments of conflicting paths, we may place a partial order on the x -+ yi ‘s; this partial order is an element of 0. links of C I. Specifically, if x + ~1, x + ~2, . The partial order on paths can then be defined recursively as follows: l x + _v is preferred l n(,~,o, y) to x + z if ((x, y), (x. z)) E 0, where 0’ is an element of 0; if i~(x,endpoint(o)) to X(X, r,z) is preferred is preferred to r(.x, endpoint(t)); l TT (x, CT, y) is preferred to n(x) CY. z) if n(endpoint(a), y) is preferred to n(end- point(o), z). The partial order is depicted by placing ordinal numbers on links, as in Figs. 2 and 3. in Fig. 2, the indicates a preferred element A lower number link between Maternity Surgical and Maternity Surgical and Surgical; in Fig. 3, the link between to the link between Insulin Syringes and Supplies. in the partial order. Thus, is preferred to the link between Maternity Insulin Syringes and Drugs in preferred If there are p fork points in the network, there are at most p partial orders (elements) in 0. The number of partial orders in 0, and the elements of these partial orders may be further restricted; in particular, we may not wish to specify priorities on links that are initial segments of conflicting paths, or may insist that the priorities be placed in a particular way. that each w of W is typically C2: links between nodes and wff sets. Let N be a node, and W a set of wffs. N Y+,~! W true at node N. N =+, W means that each means, intuitively, wff w of W is true at N; N ftw W means that each wff w of W is typically false at node N; N +U, W means that each wff w of W is false at N. In practice, we rarely use the =%,,, is true at all nodes Ni such that link. Intuitively, Ni -+ N; i.e., we assume that there are no exceptions this link is used only when a formula to N. This happens only rarely. Since W can be a singleton, we allow the overloading of the -+ uI, =k,fl, jt uj and +,: links so that they can refer to individual wffs as well as sets of wffs. If N -+ w W or N If w is a member =+,, W. we will sometimes of W, we say at(w, N). refer to W as the set of wffs at N or wffs(N). ’ ’ As opposed to a branch point. which is downward. L. Morgenstern /Artijicial Intelligence 103 (1998) 237-271 253 The set of rules at each node information background t?. in a network is constrained to be consistent with the 4.2. FANS with added link Qpes between this approach the interaction FANS as described these links and the taxonomic links such as covers and excludes feature of the FAN with covers and excludes in the previous section have only (strict or defeasible) is-a and cancel links between nodes. This is not integral to the definition of a FAN. We can easily augment in the definition of a FAN to include Section 3.3), and specify links. in this paper, we do note here an Although we do not explore links (called a modified FAN for interesting the purposes of this discussion) in this paper: the for the insurance application described link needed is the standard (strict) is-a link. There is no need for defeasible only taxonomic the reason for this is that in the is-a links, and thus no need for cancel links are genuine and not defeasible insurance application, most of the taxonomic subset relations. The only place the defeasible link is needed is between a node and a “services- covered-by-benefit-x” modified FAN. node. But this link is replaced by the covers or excludes links. Intuitively, (as discussed further links in a Indeed, this discussion highlights an interesting paths could be much simpler and in particular, would require only a simple upward feature of FANS in this domain: cancel to identify links always go directly up to the root node. Due to this feature, the algorithm [41] undefeated from a node algorithm, until one reaches either a cancels however, does not exploit this feature, since we wished to develop a system that was as general as possible. the more general case of FANS in which general inheritance with Thus, this paper discusses exceptions the Horty et al.‘s [20] or Stein’s link or a root. Our implementation, is allowed. traversal than It should also be noted that the problem of wff-inheritance discussed not only to FANS but to modified FANS. This shows that the wff-inheritance arise in a strict taxonomy as well as in an inheritance hierarchy with exceptions. in this paper applies problem can 5. Inheriting well-formed formulae 5.1. The rules-inheritance problem One of the defining features of FANS (as opposed to standard semantic networks) is that wffs are associated with nodes. This feature prompts the following question: what wffs are inheritance network, we focus primarily on inherited by a node in a FAN? In a standard the question: is there an undefeated positive path between A and B? Since most nodes in a network represent sets, and since the top node in an inheritance hierarchy often represents some attribute, is: does some attribute hold of set A? Such questions are of interest in this inheritance network as well: we wish to know whether a particular medical service is covered by some benefit. In addition, however, we are interested to that service (equivalently, in determining which business to the node representing rules or wffs apply or pertain interpretation of this question the most intuitive that service). 254 L. Morgenstern /ArtijYcial Intelligence 103 (1998) 237-271 B={-Rv-S} ( R, P =>Q} Nl cb P, 41 N3 N2 {P, SI Fig. 4. Taking the union of wffs at nodes yields inconsistency Formally, we pose the question as follows. We introduce the following notation: N t w if wff w pertains or applies to node N. We overload the t symbol for sets, and say We define q(N) = {w I N t w ). That is, p(N) Then the question is: given a node N in a FAN, what is the set 9 such that N T p? is the set of wffs that apply to node N. A naive approach might suggest taking the union of the wff set attached to N, together more precisely, of the wff sets attached with the wff sets attached to all ancestors of N-r to all those nodes to which there is an undefeated positive path from N. That is, p(N) = U,v- ,v; wffs(I’Jj) U wffs(N). Such an approach, however, is obviously wrong. Consider, for example, Fig. 4. There is an undefeated positive path from N3 to N 1. Thus, according to the naive approach, w(N3) = wffs(N3) U wffs(N1) = ( P, - Q } U { R, P > Q ). But this set of wffs is obviously correctly compute with respect to the background blindly take unions of wff sets. inconsistent. Note that the naive approach also fails to ly(N2). Although wffs(N1) U wffs(N2) is consistent, it is not consistent information Z? = ( - R v- S ). Clearly, we do not want to The problem arises because the wffs at a node are usually fy@cally true at a node rather true at a node N, true at all subclasses of N. We discuss ways of dealing with this than always true at a node. In particular, a set of wffs W may be typically but may not be typically inconsistency in the next section. 5.2. Effecting inheritance of wffs The previous section demonstrated that a naive approach to wff inheritance-namely, the union of wff sets at all nodes to which there is a positive undefeated path- to wff-inheritance must recognize potential taking leads to inconsistency. A proper approach inconsistency Consider (1) Calculate all the nodes Ni such that N -+ N; . in inheriting wffs and resolve these inconsistencies. the set S = q(N), computed by the following process: L. Morgvnstern /Artificial Intelligence 103 (1998) 237-271 255 (2) Take the union of the wffs at N, the wffs at all N; calculated above, and the background information, and determine if this set is consistent. (3) If this union is not consistent, choose a maximally consistent subset of wffs(N) U UNwni wffs(N;). More precisely, choose a subset S that satisfies the following conditions: (a) S C (wffs(N) U UN-N, wffs(Ni)); (b) S U B is consistent; (c) S is the largest such subset; that is, there does not exist S’ satisfying conditions (a) and (b) such that S’ c S. We say that S is a maximally consistent subset of wffs(N\i) u UN_+ wffs(Ni) with respect to f?. If the meaning that We are not suggesting is clear, we may omit the reference the above process is the one to B. computing S; we are rather using node. it to help characterize that should be used in the set of rules that apply to a refers to: of S explicitly is only semi-decidable in general; however, we can restrict our attention symbols. Such sets are decidable. Second, even The characterization ( 1) the consistency of rule sets; (2) the concept of a maximally consistent subset. We make two brief remarks about the first issue. First, deciding whether a set of rules to is consistent certain subsets of sentences such as those without existential quantifiers or self-embedding function cases, deciding is intractable; we discuss ways of dealing whether or not a set of sentences with this problem in Section 5.3. The second difficulty. consistent question consistent subset is formed by deleting some of the wffs in an inconsistent phrasing of this question that some wffs are more some preference principles in accordance with these principles. to some subset of rules. The set should we choose? Since each maximally set, an alternate is: which wffs should we delete? That is, how do we decide is to articulate important subsets for sets of wffs and to choose maximally a maximally there is more than one maximally than others? The general is: which maximally issue+hoosing in decidable is consistent subset-gives In general, consistent consistent consistent strategy rise The particular strategy developed that are based on the structure of the inheritance as possible choosing maximally nonconflicting the structure of the inheritance consistent in this paper is to examine preference principles network. That is, we exploit as much and subsets. We focus on specificity and multiple paths, both network while we are constructing Some remarks on these examples: and conflicting. We turn to several examples to illustrate first, the examples deal with paths of length 1; length in the discussion and specification of however, we generalize the exposition, we have the wff-inheritance chosen very simple wffs; the inconsistencies in nature. Third, we show only a few wffs at each node. As noted in Sections 3 and 4, rules are typically much these complex wffs are rampant. more complex and numerous, and contradictions between to simplify and shorten are typically arithmetic to paths of arbitrary procedure. Second, this approach. 256 L. Morgenstern /Artificial Intelligence 103 (I 998) 237-271 {(Non-network(p) & filled(x,p)) => penalty(x) Copay-pet(x) = 10 ) = $15, (Copay-pet(x) = 50 ) Fig. 5. The wffs at HGH are more specific than the wffs at Rx Drugs. 5.2.1. Speci$cily Consider the example in Fig. 5. HGH (Human Growth Hormone) + Rx Drugs. Suppose to be universally we have the following wffs at these nodes (all variables are assumed quantified unless otherwise specified): Rx Drugs: { copay-pet(x) = 10 (There is a 10% copay for all drugs) (Nonnetwork A filled(x,p)) II penalty(x) = $15 (there is a $15 penalty for prescriptions if they are filled at nonnetwork pharmacies.) ) HGH: { copay-pet(x) = 50 } (The copay for HGH drugs is 50%). If we assume that the background context B entails some basic arithmetic facts such as (vl # v2) 3 (- copay-pet(x) = vl A copay-pet(x) = v2) that is, a service cannot have two copay percentages, inconsistent with respect to B. ‘* then the union of these two sets is Obviously, there are two maximally consistent subsets: the following cost-share ‘* The actual network contains $3 copay for all prescription drugs). The union of the two sets is then not, strictly speaking, long as HGH drugs cost $6. In other words, consequences cost $6. Detecting unreasonable the scope of this paper. Presumably, in the background consequences. The difficulty we have got them all. (I am grateful rule at the Rx Drugs node: copay(x) = $3 (there is a as the union of these sets entail that Human Growth Hormone drugs in its own right, but beyond there are several ways to deal with this problem: one can include price tables ridiculous that information, or include general principles in the latter strategy in the background then is a matter of expressing information such principles and ensuring to Ernie Davis for pointing out this problem.) such as this is an interesting problem inconsistent, forbidding L. Morgenstern /Artificial Intelligence 103 (1998) 237-271 2.57 (1) The set of wffs at the R, Drugs node, namely: ( copay-pet(x) = IO (Nonnetwork A filled(x,p)) 3 penalty(x) = $15 ] and (2) the set { copay-pet(x) = 50 (Nonnetwork A filled(x,p)) 3 penalty(x) = $15 } The choice of which maximally subset to prefer is clear. The HGH node is more specific than the R, Drugs node; thus we prefer the subset that has the wff from the HGH node to the subset that has the wff from the R, Drugs node. That is, we prefer subset (2) to subset (1). consistent We say that subset (2) is a preferred maximally consistent subset (pmcs) relative to the sets of wffs at HGH and wffs at R, Drugs, with the set of wffs at HGH preferred over the set of wffs at R, Drugs. We define this concept formally below: consistent subset). Assume to f?. Let XI and X2 be maximally that St, S2 are sets such Definition 1 (Preferred maximally that S1 U S2 is inconsistent with respect consistent subsets of St U S2 with respect to B. Let Rt be a subset of St ; let R2 be a subset of S2, such that R1 = X1 - X2; R2 = X2 - X1. That is, R1 and R2 are all that distinguish Xl from X2. If this is the case, we say that X1 2 X2 with respect to RI, R2. Then if St is preferred to S2, Xi is a preferred maximally if St U S2 is consistent with respect to f?, St U Sz is a (in this case the) preferred maximally consistent subset of Si and S2. subset of St U S2. Otherwise, consistent Note that there is not necessarily a unique preferred maximally the function PMCS where PMCS(St, SZ) returns subsets of St and S2, with St preferred consistent We introduce maximally notation, we will use the notation pmcs(St function n sets, so that consistent subset. the set of all preferred to S2. By a slight abuse of that returns one of the elements of PMCS(St , S2). In addition, we extend pmcs to , S2) to mean the (random or nondeterministic) pmcs(St , . . . , $1 = pmcs(pmcs(Sil, . . , $-I ), S,) 5.2.2. Multiple paths (nonconjlicting) consistent Specificity is clearly not the only criterion one can use in determining a preferred subset. Consider Fig. 2. In this figure, the node Maternity Surgical maximally has links to both Maternity and Surgical and thus inherits wffs from both nodes. The union of the wffs at these nodes ( copay-pet(x) = 10, copay-pet(x) = 20) is obviously inconsistent with respect maximally consistent above. There are obviously constraint mentioned to the background subsets: two (copay-pet(x) = 10) (copay-pet(x) = 201. it is reasonable is clear which subset we should prefer. Since is neither more nor less specific than Although specificity does not help here-Maternity Surgical-it the link between Maternity Surgical and Maternity has preference over the link between Maternity Surgical and the wff of the Surgical, Maternity node. Thus, one can compute pmcs(wffs(Maternity), wffs(Surgica1)). well, these wffs might contradict either the wffs at Maternity, Since the wffs at more specific nodes are preferred, to Maternity Surgical would then be the rules that apply to Maternity by computing In fact, if there were wffs at Maternity Surgical as the wffs at Surgical, or both. the computation of the rules that apply the first subset, this keeps to prefer since pmcs(wffs(Maternity Surgical), pmcs(wffs(Maternity), wffs(Surgica1))). As this example shows, the order in which one takes preferred maximally consistent subsets is crucial. We explore this issue below. 5.2.3. A procedure for general paths We turn to the issue of computing in which there are no forking points-that ly(N) for paths of any length. Let us first consider is, for any node N, there is a simple network It is clear that we do not exactly one path from N to the root node (no multiple want to compute p(N) by using the characterizing process described in Section 5.2. That is, we do not want to first take the union of all sets of wffs at the nodes on the path from subsets of this large set, and finally choose N to the root, then take maximally It is hard to beat preferred maximally consistent this method for inefficiency. At the very least, the procedure to compute p(N) ought to iteratively traverse the path, computing q(N) as one goes along. An iterative traversal of the path immediately gives rise to the question: subsets relative to the specificity criterion. in which order inheritance). consistent does one traverse the path? and traversal. reasons. First, a downward (iterated) belief Upward versus downward following wff-inheritance inheriting wffs as the process of revising at a more specific node; this translates Second, one might expect downward sets of wffs that apply to intermediate nodes on the path. traversal might seem natural for the the natural analogy between think of one might the beliefs at a more general node by the wffs traversal of a path in the network. the A downward traversal emphasizes revision to the downward traversal to have the side benefit of computing [4,9]. Specifically, downward traversal-a in which and for each nonroot node x, p(x) = pmcs(wffs(x), simple recursive procedure out to be incorrect. Consider computing p(N3) the wff at Nl since that is the least specific. However, is {P, - Q }; the union of all wff sets is inconsistent, if one traverses in Fig. 6. It is clear and one the path However, straightforward one sets *(root) = wffs(root), p(parent(x))-turns that the expected answer discards downward, one gets p(Nl) = ]P > Ql, ‘47(N2) = {P > Q, PI. When one reaches N3, one gets 9(N3) = pmcs(l-Q I, ]P 3 Q, P I. L. Morgenstem /Artijiiciul Intelligence 103 (1998) 237-271 259 {-P v a} N2 x PI {-Q) N3 traversal will give the wrong answer for wff-inheritance Fig. 6. Doing a simple downward But there are two preferred maximally consistent contrary to expectations. The problem the information P 3 Q comes. traversal, we have lost is that during the downward that P comes from a node that is more specific than the node from which subsets: {P, 1 Q ) and {P > Q, 1 Q }- There are obvious ways to fix this problem: we can, for example, keep track of the source node of each of the wffs that has been collected so far. to avoid this sort of bookkeeping, that is consistent with the specificity constraint for If we wish computing p(N) is based on an upward traversal of the network. Specifically, one begins at the focus node N, taking wffs(N) as the starting set. One then proceeds up the path, at each node taking a preferred maximally subset of the set computed so far and the wffs at the current node. This process consistent will ensure that the specificity constraint the simplest method is obeyed. however, The algorithm will thus have an upward traversal of the network at its core. We now consider networks with forking points. In order to get the correct result, we must ensure in case of forking paths. This is done by examining all links that path ordering at each point in the path, ordering them, and recursively proceeding up the more preferred links before the less preferred is respected links. In addition, we must ensure that we do not collect rules from nodes that are only on is to preprocess conflicted or preempted paths. The simplest way to avoid this problem the FAN to remove extension/modification extension at a focus node. of the procedure given in [41], which computes the preempted and conflicted links. We may do this by using an the specij’icity We thus have the following procedure to compute p(N) in a FAN: Algorithm COMPUTE p(N). Preprocess the FAN to remove preempted, conjicted links W(N) := wffs(N) FAN-traverse(N) 260 L. Morgmstern /Artijicial Intelligence 10.3 (1998) 2.37-271 Algorithm FAN-TRAVERSE(x). ifx has not been visited mark x as visited 9(N) := pmcs(P(N), wffs(x)) [f x is a mot then return else Determine all nodes yi such that x + yi Do topological sort of all k links x -+ yi ,fori=l tokdo FAN-traverse(yi) Note that since we are traversing a dag, as opposed to a tree, some nodes may be subsets (an expensive visited twice. To avoid recomputing preferred maximally consistent operation), we mark nodes as we visit them. It will be noted that the computation of ly (N) does not necessarily produce a unique set. for nonmonotonic This is because, as noted, the function pmcs does not yield a unique preferred maximally subset. The existence of multiple maximally consistent subsets has always been consistent theories. In practice, however, the existence of something of a problem for this domain. multiple preferred maximally subset Indeed, it is perfectly of wffs that obeys the criteria of specificity and path preference. (In particular, members who are insured by some product often “win a case” by demonstrating coherent argument-that, supports usually have for credulous subsets is not at all problematic to reason with any preferred maximally consistent reasoning, but is worthy of further investigation. that there is a rules-that their claim.) This phenomenon is at odds with the distaste is a preferred maximally that AI researchers set of business legitimate consistent consistent 5.2.4. An open question: the case of preempting paths contrast Consider now-in to the previous examples-inheriting wffs in a network with conflicting multiple paths. Fig. 7 shows a portion of the drugs network. Although OTC Drugs (over-the-counter drugs) is a subtype of Drugs, it is not a subtype of the class of services covered by the Drugs benefit. On the other hand, a subtype of OTC Drugs, Insulin Syringes, In fact, this direct link from Insulin case is known as positive preemption, Syringes path from Insulin Syringes is covered by the Drugs benefit. This is a classic case of preemption. to OTC Drugs to Services Covered by Drugs Benefit. to Services Covered by Drugs Benefit-preempts since a positive path-the a negative path-the Clearly, there are positive undefeated paths from Insulin Syringes by Drugs Benefit and from Insulin Syringes to inherit wffs from both nodes. The question inconsistent with the set of wffs at Services Covered by Drugs Benefit (either absolutely, and/or the set of wffs at Insulin Syringes). or with respect to the background to Services Covered to OTC Drugs. Thus, Insulin Syringes stands is: suppose the set of wffs at OTC Drugs is information L. Morgenstrrn /Art$cial Intelligence 103 (I 998) 237-271 261 Fig. 7. Which node gets preference‘? Does preemption make a difference? X (4 X @I Fig. 8. (a) Positive path preempts negative path: (b) negative path preempts positive path. Which set of wffs do we prefer? Do we prefer the wffs from Services Covered by Drugs that node is on the preempting path? Or do we refrain from preferring Benefit because either of the paths? There are arguments both for and against preferring nodes from the preempting path. To formally state the arguments, we use Horty’s [ 181 notation for preempting paths. A positive path X(.X, o, U) -+y (in the context (r, @)) iff there is a node u such that is preempted (i) eitherv=xorthereisapathoftheformn(x,tl,v,t2,u)E~,and (ii) vj+yEr. A negative path X(X, o, U) j% y is preempted such that (in the context (r, @)) iff there is a node u (i) eitherv=xorthereisapathoftheformn(x,tl,v,t2,u)E~,and (ii) u -+y E r. (See Fig. 8.) The question is: Is the path n(v. y) preferred to the path n(u. t2, u)? 262 L. Mwgenstern /Art$Szl Intelligence 103 (1908) 237-271 the positive path n(v, y) is in some sense preferred for preferring a positive preempting path over the path it preempts that we conclude that the preempting path is stronger runs The argument to the negative as follows. Clearly, J). Thus, preemption seems to path n’(u, ~2, U, y) (that is the reason than the preempted path. Then offer some evidence presumably, one of the links in the negative path n’(u. ~2, II. y) is not as strong as the that the weak link is the negative link between positive path between u and y. It is possible u and y-but that u’s are this is by no means definite, because we do, after all, conclude not y’s. Thus, it seems as likely that one of the links in the path between v and ZA is weak. (Indeed, we know that at least in one respect u‘s are not typical u’s-unlike typical U’S, they are y’s.) Thus, we ought to prefer n(u, y) to n(u, r2, u). On the other hand, the argument for not preferring a positive preempting path over the path it preempts rests on the fact that there is a positive undefeated path between u and u in the same way that there is a positive undefeated path between u and y. Thus, they both shouId have the same status; neither should be preferred. If one does decide to prefer preempting over preempted paths, another question arises. Consider paths forking off from nodes in preempted paths (e.g., consider another link from than preempting paths? The u to some node z). Ought they also to have lower priority rationale given for preferring preempting to preempted paths would seem to hold here as well, but the intuition becomes increasingly weak. the lack of examples makes honing Indeed, few examples conflicting wff sets in these portions of the network; correct behavior ought to be. in this domain of positive preemption” intuitions particularly difficult. There are and fewer still where there are to guess what the thus, it is difficult The procedure that preference such a preference to compute the wffs that apply to a node, outlined in the previous section, for preempting paths over to be incorporated. One can in two ways. First, one can place a condition on 0 stating than their associated preempted paths. the preempting and preempted the forking paths takes a neutral stand on the issue. It does not state a preference the paths that are preempted, but it allows incorporate that preempting paths are always strictly greater (One may in fact wish to insist that no paths come between path.) Second, one can modify the procedure so that, when one identifies at a fork point, one groups preempting paths with the paths they preempt, and subsequently collects wffs along preempting paths before collecting wffs along the associated preempted paths. The difficulty is not a technical one. The hard part here is getting the intuition right. The careful examination of other domains should shed some light on the question. 5.2.5. Other preference criteria The computation in the structure of the network. Other standard preference principles may also be needed here. than others (as in [26]), regardless of One may wish to assign some wffs a higher priority of P(N) has thus far focussed on using information present I3 The problem does not arke at all in cases of negative preemption-when a negative path preempts a positive path. That is because one never inherits from the last node of a negative path. In Fig. S(b), one would never wkh to inherit from node y-and using the specificity criterion. inheriting along the path from node x to node u is simply standard wff-inheritance L. Morputern /Arf$cial Intelligence 103 (1948) 237-271 263 the rule’s position rules have higher priorities prefer a particular equivalent we may prefer extensions paid. in the network. For example, than administrative subset of rules based on the results it might always be the case that medical to rules. Likewise, that this subset entails. This is to preferring one extension, or model, over the other (as in [40]). For example, in which a claim gets paid to one in which the claim does not get it is also reasonable 5.3. Computational issues Inheriting immediately transforms in the case of upwards from a tractable rules that is badly problem (at least intractable. Wff-inheritance in this domain will often be done in a static setting as opposed to a dynamic one, I4 and this takes some of the sting out of the fact that computing preferred maximally is clearly an unpleasant the problem of inheritance inheritance: issue that we must handle in some form. is NP-hard. Nevertheless, see [38]) to one intractability consistent subsets In practice, we have discovered that we can deal with the complexity strategy. The trick is to divide the set of wffs into k types, subject issue by using a to divide-and-conquer the following constraint: [f Wffs(i, N1) U Wfiv(j, Nx) is inconsistent with respect to B, then i = j. I5 That is, wffs are constrained type. This cuts down on much consistency sets at Nl are of a different needed for consistency the greater k is, the more this strategy helps. so that sets can contradict one another only within their own (since often when Nl cvt N2, the wff the time and choice. Obviously, type than the wff sets at N2) and greatly reduces checking and maximal subset construction checking corporation is not a trivial into cost-share, rules that were originally rules. Certain of these groups had the desired property--e.g., Finding a division of the wffs into sets that satisfy this constraint task. categorized and rules rules often to identify some types rules that were consistent with all rules outside of their own type. In from a business The wffs in this domain are taken from business by employees of the insurance medical did not contradict contradict administrative of administrative any case, it is hardly surprising viewpoint Finding type-but rules. On the other hand, it was possible in terms of efficiency. representation it can greatly affect the tractability of the system. is not optimal the proper knowledge interest; access, administrative, cost-share is clearly very important. Doing so is no others did not: medical longer only of academic rules of any other that a categorization of rules developed 5.4. Back to attribute inheritance We first noted for the purposes of wff inheritance. Further reflection, however, suggests that similar problems can arise even the need to do conflict and recognition resolution I4 Since the rules that apply the insurance corporation who modify points in the network changes the rules that apply to a service. to a medical service can be computed off-line. On the other hand, employees ot rules at the network may wish to see in real time how adding or changing I5 The notation Wffs(i,N) should be read: the set of wffs at node N of type i. 264 L. Morgensrern /Ar$cial Intelligence 103 (I 998) 237-271 @ : {Hawk-ez--Pacht)) Fig. 9. The modified Nixon diamond is inconsistent, but only implicitly. when performing w Covered by Surgical Benefit; Maternity Surgical -..+ Covered by Maternity Benefit. inheritance. Consider again Fig. 2. Maternity Surgical standard attribute In fact, however, Maternity Surgical cannot be covered by both benefits: that services are covered by at most one benefit. This constraint there is is not it is entailed by background domain knowledge; in the structure of the network; a constraint explicit a. The point of this example i.e., the background implementation in recognizing is quite simple-but some of the knowledge of the inheritance network inheriting even if this is not explicit. attributes from multiple parents has the potential is not in enforcing the inconsistency. this constraint- In general, when is present as background knowledge, to inconsistency, for leading Oddly, literature, inconsistencies in the inheritance this problem has not been discussed [35] is a classic example of such an explicit perhaps in the examples used have always been explicit. The Nixon Suppose, (See Fig. 9.) (Nixon There is no to the then that must be resolved. Depending on the amount and form of because diamond example however, we modify Touretzky’s + Republican; Nixon explicit contradiction background there is an inconsistency the background knowledge, detecting and resolving difficult (that is, as hard as the problem of wff-inheritance). -+Quaker; Quaker +Pacifist; between Hawk and Pacifist, but theory stating that the two concepts are contradictory, Hawk = -Pacijst, [42] modification of this example. if we add a statement Republican +Hawk.) can be arbitrarily this inconsistency inconsistency. 6. Relating FANS to previous work 6. I. Comparing FANS to other knowledge structures inheritance FANS are standard background. The trend away from ontological knowledge from existing knowledge in the to nodes and (the wanton creation of new In what way are FANS different structures? Are they truly necessary or can we get by with more networks with wffs attached the following questions. structures) prompts promiscuity L. Morgensrem /Artijcial Intelligence 103 (1998) 237-271 265 familiar mechanisms? This section argues that they are particularly natural for the domain at hand, and that existing structures have their own pitfalls. represents rules. This is precisely the situation is best viewed separately information (as well as the broad benefit categories FANS are extremely natural for any commercial domain from the nontaxonomic taxonomic domain’s domain. The the medical in the insurance The and corporations. rapidly, across products and In fact, the network has proved to be especially easy for customer service the business rules as wffs at nodes information business taxonomic profession industry). This wffs represent corporations. representatives has kept the size of the network manageable in which general information-the insurance services by to master. At the same time, representing the structure of medical the industry’s business rules which change (250-300 nodes). that are standard across products in the medical static structure is a relatively We now examine alternatives everything in an inheritance network, or doing this entirely to FANS. There are two obvious choices: in a nonmonotonic representing logic. in the I: putting everything only some wffs can be easily Alternative introduction, attributes. However, we can capture all wffs simply by reifying For example, a node VXC#J(X) could be reified as the node representing satisfying 4. There are several objections the As mentioned as links between classes and each wff as a node. the property of represented inheritance network. in First, many such nodes would be very unnatural the sample wffs in Sections 3 to this alternative. (consider the spirit of a semantic network. That is, nodes in the network, concrete entities such as services and benefits, would represent and 4), and quite outside instead of representing ontologically Second, dubious creatures. has now been the problem of wff-inheritance recast as the problem of determining whether two or more paths conflict. In particular, assume wffs 41, . . . , c,hn such that 41 A . . . A cjn is inconsistent. Let ~1, . . , y, be the nodes associated with these wffs. Itisclearthatthepathsx~yl,...,x~y, sense of the term. in a standard Hortian or Touretzkian But this conflict cannot even be expressed directly framework. Even if we increase expressivity, resolve well-understood there is no obvious way to recognize and subsets of wffs is a In contrast, determining maximally in the intuitive this conflict. consistent problem. conflict I6 II: doing everything network into a nonmonotonic in a nonmonotonic theory. That theory, such as autoepistemic [25]. I7 However, see also Horty [18], who argues for a path-based inheritance network is a problem Alternative inheritance circumscription translational completely an equivalent nonmonotonic semantics solved. In any case, it is certainly possible, given a particular network, is, translate logic that specifying the [32] or a that is not yet to give theory. section, in the previous ” As mentioned the general problem of determining whether paths conflict already such as the modified Nixon diamond of Fig. 9. While we see that these problems can exists in many networks, beset any network, we nevertheless believe that flooding networks with this problem, which would happen if wffs were reified as nodes, is not desirable. This is particularly true since the problem of determining whether arbitrary paths in a network are inconsistent with respect to one another has not been addressed. I7 There are a variety of methods for doing this, such as [ 1 I]. There are several objections to this strategy. First, the distinction between static taxo- this representation rules has been erased. Second, to users of the expert system, who find browsing nomic rules and more volatile business is much less accessible through an in- heritance network easy to learn and understand. Either they must live with this hardship theory. We must then either con- or we must keep the FAN as well as the nonmonotonic be sure to always update the two struct a mapping between task-or in the business world. Third, such a structures simultaneously, theories, one must gener- strategy may be computationally wasteful than the algorithms ally recompute priorities and/or specificities available for determining constraint in that in translational the two-a an unrealistic in an inheritance network. in a more tedious manner specificity nontrivial 4.2. Related work consistent there is an emphasis in these works on considerations inheritance). Most importantly, what distinguishes There is much work in the literature on determining maximally sets of de- faults ([2,6,10,16] among others). Such work is obviously very close in spirit to ours. In particular, of specificity. This paper differs from these works in a number of respects (such as the consideration ing multiple-path this paper from these works is the emphasis on the semantic network structure which we take as our starting point. The other works take some nonmonotonic system as their starting point. The dif- that Horty [ 181 points out between path-based and ference translational in terms of a nonmonotonic in terms of the paths them- and intuitiveness of path-based approaches selves. Just as Horty argued for the naturalness of the path- and intuitiveness for standard in [ 181, which argues based approach to wff-inheritance. that researchers using the translational formalized the concept of specificity, which is easy to formalize within a path-based approach. theories of inheritance; formalism; inheritance, we argue for the ease, naturalness, the latter specify the meaning of a network approaches have not yet satisfactorily In particular, note the discussion the former specify the meaning to the distinction of nonconflict- is analogous We do not, however, believe that these systems should be seen as competing. Rather, is the representation is the case: a major task in knowledge structures, or if that is not possible, demonstrating that is most natural and useful for a particular application. that this structure we believe that the following articulation of the structure to more Another major task is demonstrating, In this familiar semantic networks have a useful role to play spirit, we suggest is a major, but not sole, component of the in domains domain knowledge. (For example, we have used FANS in life insurance and property and casualty applications.) At the same time, we hope that future research will shed light on the equivalences between FANS and the systems of Geffner [lo], Grosof [ 14,151, and others. is equivalent the inequivalence. that formula-augmented taxonomic knowledge if possible, in which 7. Generalizing wff-inheritance Can the techniques of wff-inheritance, which were developed for the particular problem in insurance domain, be generalized to other problems in the medical inquiry of benefits industry? L. Morgenstern /Art@ial Intelligence 103 (1998) 237-271 261 Some generalizations in other parts of the insurance In these industries, insurance. are obvious. Wff-inheritance would clearly be useful for benefits industry, such as life insurance and property and it is also the case that services are best organized and that business rules apply to services. Wff-inheritance may also be useful such as adjudication, which would use a taxonomy of services inquiry, and administration, which would use a inquiry casualty taxonomically, for other tasks in insurance, very close to the structure used in benefits taxonomic structure of products as well as services. The nonmonotonic to a wide range of other it can be argued that the problems as well. Indeed, as suggested construct of a FAN and its associated algorithms may prove useful in other domains which satisfy the following criteria: techniques discussed here are applicable in the previous section, information; (1) there exists a large amount of taxonomic (2) there exists a significant amount of nontaxonomic (3) the taxonomic (4) the nontaxonomic There are a number of potential domains: l Legal rcusoning, especially case law: legal cases are often organized legal rulings are associated with cases; it is reasonable information; linked to the nontaxonomic can be mapped into wffs. is conceptually information information [ 11, or analogical; adding wff-inheritance may significantly into wffs. Most automated taxonomically, that to suppose legal reasoning has enhance Indeed, one can view FANS as providing an framework, with formal and different these legal rulings can be mapped been case-based the power of legal reasoning organizing characterizations systems. framework for the cases in a case-based of some aspects of the similarity reasoning relation on cases. information; l Medical reasoning and treatment: medical conditions taxonom- ically, and protocols are associated with these conditions. The protocols are often rigorous sequences of steps which can be mapped into wffs. are often organized l Reasoning in business organizations: the organization chart in many businesses perfect taxonomy, and there are many rules associated with different positions org chart. is a in the These extensions are not straightforward; these examples in particular, mapping business or legal rules that the usefulness of FANS indicate into wffs is nontrivial. However, extends far beyond the domain for which they were invented. 8. Into the future The detailed examination taught us some valuable of an application of nonmonotonic lessons and has suggested several directions reasoning to industry has for future research. (1) We need to constantly keep our eyes open for problems that could the trick is benefit from nonmonotonic to identify that could benefit from FANS, as suggested above. In general, we should look for domains where exceptions are relatively common. in industry reasoning. There are many such problems; them. Certainly, we should look out for problems (2) Basic research nonmonotonic is still crucial. We need serious research on theoretical aspects of It would be best if such research were guided by specific reasoning. 268 L. Morgenstern /Arti$cial Intelligence 103 (1998) 237-271 inquiry inheritance in industry the benefits studying a problem a number of issues include that theories of inheritance the interaction of composition in industry. In fact, one of the is that it often that were not previously considered. system described here, had not previously and subtyping and issues highlighted by the study of particular problems unexpected dividends of intensively results in the discovery of theoretical problems For example, while I was developing I discovered examined. Such problems non-unary The importance of basic research cannot be overstated. Some of the most heartening news about the current exciting results regarding Examples logic programs, results are being logic programs are used in RAISE, a system for building commercially is the recent spate of theories. include Grosof’s result that computation of the answer set for courteous [15]. These courteous agents, now state of nonmonotonic the complexity of some restricted nonmonotonic is O(n*) In particular, intelligent form of prioritized into commercial a restricted translated products. defaults, research released [29]. in industry involvement [ 141. (3) The proper balance between basic research and serious researcher enough material to get a fair idea of the problems is to maintain. One meaty industry problem can easily give a for a decade: on the other hand, we need to that need to be important, but difficult theoretical work on many industrial problems solved, and to convince is mutually and relationship ideal The the beneficial: industry benefits because academe offers a better way of solving problem; academe benefits because examining in industry opens up an interesting area of inquiry and leads to new and exciting results. There is no point in to do choosing boring problems the choosing). (4) We must develop industry of the relevance of nonmonotonic is one between reasoning. We need to develop tools for inheritance with exceptions; we also need to develop a tool for inheritance with wffs. Thus far, inheritance with wffs has been developed the general general for only one application and modified for another. A general extension of FANS to other problems (though we are not always in a position in industry, as suggested above. tools to perform nonmonotonic reasoning. that tool will facilitate the problem in industry academe industry (5) Solving a business problem often requires more than providing a solution to a in nonmonotonic problem we faced in the development of the benefits of the many business knowledge business knowledge-in is often more difficult knowledge. representation particular, rules than reasoning. For example, one of the biggest problems inquiry system was the formalization industry: we ran up against in the insurance the of a large amount of bottleneck. The representation the development of the proper ontology- the computational aspects of reasoning with that Finally, we must keep in mind that researchers in nonmonotonic reasoning do not always face a friendly landscape. Some things we ought to watch out for: (1) Shortsightedness. It always first time. Using nonmonotonic may not always be obvious prepared for the possibility of an uphill battle, both with one’s management to anyone but AI researchers. AI researchers should be chain takes longer reasoning the to solve a problem well, especially takes a lot more time, and the advantages L. Morgenstem /Art$cial Intelligence 103 (1998) 237-271 269 and with the customer. This is not a problem unique reasoning, of course. to the field of nonmonotonic (2) Refusing to accept the importance of plausible reasoning. This comes in many guises: . The SO-20 rule. This line of argument if one is willing rule is particularly pernicious runs as follows: even if we ignore exceptions, we will still get things right most (around 80%) of the time, and with very little effort. Is it not worth taking that route? The 80-20 to accept wrong answers 20% of the time (one can only hope that this rule is not invoked by the FAA), but is quite troublesome to accept admissions of ignorance (answers of “I don’t know”) 20% of the time. Even in the relatively benign domain of benefits inquiry, a system that cannot answer questions 20% of the time is not very that are its performance would scarcely be better than the desktop systems useful: designed to answer the most frequently asked questions, or CSRs without any aid of technology who can generally answer frequently asked questions recognizes right off the bat. the importance even if one is merely willing movement. This argument l The back-to-if-then-else exceptions, but insists that any branching use this argument are convinced achieve has been present since the days of Algol60 or earlier. statement that all that nonmonotonic of is all that is needed. People who to reasoning is trying l The protection-of-basic-researchers strategy. Despite constantly urging nonmonotonic to do something practical, management often tries to keep a buffer be- researchers tween researchers and industry. The trouble with this is that if researchers cannot get close enough to industry, if they only hear about a problem second hand, they do not have an accurate picture of the is situation, and they cannot determine whether and how nonmonotonic useful. they cannot find the problems that are most suitable; reasoning The best way to counteract these obstacles is to demonstrate that nonmonotonic reasoning affect the outside world. is capable of yielding practical results. We will achieve recognition when we Acknowledgement I am grateful to Ernie Davis, Benjamin Grosof, Moninder Singh, and Rich Thomason for helpful discussions and suggestions. References [ 11 K. Ashley, Modeling Legal Argument: Reasoning with Cases and Hypotheses, MIT Press, Cambridge, MA, 1991. [2] G. Brewka, Preferred subtheories: an extended logical framework for default reasoning, in: Proc. IJCAI- 1989, Detroit, MI, 1989, pp. 1043-1048. [3] W.F. Clocksin, C.S. Mellish, Programming [4] A. Darwiche, J. Pearl, On the logic of iterated belief revision, in: R. Fagin (Ed.), Proc. 5th Conference on in Prolog, 3rd ed., Springer, Boston, MA, 1987. Theoretical Aspects of Reasoning about Knowledge, Morgan Kaufmann, San Mateo, CA, 1994, pp. 5-23. [5] E. Davis, Representations of Commonsense Knowledge, Morgan Kaufmann, San Mateo. CA, 1990. [61 J. Delgrande, T. Schaub, A general approach to specificity Conference on Principles of Knowledge Representation Kaufmann, San Mateo. CA. 1994, pp. 146-157. in default reasoning, and Reasoning in: Proc. Fourth International (KR-94), Bonn, Germany, Morgan 171 W.H. Dowling, J.H. Gallier, Linear time algorithms for testing the satisfiability of propositional Horn formulae, Journal of Logic Programming [8] D. Etherington, Reasoning with Incomplete [9] P. Gardenfors, Knowledge 3 (1984) 267-284. in Flux, MIT Press, Cambridge, MA, 1988. [lo] H. Geffner, Default Reasoning: Causal and Conditional Theories, MIT Press, Cambridge, MA, 1990. 1111 M. Gelfond, H. Prszymusinska, Formalization of inheritance in autoepistemic reasoning logic, Fundamenta Informaticae [ 121 M. Ginsberg (131 G. Gottlob, Complexity 13 (1990) 403-443. (Ed.), Readings in Nonmonotonic Reasoning, Morgan Kaufmann, San Mateo, CA, 1987. results for nonmonotonic logics, Journal of Logic and Computation 2 (3) (1992) Information, Morgan Kaufmann, Los Altos, CA, 1988. 397-425. [ 141 B. Grosof, Building commercial agents: an IBM research perspective, on Practical Applications of Intelligent Agents and Multi-Agent Technology as IBM Research Report RC20835 and at http://www.research.ibm.com/people/g/grosof. in: Proc. 2nd International Conference 1997. Available (PAAM-97) [IS] B. Grosof, Proritized conflict handling for logic programs, IBM Research Report RC20836, 1997. Also at http://www.research.ibm.com/people/g/grosof. 1161 B. Grosof, Generalizing prioritization, in: J. Allen, R. Fikes, E. Sandewall (Eds.), Proc. 2nd International and Reasoning, Cambridge, MA, Morgan Kauf- Conference on Principles of Knowledge Representation mann, San Mateo, CA, 1991, pp. 289-300. [17] S. Hanks, D. McDermott, Nonmonotonic logic and temporal projection, Artificial Intelligence 33 (3) ( 1987) 379412. [ 181 J. Horty, Some direct theories of nonmonotonic (Eds.), inheritance, Handbook of Logic in Artiticial Intelligence and Logic Programming, Vol. 3: Nonmonotonic Reasoning and Uncertain Reasoning, Oxford University Press, Oxford, 1994, pp. 1 I l-187. in: D. Gabbay, C. Hogger, J. Robinson [ 191 J. Horty, R. Thomason, Mixing strict and defeasible Kaufmann, San Mateo, CA, 1988, pp. 427432. inheritance, in: Proc. AAAI-1988, St. Paul, MN, Morgan [20] J. Horty, R. Thomason, D. Touretzky, A skeptical theory of inheritance in nonmonotonic semantic networks, Artificial Intelligence 42 (1990) 3 1 l-349. [21] H. Kauta, B. Selman, Hard problems for simple default logics, (Eds.), Proc. 1st International Conference Toronto, Ontario, Morgan Kaufmann, San Mateo. CA, 1989, pp. 18Y- 197. on Principles of Knowledge Representation in: R. Brachman, H. Levesque, R. Reiter and Reasoning, [22] W. Kneale. M. Kneale, The Development of Logic, Clarendon Press, Oxford, 1962. 1231 S. Kraus, D. Lehman, M. Magidor, Nonmonotonic reasoning, preferential models, and cumulative logics, Artificial Intelligence 44 (1990) 167-207. [24] E. Mays, R. Dionne, R. Weida, K-REP system overview, SIGART Bulletin 2 (3) (1991). [25] J. McCarthy, Circumscription-a reasoning, Artificial Intelligence 1261 J. McCarthy, Applications form of nonmonotonic of circumscription common-sense to formalizing knowledge, Artificial I3 (1980) 27-39. Intelli- gence 28 (1986) 86116. [27] D. McDermott, [28] L. Morgenstern, J. Doyle, Nonmonotonic Inheriting well-formed of Knowledge Representation 279. and Reasoning: Proc. 5th International Conference logic I, Artificial Intelligence 13 (1980) 41-72. formulae in a formula-augmented semantic network, in: Principles (KR-96). 1996, pp. 2688 [29] L. Morgenstem, New problems for inheritance theories, in: Proc. 3rd Symposium on Formal Theories of Commonsense Reasoning, Stanford, January 1996. Available at http://www-formal.stanford.edu/leora. [30] L. Morgenstem, The problem with solutions to the frame problem, in: K. Ford, Z. Pylyshyn (Eds.), The Robot’s Dilemma Revisited, Ablex, Norwood, NJ, 1996, pp. 99- 133. [3 1] L. Morgenstem, M. Singh, An expert system using nonmonotonic techniques for benefits inquiry in the insurance in: Proc. IJCAI-97, Nagoya, Japan. 1997. industry, 1321 R. Moore, Semantical considerations 1331 Proceedings of the Conference on Practical Applications of Prolog, 1997. [34] R. Reiter, A logic for default reasoning, Artificial Intelligence 13 (1980) 81-132. 1351 R. Reiter, G. Criscuolo, On interacting defaults, on nonmonotonic logic, Artificial in: Proc. IJCAl-1981, Vancouver, BC, 1981, pp. 270-276. Intelligence 25 (1) (1985) 75-94. L. Morgm.stern /Artificial Intelligence IO.? (1998) 237-271 271 [36] T. Schaub, P. Nicolas, An implementation its implementation Nonmonotonic Reasoning, Springer, Berlin, 1997. and evaluation, platform for query-answering in: J. Dix, U. Furbach. A. Nerode in default logics: the XRay system, and (Eds.). Logic Programming [37] .I. Schmolze, T. Lipkis, Classification in the KL-ONE Representation System. in: Proc. IJCAI-1983. Karlsruhe, Germany, 1983. [3X] B. Selman, H. Levesque. The complexity of path-based defeasible inheritance, Artificial Intelligence 62 (2) ( 1993) 303-340. [39] M. Shanahan, Solving the Frame Problem, MIT Press, Cambridge. MA, 1997. 1401 Y. Shoham, Reasoning about Change: Time and Causation from the Standpoint of Artificial Intelligence. MIT Press. Cambridge, MA, 1988. [41] L. Stein, Resolvmg ambiguity in nonmonotonic inheritance hierarchies. Artificial Intelligence 55 (1992) 259-3 IO. [42] D. Touretzky, The Mathematics of Inheritance Systems, Morgan Kaufmann, Los Altos, CA, 1986. [43] L. Zadeh, Fuzzy sets, in: D. Dubois, H. Prade, R. Yager (Eds.), Readings in Fuzzy Sets and Intelligent System\, Morgan Kaufmann, San Mateo, CA. 1992. 