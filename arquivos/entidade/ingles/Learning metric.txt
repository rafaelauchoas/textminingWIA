Artificial Intelligence 99 (1998) 21-71 Artificial Intelligence Learning metric-topological maps for indoor mobile robot navigation ’ Sebastian Thrun 2 Computer Science Department and Robotics Institute, Carnegie Mellon University, Pittsburgh, PA 15213, USA Received June 1996; revised October 1997 Abstract Autonomous robots must be able to learn and maintain models of their environments. Research on mobile robot navigation has produced two major paradigms for mapping indoor environments: grid-based and topological. While grid-based methods produce accurate metric maps, their com- plexity often prohibits efficient planning and problem solving in large-scale indoor environments. Topological maps, on the other hand, can be used much more efficiently, yet accurate and con- sistent topological maps are often difficult to learn and maintain in large-scale environments, particularly if momentary sensor data is highly ambiguous. This paper describes an approach that integrates both paradigms: grid-based and topoIogica1. Grid-based maps are learned using artificial neural networks and naive Bayesian integration. Topological maps are generated on top of the grid-based maps, by partitioning the latter into coherent regions. By combining both paradigms, and effi- the approach presented here gains advantages from both worlds: accuracy/consistency ciency. The paper gives results for autonomous exploration, mapping and operation of a mobile robot in populated multi-room environments. @ 1998 Elsevier Science B.V. Keywords: Autonomous robots; Exploration; Mobile robots; Neural networks; Occupancy grids; Path planning; Planning; Robot mapping; Topological maps I This research is sponsored in part by Daimler-Benz Research Foundation under award IRI-9313367, IJSAF, and Command, F33615-93-l-1330, and the Defense Advanced Research Projects Agency System Command document are those of the author and should not be interpreted as necessarily endorsements, Air Force Materiel Command, the National Science the Wright Laboratory, Aeronautical Systems Center, Air Force Materiel the DARPA Advanced Research Projects Agency (DARPA) under grant number (DARPA) via the Air Force Missile in this representing official policies or the the National Science Foundation, the Air Force Missile System Command, or the United States Government. either expressed or implied, of Daimler-Benz Research, under contract number FO4701-97-C-0022. The views and conclusions (via Frieder Lohnert), contained 2 Email: thrun@heaven.leaming.cs.cmu.edu. 0004-3702/98/$19.00 PII SOOO4-3702( @ 1998 Elsevier Science B.V. All tights reserved. 97)00078-7 22 S. Thrun/Arti$cial Intelligence 99 (1998) 21-71 1. Introduction To efficiently carry out complex missions autonomous mobile robots must be able to acquire and maintain models of their environments. The problem factors impose of acquiring models limitations practical is difficult and far from being solved. The following on a robot’s ability to learn and use accurate models: in indoor environments, (i) Sensors. Sensors often are not capable of directly measuring the quantity of interest. For example, cameras measure color, brightness and saturation of light, such as “there is a whereas door in front of the robot.” for navigation one might be interested in assertions (ii) Perceptual transducers, global limitations. The perceptual range of most sensors cameras) is limited to a small range around (such as ultrasonic the robot. To acquire information, the robot has to actively explore its environment. (iii) Sensor noise. Sensor measurements are typically corrupted by noise. Often, the distribution of this noise is not known. (iv) Drift/slippage. Robot motion odometric errors accu- mulate over time. For example, even the smallest rotational errors can have huge effects on subsequent is inaccurate. Unfortunately, errors when estimating the robot’s position. translational ing it principally impossible (v) Complexity and dynamics. Robot environments (vi) Real-time requirements. Time requirements must be simple and easily accessible. For example, models of complex to be generated indoor environments in real-time. are complex and dynamic, mak- to maintain exact models and to predict accurately. that internal models fine-grain CAD if actions have accurate are often inappropriate often demand Recent research has produced vironments: approaches, and Koren grid cell may, for example, region of the environment. and Byun, MatariC and others ronments by graphs. Nodes landmarks between them. two fundamental paradigms for modeling indoor robot en- the grid-based such as those proposed by Moravec and Elfes [ 81 and many others, represent environments (metric) paradigm and the topological paradigm. Grid-based and Borenstein grids. Each [ 3 1,32,73] by evenly-spaced indicate Topological the presence of an obstacle in the corresponding such a those proposed by Kuipers robot envi- represent to distinct situations, places, or (such as doorways). They are connected by arcs if there exists a direct path approaches, [ 34,56,59,68,84,111,118,121], in such graphs correspond and weaknesses. environments Both approaches to robot mapping exhibit orthogonal strengths and to maintain to construct incrementally, in large-scale based on odometric grids are easy Occupancy grid approaches disambiguate position within a global coordinate Occupancy different places based on the [9,107,108]. is robot’s geometric estimated taken by the robot. Thus, occupancy grid approaches usually use an unbounded number of sensor to determine a robot’s location. To the extent that the position of a mobile robot readings look alike can be tracked accurately, different positions are naturally disambiguated. Nearby geometric places are recognized as such, even if the sensor measurements the case in dynamic environments where, e.g., humans can block a robot’s sensors. for which sensors measurements frame. The robot’s position and sensor readings differ-which information is often S. ThrudArtifcial Intelligence 99 (1998) 21-71 23 Table 1 Advantages and disadvantages of grid-based and topological approaches to map building Grid-based (metric) approaches Topological approaches easy to build, represent, and maintain recognition of places (based on geometry) is non- ambiguou:s and view point-independent facilitates computation of shortest paths planning inefficient, space-consuming (resolution does not depend on the complexity of the envi- ronment) requires accurate determination of the robot’s po- sition poor interface for most symbolic problem solvers + + + - _ _ permits efficient planning, low space complexity (resolution depends on the complexity of the en- vironment) does not require accurate determination of the robot’s position convenient representation ner/problem solver, natural language for symbolic plan- difficult to construct and maintain in large-scale environments if sensor information is ambiguous recognition of places often difficult, sensitive to the point of view may yield suboptimal paths approaches. Topological approaches determine the to the model primarily based on landmarks or distinct, mo- that look alike, if these places are the same if these places have been reached via different paths). Also, since ap- strongly on the view-point of the robot, often have difficulty determining if the robot traverses two places topological This is not the case for topological approaches sensor features. For example, position of the robot relative mentary topological or not (particularly sensory proaches may fail to recognize geometrically making it difficult highly ambiguous. input usually depends to construct large-scale maps, particularly if sensor information is nearby places even in static environments, On the other hand, grid-based approaches the resolution suffer from their enormous of a grid must be fine enough space and time to capture The resolution The compactness of the environment. three key advantages is because detail of the world. The key advantage of topological of topological maps corresponds complexity. This every important is their compactness. complexity them (b) they facilitate provide more natural topological position of the robot, they often recover better from drift and slippage-phenomena must constantly be monitored and compensated both paradigms Table 1. to symbolic planners for human they permit and problem-solvers, approaches usually do not require of topological (a) they (such as: “go CO room A”). Since of the geometric that representation directly representations strengths and weaknesses, which are summarized in grid-based approaches. To summarize, fast planning, and (c) the exact determination have orthogonal over grid-based to the gives approaches: instructions interfacing interfaces in This paper advocates (see also the integration of both paradigms to gain the best of both representations. [ 151). The approach presented here combines worlds and topological sensor values are interpreted by an artificial neural network and mapped ities for occupancy. Multiple interpretations On top of the grid representation, more compact (metric) a grid-based model of the environment, into probabil- are integrated over time using Bayes rule. topological maps are generated by To construct grid-based 24 S. ThrudArtificial Intelligence 99 (1998) 21-71 Fig. 1. The robots used in our research: RHINO The software has also been ported to RWI’s B14 robots. (University of Bonn), XAVIER, and AMELIA (both CMU) the metric map into coherent regions, separated to narrow passages such as doorways. By partitioning than smaller of both representations splitting lines correspond into a small number of regions, of magnitude the integration either approach and maintain sistently is grounded ing. The approach also the considerably tion. and disambiguates in the metric in isolation: in environments inherits larger memory the number of topological the number of cells in the grid representation. has unique advantages the grid-based of moderate size and complexity, models representation, which different positions. The topological representation, facilitates two disadvantages and requirements fast planning of grid-based the necessity through critical lines. Critical the metric map is several orders Therefore, entities that cannot be found for is easy to construct the world con- representation, which and problem solv- approaches, namely localiza- for accurate obstacles, The robots used resolution. Throughout in our research are shown along with noise. One of these robots an array of sonar sensors, consisting of 24 or 16 sonars. Sonar sensors return imity of surrounding also equipped with a laser range with higher spatial interpretation prototype version) dition integrated various robot manufacturer with their B14 and B21 robots. in Fig. 1. All robots are equipped with the prox- is finder, which measures proximity of nearby objects to the this paper, we will restrict ourselves (in a in ad- in [ 9 1. The in by a leading mobile software along the methods described here have light sensors commercially Inc.) as the sole navigation to map building has been tested extensively using sonar sensors also been operated using cameras and infrared to sonar sensors, using the image segmentation (Real World Interface, It is now distributed indoor environments. approach described sensors, although of proximity (AMELIA) approach The remainder of the paper is organized as follows: Section 2 describes our approach to building the utility the paper for building grid-based maps; followed by the description of our approach Section 4 evaluates topological maps, described of the integrated literature; is concluded by a discussion Section 5 reviews relevant in Section 3; subsequently, approach empirically; in Section 6. S. ThndArtificial intelligence 99 (1998) 21-71 25 2. Grid-based maps The metric maps considered here are discrete, two-dimensional occupancy grids, as proposed the subjective belief originally in various sures belief as to whether or not that cell thus represents x-y-plane, ings. in [ 3 1,731. Occupancy grids have been (x, y) systems. Each grid-cell in a map has attached a value that mea- the to the center of (it the see e.g., [ 61, 1121) . Occupancy values are determined based on sensor read- that this cell is occupied. More specifically, the center of the robot can be moved the configuration space of the robot projected it contains into implemented successfully This section describes : [ 32,104] based maps the four major components of our approach to building grid- (i) (ii) Interpretation. Sensor readings are mapped Integration. Multiple single, combined estimate of occupancy. interpretations sensor to occupancy values. are integrated over time to yield a (iii) Position estimation. The position of the robot is continuously tracked and odo- metric errors are corrected. (iv) Exploration. Shortest path through unoccupied terrain. towards unexplored the robot greedily regions are generated to move Examples of metric maps are shown in various places in this paper. 2.1. Sensor interpretation reading must be “translated” To build metric maps, sensor values OCCXJ for each grid cell (x, y). The idea here is to train an artificial neural network [ 921 using Back-Propagation to map sonar measurements [ 1041. to the network consists of As shown (x, y) in polar coordinates to occupancy values in Fig. 2, the input into occupancy to the robot relative (angle - to that encode two values the first of the four sensors, and distance), to (x, y). the four sensor readings closest - and The output ing examples recording many examples data. ’ training target for the network can be obtained by operating readings. Notice its sensor a robot is 1, if (x, y) is occupied, and 0 otherwise. Train- in a known environment, while to construct training the collection of the that each sonar scan can be used In our implementation, to facilitate for different x-y coordinates. robot simulator are generated by a mobile examples short value approximated sonar sensors I 1) a random .7 Our simu:lator simulates in the following way: The main sonar cone-and only by a set of five rays. For each ray, one of the following options this cone is chosen is considerecl-is is returned, and (3) a random at random: the ray and the surface large value i:; returned. The probability of these events depends on the angle between returns normal of the obstacle. The simulator the shortest of those five values. This model was adopted based [ 1141. The current simulator does not model (1) cones other than the on a series of empirical measurements main cone, temporal (2) reflections dependencies. trained with our simulator generate good interpretations, in sensor noise (cf. [57] ). Nevertheless, this paper. involving more than one obstacle, the correct distance as demonstrated (3) cross-sonar the networks interference, is repotted, throughout and (4) (2) 26 S. Thrun/Art$cial Intelligence 99 (1998) 21-71 f f 4 sensor values& f f an&LY) t distance(x,y) Fig. 2. An artificial neural network maps sensor measurements to probabilities of occupancy. Once trained, the network generates values ability of occupancy. Formally, of a binary event probability entropy; we refer the interested demonstrates hypothesis that networks [ 30,113]. the interpretation is justified reader if the network in [ 0, 1 ] that can be interpreted as prob- of the network’s output as conditional cross- [70], which likelihood textbook the maximum to minimize is trained to page 167 of Mitchell’s trained in this way approximate Fig. 3 shows three examples of sonar scans (bottom interpretation the larger the robot, and 3 (b) show situations the interpretation the erroneous the network outputs short reading shows a different situation is less straightforward. in the context of neighboring if the neighboring This example their neural network lar region around work. Figs. 3(a) the walls correctly. Notice side of Fig. 3(a), and ered by those readings, uncertainty. sensor values prets sensors as free-space close shown environments. Training to 0.5, which again in Fig. 3(c)-that Fig. 3(c) the occupancy row). The darker a value value computed (top row, bird’s eye view) along with in the circu- the net- by the network predicts in the left in Fig. 3(b). For the area cov- indicates maximum in a corridor. Here of the erroneous long reading roughly 0.5, which in which illustrates the interpretation that the network sensors. Long readings are only of the inter- interpreted returns values such as the one indoor for cluttered sensors agree. Otherwise, indicates maximal uncertainty. defy simple interpretation-are the network Situations typical a neural network to interpret previous hand-crafted approaches to sensor sonar sensors has two key advantages interpretation: over S. Thrun/Art@cial Intelligence 99 (1998) 21-71 21 60 (b) Fig. 3. Sensor as generated by the neural network. Bright obstacles (enlarged by a robot diameter). interpretation: Three sample sonar scans (top row) and local occupancy maps (bottom regions indicate free-space, and dark regions row), indicate walls and (i> (ii) in the competition than the software was originally developed. Even [ 991 were. much smoother they can easily be adapted ring of the the walls in time though this to accommodate [ 851, also report a significant decrease the use of machine through the neural network could quickly be retrained in which the walls For example, robotic systems time of integrated Since neural networks are trained based on examples, to new circumstances. 1994 AAAI Robot Competition the building was short, new situation. Others, such as Pomerleau in development learning algorithms. Multiple knowledge, one at a time (see, e.g., context of their neighbors ple, the reflection gle of the surface multiple nomena bors suggest large. sonar into account. For example, that the angle between [ 8,31,32,73] generally are approaches simultaneously. all current interpreted interpret readings sensors sensor ignore ). Interpreting yields more accurate sensor readings in the results. For exam- the an- properties to the sonar beam, which can be detected by interpreting of most surfaces depends strongly on The neural networks long readings they the sonar cone and the surface normal take such phe- if their neigh- is simultaneously. each sensor To the best of our reading individually, 2.2. Integration over time Sonar To do so, it is convenient interpretations must be integrated over time to yield a single, consistent map. reading the network’s output for the tth sensor to interpret 28 S. Thrun/Artijcial Intelligence 99 (1998) 21-71 (denoted by s(‘) ) as the probability that a grid cell (x, y) is occupied conditioned the sensor reading s(‘): on Prob(occ,,,Is(‘)). A map is obtained by integrating denoted by s(l), d’), cell (x, y) can be written as the probability readings, . . . , dT). In other words, the desired occupancy value for each grid these probabilities for all available sensor Prob(occ,,!,Is(1),s(2), . . . ,dT)), is conditioned which this quantity noise (x, y), the conditional in different of Prob(s(“)[occ,,) monly made conditional and Prob(s(“)). on all sensor readings. A straightforward approach to estimating is to apply Bayes rule. To do so, one has to assume readings. More specifically, given of the the true occupancy of a grid cell independence probability Prob( s(‘) ~occ,,~) must be assumed to be independent if t # t’. This assumption is not implausible-in independence in approaches to building occupancy grids. It is important the independence The latter two random variables are usually dependent. does not imply assumption fact, it is com- to note that the of Prob(s(‘)) The desired probability can be computed in the following way: Prob(occ,,YIs(1),s(2), . . . , dT)) Prob(occ,,,ls(‘)) 1 - Prob(occ,,,ls(‘)) Prob(occ,,#‘)) r rI 7=2 1 - Prob(occx,YIs(‘)) 1 - Prob(occ,,,,) -’ Prob(occ,,Y) > ’ (1) Here Prob(occx,Y) denotes be omitted in this equation). the prior probability for occupancy (which, if set to 0.5, can The update formula ( 1) follows directly from Bayes rule and the conditional inde- pendence assumption. According to Bayes rule, Prob(occ,,,,Is(‘), . . . , dT)) Prob( ~occ,,, Is(‘), . . . , dT’ ) Prob(s(T)locc,,Y, s(l), . . . , dT-‘)) Prob(occ,&(‘), . . . , dT-‘)) = Prob(s(T)I~occ,,y,s(l), . . . , s(r-I)) Prob(loccx,YIs(l), . . . ,dT-‘)) which can be simplified by virtue of the conditional independence assumption to Prob(s(r)locc,,) Prob(occ,,ls(‘), . . . , dT-‘)) = Prob(s(r)ITocc,,,) Prob(yocc,,,ls(i), . . . ,dT-‘)) * Applying Bayes rule to the first term leads to Prob(occx,YIs(T)) = Prob(~occ,,,Is Prob(locc,,Y) Prob(occ,,~js(‘), (r)) Prob(occx,Y) Prob(~occ,,,ls(‘), . . . , s(~-‘)) . . . , scT--l)) ’ S. ThrudArtQicial Intelligence 99 (1998) 21-71 29 Fig. 4. If there were no odometric errors, huge maps could be built with ease. Shown here is a map of the size 105 by 63 meters, which the robot learned fully autonomously in approximately 45 minutes, using the map building and exploration algorithms described in this paper. The higher a point in the map, the more likely it is to be occupied. This map has been built using a simulator. The simulator uses a fairly realistic sonar noise model, but here it does not model odometric error. Induction over T yields: Rob(occx,y) = 1 - Prob(dcc,,y) ’ rI Prob(occ,,_,,]s(r)) ,._, 1 - Prob(occ,,Js(r)) 1 - Prob( occ,,Y) Prob(acc,,,) . (2) ( 1) is now obtained by solving . . . , dT)) = 1 - Prob(occX,Y]s(‘), (2) for Prob( occ,,,, Is(‘), . . . , dT) ) , This . . . ,#). update rule, which is sound given our conditional of sensor evidence [ 73,821. [ 821 in that albeit the fact that occupancy causally determines the fact that Prob(loccX,ujs(l), The update equation using probabilistic is frequently used for the accumulation networks {~(~)},i,,.,,r probability: values incrementally, per grid cell: Prob(occX,Yls(l), a sufJicientstatistic Notice i.e., at any point and not the other way round, Prob(occ,,,,Is(‘)). for s(i),s(*),...,sC7) the networks represent that Eq. ( 1) can be used in time r it suffices s(*), . . . , dT)). Technically speaking, [113]. independence assumption, It differs from Bayes sensor readings the inverse conditional to update occupancy to memorize a single value is this single value Fig. 4 shows an example map. Although this figure appears to be three-dimensional, is two-dimensional: the actual map occupied. This map was built using a simulator the absence of odometric errors-all using a real robot. In this particular it did, however, model noise in perception. The map shown in Fig. 4 is approximately in this paper were constructed run, the simulator did not introduce odometric errors; 105 in order to investigate map building it is to be in The higher a point, other maps shown the more likely 30 S. Thrun/Art$cial Intelligence 99 (1998) 21-71 in size and was acquired by 63 meters The algorithm used for exploration neural network method for integrating errors maps are usually approach in 45 minutes of autonomous robot exploration. is described below. As can be seen in Fig. 4, the to interpreting the probabilistic sensor data combined with them yield quite accurate maps. In the presence of odometric less accurate. 2.3. Localization The accuracy of the metric map depends crucially on the alignment of the robot with its map. Unfortunately, of the robot position. is therefore an important slippage and drift can have devastating effects on the estimation error) Identifying and correcting issue in map building that illustrate for slippage and drift (odometric [7,22,89]. the importance Figs. 5 and 10 give examples robot mapping. For example, in Fig. 5(a) in grid-based solely based on dead-reckoning. the position error erroneous identical data, is the result of exploiting is approximately After approximately 11.5 meters. Obviously, and integrating to be of practical use. The map shown in Fig. 5(b), of position the position estimation is determined 15 minutes of robot operation, the resulting map constructed from three sources of information: is too the (9 (ii) in time. We will denote and 10(b), odometry in the long run. the revolution of the robot’s wheels. odometry yields an estimate of the robot’s position this estimate by (~&,r, y,&,r, tYk&. As is very accurate over short Wheel encoders. Wheel encoders measure Based on their measurements, at any point can be seen from Fig. 5(a) distances, but it is inaccurate Map matching. Whenever structs a “local” map (such as the ones shown the local and the corresponding correspondence. alike the local map looks to the global one, hence the more plausible correlation correlation of the local with the global map gives a second source of information for aligning it con- in Fig. 3). The correlation of section of the global map is a measure of their the two maps are, the more it is. The the the robot interprets an actual sensor reading, is a function of the robot’s position (~r~,,~r, ~p~~,,r, O&,ot). Thus, the more correlated the robot’s position. Obviously, Technically, robot-centered local maps are computed in local, in a global coordinate coordinates, whereas global maps are computed system. As a result, the local map, overlaps each grid cell of the global map that overlaps with almost always with exactly four grid cells of the local map, as shown in Fig. 7. of a cell in the global map which overlaps with Let (x, y) be the coordinates the local map, and let (x’, y’) denote in the local coordinates map. Let (x;, y;) with i = 1, . . . ,4 denote the coordinates of the four grid points in the local map that are nearest to (x’, y’) (which are unique with probability 1) . The global occupancy occ,?, is then matched with the local occupancy value obtained using the corresponding the following interpolation: c;, 1.x - &I IY - Yil lococcx,.v, c;~~I~-xillY-Yil . (3) S. Thrun/Arti&ial Intelligence 99 (1998) 21-71 tb) (a) without and (b) with the position estimation mechanism described Fig. 5. Map constructed In (a), only the wheel encoders are used to determine more than 1 1 meters, and the resulting map is clearly unusable. This illustrates position estimation for map building. the robot’s position. The positional error accumulates the importance of sensor-based in this paper. to 32 S. Thrun/Art@ial Intelligence 99 (1998) 21-71 Fig. 6. Wall, detected by considering five adjacent sonar measurements. Wall orientations are used to correct for dead-reckoning errors in the robot orientation 8rOb,,t. Local Map (grey) Global Map (black) - global map, grid-cell center Fig. 7. Map matching. Since local maps are recorded in local robot coordinates and global maps are recorded in global coordinates, each cell in the global occupancy grid usually overlaps with four local grid cell. The values of these four cells are interpolated to yield a single occupancy value. lococc denotes the local occupancy grid. In other words, into the local robot’s coordinates, where of a global grid cell is projected occupancy value is obtained by interpolation. The interpolating interpolation lar in spirit to Shepard’s most notably the coordinate and the local is simi- [ 981. It has several interesting properties, and almost everywhere differentiable it is smooth [continuous) function in Kclbot 9 Y&X * %&3J * The key advantage the nearest one, of interpolating lies the correlation between simply picking employed The correlation of the two maps is a differentiable local map values, which to maximize themselves values, instead of ascent can be the global and the local map. function of the interpolated functions of the robot’s in the fact that gradient between occupancy are differentiable S. Thrun/Arti&ial In?elligence 99 (1998) 21-71 33 (T and its derivative. Fig. 8. The function of the expected and observed wall orientation have the strongest effect. If this deviation is completely have no effect. (T is most sensitive to values close to zero. Thus, small deviations it ignored. Consequently, walls that deviate from the expected wall orientation by more than 1Y than W, is larger (iii) described here, the correlation function search the danger of the case when (since odometric errors are small), gradient ascent suffers is typically is an efficient ascent from If the robot’s error leads to the correct solution. in the robot’s position. Gradient large spaces, which usually is small, which coordinates. Thus, given the interpolation is differentiable sclheme for searching local minima. tracking a robot’s position search usually Wzll orientation. A third component memorizes [ 25,431. This approach parallel or orthogonal these canonical wall directions. orientation of walls Fig. 6). This five or more adjacent (denoted by C&ii) has been determined, realign line Then-in In the beginning by analyzing straight the robot’s orientation. More specifically, in a sonar scan. Let 8 be the angle of this sonar measurements. Once is done by searching the ideal case- is estimated lines subsequent rests on the restrictive assumption to each other or differ by more than 15 degrees the global wall orientation that walls are either from the global sonar scans (cf. the endpoints of consecutive that connect of map building, the global wall orientation sonar scans are used to the robot detects a to the robot. relative suppose line a ( &,bot 38, &a11 > := ( erobot + 8 - &a~ > module 90” should be zero, i.e., the detected wall should be orthogonal or parallel this is not the case, the robot corrects its orientation accordingly, by maximizing to &a~i. If (+(a) := (la] - 151”)~ if ]cr] < 15”, 0 if Icy] > 15” 34 S. ThrudArtificial Intelligence 99 (1998) 21-71 is shown is because (+ and its first derivative the derivative of cr with respect in Fig. 8. using gradient ascent. The function Walls whose orientation differ from the global wall orientation by 15” or more have no effect. This to Brobot is the gradient of (+ with respect zero if ILY 2 15”. If JLY] is smaller the more to &,bOr is non-zero similar the gradient, robot orientation &&,i. This graded and the stronger in various populated scheme was empirically to noise, errors in indoor environments. wall detection, obstacles such as desks and chairs, and people walking by. linearly as a approaches 0’. Thus, the observed wall orientation, found In particular, the effect on the estimated it was found to be robust the best results the global and and increases the larger to yield than lS’, The exact function that is being minimized when calculating the robot’s position is: J := pl [ (X;&,t - Xrobot ) * + (&b,,t - Yrobot ) 2 1 + p2 (o;obot - erobot > * - P3COd&obot > Yrobot 9 hobot > - P40.(a(e,bot,8,e,,ll)). (4) the correlation term measures term relates in (4) correspond between the global wall orientation Here pi, &, &, and p4 are gain parameters information. The first two terms third fourth is differentiable, is an iterative iterations. When a new sonar reading arrives, is incorporated and position the available computation and gradient descent tracking algorithm is an anytime algorithm is employed its result time. into search scheme, whose accuracy usually the current position that trade off the different sources of to the odometry of the robot. The the the global and to the observed wall orientation. Eq. (4) J. Gradient descent the number of the local map, and increases with to minimize the previous gradient search is terminated estimation. Consequently, the [27] whose accuracy depends on An example map of a competition at the 1994 AAAI Autonomous ring constructed in Fig. 9. This map contains organizers is shown created by the competition [99]. Robot Competition intentionally in large open spaces vision for depth estimation somewhat orthogonal sensor characteristics to test the robot’s ability an open area, which was to navigate stereo have In [ 1081, occupancy maps are constructed using [ 37,381. As shown there, sonar and stereo information each other. and thus can complement travels through mapped if it explores and maps unknown Position control based on odometry and map correlation alone (items 1 and 2 above) the terrain. The third mechanism, which arguably has the nature of indoor environments, indoor exploring and mapping that all maps shown in this paper (with the exception of the maps estimation and 10(b)) works well if the robot robot concerning relies on a restrictive proven extremely valuable when autonomously environments. Notice shown in Figs. 5(a) mechanism. have been generated using [ 1041, but fails to localize this position assumption large-scale terrain A difficult challenge ing maps-is thereof are insufficient for any localization method-and for learn- a large circular environment, where local sensor readings or short histories location. Fig. 10 depicts such an in fact any approach to disambiguate the robot’s S. Thrun/Artijicial Intelligence 99 (1998) 21-71 35 . 32.2 meters Fig. 9. Grid-based map, constructed at the 1994 AAAI Autonomous Mobile Robot Competition with the techniques described here. corridor it reaches than 160m of unmapped is more accurate and has an increased angular environment. Here the robot starts in a corner of a circular corridor, and after traversing more the same location. The map shown in Fig. 10 has been obtained using a laser range finder to measure proximity. The laser instead of range finder W), which leads to more accurate results. In nine experiments using sonar to generate an accurate map in five out of five cases, and laser sensors, laser was found whereas too error). Fig. 10(b) depicts a map erroneous constructed without in two out of four cases, rendering maps to be of practical use ( 1 m translational the position correction mechanisms that were slightly described here. localization resolution failed sonar (0.5” 2.4. Dynamic environments to sensor integration assumes in time r and 7’ have the same weight that the world is static. In particular, in r’ by a large temporal mar- . . . , dT)), even if r precedes in dynamic environments more recent readings carry more information at any two different points Our basic approach readings Prob(occ,,,Is(‘), sensor determining gin. Intuitively, than more distant ones. This intuition individual factor. sensor readings exponentially can be incorporated by decaying the influence of over time. Let y with 0 < y < 1 be the decay 36 S. Thrun/Artijicial Intelligence 99 (1998) 21-71 Fig. 10. (a) The challenge: A cyclic map of the size 60 by 20 meters, built using a laser range finder (instead the same data without position control. Some of the floor in of sonar sensors). the testing environment in the robot’s odometry. Most existing topological map building methods should have great difficulty building such maps, since most sensor measurements look alike and am highly ambiguous. is made of tiles, which (b) A map obtained significant introduces from error S. ThrudArtijcial Intelligence 99 (1998) 21-71 3-l Fig. 11. A dynamic environment. (a) The robot moves through aa open door. (b) The door is now close, in response to which the robot changes its map and takes a different route. Prob(,occ,,~Is”),s’*‘, . . . ,s(r)) Prob(occJs(‘)) 1 - Prob(occX,Y(s(‘)) T x r-J,,-, 7=2 Prob(occX,Y]s(7)) 1 - Prob(occ,,,,) --I 1 - Prob(occ,,,]s(7)) Prob(occ,,) > . than more distant ones. . . . , dT)) from If y is chosen appropriately, taking This modilied update rule (cf. ( 1)) weighs more recent sensor readings exponentially this approach prevents stronger Prob(occ,,,]s(*), the occu- pancy probability Prob( occ,,,, I,(‘), . . . , dT)) may never attain its extreme values zero or one, in practice of digital computers. suggest that a robot robot never can be due to the non-deterministic resolution to avoid these extreme values, since they a the occupancy of a grid cell-which nature of its sensors. the occupancy values may do so due to the limited numerical It is generally desirable is absolutely its extreme values. While certain about in theory, built map for navigating Fig. 11 (depicts results obtained previously door is closed. After acquiring in front of the door shown circular motion planning (described below) change set to 0.9999. This decay factor is used in all our experiments. in a changing environment. Here the robot re-uses a the indicating by the in Fig. 11 (b), is revised and the the motion direction accordingly. Here y is that the door is closed, the model from our lab into the corridor. In Fig. 11 (b), some evidence routines The reader may notice that our approach does not fully model dynamic environments; is incapable of detecting such as doors, which are either open or closed once a door has been receives it merely adapts to changes. For example, our approach instead, dynamic regularities and which change recognized evidence is largely an open research area. Schneider, the robot using metric representations to the contrary. Modeling dynamic environments their status perpetually. As a consequence, [ 951, has extended our it will be assumed in his M.Sc. thesis to be closed until in the environment, as being closed 38 S. Thrun/Arh$cial Intelligence 99 (1998) 21-71 approach the auto-correlation regions successfully however, to detect certain types of regularities. His approach analyzed it to reliably over time, enabling of interpretations in the map whose occupancy changed applied to detecting dynamic objects at static it is not able to model moving objects such as humans. the variance and identify and label regularly over time. His approach was (such as doors); locations 2.5. Exploration acquire maps, To autonomously is to let the robot always move on a minimum-cost (greedy) exploration to the nearest unexplored grid cell. The cost for traversing a grid cell is determined by its occupancy value. The minimum-cost path is computed using a modified version of value iteration, a popular dynamic programming the robot has to explore. The : Unexplored grid cells are initialized with 0, explored ones with 0;): algorithm [4,45,86] idea for path (i) Inithization. V- XJ 0 if (x, y) unexplored, cc if (x, y) explored (ii) (iii) Fig. Grid cells are considered been updated at least once. Otherwise, Update loop. For all explored grid cells (x, y) do: explored if their occupancy they are unexplored. value Prob(occX,Y) has V w - min (=-l,O,l .+-l,O,l, { V,+S,~+E + Prob ( occX+~,Y+~ ) 1. to this neighbor steps with n being long before value iteration converges. the value of all explored grid cells by the value of their (just like A* [78] or [ 61) . Cost is here equivalent to the probability that a grid cell (x, y) is occupied. The update rule is iterated. When the cumulative cost for moving cell. However, control can be generated at any time Value iteration updates best neighbors, plus the costs of moving Dijkstra’s shortest path algorithm Prob(occX,J,) the update converges, each value VX,! measures to the nearest unexplored [27], of V requires O(n*) Determine motion direction. To determine where generates descent direction significant time intervals and is fully interleaved with updating V. 12(a) shows V after convergence using the map shown in Fig. 12(b). All white costs V for moving indicates function (x, y), the robot is done by steepest the motion of V which requires in regular cheap; computation. Determining in V, starting is computationally are no local minima. For every point In the worst case, the computation path at the actual that all minima of the value robot position. Determining the number of grid cells. to the unexplored. This the nearest unexplored the motion direction it is the computation and the grey-level to explore next, a minimum-cost the cumulative point. Notice to unexplored regions-there is done in V leads to the nearest unexplored iteration plain value is too inefficient area. in real-time. Strictly speaking, the basic value to allow iteration algorithm the robot to explore can only be applied regions are unexplored, towards correspond steepest descent Unfortunately, S. ThndArtijicial Intelligence 99 (1998) 21-71 39 happens when increases, previously iteration quickly decreases values (which increase does not frequently is because if the cost function increasing values can be arbitrarily requires if the cost function updated). This might becamme too small. While value large, iteration whenever since the map is updated almost constantly. To avoid complete further the efficiency of the approach, increase following way: slow that the value function be initialized the cost function-is the map-and al,goritbm thus updated. This [ 1041. Consequently, the map is adjusted values V that are too the basic value i) (Step inefficient, completely is very the basic algorithm was extended and to in the re-initializations, (iv) Selective reset phase. Every too small are identified and reset. This is achieved by the following is iterated: time the map is updated, only values Vx,y that are loop, which For all explored (x, y) do: V x,y - 00 if KY < min I+-l,O,l, c=-LO,1 { VX+&Y+5 + prob( occJZ+5.y+5 ) 1. that the remaining V,,Y-values are not affected. Resetting the value table to the value iteration algorithm described Notice in this way bears close resemblance above. (VI BoJunding box. To focus value iteration, a rectangular bounding box [ xhn, n-1 x [YIni”, Ymlxl is maintained This box is easily maintained iteration faster. focuses only on a small fraction of the grid, hence that contains all grid cells in which Vx,r may change. iteration update. As a result, value it converges much in the value Notice the bounding sweeping determines box bears some similarity that [ 721. Prioritized sweep- the ing expected benefit of each particular update. Bounding boxes are a cheap imple- mentation lies in the fact that rectangular arrays can be processed very efficiently; however, they are less selective, which to prioritized typically sweeping. the total number of updates when compared the order of updates according idea. Their advantage to prioritized of the same increases depicted exploration point. Notice the cumulative costs for moving in the environment and the grey-level regions-there simply amounts that all minima of the value function the value function indicates Fig. 12 shows a snapshot of autonomous shows in after convergence. All white regions are the to are no local minima. Once value iteration converges, greedy in the value function, which can be done Fig. 9. Fig. 12(a) unexplored, nearest unexplored unexplored exploration very efficiently. The right plot, Fig. 12(b), exploration. At the current point, the robot has already explored the major hallways, and is about to continue exploration of a room. Circular motion, such as found in the bottom of this plot, occurs when far away (=same that the complete exploration costs) or when the planner has not yet converged. Notice run shown here took less than 15 minutes. The robot moved constantly, and frequently reached a velocity of 80 to 90cm/sec map shown (see also [9,36,108] 45 minutes. the path taken during autonomous in Fig. 4 required approximately regions are about equally towards correspond to steepest descent ). The exploration two unexplored sketches of the 40 S. Thrun/Artificial Intelligence 99 (1998) 21-71 exploration. Fig. 12. Autonomous (a) Exploration values V, computed by value iteration. White regions are completely unexplored. By following the grey-scale gradient, the robot moves to the next unexplored area on a minimum-cost path. The large black rectangle indicates the global wall orientation f&u. (b) Actual path traveled during autonomous exploration, along with the resulting metric map. is a very general procedure which has several properties that make it Value attractive iteration for real-time mobile - Any-time algorithm. As mentioned robot navigation: above, value iteration can be used as an any- regardless of the better [27]. Any-time are able to make decisions the robot to explore iteration pre-plans time planner algorithms the time spent for computation. The more time that is available, however, the results. Value iteration allows locations. - Full exception handling. Value the current This is because V is computed react if it finds itself to location of the robot. Consequently, location, and generate appropriate motion directions without be in an unexpected any additional in our approach, effort. This is particularly since the robot uses a fast routine for avoiding collisions with obstacles, which may modify the motion direction commanded by the planner at its own whim - Multi-agent [ 361. exploration. Since value iteration generates values for all grid-cells, the robot can quickly in the map, not just for every location computational for arbitrary in real-time. important robot it can easily be used for collaborative multi-agent exploration. - Point-to-point approach is used for point-to-point navigation [ 1041. navigation. By changing the initialization of V (Step i), the same S. Thrun/Art@cial Intelligence 99 (1998) 21-71 41 converges approximately the map shown from scratch using real-time planning problem, on the location of the target point(s). 2 to 10 seconds on a SUN Spare station. Planning In grid malps of the size 30 by 30 meters, optimized value iteration, done from scratch, requires point-to- in Fig. 4, which due to its many point navigation requires up to 15 seconds small corridors poses a difficult reset the selective depending step does not reset large fractions of the map (which value situation), for the size maps shown here. For exam- iteration ple, typically under a tenth of a in Fig. 9 lies second. maps are sufficient similar planning ing intrinsic Due In what follows we will describe our approach grid maps. that grid-based (and iteration in the number of grid cells, impos- in large-scale domains. to large environments. robot navigation. However, value time quadratic in less than a second in the map shown In the light of these results, one might be inclined topological maps scale much better that prohibit efficient planning to their compactness, In cases where for autonomous is the common the planning for deriving approaches) topological limitations to think requires scaling graphs from time 3. Topological maps 3.1. Constructing topological maps in Fig. 13, is simple but effective: Grid-based maps are decomposed Topological maps are built on top of the grid-based maps. The key idea, which visualized a small set of regions passages, which are called critical environment. correspond. map. The partitioned map is into separated by narrow passages such as doorways. These narrow a skeleton of the into an isomorphic graph, where nodes regions. This graph is the topological lines, are found by analyzing is mapped to regions and arcs connect neighboring The precise algorithm works as follows: (i) Thresholding. Initially, each occupancy value value is below in the occupancy grid is thresh- are considered (denoted the threshold (denoted by C). All other points are considered occupied olded. Cells whose occupancy free-space by c). (ii) Voronoi diagram. For each point in the occupied nearest point(s) sis points of (x, y), and the distance between clearance of (x, y). The Voronoi diagram that have at least two different free-space depicts a Voronoi diagram. in free-space space c. We will call (x, y) and (x, y) E C, there is one or more the ba- the in basis-points. Fig. 13(b) [ 16,59,6 1,801 is the set of points (equidistant) these points its basis points (iii) Critical points. The key idea for partitioning the free-space locally. points”. Critical points clearance two properties: all points the critical point (a) (x, y) are points on the Voronoi diagram In other words, each critical point it is part of the Voronoi diagram, and (b) in an c-neighborhood of (x, y) is not smaller itself. Fig. 13(c) illustrates critical points. is to find “critical that minimize (n, y) has the following the clearance of than the clearance of 42 S. Thrun/Art@cial Intelligence 99 (1998) 21-71 Voronoi diagram 0 critical point I 0 critical line . . . . . . . . I . . . . . . . . . . . . . . . . . . . . :’ -q _.: / ; , . . . . . . . . . . . LU r..ti 0 topological graph v1 \ /V3 I / v2\v4/v5 Fig. 13. Extracting lines, (e) topological regions, and (f) the topological graph. topological maps. (a) Metric map, (b) Voronoi diagram, (c) critical points, (d) critical (iv> (v> lines are obtained by connecting (cf. Fig. 13(d)). Critical points have exactly Critical lines. Critical its basis points (otherwise lines partition Topological graph. The partitioning region corresponds an arc. Fig. 13(f) shows an example of a topological graph. they would not be local minima of the clearance into disjoint the free-space is mapped regions to a node in the topological graph, and each critical into an isomorphic graph. Each line to each critical point with two basis points function). Critical (see also Fig. 13(e)). S. Thrun/Art@cial Intelligence 99 (1998) 21-71 43 the metric map is motivated to the robot is forced line, through a critical lines for decomposing that is considerably First, when passing the loss in performance The particular definition of critical by two observations. move through a region regions. Hence, to the grid-based map) (as opposed are more likely blocked by obstacles reader should note that these arguments are somewhat up with mathematical Fig. 14 illustrates proofs. narrow, when compared inferred by planning using to the neighboring the topological map smaller. Secondly, narrow regions is considerably (such as doors, which can be open or closed). The intuitive, as they are not backed the topological map extracted from the grid-based map depicted (the critical points are on the intersections Fig. 9. Fig. 14(a) depicts the critical the Voronoi diagram). The resulting partitioning in Figs. 14(c) 67 regions. Additional and 16. These maps are partitioned (Figs. 16(c) and 16(d)). in shows the Voronoi diagram of the thresholded map, and Fig. 14(b) lines and lines graph are shown into in Figs. 15 into 22 (Figs. 15(c) and 15 (d) ) and 39 regions examples of metric and topological maps are shown the free-space has been partitioned and 14(d). As can be seen, and the topological of critical 3.2. Planning with topological maps The compactness of topological maps-when efficient planning. To replace compared to the underlying grid-based the grid-based planner by a topological is split into three sub-problems, all of which can be map-facilitates planner, tackled separately and efficiently. the planning problem (i) Topological planning. First, paths are planned using the abstract, topological ma.p. Shortest paths the. standard graph search algorithms, shal’s shortest path algorithm implementation, in the topological maps can easily be found using one of such as Dijkstra’s or Floyd and War- In our in Section 2.5. a triplet we used the value iteration approach described [ 61, A* [ 781, or dynamic programming. (ii) Triplet planning. To translate topological plans into motion commands, paths for each set of three adjacent (metric) topological for each triplet plan. More specifically, let Tl , T2, . . . , T, denote the triplet planner generates in Ti+2 in the grid-based map, under planner generates the reg:ions in the topological to a region plan generated by the topological planner, where each T corresponds (I;, Ti+l, z+2) (i = 1,. . . , n - 1 and Tn+l := in the map. Then, shortest paths to the T,,:I, and each grid cell in z, cost-nearest that the point robot exclusively moves through Ti and T+I. For each triplet, all shortest paths in 7;.+2 is marked can be generated iteration goal point in Section 2.5), and as a (potential) to propagate costs through Ti+l to Ti just as described value is used iteration into in Section 2.5. Triplet plans are used concrete motion commands: When to the triplet plan obtained the robot crosses the boundary of two topological the triplet planner can be used to move the robot to the region goal location. the robot is in Tip it moves according ,+2 ). When T. the next triplet plan (Ti+l , Ti+z, Ti+3) is activated. Thus, (just like the unexplored points in a single value run: Each point the topological the constraint to “translate” for (Z, K+l, that contains regions, plan the 44 S. Thrun/Art.@cial Intelligence 99 (1998) 21-71 (a) Voronoi diagram (b) Critical lines (c) Regions (d) Topological graph (e) Pruned regions (f) Pruned topological graph Fig. 14. Extracting the topological points and lines, (c) regions, and (d) the final graph. graph from the map depicted in Fig. 9: (a) Voronoi diagram, (b) Critical (e) and (f) show a pruned version (see text). S. Thrun/ArtiJcial Intelligence 99 (1998) 21-71 45 (a) Grid-based map (b) Voronoi diagram and critical lines (c) Region:s (d) Topological graph (e) Pruned regions (f) Pruned topological graph Fig. 15. Another example of an integrated grid-based, topological map. 46 S. Thrun/Arti&ial Intelligence 99 (1998) 21-71 (b) Voronoi diagram and critical lines (c) Regions . . (d) Topological graph (e) Pruned regions (f) Pruned topological graph Fig. 16. A third example. S. Thrun/Artifcial Intelligence 99 (1998) 21-71 41 ‘I’he reason for choosing triples instead of pairs of topological the robot regions takes is into in q+l, instead of moving to the nearest grid cell that account where to move once T;+l is reached, and approaches T;+, accordingly. A “duplet planner” would always make the robot move to the nearest grid cell in region. If this grid cell was temporarily blocked the immediate next topological the robot would be stuck. This is not the case for the triplet (e.g., by a human), planner, since its “goal” is reached upon entering the middle region. The motion generated by the triplet planner is generally smoother. (iii) Fimal goal planning. The final step involves moving is done with value which again for this final planning depends on the size and the shape of the final topological location of the goal. iteration. Notice that the computational to the actual goal location, cost it region T,,, and the step does not depend on the size of the map. Instead, problems. For example, is that all computation the map shown can be done off-line, The key advantage of this decomposition for all path planning is in Fig. 14, which the most complex map investigated here, has 67 topological nodes. Thus, there are only to be reversible, 67 x 66 = 4422 topological plans. Since mobile robot actions are assumed topological plans are symmetric. Thus, only half of them must be memorized. The map 200 triplets, for which all triplet plans are easily computed. Thus, also has approximately by decomposing in a topological planning problem and a triplet planning problem, planning and by pre-computing amounts and triplet plans, path and memorizing to table-lookup. all topological the planning problem, complexity of the planning does not change that the number of topological it should be noted that the topological decomposition However, (worst-case) constant speed-up. Assuming the size of the grid-based map, and assuming depend on the size of the map, topological planning using value iteration in the size of the environment putational and hence fact, computing the grid-based map, so that the topological in the approach proposed here. Although both-regular in the worst case logical planning-require the fact that topological maps are orders of magnitude more compact ative difference of several orders of magnitude. This huge difference practice. the so that all one can hope for is a regions grows linearly with that the size of each region does not is quadratic (just like planning using the grid-based map). The com- in the length of the path In in the size of component and topo- in the size of the world, to a rel- leads in is important complexity in the size of the map), as is the computation triplet plans and all final goal plans of all final goal-plans. is the only non-linear grid-based planning all triplet plans time quadratic of computing is linear planner is still linear all 4. Performance results Topological maps are abstract representations representations and abstract problem solving, of metric maps. As is generally the there are three cri- loss, and efJ the appropriateness of the abstraction: consistency, case for abstract teria for assessing ciency. 48 S. Thrun/Artificial Intelligence 99 (1998) 21-71 0 a 0 b Fig. 17. Two examples in which the approach presented here yields suboptimal results. In both cases, the problem is to plan a path from “A” to “B”. (a) The topological planner will chose a sub-optimal path, since it leads only through two intermediate regions (as opposed to three). Such situations occur only if the topological graph contains cycles (which correspond to isolated obstacles in the thresholded grid-based map). (b) The triplet planner fails to move the robot on a straight line, since it looks only two topological regions ahead. (i) Consistency. Two maps are consistent with each other if every solution (plan) in one of the maps can be represented as a solution (ii) Loss. The loss measures the loss in performance in the other map. length), (path if paths are planned map. in the more abstract, topological map as opposed to the grid-based (iii) ESJiciency. The efficiency measures the relative time complexity of problem solving (planning). Typically, when using abstract models, efficiency performance loss. is traded off with consistency and 4.1. Consistency the topological map, using (in other words, The topological map is always consistent with the grid-based map. For every abstract in the has the downward solution property in the grid-based map has an abstract (upward solution to be a trivial property of the in the literature generates plan generated grid-based map [ 931) . Conversely, representation property). Notice topological maps, not every topological maps that are consistent with their corresponding metric representation. the abstraction every path that can be found appears approach proposed there exists a corresponding plan consistency in the topological map is a admissible that although which plan 4.2. Loss Abstract representations lack detail. Thus, paths generated from may not be as short as paths found using the metric representation. topological maps For example, S. Thrun/Art@cial Intelligence 99 (1998) 21-71 49 Fig. 17(a)’ shows a situation basically because of the different sizes and shapes of the topological depicts a s,ituation determines the motion direction based on a limited the triplet-planner would give non-optimal planner would chose a detour, regions. Fig. 17(b) results, since in which a topological look-ahead. in which it the increases compared topological To measure experiments, In other words, for each of the the corresponding three maps shown loss, we empirically for the map shown the average performance in Table 2. For example, in a metric map with those generated using a total of 23,881,062 that were generated topological map each using a different systematically with an evenly-spaced shortest paths ap- in Figs. 9, 14, 15, and 16. The results in Figs. 9 and 14(d), starting and grid. Plan- the length of the paths by an average of length of a shortest path is 15.87 meters, which the topological is planned using if robot motion plan- to suboptimal action choices ( 1.42%) the It is remarkable in our experi- that the For found proach, are summarized we conducted goal position ning with 3.24%. the average increases on average by 0.51 meters are due map. 0.28 meters ner, and 0.23 meters made by the triplet planner. topological experiments was 11.98 meters, which was observed ments. Such shortest route example, when moving plan tour. region 58 to region 4 in Fig. 14(c), the foyer, which that we found in 6 of the 23,881,062 falsely assumed in 83.4% of all experiments, largest from ((58,50,39,31,18,7,2,8,3,4)) the topological is clearly a de- (region 7 and 18 in Fig. 14(c)). loss was observed when the topological planner a loss-free plan. The are due that the large “foyer” the topological the remaining to suboptimal choices by (1.82%) through through planner returns leads loss led Fig. 18 (a) shows the average can be seen there, for shorter paths the loss is a monotonically the path length. As the path length exceeds 22.5 meters, the latter observation given the :size of the environment, length of these paths any further. loss as a function of the length of the shortest path. As function of the loss decreases. We attribute the longest possible paths the thus even a topological planner cannot to the fact that these paths are among increasing increase The emlpirical there are fewer cycles loss for the maps shown in Fig. 15 and 16 is even smaller, partially in Table 2, the average in those maps. As summarized because loss for the map depicted loss for the map shown in Fig. 15 is 1.19%, and the average in Fig. 16 is 1.3 1%. Figs. 19(a) and 20(a) depict the loss as a function of optimal path there are no cycles in the second map (Fig. 15), the topological length. Notice because the shortest path). planner always produces to suboptimal Consequently, action choices attributed in Fig. 16 is mostly due to by the triplet planner. The 1.31% loss for the map shown loss infer an additional ( 1.23%), although the triplet planner of 0.03%. Graphs loss as a function of shortest path length are illustrating shown the optimal plan (i.e., a plan that includes the 1.19% loss can be exclusively in Figs. 19(a) and 20(a). rare topological detours the relative investigated 14(f), the original We also Figs. 14(e), pruning single region, of nodes even more compact 15(f), 16(e), 15(e), topological map: Pairs of adjacent representations, such as those shown in and 16(f). These maps were obtained by into a series (such as nodes 4, 13, 21, and 24 in regions are combined subsumes if neither of them has more than two neighbors. Pruning in long corridors into a single node 50 S. Thrun/Artificial Intelligence 99 (1998) 21-71 Table 2 Results (regular maps) grid cells resolution cycles topological triplets regions average shortest path length (using grid-map) meters grid-cells topological meters regions (using topological map) average loss due to topological due to triplet-planning total loss planning total experiments complexity grid-based planning planning (factor) . topological difference Table 3 Results (pruned maps) grid cells resolution cycles topological triplets regions average shortest path length (using grid-map) meters grid-cells topological meters regions (using topological map) average loss due to topological due to triplet-planning total loss planning total experiments complexity grid-based planning topological planning difference (factor) map I (Figs. 9 and 14) map 2 (Fig. 15) map 3 (Fig. 16) 27,280 15cm 8 61 626 15.87 94.2 7.84 16.38 1.82% 1.42% 3.24% 23,88 1,062 2.56. 4.89 lo6 525 ld 20,535 1Ocm 0 22 184 9.42 84.8 4.82 9.53 0.00% 1.19% 1.19% 1,928,540 1.74. 106 106 1.64 104 19,236 15cm 1 39 352 11.55 68.5 6.99 11.65 0.03% 1.28% 1.31% 4.576.435 1.32. 4.83 lo6 273 103 map 1 (Figs. 9 and 14) map 2 (Fig. 15) map 3 (Fig. 16) 27,280 15 cm 8 40 222 15.87 94.2 6.12 16.51 3.11% 0.94% 4.05% 23,881,062 2.56. lo6 245 1.05~104 20,535 1Ocm 0 10 30 9.42 84.8 3.25 9.45 0.00% 0.37% 0.37% 1.928.540 1.74. 106 32.5 5.36. lo4 19,236 15cm 1 19 166 11.55 68.5 4.65 12.20 0.83% 5.22% 6.05% 4576,435 1.32. lo6 88.4 1.49 104 S. ThrudArtijicial Intelligence 99 (1998) 21-71 51 Loss (mapl) 0% 300 600 906 1200 1500 1600 2100 24W 2706 3000 3300 3600 3900 42f shortest path length (a> Loss (pruned map 1) 6.% 5.% L 4.% z xi = 3.% 2.% I.% 0% 300 600 900 1200 ISW 1600 2100 2460 2700 3000 3300 3600 3900 42 shortest path length (b) topological map. They grey portion of the loss is due to suboptimal action choices by the topological for the map shown in Figs. 9 and 14, using (a) the regular and (b) the Fig. 18. Loss for paths generated pruned planner, while the white portion is due to the triplet representation. in Figs. 14(c) certain end-nodes and also eliminates and 14(d)). (such as the region 17, Figs. 14(,c) and 14(d)), the 56, and 66, in 23&X1,062 loss for t.hese pruned maps are summarized the average experiments loss was 0.64 meters inferred by the unpruned graph. For the map shown in Figs. 15(e) and 15(f), pruning actually reduced is only 31 .O% of the loss inferred by the overall The results of experiments measuring the pruned graph depicted in Figs. 14(e) and 14(f), in Table 3. For example, (0.03 meters), which (4.05%), which loss to 0.37% is 26.1% the loss larger using than 52 S. ThrudArtifcial Intelligence 99 (1998) 21-71 Loss (map 2) 7.% 6.5% 6.% 5.5% 5% 4.5% 2 4.% ,o 3.5% 3 3.% 2.5% 2.96 1.5% 1.x 0.5% 9% __p,ooocll,~_oo~_~o MO 699 9w 1290 1500 1599 2im 2499 27~ shortest path length (4 Loss (pruned map 2) shortest path length @I Fig. 19. Paths generated map. for the map shown in Fig. 15, using (a) the regular and (b) the pruned topological the pruned map shown the unpruned map. Finally, an average detour of 5.18% (0.70 meter), which is significantly loss inferred by the unpruned map-this is pruned and 20(b) The shape of the curves here are similar Fig. 19 illustrates that pruning map. to those obtained reduces into a single once again topological depict entity in Figs. 16(e) and 16(f) produces than the is due to the fact that a long corridor larger (361%) difference in Figs. 16(e) and 16(f) . Figs. 18 (b) , 19(b) , length. for the unpruned maps. second the loss for the cycle-free the loss for the pruned map as a function of optimal path S. Thrun/ArtQicial Intelligence 99 (1998) 21-71 53 Loss (map 3) F .ll~ll~~n~_o_o_ll~ooc 600 900 1200 1600 1600 2100 2400 2700 3000 shortest path length (3) Loss (pruned map 3) - 0 360 6.91 6.1 7.x 6.5% B.% 6.6% 5% 4.6% 2 4.% 8 3.6% = 3.% 2.6% 2.% 1.6% 1.1 0.6% 0% 2400 2706 3000 shortest path length (b) Fig. 20. Paths generated for the map shown in Fig. 16, using (a) the regular and (b) the pruned topological map. We conclude that can decrease regions, which pruning topological the smaller number of regions planning topological is cycle-free, environment there exist only a single maps, since the increased Empirically, level, the pruned graph the loss of the triplet planner due to the increased improved typically yields is generally more compact. On the one hand, size of the triplet plans. On the other hand, loss on the If the induces additional the environment in pruned maps usually if) the topological plans are identical if (and only contains cycles. for pruned and unpruned each pair of points. level when pruning a map was found plan between loss on the topological topological 54 S. Thrun/Art$cial Intelligence 99 (1998) 21-71 to outweigh reduce the overall loss when the map is free of cycles. the reduction of loss on the topological level. Pruning was only found to 4.3. Eficiency The most important advantage of topological planning lies in its efficiency. Value the map shown in Fig. 9 is roughly equivalent to the length of the shortest path, which in the number of grid cells. For example, iteration happens of value example map is on average 94.2 cells. Thus, in this example map, value iteration on average 2.57 e lo6 backups. Planning using orders of magnitudes more efficient. The average the topological graph shown on average 525 backups. Notice metric map other words, planning three orders of magnitude, while inducing a performance is quadratic to possess 27,280 explored cells. In the average case, the number of iterations in our iteration requires is several is 7.84. Since requires the in efficiency! Planning than planning with the topological map. In than level is 4.89 . lo3 more expensive on the topological in Fig. 14 (d) has 67 nodes, the enormous gain the efficiency by more topological path length topological planning loss of only 3.24%. the topological representation increases using reduction The computational is even more dramatic for the pruned maps, such as the in Figs. 14(e) and 14(f). This map consists of 40 nodes, and the average is 1.05 . lo4 more path length than twice as efficient as the results loss induced by the pruned map is 25% larger one shown topological efficient planning with shown in Tables 2 and 3, the performance than the loss inferred by the unpruned map. the unpruned map. However, as can be seen by comparing than planning with the metric map, which is 6.12. Consequently, topological planning is more The map shown in Fig. 15, which is smaller consists of 20,535 explored grid cells and 22 topological than the other maps but was recoded with regions (pruned map). On average, paths in the grid-based map resolution, a higher (unpruned map), or 10 regions lead through 84.8 cells. The average map), or 3.25 planning problems). Here the complexity first example. Planning than planning with increases exhibits a smaller and efficiency. to 5.36 . lo4 when using it is superior using loss, (pruned map, averaged over 1,928,540 length of a topological plan is 4.82 (unpruned reduction systematically is even more significant generated path than in the the metric map is a factor of 1.64 . lo4 more expensive factor the pruned map loss the unpruned map. This since in both categories: the pruned map. Clearly, version to the unpruned the topological map when using Similar complexity map). While investigated maps as well. are obtained for the map depicted results the planning is reduced by a factor of 4.83 . lo3 (unpruned map), or 1.49 . lo4 (pruned for the particular maps for other these numbers here, we conjecture that the relative quotient is roughly correct in Fig. 16. Here and only correct are empirical It should be noted that in our implementation, there are only 2,211 different plans in a lookup every topological plan is pre-computed table. Our most complex example maps contain 67 nodes, If to looking up the that are easily generated and memorized. amounts topological planning problem arrives, and memorized hence a new path planning correct plan. S. ThrudArtijcial Intelligence 99 (1998) 21-71 5s 5. Related work reviews The current approach draws on existing work on various aspects of AI and robotics. local- It points out its main to the work presented here and summarizes in the areas of ( 1) map learning, This section ization, various differences/commonalities contributions. (3) motion planning, related approaches learning automata. (4) abstraction, and (5) (2) 5.1. Mapping The key contribution metric and topological learning maps from sensor data focuses on a single where topological maps are sometimes enriched by local metric of this paper representations. is a new map learning method The vast majority of successful type map, metric or topological, information. integrates that approaches to to learn increases are used [ 3 1,32,73] in numerous to occupancy [ 8,9,41,95,119]). from previous ones and since been adopted Our approach differs the mapping - Metric approaches. Occupancy grids, which form the basis of the metric compo- to mobile the most successful metric approach to date. Occupancy grids have originally been proposed by robotic sys- in that from sensors val- in the context of their neighbors, [ 1041. Occupancy grids, how- [ 151 proposed [23] pro- trees to represent different, alternative models of filters and Bayesian methods are used for presented an approach system, using [ 1061, an [ 551, constructs in temporal inspired by the and its strong nent of our approach, are probably robot map acquisition Elfes and Moravec tems (e.g., neural networks ues; as a result, sensor readings are interpreted which the accuracy of the resulting maps ever, are not the only metric representation. Chatila and Laumond to represent objects by polyhedra posed the environment. handling uncertainty. Lu, Milios and Gutmann that b’asically stores raw proximity an alignment procedure award-winning geometric maps incrementally sequences work presented here; commitment more brittle - Topological of sonar measurements. its inability to parallel/orthogonal than the current approach. approaches. Topological by concatenating wall segments detected Jeeves’s design was strongly environments robot at the 1996 AAAI Mobile Robot Competition walls make its software approach significantly sensor data in a metric coordinate laser range scans. Jeeves to construct probabilistic in a global coordinate that compares multiple In his work, Kalman to handle dynamic frame. Cox approaches [ 40,66,67] represent maps as topological to actions for moving topological graphs are enriched by local metric to facilitate to another. Often, to places and arcs correspond graphs, where nodes correspond from one place information Among and I3yun that maximize Choset’s work, who refers to such as points as “meet points” place:3 are connected by arcs, which contain metric information from one place the navigation successful work In their approach, to another. The approach disambiguates the number of equidistant obstacles in this field topological the earliest [ 58,591. (a similar from one place to another. is an approach by Kuipers places are defined as points in idea can be found [ 16-181). Topological for locally moving different places by local 56 S. Thrun/Art@cial Intelligence 99 (1998) 21-71 sensor of neighboring to reliably However, simplifies information (taken at a single node or, if necessary, In systematic nodes). large maps of indoor environments, simulations, at a small number this approach has been found even if sensor data is noisy. the robot was equipped with a compass, which learn in these experiments the localization problem significantly. representation in which nodes correspond A similar approach was proposed by MatariC [ 681. Her algorithm acquires to pre-defined topo- land- topological entities are connected to help track of the location of the robot. The approach was evaluated on a physical to maintain an exact posi- logical maps of the environment marks such as straight wall segments. Neighboring by links. The topological keeping robot and was found to be robust in practice. Its inability tion estimate of landmarks vere difficulties from different directions limitations. Moreover, since the recognition robot motion, the approach might have se- them scaling involves previously visited imposes intrinsic in this approach in recognizing locations when approaching is enriched by distance (e.g., T-junctions). information Shatkay and Kaelbling observations landmark [ 531, who investigated sketch of the environment such assumption along with some landmark feature of their approach Welch algorithm result, not properly “additivity constraint,” [ 871) that proposed a method topological map from [97]. Their work extends work by Koenig and Simmons the problem of learning if a topological is readily available. is made. Their approach considers In Shatkay and Kaelbling’s work, no topological topological maps information learns local information to disambiguate is the use of a recursive estimation that can refine position estimates backwards routine different locations. A key (the Baum- in time. As a it does It also violates a basic geometric their approach has built fairly large topological maps. Unfortunately, into account. take rotational error as acknowledged Another approach was proposed by Yamauchi and Beer’s by the authors. [ 1181. Their approach to previously the robot’s distance graph whenever threshold. Metric maps are used for localizing the location of the robot within (using only location to its initial starting the its its into a topological imposes severe scaling below). To determine a cognitively motivated (see discussion the robot has to return close adds places defined places exceeds a certain robot map, wheel encoders), which [ 191 proposed PLAN also learns a topological graph. Nodes the robot enters a “choice point” whenever landmark comes collection of local views identifiable, correspondence fulfilled, due to the small amount of information Other topological an assumption which simplifies see below). problem, into approach to map learning, limitations. Chown and colleagues called PLAN. in the topological graph are created or when new the robot stores a (such as an intersection), its field of view. At each of the nodes, taken there. PLAN assumes that landmarks the problem of place recognition are uniquely (the is usually not In our work, this assumption conveyed by sonar measurements. A key problem past locations metric approaches, information; approaches can be found is to establish learning in [ 76,111,121]. correspondence in map between [ 7,221. This problem difficult during map acquisition. the correspondence is attacked exclusively if the robot is capable of accurately estimating its coordinates is particularly problem current and In through metric in a Cartesian S. Thrun/Art$cial Intelligence 99 (1998) 21-71 51 problem information the correspondence between different places is solved. External sensor is the metric position estimate. Topological approaches often take a different is usually determined based on a short such as PLAN or the approaches in sensor identifiable by the momentary [16-19,X$59,68,121], weaken in local metric topological Some approaches, that different places are uniquely such as those described places and/or to compare, many information than frame, that required The accuracy that the robot uses a specific navigation from neighboring input easier to specific points [58,59,68]. into account. To make sensor require coordinate used to refne route. Correspondence history of sensor measurements. [ 60,761, require input. Oth’er approaches, this assum,ption by taking information approaches the robot moves correspondence higher compact. There seems degree on the robot’s external sensors to a lesser degree on the robot’s odometry when compared willingness becomes a severe scaling disambiguation of places. information Here topol.ogical approaches with sonar sensors most of the environment established based on a short history of sensor measurements can cope with such situations much better, as demonstrated described landmark The in this paper. They can also take momentary just like topological lmformation limitation when momentary In situations in topological to be a tendency is the key in establishing to ignore odometric at a disadvantage, correspondence into account, are typically information (such as meet points) before attempting routine which ensures in metric approaches since required approaches, that topological that to establish is usually topological maps are more rely to a stronger approaches (such as cameras, sonars, compass or GPS), and to metric approaches. The to map building for the sensor input is insufficient in topological approaches such as the one shown in Fig. 10, (odo)metric between current and past locations. since for robots equipped cannot be looks alike and correspondence only. Metric approaches results by the empirical such as information perceptual approaches. techniques large-scale importance [ 151 proposed the first to propose of integrating metric and in occupancy maps, using [ 151. Elfes devised algorithms has long been recognized. Among into a small number of cells that correspond [ 321 and Chatila and Laumond regions for doing so, Chatila and Laumond in a global coordinate robot operation Elfes labeling occupied [ 3 1,321. He also proposed building an algorithm by polyhedra free-space so on. While proposal approaches has been shown to build maps that are significantly field of the robot, due to the difficulty of accurately determining mapping. it to work for large-scale representations, approach, most notably: is highly ambiguous topological maps for scaling up mobile this idea was for detecting and from computer vision topological maps, but he did not devise to represent objects the to decompose to rooms, doors, corridors, and is in a it unfortunately is missing. Neither of the above larger than the perceptual a robot’s position during these idea, and to get integrates both that were previously not available within a single information to build large-scale maps even if sensor in planning. it gains advantages the ability and efficiency indoor environments. Because our approach that our work is the first to fully implement their paper contains most of the principle state where much of the algorithmic frame. From those they propose ‘We believe ideas, detail While this paper was being reviewed, the author developed an alternative which also integrates demonstrated topological and metric mapping to yield additional robustness in complex and large-scale environments. approach [ 1091. This approach has been In 58 S. Thrun/ArtiJicial Intelligence 99 (1998) 21-71 it is applicable to environments with arbitrary wall configurations, and it can large odometric errors backwards in time. particular, correct 5.2. Localization Localization, that is, the problem of finding out where a robot is relative illustrates and/or relative survey by Borenstein the importance locations A recent topic isting approaches. Cox [22] noted in its environment autonomous lem. capabilities”-an to its map, is one of the key problems [7] dedicated and his colleagues of localization and illustrates that “Using sensory information is the most fundamental problem to providing assessment that demonstrates in mobile exclusively to previous robotics. to this the large number of ex- the robot robot with the importance of the prob- to locate a mobile Algorithms for mobile robot localization can roughly be divided into two primary classes of approaches: - Landmark-based for determining erences family of approaches, partially because Examples of successful [5,21,47,51,53,77,79,83,100,117] - Model matching. Model matching landmarks algorithms localization. Landmark-based a robot’s position. approaches use landmarks as ref- It comprises by far the most popular simplicity, computational partially because of its genuine appear to play a major role in human navigation [ 191. can be found for landmark-based and various chapters localization in [54]. approach algorithms in this field and Laumond’s features from the in order to iden- the Among extract geometric those to a model of the environment [9-12,15,22,89,94,104,106,115]. [ 151 extracts geometric is that of Moravec, Elfes, and Chatila and Laumond. such as line to a geometric map. Moravec of occupancy grids, were also the first [ 3 1,741. Just like the approach presented sonar scans and matching in local maps (or hand-supplied) global map to identify errors the development sensor readings and match tify errors in the robot’s odometry earliest work Chatila segments and polyhedral objects which are matched and Elfes, who pioneered to use occupancy here, them odometry. Their approach was recently [ 118,119], who investigated by Yamauchi and colleagues in the environment. Model matching can be computationally because computing ing the space of all possible odometric errors exhaustively. to search the space of odometric errors by hill-climbing they proposed building learned to a previously grids for localization re-implemented with minor modifications to changes very expensive. This is search- It is common practice a single match requires many computations, [ 9,104,118,119]. its robustness from single prohibiting features into falls It differs from previous in the odometric the second class: Our approach metric maps. is differentiable odometric error can be estimated with arbitrary descent map matching using discrete hill climbing 3 100). Our approach works in real-time computer), is considerably It is a version of model matching approaches in that the correspondence error, which has two primary advantages: (sub-grid cell) resolution. using function ( 1) The (2) Gradient that faster. For example, Yamauchi and Langley requires about 20 seconds [ 1191 report (on a DECstation (in the order of 0.3 set on a 1OOMhz Pentium so that odometric errors can be corrected while the robot is in motion. S. Thrun/Artifcial Intelligence 99 (1998) 21-71 59 The vast majority of literature separately. investigates mobile robot mapping robot and mobile is significantly more diffi- [49] filters approach localization for position however, only of their approach the mapping component and mapping using Kalman [ 891. There are several attempts Interleaving mapping and localization localization cult than either task in isolation and mapping. For example, Leonard, Durrant-Whyte, that interleaves ing. In their experiments, demonstrated, in practice. A remarkable proposed by Lu, and Milios implemented to our approach, a previously built map. Unlike ours, it is capable of estimating time, also be localized location. The approaches rely on landmarks if two places are the same if landmarks localization to integrate and Cox [63] proposed a method track- is leaving open the question as to whether these methods work well together to concurrent mapping and localization was recently also [40]. Similar to in [ 1181 the robot can only to its initial return also interleave mapping and localization. They to localize a robot, and also provide strategies for actively finding out i.e., it can use future data to estimate past locations. Yamauchi and Beer interleave [ 66,671. This approach was with minor modifications sensor readings locations backwards In their approach, to regularly and mapping. forcing location, in [ 58,59,68] results for a cyclic environment it corrects bounded odometric by Gutmann, who obtained error by comparing are ambiguous. at its starting localization the robot both To the .best of our knowledge, the maps presented here are among the largest ever using wide-angle (such as a compass or GPS). The significance sonar sensors and without a hardware mechanism built autonomously of this statement for global positioning cannot be should be taken with a grain of salt, since different mapping compared involved. to the different hardware and experimental Also, the reader should note that our approach rests on the orthogonal wall assumption, without which the approach might fail to map environments approaches conditions of the same size. easily due is known. that the current approach The reader should note its initial position when certainty, a small number of localization methods are capable of localizing uncertainty, with a map of the environment the robot It is not able to localize a robot under global un- [ 331. Only a robot under global that the robot be equipped is also known as the “kidnaped and all of those require is only able to localize .a problem which robot problem” [7,10-12,105]. (for obvious reasons) 5.3. Decomposition and robot motion planning The topological map extraction algorithm extracts a coarse-grained the robot motion planning community, representation from such algorithms are re-ferred to as cell decomposition methods [ 61,961. Within artificial intelligence, high-resolution maps. Within usually algorithms of this type are usually referred to as abstraction algorithms [44,52,93]. There i:j a huge body of literature on cell decomposition for robot motion planning. problem in two- and three-dimensional For example, Schwartz and Sharir published a series of five seminal papers in which the (such as ladders and disks) were motion planning the In several of these papers, solved to the approach free-space proposed the robot motion planning graph. Similar cell decomposition problem is divided in this paper. Once can be solved by search over a (finite) into a finite number of coherent the free-space for various simple objects spaces (see [96]). regions, similar is partitioned, 60 S. Thrun/Art@cial Intelligence 99 (1998) 21-71 book assume in Latombe’s the observation can also be found in its general definition, (also called: completeness), that robot motion planning, is available prior to robot operation, if one exists, and returns a failure in the number of degrees of freedom references survey on this topic. Most of these approaches [ 611, which that an in which obstacles focuses on that is, it seeks to establish algorithms which if no solution exists. Research issues of efficiency. A key difficulty arises is worst- to the strong complexity, worst case analysis and robots with many the free- do not at is robots. regions the robot is given little choice as to where to move. The triplet the amount further and methods provides an excellent accurate map of the environment are represented by polygons or circles. Most of the work on motion planning consistency generate a solution on robot motion planning has also addressed from case exponential focus on consistency, O()-type degrees of freedom, existing cell decomposition methods usually decompose space all maximize specifically Therefore, such as doors, planner derives of loss suffered when planning method proposed the other decomposition methods proposed However, our method dimensional higher-dimensional in which locally optimal plans, which have been designed than any of literature. robot in a two- in loss for circular mobile coincide with narrow to mobile efficiency. Our method targeted at minimizing boundaries robot motion planning, for extracting here yields more efficient control of a mobile environment, whereas many of the methods the robot motion planning to the motion of a circular that the cell decomposition listed above are applicable topologically. We believe in odd ways, which, topological maps the performance [ 13,881. Due of topological the run-time to minimize is currently if applied restricted typically spaces. regions robot in Voronoi diagrams have previously been proposed for robot motion planning i.e., they force a robot to move along using Voronoi diagram These approaches use Voronoi diagrams and mo- as the Voronoi diagram. While rests on the assumption [ 16,18,58,59] have extended [ 16,17,58,59,80]. bile robot navigation [ 14,611, road-maps traditional work on motion planning that an accurate model of the environment Choset enables Their approaches ours, their work assumes Choset’s approach Choset’s work is that it can be applied ever, forcing The approach proposed here uses Voronoi diagrams of our knowledge, of increased efficiency. this use of Voronoi diagrams to operate is available this framework [ 61,801, Kuipers and Byun, and to sensor-based motion planning. in the absence of a world model. Just like robots (in that the robot can sense the proximity of nearby obstacles the sensors must be noise-free). One of the striking advantages of spaces. How- trajectories. the robot to move along the Voronoi diagram yields suboptimal in high-dimensional configuration for cell decomposition. To the best is new, yet it has an obvious advantage 5.4. Abstraction and dynamic programming As mentioned above, the topological maps described abstraction most closely programming planning [93] and as such relate to the rich related work on abstraction [4,45,86] and reinforcement learning can be viewed as a model-based can be found algorithm literature on abstraction in this paper are a form of in AI. The in the literature on dynamic In fact, our motion learning [ 2,48,102]. version of reinforcement S. ThrudArrifcial Intelligence 99 (1998) 21-71 61 for the sake of consistency with the literature we will refer to [24,103,1:20]; it as dynamic programming however, is no learning involved at the planning (there In recent years, several researchers have proposed methods problems by decomposing for solving dynamic pro- gramming the state space into smaller subspaces. Dynamic ( 1) to the subspaces and (2) on a more ab- programming stract level, where those subspaces are considered “abstract states.” Existing approaches can roughly be divided and those that decompose the state space by themselves during problem solving. those that rely on a fixed decomposition, is then applied hierarchically into two classes, level). - Fixed decomposition. In solutieons to sub-problems these solutions using a reinforcement through “sub-goals” manually by the human designer. or certain [64,101,116] (using model-free algorithms reinforcement are presented learning), learning algorithm. Sub-problems that first learn then combine are specified functions, which have to be provided sub-reward tecture which At each a nei,ghboring abstraction a non-Markovian Da:yan and Hinton [26] proposed a hierarchical reinforcement recursively decomposes the state space level of control, policies are generated for moving learning archi- into squares of fixed size. to levels of into from one square square. Their abstraction may be inconsistent. At higher perceptual detail is omitted, which can turn a Markovian problem one for which no solution may exist. [28] derived more general algorithms Dean and Lin from one region for solving dynamic pro- algorithms efficiently given arbitrary partitions of the state space. One of gramming their algorithms, called Hierarchical Policy Construction method, generates policies in the state space to another. On a more abstract for transitioning like in Dayan and Hin- level, ton’s work, and dynamic programming (and potentially non-Tvlarkovian) in that it presents some useful formal convergence control. state space. This paper goes beyond most of the work in the field results for learning hierarchical those regions are considered in this abstract states” just is applied “abstract - On-line decomposition. Recently, Kaelbling triangulation that decompose is a version of Delaunay the state space through Voronoi diagrams. and Dean and Lin’s approach, Kaelbling’s states are members of the region defined by the nearest [46] proposed an approach based on a small set of randomly that de- chosen state defines a region and states land- [ 29,391, a family Just like in approach applies are level, an abstract is learned which uses regions as abstract state descriptions. Her de- lies in the places implica- are formally not well understood. However, loss the state space automatically composes “land.mark states.” In her approach, each landmark other than landmark mark state. This approach of methods Daya.n and Hinton’s dynamic programming learned control policy composition the way the state space is decomposed. By selecting resulting decomposition transitions topological tions of these different decompositions when applied in our approach robot navigation, we believe is smaller due to the more sensitive that the performance choice of the cross-region at narrow places of the environment. The practical to the one proposed here. The key difference levels: At the lower lever, local controllers at multiple from one region In contrast, our decomposition landmark states at random, to another. On the higher is somewhat for moving to mobile is similar approach random. 62 S. Thrun/ArtiJicial Intelligence 99 (1998) 21-71 to Kaelbling’s to Dayan and Hinton approach, decomposes robot planning problems approach for robots with excessive degrees of freedom boundaries. A path planning that, similar into sets of smaller problems by selecting a small number of random points can be found in [ 501. Similar recently proposed an approach In his approach, space into a set of rectangles, called parti-game. for decomposing the resolution the boundary is variable. between obstacles and free-space. One of the nice properties of Moore’s approach like most of the robot motion is its ability planning algorithm does not take the actual path length reviewed above. The parti-game into account during motion planning. to deal with continuous of the decomposition It is maximal along [ 261, Moore algorithms spaces, [71] just (skills) regions is found identifies the availability A method which attempts or its geometry. Currently, in [ 1 IO]. The SKILLS approach to find an optimal cell decomposition of assumptions it differs from the work described during problem in the state solving the same policy can be used across different problems space in which on the nature of the state (tasks). This work makes a minimum in this paper in that it does space. For example, of a model and in that it does not rely on a model not assume limits its computational of the environment to use this method to large state spaces. In fact, an initial attempt its applicability a topological description of metric maps was less successful due to for generating this approach can computational its enormous generate decompositions which might infer smaller losses than those described here. the state is specifically between adjacent regions at the narrow parts of the original state space. Neither of the existing [ 1 lo], none of the Obviously, our approach space automatically. tailored topological approaches does this. With the exception of the SKILLS approach above-mentioned between different falls into the second category, The decomposition method proposed that is, it decomposes in this paper into account when selecting approaches regions. In principle, however, robot navigation, towards mobile takes optimality the boundaries the boundaries complexity. by placing complexity [ 26,28,46,7 approaches from a region 11 bear close similarity Several of the aforementioned approach proposed to generate plans level, regions are treated as states, and dynamic programming in this paper: At the base level, dynamic programming for moving to the is planning region. At a employed is applied more abstract abstract model. Such for finding global hierarchical planning taken here in which a triplet planner to the approach solves local navigation problems and the topological planner generates global plans in the more abstract level, the only difference arises from the fact that the triplet planner considers consider only two. By considering smaller, which comes at the expense of increased computational regions, whereas other approaches loss is usually three consecutive three adjacent regions, topological map. On the planning to a neighboring the performance non-Markovian) is very similar complexity. (possibly solutions to this 5.5. Learning jinite state automata Within the AI community, research has been conducted on general methods reverse-engineer (learn) finite state automata based on their input-output behavior that can (see S. Thrun/ArtiJkial Intelligence 99 (1998) 21-71 63 “homing (a routine i.e., a sequence that carries a robot to a unique ). Finite state automata e.g., [3,20: 69,75,81,90,91] the result of sequences of actions. Often, algorithms a pre-given sequence,” machine that uniquely observations the FSA (tlhe environment cope with certain Approaches ( 1) the:y make much fewer assumptions the resulting identify and robot’s sensors) types of stochasticity. are learned by observing (FSAs) capable of learning FSAs require that resets the state of the finite state that produces location), or a sequence require state. Some of these approaches to be deterministic, whereas others can to learning FSAs differ from the approach taken here in and hence can model a much larger variety of automata, and the;y therefore scale poorly (2) to environments of the size considered here. Scaling problems arise primarily because of three reasons: (i) First, both the configuration space and the action space of a robot are continuous. is not a problem of identifying the problem of map learning special-purpose Thus, machine. However, robot FM wolrk described here assumes discrete configuration continuous to a small number of geometrically learning algorithms navigation applicable actions. routines distinguishable spaces, that safely carry locations a finite state the can make that the too, but allows for [ 3,591. The reader should notice (ii) Second, work on learning The work here assumes geometric four times assumption, has to re-discover geometry. relations results an approach finite state automata that the robot operates is usually not based in geometry. for which basic right 90’ in the same state. In the absence of such it is assumes that turning in a plane, apply. For example, (approximately) that reconstructs the laws of motion by experimentation in environments (iii) Third, even if there were only finitely many states (e.g., as many as there are of the size described here, visiting every state is not the robot uses its sensors to infer knowledge grid cells), pra’ctically feasible. about states other than the current one. Existing work on the identification finite state automata states often have to be visited many that each state is visited at least once of (in fact, In our approach, assumes times). The reader should note that our approach whereas methods [ 651. Thus, while our approach system maps, it lacks the generality of the FSA identification identification to learning spatial maps, for learning FSAs are targeted at different, more general problems of is highly specialized is clearly better suited for learning algorithms. 6. Discussion approach This paper proposes an integrated to mapping the two major existing paradigms: grid-based It combines maps are learned using artificial neural networks and Bayes rule. Topological maps are generated by partitioning The major contribution the grid-based map into critical regions. of the current paper is a working method for integrating metric to map learning and topological maps in map learning. Previous successful approaches robot environments. indoor and topological. Grid-based the robot position can be tracked accurately and in real-time 64 S. Thrun/Artificial Intelligence 99 (1998) 21-71 robots were either metric or topological the idea of integrating metric and topological it has not yet been demonstrated larger that are significantly than (sometimes enriched by metric is that this can actually be done range of a the perceptual representations the major contribution of the current paper is that it establishes for learning mixed metric-topological maps, one which is demonstrated is demonstrated in practice. The approach to inherit advantages [ 15,3 1,321, in environments with mobile information). While not new robustly robot’s sensors. Thus, a methodology to work robustly either paradigm: metric and robustly map establish correspondence topological maps the ability fact that topological maps are more compact environments, between topological. large-scale locations at different points in time. It inherits to plan orders of magnitude more efficiently, exploiting than grid-based maps. It inherits even if external from metric maps sensor data the ability is insufficient from to to from the Building occupancy maps is a fairly standard procedure, which has proven to yield ro- in the interpret sonar readings bust maps at various research sites. Since neural networks context of adjacent sensor measurements, between sonar measurements. of information, ments of moderate size-which This paper also demonstrates sensor measurements-resulting adjacent they do not assume conditional independence in more accurate that by integrating multiple interpretations of sources in environ- is crucial aspect of this research, however, for building metric maps. Previous approaches correspondence have constructed of disambiguation only partial metric to integrate both, grid-based The most important technical along that look alike), information (e.g., different places ical graphs are constructed. from scratch, memorizing led to problems lems of establishing paper advocates quence, different places are naturally disambiguated, as such. In the integrated grid-based multiple measurements Visual be incorporated estimation detectors tion in the topological map (cf. is the way topolog- topological maps the way. This often and prob- (e.g., different views of the same place). This and topological maps. As a direct conse- locations are detected role, through the information over done in a consistent way. can certainly approaches, the accuracy of position as landmark the actual posi- to further [ 56,105 ] ) . In fact, sonar sensors can be understood approach, estimation mechanisms. locations Integration is automatically to bear in topological landmarks play only an indirect of landmark landmarks, which often come into the current approach the grid-based map-help that indirectly-through and nearby at multiple (see e.g., determine [ 1001) . improve position One of the key empirical results of this research concerns the cost-benefit analysis of representations. While grid-based maps yield more accurate control, planning is several orders of magnitude more efficient. A showed that in a map of moderate size, the efficiency of planning the loss in performance topological maps topological with more abstract series of experiments can be increased by three to four orders of magnitude, while is negligible enable us to control an autonomous complex mission planning methods. (e.g., 1.82%). We believe robot in multiple in environments that the topological maps described here will floors in our university building- of that size was intractable with our previous Despite these encouraging results, there is a variety of important open questions that warrant future research: S. ThrudArtijcial Intelligence 99 (1998) 21-71 65 - Sensor dynamics. The current approach does not account the weights of the interpretation to use a map to generate it is possible failure. Once trained, in principle network. As a result, Empirically, we have found our approach the failure of sensors. the robot could constantly re-adjust to be surprisingly for sensor drift or sensor network are frozen. However, targets for the interpretation its own interpretations. robust with respect to - Other sensors. A second goal of future research the current approach by using a camera for floor segmentation sensors in particular, light sensors [9]. The Bayesian sensors; we extended infrared light flexible enough in our initial experiments we found when additional to accommodate that measure proximity by measuring to sensor approach that do not measure proximity. is to incorporate other types of In an initial study, and 24 the intensity of reflected in this paper is as well. In fact, that the grid-based maps were more accurate integration described other types of sensor information sensors were incorporated [ 1081. - Dynamic environments. While (such as people, doors), it does not model as to how to incorporate models of moving objects the current approach robustly handles dynamics in them. It is an open rep- into a grid-base obstacles” such as doors, whose presence might change but which are analysis of grid-cell and utility of such can be modeled by a variance [95] has demonstrated that “semi-dynamic the robustness the environment question resentation. A recent study (these. are obstacles tight LO a certain values. Further approaches, and to model moving objects such as humans. is warranted to evaluate location) research concerning increases with approaches generally the size of the environment, to large-scale this argument the scaling properties of the approach the robot’s position. Since the difficulty of of grid-based methods, which is inherited by the approach presented control scale poorly that grid-based they are provided with an accurate map). Although A key disadvantage here, is the need for accurately determining position to think (unless we are optimistic largest cycle-free map that was generated with this approach was approximately meters not aware ‘of any purely demonstrated by using more accurate robot positions backwards is currently believe magnitude one might be inclined environments is convincing, taken here. The 100 60 by 20 meters. We are that would have been size. Moreover, and by re-estimating straightforward, approach to be capable of producing consistent maps of comparable sensors in time (which would be mathematically but complexity), we that are an order of the largest single cycle measured approximately that maps can be learned and maintained larger than those investigated here (cf. for environments [ 1091) . because of its enormous (such as laser range to robot mapping not implemented computational topological finders), long; The app:roach described here has become part of a larger software package through one of the major mobile robot suppliers that is in the US (Real World software along with their B14 and B21 robots. It Inc.) as the sole navigation in use at more than 10 academic and industrial sites, where it has successfully An essential part of the software package environments. avoidance a fast collision is [36]. The obstacles in the map do not lead to collisions. This module, combined with the routine, which avoidance is described routine is that dynamic elsewhere now distributed Interface, is already mapped m,any different a fast, reactive collision advantage ‘of integrating and inaccuracies 66 S. Thnm/Art$cial Intelligence 99 (1998) 21-71 mapping and planning and with a speed of up to 90cm/sec University which won second price defeated by a team of three collaborating and exploration of Bonn’s entry “RHINO” algorithms described in the category approach described here, has found to navigate even in dynamic and cluttered environments. at the 1994 AAAI Mobile Robot Competition, the robot reliably The “clean-up robots an office” and which was only [ 11, relied crucially on the mapping in this paper (see [9,107,108]). of Bonn at the Deutsches Museum in Bonn. The robot’s tour-guide,” a “museum this paper was being While controlling with the University was to interact with and to provide at an average speed of 35 cm/set crowded environment, to map techniques described this highly dynamic environment. its environment traversing more in real-time reviewed, the approach became part of the software in cooperation that was installed robot a mobile and a maximum tours to visitors. The robot successfully task here navigated through a densely than 18.5 km in six days. The robot’s ability using some of the in for the robot’s success sped of 80 cm/set and to re-plan concurrently, in this paper, turned out to be essential Acknowledgements and for inspiring discussion thanks Arno Bticken The author wishes to thank the RHINO mobile robot group at the University of Bonn, Joachim Buhmann, Wolfram Burgard, Armin B. Cremers, and Thomas Hofmann, to the RHINO project. in [ 351 and robot group at Carnegie Mellon thanks Ben Kuipers and two of the material. He for pointing out two errors in the steady and helpful support by in particular Arno Bucken, Dieter Fox, Dirk Hahnel, Dirk Schulz, Markus Giesenschlag, Wolli Steiner their contributions He specifically Section 3 and verifying device drivers) were provided by the XAVIER mobile University, which anonymous also thanks Torsten previous versions of this paper, and he acknowledges Real World Interface, the results. Some of the low-level the techniques software for helping him improving acknowledged. The author Ihle and one anonymous for re-implementing the presentation is gratefully reviewers described reviewer (TCX Inc. References [ I] T. Balch, G. Boone, T. Collins, H. Forbes, D. MacKenzie, J.C. Santamaria, 10, Ganymede and Callisto- a multiagent robot janitorial [ 21 A.G. Barto, S.J. Bradtke, S.P. Singh, Learning team, AI Magazine 16 ( 1) ( 1995). to act using real-time dynamic programming, Artificial Intelligence 72 (1995) 81-138. [ 31 K. Basye, T. Dean, L.P. Kaelbling, Learning dynamics: system identification for perceptually challenged agents, Artificial Intelligence 72 ( 1995) 139-17 I. [4] R.E. Bellman, Dynamic Programming, robot [5] M. Betke, L. Gurvits, Mobile Princeton University Press, Princeton, NJ, 1957. localization using landmarks, Technical Report SCR-94-TR-474, Siemens Corporate Research, Princeton, NJ, 1993; also: IEEE Trans. Robotics and Automation (to appear). ]6] J. Bondy, U. Murty, Graph Theory with Applications, Elsevier, New York, 1976. ]7] J. Borenstein, B. Everett, L. Feng, Navigating Mobile Robots: Systems and Techniques, A.K. Peters, Ltd., Wellesley, MA, 1996. S. ThrudArtQicial Intelligence 99 (1998) 21-71 61 [S] J. Borenstein IEEE .I. Robotics and Automation and Y. Koren, The vector 7 (3) field histogram-fast (1991) 278-288. obstacle avoidance for mobile robots, [9] J. Buhmann, W. Burgard, A.B. Cremers, D. Fox, T. Hofmann, F. Schneider, J. Strikos, S. Thrun, The mobile robot Rhino, AI Magazine 16 ( 1) ( 1995). [ 10 1 W. Burgard, D. Fox, D. Hennig, T. Schmidt, Estimating in: Proceedings AAAI-96, Portland, OR AAAI Press/MIT the absolute position of a mobile robot using Press, Menlo positicsn probability Park, CA, 1996. grids, [ 1 I] W. Burgard, D. Fox, D. Hennig, T. Schmidt, Position Proceedings 1996. 1st Euromicro Workshop on Advanced Mobile Robots, tracking with position probability in: IEEE Computer Society Press, grids, [ 121 W. Burgard, D. Fox, S. Thrun, Active mobile robot localization, in: Proceedings IJCAI-97, Nagoya, Japan, 1997. [ 131 J. Canny, The Complexity of Robot Motion Planning, MIT Press, Cambridge, MA, 1987. [ 14 1 J.F. Canny, B.R. Donald, Simplified Voronoi diagrams, Discrete Comput. Geom. 3 (1988) 219-236. [ 151 R. Chatila, for mobile robots, Proceedings 1985 IEEE International Conference on Robotics and Automation, St. Louis, MO, 1985. generalized Voronoi graph, Ph.D. Thesis, [ 161 H. Choset, Sensor based motion planning: and consistent world modeling J.-P. Laumond, Position the hierarchical referencing in: California [ 171 H. Choset, Institute of Technology, Pasadena, CA, 1996. I. Konuksven, IEEE/SICE/RSJ for Intelligent Systems, Washington, DC, 1996. J.W. Burdick, Sensor based planning in: Proceedings International Conference on Multisensor Fusion on Multisensor Fusion and Integration for a planar rod robot, 1181 H. Choset, I. Konuksven, A. Rizzi, Sensor based planning: a control Voronoi graph, DC, 1’396 (submitted). in: Proceedings IEEE International Conference law for generating the generalized on Advanced Robotics, Washington, [ 191 E. Chown, S. Kaplan, D. Kortenkamp, Prototypes, location, and associative networks (plan): towards a unified theory of cognitive mapping, Cognitive Sci. 19 ( 1995) 1-51. [20] L. Chrisman, Reinforcement learning with perceptual aliasing: the perceptual distinction approach, in: Proceedings AAAI-92, San Jose, CA, AAAI Press/MIT Press, Menlo Park, CA, 1992. [21] T.S. Collet, B.A. Cartwright, Landmark [22] experiment I.J. Cox, Blanche-an Trans. Robotics and Automation I.J. Cox, Modeling Intelligence 66 ( 1994) 31 l-344. [23] learning in bees, J. Comparative Physiology in guidance and navigation of an autonomous (January robot vehicle, 1985). IEEE 7 (2) (1991) 193-204. a dynamic environment using a bayesian multiple hypothesis approach, Artificial 1241 R.H. C&es, A.G. Barto, Improving elevator performance using reinforcement in: D. Touretzky, in Neural Information Processing Systems, Vol. 8, MIT learning, M. Mozer, M.E. Hasselmo Press, Cambridge, MA, 1996. (Ed%), Advances [ 251 J. Crowley, World modeling and position estimation in: 1989 IEEE International Conference on Robotics and Automation, Scottsdale, AZ, 1989, for a mobile robot using ultrasonic ranging, Proceedings pp. 674680. 1261 P. Dayan, G.E. Hinton, Feudal in: J.E. Moody, S.J. Hanson, R.P. Lippmann in Neural Information Processing Systems, Vol. 5, Morgan Kaufmann, San Mateo, reinforcement learning, (Eds.), Advances CA, 1993. [27] T.L. Clean, M. Boddy, An analysis of time-dependent planning, CA, AAAI Press/MIT Press, Menlo Park, CA, 1988, pp. 49-54. in: Proceeding AAAI-92, San Jose, [28] T.L. Dean, S.-H. Lin, Decomposition IJCAI-95, Montreal, Canada, 1995. techniques for planning in stochastic domains, in: Proceedings [ 291 B.N. Delaunay, Sur la sphere vide, Izv. Akad. Nauk SSSR, Otdelenie Matematicheskii i Estestvennyka Nauk ~:Bull. Acad. Sci. USSR) 7 (1934) 793-800. [ 301 R.O. Duda, P.E. Hart, Pattern Classification real-world mapping 1311 A. Elf&, Sonar-based (1987) 249-265. and Scene Analysis, Wiley, New York, 1973. and navigation, IEEE J. Robotics and Automation 3 (3) [ 321 A. Elfes, Occupancy grids: a probabilistic for robot perception and navigation, Ph.D. Thesis, Department of Electrical and Computer Engineering, Carnegie Mellon University, Pittsburgh, PA, 1989. framework 68 S. Thrun/Art$cial Intelligence 99 (1998) 21-71 [ 331 S. Engelson, Passive map learning and visual place recognition, Ph.D. Thesis, Department of Computer Science, Yale University, New Haven, CT, 1994. [ 341 S. Engelson, D. McDermott, Error correction in: Proceedings International Conference on Robotics and Automation, Nice, France, 1992, pp. 2555-2560. in mobile robot map learning, 1992 IEEE [ 35) C. Fedor, TCX. An interprocess to version guide lO.xx, Carnegie Mellon University, Pittsburgh, PA, 1993. communication system for building robotic architectures. Programmer’s 1361 D. Fox, W. Burgard, S. Thrun, The dynamic window approach to collision avoidance, IEEE Robotics and Automation [ 37 ] T. Frohlinghaus, (to appear); J.M. Buhmann, Real-time phase-based also: Technical Report IAI-TR-95-13, University of Bonn, 1995. stereo for a mobile robot, in: Proceedings 1st Euromicro Workshop on Advanced Mobile Robots, IEEE Computer Society Press, 1996. [ 381 T. Frohlinghaus, phase-based Conference on Pattern Recognition, Vienna, Austria, 1996. J.M. Buhmann, Regularizing stereo, in: Proceedings 13th International [39] L.J. Guibas, D.E. Knuth, M. Sharir, Randomized 7 (1992) 381-413; also incremental in: Proceedings construction of Delaunay 17th International Colloquium and Voronoi on diagrams, Algorithmica Automata, Languages and Programming, Warwick, England, 1990, pp. 414-431. 1401 J.-S. Gutmann, Vergleich von Algorithmen zur Selbstlokalisierung eines mobilen Roboters, Master’s [411 1421 L431 [441 [451 L461 [471 1481 1491 l501 1511 1521 [531 1541 [551 1561 in: a robot, 18 (1) of the results, learning lEEE/RSJ navigation, Introduction in: P.E. Utgoff in: Proceedings in a fast moving 10th International Conference perception with a laser radar Intelligence 85 ( 1996) 321-361. in stochastic domains: preliminary and Markov Processes, MIT Press, Cambridge, MA/Wiley, New to the Theory of Neural Computation, Addison-Wesley, on Robot Control, Karlsruhe, Germany, 1988, pp. 68.1-68.7. J.A. Kurien, Acting under uncertainty: Discrete bayesian models (Ed.), on Machine Learning, Amherst, MA, Morgan Kaufmann, Thesis, University of Ulm, Ulm, Germany, 1996. D. Guzzoni, A. Cheyer, L. Julia, K. Konolige, Many robots make short work, Al Magazine (1997) 55-64. J. Hertz, A. Krogh, R.G. Palmer, Redwood City, CA, 1991. R. Hinkel, T. Knieriemen, Environment Proceedings Symposium R. Holte, T. Mkadmi, R.M. Zimmer, A.J. MacDonald, Speeding up problem solving by abstraction: graph oriented approach, Artificial R.A. Howard, Dynamic Programming York, 1960. L.P. Kaelbling, Hierarchical Proceedings San Mateo, CA, 1993, pp. 167-173. L.P. Kaelbling, A.R. Cassandra, mobile-robot Robots and Systems, 1996. L.P. Kaelbling, M.L. Littman, A.W. Moore, An introduction in: L. Steels (Ed.), The Biology and Technology of Intelligent Autonomous Agents, Springer, Berlin, 1995, pp. 90- 127. R.E. Kalman, A new approach Engineering L. Kavraki, space for fast path planning, in: lEEE International Conference on Robotics and Automation, San Diego, CA, 1994, pp. 2138-2145. S. King, C. Weiman, Helpmate Conference on Mobile Robots, Boston, MA, 1990, Vol. 2352, pp. 190-198. C.A. Knoblock, Automatically generating 243-302. S. Koenig, R. Simmons, Passive distance 13th International Conference on Machine Learning, Bari, Italy, 1996. D. Kortenkamp, R.P. Bonassi, R. Murphy Robot Systems, MIT Press, Cambridge, MA (to appear). D. Kortenkamp, Al Magazine 18 (1) D. Kortenkamp, T. Weymouth, Topological mapping and vision sensing, 1994, pp. 979-984. I. Nourbakhsh, D. Hinkle, The 1996 AAAI Mobile Robot Competition 82 (1960) 3545. J.-C. Latombe, Randomized (Eds.), Al-based Mobile Robots: Case Studies of Successful filtering and prediction problems, Trans. ASME J. Basic of sonar Press, Menlo Park, CA, in: Proceedings AAAI-94, Seattle, WA, AAAI Pm&MIT for mobile robots using a combination for on Intelligent in: L. Saitta (Ed.), Proceedings International Conference Intelligence 68 ( 1994) for planning, Artificial autonomous mobile for robot navigation, robot navigation to reinforcement of configuration in: Proceedings and Exhibition, (1997) 25-32. preprocessing abstractions to linear learning, learning system, SPIE S. Thrun/Artificial Intelligence 99 (1998) 21-71 69 [57] R. Kuc, M.W. Siegel, Physically based simulation model for acoustic sensor robot navigation, IEEE Trans. Pattern Recognition Machine lntell. (1987). [S8] B. Kuipers, Y.-T. Byun, A robust qualitative method for spatial learning in unknown environments, in: Proceedings AAAI-88, St. Paul, MN, AAAI Press/MIT Press, Menlo Park, CA, 1988. [59] B.J. Kuipers, Y.-T. Byun, A robot exploration and mapping strategy based on a semantic hierarchy of spatial representations, Robotics and Autonomous Systems 8 ( 1991) 47-63. 1601 B.J. Kuipers, T.S. Levitt, Navigation and mapping in large-scale space, Al Magazine 9 (2) (1988) 2543. [61] J.-C. Latombe, Robot Motion Planning, Kluwer Academic Publishers, Boston, MA, 1991. [ 621 J.J. Leonard, H.F. Durrant-Whyte, Directed Sonar Sensing for Mobile Robot Navigation, Kluwer Academic Publishers, Boston, MA, 1992. [63] J.J. Leonard, H.F. Durrant-Whyte, Intern&. J. Robotics Res. 11 (4) I.J. Cox, Dynamic map building for an autonomous mobile robot, (1992) 89-96. 1641 L.-J. Lin, Self-supervised learning by reinforcement and artificial neural networks, Ph.D. Thesis, Carnegie Mellon University, School of Computer Science, Pittsburgh, PA, 1992. 1651 L. Ljung, System [66] F. Lu, E. Milios, Globally Robots 4 (1997) 333-349. Identification-Theory consistent for the User, Prentice-Hall, Englewood Cliffs, NJ, 1987. range scan alignment for environment mapping, Autonomous [67] F. Lu, E. Milios, Robot pose estimation in unknown environments by matching 2d range scans, J. Intelligent and Robotic Systems (to appear). 1681 M.J. Ma&ii, A distributed model for mobile Thesi:r, MIT, Cambridge, MA, 1990; also: MIT, Al Lab, Technical Report AITR-1228. robot environment-learning and navigation, Master’s [69] R.A. McCallum, Instance-based state Touretzky, T. Leen Camt’ridge, MA, 1995. (Ed%), Advances identification in Neural for reinforcement in: G. Tesauro, D. Information Processing Systems, Vol. 7, MIT Press, learning, [70] T.M. Mitchell, Machine Learning, McGraw-Hill, New York, 1997. [ 711 A.W. Moore, multidimensional Information Processing Systems, Vol. 6, Morgan Kaufmann, San Mateo, CA, 1994, pp. 71 l-718. resolution in: J.D. Cowan, G. Tesauro, J. Alspector reinforcement (Eds.), Advances state-spaces, parti-game algorithm variable The for learning in in Neural [ 721 A.W. Moore, C.G. Atkeson, Prioritized 103-130. Machine Learning 13 (1993) sweeping: reinforcement learning with less data and less time, 1731 HP. Moravec, Sensor fusion [ 741 H.P. Moravec, A. Elfes, High resolution maps from wide angle sonar, in: Proceedings Conference on Robotics and Automation, St. Louis, MO, 1985, pp. 116-121. in certainty grids for mobile robots, Al Magazine 9 (2) ( 1988) 61-74. IEEE International [75] M.C. Mozer, J.R. Bachrach, Discovering by exploration, Technical Report CU-CS-451-89, Department of Computer Science, University of Colorado, Boulder, co, the structure of a reactive environment 1989. [76] U. Nehmzow, T. Smithers, feature maps, Berlin, 1991. in: G. Schmidt (Ed.), J. Hallam, Location recognition Information Processing in a mobile robot using self-organizing in Autonomous Mobile Robots, Springer, 1771 H. Neven, G. Schliner, Dynamics parametrically controlled by image correlations organize robot navigation, Biological Cybernetics (to appear). [ 781 N.J. Vilsson, Principles of Artificial Intelligence, Springer, Berlin, 1982. [79] 1. Nourbakhsh, R. Powers, S. Birchfield, DERVISH an office-navigating robot, Al Magazine 16 (2) (1995) 53-60. [80] C. O’Ddnlaing, C.K. Yap, A retraction method for planning the motion of a disk, J. Algorithms 6 (1982) [Sl] C.W. Omlin 104-111. and CL. Giles, Constructing deterministic finite-state automata in recurrent neural netwl>rks, J. ACM 45 (6) 1821 J. Pearl, Probabilistic Reasoning (1996) 937. in Intelligent Systems: Networks of Plausible Inference, Morgan Kaufmann, San Mateo, CA, 1988. 1831 L. Peters, H. Surmann, S. Guo, K. Beck, J. Huser, Moria fuzzy Logik gesteuertes, autonomes Fahrzeug, 1994. 70 S. Thrun/Art@cial Intelligence 99 (1998) 21-71 (841 D. Pierce, B.J. Kuipers, Learning to explore and build maps, in: Proceedings AAAI-94, Seattle, WA, AAAI Press/MIT Press, Menlo Park, CA, 1994, pp. 1264-1271. [ 85 1 D.A. Pomerleau, Knowledge-based in: J.H. Connell, S. Mahadevan pp. 19-43. training of artificial neural networks robot driving, (Eds.), Robot Learning, Kluwer Academic Publishers, Dordrecht, 1993, for autonomous ]86] M.L. Puterman, Markov Decision Processes, [ 87 I L.R. Rabiner, A tutorial on hidden Markov models and selected applications John Wiley & Sons, New York, 1994. in speech recognition, in: Proc. IEEE, 1989 (IEEE Log Number 8825949). [88] J.H. Reif, Complexity of the mover’s problem and generalizations, in: Proceedings 20th Annual IEEE Symposium on Foundations [ 891 W.D. Rencken, Concurrent Proceedings 1993, pp. 2129-2197. IEEE/RSJ of Computer Science, 1979, pp. 421-427. localisation in: International Conference on Intelligent Robots and Systems, Yokohama, Japan, for mobile robots using ultrasonic and map building sensors, 1901 R.L. Rivest, R.E. Schapire, Diversity-based IEEE Symposium on Foundations inference of finite automata, of Computer Science, Los Angeles, CA, 1987. in: Proceedings 28th Annual ]9 I 1 R.L. Rivest, R.E. Schapire, A new approach to unsupervised learning in deterministic in: P. Langley pp. 364375. (Ed.), Proceedings 4th International Workshop on Machine Learning, environments, Irvine, CA, 1987, 1921 D.E. Rumelhart, GE. Hinton, R.J. Williams, Learning D.E. Rumelhart, J.L. McClelland, Vols. I and II, MIT Press, Cambridge, MA, 1986. and the PDP Research Group (Eds.), Parallel Distributed Processing, internal representations by error propagation, in: 1931 S. Russell, P. Norvig, Artificial Intelligence: A Modem Approach, Prentice-Hall, Englewood Cliffs, NJ, J. Crowley, A comparison IEEE International Conference of position estimation on Robotics techniques and Automation, using occupancy in: San Diego, CA, 1994, grids, 1995. [ 941 B. Schiele, Proceedings pp. 162X-1634. 195 1 F.E. Schneider, Department of Computer Science Sensorinterpretation und Kartenerstellung III, University of Bonn, 1994. fur mobile Roboter, Master’s Thesis, 1961 J.T. Schwartz, M. Scharir, J. Hopcroft, Planning, Geometry and Complexity of Robot Motion, Ablex Publishing Corporation, Norwood, NJ, 1987. [97] H Shatkay, L. Kaelbling, Learning topological maps with weak local odometric information, in: Proceedings IJCAI-97, Nagoya, Japan, 1997. interpolation 1981 D. Shepard, A two-dimensional function National Conference of the ACM, 1968, pp. 517-523. [ 991 R. Simmons, The 1994 AAAI Robot Competition [ 1001 R. Simmons, S. Koenig, Probabilistic for irregularly spaced data, in: Proceedings 23rd and Exhibition, AI Magazine 16 (1) (1995). robot navigation in partially observable environments, in: Proceedings IJCAI-95, Montreal, Quebec, 1995, pp. 1080-1087. learning by composing solutions for elemental sequential tasks, Machine [ 1011 S.P. Singh, Transfer of Learning 8 ( 1992). [ 1021 R.S. Sutton [ 1031 G.J. Tesauro, Practical [ 1041 S. Thrun, Exploration ICNN-93, [ 1051 S. Thrun, A Bayesian navigation, Science, Pittsburgh, PA, 1996. (Ed.), Reinforcement Learning, Kluwer Academic Publishers, Boston, MA, 1992. issues in temporal difference and model building learning, Machine Learning 8 (1992). in: E. Ruspini IEEE Neural Network Council, San Francisco, CA, 1993, pp. 175-180, and active perception in mobile robot domains, to landmark approach Technical Report CMU-CS-96-122, discovery robot Carnegie Mellon University, School of Computer for mobile (Ed.), Proceedings [ 1061 S. Thrun, To know or not to know: on the utility of models in mobile robotics, AI Magazine 1X ( 1) (1997) 47-54. [ 1071 S. Thrun, A. Btlcken, Integrating grid-based and topological maps for mobile robot navigation, in: Proceedings AAAI-96, Portland, OR, AAAI Press/MIT Press, Menlo Park, CA, 1996. [10X] S. Thrun, A. Bbcken, W. Butgard, D. Fox, T. Frijhlinghaus, D. Hennig, T. Hofmann, M. Krell, T. in: D. Kortenkamp, R.P. Bonasso, R. (Eds.), Al-based Mobile Robots: Case Studies of Successful Robot Systems. MIT Press, in RHINO, navigation Schimdt, Map learning and high-speed Murphy Cambridge, MA (to appear), S. Thrun/Art$cial Intelligence 99 (1998) 21-71 11 for { 1091 S. Thrun, D. Fox, W. Burgard, A probabilistic approach [ 1 IO] S. Thrun, A. Schwartz, Finding mobile robots, Machine Learning and Autonomous Robots in reinforcement (joint in: G. Tesauro, D. Touretzky, T. learning, in Neural Information Processing Systems, Vol. 7, MIT Press, Cambridge, MA, structure issue), to concurrent mapping and localization to appear. Leen (Eds.), Advances 1995. [ Ill] M.C. Torrance, Natural communication with robots, Master’s Thesis, MIT Department of Electrical Engineering and Computer Science, Cambridge, MA, 1994. in computer and avoidance detection [ 1121 S. U&pa, Collision Department of Mechanical Engineering, California controlled manipulators, Institute of Technology, Pasadena, CA, 1977. Ph.D. Thesis, [ 1131 V. Vapnik, Estimations [ 1 14 ] P. Wallossek, Realistische Simulation eines mobilen Roboters of Dependences Based on Statistical Data, Springer, Berlin, 1982. in Echtzeit, Master’s Thesis, Department track of position and orientation of moving International Conference indoor on Intelligent J. Tenenberg, Learning multiple goal behavior via task decomposition and (Eds.), Robot Learning, Kluwer Academic I1151 I1161 [1171 [1181 (1191 scans, of range-finder in: Proceedings 1993, pp. 45-78. III, University of Bonn, 1995. in: J.H. Connell, S. Mahadevan of Computer Science G. WeiS, C. Wetzler, E. von Puttkamer, Keeping systems by correlation Robots and Systems, 1994, pp. 595-601. J. Karlsson, S. Whitehead, dynamic policy merging, Publishers, Dordrecht, E. Wolfart, R.B. Fisher, A. Walker, Position refinement based. on honey bee strategies, Pisa, Italy, 1995; also: DA1 Research Paper No 751, Department of Artificial of Edinburgh, ScotIand. B. Yamauchi, R. Beer, Spatial Autonomous Robots (special also: http://www.aic.nrl.navy.miI/-yamauchi/. B. Yamauchi, P. Langley, Place issue), J. Robotic Systems W. Zhang, T.G. Dietterich, High-performance network, Processing Systems, Vol. 8, MIT Press, Cambridge, MA, 1996, pp. 1024-1030. U.R. Zimmer, Robust world-modeling job-shop in: D. Touretzky, M. Mozer, M.E. Hasseimo issue), IEEE Trans. Systems Man Cybemet.-Part for a navigating in: Proceedings for navigation and navigation environments, (to appear); in dynamic in dynamic recognition learning also: http://www.aic.nrl.navy.mil/~yamauchi/. 11201 11211 scheduling with a time-delay in Neural (Eds.), Advances td(lambda) Information in a real world, Neurocomput. 13 (24) ( 1996). International Symposium on Robotic Systems robot using motion information (SIR 95), Intelligence, University environments, B: Cybernetics in: Learning (1996); in: Mobile Robots (special 