Artificial Intelligence 175 (2011) 1877–1910Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintOn the complexity of core, kernel, and bargaining set ✩Gianluigi Greco a, Enrico Malizia b, Luigi Palopoli b, Francesco Scarcello b,∗a Dipartimento di Matematica, Università della Calabria, I-87036 Rende (CS), Italyb DEIS, Università della Calabria, I-87036 Rende (CS), Italya r t i c l ei n f oa b s t r a c tArticle history:Received 4 November 2010Received in revised form 10 June 2011Accepted 13 June 2011Available online 16 June 2011Keywords:Coalitional gamesCompact representationsComputational complexitySolution conceptsBounded treewidthCoalitional games model scenarios where players can collaborate by forming coalitions inorder to obtain higher worths than by acting in isolation. A fundamental issue of coalitionalgames is to single out the most desirable outcomes in terms of worth distributions,usually called solution concepts. Since decisions taken by realistic players cannot involveunbounded resources, recent computer science literature advocated the importance ofassessing the complexity of computing with solution concepts. In this context, the paperprovides a complete picture of the complexity issues arising with three prominent solutionconcepts for coalitional games with transferable utility, namely, the core, the kernel, andthe bargaining set, whenever the game worth-function is represented in some reasonablycompact form. The starting points of the investigation are the settings of graph gamesand of marginal contribution nets, where the worth of any coalition can be computedin polynomial time in the size of the game encoding and for which various openquestions were stated in the literature. The paper answers these questions and, in addition,provides new insights on succinctly specified games, by characterizing the computationalcomplexity of the core, the kernel, and the bargaining set in relevant generalizationsand specializations of the two settings. Concerning the generalizations, the paper showsthat dealing with arbitrary polynomial-time computable worth functions—no matter ofthe specific game encoding being considered—does not provide any additional source ofcomplexity compared to graph games and marginal contribution nets. Instead, only forthe core, a slight increase in complexity is exhibited for classes of games whose worthfunctions encode NP-hard optimization problems, as in the case of certain combinatorialgames. As for specializations, the paper illustrates various tractability results on classes ofbounded treewidth graph games and marginal contribution networks.© 2011 Elsevier B.V. All rights reserved.1. IntroductionCoalitional games were introduced by von Neumann and Morgenstern [59] in order to reason about scenarios where play-ers can collaborate by forming coalitions with the aim of obtaining higher worths than by acting in isolation. In the Trans-ferable Utility (TU) setting, coalition worths can be freely distributed amongst agents, while in the Non-Transferable Utility(NTU) setting coalitions are allowed to distribute worths only in some specified configurations, called consequences [62].✩Preliminary versions of parts of this paper appeared in the Proceedings of the 20th and of the 21st International Joint Conferences on ArtificialIntelligence (Malizia et al., 2007 [53]; Greco et al., 2009 [38]).* Corresponding author.E-mail addresses: ggreco@mat.unical.it (G. Greco), emalizia@deis.unical.it (E. Malizia), palopoli@deis.unical.it (L. Palopoli), scarcello@deis.unical.it(F. Scarcello).0004-3702/$ – see front matter © 2011 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2011.06.0021878G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910In this paper, we consider only the classical TU setting, and thus by saying game we always mean hereafter coalitionalgame with transferable utility. Such a game can abstractly be modeled as a pair G = (cid:3)N, v(cid:4), where N is a finite set of players,and v is a function associating with each coalition S ⊆ N a certain worth v(S) ∈ R that players in S obtain by collaboratingwith each other. The outcome of G is an imputation, i.e., a vector of payoffs (xi)i∈N meant to specify the distribution of thei∈N xi = v(N), and individuallytotal worth v(N) granted to each player in N. Imputations are required to be efficient, i.e.,rational, i.e., xi (cid:2) v({i}), for each i ∈ N. In the following, the set of all imputations of G is denoted by X(G).It is easily seen that, for any given coalitional game G, the set X(G) may even contain infinitely many payoff vectors.Therefore, a fundamental problem is to single out the most desirable ones in terms of appropriate notions of worth distribu-tions, which are usually called solution concepts. Traditionally, this question was studied in economics and game theory withthe aim of providing arguments and counterarguments about why such proposals are reasonable mathematical renderingsof the intuitive concepts of fairness and stability. Well-known and widely-accepted solution concepts are the Shapley value,the core, the kernel, the bargaining set, and the nucleolus (see, e.g., [62]). Each solution concept defines a set of outcomes thatare referred to with the name of the underlying concept. For instance, the “core of a game” is the set of those outcomessatisfying the conditions associated with the concept of core.(cid:2)1.1. Coalitional games from the AI perspective: Complexity and representation issuesSolution concepts for coalitional games have been brought to the attention of the computer science community, byconsidering them from a computational point of view, in a seminal study by Megiddo [57]. There, it has been observed thatthe naïve approach of explicitly listing all associations of coalitions with their worths in the specification of coalitional gamesmakes the “game theory approach” hardly applicable in practice, due to the exponential blow-up of the input representationw.r.t. the number of involved players. In fact, Megiddo [57] showed the importance of conceiving succinct representations ofcoalitional games, and taking into consideration computational complexity issues when analyzing classical solution concepts,with the aim of exhibiting efficient algorithms for their calculation. In particular, Megiddo [57] exhibited polynomial-timealgorithms for computing the nucleolus and the Shapley value of cost allocation games over trees.Another influential study on complexity issues related to coalitional games is due to Kalai and Zemel [48], who showedpolynomial-time algorithms for computing an imputation in the core of flow games.Deng and Papadimitriou [26] took a step further to use computational complexity in the analysis of coalitional games, byarguing that decisions taken by realistic agents cannot involve unbounded resources to support reasoning, and suggesting toformally capture the bounded rationality principle [76] by assessing the amount of resources needed to compute solutionconcepts in terms of their computational complexity [26,47]. In this context, Deng and Papadimitriou [26] were interestednot only in exhibiting efficient algorithms, but also in characterizing those scenarios where such algorithms are unlikely toexist due to the inherent complexity of the solution concepts. In particular, they again noticed that computational questionsare of interest whenever worth functions are encoded in some succinct way, e.g., when they are given in terms of polyno-mially computable functions over some combinatorial structure. However, to the end of assessing the intrinsic complexityof solution concepts, calling for succinct specifications is not only motivated by the practical difficulty of explicitly listingall associations of coalitions with their worths, but also because with an explicit encoding the input sizes are so large thatcomplexity problems are trivially—and in fact artificially—easy. Coalitional games whose worth functions are encoded bymeans of some succinct representation mechanism are hereinafter called compact games.Coalitional games gained popularity in the context of multi-agent systems and artificial intelligence research since thenineties, when they had been recognized by these research communities as very natural models to understand and reasonabout cooperative action. In particular, inspired by the approach of Deng and Papadimitriou [26], the questions of findingrepresentation schemes to compactly encode worth functions and assessing over them the complexity of various solutionconcepts have motivated most of the research on coalitional games in the AI field. In fact, research works facing thesequestions can be classified into two main groups, depending on the kinds of representation schemes being adopted (cf. [1])1:1. Representation schemes that are succinct, but not complete (i.e., such that there are coalitional games that cannotbe captured by such representations). Complexity analysis have been conducted on several prominent schemes of thiskind, including graph games [26], traveling salesman games [31], flow games [24], matching games [49], facility locationgames [37], skill games [9], threshold games [5,28,30], minimum cost spanning tree games [33], combinatorial optimizationgames (see [25] and the references therein), games on combinatorial structures [12], voting games [68], games in multi-issuedomains [17], linear production games [63], bin packing games [32], permutation games [77], path disruption games [8], and(vertex) connectivity games [10].2. Representation schemes that are complete, but not succinct (i.e., such that there are coalitional games requiring ex-ponential space—in the worst case—to be encoded in such representations). Influential proposals thereof are marginalcontribution nets [44], read-once (and general) marginal contribution nets [29], games with synergies among coalitions [18],and multi-attribute games [45].1 Details on the various representations mentioned here will be given in Section 3.1.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101879Fig. 1. The graph game in Example 1.1.In this paper, we continue along the line of analyzing the computational complexity of reasoning about compact coali-tional games, by focusing on three prominent solution concepts—the core, the kernel, and the bargaining set. The startingpoints of the investigation of our analysis are the settings of graph games and of marginal contribution nets, which arerepresentative of the two perspectives discussed above. Various open questions were in fact stated in the literature aboutthese classes of games. Here, we give an answer to these questions and, in addition, we provide new insights about com-pact games, by characterizing the computational complexity of the three solution concepts over relevant generalizations orspecializations of the basic settings.In order to clearly illustrate our contribution, a brief introduction to the classes of games considered throughout thepaper is provided next.1.2. Compactly specified games: Graph games and marginal contribution netsGraph games. The setting of graph games is precisely the one analyzed by Deng and Papadimitriou [26]. In graph games,worths for coalitions over a set N of players are defined based on a weighted undirected graph G = (cid:3)(N, E), w(cid:4), whosenodes in N correspond to the players, and where the list w encodes the edge weighting function, so that w(e) ∈ R is theweight associated with the edge e ∈ E. Then, the worth of an arbitrary coalition S ⊆ N is defined as the sum of the weightsassociated with the edges contained in S, i.e., as the value v(S) =(cid:2)e∈E|e⊆S w(e).Example 1.1. Consider the graph game (induced by the weighted graph) depicted on the left of Fig. 1 over the players in{a, b, c, d}. The subgraphs induced over the set of nodes {a, b, c} and {a, b, d} are reported on the right of the figure—for themoment, please ignore the dashed lines. It is easily seen that the coalition {a, b, c} gets a worth v({a, b, c}) = 2 + 2 + 1 = 5,while the coalition {a, b, d} gets a worth v({a, b, d}) = 3 + 2 − 1 = 4. Moreover, note that the graph encodes 24 coalitionworths, via 5 weights only. In this representation, O (n2) weights succinctly encode the 2n coalition worths, where n is thenumber of players.Within the setting of graph games, Deng and Papadimitriou [26] characterized the intrinsic complexity of various tasks,mainly focusing on problems related to the core. For instance, they showed that checking whether the core is non-empty andwhether a payoff vector belongs to the core are co-NP-complete problems. Moreover, they provided a polynomial-time com-putable closed-form characterization for the Shapley value, and showed that this value coincides with the (pre)nucleolus.Finally, they completed the picture of the complexity issues arising with graph games by showing the NP-hardness of de-ciding whether a payoff vector belongs to the bargaining set and by conjecturing the following two results for graph games:(C1) Deciding whether a payoff vector belongs to the kernel is NP-hard; and(C2) Deciding whether a payoff vector belongs to the bargaining set is (cid:2) P2 -complete.Marginal contribution networks. A class of compact games that received considerable attention in the last few years isthat of (games encoded via) marginal contribution networks, proposed by Ieong and Shoham [44].A marginal contribution network (short: MC-net) M consists in a set {r1, . . . , rn} of rules involving a number of Booleanvariables that represent (and thus will be called) players. For each 1 (cid:3) i (cid:3) n, the rule ri has the form {patterni} → valuei ,where patterni is a conjunction that may include both positive and negative literals, and valuei is the additive contributionassociated with this pattern. A rule is said to apply to a coalition S if all the players whose literals occur positively in thepattern belong to S, and all the players whose literals occur negatively in the pattern do not belong to S. The value v(S)for a coalition S in the coalition game induced by M is given by the sum of the values of all rules that apply to S. If norule applies, then the value for the coalition is set to zero, by default.Example 1.2. Consider the marginal contribution network consisting of the following three rules {a ∧ b} → 5, {b} → 2, and{a ∧ ¬b} → 3, over the players in {a, b}. This network defines a coalitional game such that: v({a}) = 3 (the third rule applies),1880G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Fig. 2. The MC-net in Example 1.3: Its agent graph (left), and its incidence graph (right).v({b}) = 2 (the second rule applies), and v({a, b}) = 5 + 2 = 7 (both the first and the second rules apply, but not the thirdone).Ieong and Shoham [44] suggest to graphically represent the “structure” of player interactions in MC-nets via their asso-ciated agent graphs. The agent graph associated with a marginal contribution net M is the undirected graph AG(M) whosenodes are the players of the game, and where, for each rule ri : {patterni} → valuei , every pair of players (nodes) occurringin patterni are connected by an edge in AG(M). The clique in the agent graph induced by these players weighs valuei .Example 1.3. The agent graph associated with the marginal contribution network of Example 1.2 is defined over the nodesa and b, with an edge connecting them.For a slightly more involved example, consider instead the marginal contribution network M consisting of the rulesr1 : {a ∧ b ∧ c} → 2, r2 : {c ∧ d ∧ e} → 1, r3 : {e} → −1, over the players in {a, b, c, d, e}. Then, the agent graph AG(M)associated with M is the one depicted on the left of Fig. 2.Note that, for any graph game G = (cid:3)(N, E), w(cid:4), there is an equivalent MC-net representation having the same size, andwhose “structure” is preserved in that its associated agent graph coincides with G. Indeed, given any game specified via thegraph G = (cid:3)(N, E), w(cid:4), we can just create the rule {i ∧ j} → w(e), for each edge e = {i, j} ∈ E (cf. [44]). However, the converseis not true, since MC-nets allow to express any arbitrary coalitional game, while graph games are not fully expressive. Forinstance, graph games cannot model a scenario where a group of agents S has value 1 if and only if |S| > |N|/2 (see [44]for details on the expressiveness of the frameworks).In the light of the above observations, hardness results for graph games immediately hold over marginal contribu-tion networks. For instance, checking whether a payoff vector is in the core and checking whether the core is non-emptyare co-NP-hard problems on MC-nets. Symmetrically, membership results for MC-nets also hold for graph games, evenwhen they are established over some “structurally” restricted classes of games (because the structure is preserved). For in-stance, for marginal contribution networks associated with acyclic agent graphs or, more generally, with agent graphs havingbounded treewidth [70], Ieong and Shoham [44] showed that deciding whether a payoff vector is in the core and deciding thenon-emptiness of the core are feasible in polynomial time. Therefore, these feasibility results immediately apply to acyclicgraph games (and, more generally, to graph games having bounded treewidth).Moreover, Ieong and Shoham [44] proved that checking whether a payoff vector is in the core of a game encoded viamarginal contribution networks is in co-NP (as for the class of graph games). However, they left as an intriguing openproblem the following (which, in fact, does not follow from the corresponding result for graph games):(O1) Is the problem of deciding core non-emptiness over MC-nets in co-NP?1.3. ContributionsIn this paper, we analyze the computational complexity of the core, the kernel, and the bargaining set over graph gamesand marginal contribution networks. In particular, we show that conjectures (C1) and (C2) by Deng and Papadimitriou [26]are correct, and we provide a positive answer to question (O1) by Ieong and Shoham [44]. In detail, as our main technicalcontributions, we show that:• For graph games (and for marginal contribution networks), deciding whether a payoff vector is in the kernel is NP-hard,and actually (cid:3) P2 -complete;• For graph games (and for marginal contribution networks), deciding whether a payoff vector is in the bargaining set is(cid:2) P2 -complete; and,• For marginal contribution networks, deciding whether the core is non-empty is in co-NP.These main achievements are summarized in Table 1. Note that the complexity of the problems of deciding the mem-bership of a payoff vector in the core, in the kernel, and in the bargaining set (In-Core, In-Kernel, and In-BargainingSet,respectively) are now completely characterized for graph games and marginal contribution networks. Moreover, observethat the non-emptiness problem makes sense only for the core, given that the kernel and the bargaining set are alwaysnon-empty over coalitional games, unless there is no imputation at all (see, e.g., [62]).G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101881Table 1Summary of results. Hardness results on membership problems hold even if the payoff vector is actually animputation.ProblemIn-CoreIn-KernelIn-BargainingSetCore-NonEmptinessGraph gamesco-NP-complete [26](cid:3) P(cid:2) P2 -complete2 -completeco-NP-complete [26](cid:2)Hardness shown by Ieong and Shoham [44].Table 2Summary of results for P, wNPopt , and NPopt -representations.MC-netsco-NP-complete [44](cid:3) P(cid:2) P2 -complete2 -completeco-NP-complete(cid:2)ProblemIn-CoreIn-KernelIn-BargainingSetCore-NonEmptinessP and wNPopt-representationsNPopt-representationsco-NP-complete(cid:3) P(cid:2) P2 -complete2 -completeco-NP-completeD P -complete(cid:3) P(cid:2) P2 -complete2 -complete(cid:3) P2 -completeThese achievements are only a part of the overall research reported in the paper. Indeed, we go beyond and study thecomputational issues arising in relevant generalizations and specializations of the settings of graph games and MC-nets.Generalizations. We consider an abstraction of compact coalitional games that is based on assuming that the worthfunction is provided as an oracle operating over some given structure encoding the game. In particular, based on the com-putational properties of the oracle, we consider two different representation schemes:(1) P-representations, where oracles encode functions computable in (deterministic) polynomial time w.r.t. the size of thegame. Graph games and MC-nets are two notable examples of games that can be encoded via P-representations.(2) NPopt-representations, where oracles are powerful enough to encode NP-hard optimization problems. Combinatorialoptimization games [25] are the most notable class of games that can be encoded via NPopt-representations.Moreover, we also consider the following restriction of the latter setting:(3) weak NPopt-representations (short: wNPopt-representations), where the worth v(N) associated with the whole set N ofplayers is explicitly provided as an input in the game specification, or can be computed easily (read: polynomial time)from it, while there are no further requirements on v(S), for any S ⊂ N. This setting, which comprises for instance thesetting studied by Conitzer and Sandholm [18] of games with synergies among coalitions where the total worth is givenas an input, naturally arises in those scenarios where players divide some given worth that is known beforehand to allof them.A summary of the complexity results for the above three representations is reported in Table 2. It is easily seen thathardness results reported in Table 1 provide lower bounds for the complexity of the problems with P, wNPopt, and NPopt-representations. Notably and surprisingly, however, one may observe that nothing has to be paid for dealing not only witharbitrary P-representations, but even with the more powerful class of wNPopt-representations. This means, in particular, thatas long as the worth v(N) is easily computable or given in input, the cost of computing the worth of any coalition S ⊂ N(which generally amounts to solving an NP-hard optimization problem) has no impact on the intrinsic complexity of thethree solution concepts. An increase in complexity is instead exhibited for NPopt-representations, but just with the core.In particular, note that membership results in Table 2 for NPopt-representations immediately entail membership resultsfor many problems over well-studied classes of games for which no upper bound was known. For instance, this is the casefor core-related problems over traveling salesman games [31], whose precise complexity is listed as an open problem byOkamoto [61].Specializations. Finally, in the last part of the paper, by following the perspective adopted by Ieong and Shoham [44], weanalyze the complexity of the solution concepts in “structurally restricted” marginal contribution networks. Our startingpoint of the investigation is the observation that the agent-graph encoding often obscures the actual intricacy of the game.For instance, classes of marginal nets with only one rule involving all the players of the game do not fall in the tractableclasses analyzed by Ieong and Shoham [44], though all solution concepts can trivially be computed over them.1882G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Table 3Tractability over classes of games having bounded treewidth (btw).Problem\btw classesIn-CoreIn-KernelIn-BargainingSetCore-NonEmptinessGraph gamesP [44]P [44]P (small values)P (small values)openP [44]openP [44]P (small values)P (small values)openP (small values)MC-nets (agent graph)MC-nets (incidence graph)Motivated by this observation, our first contribution is to propose a novel encoding based on the incidence graph of amarginal contribution network,2 and show that this encoding is always preferable to the agent graph one. Formally, theincidence graph IG(M) of a marginal contribution network M is a bipartite graph, whose set of nodes consists of theplayers and rules in M, and where there is an edge between a player p and a rule r if and only if p occurs in the patternof r. As an example, Fig. 2 reports on the right the incidence graph associated with the MC-net of Example 1.3—note thatIG(M) is acyclic, while AG(M) contains cycles. More generally, we shall observe that there are MC-nets whose incidenceencodings are acyclic while the corresponding agent graphs have unbounded treewidth, and that if an agent graph hasbounded treewidth, then the corresponding incidence representation has bounded treewidth too.Based on this encoding, we then embark on a systematic study of the complexity of the solution concepts over classesof marginal contribution nets whose incidence graphs (and, hence, agent graphs) have treewidth bounded by some fixedconstant. In particular, we establish several tractability results by showing that such concepts can be expressed in terms ofoptimization problems over Monadic Second Order Logic (MSO) formulae, and by subsequently applying Courcelle’s Theorem[19] and its generalization to optimization problems due to Arnborg et al. [2].A summary of our results is reported in Table 3. Note that, in order to get tractable classes via the logic-based approachof Arnborg et al. [2], it turns out that the values occurring in the network must be “small”, that is, polynomially bounded inthe size of the game or, equivalently, given in unary. Thus, tractability islands identified in this paper for the core (problemsIn-Core and Core-NonEmptiness) are eventually incomparable to those singled out by Ieong and Shoham [44]. In particular,our islands lead to pseudo-polynomial algorithms when values are not small, and thus the question is open about whether(full) polynomial-time algorithms exist for MC-nets whose incidence graphs have bounded treewidth.Note also that the logic-based approach allowed us to derive tractability results for the kernel of marginal contributionnetworks under the incidence graph encoding. Of course, such results immediately apply to the agent graph encoding—just recall from above that incidence encodings have been proved to be more general than agent graphs—and, in turn, tograph games—just recall from the previous section that any graph game can be encoded as a marginal contribution networkhaving the same (agent graph) structure. Notably, these results concerning the kernel are the first structural tractabilityresults exhibited in the literature for this solution concept.Finally, we point out that a characterization of the bargaining set in terms of optimization problems over Monadic SecondOrder Logic is missing in the paper. In fact, we leave as an open problem whether In-BargainingSet remains intractableover acyclic games and when, moreover, small values are considered.1.4. OrganizationThe rest of the paper is organized as follows. Preliminaries on computational complexity are reported in Section 2. Anabstract framework for compact games is discussed in detail in Section 3. The complexity of the kernel, bargaining set, andcore is analyzed in Sections 4, 5, and 6, respectively. Structural tractability results are discussed in Section 7 and, eventually,a few final remarks and discussions on some open research issues are reported in Section 8.2. Preliminaries on computational complexityIn this section we recall some basic definitions about complexity theory, and refer the reader to the work by Johnson[46] for additional details.2.1. The complexity of decision problemsDecision problems are maps from strings (encoding the input instance over a fixed alphabet, e.g., the binary alphabet{0, 1}) to the set {“yes”, “no”}. The class P is the set of decision problems that can be solved by a deterministic Turingmachine in polynomial time with respect to the input size, that is, with respect to the length of the string that encodes theinput instance. For a given input x, its size is usually denoted by (cid:10)x(cid:10).Throughout the paper, we shall often refer to computations carried out by non-deterministic Turing machines. We recallthat these are Turing machines that, at some points of the computation, may not have one single next action to perform,2 This is inspired by the incidence graph encoding of constraint satisfaction problems (see, e.g., [41]).G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101883but a choice between several possible next actions. A non-deterministic Turing machine answers a decision problem if, onany input x, (i) there is at least one sequence of choices leading to halt in an accepting state if x is a “yes” instance (such asequence is called accepting computation path); and (ii) all possible sequences of choices lead to a rejecting state if x is a“no” instance. The class of decision problems that can be solved by non-deterministic Turing machines in polynomial timeis denoted by NP.Problems in NP enjoy a remarkable property: any “yes” instance x has a certificate for it being a “yes” instance, whichhas polynomial length and which can be checked in polynomial time (in the size (cid:10)x(cid:10)). As an example, deciding whether aBoolean formula Φ over the variables X1, . . . , Xn is satisfiable, i.e., deciding whether there exists some truth assignment tothese variables making Φ true, is a well-known problem in NP; in fact, any satisfying truth assignment for Φ is obviouslya certificate that Φ is a “yes” instance, i.e., that Φ is satisfiable.The class of problems whose complementary problems are in NP is denoted by co-NP. Of course, the class P is containedin both NP and co-NP. The class D P is the class of problems that can be defined as a conjunction of two problems, onefrom NP and one from co-NP, while its complement co-D P is the class of problems that can be defined as the disjunctionof two problems, one from NP and one from co-NP. Thus, D P and co-D P are supersets of both NP and co-NP.Throughout the paper, we shall also refer to a type of computation called computation with oracles. Intuitively, oraclesk , (cid:2) Pare subroutines which are supposed to have unit cost.k , and (cid:3) PThe classes (cid:4) P= PΣ P= NPΣ Pk−1 , (cid:3) P(cid:4) Pkkis solvable in (cid:4) Pk . Here, (cid:4) PTuring machine that may use an oracle in (cid:4) Pk (resp., (cid:3) Pk−1 , and (cid:2) Pkk , forming the polynomial hierarchy, are defined as follows: (cid:4) P0= (cid:2) P0= P and for all k (cid:2) 1,k where co-(cid:4) P= co-(cid:4) Pk denotes the class of problems whose complementary problemk ) models computability by a non-deterministic (resp., deterministic) polynomial-timek−1. Note that (cid:4) P1 coincides with NP, and that (cid:2) P1 coincides with co-NP.We conclude by recalling the notion of reducibility among decision problems. A decision problem A1 is polynomiallyreducible to a decision problem A2, denoted by A1 (cid:3)p A2, if there is a polynomial-time computable function h (calledreduction) such that, for every x, h(x) is defined and x is a “yes” instance of A1 if and only if h(x) is a “yes” instance of A2.A decision problem A is hard for a class C of the polynomial hierarchy (at any level k (cid:2) 1, i.e., beyond P) if every problemin C is polynomially reducible to A; if A is hard for C and belongs to C, then A is said to be complete for C. Thus, problemsthat are complete for C are the most difficult problems in C. In particular, they cannot belong to some lower class in thehierarchy unless some collapse occurs.Characterizing the precise computational complexity of a problem means understanding its sources of complexity. Thisinformation may allow us to identify tractable instances by limiting some source of intractability, and to design and analyzealgorithms. For instance, note that any (cid:4) P2 -complete problem exhibits two orthogonal sources of intractability. To give anidea of some practical consequence of this fact, assume we would like to solve such a problem on a standard (deterministic)machine. Then, the theory tells us that we cannot design any flat-backtracking algorithm for our problem, unless P = NP.Indeed, any algorithm with a search-space tree having a polynomial number of levels (and such that moving along the treeedges does not take exponential time) should solve a nested co-NP-hard problem to check whether a leaf node is a solutionor not. That is, checking leaf-feasibility is an intractable problem as well, and hence it requires a nested call to a furtherbacktracking procedure (or to another kind of procedure with an exponential-time worst case).2.2. Complexity classes of functionsOften, we are interested in search problems where, for any given instance, a (non-Boolean) solution must be computed.The complexity classes of functions allow us to distinguish such problems according to their intrinsic difficulty, which isparticularly relevant when their associated decision problems belong to the same complexity class.Let a finite alphabet Σ with at least two elements be given. A (partial) multi-valued function f : Σ ∗ (cid:11)→ Σ ∗no, one or several outcomes (results) with each input string. Let f (x) stand for the set of possible results ofinput string x; thus, we write y ∈ f (x) if y is a value ofand graph( f ) = {(cid:3)x, y(cid:4) | x ∈ dom( f ), y ∈ f (x)}. If x /∈ dom( f ), we say that fdom( f ) = Σ ∗associatesf on thef on the input string x. Define dom( f ) = {x | ∃ y( y ∈ f (x))}is total ifis single-valued if | f (x)| = 1, for each x ∈ dom( f ).is undefined at x. The function fally bounded in the size of x. Then, the class NPMV is defined as the set of all multi-valued functions f such that (i) fpolynomially balanced and (ii) graph( f ) is in NP.is polynomially balanced if, for each x, the size of each result in f (x) is polynomi-is. The function fWe say that a multi-valued function fBy analogy, the class NPMVg (also known as FNP [64]) is defined as the class of all polynomially-balanced multi-valuedfor which graph( f ) is in P. If we deal with (partial) single-valued functions, we get the corresponding classesfunctions fNPSV and NPSVg , respectively [74].A transducer is a (possibly, non-deterministic) Turing machine T on the alphabet Σ with a read-only input tape, a read–write work tape, and a write-only output tape. For any string x ∈ Σ ∗, we say that T accepts x if T has an acceptingcomputation-path on x. For each x ∈ Σ ∗accepted by T , we denote by T (x) the set of all strings that are written by Ton the output tape in its accepting computation-paths on input string x. Thus, every transducer is associated with somemulti-valued function f (we say that T computes f ) such that, for each x ∈ Σ ∗, f (x) = T (x) if x is accepted by T ; otherwise,fis undefined at x (i.e., x /∈ dom( f )).1884G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910The class FP consists of all functions that are computed by deterministic Turing transducers in polynomial time. Theclass NPMV can be equivalently characterized as the class of all multi-valued functions that can be computed by non-deterministic transducers in polynomial time.It is worthwhile noting the difference between the two classes NPMVg and NPMV. In fact, NPMV contains more com-plex functions than NPMVg (assuming P (cid:13)= NP). For instance, consider the problem of computing the partial multi-valuedfunction f H that, given a graph G, outputs the Hamiltonian cycles of G (if any). This function is in NPMVg since graph( f H )is polynomially balanced and decidable in deterministic polynomial time (for any pair (cid:3)G, C(cid:4), just check whether C is aHamiltonian cycle of G). Let us consider now the weighted version of this problem, where the input graph G is edge-weighted, and the function values are the weights of the Hamiltonian cycles of G (if any). Then, this partial multi-valuedfunction, say f WH, belongs to NPMV but does not belong to NPMVg (unless P = NP). Indeed, deciding whether a givenpair (cid:3)G, w(cid:4) (graph, weight) belongs to graph( f WH) is clearly NP-complete, as one needs to exhibit some Hamiltonian cyclehaving weight w in order to recognize that w is a correct function value.To conclude, we notice that, like Turing machines, transducers can use oracles while computing. In particular, in this2 , which contains those functions computable in polynomial time via a deterministic Turingpaper we will use the class F(cid:3) Ptransducer using an NP oracle.3. A formal framework for compact representationsRGraph games and marginal contribution networks are two prominent examples of compact representations for coalitionalgames, whose worth functions are defined in terms of some suitable (combinatorial) structure, instead of listing the worthsof all coalitions. In fact, several other compact representations have been proposed in the literature, as we illustrated inSection 1. In this section, we shall provide a unifying framework for them, which will be the basis for our subsequentcomplexity analysis.A compact representation R defines suitable encodings for a class of coalitional games, denoted by C(R). Formally, anysuch that, for any coalitional game G ∈ C(R),and a worth function vR(ξ R(G), S) is the worth associated with the coalition S according to G. Noterepresentation R defines an encoding function ξ Rξ R(G) is the encoding of the game G, and vthat vis total and single-valued.As an example, let us denote by GG the graph game representation. Then, any coalitional game G ∈ C(GG) is encodedas a weighted graph ξ GG (G), and the worth function vGG (ξ GG (G), S) is computed for every coalition S by taking thesum of the weights of all edges of ξ GG (G) included in S. Similarly, for the case of the marginal contribution nets compact-representation MCN , any game G is encoded by a set of rules ξ MCN (G), and the function vMCN (ξ MCN (G), S) computesthe worth of S as the sum of the values of those rules in ξ MCN (G) that apply to coalition S.Whenever a compact representation R is understood, we can just write G instead of ξ R(G), and v(S) instead ofR(ξ R(G), S). While doing so, we are identifying the game with its actual representation (by furthermore ignoring thevactual procedure underlying the computation of the worth values). In fact, this is very popular in the literature. For instance,the naming “marginal contribution network” usually denotes a coalitional game rather than—more formally—its encoding.Similarly, the weighted graph underlying the definition of a graph game is usually identified with the game itself.R3.1. Computational-based classification of games representationsThe framework we are going to illustrate is based on classifying any compact representation R on the basis of theRcomputational properties of the associated worth function v. In particular, two basic kinds of representation will beconsidered, corresponding to polynomial-time functions and to functions powerful enough to encode NP-hard optimizationproblems. A weak variant of this latter setting will also be discussed.3.1.1. P-representationsLet us start with the computationally cheapest representation.Definition 3.1. Let R be a compact representation for coalitional games. We say that R is a polynomial-time compact represen-tation (short: P-representation) if vbelongs to FP, i.e., if it is polynomial-time computable by a deterministic transducer.RNote that both GG and MCN are based on worth functions that are efficiently computable. Other polynomial-timecompact representations that received considerable attention in the literature are reported below:Minimum cost spanning tree games [57]: Let N be a set of players and consider the complete graph K N on the node setN ∪ {0}, where 0 /∈ N is a distinguished (supply) node. Assume that the edges of K N have associated nonnegativeweights. Then, the function v(S) returns, for each coalition S ⊆ N, the cost of a minimal spanning tree on thenode set S ∪ {0}. This cost, which can be computed in polynomial time (see, e.g., [20]), reflects the minimum costof guaranteeing the connectivity of players in S with the supply node 0.Flow games [48]: A flow network is given, that is, a directed graph D = (N, E) with a source node s ∈ N, a sink nodet ∈ N, and where each edge in E is associated with a weight denoting its capacity. Each player controls one of theG. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101885directed edges in E, and the worth v(S) of each coalition S ⊆ E is the value of a maximum flow from s to t inthe subnetwork induced by S. Note that this is a P-representation, since a maximum flow can be computed inpolynomial time (see, e.g., [20]).Linear production games (Owen’s model) [63]: There are m resources and p final goods, such that the price of good j isdenoted by v j . A set N of players is given, and each player i ∈ N is endowed with bik units of resource k. Linearproduction technologies can be used to transform resources into goods. This is formalized via a matrix A ∈ Rm×psuch that Ak, j is the units of resource of type k needed to produce one unit of good j. For each coalition S ⊆ N, itsmembers share their resources and, thus, the value v(S) is defined as the maximum market value of the outputsthat can be jointly produced by the members of S, that is:(cid:2)(cid:4) (cid:2)(cid:3)v(S) = maxv j x jsuch thatjx j (cid:2) 0j Ak, j x j (cid:3)i∈S bikfor each resource kfor each good jGames in multi-issue domains [17]:Note that v(S) can be computed in polynomial time, since it is the solution of a linear program [65] (we stresshere that values Ak, j ’s in the linear program are constants, since those are values explicitly expressed in the inputgame representation).In this representation scheme, a set N of players is concerned with a set T of inde-pendent issues that each coalition can address. In general, each issue i ∈ T is formalized as a coalitional gamehaving its own worth function v i : 2N (cid:11)→ R, which just concerns a set Ci ⊆ N of players, i.e., v i(S1) = v i(S2), foreach pair of coalitions S1 and S2 such that S1 ∩ Ci = S2 ∩ Ci . Then, the worth v(S) of a coalition S ⊆ N is the sumof the contributions over all the issues, i.e., v(S) =i∈T v i(S). By assuming that, for each i ∈ T , |Ci| is boundedby a fixed constant, all the functions can be represented in constant space and v(S) can be computed in lineartime.(cid:2)Multi-attribute games [45]: We are given a set N = {1, . . . , n} of agents and a set M = {1, . . . , m} of attributes, with amatrix A ∈ Rm×n where Ai, j denotes the value of attribute i for agent j. Moreover, we are given the functionsa : Rm×n × 2N (cid:11)→ Rm and w : Rm (cid:11)→ R aggregating the attributes of the agents in any coalition S ⊆ N into a singlevalue per attribute, and grouping such aggregated values, respectively. Then, the worth v(S) is defined as the valuew(a( A, S)). This representation is capable to describe any coalitional game, and in fact the space needed to list allthe associations of values determined by the function a is exponential in general (w.r.t. the number of players).Indeed, just notice that a is also a function of the given coalition. However, in some relevant cases (for instance,whenever a just sums the contributions of all the agents in the coalition), exponentially more succinct encodingscan be used, yet preserving its polynomial-time computability.Weighted voting games [58]: A set N of players is given, together with a non-negative value q ∈ R. For each player i ∈ N,i∈S w i (cid:2) q;a non-negative weight w i is additionally given, so that the worth v(S) of each coalition S ⊆ N is 1 ifotherwise, v(S) = 0 holds.(cid:2)Read-once (and general) marginal contribution nets [29]: The so-called general marginal contribution networks are gen-eralizations of MC-nets, where the pattern of each rule can be an arbitrary Boolean formula (i.e., includingconjunctions, negations, and disjunctions) over the variables representing the players of the game. Read-oncenets restrict Boolean formulae to be read-once, in the sense that each variable can appear only once. Despitethe increased expressive power w.r.t. MC-nets, the worth of any coalition can be still computed in polynomialtime.Skill games [9]: We are given a set N of agents, each one owning some skills. The agents have to perform certain tasksfrom a set T , each one requiring a set of skills in order to be accomplished. Thus, each coalition S ⊆ N is capable ofcarrying out the set T (S) ⊆ T of all those tasks whose required skills are owned by the players in S. A task value(increasing) function u : 2T (cid:11)→ R is additionally given, which maps any subset of the tasks a coalition achieves to areal value. The worth v(S) of S is, then, the value returned by u over all the tasks that can be carried out by S, i.e.,v(S) = u(T (S)). This general representation requires space exponential in |T | (needed for encoding the function u).Succinct representations are obtained whenever |T | is bounded by some fixed constant, or when the task valuefunction u is of special forms (such as counting the total number of tasks accomplished by the coalition).Matching games [75,49]: We are given an undirected graph G = (N, E). The player set is N and the value of a coalitionS ⊆ N is defined as the size of a maximum matching, i.e., of a set of disjoint edges in the subgraph induced bythe nodes in S. Note that this is a P-representation, since a maximum matching can be computed in polynomialtime [34].Path disruption games [8]: We are given a graph G = (V , E) and two vertices a, b ∈ V , namely the source and the targetvertices. The player set is N = V \ {a, b} and the value of a coalition S ⊆ N equals 1 if removing from G all thevertices in S results in the vertex a to be completely disconnected from b (i.e., there is no path between them).Otherwise the value of the coalition is 0.(Vertex) Connectivity games [10]: We are given a graph G = (V , E), and a partition of V in the three sets V p (primaryvertices), V b (backbone vertices), and V s (standard vertices). The player set is V s and the value of a coalitionS ⊆ V s equals 1 if every pair of primary vertices is connected in the subgraph of G induced over the vertices inV p ∪ V b ∪ S. Otherwise the value of the coalition is 0.1886G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19103.1.2. NPopt-representationsIn certain domains where worth functions reflect results of complex algorithmic procedures or combinatorial problems,P-representations are not adequate. In these cases, more powerful representations are needed, as illustrated in the followingexample.Example 3.2. An undirected graph G = (N, E) is given. The player set is N and the value of a coalition S ⊆ N is definedas the size of a maximum clique in the subgraph induced by the nodes in S. Computing the size of a maximum clique isa well-known NP-hard problem (see, e.g., [35]). Therefore, under standard complexity assumptions, such a game cannot beencoded in any P-representation.Note that the above class of games is just an instance of the very general framework of combinatorial games discussedby Deng et al. [25]. Roughly, in this framework, each coalition S is associated with a system L S of (mixed-)integer linearinequalities, which can be built in polynomial time (w.r.t. the size of the game). Let Ω(L S ) denote the set of all feasiblesolutions of L S . Then, the worth of S can be defined as the maximum over all these values, i.e., v(S) = max{ y | y ∈ Ω(S)}.For instance, in the games of Example 3.2, given the graph G = (N, E), the worth function can be written as follows:v(S) = max(cid:3)v∈Vxvsuch that(cid:5)xv + xv(cid:16) (cid:3) 1 ∀{v, v∀v ∈ Nxv ∈ {0, 1}(cid:16)} ⊆ N s.t. {v, v(cid:16)} /∈ EInspired by this general framework, we propose the following NPopt-representation scheme to capture games defined interms of optimization problems (not necessarily specified via systems of mixed-integer linear inequalities).Definition 3.3. Let R be a compact representation for coalitional games. We say that R is an optimization non-deterministicpolynomial-time compact representation (short: NPopt-representation) if the worth function vis such that, given a set S ofR(ξ R(G), S) = max{w | w ∈ fplayers in a game G ∈ C(R), vis an NPMV function (i.e., computableby a non-deterministic transducer in polynomial time) called the feasibility function (of R).R(ξ R(G), S)}, where fRRRRNote that the role of fin the above definition is to provide the values associated with all possible feasible solutions,will select the best one among them.3 For instance, in the case of the games in Example 3.2, the feasibilityso that vfunction returns the set of all sizes of possible cliques: This function is clearly a multi-valued one, and a polynomial-timenon-deterministic transducer may compute any value by just guessing (with polynomially many bits) a clique, and thenreturning its size as the output.Other representations for coalitional games proposed in the literature and based on some NP-hard optimization problemare illustrated next. The reader may want to check that, for each of them, the associated feasibility function is computablein NPMV:(cid:16)Games with synergies among coalitions [18]: A set N of players is given together with a set W = {(B 1, v(B1)), . . . ,(Bn, v(Bn))} of pairs where B i ⊆ N is a coalition and v(B i) is its associated worth (explicitly given in input).(cid:16)For any coalition S ⊆ N, the worth is then given by the maximum of(Bi ,v(Bi ))∈W (cid:16) v(B i) over all the subsets Wof W such that coalitions in Wform a partition of S. Conitzer and Sandholm [18] observed that this represen-tation is capable of capturing any possible worth function, if the set W is allowed to contain exponentially maypairs (w.r.t. the number of players). In the relevant cases where W contains just polynomially many pairs (thosethat introduce “synergy”), the size of the input is exponentially more succinct, but computing the worth of anycoalition becomes NP-hard.(cid:2)Traveling salesman games [31]: Let N be a set of players and consider the complete graph K N on the node set N ∪ {0},where 0 /∈ N is a distinguished node. Assume that the edges of K N have associated nonnegative weights. Then, thefunction v(S) returns, for each coalition S ⊆ N, the cost of the minimum length traveling salesman tour visitingall nodes in S ∪ {0}, i.e., the minimum cost of connecting 0 with all the players in S with a ring structure.Facility location games [37]: A set N of customers needs a service which can be provided by connecting them to anyfacility taken from a given set F . Facilities are initially “close”. Opening (or building) a facility i ∈ F costs f i (cid:2) 0,and connecting customer j to it costs ci, j (cid:2) 0. As additional constraints, some facilities might be given that canhandle just some fixed number of customers, and certain customers might be precluded to be assigned to certainfacilities. For these games, v(S) returns the minimum cost of providing the service to all players in S.3 Readers that are familiar with the theory of optimization problems might like to notice that the class of maximization functions in Definition 3.3 hasthe same computational power as the class OptP [52] of those functions that can be computed as the maximum over all the values written on the branchesof an NP metric Turing machine, i.e., of a machine that halts on every branch and writes a number. These values play indeed the role of the feasible valuesis computable in OptP. In the paper,returned by fwe prefer to use the formulation based on a feasibility function, since we feel it is more intelligible to a wider audience, being based on standard Turingmachines.. Thus, Definition 3.3 might equivalently be restated by saying that R is an NPopt -representation if vRRG. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101887Combinatorial games over graphs [25]: A graph G = (N, E) is given, and the worth v(S), for each coalition S ⊆ N, is de-fined as the solution to some (typically, NP-hard) optimization problem over the subgraph induced by S. In thecase of the games discussed in Example 3.2, the optimization problem is that of computing a clique of maxi-mum cardinality. Among the other problems considered by [25], we mention here minimum vertex cover, maximumindependent sets, minimum edge cover, and minimum coloring.Bin-packing games [32]: A set {1, . . . , n} of items whose nonnegative sizes are a1, . . . , an, and a set {1, . . . , m} bins whosenonnegative sizes are b1, . . . , bm are given. It is assumed that every item fits every bin, that is, ai (cid:3) b j , for all1 (cid:3) i (cid:3) n and 1 (cid:3) j (cid:3) m. The set N of players consists of all the items and all the bins. Let S = A ∪ B ⊆ N be acoalition, where ∅ ⊆ A ⊆ {1, . . . , n} is a set of items, and ∅ ⊆ B ⊆ {1, . . . , m} is a set of bins. The worth functionassociates with S the maximum total size of items in A that can be packed into bins in B.Permutation games [77]: There is a set N of n players. Each player i ∈ N has a job J i and a machine Mi . Any machine canprocess at most one job, and ki, j is the cost for executing job J i on machine M j . For each coalition S, the worthi∈S ki,π (i), where the minimum is taken over all permutations π : S (cid:11)→ S, andfunction is defined by v(S) = minthe value π (i) indicates on which machine is executed the job of player i; that is, machine Mπ (i) processes job J i .(cid:2)In fact, some of the classes of games discussed above include functions defined in terms of minimization problemsrather than maximization ones. In these cases, the underlying coalitional games are usually cost-minimization games, whereplayers are not willing to maximize the worth they receive (as we presented them in the Introduction), but they are ratherinterested in minimizing the cost paid when carrying out certain tasks. Cost-minimization coalitional games come in theliterature with their own specific definitions for the various solution concepts. However, such definitions are completelyinterchangeable with the (standard) ones for worth-maximization games, provided that each cost is viewed as the oppositeof a worth (i.e., by inverting its algebraic sign). Therefore, as often done in the literature, we can just focus on one of the twosettings only, without any loss of generality (thus, all the above classes of games actually fit Definition 3.3). In particular,we shall discuss the solution concepts as they are commonly defined for worth-maximization games and, accordingly, wehave assumed optimization problems for NPopt-representations to be maximization ones.We end the section by noticing that NPopt-representations include those cases where worth functions can be computedon the basis of the answer to some NP-complete decision problem, rather than as the optimal solution to an optimizationproblem.Example 3.4 (Graph games with legal coalitions). Consider a slight modification of the setting of graph games in which onlycertain kinds of coalitions are allowed to form.Let G = (cid:3)(N, E), w(cid:4) be a weighted graph. For a coalition S ⊆ N of nodes, let an S-cut be a pair (S 1, S2) such thatS1 ∪ S2 = S and S1 ∩ S2 = ∅, and let the weight of (S1, S2) be the sum of all the weights of the edges in E having oneof their endpoints in S1 and the other in S2. For a threshold σ ∈ R, we say that S is legal (w.r.t. σ ) if the weight of themaximum S-cut is greater than σ .As an example, consider again the graph game depicted on the left of Fig. 1 over the players in {a, b, c, d}, and letσ = 4 be the given input threshold. Then, the weight of the maximum cut for the coalition {a, b, c} is the one illustratedin the figure, whose weight is 4. Hence {a, b, c} is not legal. Instead, the coalition {a, b, d} is legal, since the weight of themaximum cut for {a, b, d} is 5.Consider now the following worth function, where M is an arbitrarily large penalty assigned to coalitions that are notlegal:v(S) =(cid:5) (cid:2)e∈E|e⊆S w(e)−Mif S is legalotherwise(cid:2)To reformulate this function as a maximization problem, it suffices to consider the feasibility function f such that f (S) ={−M} ∪ {e∈E|e⊆S w(e) if and only if S isis computable by a non-deterministic transducer in polynomial time, given that deciding whether thelegal. Moreover,weight of the maximum cut in a graph is greater than a given threshold is an NP-complete problem [35].e∈E|e⊆S w(e) | S is legal}. In fact,is multi-valued, and its maximum value is(cid:2)ffIn fact, this example provides a general template to define several other instances of NPopt-representations, dependingon the specific semantics underlying the notion of “legal” coalition (and, of course, on the worth assigned to such legalcoalitions). For instance, in a planning environment, legal coalitions might be those that can achieve the desired goal. In aservice composition scenario, legal coalitions might be such that a subset of their members can provide the whole set oftasks whose interplay form the desired service, while satisfying some budget constraints.3.1.3. wNPopt-representationsAs a special case of NPopt-representations, we next consider classes of games where the worth v(N) associated withthe whole set N, i.e., the total available worth, is easy to compute or is directly given as a part of the input instance. Forinstance, this is the case in the setting of games with synergies among coalitions [18], already described above.Definition 3.5. Let R be a compact representation for coalitional games. We say that R is a weak NPopt-representation(short: wNPopt-representation) if the worth function vis such that, given a game G ∈ C(R),R1888G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910(1) v(2) for each coalition S ⊂ N, vR(ξ R(G), N) is computable in polynomial time, where N is the whole set of players in G; andR(ξ R(G), S) = max{w | w ∈ fR(ξ R(G), S)}, where the feasibility function fRis in NPMV.Note that P-representations are clearly a special case of wNPopt-representations, where fRis a (single-valued)polynomial-time function.Remark 3.6. In fact, the notion of wNPopt-representation can be further generalized by lifting the cost of computingR(ξ R(G), N) from polynomial time to NPSV without affecting any of our results (but two membership proofs, whichvwould require a couple of straightforward modifications—an easy exercise for the interested reader). That is, such an extrapower in the function defining the total worth comes for free, as far as the computational complexity of the solution con-cepts analyzed in this paper is concerned. However, for the sake of presentation and readability, we preferred to adopt themore familiar polynomial-time functions.We just observe here that, by using NPSV functions instead, we could model classes of games where computing the totalworth involves the solution of rather hard tasks. For example, one can imagine an extension of games with synergies amongR(ξ R(G), N) as an input, this value is defined as the maximum payoffcoalitions where, instead of having the total worth vthat any agent may obtain by playing some simple stochastic game [16], which can be easily seen to be an NPSV function(see, e.g., [79]).3.2. Expressive power of game representationsIn the previous section, we have classified game representations based on the intrinsic complexity of the associatedworth functions. Here, we complete the picture by discussing the expressive power of game representations.Let R be a game representation. If all coalitional games can be represented by R, we say that this representation iscomplete. Of course, when analyzing a representation R (and comparing it with some other ones), one may firstly want toask whether R is complete or not. For instance, MCN is a complete representation, while GG is not. However, there aregames whose MCN encodings have size exponential in the number of players [44,29].For comparison purposes, it is therefore relevant to look for a notion that captures expressiveness and succinctness ofthe specifications, as we formalize below.Definition 3.7. Let R1 and R2 be a pair of game representations. We say that R2 is at least as expressive (and succinct)in FP that translates a game ξ R1 (G) represented in R1 into anas R1, denoted by R1 (cid:4)e R2, if there exists a function fequivalent game ξ R2 (G) represented in R2, that is, into a game with the same players and the same worth function as theformer one. More precisely, we require that ξ R2 (G) = f (ξ R1 (G)) and vR2 (ξ R2 (G), S), for each coalitionof players S in the game G.R1 (ξ R1 (G), S) = vNote that if R1 (cid:4)e R2 holds, then any hardness result for the complexity of reasoning problems over R1 immediatelyapply to R2, as well as any membership result for problems over R2 immediately apply to R1. Thus, expressiveness rela-tions can be used to derive further complexity results after the complexity of some representation has been characterized.4It follows that it is convenient to prove hardness results for the least expressive representations and membership resultsfor the most expressive ones. In particular, as far as the latter kind of representations is concerned, we consider the verygeneral NPopt and wNPopt representations; for the former kind of representations, we focus on graph games because theyare both interesting in their own and less expressive than many other representations. For instance, it can easily be shownthat GG (cid:4)e MCN , and thus hardness results for graph games immediately apply to marginal contribution nets (cf. [44]).In fact, we explicitly discuss results on marginal contribution nets, as they are a minimal natural extension of graph gamesthat preserves their nice features (in terms of easiness of representation), but it is able to represent any coalitional game.Of course, if one is interested in hardness results for some representation that is incomparable with graph games (w.r.t.the above notion of expressiveness), then our results cannot be directly applied, and ad hoc reductions should be devised.4. The complexity of the kernelThe kernel is a solution concept introduced by Davis and Maschler [22]. To review its definition, we need to state somepreliminary concepts and notations, which will be extensively used throughout the paper.For any coalition S ⊆ N, let |S| denote the cardinality of S, and let RS be the |S|-dimensional real coordinate space,whose coordinates are labeled by the members of S; in particular, given a payoff vector x ∈ RS , xi denotes the componentassociated with the player i ∈ S. A vector x ∈ RS is called an S-feasible vector ifi∈S xi will besimply denoted by x(S) in the following.i∈S xi = v(S). The value(cid:2)(cid:2)4 We are implicitly assuming to talk about complexity results beyond P that are the subject of this paper, because for tractable classes inside P we shoulduse translation functions below FP.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101889Fig. 3. The game K ((cid:6)φ), where (cid:6)φ = (α1 ∨ ¬α2 ∨ α3) ∧ (¬α1 ∨ α2 ∨ α3).For any pair of players i and j of a coalitional game G = (cid:3)N, v(cid:4), we denote by Ii, j the set of all coalitions containingplayer i but not player j. The excess e(S, x) = v(S) − x(S) of the generic coalition S at the imputation x ∈ X(G) is a measureof the dissatisfaction of S at x. Define the surplus si, j(x) of player i against player j at an imputation x as the valuesi, j(x) = maxS∈Ii, j e(S, x) = maxS∈Ii, j (v(S) − x(S)).Intuitively, the surplus of player i against j at x is the highest payoff that player i can gain (or the minimal amount ican lose, if it is a negative value) without the cooperation of j, by forming coalitions with other players that are satisfiedat x; thus, si, j(x) is the weight of a possible threat of i against j. In particular, player i has more “bargaining power” thanj at x if si, j(x) > s j,i(x); however, player j is immune to such threat whenever x j = v({ j}), since in this case j can obtainv({ j}) even by operating on her own. We say that player i outweighs player j at x if si, j(x) > s j,i(x) and x j > v({ j}). Thekernel is then the set of all imputations where no player outweighs another one:Definition 4.1. The kernel K (G) of a TU game G = (cid:3)N, v(cid:4) is the set:K (G) =(cid:7)x ∈ X(G)(cid:8)(cid:8) si, j(x) > s j,i(x) ⇒ x j = v(cid:9){ j}(cid:10), ∀i, j ∈ N, i (cid:13)= j(cid:11).Example 4.2. Let G = (cid:3)N, v(cid:4) be a TU game with N = {a, b, c}, v({a}) = v({b}) = v({c}) = 0, v({a, b}) = 20, v({a, c}) = 30,v({b, c}) = 40, and v({a, b, c}) = 42.It is easily verified that the imputation x such that xa = 4, xb = 14, and xc = 24 is in the kernel of G. Indeed, we notefirst that every player in N receives in x a payoff strictly greater than what she is able to obtain by acting on her own. Forthis reason, in order for x to belong to K (G) it must be the case that si, j(x) (cid:3) s j,i(x), for all distinct players i and j. By thedefinition of the worth function, the maximum excess that a coalition S including i and excluding j can achieve is obtainedby the coalition S ∈ Ii, j such that |S| = 2. By this, si, j(x) = s j,i(x) = 2 for all pairs of different players i, j. Thus, x ∈ K (G).It is well known that K (G) (cid:13)= ∅, whenever X(G) (cid:13)= ∅ (see, e.g., [62]). Thus, the non-emptiness problem is trivial for thisconcept. Instead, as discussed by Deng and Papadimitriou [26], it is of interest to ask for the computational complexity ofdeciding whether a given payoff vector belongs to the kernel. This problem was conjectured to be NP-hard by those sameauthors [26], even for graph games. In the rest of the section, we firstly confirm their conjecture by actually showing that2 -hard. Then, we shall show that the corresponding membership result holds for any class of games C(R),the problem is (cid:3) Pwhere R is an arbitrary NPopt-representation.4.1. Hardness for graph gamesWe show that checking whether an imputation belongs to the kernel is (cid:3) P2 -hard for graph games. The proof is based ona reduction from the problem of the lexicographically maximum satisfying assignment for Boolean formulae.Let φ = c1 ∧ · · · ∧ cm be a 3CNF Boolean formula, that is, a Boolean formula in conjunctive normal form over the set{α1, . . . , αn} of variables that are lexicographically ordered (according to their indices), where each clause contains at mostthree literals (positive or negated variables). Assume, w.l.o.g., that there is a clause in φ containing at least two literals.Based on φ, we build in polynomial time the weighted graph K (φ) = (cid:3)(NK, EK), w(cid:4) such that (see Fig. 3 for an illustration):1890G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910• The set NK of nodes (i.e., players) includes: a variable player αi , for each variable αi in φ; a clause player c j , for eachclause c j in φ; a literal player (cid:11)i, j (either (cid:11)i, j = αi, j or (cid:11)i, j = ¬αi, j ), for each literal (cid:11)i ((cid:11)i = αi or (cid:11)i = ¬αi , respectively)occurring in c j ; and, two special players “chall” and “sat”.• The set EK consists of the following three types of edges.(Positive edges): an edge {c j, (cid:11)i, j} with w({c j, (cid:11)i, j}) = 2n+3, for each literal (cid:11)i occurring in c j ; an edge {chall, αi} withw({chall, αi}) = 2i , for each 1 (cid:3) i (cid:3) n; an edge {sat, αi} with w({sat, αi}) = 2i , for each 2 (cid:3) i (cid:3) n; the edge{sat, α1} with w({sat, α1}) = 21 + 20.(“Penalty” edges): an edge {(cid:11)i, j, (cid:11)i(cid:16), j} with w({(cid:11)i, j, (cid:11)i(cid:16), j}) = −2m+n+7, for each pair of literals (cid:11)i and (cid:11)i(cid:16) occurring inc j ; an edge {αi, j, ¬αi, j(cid:16) } with w({αi, j, ¬αi, j(cid:16) }) = −2m+n+7, for each variable αi occurring positively in c j andnegated in c j(cid:16) ; an edge {αi, ¬αi, j} with w({αi, ¬αi, j}) = −2m+n+7, for each variable αi occurring negatedin c j .(cid:2)(“Normalizer” edge):the edge {chall, sat}, for which we set w({chall, sat}) = 1 −e∈EK|e(cid:13)={chall,sat} w(e).Note that the size of K (φ) (and in particular of the representation of all the weights) is polynomial in the number ofvariables and clauses of φ. Two crucial properties of the above construction are stated in the following lemma, whose proofis given in Appendix A.Lemma 4.3. Let K (φ) = (cid:3)(NK, EK), w(cid:4) be the graph game associated with the 3CNF formula φ. Then:(A) w({chall, sat}) (cid:2) D + 1; and,(B) D + w(e) < 0, for each penalty edge e ∈ EK,where D = max{chall,sat}(cid:2)S⊆N v(S) denotes the maximum worth over all the coalitions not covering the edge {chall, sat}.Based on the above properties, we can now prove the main result.Theorem 4.4. On the class C(GG) of graph games, In-Kernel is (cid:3) P2 -hard (even if the given payoff vector is an imputation).Proof. Let φ = c1 ∧ · · · ∧ cm be a satisfiable 3CNF formula over a set {α1, . . . , αn} of variables that are lexicographicallyordered (according to their indices). Deciding whether α1 (that is the lexicographically least significant variable) is true inthe lexicographically maximum satisfying assignment for φ is a well-known (cid:3) PConsider the graph game K (φ) = (cid:3)(NK, EK), w(cid:4), and the imputation x that assigns 0 to all players of K (φ), but forsat, which receives 1. In fact, x is an imputation since v(N) = 1 because of the weight of the edge {chall, sat} (recall thatw({chall, sat}) = 1 −2 -complete problem [52].(cid:2)e∈EK|e(cid:13)={chall,sat} w(e)).At first, observe that, by Definition 4.1 and since sat is the only player that receives in x a payoff strictly greater thanher worth as a singleton coalition, x ∈ K (K (φ)) if and only if maxS∈Ii,sat e(S, x) (cid:3) maxS∈Isat,i e(S, x), for each player i (cid:13)= sat.But we can notice that the following holds (the proof is given in Appendix A):Property 4.4.(1). For each player i /∈ {sat, chall}, it holds that maxS∈Ii,sat e(S, x) (cid:3) maxS∈Isat,i e(S, x).Hence, Property 4.4.(1) further restricts the coalitions of interest and, indeed, we can conclude that x ∈ K (K (φ)) if andonly ifmaxS∈Ichall,sate(S, x) (cid:3) maxS∈Isat,challe(S, x).(1)Now, we are going to characterize the structure of the two terms maxS∈Isat,chall e(S, x) occurringin Eq. (1) by establishing a connection with satisfying assignments for φ. In particular, for any truth assignment σ , wedenote by σ |(cid:21) φ the fact that σ satisfies φ, and by σ (αi) = true (resp., σ (αi) = false) the fact that αi evaluates to true(resp., false) in σ . Then, we can state the following two properties, whose proofs are given in Appendix A.chall,sat e(S, x) and maxS∈IProperty 4.4.(2). maxS∈IProperty 4.4.(3). maxS∈Ichall,sat e(S, x) = m × 2n+3 + maxσ |(cid:21)φsat,chall e(S, x) = m × 2n+3 + maxσ |(cid:21)φ(|{α1 | σ (α1) = true}| +αi |σ (αi )=true 2i.(cid:2)(cid:2)αi |σ (αi )=true 2i) − 1.We can now rewrite Eq. (1) in the light of the above two properties, and conclude that x ∈ K (K (φ)) if and only if(cid:8)(cid:7)(cid:8)(cid:12) (cid:3)(cid:3)(cid:11)(cid:8)(cid:8)(cid:13)2i +(cid:8)(cid:8) σ (α1) = trueα1,1 + maxσ |(cid:21)φ2i (cid:3) maxσ |(cid:21)φαi |σ (αi)=trueαi |σ (αi )=truethat is, x ∈ K (K (φ)) if and only if α1 is true in the lexicographically maximum satisfying assignment for φ. (cid:2)G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101891Note that the above result can immediately be extended to all representations at least as expressive (and succinct) asgraph games.Corollary 4.5. Let R be any compact representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-Kernel is (cid:3) P2 -hard.2 -hardness for graph games, we know that there is a polynomial-time reduction f 1 from any (cid:3) PProof. From the (cid:3) P2 problemΥ to the In-Kernel problem for graph games. Moreover, recall from Section 3 that GG (cid:4)e R means that there exists apolynomial-time function f 2 that translates any graph game ξ GG (G) into an equivalent game f 2(ξ GG (G)) belonging toC(R), that is, into a game with the same worth function and, thus, the same kernel as the former one. Therefore, the2 problem to the In-Kernel problem for games incomposition ofC(R). (cid:2)f 1 and f 2 is a polynomial-time reduction from any (cid:3) P4.2. Membership resultsNext, we show that the In-Kernel problem is in (cid:3) P2 , even when dealing with NPopt-representations. Before presentingthis result, we illustrate some facts of NPopt-representations that will also be used to analyze the other solution concepts.Lemma 4.6. Let R be any compact representation for coalitional games, let G be a game in C(R) over a set N of players, and letS ⊆ N be a coalition. Assume that the worth function visa feasibility function computable in NPMV. Then:R(ξ R(G), S) = max{w | w ∈ fR(ξ R(G), S)}, where fis such that vRR(1) For any value h, checking whether vR(ξ R(G), S) > h (i.e., whether there is a value w ∈ fR(ξ R(G), S) such that w > h) is inNP.(2) Computing the value vR(ξ R(G), S) is in F(cid:3) P2 .Proof. (1) For any value h, vThis latter property can be verified by guessing in NP the value w ∈ f(cid:3)(ξ R(G), S), w(cid:4) ∈ graph( f(cid:3)(ξ R(G), S), w(cid:4) belongs to the graph of the function fR(ξ R(G), S) such that w > h.R(ξ R(G), S) together with a certificate c thatR). Then, we can check in (deterministic) polynomial time that w > h and, by exploiting c, thatR(ξ R(G), S) > h holds if and only if there is a value w ∈ fR(ξ R(G), S) can be computed by performing a binary search over the range of the possible values forR(ξ R(G), S) > h holds.R(S) is polynomially bounded and, thus, the binary search converges in atthe worth function by using an oracle, which checks whether, for any given value h in this range, vSince fmost polynomially many steps. Finally, by point (1) above, note that the oracle belongs to NP. (cid:2)is computable in NPMV, the size of v(2) The value vRR.Theorem 4.7. Let R be any NPopt-representation. On the class C(R), In-Kernel is in (cid:3) P2 .Proof. Let G ∈ C(R) be a coalitional game, and x a payoff vector. Recall from Definition 3.3 that for each coalition S ⊆ N,RR(ξ R(G), S) = max{w | w ∈ fvis a feasibility function computable in NPMV.R(ξ R(G), S)} holds, where fNote that, in order to check whether x is actually an imputation, we have to compute the worths associated to all thesingleton coalitions plus the worth associated to the whole set of players. This is in F(cid:3) P2 , by Lemma 4.6(2).Assume now that x is an imputation. For all pairs of distinct players i and j with v( j) > x j , we have to check thatsi, j(x) = s j,i(x). Observe here that we can compute the value si, j(x) by means of a binary search over the range of thepossible values for the worth functions by using an oracle that, for any value h in this range, decides whether there is aR(S) is polynomially bounded, the above binary search allows uscoalition S ∈ Ii, j such that e(S, x) > h. Since the size of vto find the maximum excess in at most polynomially many steps. To complete the proof we need to show that decidingR(S) − x(S). Thus, e(S, x) > h holdse(S, x) > h is in NP for any given value h in this range. To this end, recall that e(S, x) = vR(ξ R(G), S) such that w > h + x(S). Based on this characterization, the checkif and only if there is a feasible value w ∈ f2 . Thus, checking si, j(x) = s j,i(x) foris easily seen to be in NP by Lemma 4.6(1). By this, the surplus computation is in F(cid:3) Pall pairs of distinct players is in (cid:3) P2 . (cid:2)From the above result and Corollary 4.5, we immediately get the following completeness result.Corollary 4.8. Let R be any NPopt-representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-Kernel is(cid:3) P2 -complete.5. The complexity of the bargaining setThe concept of bargaining set was defined by Aumann and Maschler [3] (see also Maschler [55]). We start by recallingits formal definition.1892G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Let G = (cid:3)N, v(cid:4) be a coalitional game, and x ∈ X(G) an imputation. Let S ⊆ N be a coalition, and y an S-feasible payoffvector (i.e., y(S) = v(S)). The pair ( y, S) is an objection of player i against player j to x if i ∈ S, j /∈ S, and yk > xk for all k ∈ S.A counterobjection to the objection ( y, S) of i against j to x is a pair (z, T ) where j ∈ T , i /∈ T , and z is a T -feasible payoffvector such that zk (cid:2) xk for all k ∈ T \ S and zk (cid:2) yk for all k ∈ T ∩ S. If there does not exist any counterobjection to ( y, S),we say that ( y, S) is a justified objection.Definition 5.1. The bargaining set B(G) of a TU game G is the set of all imputations x to which there is no justified objection.Example 5.2. Let G = (cid:3)N, v(cid:4) be the TU game already illustrated in Example 4.2, that is, N = {a, b, c}, v({a}) = v({b}) =v({c}) = 0, v({a, b}) = 20, v({a, c}) = 30, v({b, c}) = 40, and v({a, b, c}) = 42.Consider the imputation x such that xa = 8, xb = 10, and xc = 24. An objection of player c against player a to x is((12, 28), {b, c}). Player a can counterobject to this objection using ((8, 12), {a, b}). Another objection of player c againstplayer a to x is ((14, 26), {b, c}). In this case, player a cannot counterobject. The reason is that coalition {a, b} receives apayoff 20 and this is not sufficient for player a to counterobject since she needs at least 8 for herself and at least 14 forplayer b, in order to respond to the proposal of player c. Therefore the imputation x does not belong to B(G). The intuitivereason is that player a receives too much, according to this profile.(cid:16)such that xa(cid:16)Consider now the imputation x(cid:16)= 24. We focus on the objections of player a against= 14, and xcplayer c. We note that, in order to object, player a has to form the coalition S = {a, b}. The excess e(S, x) of S at x is 2,hence players a and b have the possibility to distribute among themselves a payoff of 2 to make the objection. But player ccan always counterobject to player a because she can form the coalition T = {b, c} whose excess at x is 2 and hence she canalways match the proposal made to player b by player a in order to object. A similar argument holds for every objection ofevery player against any other. Thus x(cid:16)= 4, xb(cid:16) ∈ B(G).It is well-known that K (G) ⊆ B(G) (hence, B(G) (cid:13)= ∅, whenever X(G) (cid:13)= ∅), and that C (G) ⊆ B(G) (see, e.g., [62]).Thus, as in the case of the kernel, we shall just focus on the complexity of deciding whether a given payoff vector is inthe bargaining set. The problem was conjectured to be (cid:2) P2 -complete for graph games by Deng and Papadimitriou [26].In this section, we show that the conjecture is indeed correct. Also, we are able to generalize the result by showing thatmembership in (cid:2) P2 holds for any class of games C(R), where R is an NPopt-representation scheme.5.1. Hardness for graph gamesIt was suggested by Maschler [55] that computing the bargaining set might be intrinsically more complex than computingthe core. The result presented in this section provides some fresh evidence that this is indeed the case for we shall showthat checking whether a payoff vector is in the bargaining set is (cid:2) P2 -hard, even over graph games. The reduction is fromthe validity of quantified Boolean formulae.Let Φ = (∀α)(∃β)φ(α, β) be an NQBF2,∀ formula, i.e., a quantified Boolean formula over the variables α = {α1, . . . , αn}and β = {β1, . . . , βr}, where φ(α, β) = c1 ∧ · · · ∧ cm is a 3CNF formula, and where each universally quantified variable αk ∈ αoccurs only in the two clauses ci(k) = (αk ∨ ¬βk) and c¯i(k)= (¬αk ∨ βk)—intuitively, each variable αk enforces the truth valueof a corresponding variable βk, which thus plays its role in the formula φ(α, β). Based on Φ, we define the weighted graphBS(Φ) = (cid:3)(NBS, EBS), w(cid:4) such that (see Fig. 4 for a graphical illustration):• The set NBS of the nodes (i.e., players) includes: a clause player c j , for each clause c j ; a literal player (cid:11)i, j , for each literal(cid:11)i occurring in c j ; and, two special players “chall” and “sat”.• The set EBS of edges includes three kinds of edges.(Positive edges): an edge {c j, (cid:11)i, j} with w({c j, (cid:11)i, j}) = 1, for each literal (cid:11)i occurring in the clause c j ; an edge{chall, (cid:11)i, j} with w({chall, (cid:11)i, j}) = 1, for each literal (cid:11)i of the form αi or ¬αi (i.e., built over a universallyquantified variable) occurring in c j .(“Penalty” edges): an edge {γi, j, ¬γi, j(cid:16) } with w({γi, j, ¬γi, j(cid:16) }) = −m − 1, for each variable γi (either γi = αi or γi = βi )occurring in c j and c j(cid:16) ; an edge {(cid:11)i, j, (cid:11)i(cid:16), j} with w((cid:11)i, j, (cid:11)i(cid:16), j) = −m − 1, for each pair of literals (cid:11)i and (cid:11)i(cid:16)occurring in c j ; an edge {chall, (cid:11)i, j} with w({chall, (cid:11)i, j}) = −m − 1, for each literal (cid:11)i of the form βi or ¬βi (i.e.,built over an existentially quantified variable) occurring in c j ; an edge {chall, c j} with w({chall, c j}) = −m − 1,for each clause c j .(cid:2)(“Normalizer” edge):the edge {chall, sat} with w({chall, sat}) = n − 1 + m −e∈EBS|e(cid:13)={chall,sat} w(e).Note that the size of BS(Φ) (and in particular of the representation of all the weights) is polynomial in the numberof variables and clauses of Φ. Moreover, the properties summarized in the following lemma hold, whose proof is given inAppendix B.Lemma 5.3. Let BS(Φ) = (cid:3)(NBS, EBS), w(cid:4) be the graph game associated with the NQBF2,∀ formula Φ. Then:(A) D (cid:3) m;G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101893Fig. 4. The game BS((cid:6)Φ), where (cid:6)(cid:8) = (∀α1)(∃β1, β2, β3)(α1 ∨ ¬β1) ∧ (¬α1 ∨ β1) ∧ (β1 ∨ β2 ∨ ¬β3).(B) w({chall, sat}) > 2 × m;(C) D + w(e) < 0, for each penalty edge e ∈ EBS; and,(D) m (cid:2) 2 × n,where D = max{chall,sat}(cid:2)S⊆N v(S) denotes the maximum worth over all the coalitions not covering the edge {chall, sat}.Based on the above properties, we can now prove the following result.Theorem 5.4. On the class C(GG) of graph games, In-BargainingSet is (cid:2) P2 -hard (even if the given payoff vector is an imputation).2 -complete [72]. Thus, given an NQBF2,∀ formula Φ = (∀α)(∃β)φ(α, β)Proof. Deciding the validity of NQBF2,∀ formulae is (cid:2) P(where α = {α1, . . . , αn}, β = {β1, . . . , βr}, and φ(α, β) = c1 ∧ · · · ∧ cm), consider the graph game BS(Φ) = (cid:3)(NBS, EBS), w(cid:4) andthe imputation x that assigns m to sat, n − 1 to chall, and 0 to all other players. Note that x is an imputation, since v(N) =m + n − 1 because of the weight of the edge {chall, sat} (recall that w({chall, sat}) = m + n − 1 −(cid:2)e∈EBS|e(cid:13)={chall,sat} w(e)).Beforehand, we note that the following properties hold on BS(Φ) and x. The proofs of these properties are given inAppendix B.Property 5.4.(1). No player has a justified objection against a clause or a literal player.Property 5.4.(2). No player has a justified objection against chall.Property 5.4.(3). No player different from chall has a justified objection against sat.In the light of the properties above, we can limit our attention to the objections of chall against sat. Consider an objection( y, S) of chall against sat to x. In particular, ychall must be greater than xchall = n − 1 and yq > 0 = xq for each q ∈ S withq (cid:13)= chall. Thus, y(S) = v(S) > n − 1.Then, because of Lemma 5.3(C), in order for such a coalition S to be such that v(S) > n − 1, no penalty edge must becovered by S. Moreover, given that chall ∈ S, we have that S must contain exactly one player per universally quantifiedvariable so that v(S) = n > n − 1, i.e., |S| = n + 1 and |S ∩ {αk,i(k), ¬αk,¯i(k)}| = 1, for each 1 (cid:3) k (cid:3) n. By this, the objectiony has to be a vector such that y(S) = n, ychall > n − 1, and yq > 0, for each q ∈ S with q (cid:13)= chall. Note that the coalitionS encodes an assignment σS for the variables in α such that αk evaluates to false (resp., true) in σS if αk,i(k) (resp.,¬αk,¯i(k)) occurs in S—note that, in this correspondence, the truth values are inverted with respect to the membership of thecorresponding literal players in S.Moreover, note that for each truth assignment σ for the variables in α, we may immediately build a coalition S and avector y such that ( y, S) is an objection of chall against sat, and σS = σ . Therefore, objections of chall against sat are incorrespondence with truth assignments for universally quantified variables.We are now ready to show that Φ is valid if and only if x is in B(BS(Φ)):1894G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910(⇒) Assume that Φ = (∀α)(∃β)φ(α, β) is valid, and let ( y, S) be any objection of chall against sat to x. We show thatthis objection is not justified, because sat has a counterobjection (z, T ). Recall first that S encodes an assignment σSover the variables in α. Then, let σ be a satisfying assignment over the variables in Φ such that αk evaluates totrue in σ if and only if it evaluates to true in σS ; indeed, such a satisfying assignment σ exists since Φ is valid.Based on σ , let us construct the coalition T such that T ⊆ {sat} ∪ {(cid:11)i, j | (cid:11)i evaluates to true in σ ∧ c jis a clausewhere (cid:11)i occurs} ∪ {c1, . . . , cm}, T ∩ S = ∅, |T | = 2m + 1, and v(T ) = m. In particular, T can be such that v(T ) = m,precisely because σ is a satisfying assignment and by construction of σS . Moreover, consider the vector z such thatzsat = v(T ) = xsat = m and zq = xq = 0 for each q ∈ T with q (cid:13)= sat (and, hence, q /∈ S). By construction (z, T ) is acounterobjection to ( y, S), which is therefore not justified in its turn.(⇐) Let σ be an assignment over the variables in α witnessing that Φ is not valid. Let ( y, S) be an arbitrary objection ofchall against sat to x such that σS = σ . We claim that ( y, S) is justified. Indeed, assume for the sake of contradictionthat ( y, S) is not justified and let (z, T ) be a counterobjection. Since sat ∈ T \ S and since we must have zsat (cid:2) xsat = m,because of Lemma 5.3(A) we actually have that zsat = xsat. In fact, since m is the maximum available payoff over allthe coalitions not including both chall and sat, z(T ) = v(T ) = m and the fact that (z, T ) is a counterobjection to ( y, S)together entail that S ∩ T = ∅. Also, these entail that T contains all clause players, exactly one literal player per clause,so that |T | = 2m + 1. Observe now that T encodes a satisfying truth value assignment σT for φ(α, β), because v(T ) > 0and hence T does not cover any penalty edge. More precisely, we let each variable γi (either γi = αi or γi = βi ) toevaluate true (resp., false) in σT if γi, j (resp., ¬γi, j ) occurs in T , for some clause c j . Let σ αT denote the restriction ofσT over the variables in α. Then, since S ∩ T = ∅ and given the definition of σS , we have that σS = σ αT . Clearly, thiscontradicts the fact that σ = σS witnesses that Φ is not valid. (cid:2)Again, by the same argument used for the proof of Corollary 4.5, the above result extends to compact representationsmore expressive than graph games.Corollary 5.5. Let R be any NPopt-representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-BargainingSet is(cid:2) P2 -hard.5.2. Membership resultsChecking whether a payoff vector belongs to the bargaining set has already been argued by Deng and Papadimitriou [26]to be in (cid:2) P2 for graph games. Indeed, they observed that one may decide that an imputation x is not in the bargainingset by firstly guessing in NP the objection ( y, S), and then by calling a co-NP oracle, by which to check that there isno counterobjection (z, T ) to ( y, S). However, to apply this argument one typically assumes real values to have a fixed-precision. In fact, Greco et al. [39] recently proved that there always exist suitable objections and counterobjections thatmay be guessed in polynomial time, so that In-BargainingSet was formally proved to be in (cid:2) P2 . In particular, it was shownthat the problem remains in (cid:2) P2 , for any arbitrary worth function that can be computed in polynomial time (thus, for classesof games based on a P-representation scheme) and for certain kinds of worth functions computable in non-deterministicpolynomial time. Our main achievement in this section is to show that membership in (cid:2) P2 (surprisingly) holds on anyarbitrary NPopt-representation. To this end, we need to devise some novel technical machinery.First, we shall provide a useful characterization of a player i having a justified objection against some player j. The resultis in the spirit of one of Maschler’s [54] and connects the existence of a justified objection of i against j to some algebraicconditions to hold on coalitions that i and j (may) belong to.Lemma 5.6. Let G be a coalitional game, and let x be an imputation of G. Then, player i has a justified objection against player j to xthrough a coalition S ∈ Ii, j if and only if there exists a vector y ∈ RS such that:(1) y(S) = v(S);(2) yk > xk, for each k ∈ S; and,(3) v(T ) < y(T ∩ S) + x(T \ S), for each T ∈ I j,i .Proof. (⇒) Assume that player i has a justified objection against player j to x through a coalition S ∈ Ii, j . Let ( y, S) besuch justified objection and note that, by definition, y(S) = v(S) and yk > xk for each k ∈ S hold. Assume now, for the sakeof contradiction, that (3) above does not hold. Let ¯T ∈ I j,i be such that v( ¯T ) (cid:2) y( ¯T ∩ S) + x( ¯T \ S). Based on ¯T , we can builda vector z ∈ R ¯T such that: (i) zk = xk + δ for each k ∈ ¯T \ S; and, (ii) zk = yk + δ for each k ∈ ¯T ∩ S, whereδ = v( ¯T ) − y( ¯T ∩ S) − x( ¯T \ S)| ¯T |(cid:2) 0.Note that z( ¯T ) = v( ¯T ) holds by construction. Hence, (z, ¯T ) is a counterobjection to ( y, S), a contradiction.(⇐) Assume that there is a vector y ∈ RS such that all the three conditions above hold. Consider the pair ( y, S) (withS ∈ Ii, j ) and note that due to (1) and (2), ( y, S) is in fact an objection of player i against player j. We now claim thatG. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101895( y, S) is justified. Indeed assume, for the sake of contradiction, that a counterobjection (z, ¯T ) (with ¯T ∈ I j,i ) exists suchthat: z( ¯T ) = v( ¯T ), zk (cid:2) xk for each k ∈ ¯T \ S, and zk (cid:2) yk for each k ∈ ¯T ∩ S. In this case, it holds that v( ¯T ) = z( ¯T ) (cid:2)y(T ∩ S) + x(T \ S), which contradicts (3). (cid:2)Second, we need to recall the following beautiful result on families of convex sets. Remember that a set of points S ⊆ Rnis said convex if, for every pair of points p, q ∈ S, (each point in) the straight line connecting p and q belongs to S as well.Proposition 5.7 (Helly’s Theorem [43,69]). Let C = {c1, . . . , cm} be a finite family of convex sets in Rn, where m > n. Ifthere is a family C(cid:16) ⊆ C, such that |C(cid:16)| = n + 1 andci ∈C(cid:16) ci = ∅.(cid:14)With the above two ingredients, we can now prove our main result about the bargaining set:Theorem 5.8. Let R be any NPopt-representation. On the class C(R), In-BargainingSet is in (cid:2) P2 .(cid:14)mi=1 ci = ∅,Proof. Let G ∈ C(R) be a coalitional game, and x a payoff vector. Checking whether x is an imputation is in (cid:3) Pproof of Theorem 4.7).2 (see theAssume now that x is an imputation, and consider the complementary problem of deciding whether x /∈ B(G). We are2 . In the light of Lemma 5.6, x /∈ B(G) if and only if there exist two players i and j, and agoing to show that this is in (cid:4) Pcoalition S ∈ Ii, j such that the following set is non-empty:(cid:8)(cid:8) y(S) = vyk > xk, ∀k ∈ S ∧ξ R(G), TRW (i, j, S) =ξ R(G), Sy ∈ RS∧R(cid:7)v(cid:9)(cid:9)(cid:10)(cid:10)< y(T ∩ S) + x(T \ S), ∀T ∈ I j,i(cid:11)R(ξ R(G), S) = max{w | w ∈ fR(ξ R(G), S)}, where fRecall from Definition 3.3 that vis a feasibility function com-putable in NPMV. Thus, we can solve the problem by first guessing in NP two players i and j, a coalition S ∈ Ii, j ,a value w S , and a certificate c S that (cid:3)(ξ R(G), S), w S (cid:4) ∈ graph( fR). Note that, by exploiting c S , we can then checkin (deterministic) polynomial time that (cid:3)(ξ R(G), S), w S (cid:4) belongs to the graph of the function f, and thus thatR(ξ R(G), S) (cid:3) w S , and that (ii) W (i, j, S)R(ξ R(G), S) (cid:2) w S . After this first phase, we have then to check that (i) vvis non-empty. To complete the proof, it suffices to show that both checks are in co-NP.Indeed, concerning (i), the complementary problem of checking that vR(ξ R(G), S) > w S is in NP by Lemma 4.6(1).Concerning (ii), consider the complementary problem of checking the emptiness of W (i, j, S), which can be equivalentlydescribed by the following inequalities:(cid:7)R(cid:9)RW (i, j, S) =y ∈ RS(cid:10)Rξ R(G), S(cid:8)(cid:8) y(S) = vyk > xk, ∀k ∈ S ∧w T < y(T ∩ S) + x(T \ S), ∀T ∈ I j,i, ∀w T ∈ f= w S ∧(cid:9)Rξ R(G), T(cid:10)(cid:11)Observe now that W (i, j, S) is defined by the intersection of a finite number of convex regions of RS , which are as-sociated to the various (in)equalities. Hence, by Helly’s Theorem, if W (i, j, S) is empty, then there exists a subsystem of(at most) |S| + 1 inequalities that does not admit a solution. Note that we can always add to this subsystem the equalityy(S) = w S plus the |S| inequalities of the form yk > xk (for each k ∈ S), as they can be built in polynomial time. Possibleremaining inequalities associated with any coalition T ∈ I j,i can instead be obtained in non-deterministic polynomial time.Indeed, we can guess in NP m (cid:3) |S| + 1 coalitions T 1, . . . , Tm from I j,i and, for each h ∈ {1, . . . , m}, a value w Th and a cer-R(ξ R(G), Th). Then, we can check in polynomial time via cTh that w Th is actually a value returnedtificate cTh that w ThR(ξ R(G), Th). Thus, after these steps in NP, checking whether W (i, j, S) is empty is reduced to checking whetherby fa system of polynomially-many linear (in)equalities admits a solution. This latter task is in polynomial time, by standardarguments in linear programming (see, e.g., [65]). (cid:2)∈ fFrom the above theorem and Corollary 5.5, we get the following completeness result.Corollary 5.9. Let R be any NPopt-representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-BargainingSet is(cid:2) P2 -complete.6. The complexity of the coreThe concept of the core goes back to the work by Edgeworth [27] and it was formalized by Gillies [36].1896G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Let G = (cid:3)N, v(cid:4) be a coalitional game, and let x be an imputation taken from the set X(G) of all imputations of G. Thepair ( y, S) is an objection to x if y is an S-feasible payoff vector such that yk > xk for all k ∈ S—in this case, the coalition Sis also said to block x via y.Definition 6.1. The core C (G) of a coalitional game G = (cid:3)N, v(cid:4) is the set of all imputations x to which there is no objection;that is,C (G) =(cid:7)x ∈ X(G)(cid:8)(cid:8) (cid:2)S ⊆ N and y ∈ RS such that y(S) = v(S) and yk > xk, ∀k ∈ S(cid:11)Thus, an imputation x in the core is “stable” precisely because there is no coalition whose members will receive a higherpayoff than in x by leaving the grand coalition, i.e., the set of all players in the game.It is easily seen that Definition 6.1 can be equivalently restated as the set of all solutions satisfying the following in-equalities (see, e.g., [62]):(cid:3)i∈S(cid:3)i∈Nxi (cid:2) v(S), ∀S ⊆ N, S (cid:13)= ∅xi (cid:3) v(N)(2)(3)In particular, the last inequality, combined with its opposite in (2), enforces the efficiency of solutions; moreover, in-equalities in (2) over singleton coalitions enforce their individual rationality.Example 6.2. Let G = (cid:3)N, v(cid:4) be the TU game already illustrated in Example 4.2, that is, N = {a, b, c}, v({a}) = v({b}) =v({c}) = 0, v({a, b}) = 20, v({a, c}) = 30, v({b, c}) = 40, and v({a, b, c}) = 42. Consider the imputation x such that: xa = 4,xb = 14, and xc = 24. Since v({b, c}) = 40 > 38 = x({b, c}), x /∈ C (G).In fact, we can show that C (G) is empty. To this end, consider coalitions S1 = {a, b}, S2 = {a, c} and S3 = {b, c} andthe worths associated with them by the worth function. To be in C (G), an imputation x has to satisfy the following threeconditions:xa + xb (cid:2) 20xa + xc (cid:2) 30xb + xc (cid:2) 40Summing up these inequalities we obtain that 2xa + 2xb + 2xc (cid:2) 90, implying that xa + xb + xc (cid:2) 45. Thus, the core of G isempty because the grand coalition would need as much worth as 45 in order to satisfy the claims of S 1, S2 and S3, whilethe total available worth is just v(N) = 42.Consider, instead, the game G(cid:16) = (cid:3)N, v(cid:16)(cid:16)(N) = 45. Then, it is easily checked that the imputation x(cid:16)(cid:4) whose worth function vis the same as that of G except for the grand coalition(cid:16)(cid:16)= 15, and xc= 25 is in C (G(cid:16)).(cid:16)such that xa(cid:16)= 5, xbfor which vIn the rest of this section, we shall analyze the complexity of the core and, in particular, of the problems In-Core andCore-NonEmptiness.6.1. Complexity of In-CoreRecall from the Introduction that the In-Core problem consists in deciding whether, given a game G and a payoffvector x, it is the case that x belongs to C (G). In the setting of graph games, the problem has been proven to be co-NP-hard [26]. By the same argument used for the proof of Corollary 4.5, we easily obtain the following.Proposition 6.3. Let R be any compact representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-Core is co-NP-hard.Moreover, a hardness result for the class D P can be obtained in the case where NPopt-representations are considered.Note that, in the result below, we do not reveal the hardness of any specific NPopt representation proposed in the literature,since such analysis is outside the scope of the paper. Rather, we show that hardness for D P can emerge under the conditionsin Definition 3.3. The proof is routine, and it is reported for the sake of completeness only.Proposition 6.4. There exists an NPopt-representation R such that, on the class C(R), In-Core is D P -hard.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101897Proof. Let G = (N, E) be a graph. For a given value k, deciding whether the size of the maximum clique over the nodes ofG equals k is a D P -complete problem [66]. Consider the worth function v such that v(S) = 0, for each S ⊂ N, and wherev(N) is the size of the maximum clique in G. Note that the function satisfies the condition in Definition 3.3. Now, considera payoff vector x such that xi = k/|N|, for each i ∈ N. It is immediate to check that x belongs to C (G) (in fact, that x is animputation) if and only if the size of the maximum clique equals k. (cid:2)We conclude the analysis of In-Core by showing that the lower bounds in the above two propositions are tight. In fact,Greco et al. [39] recently showed that this problem is in co-NP for any arbitrary worth function that can be computed inpolynomial time (thus, for classes of games based on a P-representation scheme) and for certain kinds of worth functionscomputable in non-deterministic polynomial time. We next generalize this result, by showing that In-Core is in co-NP overthose NPopt-representations where the worth associated with the set of all players is explicitly given as an input or can becomputed in polynomial time (i.e., over wNPopt-representations), while it is in D P over arbitrary NPopt-representations.Theorem 6.5. Let R be any compact representation. On the class C(R), In-Core is(1) in co-NP, if R is a wNPopt-representation; and,(2) in D P , if R is an NPopt-representation.(cid:2)Proof. Let R be any compact representation. Let G be a game in C(R), over the set N of players. Let x be a given payoffvector, and recall that the problem In-Core is to check whether x belongs to C (G). Consider the complementary problemof deciding whether x /∈ C (G) holds, i.e., whether (i)i∈N xi (cid:13)= vi∈S xi <R(S). We shall show that conditions (i) and (ii) can be checked in NP with P-representations and wNPopt-representations,vand that they can be checked in co-D P with NPopt-representations.R(N) or (ii) there is a coalition S ⊂ N such that(1) In the case where R is a wNPopt-representation, (i) is checkable in polynomial time, since vR(N) is in polyno-R(ξ R(G), S) = max{w | w ∈mial time. We next show that (ii) can be checked in NP. Recall from Definition 3.5 that v(cid:2)R(S)R(ξ R(G), S)}, where ffholds if and only if there is a value w ∈ fi∈S xi < w. We now claim that the existence of a coali-Rtion S and a value w ∈ fis computable in NPMV,we can guess in NP not only the coalition S, but also the value w and a certificate c that (cid:3)(ξ R(G), S), w(cid:4) ∈ graph( fR).By exploiting c, we can then check in (deterministic) polynomial time that (cid:3)(ξ R(G), S), w(cid:4) belongs to the graph of thefunction fis a feasibility function computable in NPMV. Therefore, for any coalition S,(cid:2)R(ξ R(G), S) actually holds. Finally, we can check thati∈S xi < w can be checked in NP. Indeed, since fR(ξ R(G), S) such thatR(ξ R(G), S) with, i.e., that w ∈ fi∈S xi < v(cid:2)(cid:2)(cid:2)RRi∈S xi < w holds.(cid:2)(cid:2)i∈N xi (cid:13)= vR(ξ R(G), N) such thatR(ξ R(G), N) = max{w | w ∈ fR(N) if and only if at least one of the two following conditions holds: (i(2) NPopt-representations generalize wNPopt-representations just in that the worth associated with the whole set N ofR(ξ R(G), N)}. Thus, from theplayers is not given in the input, but rather is of the form vproof of (1) above, we already know that condition (ii) can be checked in NP, even if R is an NPopt-representation. Consider(cid:16)) therenow condition (i) and notice thatR(ξ R(G), N)is no feasible value w ∈ f∗ >) is in co-NP. Indeed, wesuch that wR(ξ R(G), N) such thatcan solve the complementary problem of checking whether there actually is a feasible value w ∈ f(cid:2)i∈N xi = w by guessing in NP the value w together with a certificate c, and then checking in polynomial time, by using c,i∈N xi = w holds. By putting it) or (ii) holds is in NP (just notice that) holds is in co-NP. Thus, the complementthat (cid:3)(ξ R(G), N), w(cid:4) belongs to the graph of the worth function fall together, x /∈ C (G) holds if and only if (ithe problem is the disjunction of two problems in NP), while deciding whether (iof In-Core is in co-D P . (cid:2)i∈N xi . From Lemma 4.6(1), we know that (i) there actually is a feasible value w) or (ii) holds. Deciding whether (i) is in NP. We now claim that (ii∈N xi = w; (i, and eventually that∗ ∈ f) or (i(cid:2)(cid:2)R(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)As for the kernel and the bargaining set, we therefore immediately get the following result.Corollary 6.6. Let R be any wNPopt-representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), In-Core isco-NP-complete.6.2. Complexity of Core-NonEmptinessRecall from Example 6.2 that the core of a game can be empty, even if its set of imputations is not. Therefore, it makessense to analyze the complexity of the Core-NonEmptiness problem of deciding whether, given a game G, C (G) (cid:13)= ∅. Thisproblem is known to be co-NP-hard for graph games [26]. Thus, by following exactly the same line of reasoning as in theproof of Corollary 4.5, the following can be established.Proposition 6.7. Let R be any compact representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), Core-NonEmptiness is co-NP-hard.1898G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910In fact, for the case of graph games, the precise complexity of the non-emptiness problem for the core is known, asDeng and Papadimitriou [26] have shown that this problem is co-NP-complete. However, it was left open whether themembership still holds for marginal contribution networks [44] and, possibly, for more general compact representations.In this section, we positively answer this question and show that membership in co-NP generally holds over wNPopt-representations.In order to get this result, we have to identify some succinct certificate that the core of a game is empty. Indeed, it wasobserved that the “obvious” certificate of non-emptiness of the core is exponential in size [44]. Our crucial observation isthat the technical machinery that we need is Helly’s Theorem, which we have already used while analyzing the complexityof the bargaining set. By exploiting Helly’s Theorem and the characterization of the core based on the linear inequalities in(2) and (3), we can indeed show the following.Theorem 6.8. Let R be any compact representation. On the class C(R), Core-NonEmptiness is(1) in co-NP, if R is a wNPopt-representation; and,2 , if R is an NPopt-representation.(2) in (cid:3) P∅(cid:13)=S⊆N ϕS,vR(S).in any wNPopt-representation R,Proof. Let R be any compact representation, and let G be a game in C(R), over the set N of players. Recall that Core-NonEmptiness is the problem of deciding whether C (G) is not empty, and consider the complementary problem of checkingwhether C (G) is empty. We shall show that this latter problem is in NP for wNPopt-representations, and that it is in (cid:3) P2for arbitrary NPopt-representations (recall, here, that (cid:3) P2 is closed under complement).Let w ∈ R be any real number. For each coalition S ⊂ N, let ϕS,w denote the convex set {x ∈ RN | x(S) (cid:2) w}; and (forS = N) let ϕN,w denote the convex set {x ∈ RN | x(N) = w}. By the characterization of the core in terms of the inequalities(2) and (3), we have that C (G) =(cid:14)R(1) Recall first that,R(ξ R(G), S) = max{w | w ∈for each coalition S ⊂ N, vR(ξ R(G), S)} holds, where fis a feasibility function computable in NPMV. Let (S, w) be a pair formed by a coali-fR(N). Let VPR(ξ R(G), S), or S = N and w = vtion S and a value w. The pair (S, w) is valid if either S ⊂ N and w ∈ f(cid:14)be the set of all valid pairs. Note that ϕS,w ⊇ ϕS,vR(S). Then, C (G) =(S,w)∈VP ϕS,w . If C (G) is empty then, by Helly’sTheorem, there exists a family E ⊆ VP of |N| + 1 valid pairs (one-to-one associated with the above convex sets) such that(cid:14)(S,w)∈E ϕS,w = ∅.In order to complete the proof, we now claim that this latter condition can be checked in NP. To this end, observe thatthe system of the |N| + 1 linear inequalities defining the convex sets associated with E can be built in polynomial time.Indeed, we can guess in NP the set E together with a suitable certificate c S,w , for each (S, w) ∈ E . Then, for each (S, w) ∈ ER(ξ R(G), S), and hencesuch that S ⊂ N, we can use the certificate c S,w to actually check in polynomial time that w ∈ fto build the corresponding linear equality defining the convex set ϕS,w ; for each (S, w) ∈ E such that S = N, we check inR(N) and we build the corresponding linear equality. Finally, we check in polynomial time thatpolynomial time that w = vthis system of (in)equalities has no solutions by standard techniques of linear programming.(2) In the case where R is an NPopt-representation, we can apply the same line of reasoning as before, by just takingR(N), which now may be a harder task. From Lemma 4.6(2), we2 . The statement then follows, since the remaining computation is in co-NP by (1) above (and2 ). (cid:2)into account the additional complexity for computing vknow that this task is in F(cid:3) Psince co-NP is contained in (cid:3) PThe membership resultthe non-emptiness problem for the core isco-NP-complete for all P-representations and all wNPopt-representations at least as expressive as graph games. There-fore, we can now state the precise complexity of Core-NonEmptiness even over marginal contribution networks, which wasleft open by Ieong and Shoham [44].(1) above and Proposition 6.7 imply thatCorollary 6.9. Let R be any wNPopt-representation such that GG (cid:4)e R (e.g., R = MCN ). On the class C(R), Core-NonEmptinessis co-NP-complete.For the sake of completeness, note that the membership result in Theorem 6.8(2) can be tight in some cases, i.e., thereexist NPopt-representations over which Core-NonEmptiness is (cid:3) P2 -hard. In fact, this is a trivial observation since worthfunctions satisfying Definition 3.3 can encode (cid:3) P2 -complete problems.5 However, it tells us nothing about the hardness ofspecific NPopt representations proposed in the literature. And, in fact, analyzing such representations to check whether theyare any easier than the general case appears to be an interesting avenue of further research.5 Indeed, they have the power of OptP functions (see the note on p. 1886), and it is known that every function in (cid:3) P2 decomposes into an OptP function,followed by a polynomial-time calculation [52].G. Greco et al. / Artificial Intelligence 175 (2011) 1877–191018996.3. A closer look at Helly’s TheoremAs we have seen, Helly’s Theorem guarantees the existence of “small” infeasibility certificates for problems based onfamilies of convex subsets. Actually, our historically first proof of the computational complexity of core non-emptiness [53]was based on a different approach that exploited the fact that the core of any coalitional game is a Polyhedron of Rn. Webelieve that this proof may be of independent interest for the reader and thus we describe it in the rest of this section.Indeed, it provides a nice geometrical and constructive view of “small” emptiness certificates for polyhedra, and thus ageometrical interpretation of Helly’s Theorem, for those contexts where convex sets are given by linear inequalities likethose involved in the core non-emptiness problem.66.3.1. Preliminaries on polyhedral setsWe begin by giving some useful definitions and facts about polyhedral sets. We refer the interested reader to textbookson the subject for further reading (see, e.g., [42,14]).Let n > 0 be any natural number. A Polyhedral Set (or Polyhedron) P of Rn is the intersection of a finite set S of closedhalfspaces of Rn. Note that in this paper we always assume, unless otherwise stated, that n > 0. We denote this polyhedronby Pol(S).Recall that a hyperplane H of Rn is a set of points {x ∈ Rn | aT x = b}, where a ∈ Rn and b ∈ R. The closed halfspace H+is the set of points {x ∈ Rn | aT x (cid:2) b}. We say that these points satisfy H+ = {x ∈ Rn | aT x < b}. Note that H− = Rn \ Hhalfspace by H, i.e., H−+and H. Define the opposite of Hthat ¯H+ = H− ∪ H , since it is the set of points {x ∈ Rn | aT x (cid:3) b}.as the set of points ¯H+ = {x ∈ Rn | a−−+is an open halfspace. We say that H determines H. We denote the points that do not satisfy this+(cid:16) = −1 · b. Note(cid:16) = −1 · a and b(cid:16)}, where a(cid:16) T x (cid:2) bLet P = Pol(S) be a polyhedron and H a hyperplane. We say that H cuts P if both Hcontain points of P , andwe say that H passes through P , if there is a non-empty touching set C = H ∩ P . Furthermore, we say that H supports P , orthat it is a supporting hyperplane for P , if H does not cut P , but passes through P , i.e., it just touches P (in the set C ).and HMoreover, we say that H. Note thatP ⊆ Pol(S(cid:16)) for any set of halfspaces S (cid:16) ⊆ S, since the latter polyhedron is obtained from the intersection of a smaller setof halfspaces than P . We say that such a polyhedron is a supporting polyhedron for P .is a supporting halfspace for P if H is a supporting hyperplane for P and P ⊆ H++Recall that, for any set A ⊆ Rn, its dimension dim( A) is the dimension of its affine hull. For instance, if A consists of twopoints, or it is a segment, its affine hull is a line and thus dim( A) = 1. By definition, dim(∅) = −1, while single points havedimension 0. For any hyperplane H , dim(H) = n − 1, while the intersection C of any pair of (non-parallel) hyperplanes H 1and H2 has dimension n − 2.+−Every hyperplane H has precisely two normal vectors, while its associated halfspace H+has one normal vector, that+is, the normal vector of H that belongs to H1+and H2 is the smallest angle between the corresponding normal vectors. For such halfspaces, in this paper we alwaysconsider rotations whose axis is the (affine) subspace C = H 1 ∩ H2 of dimension n − 2, so we avoid to explicitly mentionrotation axes, hereafter. Note that such rotations are uniquely identified by their amount (angle) of rotation, which is the+one available degree of freedom. Formally, define the result of a rotation of a halfspace H2 of an+angle −π < α < π to be the halfspace H2 ) − α, and H i ∩ H j = C , ∀i, j ∈ {1, 2, 3}, i (cid:13)= j(the points on the axis C of rotation are fixed).+2 ) between two non-parallel halfspaces H+1 towards a halfspace H+3 such that δ(H. The dihedral angle δ(H+2 ) = δ(H+1 , H+1 , H+3 , HA set F ⊆ P is a face of P if either F = ∅, or F = P , or if there exists a supporting hyperplane H F of P such that F istheir touching set, i.e., F = H F ∩ P . In the latter case, we say that F is a proper face of P . A facet of P is a proper face of Phaving the largest possible dimension, that is, whose dimension is dim(P ) − 1.The following facts are well known [42]:+1. For any facet F of P , there is a halfspace H2. For any proper face F of P , there is a facet F3. If F and Fare two proper faces of P and F ⊂ F(cid:16)(cid:16)+ ∈ S such that F = Hof P such that F ⊆ F(cid:16)(cid:16)., then dim(F ) < dim(F(cid:16)).+ ∩ P . We say that H+generates F .6.3.2. Separating polyhedra from a few supporting halfspacesWe start with a pair of technical results. Since coalitions correspond to the inequalities (2) and hence to the associatedhalfspaces of Rn, we hereafter slightly abuse notation and use these terms interchangeably.Lemma 6.10 (Roof Lemma). Let Hthat H+∩ HH2+1 , H+3 may be obtained by rotating H+3 , i.e., for Pol({H+2 , H}).+3+2 , and H+1 towards H+3 be three halfspaces such that H i ∩ H j = C (cid:13)= ∅, ∀i, j ∈ {1, 2, 3}, i (cid:13)= j, and such++1 ) − β < π . Then, H1 is a supporting halfspace for+2 by β < 0, with δ(H+2 , H6 This section is self-contained and its results are not used in the subsequent sections. Thus, it can be skipped without troubles by a reader who is notinterested in a deeper understanding of the existence of “small” infeasibility certificates.1900G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Fig. 5. Rotations of halfspaces in Lemma 6.10.Fig. 6. Construction of a certificate of emptiness for the core.+2 may be obtained by rotating H+2 are in H++2 by their dihedral angle 0 < α = δ(H1 ) < π . Thus, allProof. Note that H−points A of H1 \ C that belong to H3 , because H3 is obtained by rotating those points (in the opposite direction)−by the angle β < 0. Symmetrically, all points B of H 1 \ C belonging to H2 , see Fig. 5, for a three-dimensionalillustration. Moreover, observe that all points in H 1 \ C are involved in the rotations and thus belong to either A or B. It++1 ) − β < π , it is easyfollows that (H1 \ C) ∩ (H2+}). (cid:2)2 , Hto see that some point in H+2 , H+1 is in fact a supporting halfspace for Pol({H+3 ) = ∅, whence H1 is a supporting hyperplane. Finally, since δ(H+1 , and thus H+1 towards H+3 are in H+3 is in H∩ H+2+2 , H∩ H+3We next show that, whenever a full-dimensional polyhedron P = Pol(S) of Rn is separated from some hyperplane H P ,there exists a subset of at most n halfspaces corresponding to facets of P that define a larger polyhedron of Rn (a roughapproximation of P ), which is still separated from H P . We first give the proof idea, with the help of Fig. 6. For the sake+P is the inequality (3) associated with the grand coalition, while the set S corresponds to theof intuition, imagine that Hother inequalities (2), whence in this case the core is empty. If there is a facet F of P that is parallel to H P , we are triviallydone, because its associated halfspace already provides the desired separated polyhedron, succinctly described by just one(cid:16)inequality. Otherwise such a face F has a smaller dimension but, from Fact 2, there exists a facet F.+In the three-dimensional example shown in Fig. 6, F is the vertex at the bottom of the diamond, His the halfspaceF(anti-)parallel to H P that contains F (but it is not associated with any inequality generating P ), and Fis some facet on its+“dark side”. Let C = H F ∩ H F (cid:16) , and consider the rotation of HF (cid:16) of a negative angle β (we go on the oppositedirection w.r.t. His an edge of the diamond,Fis a supporting halfspace of+F (cid:16)(cid:16) ), called its roof, which contains P and is separated from H P . However, we are not satisfiedthe polyhedron Pol(H+because we would like that such a polyhedron is described by (at most n) halfspaces taken from S, and HF (cid:16)(cid:16) does not belongto S, in general (as in our example, where it does not generate a facet of P ). Then, we proceed inductively, by observingthat H. In the running+F (cid:16) ) that first touches P , say H F (cid:16)(cid:16) . As illustrated in Fig. 6, where the face F+properly includes F and its dimension is at least d > dim(F ). From the above lemma, HF)—its roof, whose faces have higher dimension than F+F (cid:16)(cid:16) is a supporting halfspace for Pol(Hof P such that F ⊂ F+F towards H+F (cid:16) , H, H(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)+(cid:16)(cid:16)F1+(cid:16)(cid:16)F2example, they are both facets of the diamond, and hence the property immediately holds. In general, the procedure maycontinue, encountering each time at least one facet and one more face with a higher dimension than the current one. Theformal proof follows.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101901Lemma 6.11. Let P = Pol(S) be a polyhedron of Rn with dim(P ) = n, and HThen, there exists a set of halfspaces HF ⊆ S such that |HF | (cid:3) n − dim(F ), Htouching set C is such that F ⊆ C .+F a supporting halfspace of P whose touching set is F .+F is a supporting halfspace of Pol(HF ), and theirProof. The proof is by induction. Base case: If dim(F ) = n − 1 we have that the touching face F = HThus, from Fact 1, F is generated by some halfspace Hdim(H F ) = n − 1, it easily follows that, in fact, H = H F holds. Thus, Hcase is proved: just take HF = {H∩ P is a facet of P .+ ∩ P = F , as for H F . Since dim(F ) = dim(H) =, and this+F is trivially a supporting halfspace of H+} and note that |HF | = 1.+ ⊆ S such that H++FInductive step: By the induction hypothesis, the property holds for any supporting halfspace H+F (cid:16) of P such that its(cid:16)) (cid:3) n − 1, for some d > 0. We show that it also holds for any supporting(cid:16)has a dimension d (cid:3) dim(Ftouching face Fhalfspace H+F of P , whose touching face F has a dimension dim(F ) = d − 1.(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)+FSince F is not a facet, from Fact 2 there exists a facet F. Note that F ⊆ C . Let H+F (cid:16) ∈ S is theof P such that F ⊂ F+F (cid:16)(cid:16) be the halfspace that first touches the polyhedron P obtained+F (cid:16)(cid:16)+F (cid:16) ) − β < π(as the latter face contains some point of the polyhedron outside the axis C ⊇ F ), and thus the dimension+F is a supporting halfspace+F (cid:16) by some negative angle β (i.e., we are going in the opposite direction w.r.t. H+F , Hhalfspace that generates the facet Fby rotating His a supporting halfspace of P , and the touching set Fand F ⊂ Fdim(Fof Pol(H(cid:16)(cid:16)) of this face is strictly greater than dim(F ), from Fact 3. Moreover, from Lemma 6.10, Hincludes C . Since dim(P ) = n, we have that δ(H. Let C = H F ∩ H F (cid:16) , where H+F (cid:16)(cid:16) ), with C = H F (cid:16) ∩ H F (cid:16)(cid:16) as touching set.+F (cid:16) ). Then, Htowards H+F (cid:16) , Hand HF (cid:16)(cid:16) ⊆ S such that: His a supporting halfspace of Pol(HF (cid:16)(cid:16) ), with FPol(HF (cid:16)(cid:16) ) ⊆ H+F (cid:16) is a supporting halfspace of Pol(HF (cid:16) ), with F(cid:16)(cid:16) ⊆ C, where Cis their touching set. In particular, Pol(HF (cid:16) ) ⊆ H+++F (cid:16)(cid:16) , respectively. Let HF = HF (cid:16) ∪ HF (cid:16)(cid:16) . Then, we get Pol(HF ) ⊆ Pol({HF (cid:16)(cid:16) }) ⊆ HF (cid:16) , H(cid:16)(cid:16)), since F(cid:16) ∩ C(cid:16)(cid:16)(cid:16) ∩ C, and thus F ⊆ (F+F and Pol(HF ) includes F . Indeed, this touching set includes (C+F .(cid:16) ⊆ Cand F(cid:16)(cid:16)) ∩ H F ⊇ (C(cid:16)(cid:16) ⊆ C(cid:16)(cid:16)(cid:16) ∩ Cand F ⊂ F(cid:16)(cid:16)) ⊆ (C(cid:16) ∩ F(cid:16)(cid:16)) are at least d, we know that there are two sets HF (cid:16) ⊆ S+(cid:16)F (cid:16)(cid:16)+F (cid:16) andis their touching set; and H, where C(cid:16) ⊆ CBy the induction hypothesis, since both dim(FRecall that F ⊆ C . Moreover, F ⊂ F. It follows(cid:16)(cid:16)) ∩ (H F ∩(cid:16)) and dim(F(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)(cid:16)) ∩ C , and from the above observations (C(cid:16) ∩ C(cid:16)(cid:16)) ∩ C ⊇ F .that the touching set of HH F (cid:16) ∩ H F (cid:16)(cid:16) ) = (C(cid:16) ∩ CFinally, note that |HF | (cid:3) |HF (cid:16) | + |HF (cid:16)(cid:16) | = 1 + |HF (cid:16)(cid:16) |, because dim(F(cid:16)(cid:16)) > dim(F ) = d − 1 and thus, by the induction hypothesis, we obtain |HF | (cid:3) 1 + n − dim(F(cid:16)) = n − 1 and the base case applies. Moreover,(cid:16)(cid:16)) (cid:3) 1 + n − d =dim(Fn − dim(F ). (cid:2)Let G = (cid:3)N, v(cid:4) be a coalitional game. A coalition set S ⊆ 2N is a certificate of emptiness (or infeasibility certificate) for thecore of G if the intersection of Pol(S) with the grand coalition halfspace (3) is empty. In fact, this definition is motivatedby the following observation. Let P be the polyhedron of Rn obtained as the intersection of all halfspaces (2). Since S is asubset of all possible coalitions, P ⊆ Pol(S). Therefore, if the intersection of Pol(S) with the grand coalition halfspace (3) isempty, the intersection of this halfspace with P is empty, as well.Theorem 6.12. Let G = (cid:3)N, v(cid:4) be a coalitional game. If the core of G is empty, there is a certificate of emptiness S for it such that|S| (cid:3) |N|.¯HLetLet HProof. Let n = |N| and P be the polyhedron of Rn obtained as the intersection of all halfspaces (2). Since we are notconsidering the feasibility constraint (3), there is no upper-bound on the values of any variable xi , and thus it is easy to seethat P (cid:13)= ∅ and dim(P ) = n.+P be the halfspace defined by the grand coalition inequality (3). If the core of G is empty, the whole set of+inequalities has no solution, that is, P ∩ HP++P that first touches P , that is, the smallest relaxation of HF be the halfspace parallel to H++P that intersect P .= ∅, H F = ¯H F is a supportingF of ¯HConsider the opposite H+is a supporting halfspace of P . Let F be the touching set of H F with P , and let d = dim(F ). (Inhyperplane of P , and HFFig. 6, F is the vertex at the bottom of the diamond P .) From Lemma 6.11, there is a set of halfspaces S associated withinequalities from (2), with |S| (cid:3) n −d, and such that H∩ Pol(S) = ∅,whence S is a certificate of emptiness for the core of G. Finally, note that the largest cardinality of S is n, and correspondsto the case dim(F ) = 0, that is, to the case where the face F is just a vertex. Therefore the maximum cardinality of thecertificate is n. In our three-dimensional example, the certificate is {H+F is a supporting halfspace for Pol(S). It follows that H+F , as shown in Fig. 6, on the left. By construction, H}, as shown in Fig. 6, on the right. (cid:2)= ∅.∩ H+P+F+P, H+F (cid:16) , H+(cid:16)(cid:16)F1+(cid:16)(cid:16)F27. Tractable classes of graph gamesMany NP-hard problems in different application areas ranging, e.g., from AI [67] and Database Theory [11] to Game The-ory [21], are known to be efficiently solvable when restricted to instances whose underlying structures can be modeled viaacyclic graphs or nearly-acyclic ones, such as those graphs having bounded treewidth [70]. Indeed, on these kinds of instances,solutions can usually be computed via dynamic programming, by incrementally processing the acyclic (hyper)graph, accord-1902G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910ing to some of its topological orderings. In this section, we shall show that (near) acyclicity is also a key for the tractabilityof coalitional games represented in terms of marginal contribution nets.Our results are established by showing that the various solution concepts studied in this paper can be expressed interms of optimization problems over Monadic Second Order Logic (MSO) formulae, and by subsequently applying Courcelle’sTheorem [19] and its generalization to optimization problems due to Arnborg, Lagergren, and Seese [2].For the sake of completeness, we start by reviewing the concepts of treewidth and Monadic Second Order Logic.7.1. Treewidth and Monadic Second Order logicTreewidth. A tree decomposition of a graph G = (N, E) is a pair (cid:3)T , χ (cid:4), where T = (V , F ) is a tree, and χ is a labelingfunction assigning to each vertex p ∈ V a set of vertices χ (p) ⊆ N, such that the following conditions are satisfied:(1) for each node b of G, there exists p ∈ V such that b ∈ χ (p);(2) for each edge (b, d) ∈ E, there exists p ∈ V such that {b, d} ⊆ χ (p); and,(3) for each node b of G, the set {p ∈ V | b ∈ χ (p)} induces a connected subtree of T .The width of (cid:3)T , χ (cid:4) is the number maxp∈V (|χ (p)| − 1). The treewidth of G, denoted by tw(G), is the minimum widthover all its tree decompositions. A graph G is acyclic if and only if tw(G) = 1. Deciding if a given graph has treewidthbounded by a fixed natural number k is known to be feasible in linear time [13].A finite structure A consists of a domain A and relations R1, . . . , Rk of arities a1, . . . , ak, respectively. Each relation R iconsists of a set of tuples (e1, . . . , eai ), where e j ∈ A, for each 1 (cid:3) j (cid:3) ai . The size of A, denoted by (cid:10)A(cid:10), is the value(cid:10)A(cid:10) = | A| +|R j| × a j . Note that a graph G = (N, E) can be viewed as a finite structure whose domain is N, andwhere E is a binary relation encoding its edges.(cid:2)kj=1The Gaifman graph of a finite structure A is the undirected graph G(A) whose vertices are the elements of the domain(cid:16)if and only if there is a tuple of some relation of A wherejointly occur. The treewidth of A, denoted by tw(A), is the treewidth of its Gaifman graph, i.e., tw(A) = tw(G(A)).of A, and where there is an edge between the elements e and ee and e(cid:16)MSO. A First Order logic formula is made up of relation symbols, individual variables (usually denoted by lowercase letters),the logical connectives ∨, ∧, and ¬, and the quantifiers ∃ and ∀. Monadic Second Order (MSO) enhances the expressivenessof first order logic by allowing the use of set variables (usually denoted by uppercase letters), of the membership relation ∈,and of the quantifiers ∃ and ∀ over set variables. In addition, it is often convenient to use symbols like ⊆, ⊂, ∩, ∪, and→ with their usual meaning, as abbreviations. When an MSO formula φ is evaluated over a finite structure A, the relationsymbols of φ are interpreted as the corresponding relations of A and the variables of φ range over the domain A of A. Thefact that an MSO formula φ holds over A is denoted by A |(cid:21) φ.Example 7.1. Let G = (N, E) be an undirected graph (interpreted as a finite structure). Then, the fact that G is 3-colorablecan be expressed via the following MSO formula:∃R, B, Y , R ∪ B ∪ Y = N ∧R ∩ B = ∅ ∧ R ∩ Y = ∅ ∧ B ∩ Y = ∅ ∧(cid:10)(cid:9)∀ y, {x, y} ∈ E → ¬( y ∈ B)∀x, x ∈ B →(cid:10)(cid:9)∀x, x ∈ R →∀ y, {x, y} ∈ E → ¬( y ∈ R)(cid:10)(cid:9)∀ y, {x, y} ∈ E → ¬( y ∈ Y )∀x, x ∈ Y →∧∧In particular, note that the formula checks whether there exists a partition of the nodes in N into three disjoint sets of nodesR, B, and Y , which respectively correspond to the nodes that are colored red, blue, and yellow. Moreover, the formula checksthat for each node, all its adjacent nodes are colored with a different color.The relationship between treewidth and MSO is illustrated next.Proposition 7.2 (Courcelle’s Theorem [19]). Let φ be a fixed MSO sentence, let k be a fixed constant, and let Ck be a class of finitestructures having treewidth bounded by k. Then, for each finite structure A ∈ Ck, deciding whether A |(cid:21) φ holds is feasible in lineartime (w.r.t. (cid:10)A(cid:10)).For instance, from the above theorem and Example 7.1, we can immediately conclude that 3-colorability is a propertythat can be checked in polynomial time on classes of graphs having bounded treewidth, while, on arbitrary classes of graphs,the problem is known to be NP-complete (see, e.g., [35]).An important generalization of MSO formulae to optimization problems was presented by Arnborg et al. [2]. Next, westate a simplified definition of these kinds of problems.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101903Let A be a finite structure over the domain A, and let w be a list of weights associated with the elements in A, suchthat w(e) is a rational number for each e ∈ A. The pair (cid:3)A, w(cid:4) is hereinafter called a weighted finite structure, and its size(cid:10)(cid:3)A, w(cid:4)(cid:10) is defined as the size of A plus all the values (numerators and denominators) in w.Let φ( ¯X) be an MSO formula over A, where ¯X is the set of free variables occurring in φ. For an interpretation I mappingvariables in ¯X to subsets of A, we denote by φ[I] the MSO formula (without free variables) where each variable X ∈ ¯X isreplaced by I( X).A solution to φ over (cid:3)A, w(cid:4) is an interpretation I such that A |(cid:21) φ[I] holds. The cost of I is the value(cid:2)(cid:2)X∈ ¯Xe∈I( X) w(e).A solution of minimum cost is said optimal.Example 7.3. Let G = (N, E) be an undirected graph (interpreted as a finite structure). Then, the property that a set X ofnodes is a vertex cover, i.e., a set such that each edge in E has at least one endpoint incident on it, can be expressed via thefollowing MSO formula where X is its free variable:vertexCover(X) ≡ X ⊆ N ∧(cid:9)∀ y, y ∈ N → ( y ∈ X) ∨(cid:9)∃x ∈ X, {x, y} ∈ E(cid:10)(cid:10)By considering a list w of weights assigning 1 to each node in N, we have that an optimal solution to vertexCover over(cid:3)G, w(cid:4) is a minimum-cardinality vertex cover.The fact that, over bounded treewidth structures, deciding the existence of a solution to a fixed MSO sentence is feasiblein polynomial time is the well-known result by Courcelle. The result below evidences that not only the decision problem,but even the associated problem of computing a solution of minimum cost is feasible in polynomial time on such structures.Theorem 7.4 (Simplified from Arnborg et al. [2]). Let φ be a fixed MSO sentence, let k be a fixed constant, and let Ck be a class of finitestructures having treewidth bounded by k. Then, for each weighted finite structure (cid:3)A, w(cid:4) such that A ∈ Ck, computing an optimalsolution to φ over (cid:3)A, w(cid:4) is feasible in polynomial time (w.r.t. (cid:10)(cid:3)A, w(cid:4)(cid:10)).For instance, from the above theorem and Example 7.3, we can immediately conclude that computing a minimum-cardinality vertex cover is feasible in polynomial time on classes of graphs having bounded treewidth whereas, on arbitraryclasses of graphs, it is NP-hard (see, e.g., [4]). A further example is discussed below.Example 7.5. A Boolean formula F in conjunctive normal form over a set V of variables can be interpreted as a structurewhere cl(z) (resp., var(z)) means that z is a clause (resp., a variable) in F , and where pos(x, c) (resp., neg(x, c)) means thatx occurs in a positive (resp., negative) literal in the clause c. Then, the property that a set X of variables is a model for Fcan be expressed via the following MSO formula:model(X) ≡ X ⊆ V ∧ ∀c, cl(c) → ∃x,(cid:9)(cid:9)(cid:10)x ∈ X ∧ pos(x, c)∨(cid:9)x /∈ X ∧ neg(x, c)(cid:10)(cid:10)By considering a list w of weights assigning 1 to each variable in V , we have that an optimal solution to model over (cid:3)F , w(cid:4)is a minimum-sized model, i.e., a satisfying truth assignment whose number of variables evaluating to true is the minimumpossible one over all possible satisfying truth assignments.7.2. MSO encoding for marginal contribution networksSeminal results on the tractability of special classes of marginal contribution nets have been discussed by Ieong andShoham [44], who showed that In-Core and Core-NonEmptiness are tractable on classes of MC-nets whose associatedagent graphs have bounded treewidth. However, as observed in the Introduction, since for each rule {pattern} → value thesubgraph induced by the players occurring together in pattern is a clique in the agent graph, by using this representationone may overvalue the actual intricacy of the game. For instance, classes of MC-nets with one rule only involving all theplayers of the game do not fall in the tractable classes analyzed by Ieong and Shoham [44], as the associated agent graphconsists of a clique over all the players (whose treewidth is thus not bounded by any fixed constant). After this observation,we next explore the possibility of isolating larger islands by encoding MC-nets in terms of suitable finite structures.Let M be a marginal contribution network whose sets of players and rules are P and R, respectively. We encode M interms of a finite structure AM defined over the universe P ∪ R, over the unary relations player and rule, and over the binaryrelations pos and neg. Tuples in the relations are defined as follows: for each player p ∈ P , the tuple (p) is in player; for eachrule r ∈ R, the tuple (r) is in rule; for each rule r of M having the form {pattern} → value, and for each player p occurringpositively (resp., negatively) in pattern, the tuple (p, r) is in pos (resp., neg). For a marginal contribution network M, wedefine its incidence graph IG(M) as the Gaifman graph of the structure AM . Note that IG(M) is a bipartite graph, whoseset of nodes consists of the players and the rules in M, and where there is an edge between a player p and a rule r if andonly if p occurs in the pattern of r.Example 7.6. Consider again the marginal contribution network M of Example 1.3 (on p. 1880), which consists of the rulesr1 : {a ∧ b ∧ c} → 2, r2 : {c ∧ d ∧ e} → 1, r3 : {e} → −1, over the players in {a, b, c, d, e}. Then, the finite structure AMassociated with M is such that: players = {(a), (b), (c), (d), (e)}, rules = {(r1), (r2), (r3)}, pos = {(a, r1), (b, r1), (c, r1), (c, r2),(d, r2), (e, r2), (e, r3)}, and neg = { }.1904G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910Fig. 2 reports, on the right, the incidence graph associated with the MC-net of Example 1.3. Note that IG(M) is acyclic,while the agent graph AG(M), reported on the left of the figure, contains cycles.For each natural number n > 0, let Mn denote the network over the players p1, . . . , pn and just containing the rule{p1 ∧ · · · ∧ pn} → 0. Then, it is easily seen that tw(IG(Mn)) = 1, i.e., the incidence graph is acyclic, while tw(AG(Mn)) = n − 1.Therefore, the class of all such MC-nets has bounded treewidth (actually, treewidth 1) if incidence graphs are considered,while it has unbounded treewidth if agent graphs are considered. In fact we next show that, as long as one is interestedin identifying structurally restricted classes of tractable MC-nets, the incidence graph encoding is always preferable to theagent-graph one, as classes of games whose agent graphs have bounded treewidth are such that their associated incidencegraphs have bounded treewidth too (and we have just observed that the inverse does not hold).Proposition 7.7. For any MC-net M, tw(IG(M)) (cid:3) tw(AG(M)) + 1.Proof. Let M be an MC-net, and let (cid:3)T , χ (cid:4) be a tree decomposition of AG(M), where T = (V , F ) is a tree. Note that foreach rule r : {pattern} → value in M, the subgraph of AG(M) induced over the set P r of all the players occurring in patternis a clique. Thus, there is a vertex vr ∈ V such that P r ⊆ χ (vr)—in case where several vertices cover the variables in P r , letvr denote an arbitrarily chosen one enjoying the property.Based on (cid:3)T , χ (cid:4), we build a pair (cid:3)Tis the tree obtained from T by creating a novel vertex wr , for each ruler of M, and by connecting wr to the vertex vr . Moreover, let us define χ (cid:16)(v) = χ (v), for each v ∈ T , and χ (cid:16)(wr) = P r ∪ {r},(cid:16), χ (cid:16)(cid:4) is a tree decomposition of IG(M). To this end, note thatfor each vertex wr ∈ Tall the edges and nodes of IG(M) are covered in the vertices of the form wr , that the connectedness condition over theplayer-nodes is guaranteed by the connectedness condition on (cid:3)T , χ (cid:4), and that the connectedness condition over rule-nodesis guaranteed by the fact that each such node exactly occurs in one vertex. The result follows by the fact that the width of(cid:3)T(cid:16), χ (cid:16)(cid:4) is bounded by the width of (cid:3)T , χ (cid:4) plus 1. (cid:2)(cid:16) \ T . It is immediate to check that (cid:3)T(cid:16), χ (cid:16)(cid:4) where T(cid:16)7.3. Complexity resultsNow that the framework for encoding the structure of marginal contribution networks has been illustrated, a naturalquestion arises, that is, whether bounded treewidth over incidence graph encodings is a guarantee for the tractability of thesolution concepts studied in the paper. In the rest of the section, we shall provide an answer to this question. The answeris positive, at least for those cases where the values occurring in the network are polynomially bounded in the number ofplayers and rules.For any natural number k, let MCN k be the class of marginal contribution nets such that, for each M ∈ MCN k,tw(IG(M)) (cid:3) k and the value of each rule of M is polynomially bounded by the size of AM . Moreover, for each marginalcontribution network M, let (cid:10)M(cid:10) denote its size, naturally measured as the size of AM plus the number of bits necessarilyto encode all the values in the rules of M (in binary).We next provide our results concerning the tractability of the problems In-Core, Core-NonEmptiness and In-Kernelover the class MCN k. Note that the results pertaining to the core are incomparable to those by Ieong and Shoham [44].Indeed, on the one hand, we consider classes of marginal contribution networks that are larger in terms of their structurebut, on the other hand, we restrict ourselves to deal with “small” values. In particular, these islands of tractability lead topseudo-polynomial algorithms when values are not small, and the question is open about whether (full) polynomial-timealgorithms exist for MC-nets with bounded-treewidth incidence graphs.Theorem 7.8. On the class MCN k, In-Core is feasible in polynomial time.Proof. Let M be a marginal contribution network in MCN k, and let x be a payoff vector. We have to check whether xbelongs to the core of the game induced by M. Assume w.l.o.g. that x is an imputation. Indeed, over marginal contributionnetworks, this latter property can be checked in polynomial time. Let (cid:3)AM , w(cid:4) be the weighted relational structure whereAM is the relational encoding of M, and where w(r) = −value, for each rule r : {pattern} → value, and w(p) = xp , for eachplayer p in M.Consider the following MSO formulae:rules(X) ≡ ∀r, r ∈ X → r ∈ ruleplayers(Y ) ≡ ∀p, p ∈ Y → p ∈ player(cid:9)active(X, Y ) ≡ ∀p, ∀r,maxActive(X, Y ) ≡ active(X, Y ) ∧(cid:9)(p, r) ∈ pos ∧ r ∈ X → p ∈ Y∧(cid:9)(cid:16) ⊃ X → ¬activeX(cid:16)∀ X, X(cid:10)(cid:9)(p, r) ∈ neg ∧ r ∈ X → p /∈ Y(cid:16)(cid:10)(cid:10), Y(cid:10)excess(W ) ≡ ∃X, Y : rules(X) ∧ players(Y ) ∧ X ∪ Y = W ∧ maxActive(X, Y )G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101905and note that an interpretation I such that AM |(cid:21) excess[I] is just a mapping from the set W (of the free variables in theformula) to a disjoint union of two sets X and Y of rules and players, respectively, where X consists of the rules of M thatapply to coalition Y . The cost of I is therefore the valueis theworth function encoded via the network M.p∈Y w(p) = x(Y ) − vMCN (Y ), where vr∈ X w(r) +MCN(cid:2)(cid:2)From the above observation, it follows that there is a one-to-one correspondence between optimal solutions to theMCN (Y ), for each coalition Y . Thus, theformula excess and the sets Yimputation x belongs to the core of the game if and only if the cost of any optimal solution is non-negative.of players such that x(Y∗) (cid:3) x(Y ) − vMCN (Y∗) − v∗To conclude the proof, observe now that for any fixed constant k, by Theorem 7.4, an optimal solution (and thus itsassociated cost) can be computed in polynomial time (w.r.t. (cid:10)(cid:3)AM , w(cid:4)(cid:10)) on each class Ck of structures such that everyelement AM ∈ Ck has treewidth bounded by k, i.e., such that tw(IG(M)) (cid:3) k. Recall now that the size (cid:10)(cid:3)AM , w(cid:4)(cid:10) is definedas the size of AM plus all the values in w (or, equivalently plus the number of bits that are necessary to encode theweights in unary). Whenever the value of each rule of M is polynomially bounded by the size of AM , we have that anoptimal solution can be computed in polynomial time w.r.t. (cid:10)M(cid:10) (i.e., w.r.t. the size of AM plus the number of bits that arenecessary to encode all the values in the rules of M in binary). Thus, on the class MCN k, In-Core is feasible in polynomialtime. (cid:2)The proof of the above results provides us with a key ingredient to show the tractability of Core-NonEmptiness onthe class MCN k. Indeed, Ieong and Shoham [44] observed that Core-NonEmptiness can be solved in polynomial timevia the ellipsoid method, provided that a polynomial time separation oracle exists for the problem of checking whether agiven imputation x is not in the core. A separation oracle is any procedure that either confirms that x belongs to the core,MCN (S) < 0). Computing an optimalor reports a coalition S witnessing that this is not the case (i.e., such that x(S) − vsolution to the MSO formula excess in the proof of Theorem 7.8 immediately provides us with such a separation oracle,which is computable in polynomial time on the class MCN k. Thus, the following is established.Theorem 7.9. On the class MCN k, Core-NonEmptiness is feasible in polynomial time.We now conclude the analysis by considering the kernel.Theorem 7.10. On the class MCN k, In-Kernel is feasible in polynomial time.Proof. Let x be a given payoff vector. Since we can check in polynomial time whether x is an imputation, by Definition 4.1we have just to show that checking whether si, j(x) > s j,i(x) ⇒ x j = v({ j}) holds is feasible in polynomial time (on theclass MCN k), for each pair of players i (cid:13)= j. We shall prove that si, j(x) can be computed in polynomial time for any pairof players, which clearly entails the tractability result. In particular, recall that si, j(x) = maxS∈Ii, j e(S, x), so that si, j(x) =MCN (S)). Thus, it can equivalently be shown that we can compute inmaxS∈Ii, j (vpolynomial time the value minS∈Ii, j (x(S) − vMCN (S) − x(S)) = − minS∈Ii, j (x(S) − vMCN (S)).To this end, given a marginal contribution network M ∈ MCN k, consider the relational structure A+by adding the unary relations in and out, with in = {(i)} and out = {( j)}. Note that AM and A+Gaifman graph (thus, the modification does not alter their structural properties).M obtained from AMM have precisely the sameConsider now the MSO formulae in the proof of Theorem 7.8, with the following change:+excess(W ) ≡ ∃X, Y : rules(X) ∧ players(Y ) ∧ X ∪ Y = W ∧ maxActive(X, Y ) ∧(∀p, p ∈ in → p ∈ Y ) ∧ (∀p, p ∈ out → p /∈ Y )MAn interpretation I such that A+|(cid:21) excess[I] is now a mapping from the set W to a disjoint union of two sets X and Yof rules and players, respectively, where, in particular, X consists of the rules of M that apply to coalition Y , and where Ycontains player i and does not contain player j. Thus, by considering the weighting function w in the proof of Theorem 7.8,MCN (S))we have that optimal solutions one-to-one correspond to coalitions S ∈ Ii, j minimizing the expression (x(S) − vover all the possible coalitions in Ii, j . By Theorem 7.4, an optimal solution (and thus its associated cost) can be computed in∈ C+polynomial time on each class C+M ) = tw(IG(M)) (cid:3) k holds, and such thatthe value of each rule of M is polynomially bounded by the size of A+M . The tractability on MCN k immediately followsfrom the fact that, given any marginal net M ∈ MCN k, the corresponding structure A+k can be built in polynomialtime, and it is such that tw(AM ) = tw(A+M ). (cid:2)k of structures such that, for each A+k , tw(A+∈ C+MMBy combining the above three results with Proposition 7.7 and with the fact that any graph game can be encoded asa marginal contribution network having the same agent graph structure, we get the following tractability results for graphgames.Corollary 7.11. Let GGk be any class of graph games such that, for each G ∈ GGk, tw(G) (cid:3) k and all the weights in G are polynomiallybounded in the number of its nodes. Then, on the class GGk, In-Core, Core-NonEmptiness, and In-Kernel are feasible in polynomialtime.1906G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910We leave the section by stressing that the running time of the algorithms exploited by Courcelle [19] and Arnborget al. [2] to evaluate MSO formulae exponentially depends on the treewidth of the underlying structure. Thus, boundedtreewidth is an actual key for tractability only if the given domain exhibit instances with low treewidth. As an example,such instances were subject of study in a number of papers dealing with (wireless) communication networks [51,15], andmiddleware strategies defined on top of such networks (where tree-like structures often emerge [50]). Therefore, results inthis section are likely to be of practical interest for those classes of (graph) games exploited in the literature to modelcooperation as a coordination paradigm in communication networks [71].8. ConclusionsIn this paper, we have provided a complete picture of the complexity issues arising from the notions of the core, kernel,and bargaining set on compactly specified coalitional games. Our results confirm two conjectures by Deng and Papadimitriou[26] concerning graph games, and positively answer an open question regarding marginal contribution networks posed byIeong and Shoham [44]. In addition, we have studied the complexity of these concepts on NPopt-representations, and onclasses of marginal contribution networks whose incidence-graph encodings have bounded treewidth.Our research leaves open some specific technical issues, which might be addressed in further research. In particular,it would be interesting to assess (1) whether hardness results for NPopt-representation can be established for some spe-cific formalism proposed in the literature, (2) whether tractability results for the core and the kernel still hold in case ofarbitrary—possibly very large—weights, and (3) whether the bargaining set is tractable over classes of marginal networkswhose incidence-graph encodings have bounded treewidth.Moreover, our research opens the way to further investigate more general questions regarding coalitional games. Thefirst natural question is whether some of the techniques described in this paper are applicable to other core-based solutionconcepts, such as the nucleolus [73], the least core [56], or the cost of stability [6]. With this respect, note that the complexityof the nucleolus over succinctly specified games has been already studied by Greco et al. [38], who provided hardnessresults that still hold over graph games (and, hence, marginal contribution networks). Moreover, the complexity of theleast core and of the cost of stability has been recently studied by Greco et al. [40], with hardness results being providedwhich are specific to the oracle setting. In fact, the question of whether such hardness results still hold over graph gamesand/or marginal contribution networks was not addressed by Greco et al. [40], and cannot be answered by a straightforwardadaptation of the techniques illustrated in this paper.Another avenue of further research concerns the application of the method developed in Section 7 to other relevantgame representations and to other problems arising with coalitional games. On the one hand, concerning the application toother game representations, it would be interesting to extend the concept of incidence graph as to capture the interactionsin general MC-nets, i.e., in networks where patterns can be arbitrary Boolean formulae [29]. On the other hand, concerningthe application to other problems for coalitional games, one may consider for instance the coalition structure generationproblem. In fact, this problem has recently been studied over coalitional skill games by Bachrach et al. [7], who showed thatit is feasible in polynomial time over instances whose underlying structures have bounded treewidth. The result has beenestablished by encoding coalition structure generation in terms of a constraint satisfaction problem (CSP) [23], and exploitingwell-known results on the tractability of CSP instances having bounded treewidth. As CSPs can be straightforwardly encoded,in their turn, in terms of Monadic Second Order Logic (in fact, even in First Order Logic without negation and disjunction),the existence of pseudo-polynomial algorithms directly follows from the line of reasoning exploited in Section 7. However,in order to assess whether such tractability results still hold in case of arbitrary weights, direct solution approaches areneeded. Similarly, our techniques might be used to assess whether coalition structure generation over graph games and MC-nets [60] remains feasible in pseudo-polynomial time when the underlying structures have bounded treewidth. However,extending the results to get (full) polynomial time algorithms would require new methods. As an example, tractabilityresults on certain classes of minor-free graphs have recently been singled out by Voice et al. [78].AcknowledgementsThe authors would like to warmly thank the anonymous referees for the competent and helpful comments that allowedto significantly improve the quality of the paper.Appendix A. Proofs in Section 4Lemma 4.3. Let K (φ) = (cid:3)(NK, EK), w(cid:4) be the graph game associated with the 3CNF formula φ. Then:(A) w({chall, sat}) (cid:2) D + 1; and,(B) D + w(e) < 0, for each penalty edge e ∈ EK,where D = max{chall,sat}(cid:2)S⊆N v(S) denotes the maximum worth over all the coalitions not covering the edge {chall, sat}.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101907(cid:2)Proof. Let P =firstly observe that:e∈EK|e(cid:13)={chall,sat},w(e)>0 w(e) be the sum of all the positive edges, but the normalizer one, in K (φ). Let usP (cid:3) 3 × m × 2n+3 + 2 ×n(cid:3)i=12i + 20 (cid:3) 2m+n+5 + 2n+2 + 20 (cid:3) 2m+n+6Thus, 2m+n+7 (cid:2) 2 × P holds. Moreover, observe that K (φ) contains at least one penalty edge, since w.l.o.g. there is a clausee∈EK|e(cid:13)={chall,sat} w(e) (cid:2) 1 − P + 2m+n+7. It follows thatin φ containing at least two literals. Hence, w({chall, sat}) = 1 −w({chall, sat}) (cid:2) 1 − P + 2 × P = 1 + P . Eventually, P (cid:2) D holds by definition of D and, therefore, w({chall, sat}) (cid:2) 1 + D,which proves (A).(cid:2)As for (B), given that D > 0 and P (cid:2) D, we may note that 2m+n+7 (cid:2) 2 × P implies 2m+n+7 > D. (cid:2)Property 4.4.(1). For each player i /∈ {sat, chall}, it holds that maxS∈Ii,sat e(S, x) (cid:3) maxS∈Isat,i e(S, x).(cid:2)Property 4.4.(2). maxS∈IProof. Let S be an arbitrary coalition in Ii,sat with i (cid:13)= chall (and i (cid:13)= sat), and consider the coalition T = {chall, sat} ∈ Isat,i .Note that e(T , x) = v(T ) − x(T ) = v({chall, sat}) − 1 while e(S, x) = v(S). By Lemma 4.3(A), we know that v({chall, sat}) (cid:2)v(S) + 1. Thus, e(T , x) (cid:2) e(S, x) holds for all coalitions S ∈ Ii,sat with i (cid:13)= chall. (cid:2)chall,sat e(S, x) = m × 2n+3 + maxσ |(cid:21)φchall,sat e(S, x) = maxS∈Ichall,sat v(S), by construction of the imputation x. Let S∗ be theProof. Let us firstly note that maxS∈Icoalition getting maximum worth over all the coalitions in Ichall,sat. Because of Lemma 4.3(B) and since v({chall}) = 0, S∗cannot cover any penalty edge, for otherwise S∗ would not be a coalition with maximum worth amongst those belongingto Ichall,sat. Thus, (i) for each variable player αi ∈ S∗, no literal player of the form ¬αi, j is in S∗; (ii) for each clause playerc j ∈ S∗, at most one literal player of the form (cid:11)i, j is in S∗; and, (iii) for each variable αi , S∗ contains no pairs of literalplayers of the form αi, j and ¬αi, j(cid:16) .αi |σ (αi )=true 2i.It follows that the worth of S∗ is such that: v(S∗) = |C| × 2n+3 +αi ∈S∗ 2i , where C is the set of the clause playersc j ∈ S∗ for which exactly one literal player (cid:11)i, j is in S∗; in particular, recall that 2i is the weight associated with the edge{chall, αi}, while 2n+3 is the weight associated with each edge of the form {c j, (cid:11)i, j}. Now, let, (cid:6)σ be a truth assignment suchthat (cid:6)σ (αi) = true (resp., (cid:6)σ (αi) = false) if αi, j (resp., ¬αi, j ) occurs in S∗ for some clause c j . Note that (cid:6)σ may be a partialassignment, over a set of variables (cid:6)α ⊆ {α1, . . . , αn}; however, because of (iii) above, (cid:6)σ is non-contradictory and satisfies(cid:2)all the clauses whose players are in C . Eventually, since φ is satisfiable and since 2n+3 >ni=1 2i , because of (ii), S∗ willcertainly contain all the m clause players (i.e., (cid:6)σ is a satisfying assignment for φ). That is, v(S∗) = m × 2n+3 +Observe now that if αi, j is in S∗, then αi is in S∗ as well, since this leads to maximize the worth of S∗. Moreover, if ¬αi, jis in S∗, then αi is not in S∗ because of (i). Thus, the assignment σS∗ such that σS∗ (αi) = true (resp., σS∗ (αi) = false) ifαi occurs (resp., not occurs) in S∗ coincides with (cid:6)σ when restricted over the domain of the variables in (cid:6)α. Therefore, σS∗ isa satisfying assignment, and we have:(cid:3)αi ∈S∗ 2i .(cid:3)(cid:2)(cid:2)v(S∗) = m × 2n+3 +αi |σS∗ (αi )=true2i (cid:3) m × 2n+3 + maxσ |(cid:21)φ2i.αi |σ (αi)=trueWe conclude the proof by showing that the above inequality cannot be strict. Indeed, assume, for the sake of contradic-tion, that a satisfying assignment σ exists for φ such that v(S∗) < m × 2n+3 +αi |σ (αi )=true 2i . Based on σ , we can builda coalition S such that: (a) {chall, c1, . . . , cm} ⊆ S; (b) αi ∈ S, for each αi such that σ (αi) = true; (c) exactly one literal (cid:11)i, jis in S, for each clause c j that is satisfied by (cid:11)i, j according to the truth values defined in σ ; (d) no further player is in S.Given that σ is a satisfying assignment, no penalty edge is covered by S. In particular, v(S) = m × 2n+3 +αi ∈S 2i and,αi |σ (αi )=true 2i . But, this is not possible since we would have a coalition S ∈ Ichall,sat such that(cid:2)(cid:2)(cid:2)hence, v(S) = m × 2n+3 +v(S) > v(S∗) = maxS∈Ichall,sat v(S). (cid:2)Property 4.4.(3). maxS∈Isat,chall e(S, x) = m × 2n+3 + maxσ |(cid:21)φ(|{α1 | σ (α1) = true}| +(cid:2)αi |σ (αi )=true 2i) − 1.Proof. The property can be proven precisely along the same line of reasoning as in the proof of Property 4.4.(1). Thedifferences are that: x(S) = 1 holds for each S with sat ∈ S; and that the weight associated with the edge {sat, αi} is 2i , foreach 2 (cid:3) i (cid:3) n, while it is 21 + 20 for the case where i = 1. In particular, |{α1 | σ (α1) = true}| precisely encodes the factthat unitary weight has to be added to any assignment where α1 evaluates to true. (cid:2)Appendix B. Proofs in Section 5Lemma 5.3. Let BS(Φ) = (cid:3)(NBS, EBS), w(cid:4) be the graph game associated with the NQBF2,∀ formula Φ. Then:(A) D (cid:3) m;1908G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910(B) w({chall, sat}) > 2 × m;(C) D + w(e) < 0, for each penalty edge e ∈ EBS; and,(D) m (cid:2) 2 × n,where D = max{chall,sat}(cid:2)S⊆N v(S) denotes the maximum worth over all the coalitions not covering the edge {chall, sat}.Proof. The fact (A) that D (cid:3) m is immediate by construction. Moreover, the weight of each penalty edge is −m − 1 and,hence, (C) holds, too. Eventually, (D) (i.e., m (cid:2) 2 × n) is also immediate since Φ is an NQBF2,∀ formula.(cid:2)e∈EBS|e(cid:13)={chall,sat} w(e) (cid:3) −m − 1, for EBS contains more penalty edges than(cid:2)e∈E|e(cid:13)={chall,sat} w(e) (cid:2) n − 1 + m + (m + 1) > 2 × m. (cid:2)Let us, hence, focus on (B) by observing thatpositive ones. Thus, w({chall, sat}) = n − 1 + m −Property 5.4.(1). No player has a justified objection against a clause or a literal player.Proof. Indeed, any clause player c j receives 0 in x and is such that v({c j}) = 0. Therefore, she can counterobject to anyobjection through the singleton coalition {c j}. Similarly, any literal player (cid:11)i, j receives 0 in x and is such that v({(cid:11)i, j}) = 0,and can counterobject through {(cid:11)i, j}. (cid:2)Property 5.4.(2). No player has a justified objection against chall.Proof. Assume that a player p ∈ NBS wants to object against chall through a coalition S. If v(S) < 0 then p cannot objectagainst anyone. Indeed, she has to propose an S-feasible vector y such that yk > xk for all players k ∈ S, and hence v(S) =y(S) > x(S); however x(S) (cid:2) 0 by definition, so player p cannot fulfill this requirements if v(S) < 0. Then, because ofLemma 5.3(C), S does not include any penalty edges. In particular, for each universally quantified variable αk, it holds that}| (cid:3) 1, where ci(k) and c¯i(k) are the two clauses where this variable occurs (recall that Φ is an NQBF2,∀|S ∩ {αk,i(k), ¬αk,¯i(k)formula).Consider, then, the coalition T ⊆ {chall} ∪ {αk,i(k), ¬αk,¯i(k){αk,i(k), ¬αk,¯i(k)that zchall = xchall = n − 1 and zq = 1T ∩ S = ∅, (z, T ) is a counterobjection to any objection of p against chall through S. (cid:2)| 1 (cid:3) k (cid:3) n} such that |T | = n + 1, T ∩ S = ∅, and |T ∩}| = 1, for each 1 (cid:3) k (cid:3) n. Note that v(T ) = n and x(T ) = xchall = n − 1. Then, consider the vector z suchn > xq = 0 for each q ∈ T with q (cid:13)= chall, and observe that z(T ) = v(T ). Eventually, sinceProperty 5.4.(3). No player different from chall has a justified objection against sat.Proof. Suppose that a player p (cid:13)= chall has an objection ( y, S) against sat to x. Since sat /∈ S, it is the case that {chall, sat} (cid:3) Sand hence, by Lemma 5.3(A), that v(S) (cid:3) m. Then, we claim that (z, {sat, chall}) is a counterobjection to ( y, S) of p againstsat, where z is a feasible distribution that assigns m to sat and w({chall, sat}) − m to chall. In fact, by Lemma 5.3(B), challreceives a payoff strictly greater than m (i.e., zchall > m). Then, note that zsat = xsat and let us distinguish two cases:1. chall /∈ S: in this case, we have that zchall > m (cid:2) n − 1 = xchall (recall that m (cid:2) 2 × n, by Lemma 5.3(D));2. chall ∈ S: in this case, we have that zchall > m while ychall (cid:3) v(S) (cid:3) m, and hence zchall > ychall.It follows that, in both cases, (z, {sat, chall}) is a counterobjection to ( y, S). (cid:2)References[1] T. Ågotnes, W. van der Hoek, M. Wooldridge, Reasoning about coalitional games, Artificial Intelligence 173 (2009) 45–79.[2] S. Arnborg, J. Lagergren, D. Seese, Easy problems for tree-decomposable graphs, Journal of Algorithms 12 (1991) 308–340.[3] R.J. Aumann, M. Maschler, The bargaining set for cooperative games, in: Advances in Game Theory, Princeton University Press, Princeton, NJ, 1964,pp. 443–476.[4] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, M. Protasi, Complexity and Approximation: Combinatorial Optimization Prob-lems and Their Approximability Properties, Springer-Verlag, Berlin, Heidelberg, Germany, 1999.[5] H. Aziz, F. Brandt, P. Harrenstein, Monotone cooperative games and their threshold versions, in: M. Luck, S. Sen, W. van der Hoek, G.A. Kaminka (Eds.),Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2010), Toronto, Canada, 2010, pp. 1017–1024.[6] Y. Bachrach, E. Elkind, R. Meir, D.V. Pasechnik, M. Zuckerman, J. Rothe, J.S. Rosenschein, The cost of stability in coalitional games, in: M. Mavronicolas,V.G. Papadopoulou (Eds.), Algorithmic Game Theory, Proceedings of the Second International Symposium, SAGT 2009, Paphos, Cyprus, October 18–20,2009, in: Lecture Notes in Computer Science, vol. 5814, Springer-Verlag, Berlin, Germany, 2009, pp. 122–134.[7] Y. Bachrach, R. Meir, K. Jung, P. Kohli, Coalitional structure generation in skill games, in: M. Fox, D. Poole (Eds.), Proceedings of the 24th AAAI Conferenceon Artificial Intelligence (AAAI-10), Atlanta, GA, USA, 2010, pp. 703–708.[8] Y. Bachrach, E. Porat, Path disruption games, in: M. Luck, S. Sen, W. van der Hoek, G.A. Kaminka (Eds.), Proceedings of the 9th International Conferenceon Autonomous Agents and Multiagent Systems (AAMAS 2010), Toronto, Canada, 2010, pp. 1123–1130.[9] Y. Bachrach, J.S. Rosenschein, Coalitional skill games, in: L. Padgham, D.C. Parkes, J. Müller, S. Parsons (Eds.), Proceedings of the 7th InternationalConference on Autonomous Agents and Multiagent Systems (AAMAS 2008), Estoril, Portugal, 2008, pp. 1023–1030.[10] Y. Bachrach, J.S. Rosenschein, E. Porat, Power and stability in connectivity games, in: L. Padgham, D.C. Parkes, J. Müller, S. Parsons (Eds.), Proceedingsof the 7th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2008), Estoril, Portugal, 2008, pp. 999–1006.G. Greco et al. / Artificial Intelligence 175 (2011) 1877–19101909[11] P. Bernstein, N. Goodman, The power of natural semijoins, SIAM Journal on Computing 10 (1981) 751–771.[12] J.M. Bilbao, Cooperative Games on Combinatorial Structures, Theory and Decision Library C, vol. 26, Kluwer Academic Publishers, Reading, MA, USA,2000.[13] H.L. Bodlaender, A linear-time algorithm for finding tree-decompositions of small treewidth, SIAM Journal on Computing 25 (1996) 1305–1317.[14] A. Brøndsted, An Introduction to Convex Polytopes, Graduate Texts in Mathematics, vol. 90, Springer-Verlag, New York, NY, USA, 1983.[15] T. Calamoneri, The L(h, k)-labelling problem: An updated survey and annotated bibliography, The Computer Journal (2011), doi:10.1093/comjnl/bxr037,in press.[16] A. Condon, The complexity of stochastic games, Information and Computation 96 (1992) 203–224.[17] V. Conitzer, T. Sandholm, Computing Shapley values, manipulating value division schemes, and checking core membership in multi-issue domains,in: D.L. McGuinness, G. Ferguson (Eds.), Proceedings of the 19th National Conference on Artificial Intelligence (AAAI-04), San Jose, CA, USA, 2004,pp. 219–225.[18] V. Conitzer, T. Sandholm, Complexity of constructing solutions in the core based on synergies among coalitions, Artificial Intelligence 170 (2006)607–619.[19] B. Courcelle, Graph rewriting: An algebraic and logic approach, in: J. van Leeuwen (Ed.), Handbook of Theoretical Computer Science, Volume B: FormalModels and Semantics, The MIT Press, Cambridge, MA, USA, 1990, pp. 193–242.[20] S. Dasgupta, C.H. Papadimitriou, U. Vazirani, Algorithms, McGraw-Hill, New York, NY, USA, 2006.[21] C. Daskalakis, C.H. Papadimitriou, Computing pure Nash equilibria in graphical games via Markov random fields, in: J. Feigenbaum, J. Chuang, D.M.Pennock (Eds.), Proceedings of the 7th ACM Conference on Electronic Commerce (EC’06), Ann Arbor, MI, USA, 2006, pp. 91–99.[22] M. Davis, M. Maschler, The kernel of a cooperative game, Naval Research Logistics Quarterly 12 (1965) 223–259.[23] R. Dechter, Constraint Processing, Morgan Kaufmann Publishers, San Francisco, CA, USA, 2003.[24] X. Deng, Q. Fang, X. Sun, Finding nucleolus of flow game, Journal of Combinatorial Optimization 18 (2009) 64–86.[25] X. Deng, T. Ibaraki, H. Nagamochi, Algorithmic aspects of the core of combinatorial optimization games, Mathematics of Operations Research 24 (1999)751–766.[26] X. Deng, C.H. Papadimitriou, On the complexity of cooperative solution concepts, Mathematics of Operations Research 19 (1994) 257–266.[27] F.Y. Edgeworth, Mathematical Psychics: An Essay on the Mathematics to the Moral Sciences, C. Kegan Paul & Co., London, 1881.[28] E. Elkind, L.A. Goldberg, P.W. Goldberg, M. Wooldridge, On the computational complexity of weighted voting games, Annals of Mathematics andArtificial Intelligence 56 (2009) 109–131.[29] E. Elkind, L.A. Goldberg, P.W. Goldberg, M. Wooldridge, A tractable and expressive class of marginal contribution nets and its applications, MathematicalLogic Quarterly 55 (2009) 362–376.[30] E. Elkind, D. Pasechnik, Computing the nucleolus of weighted voting games, in: C. Mathieu (Ed.), Proceedings of the 20th Annual ACM–SIAM Symposiumon Discrete Algorithms (SODA09), New York, NY, USA, 2009, pp. 327–335.[31] U. Faigle, S.P. Fekete, W. Hochstättler, W. Kern, On approximately fair cost allocation in euclidean TSP games, OR Spektrum 20 (1998) 29–37.[32] U. Faigle, W. Kern, On some approximately balanced combinatorial cooperative games, ZOR – Methods and Models of Operations Research 38 (1993)141–152.[33] U. Faigle, W. Kern, S.P. Fekete, W. Hochstättler, On the complexity of testing membership in the core of min-cost spanning tree games, InternationalJournal of Game Theory 26 (1997) 361–366.[34] Z. Galil, Efficient algorithms for finding maximum matching in graphs, ACM Computing Surveys 18 (1986) 23–38.[35] M.R. Garey, D.S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. Freeman & Co., New York, NY, USA, 1979.[36] D.B. Gillies, Solutions to general non-zero-sum games, in: A.W. Tucker, R.D. Luce (Eds.), Contributions to the Theory of Games, vol. IV, in: Annals ofMathematics Studies, vol. 40, Princeton University Press, Princeton, NJ, USA, 1959, pp. 47–85.[37] M.X. Goemans, M. Skutella, Cooperative facility location games, Journal of Algorithms 50 (2004) 194–214.[38] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, On the complexity of compact coalitional games, in: C. Boutilier (Ed.), Proceedings of the 21st InternationalJoint Conference on Artificial Intelligence (IJCAI-09), Pasadena, CA, USA, 2009, pp. 147–152.[39] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, Non-transferable utility coalitional games via mixed-integer linear constraints, Journal of Artificial Intelli-gence Research 38 (2010) 633–685.[40] G. Greco, E. Malizia, L. Palopoli, F. Scarcello, On the complexity of the core over coalition structures, in: T. Walsh (Ed.), Proceedings of the 22ndInternational Joint Conference on Artificial Intelligence (IJCAI-11), Barcelona, Spain, pp. 216–221.[41] G. Greco, F. Scarcello, On the power of structural decompositions of graph-based representations of constraint problems, Artificial Intelligence 174(2010) 382–409.[42] B. Grünbaum, Convex Polytopes, Pure and Applied Mathematics, vol. XVI, Wiley, New York, NY, USA, 1967.[43] E. Helly, Über Mengen konvexer Körper mit gemeinschaftlichen Punkten, Jahresbericht der Deutschen Mathematiker-Vereinigung 32 (1923) 175–176.[44] S. Ieong, Y. Shoham, Marginal contribution nets: a compact representation scheme for coalitional games, in: J. Riedl, M.J. Kearns, M.K. Reiter (Eds.),Proceedings of the 6th ACM Conference on Electronic Commerce (EC’05), Vancouver, BC, Canada, 2005, pp. 193–202.[45] S. Ieong, Y. Shoham, Multi-attribute coalitional games, in: J. Feigenbaum, J. Chuang, D.M. Pennock (Eds.), Proceedings of the 7th ACM Conference onElectronic Commerce (EC’06), Ann Arbor, MI, USA, 2006, pp. 170–179.[46] D.S. Johnson, A catalog of complexity classes, in: J. van Leeuwen (Ed.), Handbook of Theoretical Computer Science, Volume A: Algorithms and Com-plexity, The MIT Press, Cambridge, MA, USA, 1990, pp. 67–161.[47] E. Kalai, W. Stanford, Finite rationality and interpersonal complexity in repeated games, Econometrica 56 (1988) 397–410.[48] E. Kalai, E. Zemel, On totally balanced games and games of flow, Discussion Paper 413, Northwestern University, Center for Mathematical Studies inEconomics and Management Science, Evanston, IL, USA, 1980.[49] W. Kern, D. Paulusma, Matching games: The least core and the nucleolus, Mathematics of Operations Research 28 (2003) 294–308.[50] R. Klasing, A. Kosowski, A. Navarra, Cost minimization in wireless networks with a bounded and unbounded number of interfaces, Networks 53 (2009)266–275.[51] A. Kosowski, A. Navarra, C.M. Pinotti, Exploiting multi-interface networks: Connectivity and cheapest paths, Wireless Networks 16 (2010) 1063–1073.[52] M.W. Krentel, The complexity of optimization problems, in: Proceedings of the 18th Annual ACM Symposium on Theory of Computing (STOC’86),Berkeley, CA, USA, pp. 69–76.[53] E. Malizia, L. Palopoli, F. Scarcello, Infeasibility certificates and the complexity of the core in coalitional games, in: M.M. Veloso (Ed.), Proceedings ofthe 20th International Joint Conference on Artificial Intelligence (IJCAI-07), Hyderabad, India, 2007, pp. 1402–1407.[54] M. Maschler, The inequalities that determine the bargaining set M(i)[55] M. Maschler, The bargaining set, kernel, and nucleolus, in: R.J. Aumann, S. Hart (Eds.), Handbook of Game Theory, vol. 1, in: Handbooks in Economics,1 , Israel Journal of Mathematics 4 (1966) 127–134.vol. 11, North-Holland, Amsterdam, The Netherlands, 1992, pp. 591–667.[56] M. Maschler, B. Peleg, L.S. Shapley, Geometric properties of the kernel, nucleolus, and related solution concepts, Mathematics of Operations Research 4(1979) 303–338.[57] N. Megiddo, Computational complexity of the game theory approach to cost allocation for a tree, Mathematics of Operations Research 3 (1978) 189–196.1910G. Greco et al. / Artificial Intelligence 175 (2011) 1877–1910[58] S. Muroga, Threshold Logic and Its Applications, Wiley-Interscience, New York, NY, USA, 1971.[59] J. von Neumann, O. Morgenstern, Theory of Games and Economic Behavior, 3rd ed., Princeton University Press, Princeton, NJ, USA, 1953.[60] N. Ohta, V. Conitzer, R. Ichimura, Y. Sakurai, A. Iwasaki, M. Yokoo, Coalition structure generation utilizing compact characteristic function represen-tations, in: I.P. Gent (Ed.), Principles and Practice of Constraint Programming – CP 2009, Proceedings of the 15th International Conference, CP 2009,Lisbon, Portugal, September 20–24, 2009, in: Lecture Notes in Computer Science, vol. 5732, Springer-Verlag, Berlin, Germany, 2009, pp. 623–638.[61] Y. Okamoto, Traveling salesman games with the Monge property, Discrete Applied Mathematics 138 (2004) 349–369.[62] M.J. Osborne, A. Rubinstein, A Course in Game Theory, The MIT Press, Cambridge, MA, USA, 1994.[63] G. Owen, On the core of linear production games, Mathematical Programming 9 (1975) 358–370.[64] C.H. Papadimitriou, Computational Complexity, Addison-Wesley, Reading, MA, USA, 1994.[65] C.H. Papadimitriou, K. Steiglitz, Combinatorial Optimization: Algorithms and Complexity, 2nd ed., Dover Publications, 1998.[66] C.H. Papadimitriou, M. Yannakakis, The complexity of facets (and some facets of complexity), Journal of Computer and System Sciences 28 (1984)244–259.[67] J. Pearson, P. Jeavons, A survey of tractable constraint satisfaction problems, Technical Report CSD-TR-97-15, Royal Holloway, University of London,1997.[68] K. Prased, J. Kelly, Np-completeness of some problems concerning voting games, International Journal of Game Theory 19 (1990) 1–9.[69] M. Rabin, A note on Helly’s theorem, Pacific Journal of Mathematics 5 (1955) 363–366.[70] N. Robertson, P. Seymour, Graph minors III: Planar tree-width, Journal of Combinatorial Theory, Series B 36 (1984) 49–64.[71] W. Saad, Z. Han, M. Debbah, A. Hjørungnes, T. Ba ¸sar, Coalitional game theory for communication networks: A tutorial, IEEE Signal Processing Maga-zine 26 (2009) 77–97.[72] M. Schaefer, Graph Ramsey theory and the polynomial hierarchy, Journal of Computer and System Sciences 62 (2001) 290–322.[73] D. Schmeidler, The nucleolus of a characteristic function game, SIAM Journal of Applied Mathematics 17 (1969) 1163–1170.[74] A.L. Selman, A taxonomy of complexity classes of functions, Journal of Computer and System Sciences 48 (1994) 357–381.[75] L.S. Shapley, M. Shubik, The assignment game I: The core, International Journal of Game Theory 1 (1971) 111–130.[76] H.A. Simon, Theories of bounded rationality, in: C.B. McGuire, R. Radner (Eds.), Decision and Organization, in: Studies in Mathematical and ManagerialEconomics, vol. 12, North-Holland, Amsterdam, The Netherlands, 1972, pp. 161–176.[77] S.H. Tijs, T. Parthasarathy, J.A.M. Potters, V. Rajendra Prasad, Permutation games: Another class of totally balanced games, OR Spektrum 6 (1984)119–123.[78] T. Voice, M. Polukarov, N.R. Jennings, Graph coalition structure generation, CoRR, arXiv:1102.1747 [abs], 2011.[79] M. Yannakakis, Equilibria, fixed points, and complexity classes, Computer Science Review 3 (2009) 71–85.