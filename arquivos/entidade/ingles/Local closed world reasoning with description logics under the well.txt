Artificial Intelligence 175 (2011) 1528–1554Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintLocal closed world reasoning with description logics underthe well-founded semanticsMatthias Knorr a,∗, José Júlio Alferes a, Pascal Hitzler ba CENTRIA, Departamento de Informática, FCT/UNL, Quinta da Torre, 2829-516 Caparica, Portugalb Kno.e.sis Center, Department of Computer Science and Engineering, Wright State University, 3640 Colonel Glenn Hwy, Dayton, OH 45435, USAa r t i c l ei n f oa b s t r a c tArticle history:Received 24 September 2009Received in revised form 21 January 2011Accepted 23 January 2011Available online 26 January 2011Keywords:Knowledge representationDescription logics and ontologiesNon-monotonic reasoningLogic programmingSemantic WebAn important question for the upcoming Semantic Web is how to best combine open worldontology languages, such as the OWL-based ones, with closed world rule-based languages.One of the most mature proposals for this combination is known as hybrid MKNF knowl-edge bases (Motik and Rosati, 2010 [52]), and it is based on an adaptation of the StableModel Semantics to knowledge bases consisting of ontology axioms and rules. In this paperwe propose a well-founded semantics for nondisjunctive hybrid MKNF knowledge basesthat promises to provide better efficiency of reasoning, and that is compatible with boththe OWL-based semantics and the traditional Well-Founded Semantics for logic programs.Moreover, our proposal allows for the detection of inconsistencies, possibly occurring intightly integrated ontology axioms and rules, with only little additional effort. We alsoidentify tractable fragments of the resulting language.© 2011 Elsevier B.V. All rights reserved.1. Introduction and motivationThe Semantic Web has recently become a major source of inspiration for Knowledge Representation and Reasoning (KRR).The underlying idea of the Semantic Web is to use KRR techniques to enhance data in the World Wide Web with knowledgebases, making this data available for processing by intelligent systems. Semantic Web has become a mature field of research,and industrial applications of Semantic Web technologies are on the way. Semantic Web is a topic that is clearly here tostay.However, we believe that the KRR formalisms used in the Semantic Web are not adequate for several application areaswithin the Semantic Web. We therefore motivate in this section why KRR formalisms combining open and closed worldreasoning are sometimes preferable over fragments of classical first-order logics, and we present application scenarios illus-trating the requirement for that combination. Then, we show the limitations of already existing approaches, and we statethe main contributions of our proposal.1.1. Open vs. closed world reasoningThe most prominent expressive KRR approach employed in Semantic Web research is based on Description Logics [3,27].In particular, the Web Ontology Language OWL [26] is based on the description logic SROIQ(D), and it is a recommendedstandard by the World Wide Web Consortium (W3C) for modelling Semantic Web knowledge bases (commonly known asontologies).* Corresponding author. Tel.: (+351) 21 294 8536; fax: (+351) 21 294 8541.E-mail addresses: mknorr@di.fct.unl.pt (M. Knorr), jja@di.fct.unl.pt (J.J. Alferes), pascal@pascal-hitzler.de (P. Hitzler).0004-3702/$ – see front matter © 2011 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2011.01.007M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541529Description Logics (DLs), in turn, bear a first-order predicate logic semantics. DLs are monotonic and adhere to theOpen World Assumption (OWA). This means that (negative) conclusions drawn from a knowledge base must be based oninformation explicitly present in the knowledge base. Being based on classical first-order logic, DLs differ from other KRRformalisms, e.g., those studied in the non-monotonic reasoning field, that usually apply the Closed World Assumption (CWA).Under that assumption, all non-provable expressions are assumed to be false.The decision to rely on the OWA appears to be a natural one in light of the envisioned applications related to the WorldWide Web: the absence of a piece of knowledge should not generally be taken as an indication that this piece of knowledgeis false. However, there are also application scenarios where the CWA, or at least the partial closure of the knowledge base,is a more natural choice. Such scenarios can occur, e.g., if ontology-based reasoning is done in conjunction with data storedin a database. Database data is usually considered to be complete, and so statements not in the database should be takenas false.As an example where a combination of open and closed world assumption is desired, consider the large case studydescribed in [54], containing millions of assertions about matching patient records with clinical trials criteria. In this clinicaldomain, open world reasoning is needed in radiology and laboratory data. For example, unless a lab test asserts a negativefinding, no arbitrary assumptions about the results of the test can be made. That is, we can only be certain that somepatient does not have a specific kind of cancer if the corresponding test has a negative result. However, as observed in [54],the closed world assumption can and should be used with data about medical treatment to infer that a patient is not on amedication unless otherwise stated. The work of [54] applies only open world reasoning but claims that the usage of closedworld reasoning in data about medical treatment would be highly desirable and that the combination of OWA and CWA isan open problem in their work. Similar situations occur, e.g., in matchmaking using Semantic Web Services (cf. [22]), and inother scenarios in the medical domain.In fact, life sciences, including medicine, is a prominently studied application area for OWL. Several large-scale ontologieshave been developed in this area that are being used in practice, such as GALEN1 and SNOMED.2 These ontologies provideunified medical terminologies for the management and exchange of clinical information. The knowledge bases typicallyconsist of information about anatomy, diseases, procedures, drugs, etc., and their applications range from medical recordmanagement to diagnostics support. SNOMED is used, for example, in the case study described above. All of these appli-cations use ontology reasoning based on the OWA. But it is not difficult to foresee situations in these domains that wouldbenefit from local closed world reasoning. Consider, for example, that such a medical knowledge base is used to decidewhether a certain anaesthetic should be applied before surgery, depending on whether the patient is allergic to the anaes-thetic or not. This information might not be available, and it should be modelled using the CWA: in an emergency situation,unless we know explicitly about an allergy, we assume that the patient is not allergic, and we apply the anaesthetic. Otherexamples can be found if we were to model exceptions in anatomical terminology; e.g., the existence of persons whoseheart is actually on the right-hand side. Exception modelling is not directly possible in classical first-order logic (this is aproblem usually known in Artificial Intelligence as the specification problem) and so also not possible in OWL using only theOWA.All of these examples demonstrate why application developers frequently voice that it would be favourable to have localclosed world modelling as an additional feature for ontology-based systems. More precisely, it would be desirable to have aKRR formalism that allows us to interpret some parts of the knowledge base under the CWA, and others under the OWA.Such capabilities would considerably enhance the usability of OWL.1.2. Combining rules and ontologiesOntologies are a standard OWA formalism while rules usually apply the CWA. A combination of ontologies and ruleswould clearly yield a combination of the OWA and the CWA. However, combining rules and ontologies is a non-trivial task,since a naive combination of ontologies and OWA-based rules is already undecidable [32]. In fact, formalisms for rulesand formalisms for ontologies differ substantially on how decidability is achieved. For ontologies, decidability is achievedby specific syntactic restrictions on the available first-order predicates, and by restricting the way these predicates canbe related. Rules do not have such syntactic restrictions, but are usually limited in their applicability to the finitely manydifferent objects explicitly appearing in the knowledge base. An immediate effect of these differences is that some expressivefeatures of one of the approaches are not available in the other approach. Namely, rules make it possible to express: non-treeshape-like relationships [62]3 such as “an uncle is the brother of one’s father”; integrity constraints [56] to state, e.g.,that a certain piece of information is explicitly present in the database; and closed world reasoning and specification ofexceptions, as discussed above. Ontologies, on the contrary, make it possible to express open world reasoning, reason withunbounded or infinite domains, and they are thus well suited to represent many types of incomplete information andschema knowledge. For example, in rule-based formalisms one typically cannot say that “every person has a father anda mother who are both persons” without listing all the parents explicitly. Our stance is that a combination of rules and1 http://www.opengalen.org/.2 http://www.ihtsdo.org/snomed-ct/.3 The DL SROIQ [30] also provides role composition axioms, which can be used to address some, but by no means all, use cases.1530M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554ontologies is not only of interest for current applications in the web, but also as a highly sophisticated means of knowledgerepresentation in general.As argued in [52], a hybrid formalism combining rules and DL ontologies should satisfy certain criteria:• Faithfulness: The integration of DLs and rules should preserve the semantics of both formalisms – that is, the semanticsof a hybrid knowledge base in which one component is empty should be the same as the semantics of the othercomponent. In other words, the addition of rules to a DL should not change the semantics of the DL and vice versa.• Tightness: Rules should not be layered on top of a DL or vice versa; rather, the integration between a DL and rulesshould be tight in the sense that both the DL and the rule component should be able to contribute to the consequencesof the other component.• Flexibility: The hybrid formalism should be flexible and allow one to view the same predicate under both open andclosed world interpretation. This allows us to enrich a DL with non-monotonic consequences from rules, and to enrichthe rules with the capabilities of ontology reasoning described by a DL.• Decidability: To obtain a useful formalism that can be used in applications such as the Semantic Web, the hybridformalism should be at least decidable, and preferably of low worst-case complexity.1.3. Hybrid MKNF and stable models vs. well-founded semanticsAs shown in [52], among the various proposals for combining rules and ontologies (e.g. [8,12,14,16,25,36,39–42,45,52,58]) the only one satisfying all four criteria above are Hybrid MKNF knowledge bases [52], which build on the logics ofMinimal Knowledge and Negation as Failure (MKNF) [47]. A detailed discussion about the importance of Hybrid MKNFknowledge bases for modelling knowledge in the Semantic Web can be found in [31], and [22,23] provide arguments forthe usefulness of epistemic reasoning in the way it is done in MKNF logics. The proposal by Motik and Rosati [52] seamlesslyintegrates arbitrary decidable description logics with essentially (disjunctive) logic programming rules, making it possibleto reason over a combination of monotonic open world knowledge and non-monotonic closed world knowledge within asingle (hybrid) framework.Several reasoning algorithms are presented in [52] for Hybrid MKNF knowledge bases, and it is shown that the datacomplexity of reasoning within this framework is in many cases not higher than reasoning in the corresponding fragmentof logic programming. Thus, adding an ontology to rules does not in general increase the data complexity when comparedto rules alone. But the same cannot be said about adding rules to ontologies. E.g., we have at least a data complexity ofcoNP for a combination of normal logic programming rules with ontologies even if the data complexity of the DescriptionLogics fragment is in the complexity class P. Indeed, although the approach of Hybrid MKNF knowledge bases is powerful,whenever we add rules with arbitrary non-monotonic negation to an ontology, we in general loose tractability. Only aspecific limited use of non-monotonic negation, i.e. stratified rules, admits to maintain tractability (see [52]). However, weclaim that robustness w.r.t. updates and the combination of different sources of information is an important property of acombination of rules and ontologies. Since it cannot be guaranteed that this property is maintained in such cases, we obtaina higher computational complexity in general.The reason for that increase in the complexity lies in the fact that, as shown in [47], rules are interpreted in a similar wayas in the Stable Model Semantics (SMS) [19] for logic programs, whose reasoning algorithms are NP-hard. So, if a semanticsbased on the SMS is adopted, then any improvements on the complexity of the combination of rules and ontologies arebound by NP-hardness.The other major semantics for Logic Programming (LP) – the Well-Founded Semantics (WFS) [61] – seems to offer asolution. WFS is a three-valued semantics, where propositions can be ‘true’, ‘false’ or ‘undefined’ (while in SMS propositionscan only be ‘true’ or ‘false’), and WFS assigns a single model – the well-founded model – to every nondisjunctive logicprogram. The WFS is sound with respect to the SMS, in that whenever a proposition is true (resp. false) under the WFS,then it is also true (resp. false) in all stable models. Though the WFS is semantically weaker than SMS (in terms of thederivable true and false consequences), reasoning in the WFS has a lower computational complexity than in SMS – fornormal programs the data complexity is P for the WFS instead of coNP for SMS [7]. Our stance is that the lower complexitybound makes WFS more promising than SMS as a basis for the semantics of hybrid knowledge bases. This is even more thecase in application areas such as the one mentioned above [54] where huge amounts of data are involved.Additionally, reasoning in SMS requires one to obtain the entire model of a knowledge base (just like [52] for combina-tions of rules and ontologies), while the WFS is amenable to top–down, query-driven reasoning, in which only the part ofthe knowledge base “relevant” to a specific query is accessed [6]. This makes a WFS based approach all the more suitablefor large scale applications.1.4. ContributionIn this paper, we define a new semantics for Hybrid MKNF knowledge bases, restricted to nondisjunctive rules, thatsoundly approximates the semantics of [52] but is, in some important cases, in a strictly lower complexity class. In partic-ular, when dealing with a tractable description logic, our combined approach remains tractable w.r.t. data complexity. Weachieve this by extending the two-valued MKNF semantics from [52] to three truth values where each two-valued modelM. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541531from [52] corresponds to a total three-valued model of our approach (and vice versa) and where the least (w.r.t. derivableknowledge) three-valued MKNF model is the well-founded MKNF model. Our proposal straightforwardly satisfies the fourcriteria presented above for the combination of rules and ontologies. Moreover, the proposed semantics also guarantees thefollowing properties:• The well-founded MKNF model is faithful w.r.t. the two-valued MKNF models of [52], i.e. each query that is true (resp.false) in the well-founded MKNF model is also true (resp. false), in each two-valued MKNF model.• Our proposal coincides with the original DL-semantics when no rules are present, and the original WFS of logic pro-grams if the DL component is empty.• If the knowledge base is consistent, then the approach is coherent in the sense of [55], i.e. if a formula ϕ is first-orderfalse in the ontology, then the non-monotonic interpretation of ϕ in the rules is enforced to be false as well.• If the knowledge base is inconsistent, then our approach allows us to detect inconsistencies without any substantialadditional computational effort apart from the consistency check of the ontology alone.• The computational data complexity of our approach depends on the computational complexity of the applied DL, but ifthe considered DL is of polynomial data complexity, then the combination with rules remains polynomial.1.5. Outline and running exampleThe rest of the paper is structured as follows. We first recall, in Section 2, preliminaries on Description Logics, the logicsof Hybrid MKNF, and Hybrid MKNF knowledge bases. Then, in Section 3, we present our semantic framework that extendsMKNF semantics to three truth values, based on which the well-founded MKNF model is defined. In Section 4 we show howto construct the well-founded MKNF model and also how the inconsistency detection works. A comparison to related workis presented in Section 5, before we conclude in Section 6.4Throughout the paper, we make use of the following toy example.Example 1. Consider an online store selling audio CDs. In order to attract more clients and raise sales, the store managerdecided to introduce more sophisticated tools for recommending and searching CDs.For that purpose, an ontology is used for structuring and maintaining the database of CDs. Each CD is associated witha unique identifier, a publisher, a release date, and the pieces of music the CD contains. Each piece of music has at leastone track, and it is possible that a piece has several tracks (as is common for classical music). Additionally, each piece hasa unique identifier and can be associated with the artist, composer, genre, origin of the piece.Moreover, the system should be able to express guidelines for recommendations, either based on general criteria or basedon customer specifications. For example, the store may want to automatically recommend to all customers CDs that are onoffer or top sellers. Or some customer may want to get recommendations for CDs that he does not already own and that,according to some preference criteria, he probably likes. Whereas the first guideline can be represented in the ontology,the second one requires the closed world assumption (e.g., for inferring “by default”, i.e., in the absence of evidence to thecontrary, that the customer does not have the CD) and can be represented by a non-monotonic rule.2. PreliminariesIn this section we recall preliminary notions that are needed in the rest of the paper. In detail, we present generalnotions for Description Logics, the logics of minimal knowledge and negation as failure, and Hybrid MKNF knowledge bases.2.1. Description logicsWe focus the presentation in this subsection on the description logic ALC, a foundational description logic for theresearch around OWL. However, our approach is basically independent of the underlying description logic, and the readerfamiliar with description logics will have no difficulty in applying our approach to more expressive description logics such asSHOIN or SROIQ, that underlie OWL, resp. OWL 2.5 We also recall some standard extensions appearing, for example,in lightweight description logics such as EL++[2]. For further background on description logics we refer to [3,27].The basic elements to represent knowledge in DLs are: individuals, which represent objects in a domain of discourse;concepts, which group together individuals with common properties; and roles, which relate individuals. Based on the setsN I , NC , and N R of individual names, concept names, and role names, respectively, the syntactic elements of ALC areconstructed according to the following grammar (in which A ∈ NC denotes an atomic concept, C(i) denote complex concepts,r ∈ N R denotes a role, and ai ∈ N I denote individuals):C(i) −→ ⊥ | (cid:6) | A | ¬C | C1 (cid:7) C2 | C1 (cid:8) C2 | ∃r.C | ∀r.C4 A preliminary, and much shorter version of this work was presented in [37].5 See, e.g., [27] for the definitions of these and other description logics and their relationships to OWL and OWL 2.1532M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554The semantics of the syntactic elements of ALC is defined in terms of interpretations. An interpretation I = ((cid:3)I , ·I )consists of a non-empty set (cid:3)I – the domain of I – and an interpretation function ·I that maps each individual a ∈ N I to adistinct element aI ∈ (cid:3)I , each concept name A ∈ NC to a set A I ⊆ (cid:3)I , and each role name r ∈ N R to a relation r I ⊆ (cid:3)I × (cid:3)I .An interpretation can be extended to complex concepts as follows:(cid:6)I = (cid:3)I⊥I = ∅∩ C I2∪ C I2(C1 (cid:7) C2)I = C I1(C1 (cid:8) C2)I = C I1(¬C)I = (cid:3)I \ C I(∀r.C)I =(∃r.C)I =x ∈ (cid:3)Ix ∈ (cid:3)I(cid:2)(cid:2)(cid:3)(cid:3) ∀ y.(x, y) ∈ r I implies y ∈ C I(cid:3)(cid:3) ∃ y.(x, y) ∈ r I and y ∈ C I(cid:4)(cid:4)An ALC knowledge base O is a finite set of axioms formed using concepts, roles, and individuals. A concept assertion isan axiom of the form C(a) that assigns an individual a to a concept C . A role assertion is an axiom of the form r(a1, a2)that relates two individuals a1, a2 by the role r. Concept and role assertions form the ABox. A concept inclusion is an axiomof the form C1 (cid:15) C2 that states the subsumption of the concept C1 by the concept C2. A concept equivalence axiom C1 ≡ C2is a shortcut for two inclusions C1 (cid:15) C2 and C2 (cid:15) C1. Concept inclusions and concept equivalences form the TBox, and theTBox and the ABox form the knowledge base O. An interpretation I satisfies a concept assertion C(a) if aI ∈ C I , a roleassertion r(a1, a2) if (aI2. Aninterpretation that satisfies all axioms of a knowledge base O is called a model of O. A concept C is called satisfiable withrespect to O if O has a model I in which C I (cid:17)= ∅. ALC is a decidable logic, and reasoning under ALC is ExpTime-complete[3].2, and a concept equivalence C1 ≡ C2 if C I2) ∈ r I , a concept inclusion C1 (cid:15) C2 if C I1, aI= C I⊆ C IALC can be extended in several ways, and one common extension is the addition of role inclusion axioms in the TBox.Since we use role inclusions in the running example, we recall them here as well. A role inclusion is an axiom of the formr (cid:15) s that states that role r is subsumed by the role s. A role composition axiom is of the form r ◦ s (cid:15) t, and it states thatrole t subsumes the composition of roles r and s. An interpretation I satisfies a role inclusion r (cid:15) s if r I (cid:15) sI and a rolecomposition axiom r ◦ s (cid:15) t if ∀a1, a2, a3 ∈ (cid:3)I : (a1, a2) ∈ r I ∧ (a2, a3) ∈ sI → (a1, a3) ∈ t I . Note that role compositions can beused to express transitivity of roles and left- and right-identity roles.11Example 2. Consider the online store scenario of Example 1. The following axioms and assertions could be part of theontology that the store uses6:CD (cid:15) ∃HasPiece.PiecePiece (cid:15) ∃HasArtist.ArtistHasPiece ◦ HasArtist (cid:15) HasArtistTopSeller (cid:8) OnOffer (cid:15) RecommendHasPiece(BNAW, BlueTrain)HasArtist(BlueTrain, JohnColtrane)(1)(2)(3)(4)(5)(6)Axiom (1) states that each CD consists of at least one piece, and axiom (2) expresses that each piece of music has anartist. The role composition axiom (3) states that if x is related to y by HasPiece and y is related to z by HasArtist, then x isrelated to z by HasArtist, i.e. HasArtist is a left-identity role. (1)–(3) alone allow us to derive, e.g., that the artist of a pieceon a certain CD is an artist of that CD. Note that this conclusion can be drawn without any present CDs, artists or pieces ofmusic, as intended when reasoning with schema knowledge in an infinite domain. Of course, once specific information isavailable (assertions (5) and (6)), we are able to derive, e.g., that John Coltrane is an artist of the album BNAW, and likewisefor all the other artists on that CD not explicitly mentioned in the example.Axiom (4) expresses one general guideline for recommendations: CDs that are on offer or top sellers are automaticallyrecommended to the customers.6 In these axioms, and throughout the paper, we adopt the convention that names starting with a capital letter represent concepts and roles (termedDL-atoms as defined later in the paper), while names starting with a lower case letter represent variables and predicates not appearing in the ontology(that will be called non-DL-atoms as defined later in the paper). In general, names of individuals/objects also start with a lower case letter. We only makean exception for the names in our running example as these are usually proper names.2.2. Logics of minimal knowledge and negation as failureM. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541533The logic of minimal knowledge and negation as failure (MKNF) [47] extends first-order logic with two modal operatorsK and not that inspect the knowledge base: intuitively, given a first-order formula ϕ, K ϕ asks whether ϕ is known whilenot ϕ is used to check whether ϕ is not known. The two modal operators permit local closed world reasoning. In particular,the operator not allows one to draw conclusions from the absence of information, in a way similar to that of defaultnegation in Logic Programming. We present below the syntax and the semantics of MKNF as introduced in [51,52].Let Σ = (Σc, Σ f , Σp) be a first-order signature, where Σc is a set of constants, Σ fis a set of function symbols, and Σpis a set of predicates containing the binary equality predicate ≈. The syntax of MKNF formulas over Σ is defined as follows.A first-order atom P (t1, . . . , tn) is an MKNF formula where P is a predicate and ti are first-order terms. If ϕ is an MKNFformula, then ¬ϕ, ∃x: ϕ, K ϕ, and not ϕ are MKNF formulas and likewise ϕ1 ∧ ϕ2 for MKNF formulas ϕ1, ϕ2. Moreover,ϕ1 ∨ ϕ2, ϕ1 ⊃ ϕ2, ϕ1 ≡ ϕ2, ∀x: ϕ, t, f, t1 ≈ t2, and t1 (cid:17)≈ t2 are abbreviations, respectively, for ¬(¬ϕ1 ∧ ¬ϕ2), ¬ϕ1 ∨ ϕ2,(ϕ1 ⊃ ϕ2) ∧ (ϕ2 ⊃ ϕ1), ¬(∃x: ¬ϕ), a ∨ ¬a, a ∧ ¬a, ≈ (t1, t2), and ¬(t1 ≈ t2). First-order atoms of the form t1 ≈ t2 (resp.t1 (cid:17)≈ t2) are called equalities (resp. inequalities), and ϕ[t1/x1, . . . , tn/xn] denotes the formula obtained by substituting thefree variables xi in ϕ (i.e. the variables that are not in the scope of any quantifier) by the terms ti . Given a (first-order)formula ϕ, K ϕ is called a modal K-atom and not ϕ a modal not-atom; modal K-atoms and not-atoms are modal atoms. AnMKNF formula ϕ is called strict, if there is no modal atom in ϕ that occurs in the scope of a modal operator. An MKNFformula ϕ without any free variables is closed, and an MKNF formula ϕ is ground if ϕ does not contain variables at all. AnMKNF formula ϕ is modally closed if all modal operators (K and not) are applied in ϕ only to closed subformulas, and ϕ ispositive if ϕ does not contain the operator not. An MKNF formula ϕ is subjective if all first-order atoms of ϕ occur withinthe scope of a modal operator, and ϕ is flat if ϕ is subjective and all occurrences of modal atoms in ϕ are strict.Let Σ be a signature and (cid:3) a universe. A first-order interpretation I over Σ and (cid:3) assigns an object aI ∈ (cid:3) to eachf ∈ Σ f , and a relation P I ⊆ (cid:3)n to each n-aryconstant a ∈ Σc , a function f I : (cid:3)n → (cid:3) to each n-ary function symbolpredicate P ∈ Σp . Furthermore, I interprets the predicate ≈ as equality – i.e., for α, β ∈ (cid:3), we have (α, β) ∈ ≈I iff α = β.Unlike in standard first-order logic, for each element α ∈ Σ , the signature Σ is required to contain a special constant nα –= α. The interpretation of a variable-free term t = f (s1, . . . , sn) is defined recursively ascalled a name – such that nIαt I = f I (sI1, . . . , sIn).The semantics of an MKNF formula over a signature Σ (henceforth considered implicit in all definitions) is defined asfollows. An MKNF structure is a triple (I, M, N) where I is a first-order interpretation over (cid:3) and Σ , and M and N are non-empty sets of first-order interpretations over (cid:3) and Σ . Given an MKNF structure (I, M, N), satisfiability of closed MKNFformulas is defined as follows:(I, M, N) |(cid:23) P (t1, . . . , tn)(I, M, N) |(cid:23) ¬ϕ(I, M, N) |(cid:23) ϕ1 ∧ ϕ2(I, M, N) |(cid:23) ∃x: ϕ(I, M, N) |(cid:23) K ϕ(I, M, N) |(cid:23) not ϕn(cid:6)∈ P I(cid:5)1, . . . , t It Iiffiff (I, M, N) (cid:17)|(cid:23) ϕiff (I, M, N) |(cid:23) ϕ1 and (I, M, N) |(cid:23) ϕ2iff (I, M, N) |(cid:23) ϕ[nα/x] for some α ∈ (cid:3)iff ( J , M, N) |(cid:23) ϕ for all J ∈ Miff ( J , M, N) (cid:17)|(cid:23) ϕ for some J ∈ NNote that the evaluation of K and not are kept separate in this definition of satisfiability. The relation between theseoperators is established in the notion of a two-valued MKNF model defined below.An MKNF interpretation M over a universe (cid:3) is a non-empty set of first-order interpretations. For a closed MKNF for-mula ϕ, we say that M satisfies ϕ, written M |(cid:23) ϕ, if (I, M, M) |(cid:23) ϕ for each I ∈ M. The notion of a two-valued MKNF modelof a closed MKNF formula ϕ is based on a preference relation on MKNF interpretations that satisfy ϕ. More precisely, anMKNF interpretation M over (cid:3) is a two-valued MKNF model of a closed MKNF formula ϕ if (1) M satisfies ϕ, and (2) for(cid:24), M. An MKNF formula ϕ is MKNF sat-each MKNF interpretation Misfiable if a two-valued MKNF model of ϕ exists; otherwise ϕ is MKNF unsatisfiable. Furthermore, ϕ MKNF entails ψ , writtenϕ |(cid:23)MKNF ψ , if M |(cid:23) ψ for each two-valued MKNF model M of ϕ.(cid:24), M) (cid:17)|(cid:23) ϕ for some I(cid:24) ⊃ M we have (Isuch that M(cid:24) ∈ M(cid:24)(cid:24)Note that this definition of model is asymmetric in the treatment of the modal operators K and not. In fact, the max-imisation of M in (2) is only done in the component of the structure used for evaluating the operator K. This results in aminimisation of the derivable K-atoms in any two-valued MKNF model of a given formula ϕ.Example 3. Though M = {{p}} satisfies both K p and ¬ not p, M is only a two-valued MKNF model of the first formula. M isnot a two-valued MKNF model of the second one since (I(cid:24), M) |(cid:23) ¬ not p holds for any M(cid:24) ⊃ M.with M(cid:24), M(cid:24)The MKNF semantics, as originally defined in [47], shows certain undesirable properties such as counterintuitive seman-tics caused by the usage of arbitrary universes and the differing interpretation of constants in different interpretations. Toovercome these problems, [52] additionally applies the standard name assumption to hybrid MKNF knowledge bases. We1534M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554briefly recall two such problems from [52] and the notion of standard names assumption introduced to overcome them, andwe refer for the complete discussion to [52].One problem when using MKNF as in [47] for the integration of rules and ontologies is the usage of arbitrary universes.Consider the MKNF formula ϕ = ϕ1 ∧ ϕ2, where ϕ1 = K P (a) and ϕ2 = not P (b) ⊃ f. Intuitively, one would not expect that ϕis satisfiable since there is no indication that P (b) should be true. However, if the universe contains only one element, thena and b are interpreted as the same object, and ϕ is satisfied. In this case one unintendedly derives that ϕ |(cid:23) a ≈ b holds.Another problem is caused by constants that are interpreted differently in different interpretations. Consider ϕ1 = K P (a)and ϕ2 = ∃x: K P (x). In this case one would expect that ϕ1 |(cid:23) ϕ2, that is, every two-valued MKNF model of ϕ1 is also atwo-valued MKNF model of ϕ2. However, let M be an MKNF interpretation containing two elements I1 and I2 where I1 isa first-order interpretation in which a is interpreted as a name α1 and I1 |(cid:23) P (α1), and I2 is a first-order interpretation inwhich a is interpreted as some other name α2 and I2 |(cid:23) P (α2). We thus have that M |(cid:23) ϕ1 but not M |(cid:23) ϕ2 since this wouldrequire to have an x in the domain such that P (x) is true in all I ∈ M.To avoid such unintended behaviour, the standard name assumption is imposed on top of MKNF.Definition 1. (See Standard Name Assumption [52].) A first-order interpretation I over a signature Σ employs the standardname assumption if(1) the universe (cid:3) of I contains all constants of Σ and a countably infinite number of additional constants called parame-ters;(2) t I = t for each ground term t constructed using the function symbols from Σ and the constants from (cid:3); and(3) the predicate ≈ is interpreted in I as a congruence relation – that is, ≈ is reflexive, symmetric, transitive, and allowsfor the replacement of equals by equals [18].Consequences of first-order formulas under the standard first-order semantics and the standard name assumption cannotbe distinguished [52]. Thus, in the rest of the paper we use the standard name assumption for first-order inferences.2.3. Hybrid MKNF knowledge basesHybrid MKNF knowledge bases as introduced in [51,52]7 essentially are MKNF formulas restricted to a certain form. Theyconsist of two components: a decidable description logic knowledge base translatable into first-order logic and a finite setof rules of modal atoms.More precisely, the approach of hybrid MKNF knowledge bases is applicable to any first-order fragment DL satisfying thefollowing conditions: (i) each knowledge base O ∈ DL can be translated8 into a formula π (O) of function-free first-orderlogic with equality; (ii) DL supports A-Box-assertions of the form P (a1, . . . , an), where P is a predicate and each ai a con-stant of DL; and (iii) satisfiability checking and instance checking (i.e. checking entailments of the form O |(cid:23) P (a1, . . . , an))are decidable. In particular, description logics around OWL satisfy these conditions. Note that we limit ourselves to function-free first-order logic since otherwise decidability would not be possible. Thus for the rest of the paper, we will not allowfunction symbols in hybrid MKNF knowledge bases.We recall MKNF rules and hybrid MKNF knowledge bases from [51].Definition 2. Let O be a DL knowledge base. A function-free first-order atom P (t1, . . . , tn) over Σ such that P is ≈ oroccurs in O is called a DL-atom; all other atoms are called non-DL-atoms. An MKNF rule r has the following form where H i ,Ai , and B i are function-free first-order atoms:K H1 ∨ · · · ∨ K Hl ← K A1, . . . , K An, not B1, . . . , not Bm(7)The sets {K H i}, {K Ai}, and {not B i} are called the rule head, the positive body, and the negative body, respectively. A rule ris nondisjunctive if l = 1; r is positive if m = 0; r is a fact if n = m = 0. A program P is a finite set of MKNF rules. A hybridMKNF knowledge base K is a pair (O, P) and K is nondisjunctive if all rules in P are nondisjunctive.Hybrid MKNF knowledge bases rules,9 as defined above, do not coincide syntactically with any MKNF formula. Forinterpreting hybrid MKNF knowledge bases in terms of MKNF logic, the transformation π that transforms a DL ontologyinto first-order formulas is extended to knowledge bases as follows:Definition 3. Let K = (O, P) be a hybrid MKNF knowledge base. We extend π to rules r of the form (7), P , and K asfollows, where (cid:26)x is the vector of the free variables of r:7 We focus here on the presentation as in [51], and we thus omit classical negation and arbitrary first-order formulas in rules as presented in [52].8 See [3] for standard translations of Description Logic axioms.9 As mentioned before, our main results only apply to nondisjunctive rules, i.e. l = 1 for each rule of the form (7). However, to keep to the originaldefinition of [52], we present the definition of the more general form of MKNF rules.M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541535π (r) = ∀(cid:26)x: (K H1 ∨ · · · ∨ K Hl ⊂ K A1 ∧ · · · ∧ K An ∧ not B1 ∧ · · · ∧ not Bm)π (P) =π (K) = K π (O) ∧ π (P)π (r),(cid:7)r∈PTo simplify the presentation, we will abuse notation in the rest of the paper and identify K with π (K). It will be obviousfrom the context when K represents its first-order transformation π (K).Hybrid MKNF knowledge bases, even without function symbols, are in general undecidable, unless they are restrictedin some way. The reason for that is that rules can be applied to all the objects in the infinite domain. The basic idea tomake reasoning with hybrid MKNF knowledge bases decidable is to apply rules only to the individuals that appear in theknowledge base. This restriction is achieved by DL-safety.Definition 4. An MKNF rule r is DL-safe if every variable in r occurs in at least one non-DL-atom K B occurring in the bodyof r. A hybrid MKNF knowledge base K is DL-safe if all the rules in K are DL-safe.In the rest of the paper, unless otherwise stated, we only consider DL-safe knowledge bases.Grounding the knowledge base, as defined below, ensures that rules apply to all the individuals appearing in the knowl-edge base, whereas DL-safety guarantees that no other individual can be used.Definition 5. Given a hybrid MKNF knowledge base K = (O, P), the ground instantiation of K is the KB KG = (O, PG ) wherePG is obtained from P by replacing each rule r of P with a set of rules substituting each variable in r with constants fromK in all possible ways.It was shown in [52] that, for a DL-safe hybrid knowledge base K, the two-valued MKNF models of K and KG coincide.Example 4. Consider again the scenario of Example 1, together with the axioms and assertions of Example 2. These axiomscan be part of an ontology O of a hybrid MKNF knowledge base K = (O, P). In P we can encode further recommendationguidelines, in particular those that require closed world reasoning. For example, imagine that we want to give customersrecommendations for interesting CDs they do not own and that do not have a low evaluation. This can be encoded with therules shown below10:K Recommend(x) ← K CD(x), not owns(x), not LowEval(x), K interesting(x)K interesting(x) ← K CD(x), K CD( y), K owns( y), not owns(x), K similar(x, y)K similar(x, y) ← K CD(x), K CD( y), K Artist(z), K HasArtist(x, z), K HasArtist( y, z)K owns(EnConcert) ←K HasArtist(EnConcert, JackJohnson) ←K HasArtist(ToTheSea, JackJohnson) ←K OnOffer(BNAW) ←(8)(9)(10)(11)(12)(13)(14)Note that closed world reasoning is used for owns and lowEval. In the case of predicate owns, it is reasonable to assumethat the knowledge about owned CDs is fully available. So, if there is no fact stating that a given CD is owned, one shouldassume that the CD is not owned. In the case of predicate lowEval it might happen that there is no evaluation yet available,and we want the recommendation anyway: a CD is not considered for recommendation only when there actually is a(known) low evaluation for the CD. Such an evaluation could be taken from other customers of the store or from a webpage of professional reviews. Here, for simplicity, we keep this part of the reasoning process implicit.Moreover, in the rules above, a CD is interesting if the customer owns another CD which is similar (9), and two CDs aresimilar if they have a common artist (10). Note that the predicate CD is used to ensure DL-safety, and we assume that theinstances of that predicate relevant to any drawn conclusion are always appropriately defined.If we now add facts (11)–(14), then we can derive Recommend(ToTheSea), since no low evaluation is known for ToTheSea,and Recommend(BNAW) since BNAW is on offer.This example illustrates that hybrid MKNF knowledge bases allow us to obtain consequences for predicates that are‘defined’ both in the ontology and in the rules. The result may then be further applied to derive subsequent consequenceseither in rules or in the ontology. Note that the facts (12) and (13) are here explicitly added, representing the implicitconsequences derivable from the appropriate ontology alone, similar to HasArtist(BNAW, JohnColtrane) in Example 2.10 In this encoding, for simplicity, we consider that the program part of the knowledge base is specific to each customer. This avoids an explicit represen-tation of several customers, of the relation stating which CDs are owned by each customer, etc.1536M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554Table 1Data complexity of instance checking in MKNF.RulesDefiniteStratifiedNormalDL = ∅PPcoNPDL ∈ PPPcoNPDL ∈ coNPcoNP(cid:3)p2Π p2In [52], several reasoning algorithms were provided for combinations of arbitrary description logic fragments and rulesof differing expressivity. Table 1 presents the data complexity of instance checking for combinations of nondisjunctive rules(with arbitrary or stratified11 negation or without not in the rules) with description logics fragments of differing computa-tional complexity. We point out that allowing arbitrary non-monotonic negation increases data complexity drastically andin particular beyond tractability. This is not the case of the rules in Example 4, since these are stratified. However, this isjust an initial set of rules for our running example, which is further elaborated below and becomes non-stratified (e.g., theaddition of rule (17) in Example 8 renders the set of rules non-stratified). With the proposal we present in the followingsections these sets of non-stratified rules do not constitute a problem regarding complexity.3. Three-valued MKNF semanticsIn this section we introduce a three-valued semantics for hybrid MKNF knowledge bases. The rationale and the maingoal behind this three-valued semantics is to define a semantics that is closely related to the well-founded semantics oflogic programs. This is done in order to take advantage of the (data) complexity of the WFS that is lower than the (data)complexity of the corresponding two-valued semantics. Nevertheless, the DL-part of a hybrid MKNF knowledge base is stillinterpreted under the two-valued semantics. Thus, we achieve a faithful integration, in the sense that without rules themeaning of the knowledge base exactly coincides with the usual semantics from DLs.The definition of the three-valued semantics presented in this section applies equally with or without the standardname assumption. However, since we want to achieve a semantics that is faithful w.r.t. the two-valued MKNF semantics aspresented in Section 2, we assume standard name assumption.3.1. Evaluation in MKNF structuresThe two-valued hybrid MKNF semantics [52] is closely related (cf. [47]) to the stable models semantics [19]. In both ofthem, the meaning of a knowledge base is determined by a set of models. In fact, an MKNF formula such as ϕ = ((not p ⊃K q) ∧ (not q ⊃ K p)) (and the corresponding set of rules) has two models – one model in which p is true and q is false, andanother one in which p is false and q is true. Moreover, these two-valued models are, in general, obtained by a guess andcheck process, thus having a high computational complexity.The well-founded semantics of logic programs [61] generalises the two-valued models of the stable model semantics toa three-valued setting. In this way, it is possible to determine the meaning of a knowledge base solely on the basis of asingle (minimal) model that is obtained with a lower computational complexity. Intuitively, a third truth value u, denotingundefined, is introduced as an alternative to the values t and f, enabling one to delay the evaluation to any of the two lattervalues until further information is available. We want to follow this idea when defining a three-valued MKNF semantics.There is however one more problem to be taken into account: since we are interested in applying the semantics to hybridMKNF knowledge bases containing two-valued ontologies, which we want to integrate faithfully, we are going to define thesemantics in such a way that an MKNF formula corresponding to a DL fragment is ensured to be just two-valued.We therefore define a three-valued MKNF semantics that extends the two-valued semantics of [52], but remains two-valued for the case of MKNF formulas without modal operators. We start by defining MKNF structures for this three-valuedsetting.Definition 6. A three-valued (partial) MKNF structure (I, M, N ) consists of a first-order interpretation I and two pairs M =(cid:28)M, M1(cid:29) and N = (cid:28)N, N1(cid:29) of sets of first-order interpretations where M1 ⊆ M and N1 ⊆ N. An MKNF structure is calledtotal if M = (cid:28)M, M(cid:29) and N = (cid:28)N, N(cid:29).In the two-valued semantics, an MKNF structure (I, M, N) contains sets of interpretations M and N for evaluating amodal atom K ϕ, respectively not ϕ, to t or f, depending on whether ϕ is contained in all elements of M, respectively N.This clearly leaves no space for an extension to a third truth value u. So, we turn sets of interpretations into pairs of sets ofinterpretations. Then, as we show below, a modal atom K ϕ is true w.r.t. (cid:28)M, M1(cid:29) if ϕ is true in all elements of M; a modalatom K ϕ is false if ϕ is not true in all elements of M1; a modal atom K ϕ is undefined otherwise (i.e. if ϕ is true in allelements of M1). The additional restrictions, saying that M1 ⊆ M and N1 ⊆ N, are needed to ensure that no modal atomcan be both true and false at the same time, and it can easily be shown via induction that the same holds for any MKNF11 Essentially, rules can be separated into strata that can be evaluated separately – see Section 4.4 in [52].M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541537formula ϕ. In this way, we guarantee that no fourth truth value ‘both’ is needed. Nevertheless, given an MKNF formula ϕ,three-valued MKNF structures may evaluate K ϕ and not ϕ to true at the same time, just like in the two-valued case, andwe show below how to prevent this from happening when defining MKNF interpretation pairs.We now define the evaluation of closed MKNF formulas in such three-valued MKNF structures.Definition 7. Let (I, M, N ) be a three-valued MKNF structure and {t, u, f} the set of truth values with the order f < u < t,where the operator max (resp. min) chooses the greatest (resp. least) element with respect to this ordering. We define:• (I, M, N )(P (t1, . . . , tn)) =• (I, M, N )(¬ϕ) =⎧⎨⎩n) ∈ P In) /∈ P I ;(cid:8)ftiff (t Iiff (t I1, . . . , t I1, . . . , t Iiff (I, M, N )(ϕ) = ftu iff (I, M, N )(ϕ) = uiff (I, M, N )(ϕ) = t;f• (I, M, N )(ϕ1 ∧ ϕ2) = min{(I, M, N )(ϕ1), (I, M, N )(ϕ2)};• (I, M, N )(ϕ1 ⊃ ϕ2) = t iff (I, M, N )(ϕ2) (cid:2) (I, M, N )(ϕ1) and f otherwise;• (I, M, N )(∃x: ϕ) = max{(I, M, N )(ϕ[α/x]) | α ∈ (cid:3)};• (I, M, N )(K ϕ) =⎩⎧⎨tiff ( J , (cid:28)M, M1(cid:29), N )(ϕ) = t for alliff ( J , (cid:28)M, M1(cid:29), N )(ϕ) = f for some J ∈ M1J ∈ M• (I, M, N )(not ϕ) =⎩iff ( J , M, (cid:28)N, N1(cid:29))(ϕ) = f for some J ∈ N1iff ( J , M, (cid:28)N, N1(cid:29))(ϕ) = t for allJ ∈ Nfu otherwise;⎧⎨tfu otherwise.As intended, this evaluation is not a purely three-valued one, since first-order atoms are evaluated as in the two-valuedcase. In fact, an MKNF formula ϕ without modal operators (and thus also a pure description logic knowledge base) isonly two-valued. It can easily be seen that such a ϕ is evaluated in exactly the same way as in the scheme presented inSection 2. This is desired in particular when the knowledge base consists just of the DL part. So, the third truth value onlyaffects MKNF formulas containing modal atoms, which in the case of hybrid MKNF knowledge bases can only occur in therules. These rules, corresponding to implications, are, however, no longer interpreted in a way one would expect from aboolean perspective: u ⊃ u is true in the evaluation defined above, while u ∨ ¬u is actually undefined. The reason for thischange is that, in this way rules can only be true or false, similarly to what happens in logic programming, even when theycontain undefined modal atoms. Intuitively, the advantage for hybrid MKNF knowledge bases is that we can leave singlemodal atoms undefined, thus not necessarily having to create several models, while the entire knowledge base is only trueor false.We point out that the evaluation of not w.r.t. (cid:28)N, N1(cid:29) is symmetrical to the evaluation of K w.r.t. (cid:28)M, M1(cid:29), only that theconditions are switched. E.g., the condition for true modal K-atoms w.r.t. M yields false modal not-atoms w.r.t. N. In caseof M = N and M1 = N1 this corresponds to the two-valued (monotonic) evaluation in Section 2.3.2. Three-valued MKNF modelsGiven the above definition of evaluation of MKNF formulas, we are now ready to extend (two-valued) MKNF interpreta-tions and MKNF models to three truth values. For that purpose, we have to generalise (two-valued) MKNF interpretationsM to pairs of MKNF interpretations (M, N), since otherwise no formula could ever be undefined.Definition 8. An MKNF interpretation pair (M, N) consists of two MKNF interpretations M, N with ∅ ⊂ N ⊆ M. An MKNFinterpretation pair satisfies a closed MKNF formula ϕ, written (M, N) |(cid:23) ϕ, if and only if(cid:5)(cid:6)I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29)(ϕ) = tfor each I ∈ M. If M = N, then the MKNF interpretation pair (M, N) is called total. If there exists an MKNF interpretationpair satisfying ϕ, then ϕ is consistent.The set M contains all interpretations that model only truth, while N models everything that is true or undefined.Evidently, just as in the two-valued case, anything not being modelled in N is false. The subset relation between M andN ensures that MKNF interpretation pairs are defined in accordance with the three-valued MKNF structures, so that eachformula is evaluated to exactly one truth value. Note the striking similarity compared to MKNF interpretations in the two-valued case by using the MKNF interpretation pair (M, N) to evaluate both K and not simultaneously.1538M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554We now define the preference relation on MKNF interpretation pairs that is required for the notion of (non-monotonic)three-valued MKNF models, following an approach similar to the one in the two-valued case – i.e. by minimising non-falsity(truth or undefinedness, in this case) of formulas w.r.t. K.Definition 9. Any MKNF interpretation pair (M, N) is a three-valued MKNF model for a given closed MKNF formula ϕ if(1) (M, N) satisfies ϕ and(2) for each MKNF interpretation pair (M(cid:24) = N(cid:24)Mif M = N, there is I(cid:24) ∈ M(cid:24)(cid:24), Nsuch that (I(cid:24)) with M ⊆ M(cid:24), N(cid:24), (cid:28)M(cid:24)and N ⊆ N(cid:24)(cid:29), (cid:28)M, N(cid:29))(ϕ) (cid:17)= t.(cid:24), where at least one of the inclusions is proper andCondition (1) checks whether (M, N) evaluates ϕ to t while the second condition verifies that (M, N) contains onlyknowledge necessary to obtain this evaluation to t. This is achieved by generalising the corresponding notion in the two-(cid:24)) that properly subsumes (M, N),valued MKNF semantics to the three-valued case: for each MKNF interpretation pair (M(cid:24)) is used to evaluate K while (M, N) evaluates not.it is checked that ϕ does not evaluate to t for all I, where (MIntuitively, one may consider an MKNF interpretation pair as a guess for the true evaluation of the considered formula, andcondition (2) checks, having fixed the evaluation of modal not-atoms, whether the evaluation of modal K-atoms is actuallyminimal w.r.t. to the order f < u < t of truth values. We illustrate in the example below how this minimisation is achieved.(cid:24) ∈ M(cid:24), N(cid:24), N(cid:24)Example 5. Consider the MKNF formula ϕ (corresponding to two rules):(not p ⊃ K q) ∧ (not q ⊃ K p)(cid:24), NAn MKNF interpretation pair (M, N) that satisfies condition (1) of Definition 9 has to evaluate both conjuncts to true.The MKNF interpretation pair ({{p}, {p, q}}, {{p, q}}) that evaluates K p to t and K q to u satisfies the first condition but is(cid:24)) = ({∅, {p}, {q}, {p, q}}, {{p, q}}) violates condition (2). In fact, thisnot a three-valued MKNF model of ϕ since, e.g., (M(cid:24)) is a three-valued MKNF model. The operator not is always evaluated w.r.t. the MKNFMKNF interpretation pair (Minterpretation pair (M, N), even when considering condition (2) of Definition 9, so, for N = {{p, q}}, the two implicationsare true anyway, and M has to be the set of all possible interpretations {∅, {p}, {q}, {p, q}} to satisfy condition (2). Thus,we obtain the MKNF interpretation pair that evaluates K p and K q to u. In other words, the initial MKNF interpretationpair was not minimal w.r.t. the evaluation of modal K-atoms. Similar to the minimisation of the evaluation of K p from tto u, changes from u to f are possible: maintain the original M = {{p}, {p, q}} and set N = M. Now the evaluation of K q isminimised from u to f, and it is easy to verify that the resulting MKNF interpretation pair is in fact a three-valued MKNFmodel of ϕ.(cid:24), NIt should be pointed out that the larger the set M or N is, the less true or undefined knowledge is inferred. So, minimi-(cid:24)) ensuresfor MKNF interpretation pairs (M(cid:24) ⊆ M(cid:24), N(cid:24)sation is achieved by increasing the sets in consideration. Note that Nthat we only check reasonable candidates for augmenting (M, N).12We now adapt some notions needed in the rest of the paper from the two-valued MKNF semantics to the three-valuedsetting.Definition 10. If there is a three-valued MKNF model for a given closed MKNF formula ϕ, then ϕ is called MKNF-consistent,otherwise ϕ is called MKNF-inconsistent. If (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(ψ) = t for all three-valued MKNF models (M, N) of ϕ, then ϕentails ψ , written ϕ |(cid:23)3MKNF ψ .Note that MKNF-inconsistent MKNF formulas do not necessarily evaluate to f. For example, ϕ = K u ∧ not u evaluates tou for the MKNF interpretation pair ({{u}, ∅}, {{u}}). In fact, an MKNF-inconsistent formula can even evaluate to t and thatwas already the case for the two-valued MKNF semantics of [52]. E.g., ϕ = ¬ not p is MKNF-inconsistent, and it evaluates tot in some MKNF interpretation pairs (and also in some MKNF interpretations of [52]). This does not constitute a problemsince it does not affect the definitions of MKNF models or MKNF-consistency.Though the notions of inconsistency and unsatisfiability are usually applied in the same technical sense, we want todistinguish between MKNF-satisfiability in the two-valued case and MKNF-consistency for three-valued MKNF models. Like-wise, we distinguish between the two-valued notion ‘MKNF entails’ and the three-valued ‘entails’.In spite of keeping the notions separate, two- and three-valued MKNF models are closely related: we now show thatany two-valued MKNF model M corresponds exactly to a (total) three-valued one and vice versa. For that purpose, we firstprove that evaluation in an MKNF structure (I, M, N) and evaluation in a total three-valued structure (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29)) areidentical. Intuitively, this holds because nothing can be undefined in a total three-valued structure.12 In comparison to [37] the definition has been slightly altered to simplify proofs and computation: in case of a total MKNF interpretation pair (M, M),(cid:24)) actually yields a true evaluation for all Iit is sufficient to check that no other total MKNF interpretation pair (M. This simplification is alsoseparately: there is no undefinedness in a total MKNF interpretation pair, and minimisation of undefinedness isjustified by the intuition of enlarging Nthus not necessary.(cid:24) ∈ M(cid:24), M(cid:24)(cid:24)Lemma 1. Given a closed MKNF formula ϕ, (I, M, N) |(cid:23) ϕ if and only if (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(ϕ) = t.M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541539Proof. The proof is done by induction on the formula ϕ.Let ϕ be P (t1, . . . , tn). We have (I, M, N) |(cid:23) P (t1, . . . , tn) iff (t IAssume that the lemma holds for ϕ1. We show the induction steps for ¬ and K, all the other cases follow analogously.Let ϕ be ¬ϕ1. We have that (I, M, N) |(cid:23) ¬ϕ1 iff (I, M, N) (cid:17)|(cid:23) ϕ1 iff, by the induction hypothesis, (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(ϕ1) =n) ∈ P I iff (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(P (t1, . . . , tn)) = t.1, . . . , t If iff by definition of evaluation in partial structures (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(¬ϕ1) = t.Let ϕ be K ϕ1. We have (I, M, N) |(cid:23) K ϕ1 iff (I, M, N) |(cid:23) ϕ1 holds for each I ∈ M iff (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(ϕ1) = t for allI ∈ M by the induction hypothesis iff (I, (cid:28)M, M(cid:29), (cid:28)N, N(cid:29))(K ϕ1) = t. (cid:2)This lemma can be used to show that every two-valued MKNF model M corresponds to a three-valued MKNF model(M, M), like in [36], and also the converse, i.e. that every three-valued MKNF model (M, M) corresponds to a two-valuedMKNF model in the sense of [52].Proposition 1. Given a closed MKNF formula ϕ, M is a two-valued MKNF model of ϕ if and only if (M, M) is a three-valued MKNFmodel of ϕ.Proof. Let (M, M) be a three-valued MKNF model of ϕ, i.e. (M, M) satisfies the two conditions of Definition 9. Weshow that M is a two-valued MKNF model of ϕ. It follows from the first of the two conditions of Definition 9 that(I, (cid:28)M, M(cid:29), (cid:28)M, M(cid:29))(ϕ) = t for all I ∈ M and therefore, by Lemma 1, that (I, M, M) |(cid:23) ϕ for each I ∈ M. The second con-(cid:24)(cid:29), (cid:28)M, M(cid:29))(ϕ) (cid:17)= t for some(cid:24)) with M ⊂ Mdition states, for each MKNF interpretation pair (M(cid:24) ∈ MI. We conclude from Lemma 1 that for any M(cid:24)(cid:24) ⊃ M there is an I, that we have (Isuch that (I(cid:24), M) (cid:17)|(cid:23) ϕ.(cid:24), M(cid:24)(cid:24) ∈ Mwith M(cid:24), (cid:28)M(cid:24), M(cid:24), M(cid:24)(cid:24)Now, let M be a two-valued MKNF model of ϕ. We show that (M, M) is a three-valued MKNF model of ϕ. We know that(I, M, M) |(cid:23) ϕ for each I ∈ M since M is a two-valued MKNF model of ϕ. As such, (I, (cid:28)M, M(cid:29), (cid:28)M, M(cid:29))(ϕ) = t holds for allI ∈ M by Lemma 1, and so the first of the two conditions of Definition 9 is satisfied. Furthermore, since M is a two-valued(cid:24) ∈ M(cid:24) ⊃ M we have (IMKNF model of ϕ, we know that for all M. Again, from Lemma 1,(cid:24)(cid:29), (cid:28)M, M(cid:29))(ϕ) (cid:17)= t for some(cid:24)) with Mwe know that for any MKNF interpretation pair (M(cid:24) ∈ M. This is sufficient since, according to Definition 9, for (M, M) we only need to consider total MKNF interpretationIpairs (M(cid:24), M) (cid:17)|(cid:23) ϕ for some I(cid:24), M(cid:24), M(cid:24) ⊃ M we have (I(cid:24)). (cid:2)with M(cid:24), (cid:28)M(cid:24), M(cid:24), M(cid:24)(cid:24)(cid:24)MKNF interpretation pairs can be compared by an order that resembles the knowledge order from logic programming.Intuitively, given such an order and two MKNF interpretation pairs (M1, N1) and (M2, N2), we have that (M1, N1) is greaterthan (M2, N2) w.r.t. such an order if (M1, N1) allows us to derive more true and false knowledge than (M2, N2). Taking intoaccount that a larger set of interpretations derives less true and more false knowledge, we can define the following orderon MKNF interpretation pairs.Definition 11. Let (M1, N1) and (M2, N2) be MKNF interpretation pairs. We have that (M1, N1) (cid:3)k (M2, N2) iff M1 ⊆ M2and N1 ⊇ N2.Such an order is of particular interest for comparing models. In logic programming the least model w.r.t. derivableknowledge among all three-valued models for a given program is the well-founded model. Here, we want to introduce asimilar notion referring to the minimal three-valued MKNF models, i.e. the ones among all three-valued MKNF models thatleave as much as possible undefined.Definition 12. Let ϕ be a closed MKNF formula and (M, N) a partial MKNF model of ϕ such that (M1, N1) (cid:3)k (M, N) for allthree-valued MKNF models (M1, N1) of ϕ. Then (M, N) is a well-founded MKNF model of ϕ.Of course, if ϕ is inconsistent, then there are no three-valued MKNF models and thus no well-founded MKNF modelsof ϕ. However, if ϕ is a consistent hybrid MKNF knowledge base, it is guaranteed that a well-founded MKNF model of ϕexists. Moreover, this well-founded model is unique. As we shall see, this model is especially important in that a modalatom K H is true in the well-founded MKNF model iff K H is true in all three-valued MKNF models. This way, performingsceptical reasoning in three-valued MKNF models amounts to determining the well-founded MKNF model.Theorem 1. If K is an MKNF-consistent nondisjunctive DL-safe hybrid MKNF KB, then a well-founded MKNF model exists, and it isunique.The respective proofs for the uniqueness/existence of the well-founded MKNF model, and how to calculate this uniquemodel, are presented in Section 4 (as a direct consequence of Theorem 5). The following example gives at least an intuitiveinsight into the correspondence between two-valued and three-valued MKNF models, and the well-founded MKNF model.1540M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554Example 6. Consider the knowledge base K corresponding to the MKNF formula ϕ from Example 5:K q ← not pK p ← not qThe two-valued MKNF models of K are {{p}, {p, q}} and {{q}, {p, q}}, i.e. K p and not q are true in the first model, andK q and not p are true in the second one. We obtain two total three-valued MKNF models: ({{p}, {p, q}}, {{p}, {p, q}}) and({{q}, {p, q}}, {{q}, {p, q}}). As we have already seen in Example 5, the only other three-valued MKNF model of K is M =({∅, {p}, {q}, {p, q}}, {{p, q}}). This MKNF model satisfies the condition given in Definition 12, and M is thus a well-foundedMKNF model of K. In fact, M is the only well-founded MKNF model.In the rest of this section we lift two important properties proven in [50] from the two-valued MKNF semantics to thenew three-valued MKNF semantics. The first property states that K can be introduced in front of an arbitrary closed MKNFformula ϕ without changing the three-valued MKNF models of ϕ.Proposition 2. Let σ be a closed MKNF formula and (M, N) an MKNF interpretation pair. Then, (M, N) is a three-valued MKNF modelof σ if and only if (M, N) is a three-valued MKNF model of K σ .Proof. Suppose that (M, N) is a three-valued MKNF model of σ . We know for all I ∈ M that (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(σ ) = t.I ∈ M as well. Since for each (MSo (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K σ ) = t holds for allsuch that(cid:24)(cid:29), (cid:28)M, N(cid:29))(σ ) (cid:17)= t, we also obtain the same for K σ , and (M, N) is a three-valued MKNF model of K σ . The con-(Iverse direction follows in an analogous fashion. (cid:2)(cid:24)) there is an I(cid:24) ∈ M(cid:24), (cid:28)M(cid:24), N(cid:24), N(cid:24)The second property we adapt from the two-valued to the three-valued MKNF semantics says that grounding a hybridMKNF knowledge base K does not affect the three-valued MKNF models of K. This shows that K and KG derive exactlythe same consequences.Lemma 2. Let K be a DL-safe hybrid MKNF knowledge base and ψ a ground MKNF formula. Then K |(cid:23)3KG |(cid:23)3MKNF ψ .MKNF ψ if and only ifProof. The argument showing the contrapositive statement K (cid:17)|(cid:23)3the one in [50]. So we simply refer to the proof given there. (cid:2)MKNF ψ if and only if KG (cid:17)|(cid:23)3MKNF ψ is absolutely identical to4. The well-founded MKNF modelIn this section we prove that the well-founded MKNF model is unique, and we define a procedure for computing thisunique model. For that purpose, the alternating fixpoint construction of [29,60] for the well-founded semantics of logicprograms is adapted to hybrid MKNF knowledge bases, taking into account possible conflicts resulting from the combinationof classical negation in ontologies and non-monotonic negation in rules.The well-founded semantics for logic programs, originally defined in [61], only applies to nondisjunctive logic programs,and there is no established well-founded semantics that allows for disjunction in the rule heads (see, e.g., [38]). To avoid theproblems encountered when extending the well-founded semantics to disjunctive logic programs, and to be compatible withthe well-founded semantics of normal programs, we have to restrict to rules that are nondisjunctive. Thus, our approach ismore restrictive in the form of rules than the approach of [52]. Note that we can partially compensate this restriction byusing first-order disjunction whenever this is available in the considered DL. Therefore, in the rest of the paper we assumethat all hybrid MKNF knowledge bases contain only nondisjunctive rules, i.e. no disjunction occurs in the head of any rule.We start by adapting partitions from [52] as the means of representing MKNF interpretation pairs. Then, based on thatrepresentation, we define operators that allow us to compute a unique model for hybrid MKNF knowledge bases. We showthat this model is indeed the (unique) well-founded MKNF model, and we present several important properties including thecomputational complexity, faithfulness w.r.t. the well-founded semantics of logic programs, and discovery of inconsistencies.4.1. Partitions of modal atomsAs argued in [52], since there are infinitely many two-valued MKNF models of an arbitrary hybrid MKNF knowledgebase with a countably infinite domain, working directly with two-valued MKNF models is cumbersome. The same holds forMKNF interpretation pairs in the three-valued semantics presented in Section 3. So, some finite representation is required.The solution, applied in [52] and originally from [11], is to represent a two-valued MKNF model by a finite first-orderformula whose set of (first-order) models corresponds to the two-valued MKNF model itself. Intuitively, such a first-orderformula is obtained in [52] by first dividing the modal atoms occurring in the ground hybrid MKNF knowledge base intotrue and false modal atoms, and then constructing the first-order formula from the true modal atoms and the ontology. Weextend this construction, and the related notions from [52], to three truth values by partitioning atoms into three sets.M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541541Definition 13. Let KG = (O, PG ) be a ground, nondisjunctive hybrid MKNF knowledge base. The set of K-atoms of KG , writtenKA(KG ), is the smallest set that contains (i) all ground K-atoms occurring in PG , and (ii) a modal atom K ξ for each groundmodal atom not ξ occurring in PG . A partial partition (T , F ) of KA(KG ) consists of two sets, where T , F ⊆ KA(KG ) andT ∩ F = ∅. A third set U is implicitly defined as KA(KG ) \ (T ∪ F ).The set KA(KG ) contains all modal atoms occurring in KG , only with not-atoms substituted by corresponding modalK-atoms. This set is partitioned into three sets T , F , and U where, intuitively, T contains true modal atoms, F contains falsemodal atoms, and U contains all the remaining that are considered to be undefined.In [52], given a knowledge base KG , a set of first-order formulas is defined with the aim of using the models of this setof formulas to represent the models of both the ontology and a set of true modal atoms. If this set of true modal atomsis properly chosen, then the set of first-order interpretations satisfying that set of formulas corresponds to one two-valuedMKNF model of KG .Here, this construction will not suffice, and we show below how to adapt the idea to a three-valued setting. The defini-tion of the set of first-order formulas can be recalled from [52].Definition 14. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base. For a subset S of KA(KG ), the objective knowl-edge of S w.r.t. KG is the set of first-order formulas OBO,S = {π (O)} ∪ {ξ | K ξ ∈ S}.This notion is used below to establish a link between three-valued MKNF models and partial partitions. But for thispurpose, we need to adapt one more notion from [52].Definition 15. Let S be a set of ground modal K-atoms. The partial partition (T , F ) of S is induced by an MKNF interpretationpair (M, N) as follows:(1) K ξ ∈ T implies ∀I ∈ M: (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = t,(2) K ξ ∈ F implies ∀I ∈ M: (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = f, and(3) K ξ /∈ T and K ξ /∈ F implies ∀I ∈ M: (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = u.Based on this relation, we can show that the objective knowledge derived from the partial partition induced by a three-valued MKNF model is identical to that model. This result is used below to show that the specific partition we computeproduces a three-valued MKNF model (Theorem 4).Proposition 3. Let (M, N) be a three-valued MKNF model of a ground hybrid MKNF knowledge base KG = (O, PG ), and (T , F ) thepartition of KA(KG ) induced by (M, N). Then (M, N) = ({I | I |(cid:23) OBO,T }, {I | I |(cid:23) OBO,KA(KG )\F }).(cid:24)(cid:24)(cid:24)(cid:24).(cid:24)).(cid:24), N(cid:24), NFirst, we show that M ⊆ MProof. For KG = (O, PG ) a ground hybrid MKNF knowledge base, let (M, N) be a three-valued MKNF model of KG , (T , F )(cid:24)) = ({I | I |(cid:23) OBO,T }, {I | I |(cid:23) OBO,KA(KG )\F }). We show that (M, N) =the partition of KA(KG ) induced by (M, N), and (M(MNext, we show that N ⊆ N(cid:24) = {I | I |(cid:23) OBO,T }, i.e. that I |(cid:23). Let I be an interpretation in M. We show that I ∈ M{π (O)} ∪ {ξ | K ξ ∈ T }. Since (M, N) is a three-valued MKNF model of KG , we know that (M, N) |(cid:23) K π (O). Thus, we haveI |(cid:23) π (O). Consider each K ξ ∈ T . Since (M, N) induces the partition (T , F ) we have (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = t and thusholds and therefore M ⊆ MI |(cid:23) ξ . Hence, I |(cid:23) OBO,T . Consequently, I ∈ M. Let I be an interpretation in N. We show that I ∈ N(cid:24) = {I | I |(cid:23) OBO,KA(KG )\F }, i.e. thatI |(cid:23) {π (O)} ∪ {ξ | K ξ ∈ KA(KG ) \ F }. We already know that, for each I ∈ M, I |(cid:23) π (O). Since N ⊆ M, we also have thatI |(cid:23) π (O) for each I ∈ N. Consider each K ξ /∈ F . The premise of condition (2) in Definition 15 is false, but the premises(cid:24)of conditions (1) and (3) in that definition are true. We show for both cases that I |(cid:23) ξ . This suffices to show that I ∈ N,i.e. that I |(cid:23) OBO,KA(KG )\F , which shows N ⊆ N. In the case of (1), we already know that I |(cid:23) ξ for each I ∈ M, and, sinceN ⊆ M holds, we also have I |(cid:23) ξ for each I ∈ N. In the case of (3), we know that (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = u for eachI ∈ M. Thus, I |(cid:23) ξ holds for each I ∈ N.(cid:24), (cid:28)MWe now show that each of the two sets are in fact identical, i.e. M = M(cid:24), we have I ∈ {I | I |(cid:23) OBO,T } and therefore N(cid:24)) is an MKNF interpretation pair with M ⊆ M(cid:24). Note first that T ⊆ KA(KG ) \ F .and N = N(cid:24), N(cid:24)) is an MKNF interpretation pair. SoThus, for any I ∈ N(cid:24), Nassume that (M, where at least one of the inclusions is, and we thus derive a contradiction to (M, N) being aproper. We show that (I(cid:24)(cid:29), (cid:28)M, N(cid:29))(K π (O) ∧ π (PG )) = t forthree-valued MKNF model of KG . For the former, it suffices to prove that (Iwe know that (Iall I. We only have to show thesame for π (PG ). We achieve that by showing that, for each case of Definition 15, the modal atoms appearing in π (PG ) are(cid:24)(cid:29), (cid:28)M, N(cid:29))(π (PG )) = t for allevaluated to identical truth values in (M, N) and (M(cid:24), (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(π (PG )) = t. We thus obtain a(cid:24) ∈ MIcontradiction to (M, N) being a three-valued MKNF model.since (M, N), as a three-valued MKNF model of KG , ensures that (I(cid:24)(cid:29), (cid:28)M, N(cid:29))(K π (O)) = t for all I(cid:24)). This suffices to show that (I(cid:24)(cid:29), (cid:28)M, N(cid:29))(KG ) = t for all I, i.e. (M(cid:24)and N ⊆ N. By definition of M(cid:24) ⊆ M(cid:24)(cid:24) ∈ M(cid:24) ∈ M(cid:24) ∈ M(cid:24), (cid:28)M(cid:24), (cid:28)M(cid:24), (cid:28)M(cid:24), N(cid:24), N(cid:24), N(cid:24), N(cid:24), N(cid:24)(cid:24)(cid:24)(cid:24)(cid:24)(cid:24)(cid:24)(cid:24)1542M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554• Consider each K ξ ∈ T . We obtain (I(cid:24), (cid:28)M(cid:24), N(cid:24)(cid:29), (cid:28)M, N(cid:29))(K ξ ) = t for all(cid:24) ∈ M(cid:24)Iby definition of M(cid:24)just as we have(I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = t for all I ∈ M by Definition 15.• Consider each K ξ ∈ F . We obtain (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = f, by Definition 15. We derive that, by Definition 7,(cid:24)(cid:29), (cid:28)M, N(cid:29))(K ξ ) = f(I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = f for some I ∈ N. Because of that, and since N ⊆ Nfor some I(cid:24)(cid:29), (cid:28)M, N(cid:29))(K ξ ) = f.• Consider each K ξ with K ξ /∈ F and K ξ /∈ T . By Definition 15, we obtain (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = u. By definitionwe conclude that only(cid:24)(cid:29), (cid:28)M, N(cid:29))(K ξ ) (cid:17)= f. From (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K ξ ) = u and M ⊆ M. Thus, by Definition 7, (I, (cid:28)M, we also have (I(cid:24) ∈ N(cid:24), (cid:28)M(cid:24), N(cid:24), N(cid:24)(cid:24)(cid:24)(cid:24)(cid:24), (cid:28)Mof N(Iwe have (I(cid:24), N(cid:24), N(cid:24)(cid:29), (cid:28)M, N(cid:29))(K ξ ) = u is possible.(cid:24), (cid:28)M• Consider any modal not-atom appearing in π (PG ). Since the evaluation of these is done in both cases w.r.t. (M, N), westraightforwardly obtain the identical evaluation. (cid:2)The following example illustrates the previously introduced notions.Example 7. Consider K consisting only of rule (8) from Example 4 and an ontology containing just one assertion:CD(BNAW)(15)The ground KB KG contains one rule that results from (8) by substituting x with BNAW. We thus obtainKA(KG ) =(cid:2)K Recommend(BNAW), K CD(BNAW), K owns(BNAW), K lowEval(BNAW), K interesting(BNAW)(cid:4)One can easily check that there is only one three-valued MKNF model (M, N) of KG , namely the one in which each I ∈ M, Nsatisfies I |(cid:23) CD(BNAW). This three-valued MKNF model induces the partition in which CD(BNAW) appears in T and all othermodal K-atoms in F . The related set of first-order formulas just contains CD(BNAW). This is reasonable since the groundversion of (8) does not allow us to derive anything, and so we can ignore (8) when considering three-valued MKNF modelsof KG .4.2. Computation of the alternating fixpointAs we have seen in Section 3, a knowledge base may in general have several three-valued MKNF models. But we havea special interest in the least one w.r.t. derivable knowledge – the well-founded MKNF model – and the computation ofthat model. In order to obtain the well-founded MKNF model and the corresponding partial partition, we resort to severalexisting relations and correspondences with semantics from Logic Programming.The stable models of a normal logic program Π are the fixpoints of the Gelfond–Lifschitz operator ΓΠ [19]. The sameoperator can be used to compute the (three-valued) well-founded model of Π by the so-called alternating fixpoint compu-tation (cf. [60]). Intuitively, an operator, which results from applying ΓΠ twice, is used to compute a least and a greatestfixpoint, which correspond, respectively, to the true and non-false knowledge. The term “alternating” stems from the factthat ΓΠ is antitonic, and so successive applications will, in turn, overestimate and underestimate derivable knowledge inthe well-founded model, ultimately alternating between the two fixpoints. More precisely, by iteratively applying ΓΠ start-ing with an empty set of atoms, we first obtain a set of atoms that includes all the true atoms in the well-founded modelof Π , i.e. an overestimate of the true atoms in the well-founded model (in other words, a set whose complement is anunderestimate of the set of all false atoms). If we apply ΓΠ again to that result, then we obtain a set of atoms that aretrue for sure, i.e. an underestimate of the set of all true atoms. If we continue the iteration, we obtain alternating smalleroverestimates and larger underestimates until eventually the iteration alternates between two fixpoints – one with all trueatoms, and the other one with all atoms that are true or undefined in the well-founded model of Π .Since stable models of logic programs and two-valued MKNF models are closely related, we adapt this scheme to hybridMKNF knowledge bases. We define operators that provide a stable condition for nondisjunctive hybrid MKNF knowledgebases, and we use these operators to obtain an alternating fixpoint that corresponds to the well-founded MKNF model.We start by defining an operator T KG that, given a set of K-atoms, draws conclusions from a positive ground hybridMKNF knowledge base KG , i.e. a ground hybrid MKNF knowledge base where rules are of the form:K H ← K A1, . . . , K An(16)Definition 16. Let KG = (O, PG ) be a positive, ground hybrid MKNF knowledge base. The operators RKG , DKG , and T KG aredefined on subsets of KA(KG ) as follows:(cid:2)(cid:3)(cid:3) PG contains a rule of the form (16) such that, for all i, 1 (cid:4) i (cid:4) n, K Ai ∈ S(cid:3)(cid:3) K ξ ∈ KA(KG ) and OBO,S |(cid:23) ξ(cid:4)(cid:4)K H(cid:2)RKG (S) =DKG (S) =K ξT KG (S) = RKG (S) ∪ DKG (S)M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541543The operator RKG derives immediate consequences from the rules in KG while DKG yields consequences from the on-tology combined with the already known information in S. The operator T KG , which combines the other two, is monotonic:Proposition 4. Let KG = (O, PG ) be a positive ground hybrid MKNF knowledge base, and S ⊆ ST KG (S(cid:24)).(cid:24) ⊆ KA(KG ). Then T KG (S) ⊆Proof. Suppose that K H ∈ T KG (S). By Definition 16, K H ∈ RKG (S) ∪ DKG (S) holds. If K H ∈ RKG (S), then PG contains afor each 1 (cid:4) i (cid:4) n andrule of the form (16) such that K Ai ∈ S for each 1 (cid:4) i (cid:4) n. Since S ⊆ SK H ∈ T KG (S, wealso have OBO,S(cid:24) |(cid:23) H . We conclude that K H ∈ T KG (S(cid:24)). If K H ∈ DKG (S), then K H ∈ M and OBO,S |(cid:23) H . By monotonicity of first-order logic and since S ⊆ S, we also have that K Ai ∈ S(cid:24)). (cid:2)(cid:24)(cid:24)(cid:24)Since T KG is monotonic, it has a unique least fixpoint (by the Knaster–Tarski Theorem [59]) which we denote using↑ ω in reference to the limit ordinal of natural numbers ω. It is important to note that the Knaster–Tarski TheoremT KGin general only says that this fixpoint is reached for some ordinal that might easily be greater than ω. However, in MKNFknowledge bases, since we do not allow function symbols or infinite sets of rules, the iteration is performed over a finiteknowledge base (with finitely many ground rules). As such, the iteration of T KG terminates for some finite ordinal below ω.The least fixpoint is obtained as follows:T KGT KGT KG↑ 0 = ∅↑ (n + 1) = T KG (T KG↑ ω =T KG↑ i(cid:12)↑ n)i(cid:2)0Similarly to stable models of normal logic programs a fixpoint operator can be defined that performs a Gelfond–Lifschitz-like transformation [19] that turns hybrid MKNF knowledge bases into positive ones, and that then applies the operator T KGto the resulting knowledge base.Definition 17. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base and S ⊆ KA(KG ). The MKNF transform KG /S isdefined as KG /S = (O, PG /S), where PG /S contains all rulesK H ← K A1, . . . , K Anfor which there exists a ruleK H ← K A1, . . . , K An, not B1, . . . , not Bmin PG with K B j /∈ S for all 1 (cid:4) j (cid:4) m.This definition indeed resembles the transformation used to compute stable models [19] of logic programs. I.e., weremove all rules that contain negated atoms contradicting the given set S, and we remove all remaining negated atomsfrom the other rules. Following [19], we define an operator that computes the least fixpoint of the resulting knowledgebase.Definition 18. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base and S ⊆ KA(KG ). We define ΓKG (S) =T KG /S ↑ ω.Inspired by the similarities between the definition of ΓKG and Γ in [19], the correspondence of stable models forlogic programs and two-valued MKNF models for knowledge bases without ontology axioms, and the results in alternatingfixpoints of normal logic programs [60], one might wonder whether iteratively applying the operator ΓKG would yield theleast three-valued MKNF model. In fact, as shown below in Lemma 3, the operator ΓKG is antitonic. Thus, Γ 2is monotonicKGand guaranteed to have a least fixpoint, which can be obtained by iteratively applying Γ 2starting from the empty set. OneKGmay then ask whether this least fixpoint corresponds to the well-founded MKNF model. However, as shown in the followingexample, this is not the case, and, thus, an adaptation of alternating fixpoints to hybrid MKNF knowledge bases cannot beas straightforward.Example 8. Consider the hybrid MKNF knowledge base presented in Examples 2 and 4 for recommending CDs, and supposenow that the user wants to stall recommendations until an evaluation is available. This can be achieved, e.g., by adding therule (17),K LowEval(x) ← not Recommend(x)(17)1544M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554With this rule, together with (8), a CD is not recommended unless one adds explicit information that the CD has no lowevaluation. To ease the reading, we recall here rule (8):K Recommend(x) ← K CD(x), not owns(x), not LowEval(x), K interesting(x)In fact, if one adds, e.g.,¬LowEval(ToTheSea)(8)(18)then all three-valued MKNF models contain K Recommend(ToTheSea). However, as shown next, K Recommend(ToTheSea) isnot contained in the least fixpoint of Γ 2KG.To simplify the computation and presentation of this least fixpoint, we ground all the rules only with ToTheSea (thusignoring any other CDs), and we add explicitly that ToTheSea is a CD (19),CD(ToTheSea)(19)We also limit ourselves to the following set of modal atoms (using appropriate abbreviations):KA(KG ) =(cid:4)(cid:2)K Rec(Tts), K LowEv(Tts), K CD(Tts), K owns(Tts), K int(Tts)We start with S0 = ∅, so we compute ΓKG (S0) and S1 = ΓKG (ΓKG (S0)):ΓKG (S0) = KA(KG )S1 =(cid:4)K CD(Tts), K int(Tts)(cid:2)Note that, since K LowEv(Tts) ∈ T KG /S0 (∅), then, by (18), OBO,T KDKG allows us to derive everything, and thus ΓKG (S0) = KA(KG ).We continue with ΓKG (S1) and S2 = ΓKG (ΓKG (S1)) and obtain:G /S0 (∅) is inconsistent. So, the subsequent application ofΓKG (S1) = KA(KG )S2 =(cid:4)K CD(Tts), K int(Tts)(cid:2)Now, since S1 = S2, the fixpoint is reached, and, indeed, does not contain K Rec(Tts). This is so because, since K LowEv(Tts) ∈ΓKG (S1), rule (8) grounded with Tts is removed in PG /ΓKG (S1).Note that K LowEv(Tts) ∈ ΓKG (S1) because rule (17) is not removed in PG /S1, given that K Rec(Tts) /∈ S1. In an analogywith [60], K LowEv(Tts) is thus either true or undefined, since it belongs to the overestimate in the alternating fixpoint. Thisshows that, in opposite to the three-valued MKNF semantics, ¬LowEv(Tts) does not imply not LowEv(Tts).13 In fact, for anythree-valued MKNF model (M, N) of the restricted knowledge base, if ¬LowEv(Tts) holds, then, for all I ∈ M, LowEv(Tts) /∈ I .Thus, since N ⊆ M, we also have, for all I ∈ N, LowEv(Tts) /∈ I , i.e. not LowEv(Tts) should be true in any three-valued MKNFmodel of the knowledge base.One way of guaranteeing that the classical negation of some DL-atom H in the ontology imposes the truth of not H(despite the existence of rules with head K H ) is to change the MKNF transform defined above, so that rules with head K Hare removed whenever ¬H holds:Definition 19. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base and S ⊆ KA(KG ). The MKNF-coherent transformKG //S is defined as KG //S = (O, PG //S ), where PG //S contains all rulesK H ← K A1, . . . , K Anfor which there exists a ruleK H ← K A1, . . . , K An, not B1, . . . , not Bmin PG with K B j /∈ S for all 1 (cid:4) j (cid:4) m and OBO,S (cid:17)|(cid:23) ¬H .Note the difference between this definition and Definition 17: we also remove a rule from the MKNF-coherent transform,in case the classical negation of the head is derivable from the ontology augmented by S.Definition 20. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base and S ⊆ KA(KG ). We define Γ (cid:24)KGT KG //S↑ ω.(S) =13 This problem is akin to the coherence problem [55] in extended logic programs, where a (classical false) formula ¬ϕ has to impose not ϕ explicitly.M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541545The operator Γ (cid:24)KGis also antitonic (cf. Lemma 3), and so applying Γ (cid:24)KGtwice is guaranteed to have a least fixpoint.Clearly, in the case of the knowledge base of Example 8, this least fixpoint includes K Rec(Tts). The reason is that the newMKNF-coherent transform does not contain any rule with head K LowEval(Tts) once ¬LowEval(Tts) is derived, and so rule(8) instantiated with Tts is not removed at some step of the iteration. However, the next example shows that the operatorΓ (cid:24)literally hides inconsistencies from the iteration. A modal atom K H may be simply considered false, even though thereKGis a rule with head K H such that the body is true in all three-valued MKNF models of the respective knowledge base.Example 9. Consider again only the hybrid MKNF knowledge base presented in Examples 2 and 4 for recommending CDs.Now suppose that the user wants to ensure that only inexpensive CDs are to be recommended. Note that this is differentfrom recommending CDs that have a discount. The ontology axiom (20) states that any expensive CD must never be recom-mended. In general, comparing prices requires some predicates from the numerical domain, such as concrete domains forthe DL EL++[2]. For simplicity, we assume here that this is handled internally, so we simply add a fact (21) saying thatToTheSea is expensive,Expensive (cid:15) ¬RecommendK Expensive(ToTheSea) ←(20)(21)This knowledge base is clearly MKNF-inconsistent: simply note that we can conclude that ToTheSea is recommended (from(8) instantiated by ToTheSea) and not recommended at the same time (by (20)–(21)). However, it is easy to check that theleast fixpoint of applying Γ (cid:24)twice does not include K Rec(Tts), simply because the MKNF-coherent transform removes theKGrule (8) instantiated with Tts once ¬Recommend(Tts) is true, even though the rule body is true.This example shows that Γ (cid:24)KGcannot be applied always in the alternating fixpoint. Examining again the computationof Example 8, we may see that the application of Γ (cid:24)would only be required when we compute overestimates of theKGtrue knowledge. In this case, it would suffice to apply Γ (cid:24)(S1). Then, S2 could be obtained by simplyKGapplying ΓKG to the previous result, thus computing S2 now by ΓKG (Γ (cid:24)(S1)). At the same time, in case of Example 9, theKGpartial usage of ΓKG would ensure that Recommend(Tts) is kept in one part of the iteration so that inconsistencies may stillbe detectable.for computing Γ (cid:24)KGThis suggests that the computation of the well-founded MKNF model could be obtained by alternating the application ofthe operators Γ (cid:24)and ΓKG . In fact, as we will show, this interaction of the two operators yields the well-founded MKNFKGmodel. But before we formally define this interaction and prove its correspondence to the well-founded MKNF model, weshow that both operators are indeed antitonic.Lemma 3. If KG is a ground hybrid MKNF knowledge base and S ⊆ S(cid:24) ⊆ KA(KG ), then ΓKG (S(cid:24)) ⊆ ΓKG (S) and Γ (cid:24)KG(S(cid:24)) ⊆ Γ (cid:24)KG(S).Proof. We show the argument for ΓKG . The proof for Γ (cid:24)KGis identical.By Definition 18, we have to show that T KG /S(cid:24) ↑ ω ⊆ T KG /S ↑ ω. We prove by induction on n that T KG /S(cid:24) ↑ n ⊆ T KG /S ↑ nholds. The base case for n = 0 is trivial since ∅ ⊆ ∅. Assume that T KG /S(cid:24) ↑ n ⊆ T KG /S ↑ n holds and consider K H ∈ T KG /S(cid:24) ↑(n + 1). Then K H ∈ T KG /S(cid:24) (T KG /S(cid:24) ↑ n) and there are two cases to consider. First, KG /Scontains a rule of the form K H ←, we also have K H ← K A1, . . . , K An in KG /SK A1, . . . , K An such that K Ai ∈ T KG /S(cid:24) ↑ n for each 1 (cid:4) i (cid:4) n. Since S ⊆ Sand, by the induction hypothesis, K Ai ∈ T KG /S ↑ n for each 1 (cid:4) i (cid:4) n. Hence, K H ∈ T KG /S ↑ (n + 1). Alternatively, K H is aconsequence obtained from DKG /S(cid:24) (T KG /S(cid:24) ↑ n). By the induction hypothesis, T KG /S(cid:24) ↑ n ⊆ T KG /S ↑ n holds, and we concludefrom the monotonicity of first-order logic that K H ∈ DKG /S (T KG /S ↑ n). (cid:2)(cid:24)(cid:24)Since both operators are antitonic, we can define an alternating iteration for the two operators as motivated above:Definition 21. Let KG be a ground hybrid MKNF knowledge base. We define two sequences Pi and Ni as follows:P0 = ∅,Pn+1 = ΓKG (Nn),(cid:12)Pω =Pi,N0 = KA(KG )Nn+1 = Γ(cid:13)Nω =(cid:24)KGNi(Pn)The sequence of Pi is intended to compute modal atoms that are true, while the sequence Ni computes modal atomsthat are not false. The former is an increasing sequence, while the latter is decreasing:Lemma 4. Let KG be a ground hybrid MKNF knowledge base. Then Pα ⊆ Pβ and Nβ ⊆ Nα for all ordinals α, β with α (cid:4) β (cid:4) ω.1546M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554Proof. Whenever α = β, the statement holds automatically. It thus suffices to consider α < ω and to show via inductionover α that the statement holds. If β is a successor ordinal, then it is sufficient to show the property for β = α + 1, all theother successor cases follow by transitivity of ⊆.If α = 0, then P0 = ∅ and P0 ⊆ Pβ holds for any β. Equivalently, N0 = KA(KG ), thus Nβ ⊆ N0 also holds for any β.Suppose the property holds for all α (cid:4) n. We must show that Pn+1 ⊆ Pn+2 and Nn+2 ⊆ Nn+1. We have Pn+1 = Γ (Nn) andPn+2 = Γ (Nn+1). Since Nn+1 ⊆ Nn by the induction hypothesis, Pn+1 ⊆ Pn+2 holds in virtue of the antimonotonicity of Γ (cid:24).Likewise, we know that Nn+1 = Γ (cid:24)(Pn) and Nn+2 = Γ (cid:24)(Pn+1). Since Pn ⊆ Pn+1 by the induction hypothesis, we obtain byantitonicity of Γ (cid:24)that Nn+2 ⊆ Nn+1.The only case left is the one where β = ω. But this case holds by definition. (cid:2)Like the iteration of T K, and for the very same reasons, these iterations are finite and reach a fixpoint before ω – in thecase of Pi a least fixpoint, and in the case of Ni a greatest fixpoint:Proposition 5. Let KG be a ground hybrid MKNF knowledge base. Then Pω is the least fixpoint of the sequence of Pi and Nω is thegreatest fixpoint of the sequence of Pi .Proof. We show the argument for Pω. The argument for Nω is analogous.We define an operator Φ(S) = ΓKG (Γ (cid:24)KG(S)) on subsets S of KA(KG ), iterated as usual. It is easy to see that Φ ↑ i = P2iand, thus, that Φ is monotonic. By the Knaster–Tarski Theorem we conclude that Pω is equal to the least fixpoint of thesequence of Pi . (cid:2)This proposition also allows us to show that the least fixpoint can be directly computed from the greatest one and viceversa.Proposition 6. Let KG be a ground hybrid MKNF knowledge base. Then Pω = ΓKG (Nω) and Nω = Γ (cid:24)KG(Pω).Proof. We show the case of Nω = Γ (cid:24)(Pω); the other case proceeds identically. By Proposition 5, we know that Pω is theleast fixpoint of the sequence of Pi . Since the ground knowledge base is finite, there is an n such that Pn = Pω, and soPn = Pm for any m (cid:2) n. Subsequently, we have Nn+1 = Nm for any m with m (cid:2) n + 1, i.e. Nn+1 = Γ (cid:24)(Pω) is a fixpoint ofKGthe sequence Ni . Assume that Nn+1 is not the greatest fixpoint. Then there is an Nl, l < n + 1, with Nl = Nl+2 and Nl ⊃ Nn+1.Then Pl+1 also equals a fixpoint in the sequence Pi with Pl+1 being necessarily smaller than Pn. This contradicts the initialassumption that Pn is the least fixpoint and finishes the proof. (cid:2)Thus, we can either compute the two sequences Pi and Niin parallel until we reach an n such that Pn = Pn+1 andNn = Nn+1 or we compute just one of the two fixpoints in the manner sketched in the proof of Proposition 5 (alternatingbetween ΓKG and Γ (cid:24)KG) and let the other one follow by one application of either ΓKG or Γ (cid:24)KG.The two fixpoints can be used to define the well-founded partition which is, as we show in Section 4.3, the partitioninducing the well-founded MKNF model.Definition 22. The well-founded partition of an MKNF-consistent ground hybrid MKNF knowledge base KG = (O, PG ) isdefined by:(cid:5)(T W , F W ) =Pω, KA(KG ) \ Nω(cid:6)Note that we restrict the definition to MKNF-consistent hybrid MKNF knowledge bases. This is reasonable since in manycases the pair (T W , F W ) obtained for an MKNF-inconsistent knowledge base would not satisfy the conditions imposed inthe definition of a partition (cf. Definition 13). Therefore, in Section 4.3, we show that all modal K-atoms derived in Pω,KA(KG ) \ Nω respectively, are true, false respectively, in all three-valued MKNF models of KG (see Proposition 7), includingthe special case, in which KG is MKNF-inconsistent. This can be used to present necessary and sufficient conditions tocheck for MKNF-consistency (see Theorem 2), which are based on two comparisons, each of which compares a furtheriteration of the operators ΓKG and Γ (cid:24)w.r.t. one of the fixpoints. Given an established check for MKNF-consistency, weKGcan show that the well-founded partition is in fact a partial partition (see Proposition 8), if the considered knowledge baseKG is consistent. In this case, we can also show that a corresponding MKNF interpretation pair exists that satisfies KG(see Theorem 3), and that this interpretation pair is a three-valued MKNF model of KG (see Theorem 4). This allows us toconclude that this specific MKNF interpretation pair corresponding to the well-founded partition is the well-founded MKNFmodel (see Theorem 5). We can then show that, given KG with empty O, the well-founded partition and the well-foundedmodel for logic programs coincide (see Theorem 6) and finish with the results for data complexity (see Theorem 7). Butbefore we come to that (in Section 4.3), we illustrate the alternating fixpoint construction in the two motivating examples(Examples 8, 9) presented before.M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541547Example 10. Consider the hybrid MKNF knowledge base presented in Example 8, with the same limitation on the set ofmodal atoms.For similarity with the computation presented in Example 8, we compute the fixpoints as sketched in the proof ofProposition 5. We start with P0 = ∅ and compute N1 = Γ (cid:24)KG(P0) and P2 = ΓKG (N1):(cid:2)(cid:2)(cid:4)K CD(Tts), K int(Tts), K Rec(Tts)(cid:4)K CD(Tts), K int(Tts), K Rec(Tts)N1 =P2 =It is easy to check that P2 is already the least fixpoint. Note the difference to the iteration in Example 8. Now, K LowEv(Tts)|(cid:23) ¬LowEv(Tts). So rule (17) instantiated with Tts is removed in the MKNF coherent-does not occur in N1, since OBO,P 0transform, and thus K LowEv(Tts) /∈ Γ (cid:24)(P0). As a consequence, we obtain K Rec(Tts) in P2. We can compute the greatestKGfixpoint Nω = Γ (cid:24)(Pω), and we obtain that Nω equals N1. Note that if axiom (18) is omitted, then both K LowEv(Tts) andKGK Rec(Tts) remain undefined. Thus, operator Γ (cid:24), in combination with (18), shows how the formula ¬LowEv(Tts) imposesKGthat not LowEv(Tts) holds, ensuring in this example the derivability of K Rec(Tts).The knowledge base in Example 9 is MKNF-inconsistent. Thus, there cannot be a well-founded partition as in Defi-nition 22. Nevertheless, we present the computation of the alternating fixpoint, in order to show the difference to thecomputation in Example 9, and to hint on how to detect inconsistencies, a topic that is detailed in the next section.Example 11. Consider the ground hybrid MKNF knowledge base KG presented in Example 9, where all rules are onlygrounded with Tts, and the following restricted set of modal atoms is used:KA(KG ) =(cid:2)(cid:4)K Rec(Tts), K CD(Tts), K LowEv(Tts), K owns(Tts), K int(Tts), K Exp(Tts)To further simplify the presentation, we only consider rule (8), axioms (19)–(21), and we simplify (9) to the fact (26). Toease the reading we repeat here the complete knowledge base obtained after all simplifications:Exp (cid:15) ¬RecCD(Tts)K Exp(Tts) ←K Rec(Tts) ← K CD(Tts), not owns(Tts), not LowEval(Tts), K int(Tts)K int(Tts) ←(22)(23)(24)(25)(26)For computing the two fixpoints, we start with P0 = ∅ and N0 = KA(KG ). We continue with P1 = ΓKG (N0) and N1 =(P0):Γ (cid:24)KG(cid:2)(cid:4)K CD(Tts), K int(Tts), K Exp(Tts)P1 =N1 = KA(KG )Note that once K Rec(Tts) is derived in the computation of N1 and added to the set S of derived knowledge of T KG /∅, thenDKG /∅ allows us to derive everything, simply because OBO,S with {K Exp(Tts), K Rec(Tts)} ⊆ S is inconsistent.We continue with P2 = ΓKG (N1) and N2 = Γ (cid:24)KG(P1), and obtain:(cid:2)(cid:4)K CD(Tts), K int(Tts), K Exp(Tts)(cid:2)(cid:4)K CD(Tts), K int(Tts), K Exp(Tts)P2 =N2 =|(cid:23) ¬Rec(Tts), the rule (25) no longer appears in the transform used for computing N2, and the explosiveSince OBO,P 1behaviour of DKG /∅ disappears as well. As a consequence, in the next iteration we obtain K Rec(Tts) ∈ P3, which againyields the explosive inconsistency and the derivation of KA(KG ),P3 = KA(KG )(cid:2)N3 =(cid:4)K CD(Tts), K int(Tts), K Exp(Tts)It is easy to check that these are the fixpoints. We have K Rec(Tts) ∈ P3 but K Rec(Tts) /∈ N3. Intuitively, this means thatK Rec(Tts) is true and false at the same time, something that is already a clear indication for the inconsistency of theconsidered knowledge base.1548M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15544.3. The well-founded MKNF model and related propertiesThe well-founded partition (T W , F W ) consists of modal atoms that are intended to be true (T W ), false (F W ) or undefined(those modal atoms neither occurring in T W nor in F W ). But this is not merely an intention. The two sequences of Pi andNi allow us to show that any modal atom that is added to an element of the sequence of Pi (resp. removed from an elementof the sequence of Ni ) must be true in all three-valued MKNF models of KG (resp. false). For that purpose we need to definea notion of dependency that captures more precisely the derivations from OBO,S , for some S, by the operator DKG .Definition 23. Let KG be a ground hybrid MKNF knowledge base, K H a modal K-atom with K H ∈ KA(KG ), and S a (possiblyempty) set of modal K-atoms with S ⊆ KA(KG ). We say that K H depends on S if and only if(i) OBO,S |(cid:23) H and(ii) there is no S(cid:24)with S(cid:24) ⊂ S such that OBO,S(cid:24) |(cid:23) H .Intuitively, S is a minimal set that, in combination with O, allows us to derive K H . Note that there may exist severalsuch minimal sets. Furthermore, S may also be minimal such that OBO,S is inconsistent. An appropriate restriction in theproof of the following proposition then ensures that this notion can be used properly.Proposition 7. Let KG be a ground hybrid MKNF knowledge base and (T , F ) the pair (Pω, KA(KG ) \ Nω). Then K H ∈ T implies thatK H is true (and not H is false) in all three-valued MKNF models (M, N) of KG , and K H ∈ F implies that K H is false (and not H istrue) in all three-valued MKNF models (M, N) of KG .Proof. According to Proposition 5, we have to show that, for all i, K H ∈ Pi implies that K H is true (and not H is false) in allthree-valued MKNF models (M, N) of KG , and K H /∈ Ni implies that K H is false (and not H is true) in all three-valued MKNFmodels (M, N) of KG . We show the argument for K H by an induction on i. This also shows the argument for not H since,for all partial MKNF models (M, N) of any given K, we have that (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(K H) = ¬(I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(not H).The base case i = 0 trivially holds, since P0 is empty and N0 is equal to KA(KG ).(i) Suppose that the property holds for all i (cid:4) n. We consider i = n + 1 for two cases, namely K H ∈ Pn+1 and K H /∈ Nn+1.Let K H ∈ Pn+1. If K H already occurs in Pn, then K H is true in all three-valued MKNF models (M, N) of KG , by the induc-↑ ω,↑ j for some j, and we show by induction on j that K H is true in all three-valued MKNF↑ ω but K H /∈ Pn. Since K H is introduced by T KG /Nntion hypothesis (i). Otherwise, K H ∈ ΓKG (Nn), i.e. K H ∈ T KG /Nnwe know that K H ∈ T KG /Nnmodels (M, N) of KG .↑ 0 is empty.The base case holds trivially, since T KG /Nn(ii) Suppose that the claim holds for all j (cid:4) m, and consider K H ∈ T KG /NnIf K H already occurs in T KG /Nn↑ m, then the claim holds automatically by the induction hypothesis (ii). Otherwise,there are two cases to consider. Either there is a positive rule K H ← K A1, . . . , K An in KG /Nn with K Ai ∈ T KG /Nn↑ m, or↑ m). In the first case, by the induction hypothesis (ii), all K Ai are true in allK H is the consequence of DKG /Nn (T KG /Nnthree-valued MKNF models (M, N) of KG . Additionally, there is a rule K H ← K A1, . . . , K An, not B1, . . . , not Bm in KG , andsince the positive version of this rule occurs in KG /Nn, no K B j occurs in Nn, and thus (by the induction hypothesis (i)), allK B j are false in all three-valued MKNF models (M, N) of KG . Consequently, K H has to be true in all three-valued MKNF↑ m holds. Since O and all modal atoms occurringmodels (M, N) of KG . In the second case, OBO,S |(cid:23) H with S = T KG /Nn↑ m are true in all three-valued MKNF models of KG (by the induction hypothesis (ii)), we can immediatelyin T KG /Nnconclude that K H also has to be true in all three-valued MKNF models (M, N) of KG .↑ m + 1.Alternatively, consider all K H /∈ Nn+1, i.e. all K H /∈ Γ (cid:24)KG(Pn). Let U be the set of all such K H /∈ Γ (cid:24)KGOBO,Pn has to be consistent, otherwise U would be empty. Now, from the definition of Γ (cid:24)KGeach modal K-atom K H in U , the following conditions are satisfied14:(Pn). Note that(Pn) we can conclude that, for(Ui) for each rule K H ← body in PG at least one of the following holds.(Uia) Some modal K-atom K A appears in body and in U ∪ KA(KG ) \ Nn.(Uib) Some modal not-atom not B appears in body and in Pn.(Uic) OBO,Pn|(cid:23) ¬H ;(Uii) for each (possibly empty) S with S ⊆ Pn, on which K H depends, there is at least one modal K-atom K A such thatOBO,S\{K A} (cid:17)|(cid:23) H and K A in U ∪ KA(KG ) \ Nn.The cases of (Uib) and (Uic) correspond to the removal of rules performed for the MKNF-coherent transform (cf. Defini-tion 19). By the induction hypothesis (i), we know that, for all K B ∈ Pn, K B is true for all three-valued MKNF modelsof KG . Thus, in case of (Uib), body is false in all three-valued MKNF models of KG , and, in case of (Uic), ¬H is true in14 These conditions resemble the notion of unfounded sets in [61].M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541549all three-valued MKNF models of KG . In case of (Uia), the corresponding rule with head K H still appears in the MKNF-coherent transform but some modal K-atom K A is not derivable and, thus, K H is not derivable either. Likewise, in case of(Uii), some modal K-atom K A is not (any longer) derivable, so that K H cannot be derived from the ontology. If K A appearsin KA(KG ) \ Nn, then, by the induction hypothesis (i), we know that K A is false in all three-valued MKNF models of KG . Theonly remaining case are those K A in U . Assume first that all conditions are satisfied without reference to U . Then, clearly,all modal K-atoms have to be false in all three-valued MKNF models of KG . Now, consider the complete conditions (Uia)–(Uii): since all K H satisfy the conditions (Uia)–(Uii), and since three-valued MKNF models minimise derivable knowledge inthe order t > u > f, we derive that all K H are false in all three-valued MKNF models of KG . (cid:2)For an MKNF-consistent knowledge base KG , the pair (T , F ) in Proposition 7 is defined exactly in the same way asthe well-founded partition, and we show below that this correspondence indeed holds. Of course, there is still the issue ofdetermining, based on the iterations and the consistency of O alone, whether or not the knowledge base is MKNF-consistent.The next theorem presents the necessary and sufficient conditions for MKNF-inconsistency:Theorem 2. Let KG = (O, PG ) be a ground hybrid MKNF knowledge base, Pω the fixpoint of the sequence Pi , and Nω the fixpoint ofthe sequence Ni . KG is MKNF-inconsistent iff Γ (cid:24)KG(Nω) ⊂ ΓKG (Nω) or O is inconsistent.(Pω) ⊂ ΓKG (Pω) or Γ (cid:24)KGProof. First, we show that if any of the three conditions holds, then KG is MKNF-inconsistent. For the two cases w.r.t. Nωand Pω, we present the proof for Nω. The other case can be proven analogously.From Proposition 6 we know that ΓKG (Nω) = Pω. Furthermore, by Proposition 7, we have that all modal atoms K H ∈ Pωare true in all three-valued MKNF models (M, N) of KG . If Γ (cid:24)(Nω) ⊂ ΓKG (Nω), then there is at least one K H such thatKGK H ∈ ΓKG (Nω) \ Γ (cid:24)(Nω) is that there is a modal K-atom K A such thatKGK A ∈ ΓKG (Nω) \ Γ (cid:24)|(cid:23) ¬ A. Either K H = K A or K H and K A appear in a set U that is constructed as inKGthe proof of Proposition 7, e.g., for each rule K H ← body in KG //Nω, we have K A in body. In both cases, K A is true in allthree-valued MKNF models of KG but the addition of all modal K-atoms that are not false in all three-valued MKNF modelsof KG (including K A) to O derives ¬ A. We conclude that KG is MKNF-inconsistent.(Nω). The only reason for K H not to occur in Γ (cid:24)KG(Nω) and OBO,NωThe third case is a direct consequence of the way evaluation of MKNF formulas is defined: if O is inconsistent, then thereis no first-order model of O. Assume that (M, N) is a three-valued MKNF model of KG . Then, (M, N) satisfies KG and thusalso O, i.e., for each I ∈ M, we have (I, (cid:28)M, N(cid:29), (cid:28)M, N(cid:29))(π (O)) = t. Since M must not be empty, we derive a contradiction.For the other direction, we have to show that any possibly occurring MKNF-inconsistency is detected. So, supposethat KG is MKNF-inconsistent. If O is inconsistent, then we are done immediately. Otherwise, the rules in PG alonecannot be MKNF-inconsistent, since they only consist of modal atoms without any appearance of classical negation.Likewise, rules without DL-atoms or rules without DL-atoms in at least some head cannot be inconsistent since thederivation from the ontology O never conflicts with any rule. Consider thus such an arbitrary DL-atom K H with a ruleK H ← K A1, . . . , K An, not B1, . . . , not Bm in PG . If H is true as a consequence of O, then the operator DKG ensures thatK H is true as well, and no inconsistency occurs.So, let H be first-order false and K H ∈ Pω, i.e. K H is true in all three-valued MKNF models of KG . But then Γ (cid:24)KG(Nω) ⊂ΓKG (Nω) and the inconsistency is detected. Alternatively, K H could be undefined but then K H ∈ Nω, and this is not possiblesince H is first-order false and Γ (cid:24)suppresses K H . So the only case missing is the one where K H is false in all three-KGvalued MKNF models (as enforced by the operator Γ (cid:24)KGΓ (cid:24)KG) but the body of at least one rule with head K H is undefined. Thus(Pω) ⊂ ΓKG (Pω). (cid:2)We apply this check for consistency to our previous examples:Example 12. Consider again KG from Example 11. We have Pω = P3 and Nω = N3. We check for inconsistency (assuming Ois consistent) and obtain Γ (cid:24)(Nω) ⊂ ΓKG (Nω). So we (rightly) conclude that KG is inconsistent.KG(Pω) =Now reconsider KG from Example 10. We have Pω = P2 and Nω = N1. We check for consistency and obtain Γ (cid:24)KG(Pω) = ΓKG (Pω) and Γ (cid:24)KG(Nω) = ΓKG (Nω). Hence, the knowledge base is consistent, and we obtain the well-founded partition(cid:5)(cid:2)(cid:4)(cid:6)(cid:2)(cid:4)K CD(Tts), K int(Tts), K Rec(Tts),K owns(Tts), K LowEv(Tts)ΓKG (Pω) and Γ (cid:24)KG(T W , F W ) =The following example shows that we in fact need both the calculations w.r.t. the two fixpoints.Example 13. Consider the following MKNF-inconsistent knowledge base that is:R (cid:15) ¬PR(a)K P (a) ← not P (a)P (a) must be false from the ontology alone, and so not P (a) must hold, which immediately causes an inconsistency.1550M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554Only the test using Nω is able to detect this inconsistency. For KA(KG ) = {K P (a)}, we obtain Pω = {K P (a)} and Nω = ∅and thus Γ (cid:24)KG(Pω) = ΓKG (Pω) = ∅ and Γ (cid:24)KG(Nω) = ∅ ⊂ ΓKG (Nω) = {K P (a)}.On the other hand, the following knowledge base is also MKNF-inconsistent, but only the test with Pω allows us todiscover this,R (cid:15) ¬PR(a)K P (a) ← not uK u ← not uFor KA(KG ) = {K P (a), K u} we obtain Pω = ∅ and Nω = {K u} and thus Γ (cid:24)KGΓ (cid:24)KG(Nω) = ΓKG (Nω) = Pω.The difference between the two examples is that in the first example there is a rule with true body and false head, whilein the second example there is a rule with undefined body and false head. Each of the two conditions captures one of thecases, which explains why two conditions need to be checked.(Pω) = Nω ⊂ ΓKG (Pω) = KA(KG ) andAs already said, normal rules alone cannot be inconsistent, unless integrity constraints (i.e. rules whose head is K f,cf. [52]) are allowed. In this simpler case, inconsistencies are easily detected since K f must occur in KA(KG ) \ Nω.If KG is MKNF-consistent, then the well-founded partition is in fact a partial partition.Proposition 8. Let KG be an MKNF-consistent ground hybrid MKNF knowledge base and (T W , F W ) = (PKG , KA(KG ) \ NKG ) thewell-founded partition. Then (T W , F W ) is a partial partition.Proof. From Theorem 2 and since KG is MKNF-consistent, we obtain that Γ (cid:24)(Nω) = ΓKG (Nω).KGThose two equalities also yield that T W ∩ F W = ∅, which shows that (T W , F W ) is a partition (since T W and F W are subsetsof KA(KG )). (cid:2)(Pω) = ΓKG (Pω) and Γ (cid:24)KGIt can also be shown that the well-founded partition yields an MKNF interpretation pair that satisfies KG .Theorem 3. Let KG be an MKNF-consistent ground hybrid MKNF KB and (T W , F W ) = (PKG , KA(KG ) \ NKG ) the well-founded parti-tion of KG . Then (I P , I N ) |(cid:23) KG where I P = {I | I |(cid:23) OBO,PK} and I N = {I | I |(cid:23) OBO,NK}.GGGProof. First of all, (I P , I N ) is a proper MKNF interpretation pair, i.e. since any I ∈ I N also satisfies OBO,PKGI N ⊆ I P . By Definition 3, we know that KG = K π (O) ∧ π (PG ). Since π (O) occurs in OBO,PKand allisfy OBO,PK(I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(π (PG )).we obtainI ∈ I P sat-, we have (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(K π (O)) = t for all I ∈ I P . Thus, we only have to consider the evaluation ofWe start by evaluating the modal atoms occurring in π (PG ). Let K H ∈ π (PG ). Suppose at first that K H ∈ T W . As such|(cid:23) H . In this case, K H ∈ NKG by(cid:17)|(cid:23) H . Therefore, we have (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(K H) = f. Finally, let K H occur|(cid:23) H . In this case, K H ∈ PKG by means(I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(K H) = t. Alternatively, suppose K H ∈ F W and assume that OBO,NKmeans of DKG , and we conclude that OBO,NKin NKG but not in T W or in F W . We know that OBO,NKof DKG , and we conclude that OBO,PK(cid:17)|(cid:23) H . Therefore, we have (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(K H) = u.|(cid:23) H . Assume OBO,PKThe cases for not H ∈ π (P) proceed analogously. Indeed, if K H ∈ T W , then we have (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(not H) = f; ifGGGGGGK H ∈ T W , then we have (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(not H) = t; and otherwise (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(not H) = u.Now consider π (PG ) which consists of a set ofimplications, each corresponding to one rule in PG . To show(I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(π (PG )) = t, we only have to guarantee that the three cases that map an implication ⊃ to false donot occur, i.e. the cases where the body of the original rule is true but the head is not (respectively, the body is undefinedand the head is false). Assume that any of the three cases holds. If the body of such a rule is true, then by the alternatingfixpoint construction we have that the head is true as well, contradicting these two cases. If the rule body is undefined,then (by NKG and the alternating fixpoint) we obtain that the head has to be undefined or true, again contradicting ourassumption. Thus, (I, (cid:28)I P , I N (cid:29), (cid:28)I P , I N (cid:29))(π (PG )) = t holds. (cid:2)This result can be combined with Proposition 3 to show that the well-founded partition results in a three-valued MKNFmodel.Theorem 4. Let KG be an MKNF-consistent ground hybrid MKNF KB and (T W , F W ) = (PKG , KA(KG ) \ NKG ) the well-founded parti-tion of KG . Then (I P , I N ) is a three-valued MKNF model of KG , where I P = {I | I |(cid:23) OBO,PK} and I N = {I | I |(cid:23) OBO,NK}.GGM. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541551Proof. We know from Theorem 3 that (I P , I N ) satisfies KG . By Proposition 3, this MKNF interpretation pair exactly corre-sponds to the one that equals to a three-valued MKNF model inducing that partition. Thus (I P , I N ) is a three-valued MKNFmodel of KG . (cid:2)In fact, (I P , I N ) is the unique well-founded MKNF model, i.e. the least partial MKNF model w.r.t. derivable knowledge.Theorem 5. Let KG be an MKNF-consistent ground hybrid MKNF KB and (I P , I N ) the three-valued MKNF model of KG induced by thewell-founded partition (T W , F W ). For any three-valued MKNF model (M, N) of KG we have (M, N) (cid:3)k (I P , I N ). Indeed, (I P , I N ) isthe well-founded MKNF model of KG .Proof. We have shown in Proposition 3 that any three-valued MKNF model (M, N) of KG induces a partition (T , F ) whichin turn gives rise to the same three-valued MKNF model (via the objective knowledge). By Proposition 7, K H ∈ T W impliesthat K H is true (and not H is false) in all three-valued MKNF models (M, N) of KG , and K H ∈ F W implies that K H is false(and not H is true) in all three-valued MKNF models (M, N) of KG . We conclude that T W ⊆ T and F W ⊆ F . Furthermore,we know that I P = {I | I |(cid:23) OBO,T W}, and also that M = {I | I |(cid:23) OBO,T } and N = {I | I |(cid:23)OBO,KA(KG )\F }. It is straightforward to see that M ⊆ I P and I N ⊆ N, which by Definition 11 finishes the proof. (cid:2)} and I N = {I | I |(cid:23) OBO,KA(KG )\F WThis central theorem not only shows that the well-founded MKNF model is unique and well defined, since the well-founded MKNF model is exactly the three-valued MKNF model that is least w.r.t. (cid:3)k, but also that the well-founded MKNFmodel is a sound approximation of any total three-valued MKNF model and therefore of any two-valued MKNF model. Thus,the well-founded partition can also be used in the algorithms presented in [52] for computing a subset of the knowledgethat holds in all partitions corresponding to a two-valued MKNF model.The well-founded partition of knowledge bases consisting of only rules, coincides with the well-founded model of thecorresponding (normal) logic program.Theorem 6. Let KG be a ground program of MKNF rules, Π a normal logic program obtained from PG by transforming each MKNFruleK H ← K A1, . . . , K An, not B1, . . . , not Bminto a ruleH ← A1, . . . , An, not B1, . . . , not Bmof Π , (T W , F W ) the well-founded partition of KG , and W Π the well-founded model of Π . Then K H ∈ T W if and only if H ∈ W Π , andK H ∈ F W if and only if not H ∈ W Π .Finally, the following theorem is obtained from the data complexity results for positive nondisjunctive MKNF knowledgebases in [52], where data complexity is measured in terms of A-Box assertions and rule facts.Theorem 7. Let K be a hybrid MKNF KB. Assuming that entailment of ground DL-atoms in DL is decidable with data complexity C,Cthe data complexity of computing the well-founded partition is in P.CFor comparison, the data complexity for reasoning with two-valued MKNF models in nondisjunctive programs is shownto be E Pwhere E = NP if C ⊆ NP, and E = C otherwise. Thus, computing the well-founded partition ends up in a strictlysmaller complexity class than deriving the two-valued MKNF models. In fact, if the description logic fragment is tractable,15then we obtain a formalism whose model is computed with a data complexity in P. This is remarkable, since to the best ofour knowledge this is the first time that a general tractable local closed world extension for DLs has been identified.5. Related workSeveral proposals exist for combining rules and ontologies (see, e.g., [13,28] for a brief survey). They can be split intotwo groups, namely those semantically based on first-order logics solely (such as description logics alone), and the hybridapproaches (such as hybrid MKNF) providing a semantics combining elements of first-order logics with non-monotonicity.The most general approach in the first group is SWRL [32], an unrestricted combination of OWL-DL with function-freeHorn rules (i.e., rules without negation). The approach is very expressive but undecidable, yet nevertheless generalises manyapproaches in this group. Applying, e.g., DL-safety to SWRL rules yields DL-safe rules [53], a decidable subset of SWRL.AL-log [10], a combination of DL-safe positive rules and ALC, and CARIN [46] are also notable formalisms generalised15 See, e.g., the OWL 2 profiles at http://www.w3.org/TR/owl2-profiles/.1552M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554by SWRL. In both cases, the ontology only serves as input to the rules and not vice versa, i.e., information flow is oneway. Description Logic Programs (DLP) [24,44] are a fragment of OWL that can be transformed into logic programs ofpositive rules. In the same spirit, Horn-SHIQ [33] is a fragment of OWL that can be translated into Datalog, and (likeDLP) is of tractable data complexity.16 Recently, DLP has been generalised to Description Logic Rules [39,41], i.e. rulesthat may contain description logic expressions. This enriches the DL, on which the description logic rules are based, withsophisticated constructs normally only available to more expressive description logics, without increasing the complexity.Similarly, ELP [39,42,45] is a polynomial language covering important parts of OWL 2. ELP also allows some axioms thatcannot be expressed in OWL 2. All of these approaches have the advantage of fitting semantically into the original (first-order) OWL semantics, which also means that existing reasoners for ontologies alone can be used for reasoning in thecombined knowledge bases. On the other hand, none of these approaches can express non-monotonic negation, and as suchnone cover the motivating cases discussed in the introduction.In the second group, which includes hybrid MKNF, the approach in [14] combines ontologies and rules in a modular way,i.e. both parts and their semantics are kept separate. The two reasoning engines nevertheless interact bidirectionally (withsome limitations in the direction of the ontology to rules) via interfaces, and the dlvhex system [15] provides an implemen-tation that generalises the approach by allowing multiple sources for external knowledge (with differing semantics). Thiswork has been extended in various ways (e.g., probabilities, uncertainty, and priorities; for references see the related worksection of [14]). A related well-founded semantics [16] has been proposed with a computational complexity quite similar tothe one of our well-founded MKNF semantics. However, the integration is less tight, and the formalism restricts the transferof information from ontologies to rules. The only other well-founded semantics approach is called hybrid programs [12] butthis approach only allows the transfer of information from the ontology to the rules. Thus, [12] is strictly less expressivethan the well-founded MKNF semantics. The advantage of such a restriction is that, contrary to [16] and the well-foundedMKNF semantics, the semantics remains compatible with the standard semantics: consider two DL-atoms B 1 and B2 andan ontology that expresses that at least one of them is true but none is a logical consequence of the ontology. Then, givenrules p ← B1 and p ← B2, p is obtained by [12] but not in our work or in the formalism described by Eiter et al. [14].There are several further approaches related to stable models of logic programs. [8] uses an embedding into autoepis-temic logic to tightly combine ontologies and rules. The approach is quite similar in spirit to hybrid MKNF [52]. In fact,the embedding with epistemic rule bodies and epistemic rule heads seems to be the one most closely related, not onlysyntactically but also with respect to the semantic consequences. However, a precise relation to hybrid MKNF is far fromobvious since an autoepistemic interpretation in [8] is a pair of a first-order interpretations and a set of beliefs and bothare not necessarily related. DL+log [58] provides a combination of rules and ontologies that separates predicates into ruleand ontology predicates and evaluates the former w.r.t. the answer set semantics and the latter w.r.t. a first-order semanticswith weak DL-safety, i.e. each variable in the head of a rule appears in an arbitrary positive atom in the body of the rule.Like [9,52] generalises [58] and several earlier related works (e.g. [57]) within the framework of equilibrium logics. Quitesimilar to [58] is [48], although this approach does not distinguish between ontology and rules predicates. In fact, the workoriginates from [14] and it is thus from the perspective of rules but permits a much tighter integration. Open answer setprogramming [25] extends rules with open domains and adds some syntactic limitations for ensuring decidability. Based onthat, an algorithm has been provided for f-hybrid knowledge bases [17], i.e. a combination of ontologies and rules withoutDL-safety but which limits predicates to tree-shapedness. A loose layering of Prolog on top of DLs, employing four-valuedlogic, is presented in [49].An alternative way of introducing non-monotonicity into ontologies is to enrich DLs with further syntactic constructsrepresenting non-monotonic features. Among these approaches the most closely related to our work is Description Logicsof MKNF [11], which allows two modal operators in ontology axioms. An algorithm was provided in [11] for ALC withMKNF, and it has been improved in [34]. In [5,21], circumscription was used for adding non-monotonic reasoning to DLs,and several other formalisms introducing defaults to ontologies exist (e.g., [4]).6. Conclusions and future workSummarising, we have defined a well-founded semantics of (tightly integrated) hybrid KBs that is sound w.r.t. the se-mantics defined in [52] for MKNF KBs but has a strictly lower complexity. In particular, we obtain tractability wheneverthe underlying description logic is tractable. To the best of our knowledge, the well-founded MKNF semantics is the firstapproach for the combination of arbitrary non-monotonic rules and ontologies without any limitations on the transfer of in-formation between the two. Our approach coincides with the first-order semantics of the DL fragment if there are no rules,and with the well-founded semantics of normal programs if the DL-part is empty. Moreover, we defined a construction forcomputing the well-founded MKNF model that is also capable of detecting inconsistencies in a straightforward way.Several lines of future research can be considered. First of all, we are working towards a general query-driven proce-dure capable of answering conjunctive queries under the well-founded semantics of hybrid MKNF knowledge bases. In fact,we already have some results on this issue: in [1], a procedure is defined using tabled resolution that is sound and com-plete w.r.t. the well-founded semantics defined here, and that is terminating for several classes of knowledge bases. This16 Further analyses of Horn description logics are provided in [43].M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–15541553procedure, which takes an oracle capable of answering queries in the underlying description logic as a parameter, is ableto answer DL-safe conjunctive queries (i.e., conjunctive predicates with variables, where queries have to be ground whenprocessed in the ontology) returning all correct answer substitutions for variables in the query. An implementation of thisprocedure, that is based on XSB Prolog17 for the tabling resolution, is already part of the CVS version of XSB Prolog, and thedescription of this implementation can be found at [20].Another line of current research is the specialisation of the semantics defined here (with corresponding procedures andimplementations) to particular tractable description logics, as opposed to considering DLs in general. This specific study aimsat EL++. We intend to provide a transformation of such hybrid knowledgebases into rules that can be used as input to a logic programming system capable of computing the well-founded MKNFmodel of a set of rules. We have advanced already in this work, by providing just that for EL+[2] and ELP [39,42,45], one extension of EL++[35].Another topic that we are pursuing is the definition of a paraconsistent version of the semantics defined here. It isworth noting that when inconsistencies come from the combination of rules and the DL-part (i.e. for inconsistent KBs witha consistent DL-part), the construction still yields some results, e.g., in Example 11 we still derive that Bts is interesting.This suggests that the method could be further exploited in the direction of defining a paraconsistent semantics for hybridKBs.AcknowledgementsWe thank the reviewers of a previously submitted version of this paper for their very helpful comments and suggestionsfor improvement. We thank Frederick Maier for a thorough proofreading. Matthias Knorr acknowledges support by Fundaçãopara a Ciência e a Tecnologia under the grant SFRH/BD/28745/2006. Pascal Hitzler acknowledges support by the NationalScience Foundation under award 1017225 “III: Small: TROn – Tractable Reasoning with Ontologies”.References[1] J.J. Alferes, M. Knorr, T. Swift, Queries to hybrid MKNF knowledge bases through oracular tabling, in: Abraham Bernstein, David R. Karger, Tom Heath,Lee Feigenbaum, Diana Maynard, Enrico Motta, Krishnaprasad Thirunarayan (Eds.), International Semantic Web Conference, Springer, 2009, pp. 1–16.[2] F. Baader, S. Brandt, C. Lutz, Pushing the EL envelope further, in: K. Clark, P.F. Patel-Schneider (Eds.), Proceedings of the OWLED 2008 DC Workshopon OWL: Experiences and Directions, 2008.[3] F. Baader, D. Calvanese, D.L. McGuinness, D. Nardi, P.F. Patel-Schneider (Eds.), The Description Logic Handbook: Theory, Implementation, and Applica-tions, 2nd edition, Cambridge University Press, 2007.[4] F. Baader, B. Hollunder, Embedding defaults into terminological representation systems, J. Automat. Reason. 14 (1995) 149–180.[5] P. Bonatti, C. Lutz, F. Wolter, Expressive non-monotonic description logics based on circumscription, in: P. Doherty, J. Mylopoulos, C. Welty (Eds.),Proceedings of the Tenth International Conference on Principles of Knowledge Representation and Reasoning (KR’06), AAAI Press, 2006, pp. 400–410.[6] W. Chen, D.S. Warren, Tabled evaluation with delaying for general logic programs, J. ACM 43 (1) (1996) 20–74.[7] E. Dantsin, T. Eiter, G. Gottlob, A. Voronkov, Complexity and expressive power of logic programming, ACM Comput. Surv. 33 (3) (2001) 374–425.[8] J. de Bruijn, T. Eiter, A. Polleres, H. Tompits, Embedding non-ground logic programs into autoepistemic logic for knowledge-base combination, in:Proceedings of the Twentieth International Joint Conference on Artificial Intelligence (IJCAI-07), Hyderabad, India, January 6–12, 2007, AAAI Press,2007, pp. 304–309.[9] J. de Bruijn, D. Pearce, A. Polleres, A. Valverde, Quantified equilibrium logic and hybrid rules, in: Proceedings of the First International Conference onWeb Reasoning and Rule Systems, Springer, 2007.[10] F.M. Donini, M. Lenzerini, D. Nardi, A. Schaerf, AL-log: Integrating datalog and description logics, J. Intelligent Inform. Syst. 10 (3) (1998) 227–252.[11] F.M. Donini, D. Nardi, R. Rosati, Description logics of minimal knowledge and negation as failure, ACM Trans. Comput. Log. 3 (2) (2002) 177–225.[12] W. Drabent, J. Małuszynski, Well-founded semantics for hybrid rules, in: Proceedings of the First International Conference on Web Reasoning and RuleSystems (RR 2007), Springer, 2007, pp. 1–15.[13] T. Eiter, G. Ianni, T. Krennwallner, A. Polleres, Rules and ontologies for the semantic web, in: C. Baroglio, P.A. Bonatti, J. Maluszynski, M. Marchiori,A. Polleres, S. Schaffert (Eds.), Reasoning Web, 4th International Summer School 2008, Tutorial Lectures, Venice, Italy, September 7–11, 2008, in: LectureNotes in Comput. Sci., vol. 5224, Springer, Berlin, 2008, pp. 1–53.[14] T. Eiter, G. Ianni, T. Lukasiewicz, R. Schindlauer, H. Tompits, Combining answer set programming with description logics for the semantic web, ArtificialIntelligence 172 (12–13) (August 2008) 1495–1539.[15] T. Eiter, G. Ianni, R. Schindlauer, H. Tompits, Effective integration of declarative rules with external evaluations for semantic web reasoning, in: Y. Sure,J. Domingue (Eds.), Proceedings of the 3rd European Conference on Semantic Web (ESWC 2006), Springer, 2006, pp. 273–287.[16] T. Eiter, T. Lukasiewicz, R. Schindlauer, H. Tompits, Well-founded semantics for description logic programs in the semantic web, in: G. Antoniou,H. Boley (Eds.), Rules and Rule Markup Languages for the Semantic Web, RuleML’04, in: LNCS, Springer, 2004, pp. 81–97.[17] C. Feier, S. Heymans, Hybrid reasoning with forest logic programs, in: 6th Annual European Semantic Web Conference (ESWC 2009), June 2009,pp. 338–352.[18] M. Fitting, First-Order Logic and Automated Theorem Proving, 2nd ed., Springer, 1996.[19] M. Gelfond, V. Lifschitz, The stable model semantics for logic programming, in: R.A. Kowalski, K.A. Bowen (Eds.), Int. Conference on Logic Programming,ICLP, MIT Press, 1988, pp. 1070–1080.[20] A.S. Gomes, J.J. Alferes, T. Swift, Implementing query answering for hybrid mknf knowledge bases, in: Practical Aspects of Declarative Languages, 12thInternational Symposium, PADL 2010, Madrid, Spain, January 18–19, 2010, Springer, 2010, pp. 25–39.[21] S. Grimm, P. Hitzler, A preferential tableaux calculus for circumscriptive ALCO, in: A. Polleres, T. Swift (Eds.), Web Reasoning and Rule Systems, ThirdInternational Conference, RR 2009, Chantilly, VA, USA, October 2009, Springer, 2009, pp. 197–211.[22] S. Grimm, P. Hitzler, Semantic matchmaking of web resources with local closed-world reasoning, Internat. J. e-Commerce 12 (2) (2007–2008) 89–126.17 http://xsb.sourceforge.net/.1554M. Knorr et al. / Artificial Intelligence 175 (2011) 1528–1554[23] S. Grimm, B. Motik, C. Preist, Matching semantic service descriptions with local closed-world reasoning, in: Y. Sure, J. Domingue (Eds.), The SemanticWeb: Research and Applications, 3rd European Semantic Web Conference, ESWC 2006, Budva, Montenegro, June 11–14, 2006, Springer, 2006, pp. 575–589.[24] B. Grosof, I. Horrocks, R. Volz, S. Decker, Description logic programs: Combining logic programs with description logics, in: Proceedings of the WorldWide Web Conference (WWW 2003), Budapest, Hungary, ACM, 2003, pp. 48–57.[25] S. Heymans, D. Van Nieuwenborgh, D. Vermeir, Open answer set programming for the semantic web, J. Appl. Log. 5 (1) (2007) 144–169.[26] P. Hitzler, M. Krötzsch, B. Parsia, P.F. Patel-Schneider, S. Rudolph (Eds.), OWL 2 Web Ontology Language: Primer, W3C Recommendation 27 October2009, available from http://www.w3.org/TR/owl2-primer/, 2009.[27] P. Hitzler, M. Krötzsch, S. Rudolph, Foundations of Semantic Web Technologies, Chapman & Hall/CRC, 2009.[28] P. Hitzler, B. Parsia, Ontologies and rules, in: S. Staab, R. Studer (Eds.), Handbook on Ontologies, 2nd edition, Springer, 2009, pp. 111–132.[29] P. Hitzler, M. Wendt, A uniform approach to logic programming semantics, Theory Pract. Log. Program. 5 (1–2) (2005) 123–159.[30] I. Horrocks, O. Kutz, U. Sattler, The even more irresistible SROIQ, in: P. Doherty, J. Mylopoulos, C.A. Welty (Eds.), Proc. of the 10th Int. Conf. on thePrinciples of Knowledge Representation and Reasoning (KR 2006), AAAI Press, 2006, pp. 57–67.[31] I. Horrocks, B. Motik, R. Rosati, U. Sattler, Can OWL and logic programming live together happily ever after? in: I.F. Cruz, S. Decker, D. Allemang,C. Preist, D. Schwabe, P. Mika, Michael Uschold, Lora Aroyo (Eds.), Proc. of the 5th Int. Semantic Web Conference (ISWC 2006), in: LNCS, vol. 4273,Springer, 2006, pp. 501–514.[32] I. Horrocks, P.F. Patel-Schneider, A proposal for an OWL rules language, in: Proc. of the 13th Int. World Wide Web Conference (WWW 2004), ACM,2004, pp. 723–731.[33] U. Hustadt, B. Motik, U. Sattler, Data complexity of reasoning in very expressive description logics, in: Proc. of the 19th Int. Joint Conference on ArtificalIntelligence (IJCAI), ACM, 2005, pp. 466–471.[34] P. Ke, U. Sattler, Next steps for description logics of minimal knowledge and negation as failure, in: F. Baader, C. Lutz, B. Motik (Eds.), Proc. of the 2008Description Logic Workshop (DL 2008), 2008.[35] M. Knorr, J.J. Alferes, Querying in EL+IOS Press, 2010, pp. 1079–1080.with nonmonotonic rules, in: Proceedings of the 19th European Conference on Artificial Intelligence, ECAI 2010,[36] M. Knorr, J.J. Alferes, P. Hitzler, Towards tractable local closed world reasoning for the semantic web, in: J. Neves, M.F. Santos, J. Machado (Eds.),Progress in Artificial Intelligence, Springer, 2007, pp. 3–14.[37] M. Knorr, J.J. Alferes, P. Hitzler, A coherent well-founded model for hybrid MKNF knowledge bases, in: M. Ghallab, C.D. Spyropoulos, N. Fakotakis,N. Avouris (Eds.), Proceedings of the 18th European Conference on Artificial Intelligence, ECAI 2008, IOS Press, 2008, pp. 99–103.[38] M. Knorr, P. Hitzler, A comparison of disjunctive well-founded semantics, in: FAInt-07, Foundations of Artificial Intelligence, Workshop at KI 2007, CEURWorkshop Proceedings, vol. 277, 2007.[39] M. Krötzsch, Description Logic Rules, Stud. Semantic Web., vol. 008, IOS Press/AKA, 2010.[40] M. Krötzsch, Efficient inferencing for OWL EL, in: T. Janhunen, I. Niemelä (Eds.), Proc. of the 12th European Conf. on Logics in Artificial Intelligence(JELIA’10), Springer, 2010, pp. 234–246.[41] M. Krötzsch, S. Rudolph, P. Hitzler, Description logic rules, in: Malik Ghallab, Constantine D. Spyropoulos, Nikos Fakotakis, Nikos Avouris (Eds.), Pro-ceedings of the 18th European Conference on Artificial Intelligence, ECAI 2008, IOS Press, 2008, pp. 80–84.[42] M. Krötzsch, S. Rudolph, P. Hitzler, ELP: Tractable rules for OWL 2, in: A. Sheth, S. Staab, M. Dean, M. Paolucci, D. Maynard, T. Finin, K. Thirunarayan(Eds.), Proceedings of the 7th International Semantic Web Conference (ISWC-08), Springer, 2008, pp. 649–664.[43] M. Krötzsch, S. Rudolph, Pascal Hitzler, Complexity boundaries for Horn description logics, in: Proceedings of the 22nd AAAI Conference on ArtificialIntelligence (AAAI’07), AAAI Press, 2007, pp. 452–457.[44] M. Krötzsch, S. Rudolph, Peter H. Schmitt, On the semantic relationship between datalog and description logics, in: Proceedings of the 4th InterationalConference on Web Reasoning and Rule Systems (RR’10), in: LNCS, Springer, 2010, pp. 88–102.[45] M. Krötzsch, F. Maier, A.A. Krisnadhi, P. Hitzler, A better uncle for OWL: Nominal schemas for integrating rules and ontologies, in: Proceedings of the20th International World Wide Web Conference, WWW 2011, March/April 2011, in press, available from http://knoesis.org/library/.[46] A.Y. Levy, M. Rousset, Combining Horn rules and description logics in CARIN, Artificial Intelligence 104 (1–2) (1998) 165–209.[47] V. Lifschitz, Nonmonotonic databases and epistemic queries, in: International Joint Conference on Artifical Intelligence, IJCAI’91, 1991, pp. 381–386.[48] T. Lukasiewicz, A novel combination of answer set programming with description logics for the semantic web, in: E. Franconi, M. Kifer, W. May (Eds.),Proceedings of the 4th European Semantic Web Conference (ESWC 2007), Springer, 2007, pp. 384–398.[49] T. Matzner, P. Hitzler, Any-world access to OWL from Prolog, in: J. Hertzberg, M. Beetz, R. Englert (Eds.), KI 2007: Advances in Artificial Intelligence,30th Annual German Conference on AI, Osnabrück, Germany, September 2007, Springer, 2007, pp. 84–98.[50] B. Motik, R. Rosati, Closing semantic web ontologies, Technical report, University of Manchester, UK, 2006.[51] B. Motik, R. Rosati, A faithful integration of description logics with logic programming, in: Proceedings of the Twentieth International Joint Conferenceon Artificial Intelligence (IJCAI-07), Hyderabad, India, January 6–12, 2007, AAAI Press, 2007, pp. 477–482.[52] B. Motik, R. Rosati, Reconciling description logics and rules, J. ACM 57 (5) (2010) 93–154.[53] B. Motik, U. Sattler, R. Studer, Query-answering for OWL-DL with rules, J. Web Semantics 3 (1) (2005) 41–60.[54] C. Patel, J.J. Cimino, J. Dolby, A. Fokoue, A. Kalyanpur, A. Kershenbaum, L. Ma, E. Schonberg, K. Srinivas, Matching patient records to clinical trials usingontologies, in: ISWC/ASWC, Springer, 2007, pp. 816–829.[55] L.M. Pereira, J.J. Alferes, Well founded semantics for logic programs with explicit negation, in: European Conference on Artifical Intelligence, ECAI, 1992,pp. 102–106.[56] R. Reiter, What should a database know? J. Log. Program. 14 (1–2) (1992) 127–153.[57] R. Rosati, On the decidability and complexity of integrating ontologies and rules, J. Web Semantics 3 (1) (2005) 41–60.[58] R. Rosati, DL+Log: A tight integration of description logics and disjunctive datalog, in: P. Doherty, J. Mylopoulos, C. Welty (Eds.), Tenth InternationalConference on the Principles of Knowledge Representation and Reasoning, KR’06, AAAI Press, 2006, pp. 68–78.[59] A. Tarski, Lattice-theoretic fixpoint theorem and its applications, Pacific J. Math. 5 (2) (1955) 285–309.[60] A. van Gelder, The alternating fixpoint of logic programs with negation, in: Principles of Database Systems, ACM Press, 1989, pp. 1–10.[61] A. van Gelder, K.A. Ross, J.S. Schlipf, The well-founded semantics for general logic programs, J. ACM 38 (3) (1991) 620–650.[62] M.Y. Vardi, Why is modal logic so robustly decidable? in: Neil Immerman, Phokion G. Kolaitis (Eds.), Descriptive Complexity and Finite Models,Proceedings of a DIMACS Workshop, January 14–17, 1996, Princeton University, American Mathematical Society, 1996, pp. 149–184.