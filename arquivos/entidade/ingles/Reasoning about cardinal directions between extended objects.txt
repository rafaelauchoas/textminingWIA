Artificial Intelligence 174 (2010) 951–983Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintReasoning about cardinal directions between extended objects ✩Weiming Liu a, Xiaotong Zhang b, Sanjiang Li a,b,∗, Mingsheng Ying a,ba Centre for Quantum Computation and Intelligent Systems, Faculty of Engineering and Information Technology, University of Technology, Sydney, Australiab State Key Laboratory of Intelligent Technology and Systems, Tsinghua National Laboratory for Information Science and Technology,Department of Computer Science and Technology, Tsinghua University, Beijing 100084, Chinaa r t i c l ei n f oa b s t r a c tArticle history:Received 6 July 2009Received in revised form 18 May 2010Accepted 18 May 2010Keywords:Qualitative spatial reasoningCardinal direction calculusConnected regionsConsistency checkingMaximal canonical solution1. IntroductionDirection relations between extended spatial objects are important commonsense knowl-edge. Recently, Goyal and Egenhofer proposed a relation model, known as the cardinaldirection calculus (CDC), for representing direction relations between connected plane re-gions. The CDC is perhaps the most expressive qualitative calculus for directional infor-mation, and has attracted increasing interest from areas such as artificial intelligence,geographical information science, and image retrieval. Given a network of CDC constraints,the consistency problem is deciding if the network is realizable by connected regions in thereal plane. This paper provides a cubic algorithm for checking the consistency of completenetworks of basic CDC constraints, and proves that reasoning with the CDC is in general anNP-complete problem. For a consistent complete network of basic CDC constraints, our al-gorithm returns a ‘canonical’ solution in cubic time. This cubic algorithm is also adapted tocheck the consistency of complete networks of basic cardinal constraints between possiblydisconnected regions.© 2010 Elsevier B.V. All rights reserved.Representing and reasoning with spatial information is of particular importance in areas such as artificial intelligence(AI), geographical information systems (GISs), robotics, computer vision, image retrieval, natural language processing, etc.While the numerical quantitative approach prevails in robotics and computer vision, it is widely acknowledged in AI andGIS that the qualitative approach is more attractive (see e.g. [6]).A predominant part of spatial information is represented by relations between spatial objects. In general, spatial relationsare classified into three categories: topological, directional, and metric (e.g. size, distance, shape, etc.). The RCC8 constraintlanguage [34] is the principal topological formalism in AI, and has been extensively investigated by many researchers (seee.g. [37,35,43,7,47,46,24,25,23]). When restricted to simple plane regions, RCC8 is equivalent to the 9-Intersection Model(9IM) [9], which is a very influential relation model in GIS.Unlike for topological relations, there are several competitive models for direction relations [10,11,2]. Most of thesemodels approximate a spatial object by a point (e.g. its centroid) or a box. This is too crude in real-world applicationssuch as describing directional information between two countries, say, Portugal and Spain. Recently, Goyal and Egenhofer[16,15] proposed a relation model, known as the cardinal direction calculus (CDC), for representing direction relationsbetween connected plane regions. In the CDC the reference object is approximated by a box, while the primary object is✩This paper is an extended version of Xiaotong Zhang, Weiming Liu, Sanjiang Li, Mingsheng Ying, Reasoning with cardinal directions: An efficientalgorithm, in: AAAI 2008, pp. 387–392.* Corresponding author at: Centre for Quantum Computation and Intelligent Systems, Faculty of Engineering and Information Technology, University ofTechnology, Sydney, P.O. Box 123, Broadway, NSW 2007, Australia.E-mail address: sanjiang.li@uts.edu.au (S. Li).0004-3702/$ – see front matter © 2010 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2010.05.006952W. Liu et al. / Artificial Intelligence 174 (2010) 951–983not approximated. This means that the exact geometry of the primary object could be used in the representation of thedirection. This calculus has 218 basic relations, which is quite large when compared with the RCC8 and Allen’s IntervalAlgebra [1]. Due to its expressiveness, the CDC has attracted increasing interest from areas such as AI [40,41,31], GIS [17],database [39], and image retrieval [19].One basic criterion for evaluating a spatial relation model is the proper balance between its representation expressivityand reasoning complexity. While the reasoning complexity of the point-based and the box-based model of direction relationshas been investigated in depth (see [26] and [2]), there are few works discussing the complexity of reasoning with the CDC.One central reasoning problem with the CDC (and any other qualitative calculus) is the consistency (or satisfaction) prob-lem. Other reasoning problems such as deriving new knowledge from the given information, updating the given knowledge,or finding a minimal representation can be easily transformed into the consistency problem [6]. In particular, given a com-plete network of CDC constraintsN = {v iδi j v j}ni, j=1(each δi j is a CDC relation)(1)over n spatial variables v 1, . . . , vn, the consistency problem is deciding if N is realizable by a set of n connected regions inthe real plane. The consistency problem over the CDC is an open problem. Before this work, we did not know if there areefficient algorithms deciding if a set of CDC constraints are realizable. Even worse, we did not know if this is a decidableproblem. Furthermore, we did not know how to construct a realization for a satisfiable set of CDC constraints.This paper is devoted to solving these problems. We first show each consistent CDC network has a ‘canonical’ solution(Theorem 3) and then devise a cubic algorithm for checking if a complete network of basic CDC constraints is consistent.When the network is consistent, this algorithm also generates a canonical solution. We further show that deciding theconsistency of an arbitrary network of CDC constraints is an NP-Complete problem. This implies in particular that reasoningwith the CDC is decidable.Some restricted versions of the consistency problem have been discussed in the literature. Cicerone and di Felice [3]discussed the pairwise consistency problem, which decides when a pair of basic CDC relations (δ, δ(cid:3)) is consistent, i.e. when{v 1δv 2, v 2δ(cid:3)v 1} is consistent. Skiadopoulos and Koubarakis [40] investigated the weak composition problem [7,24] of theCDC, which is closely related to the consistency problem of basic CDC networks involving only three variables.The CDC algebra is defined over connected regions. A variant of the CDC was proposed in [41], where cardinal directionsbetween possibly disconnected regions are defined in the same way. This calculus, termed the CDCd in this paper, contains511 basic relations. An O (n5) algorithm1 was proposed in [41] for checking the consistency of basic constraints in the CDCd,but the consistency problem over the CDC is still open. Recently, Navarrete et al. [31] tried to adapt the approach used in[41] to cope with connected regions, but their approach turns out to be incorrect (see Remark 3 in Section 6.1 of this paper).The remainder of this paper proceeds as follows. Section 2 recalls basic notions in qualitative spatial/temporal reasoningand introduces the well-known Interval Algebra (IA) [1]. We introduce the CDC algebra in Section 3, where the connectionbetween CDC and IA relations is established in a natural way. Section 4 introduces the notion of canonical solution of aconsistent basic CDC network. Section 5 first proposes an intuitive O (n4) algorithm for consistency checking of completebasic networks and then improves it to O (n3). In Section 6, we first show local consistency is insufficient to decide theconsistency of even basic CDC networks, and then apply our main algorithm to the pairwise consistency problem and theweak composition problem. In Section 7 we adapt the main algorithm for connected regions to solve consistency checkingin two variants of the CDC. Section 8 discusses related work on the computational properties of other qualitative directioncalculi. Conclusions are given in the last section.Codes of the main algorithm are available via http://sites.google.com/site/lisanjiang/cdc, where we also provide illustra-tions for all 757 different consistent pairs of CDC basic relations and the illustration of the weak composition of S W : Wand N E : E. Interested readers may consult that webpage for detailed proofs of some minor results that are omitted in thepresent paper.Table 1 summaries notations used in this paper.2. Qualitative calculi: Basic notions and examplesSince Allen’s Interval Algebra, the study of qualitative calculi or relation models has been a central topic in qualitativespatial and temporal reasoning. This section introduces basic notions and important examples of qualitative calculi.2.1. Basic notionsLet D be a universe of temporal or spatial or spatial-temporal entities. We use small Greek symbols for representingrelations on D. For a relation α on D and two elements x, y in D, we write (x, y) ∈ α or xα y to indicate that (x, y) is aninstance of α. For two relations α, β on D, we define the complement of α, the intersection, and the union of α and β asfollows.1 We note that this algorithm applies to any (possibly incomplete) set of basic constraints.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983953Table 1Notations.NotationsMeaningsα, β, γ , δ, θv i , v jNa, b, cI x(a), I y (a)M(a)χχ (a)a = {ai }ni=1ιx(δ), ι y (δ)ιx(δ, γ )ρ xi jρ yi jNx, N y{Ii }nmiS(a)C(a)ci jpi j , p, p(k)aribiciB(a)i=1, { J i }ni=1∼(Eq. (12))relations (p. 952)spatial variable or interval variable (p. 953)network of constraints (p. 953)regions (p. 954)the x- and y-projective intervals of region a (Eq. (4))the minimal bounding rectangle (mbr) of region a (Eq. (5))tile name variable (p. 955)tile χ of a (p. 955)a set of regions ai (p. 959)the x- and y-projective interval relations of δ (Eq. (10))defined as ιx(δ) ∩ ιx(γ )defined as ιx(δi j, δ ji ) \ (m ∪ mi) (Eq. (14))defined as ι y (δi j , δ ji ) \ (m ∪ mi) (Eq. (15))the x- and y-projective IA networks of N (p. 958)sets of intervals (p. 962)rectangle (p. 962)the frame of a (Eq. (18))the cell set of a (Eq. (20))a cell in C(a) (Eq. (19))pixels, where pi j = [i, i + 1] × [ j, j + 1] (Definition 8)the regularization of ai (Eq. (21))a special digital region contained in mi (Eq. (25))the connected component of bi which has mbr mi (Lemma 5)the Boolean matrix of digital region a (Eq. (30))(cid:2)−α =α ∩ β =α ∪ β =(x, y) ∈ D × D: (x, y) /∈ α(cid:2)(cid:3),(cid:2)(x, y) ∈ D × D: (x, y) ∈ α and (x, y) ∈ β(cid:3)(x, y) ∈ D × D: (x, y) ∈ α or (x, y) ∈ β.(cid:3),We write Rel(D) for the set of binary relations on D. Clearly, the 6-tuple (Rel(D); −, ∩, ∪, ∅, D × D) is a Boolean algebra,where ∅ and D × D are the empty relation and the universal relation on D, respectively.A finite set B of nonempty relations on D is jointly exhaustive and pairwise disjoint (JEPD) if any two entities in D arerelated by one and only one relation in B. We write (cid:8)B(cid:9) for the subalgebra of Rel(D) generated by B, i.e. the smallestsubalgebra of the Boolean algebra Rel(D) which contains B. Clearly, relations in B are atoms in the Boolean algebra (cid:8)B(cid:9).We call (cid:8)B(cid:9) a qualitative calculus on D, and call relations in B basic relations of the calculus. A similar definition was givenby Ligozat and Renz [27], where B was required to be closed under converse and contain idD — the identity relation on D.For two relations α, β on D, the converse of α and the composition of α and β are defined as usual.(cid:2)α∼ =α ◦ β =( y, x) ∈ D × D: (x, y) ∈ α,(cid:4)(cid:2)(x, z) ∈ α and (z, y) ∈ β(x, y) ∈ D × D: (∃z ∈ D)(cid:5)(cid:3).(cid:3)For two relations α, β in (cid:8)B(cid:9), it is possible that α∼or α ◦ β is not in (cid:8)B(cid:9), i.e., they cannot be represented as the unionof some relations in B. We say a qualitative calculus (cid:8)B(cid:9) is closed under composition (closed under converse, resp.) if thecomposition of any two relations (the converse of any relation, resp.) in (cid:8)B(cid:9) is still a relation in (cid:8)B(cid:9).An important reasoning problem in a qualitative calculus (cid:8)B(cid:9) is the consistency (or satisfaction) problem. Let A bea subset of (cid:8)B(cid:9). A constraint over A has the form (xγ y) with γ ∈ A. For a set of variables V = {v i}ni=1, and a set ofconstraints N involving variables in V , we say N is a complete constraint network (or network for short) if there exists aunique constraint (v iγ v j) in N for each pair (i, j). A network N is said to be over A if each constraint in N is over A. Inparticular, we say a network is a basic network if it is over B. We stress that, in this paper, a basic network of constraints ora network of basic constraints is always complete, i.e. a basic constraint is specified for each pair of variables.i, j=1 is consistent (or satisfiable) if there is an instantiation {ai}nA constraint network N = {v iγi j v j}ni=1 in D such thati=1 a solution of N . The consistency problem over A is the(ai, a j) ∈ γi j holds for all 1 (cid:2) i, j (cid:2) n. In this case, we call {ai}ndecision problem of the consistency of constraint networks over A.2.2. The Interval AlgebraThe Interval Algebra (IA) [1] is a qualitative calculus defined on the set of (closed and bounded) intervals in the real line.The IA is generated by a set Bint of 13 JEPD relations between intervals (see Table 2).The IA is closed under converse and composition. It is a relation algebra in the sense of Tarski [44]. The computationalcomplexity of reasoning with the IA has been extensively investigated by researchers in artificial intelligence (see [33,21]954W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Table 2Basic IA relations and their converses, where x = [x−, x+], y = [ y−, y+].RelationbeforemeetsoverlapsstartsduringfinishesequalsSymbolConversepmosdfeqpimioisidifieqMeaning− < xx− < xx− < yx− = yx− < xy− < xy− = yx+ < y+ = y− < x− < x− < x− < x− < x− < y− < y+ < y+ < y+ < y+ = y+ = y+++++++and references therein). In particular, Allen [1] introduced the important notion of path-consistency for networks of IAconstraints and Valdés-Pérez [45] proved that path-consistency suffices to decide the consistency of basic IA networks.The definitions of basic IA relations as given in Table 2 concern only the ordering of the endpoints of intervals. Thissuggests that different solutions of the same basic IA network respect the same ordering. In particular, we could chooseintervals that have integer endpoints.+Definition 1 (canonical set of intervals [28]). Suppose l = {[li=1 is a set of intervals. Let E(l) be the set of endpoints ofiintervals in l. We say l is a canonical set of intervals iff E(l) = [0, M] ∩ Z, where M is the largest number in E(l). A solutionof a basic IA network is called a canonical interval solution if it is a canonical set of intervals.−i , l]}nClearly, if l = {[l−i , l+i]}ni=1 is a canonical set of intervals, then each llet M be the largest number in E(l). Then M < 2n and for any 0 (cid:2) l (cid:2) M there exists i such that lfollowing theorem shows that each consistent basic IA network has a unique canonical solution.−i(l+i ) is an integer between 0 and 2n − 1. Moreover,= l. The= l or l+i−iTheorem 1. Suppose N = {v iλi j v j}ni, j=1 is a basic IA network. If N is consistent, then it has a unique canonical interval solution.Proof. Suppose l = {[lh : E(l) → {0, 1, . . . , n−h = {[h(li ), h(lsolution of N . Such a solution is clearly unique. (cid:2)i=1 is a solution of N . Write α0 < α1 < · · · < αn∗ for the ordering of E(l) = {l]}n−}ni , li=1. Define∗} as h(x) = k if x = αk. Because only the ordering of endpoints of intervals matters in a solution,∗] ∩ Z. Therefore, h is a canonical intervali=1 is also a solution of N . Moreover, it is clear that E(h) = [0, n+i )]}n−i , l+i+i3. Cardinal direction calculusIn this section we first introduce the cardinal direction calculus (CDC) [16,40] and then establish its connection with theInterval Algebra. In particular, we will associate two basic IA networks Nx and N y with each basic CDC network N , suchthat N is consistent only if Nx and N y are consistent.3.1. Direction relation matrixThe CDC is a qualitative calculus defined for extended objects in the plane.Definition 2 (plane region). A subset a of the plane is called a region if a is a nonempty regular closed subset, i.e. if a = a◦,◦and x are the (topological) interior and the (topological) closure of a subset x of the plane, respectively.where xConnectedness is an important topological property of plane regions.Definition 3 (connected region and simple region). A region a is said to be connected if it has a connected interior aany nonempty open sets u, v in the plane, if u ∪ v = atopologically equivalent to a closed disk., i.e., for, then u ∩ v is nonempty. A connected region is called simple if is◦◦By the above definition, a connected region has a connected interior. Regions with this property are often called stronglyconnected elsewhere. Note that the boundary of a connected region may still be disconnected. In contrast, simple regionshave connected interior as well as connected boundary. Examples of plane regions are illustrated in Fig. 1.For a bounded set b in the real plane, let−x(cid:2)(b) = inf−(b) = infyx: (x, y) ∈ b(cid:2)y: (x, y) ∈ b(cid:3),(cid:3),+x(b) = sup+(b) = supy(cid:2)(cid:3)x: (x, y) ∈ b,(cid:3)(cid:2)y: (x, y) ∈ b.(2)(3)W. Liu et al. / Artificial Intelligence 174 (2010) 951–983955Fig. 1. Examples of plane regions, where a is a simple region, b, c are connected but non-simple regions, and d, e are not connected regions.Fig. 2. A bounded connected region b (a) and its 9-tiles (b).dir(b, a) = dir(b, a(cid:3)) =(cid:6)(cid:7)0 0 01 1 01 1 0, dir(a, b) =(cid:6)(cid:7)0 1 10 1 10 0 0, dir(a(cid:3), b) =(cid:6)(cid:7)0 1 10 0 10 0 0Fig. 3. Illustrations of basic CDC relations.We writeI x(b) =Let(cid:4)−x+(b), x(cid:5),(b)I y(b) =(cid:4)−y(b), y+(cid:5).(b)M(b) = I x(b) × I y(b).(4)(5)We call M(b) the minimum bounding rectangle (mbr) of b, and call I x(b) and I y(b) the x- and y-projection of b, respectively.Clearly, M(b) is the smallest rectangle which contains b and has sides parallel to the axes.By extending the four edges of M(b), we partition the plane into nine tiles, denoted as N W (b), N(b), N E(b), W (b),O (b), E(b), S W (b), S(b), S E(b) (see Fig. 2(b)). Note that each tile is a (bounded or unbounded) connected region, and theintersection of two tiles is of dimension lower than two.WriteTileName = {N W , N, N E, W , O , E, S W , S, S E}(6)for the set of tile names. In the remainder of this paper, we often use the variable symbol χ to address a tile name inTileName. For a bounded region b, we use χ (b) to address a tile of b.Since the partition only concerns the mbr of b, we haveProposition 1. For two bounded connected regions b, c, if M(b) = M(c), then χ (b) = χ (c) for each χ ∈ TileName. In particular,χ (b) = χ (M(b)) for each χ ∈ TileName.The notion of direction relation matrix was first proposed by Goyal and Egenhofer [16] for representing the cardinaldirection between extended spatial objects.956W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Table 3Examples of valid direction relation matrices (M1 and M2) and invalid direction relation matrix (M3)for bounded connected regions.M1 =(cid:6)(cid:7)1 1 00 1 00 0 0M2 =(cid:7)(cid:6)1 1 11 0 11 0 1M3 =(cid:7)(cid:6)1 0 10 1 10 0 1Fig. 4. Iconic representations of valid and invalid matrices in Table 3.Definition 4 (direction relation matrix). Suppose a, b are two bounded connected regions. Take b as the reference object, anda as the primary object. The direction of a to b is encoded in a 3 × 3 Boolean matrix(cid:9)(cid:8)dN W dNdW d OdS W dSdN EdEdS Edir(a, b) =wheredχ = 1 ⇔ a◦ ∩ χ (b) (cid:14)= ∅,(cid:10)χ ∈ {N W , N, N E, W , O , E, S W , S, S E}(cid:11)(7)(8)◦is the interior of a (see Fig. 3). We call a 3 × 3 Boolean matrix M a direction relation matrix, or a valid matrix, ifwhere athere exist bounded connected regions a, b such that M = dir(a, b).Remark 1. The original description of the direction relation matrix in [16,15] lacks formality and does not consider limitcases. Formal definitions of this model appear in [40] and [3]. These two models differentiate only in the limit cases. Ourdefinition of direction relation matrix is in accord with that of [40]. In Section 6.2 we will argue that this model is moreappropriate than the one given in [3].Remark 2. In their work [16,15], Goyal and Egenhofer considered cardinal directions between simple regions, which are,roughly speaking, connected regions without holes. This convention was adopted by other researchers, e.g. [40,3,31]. In thispaper, we interpret spatial objects as bounded connected regions, which may have holes. This assumption is arguably morepragmatic. Moreover, as we will see in Section 7.2, the generalization from simple regions to connected regions does notaffect the consistency of cardinal direction constraints. In particular, for each valid matrix M, there exist simple regions a, bsuch that M = dir(a, b).Goyal and Egenhofer identified altogether 218 valid matrices.Proposition 2. (See [15].) A 3 × 3 Boolean matrix is a direction relation matrix if and only if it is nonzero and 4-connected, i.e. nonzeroentries can be joined with vertical or horizontal lines without crossing zero entries.Table 3 gives examples of valid and invalid matrices.Each valid matrix M uniquely determines a direction relation as follows:δ(M) =(a, b): a, b are bounded connected regions and dir(a, b) = M(cid:2)(cid:3).(9)In the remainder of this paper we make no distinction between a valid matrix M and the direction relation δ(M) it repre-sents. Write Bdir for the set of cardinal directions represented by these valid matrices. Because each ordered pair of boundedconnected regions determines a unique direction relation matrix, Bdir is a JEPD set of relations. The cardinal direction cal-culus (CDC) is defined to be the qualitative calculus generated by Bdir over the set of bounded connected regions.As usual, we call a relation in Bdir a basic CDC relation. For a basic CDC relation, its matrix provides an intuitive repre-sentation. In particular, we can easily transform a valid matrix into an iconic representation of the basic relation [15]. Fig. 4gives iconic representations for the matrices in Table 3. Note that the grey region in the icon of M3 is not a connectedregion (cf. Definition 3). This explains why M3 is not a valid matrix.A different system of notations is introduced in [40] for CDC relations.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983957Definition 5 (single-tile, multi-tile, component). A basic CDC relation is called single-tile if its matrix has only one nonzeroentry, and called multi-tile otherwise. We say a single-tile relation [sχ ]χ ∈TileName is a component of a multi-tile relation[dχ ]χ ∈TileName, if sχ (cid:2) dχ for each tile name χ ∈ TileName.The nine single tile relations are written as N W (northwest), N (north), N E (northeast), W (west), O (same), E (east),S W (southwest), S (south), S E (southeast), respectively. A multi-tile relation δ is written as δ1 : δ2 : · · · : δk (k (cid:2) 9), where δi(1 (cid:2) i (cid:2) k) are all components of δ. Take the two valid relations in Fig. 4 as examples. We have δ(M1) = N W : N : O andδ(M2) = S W : W : N W : N : N E : E : S E.In order to describe the relative position of two connected regions a, b with the CDC, knowing the direction of b to a is(cid:3)but the direction of anot enough [15]. Fig. 3 shows an example, where the direction of b to a is the same as that of b to a(cid:3), b). This is drastically different from the IAto b is different from that of aand many other well-known qualitative calculi, where the basic relation of a to b is uniquely determined by that of b to a.We will investigate this pairwise consistency problem in detail in Section 6.2.to b, i.e. dir(b, a) = dir(b, a(cid:3)) but dir(a, b) (cid:14)= dir(a(cid:3)The next subsection establishes the connection between the CDC and the IA.3.2. Projective IA networksThe connection between the CDC and the IA is established via the notion of projective interval relations.Definition 6 (projective interval relation). For a basic CDC relation δ, the x-projective interval relation of δ is defined asιx(δ) =(cid:2)(cid:10)(cid:11): (a, b) ∈ δI x(a), I x(b)(cid:3),(10)where I x(a) and I x(b) are the x-projective intervals of a and b, respectively.Although ιx(δ) is called a projective interval relation, it is not immediately clear that ιx(δ) is indeed a relation in the IA.The following proposition, however, confirms this.Proposition 3. Suppose δ is a basic CDC relation. Then the x-projective interval relation ιx(δ) is one of the following IA relationsp ∪ m,s ∪ d ∪ f ∪ eq,pi ∪ mi,o ∪ fi,oi ∪ si,di.(11)Proof. See Appendix A. (cid:2)Appendix A also gives a method for computing the projective interval relation of a basic CDC relation. Take the two validrelations in Table 3 as examples, we have ιx(M1) = o ∪ fi and ιx(M2) = di.For a pair of basic CDC relations (δ, γ ), write∼ιx(δ, γ ) = ιx(δ) ∩ ιx(γ ),(12)where ιx(γ )∼is the converse of ιx(γ ) in the IA. The next proposition examines what kind of IA relation ιx(δ, γ ) can be.Proposition 4. For a pair of basic CDC constraints (δ, γ ), ιx(δ, γ ) is either empty or an IA relation in B∗int, whereB∗int= {o, s, d, f, eq, fi, di, si, oi} ∪ {p ∪ m, pi ∪ mi}.Proof. See Appendix A. (cid:2)(13)For example, if δ is the single-tile relation W , and γ is the multi-tile relation N E : E : S E, then ιx(δ, γ ) is the non-basicIA relation p ∪ m.The next proposition follows immediately.Proposition 5. For a pair of basic CDC relations (δ, γ ), if (a, b) is a solution of {v 1δv 2, v 2γ v 1}, then (I x(a), I x(b)) ∈ ιx(δ, γ ).Proof. From (a, b) ∈ δ and (b, a) ∈ γ we have (I x(a), I x(b)) ∈ ιx(δ) and (I x(b), I x(a)) ∈ ιx(γ ). Therefore, (I x(a), I x(b)) ∈ ιx(δ) ∩ιx(γ )∼ = ιx(δ, γ ). (cid:2)This result can easily be extended to CDC constraint networks.Proposition 6. A basic CDC constraint network N = {v iδi j v j}nconsistent, where ιxi j= ιx(δi j, δ ji).i, j=1 is consistent only if the IA constraint network {v iιxi j v j}ni, j=1 is958W. Liu et al. / Artificial Intelligence 174 (2010) 951–983illus.(i, j)(1,2)(1,3)(2,3)δi j(cid:6)(cid:6)(cid:6)(cid:7)(cid:7)(cid:7)0 1 10 0 10 0 01 1 00 1 00 0 00 0 01 0 00 0 0δ ji(cid:6)(cid:6)(cid:6)(cid:7)(cid:7)(cid:7)0 0 01 1 01 1 00 0 00 0 10 1 10 0 10 0 10 0 1Fig. 5. A basic CDC network and its projective IA basic networks.ρ xi joiopρ yi joioidProof. Suppose {ai}nwe know (I x(ai), I x(a j)) is an instance of ιxi=1 is a solution to N . Then {I x(ai)}ni j for each pair of i, j. (cid:2)i=1 is a solution to {v iιxi j v j}ni, j=1. This is because, by Proposition 5,Similar notions and results also apply to the y-direction.The consistency of the IA network appearing in Proposition 6 can be further reduced to the consistency of a basic IAnetwork.Definition 7 (projective IA networks). Let N = {v iδi j v j}ni, j=1 be a basic CDC network. For each i, j, defineρ xi jρ yi j= ιxi j= ι yi j\ (m ∪ mi),\ (m ∪ mi),= ιx(δi j, δ ji) and ι ywhere ιxi ji jnetworks of N , respectively.= ι y(δi j, δ ji). We call Nx = {v iρ xi j v j}ni, j=1 and N y = {v iρ yi j v j}ni, j=1 the x- and y-projective IA(14)(15)The following result shows that the IA networks {v iιxi j v j}ni, j=1 and {v iι yi j v j}ni, j=1 are consistent iff Nx and N y are consis-tent.Proposition 7. An IA network N = {v iιi j v j}n(cid:12)ιi j = ιi j \ (m ∪ mi).i, j=1 over B∗int (see Eq. (13)) is consistent iff (cid:12)N = {v i(cid:12)ιi j v j}ni, j=1 is satisfiable, whereProof. We first observe that (cid:12)N is a refinement of N . Therefore, if (cid:12)N is consistent, then N is also consistent. On the otherhand, suppose {I i = [ui=1 a meet point if there exist i (cid:14)= j}nj , i.e. Ii meets I j . We can prove that (cid:12)N has a solution by using induction on the number K of meet points.+such that uiDetails are omitted. (cid:2)i=1 is a solution to N . We call a point u ∈ M = {u]}n−i , u−i , u= u+i+i−As a corollary of Propositions 6 and 7, we knowTheorem 2. A basic CDC network of constraints N = {v iδi j v j}nand N y = {v iρ yi, j=1 are consistent.i j v j}ni, j=1 is consistent only if the projective IA networks Nx = {v iρ xi j v j}ni, j=1The above theorem establishes a necessary condition for the consistency of basic CDC network.Example 1. Fig. 5 specifies a basic CDC network N = {v iδi j v j}3and N y = {v iρ yi, j=1. For each pair of i (cid:14)= j, a solution of {v iδi j v j, v jδ ji v i} is illustrated.i j v j}3i, j=1, and gives its projective IA networks Nx = {v iρ xi j v j}3i, j=1In the next section, we prove that each consistent CDC network N has a solution {ai}n{I y(ai)}ni=1 are solutions to the projective IA networks Nx and N y , respectively.i=1 such that {I x(ai)}ni=1 andW. Liu et al. / Artificial Intelligence 174 (2010) 951–983959Fig. 6. A pixel p and its 4-neighbors (pixels with mark “c”), and a digital region a.4. Canonical solutionSuppose N = {v iδi j v j}ni, j=1 is a consistent basic CDC network. We show N has a canonical solution in a sense similar tothat for IA networks.Definition 8 (pixel, digital region, digital solution). A pixel is a rectangle pi j = [i, i + 1] × [ j, j + 1], where i, j are integers.A region a is digital if a is composed of pixels, i.e. pi j ∩ ai=1 of a basic CDC network isdigital if each ai is a digital region.◦ (cid:14)= ∅ iff pi j ⊆ a. A solution a = {ai}nFig. 6 illustrates a pixel p and a digital region a.Definition 9 (canonical solution). Let N be a consistent basic CDC network, and let Nx and N y be the x- and y-projectiveIA networks of N (cf. Definition 7), respectively. A solution a = {ai}ni=1 of N is said to be canonical if it is a digital solutionand {I x(ai)}ni=1 are the canonical solutions of Nx and N y , respectively.i=1 and {I y(ai)}nIn this section, we show each consistent CDC network has a canonical solution. To this end, we first introduce somenotions and properties of digital regions.Definition 10 (4-neighbors, 4-connected, connected component). The 4-neighbors of a pixel pi j are pi−1, j, pi+1, j, pi, j−1, pi, j+1.Two pixels p, q are said to be 4-connected in a digital region a if there exists a series of k + 1 pixels p = p(0), p(1), . . . ,p(k−1), p(k) = q in a such that p(s) is a 4-neighbor of p(s−1) for any 1 (cid:2) s (cid:2) k. We say a digital region a is 4-connected ifany two pixels contained in a are 4-connected in a. For digital regions a, c, we say c is a connected component of a if c is a4-connected subset of a, and for any 4-connected subset c(cid:3) ⊆ c or c ∩ ccontains no pixel.of a, we have c(cid:3)(cid:3)For example, the 4-neighbors of p in Fig. 6 are the four pixels with mark “c”. The digital region a composed of pixelswith mark “a” is not 4-connected and has two 4-connected components.The following proposition shows that 4-connectedness is equivalent to connectedness as far as digital regions are con-cerned.Proposition 8. A bounded digital region is a connected region iff it is 4-connected.Proof. Recall we require a connected region has a connected interior. This can be proved by using induction on the numberof pixels contained in the digital region. Details are omitted. (cid:2)4.1. Regular solutionSuppose a = {ai}ni=1 is a set of n bounded connected regions. We show a can be regularized without changing the CDCrelations between any two regions in a.] × [ y+−Write [xi , xi−i , yα0 < α1 < · · · < αnx+i] for M(ai), the mbr of ai . Suppose+−i : 1 (cid:2) i (cid:2) n}, andis the ordering of real numbers in {xi , xβ0 < β1 < · · · < βn y(17)+−+is the ordering of real numbers in { yi : 1 (cid:2) i (cid:2) n}i : 1 (cid:2) i (cid:2) n}, where nx + 1 and n y + 1 are the cardinalities of {xi , x−+i : 1 (cid:2) i (cid:2) n}, respectively. Extending edges of each rectangle M(ai) until meeting the boundary of the rectangleand { yi , y[α0, αnx] into cells. We next show these cells can be used to compose a solution] × [β0, βn yof N .], we partition [α0, αnx] × [β0, βn y−i , y(16)960W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Definition 11 (frame, cell set, regularization). Suppose a = {ai}ni=1 is a set of bounded connected regions. Denote byFig. 7. Illustration of regularization.],] × [β0, βn yS(a) = [α0, αnxci j = [αi, αi+1] × [β j, β j+1]C(a) = {ci j: 0 (cid:2) i < nx, 0 (cid:2) j < n y},ariar =c ∈ C(a): c ∩ a(cid:3)ni=1.(cid:2)ari(cid:13)(cid:2)(cid:14)= ∅=◦i(cid:3)(0 (cid:2) i < nx, 0 (cid:2) j < n y),(i = 1, . . . , n),(18)(19)(20)(21)(22)We call S(a) the frame of a, call ci j a cell of a, and call C(a) the cell set of a, and call ar the regularization of a (see Fig. 7).Proposition 9. For a set of connected regions a = {ai}nC(a) = C(ar), where ar = {ari}ni=1 is the regularization of a.i=1, we have ai ⊆ ari and M(ai) = M(ari ) for each i, and S(a) = S(ar) andProof. Straightforward. (cid:2)The regularization is also a solution.Proposition 10. Suppose a = {ai}ni=1 is a solution to a basic CDC network N . Then ar = {arii=1 is also a solution to N .}nis connected. For each pair of i, j, to show dir(ai, a j) = dir(arj), it suffices to show fori )◦ ∩ χ (arj) = M(a j), we know by Proposition 1 thatj) = ∅. Because M(ar◦i )◦ ∩ χ (a j) = ∅, by ai ⊆ ari )◦ ∩ χ (a j) = ∅. If (ar∩ χ (a j) = ∅ iff (arj) = χ (a j) for any χ . Therefore, we need only show ai ,ii )◦ ∩ χ (a j) (cid:14)= ∅. There exists a cell cst ⊆ χ (a j) such that cst ⊆ ar∩ χ (a j) = ∅. On the other hand, suppose (ari .Proof. It is clear that each arieach tile name χ that aχ (ar◦we know aiThis is possible iff cst ∩ ais nonempty. Therefore, we know a∩ χ (a j) = ∅ iff (ar∩ χ (a j) (cid:14)= ∅. (cid:2)i , ar◦i◦i◦iDefinition 12 (regular solution). A solution a = {ai}n}nregularization ar = {ari=1.ii=1 of a basic CDC network N is called regular if a is the same as itsThe regularization of a solution is regular, i.e. (ari )r = ari for each 1 (cid:2) r (cid:2) n. This is because ar and a have the same frameand the same cell set.Example 1 (continued). Fig. 7 illustrates how to transform a solution {a1, a2, a3} (Fig. 7(a)) of the constraint network spec-ified in Fig. 5 into a regular solution {ar} (Fig. 7(d)). The frame and the cell set are illustrated in Fig. 7(b) and (c),respectively.1, ar2, ar3The following proposition asserts that canonical solutions (see Definition 9) are regular solutions.Proposition 11. Let N be a basic CDC network. Suppose a = {ai}ni=1 is a canonical solution of N . Then a is a regular solution of N .Proof. Construct the frame and the cell set of a as in Definition 11. By Definition 9, we know {I x(ai)}ni=1 arethe canonical solutions of Nx and N y . It is easy to see that αi = i and β j = j for any 0 (cid:2) i (cid:2) nx and 0 (cid:2) j (cid:2) n y . Moreover,◦each cell ci j is exactly the pixel pi j = [i, i + 1] × [ j, j + 1]. Because ai is a digital region, it is clear a∩ pst isii for each 1 (cid:2) i (cid:2) n. Therefore, a is a regular solution of N . (cid:2)nonempty iff pst ⊆ ai . This implies ai = ari=1 and {I y(ai)}n∩ cst = a◦iW. Liu et al. / Artificial Intelligence 174 (2010) 951–9839614.2. Meet-free solutionFig. 8. Illustration of meet-freeing.i=1 is a regular solution of a basic CDC network N = {v iδi j v j}n\ (m ∪ mi), it is possible that {I x(ai)}ni j v j}nSuppose a = {ai}nis a solution of {v iιxTake the basic CDC network N described in Fig. 5 as example. Fig. 7(d) gives a regular solution {ariand I x(arintroduce the notion of meet-free solution.i=1 is not a canonical solution of N . To transform {ar}3i, j=1. By Proposition 6 we know {I x(ai)}ni=1 is not a solution of Nx = {v iρ xi=1i, j=1.i=1 of N . Since I x(ar}32)i=1 into a canonical solution of N , we}33) meet at x = α2, {ari, j=1. Because ρ xi j v j}n= ιxi ji jiiDefinition 13 (meet-free solution). A solution a = {ai}nI y(ai) does not meet I y(a j).i=1 of N is meet-free if for any i, j, I x(ai) does not meet I x(a j), andi=1 is a solution of N and ar = {arSuppose a = {ai}n−+−+−] and M(a j) = [x] × [ y[xi , yi , xj , xij++−i : 1 (cid:2) i (cid:2) n}. We call αk = xof {xi an x-meet point (cf. Fig. 8(a)). Clearly, k > 0 andi , x+−(cid:2) αk−1 < xxii+] meet at x direction, i.e. xi+= αk < αk+1 (cid:2) xj .−= xj] × [ y−j , y+j+iii=1 is its regularization (cf. Fig. 7(a) and (d)). Suppose M(ai) =}n−j . Recall α0 < · · · < αnx is the ordering= xWrite α∗ = (αk + αk+1)/2. The line x = α∗We next show how to delete this meet point by transforming ar into another regular solution. Fig. 8 illustrates the process.−divides each cell ckl (0 (cid:2) l < n y ) into two equal parts, written in order ckl and−+kl . For each 1 (cid:2) s (cid:2) n and each 0 (cid:2) l < n y , if ckl ⊆ arkl from arcs (cf. Fig. 8(a)). The remaining part∗s=1 is also a regular solution of N .}nof arsSuch a modification introduces no new meet points. Continuing this process for at most n times, we will have a solution thathas no x-meet points. The same procedures can be applied to y-meet points. In this way we obtain a meet-free solution.s , is still connected, and it is straightforward to show that a∗ = {as but ck−1,l (cid:14)⊆ ars, written as as then delete c∗The meet-free solution has the same frame but different cell set as a.Proposition 12. Each consistent basic CDC network has a regular solution that is meet-free.Proof. See Appendix B. (cid:2)The next step is to transform regions appearing in a regular and meet-free solution into digital regions.4.3. Canonical solutionSuppose a = {as}n+−s=1 is a regular and meet-free solution of N . As in Section 4.1, we write M(ai) = [xi , xi+],i], and C(a) = {ci j: 0 (cid:2) i < nx, 0 (cid:2) j < n y} for the frame and the cell set of a, respectively. Since a] × [ y−i , y] × [β0, βn yS(a) = [α0, αnxis regular, each ai is composed of a subset of cells in C(a).s=1 into a digital solution a+ = {aWe transform a = {as}n[0, nx] × [0, n y] such that+s}ns=1, where each a+sis a digital region contained in S(a+) =A pixel pi j is contained in a+siff the cell ci j in C(a) is contained in as.That is,+sa=(cid:13){pi j: ci j ⊆ as, 0 (cid:2) i < nx, 0 (cid:2) j < n y}.(23)+sClearly, ais a connected digital region. Fig. 9 illustrates the process.The following lemma shows that a+is also a solution of N .962W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Fig. 9. Transform a regular solution (a) into a digital one (b).Lemma 1. Suppose a = {as}nalso a regular and meet-free solution of N .s=1 is a regular meet-free solution of a basic CDC network N . Then a+ = {a+s}ns=1 constructed as above isProof. It is clear that S(a+) = [0, nx] × [0, n y] and C(a+) = {pst : 0 (cid:2) s < nx, 0 (cid:2) t < n y}, and pst ∩ (ais contained in aTherefore, I x(aimplies that a+is nonempty iff pst++i )r = a].i ) = [s1, s2] iff I x(ai) = [αs1 , αs2. Hence, (a++j ) iff I x(ai) meets I x(a j). Similar conclusion holds for the y-direction. Since a is meet-free, thisi ) meets I x(ais regular. It is easy to see I x(afor each i, and a+is also meet-free.i )◦+i+i+For each i, j and each tile name χ , by Eq. (23) we know a pixel pst is contained in a tile χ (acell cst is contained in χ (a j). Therefore, a pixel pst is contained in awe have dir(ai, a j) = dir(aj ) for any i, j. Therefore, the assignment a+ = {a+i , a++s+j ) iff the corresponding+j ) iff cst is contained in ai ∩ χ (a j). By definition+i∩ χ (as=1 is also a solution of N . (cid:2)}nThe following lemma proves that a+is a canonical solution.Lemma 2. Suppose a = {as}ncanonical solutions of the projective IA networks Nx and N y , respectively, where as=1 is a regular meet-free solution of a basic CDC network N . Then {I x(a++s )}ns )}nis the digital region defined in Eq. (23).s=1 and {I y(a+ss=1 are the++i ), I x(aProof. Take the x-direction as example. Because a+ = {ai=1 is a solution to N , we know by Proposition 5 that}n+. Since a+j )) is an instance of ιx(δi j) ∩ ιx(δ ji)∼j ) for any two i, j. Thisis meet-free, I x(a(I x(aimplies that l = {I x(ai j v j}ni j is defined by Eq. (14). By thechoice of αi (Eq. (16)), we can easily show E(l), the set of endpoints of intervals in l, equals to [0, nx] ∩ Z. By Definition 1,l is a canonical set of intervals. Therefore, it is the canonical solution of Nx. (cid:2)i=1 is a solution to the basic IA network Nx = {v iρ x+i ) cannot meet I x(ai, j=1, where ρ x+i )}n+iAs a corollary of Lemmas 1 and 2, we know a+is a canonical solution of N .Theorem 3. Each consistent basic CDC network has a canonical solution.In the next subsection, we show how to construct a canonical solution directly.4.4. Maximal canonical solutionSuppose N = {v iδi j v j}ni, j=1 is a consistent basic CDC network. By Theorem 2, we know the projective IA networks Nxand N y are consistent.Lemma 3. Let N = {v iδi j v j}nof Nx and N y , respectively. Let mi = I i × J i for each i. If {ai}n1 (cid:2) i (cid:2) n.i, j=1 be a consistent basic CDC network. Suppose {I i}ni=1 are the canonical interval solutionsi=1 is a canonical solution of N , then we have ai ⊆ M(ai) = mi fori=1 and { J i}nProof. By Definition 9, we know I x(ai) = I i and I y(ai) = J i for each i. Therefore, ai ⊆ M(ai) = I i × J i = mi . (cid:2)⎡For each constraint δi j in N , we assumedNi jd Oi jdSi jdN Wi jdWi jdS Wi jdN Ei jdEi jdS Ei jδi j =⎦ ,⎣⎤(24)W. Liu et al. / Artificial Intelligence 174 (2010) 951–983963Fig. 10. Illustration of disconnected bi .χi j∈ {0, 1} for each tile name χ ∈ TileName. Suppose {ai}ni=1 is a canonical solution of N . By Lemma 3, we knowwhere dM(a j) = m j for each j. As a consequence of Proposition 1, we know χ (a j) = χ (M(a j)) = χ (m j) for each χ ∈ TileName.∩ χ (m j) = ∅ because (ai, a j) ∈ δi j . This means that ai does not contain pixels which areMoreover, if dcontained in χ (m j). In other words, if d= 0, then pixels contained in χ (m j) are disallowed in ai .= 0, then aχi j◦iχi jLemma 4. Let N and mi be as in Lemma 3. For each i, define(cid:13)(cid:2)(cid:4)pst ⊆ mi: (∀ j)(∀χ )dχi jbi == 0 → pst (cid:14)⊆ χ (m j)(cid:5)(cid:3).Suppose {ai}ni=1 is a canonical solution of N . Then ai ⊆ bi for each i.Note that if we write(cid:2)D i =pst ⊆ mi: (∃ j, χ ) such that pst ⊆ χ (m j) and d(cid:3),= 0χi j(25)(26)then D i is the set of all pixels in mi that cannot appear in the instantiation of v i in any canonical solution as a result ofviolating some constraint in N . It is easy to see that(cid:13)bi ={pst ⊆ mi: pst (cid:14)=∈ D i}.(27)The following example shows that bi is not always a connected region.Example 2. Let N = {v 1(W : O : E)v 2, v 2(N : O : S)v 1, v 1 O v 3, v 3(N : N E : E : S E : S)v 1, v 2 O v 3, v 3(W : N W : N : N E :E)v 2}. By computing the canonical solutions of Nx and N y , we havem1 = [0, 3] × [1, 2],m2 = [1, 2] × [0, 3],m3 = [0, 4] × [0, 4].By excluding impossible pixels from mi , we obtain the three digital regions b1, b2, b3 as shown in Fig. 10(a). Note thatb1 = m1 and b2 = m2 are both connected. However, b3 has two connected components, one consists of the pixel p00, theother is obtained by excluding p00 from b3. Write c3 for this component. It is clear that M(c3) = m3. Let c1 = b1, c2 = b2.The assignment {c1, c2, c3} clearly satisfies all the constraints in N .In the following, we show that, if N is consistent, then the digital region bi defined in Eq. (25) has a unique connectedcomponent (cf. Definition 10) ci such that M(ci) = M(bi) = mi . We first note that each connected sub-region of biiscontained in a unique connected component of bi . This is because different components of bi have no common interiorpoints.Lemma 5. Let N and mi be as in Lemma 3, and let bi be as in Eq. (25). Suppose {ai}nconnected component of bi which contains ai . Then M(ci) = mi .i=1 is a canonical solution of N . Let ci be theProof. Because ai ⊆ ci ⊆ bi ⊆ mi and M(ai) = mi , we know M(ci) = mi . (cid:2)The above lemma shows that, if N is consistent, then each bi has a connected component ci such that M(ci) = M(bi) =mi . Is this component unique? The answer is yes! This is because, if two connected digital regions have the same mbr, thenthey share one pixel in common.Lemma 6. Let a and b be two connected digital regions. If a◦ ∩ b◦ = ∅, then M(a) (cid:14)= M(b).964W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Fig. 11. Canonical interval solutions (a) and the maximal canonical solution (b).◦ = ∅Proof. Without loss of generality, suppose M(a) = [0, n1] × [0, n2], where n1, n2 are positive integers. Suppose aand M(a) = M(b). Since M(a) = [0, n1] × [0, n2], a contains a pixel p0s and a pixel pn1−1,t for some integers 0 (cid:2) s, t < n2.Because a is a connected digital region, there is a path π (i.e. a sequence of 4-connected pixels in a) that connects p0s topn1−1,t (cf. Proposition 8). Clearly, π separates M(a) into at least two disjoint components, each of which is contained in◦ = ∅, b is contained in one such component. Therefore, M(b) is smaller thana rectangle smaller than M(a). Since aM(a). A contradiction. (cid:2)◦ ∩ b◦ ∩ bWe note that the above property does not hold for general connected regions. Let m = [0, 1] × [0, 1]. The diagonal of mseparates m into two triangles a1, a2. Clearly, a1 and a2 have no common interior point, but they have the same mbr.As a corollary of Lemma 6, we haveLemma 7. Let b be a digital region. There exists at most one connected component, written c, such that M(c) = M(b).= ∅. By Lemma 6 we know M(c1) (cid:14)=Proof. Suppose c1 and c2 are two different connected components of b. Clearly, cM(c2). This means no two different components have the same mbr. In particular, there exists at most one connectedcomponent which has the same mbr as b. (cid:2)∩ c◦1◦2If N is consistent, then by Lemma 5, we know such a unique component of bi does exist. In fact, suppose {ai}ni=1 is anarbitrary canonical solution of N . Then the connected component ci of bi which contains ai is the unique component of bisuch that M(ci) = M(bi).The following lemma shows that {ci}ni=1 is also a solution of N .Lemma 8. Let N and mi be as in Lemma 3, and let bi be as in Eq. (25). Assume ci is the unique connected component of bi such thatM(ci) = mi . Then {ci}ni=1 is a canonical solution of N .i=1 is a solution of N , we need only prove dir(ci, c j) = δi j for each pair of i, j. By Proposition 1 andProof. To prove that {ci}nM(c j) = m j , we know χ (c j) = χ (m j) for each tile name χ ∈ TileName. To show dir(ci, c j) = δi j , we need only prove that◦ci= 0 for each χ ∈ TileName.i=1 is an arbitrary canonical solution of N . By Lemma 5, we know ai ⊆ ci for each i. If c∩ χ (m j) = ∅,= 0. On the other hand, if∩ χ (m j) = ∅. Because (ai, a j) is an instance of δi j , this implies d∩ χ (m j) (cid:14)= ∅, then by ci ⊆ bi , we know bi and χ (m j) has a common pixel pst . By the definition of bi (cf. Eq. (25)) we∩ χ (m j) = ∅ iff dSuppose {ai}nχi jχi j◦i◦ithen by ai ⊆ ci , we know a◦ciknow d(cid:14)= 0.χi jThis shows that {ci}ni=1 is a solution of N . Since each ci is a connected digital region, {ci}nBy M(ci) = mi , we know I x(ci) = I i and I y(ci) = J i for each i, where {I i}nsolutions of Nx and N y , respectively. This implies that {ci}ni=1 and { J i}ni=1 is a digital solution of N .i=1 are, as in Lemma 3, the canonicali=1 is a canonical solution of N (see Definition 9). (cid:2)Actually, this is also the maximal canonical solution of N .Theorem 4. Suppose N = {v iδi j v j}nEq. (25)) such that M(ci) = mi . Then {ci}ni, j=1 is a consistent basic CDC network. Let ci be the unique connected component of bi (cf.i=1 is the maximal canonical solution of N .Proof. This is because, for any canonical solution {ai}ni=1, by Lemma 5, we know ai ⊆ ci for each i. (cid:2)An example is given in Fig. 11(a) to illustrate the procedures.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983965Fig. 12. Flowchart of the main algorithm.Example 1 (continued). For the network specified in Fig. 5, we have++−+−−3 ,3 < x2 < x1 < x2 < x1 < xx+++−−−1 .3 < y2 < y1 < y2 < y3 < yy(28)(29)The canonical interval solutions of Nx and N y are illustrated in Fig. 11(a). Note that d O12 (cf. Eq. (32)) is 0. This excludespixel p12 ⊆ O (m2) = m2 from m1 (see Fig. 11(a)). Note that each bi obtained in this example happens to be connected (seeFig. 11(b)). The maximal canonical solution of N is {b1, b2, b3}.So far we have shown that, if N is consistent, then its maximal canonical solution {ci}ni=1 can be constructed as follows:• Construct the canonical solutions {I i}ni=1 and { J i}n• Exclude impossible pixels from mi = I i × J i and obtain a digital region bi ⊆ mi (cf. Eq. (25));• Find the unique connected component ci of bi such that M(ci) = mi .i=1 of the projective interval networks Nx and N y ;What if the consistency of N is unknown? The next example suggests we can use the above procedures to determine theconsistency of N .Example 2 (continued). Suppose the constraint v 2(N : O : S)v 1 is replaced with v 2(O : S)v 1. See Fig. 10(b) for the illustrationof {b1, b2, b3} in this case. Note that c3 and c2 fail to satisfy constraint v 3(W : N W : N : N E : E)v 2. By Theorem 4 we knowthe revised network cannot be consistent.5. A consistency checking algorithmIn this section, we describe our algorithm for checking the consistency of basic CDC networks. Suppose N = {v iδi j v j}ni, j=1is a basic CDC network. Recall we assume N is complete, i.e. a basic constraint δi j is assigned for each pair of variables v i, v j .To examine the consistency of N , we first compute the projective IA networks Nx and N y . If either is inconsistent, then Nis inconsistent. Assume both Nx and N y are consistent. We compute their canonical interval solutions {I i}ni=1,and construct a rectangle mi = I i × J i for each i. We then continue to compute the digital region bi according to Eq. (25)and determine if bi has a component ci such that M(ci) = mi . If such a component does not exist for some i, then N isinconsistent. Otherwise, we check if {ci}ni=1 is itsmaximal canonical solution. If the answer is no, then N must be inconsistent.i=1 is a solution of N . If the answer is yes, then N is consistent and {ci}ni=1 and { J i}nFig. 12 gives the flowchart of the algorithm.5.1. An O (n4) consistency checking algorithmIn this section, we give a detailed description of our consistency checking algorithm, and analyze its computationalcomplexity.966W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Fig. 13. A digital region a (a) and its Boolean matrix B(a) (b).Step 1. Projective IA networksFor a pair of basic CDC constraints {xiδi j x j, x jδ ji xi}, the x- and y-projective IA relations ρ xi j (Eqs. (14) and (15))can be computed in constant time. A method is described in Appendix A. So the projective IA networks Nx and N y canbe constructed in O (n2) time (see Appendix A, Proposition 24). If Nx or N y is inconsistent, which can be checked in cubictime by a path-consistency algorithm [1,45], then N is also inconsistent.i j and ρ yExample 1 (continued). For the basic CDC network specified in Fig. 5, we haveNx = {v 1oiv 2, v 2ov 1, v 1ov 3, v 3oiv 1, v 2pv 3, v 3piv 2},N y = {v 1oiv 2, v 2ov 1, v 1oiv 3, v 3ov 1, v 2dv 3, v 3div 2}.It is straightforward to prove that Nx and N y are path-consistent.Suppose Nx and N y are consistent. Their canonical solutions {I i}ni=1 and { J i}ni=1 can be constructed in cubic time byStep 2. Canonical interval solutionsusing Algorithm 1.Algorithm 1 The canonical solution of a basic IA networkInput: A basic consistent IA network N = {v iρi j v j }nOutput: The unique canonical solution of N .i, j=1.+−V ← {xi , xifor each p, q ∈ V do}ni=1;Calculate Order[p, q] by constraints in N and Table 2;sort V by Order ascending;k ← 0; p ← the smallest element in V ; r[p] ← k;while p is not the greatest element in V doq ← the next element of p in V ;if Order[q, p] = ‘ > ’ thenk ← k + 1;p ← q, r[p] ← k;+], r[xi−Output {[r[xi]]}ni=1.+−Write I i = [xi , xi] and J i = [ y−i , y+i+gers between 0 and 2n − 1. Write nx = max{xi++−mi = [xi , xii] for each i. Clearly, mi ⊆ T .] × [ y−i , y+]. By the definition of canonical interval solution, we know xi are inte-+i=1. Let T = [0, nx] × [0, n y] be the frame and define}nii=1 and n y = max{ y}n+−i , yi , x−i , yExample 1 (continued). For the basic CDC network specified in Fig. 5, the canonical solutions of Nx and N y are (seeFig. 11(a)) {I1 = [1, 4], I2 = [0, 2], I3 = [3, 5]} and { J 1 = [2, 5], J 2 = [1, 3], J 3 = [0, 4]}, respectively. Moreover, the frameT = [0, 5] × [0, 5], and m1 = [1, 4] × [2, 5], m2 = [0, 2] × [1, 3], m3 = [3, 5] × [0, 4].In the remainder of this paper, we often represent a digital region a ⊆ T as an nx × n y Boolean matrix B(a) as follows:(cid:18)B(a)[k, l] =if pkl ⊆ a;1,0, otherwise.(30)Example 3. Fig. 13(a) illustrates a digital region a contained in T = [0, 5] × [0, 5], and Fig. 13(b) shows the Boolean matrixB(a) that represents a.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983967Table 4Excluding impossible pixels from m1.⎛⎜⎜⎜⎝⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠⎞⎟⎟⎟⎠0 0 0 0 00 0 0 0 01 1 0 0 01 1 0 0 00 0 0 0 0B(T ∩ O (m2))0 0 0 0 01 1 1 0 01 1 1 0 01 1 1 0 01 1 1 0 0B(T ∩ W (m3))⎛⎜⎜⎜⎝⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠⎞⎟⎟⎟⎠0 0 0 0 00 0 0 0 00 0 0 0 00 0 0 0 01 1 0 0 0B(T ∩ S(m2))0 1 1 1 00 1 1 1 00 1 1 1 00 0 0 0 00 0 0 0 0B(m1)⎛⎜⎜⎜⎝⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠⎞⎟⎟⎟⎠0 0 0 0 00 0 0 0 00 0 0 0 00 0 0 0 00 0 1 1 1B(T ∩ S E(m2))0 1 1 1 00 0 0 1 00 0 0 1 00 0 0 0 00 0 0 0 0B(b1)Note we address the elements of B(a) from lower left corner to top right corner. In particular, the lower left corner ofB(a) in Fig. 13(a) is addressed as the (0, 0)-element, i.e. B(a)[0, 0]. This is in accord with the orderings of the endpoints inthe canonical interval solutions.Step 3. Excluding impossible pixelsAs in Eq. (25), we write(cid:13)(cid:2)bi =(cid:4)pst ⊆ mi: (∀ j)(∀χ )d= 0 → pst (cid:14)⊆ χ (m j)(cid:5)(cid:3).χi jThis means that a pixel pst in mi is contained in the digital region bi iff pst is not contained in any tile χ (m j) with dTo compute bi , an intuitive method is checking for each pixel p in mi whether p is contained in bi .Proposition 13. For each pixel p contained in mi , it needs at most O (n) time to determine if p is in bi .(31)χi j= 0.= 0.Proof. To determine if p is in bi , by definition we need to check if p is not contained in χ (m j) for allNote that it needs constant time to decide if a pixel is contained in a tile. Since there are at most O (n) different tiles χ (m j),it needs at most O (n) time to determine if p is contained in bi . (cid:2)j, χ with dχi jNote that there are at most O (n2) pixels contained in mi . As a consequence, it needs at most O (n3) time to compute bifor each i. Therefore, we need at most O (n4) time to compute all bi (see Algorithm 2).Algorithm 2 Excluding Impossible PixelsInput: A basic CDC network N = {v i δi j v j }nOutput: A set of nx × n y Boolean matrices {B i }ni=1.for each 1 (cid:2) i (cid:2) n doi, j=1, a canonical set of rectangles {mi }ni=1 and its frame T = [0, nx] × [0, n y ].for each pixel p = [s, s + 1] × [t, t + 1] in T doif p is in mi thenB i [s, t] ← 1;elseB i [s, t] ← 0;for each 1 (cid:2) j (cid:2) n and j (cid:14)= i dofor each χ ∈ TileName do= 0 thenif δχB i [s, t] ← 0;Output {B i }ni=1.i jfor each pixel p = [s, s + 1] × [t, t + 1] contained in mi ∩ χ (m j ) doExample 1 (continued). For the basic CDC network specified in Fig. 5, b1 is the digital region obtained by excluding pixelsp12, p22, p13, p23 from m1 = [1, 4]×[2, 5], b2 is exactly m2 = [0, 2]×[1, 3], and b3 is the digital region obtained by excludingpixels p32, p33 from m3 = [3, 5] × [0, 4] (see Fig. 11(b)).Take b1 as example. Recall T = [0, 5] × [0, 5]. There are four different χ (m j) such that T ∩ χ (m j) is not a degenerate= 0, viz. T ∩ O (m2) = [0, 2] × [1, 3], T ∩ S(m2) = [0, 2] × [0, 1], T ∩ S E(m2) = [2, 5] × [0, 1], T ∩ W (m3) =rectangle and d[0, 3] × [0, 4] (see Fig. 11(a)). Table 4 illustrates the process of computing B(b1). The digital region b1 can be computed byusing Eq. (30), shown in Fig. 11. Note b1 is connected.χ1 jIn Section 5.2, however, we will show that this step can be improved to O (n3).Step 4. Connected componentsWe further compute connected components of bi for each i. Applying a general Breadth-First Search algorithm, wecan find all connected components of bi and determine if their mbrs are mi in O (n2) time. Algorithm 3 is an optimised968W. Liu et al. / Artificial Intelligence 174 (2010) 951–983algorithm, which tries to find the desired connected component. For each pixel p at the bottom of mi , from left to right, ifp is contained in bi , the algorithm finds the connected component of bi which contains p. If this component has mbr mi ,then the algorithm returns this component as ci and stops; otherwise, it goes to the next pixel at the bottom of mi .Algorithm 3 Calculating the Connected ComponentInput: The nx × n y Boolean matrix B (of a digital region b), and a rectangle m = [xOutput: If b has a connected component with mbr m, return its Boolean matrix C , otherwise return false.+] × [ y−, y−, x+],for each xif B[r, ydo− (cid:2) r < x+−] = 1 thenCurrentComponent ← ∅;Visiting ← {(r, yMaxY ← ywhile Visiting is not empty do−)};−; Min X ← r; Max X ← r;let (s, t) be an element of Visiting;CurrentComponent ← CurrentComponent ∪ {(s, t)};Visiting ← Visiting \ {(s, t)};B[s, t] ← 0;Min X ← min(Min X, s);Max X ← max(Max X, s);MaxY ← max(MaxY , t);(cid:3), tfor each (s(cid:3)] = 1 then(cid:3), tif B[sVisiting ← Visiting ∪ {(s−and Max X = xif Min X = xfor each (s, t) in CurrentComponent do(cid:3))};+ − 1 and MaxY = y(cid:3), t+ − 1 then(cid:3)) in {(s − 1, t), (s + 1, t), (s, t − 1), (s, t + 1)} doC[s, t] ← 1;Output C ;Output false.Note that bi has at most one component whose mbr is mi (Lemma 7). If no such component exists for some i, then Nis inconsistent. Otherwise, let ci be the unique connected component of bi such that M(ci) = mi .Clearly, this step needs only O (n3) time.Example 1 (continued). For the basic CDC network specified in Fig. 5, b1, b2, and b3 happen to be connected (see Fig. 11(b)).This means, ci = bi for i = 1, 2, 3.i=1 is a solution of N . Note that if the answer is yes, then {ci}ni=1 is the maximal canonicalFor each pair of ci and c j , we should check if dir(ci, c j) = δi j . WriteStep 5. Checking a possible solutionThe last step is checking if {ci}nsolution of N (see Theorem 4).⎡δi j =⎣⎤⎦ .dN Wi jdWi jdS Wi jdNi jd Oi jdSi jdN Ei jdEi jdS Ei jWe need to check for each χ ∈ TileName whether the following equation holdsχi jd= 0 ⇔ c◦i∩ χ (m j) = ∅.Because ci and m j are all digital regions, cχ (m j). Therefore, we need only to check for each χ ∈ TileName whether the following equation holds∩ χ (m j) is nonempty iff there exists a pixel p which is contained in both ci and◦iχi jd= 1 ⇔ ci ∩ χ (m j) contains a pixel.(34)Recall ci is a connected component of bi and M(ci) = M(bi) = mi . When d= 0, by the definition of bi , we know nopixel is contained in both bi and χ (m j). This means ci ∩ χ (m j) contains no pixel. The condition in Eq. (34) always holds.= 1. Note that the rectangle mi has been computed in Step 2 and each tile χ (m j) can beOn the other hand, suppose dcomputed from m j in constant time. Whether mi ∩ χ (m j) contains a pixel can also be checked in constant time. This isbecause mi ∩ χ (m j) is a (possibly degenerate) rectangle. If mi ∩ χ (m j) contains no pixel, i.e., it is a degenerate rectangle,then ci ∩ χ (m j) contains no pixel. Suppose mi ∩ χ (m j) is a non-degenerate rectangle. The next proposition shows that wecan determine whether ci ∩ χ (m j) contains a pixel in O (n) time.χi jχi jProposition 14. Let mi, ci be as constructed in Step 2 and Step 4, respectively. Let χ be a tile name. Suppose dis a non-degenerate rectangle. Then whether ci ∩ χ (m j) contains a pixel can be checked in O (n) time.χi j= 1 and mi ∩ χ (m j)(32)(33)W. Liu et al. / Artificial Intelligence 174 (2010) 951–983969+]. We need not check for every pixel p in mi ∩ χ (m j) whether p ⊆ ci . Instead,Proof. Write mi ∩ χ (m j) = [xwe need only check this for all boundary pixels of mi ∩ χ (m j), where a pixel in a rectangle is called a boundary pixel if ithas a 4-neighbor that is not contained in the rectangle. Formally, the boundary pixels of mi ∩ χ (m j) has the form pk,l with(k, l) ∈ H1 ∪ H2, where+] × [ y−, y−, x(cid:2)(cid:2)H1 =H2 =(cid:2)(cid:3)(k, l): k ∈(k, l): x−+ − 1, xx+− (cid:2) k < xand y(cid:2)and l ∈y(cid:3)+(cid:3)(cid:3)− (cid:2) l < y+ − 1−, y,.We justify the above statement as follows. If mi ∩ χ (m j) = mi , then by M(ci) = mi we know there exists a boundary pixelwhich is contained in ci . Otherwise, mi ∩ χ (m j) is a rectangle strictly contained in mi . Because M(ci) = mi , this impliesthat ci contains a pixel p out of mi ∩ χ (m j). If ci contains no boundary pixel of mi ∩ χ (m j), then ci , as a connected digitalregion, contains no pixel of mi ∩ χ (m j) at all.Since H1 ∪ H2 contains O (n) pixels and checking if a pixel is contained in ci needs constant time, dir(ci, c j) = δi j can bechecked in O (n) time. (cid:2)Therefore, we can determine in O (n) time whether dir(ci, c j) = δi j for each pair of i, j. As a consequence, whether {ci}nis a solution of N can checked in cubic time. This means Step 5 can be carried out in cubic time.i=1Example 1 (continued). For the basic CDC network specified in Fig. 5, we know b1 = c1 and b2 = c2 (see Fig. 11(b)). To showdir(b1, b2) = δ12, we need to check if b1 and χ (m2) have common pixels for all χ with d= 1, i.e. χ = N, N E, E. Sincepixels p14, p24, and p32 are contained in N(m2), N E(m2), and E(m2), respectively. We know (b1, b2) is an instance of δ12.χ12The above example shows that, applying our main algorithm to a consistent (complete) basic CDC network, we canconstruct its maximal canonical solution. In Section 6.1, we will give another example (Example 4), which illustrates howthe main algorithm deals with inconsistent CDC networks.Recall that only Step 3 needs at most O (n4) time, the algorithm determines the consistency of a (complete) basic CDCnetwork in O (n4) time.5.2. A cubic improvementIn this subsection, we improve the main algorithm to cubic. This is achieved by an O (n2) improvement for computingeach bi (see Eq. (31)) in Step 3. As a consequence, all bi can be computed in cubic time.For each i, recall bi is defined as below (cf. Eq. (31)),(cid:13)(cid:2)(cid:4)pst ⊆ mi: (∀ j)(∀χ )dχi jbi == 0 → pst (cid:14)⊆ χ (m j)(cid:5)(cid:3).(35)The Boolean matrix B(bi) (see Eq. (30)) of bi can be computed as follows, where B(T ∩ χ (m j)) is the zero matrix ifT ∩ χ (mi) is a degenerate rectangle.Proposition 15. For 0 (cid:2) k < nx and 0 (cid:2) l < n y , we have(cid:18)B(bi)[k, l] =if B(mi)[k, l] = 1 and Q i[k, l] = 0;1,0, otherwise,where(cid:25)(cid:2)(cid:10)(cid:11)T ∩ χ (m j)B: dχi jQ i == 0 and j (cid:14)= i(cid:3).(36)(37)Proof. We first note that a pixel pkl ⊆ T is contained in a digital region a ⊆ T iff B(a)[k, l] = 1. Suppose B(mi)[k, l] = 1and Q i[k, l] = 0. The first equation implies that pkl is a pixel contained in mi . The latter is equivalent to saying that B(T ∩χ (m j))[k, l] = 0 for any j (cid:14)= i and any χ with dis notcontained in χ (m j). By the definition of bi , this implies that pkl ⊆ bi . Hence B(bi)[k, l] = 1.= 0. This means, for any j (cid:14)= i and any χ , if d= 0 then pklOtherwise, suppose B(mi)[k, l] = 0 or Q i[k, l] > 0. We show B(bi)[k, l] = 0. Note that by bi ⊆ mi we know B(bi)[k, l] = 0if B(mi)[k, l] = 0. Suppose B(mi)[k, l] = 1 and Q i[k, l] > 0. By the definition of Q i , we know B(T ∩ χ (m j))[k, l] = 1 for some= 0. This implies that pkl is contained in χ (m j). Note that pkl is also contained in mi forj, χ such that j (cid:14)= i and dB(mi)[k, l] = 1. By the definition of bi , we know pkl is not contained in bi . Hence B(bi)[k, l] = 0. (cid:2)χi jχi jχi jBy the above proposition, we know B(bi) can be computed from B(mi) and Q i in O (n2) time. We next show how tocompute each Q i in O (n2) time. We note that Q i is not a Boolean matrix. Some of its entries may be integers larger than 1.To this end, we introduce the following operations on matrices.970W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Table 5A matrix N (a) and its difference matrix diff(N) (b) and acc(diff(N)), the cumulative matrix of diff(N) (c).⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠0 0 0 0 00 1 1 1 00 1 1 1 00 1 1 1 00 0 0 0 0(a)⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠0 0 0 000 1 0 0 −10 1 0 0 −10 1 0 0 −100 0 0 0(b)⎞⎟⎟⎟⎠⎛⎜⎜⎜⎝0 0 0 0 00 1 1 1 00 1 1 1 00 1 1 1 00 0 0 0 0(c)Definition 14 (cumulative matrix and difference matrix). For a matrix N, we define its cumulative matrix asacc(N)[k, l] =k(cid:25)t=0N[t, l]and its difference matrix as(cid:18)diff(N)[k, l] =N[k, l],N[k, l] − N[k − 1, l], otherwise.if k = 0;(38)(39)The cumulative matrix acc(N) can be computed column by column. We add the first column to the second one, andthen add the updated second column to the third, etc. (see Table 5 for an example). In this way, cumulative matrix acc(N)can be computed linearly in the number of elements of N.It is easy to verify that• N = acc(diff(N)) = diff(acc(N));• the difference operation is additive, i.e. diff(N1 + N2) = diff(N1) + diff(N2).Therefore, we have(cid:10)(cid:11)Q i = accdiff(Q i)(cid:26)= acc(cid:26)(cid:25)(cid:2)diff(cid:26)(cid:25)(cid:2)B(cid:10)(cid:10)diffB= acc(cid:10)(cid:11)T ∩ χ (m j): d(cid:11)(cid:11)T ∩ χ (m j)χi j= 0 and j (cid:14)= i: dχi j= 0 and j (cid:14)= i(cid:3)(cid:27)(cid:27)(cid:3)(cid:27).Note that each digital region T ∩ χ (m j) is actually a (possibly degenerate) rectangle. The following proposition uses thisproperty to show that the number of nonzero elements in diff(B(T ∩ χ (m j))) is of order O (n).Proposition 16. The number of nonzero elements in diff(B(T ∩ χ (m j))) is fewer than 4n.Proof. If B(T ∩ χ (m j)) is the zero matrix, then diff(B(T ∩ χ (m j))) is also the zero matrix. Otherwise, the nonzero elementsin B(T ∩ χ (m j)) compose a rectangle (cf. Table 5), i.e., there exist 0 (cid:2) x1 (cid:2) x2 < nx and 0 (cid:2) y1 (cid:2) y2 < n y s.t.(cid:10)(cid:11)T ∩ χ (m j)B[k, l] =(cid:18)if x1 (cid:2) k (cid:2) x2 and y1 (cid:2) l (cid:2) y2;1,0, otherwise.It is easy to prove that(cid:10)(cid:10)diffB(cid:11)(cid:11)T ∩ χ (m j)[k, l] =⎧⎨⎩1,−1,0,if k = x1 and y1 (cid:2) l (cid:2) y2;if k = x2 + 1 and y1 (cid:2) l (cid:2) y2;otherwise.So if x2 < nx − 1, there are ( y2 − y1 + 1) ‘1’s and ‘−1’s in diff(B(T ∩ χ (m j))); otherwise x2 = nx − 1, there are ( y2 − y1 + 1)‘1’s and none ‘−1’s, with other elements being zeros. So there are at most 2 × ( y2 − y1 + 1) (cid:2) 2 × n y < 4n nonzero elementsin diff(B(T ∩ χ (m j))). (cid:2)As a consequence, we know the sum of all these difference matrices can be computed in O (n2) time.Proposition 17. The matrices Q i and B(bi) can be computed in O (n2) time for each i.Proof. By Proposition 16, we know each difference matrix B(T ∩ χ (m j)) has at most 4n nonzero entries. To compute Q i ,we need only add up these matrices. Note that there are at most 9n different B(T ∩ χ (m j)). We add these matrices one byW. Liu et al. / Artificial Intelligence 174 (2010) 951–983971Table 6Excluding impossible pixels from m1: An efficient method.⎛⎞⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠⎟⎟⎟⎠⎜⎜⎜⎝0 0 0 0 00 0 0 0 01 1 0 0 01 1 0 0 00 0 0 0 0B(T ∩ O (m2))0 00 000 000 01 0 −1 0 01 0 −1 0 00 00 00diff(B(T ∩ O (m2)))0000 00 −1 01 02 0 −1 −1 02 0 −1 −1 00 −1 02 0BΣ⎞⎟⎟⎟⎠⎛⎜⎜⎜⎝⎛⎞⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠⎟⎟⎟⎠⎜⎜⎜⎝0 0 0 0 00 0 0 0 00 0 0 0 00 0 0 0 01 1 0 0 0B(T ∩ S(m2))0 000 00 000 00 000 00 00 001 0 −1 0 0diff(B(T ∩ S(m2)))⎞⎛0 0 0 0 01 1 1 0 02 2 1 0 02 2 1 0 02 2 2 1 1Q 1 = acc(BΣ )⎜⎜⎜⎝⎟⎟⎟⎠⎛⎞⎞⎛⎜⎜⎜⎝⎟⎟⎟⎠⎜⎜⎜⎝0 0 0 0 00 0 0 0 00 0 0 0 00 0 0 0 00 0 1 1 1B(T ∩ S E(m2))0 0 0 0 00 0 0 0 00 0 0 0 00 0 0 0 00 0 1 0 0diff(B(T ∩ S E(m2)))⎞⎛0 1 1 1 00 1 1 1 00 1 1 1 00 0 0 0 00 0 0 0 0B(m1)⎟⎟⎟⎠⎜⎜⎜⎝⎟⎟⎟⎠⎛⎞⎛⎜⎜⎜⎝⎞⎟⎟⎟⎠0⎜⎜⎜⎝⎟⎟⎟⎠0 0 0 0 01 1 1 0 01 1 1 0 01 1 1 0 01 1 1 0 0B(T ∩ W (m3))0 0 001 0 0 −1 01 0 0 −1 01 0 0 −1 01 0 0 −1 0diff(B(T ∩ W (m3)))⎞⎛0 1 1 1 00 0 0 1 00 0 0 1 00 0 0 0 00 0 0 0 0B(b1)⎜⎜⎜⎝⎟⎟⎟⎠one. Each time we need only change the values of at most 4n entries. This means Q i can be computed in O (n2) time. ByProposition 15, the matrix B(bi) can also be computed in O (n2) time, given that we know B(mi) and Q i . (cid:2)By Eq. (30), we know each bi can also be computed in O (n2) time (cf. Algorithm 4). In this way, we improve Step 3 fromO (n4) to cubic time.Algorithm 4 Excluding Impossible Pixels, improvedInput: A basic CDC network N = {v i δi j v j }nOutput: A set of nx × n y Boolean matrices {B i }ni=1.for each 1 (cid:2) i (cid:2) n doi, j=1, a set of rectangles {mi }ni=1 with frame T = [0, nx] × [0, n y ].let BΣ be an nx × n y matrix initialized with zero;for each 1 (cid:2) j (cid:2) n and j (cid:14)= i dofor each χ ∈ TileName doif δχ= 0 and mi ∩ χ (m j ) contains at least one pixel theni jsuppose mi ∩ χ (m j ) is rectangle [s1, s2] × [t1, t2];for each t1 (cid:2) k < t2 doBΣ [s1, k] ← BΣ [s1, k] + 1;BΣ [s2, k] ← BΣ [s2, k] − 1;Q i ← acc(BΣ );for each pixel p = [s, s + 1] × [t, t + 1] contained in T doif p is contained in mi and Q i [s, t] = 0 thenB i [s, t] ← 1;elseOutput {B i }nB i [s, t] ← 0;i=1.Example 1 (continued). In our running example, for m1 = [1, 4]×[2, 5], there are four different χ (m j) such that B(T ∩χ (m j))= 0, viz. T ∩ O (m2) = [0, 2] × [1, 3], T ∩ S(m2) = [0, 2] × [0, 1], T ∩ S E(m2) = [2, 5] × [0, 1],is not the zero matrix and dT ∩ W (m3) = [0, 3] × [0, 4] (see Fig. 11(a)). Write BΣ for the sum of all these diff(B(T ∩ χ (m j))). Its cumulative matrix isQ 1 = acc(BΣ ). By Eq. (36), we know B(b1)[k, l] = 1 iff B(m1)[k, l] = 1 and Q 1[k, l] = 0. Table 6 illustrates the process ofcomputing B(b1). This can be compared with Table 4.χ1 j5.3. Beyond complete basic networks of CDC constraintsIn the above two subsections, we have shown that the consistency of a (complete) basic network of CDC constraints canbe determined in cubic time. Using a backtracking method, we immediately know that the consistency satisfaction problemof the CDC is an NP problem.Lemma 9. The consistency satisfaction problem of the CDC is an NP problem.Proof. Let C = {v ici j v j}nconstraint ci j , and then call our cubic algorithm to solve the basic network of CDC constraints. (cid:2)i, j=1 be a set of CDC constraints. To determine if C is consistent, we need only branch each non-basicThis problem is also NP-hard.972W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Lemma 10. The consistency satisfaction problem of the CDC is NP-hard.Proof. We prove this by reducing a known NP-hard problem to the consistency satisfaction problem of the CDC. Let A bethe JEPD set of IA relations{p ∪ m ∪ pi ∪ mi, o ∪ s ∪ d ∪ f ∪ eq ∪ fi ∪ si ∪ di ∪ oi}.It can be proved that reasoning with A is already NP-hard. Actually, the NP-hardness of A is guaranteed by the work ofKrokhin, Jeavons, and Jonsson [21]. We need only to show A is not contained in any of the eighteen maximal tractablesubclasses of the IA (see [21, Table III]). The verification is straightforward and omitted here.Reasoning with IA relations in A can be easily reduced to reasoning with the CDC. For a set of IA constraintsN = {v iλi j v j}ni, j=1,(λi j ∈ A),it is easy to see that N is satisfiable iff the set of CDC constraintsN ∗ = {v iϕi j v j}ni, j=1is consistent, where ϕi j is the disjunction of the basic CDC relations in {W , E} if λi j = p ∪ m ∪ pi ∪ mi, and is the disjunctionof the basic CDC relations in {O , W : O , O : E, W : O : E} otherwise.This shows that reasoning with the CDC is at least as hard as reasoning with A. Therefore, reasoning with the CDC isalso NP-hard. (cid:2)As a corollary, we knowTheorem 5. Reasoning with the CDC is an NP-complete problem.A similar conclusion has been obtained for CDCd (concerning possibly disconnected regions) in [41], where the authorsuse a reduction from the 3-SAT problem. There seems no direct connection between the NP-hardness of reasoning withCDCd and the NP-hardness of reasoning with CDC.6. Local consistencyAs we have mentioned in Section 2.2, path-consistency is sufficient to decide the consistency of a basic IA network. Inqualitative spatial and temporal reasoning, it is well-known that the usual definition of path-consistency based on compo-sition is too strong. Several authors suggest using the notion of weak composition to define path-consistency (cf. [36,23]). Ithas been proved that the revised path-consistency is sufficient to decide the consistency of basic RCC8 networks (cf. [32,37,23]). For the CDC, the situation is rather complicated. This is because, unlike the IA and the RCC8, CDC basic relations arenot closed under converse (see Fig. 3). A further adaption is necessary.Definition 15 (k-consistency). Let D be a nonempty domain and let (cid:8)B(cid:9) be a qualitative calculus on D. A basic network Nover (cid:8)B(cid:9) is said to be k-consistent iff every subnetwork of N involving k-variables is consistent. A basic network is said tobe path-consistent if it is 3-consistent.This definition of k-consistency, though very different from the classical one introduced by Freuder [12,13], is useful inthe research of qualitative spatial and temporal reasoning, which typically uses a finite JEPD set of relations but an infinitedomain.In this section, we first show that, for any fixed k > 0, there exists a k-consistent basic CDC network which is inconsistent.Then we show how our main algorithm can be used to solve two special local consistency problems.6.1. Local consistency is insufficientSkiadopoulos and Koubarakis [40, Example 9] showed that there is a path-consistent but inconsistent basic CDC network.The following example shows that there is a 4-consistent basic CDC network which is inconsistent.Example 4. Let a1, a2, a3, a4 be the squares illustrated in Fig. 14. Consider the basic CDC network N = {v iδi j v j}5i, j=1, where• δi j = dir(ai, a j) for 1 (cid:2) i, j (cid:2) 4,• δi5 = O for 1 (cid:2) i (cid:2) 4, and• δ51 = N : N E : E, δ52 = δ53 = W : N W : N : N E : E, δ54 = W : N W : N.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983973Fig. 14. A solution to the subnetwork over {v 1, v 2, v 3, v 4} of N in Example 4.Fig. 15. Solutions to other subnetworks of N in Example 4 which involve four variables.Table 7The projective IA networks in Example 4.Fig. 16. Illustrations of mi (a) and bi (b) in Example 4.(i, j)ρ xi jρ yi j(1, 2)(1, 3)(1, 4)(1, 5)(2, 3)(2, 4)(2, 5)(3, 4)(3, 5)(4, 5)ospspeqssoeqpsidsosidsfsFig. 17. A configuration of k squares.Figs. 14 and 15 provide solutions to each subnetwork of N which involves four variables. Therefore, N is 4-consistent. Weapply our main algorithm to determine the consistency of N .Step 1 computes the projective IA networks Nx = {v iρ xi j v j}nApplying a path-consistency algorithm, we know that Nx and N y are consistent. Using the algorithm in Step 2, we geti, j=1 and N y = {v iρ yi, j=1 (see Table 7).i j v j}nthe canonical solutions {I i}5i=1, { J i}5i=1 of Nx and N y , respectively, whereI1 = [0, 2],J 1 = [0, 1],I2 = [1, 4],J 2 = [0, 2],I3 = [2, 6],J 3 = [0, 2],I4 = [5, 7],I5 = [0, 7],J 4 = [0, 1],J 5 = [0, 3].The rectangles mi = I i × J i (1 (cid:2) i (cid:2) 5) are illustrated in Fig. 16(a).By the definition of bi , we know no pixels should be excluded for 1 (cid:2) i (cid:2) 4. This means bi = mi for 1 (cid:2) i (cid:2) 4. For= 0. Similarly, pixels in O (m2), O (m3), O (m4)b5, however, pixels in O (m1), viz. p00 and p01, are disallowed because d O51are also excluded. Fig. 16(b) illustrates the resulted digital regions. Because M(b5) = [0, 7] × [1, 3] (cid:14)= m5, the network isinconsistent according to our main algorithm.In fact, for any positive integer k, there exists a k-consistent but inconsistent basic CDC network involving k + 1 variables.Fig. 17 illustrates such a network, where k instead of four squares are used. This shows that k-consistency is insufficient fordeciding the consistency of basic CDC networks.Remark 3. Navarrete et al. [31] proposed an O (n4) algorithm REG-BCON for checking the consistency of a basic CDC network.It can be proved that any 4-consistent basic CDC network N would pass the algorithm REG-BCON. This is due to that the974W. Liu et al. / Artificial Intelligence 174 (2010) 951–983NTB examination given there only involves four variables. Example 4 shows that REG-BCON is not always correct. Moreover,the ‘Helly’s Topological Theorem’ used in [31] is unjustified and wrong.Our main algorithm can be applied to solve two special local consistency problems, i.e. the pairwise consistency problemand the weak composition problem.6.2. The pairwise consistency problemGiven that you know the relation of a to b, what about that of b to a? Mathematically speaking, this is the converseproblem. The relation of b to a is the converse of that of a to b, and vice versa. Suppose B is a set of JEPD relations on D.The qualitative calculus (cid:8)B(cid:9) is not necessarily closed under converse. This means, α∼could be a relation out of (cid:8)B(cid:9) despiteα ∈ (cid:8)B(cid:9).As for the CDC, we have shown in Fig. 3 that a basic CDC relation may have more than one ‘converses,’ where for twobasic relations α, β, we say α is a converse of β (in the CDC) if {v 1α v 2, v 2β v 1} is consistent.The pairwise consistency problem in the CDC is the problem of deciding if {v 1δ12 v 2, v 2δ21 v 1} is satisfiable for a pair ofbasic CDC relations δ12 and δ21. This problem has been discussed by Cicerone and di Felice [3].12 or ρ yWe next apply our main algorithm to solve the pairwise consistency problem. The first step computes ρ x12 (seeEqs. (14) and (15)). If ρ x12 is empty, then the program stops and returns ‘inconsistent.’ Otherwise, we go to Step 2.12, respectively. Let mi = I i × J i for i = 1, 2. WriteWe construct the canonical solutions {I1, I2} and { J 1, J 2} to ρ x++−}. Clearly, 1 (cid:2) nx, n y (cid:2) 3. Let T = [0, nx] × [0, n y].}, n y = max{ yI i = [xi , x2iThen T ⊆ [0, 3] × [0, 3]. Continuing as described in the main algorithm, we will determine if {v 1δ12 v 2, v 2δ21 v 1} is consistent,and find the maximal canonical solution if it is consistent.++]. Denote nx = max{x1 , x212 and ρ y+1 , y] and J i = [ y−i , y+i12 and ρ yA specialized algorithm is implemented.2 We obtain in total 757 consistent pairs of basic CDC relations. Among theseconsistent pairs (δ, δ(cid:3)), one δ may correspond to multiple δ(cid:3), i.e. δ may have multiple converses. In fact, among the 218basic CDC relations, 119 have unique converse, 68 have two converses, 6 have four converses, 20 have eight converses, 4have thirty converses, and one (viz. the single-tile relation O ) has 198 converses.Our result is unexpectedly different from that of [3], where Cicerone and di Felice obtained 2004 consistent pairs of basicCDC relations. A careful examination, however, shows that a similar but different model was used in [3].When defining the direction relation matrix dir(a, b) = [dχ ]χ ∈TileName of a to b (see Definition 4), we require dχ = 1 iff◦ ∩ χ (b) (cid:14)= ∅. While in [3], dχ is 1 iff a has nonempty intersection with χ (b), i.e. dχ = 1 iff a ∩ χ (b) (cid:14)= ∅. We call theseatwo definitions the interior-based and the closure-based direction relation matrix, respectively. In the following, we arguethat the interior-based definition is more coherent than the closure-based one.First, though it was not mentioned that dχ = 1 iff a has a common interior point with the tile χ (b) in the originaldefinition of Direction Relation Matrix [16], Goyal and Egenhofer [17] defined the detailed direction relation matrix of a tois interpreted as the ratio of the area of a ∩ χ (b) and a.b as a numerical matrix dir∗(a, b) = [(dχ )∗]χ ∈TileName, we can obtainThis is a natural extension of the interior-based direction relation matrix. From dirthe coarse direction relation matrix dir(a, b) = [dχ ]χ ∈TileName by setting dχ = 1 iff (dχ )∗ > 0.∗(a, b) = [(dχ )∗]χ ∈TileName, where (dχ )∗Second, the qualitative calculus introduced by the interior-based direction relation matrix is more desirable. For example,it is a natural requirement that the identity relation is contained in a unique basic CDC relation. For the interior-baseddefinition, we have dir(a, a) = O for any connected region a. The following example, however, shows that this is not thecase for the closure-based direction relation matrix.(cid:3)Example 5. Take a as the square [−1, 1] × [−1, 1], and take a(cid:3)) if we take the closure-based definition.(cid:3), abut dir(a, a) (cid:14)= dir(a(cid:6)(cid:6)(cid:7)(cid:7)dir(a, a) =,dir(a(cid:3)(cid:3)) =, a1 1 11 1 11 1 10 1 01 1 10 1 0.as the unit disk centered at (0, 0). Then M(a(cid:3)) = M(a) = a,The interior-based definition is also consistent with that in [40,41].6.3. The weak composition problemThe notion of weak composition plays a very important role in qualitative spatial and temporal reasoning [1,7,24,36]. Fortwo basic CDC relations α, β, the weak composition α ◦w β of α and β is defined to be the smallest relation in the CDCalgebra which contains the composition α ◦ β. Since the CDC is a Boolean algebra, α ◦w β is the union of all basic CDCrelations it contains. For a basic CDC relation γ , it is easy to prove thatγ ⊆ α ◦w β ⇔ γ ∩ (α ◦ β) (cid:14)= ∅.(40)2 See https://sites.google.com/site/lisanjiang/cdc for illustrations of all consistent pairs.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Note that γ ∩ (α ◦ β) is nonempty iff the following set of basic CDC constraintsC = {v 1α v 2, v 2β v 3, v 1γ v 3}975(41)is consistent. We note that C is not a complete network. The constraint of, say, v 2 to v 1, is not specified. According tothe previous subsection, α may have multiple converses. To apply our main algorithm, we need to extend C to a completenetwork:(cid:2)(cid:3)C∗ =v 1α v 2, v 2α(cid:3)v 1, v 2β v 3, v 3β(cid:3)v 2, v 1γ v 3, v 3γ (cid:3)v 1.(42)We then call our main algorithm to determine if the above completed network is consistent. If the answer is ‘yes’ for someα(cid:3), β(cid:3), γ (cid:3), then γ is contained in the weak composition of α and β. Note that we need only to apply the main algorithmto those α(cid:3), β(cid:3), γ (cid:3)such that (α, α(cid:3)), (β, β(cid:3)), (γ , γ (cid:3)) are consistent pairs. For example, the weak composition of S W : W andN E : E contains 206 out of the 218 basic CDC relations.3The same problem has been considered in [15,40]. The main idea is to compute the weak composition progressively.Goyal [15] established the weak composition of two single-tile relations. Upon this, Theorem 1 of [40] establishes a rule forcomputing the weak composition of a single-tile relation and a basic relation. The correctness of this theorem is confirmedby our algorithm. Furthermore, Theorem 2 of [40] then gives a rule to compute the weak composition of two multi-tilerelations. Two examples show that this rule is not always correct. Recently, this problem was fixed based on case by caseanalysis by Skiadopoulos and Koubarakis.4 They also verified their results with ours.7. Consistency checking for two variants of the CDCThe CDC algebra introduced in Definition 4 requires regions to be connected. This calculus has two variants in theliterature. One, as introduced in [41], deals with cardinal direction relations between possibly disconnected regions; theother, as originally proposed in [16], deals with simple regions, i.e. connected regions that are topologically equivalent toclosed disks. In this section, we show our consistency checking algorithm designed for connected regions (possibly withholes) can be adapted to cope with these two variants.7.1. Cardinal directions between possibly disconnected regionsFor two (possibly disconnected) regions a, b, similar to Definition 4, we write dir(a, b) = [dχ ]χ ∈TileName for the direction◦ ∩ χ (b) (cid:14)= ∅, and 0 otherwise. A 3 × 3 Boolean matrix M is valid if there existrelation matrix of a to b, where dχ is 1 if atwo regions a, b such that M = dir(a, b). It is easy to see that all but the zero 3 × 3 Boolean matrices are valid. Each of thesematrices represents a basic direction relation between possibly disconnected regions. We call the Boolean algebra generatedby these JEPD relations the cardinal direction calculus for possibly disconnected regions, denoted as CDCd.Consistency checking in the CDCd is similar to that in the CDC. Suppose N = {v iδi j v j}ni, j=1 is a complete network ofbasic CDCd constraints. Similar definitions of regular solutions, meet-free solutions, and canonical solutions can be definedin the CDCd. Moreover, suppose a is a solution to N . We can transform a into a canonical solution a(cid:3) = {ai=1 of N . That is,}na(cid:3)i=1 are canonical sets of intervals. We next showN has a maximal canonical solution. Actually, for each i, let bi be the region obtained by deleting all disallowed pixels fromM(ais a regular, meet-free, and digital solution, and {I x(ai=1 is the maximal canonical solution of N .(cid:3)i) (see Eq. (25)). We assert that b = {bi}ni=1 and {I y(a(cid:3)i)}n(cid:3)i)}n(cid:3)iTheorem 6. Suppose N = {v iδi j v j}nmaximal canonical solution of N , where bi is defined as in Eq. (25).i, j=1 is a complete network of basic CDCd constraints. If N is consistent, then {bi}ni=1 is theProof. The proof is similar to that for Lemma 8. (cid:2)This shows, to construct the maximal canonical solution of a network of basic CDCd constraints, we need not computethe connected components of bi .We next adapt our main algorithm to determine the consistency of a complete network N = {v iδi j v j}ni, j=1 of basic CDCdconstraints. We first note that the projective interval relation of a basic CDCd constraint can be computed in a similar wayas that of a basic CDC constraint (see Remark 5 in Appendix A). As in the case of connected regions, Step 1 computesthe projective IA networks Nx and N y . If either is inconsistent, then N is inconsistent. Otherwise, Step 2 constructs theircanonical interval solutions, and Step 3 computes bi for each i. If M(bi) (cid:14)= mi for some i then N is inconsistent. The aboveprocedures, as in the connected case, need at most cubic time.Since regions in a solution of CDCd constraints are allowed to be disconnected, we need not compute the connectedcomponents of each bi . Therefore, we go directly to Step 5, where we need to check if dir(bi, b j) = δi j holds for each pair of3 See https://sites.google.com/site/lisanjiang/cdc for illustration.4 Personal communication, see also http://pelopas.uop.gr/~spiros/pubs.html.976W. Liu et al. / Artificial Intelligence 174 (2010) 951–983χi jχi jTo check if b]χ ∈TileName. Similar to the connected case, we need only check whether bi, j. Suppose δi j = [d= 1.each χ with d◦∩ χ (m j) is nonempty, it is sufficient to show that there is a pixel p contained in bi ∩ χ (m j). Since bi mayibe disconnected, checking all boundary pixels is, however, insufficient. Note that checking all pixels in mi ∩ χ (m j) aloneneeds O (n2) time in the worst case for each pair i, j. This is undesirable since it will cost O (n4) time in total.∩ χ (m j) is nonempty for◦iWe next show this could also be simplified. For a digital region b contained in T , write B(b) for the Boolean matrix thatrepresents b (see Eq. (30)). For each 0 (cid:2) k < nx and each 0 (cid:2) l < n y , write M(b)[k, l] for the number of pixels contained inb and the rectangle [0, k + 1] × [0, l + 1]. It is easy to see that M(b) is an nx × n y integer matrix and(cid:25)(cid:2)(cid:3)M(b)[k, l] =B(b)[p, q]: 0 (cid:2) p (cid:2) k, 0 (cid:2) q (cid:2) l(43)for 0 (cid:2) k < nx and 0 (cid:2) l < n y .Given the Boolean matrix B(b), M(b) can be computed in O (n2) time by iteratively adding the k-th column to the(k + 1)-th, and then iteratively adding the p-th row to the (p + 1)-th.M(b) gives a way to compute the number of pixels contained in b and [0, k + 1] × [0, l + 1]. The following propositionconcerns pixels contained in b and an arbitrary rectangle.−, x+] × [ y−, y] be a rectangle and let b be a digital region b, both contained in T = [0, nx] × [0, n y]. ThenProposition 18. Let r = [xb ∩ r contains a pixel iff(cid:4)M(b)− − 1, yx(cid:4)> M(b)− − 1+ − 1, yx(cid:5)(cid:4)+ M(b)(cid:5)− − 1+ − 1, yx(cid:4)+ M(b)+ − 1− − 1, yx(cid:5)+ − 1(cid:5),(44)where M(b)[−1, l] = M(b)[k, −1] = 0.Proof. Because M(b)[k, l] denotes the number of pixels contained in both b and [0, k + 1] × [0, l + 1], the number of pixels+ −in b which are contained in the rectangle [x1, y+] is M(b)[x+] × [ y− − 1]. The conclusion follows directly. (cid:2)− − 1]) + M(b)[x+ − 1] − (M(b)[x+ − 1] + M(b)[x− − 1, y− − 1, y+ − 1, y−, y−, xThe following proposition asserts that, given M(bi), it needs only constant time to decide whether bnonempty for each χ with dχi j= 1.◦i∩ χ (m j) isProposition 19. Let mi, bi be as constructed in Step 2 and Step 3, respectively, of the main algorithm for possibly disconnected regions.∩ χ (m j) is nonempty can be checked inLet χ be a tile name. Suppose dconstant time.= 1. Assume M(bi) has been computed. Then whether bχi j◦i∩ χ (m j) is nonempty iff there is a pixel contained in both bi and χ (m j). Suppose T ∩ χ (m j) = [x−, x+] ×−, yProof. Note that b[ y◦i+]. Since bi ⊆ T , we havebi ∩ χ (m j) = bi ∩(cid:10)(cid:11)T ∩ χ (m j)(cid:4)= bi ∩−x, x+(cid:5)(cid:4)×−+, y(cid:5).yBy Proposition 18, we know bi ∩ χ (m j) contains a pixel iff Eq. (44) holds, which can be checked in constant time. (cid:2)Since there are at most 9n different rectangles T ∩ χ (m j), given M(bi), whether dir(bi, b j) = δi j can be checked in O (n)i=1 is a solution of N can be checkedtime. Recall that each M(bi) can be computed in O (n2) time. This implies whether {bi}nin cubic time. Therefore, Step 5 and the whole algorithm can be finished in O (n3) time.Remark 4. Skiadopoulos and Koubarakis [41] proposed an algorithm for determining the consistency of basic constraintsin the CDCd. This algorithm applies to possibly incomplete sets of basic constraints. Let N = {v iδi j v j}ni, j=1 be a network ofCDCd constraints such that each δi j is either basic or the universal relation. The algorithm in [41] can decide in O (n5) timewhether N is consistent. In this sense, it is more general than our cubic algorithm (when applied to CDCd).7.2. Cardinal directions between simple regionsIn the definition of direction relation matrix (Definition 4), we assume connected regions. It is possible that these con-nected regions may have holes. In the original work of Goyal and Egenhofer [16,17], objects are represented as simple regions,i.e. regions that are topologically equivalent to closed disks. Because each direction relation matrix between connected re-gions can be realized by a pair of simple regions, the set of cardinal direction relations between simple regions is thesame as that between connected regions. We write CDCs for the qualitative calculus generated by these cardinal directionrelations on the set of simple regions.W. Liu et al. / Artificial Intelligence 174 (2010) 951–983977Fig. 18. A digital region a with two contact points P = (5, 5) and Q = (5, 6), where h1 and h2 are two holes of a, h∞ is the closure of the unboundedcomponent of the exterior of a.Table 8Four types of contact points, where h, a, x denote a pixel that is contained in a hole of a, in a, and in neither,respectively.h aa xa hx ax aa ha xh aIn this subsection, we show the difference between simple regions and connected regions does not affect the consistencyof cardinal direction constraints. In particular, we prove that each consistent network of CDC constraints has a solution onlyusing simple regions. The idea is to transform connected regions (possibly with holes) in the maximal canonical solutioninto simple regions without changing their relations.We first note that a connected digital region a has at most finite holes, where a hole of a is the closure of a boundedconnected component of the exterior of a. It is easy to see that all holes of a digital region are digital and simple regions.We call a point P a contact point of a digital region a if exactly two of the four pixels around P are contained in a and thesetwo pixels are diagonally adjacent (cf. Fig. 18).The following two lemmas study properties of contact points in the maximal canonical solution.Lemma 11. Let a = {ai}np be a pixel around P which is contained in a hole h of ai . Then there exists j (cid:14)= i such that p ⊆ M(a j) ⊆ h.i=1 be the maximal canonical solution of a basic CDC network N . Suppose P = (k, l) is contact point of ai . LetProof. Omitted. (cid:2)Because a maximal canonical solution is a meet-free solution, the mbrs of any two regions in a maximal canonicalsolution do not meet at a point (cf. Definition 13). The following lemma is a consequence of this observation and Lemma 11.i=1 is the maximal canonical solution of a basic CDC network N . If P = (k, l) is a contact point of ai , thenLemma 12. Suppose a = {ai}namong the four pixels around P , one is contained in a hole of ai , two are contained in ai , the other is contained in neither ai nor itsholes.Proof. Omitted. (cid:2)By the above lemma, there are four types of contact points. See Table 8. For convenience, we denote each type as a4-tuple of symbols taken from {h, a, x}. For the four pixels, we start from the top left corner and go clockwise. These fourtypes are written as (haxa), (ahax), (xaha), and (axah), respectively.A contact point can be removed by deleting a sub-pixel from the a-pixel which follows the h-pixel according to thesequence of the type of the contact point (see Fig. 19). Once all contact points are removed from each ai , the remainingholes are quite easy to cope with.We need the following lemma to prove the main result of this subsection.Lemma 13. For two digital regions a, b, if a(cid:10)(cid:3) ⊆ a and M(b) = Mb(cid:3), bthen dir(a, b) = dir(a(cid:3)).a(cid:11)(cid:3)(cid:3)(cid:3), bsatisfies the following equation(cid:4)and (∀p)p ⊆ a →(cid:10)a(cid:3)(cid:11)◦ ∩ p (cid:14)= ∅(cid:5),(45)978W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Fig. 19. Remove a type (haxa)-contact point.Fig. 20. Transform a connected digital region without contact points into a simple region.Proof. Omitted. (cid:2)Fig. 21. Subdivision of a pixel into 25 sub-pixels.Theorem 7. Suppose N = {v iδi j v j}nai is a simple region.i, j=1 is a consistent network of basic CDC constraints. Then it has a solution {ai}ni=1 such that eachProof. Suppose a = {ai}nmay have holes. We assert that, for each i, there exists a simple region adir(ai, a j) = dir(ai=1 is the maximal canonical solution of N . Then each ai(cid:3)i, a j) and dir(a j, ai) = dir(a j, a(cid:3)i) for any j (cid:14)= i.(cid:3)i such that ais a connected digital region, which(cid:3)i) = M(ai), and⊆ ai and M(a(cid:3)i∗iBecause ais still connected but has no contact points.∗i contains at least 21 sub-pixels of p. This implies that aWe first subdivide each pixel into 25 equal sub-pixels (see Fig. 21).For a contact point P = (k, l) of ai , without loss of generality, assume P has type (haxa). Removing the 1/25 sub-pixelwhich contains P from ai , we obtain (after necessary regularization)5 a new region (see Fig. 19). This procedure can be∗applied to all contact points of ai at the same time. Write afor the resulted region. Since each pixel p of ai has at mosti∗i ) = M(ai).four contact points, the revised region aIt is routine to check that a∗i has no contact points, any two holes of ais disjoint from the closure of the∗i , select the pixel p(h) in h which has the highest y-indexunbounded component of the exterior of a∗i as follows. Let qand whose left 4-neighbor is out of h. We cut a slot from a∗be the lowest pixel which is above p(h) but not contained in ai . We delete the middle column of the sub-pixels from thosepixels between p(h) and q (see Fig. 20). After necessary regularization, we obtain another connected region which has fewer(cid:3)i , which has no holes. Thatholes than a(cid:3)i) = M(ai). Moreover, for each pixel p contained in ai , sinceis, a(cid:3)j) = dir(ai, a j) forp has sub-pixels that are contained in aany j (cid:14)= i. This means {a(cid:3)i=1 is a solution of N which consists of simple regions. (cid:2)}ni)◦ ∩ p is nonempty. By Lemma 13, we know dir(a∗i to connect the hole h with the exterior of a∗i one by one, we obtain a connected region a(cid:3)i is a simple region. It is easy to see that a∗i . Applying this operation to holes of a∗i are disjoint, and any hole of a(cid:3)i(cid:3)i , we know (a∗i . For each hole h of a⊆ ai and M(a⊆ ai and M(a(cid:3)i, a∗i∗i(cid:3)iAs a consequence, we know the satisfaction problem over the CDCs can be determined in the same way as that over theCDC.Theorem 8. The consistency of a network of basic CDCs constraints can be determined in cubic time.5 Here regularization means the topological regularization of a set a, which is defined as a◦.W. Liu et al. / Artificial Intelligence 174 (2010) 951–9839798. Related workMore than a dozen qualitative direction/orientation calculi have been proposed in the literature. We refer the reader to[6,38] for more information. In this section, we focus on the computational properties of these calculi.The CDC (for extended objects) is an extension of the projection-based cardinal algebra for point objects [10]. Thecomputational properties of the latter has been studied by Ligozat [26]. In particular, he identified a maximal tractablesubset of the cardinal algebra. Several researchers use boxes or rectangles to approximate extended objects and representthe direction relation between two rectangles by a pair of interval relation, see e.g. [18,2]. This calculus, known as theRectangle Algebra (RA), is the two-dimensional extension of the IA. Balbiani et al. identified a tractable subclass of the RAwhich is larger than the product of the ORD-Horn class [33] of the IA.Recently, Skiadopoulos et al. [42] introduced a family of directional models for extended objects. These models approxi-mate the reference object by its mbr and partition the plane into five (instead of nine) tiles. The authors also gave methodsfor computing the converse and the composition of directional relations. The general consistency problem is left open.Unlike the above mentioned binary calculi, Clementini and Billen [4] introduced a ternary projective relation calculus forextended objects. The model describes the relative relation of one primary object to two reference objects by partitioningthe plane into several zones with respect to the reference objects. Compared with the aforementioned direction calculi,this model does not have an extrinsic frame of reference. Rules of permutation and composition of relations in this ternarycalculus were further established in [5].As for point objects, a variety of ternary orientation calculi have been established, see e.g. [11,20,30,8]. Dylla and Wall-grün [8] examined most of these calculi and proved that many well-known orientation calculi can be expressed in the moregeneral Oriented Point Relation Algebra (OPRAm [30]). In addition, they demonstrated that the mapping can be used todetermine composition tables of other calculi from that of an OPRAm. The composition-based reasoning is, however, in-complete for reasoning in most of these calculi [20,29]. Even worse, we do not know if the consistency problem is an NPproblem for all but the calculus introduced in [20]. We regard this as a major challenge in the theoretical research andapplication of qualitative orientation calculi.9. ConclusionThis paper provided a cubic algorithm for checking the consistency of complete basic CDC networks, which was earlierobserved as impossible [31] for connected regions. If a basic CDC network is consistent, our algorithm also generates themaximal canonical solution. This general algorithm was then applied to solve the pairwise consistency problem and theweak composition problem.Although devised to solve cardinal directional constraints between connected regions, our main algorithm can also beadapted to cope with cardinal directional constraints between possibly disconnected regions as well as those between simpleregions. For a complete network of basic CDCd constraints, our algorithm determines in cubic time if it is consistent. As forcardinal direction constraints over simple regions, we proved that each consistent basic CDC network has a solution usingonly simple regions. This suggests that the CDC does not distinguish between simply connectivity and connectedness.It is worth mentioning that our cubic algorithm only works for complete basic CDC (or CDCd) networks. This is unlike theO (n5) algorithm in [41], which can be applied to solve possibly incomplete sets of basic CDCd constraints. It is still unknownif there exist efficient algorithms for checking the consistency of possibly incomplete sets of basic CDC constraints.Most potential applications of qualitative spatial reasoning require multiple aspects of space. Combining spatial con-straints of different calculi is a very important problem in the research of qualitative spatial reasoning. Some work has beendone in this direction (see e.g. [14,22,28]). In particular, [28] points out that reasoning with basic RCC8 and basic RA [2]constraints is in P, but reasoning with basic RCC8 and basic CDCd constraints is NP-Complete. Note that spatial variables inthe RCC8, the RA, and the CDCd are all interpreted over possibly disconnected regions. It is still open if similar results holdfor connected regions. In particular, we do not know whether reasoning with basic RCC8 and basic CDC constraints is stilldecidable if spatial variables are interpreted over connected regions.AcknowledgementsWe thank the anonymous referees for their helpful suggestions. This work was partially supported by an ARC FutureFellowship (FT0990811) and a MSRA Young Professorship, and by the NSF of China (60673105, 60736011), and the NationalBasic Research Program of China (2007CB311003).Appendix A. Direction relation vectors and projective interval relations{v iρ yIn this section, we introduce a method to compute the projective IA networks Nx = {v iρ xi j v j}ni, j=1.We begin with the one-dimensional counterpart of CDC relations.i, j=1 of a basic CDC network N = {v iδi j v j}ni j v j}ni, j=1 and N y =980W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Definition 16 (direction relation vector). Suppose I = [x−], L2 = ( yreal line into three parts L1 = (−∞, yvector dir(I, J ) = (d1, d2, d3), where di = 0 iff (x−, y−, x+] and J = [ y+), and L3 = [ y+) ∩ Li = ∅. In this case, we call (d1, d2, d3) a direction relation vector.J partitions the+, +∞). The direction of I to J is encoded in a Boolean+] are two intervals. Interval−, y−, xClearly, a Boolean vector t = (t1, t2, t3) is a direction relation vector iff there exist two intervals I, J such that t = dir(I, J ).The following proposition gives a characterization of direction relation vectors.Proposition 20. A Boolean vector t = (t1, t2, t3) is a direction relation vector if and only if t (cid:14)= (0, 0, 0) and t (cid:14)= (1, 0, 1).Interestingly, each direction relation vector actually represents an IA relation.Proposition 21. For two intervals I, J , t = (t1, t2, t3) is the direction relation vector of I to J iff (I, J ) is an instance of αt , wheretαt(1, 0, 0)p ∪ m(0, 1, 0)s ∪ d ∪ f ∪ eq(0, 0, 1)pi ∪ mi(1, 1, 0)o ∪ fi(0, 1, 1)oi ∪ si(1, 1, 1)diProof. Take t = (1, 0, 0) as example. For I = [x∅, and xhold. This is equivalent to saying that x+ (cid:2) y+] and J = [ y−+ (cid:2) y−, x++], dir(I, J ) = (1, 0, 0) iff x−, y, (x, which is possible iff (I, J ) ∈ p ∪ m. (cid:2)− < y−−, x+) ∩ ( y−, y+) =In what follows, we call an IA relation a vector IA relation if it is the IA relation represented by a direction relation vector.We make no difference between a direction relation vector and the IA relation it represents. By the above proposition, weknow there are six vector IA relations, viz.p ∪ m,s ∪ d ∪ f ∪ eq,pi ∪ mi,o ∪ fi,oi ∪ si,di.Note that a vector IA relation is in general non-basic, but a pair of vector IA relations are more precise. For example, fromdir(I, J ) = (0, 1, 0), we are not sure whether (I, J ) is in s, or d, or f, or eq. Assuming dir( J , I) is also given, then it is easy tosee that the IA relation between I, J is definite, i.e. a basic IA relation.The following proposition summaries the correspondence between pairs of direction relation vectors and IA relations.Proposition 22. For a pair of direction relation vectors (s, t) and two intervals I, J , we have s = dir(I, J ) and t = dir( J , I) iff (I, J ) isan instance of the basic IA relation in the cell specified by (s, t) in Table 9.Proposition 22 shows that all basic IA relations except ‘meets’ and ‘before’ (and their converses) can be represented aspairs of direction relation vectors.Proposition 23. Suppose δ = [dχ ]χ ∈TileName is a basic CDC relation. Then the x-projective interval relation ιx(δ) is the IA relationassociated to the vector (d1, d2, d3), i.e. (I, J ) ∈ ιx(δ) iff dir(I, J ) = (d1, d2, d3), whered1 = max(cid:2)dN W , dW , dS W(cid:3),d2 = max(cid:2)dN , d O , dS(cid:3),(cid:2)d3 = maxdN E , dE , dS E(cid:3).Proof. Omitted. (cid:2)Table 9Pairs of vector IA relations.s\t(1, 0, 0)(0, 1, 0)(0, 0, 1)(1, 1, 0)(0, 1, 1)(1, 1, 1)(1, 0, 0)∅∅pi, mi∅∅∅(0, 1, 0)∅eq∅fisidi(0, 0, 1)p, m∅∅∅∅∅(1, 1, 0)∅f∅∅oi∅(0, 1, 1)∅s∅o∅∅(1, 1, 1)∅d∅∅∅∅W. Liu et al. / Artificial Intelligence 174 (2010) 951–983981As a corollary, we haveProposition 3. Suppose δ is a basic CDC relation. Then the x-projective interval relation ιx(δ) is one of the following IA relationsp ∪ m,s ∪ d ∪ f ∪ eq,pi ∪ mi,o ∪ fi,oi ∪ si,di.(46)Proof. This is because, by Proposition 23, ιx(δ) is an vector IA relation. Checking Proposition 21, we know an vector IArelation must be an IA relation in Eq. (46). (cid:2)By Proposition 22 and Proposition 23, we haveProposition 4. For a pair of basic CDC constraints (δ, γ ), ιx(δ, γ ) is either empty or an IA relation in B∗int , whereB∗int= {o, s, d, f, eq, fi, di, si, oi} ∪ {p ∪ m, pi ∪ mi}.(47)Proof. Recall ιx(δ, γ ) = ιx(δ) ∩ ιx(γ )∼the intersection of two vector IA relations is either empty or a relation in Eq. (13). (cid:2). Because ιx(δ) and ιx(γ ) are two vector IA relations. According to Table 9, we knowFor a pair of basic CDC constraints (δ, γ ), the projective IA relation ιx(δ, γ ) can be computed in constant time:1. Compute ιx(δ) and ιx(γ ) according to Proposition 23;2. Check Table 9 and determine ιx(δ) ∩ ιx(γ )∼.The projective IA networks of a basic CDC network can be computed in O (n2) time.Proposition 24. Suppose N = {v iδi j v j}n{v iρ yi, j=1 can be computed in O (n2) time.i j v j}ni, j=1 is a basic CDC network. Then its projective IA networks Nx = {v iρ xi j v j}ni, j=1 and N y =Proof. This is because for each pair of (i, j), ιxρ yi jand N y can be computed in O (n2) time. (cid:2)\ {m ∪ mi}, we know ρ xi j and ρ y= ι yi ji j and ι y\ {m ∪ mi} andi j can also be computed in constant time. Since there are O (n2) pairs, it is clear Nxi j can be computed in constant time. By ρ x= ιxi ji jRemark 5. For the CDCd, i.e. the Cardinal Direction Calculus for possibly disconnected regions, we can compute the projectiveinterval relations in a similar way. In particular, similar to Proposition 23, the x-projective interval relation ιx(δ) of a basicCDCd relation δ = [dχ ]χ ∈TileName is the IA relation associated to the vector (d1, d2, d3), where d1 = max{dN W , dW , dS W },d3 = max{dN E , dE , dS E }, and d2 is 1 if both d1 and d3 are 1, and is max{dN , d O , dS } otherwise. For example, if δ = W : N E,then ιx(δ) is the IA relation associated to the vector (1, 1, 1), which is di according to Proposition 21. Except the abovemodification, all the other procedures for computing the projective IA networks of a basic CDCd network are exactly thesame as that in CDC. This means the projective IA networks can also be computed in O (n2) time for CDCd.Appendix B. Proof of Proposition 12Proposition 12. Each consistent basic CDC network has a regular solution that is meet-free.Proof. Let a = {ai}ncst = [αs, αs+1] × [βt, βt+1] (see Eqs. (16)–(22) for definitions of αs, βt, ar(cid:31)i=1 be a regular solution of N . Suppose C(a) = {cst : 0 (cid:2) s < nx, 0 (cid:2) t < n y} is the cell set of a, where=◦ ∩ cst (cid:14)= ∅}. We show the meet-freeing process described in Section 4.2 can remove all meet-points whilei , cst etc.). Because a is regular, we know ai = ar{cst ∈ C(a): aichanging no CDC relations.Take the x-direction as example. We prove this by using induction on mx, the number of x-meet points of a. Suppose thei=1 has m > 0 x-meet points.hypothesis holds for any regular solutions with at most m − 1 x-meet points. Assume a = {ai}nWe show a can be transformed into another regular solution with fewer x-meet points.Suppose αk is the largest x-meet point, where 0 < k < nx. Write α∗ = (αk + αk+1)/2. The line x = α∗divides each cell+kl . For each 1 (cid:2) i (cid:2) n and each 0 (cid:2) l < n y , if ckl ⊆ ai but−ckl (0 (cid:2) l < n y ) into two equal parts, written in order ckl and c−∗ck−1,l (cid:14)⊆ ai then delete ci for the remaining part of ai , i.e.kl from ai (cf. Fig. 8(a)). Write a(cid:13)+kt : ckt ⊆ ai−kt : ckt, ck−1,t ⊆ ai{cst ⊆ ai: s (cid:14)= k} ∪(cid:13)(cid:2)c(cid:13)(cid:2)c=∪∗i(cid:3)(cid:3)a.(48)Clearly, each a∗iis contained in ai . We claim a∗ = {a∗ii=1 is a regular solution of N which has fewer x-meet points.}n982W. Liu et al. / Artificial Intelligence 174 (2010) 951–983Write C 0 = {cst ∈ C(a): s (cid:14)= k}, C+−the union of C 0, C, and C+−Suppose I x(ai) = [xi , xi+kt : ckt ∈ C(a)}, C+ = {c. Moreover, each a]. We can easily prove that I x(a∗i ) and I x(a∗i∗It is then clear that two intervals I x(a, we know a∗points of a∗has fewer x-meet points than a.− = {c−kt : ckt ∈ C(a)}. It is clear that C(a∗), the cell set of a∗, isis composed of cells in C(a∗). This shows that a∗i ) = [α∗, xj ) meet iff I x(ai) and I x(a j) meet. Since αk and α∗−∗i ) = I x(ai) if xi(cid:14)= αk and I x(a∗is also regular.+i−] ⊂ I x(ai) if x= αk.icannot not be x-meetWe next prove that each a∗iand 4-connectedness in a cell set (cf. Definition 10), and prove that aProposition 8).6is a connected region. Similar to digital regions, we can introduce the notions of 4-neighborsis a connected region iff it is 4-connected (cf.∗i] × [β0, βn yIf I x(ai) is contained in [0, αk] or [αk+1, αnx=[α∗, αnxis4-connected. We first observe that there exists 0 (cid:2) t < n y such that ck−1,t, ckt are both contained in ai . This is due tothe 4-connectedness of ai in the cell set C(a). Second, we show each C(a∗)-cell c in ais 4-connected to ck−1,t , hence4-connected to c∗], then ai∗is clearly a connected region. Suppose [αk−1, αk+1] ⊆ I x(ai). We show ai= ai . Moreover, if I x(ai) is contained in [αk, αnx] ∩ ai . In these cases, a], then a∗i∗i∗i−kt and c+kt , in a∗i .+Without loss of generality, we suppose c = c. By the 4-connectedness of ai in C(a), we know ck−1,t is 4-connectedto ckt(cid:3) in ai . Suppose ck−1,t = c(0), c(1), . . . , c(m) = ckt(cid:3) is a series of pairwise different C(a)-cells in ai such that c(i+1) is a4-neighbor of c(i) for i = 0, . . . , m − 1. We replace each c(i) with one or two C(a∗)-cells if c(i) is not in C(a∗). We replace c(m)kt otherwise. For 1 (cid:2) i < m, if c(i−1) is the left 4-neighborby cof c(i) = ckt1 , we replace c(i) with c, cinkt . It is straightforward to prove the revised series of C(a∗)-cells are 4-connected inorder; and otherwise, replace c(i) with c∗ai . This shows that each akt in order if c(m−1) is the left 4-neighbor of ckt(cid:3) ; and by cin order; if c(i+1) is the left 4-neighbor of c(i), we replace c(i) with c−kt, c+kt1+−kt1+kt1−kt1, c++kt(cid:3) ∈ C+∗iWe then prove that dir(a(cid:10)(cid:11)∃c ∈ C(a)c ⊆ ai ∩ χ (a j)is a connected region.∗i , a∗j ) = dir(ai, a j) for each pair of i (cid:14)= j. This is equivalent to proving that(cid:10)∗aj∗ ⊆ a∗ ∈ C(cid:11)(cid:11)c∩ χ∃ciff∗ia(cid:10)(cid:10)(cid:11)∗(49)(cid:3) ⊆ a∗ ⊆ χ (a∗+kt if c = ckt . Itholds for all 1 (cid:2) i, j (cid:2) n and all χ ∈ TileName. For each c ∈ C(a), define c∗∗j ). It is also clear that c ⊆ ai iff cis straightforward to prove that c ⊆ χ (a j) iff ci . This shows that if there∗∗∗ ⊆ ain C(a∗) s.t. cexists c ∈ C(a) s.t. c ⊆ ai ∩ χ (a j) then there exists cj ). On the other hand, suppose there existsi−+(cid:3) = c(cid:3) ⊆ ai ∩ χ (a j); if c(cid:3) = c(cid:3) ∈ C0, then c(cid:3) ∈ C(a∗) s.t. c∩ χ (akt for some t, then ckt ⊆ ai ∩ χ (a j). If cckt for∗∗∗i , both ckt, ck−1,t are contained in ai . By the construction of asome t, then by cj , we knowi and the definition of a∗j ) = M(a j) otherwise. It is easy to see that either ckt ⊆ χ (a j) orM(ack−1,t ⊆ χ (a j). This implies that either ckt ⊆ ai ∩ χ (a j) or ck−1,t ⊆ ai ∩ χ (a j). Therefore, Eq. (49) holds for every i, j, χ . Thisshows that a∗is a regular solution of N which has fewer x-meet points than a. By the induction hypothesis, we know acan be transformed into a regular meet-free solution. (cid:2)∗i(cid:3) ⊆ aj ) = M(a j) ∩ [α∗, x∗ = c if c ∈ C 0 and define c−] × [0, n y] if xj= αk and M(a∗j ). If c∩ χ (a∗ ⊆ a∗ = c+j∗References[1] J.F. Allen, Maintaining knowledge about temporal intervals, Communications of the ACM 26 (11) (1983) 832–843.[2] P. Balbiani, J.-F. Condotta, L. Fariñas del Cerro, A new tractable subclass of the rectangle algebra, in: Proceedings of the 16th International JointConference on Artificial Intelligence (IJCAI-99), 1999, pp. 442–447.[3] S. Cicerone, P. di Felice, Cardinal directions between spatial objects: the pairwise-consistency problem, Information Sciences 164 (1–4) (2004) 165–188.[4] E. Clementini, R. Billen, Modeling and computing ternary projective relations between regions, IEEE Transactions on Knowledge and Data Engineer-ing 18 (6) (2006) 799–814.[5] E. Clementini, S. Skiadopoulos, R. Billen, F. Tarquini, A reasoning system of ternary projective relations, IEEE Transactions on Knowledge and DataEngineering 22 (2) (2010) 161–178.[6] A.G. Cohn, J. Renz, Qualitative spatial reasoning, in: F. van Harmelen, V. Lifschitz, B. Porter (Eds.), Handbook of Knowledge Representation, Elsevier,2007.[7] I. Düntsch, H. Wang, S. McCloskey, A relation-algebraic approach to the region connection calculus, Theoretical Computer Science 255 (1–2) (2001)63–83.[8] F. Dylla, J.O. Wallgrün, On generalizing orientation information in OPRAm , in: Proceedings of the 29th Annual German Conference on AI (KI-06),2006, pp. 274–288.[9] M.J. Egenhofer, Reasoning about binary topological relations, in: Proceedings of the 2nd International Symposium on Advances in Spatial Databases(SSD’91), Springer-Verlag, London, UK, 1991, pp. 143–160.[10] A.U. Frank, Qualitative spatial reasoning with cardinal directions, in: Proceedings of the 7th Austrian Conference on Artificial Intelligence (ÖGAI-91),1991, pp. 157–167.[11] C. Freksa, Using orientation information for qualitative spatial reasoning, in: Theories and Methods of Spatio-Temporal Reasoning in Geographic Space,in: Lecture Notes in Computer Science, vol. 639, Springer, 1992, pp. 162–178.[12] E.C. Freuder, Synthesizing constraint expressions, Communications of the ACM 21 (11) (1978) 958–966.[13] E.C. Freuder, A sufficient condition for backtrack-free search, Journal of the ACM 29 (1) (1982) 24–32.[14] A. Gerevini, J. Renz, Combining topological and size information for spatial reasoning, Artificial Intelligence 137 (1) (2002) 1–42.[15] R.K. Goyal, Similarity assessment for cardinal directions between extended spatial objects, PhD thesis, The University of Maine, 2000.6 Another possible way is to transform these a∗iinto digital region as in Eq. (23).W. Liu et al. / Artificial Intelligence 174 (2010) 951–983983[16] R.K. Goyal, M.J. Egenhofer, The direction-relation matrix: A representation of direction relations for extended spatial objects, in: UCGIS Annual Assemblyand Summer Retreat, Bar Harbor, ME, 1997.[17] R.K. Goyal, M.J. Egenhofer, Similarity of cardinal directions, in: Proceedings of the 7th International Symposium on Advances in Spatial and TemporalDatabases (SSTD 2001), 2001, pp. 36–58.[18] H.W. Guesgen, Spatial reasoning based on Allen’s temporal logic, Technical report, International Computer Science Institute, 1989.[19] P.W. Huang, C.H. Lee, Image database design based on 9D-SPA representation for spatial relations, IEEE Transactions on Knowledge and Data Engineer-ing 16 (12) (2004) 1486–1496.[20] A. Isli, A.G. Cohn, A new approach to cyclic ordering of 2D orientations using ternary relation algebras, Artificial Intelligence 122 (1–2) (2000) 137–187.[21] A. Krokhin, P. Jeavons, P. Jonsson, Reasoning about temporal relations: The tractable subalgebras of Allen’s interval algebra, Journal of the ACM 50 (5)(2003) 591–640.[22] S. Li, Combining topological and directional information for spatial reasoning, in: Proceedings of the 20th International Joint Conference on ArtificialIntelligence (IJCAI-07), 2007, pp. 435–440.[23] S. Li, H. Wang, RCC8 binary constraint network can be consistently extended, Artificial Intelligence 170 (1) (2006) 1–18.[24] S. Li, M. Ying, Region connection calculus: its models and composition table, Artificial Intelligence 145 (1–2) (2003) 121–146.[25] S. Li, M. Ying, Generalized region connection calculus, Artificial Intelligence 160 (1–2) (2004) 1–34.[26] G. Ligozat, Reasoning about cardinal directions, Journal of Visual Languages and Computing 9 (1) (1998) 23–44.[27] G. Ligozat, J. Renz, What is a qualitative calculus? A general framework, in: Proceedings of the 8th Pacific Rim Trends in Artificial Intelligence (PRICAI-04), 2004, pp. 53–64.[28] W. Liu, S. Li, J. Renz, Combining, RCC-8 with qualitative direction calculi: Algorithms and complexity, in: Proceedings of the 21th International JointConference on Artificial Intelligence (IJCAI-09), AAAI, 2009.[29] D. Lücke, T. Mossakowski, D. Wolter, Qualitative reasoning about convex relations, in: Proceedings of the international conference on Spatial CognitionVI: Learning, Reasoning, and Talking about Space, Springer, 2008, p. 440.[30] R. Moratz, Representing relative direction as a binary relation of oriented points, in: Proceedings of the 17th European Conference on Artificial Intelli-gence (ECAI-06), 2006, p. 407.[31] I. Navarrete, A. Morales, G. Sciavicco, Consistency checking of basic cardinal constraints over connected regions, in: Proceedings of the 20th Interna-tional Joint Conference on Artificial Intelligence (IJCAI-07), 2007, pp. 495–500.[32] B. Nebel, Computational properties of qualitative spatial reasoning: First results, in: Proceedings of the 19th Annual German Conference on ArtificialIntelligence (KI-95), 1995, pp. 233–244.[33] B. Nebel, H.-J. Bürckert, Reasoning about temporal relations: A maximal tractable subclass of Allen’s interval algebra, Journal of the ACM 42 (1) (1995)43–66.[34] D.A. Randell, Z. Cui, A.G. Cohn, A spatial logic based on regions and connection, in: Proceedings of the 3rd International Conference on KnowledgeRepresentation and Reasoning (KR-92), 1992, pp. 165–176.[35] J. Renz, Maximal tractable fragments of the Region Connection Calculus: A complete analysis, in: Proceedings of the 16th International Joint Conferenceon Artificial Intelligence (IJCAI-99), 1999, pp. 448–454.[36] J. Renz, G. Ligozat, Weak composition for qualitative spatial and temporal reasoning, in: Proceedings of the 11th International Conference on Principlesand Practice of Constraint Programming (CP 2005), Springer, 2005, pp. 534–548.[37] J. Renz, B. Nebel, On the complexity of qualitative spatial reasoning: A maximal tractable fragment of the Region Connection Calculus, ArtificialIntelligence 108 (1999) 69–123.[38] J. Renz, B. Nebel, Qualitative spatial reasoning using constraint calculi, in: M. Aiello, I. Pratt-Hartmann, J. van Benthem (Eds.), Handbook of SpatialLogics, Springer, 2007, pp. 161–215.[39] S. Skiadopoulos, C. Giannoukos, N. Sarkas, P. Vassiliadis, T. Sellis, M. Koubarakis, Computing and managing cardinal direction relations, IEEE Transactionson Knowledge and Data Engineering 17 (12) (2005) 1610–1623.[40] S. Skiadopoulos, M. Koubarakis, Composing cardinal direction relations, Artificial Intelligence 152 (2) (2004) 143–171.[41] S. Skiadopoulos, M. Koubarakis, On the consistency of cardinal direction constraints, Artificial Intelligence 163 (1) (2005) 91–135.[42] S. Skiadopoulos, N. Sarkas, T. Sellis, M. Koubarakis, A family of directional relation models for extended objects, IEEE Transactions on Knowledge andData Engineering 19 (8) (2007) 1116.[43] J.G. Stell, Boolean connection algebras: a new approach to the region-connection calculus, Artificial Intelligence 122 (1) (2000) 111–136.[44] A. Tarski, On the calculus of relations, Journal of Symbolic Logic 6 (1941) 73–89.[45] R.E. Valdés-Pérez, The satisfiability of temporal constraint networks, in: Proceedings of the 6th National Conference on Artificial Intelligence (AAAI-87),1987, pp. 256–260.[46] F. Wolter, M. Zakharyaschev, Spatial reasoning in RCC-8 with Boolean region terms, in: Proceedings of the 14th European Conference on ArtificialIntelligence (ECAI 2000), 2000, pp. 244–250.[47] F. Wolter, M. Zakharyaschev, Spatio-temporal representation and reasoning based on RCC-8, in: Proceedings of the 7th Conference on Principles ofKnowledge Representation and Reasoning (KR 2000), 2000, pp. 3–14.