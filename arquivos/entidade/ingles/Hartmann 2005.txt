Artificial Intelligence 166 (2005) 1–36www.elsevier.com/locate/artintTemporal prepositions and their logic ✩Ian Pratt-HartmannSchool of Computer Science, University of Manchester, Manchester M13 9PL, UKReceived 20 April 2004; accepted 9 April 2005Available online 1 June 2005AbstractA fragment of English featuring temporal prepositions and the order-denoting adjectives first andlast is defined by means of a context-free grammar. The phrase-structures which this grammar as-signs to the sentences it recognizes are viewed as formulas of an interval temporal logic, whosesatisfaction-conditions faithfully represent the meanings of the corresponding English sentences. Itis shown that the satisfiability problem for this logic is NEXPTIME-complete. The computationalcomplexity of determining logical relationships between English sentences featuring the temporalconstructions in question is thus established. 2005 Elsevier B.V. All rights reserved.Keywords: Natural language; Temporal prepositions; Interval temporal logic; Computational complexity1. IntroductionConsider the following sentences:(1) An interrupt was received during every cycle(2) The main process ran after the last cycle✩ This paper was written during a visit by the author to the Institute for Communicating and CollaborativeSystems, Division of Informatics, University of Edinburgh. The hospitality of the ICCS and the support ofthe EPSRC (grant reference GR/S22509) are gratefully acknowledged. The author would like to thank MarkSteedman and David Brée for valuable discussions and the anonymous referees for their helpful comments onthis paper.E-mail address: ipratt@mailhost.cs.man.ac.uk (I. Pratt-Hartmann).0004-3702/$ – see front matter  2005 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2005.04.0032I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36(3) While the main process ran, an interrupt was received before loop 1 was executed forthe first time.These sentences speak of events and their temporal locations: of what happened and when.The principal devices they employ to encode this information are temporal prepositionsand the adjectives first and last. The aim of this paper is to answer the question: Whatis the computational complexity of determining logical relationships between sentencesencoding temporal information using such devices?This question is of theoretical interest, because the events mentioned in (1)–(3)—cycles,executions of processes, receipts of interrupts—are extended in time; and temporal logicswhich deal with extended events—so-called interval temporal logics—typically exhibithigh computational complexity. Given that the syntax of these logics has little affinity withthat of temporal expressions in English, it is natural to ask whether the meanings of sen-tences such as (1)–(3) can be captured in a computationally manageable logic. The formalsemantics of temporal constructions in English have been investigated by a succession ofresearchers [4,6,12,13,15,20,21]. Yet in none of these accounts are the issues of expressivepower and computational complexity to the fore. Indeed, many treatments of the semanticsof temporal constructions in English represent sentence-meanings in a first-order languagehaving variables which range over time-intervals and predicates which correspond to event-types and temporal order-relations—a logic which is easily shown to be undecidable. Giventhe recent surge of interest in logical fragments of limited computational complexity, thissituation is unsatisfactory. There are evident practical and theoretical reasons for present-ing the semantics of natural language constructions, where possible, using formal systemsof limited expressive power.The plan of this paper is as follows. Section 2 outlines the semantics of the Englishtemporal constructions considered in this paper. Section 3 then uses a simple context-freegrammar to define a fragment of English featuring these constructions; we call this frag-ment T PE, short for temporal preposition English. We show how the phrase-structuresassigned to T PE-sentences by this grammar can in fact be viewed as expressions in aninterval temporal logic, which we call T PL. Section 4 presents formal semantics forT PL. Sections 5 and 6 provide matching upper and lower complexity-bounds for T PL-satisfiability, showing that this problem is NEXPTIME-complete.The following terminology and notation will be used throughout. We take a (time) inter-val to be a closed, bounded, convex (non-empty) subset of the real line. We denote the setof intervals by I, and we use the (possibly decorated) letters I , J , . . . , as variables rang-ing over I. Observe that intervals may be punctual. If I and J denote the intervals [a, b]and [c, d], respectively, with a, b, c, d ∈ R and a (cid:1) c (cid:1) d (cid:1) b, we let the terms init(J, I )and fin(J, I ) denote the intervals [a, c] and [d, b], respectively. In other words, wheneverJ ⊆ I is true, we take init(J, I ) to denote the initial segment of I up to the beginning ofJ , and fin(J, I ) to denote the final segment of I from the end of J . More standardly, thesymbol ⊂ always denotes the strict subset relation, and ⊆ the corresponding non-strict re-lation. Finally, we occasionally employ the definite quantifier ιx(φ, ψ) with the standard(Russellian) semantics.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3632. SemanticsIn this section, we consider the semantics of the temporal constructions featured in thefragment of English defined below—principally, the temporal prepositions. Here, we fol-low modern usage and count temporal subordinating conjunctions as temporal prepositionstaking clausal (rather than nominal) complements. We defer a formal specification of thefragment in question to Section 3, and the algorithmic derivation of sentence-meanings toSection 4.2.1. Temporal preposition-phrases: basic semanticsConsider the following sentences:(4) An interrupt was received(5) An interrupt was received during every cycle(6) An interrupt was received during every cycle until the main process ran(7) After the initialization phase, an interrupt was received during every cycle until the mainprocess ran.Sentence (4) asserts that, within some contextually specified interval of interest, there is aninterval over which an interrupt was received. Interpreting the unary predicate int-rec sothat it is satisfied by all and only those time intervals over which an interrupt was received,we may thus represent the meaning of (4) by the formula(8) ∃J0(int-rec(J0) ∧ J0 ⊂ I ).Notice that the temporal context to which the quantification in (4) is limited is representedby the free variable I in (8). That is: the meaning of (4) is a temporal abstract, receiv-ing a truth-value (in an interpretation) only relative to a time interval. Viewing sentencemeanings in this way greatly simplifies the semantics of temporal preposition-phrases.Sentence (5) asserts that, within the given temporal context, every interval over which acycle occurs includes some interval over which an interrupt was received. Interpreting theunary predicate cyc so that it is satisfied by all and only those time intervals over which acycle occurs, we may thus represent the meaning of (5) by the formula(9) ∀J1(cyc(J1) ∧ J1 ⊂ I → ∃J0(int-rec(J0) ∧ J0 ⊂J1)).The normal type in (9) indicates the material contributed by the temporal preposition-phrase during every cycle, and the light type the material contributed by the sentence Aninterrupt was received, which it modifies. Observe that this material in light type is iden-tical to the formula (8), except that the free temporal context variable has been boundby a quantifier introduced by the temporal preposition-phrase. On this view, the tempo-ral preposition-phrase functions semantically as a modal operator, mapping one temporalabstract to another.4I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Sentences (6)–(7) can now be treated analogously. Making use of the notation intro-duced at the end of Section 1, and helping ourselves to a suitable signature of unarypredicates of intervals, we may plausibly represent these sentences’ truth-conditions as,respectively,(10)(11)ιJ2(main(J2) ∧ J2 ⊂ I,∀J1( cyc(J1) ∧ J1 ⊂init(J2, I )→ ∃J0(int-rec(J0) ∧ J0 ⊂ J1)))ιJ3(init-phase(J3) ∧ J3 ⊂ I,ιJ2(main(J2) ∧ J2 ⊂fin(J3, I ),∀J1(cyc(J1) ∧ J1 ⊂ init(J2,fin(J3, I )) →∃J0(int-rec(J0) ∧ J0 ⊂ J1)))).We pass over the usual issues as to the faithfulness of the Russellian interpretation ofdefinite quantification (either expressed or implied) in these sentences. Again, the nor-mal type in (10) and (11) indicates the material contributed by the newly-added temporalpreposition-phrases in (6) and (7) respectively, and the light type the material contributedby the sentences they modify. Again, this colouring scheme highlights the fact that thesuccessive temporal preposition phrases function semantically as modal operators, bindingthe temporal context variables associated with the sentences they modify. This cascadingquantification, typical of iterated temporal preposition phrases, was pointed out in [18],and is discussed further in [25].The fragment of temporal English considered here deals only with events, as opposedto states—that is, only with telic as opposed to atelic eventualities ([22]; see [19] for anextended discussion). The thesis that all simple, event-reporting sentences are implicitlyexistentially quantified was proposed in [5], and is defended in [17]. These authors takethe quantification in question to be over events rather than time intervals; but this issuemay be ignored for present purposes. A recent collection of papers on this topic can befound in [10]. One could doubtless quibble about whether the ⊂ in (8)–(11) should be ⊆;however, the operative concepts seem too vague for this issue to admit of resolution.We drew attention above to the fact that the formulas (8)–(11) feature a free variablerepresenting a temporal context. This naturally suggests an alternative representation usinga propositional modal logic in which formulas are evaluated relative to time-intervals, andevent-types are represented by propositional variables. Suppose, for example, such a logicfeatures the modal operator (cid:8)D(cid:9), where (cid:8)D(cid:9)φ is taken to be true at an interval of evaluationI if and only if, for some proper subinterval J of I , φ is true at J ; and let [D] be the modaldual of (cid:8)D(cid:9). Then the 1-place first-order formulas (8) and (9) can be equivalently—andmore compactly—re-written as the propositional modal formulas(12) (cid:8)D(cid:9)int-rec(13) [D](cyc → (cid:8)D(cid:9)int-rec).It is obvious that, with the aid of appropriate modal operators, formulas (10) and (11) couldbe treated analogously.Several such logics have in fact been proposed in the literature, of which the best-known are the systems usually referred to as CDT [24] and HS ([9]; see also [23]). TheI. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–365logic CDT is strictly less expressive than the first-order language employed in (8)–(11);and the logic HS is in turn strictly less expressive than CDT. Despite its æsthetic ap-peal, however, a reformulation along the lines of (12)–(13) yields no useful information onthe computational complexity of the logic generated by temporal constructions in naturallanguage. Halpern and Shoham [9] showed that HS is undecidable over all interesting tem-poral flows; and still very little is known about its decidable fragments. (For a discussion,see [8].) In fact, the most commonly encountered way to ensure decidability for modalinterval temporal logics is to impose the restriction that the proposition-letters representpoint-events. This move leads naturally to various well-known systems, for example, thoseof [3,14,16]. While these logics are of considerable theoretical interest in their own right,they are of little use for representing the meanings of temporal constructions in naturallanguage.One striking characteristic of formulas (8)–(11) is the ‘quasi-guarded’ nature of thequantification they feature. Thus, for example, (8) existentially quantifies over intervalssatisfying the predicate int-rec; likewise, (9) universally quantifies over intervals satisfyingthe predicate cyc; and so on. By contrast, the modal operator (cid:8)D(cid:9) suggested above (andits dual) quantify over all proper subintervals of the current interval of evaluation with-out restriction; corresponding remarks apply to all the modal operators of CDT and HS:they lack the ‘quasi-guarded’ character of formulas (8)–(11). It is precisely this featurewhich we shall exploit in our search for a computationally manageable logic to capture themeanings of temporal expressions in English.2.2. ComplicationsIt is impossible, within the space of a few pages, to do full justice to the complexitiesof the English constructions featured in this paper. Nevertheless, some elaboration of theforegoing account is required; we confine ourselves to those features of greatest relevanceto the ensuing computational analysis. For a comprehensive guide to the grammar of Eng-lish prepositions, see [11, Chapter 7]; for an account of the English temporal prepositionsin particular, see, e.g., [1].We begin with some remarks on the temporal preposition before. We take the sentence(14) An interrupt was received before the main process ranto be true in a temporal context I when there is a unique running of the main processduring I , and an interrupt is received over some subinterval of I prior thereto. Ordinaryusage is vague as to whether it is the beginning- or end-times of the events in question thatare being compared. To resolve any uncertainty, we simply take (14) to require that someinterrupt-event finished before the run of the main process began. We therefore propose torender the meaning of (14) by(15) ιJ1(main(J1) ∧ J1 ⊂ I, ∃J0(int-rec(J0) ∧ J0 ⊂ init(J1, I ))).Notice that these truth-conditions impose no limit on how long before the running of themain process the interrupt was received (except that imposed by the temporal context I ).6I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36That is: before is here used in the sense of some time before. Sometimes, however, beforeis taken to mean just before or shortly before (The tablets are to be taken before dinner).This latter sense reflects the possibility of adding a time-measure as a specifier, as in thephrase five minutes before. In this paper, we ignore this latter sense of before entirely:incorporating it into our account would involve us in a discussion of either vagueness orthe semantics of temporal measure-phrases, both of which we choose to avoid.Actually, the previous paragraph is misleading in glossing the sense of before assumedhere as some time before. For the existential quantification in the meaning (15) of (14) is notprovided by the before-phrase at all, but rather by the sentence An interrupt was receivedoccurring in its scope; the before-phrase serves merely to specify a temporal context towhich that quantification is restricted. In fact, there is no reason this quantification need beexistential at all, thus:(16) An interrupt was received during every cycle before the main process ran.We take (16) to have the meaning (10); that is, we take it to be (truth-conditionally) synony-mous with (6). Here again, the before-phrase in (16) serves merely to identify a temporalcontext to which the quantification in its scope is restricted; in particular, it provides nouniversal quantification of its own.As for before, so for until: until-phrases serve only to create temporal contexts restrict-ing the quantification provided by the sentences in their scope; but they do not provide thatquantification. This is most apparent by considering the pair of sentences (5) and (6), wherethe universal quantification evidently arises from the determiner every. This treatment ofuntil may surprise readers familiar with so-called until-operators in temporal logic, whosesemantics do typically contribute universal quantification. Apparently, there is an associa-tion of until with universal quantification, at least in the minds of temporal logicians; andit is natural to ask how this apparent association can be reconciled with the view adoptedhere.The answer is as follows. Sentence (5), which the until-phrase in sentence (6) modifies,is downward monotonic: if it is true over some interval I , then it is also true over allsubintervals of I . (Downward monotonicity is, of course, characteristic of sentences whichuniversally quantify over subintervals.) It transpires that until-phrases require a downward-monotonic scope, as witnessed by the anomalous(17) ? An interrupt was received until the main process ran(18) ? An interrupt was received during some cycle until the main process ran.Thus, on our account,the universal quantification—or more accurately, downwardmonotonicity—is not provided by until; but the presence of until requires it to be pro-vided by something else. Before imposes no such requirement, as we have seen. Thus, thedifference between before (in the sense adopted here) and until lies not in their contributionto truth-conditions, but merely in the situations in which they can be used. Actually, down-ward monotonicity is not always sufficient for applicability of until-phrases (see, e.g., [26]).The exploration of this issue—and indeed of the myriad other differences between beforeand until—lies outside the scope of the present enquiry. We note in passing that until, likeI. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–367before, also allows nominal complements. However, in the case of until, these complementsmust clearly denote an event or a time:(19) An interrupt was received during every cycle until 5 o’clock/the first execution of themain process(20) ? An interrupt was received during every cycle until the main process.The preposition when creates another sort of difficulty. When serves primarily to indi-cate proximity between the events identified in its scope and complement, thus:(21) An interrupt was received when the main process ran.Sentences such as (21) in fact impose remarkably loose constraints on the temporal relationbetween the events in question, as various writers have noted. But whatever the final verdicton the nature of those constraints, we cannot usefully treat the associated vagueness inthe present paper, and some further regimentation is necessary. To simplify matters, wetreat (21) as synonymous with(22) An interrupt was received while the main process ran,and give it the semantics(23) ιJ1(main(J1) ∧ J1 ⊂ I, ∃J0(int-rec(J0) ∧ J0 ⊂ J1)).Our excuse for doing so is simply that inclusion is an easier relation to work with thanapproximate collocation. Readers who find this expedient too brutal can simply omit whenfrom our fragment.We have so far discussed quantification in the scope of temporal prepositions; we nowmove to the issue of quantification in their complements. Nominal complements of tempo-ral prepositions typically include determiners; and these determiners contribute quantifi-cation to the meanings of sentences containing them. This is evident, for example, withthe occurrences of during every cycle in (5)–(7), which contribute the universal quantifiersin (9)–(11).Clausal complements of temporal prepositions, by contrast, typically lack an overt quan-tifier; and the question therefore arises as to how the variables in these complements getquantified. The answer is that they are (almost always) definitely quantified—i.e. bound byan ι-operator. Thus, until the main process ran in (6) is interpreted as until the unique timeover which the main process ran, as reflected by the ι-operator in (10). It may seem harshto count (6) as false if there are two runs of the main process within the temporal context;it would perhaps be fairer to interpret the relevant until-phrase as picking out the periodbefore the first time over which the main process ran. But since this facility is available inour fragment anyway, as discussed in Section 2.3, the issue need not detain us.The obvious exception to the rule that temporal prepositions interpret their clausal com-plements as definitely quantified is whenever. Thus, we take8I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36(24) Whenever the main process ran, an interrupt was receivedto have the truth-conditions(25) ∀J1(main(J1) ∧ J1 ⊂ I → ∃J0(int-rec(J0) ∧ J0 ⊂ J1)).That is: the variable contributed by the complement of the whenever-phrase is universallyquantified. In the sequel, we shall assume that all quantification in clausal complementsof temporal prepositions is definite, except in the case of whenever, where is it universal.Note that we are mimicking our earlier discussion of when in again taking the operativetemporal relation here to be inclusion rather than approximate collocation. As before, thisrepresents a certain deviation from ordinary usage; again, however, we cannot sensibly dealwith vague truth-conditions here, and so we pass over the issue.Some temporal prepositions have been conspicuous by their absence from the forego-ing discussion. The temporal prepositions on and in, in phrases such as on Mondays orin January, are specific to certain categories of complements, but are otherwise equiva-lent to during. Since this detail clearly has no logical significance, we ignore these usesof in and on, and confine our attention to during. The preposition at, which in Eng-lish is used in conjunction with clock-times (and some religious festivals) may also fallinto this category, though there are further complications here concerning its inherent ap-proximateness. The prepositions for and in, in phrases such as for/in five minutes, take ascomplements temporal measure-phrases. These lie outside the scope of the logic consid-ered here.The preposition by, in its temporal sense, functions analogously to until, except that itprefers upward-monotonic sentences in its scope; moreover, like until, it dislikes comple-ments which are not explicitly temporal, thus:(26) An interrupt was received by 5 o’clock(27) ? An interrupt was received by the first cycle.(Note that (37) has a perfectly natural reading in which by is interpreted non-temporally.)In addition, by exhibits interesting interactions with aspect:(28) The main process ran/had run/was running by 5 o’clock.Finally, we observe that by occurs frequently in the construction by the time . . . with aclausal complement, again with the same preference for qualifying upward-monotonic sen-tences. Dealing with the rather difficult behaviour of by in our fragment would complicatethe grammar without adding anything of logical interest, and so we ignore it.In some respects, the mirror-image of both until and by is since:(29) An interrupt has been received since the main process ran(30) An interrupt has been received during every cycle since the main process ran.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–369(When used in its temporal sense, since requires the sentence in its scope to have perfectaspect.) Unlike until and by, however, since resists embedding in contexts established byquantification, as we see by comparing(31) During every cycle, an interrupt did not occur until the main process ran(32) ? During every cycle, an interrupt has/had not occurred since the main process ran.Because of these complications, we do not include since in our fragment. However, we doinclude after, which we take (again, ignoring some linguistic subtleties) to function as amirror image of before. Given the inclusion of after, our omission of since does not affectthe fragment’s (truth-conditional) expressive power.2.3. First and lastOur fragment will also contain sentences such as(33) An interrupt was received during the first cycle(34) An interrupt was received before the main process ran for the last time.Suppose that, in the relevant temporal context I , there is an unambiguously first cycle:that is, a cycle which begins and ends before all the others. Then (33) asserts that, if J is theinterval over which this cycle occurs, then an interrupt was received over some subintervalof J . A corresponding account can of course be given for (34). Problems arise, however,when there is no unambiguously first cycle within I . Suppose, for example, cycles occurduring intervals J1, J2, and nowhere else, in either of the following arrangements. (In suchdiagrams, left-to-right arrangement depicts temporal order; vertical arrangement has nosignificance.)cycleJ1cycleIJ2IJ2cyclecycleJ1It is unclear what the truth-value of (33) should be in such cases. Apparently, we need tolegislate.We take the mathematically simplest way out. Since we may assume that only finitelymany events of any given type e occur within a given interval I , we proceed as follows. LetJ be the collection of all proper subintervals of I over which an event of type e occurs,and assume J is nonempty. Since J is by hypothesis finite, we can select the (non-empty)subset J (cid:10) whose elements have the (unique) earliest end-point. Now select the uniqueelement J ∈ J (cid:10) whose start-point is latest. Thus, J is the smallest of the earliest-endingproper subintervals of I over which an e-event occurs. In the sequel, then, we interpret thephrase the first e, within a temporal context I , to pick out this interval. (In the situationsdepicted above, these are the intervals marked J1.) Similarly, we interpret the phrase thelast e, within a temporal context I including at least one occurrence of e, to pick out the10I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36smallest of the latest-beginning proper subintervals of I over which an e-event occurs. Tore-iterate, we are simply legislating here in the most convenient way in cases where native-speaker intuition returns no clear verdict; if readers prefer to say that the relevant sentenceslack truth-values in such cases, then the results obtained below apply unproblematically.The only point at which we appeal to this legislation is in Lemma 3 of Section 5.3. A fragment of temporal EnglishThe task of this section is to define a fragment of temporal English. We do this bywriting a context-free grammar to recognize its sentences. The grammar assigns phrase-structures to these sentences in the familiar way, and we shall see that, following somecosmetic re-arrangement, the phrase-structures in question can be regarded as formulas ofthe temporal logic T PL defined in Section 4.3.1. Delineating the fragmentWe begin with the simplest sentences in our fragment:(35) An interrupt was received(36) An interrupt was not received.For present purposes, sentence (35) is taken as atomic: that is, we ignore its internal struc-ture. Accordingly we treat such sentences as vocabulary items, of class S0, and write thegrammar rules:S → S0S0 → an interrupt was received/int-rec.Moreover, the only property of sentence (36) which concerns us is its relation to (35): thatis, we wish to ignore other aspects of its structure. Accordingly, we pretend that (36) isobtained by simply prefixing the word not to (35), and write the grammar rulesS → Neg, S0Neg → not/¬.This expedient removes needless clutter from our grammar, while affecting nothing oflogical substance. (It is a simple exercise to restore the clutter.) Thus, our grammar assignsto (35) and (36) the phrase-structures shown in Fig. 1. These diagrams feature the symbolsint-rec and ¬, as specified in the grammar rules. These symbols are simply mnemonics forthe corresponding vocabulary items, which will be used later.Temporal prepositions with nominal complements belong in our grammar to the cate-gory PN, and occur in phrases such as(37) during every cycle(38) after the initialization phase(39) before the first interrupt.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3611Fig. 1. The structure of sentences (35)–(36).Nominal expressions such as cycle, initialization phase and interrupt are taken to be of(lexical) category N0 and to denote event-types in the same way as items of category S0.Again, we regard them as structureless:N0 → cycle/cycN0 → initialization phase/init N0 → interrupt/int-rec.We allow these expressions to be optionally modified (once) by the order-specifying ad-jectives first and last, resulting in a phrase which in turn combines with a determiner toproduce the complement of a temporal preposition. Accordingly, we write the grammarrulesPP → PN,D, NPD! → OAdj, N0N1Det∀ → every/[ ]PN,D → during/=NPD → DetD, N1DOAdj → first/fDet∃ → some/(cid:8) (cid:9)PN,! → after/>→ N0N1DOAdj → last/lDet! → the/{ }PN,! → before/<,where the variable subscript D in the above rules ranges over the set of tags {∀, ∃, !}. Thus,our grammar assigns to (37)–(39) the respective phrase-structures shown in Fig. 2. Asbefore, we have augmented terminal nodes with the corresponding mnemonics to the rightof the obliques in the lexicon.The tags {∀, ∃, !} simply indicate a subcategorization of NP, Det, N1 and PN. This sub-categorization restricts the use of determiners in two ways. First, it requires that phrasesinvolving first and last only ever combine with the definite article. This requirement reflectsthe observation that (outside university mathematics departments) locutions such as duringa first interrupt and during every first interrupt are anomalous.Our second restriction on the use of determiners requires that complements of the tem-poral prepositions until, before and after also incorporate the definite article. For until, thisrequirement serves to rule out some clearly anomalous sentences (it is the italicized everywhich causes the problem):(40) ? An interrupt occurred during every cycle until every reset point.For before and after, the requirement reflects our earlier decision to interpret before in thesense of some time before, rather than shortly before. To see why, note that common usage(again: professional mathematicians excepted) does not take the sentences(41) An interrupt was received before every reset point(42) An interrupt was received before the first reset point12I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Fig. 2. Structures of preposition-phrases with nominal complements.to be equivalent in contexts where there is a unique first reset point, as our assumed senseof before would require. We conclude that the term before can only have the shortly-beforesense in (41), and so we banish that sentence from our fragment. Admittedly, existentiallyquantified complements with these prepositions sound better, even with our chosen senseof before:(43) An interrupt occurred before some reset point(44) An interrupt occurred during every cycle until some reset point.Indeed, such sentences could be admitted into our fragment without compromising thecomplexity-theoretic results derived below. However, banning sentences such as (41) whileadmitting those such as (43) would generate a logical fragment not fully closed undernegation; and, while such fragments are unproblematic in principle, they tend to makefor notational and conceptual clutter. For simplicity, therefore, we duck the issue, andsimply decree that these temporal prepositions require complements with the definite arti-cle.Temporal prepositions with clausal complements belong in our grammar to the categoryPS, and occur in phrases such as(45) before the main process ran(46) whenever the main process ran(47) while the main process ran for the last time.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3613Fig. 3. Structures of preposition-phrases with sentential complements.Unmodified clausal complements are taken to be atomic, again of category S0. Our gram-mar permits modification (once) of these clausal complements by the adverbials for thefirst/last time, analogous to the modification of nominal complements by the adjectivesfirst/last. Accordingly, we write the grammar rulesPS,! → while/(=, { })PS,! → before/(<, { })PS,∀ → whenever/(=, [ ]),OAdv → for the first time/fOAdv → for the last time/lPP → PS,D, S1D! → S0, OAdvS1S1D→ S0thus assigning to (45)–(47) the respective phrase-structures shown in Fig. 3. Recall thatwhenever is associated with universal, rather than definite, quantification of its comple-ment. That is why the grammar rule for whenever incorporates the bracket-pair [ ], ratherthan { }, to the right of the oblique. The motivation for these mnemonics will be revealedin Section 4.We allow that expressions of categories S0 and N0 may correspond to the same event-type, as indicated by the mnemonics in the lexicon, thus:S0 → the main process ran/mainN0 → run of the main process/main.Since we want to finesse issues of subsentential and subnominal structure, we leave it togrammar-writers’ common sense to spot such nominalizations where they occur. The taskof providing a more complex grammar to automate this job is independent of the issuesaddressed here.Finally, we have grammar rules to adjoin preposition-phrases to sentences and to handlesentence coordination using and and or. There are no surprises here:S → S, PPS → S, Conj, SConj → and/ ∧Conj → or/ ∨ .Fig. 4 shows the phrase-structures of Sentences (4)–(6). Our grammar takes no accountof fronted preposition-phrases, as illustrated, for example, by Sentence (7). It is obvious14I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Fig. 4. Structures of sentences (4)–(6).that this defect can easily be rectified. This completes our explanation of the fragment ofEnglish studied in this paper. We dub this fragment T PE, short for temporal prepositionEnglish; the full list of grammar rules is given in Appendix A.3.2. Re-writing phrase-structuresIn Section 4, we show how phrase-structures in T PE can be treated as formulas in alanguage for which a recursive semantics can be given in the style due to Tarski. Moreover,the satisfaction-conditions thus associated with T PE-sentences convincingly systematizethe meanings proposed for the various examples considered in Section 2. To facilitatethe presentation, we first subject T PE phrase-structures to some minor geometrical re-arrangement, which we now proceed to describe. We have three base cases and threerecursive cases to consider.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3615First base case: Any structure of the forms depicted in Fig. 1 will be re-written morecompactly as follows:SS0eS⇒ (cid:8)e(cid:9)=(cid:13)Neg¬⇒ ¬(cid:8)e(cid:9)=(cid:13).S0e(Here and in the sequel, we have replaced all terminal nodes with the mnemonics to theright of the obliques: this simply unclutters the diagrams.)Second base case: Any structure of category N1 will be re-written more compactly asfollows:N1DN0eN1!N1!⇒ eOAdjfN0e⇒ efOAdjl⇒ el.N0eThird base case: Any structure of category S1 will be re-written analogously:S1DS0eS1!S1!⇒ eS0eOAdv⇒ effS0eOAdv⇒ el.lFirst recursive case: Consider a structure of category S immediately dominating a struc-ture ∆ of category S and a PP with a nominal complement Γ . Assuming that we alreadyknow how to re-write ∆ and Γ , such a structure will be re-written more compactly asfollows:SS:∆PPPN,DNPD⇒ (cid:14)α(cid:14)τ ψ if Γ ⇒ α and ∆ ⇒ ψ,τDetDN1D:Γ(cid:14) (cid:14)where (cid:14) (cid:14) denotes any of the bracket-pairs (cid:8) (cid:9), [ ] or { }, and τ any of the symbols <, > or=.16I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Second recursive case: Consider a structure of category S immediately dominating astructure ∆ of category S and a PP with a clausal complement Γ . Assuming that we alreadyknow how to re-write ∆ and Γ , such a structure will be re-written more compactly asfollows:SS:∆PP⇒ (cid:14)α(cid:14)τ ψ if Γ ⇒ α and ∆ ⇒ ψ,PS,D(τ, (cid:14) (cid:14))S1D:Γwhere (cid:14) (cid:14) denotes either of the bracket-pairs [ ] or { }, and τ any of the symbols <, > or=.Third recursive case: Any structure of category S immediately dominating a node ofcategory Conj will be re-written more compactly as an expression with major connectives∧ or ∨ in the obvious way. The details are routine and are left to the reader to spell outformally.Consider, for example, the phrase-structures of the T PE-sentences (4)–(6), as drawn inFig. 4. Re-writing these phrase-structures yields the respective expressions(cid:8)int-rec(cid:9)=(cid:13),[cyc]=(cid:8)int-rec(cid:9)=(cid:13),{main}<[cyc]=(cid:8)int-rec(cid:9)=(cid:13).Apart from some unusual brackets and decorations, which will be explained later, the re-sults of this re-arrangement look remarkably like formulas of propositional dynamic logic,with the event-classifying mnemonics occupying the place of atomic programs. So theylook; and so they are. We shall give a standard account of the semantics of these formulasalong the lines of the usual semantics for propositional dynamic logic. We stress (though itis obvious) that no information has been created or destroyed in the above re-arrangementprocess: it is a simple graphical matter of replacing an unfamiliar arboreal typography witha familiar (and more compact) linear one. We could have stuck with trees if we had reallywanted.There is one further round of simplification before we proceed. We have demonstratedhow PPs in the fragment T PE can be regarded (syntactically) as modal operators of theform (cid:14)α(cid:14)τ , where α is an expression of one of the forms e, ef or el, (cid:14) (cid:14) is one of (cid:8) (cid:9),[ ] or { }, and τ is one of =, < or >. However, our grammar imposes restrictions on thequantification in PP-complements ensuring that, if τ ∈ {<, >} or if α has one of the formsef , el, then (cid:14) (cid:14) is { }. This cuts down the set of modal operators to the forms(cid:8)e(cid:9)=,[e]=,{e}=,{e}τ ,{eσ }=,{eσ }τ ,where e corresponds to a vocabulary item (of category S0 or N0), τ ∈ {<, >} and σ ∈ {f, l}.Finally, to avoid clutter, we may take the =-subscripts as understood, e.g., writing [e]instead of [e]=. Thus, the final collection of operators is{e}τ ,{eσ }τ ,{eσ },{e},(cid:8)e(cid:9),[e],I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3617with e a vocabulary item, τ ∈ {<, >} and σ ∈ {f, l}.Let us take stock. In Section 2, we proposed truth-conditions for a range of sentencesinvolving temporal prepositions and the order-denoting adjectives first and last. By treatingsentence-meanings as temporal abstracts, we showed how temporal preposition-phrasescould be viewed (semantically) as modal operators. In this section, we have formalized theEnglish fragment we are working with using a context-free grammar. We observed thatthe phrase-structures which this grammar associates with the sentences it recognizes canbe re-arranged as formulas of a language whose syntax resembles propositional dynamiclogic. Of course, the point of this re-arrangement is that the resulting formulas can be givena formal semantics which reproduce the truth-conditions proposed in Section 2. It is to thattask we now turn.4. The temporal logicIn the sequel, let E be a fixed infinite set. We refer to elements of E as event-atoms.Definition 1. Let e range over the set E of event-atoms. We define the categories of event-relation α, T PL-formula φ and T PL+-formula ψ as follows:α := e | ef | el;φ := (cid:8)e(cid:9)(cid:13) | ¬(cid:8)e(cid:9)(cid:13) | (cid:8)e(cid:9)φ | [e]φ | {α}φ | {α}>φ | {α}<φ | φ ∧ φψ := (cid:13) | ¬ψ | (cid:8)e(cid:9)ψ | [e]ψ | {α}ψ | {α}>ψ | {α}<ψ | ψ ∧ ψ(cid:10) | φ ∨ φ(cid:10).(cid:10) | ψ ∨ ψ(cid:10);It is easy to see that the syntax of T PL matches that of the English fragment T PE ex-actly: T PL-formulas simply are phrase-structures in T PE and vice-versa. The languageT PL+ is a slight extension of T PL in which negation is applied rather more freely. Ofcourse, the real object of study is T PL, not T PL+. The latter is introduced only for thepurpose of simplifying the proofs of Section 5.When dealing with T PL+, we avail ourselves of the Boolean connectives →, ↔ and ⊥,understood as abbreviations in the usual way. Our first task is to give a formal semantics forT PL+, and show that, for the fragment T PL, these semantics generate the satisfaction-conditions proposed in Section 2.Recall from Section 1 that I denotes the set of intervals, where an interval is a closed,bounded, convex (non-empty) subset of R. Recall also the partial functions init(J, I ) andfin(J, I ) defined on I.Definition 2. A T PL+-interpretation A (henceforth:interpretation) is a finite subset ofI × E. For any J ∈ I, we write A(J ) for {e ∈ E | (cid:8)J, e(cid:9) ∈ A}, and for any e ∈ E, we writeA(e) for {J ∈ I | (cid:8)J, e(cid:9) ∈ A}.Think of an entry (cid:8)J, e(cid:9) in an interpretation A as representing the occurrence of anevent of type e over the interval J . The motivation for insisting that interpretations arefinite sets is simply that we have in mind situations in which event-atoms denote everydayevent-types instantiated in finite contexts.18I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36We now turn to the interpretation of event-relations. Recalling our (rather artificial)stipulations about the meanings of the words first and last applied to event-types of whichthere is no unambiguously first or last instance, we adopt the following terminology.Definition 3. Let I be an interval and J ⊂ I , where J satisfies some property P. We saythat J = [a, b] is the minimal-first subinterval of I satisfying P just in case for everyJ (cid:10) = [a(cid:10), b(cid:10)] ⊂ I satisfying P, either (i) b < b(cid:10) or (ii) b = b(cid:10) and a (cid:2) a(cid:10). Likewise, wesay that J = [a, b] is the minimal-last subinterval of I satisfying P just in case for everyJ (cid:10) = [a(cid:10), b(cid:10)] ⊂ I satisfying P, either (i) a > a(cid:10) or (ii) a = a(cid:10) and b (cid:1) b(cid:10).Definition 4. Let α be an event-relation, A an interpretation, and I, J ∈ I. We defineA |=I,J α by cases as follows:(1) A |=I,J e iff J ⊂ I and e ∈ A(J );(2) A |=I,J ef iff A |=I,J e and J is the minimal-first such interval;(3) A |=I,J el iff A |=I,J e and J is the minimal-last such interval.It is obvious that, since A is finite, if there exists any J ⊂ I such that (cid:8)J, e(cid:9) ∈ A, thenthe minimal-first and minimal-last such J exist and are unique.We are now ready to give the satisfaction-conditions for formulas in T PL+.Definition 5. Let φ be a formula, A an interpretation, and I ∈ I. We define A |=I φ recur-sively as follows:(1) A |=I (cid:8)e(cid:9)ψ iff for some J , A |=I,J e and A |=J ψ;(2) A |=I [e]ψ iff for all J , A |=I,J e implies A |=J ψ;(3) A |=I {α}ψ iff there is a unique J ⊂ I such that A |=I,J α, and for that J , A |=J ψ;(4) A |=I {α}<ψ iff there is a unique J ⊂ I such that A |=I,J α, and for that J ,A |=init(J,I ) ψ;(5) A |=I {α}>ψ iff there is a unique J ⊂ I such that A |=I,J α, and for that J , A |=fin(J,I )ψ;(6) the usual rules for (cid:13), ∧, ∨ and ¬.If A |=I φ, we say that φ is true at I in A. For any set of formulas Φ, we write A |=I Φ ifA |=I φ for all φ ∈ Φ. If, for all A and I , A |=I Φ implies A |=I φ(cid:10), we say that Φ entailsφ(cid:10); and if φ is the sole element in Φ, we say that φ entails φ(cid:10). If φ and φ(cid:10) entail each other,we say they are logically equivalent and write φ ≡ φ(cid:10). A set of formulas Φ is said to besatisfiable if, for some A and I , A |=I Φ.We remark that the condition in Definition 2 that interpretations are finite subsets ofI × E is significant. For example, the T PL-formula (cid:8)e(cid:9)(cid:13) ∧ [e](cid:8)e(cid:9)(cid:13) is unsatisfiable.Since any T PL-formula φ is just the phrase-structure of a T PE-sentence, the immedi-ate question is whether the satisfaction-conditions assigned to φ in Definition 5 correctlyreproduce the meanings proposed in Section 2.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3619A little thought shows that they do. For example, the grammar of Section 3 assigns tothe sentences (4)–(6), which we repeat here for convenience as(48) An interrupt was received(49) An interrupt was received during every cycle(50) An interrupt was received during every cycle until the main process ran,the respective phrase-structures(51) (cid:8)int-rec(cid:9)(cid:13)(52) [cyc](cid:8)int-rec(cid:9)(cid:13)(53) {main}<[cyc](cid:8)int-rec(cid:9)(cid:13).From Definition 5, we see that the satisfaction-conditions of these formulas correspondexactly to those of the respective first-order formulas(54) ∃J0(int-rec(J0) ∧ J0 ⊂ I )(55) ∀J1(cyc(J1) ∧ J1 ⊂ I → ∃J0(int-rec(J0) ∧ J0 ⊂ J1))ιJ2(main(J2) ∧ J2 ⊂ I,(56)∀J1( cyc(J1) ∧ J1 ⊂ init(J2, I ) → ∃J0(int-rec(J0) ∧ J0 ⊂ J1))).But these are precisely the meanings proposed in (8)–(10). More generally, we took painsin Section 2 to show that temporal preposition phrases could be regarded, semantically, asmodal operators, mapping one temporal abstract to another, and binding the free variablein their arguments. The formal semantics of T PL reflect this observation. In particular, wesee how the various components of such a modal operator are contributed by the temporalpreposition and its complement. The appropriateness of the semantics for the modifiers ·fand ·l and the Boolean connectives should be self-evident.This concludes the first part of the paper. We have defined an English fragment, T PE,incorporating temporal prepositions and order-specifying adjectives. We have shown thatsentences in this fragment can be regarded as formulas in an interval temporal logic T PL,with satisfaction-conditions matching the meanings which speakers of English assign tothem, modulo the various caveats and occasional stipulations mentioned in Section 2. Inparticular, the problems of determining the satisfiability of a set of sentences or the valid-ity of an argument in T PE are identical to the corresponding problems in T PL. In thesecond part of this paper, we proceed to determine the computational complexity of theseproblems.5. Upper complexity boundThe aim of this section is to show that the satisfiability problem for T PL+ (and henceT PL) is in NEXPTIME. This is achieved by establishing an exponential bound on the sizeof satisfying interpretations.20I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Lemma 1. For all e ∈ E, φ ∈ T PL+, τ ∈ {<, >} and σ ∈ {f, l}:¬(cid:8)e(cid:9)φ ≡ [e]¬φ¬{e}φ ≡ ¬{e}(cid:13) ∨ {e}¬φ¬{e}τ φ ≡ ¬{e}(cid:13) ∨ {e}τ ¬φ ¬{eσ }τ φ ≡ [e]⊥ ∨ {eσ }τ ¬φ.¬[e]φ ≡ (cid:8)e(cid:9)¬φ¬{eσ }φ ≡ [e]⊥ ∨ {eσ }¬φProof. Trivial.Lemma 2. Every T PL+-formula is logically equivalent to one in which ¬ appears onlyin subformulas of the forms ¬{e}(cid:13) and ⊥ (= ¬(cid:13)).Proof. The logical equivalences of Lemma 1, together with familiar propositional validi-ties, allow negations to be moved successively inwards until the desired form is reached.Definition 6. Let A (cid:18)= ∅ be an interpretation. The depth of A is the greatest m for whichthere exist J1 ⊃ · · · ⊃ Jm with A(Ji) (cid:18)= ∅ for all i (1 (cid:1) i (cid:1) m). If A is empty, we take itsdepth to be 0.The next lemma shows that, in determining satisfiability of T PL+-formulas, we neednever consider very deep interpretations. To illustrate the basic idea, let I1 ⊃ · · · ⊃ I4 bea descending chain of intervals, and let A be the interpretation {(cid:8)Ii, a(cid:9) | 1 (cid:1) i (cid:1) 4}, asshown in the left-hand diagram in Fig. 5. Evidently, for any I ⊃ I1, A |=I (cid:8)a(cid:9)(cid:13) ∧ ¬{a}(cid:13).However, it is clear that we can remove the occurrence of a at I1 (indeed, also at I2) withoutcompromising this fact. Thus, if A∗ is the interpretation {(cid:8)Ii, a(cid:9) | 2 (cid:1) i (cid:1) 4} depicted inthe right-hand diagram of Fig. 5, we still have, for any I ⊃ I1, A∗ |=I (cid:8)a(cid:9)(cid:13) ∧ ¬{a}(cid:13).Lemma 3. Let φ be a T PL+-formula, A an interpretation and I an interval such thatA |=I φ. Denote the number of symbols in φ by |φ|. Then there exists an interpretationA∗ ⊆ A with depth at most O(|φ|2) such that A∗ |=I φ.Proof. We may assume that φ has the form guaranteed by Lemma 2, and further, that Ainvolves no event-atoms not mentioned in φ. Let Φ be the set of subformulas of φ. Forevery event-atom e mentioned in φ and every interval J , define(cid:1)(cid:2)L(J ) =Le(J ) = L(J ) \ψ ∈ Φ | A |=J ψ(cid:3)(cid:1)(cid:2)L(K) | K ⊂ J, K ∈ A(e).Fig. 5. Two interpretations making (cid:8)a(cid:9)(cid:13) ∧ ¬{a}(cid:13) true at any I ⊃ I1.I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3621A∗ = A \Thus, Le(J ) records which subformulas of φ are true at an interval J , ignoring thosesubformulas which are true at some proper subinterval of J satisfying e. Say that a pair(cid:8)J, e(cid:9) ∈ A is redundant if Le(J ) = ∅ and there exist K, K (cid:10) ∈ A(e) such that K ⊂ K (cid:10) ⊂ J .Now set(cid:2)(cid:1)(cid:8)J, e(cid:9) | (cid:8)J, e(cid:9) is redundant.To illustrate, suppose for the moment that φ is (cid:8)a(cid:9)(cid:13) ∧ ¬{a}(cid:13) and A the interpretation de-picted in the left-hand diagram of Fig. 5. It is routine to check that L(I1) = L(I2), whenceLa(I1) = ∅. On the other hand, La(I2), La(I3) and La(I4) are all non-empty, so that A∗ isas depicted in the right-hand diagram of Fig. 5. As we observed, the reduction of A to A∗does not affect the truth-value of φ at any interval I ⊃ I1.Returning to the general case, it is obvious that, if J ⊂ J (cid:10) with J, J (cid:10) ∈ A(e), then Le(J )and Le(J (cid:10)) are disjoint. It follows that the depth of A∗ is bounded by m(m(cid:10) + 2), wherem is the number of event-atoms occurring in φ and m(cid:10) the number of subformulas of φ. Itthus suffices to show that, for all I and all ψ ∈ Φ, A |=I ψ implies A∗ |=I ψ.We proceed by induction on the complexity of ψ. The base cases are of the forms ψ =(cid:13), ⊥, ¬{e}(cid:13). The first two of these are trivial. For the case ψ = ¬{e}(cid:13), suppose A |=I ψ.If there is no J ⊂ I with J ∈ A(e), then since A∗ ⊆ A, we certainly have A∗ |=I ψ.Otherwise, there exist J ⊂ I and J (cid:10) ⊂ I with J (cid:18)= J (cid:10) and J, J (cid:10) ∈ A(e). If neither of thepairs (cid:8)J, e(cid:9) and (cid:8)J (cid:10), e(cid:9) is redundant, then J, J (cid:10) ∈ A∗(e). On the other hand, if (cid:8)J, e(cid:9) isredundant, there must exist K ⊂ K (cid:10) ⊂ J such that the pairs (cid:8)K, e(cid:9) and (cid:8)K (cid:10), e(cid:9) are non-redundant elements of A, whence K, K (cid:10) ∈ A∗(e); and similarly if (cid:8)J (cid:10), e(cid:9) is redundant.Either way, then, A∗ |=I ψ.The recursive cases are of the forms ψ = [e]θ , (cid:8)e(cid:9)θ , {α}θ , {α}τ θ , where α is of the formse, ef or el, and τ ∈ {<, >}. For the case ψ = [e]θ , we need only observe that A∗ ⊆ A.For the case ψ = (cid:8)e(cid:9)θ , suppose A |=I ψ. Then there exists J ⊂ I such that J ∈ A(e)and A |=J θ . By the finiteness of A, choose such a J which is minimal under the order⊂, so that J ∈ A∗(e). By inductive hypothesis, A∗ |=J θ ; hence A∗ |=I ψ. For the caseψ = {e}θ , suppose A |=I ψ. Then there exists a unique J ⊂ I such that J ∈ A(e); and forthis J , A |=J θ . In particular, there is no K ⊂ J such that K ∈ A(e), whence J ∈ A∗(e).By inductive hypothesis and the fact that A∗ ⊆ A, we then easily have A∗ |=I ψ. Theremaining cases are dealt with exactly as for ψ = {e}θ , noting, in particular, that A |=I,J efimplies A∗ |=I,J ef and A |=I,J el implies A∗ |=I,J el. (This is the point at which we relyon the rather artificial choice of semantics for ef and el in Definition 4 in cases where thereis no unambiguous first or last e-interval.)Theorem 1. Let φ be a formula of T PL+. If φ is satisfiable, then φ is satisfied in aninterpretation of size bounded by 2p(|φ|), for some fixed polynomial p.Proof. Suppose that A |=I0 φ. We may assume that φ has the form guaranteed byLemma 2; and by Lemma 3, we may assume that the depth of A is at most of order |φ|2.As before, let Φ be the set of subformulas of φ. Say that a formula χ ∈ Φ is basic if themajor connective of χ is neither ∧ nor ∨. For any interval I and any ψ ∈ Φ, denote byS(ψ, I ) the set of all maximal basic subformulas χ of ψ such that A |=I χ . It is easy tosee that, for any ψ ∈ Φ and I ∈ I with A |=I ψ, S(ψ, I ) entails ψ.22I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36begin tree(φ, I0)Choose some object v0, and setQ = V = {v0}; λ(v0) = I0; L(v0) = S(φ, I0); E = ∅.until Q = ∅ doSelect v ∈ Q, set I := λ(v), and set Q := Q \ {v}.for every ψ ∈ L(v), do(1) If ψ = (cid:8)e(cid:9)θ , let J be such that A |=I,J e and A |=J θ . Select w /∈ V and set λ(w) := J ; L(w) :=S(θ, J ); Q := Q ∪ {w}; V := V ∪ {w}; E := E ∪ {(v, w)}. Execute univ(w).(2) If ψ = {α}θ , let J be such that A |=I,J α. Select w /∈ V and set λ(w) := J ; L(w) := S(θ, J ); Q :=Q ∪ {w}; V := V ∪ {w}; E := E ∪ {(v, w)}. Execute univ(w).(3) If ψ = {α}<θ , let J be such that A |=I,J α and let J (cid:10) = init(J, I ). Select w, w(cid:10) /∈ V and set; L(w) := ∅; L(w(cid:10)) := S(θ, J (cid:10)); Q := Q ∪ {w, w(cid:10)}; V := V ∪ {w, w(cid:10)};λ(w) := J ; λ(w(cid:10)) := J (cid:10)E := E ∪ {(v, w), (v, w(cid:10))}. Execute univ(w) and univ(w(cid:10)).(4) If ψ is {α}>θ , proceed symmetrically.(5) If ψ is ¬{e}(cid:13), and there exist J ⊂ I , J (cid:10) ⊂ I with J (cid:18)= J (cid:10)Select w, w(cid:10) /∈ V and set λ(w) := J ; λ(w(cid:10)) := J (cid:10)V ∪ {w, w(cid:10)}; E := E ∪ {(v, w), (v, w(cid:10))}. Execute univ(w) and univ(w(cid:10)).and J, J (cid:10) ∈ A(e), choose any such J, J (cid:10).; L(w) := ∅; L(w(cid:10)) := ∅; Q := Q ∪ {w, w(cid:10)}; V :=end for everyend untilend treebegin univ(u)for every formula [e(cid:10)]θ ∈ Φ such that (cid:8)λ(u), e(cid:10)(cid:9) ∈ A and thereexists L ⊃ λ(u) with A |=L [e(cid:10)]θ doSet L(u) := L(u) ∪ S(θ, λ(u)).end for everyend univFig. 6. Construction of small interpretations in T PL+.We now construct a sub-interpretation A∗ of A, starting with the interval I0 andchoosing witnesses, tableau-style, for formulas in Φ. More specifically, the proceduretree(φ, I0) in Fig. 6 grows a labelled tree with nodes V , edges E, and the two la-bellings λ : V → I and L : V → P(Φ); the interpretation A∗ will then be extracted fromA using this labelled tree. For v ∈ V , think of λ(v) as the interval represented by v,and think of L(v) as some collection of formulas which must all be true at this inter-val. The variable Q is simply a queue of nodes in V awaiting processing. Steps 1–5ensure, roughly, that ‘existential’ formulas in Φ have witnesses as required; the embed-ded calls to univ(u) ensure that ‘universal’ formulas in Φ are not falsified by thesewitnesses. A straightforward check shows that the invariant A |=λ(v) L(v) for all v ∈ Vis maintained by tree(φ, I0). Note that the function λ is not required to be 1–1. Notealso that the individual steps in tree(φ, I0) need not be effective: all we require for theproof of the theorem is the existence of the interpretation A∗ with the advertised proper-ties.We claim that tree(φ, I0) terminates after finitely many iterations, and that, upontermination, the tree (V , E) satisfies the size bound of the Theorem. By inspection ofsteps 1–5, whenever an edge (v, w) is added to E, we have λ(w) ⊂ λ(v). Therefore, at anypoint in the execution of tree(φ, I0), if the tree (V , E) contains a path v0 → · · · → vm,I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3623then λ(v0) ⊃ · · · ⊃ λ(vm). Consider those values of i (0 (cid:1) i < m) for which the call touniv(vi+1) adds material to L(vi+1). By inspection of univ, this can certainly happenonly if, for at least one event-atom e(cid:10), e(cid:10) ∈ A(λ(vi+1)). Therefore, it can happen for atmost D different values of i, where D is the depth of A. Moreover, any call to univ(vi+1)adds at most |φ|2 symbols to L(vi+1); and if the call to univ(vi+1) adds no material toL(vi+1), then L(vi+1) contains strictly fewer symbols than L(vi). Since D is at most oforder |φ|2, the length of the path v0 → · · · → vm is therefore at most of order |φ|4. Thebound on the eventual size of V then follows from the fact that the out-degree of any nodein V is bounded by 2|φ|.Now let A∗ = {(cid:8)J, e(cid:9) ∈ A | for some v ∈ V , J = λ(v)}. Evidently, |A∗| satisfies the sizebound of the theorem; it thus suffices to show that A∗ |=I0 φ. In fact, we show by structuralinduction that, for any node v ∈ V and any formula ψ, ψ ∈ L(v) implies A∗ |=λ(v) ψ.Denote λ(v) by I . (Hence A |=I L(v).) The base cases are of the forms ψ = (cid:13), ⊥, ¬{e}(cid:13).The case ψ = (cid:13) is trivial. For the case ψ = ⊥, the fact that A |=I L(v) ensures thatψ /∈ L(v). For the case ψ = ¬{e}(cid:13), if ψ ∈ L(v), A |=I L(v) ensures that either (i) thereis no J ⊂ I such that J ∈ A(e) or (ii) there exist J ⊂ I , J (cid:10) ⊂ I with J (cid:18)= J (cid:10) such thatJ, J (cid:10) ∈ A(e). In the former case, since A∗ ⊆ A, then A∗ |=I ψ. In the latter case, step 5of tree(φ, I0) ensures that, for some such J, J (cid:10), we have w, w(cid:10) ∈ V with λ(w) = Jand λ(w(cid:10)) = J (cid:10); hence J, J (cid:10) ∈ A∗(e) and A∗ |=I ψ. The inductive cases are almost asstraightforward:(1) Suppose ψ is (cid:8)e(cid:9)θ . If ψ ∈ L(v), then, by step 1 of tree(φ, I0), there exists w ∈ Vand J ⊂ I such that λ(w) = J , S(θ, J ) ⊆ L(w), (cid:8)J, e(cid:9) ∈ A, and A |=J θ . By inductivehypothesis, A∗ |=J S(θ, J ), and since A |=J θ , S(θ, J ) entails θ , whence A∗ |=J θ .By construction, (cid:8)J, e(cid:9) ∈ A∗. Hence, ψ ∈ L(v) implies A∗ |=I ψ.(2) Suppose ψ is [e]θ . If ψ ∈ L(v), then A |=I ψ. Consider any J ⊂ I with J ∈ A∗(e).Certainly, then, J ∈ A(e); hence A |=J θ , so that S(θ, J ) entails θ . Moreover, bythe construction of A∗ there exists w ∈ V with λ(w) = J , in which case the callto univ(w) ensures that S(θ, J ) ⊆ L(w). By inductive hypothesis, A∗ |=J S(θ, J ),whence A∗ |=J θ . Hence, ψ ∈ L(v) implies A∗ |=I ψ.(3) The remaining cases are handled similarly to Case 1, or are trivial.Corollary 1. The satisfiability problem for T PL+ is in NEXPTIME.Proof. Let φ be a formula of T PL+, and let d be the maximum depth of nesting of modaloperators in φ. By Theorem 1, if φ is satisfiable, then it is satisfiable in an interpretationwhose size is bounded by some fixed exponential function of |φ|. Guess such an interpre-tation A and an interval I . Let J0 be the set of intervals mentioned in A together with I ,and for any i (cid:2) 0, let Ji+1 be Ji together with all intervals expressible as init(J0, J ) orfin(J0, J ), where J0 ∈ J0 and J ∈ Ji . Now, for all i (0 (cid:1) i (cid:1) d) and all J ∈ Jd−i , guesswhich subformulas of φ having modal depth i are true at J in A. It is then straightforwardto check, in time bounded by some fixed exponential function of |φ|, that these guesses arecorrect, and thence to determine whether A |=I φ.24I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36The proofs of Lemma 3 and Theorem 1 thus make essential use of the ‘quasi-guarded’nature of T PL+, which we observed in Section 2.1, together with the assumption that onlyfinitely many events occur in a bounded time-interval. Note that the construction employedin the proof of Theorem 1 does not, as formulated there, constitute a tableau decisionprocedure for T PL+, because the steps are not necessarily effective. We remark that a(non-terminating) tableau procedure has been devised for the interval temporal logic CDT,interpreted over branching-time structures [7]. It is not immediately clear whether such anapproach could be adapted to yield a terminating procedure for T PL+, interpreted over alinear time flow, and incorporating the assumption that only finitely many events can occurover a bounded time-interval. However, the results of the next section indicate that anysuch tableau method is likely to require extensive backtracking.6. Lower complexity bound0, . . . , c(cid:10)In this section, we show that the satisfiability problem for T PL (and hence T PL+) isNEXPTIME-hard. Denote by Nn the natural numbers less than n. Define an exponentialtiling problem to be a triple (C, H, V ), where C = {c0, . . . , cM−1} is a set and H andV are binary relations over C. We call the elements of C colours, and we call H andV the horizontal constraints and the vertical constraints, respectively. An instance of(C, H, V ) is a list c(cid:10)n−1 of elements of C (repetitions allowed). Such an instanceis positive if there exists a function τ : N2n × N2n → C such that: (i) τ (i, 0) = c(cid:10)i for alli (0 (cid:1) i (cid:1) n − 1); (ii) (cid:8)τ (i, j ), τ (i + 1, j )(cid:9) ∈ H for all i, j (0 (cid:1) i < 2n − 1, 0 (cid:1) j (cid:1)2n − 1); (iii) (cid:8)τ (i, j ), τ (i, j + 1)(cid:9) ∈ V for all i, j (0 (cid:1) i (cid:1) 2n − 1, 0 (cid:1) j < 2n − 1); and (iv)τ (0, 2n − 1) = c0. We refer to τ as a tiling. Intuitively, the elements of C represent coloursof unit square tiles which must be arranged so as to fill a grid of 2n × 2n squares, with thetop left-hand square required to have the colour c0. The constraints H (respectively, V )list which colours are allowed to go to the right of (respectively, above) which others. Theproblem instance c(cid:10)n−1 lists the colours of the first n tiles in the bottom row. For adiscussion of exponential tiling problems, see [2, Section 6.1.1].0, . . . , c(cid:10)To show that a problem P is NEXPTIME-hard, it suffices to show that, for any exponen-tial tiling problem (C, H, V ), any instance of (C, H, V ) may be encoded, in polynomialtime, as an instance of P. We now proceed to do this where P is T PL-satisfiability. Themain technical challenge is to encode, using a succinct formula of T PL, the informationthat there are exactly 22n pairwise disjoint intervals satisfying some event-atom t withina given interval I ∗. We begin by tackling this problem; the remainder of the reduction isroutine.6.1. Fixing a large number of tiles1, . . . , a0Let m (cid:2) 2 and let a0, a0m+1 and z be pairwise distinct event-atoms. To simplify the notation, we write a0 alternatively as a00 . The event-atom z willalways function as a harmless ‘dummy’; it occurs in subformulas (cid:8)z(cid:9)(cid:13) whose only purposeis to ensure that we remain inside the temporal logic T PL, rather than the more generalT PL+. The following terminology will be used to aid readability. Where an interpretation1, . . . , a1m+1, a10 or a1I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3625Fig. 7. Arrangement of i-witnesses (0 (cid:1) i (cid:1) m).A is clear from context, we say that an interval I satisfies an event-atom e if (cid:8)I, e(cid:9) ∈ A;alternatively, we say that I is an e-interval.Define ψ1 to be the conjunction of the following formulas, where 0 (cid:1) i (cid:1) m and 0 (cid:1)h (cid:1) 1:(57) {a0}(cid:8)z(cid:9)(cid:13), [ahi]{a0i+1}>(cid:8)a1i+1(cid:9)(cid:13), [ahi]{a1i+1}(cid:8)z(cid:9)(cid:13).Let A be an interpretation and I ∗ an interval such that A |=I ∗ ψ1. For all i (0 (cid:1) i (cid:1) m),define an i-witness inductively as follows:(1) I is a 0-witness if and only if I is the unique proper subinterval of I ∗ satisfying a0.(2) J is an (i + 1)-witness if and only if there exists an i-witness I such that J is eitheri+1 or the unique proper subinterval ofthe unique proper subinterval of I satisfying a0I satisfying a1i+1.Given that A |=I ∗ ψ1, each i-witness I properly includes exactly one interval J satisfyingi+1, with J preceding J (cid:10). Thus, there arei+1 and exactly one interval J (cid:10) satisfying a1a0exactly 2i i-witnesses for all i (1 (cid:1) i (cid:1) m); moreover, these are pairwise disjoint andalternate between intervals satisfying a0i and a1i , as depicted in Fig. 7. Note however that,in general, the i-witnesses will be a subset of the subintervals of I ∗ satisfying a0i or a1iin A.The formula ψ1 thus provides a succinct way of guaranteeing that at least 2m−1 propersubintervals of I ∗ satisfy a0m in A—viz, every other m-witness. A much greater challengeis to write a succinct collection of formulas ensuring that no other proper subintervals ofI ∗ satisfy a0m. This task occupies the remainder of Section 6.1.Let b1, . . . , bm, p00, . . . , p1m−1 and p1m−1 be new event-atoms (i.e., pairwise dis-tinct and distinct from z, a0 and the ahi ). Intuitively, the event-atoms bi will be used toprevent ‘additional’ a0i -events slipping in between successive i-witnesses;the event-atoms p0j will function as ‘nails’, holding the whole rickety structure to-gether. Let ψ2 be the conjunction of the following formulas, where 0 (cid:1) i < m, 0 (cid:1) h (cid:1) 1and 0 (cid:1) h(cid:10) (cid:1) 1:i -events and a10, . . . , p0j and p1(58)[ah(cid:10)i[bi+1](cid:8)phi]{bi+1}(cid:8)z(cid:9)(cid:13), [ah(cid:10)i[ph(cid:9)(cid:13),i]{phi](cid:8)a1−hi+2(cid:9)(cid:13).}(cid:8)z(cid:9)(cid:13), [ah](cid:8)phi(cid:9)(cid:13),i+126I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Fig. 8. Representative arrangement of intervals: (a) under each ah(cid:10)i -interval, and (b) under each bi -interval.i or a1Suppose A |=I ∗ ψ1 ∧ ψ2. Formula ψ1 guarantees that, for all i (0 (cid:1) i < m), any subintervalI ⊂ I ∗ satisfying either a0i properly includes a unique J satisfying a0i+1 and a uniquei+1, with J preceding J (cid:10). Moreover, there exists a unique K ⊂ J satisfyingJ (cid:10) satisfying a1i+2, and a unique K (cid:10) ⊂ J (cid:10) satisfying a0a1i+2. In addition, ψ2 guarantees that I also properlyincludes a unique L satisfying bi+1; moreover, the event-atoms p0i , which aresatisfied uniquely within I , effectively ‘nail’ the L, J , J (cid:10), K and K (cid:10) together so that L ∩J ⊃ K and L ∩ J (cid:10) ⊃ K (cid:10). A representative situation conforming to these constraints isdepicted in Fig. 8(a).i and p1Let q01 , . . . , q1of the following formulas, where 1 (cid:1) i < m and 0 (cid:1) h (cid:1) 1:m−1 and q11 , . . . , q0m−1 be new event-atoms, and let ψ3 be the conjunction(59)[bi]{a1[bi]{qhi}>(cid:8)a0i+1}(cid:8)z(cid:9)(cid:13),i+1(cid:9)(cid:13), [bi]{a0i+1[bi+1](cid:8)qhi}(cid:8)z(cid:9)(cid:13), [bi]{bi+1}(cid:8)z(cid:9)(cid:13),(cid:9)(cid:13),](cid:8)q1−hi[ahi+1(cid:9)(cid:13), [qhi](cid:8)a1−hi+2(cid:9)(cid:13).Suppose A |=I ∗ ψ1 ∧ ψ3. Looking at the first row of (59), ψ3 guarantees that, for all i(1 (cid:1) i < m), any subinterval I ⊂ I ∗ satisfying bi properly includes a unique J satisfyingi+1 (with J preceding J (cid:10)), as well as a unique L satisfyingi+1 and a unique J (cid:10) satisfying a0a1bi+1. Further, ψ1 guarantees that there is a unique K ⊂ J satisfying a1i+2, and a uniqueK (cid:10) ⊂ J (cid:10) satisfying a0i and q1i ,which are satisfied uniquely within I , effectively ‘nail’ the L, J , J (cid:10), K and K (cid:10) together sothat L ∩ J ⊃ K and L ∩ J (cid:10) ⊃ K (cid:10). A representative situation conforming to these constraintsis depicted in Fig. 8(b).i+2. Looking now at the second row of (59), the event-atoms q0These observations help us establish:Claim 1. Let A |=I ∗ ψ1 ∧ ψ2 ∧ ψ3, and let K, K (cid:10) be consecutive (i + 1)-witnesses, with0 (cid:1) i < m. Then there exists an interval L ⊂ I ∗ properly including both K and K (cid:10), suchthat L satisfies one of a0i , a1i or bi .Proof. We proceed by induction on i. If i = 0, the result is trivial, because the only 1-witnesses are by definition properly included in the 0-witness.For the inductive case, suppose the statement of the lemma holds with 0 (cid:1) i < m − 1;we show the same statement holds with i replaced by i + 1. Let K, K (cid:10) be consecutiveI. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3627(i + 2)-witnesses, then; without loss of generality, we can suppose that K precedes K (cid:10).Each (i + 2)-witness is by definition properly included in a unique (i + 1)-witness; so letJ be the (i + 1)-witness such that K ⊂ J and J (cid:10) be the (i + 1)-witness such that K (cid:10) ⊂ J (cid:10).Since K and K (cid:10) are consecutive, J and J (cid:10) are identical or consecutive. In the former case,we may put L = J = J (cid:10), and L satisfies either a0i+1 as required by the lemma. Soassume the latter. By inductive hypothesis, then, J and J (cid:10) are properly included within aninterval I ⊂ I ∗ such that I satisfies a0i , or bi . Moreover, since K and K (cid:10) are consecutivebut not included in a common (i + 1)-witness, K satisfies a1i+1 or a1i+2 and K (cid:10) satisfies a0If I satisfies ah(cid:10)(0 (cid:1) h(cid:10) (cid:1) 1), then ψ1 guarantees that I properly includes exactly oneiinterval satisfying a0i+1 and exactly one interval satisfying a1i+1, with the former precedingthe latter; these must be, respectively, J and J (cid:10), therefore. Again by ψ1, J properly includesexactly one interval satisfying a1i+2; these mustbe, respectively, K and K (cid:10), therefore. Thus, we have the arrangement of Fig. 8(a). In par-ticular, we have seen that ψ2 guarantees the existence of an interval L satisfying bi+1 andproperly including both K and K (cid:10), as required by the lemma.i+2 and J (cid:10) exactly one interval satisfying a0i , a1i+2.i+1 and exactly one interval satisfying a0If I satisfies bi , then ψ3 guarantees that I properly includes exactly one interval satis-fying a1i+1, with the former preceding the latter;these must be, respectively, J and J (cid:10), therefore. By ψ1, J properly includes exactly oneinterval satisfying a1i+2; these must be, respec-tively, K and K (cid:10), therefore. Thus, we have the arrangement of Fig. 8(b). In particular, wehave seen that ψ3 guarantees the existence of an interval L satisfying bi+1 and properlyincluding both K and K (cid:10), as required by the lemma.i+2 and J (cid:10) exactly one interval satisfying a0Claim 2. Let A |=I ∗ ψ1 ∧ ψ2 ∧ ψ3. If K and K (cid:10) are consecutive i-witnesses (in that order),with 1 (cid:1) i (cid:1) m, then no subinterval H ⊂ I ∗ satisfying either a0i can begin after Kbegins and end before K (cid:10) ends.i or a1Proof. Suppose for contradiction that such an H exists. By Claim 1, we have some L ⊂ I ∗i−1 or bi−1, with L ⊃ K and L ⊃ K (cid:10). Thus, L ⊃ H . But ψ1 andsatisfying one of a0ψ3 contain conjuncts requiring L to properly include exactly one interval satisfying a0i andexactly one interval satisfying a1i−1, a1i . Contradiction.Let l1, . . . , lm, l(cid:10)1, . . . , l(cid:10)m+1 be new event-atoms, and let ψ l4 be the conjunction of thefollowing collection of formulas, where i (1 (cid:1) i (cid:1) m):(60)(cid:10)}{a0{a0}(cid:8)l(cid:9)(cid:13),}(cid:8)l{li1(cid:10)}>(cid:8)li(cid:9)(cid:13), {li}<{a0}{a0{liii(cid:10)(cid:9)(cid:13),i+1}(cid:8)z(cid:9)(cid:13),(cid:10)i{li}<¬(cid:8)a1i(cid:9)(cid:13).Suppose A |=I ∗ ψ1 ∧ ψ loccurring i-witness, and let L(cid:10)the conjuncts in the first row of (60) enforce the arrangement4 and 1 (cid:1) i (cid:1) m. For all i (1 (cid:1) i (cid:1) m), let Ji be the first-i . Theni be the unique proper subinterval of I ∗ satisfying l(cid:10)L(cid:10)1⊃ J1 ⊃ L(cid:10)2⊃ J2 ⊃ · · · ⊃ L(cid:10)m⊃ Jm.28I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Further, for all i (1 (cid:1) i (cid:1) m), let Li be the unique proper subinterval of I ∗ satisfying li .Then the conjuncts in the second row of (60) ensure that Ji ends before Li begins, and,moreover, Ji is the only subinterval of I ∗ satisfying either a0i which ends before Libegins. In particular, no subinterval of I ∗ satisfying either a0i ends before Ji ends.i or a1i or a1Symmetrically, let r1, . . . , rm, r (cid:10)1, . . . , r (cid:10)m+1 be new event-atoms, and let ψ r4 be the con-junction of the following collection of formulas, where i (1 (cid:1) i (cid:1) m):(cid:10){a0}(cid:8)r1(cid:10)}{a1{riiLet ψ4 be ψ l4(cid:10){ri}{a1(cid:9)(cid:13),}(cid:8)ri}<(cid:8)ri(cid:9)(cid:13), {ri}>{a1i∧ ψ r4 . We thus have:(cid:10)(cid:9)(cid:13),i+1}(cid:8)z(cid:9)(cid:13),{ri}>¬(cid:8)a0i(cid:9)(cid:13).Claim 3. If A |=I ∗ ψ1 ∧ ψ4 and 1 (cid:1) i (cid:1) m, then no subinterval of I ∗ satisfying either a0ior a1i can end before the first i-witness ends or begin after the last i-witness begins.We are now ready to achieve the main task of Section 6.1. Fix n > 0. Set m = 2n + 1,let ψ1, . . . , ψ4 be as above, and let ψ5 be the conjunction of the following formulas, where1 (cid:1) i (cid:1) m, 0 (cid:1) h (cid:1) 1 and 0 (cid:1) h(cid:10) (cid:1) 1:(61) [ahi]¬(cid:8)ah(cid:10)i(cid:9)(cid:13).Claim 4. Let A |=I ∗ ψ1 ∧ · · · ∧ ψ5. Then, for all i (0 (cid:1) i (cid:1) m), there exist exactly 2iproper subintervals of I ∗ satisfying either a0i . These intervals are arranged as inFig. 7. Hence, there are exactly 22n proper subintervals of I ∗ satisfying a0m.i or a1Proof. Suppose 0 (cid:1) i (cid:1) m. Certainly, there are exactly 2i i-witnesses. It suffices to showi . Suppose, for contradiction, J ⊂ I ∗that no other proper subinterval of I ∗ satisfies a0and J satisfies ahi , but J is not an i-witness. By ψ5, J neither properly includes nor isproperly included in any i-witness. Hence, the following possibilities are exhaustive: (i)J ends before the first i-witness ends; (ii) J begins after one i-witness begins and endsbefore the next one ends; and (iii) J begins after the last i-witness begins. But Claims 2and 3 rule out all these possibilities. Hence, all proper subintervals of I ∗ satisfying a0i ora1i are i-witnesses.i or a1As a final trick, we show how the 22n a0m−1, d 1m-intervals identified in Claim 4 can be con-m−1 be new event-atoms. Think of d hsecutively numbered. Let d 01 , . . . , d 1i(1 (cid:1) i (cid:1) m − 1, 0 (cid:1) h (cid:1) 1) as stating that the ith digit in a certain (m − 1)-digit binary nu-meral is h, where the first digit is the most significant and the (m − 1)th the least significant.Let ψ6 be the conjunction of the following formulas, where 1 (cid:1) i < m and 0 (cid:1) h (cid:1) 1:1 , . . . , d 0(62) [ahi][a0m](cid:8)d hi(cid:9)(cid:13), [a0m](¬(cid:8)d 0i(cid:9)(cid:13) ∨ ¬(cid:8)d 1i(cid:9)(cid:13)).Claim 5. Suppose A |=I ∗ ψ1 ∧ ψ6, and consider the 22n m-witnesses which satisfy a0m. Letthese intervals be numbered in order of temporal precedence as J0, . . . , J22n−1. For all kI. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3629(0 (cid:1) k < 22n), and all i (1 (cid:1) i (cid:1) 2n) denote the ith digit in the 2n-digit binary numeralfor k (counting the most significant as the first) by k[i]. Then we have:(cid:4)k[i] =1 iff A |=Jk0 iff A |=Jk(cid:8)d 1i(cid:8)d 0i(cid:9)(cid:13)(cid:9)(cid:13).Proof. By formula ψ6 and inspection of Fig. 7.Let us refer to the 22n a0m-intervals identified in Claim 4 as tiles, and let us write a0mmore suggestively as t. We continue to denote the tiles in order of temporal precedence asJ0, . . . , J22n−1, and we say that Jk (0 (cid:1) k < 22n) has index k. If J is any tile, denote itsindex by kJ . In that case, Claim 5 lets us read A |=J (cid:8)d h(cid:9)(cid:13) as ‘saying’ that the ith digit inithe 2n-digit binary representation of kJ is h.6.2. Organizing the tiles into a gridGroup the 22n tiles into 2n blocks, each containing 2n consecutive tiles. Regarding eachblock as a row gives us a 2n × 2n grid. If J and J (cid:10) are tiles, then J (cid:10) lies immediately aboveJ in this grid in case kJ (cid:10) = kJ + 2n; similarly, J (cid:10) lies immediately to the right of J in thegrid in case kJ (cid:10) = kJ + 1 and the last n bits of kJ are not all 1s. We now write formulasensuring that, for all tiles J , J (cid:10) such that kJ (cid:10) = kJ + 2n, we can identify an interval L suchthat J is the first tile included in L and J (cid:10) is the last.1, . . . , g0Continuing to write m for 2n + 1, let g0m, be new event-atoms, andlet ψ7 be the conjunction of the following formulas, where 0 (cid:1) i < m and 0 (cid:1) h (cid:1) 1:1, . . . , g1m, g1(63) [ahi]{g0i+1}>(cid:8)a0i+1(cid:9)(cid:13), [ahi]{g1i+1}<(cid:8)a0i+1(cid:9)(cid:13), [ahi]{g1i+1}>(cid:8)a1i+1(cid:9)(cid:13).Fig. 9 illustrates how the g0ψ1 ∧ ψ7. It helps to think of the ghwitnesses.i+1- and g1i+1-intervals are arranged under an i-witness if A |=I ∗i -intervals as ‘short’ intervals separating consecutive i-Now let f0, f 02n be new event-atoms, write f 0 alternatively as f 000 , and let ψ8 be the conjunction of the following formulas, where 0 (cid:1) i < 2n, 0 (cid:1) h (cid:1)1 , . . . , f 01 , . . . , f 12n, f 1or f 11 and 0 (cid:1) h(cid:10) (cid:1) 1:(64)(cid:8)f0(cid:9)(cid:13),[f hi]{(ahi )f }<¬(cid:8)ah(cid:10)i+1[f h](cid:8)ah2n2n]{f h(cid:10)(cid:9)(cid:13), [f hi+1i(cid:9)(cid:13),}<¬(cid:8)gh(cid:10)i+1(cid:9)(cid:13).[f h2n]{(ah2n)f }<¬(cid:8)ah(cid:10)2n+1(cid:9)(cid:13),Fig. 9. Arrangement of g0i - and g1i -intervals within an i-witness (1 (cid:1) i (cid:1) m).30I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Fig. 10. Arrangement of f hi - and f h(cid:10)i+1-intervals.To motivate this construction, it helps to imagine the f hdistributed similarly to the corresponding ahof every f hequal to the time occupied by 2n consecutive tiles. Fig. 10 illustrates how f hintervals are arranged in such an interpretation.i -intervals guaranteed by ψ8 asi -intervals in Fig. 7, except that the end-pointi -interval is shifted right by a ‘large’ fixed amount—specifically, an amounti+1-i - and f h(cid:10)Suppose A |=I ∗ ψ1 ∧ · · · ∧ ψ8. Ignoring for the moment all intervals which are notproper subintervals of I ∗, any f hi -interval (1 (cid:1) i (cid:1) 2n, 0 (cid:1) h (cid:1) 1) properly includes ani -interval (1 (cid:1) i < 2n, 0 (cid:1) h (cid:1) 1) properly includes a unique f 0i -interval; and any f hahi+1-i+1-interval. Now let k be an integer with 0 (cid:1) k < 2n, and denoteinterval and a unique f 1the 2n digits of k by k[i] (1 (cid:1) i (cid:1) 2n) as in Claim 5. Then we can form a chain of intervalsL1 ⊃ · · · ⊃ L2n such that, for all i (1 (cid:1) i (cid:1) 2n), Li is an f k[i]-interval. Moreover, forall i (1 (cid:1) i (cid:1) 2n), Li properly includes some ak[i]-interval; so let Ki be the first suchinterval. We claim that K1 ⊃ · · · ⊃ K2n. To see this, suppose 1 (cid:1) i < 2n, and write h fork[i] and h(cid:10) for k[i + 1]. Let K be the unique ah(cid:10)i+1-interval properly included in Ki . From[f hi+1-interval which finishes before theistart of Ki . By Claim 4 and inspection of Fig. 7, we see that K is therefore the first ah(cid:10)i+1-]{f h(cid:10)(cid:9)(cid:13), Li+1 starts before the startinterval properly included in Li . From [f hi+1iof K, and, since it is an f h(cid:10)i+1-interval, properly includes at least one ah(cid:10)i+1-interval. It followsthat K is the first ah(cid:10)i+1-interval properly included in Li+1: in other words, K = Ki+1. Thus,Ki ⊃ Ki+1 as required. Hence we have:(cid:9)(cid:13), Li cannot include any ah(cid:10)i )f }<¬(cid:8)ah(cid:10)i+1}<¬(cid:8)gh(cid:10)i+1]{(ahiiClaim 6. Suppose A |=I ∗ ψ1 ∧ · · · ∧ ψ8 and 0 (cid:1) k < 22n. Then there exists L ⊂ I suchthat L is either an f 02n-interval, and the first tile properly included in Lis Jk.2n-interval or an f 1Proof. Consider the chain K1 ⊃ · · · ⊃ K2n constructed above. The first tile properly in-cluded in L = L2n is properly included in K2n. The result follows from Claim 5.In the sequel, we use v to denote either f 02n indifferently. Thus, if A |=I ∗ ψ1 ∧· · · ∧ ψ8, then there are at least 22n v-intervals properly included in I ∗—one ‘starting with’each of the 22n tiles. We now proceed to ensure that, if L is a v-interval starting with tileJk, where 0 (cid:1) k < 22n − 2n, then L includes exactly 2n + 1 consecutive tiles. (See Fig. 11.)2n or f 1I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3631Fig. 11. Arrangement of event-atoms indicating vertical neighbourhood in the grid.To aid readability, we occasionally employ T PL+-formulas in the sequel; their conversioninto logically equivalent T PL-formulas is completely routine.2n be new event-atoms, and ψ9 be the conjunction ofAs a preliminary, let d −, d ∗1 , . . . , d ∗the following formulas, where 1 (cid:1) i (cid:1) n:(cid:5)(cid:7)(cid:6)(cid:8)d ∗, [t]i(cid:5)(65) [t](cid:8)d −(cid:9)(cid:13) ↔1(cid:1)j (cid:1)n(cid:8)d 0j(cid:9)(cid:13)(cid:9)(cid:13) ↔(cid:5)(cid:8)d 0i(cid:9)(cid:13) ∧(cid:8)i<j (cid:1)n(cid:7)(cid:7).(cid:9)(cid:13)(cid:8)d 1jThe purpose of ψ9 is to enable us to simulate addition of 2n to binary numerals representingintegers less than 22n − 2n. Suppose A |=I ∗ ψ1 ∧ · · · ∧ ψ9. Then it is routine to check that:(i) for any tile J , A |=J (cid:8)d −(cid:9)(cid:13) if and only if kJ is in the range 0 (cid:1) kJ < 22n − 2n; (ii)for any tile J with 0 (cid:1) kJ < 22n − 2n, A |=J (cid:8)d ∗(cid:9)(cid:13) if and only if i is the least integerisuch that the j th digit in the 2n-digit binary representation of kJ is 1 for all j in the rangei < j (cid:1) n. With this interpretation in mind, let ψ10 be the conjunction of the followingformulas, where 1 (cid:1) i (cid:1) n:(66)(cid:8)1(cid:1)i(cid:1)n(cid:8)1(cid:1)i(cid:1)n(cid:8)n<j (cid:1)2n(cid:5)(cid:8)(cid:5){t f }(cid:8)d ∗(cid:9)(cid:13) → {t l}[v]i(cid:5)(cid:8){t f }(cid:8)d ∗(cid:9)(cid:13) →[v]1(cid:1)j <ii(cid:5)(cid:5){t f }(cid:8)d −(cid:9)(cid:13) →{t f }(cid:8)d 1[v]j(cid:9)(cid:13)(cid:8)d 0i<j (cid:1)nj(cid:5){t f }(cid:8)d 1j(cid:9)(cid:13) ↔ {t l}(cid:8)d 1j(cid:9)(cid:13) ∧ (cid:8)d 1,i(cid:9)(cid:13) ↔ {t l}(cid:8)d 1(cid:9)(cid:13)j(cid:9)(cid:13)(cid:7)(cid:7).(cid:7)(cid:7)(cid:7)(cid:7),If A |=I ∗ ψ1 ∧ · · · ∧ ψ10, then we can read ψ10 as stating that, for every subinterval L ⊂ I ∗satisfying v, if the first tile included in L has index less than 22n − 2n, then the indices ofthe first and last tiles included in L differ by precisely 2n. Pictorially, we have the arrange-ment of v-intervals shown in Fig. 11. The corresponding formulas ψ11, . . . , ψ14 requiredto establish a suitable arrangement of event-types h encoding horizontal neighbourhoodare analogous and need not be spelled out here.6.3. Encoding tiling problemsWe are now ready to prove the main result of this section.Theorem 2. The satisfiability problem for T PL is NEXPTIME-hard.32I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36Proof. Let (C, H, V ) be any exponential tiling problem and c(cid:10)n−1 an instance ofsize n. Construct the formulas ψ1, . . . , ψ14 as above. If C = {c0, . . . , cM−1}, take the cj(0 (cid:1) j < M) to be event-atoms, and let ψT be the conjunction of the following two formu-las:0, . . . , c(cid:10)(cid:9)[t](cid:8)cj (cid:9)(cid:13),[t](cid:10)(cid:5)¬(cid:8)cj (cid:9)(cid:13) ∨ ¬(cid:8)cj (cid:10)(cid:9)(cid:13)(cid:7).0(cid:1)j <M0(cid:1)j <j (cid:10)<MGiven a tile J , we regard the satisfaction of an event-atom cj by a proper subinterval of Jas indicating that the tile J is coloured by cj . The formula ψT simply states that each tilehas exactly one colour chosen from C.Let ψH be the conjunction of the following formulas, where (ci, cj ) /∈ H :(cid:5)[h]{t f }¬(cid:8)ci(cid:9)(cid:13) ∨ {t l}¬(cid:8)cj (cid:9)(cid:13)(cid:7).Let ψV be the conjunction of the following formulas, where (ci, cj ) /∈ V :(cid:7).(cid:5){t f }¬(cid:8)ci(cid:9)(cid:13) ∨ {t l}¬(cid:8)cj (cid:9)(cid:13)[v]The motivation for ψH and ψV should be obvious. Finally, we encode the fact that theinitial tile J0 is required to have colour c(cid:10)0 using the formula(cid:7)(cid:9)(cid:13) ∧ · · · ∧ (cid:8)d 0(cid:9)(cid:13),2n(cid:5)(cid:8)d 0(cid:8)t(cid:9)0(cid:9)(cid:13) ∧ (cid:8)c(cid:10)0and similarly for the other tiles which are required to have a particular colour. Denote theconjunction of all these formulas by ψI . From the above constructions, it is routine toverify that the instance c(cid:10)n−1 of (C, H, V ) is positive if and only if0, . . . , c(cid:10)ψ1 ∧ · · · ∧ ψ14 ∧ ψT ∧ ψH ∧ ψV ∧ ψIis satisfiable. This completes the reduction.Corollary 2. The satisfiability problems for T PL and T PL+ are NEXPTIME-complete.Actually, a glance at the proof of Theorem 2 reveals that it shows a little more. Thesatisfiability problem for the fragment of T PL in which the modal depth of formulas islimited to 3 is still NEXPTIME-hard, since only formulas from this fragment were used toencode instances of tiling problems. The fact that only very simple T PL-formulas figurein this proof is crucial for the argument of Section 6.4.6.4. Linguistic considerationsWe have now established that satisfiability in T PL is NEXPTIME-complete. SinceT PL closely matches our English fragment T PE, we are close to answering the questionwith which we began: What is the computational complexity of determining logical re-lationships between sentences employing the temporal constructions featured in sentencessuch as (1)–(3)? However, one small matter remains. It should be obvious that the grammarof T PE, restricted as it is, accepts strings whose status as English sentences—on syntac-tic, semantic or pragmatic grounds—is doubtful. What we require, then, is an assuranceI. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3633that no linguistically motivated tightening of our fragment T PE could affect the abovecomplexity result.At first sight, this seems an impossible demand, since we cannot know in advancewhat refinements might be made to our English grammar. However, it turns out that theproof strategy employed above yields an easy solution. Obviously, eliminating marginal orawkward sentences from T PE can only cause the fragment to contract, and so cannot in-crease the computational complexity of its satisfiability problem. The only possibility wemust guard against is that such a contraction might invalidate the NEXPTIME-hardnessresult. And this is where the details of the proof of that result come to our rescue. Forthat proof depends on the encoding of tiling problems by the formulas ψ1–ψ14, ψT , ψH ,ψV and ψI . All we need do then is examine these formulas one by one and check thatthey can be generated, using the grammar presented above, by good, idiomatic Englishsentences. If so, we know that any linguistically motivated restrictions on T PL will stillinclude these sentences, and will assign them the advertised satisfaction-conditions. Thus,the NEXPTIME-completeness result will still apply to any linguistically motivated tight-ening of the grammar.The formulas ψ1–ψ3, given in (57)–(59), consist of conjuncts of the forms{a0}(cid:8)z(cid:9)(cid:13),[ahi+1](cid:8)phi(cid:9)(cid:13),[ahi]{a0i+1}>(cid:8)a1i+1(cid:9)(cid:13),[ahi]{a1i+1}(cid:8)z(cid:9)(cid:13).But these formulas express the meanings of the unobjectionable T PE-sentences(67) During the occurrence of a0, z occurred(68) During every occurrence of ah(69) During every occurrence of ahi+1, phi , a1i occurredi+1 occurred after the occurrenceof a0i+1(70) During every occurrence of ahi , z occurred during the occurrence of a1i+1.For added naturalness, we have fronted one preposition-phrase in each of these sentences;this facility could easily be incorporated into our grammar, of course.Formula ψ l4, given in (60), additionally involves conjuncts of the forms(cid:10)}(cid:8)z(cid:9)(cid:13);}(cid:8)li+1{li}<¬(cid:8)a1i{li}<{a0i}>(cid:8)li(cid:9)(cid:13),}{a0i(cid:9)(cid:13),(cid:9)(cid:13),{l(cid:10)i{l(cid:10)i}{a0ithese formulas express the meanings of the unobjectionable T PE-sentences(71) During the occurrence of l(cid:10)(72) During the occurrence of l(cid:10)(73) a1(74) Before li occurred, z occurred during the occurrence of a0i .i , l(cid:10)i , li occurred after a0i did not occur before li occurredi+1 occurred while a0i occurredi occurredFormulas ψ5 and ψ6, given in (61)–(62), additionally involve conjuncts of the forms(cid:5)](cid:7);(cid:9)(cid:13)[ahi][a0mthese are generated by the unobjectionable T PE-sentences¬(cid:8)d 0i](cid:8)d hi[a0m[ahi(cid:9)(cid:13),(cid:9)(cid:13),(cid:9)(cid:13) ∨ ¬(cid:8)d 1i]¬(cid:8)ah(cid:10)i34I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36(75) During every occurrence of ah(76) During every occurrence of ah(77) During every occurrence of a0i , ah(cid:10)i , d hm, either d 0i did not occuri occurred during every occurrence of a0mi did not occur.i did not occur or d 1For added naturalness, we have helped ourselves to the word either, which could be easilyincorporated into our grammar.Formula ψ7, given in (63), presents no new difficulties. Formula ψ8, given in (64),additionally involves conjuncts of the forms(cid:8)f0(cid:9)(cid:13),i )f }<¬(cid:8)ah(cid:10)i+1these are generated by the unobjectionable T PE-sentences]{f h(cid:10)i+1]{(ah[f hi[f hi(cid:9)(cid:13),}<¬(cid:8)gh(cid:10)i+1(cid:9)(cid:13);(78) f0 occurred(79) During every occurrence of f h(80) During every occurrence of f hi , ah(cid:10)i , gh(cid:10)i+1 did not occur before the first occurrence of ahii+1 did not occur before the occurrence of f h(cid:10)i+1.In the presence of the preceding formulas, formula ψ9, given in (65), can be equivalentlyexpressed as a conjunction of formulas of the forms[t](¬(cid:8)e0(cid:9)(cid:13) ∨ (cid:8)e1(cid:9)(cid:13) ∨ · · · ∨ (cid:8)el(cid:9)(cid:13)),[t]((cid:8)e0(cid:9)(cid:13) ∨ (cid:8)e1(cid:9)(cid:13) ∨ · · · ∨ (cid:8)el(cid:9)(cid:13)),for various collections of event-atoms e0, . . . , el; these correspond to the T PE-sentences(81) During every occurrence of t either e0 did not occur or e1 occurred or . . . or el occurred(82) During every occurrence of t either e0 occurred or . . . or el occurred.These sentences are certainly grammatical. Admittedly, huge disjunctions might be saidnot to belong to English as she is spoken; however, it is a simple matter to convert therelevant formulas equisatisfiably into formulas where disjunctions involve no more thanthree disjuncts, thus avoiding even this degree of unnaturalness. Formulas ψ10–ψ14, ψT ,ψH , ψV and ψI present no new difficulties. We conclude that no linguistically motivatedtightening of our fragment T PE could change the above complexity result. Determiningthe satisfiability of sets of sentences featuring the temporal constructions studied in thispaper is indeed NEXPTIME-complete.7. ConclusionIn this paper, we defined the fragment of temporal English T PE, together with a match-ing interval temporal logic T PL. The satisfiability problem for T PL was shown to becomplete for the complexity class NEXPTIME. In view of the intimate connection betweenT PE and T PL, we take this result to indicate the complexity of performing logical de-ductions in the fragment of temporal English in question, and thus to give a rough measureof the expressive resources which the grammatical constructions it features—primarily,I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–3635temporal prepositions—put at speakers’ disposal. By the standards of most interval tem-poral logics, T PL has low complexity. In the search for logics of limited expressivepower, fragments owing their salience to the syntax of natural language are a good placeto look.We endeavoured throughout to be faithful to the facts of English usage while retaininga reasonably perspicuous formal system, amenable to mathematical analysis. These twoaims are to some extent antagonistic, of course. Natural languages are products of humanbiology and human civilization, and as such do not always admit of a comfortable mathe-matical description. Thus, even the simple fragment of English considered here skirts manydelicate issues of syntax, and includes sentences about whose exact semantics even nativespeakers are uncertain. In this situation, we have occasionally had to legislate, sometimesin whatever way is mathematically most convenient. Nevertheless, while faithfulness tothe linguistic data is a virtue, it is all too easy, in pursuit of this virtue, to lose sight of theremarkable logical regularity of the constructions studied here; and it is this regularity thathas been the focus of our attention. To what extent this analysis can be usefully extendedto cover other temporal constructions in English (and other natural languages), and whateffects such extensions will have on the complexity of satisfiability in the accompanyinglogic, remain open.Appendix A. The grammar rules for T PESyntaxS → S, PPS → S, Conj, SS → S0S → Neg, S0→ S0S1D! → S0, OAdvS1Open-class lexicon→ N0NPD → DetD, N1DN1D! → OAdj, N0N1PP → PN,D, NPDPP → PS,D, S1DS0 → an interrupt was received/int-recS0 → the main process ran/main. . .N0 → cycle/cycN0 → run of the main process/main. . .Closed-class lexiconDet∀ → every/[ ]Det∃ → some/(cid:8) (cid:9)Det! → the/{ }Neg → not/¬Conj → and/∧Conj → or/∨OAdj → first/fOAdj → last/lPN,D → during/=PN,! → until/<PN,! → before/<PN,! → after/>OAdv → for the first time/fOAdv → for the last time/lPS,! → while/(=, { })PS,! → when/(=, { })PS,∀ → whenever/(=, [ ])PS,! → until/(<, { })PS,! → before/(<, { })PS,! → after/(>, { }).36I. Pratt-Hartmann / Artificial Intelligence 166 (2005) 1–36References[1] D.C. Bennett, Spatial and Temporal Uses of English Prepositions, Longman Linguistics Library, vol. 17,Longman, London, 1975.[2] E. Börger, E. Grädel, Y. Gurevich, The Classical Decision Problem. Perspectives in Mathematical Logic,Springer, Berlin, 1997.[3] H. Bowman, S. Thompson, A decision procedure and complete axiomatization of finite interval temporallogic with projection, J. Logic Comput. 13 (2) (2003) 195–239.[4] R. Crouch, S. Pullman, Time and modality in a natural language planning system, Artificial Intelligence 63(1993) 265–304.[5] D. Davidson, The logical form of action sentences, in: N. Rescher (Ed.), The Logic of Decision and Action,University of Pittsburgh Press, Pittsburgh, 1967, pp. 81–95.[6] D. Dowty, Word Meaning and Montague Grammar, D. Reidel, Dordrecht, 1979.[7] V. Goranko, A. Montanari, G. Sciavicco, A general tableau method for propositional interval temporal log-ics, in: M.C. Mayer, F. Pirri (Eds.), Tableaux 2003, in: Lecture Notes in Artificial Intelligence, vol. 2796,Springer, Berlin, 2003, pp. 102–117.[8] V. Goranko, A. Montanari, G. Sciavicco, A road map of interval temporal logics and duration calculi, J. Appl.Non-Classical Logics 14 (1–2) (2004) 9–54.[9] J.Y. Halpern, Y. Shoham, A propositional modal logic of time intervals, J. ACM 38 (4) (1991) 935–962.[10] J. Higginbotham, F. Pianesi, A.C. Varzi (Eds.), Speaking of Events, Oxford University Press, New York,2000.[11] R. Huddleston, G. Pullum, The Cambridge Grammar of the English Language, Cambridge University Press,Cambridge, 2002.[12] C.H. Hwang, L.K. Schubert, Interpreting tense, aspect and time adverbials, in: D.M. Gabbay, H.-J. Ohlbach(Eds.), Proc. First International Conference on Temporal Logic, in: Lecture Notes in Computer Science,vol. 827, Springer, Berlin, 1994, pp. 238–264.[13] H. Kamp, U. Reyle, From Discourse to Logic: Introduction to Model theoretic Semantics of Natural Lan-guage, Formal Logic and Discourse Representation Theory, Studies in Linguistics and Philosophy, vol. 42,Kluwer Academic, London, 1993.[14] B. Moszkowski, A temporal logic for multilevel reasoning about hardware, Computer 18 (1985) 10–19.[15] T. Ogihara, Tense, Attitudes and Scope, Studies in Linguistics and Philosophy, vol. 58, Kluwer, Dordrecht,1996.[16] B. Paech, Gentzen-systems for propositional temporal logics, in: E. Börger, H. Kleine Büning, M. Richter(Eds.), Proceedings of the 2nd Workshop on Computer Science Logic, in: Lecture Notes in Computer Sci-ence, vol. 385, Springer, Berlin, 1988, pp. 240–253.[17] T. Parsons, Events in the Semantics of English: A Study in Subatomic Semantics, MIT Press, Cambridge,MA, 1990.[18] I. Pratt, N. Francez, Temporal prepositions and temporal generalized quantifiers, Linguistics and Philoso-phy 24 (2001) 187–222.[19] M. Steedman, Temporality, in: J. van Benthem, A. ter Meulen (Eds.), Handbook of Logic and Language,Elsevier, Amsterdam, 1996, pp. 895–935.[20] G. Stump, The Semantic Variability of Absolute Constructions, Kluwer, Dordrecht, 1985.[21] A.G. ter Meulen, Representing Time in Natural Language, MIT Press, Cambridge, MA, 1996.[22] Z. Vendler, Linguistics in Philosophy, Cornell University Press, Ithaca, NY, 1967.[23] Y. Venema, Expressiveness and completeness of an interval tense logic, Notre Dame J. Formal Logic 31 (4)(1990) 529–547.[24] Y. Venema, A modal logic for chopping intervals, J. Logic Computation 1 (4) (1991) 453–476.[25] A. von Stechow, Temporal preposition-phrases with quantifiers: Some additions to Pratt and Francez (2001),Linguistics and Philosophy 25 (2002) 755–800.[26] S. Zucchi, M. White, Twigs, sequences and the temporal constitution of predicates, Linguistics and Philos-ophy 24 (2001) 223–270.