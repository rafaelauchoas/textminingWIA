Artificial Intelligence 174 (2010) 1498–1507Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintQualitative reasoning with directional relations ✩D. Wolter∗, J.H. LeeSFB/TR 8 Spatial Cognition, P.O. Box 330440, Universität Bremen, 28334 Bremen, Germanya r t i c l ei n f oa b s t r a c tArticle history:Received 1 September 2009Received in revised form 6 September 2010Accepted 7 September 2010Available online 25 September 2010Keywords:Qualitative spatial reasoningQualitative spatial reasoning (QSR) pursues a symbolic approach to reasoning about aspatial domain. Qualitative calculi are defined to capture domain properties in relationoperations, granting a relation algebraic approach to reasoning. QSR has two primary goals:providing a symbolic model for human common-sense level of reasoning and providingefficient means for reasoning. In this paper, we dismantle the hope for efficient reasoningabout directional information in infinite spatial domains by showing that it is inherentlyhard to decide consistency of a set of constraints that represents positions in the planeby specifying directions from reference objects. We assume that these reference objectsare not fixed but only constrained through directional relations themselves. Known QSRreasoning methods fail to handle this information.© 2010 Elsevier B.V. All rights reserved.1. IntroductionQualitative spatial reasoning (QSR) [1] is the subfield of knowledge representation and symbolic reasoning that representsknowledge about spatial domains by finite sets of named qualitative relations. One particular aim of qualitative approaches isto model human common-sense understanding of space. This makes qualitative approaches useful, for instance, in human–machine interaction. Qualitative reasoning is considered to provide efficient means for reasoning about continuous, infinitebut structured domains such as space or time.Qualitative relations state relationships of variables ranging over a spatial domain. Thus, consistency problems in qual-itative spatial reasoning are closely related to constraint-based reasoning over mostly infinite domains and so QSR sharesmuch of the terminology of constraint-based reasoning. One central task in QSR is to decide consistency of qualitative con-straint networks, i.e., constraint networks in which only qualitative relations are used as constraints. In the following werefer to this problem as the consistency problem. Deciding consistency of qualitative constraint networks differs from classi-cal constraint satisfaction problems (CSP) in that the infinite domain prevents exhaustive search. QSR techniques rely on therelation algebraic structure of qualitative calculi [2] that is captured in converse and composition tables. While reasoning infull qualitative calculi is mostly NP-complete, tractable sub-algebras have been identified for some calculi [3,4].Directional calculi consist of a set of qualitative directional relations that coarsely specify the direction in which an objectis positioned. Positions are considered to be points in the Euclidean plane and directions are given with respect to a frameof reference. Qualitative representations of directional information may involve a single, global frame of reference or theymay employ different frames of reference that are determined by reference objects. In this paper we are concerned withdirectional relations that involve different reference objects, i.e., we are not concerned with cardinal directions that usea single frame of reference and for which reasoning is known to be tractable [5]. Two important examples for reference✩This work was carried out in the framework of the Transregional Collaborative Research Center “Spatial Cognition”, financial support by the DeutscheForschungsgemeinschaft is gratefully acknowledged.* Corresponding author.E-mail addresses: dwolter@sfbtr8.uni-bremen.de (D. Wolter), jay@sfbtr8.uni-bremen.de (J.H. Lee).0004-3702/$ – see front matter © 2010 Elsevier B.V. All rights reserved.doi:10.1016/j.artint.2010.09.004D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–15071499objects are directed lines (establishing directions “left of” or “right of” the line, for instance) or pairs of points to determinetriangle orientations (see for example [6]). Directional calculi are important for handling knowledge that makes use ofrelative or egocentric frames of references. In particular, directional calculi draw their motivation from tasks in high-levelagent control [7] or from interpreting natural language for robot instruction [8]. In this article we show that reasoning aboutdirectional relations is inherently intractable. By reducing the problem of matroid realizability to the consistency problem weshow that reasoning with directional relations is NP-hard, NP membership being an open question. Our result has impacton reasoning with any qualitative calculus that is expressive enough to distinguish “left of” from “right of” which includesflip-flop [6,9], double cross [10,11], dipole [12], OPRA [13], TPCC [14]. For all such calculi, the existing relation algebraicapproach is too weak for deciding consistency problems and all reasonable sub-algebras remain NP-hard.This paper is organized as follows. First we give basis definitions of qualitative reasoning and discuss related work. InSection 3 we explain the principle steps of our proof. After formally introducing oriented matroids (Section 4) we givein Section 5 new intractability results for several directional calculi. In Section 6 we sketch a new approach to decidingconsistency in directional calculi. We conclude by discussion and outlook.2. Qualitative constraint-based reasoningThe basic concept of qualitative spatial reasoning is the qualitative calculus [2] which comprises a set of qualitative relationsand relation algebraic operations that for many calculi meet conditions for a relation algebra in the sense of Tarski. For thecontext of this paper, only the relations are important.Definition 1 (Qualitative relation). Let D be a non-empty set called domain and let B = {r1, r2, . . . , rn} be a set of k-aryrelations over D. B is called the set of base relations and the set of all unions of base relations R = {| b ∈ 2B } is calledthe set of qualitative relations. Commonly, a qualitative relation ri ∪ r j is denoted {ri, r j}.r∈b(cid:2)Qualitative relations express the relationship of variables ranging over the domain by base relations or disjunctionsthereof.Definition 2 (QCSP). Let R = {r1, r2, . . . , rn} be a set of k-ary qualitative relations over domain D and let X be a set ofvariables ranging over D. A qualitative constraint is a formula X1 . . . Xk−1ri Xk with variables X j ∈ X . For a valuation φ : X →D we say that a qualitative constraint X1 . . . Xk−1 r Xk is satisfied if (φ( X1), φ( X2), . . . , φ( Xk)) ∈ r holds.A qualitative constraint network is a set of variables and constraints such that for any k-tuple of variables exactly oneconstraint is defined. If constraints only involve base relations, it is called a scenario for short.The problem of deciding whether there exists a valuation satisfying all qualitative constraints over a set of qualitativerelations R is called QCSP(R).Qualitative spatial reasoning exploits the algebraic structure of qualitative relations. The consistency problem is tackledusing the algebraic closure algorithm [15], an adaption of Mackworth’s AC-3 algorithm [16] for enforcing path-consistencyin finite domain CSPs. Algebraic closure exploits the composition operation to rule out local inconsistencies in a constraintnetwork. For some calculi algebraic closure implies path-consistency and can already be a sufficient condition for consis-tency [17]. In order to apply decision procedures for the consistency problem it is commonly required that algebraic closureis applicable to decide consistency of scenarios [15,18]. For example, this is the case in the RCC calculus [19] or Allen’sinterval algebra [20]. Given that algebraic closure decides consistency for scenarios, networks involving disjunctions canthen be refined to base relations by means of a backtracking search and consistency can be decided [15]. This approachgains efficiency from exploiting maximal tractable subsets, i.e., maximal sets of relations for which algebraic closure decidesconsistency [21].To put it in a nutshell, qualitative spatial reasoning pursues a relation algebraic approach which relies on the existenceof efficient decision algorithms for consistency of scenarios such that reasoning in the full algebra (i.e., including disjunctiverelations) can still be tackled in NP.Previous research investigating the tractability of directional calculi identified intractable sub-algebras that involve dis-junctions of base relations [11,14,12]. Particularly ternary point calculi are so expressive that encoding NOT-ALL-EQUAL-3-SAT or BETWEENNESS instances is straightforward (cf. [11,22]) when using disjunctions of base relations. In this paperwe significantly refine these results by showing that directional information is inherently intractable, i.e., even decidingconsistency of scenarios is intractable.3. Proof sketchIn the following we describe the general idea of how to show NP-hardness of consistency problems that constrain apoint position to be either left of or right of a line. Essentially, we develop a reduction from a realizability problem incombinatorial geometry to a consistency problem of qualitative constraints. This is captured by the central Theorem 8 thatdirectly applies to all calculi that contain relations “left of” and “right of”. As our reductions are reversible we are also able1500D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–1507Fig. 1. (a) Steps in the reduction of decision problems about directional information to NP-hard matroid realizability. (b) Projective plane z = 1.to show that if the geometric realizability problem turns out to be in NP, consistency in left/right networks can also bedecided in NP. Hence, both problems are tightly related to one another. Motivated by Theorem 14 we conclude a conjecturethat NP-hardness also applies to any calculus which refines left/right relations. Fig. 1(a) gives an overview of our proof whichconsists of three steps that all make use of the theory of oriented matroids (see [23]). In short, oriented matroids generalizethe notion of geometric arrangements from a combinatorial perspective.We start with the NP-hard problem of matroid realizability (ROM) which remains NP-hard if we restrict it to so-calleduniform matroids (step 1 in the proof diagram). To represent oriented matroids we choose the notion of chirotopes thatallows us to connect the combinatorial view of chirotopes to that of orientation of vector sequences.In the second step of the proof we enforce a certain property (acyclicity) in the oriented matroid that is a necessarycondition of geometric realizability in the plane (step 2 in the proof diagram, Lemma 7 and Algorithm 1 in the proof).Step 3 concludes the proof by exploiting a duality between orientation of vectors in R3 and left/right relations betweentriples of points in the plane. To illustrate this duality, consider the projection on the plane {(x, y, z) ∈ R3 | z = 1} shown inFig. 1(b) which identifies (x, y, z) ∈ {(x, y, z) ∈ R3 | z (cid:6)= 0} with ( xz , 1). Suppose points A, B, C are above the X Y -plane andform a positively oriented basis of R3 (i.e., interpreting the 3D points as column vectors of a 3 × 3 matrix, the determinant(cid:7)of this matrix is positive). Then, under the given projection, C(cp. Fig. 1(b)). Usinga similar projection we construct a left/right constraint problem which is consistent only if the initial matroid is realizable.is left of the directed line from Az , yto B(cid:7)(cid:7)4. Capturing directional information by oriented matroidsOriented matroids can be considered combinatorial generalizations of spatial arrangements. They provide a broad modelto describe information about position and orientation geometrically (with respect to given set of points and lines, Def-inition 3) as well as purely combinatorially (Definition 5), and have also been proposed as a discrete spatial representa-tion [24,25]. Oriented Matroids allow us to abstract a concrete spatial reasoning problem in R2 to a problem in combinatorialgeometry.In this section we introduce oriented matroids first as a mathematical object from a concrete vector space and then as anabstract combinatorial object. For in-depth coverage refer to [23]. From the different ways of defining oriented matroids, theapproach using the notion of chirotopes presents itself for characterizing directional information. This leads to the followingdefinition of an oriented matroid with respect to a finite vector sequence V .Definition 3 (The oriented matroid of V ). Let V = (v 1, . . . , vn) be a finite sequence of vectors in Rr spanning the space Rr ,sign : R → {−1, 0, +1} a function that returns the sign of its argument, and det(v i1 , v i2 , . . . , v ir ) the determinant of a r × rmatrix having v i1 , v i2 , . . . , v ir as its column vectors. The oriented matroid of V is given by the mapχV: {1, 2, . . . , n}r → {−1, 0, +1}(i1, i2, . . . , ir) (cid:8)→ sign(cid:3)(cid:4)det(v i1 , v i2 , . . . , v ir )which is called the chirotope of V . For r = 3 the map χV records for each vector triple whether it consists of linearlydependent vectors, a positively oriented basis of R3, or a negatively oriented basis of R3 (0, +1, −1, respectively).:Example 4. The oriented matroid of V = (v 1, v 2, v 3) with v 1 = (1, 0, 0)T , v 2 = (0, 1, 0)T , v 3 = (0, 0, 1)T is the map χV{1, 2, 3}3 → {−1, 0, +1} with χV (1, 2, 3) = χV (2, 3, 1) = χV (3, 1, 2) = +1 and χV (2, 1, 3) = χV (1, 3, 2) = χV (3, 2, 1) = −1.All other triples represent linearly dependent vector triples, and thus map to 0.In the following we introduce oriented matroids as combinatorial objects. Unlike the previous definition, the followingone is defined without a vector sequence, i.e., it abstracts from an underlying geometry.D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–15071501Definition 5 (Oriented matroid). An oriented matroid of rank r on E = {1, 2, . . . , n} is a map given byχ : Er → {−1, 0, +1},called a chirotope, which satisfies the following three properties:1. χ is not identically zero.2. χ is alternating, that is, χ (iσ (1), iσ (2), iσ (3)) = sign(σ )χ (i1, i2, i3) for all i1, i2, i3 ∈ E and every permutation σ on{1, 2, 3}.3. For every i1, i2, i3, i4, i5 ∈ E the set(cid:5)(cid:6)χ (i1, i2, i3) · χ (i1, i4, i5), −χ (i1, i2, i4) · χ (i1, i3, i5), χ (i1, i2, i5) · χ (i1, i3, i4)either contains {−1, +1}, or it equals {0}.We note that the second condition implies χ (i1, i2, i3) = 0 if two of three arguments coincide. An oriented matroid issaid to be uniform, if χ (i1, i2, i3) ∈ {−1, +1} for all pairwise different i1, i2, i3 ∈ E. We also note that an oriented matroidχV of a finite vector sequence V as defined in Definition 3 is an oriented matroid on E, where E is the index set of V . Inwhat follows we restrict ourselves to oriented matroids of rank 3, which are relevant for the results of this paper.Example 6. The map χ : {1, 2, 3, 4}3 → {−1, 0, +1} defined by χ (1, 2, 3) = χ (1, 3, 4) = −1, and χ (1, 2, 4) = χ (2, 3, 4) = +1,where the remaining values for χ are to be derived by permuting the triples and changing the signatures appropriately (e.g.,χ (1, 3, 2) = +1 = −χ (1, 2, 3)), is a uniform oriented matroid of rank 3.Now that we have the abstract definition of an oriented matroid, a natural question to ask is:Given an oriented matroid χ on E = {1, . . . , n}, is there a sequence V = {v 1, . . . , vn} of spanning vectors in Rr , such thatχ is the oriented matroid of V , i.e., χ = χV ?To exemplify this question, we take the oriented matroid from Example 6. Then a realization of χ isv 1 = (−1, 0, −1),v 2 = (0, 1, 1),since χ (i, j, k) = sign(det(v i, v j, vk)) = χV (i, j, k) for all i, j, k ∈ {1, . . . , 4}.v 3 = (0, −1, 1),v 4 = (1, 0, −1),The aforementioned problem is the so-called realizability problem for oriented matroids (ROM) which is NP-hard for ori-ented matroids of rank 3 and higher [26,27], the tightest complexity bound following from [28] is exponential time withrespect to the number of vectors.A slightly modified version of ROM is the realizability problem for uniform oriented matroids (RUOM), where only orientedmatroids are considered that do not contain zero in the range. RUOM is also NP-hard in the number of vectors for matroidsof rank 3 and higher [27].Now we establish a connection between a point configuration in a plane (the domain of many qualitative spatial calculi)and a uniform oriented matroid. Assume there exists a linear map l : R3 → R (i.e., a linear form), such that the vectorsequence V consists of vectors v 1, . . . , vn with l(v i) > 0 for all i, i.e., the vectors as points in R3 are entirely contained inone of the open half-spaces determined by the (hyper-)plane {x ∈ R3 | l(x) = 0}. Then we can project the vectors v i to pointsin an affine plane A2 defined by(cid:6),(cid:7)(cid:7) l(x) = 1x ∈ R3A2 :=(cid:5)l(v i ) v i ∈ A2 for all i. An oriented matroid of V with this property is calledwhere we associate each vector v i with pointacyclic (see Fig. 2). The following lemma states that determinants of vector triples give us a necessary and sufficient condi-tion for deciding whether an oriented matroid is acyclic.1Lemma 7. Given a vector sequence V = (v 1, . . . , vn) in R3 with det(v i, v j, vk) (cid:6)= 0 for all pairwise different 1 (cid:2) i, j, k (cid:2) n, thenthere exists a linear form l with l(v i) > 0 for all i, if and only if there is a pair of two distinguished vectors in V , say v 1 and v 2, suchthat either det(v 1, v 2, v i) > 0 for all i > 2, or det(v 1, v 2, v i) < 0 for all i > 2.Before proving the lemma let us consider the vector sequences in Fig. 2 as an example: regarding the vector sequence onthe left-hand side, there is no vector pair (v i, v j), i (cid:6)= j, such that the determinant of the 3 × 3 matrix (v i, v j, vk) is positivefor all k, k (cid:6)= i, k (cid:6)= j or negative for all k, k (cid:6)= i, k (cid:6)= j. The lemma states that therefore there exists no (hyper-)plane suchthat all vectors are contained in one of the two open half-spaces determined by that plane; the oriented matroid of thisvector sequence is not acyclic. Considering the vector sequence on the right-hand side of the figure, vectors v 1 and v 2 giverise to positive determinants det(v 1, v 2, v 3) and det(v 1, v 2, v 4). According to the lemma a half-space containing all vectors1502D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–1507Fig. 2. Examples of non-acyclic and acyclic vector sequences in R3. The vector sequence on the left represents an oriented matroid that is not acyclic,i.e., there is no open half-space containing all the vectors v 1, . . . , v 4. By contrast, the vector sequence on the right is contained in the open half-spaceR × R × R+and accordingly, it is acyclic. Its affine representation is equivalent to the one in Fig. 4.must exist and R × R × R+is one example. We note that by negating the vectors v 1 and v 4 in the first vector sequence weobtain the second one. This is an essential step in the proof of Theorem 8 for enforcing acyclicity of non-acyclic orientedmatroids.Proof. Assume that there exists such a linear form l. Then there exists a cone covering the convex hull of V which has asupporting hyperplane H in R3 given by linear combinations of two vectors of V , say v 1, v 2. Since the remaining vectors ofV are entirely contained in one of the open half-spaces determined by H , it must be either det(v 1, v 2, v i) > 0 for all i > 2,or det(v 1, v 2, v i) < 0 for all i > 2.Now assume det(v 1, v 2, v i) > 0 for all i > 2. Then (v 1 × v 2)T · v i = det(v 1, v 2, v i) > 0 for all i (cid:3) 3, where v 1 × v 2 denotesthe vector product of v 1 and v 2. We then define a linear form l by(cid:8)(cid:8)l(x) =v 1 × v 2 + (cid:5)1(cid:9)v 1(cid:9) v 1 + 1(cid:9)v 2(cid:9) v 2(cid:9)(cid:9)Tx,where (cid:5) > 0 is small enough, such that l(v i) > 0 for all i > 2. The fact l(v 1) > 0 follows from l(v 1) = 0 + (cid:5)((cid:9)v 1(cid:9) + v Tand the Cauchy–Schwartz inequality1 v2(cid:9)v2(cid:9) )(cid:9)v 1(cid:9)(cid:9)v 2(cid:9) (cid:3)(cid:7)(cid:7)v T1 v 2(cid:7)(cid:7),l(v 2) > 0 can be shown analogously. Altogether, l(v i) > 0 for all 1 (cid:2) i (cid:2) n. We get the proof for the other case by switchingthe signs. (cid:2)5. Hardness of directional calculiIn this section we show NP-hardness for individual directional calculi by encoding RUOM into QCSP for individual calculi.5.1. LR calculusThe LR calculus [6,9] defines 9 ternary base relations for points positioned in the Euclidean plane R2. Fig. 3(a) showsthe 7 base relations for pairwise disjoint points, namely left, right, back, start, inbetween, end, and front. Additionally, tworelations of point superposition are considered, namely dou = {(a, a, c) | a, c ∈ R2, a (cid:6)= c} and tri = {(a, a, a) | a ∈ R2}.Theorem 8. QCSP(left, right) is NP-hard.Proof. Since RUOM is NP-hard, it suffices to show that the encoding of the RUOM into QCSP(left, right) can be done inpolynomial time in the number of vectors. Let a uniform oriented matroid χ : {1, . . . , n}3 (cid:8)→ {−1, +1} of rank 3 be given.Since the LR calculus represents information about the plane but the realization of a rank 3 matroid can cover the full3D space, we generate a new uniform oriented matroid χ (cid:7)which is equivalent in realizability and acyclic, i.e., the re-alization of χ (cid:7)can be identified with a point configuration in an affine space. This is accomplished by Algorithm 1, inwhich we make use of Lemma 7. Since there are three loops ranging over n, the complexity of the algorithm is O(n3).D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–15071503χ (cid:7) ← χfor i ∈ {3, 4, . . . , n} do(cid:10) The elements 1 and 2 corresponds to v 1 and v 2 in Lemma 7.(cid:10) We enforce χ (cid:7)(1, 2, i) = 1 for all i = 3, . . . , n to apply Lemma 7.if χ (cid:7)(1, 2, i) = −1 thenχ (cid:7)(1, 2, i) ← 1χ (cid:7)(i, 1, 2) ← 1χ (cid:7)(2, i, 1) ← 1χ (cid:7)(1, i, 2) ← −1χ (cid:7)(i, 2, 1) ← −1χ (cid:7)(2, 1, i) ← −1Algorithm 1 Algorithm for converting oriented matroid into an acyclic one used by Theorem 8.1: function flipChi(χ )2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:end for23:return χ (cid:7)24:25: end functionχ (cid:7)(i, j, k) ← −χ (cid:7)(i, j, k)χ (cid:7)( j, i, k) ← −χ (cid:7)( j, i, k)χ (cid:7)( j, k, i) ← −χ (cid:7)( j, k, i)χ (cid:7)(i, k, j) ← −χ (cid:7)(i, k, j)χ (cid:7)(k, j, i) ← −χ (cid:7)(k, j, i)χ (cid:7)(k, i, j) ← −χ (cid:7)(k, i, j)for j ∈ {3, 4, . . . , n}, k ∈ {3, 4, . . . , n}, i (cid:6)= j, i (cid:6)= k, j (cid:6)= k do(cid:10) Switch other signs of χ (cid:7)that involve i accordingly.end forend ifFig. 3. Qualitative relations defined by ternary directional calculi. (a) LR calculus point-to-line relations. (b) Double cross calculus [10]. (c) TPCC [14].Furthermore, if χ is realizable, i.e., χ is the (uniform) oriented matroid of a vector sequence V = (v 1, . . . , vn), thenχ (i1, i2, i3) = sign(det(v i1 , v i2 , v i3 )) for all (i1, i2, i3). As the determinant function is alternating, negating a vector vk,k ∈ {1, . . . , n} changes the signs of χ (i1, i2, i3), if i1, i2 and i3 are pairwise different and i j = k for a j ∈ {1, 2, 3}. Thisis reflected in line 8–21 of Algorithm 1, as a consequence of enforcing χ (1, 2, i) = sign(det(v 1, v 2, v i)) = 1 for all i > 2to meet the condition in Lemma 7. With regards to equivalence of realizability of χ and χ (cid:7)we note that the negationsperformed by the Algorithm 1 simply correspond to flipping vectors from the “negative” side of the hyperplane given byv 1 × v 2 to the “positive” side (see proof of Lemma 7). Thus, χ (cid:7)is realizable if χ realizable. Analogously, χ is realizable ifχ (cid:7)into QCSP(left, right): The domain {1, 2, . . . , n} of χ (cid:7)is represented by variables {v 1, v 2, . . . , vn}. Foreach triple (i, j, k), i, j, k ∈ D we have v i v j right vk, if χ (cid:7)(i, j, k) = −1, whereas v i v j left vk, if χ (cid:7)(i, j, k) = +1 (see Fig. 4). Asχ is uniform, χ (i, j, k) = 0 occurs if and only if two of its three arguments coincide, giving no information about the generalpoint configuration. Thus, the case χ (i, j, k) = 0 does not need to be considered as a constraint for the triple (v i, v j, vk).realizable.Finally, we encode χ (cid:7)According to the translation above, the oriented matroid χ (cid:7)is realizable if and only if the corresponding qualitativeconstraint network is satisfiable. (cid:2)1504D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–1507Fig. 4. A realization of a uniform oriented matroid χ : {1, 2, 3, 4}3 → {−1, +1} with χ (1, 2, 3) = +1, χ (1, 2, 4) = +1, χ (1, 3, 4) = −1 and χ (2, 3, 4) = −1.Equivalently, we have v 1 v 2 left v 3; v 1 v 2 left v 4; v 1 v 3 right v 4 and v 2 v 3 right v 4. Note that v 3 and v 4 are entirely lying on one of the half-spaces determinedby the hyperplane through v 1 and v 2 as generated by Algorithm 1.Since our reduction can reversed, we are able to state the following theorems that tighten the connection of RUOM anddeciding consistency of left/right constraints.Theorem 9. QCSP(left, right) for scenarios is reducible to RUOM.Proof. Let S be a left/right scenario and n be the number of variables in S. We define the induced oriented matroid χ byassigning χ (i, j, k) = +1 to each constraint v i v j left vk in S, and χ (i, j, k) = −1 to each constraint v i v j right vk in S, wherei, j, k ∈ {1, . . . n} and pairwise different. There are altogether O(n3) such assignments.We then check whether χ is acyclic, which is the case if there exists a pair (i, j), i, j ∈ {1, . . . , n} with χ (i, j, k) > 0 forall k ∈ {1, . . . , n}, k (cid:6)= i, k (cid:6)= j. Determining the existence of such a pair can also be done in O(n3) time by trying out allO(n2) candidates.Since S is consistent if and only if χ is acyclic and realizable, it takes O(n3) time to reduce QCSP(left, right) for scenariosto RUOM. (cid:2)Corollary 10. If RUOM is in NP, than QCSP(left, right) for scenarios is in NP too.5.2. Dipole calculusThe dipole calculus [12] has been introduced as qualitative calculus about path segments which are oriented line seg-ments defined by start and end point — see Fig. 5(a) for illustration. The calculus assumes all points to be in general position,i.e., no three different points are positioned on the same line. The 24 dipole relations DRA24 represent all possible relativeorientations of two dipoles A = (s A, e A), B = (sB , e B ). Dipole relations can be rewritten as sets LR relations considering all3-tuples of points: (s A, e A, sB ), (s A, e A, e B ), (sB , e B , s A), (sB , e B , e A). This makes rewriting QCSP(left, right) as QCSP(DRA24)straightforward.Corollary 11. QCSP(DRA24) is NP-hard.The original paper on the dipole calculus also considers a refined dipole calculus which also handles multiple points ona line, but this does not affect the orientation relations and their intractability.5.3. OPRA calculusThe OPRAn family of calculi defines a set of directional relations for oriented points (see Fig. 5(b)–(d)) with adjustablegranularity parameter [13], OPRA2n being a refinement of OPRAn. The granularity parameter n stands for the number ofdividing lines used to construct the relations (see Fig. 5). Refining OPRA1 to OPRA2 we have a new line distinguishingbefore (sectors 0,1,7) and behind (sectors 3,4,5). Like the LR calculus, OPRAn makes left/right distinctions.Corollary 12. QCSP(OPRA1) is NP-hard.D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–15071505Fig. 5. Binary directional calculi. (a) Example of a dipole base relation A lrrr B (sB Left of A, e B Right of A, s A Right of B, e A Right of B). (b) Relation sectorsdefined by OPRA1. (c) Relation sectors defined by OPRA2. (d) Example of a OPRA2 relation A 2(cid:6) 17 B.Lemma 13. QCSP(behind, before) is NP-hard.Proof. Relations behind, before can be bijectively mapped to left, right. (cid:2)Theorem 14. Let L and R be finite refinements of the LR relations left and right, i.e., L = {l1, l2, . . . , ln}, with left = l1 ∪ l2 ∪ · · · ∪ lnand analogously for R. If deciding QCSP(L ∪ R) is in NP, then Matroid realizability of rank 3 oriented matroid is in NP too.Proof. Let the rank 3 oriented matroid be given by a chirotope so we can read off relations left (χ (x, y, z) = −1) and right(χ (x, y, z) = +1). Relations left, right can be written as disjunctions of l1, l2, . . . , ln or r1, r2, . . . , rm, respectively. Given aleft/right decision problem one can non-deterministically select one relation from each disjunction and decide the refinedproblem. (cid:2)Corollary 15. If base relations of OPRA2 can be decided in NP, then Matroid realizability of rank 3 matroid is in NP.Since matroid realizability is extensively studied and NP membership of this problem could not been shown yet, weconclude from Theorem 14 the following conjecture.Conjecture 16. There is no directional calculus capable of expressing left and right (by disjunction of base relations) such that consis-tency of constraint networks over its base relations can be decided in polynomial time.5.4. Double cross calculusThe double cross calculus [10] is a ternary point configuration calculus which defines 15 relations between pairwisedisjoint points; see Fig. 3(b). As can be seen in the figure, the double cross calculus is a refinement of the LR calculus.5.5. Ternary point configuration calculusIn [14] a ternary point configuration calculus TPCC for robot localization and navigation tasks is proposed. From the baserelations defined by the calculus (see Fig. 3) it is easy to see that TPCC is a refinement of the OPRA2 calculus, i.e., LRrelations can be written as disjunctions of TPCC relations.16. On deciding consistency of directional relationsNP-membership of RUOM is still an open problem and so the computational complexity of qualitative reasoning aboutdirectional information remains open too: left/right consistency can be decided in NP if and only if RUOM can be decided inNP. We note that deciding consistency of directional constraints is equivalent to the existential theory of the reals [23,29].This theory deals with solvability of systems of polynomial equations and inequalities; only exponential time algorithms areknown so far. Therefore, computationally cheap approaches that can decide a significant subset of directional informationconstraint problems are important. However, the common approach of QSR, decision by algebraic closure on scenarios is noteffective for directional relations. Considering the LR calculus, it is easy to construct algebraically closed, but inconsistentscenarios involving as few as 5 variables [22]: with respect to the classically used binary composition all scenarios onlycontaining the relations left and right are algebraically closed anyway, but even for the more natural ternary composition◦1 Since TPCC does not define half-line relations for all 45angles as OPRA4 does, TPCC is not a refinement of OPRA4.1506D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–1507(cf. [30]) this counterexample holds. Considering the conditions for oriented matroids we are able to give a much betterapproximation of QCSP(left, right) than obtained by algebraic closure. Our approach is based on the following realizabilitytheorem.Theorem 17 (Matroid realizability [23]). All oriented matroids of rank 3 with |E| (cid:2) 8 are realizable.Hence, only testing the conditions of oriented matroids according to Definition 5 we obtain a decision method for smallinstances that is more effective than algebraic closure. Since we are considering qualitative relations left and right only,condition 1 of Definition 5 is always met. Condition 2 requires us to check all permutations of triples (which can be donein O(n3) time) and it is easy to see that condition 3, also known as Grassmann–Plücker conditions, can be checked O(n5)time. Theorem 17 gives us that testing matroid conditions decides consistency for up to size 8 (sub-)networks.We note that this procedure has little higher complexity than checking algebraic closure with respect to ternary compo-sition for ternary calculi which is O(n4), but it is more effective. Considering all 1024 constraint networks with 5 variablesand relations left and right, 53 of these meet the Grassmann–Plücker conditions (and are thus realizable), whereas 544are algebraically closed with respect to ternary composition, i.e., testing realizability by algebraic closure yields 491 falsepositives.7. ConclusionIn this article we have shown that directional calculi are inherently intractable. Nevertheless, dealing with directionalinformation is relevant to applications involving, e.g., robot instruction or natural language semantics [8]. We believe this isa motivation for future QSR research: identifying new reasoning methods to handle directional information. So far, QSR hasfocused on one single core method: deciding consistency of constraint networks only involving (disjoint) base relations bythe path-consistency method. As this polynomial-time method does not decide consistency for any of the calculi discussedhere, future work in QSR must investigate alternative reasoning methods. Furthermore, it needs to be researched whetherthere exist tractable refinements of directional constraints. This question is potentially hard to answer, since existence of apolynomially tractable finite refinement of the relations left, right implies NP-membership of RUOM (cf. Theorem 14) — anopen question. For practical applications it is also interesting to learn how good polynomial-time methods can approximateconsistency.AcknowledgementsThe authors thank Till Mossakowski and Arne Kreutzmann for commenting on a draft of this paper. We also thank ourreviewers for helping us to improve the paper.References[1] A.G. Cohn, J. Renz, Qualitative spatial reasoning, in: F. van Harmelen, V. Lifschitz, B. Porter (Eds.), Handbook of Knowledge Representation, Elsevier,2007, pp. 551–596.[2] G. Ligozat, J. Renz, What is a qualitative calculus? A general framework, in: C. Zhang, H.W. Guesgen, W.K. Yeap (Eds.), PRICAI 2004: Trends in ArtificialIntelligence—8th Pacific Rim International Conference on Artificial Intelligence, Springer, 2004, pp. 53–64.[3] J. Renz, Qualitative Spatial Reasoning with Topological Information, LNCS, vol. 2293, Springer-Verlag, Berlin, 2002.[4] T. Drakengren, P. Jonsson, A complete classification of tractability in Allen’s algebra relative to subsets of basic relations, Artificial Intelligence 106 (2)(1998) 205–219.[5] S. Skiadopoulos, M. Koubarakis, On the consistency of cardinal directions constraints, Artificial Intelligence 163 (1) (2005) 91–135.[6] G. Ligozat, Qualitative triangulation for spatial reasoning, in: A.U. Frank, I. Campari (Eds.), Spatial Information Theory: A Theoretical Basis for GIS(COSIT’93), in: Lecture Notes in Computer Science, vol. 716, Springer, 1993, pp. 54–68.[7] F. Dylla, L. Frommberger, J.O. Wallgrün, D. Wolter, B. Nebel, S. Wölfl, Sailaway: Formalizing navigation rules, in: Proceedings of the AISB07 Workshopon Spatial Reasoning and Communication, 2007, pp. 470–474.[8] R. Moratz, T. Tenbrink, Spatial reference in linguistic human–robot interaction: Iterative, empirically supported development of a model of projectiverelations, Spatial Cognition and Computation 6 (1) (2006) 63–106.[9] A. Scivos, B. Nebel, The finest of its class: The practical natural point-based ternary calculus LR for qualitative spatial reasoning, in: C. Freksa, M.Knauff, B. Krieg-Brückner, B. Nebel, T. Barkowsky (Eds.), Spatial Cognition IV. Reasoning, Action, Interaction: International Conference Spatial Cognition2004, in: Lecture Notes in Artificial Intelligence, vol. 3343, Springer, 2005, pp. 283–303.[10] C. Freksa, Using orientation information for qualitative spatial reasoning, in: Theories and Methods of Spatio-Temporal Reasoning in Geographic Space.International Conference GIS — From Space to Territory, Springer, 1992, pp. 162–178.[11] A. Scivos, B. Nebel, Double-crossing: Decidability and computational complexity of a qualitative calculus for navigation, in: D.R. Montello (Ed.), SpatialInformation Theory: Foundations of GIS, in: LNCS, vol. 2205, Springer, 2001, pp. 431–446.[12] R. Moratz, J. Renz, D. Wolter, Qualitative spatial reasoning about line segments, in: W. Horn (Ed.), ECAI 2000 Proceedings of the 14th EuropeanConference on Artificial Intelligence, IOS Press, Amsterdam, 2000, pp. 234–238.[13] R. Moratz, Representing relative direction as binary relation of oriented points, in: Proceedings of the 17th European Conference on Artificial Intelli-gence (ECAI 2006), Riva del Garda, Italy, 2006.[14] R. Moratz, M. Ragni, Qualitative spatial reasoning about relative point position, Journal of Visual Languages and Computing 19 (1) (2007) 75–98.[15] J. Renz, B. Nebel, Qualitative spatial reasoning using constraint calculi, in: M. Aiello, I.E. Pratt-Hartmann, J.F. van B˜enthem (Eds.), Handbook of SpatialLogics, Springer, 2007, pp. 161–215.[16] A.K. Mackworth, Consistency in networks of relations, Artificial Intelligence 8 (1977) 99–118.D. Wolter, J.H. Lee / Artificial Intelligence 174 (2010) 1498–15071507[17] J. Renz, G. Ligozat, Weak composition for qualitative spatial and temporal reasoning, in: Proceedings of the Eleventh International Conference onPrinciples and Practice of Constraint Programming, 2005, pp. 534–548.[18] J. Renz, Qualitative spatial and temporal reasoning: Efficient algorithms for everyone, in: Proceedings of the 20th International Joint Conference onArtificial Intelligence (IJCAI-07), Hyderabad, India, 2007, pp. 526–531.[19] D.A. Randell, Z. Cui, A.G. Cohn, A spatial logic based on regions and “Connection”, in: B. Nebel, C. Rich, W. Swartout (Eds.), KR’92, Principles ofKnowledge Representation and Reasoning: Proceedings of the Third International Conference, Morgan Kaufmann, San Mateo (CA), USA, 1992, pp. 165–176.[20] J.F. Allen, Maintaining knowledge about temporal intervals, Communications of the ACM (1983) 832–843.[21] J. Renz, B. Nebel, Efficient methods for qualitative spatial reasoning, Journal of Artificial Intelligence Research (JAIR) 15 (2001) 289–318.[22] D. Lücke, T. Mossakowski, D. Wolter, Qualitative reasoning about convex relations, in: C. Freksa, S.N. Newcombe, P. Gärdenfors, S. Wölfl (Eds.), SpatialCognition VI, in: Lecture Notes in Computer Science, vol. 5248, Springer, 2008, pp. 426–440.[23] A. Björner, M.L. Vergnas, B. Sturmfels, N. White, G. Ziegler, Oriented Matroids, 2nd edition, Encyclopedia of Mathematics and its Applications, vol. 46,Cambridge University Press, 1999.[24] D.E. Knuth, Axioms and Hulls, Lecture Notes in Computer Science, vol. 606, Springer, 1992.[25] J. Stell, J. Webster, Oriented matroids as a foundation for space in GIS, Computers, Environment and Urban Systems 31 (4) (2007) 379–392,doi:10.1016/j.compenvurbsys.2006.03.002.[26] J. Richter-Gebert, Mnëv’s universality theorem revisited, in: Proceedings of the S’eminaire Lotharingien de Combinatorie, 1995, pp. 211–225.[27] P.W. Shor, Stretchability of pseudolines is NP-hard, in: Applied Geometry and Discrete Mathematics: The Victor Klee Festschrift, in: DIMACS Series inDiscrete Mathematics and Theoretical Computer Science, vol. 4, American Mathematical Society, 1991, pp. 531–554.[28] S. Basu, R. Pollack, M.-F. Roy, A new algorithm to find a point in every cell defined by a family of polynomials, in: B. Caviness, J. Johnson (Eds.),Quantifier Elimination and Cylindric Algebraic Decomposition, in: Texts and Monographs in Symbolic Computation, Springer, 1998, pp. 341–350.[29] A. Tarski, A Decision Method for Elementary Algebra and Geometry, manuscript, republished as A Decision Method for Elementary Algebra and Geom-etry, 2nd ed., University of California Press, Berkeley, CA, 1951 (1948).[30] J.-F. Condotta, G. Ligozat, M. Saade, A generic toolkit for n-ary qualitative temporal and spatial calculi, in: Proceedings of the 13th InternationalSymposium on Temporal Representation and Reasoning (TIME’06), Budapest, Hungary, 2006, pp. 78–86.