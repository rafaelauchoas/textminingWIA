ELSEVIER Artificial Intelligence 92 ( 1997) 91-129 Artificial Intelligence Proving properties of continuous systems: qualitative simulation and temporal logic * Benjamin Shults a,‘, Benjamin J. Kuipers b,* B Department of Mathematics, University of Texas at Austin, Austin, TX 78712. USA h Computer Science Department, University of Texas at Austin, Taylor Hall, Austin, 7x 78712, USA Received February 1996; revised September 1996 Abstract temporal We demonstrate an automated method about solutions for proving to ordinary differential equations (ODES), even in the face of an incomplete specification of the ODE. The method combines an implemented, on-the-fly, model checking algorithm for statements in the temporal logic CTL* with the output of the qualitative simulation algorithm QSIM. Based on the QSIM Guaranteed Coverage Theorem, we prove that for certain CTL* statements, @, if @ is true for the temporal structure produced by QSIM, then a corresponding temporal statement, di’, holds for the solution of any ODE consistent with the qualitative differential equation (QDE) that QSIM used to generate the temporal structure. @ 1997 Elsevier Science B.V. logic statements Keywords: Temporal logic; Qualitative simulation; Model checking; Differential equations 1. Introduction The world is continuous about reliably to reason range of cases by using qualitative to describe model to check the validity of statements the behaviors of the continuous it. We demonstrate and dynamic, but we want to use discrete symbolic means this for a significant to generate a finite structure guaranteed for doing simulation a method then interpreting that structure as a The main theorem of this paper can be stated is a QSIM behavior tree generated from the qualitative differential as follows. Suppose A4 equation C. If M system, in temporal logic. informally *This work has been supported Electric Power Research * Corresponding ’ E-mail: bshults@math.utexas.edu. Institute. A preliminary author. E-mail: kuipers@cs.utexas.edu. in part by the National Science Foundation (grant IRI-9216584) and by the report on this work appeared as [ 171. 0004-3702/97/$17,00 /WS0004-3702(96)00050-l @ 1997 Elsevier Science B.V. All rights reserved 92 B. Shuks, B.J. Kuipers/Artifrcial Intelligence 92 (1997) 91-129 logic formula, to C. Of course, we will formalize all of these relationships then the formula describes every solution to for a temporal is a model every ODE which abstracts carefully in this paper. In many applications initial conditions in which ordinary differential or the specific relationship equations are used, information between a pair of quantities between quantities information is not about completely known. In some cases constants are only known to lie in a certain range or the relationship allows this which abstracts differential about the solution system. reasoning to any ODE information. We call such an abstract ODE a qualitative (or QDE) . In many such applications we want to draw conclusions to any ODE consistent with the limited to be monotonic. Qualitative information we have about a to generate descriptions is only known to the known of solutions to be used equation there are a number of applications inference about time-ordered system. Since applications Furthermore, profit from reliable of a continuous design must often cope with conditions reasoning temporal or semi-quantitative connection checking. between over the possible behaviors of a system described by a qualitative valuable. Our program, TL, makes a formal model logic model solutions to real differential and temporal is particularly equations reasoning of model-based that can events over the set of possible behaviors and to do knowledge, the ability diagnosis such as control, monitoring, of incomplete A qualitative simulator, the possible behaviors consistent with the qualitative differential [ 13,141. This set of behaviors to the QSIM algorithm state input is guaranteed represent initial as a finite structure of qualitative ture real-valued abstracts “soundness” Theorem. function which to contain to the QDE under circumstances this property of QSIM, and such as QSIM, constructs a tree-like structure whose branches equation and is expressed this struc- extended- equation which to be described. We call this property the is the content of the Guaranteed Coverage state descriptions. a branch which describes In the case of QSIM, any “reasonable” is a solution of an ordinary differential temporal Since the output of the QSIM algorithm is a structure whose paths describe reasonable, temporal questions and have those questions answered. This is accomplished it describes logic model checking. A model checking functions, we would like to be able to formulate extended-real-valued about the system using logic formula and a tree-like structure and determines whether temporal a model for the formula. Temporal (in propositional eventually, and until. Modal worlds the logical sense of the word) logic with temporal operators on time-varying (i.e., alternate behaviors or paths), logic adds operators for truth values takes as input a is the structure logic augments truth values, such as always, in alternate possible such as necessarily and possibly. algorithm We have chosen to use the branching time temporal logic CTL* which is described by Emerson and Clarke [ 7,8]. Because QSIM is sound, for any CTL* statement @ which is “universal” in a sense we if Cp is modeled by the structure produced by QSIM, will define, theorem holds for the solution of any ordinary differential QDE that generated temporal logic about continuous systems can be proved by qualitative the QSIM structure. Therefore, at least for universals, equation consistent with the in statements simulation. This then a corresponding B. Slzults, B.J. Kuipers/Art@cial Intelligence 92 (1997) 91-129 93 allows a hybrid reasoning reasoning about dynamical to prove common-sense system systems. statements and to do expert We also provide a limited completeness result: by QSIM describe differential which are not universal may be used to prove properties of the system. extended-real-valued equations consistent with the QDE input to QSIM, then even CTL* formulas reasonable, in case all paths in the structure output to functions which are solutions The propositional part of the temporal the construction conjunction with [ 121 -in of formulas the numerical containing extensions order to prove numerical properties of physical systems. to QSIM-Q2 language numerical includes propositions which allow in information. [ 161, Q3 [2] and NSIM This can be used In Section 2 we describe and define language CTL* and present some basic definitions theorem. The reader already familiar with CTL* may want to read only Section 2.1 to learn about our notation conventions and Section 2.4 to see the standard results from the literature which we will be using. and facts which will be needed the temporal in our main logic In Section 3 we describe the QSIM framework and prove the Guaranteed Coverage Theorem. Even readers familiar with QSIM should read most of Section 3 since we use an updated and add some new terminology. formalization Section 4 begins to show how the QSIM framework and the underlying differential equations explain how formulas reasonable are related to the theory of temporal the output of the QSIM algorithm logic and CTL* formulas. There we is used as a structure over which formulas describe in CTL* can be interpreted. We also show how CTL* real-valued functions. In Section 5 we introduce the last hypothesis theorem. We also prove some useful special cases and a completeness also discusses some issues concerning the implementation. to the main theorem and prove the main result. Section 5 In Section 6 we describe model checking with qualitative some applications simulation. of the combination of temporal logic Sections 2-4 lay the groundwork theorem in the main for the statement of the main increasing degrees of formality theorem. We will the as we develop be stating terminology. 2. CTL* Computational is a branching is summarized by Emerson logics [ 81. We will customize CTL* slightly time temporal tree logic (CTL and its extension CTL*) in The logic. The theory of branching time temporal in Handbook of TheoreticaE Computer Science systems a state may have order to allow states with no successors because infinity or if the value of some variable crosses a no successor boundary of its range). In this section, we define the syntax and semantics of the CTL* language and, in Section 2.4, give some basic results and definitions which will be used by our main from the presentation in the notation we use. We use this notation as a convenience theorems. The presentation of the language in [8] except for our implementation. of CTL* here does not differ significantly if time reaches in continuous (e.g. 94 B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 A model checking algorithm formula and determines whether word) for the formula. examines the structure a temporal is a model structure (in and a temporal logic the logical sense of the Our implementation to terminate with (TL) of a model checking algorithm for CTL* is an “on-the-fly” [ 31. On-the- model checker based on the algorithm of Bhat, Cleaveland and Grumberg fly algorithms have the advantage over the more common “global” algorithms of being able large structure. the complexity for CTL model checking. Our implementation systems about continuous then is the same as the best known algorithms statements If the formula happens of this on-the-fly to be in the sublanguage CTL of CTL* result before constructing the entire exponentially (see Section 4). for expressing is customized the correct algorithm 2.1. Terminology and notation We interpret a CTL* formula over a temporal structure M = (S, X, L) where 0 S is a set of states, l X is a set of fullpaths, l L:SxAP+{T,F} proposition 4 E AP and assigns a Boolean is an interpretation which truth value. takes a state s E S and an atomic Here AP is the set of atomic propositions. A fullpath or terminates with a state which has no successor. is a path which is either infinite We use the notation We let A(x) denote totally ordered set, then by i < A(x) we mean use totally ordered sets to represent paths and fullpaths. Notice finite fullpath x = (SO, st, s2,. . .) is sh(*)_i. (SO, si, ~2,. . .) to denote an infinite or finite totally ordered set. totally ordered set x. If x is an infinite, integer. Here we that the last state in a i is any nonnegative the cardinality of a finite, We now describe the path quantifiers and the basic temporal operators on propositions. The names we use for path quantifiers concise names used in the temporal and temporal operators are equivalent to the more logic research community: A z necessarily, G z always, E = possibly, F = eventually, X = next, u =_ until. We prefer to give a rough description before the formal syntax and semantics are defined. some state s and path x starting at s are given and that p is a formula. The Suppose two path quantifiers l (necessarily are p), which is true at s if p is true of every fullpath starting with s, and l (possibly The elementary formulas. p), which is true at s if p is true of Some fullpath starting at s. temporal operators are (next p) and (until p q) where p and q are l (next p) is true of the path x if A(x) = 1 or p is true of the path obtained from x by deleting its first state, and l (until p q) state preceding strong-until, is true of x if q is true of some state in x and p is true of every the first state in which q is true. This operator is sometimes called it from weak-until to distinguish to be defined below. B. Shults, B.J. Kuipers/Artifcial Intelligence 92 (1997) 91-129 95 The precise syntax and semantics of until and next will be defined in the following sections. We will use the following until and next: abbreviations to define other operators in terms of (releases p q) 5 (not (until (not p) (not q> 11, (before p q) s (not (until (not p) q)), (strong-nextp) z (not (next (notp))), (eventually p) = (until true p), (always p) = (not (eventually (not p) > 1, (never p> 3 (always (not p> >, (weak-until p q) s (before q (and (not q) (not p) > > , (infinitely-oftenp) = (always (eventuallyp)), (almost-everywherep) z (eventually (alwaysp)). The formula (releases p q) is true of a path if q is always (before true or if q is true p q) is true of a the first state in which p is true. The statement if p is true in some state previous through path q does not necessarily ever become a path if p is true in every state or in every state before true. true). The formula to the first state in which q is true (though p q) is true of the first state in which q is (weak-until Because we are applying CTL* to structures which may have finite fullpaths, the temporal operator next may seem ambiguous. Therefore, we must distinguish between is true of a path if the The statement strong-next path has no next state or if the path has a second state and p is true of it. The statement is true of a path if the path has a second state and p is true of that (strong-next state. In our discussion, we consider next and weak-next. (weak-next p) p) In the following two subsections we give for the temporal alone to mean weak-next. the formal definitions operators and path quantifiers of CTL*. 2.2. Syntax A state formula is a formula which is interpreted over a path. State formulas is interpreted over a state and a path formula is in CTL* are generated by S3) below. The path formulas the semantics of releases, as abbreviations, we include in CTL* are generated by rules (B l)-(B3) and or can be derived from strong-next the definitions here so that the proofs later a formula which rules (Sl)-( below. Although their definitions will be easier to follow. Definition 1. The syntax of CTL* (S 1) each atomic proposition (S2) ifpl,...,p, (not PI>, is defined as follows: 4 is a state formula, arestateformulasthensoare (and pl . ..p.), (or p,...p,,) and 96 B. Shults, B.J. Kuipers/Art$icial Intelligence 92 (1997) 91-129 (possibly p) and (necessarily p) are state (S3) (Bl) (B2) (B3) then if p is a path formula formulas, every state formula if pt, . . . ,p,, arepathfotmulas (not if p and q are path formulas p q) and (until (releases pl>, is a path formula, thensoare (and pt . ..P.,), (or pt . ..p.,> and then so are (next p>, (strong-next p), p q). We also allow the standard boolean abbreviation for implies. 2.3. Semantics The following notation is needed before Given a path x = (SO, $1, ~2,. . .), for every nonnegative denote the path any nonnegative x the first i states. Notice A(x’) = A(x) (si, si+l, si+2,. . .), which integer i < A(x), that if x is finite, i. - xi is the path obtained integer is the suffix of x starting at si. Thus, the semantics of our logic can be defined. i < A(x) we let xi for from and from x by deleting for i 2 A(x) then xi is not defined Now we are ready to give the semantics (respectively M, x k @) to mean mula CD) is true in the temporal x). Each above. item below gives that the state formula @ (respectively for the language. We write M, SO k @ path for- of the path in the syntax structure M at the state SO (respectively item of the corresponding the interpretation Definition 2. If se is a state in M and x = (SO, st , . . .) is a nonempty starting at so, then we inductively define + as follows. fullpath in M (Sl) M,sa + C#J where C$ is an atomic proposition (S2) M, so + (and PI . . -p,> ifandonlyifM,sa+~piforalli, M, so + (or PI . . -pn> ifandonlyifM,sa+piforsomei, if and only M, SO k (not p) (S3) M, SO /= (possibly if and only if L( SO, 4) = T; l<i<n; l<i<n; if it is not the case that M, se + p; p> if and only if there is a fullpath y in M starting at SO, such that M, y /= p; M, SO k (necessarily so, M,Y FpP; p) if and only if for every fullpath y in M starting at (B 1) M, x /= p where p is a state formula 052) M,xi= (andpI.. .pn> ifandonlyifM,xkpiforalli,l<i<n; if and only if M, SO k p; M, x b (or pr . . .p,,> if and only if M, x b pi for some M, x k (not p) if and only if it is not the case that M, x k p; p q) if there is a nonnegative if and only (B3) M, x k (until i, 1 < i < n; such that M, xi + q and for every nonnegative M, x k (releases M, xi k q or there is a nonnegative for every j < i, M, xj k q; M, x k (next p> if and only if A(x) = 1 or M, x1 k p; M, x k (strong-next p q) if and only if for every nonnegative integer i < A(x) integer p) if and only if A(x) > 1 and M,x’ /== p. i < n(x), integer j < i, M, xj + p; integer i < n(x), such that M, xi + p and B. Shults, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 97 2.4. Basic results The proofs of our main theorems will use the fact that any formula can be written in the following form. Definition 3 (Positive normal form). A CTL* until, next releases, formula and for every not and strong-next in the formula, formula are the only is in positive normal form in temporal operators if the its scope is an atomic proposition. Here we require that implies first be rewritten to a formula in positive normal in terms of those mentioned in terms of not and and or or. Every form because all temporal above and nots can be propagated is equivalent CTL* formula operators can be written inward to propositions [ 31. formula). A CTL* expression @ is said is written in positive normal form, there are no occurrences to be universal if, of the Definition 4 (Universal when the formula path quantifier possibly. We call a path formula a pelfect path formula the formulas which correspond are exactly (PLTL) . If 0 is a formula from @ by deleting all occurrences propositions and in CTL*, to formulas then Cp’ denotes if it contains no path quantifiers. These in propositional linear time logic the perfect path formula obtained if p and 9 are of the path quantifiers. For example, @ = (necessarily (until p (necessarily s> >>, then @’ = (until p q) . We call @J’ the pellfection of @. The following of one of the main theorems. lemma is needed in the proof of Lemma 6 which is used in the proof Lemma 5. If @ is a universal formula and x is a fullpath then M, x k Sp’. in M such that M, x t== @, The proof of this is complex and not enlightening. Therefore, it has been put in Appendix C . Lemma 6. For every universal CTL* state formula @, and every temporal structure M and state s in M, if M, s k @ then for every fullpath x in M starting at s, M, x k @I. Proof. The proof follows easily by induction on the length of @ by using Lemma 5. 0 3. QSIM In Section 3.1 we briefly describe the QSIM of the QSIM framework framework. We refer to [ 141 and to Appendix B for details the reader Kuipers’ full description 98 B. Shults, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 on the new definition of a reasonable to the Guaranteed Coverage Theorem are described in the present section. function. Other reformalizations of concepts related The QSIM algorithm takes as input the user’s qualitative or semi-quantitative equation related is formally tion of a physical system. This input is called a qualitative differential This description output from the QSIM algorithm of the variables The main . to some class of ODES as we explain below. The the values stated infor- in the tree mally says that every solution output by QSIM. We give the formal statement of the Guaranteed Coverage Theorem below. in the input QDE. theorem of this section is a tree whose nodes are states describing (the Guaranteed Coverage Theorem) to the QDE is represented to any ODE related descrip- (QDE) Sections 3.1 and 3.2 explain some of the basic terminology used in the statement of the Guaranteed Coverage Theorem. These sections also explain why the hypotheses of so that the basic ideas are easy the theorem are necessary. Those sections are designed to find. A casual the statement of the Guaranteed Coverage Theorem without reader should be able to understand reading all of the details in Sections 3.1 and 3.2. Section 3.1 among other things, formalizes and the relationship between which structures and continuous functions. it represents. Section 3.2 formalizes the finite output of QSIM and the generally the relationship between QDEs and ODES infinite structure in QSIM fullpaths between the relationship Now we give the formal statement of the Guaranteed Coverage Theorem. All unfa- are (e.g., specification, splitting, closed, abstraction) miliar defined terms used in this statement in Sections 3.1 and 3.2. Suppose M is a closed the ODE, F, abstracts U. The QSIM algorithm U is described by some rooted fullpath tree generated from the QDE and initial state (C, I). Suppose to C and that the structural abstraction, F’, of F has solution set structure of is carefully crafted to guarantee in the represented that the quagtative structure M: coverage). Under the conditions above, there is a rooted full- Theorem 7, (Guaranteed path x in A4 and a speci$cation (x, c) of x such that (x, c) qualitatively describes some splitting ({ ti}, U) Of U. The proof is given by Kuipers algorithm proof here. itself, for example-is 3.1. The QSIM framework [ 13,141. Because most of the QSIM framework-the beyond the scope of this paper, we will not detail the A qualitative d@erential equation consists of a finite set of variables (each of which is associated with a quantity space which is a totally ordered set of landmarks), and a set of constraints on the values of the variables. A QDE is a structural abstraction of a equations. The QDE codifies class of ordinary differential knowledge of a physical the QSIM user’s incomplete system. Starting with a QDE, C, and an initial simulation with QSIM produces a finite tree, M = (S, R, B), of qualitative states, linked by the QSIM successor state, I, qualitative B. Shults, B.J. Kuipers/Art@ial Intelligence 92 (1997) 91-129 99 it produces tree which is called a QSIM behavior relation, R. The finite tree in the literature. We let M = (S, R, B) represent tree where S is the set of states, R is the successor relation and B is the set of fullpaths starting at the initial state. Each behavior at the initial state and totally ordered set beginning at a state with no R-successor. The set B is completely determined by the terminating relation R and the initial state I. Because of the significance of the initial state, we call fullpaths whose first state is I rootedfullpaths. is represented the behavior as a finite, the qualitative value of each variable appearing at a leaf of the tree, i.e., B is the set of QSIM behaviors We will say that this QSIM behavior and the initial state. A QSZM behavior and terminating state describes variable will represent state s is of the form (qmag, qdir), where qmag describes to a landmark or in an open interval defined by two landmarks, the derivative of u. By considering in the QDE, QSIM the constraints including quiescence, and behaviors, tree was generated by the pair (C, I) of the QDE tree, starting at the root is a path in the behavior in M. Each in the QDE model. Each a function of time. The qualitative value of a variable u over a the magnitude of u as equal and qdir is the sign of the qualitative values of the variables at a state, and is able to derive a number of properties of the states stability and cycles. state the user to produce if it has no R-successors A QSIM state is called a transition due to the fact that the value of one of its variables crosses a boundary of the QDE description. QSIM state in one tree and allows the user to produce a tree the root of a tree generated by another QDE. This allows ranges. The theorems here could which has different models for its behavior is tedious be extended to take transition and unenlightening states have no successors. into account, however, in this paper, we assume relations so, in the theorems transition relations between a transition that transition the extension in different Structural abstraction The class of ODES related abstract to the QDE. The concept of structural abstraction to a given QDE is that class of ODES which structurally is best understood by example. Example 8. Given an ODE, F, there is associated with it a set, F’, of simultaneous equations which example, consider an equation from F. We will call F’ the structural abstraction of F. For for simple harmonic motion: is derived d*X dt = --x, abstract this equation is broken down We structurally u so that v = dx/dt is a set of three equations equation be abstracted abstraction the structural book Qualitative Reasoning ODE. in three variables its components to a QSIM constraint. This set of three equations in several steps. First we introduce a variable and again we let a = dv/dt. Finally, we write a = --x so that F’ time). At each step, the to is simple enough is called the structural is denoted F’. From and for harmonic motion to create a QDE. See Section 3.3.1 of Kuipers’ of an (not including until each equation [ 141 for more details on the structural of the original abstraction, equation it is easy abstraction into 100 B. Shults, B.J. Kuipers/Artijcial Intelligence 92 (1997) 91-129 The structural QDE. Following abstraction, our example, we obtain F’, the following QDE from F’. is useful because it can easily be abstracted into a (d/dt X V> (d/dt V A) (M- a X) From this QDE, QSIM will produce scribing simple harmonic motion abstracts solutions by QSIM. The Guaranteed Coverage Theorem to this ODE are described by some fullpath says just that. a temporal structure. Since the equation de- to this QDE, we would like to know that the in the temporal structure generated A solution, U, of F’ is a set of functions of time which simultaneously make each true. Since U is a set of functions we need a way of relating to be substituted. in F’ for which they are supposed in U to the variables in F’ of the equations the functions We will use the symbol $ to represent the set of variables abstracted the set of variables the variables from F’ and U is a solution in C. The bijection in F’. Similarly, It should be clear that a solution, this transformation this bijection if M is a QSIM from the set of functions in U to tree produced by the QDE, C, from U to the names of to F’, we let +“,M be the bijection is simply in F’ and the names of the variables the relationship between in C. to F’ can be converted (I, in the other direction. For example, into a solution is a solution that the sine function to F’, where @(sin) = x,$(cos) is a solution to the original equation = o and $(-sin) to F since U = = a, for simple through by going {sin, cos, - sin} we can conclude harmonic motion. The represented QSIM structure Here we make the important betwezn estinction structure M. Essentially, M infinite corresponding cycle states through this in a sensible way when the strong match criterion QSIM may use various matching criteria when is used. the states which they match. However, we have to be careful to do the finite QSIM is obtained tree, M, and the from M by following it detects cycles. The strong mutch is a landmark that the value of each variable and that those landmarks match requires than an interval) criterion in (rather state (the qualitative derivatives have to match regardless of the the previously match criterion). The weak match criterion the values are either allows a match when intervals or landmarks, The QSIM user may also dictate whether cycles are detected across QSIM behaviors cycles) or only on the same QSIM behavior. the values of the variables in the states to be matched (cross-edge existing The type of cycle detection in the interpretation chosen makes a difference of the is used, then a match represents a real cycle in the system. That theorem that point exactly as it did before. If the same from the cycle along a different path than the to a previous it must continue such a cycle behavior represents a singlefullpath is used, then a match does not necessarily the system may continue state and therefore, by the uniqueness in the infinite structure. represent precisely tree. If strong matching is, the system has returned for differential equations, Therefore, weak matching state and hence, one it has already followed. from B. Shults, B.J. Kuipers/Arrijicial Intelligence 92 (1997) 91-129 101 In the former case, there will be-a one-to-one in M and the rooted many rooted fullpaths the behaviors fullp_aths in M. In the latter case, we may end up with infinitely in M. correspondence between We want to do temporal reasoning about paths which pass th?ugh these cycle states. the QSIM structure, M = (S, X), represented in the behavior at the root of the QSIM sensible way. That represented the set X, of rooted fullpaths. A rooted fullpath Therefore we will define what we call by M = (S, R, B). Here X is the set of fullpaths To construct X, we first define through cycle states is a path starting is to say, we only add fullpaths which satisfy in a semantically If the used. the restrictions mentioned then for each cycle strong match criterion was used with no cross-edge cycles allowed, then passes behavior, we add a single used, through then we simply add the cycle pairs to the relation R to obtain the relation R and X, is the set of rooted fullpaths generated by E. Finally, we define X to be the suffix closure of x,. * times. If another kind of matchinkwas infinite infinitely many to the type of cycle matching tree and continuing the same cycle fullpath which that behavior follows related above tree M. in 16? it will be useful the natural bijection, In the case of strong matching with no cross-edge cycles, to go into in this case, each behavior becomes associated with a single rooted more detail. Since, zo, from the set of rooted fullpaths, X,, to fullpath we can define the set of behaviors, B. Since, in X is a suffix of a unique zo to a function z : X + B so that for any rooted fullpath, we can extend (Thus, x E X, z (x) = zo(x,) where x, is the rooted fullpath of which x is a suffix. z is not generally to its associated QSIM behavior. This assignment will be useful when we prove properties of systems about which we have some quantitative in this case, any fullpath the bijection a bijection.) We think of z as mapping a fullpath information. Closed trees Ideally, given a QDE, the QSIM algorithm will terminate, not because it runs out of memory or other resources, but because When the QSIM algorithm terminates it has finished simulating all possible behaviors. in this “natural” way, we call the tree it produces terminates state, a cycle state or a quiescent state. There are cases, it is tree regardless of how long tree returned by QSIM in the behavior In this case, every behavior in which QSIM does not return a closed closed. with a state which is a transition however, allowed of the Guaranteed Coverage Theorem do not hold. If the behavior then it is possible fullpath that an actual beha$or of the system structure M. to run. In cases where QSIM returns a tree which is not closed, the hypotheses tree M is not closed is not represented by any rooted a strong cycle match criterion does not allow cross-edge QSIM behavior). Under cycles this simulation style creates new landmarks (all variables must have identical for critical values, applies and landmark values), the same cycle matches only within style, certain systems such as the damped spring (i.e., considers in the represented The normal QSIM simulation 2 Notice that, in the former case, X is not necessarily fusion closed and hence not R-generable. A set X is if, whenever xls~q, x2sy2 E X, then x~s.vz E X for any states XI, .q and path s, !q, !Q. A set fusion closed X is R-generable if it is naturally generated by some relation [ 8 1, 102 B. Shults, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 never close. However, by applying weak cycle match criterion, qualitative model has a finite closed behavior Reasoning [ 141.) the envisionment and cycle matches anywhere simulation style (no new landmarks, tree), every tree. (See Chapter 5 of Kuipers’ Qualitative in the behavior Quantitative When information bounds is used and cross-edge state may be augmented with quantitative strong cycle matching the initial interval the QDE and as numerical symbolic agates are inconsistent with the information. The most important quantitative the purposes marks. then such and other this case, QSIM prop- it to prune branches of the tree which for the land- the real values denoted by [ 2,12,14,16]. in the behavior prediction information cycles are not allowed, information information which QSIM derives about this quantitative of this paper information landmarks and uses is the terms on In A landmark in a quantity space of a QSIM variable to QSIM are able is intended to restrict interval. This quantitative to name some real the possible values extensions extended-real number. The quantitative to some closed, of a landmark may be different on each QSIM behavior. Thus, simply ask for the range of the possible values of a landmark. The user must ask for the range of the in a given behavior. So in this case, we will use the possible values of a landmark to. If weak cycle function matching loses information its sense. z to determine which behavior is used or cross-edge is related then the numeric cycles are detected, the user cannot information a given fullpath to illustrate Three billiard balls the fact that quantitative is stored on rather than on states, we will construct a simple example with numeric [20] start to move with constant velocities and initial shown in Fig. 1 (a). The QSIM QDE model for this scenario provides quantity and constraints Example 9. In order QSIM behaviors information. positions spaces for position, velocity, and acceleration for constant velocity motion. Collisions positions of two balls are simultaneously the differences in x and y in the x and y directions, information are detected when zero. information and the velocity, Cxp, of C is some constant within about the speeds of the balls-A and B the three possible behaviors, corre- -1.51 in units/second-QSIM [ -3.5, to C passing ahead of B, passing behind B, and colliding with B (Fig. 1 (b) ) . is no takes place at t = 0.5 seconds. There predicts When there is partial quantitative -2 units/second, have velocity interval sponding In case C collides with B, the collision possibility of C colliding with A. We chose to deal with without much complexity. Naturally, conditions it illustrated if the user had more or less knowledge on the system, another QDE and initial state could be constructed. this amount of information because our point the about Now, consider that it is a real number between of the third behavior, we know that Cxp is equal to -2. behavior, we know that Cxp is greater than -2. know that Cxp is less than -2. But since Cxp is a constant, the value of horizontal velocity, Cxp, of C in the first state. We know In the third state In the third state of the second In the third state of the first behavior, we its value over each behavior and that it is constant. and -1.5 -3.5 B. Shults, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 103 2 A 1 t I 0 B f 1 c - 2 - INF -D-8 L1 11 0 (0 01 ".tMINF I. . . ‘.., .i J,.... b & 1,. I 1.. ‘. .,..... J t DYBC DYBC (b) system. (a) Three balls on a billiard I. Predicting behaviors of a real-time Fig. and velocities. of B, behind B, or collide with B at t = 0.5. (b) Given incomplete knowledge of the speed of ball C, QSIM predicts table, with initial positions that C may pass ahead does not vary, therefore, depends on which behavior we are in. QSIM must store the quantitative about the values of landmarks not at each state but at each behavior. its value at the first state (which all three behaviors share) information We shall return to this example in Section 6.1. 104 B. Shults, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 3.2. Qualitative description In this section, we give a formal meaning QSIM fullpath x describes say when U is the solution behavior x. the set of real-valued to an ODE which abstracts to the following informal phrase: “the functions U”. This is what we want to the to the QDE used to generate In order to do this, we will first partition the domain of the functions corresponds to the value of the time variable way that the partition That will be called a spktting of U. Second, we will assign specific real numbers landmarks of the variables will be relatively functions U. At the end of this section, we give a detailed example function harmonic motion QDE. sine is described by the rooted fullpath generated by QSIM, given in x. This will be called a specification of x. From easy to define what it means for the fullpath x to describe in U in such a in the states in X. to the there, it the set of showing how the the simple Splittings We are given a set of reasonable functions U = {ui: 1 < i 6 n} taking values in reals. Since we are thinking of U as a solution from an ODE, we will assume the extended equations which was derived in U shares say that U is described by a QSIM fullpath, we need a way of partitioning of the functions fullpath. the domain, A, some interval in U that will be consistent with the values of the time variable in the extended to a set of simultaneous that each of the functions reals. In order to the domain in the (of time) We define a splitting of U as follows. Let {ti} be a strictly increasing sequence of from 0) in A satisfying the following conditions: to M only if co $ A. (indexed if t is a critical point of some nk, then t E {ti}, {ti} has no finite limit point, and {ti} converges points (1) (2) (3) According (Appendix B), such a set exists, and may be infinite only if co is the supremum of A and A is open on the right. We will call the pair ({ ti}, U) a splitting of U. Since the critical points of the functions all must be in { ti} from another splitting in { ti}. If the set { ti} is finite, then we will let tJ be by the choice of noncritical points the greatest element of {ti}. Consequently, ( 1) above), one splitting J + 1 is the cardinality to the definition of a reasonable is distinguished (condition function of {ti}. points are two consecutive the order of the indexes ({ ti}, U) there is a natural partition {Dk} of the interval Associated with any splitting A. Each Dk is either a singleton in {ti} or an open interval containing one of the points in {ti}. The indexes on the sets in the whose endpoints is, if A is closed on the left follow partition then DO = {to}, D1 = (to, tl ), and so on. If A is open on the left then Do = (a, to), D1 = {to}, D2 = (to, tl), and so on, where a is the infimum of A. If A is closed on the right then D~J = {tJ} (or DzJ+, = { tJ} if A is open on the left). To avoid the problem ti is the left endpoint of Dk, we will of going let dk denote the index such that r& is the left endpoint of Dk. If A is open on the right, then as we have said, there may be infinitely many sets in {Dk}. to figure out which in {ti}. That to this much trouble When dealing with a splitting, ({ti}, U), of U, we will use the following abbreviations: B. Shults. B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 IOS That is to say that U/l is the set of functions Ull+ is the set of functions in U each restricted in U each restricted to the domain DI and to the domain UIGk{Dk}. Specification of a fullpath to define In order need to relate a mapping of landmarks a speci$cation quantitative with that information. information the notion of a splitting being described by a fullpath, we will real numbers. We call to specific extended in the fullpath the landmarks to extended of the landmarks. We want real numbers satisfying certain sensible conditions, the specification to preserve order. Also if is assigned on a fullpath, we want the mapping to be consistent the set R” of extended Suppose c is a function with domain, and of c( inf) = cc and c(0) = 0. The the order on V is only partial is that the landmarks come from different variables. range, V if c preserves reason The landmarks of any single variable are totally ordered real numbers. The function c is called a speci$cation some partially ordered set V of landmarks, the partial order and c(minf) = -co, in V. c, of the landmarks of the variables Given a fullpath x and a specification, the partial order determined by the quantity spaces of the variables (x, c) a specijication might be associated with z (x). x when such can be determined qualitative refer to a number of x if c is also consistent with any numeric z (x) landmark, Xl, has been determined, in x under in x, we call the pair information which is the QSIM behavior associated with the to if, on the behavior z(x), extension then c(Xi) E [nt,n2]. (Recall, uniquely.) by a quantitative in the numeric In particular, to QSIM, [nt,nz], range Definition of qualitatively describes Now we can state the phrase “the QSIM fullpath x describes the set of real-valued functions U” formally. Given QSIM directed graph M and a splitting U = {Us: 1 < i < n} taking values say that (x, c) qualitatively describes splitting as described in detail is that the partition, The intention will correspond to the range of the time variable each element, Dk, of the partition will correspond the state Sk and thus the values of the functions the QSIM variables in the state Sk. a specification (x, c) of a fullpath x = (so, ~1,. . .) in a ({ ti}, U) of the set of reasonable functions in the extended the splitting reals, with common domain, A, we to the if the specification corresponds in the remainder of this subsection. {Dk}, of the domain, A, determined by the splitting in the fullpath x in such a way that in to the value of the time variable to the values of in u]k will correspond The function &J,,M referred to below is the bijection described in Section 3.1 which relates the variables in M with the variables in U. The cardinality of {ti} must equal the states in x alternate between since qualitatively U in which Sk corresponds describes to u/k as follows. the number of time point states in x. Therefore, time point states and time interval states, (x, c) between x and ({ ti}, U) if and only if there is a correspondence 106 B. Shults, B.J. Kuipers/Artijicial intelligence 92 (1997) 91-129 landmark Xl of a QSIM variable X = $~J,M( ui) and any nonnegative Given any integer k, the qualitative value of X at the state Sk is Xl if and only if uij~n = c(X1). ui/nk > 0 if and only if the qualitative derivative of the variable $“,,M( Ui) in Sk is inc. u[[D~ = 0 if and only std. u~/D,, < 0 if and only dec. If the fullpath x is finite and QSIM has labeled if the qualitative derivative of the variable @u,M(Ui) in Sk is if the qualitative derivative of the variable q”,~(ui) the last state in x with t=inf in Sk is then tJ=m. If the fullpath x is finite and QSIM has labeled the last state in x with tcinf then tJ jm. Lemma 10. The specijication if (xh, C) qualitatively h < A(x). describes (x, c) of x qualitatively describes ({ ti: dh < i}, U/h+) for every nonnegative ({ti}, U) if and only integer Proof. The proof comes straight from the definition of what it means for a specification of a fullpath a splitting of a set of functions. This definition involves A(x). to describe qualitatively between a correspondence 0 sh with D/, for every nonnegative integer h < from this definition describes and the definition of the QSIM algorithm that if (x, c) It follows qualitatively functions, and any nonnegative (X0 Xl> determined a splitting ({ti}, U) of a set of reasonable, then given any pair of landmarks, X0 and Xl, of a QSIM variable X= I,!$JM (ui) integer k, if the qualitative value of X at the state Sk is the interval that the state Sk has been then Ui(Dk) C (c(XO), c(X1)). extended-real-valued It also follows by QSIM to be quiescent if and only if u~/D~ = 0 for each 1 6 i 6 n. Example 11. Let us consider our simple example again. We will show how the Guar- anteed Coverage Theorem that we have the solution is satisfied U = {sin, cos, - sin} to the structural abstraction of the equation in this example. Recall d2X dt = -x = u and @(-sin) = a. We will show represented by the output of the QSIM algorithm describes that some rooted this in the structure where @(sin) = x, $(cos) fullpath set of functions. We translated the structural abstraction into the following QDE. (d/dt X V) (d/dt V A) (M- A X> If A4 is the tree produced by QSIM from this input, and $u,M( - sin) = A. then $u,M( sin) = X, &J,M (cos) = V B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 107 .fi + f(x) = 0 where f E W(x). (define-QDE Spring-for-TL (quantity-spaces (X (V (A (minf (minf (minf 0 X* inf) 0 inf > 0 inf) “Position”) “Velocity”) “Acceleration”) ) (constraints ((d/dt ((Udt ((M- A X) X V)) V A)) (0 0) (minf inf) (inf minf)))) (defun spring-envisionment (setq SS (make-new-state (> :from-qde :sim (make-sim Spring-for-TL :assert-values (qsim SS) (qsim-display SS)) :no-new-landmarks :cycle-detection (0 nil)) ‘((X inf) (V ((0 ‘(X V A) :weak) nil))))) ~i’:I~~~ ,.....,.....,.... . ...,... p o 9 I Position Velocity Acceleration Each path in the behavior state. The three behaviors shown. tree ends in a cycle state. Each cycle state matches are distinguished by their amplitude. The second behavior the initial is Fig. 2. QSIM input and output for undamped spring. Given QSIM by describing create new landmarks”. add a single additional this, QSIM generates the abstraction of the simple harmonic motion ODE, we complete the initial state, and giving the input to to QSIM such as “do not (See Fig. 2.) In order to make the output more interesting, we landmark X* to the quantity space of the position variable. From instructions the tree, M, shown in Fig. 2. 108 B. Slzults, B.J. Kuipers/Art$cial Intelligence 92 (1997) 91-129 is a consequence of the Guaranteed Coverage Theorem _It M has a specification which qualitatively Since we used weak matching, M has infinitely many those have specifications which qualitatively we had used strong matching, which are infinite sine function. then k would have exactly that qualitatively and have specifications describes that some rooted fullpath in some splitting of the sine function. describe a splitting of the sine function. rooted fullpaths and not all of If three rooted fullpaths, all of describe a splitting of the To demonstrate the G_uaranteed Coverage Theorem in x E M which cycles rooted fullpath 2) infinitely many function For the specification number between 0 and 1. Let’s say, c(X*> = l/2. so that the two match as described of x, we only need through times. We must find a specification the second behavior in this example, let’s consider the in Fig. of x and a splitting of the sine (illustrated in the definition of qualitative description. to find a function c which maps X* to some Let us now select a splitting of the sine function. We describe the set {ti} as the union of the following sets ordered by <: f + 2kr: k is a positive integer , > kr 2: k is a positive integer 1171. 6 + 2kn-: k is a positive , 1 integer . > Since lim,,, right and so we are allowed to have an infinite set {ti} as a splitting. sinx does not exist in R*, the domain of our sine function is open on the Now it is easy to show that (x, c) qualitatively describes in x. Consider of the domain of sine determined time variable has the value X*. Notice the definition of qualitatively are also satisfied. by {ti} corresponds the landmark X* of X = $“,~(sin). that Dz = {n-/6} and sin(rr/6) describes. It is easy to check ({ ti}, U). The partition {Dk} nicely with the domain of the In the third state of x, X = l/2 = c(X*) as required by that the other requirements 4. QSIM and the logic informally as follows. Suppose % is The main theorem of this paper can be stated from to state and prove a QSIM structure generated then the CTL* formula describes every solution order what it means to explain how temporal logic propositions in reverse order since the latter is helpful for a CTL* formula this formally, we need the QDE C. If k are checked in understanding to describe a real-valued is a model to every ODE which abstracts two things. First, we need for a CTL* formula, to C. In to explain function. Second, we need in QSIM structures. We do this the former. In Section 4.1, we give the details of how model checking is applied structures. continuous In Section 4.2, we formalize functions and give an example. the relationship between CTL* to QSIM formulas and B. Shults, B.J. KuiperdArtificial Intelligence 92 (1997) 91-129 109 to or a quiescent) in the quantity is one of {inc, std, dec}. This proposition interval defined by a pair of landmarks is true at a state if QSIM was able to determine is true exactly when the qualitative derivative of each variable u (qmag q&r) >. Suppose u is a variable of the state s, qmag is a landmark space associated with is true when the qualitative (qval or open u, and q&r derivative of u in s is qdir and the qualitative magnitude of u in s is equal subset of qmag. (status in the state is std. t=inf state must be infinite. tcinf state must be finite. (in-range extended true if and only an interval which X2), then this proposition the intervals in the state s and nr and n2 are is to lie in (Xl [ ni , n2] contains both of the numbers named by Xl and X2 to lie. If the value of uar in s is a landmark represented by that landmark is a subset of [ 111, n2]. If the value of u~lr in s is an interval is true at a state if QSIM was able to determine then this proposition in s is known u (nr nz> >. Suppose u is a variable is true if and only if the interval in which QSIM has determined in this in this that the time variable that the time variable if the number real numbers. Fig. 3. The propositional level of the language. 4.1. QSIM structures for CTL” the only thing needed to have a temporal structure as defined Given the structure k, in Section 2.1 is an interpretation The temporal structure 2, of propositions. (S, R, B), is obtained Fig. 3 in which s represents Ahe state over which the propositions tree M = = (S, X, L), represented by a QSIM behavior from i@ = (S, X) by the interpretation L of the propositions given in temporal This formulas. structure MTL is the structure over which we will Our implementation, TL, of a model checking algorithm over QSIM structures, are being interpreted. interpret CTL* cludes propositions in practice. Since this paper, we will describe adjustments rems. need in the language which are not mentioned they add clutter to the statements some of these operators to be made to definitions and proofs The propositions t=inf and tcinf allow the user to express in- in Fig. 3 but are useful in in Appendix A and explain what theo- to retain our of definitions theorems in order and for example, “eventually Alone, eventually express “eventually we may say time. (eventually in a possibly asymptotic sense” and “eventually really means “eventually in finite time”, use the propositions in a possibly asymptotic the difference between, in finite time”. sense”. In order to For example, in finite true t=inf and t<inf. that p becomes (and p t<inf >> to mean The proposition in-range is sensible only in the states of behavior from a QDE containing information is handled by extensions some quantitative information. to QSIM such as Q2 trees generated Simulation with quantitative [ 161, Q3 [2] and NSIM I10 B. Shults, B.J. Kuipers/Art@cial Intelligence 92 (1997) 91-129 referred [ 121. The numbers or +inf may be -inf quantitative information QDE, allows TL to prove time-related to in these expressions real numbers: as well as real values. The use of the numeric propositions are extended derived by QSIM from the numeric information given they and in the properties of physical systems. The expressiveness of the application of CTL* without adding part of the language. See Appendix A for some of such extensions. of model checking by augmenting to the complexity to QSIM can easily be increased the propositional 4.2. Temporal description Here we define what it means for a CTL* perfect path formula @ to describe a set of functions the sine function. and we give an example of a simple CTL* formula and show that it describes If c is a specification of the landmarks mentioned in a perfect path formula @ then we the partition of A associated with {ti}. Let Cc, be a bijection will call (@, c) a speci$cation of @. Let ({ti}, U) b e a splitting of a set of reasonable, functions U = {ui: 1 < i < n} on a common domain A. Let {Dk} extended-real-valued from some subset T denote in the formula Cp. We recursively define what it of U to the set of variables mentioned ({ti}, U) via t+h. We assume means that @ is in positive normal to the form of @ as follows. to say that (@, c) temporally describes the splitting form and so we make the definition according l If @ is a proposition, then it must correspond to the splitting according to the following - Q, = (qval cases: $(ui) (qmag qdir) > if and only if: then uil~~ = c(X0); (Xl X2) in the quantity space of $(ui) whose endpoints then Ui(Da) C (c(Xl),c(X2)); if qmag is the landmark value X0 of $(ui) if qmag is an interval are landmark values of +(Ui) qdir = inc qdir = std qdir = dec _ 0 = (status - @ = t=inf - @ = tcinf - @= (in-range if uiIcO > 0; if u~/D,, = 0; if u~[D,, < 0; if and only if and only if and only if and only if and only @(Ui) (nt n2)1 quiescent) if and only if u~ID” = 0 for each 1 < i < n; if DO = {CO}; if every element of DO is a real number; if and only if ui(Do) c [nl,nz]. . @= (andpI.. p,,) if and only if (pk, c) temporally describes ({ti}, U) via $ for each 1 < k < m. l @ = (or p1 . . . p,> some 1 < k < m. if and only if (pk, c) temporally describes ({ti}, U) via Ic, for l @ = (not p> if and only l 0 = (until describes temporally describes if (p, c) does not temporally describe ({ti}, U) via ti. p q) if and only if for some nonnegative integer h, (q, c) temporally ({ti: dh < i}, Ulh+) via fl and for every nonnegative integer 1 < h, (p, c) ({ti: dl < i}, UIl+) via #. l @ = (releases p q) if and only if for every nonnegative does not temporally describe integer 1 < h such that (p, c) temporally describes ({ ti: dl, < i}, U/h+) via $, ({ti: dr < i}, UIl+) via +. integer h such that (q, c) there is a nonnegative B. Shults, B.J. Kuipers/Art@cial Intelligence 92 (1997) 91-129 Ill l @ = (next p) if and only if A = DO or (p, c) temporally describes ({t;: di < i}, U/I+) via G+ l @ = (strong-next ({ti: dt < i},UIt+) if and only p> via fi. if A $ DO and (p, c) temporally describes Example 12. As an example, let us convince ourselves that the formula (infinitely-often (before (qval X (0 dec)) (qval X (0 inc>>>> function describes restricted temporally the sine under consideration @. We let the set U contain only specification sin(t) H X. The splitting Let {Dk} denote ourselves that (@, c) temporally describes of @, in this case, ({ti}, U) via $. is trivial: c(0) = 0. We will use for sine will be {ti} = { iz-: where i is a nonnegative the partition of [0, oo) associated with {tl}. We want to [ 0,~). Let us call the restricted the formula sine function. The : the bijection $ integer}. to convince This amounts to proving conditions: the following such that sin In, = 0 and cos ID, > 0. Every positive odd integer satisfies so we are done. that there are infinitely many nonnegative (1) sin ID,, = 0, (2) cos (n,, < 0 and (3) integers k satisfying there is some 1 > k these conditions 5. The main results The main theorem of this paper, which we can now almost state formally, says the tree generated following. Supp_ose M is a closed QSIM equation C. If MrL is a model for a universal CTL* formula every solution, U, to every ODE which abstracts U and some specification describes theorem, discuss some corollaries ({ ti} 3 U) via @u,M. Therefore, TL is sound. (@‘, c) of the perfection, @‘, of @ such that (@‘, c) temporally and also prove a more limited completeness result. In this section, we prove this from the qualitative differential (necessarily to C, there is some splitting @>, then for ({ti}, I/) of There hypothesis possible, needed contains functions contains is one more hypothesis which needs to be present in the main is usually satisfied by QSIM structures but still must be mentioned. theorem. This It is for some propositions, that QSIM may not determine all of the information to use that proposition with confidence. this notion and that relates of a set of in Sections 3.2 and 4.2, respectively. The remainder of this section temporal descriptions Section 5.1 explains the qualitative a theorem as defined the theorems which are the most important for applications. and 5. I. Determined QSIM trees Suppose that x is a fullpath where @ is a perfect path formula. Suppose qualitatively describes ({ ti}, U) via @v,M. describes in a closed QSIM structure $ and further that I@~L, x + @ of x which temporally that (x, c) is a specification ({ti}, U). In this section, we will prove that (@,c) 112 B. Shults, B.J. Kuipers/Art$cial Intelligence 92 (1997) 91-129 to prove describes completely the information and correctly. Otherwise, this, we need to be certain that QSIM determines the induction In order in propositions step in the proof of Theorem 14 does not work. Formally, we need to know that if s is a state in a QSIM tree M and fire., s b 4 where CJ~ is an atomic proposition then for every fullpath, y, starting if and only if (I$, c) temporally describes I/) ({ti}, at s, (y, c) qualitatively of Lemma 13. In an arbitrary QSIM tree, this ({ti}, U) via &J,M. This is the conclusion may not be true, although exceptions are not common. The only case that arises in the language of the body of this paper occurs t=inf to determine whether where is, f (that f E Mz With an initial state x(to) > 0 the behavior diverges, where qmag( x) is (inf f(x) = x2) (e.g., f(x) = X) imply the transition = 0). state state. However, some choices of f (e.g., time, so the time label for state at which it is impossible the QDE x’ = f(x), or t<inf. is a monotonically in a transition For example, infinite only at infinite state is undetermined. function with f(0) that x(t) becomes that x(t) becomes time, while others infinite at finite at a qualitative , inc), which is a transition terminating increasing consider imply Therefore, we define a QSIM state to be determined with respect to the propositions and t<inf one of t=inf if QSIM has determined t=inf the other propositions we have defined, all QSIM we define new propositions, defines a new proposition, respect to that proposition well as the induction Appendix A. to trees are determined. However, when to be addressed. That is to say, when one this issue needs one needs to be determined with in such a way that the proof of Lemma 13 goes through as step in Theorem 14. This can be a subtle point as you can see in to define what it means or t<inf. With respect The TL program can warn the user about any state which is not determined with re- spect to an atomic proposition being queried on that state. When a state is not determined, the operation the TL program of TL with the reasonable, relating are no longer satisfied. still operates but the hypotheses of the theorems extended-real-valued functions Lemma 13. Zf s is a state the proposition C$ and GTL, s b 4, is a specification temporally describes ((t;}, U) via +“%M. in a QSZM tree M which then for every fullpath, of x, then (x, c) qualitatively describes is determined with respect to x, starting at s, if (x, c) ({ ti}, U) if and only if (4, c) in Fig. 3)) the definition of the meaning of a specification of a formula from the definition of the semantics of the proposition temporally a splitting of a set of functions, qualitatively hypothesis because and describing of the meaning the definition a splitting of a set of functions. in the part of the proof involving this information, is needed if QSIM does not determine of a Proof. The result follows directly (given describing specification Notice the propositions the proof fails. that the determinedness t=inf 0 of a fullpath and tcinf We say that a QSIM structure G is determined with respect to a proposition if every state in G Theorem is determined with respect to the proposition. 14 relates the two ways of describing a set of reasonable, extended-real- valued functions and will be used in the proofs of the main theorems of this paper. B. Shults, B.J. KuipersIArtijicial Intelligence 92 (1997) 91-129 113 Theorem 14. Suppose with respect If the specification describes ({ ti} 3 U) via $n,~. x is a fullpath in a QSIM structure 2 which is determined to all of the propositions in Cp, a pelfect path formula, and kr~,x + @. (x, c) of x qualitatively describes ({ti}, U) then (@‘, c) temporally The proof is complex and not enlightening. Therefore, There are two reasons we did not simply make it has been put into Appendix C. of a temporal description. First, when we say that a formula describes a function, we want to be talking about a formula and a function without an intervening QSIM structure. Second, to light when one tries to prove Lemma 13 and Theorem 14 might be missed if the definition of temporally describes were given at such a high level. See Appendix A for an example of this. in the definition of determined which are brought the definition the subtleties involved theorem this 5.2. Main theorems for universal formulas This section contains the main results of this paper. As a consequence the user of the TL and QSIM systems may prove temporal statements systems as follows. First, the user constructs a QDE, C, and uses QSIM theorems, dynamical generate a closed @, is modeled by MTL. If it is, then the user has proved describes to any differential tr_ee, M. Then the solution the user may use TL to check if a universal equation which abstracts to C. that the perfection, @‘, of @ of the main about to formula, Theorem 15. Let U be a solution abstracts @ be a universal speci$cation some splitting c of the landmarks mentioned ({ti}, U) of U via *n,~. to the QDE, C. Suppose QSIM_generates in CTL*. Zf MEL, I k formula to the structural abstraction of any ODE which the closed tree M from (C, I). Let @>, then there is a (necessarily in @’ such that (@‘, c) temporally describes to the propositions Proof. Let @ be a universal path formula and M a closed QSIM behavior determined with respect Let U be as in the hypotheses._By there is a rooted fullpath yu in MTL and a specification, qualitatively M is determined with respect Theorem 14 to conclude is @>. that (ye, c), of 2~ such that (yU, c) ({ti}, U) of U. By Lemma 6,, MEL, yu + a’. Since in @, and Mr~,yu + a’, we use ({ti}, U) via r,+“,M. 0 to the propositions that (@‘, c) temporally describes the Guaranteed Coverage Theorem, we know in @. Suppose MEL, I k some splitting (necessarily tree which describes The following corollary follows from the proof of Theorem 15. Corollary 16. Let U be a solution abstracts @ be a universal rooted fullpath (x, c), of x consistent with the information derived by QSIM on the fullpath x, such that (@, c) temporally describes some splitting to the structural abstraction of any ODE which (C, I). Let is a to the QDE, C. Suppose QSIM_generates in CTL*. If M r~, I k the closed (necessarily x E X, and a specijcation, @>, then there tree M from formula ({ri>t f-4 of U via &J,M. 114 B. Shcdts, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 We include this corollary in the discussion because it provides more information the specification about the specification must be the specification describes the splitting of U. c of the landmarks mentioned in the formula. This tells us that of some fullpath in G which qualitatively The conclusion of the theorem states that the perfect path formula related to the formula describes universal as far as the conclusions which nested quantifiers QSIM structure of our dynamical theorems, system. i.e., the solutions to the equations. Quantifier nesting is irrelevant, of this theorem are concerned. While such as gaining are useful, these applications (see Section 6.2), there are situations in insight into some detail of the do not rely on the main point the underlying and the relation between the QSIM prediction Therefore, if the user is using TL only describes temporally formula of the form the solutions (necessarily 5.3. Numeric queries for the purpose of proving that a formula then he or she may as well enter a to an ODE, @) where @ is a perfect path formula. The previous discussion is particularly relevant It has been mentioned mation. landmarks may vary across behaviors. QSIM keeps track of numeric respect form of Theorem 15 desirable. to QSIM behaviors, not with respect that the numeric to queries infor- involving information which QSIM derives about information with to states. This fact makes a more specific numeric To check a proposition involving numeric information (such as in-range) fullpath the state being checked know which associated with a particular QSIM behavior retrieved with respect function in Section 3.1. z defined to that QSIM behavior. This problem is in. Furthermore, in M so that numeric we must that fullpath must be can be the information is solved by using The following corollary that the specification is simply a special case of Corollary is consistent with the numeric 16 in which we can on some information also specify behavior of the QSIM tree. 17. Let U be a solution to the structural abstraction to the QDE, C. Suppose Q.SIM generates Corollary of any ODE which abstracts the closed tree M from (C, I) using s:rong match and no cross-edge cycle detection. Let @ be a universal formula in CTL*. If x E Xr and a speci$ication, MEL, Z k (x, c) , of x consistent with the information derived by QSZM on the behavior z (x) , such that (@, C) temporally describes some splitting @> , then there is a rootedfullpath ({ ti}, I/) of U via flo,~, (necessarily The proof of this corollary is exactly is that since we specified the same as the proof of Theorem 15. The the the type of cycle detection, we know that z is defined and can use it to obtain numeric information. difference function 5.4. Completeness results Suppose the user has generated a QSIM ing CTL* perfect path formula @. We know tree, M, fro_” (C,I) that if MTL, I b and has an interest- a>, (necessarily B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 115 (necessarily the solution test the formula to any ODE which abstracts then pose M~L,Z k @> is false but some solution, U, to some ODE which abstracts user might temporal lution, U, to an ODE which abstracts because ous”, to c. In this section, we provide the user still cannot, the QSIM (possibly temporal structure some circumstances then to C, such i.e., a fullpath which does not describe any solution if there to know is described by @. But sup- to C the user wants is to C, such that @ describes U. The is modeled by the QSIM is a so- is so is “spuri- to any ODE which abstracts that @ describes fullpath which that there (1. This in general, conclude structure may have a rooted @>. If this formula under which the user may draw @p> where @ is a perfect positive conclusions path formula. from a formula of the form (possibly Suppose @ is a closed QSIM structure generated like to know whether there is any ODE, F, which abstracts We sometimes would whose solution QSIM the following completeness condition. is described by some given perfect path formula. tree must be closed, determined with respect to the propositions from a QDE and initial state (C, I). to C In order to do this, the in @ and satisfy Definition 18. We call a closed QSIM behavior fullpath x in fi input QDE and a splitting of the solution specification of x. there is an ODE with structural abstraction, F’, which abstracts tree, M, complete if for every rooted to the to F’ which is qualitatively described by some if every rooted fullpath in k describes some In other words, a closed tree is complete to C. to an ODE which abstracts solution One way to check for the completeness cally or by numeric corresponding Under simulation, to each fullpath that there is a reasonable, in the structure represented by the tree. of a tree is to prove, either mathemati- solution extended-real-valued these conditions, the user is able to draw sound conclusions about the solution to the QDE as in the scenario described so some (but not every) ODE which abstracts above. Theorem 19 details this result. Theorem 19. Suppose @ is a perfect path formula complete QSIM behavior determined with respect there is an ODE, F, whose structural abstraction, F’, has solution U and abstracts C and there is a specijcation in CTL*. Suppose M is a closed, (C, I) and initial state @>, then to temporally describes some splitting of U via tree generated to the propositions in @. If MTL,S + (possibly the QDE and of @ which from *lL.M. Proof. Let @ be a perfect path formula tree generated by the QDE and initial state (C, I). Suppose respect to the propositions that to show in @ and firs, s k (possibly there solution U and abstracts to C and describes a splitting of U via $u,,M. is a specification We want there @>. is an ODE, F, whose structural abstraction, F’, has (@, c) which temporally in CTL*, M a closed, complete QSIM behavior that M is determined with 116 B. Shults, B.J. KuiperdArtificial Intelligence 92 (1997) 91-129 We know from the semantics of CTL* that there is a fullpath x in 6, such that GTL, x + @. Because M is complete, we know that there is a set of reasonable, extended- real-valued to the structural abstraction splitting of U for some specification (@,c) functions U = {ui: 1 < i 6 ) n of some ODE which abstracts such that fJ is a solution to C and this fixed splitting of U via eU,~ by Theo- (x, c) qualitatively (x, c) of x. temporally describes describes a Therefore, rem 14. q 6. Applications of CTL* and QSIM replaces TL is the name of a CTL* model checker customized the experimental [ 31. Bhat, Cleaveland [ 15,171. The underlying model checking algorithm and Grumberg prove implementation lications and Grumberg same complexity algorithm has the added advantage of being “on-the-fly” possible exponentially Temporal to check some formulas time QSIM as the best known global algorithms reasoning may be useful any for the algorithm for use with QSIM. The current versions described and used in previous pub- is that of Bhat, Cleaveland that this algorithm has the for both CTL* and CTL. Their i.e., it is the entire rather than “global”; to halt with the correct answer without constructing large structure in CTL*. required human organs and disease, abstract and real physical is used. QSIM has been used systems, to simulate controllers, electrical circuits, population dynamics, chemical reactions, etc. [ 141. TL can be used to prove that a QSIM tree is closed with the following query: (TL R (necessarily (eventually (or (status (status (status quiescent) cycle) transition>>>>> where R is the root of the tree. (See Appendix A for an explanation other than quiescent.) the status proposition of arguments to TL automatically reports when an atomic proposition is checked on a state in which that proposition is not determined. 6. I. Examples the use of TL to ask and answer questions First, we demonstrate the undamped models: state SS; and the damped oscillator, whose behavior DS. oscillator, whose behavior tree (Fig. 2) is rooted tree (Fig. 4) is rooted about some simple in the initial in the state Example 20 ( Undamped oscillator). The simple spring conserves energy, so all behav- iors end in cycles, as shown by the behavior the closedness query would return T. The three behaviors differ according the amplitude of the oscillation that the solution landmark value, X*. The queries shown demonstrate to any ODE consistent with the QDE in Fig. 2 never becomes quiescent, tree in Fig. 2. Therefore, passes a predefined to whether B. Shults, B.J. Kuipers/Arti$cial intelligence 92 (1997) 91-129 I17 always reaches a cycle state, and necessarily has an infinite sequence of events crossing x = 0 in opposite directions. (Since the variable X can have only one qualitative value in a state, the last two formulas below are equivalent.) (TL SS (necessarily (always (not => T (status quiescent))))) (TL SS (necessarily (eventually (status cycle)))) => T (TL SS (necessarily (and (infinitely-often (infinitely-often (qval X (0 inc))) (qval X (0 dec)))))) => T (TL SS (necessarily (infinitely-often (before (qval X (0 dec)) (qval X (0 inc)))))) => T the simple solution is temporally Since reasonable which with each of the formulas above. spring to an ODE which abstracts described by a specification tree is closed and determined, we have shown that every in Fig. 2 has a splitting to the QDE of the perfect path formula associated The predicted tree is not complete, are not possible. We could branches tree complete. Simply produce a single behavior. Using complete removing rewrite the extraneous since behaviors the QDE landmark through different in various ways the to make in X would suffice. This would the strong match cycle criterion would also produce a that cycle tree in this case. The next example produces a complete tree. followed by “nodal” tree in Fig. 4 ends in a cycle representing loses energy. The first behavior a decreasing oscillation. The Example 21 (Damped oscillator). The damped spring in the behavior two are partial cycles second convergence to a quiescent cations which qualitatively Since weak match cycles were detected, with infinitely many the origin before “nodal” comes quiescent. TL determines simple spring behavior existential real trajectories of nonlinear this finite behavior state at the origin. These qualitative behaviors have specifi- instances of the QDE. describe tree represents a structure around fullpath which never be- the that each of the universal questions is false of the damped spring, but the corresponding (i.e., over- or critically-damped) a finite number of half-cycles fullpaths, oscillating and a single asked about convergence tree above statements are true. rooted rooted (TL DS (possibly (always (not (status quiescent))))) => T (TL DS (possibly (eventually (status cycle)))) => T 118 B. Shults, B.J. Kuipers/Arrificiul Intelligence 92 (1997) 91-129 i + g(i) + f(x) = 0 where f and g are in M+ (x1 (define-QDE DSpring-for-TL (quantity-spaces (x (v (a (ff (fs (minf 0 inf) (minf 0 inf) (minf 0 inf) (minf 0 inf) (minf 0 inf) "Position") "Velocity") "Acceleration") "Fluid friction") "Spring force")) (constraints ((d/dt x v)) ((d/dt v a)) ((m- X fs) (Cm- v ff) ((add fs ff a)))) (0 0) (0 0) (minf inf) (inf minf)) (minf inf) (inf minf)) (defun dspring-envisionment () (setq DS (make-new-state :from-qde DSpring-for-TL :sim (make-sim :no-new-landmarks ‘(x v a ff fs) :ignore-qdirs ‘(a> :cycle-detection :veak :state-limit 200) :assert-values '((x (0 nil)) (v ((0 inf) nil))))) (qsim DS) (qsim-display DS)) Position Accellsration The first behavior between the second The second behavior in the tree ends in a cycle state which matches two states is shown. is the direction from which the root. The difference they approach quiescence. Fig. 4. QSIM input and output for damped spring. B. Shults, B.J. Kuipers/Artifcial Intelligence 92 (1997) 91-129 119 (TL DS (possibly (eventually (status quiescent)))) => T (TL DS (possibly (and (infinitely-often (infinitely-often (qval x (0 inc))) (qval x (0 dec)))))) => T (TL DS (possibly (infinitely-often (before (qval x (0 dec)) (qval x (0 inc)))))) => T (TL DS (necessarily (always (possibly (eventually (status quiescent)))))) => T (TL DS (necessarily (always (implies (possibly (not (status (always (not quiescent)) (status quiescent)))))))) => T followed by “nodal” behavior close The damped spring structure is complete, since there are nonlinear choices for the the in the model functions two monotonic origin, are linear, of course, Therefore, we have proved of functions which is a solution and corresponding is temporally described to the CTL* formula. that give “spiral to the origin. in” behavior away from If both monotonic functions are pure “nodal” and pure “spiral in” behavior. there is a set to the QDE given in Fig. 4 of the perfect path formula to an ODE which abstracts via $v,,M by a specification that for each of the first five formulas above, the only possibilities that (a) The last two formulas say that, no matter how many oscillations you’ve seen so far, to the last are not universal, Theorem 15 gives no information. These two formulas features of the QSIM structure, M, and not for it is always possible a quiescent two formulas are used for the purpose of discovering proving properties of dynamical the behavior could go on oscillating terminate with nodal convergence the behavior could state, and (b) forever. Since systems. Example 22 (A quantitative der to show the use of quantitative for time-critical that TL provides system given in Section 3.1. example). Now we reconsider information systems. Refer the billiards example in or- in QSIM QDEs and the resulting proofs of the to Fig. 1 and the description With only qualitative information tree with 55 different behaviors, closed can collide, pass each other’s positions, information, directions), QSIM predicts a single behavior seconds. With the information specifying identical representing or reach about the balls’ positions and speeds, QSIM gives a in which balls the different orders infinity. With complete quantitative (in the indicated in which balls B and C collide at t = 0.5 speeds of 2 position units per second provided, QSIM produces a tree with three behaviors. 120 B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 The queries given below were checked on the tree with the information described in Section 5.3-A some constant within and B have velocity the interval [ -3.5, - 1.51 in units/second. -2 units/second, and the velocity, Cxp, of C is Because the answers the predicted to each of the following queries. tree of behaviors is complete, we can draw conclusions from (TL SS (necessarily (always (implies (and (in-range => T (TL SS (possibly (in-range (in-range (.5 time .5)))))) dxBC (0 0)) dyBC (0 0))) (eventually (and (in-range (in-range dxBC (0 0)) dyBC (0 0)) (in-range time (.5 .5)))))) => T (TL SS (necessarily (always (not (and => T (in-range (in-range dxAC (0 0)) dyAC (0 0))))))) The first TL query proves that in the solution to any ODE which abstracts then it happens at time 0.5. The second query proves if B and C collide 19) that there is a solution do collide at time 0.5. The third query shows that A and C cannot collide consistent with the given QDE. This is so because B blocks C in the behavior C might hit A. to an ODE consistent with the given QDE in which B and C in any ODE in which to the QDE (by Theorem 6.2. TL as a debugging tool for QSIM models statement to real behaviors. Therefore, in general, a QSIM behavior Because QSIM is not complete those beginning with the quantifier possibly), which do not correspond (e.g. ments the corresponding tool such as TL to be used to find such paths. If the QSIM user knows sequence of events cannot occur sequence of events occurs have TL print the path on which occurs. Also, as in the damped spring example, nested quantifiers insight tree may contain paths the truth of certain CTL* state- the truth of for a that a certain in a real behavior, he can use TL to find out if that tree. The user can the spurious behavior can be used to gain in an actual behavior. This provides an opportunity structures of the represented QSIM structure. in any of the paths in the QSIM behavior information which will isolate into some interesting do not imply The program can be and has been used on terminals which do not support the graphical the user can learn everything a few carefully display of QSIM behavior he or she may need to know about a QSIM behavior chosen CTL* statements. trees. In these circumstances, tree by evaluating B. Shults, B.J. Kuipers/Ar@cial Intelligence 92 (1997) 91-129 121 6.3. Proving properties of controllers controller controller is a nonlinear of local control laws appropriate Kuipers and Astriim laws. A heterogeneous [ 151 have used TL and QSIM to different, possibly overlapping, to prove properties of heteroge- created by the neous control composition operat- ing regions. Such a controller can be created in the presence of incomplete knowledge of regions, or even the control the structure of the system, the boundaries of the operating in the presence of action to take. A heterogeneous equation and using incomplete knowledge, by representing the set of possible behaviors of the system. By express- qualitative in CTL *, the validity of the guarantee can be ing the desired guarantee [ 151 automatically demonstrate first for a simple reactor. chemical and prove certain useful properties, for a highly nonlinear the design of heterogeneous level controller the set of possible behaviors. Kuipers and AstrGm it as a qualitative differential law can be analyzed, tank, and second checked against as a statement for a water controllers, to predict simulation control even Gazi and Ungar also use TL to prove properties of models of chemical reaction controllers [ 9, lo]. to the behavior information There are three programs-Q2 of numeric bounds on landmark to take advantage numeric plied bounding applications we use the propositional to include numerical time-critical to prove knowledge. [ 161, 43 extend QSIM information, and to derive values and time points. The program TL is easily ap- [ 21 and NSIM [ 121 -which to prune spurious behaviors trees output by these QSIM extensions which use quantitative and produce quantitative bounds on the predictions. part of the language with the numeric propositions For these information in the state propositions. These propositions properties of models of a system, even in the face of incomplete allow TL 6.4. TeQSIM: temporal constraints on simulation In this paper, we use temporal logic formulas to check the interaction between qualitative as an input. TeQSIM simulation (pronounced the output of QSIM. Bra- and model agenda, allowing logic formula. This makes portion of the state space, which simulation tek’sim) only it pos- is use- It also allows the results of obser- temporally that might not otherwise be tractable. inputs, discontinuous changes, conditions. One can use temporal to focus [4-61 extend logic statements to treat temporal the given on a particular that can satisfy simulation jnik and Clancy checking interleaves model checking with QSIM’s simulation of branches sible ful for large, complex models exogenous to specify the user vations, and various other guided example, constraints lowed by unguided rive a performance a realistic control ment. on an exogenous simulation guarantee. Brajnik types of boundary and planning of a model simulation from to explore critical portions of a large state space for a plan variable the new constraints for fol- to de- TeQSIM on demonstrate the domain of water supply manage- required incorporating to discover, to succeed, and Clancy problem [5,6] 122 B. Shutts, B.J. Kuipers/Artijicial Intelligence 92 (1997) 91-129 7. Relation to other work The results described in this paper are related to other work done in the fields of temporal logic model checking and simulation and control. Probably to computer processes the most work in temporal cations of CTL and CTL* More closely state in CTL against logic controller grammable process control. TL makes to continuous-time logic model checking has been done such as parallel computing in appli- [ 8,181. related work has been done by Moon et al. [ 191 who checked statements from pro- ladder diagrams. Their specific application was to chemical logic (CTL*) it possible control systems, and indeed to apply a more complex systems generated in discrete-time to dynamical transition temporal graphs Alur and Henzinger properties of discrete-event expressive language, express as CTL*. However, therefore [ 11 use a logic called metric temporal time systems. Metric it integrates it is easy to express some statements in CTL*. temporal logic systems logic in general. (MTL) to check is, strictly speaking, not as level of the to at a higher in MTL which are difficult information Jahanian real-time [ II] modeled systems in Real Time Logic were checked against a Modechart model. Real Time Logic undecidable Model checking CTL* for expressing statements to be decidable. suited systems, whereas some such is decidable statements which are useful in general but certain classes of statements [8]. However, Real Time Logic is especially language. Statements to make in CTL*. in the Modechart in time-critical are shown is are more difficult Other systems exist which allow temporal logic sentences to be checked against a structure continuous representing dynamical discrete event systems. TL makes a formal connection systems and time-critical logic model checking. temporal between 8. Conclusion TL implements a method for using modal and physical to prove temporal system even with an incomplete, formulas logic properties of the behavior of a continuous qualitative or semi-quantitative description. terms of a set of qualitative constraints, theorems about the behavior of any reasonable, with those constraints. This applies even to systems with time-critical provides a meaningful This link between If the user can describe a physical system in then by using QSIM and TL, he or she can prove function consistent requirements. This interpretation and simulation-based for the phrase, “proof by simulation”. extended-real-valued logic-based and sound inference methods will support a value for the design variety of hybrid and validation of continuous reasoning techniques that could be of substantial and piecewise-continuous systems. Appendix A. Extensions to the propositional language The implementation, TL, of the language we describe in this appendix. In most cases, includes other propositions, the added propositions some of which to are useful only B. Shulrs. B.J. Kuipers/Art@cial Intelligence 92 (1997) 91-129 123 special to the language. of the form the predicted QSIM structure, and not to prove theorems about the underlying systems. Some of them can be included in the proof of the theorems but this issues treatment. This appendix discusses describe dynamical inclusion would involved require distracting in adding new propositions First we mention function. This returns single argument. This is used mainly a state. Note when we talk about complexity, extensions and convenience The next proposition we mention that the proposition proposition to the language. The syntax (funcall is a lisp the “proposition” the value returned by the lisp function called with the state as its about as part of the logic It is added for user cannot be considered theorems. for side effects such as printing soundness or the main information f> where funcall f and should be used with care. the major illustrates is: issues involved in adding a (contains-range u (ni n2) > where u is a variable name in the state s and nt and n2 are extended proposition the numeric is true when current behavior has been determined range, to lie, contains the interval in which real numbers. This the number named by u in the [ n1, n2] as a subset. If the theorems in the paper are going to be applied to a new proposition, then we for a specification it in the proof of Lemma 13 in such a way that the induction must be able to include step in the proof of Theorem 14 can be performed. Therefore, we must define what it temporally a splitting of a set means of reasonable, for a state to be determined with respect to the proposition. Once Lemma 13 and Theorem 14 are proved for the proposition, functions and determine what is required the rest of the theorems will follow. extended-real-valued of this proposition to describe We say that a specification of the proposition (contains-range fi(ui) (nl n2>> temporally where {Dk} is the partition of the domain corresponding ({ ti}, {ui: 1 < i < n}) via 1+9 if and only describes to the splitting. if [nl,n2] c ui(&) The reader might want to try to prove Lemma 13 and Theorem 14 at this point to be determined with respect In fact, Theorem 14 is false without such a definition. Since in order to see the problem which now arises. Without a strict definition of what it means the proof does not for a state the set U of go through. functions contains a set of functions modeled by x but the path formula may not describe [ nl , n2] specified in the proposition that a fullpath x describes be the value of the specific function Ui. I.e., it is possible is fixed, we cannot prove that the subrange and a path formula containing to this new proposition, the set of functions. the contains-range proposition the following Consider function has real-valued information and numeric 0 a b (minf space fall within the interval to fall in the interval path (Fig. A.1)) at time as a counterexample. solutions U(X) = rx2 for r E [ l/2,2] provided by the user. Further, suppose that the variable V in the QDE due to the constraints that V has the quantity Suppose inf > where the real value named by the landmark a is known to and the real value named by the landmark b is known in a certain t E (0,l) we in Fig. A.l. Suppose (qval V (0 std) 1, for time [ l/2,2] [2,8] on the behavior t = 0 we have that, 124 B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 - inf T -b 12.81 -a [l/2,21 -0 10.01 - minf 2 I T 1 I 0 0 I Fig. A. I. Qualitative behavior with quantitative landmark bounds a) inc)), (qval V ((0 have t E ( I, 2) we have (qval V ( (a b) The following are not real solutions to the QDE: formulas will be true on this fullpath yet they describe at time t = 1 we have (qval V (a inc)) and at t = 2 we have (qval inc) ), for time inc) ) , functions which V (b (eventually (and (contains-range (strong-next V (l/2 (strong-next i/2)) (contains-range V (8 8)))))) (eventually (and (contains-range (strong-next V (2 2)) (strong-next (contains-range V (2 2)))))) These path formulas describe an actual solution information which is spurious. and the contains-range real-valued functions which cut across the ranges to the QDE could not do. In this case, the use of nontrivial in a way range to describe a function proposition, can combine In order for Lemma 13 and Theorem 14 to hold in general, for a QSIM state to be determined with respect to (contains-range range associated with a landmark of the variable u in the state must be trivial (i.e., contain a single point). to the TL user. such propositions u (nt n2) ), the numeric such as intersects-range Other propositions might be useful required theorems to be used more for gaining about continuous However, because of the strict condition are intended proving that there the possible values associated with a landmark contains-range continuous systems but they become equivalent is such complete information for determinedness, about information systems. The exception, of course, that programs to a single the QSIM prediction than is in the case such as Q2 are able to narrow In this case, theorems about real number. and other similar propositions may be used to prove Finally, we mention the status proposition to the in-range proposition. cycle}. can The proposition will be take any of the arguments true the named property. A state has the state is a and in stable equilibrium. A transition transition, the state to have that unstable, stable, {quiescent, when QSIM has determined stable terminal of its range. A cycle property if it is quiescent state in a path in which state is a state which matches a previously generated the value of one of the variables crosses a boundary state and B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 125 are already represented in the tree. Other than quiescent, stable these properties have more to do with the QSIM interface than with the functions being described. That is the reason we did not include a discussion in the discussion of the logic. We define a QSIM state to be determined with respect to the propositions (status and (status unstable) if it is not quiescent or if it has been determined is because QSIM may be incorrect when it determines a quiescent to state whose successors and unstable underlying of these properties stable) be stable. This to be unstable. Additional propositional about QSIM states. For example, in order states indefinitely information “chatter-sink” may chatter sition chatter-sink-p state is a chatter-sink lated to the domain of real-valued draw information the newest to express more succinctly operators can also be added to allow the user to gain other release of QSIM produces the fact that certain variables or, at some point, stop chattering. So, we could add the propo- such that it is true of a state if and only if the to the language state. In this case, the proposition has no real meaning when trans- to functions. Therefore, once again, it is used mainly about QSIM’s output. Appendix B. Refined definition of a reasonable function In this appendix, we use R to denote The traditional definition of a reasonable function the reals and R* to denote such as sine on [a, co) and tangent on [--r/2, purposes. Giving a satisfactory definition of reasonable let functions the other hand, we do not want simulated by QSIM. Finding simulate and excluding further every reasonable it to be inclusive to any ODE which abstracts functions. to cover interesting a balance between to allow functions solution enough functions which make simulation investigation. including [ 141 is too restrictive the extended reals. for our current is not simple. We would like to to be reasonable. On to be reasonable which cannot be functions which QSIM does is an area open to impossible r/2] simulates to the input. However, we want The definition must be such that the QSIM algorithm The following questions come up in this context. Should we allow infinite derivatives in IX? Should we allow the limits of f’ not to exist at *co? Should we allow the definition in R? Is there a concise way of expressing at points infinitely many critical points which gives us the best of both worlds? The definition we offer here is adequate than the traditional one for the purposes of this paper. This defini- [ 141, but more inclusive definitions are tion is more possible. inclusive in R* with supremum function over A if on A, Definition 23. Suppose A is an interval A -+ JR* is a reasonable f is continuous f is continuously f has only finitely many critical points if a E R then lim,,,+ in I%*. (i) (ii) (iii) (iv) differentiable f’(t) b and infimum a. f : f’, on (a, b) with derivative in any bounded exists in lR* and if b E R then lim,,b- interval of Iw n A and f’(t) exists 126 B. Shults, B.J. Kuipen/Art@ial InteNigence 92 (1997) 91-129 is reasonable sine is reasonable on any interval [--r/2, +7~/2], over (0, a) for 0 < a < 00. over [a, 00) for a E IR, and but sin( l/x) According but not over x sin( 1,‘~) are not reasonable to this definition, [a, 001. Tangent Appendix C. Proofs Proof of Lemma 5. We want to show that if @ is a universal in M such that M, x b @, then M, x k @‘. formula and x is a fullpath Without of the lemma is by induction on the length of @. loss of generality, we assume that @ is in positive normal form. The proof Since atomic propositions are perfect, Q, = CD’ and hence M,x k @ if and only if M, x b @‘. This justifies the base case. Suppose that every universal formula of length less than k makes the theorem true and that CD has length k. If @ = (necessarily p), M, y + p. Therefore, by induction, M, y k p’. In particular, M, x /= p’ and hence M, x + @‘. then for every fullpath y starting at the first state in X, for every fullpath y starting at the first state in X, If@ = (and pl'. .p,,>, then M, x k pi for each i, 1 < i < n. We need to show that M, x b pi for each i. This follows by induction, Thus, M, x k Cp’. . p,,), then M, s + pi for some i, 1 < i 6 n. We need to show that i. This follows by induction. Therefore, M, x k @‘. then Sp is an atomic proposition since @ is in positive normal form p’ 4’). then p q), p q), then there is a nonnegative integer that M,x’ b q and for every nonnegative smallest) Therefore, M, xi /= q’ and for every nonnegative Therefore, M, x + (until i < A(x) integer j < (we choose the i, M,xj k p. integer j < i, M, xi k p’ by induction. If @ = (releases for every nonnegative integer i < A(x) such that M, xi p q there is a nonnegative integer j < i such that M, xi b p. First suppose that for every nonnegative integer i < A(X) , M, xi k q. Then M, xi k q’ for every nonnegative integer i < A(x) by induction. Therefore, M, n b @‘. i such i < A(x) Now suppose such that M, x p q. We integer integer. Thus, there is a nonnegative integer j we also have M,xi + p’ by induction. that there is a nonnegative select i to be the smallest such nonnegative k p. For all such j < that M,d integer k < i, we have M, xk j= q by the choice of i and so For every nonnegative M, xk + q’ by induction. Therefore, we get that for every nonnegative such that M, xl k q’ there is a nonnegative to say, M, x /= (releases If Q, = (next p), then if A(x) > 1 then M, x’ b p and we are done by induction. j < I such that M, xj k p’. That is integer 1 < A(x) p’ q’). integer If A(x) = 1 then M, x b (next p’) as well. If di = (strong-next p>, then A(x) > 1 and M,x’ /= p so we are done by induction. Cl If @ = (or pi M, x + p( for some If @ = (not p), and so p = p’. If @ = (until such B. Shults, B.J. Kuipers/ArtiJiicial Intelligence 92 (1997) 91-129 127 Proof of Theorem 14. Suppose x is a fullpath termined with to all of the propositions ~TL, x b @. If the specification show that (46, c) temporally describes (x, c) of x qualitatively ({ti}, U) via &JM. respect in a QSIM structure 6 which in @J, a perfect path formula, is de- and ({ti}, U) then we describes Without x is a fullpath propositions will apply This case follows Our induction loss of generality, we assume that @ is in positive normal form. Suppose in a QSIM structure M which is determined with respect in @, a perfect path formula in positive normal that to all of the form, and %r~, x /= @. We induction on the length, k, of @J. In the base case, @ is an atomic proposition. from Lemma 13. hypothesis firs, y /= W where W is a perfect path formula than k and M is determined with respect to every proposition describes a splitting (and pt ({Yi}, V) then . .p,,), temporally describes If @ = (P,c) says that for any fullpath y in a QSIM structure such that in positive normal less in q, form of length if (y, c) qualitatively describes vta UM or each j, 1 < j < m, then Mr~,x b p,i for each j, 1 < j < m. This then we must sho_w that temporally if (pi, c) ({ri}, V) via $“,M. (Iti)> V follows by the induction hypothesis. ti , f ({ti}, U) this If CD = (or pt . .p,,,), then we must SLOW that if (pj, c) temporally describes temporally If @ = (until If @ = (not (@J, c) temporally the? we must show that if (p, c) does not p q) , then we must show that if (x, c) qualitatively describes via r+4~,~ for some j, 1 < j 6 m, then A4 r~, x /= pi for some j, 1 < j 6 m. Again, follows by induction. p>, describe ({ti}, U) via &J,M then MEL, x k p. Since, by the definition of positive normal form, p this follows from the induction hypothesis and Lemma 13. must be an atomic proposition, ({ti}, U), we ({t;}, U) via @“,,M. By the semantics of until xh b q and for every such that iii,, ({ti}, U), (x, c) qualitatively ({ti: d,, < i}, UI,,+) by Lemma 10. Thus (q, c) temporally integer (p,c) temporally then know that there is a nonnegative nonnegative integer (x”, c) q ua I a ive y describes 1 < h, (x”,c) qualitatively temporally describes i}, UI,,+) via $“,M by induction. For every nonnegative ({ti: dl < i}, LIIl+) via @“,M by induction. So (@,c) I’t t’ 1 d escribes ({ti: dh < i}, UIl+) by Lemma 10. Thus I < h, Mr~,.x’ k p. Since integer h < A(x) ({ti: dl 6 describes describes describes describes ({ ti} 9 U) via $u,M. p q), If @ = (releases integer 1 < h such (@, c) temporally that for every nonnegative ({ti}, C/) then know a nonnegative for every nonnegative ({t;: 41 ,< 97 U/1+) f or every nonnegative (q, c) temporally describes h < ii(x) by induction then we must show that if (x,c) qualitatively describes describes integer_h < cl(x) that M r~, x1 + p. First suppose ({ti}, U) via $U,,M. Smce %r~, x b @ we is that MTL, xh b 4 that MEL, xh k q there such integer h < A(x). We know that (x”, c) qualitatively integer h < n(x) describes by Lemma 10. Therefore, integer ({ti: dh < i}, UI,,+) via @II,,+, for every nonnegative and so (x, c) qualitatively describes ({ti}, U). Now suppose that there is a nonnegative integer h < n(x) such h. There and it is the smallest p. For every nonnegative describes by induction. For one of these j, MEL, xi /= p and hence ({ti: d,i 6 i}$ u(,+) via $U,M by induction. So we have that if there is a nonnegative j < h, G r~, xi ({ti: d,i 6 i}, U/j+), (4, c)_temporally /= q and since describes integer ({ri: d,i < i}, Ul,i+) via &J,M (p, c) temporally describes is a nonnegative (.I$, c) qualitatively p q integer 1 < h such that GijTL, x1 /= such that kr~,x” 128 B. Shults, B.J. Kuipers/Artificial Intelligence 92 (1997) 91-129 such integer h < A(x) that (p, c) temporally describes integer 1 < j, (4, c) temporally describes temporally describes ({ ti}, U) via &J,,M. that % rL, xh F 4, there is a nonnegative integer j < h such ({ti: dj < i}, Uj,i+) via #,&M and for every nonnegative ({ti: dr < i), UI(l+) via +U,M. Therefore, (a, c) If @ = (next p) , then we must show that if 0 = 25 or (p, c) temporally then A(x) = 1 or (x1, c) qualitatively describes ({ti: di < dl 6 i}, UI ,+). This follows by induction i},UIi+) via $/(I# If @ = (strong-next and the use of Lemma 10. p) , then we must show that if 0 < 23 and (p, c) temporally de- ({ti: dl < i}, UI( I+). Once again, this follows from the induction hypothesis and ({ti: dl < i}, U\ I+) via +U,M then A(x) > 1 and (xl, c) qualitatively describes ({ti: describes scribes Lemma 10. 0 Acknowledgements QSIM and TL are available . edu in the di- These and other results of the Qualitative Reasoning Group are f tp at f tp. cs . utexas for anonymous /pub/qsim. rectory accessible by World-Wide Web via http : //www . cs . utexas . edu/users/qr. Inc. (grant (EPRI) Institute, in part by IRI-9216584) the National Science Foundation apparatus, method, or process disclosed the University (a) makes any warranty, This report was prepared by the University of Texas at Austin as an account of work and by (grant RP8030-21). Neither EPRI, of Texas at Austin, nor any person acting on their to the use of any express or implied, with respect in this report or that such use may to the apparatus, method, sponsored the Electric Power Research members of EPRI, behalf: information, not infringe privately owned use of, or for damages or process disclosed We are grateful to Rance Cleaveland in writing a paper which such as qualitative to readers from Markus Kaltenbach, Richard Trefler, Dan Clancy, Bert Kay, Giorgio Brajnik, Michael Hofbaur, and two anonymous in two somewhat disjoint disciplines, logic, is to use language which is comfortable for helpful comments and temporal in both fields. We are grateful resulting in this report. to Bhat, Grumberg for answering our questions about their algorithm. A difficult rights; or (b) assumes any liabilities with respect from the use of, any information, for their excellent article [ 31 and task and suggestions and Cleaveland for audiences is intended reviewers. reasoning References [ I ] R. Alur and T. Henzinger, Real-time logics: complexity and expressiveness, Inform. Comput. 104 ( 1993) 35-71. 121 D. Berleant and B.J. Kuipers, Combined qualitative and numerical and J? Struss, eds., Recenr Advances in Qualitafive Physics simulation with 43, (MIT Press, Cambridge, MA, 1992). in: 9. Faltings [ 31 G. Bhat, R. Cleaveland and 0. Grumberg, Efficient on-the-fly model checking for CTL’ , in: Proceedings Conference on Logic in Computer Science (WCS-95) ( 1995 ) [ 41 G. Bmjnik and D.J. Clancy, Guiding and refining simulation using temponl logic, in: Proceedings Third International Workshop on Temporal Representation and Reasoning ( 1996). B. Shults. B.J. Kuipers/Ariificial Intelligence 92 (1997) 91-129 129 15 1 G. Brajnik and D.J. Clancy, Temporal constraints on trajectories in: Proceedings Tenth International Workshop on Qualitative Reasoning About Physical Systems, Fallen Leaf Lake, CA (1996). in qualitative simulation, 16 1 G. Brajnik and D.J. Clancy, Temporal constraints on trajectories in qualitative simulation, in: Proceedings AAAI-96, Portland, OR ( 1996). 17 I E.M. Clarke, E.A. Emerson and AI? Sistla, Automatic verification of finite-state concurrent systems using temporal logic specifications, ACM Trans. Program. Lang. Syst. 8 ( 1986) 244-263. [ 8 ] E.A. Emerson, Temporal and modal Amsterdam, Science (North-Holland, logic, in: J. van Leeuwen, ed., Handbook of Theoretical Computer 1990) 995-1072. [ 9 I E. Gazi, L.H. Ungar and B.J. Kuipers, Temporal to controller verification, an in: R. Shoureshi, ed., Intelligent Control (IEEE Press, New York, for summarizing Monte-Carlo simulation: logic application 1996). 1 10 I E. Gazi, L.H. Ungar, W.D. Seider and B.J. Kuipers, Automatic analysis of Monte-Carlo simulations of dynamic chemical plants, in: Proceedings European Symposium on Computer Aided Process Engineering (ESCAPE-6) 1 I1 1 E Jahanian properties Proceedings Real-time Systems Symposium, Huntsville, AL ( 1988). for verifying (Pergamon, Oxford, 1996). and D.A. Stewart, A method of Modechart specifications, in: [ 12 1 H. Kay and B.J. Kuipers, Numerical behavior envelopes for qualitative models, in: Proceedings AAAI-93, Washington, DC (1993) 606-613. [ 131 B.J. Kuipers, Qualitative [ 14 I B.J. Kuipers, Qualitative Reasoning: Modeling and Simulafion with Incomplete Knowledge (MIT Press, simulation, Artif: Intell. 29 ( 1986) 289-338. Cambridge, MA, 1994). 1 I5 ] B.J. Kuipers and K. Astrom, The composition and validation of heterogeneous control laws, Automatica 30 (1994) 233-249. 1 161 B.J. Kuipers and D. Berleant, Using incomplete quantitative knowledge in qualitative reasoning, in: Proceedings AAAI-88, St. Paul, MN ( 1988). I 17 I B.J. Kuipers and B. Shults, Reasoning in: J. Doyle, E. Sandewall and in logic about continuous P. Torasso, eds., Proceedings Fourth International Conference on Principles of Knowledge Representation and Reasoning, Bonn ( 1994) systems, [ 18 1 0. Lichtenstein specifications, Lungunges(1984)97-107. and A. Pnueli, Checking linear finite state concurrent in: Proceedings Twelfth Annual ACM Symposium on Principles of Programming programs satisfy there that I 191 1. Moon, G.J. Powers, J.R. Burch and E.M. Clarke, Automatic verification of sequential control systems using temporal logic, AIChE J. 38 ( 1992) 67-75. of nonmonotonic I20 I M. Rayner, On the applicability Intell. 49 ( 199 1) 345-360. logic to formal reasoning in continuous time, Artif 