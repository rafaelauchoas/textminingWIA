Artificial Intelligence 268 (2019) 96–114Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintComputing a small agreeable set of indivisible items ✩Pasin Manurangsi a, Warut Suksompong ba Department of Electrical Engineering and Computer Sciences, University of California, Berkeley, USAb Department of Computer Science, University of Oxford, UKa r t i c l e i n f oa b s t r a c tArticle history:Received 10 March 2018Received in revised form 12 August 2018Accepted 13 October 2018Available online 18 December 2018Keywords:AgreeabilityIndivisible itemsResource allocationSocial choiceWe study the problem of assigning a small subset of indivisible items to a group of agents so that the subset is agreeable to all agents, meaning that all agents value the subset as least as much as its complement. For an arbitrary number of agents and items, we derive a tight worst-case bound on the number of items that may need to be included in such a set. We then present polynomial-time algorithms that find an agreeable set whose size matches the worst-case bound when there are two or three agents. We also show that finding small agreeable sets is possible even when we only have access to the agents’ preferences on single items. Furthermore, we investigate the problem of efficiently computing an agreeable set whose size approximates the size of the smallest agreeable set for any given instance. We consider two well-known models for representing the preferences of the agents—the value oracle model and additive utilities—and establish tight bounds on the approximation ratio that can be obtained by algorithms running in polynomial time in each of these models.© 2018 Elsevier B.V. All rights reserved.1. IntroductionA typical resource allocation problem involves dividing a set of resources among interested agents. We are often con-cerned with the efficiency of the allocation, e.g., achieving high social welfare or ensuring that no other allocation would make every agent better off than the current allocation. Another important issue is the fairness of the allocation. For exam-ple, we might want the resulting allocation to be envy-free, meaning that every agent regards her bundle as the best among all bundles in the allocation [23,55], or proportional, meaning that every agent obtains at least her proportionally fair share [51]. A common feature of such problems is that one agent’s gain is another agent’s loss: The setting inherently puts the agents in conflict with one another, and our task is to try to resolve this conflict as best we can according to our objectives. Resource allocation problems constitute a major area of study in artificial intelligence.We study in this work a variant of the resource allocation problem where instead of the agents being pitted against one another, they belong to one and the same group. We will collectively allocate a subset of items to this group; our goal is to make this subset “agreeable” to all agents. Agreeability can be thought of as a minimal desirability condition: While an agent may be able to find other subsets of items that she personally prefers, the current subset is still acceptable for her, and she can agree with its allocation to the group. In other words, if the agreeability condition is not met for some This paper unifies and expands earlier versions that appeared in Proceedings of the 25th International Joint Conference on Artificial Intelligence [52]✩and Proceedings of the 26th International Joint Conference on Artificial Intelligence [40]. In particular, Theorems 5, 10, and 11 are new to this version, and Theorems 4, 6, and 7 improve corresponding results in the earlier versions. These additions lead to asymptotically tight bounds in Sections 3.3 and 4.1.E-mail address: warut.suksompong@cs.ox.ac.uk (W. Suksompong).https://doi.org/10.1016/j.artint.2018.10.0010004-3702/© 2018 Elsevier B.V. All rights reserved.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–11497Table 1Summary of the upper bounds on the size of the smallest agreeable set, presented in Section 3.n = 2n ≥ 3Full preferences(cid:2) m2min(cid:3) + 1 (Theorem 1)(cid:3)(cid:4)(cid:2)(cid:5)m+n2, m(Theorem 1)Ordinal preferences(cid:2)(cid:3)+ 1 (Theorem 2)m2+ (cid:2)(log m) for constant n (Theorems 4, 5)m2agent, then the agent will be unsatisfied and tempted to leave the group. We consider a notion of agreeability based on the fairness notion of envy-freeness: a subset of items is said to be agreeable to an agent if the agent likes it at least as much as the complement set. Agreeability, or minor variants thereof, has been considered in the context of fair division, where each group consists of a single agent [7,13,16]. For example, Brams et al. [16] calls the property “worth at least 50 percent”. An appealing aspect of agreeability is that it can be defined for arbitrary ordinal preferences, which constitutes a considerably larger class of preferences than those represented by additive cardinal utility functions [5,15,17,39,53]. Indeed, for most of this work we only assume that the agents’ preferences are monotonic, meaning that an agent always values a set of items at least as much as any of its subsets. Since in a large majority of resource allocation settings agents can simply ignore items that yield negative value to them, the monotonicity assumption is usually made without loss of generality.As applications of our agreeability notion, one could imagine that the agents are going together on a trip and agreeing on the set of items to put in a shared luggage, or choosing a subset of items as prizes from a team competition that they won together. Without further constraints, the problem described so far would be trivial, since we could simply allocate the entire set of items to the agents. We therefore impose a constraint that the allocated subset should be as small as possible. This constraint on size is reasonable in a variety of settings, including in the two given examples. Indeed, in the first example a luggage has limited space, and in the second example the organizers may want some items to be left as prizes for the losing teams, perhaps so that the allocation seems fair to an outsider. Similar cardinality constraints have been considered in the context of fair division [11]. In the example of agents going together on a trip, a subset of items that they take is agreeable if they like it no less than the complement subset of items left at home. Put differently, based on the set of items chosen, every agent would rather go on the trip than stay at home. Similarly, for agents taking items as prizes from a team competition, if the competition is between two teams and a subset of items is not agreeable to some agent in the winning team, we will have an undesirable situation where the agent envies the losing team that takes the remaining items.While our study is based on the framework of resource allocation, agreeability is also relevant in other areas of social choice theory and artificial intelligence. In particular, one could think of choosing an agreeable set of items as an election of a committee from a set of candidates, where the committee size is unspecified but perhaps should be minimized. The theory of committee elections provides a number of specific ways to instantiate the notion of agreeability. For example, if one uses approval elections, where every agent either approves or disapproves each candidate and approves a committee if it contains at least one of her approved candidates, an agreeable committee according to our notion corresponds to one where every agent has an approved candidate in the committee. In general, the preferences of the agents for various committees can be quite complex, and several variants of committee elections have been investigated in the literature [6,50]. We see our work as a starting point that deals with a particularly simple and natural agreeability notion, and our hope is that this work will lay a foundation for studying different notions that may be appropriate for other applications.1.1. Our resultsIn this work, we initiate the study of agreeability in resource allocation. First, in Section 3, we establish upper bounds on the size of the smallest agreeable set, both when the algorithm has access to the agents’ full preferences and when the algorithm only has access to the agents’ preferences on single items. In addition, we present algorithms that compute agree-able sets whose size matches the worst-case bounds under both assumptions. Our results in this section are summarized in Table 1.In Section 3.1, we derive a tight upper bound on the number of items that may need to be included in an agreeable set, for any number of agents and items. Remarkably, even though agents may have vastly differing and perhaps conflicting preferences, the number of extra items that we might need to choose in order to accommodate all of them is surprisingly small, i.e., half an item per additional agent (Theorem 1). Our result holds under a very weak assumption that preferences are monotonic, meaning that an agent cannot be worse off whenever an item is added to her set. Interestingly, to establish this result we make use of Kneser’s conjecture, a combinatorial result whose proof by Lovász [37] gave rise to the field of topological combinatorics.In Section 3.2, we turn our attention to the question of whether we can efficiently compute an agreeable set whose size matches the worst-case bound given in Section 3.1. We answer the question in the affirmative for the cases of two and three agents. To this end, we make the assumption that preferences are responsive, meaning that an agent cannot be worse off when an item is added to her set or replaced by another item that she weakly prefers to the original item. While responsiveness is stronger than monotonicity, it is still a generalization of additivity, a very common assumption on preferences in resource allocation problems. We present polynomial-time algorithms that compute an agreeable subset whose size matches the upper bound when there are two or three agents (Theorems 2 and 3).98P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114In Section 3.3, we assume that the algorithm only has access to the agents’ ordinal preferences on single items rather than subsets of items. Models of this type offer the advantage that the associated algorithms are often simple to implement and the agents do not need to give away or even determine their entire preferences; such models have therefore received widespread attention [7,13,31]. With only the ordinal preferences on single items at its disposal, however, in most cases the algorithm cannot tell whether a certain subset is agreeable to an agent or not. Nevertheless, by assuming that preferences are responsive, we can extend preferences on single items to partial preferences on subsets. This allows us to deduce that certain subsets are always agreeable as long as the full responsive preferences are consistent with the rankings over single items; we call such subsets necessarily agreeable. Denoting by m the number of items, we show using results from discrep-ancy theory that for any constant number of agents, there exists a necessarily agreeable subset of size m/2 + O (log m), and such a subset can be found in polynomial time (Theorem 4). Furthermore, we establish the tightness of this bound by show-ing that even with three agents, there exist preferences for which every necessarily agreeable subset has size m/2 + (cid:3)(log m)(Theorem 5).Next, in Section 4, we investigate the problem of computing an agreeable subset of approximately optimal size for any given instance, as opposed to one whose size matches the worst-case bound over all instances with the same number of agents and items. We tackle the problem using two models for representing preferences that are well-studied in the literature, and exhibit computationally efficient algorithms for finding an agreeable set of approximately optimal size in each of them. Moreover, in both of the models we show that our approximation ratios are asymptotically tight.In Section 4.1, we consider general preferences using the value oracle model, where the preferences of the agents are represented by utility functions and the algorithm is allowed to query the utility of any agent for any subset of items. We exhibit an efficient approximation algorithm with approximation ratio O (m/ log m) in this model (Theorem 7). While this may not seem impressive, especially in light of the observation that the trivial algorithm which always outputs the entire set of items already achieves approximation ratio O (m), we show that our approximation ratio is in fact the best we can hope for. In other words, there does not exist a polynomial time algorithm with approximation ratio o(m/ log m), even when there is only a single agent (Theorem 8).In Section 4.2, we assume that the agents’ preferences are represented by additive utility functions. Additivity provides a reasonable tradeoff between simplicity and expressiveness; it is commonly assumed in the literature, especially in recent work [5,15,17,39,53]. We show that under additive valuations, it is NP-hard to decide whether there exists an agreeable set containing exactly half of the items, even where there are only two agents (Theorem 9). On the other hand, using results on covering integer programs, we demonstrate the existence of an O (log n)-approximation algorithm for computing a minimum size agreeable set (Theorem 13). Moreover, we show that this approximation factor is tight: For any constant δ > 0, it is NP-hard to approximate the problem to within a factor of (1 − δ) ln n (Theorem 12).1.2. Related workWhile resource allocation and fair division have been extensively studied in the artificial intelligence literature [7,11,13–15,18,29,33], the group aspect that we consider in this work is relatively new. Skowron et al. [50] studied a similar setting where a group of agents collectively decide on a common set of items. In their work, the number of items that can be chosen is fixed and the agents strive to maximize their utility subject to that constraint, whereas in our work the number of items is variable but should be minimized, and an agreeability constraint is placed on the chosen set. A related problem that has recently received attention is that of fairly allocating items to groups of agents; the problem has been studied both in the context of indivisible items [39,48,53,54] and divisible items [46,47]. Like in our work, the items there are treated as public goods within each group—all members of a group derive full utility from the items allocated to the group. Unlike our work, however, all of the works mentioned above assume that there are multiple groups and the entire resource should be allocated to the groups. After the publication of the earlier versions of our work [40,52], Gourvès [25]studied agreeable sets under the additional assumption that the sets must satisfy matroidal constraints.In addition to the literature on resource allocation and fair division, another line of work relevant to ours is that of combinatorial voting [1,34,56]. A typical example of combinatorial voting is an election in which voters are asked to decide on a certain set of issues, and their preferences on the outcomes of various issues are dependent. For instance, a voter might be in favor of each proposed policy individually, but thinks that too much money would be spent if all of the policies were to be implemented. Combinatorial voting can be framed in our resource allocation setting, with the items to be allocated corresponding to the issues being voted upon. Several aspects of combinatorial voting have been studied, including the communication and computational cost of different voting rules, implementation methods, and strategic behavior of the voters.2. PreliminariesWe consider n agents, numbered 1, 2, . . . , n, who will be collectively allocated a subset of the set S = {x1, x2, . . . , xm} of mindivisible items. Denote by S the set of all subsets of S. Each agent i is endowed with a preference relation (cid:5)i , a reflexive, complete, and transitive ordering over S. Let (cid:6)i denote the strict part and ∼i the indifference part of the relation (cid:5)i . For items x and y, we will sometimes abuse notation and write x (cid:5) y to mean {x} (cid:5) { y}.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–11499We assume in this paper that preferences are monotonic, i.e., an agent cannot be worse off when an item is added to her set. Monotonicity is a natural assumption in a wide range of situations. In particular, it implies free disposal of items—every item is considered to be of nonnegative value to each agent.Definition 1. A preference (cid:5) on S is monotonic if T ∪ {x} (cid:5) T for all T ⊆ S.Note that if x ∈ T , then T ∪ {x} (cid:5) T always holds, so we only need to check the condition when x ∈ S\T .We are now ready to define the central notion of this paper.Definition 2. A subset T ⊆ S is said to be agreeable to agent i if T (cid:5)i S\T .When the set of agents considered is clear from the context, we will sometimes refer to a set that is agreeable to all agents simply as an agreeable set. Since preferences are monotonic, the whole set S is agreeable to every agent, so an agreeable set always exists for any number of agents.1 Agreeability to an agent also implies that the agent does not strictly prefer any subset of the complement to the current set. That is, we have T (cid:5)i U for any U ⊆ S\T .Another property of preferences that we will consider is responsiveness, which says that an agent cannot be worse off whenever an item is added to her set or replaced by another item that she weakly prefers to the original item. While stronger than monotonicity, responsiveness is still a reasonable assumption in many settings.2Definition 3. A preference (cid:5) on S is responsive if it satisfies the following two conditions:• (cid:5) is monotonic;• (T \{ y}) ∪ {x} (cid:5) T for all T ⊆ S and x, y ∈ S such that x (cid:5) y, x /∈ T and y ∈ T .If we have access to the complete preference of an agent, we can check whether a subset is agreeable to the agent simply by comparing it to its complement. When we only have access to the agent’s preference on single items, however, most of the time we cannot tell whether a given subset is agreeable or not. Nevertheless, if we assume that the agent’s preference is responsive, we can sometimes deduce that a certain subset is agreeable only by looking at the agent’s preference on single items. The following definition captures this intuition. In general, we use (cid:5) to denote a preference on S and (cid:5)sing to denote a preference on the single items in S.Definition 4. Fix a preference (cid:5)sing on the single items in S. A subset T ⊆ S is said to be necessarily agreeable with respect to (cid:5)sing if T (cid:5) S\T for any responsive preference (cid:5) on S consistent with (cid:5)sing .For the sake of brevity, we say that a subset of items is necessarily agreeable to an agent if it is necessarily agreeable with respect to the preference on single items of the agent.We now make a connection to the model where every agent has a cardinal utility for each subset of items. A utility function u is a function that maps any subset of items to a nonnegative real number. Since each agent’s preference is reflexive, complete, and transitive, there is a utility function ui : S → R≥0 for agent i such that for any T 1, T 2 ⊆ S, we have T 1 (cid:5)i T 2 if and only if ui(T 1) ≥ ui(T 2). Moreover, since we consider monotonic preferences, we have ui(T 1) ≤ ui(T 2) for any T 1 ⊆ T 2. We assume that ui(∅) = 0 for all i. A utility function u is said to be additive if u(T 1 ∪ T 2) = u(T 1) + u(T 2) for any disjoint subsets T 1, T 2, and subadditive if u(T 1 ∪ T 2) ≤ u(T 1) + u(T 2) for any T 1, T 2. Any monotonic additive function is also subadditive. Subadditive utility functions have been extensively studied in the literature [10,21].When the preferences of the agents are given by subadditive utility functions, a subset that an agent regards as agreeable also gives the agent a utility of at least half of the agent’s utility for the whole set S. Indeed, for any agreeable subset T we havef (S) = f (T ∪ (S\T )) ≤ f (T ) + f (S\T ) ≤ 2 f (T ),which implies that f (T ) ≥ f (S)/2. Hence an agreeable subset also gives a 2-approximation of the welfare to an agent when the agent’s utility function is subadditive.We end this section by giving a characterization of necessarily agreeable subsets, which will be used multiple times in the paper. Similar statements have been shown by Aziz et al. [7] and Brams et al. [16], although our treatment differs slightly in dealing with ties.1 If preferences are not monotonic, an agreeable set might not exist, e.g., if there are two agents with strict preferences, and one agent’s preference is exactly the opposite of the other agent’s preference.2 For a comprehensive treatment of properties concerning the ranking of sets of objects, we refer to a survey by Barberà et al. [9].100P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114Proposition 1. Fix a preference (cid:5)sing on the single items in S withx1 (cid:5)sing x2 (cid:5)sing · · · (cid:5)sing xm.Let T ⊆ S, and define Ik = {x1, x2, . . . , xk} for all k = 1, 2, . . . , m.If |Ik ∩ T | ≥ k/2 for all k = 1, 2, . . . , m, then T is necessarily agreeable with respect to (cid:5)sing . The converse also holds if the preference (cid:5)sing is strict.Proof. Assume first that |Ik ∩ T | ≥ k/2 for all k = 1, 2, . . . , m. Since |Im ∩ T | ≥ m/2, we have that |T | ≥ |S\T |. Let Tthe subset consisting of the |S\T | items of T with the smallest indices.Define a bijective function f : T(cid:15) → S\T as follows: Given the item xk ∈ T with the smallest index for which f (xk) is not yet defined, we define f (xk) to be the item in S\T with the smallest index that has not occurred in the range of f so far. Since |Ik ∩ T | ≥ k/2 for all k = 1, 2, . . . , m, the function f maps each item xk to another item xl with l > k. The definition of (cid:15) (cid:5) S\T . Since any responsiveness implies that for any responsive preference (cid:5) on S consistent with (cid:5)sing , it holds that Tresponsive preference is also monotonic, we have T (cid:5) S\T , which implies that T is necessarily agreeable with respect to (cid:5)sing .For the converse, assume that the preference (cid:5)sing is strict, and that |Il ∩ T | < l/2 for some l = 1, 2, . . . , m. Let (cid:5) > 0 be (cid:15) ⊆ T be a small constant, and suppose that the preference (cid:5) is given by an additive utility function u such that:• u(xi) = 1 + (l − i)(cid:5) for 1 ≤ i ≤ l;• u(xi) = (m − i)(cid:5) for l < i ≤ m.Since any preference that can be represented by an additive utility function is responsive, (cid:5) is responsive. Moreover, we have u(S\T ) > l/2, whereas u(T ) < l/2 when (cid:5) is small enough. It follows that (cid:5) is a responsive preference on S consistent with (cid:5)sing such that S\T (cid:6) T . Hence T is not necessarily agreeable with respect to (cid:5)sing . (cid:2)Finally, any logarithm written without a base in this paper is assumed to have base 2.3. Worst-case boundsIn this section, we establish upper bounds on the size of the smallest agreeable set, both when the algorithm has access to the agents’ full preferences and when the algorithm only has access to the agents’ preferences on single items. In addition, we present algorithms that compute agreeable sets whose size matches the worst-case bounds under both assumptions.3.1. General worst-case boundWe commence our study of agreeable sets by deriving a tight worst-case bound on the number of items that may need to be included in such a set, for any number of items and any number of agents with arbitrary preferences on the items. Even with a single agent, there already exists a preference for which we need to include at least half of the items, e.g., a preference represented by an additive utility function that gives the same positive utility to every item. In light of this, it may seem that there is little hope of obtaining a small agreeable set when there are several agents, possibly with wildly varying preferences. Nevertheless, we show that the number of extra items that we need to include to accommodate the additional agents is surprisingly small even in the worst case—this number is only half an item per additional agent.Theorem 1. For any number of agents and items, there exists a subset T ⊆ S such that|T | ≤ min(cid:6)(cid:7)(cid:8)(cid:9)m + n2, mand T is agreeable to all agents. Moreover, there exist preferences for which the bound min(cid:4)(cid:2)(cid:3)(cid:5), mm+n2is tight.Theorem 1 can be seen as a discrete version of consensus halving, where the goal is to partition a divisible item such as cake or land into two parts that all agents think are worth exactly the same. Interestingly, a consensus halving partition can be found for any number of agents [2,49]. It follows that we can find a part of the item that is at most half of the item but that all agents think is worth at least half of the item (in particular, we choose the smaller of the two parts in the consensus halving partition). When items are indivisible, however, it may no longer be possible to choose a set containing at most half of the items such that all agents believe this set is worth at least as much as its complement. Indeed, if there is only one item and all agents value this item positively, the item must be included in the set. Theorem 1 gives us a precise bound on how many additional items need to be included in the worst case.We first give a direct proof of Theorem 1 for the case of two agents; our proof for the general case will rely on a combinatorial result.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114101Direct proof of Theorem 1 when n = 2. Denote by (cid:5)1 and (cid:5)2 the preferences on S of the two agents. We establish the existence of a set of size at most that is agreeable to both agents; the tightness of the bound follows in the same way as in our proof of Theorem 1 for any number of agents.m+22Assume first that m = 2k + 1 is odd. Suppose for contradiction that no subset of size at most k + 1 is agreeable to both (cid:11)(cid:10)agents. Let T ⊆ S be such that |T | = k. We begin by proving the following claim.Claim: If T (cid:6)1 S\T , then(T ∪ {x})\{x(cid:15)}(cid:15)} (cid:6)1 ((S\T )\{x}) ∪ {xfor any x ∈ S\T and xProof of Claim: Suppose that T (cid:6)1 S\T , x ∈ S\T , and xsubset of size k + 1 is agreeable to both agents, we have (S\T )\{x} (cid:6)2 T ∪ {x}. By monotonicity again, we have(cid:15) ∈ T . It follows from monotonicity that T ∪ {x} (cid:6)1 (S\T )\{x}. Since no (cid:15) ∈ T .((S\T )\{x}) ∪ {x(cid:15)} (cid:6)2 (T ∪ {x})\{x(cid:15)}.Using again the assumption that no subset of size k + 1 is agreeable to both agents, it follows that(T ∪ {x})\{x(cid:15)} (cid:6)1 ((S\T )\{x}) ∪ {x(cid:15)},and our claim is proved. (cid:2)We now use our claim to obtain the desired contradiction. Assume without loss of generality that {x1, x2, . . . , xk} (cid:6)1{xk+1, xk+2, . . . , x2k+1}. Applying our claim repeatedly to move items between the two sets, we find that{xk+1, x2, . . . , xk} (cid:6)1 {x1, xk+2, . . . , x2k+1},{xk+1, xk+2, x3, . . . , xk} (cid:6)1 {x1, x2, xk+3, . . . , x2k+1},and so on, until finally{xk+1, xk+2, . . . , x2k} (cid:6)1 {x1, x2, . . . , xk, x2k+1}.By monotonicity, we have {xk+1, xk+2, . . . , x2k+1} (cid:6)1 {x1, x2, . . . , xk}, which contradicts our assumption that {x1, x2, . . . , xk} (cid:6)1{xk+1, xk+2, . . . , x2k+1}.Assume now that m = 2k is even. Let S(cid:15)(cid:15)(cid:15)\T and T ∪ {x1} (cid:5)2 Sof size at most k such that T (cid:5)1 Sbe the set of all items in S except x1. We know from the case where m is odd (cid:15)\T . Since preferences are monotonic, we (cid:15)\T . This means that the set T ∪ {x1} of size at most k + 1 is our desired subset, (cid:15)\T and T (cid:5)2 Sthat there exists a subset T ⊆ Shave that T ∪ {x1} (cid:5)1 Scompleting the proof. (cid:2)Note that this proof also yields a polynomial-time algorithm to compute an agreeable set of size at most that is agreeable to both agents. Assume that m = 2k + 1 is odd; the case where m is even can be handled similarly. Let T ⊆ Sbe an arbitrary subset of size k. If S\T (cid:5)1 T and S\T (cid:5)2 T , we are done. Otherwise, assume without loss of generality that (cid:15) ∈ T . As in the proof of the claim, if T ∪ {x} (cid:5)2 (S\T )\{x}, or if (S\T )\{x} (cid:6)2T (cid:6)1 S\T , and choose arbitrarily x ∈ S\T and x(cid:15)}, we are done. Hence we may assume as in the conclusion of the claim that T ∪ {x} and ((S\T )\{x}) ∪ {x(cid:15)}. This means that we can find an agreeable subset by moving elements repeatedly between (T ∪ {x})\{xthe two sets as in the continuation of the proof. Since we need to move elements at most k times, our algorithm runs in polynomial time.(cid:15)} (cid:6)1 ((S\T )\{x}) ∪ {x(cid:15)} (cid:5)1 (T ∪ {x})\{x(cid:10)(cid:11)m+22We now move on to the general case. As alluded to earlier, our proof of the theorem relies on the following combinatorial result, which is best known as Kneser’s conjecture. Recall that the chromatic number of a graph is defined as the smallest number of colors needed to color the vertices of the graph so that no two adjacent vertices share the same color.Lemma 1 (Kneser’s conjecture). Let G be the undirected graph with all k-element subsets of the set {1, 2, . . . , n} as vertices such that there exists an edge between two vertices if and only if the corresponding sets are disjoint. The chromatic number of G is given by(cid:12)χ (G) =n − 2k + 21if n ≥ 2k;otherwise.The statement of the lemma is due to Kneser [30], who proposed it as a conjecture in the problem column of a German mathematics magazine in 1955. In spite of the simple statement, it was not until 1978 that the conjecture was first resolved by Lovász [37] using topological methods. The proof was later simplified by Bárány [8] and Greene [26], before Matoušek [41] gave the first purely combinatorial proof in 2004. Lovász’s proof of the conjecture, which makes use of the Borsuk–Ulam theorem, marked the first time that methods from algebraic topology were used to solve a combinatorial problem, and gave rise to the field of topological combinatorics.With Lemma 1 in hand, we are ready to establish our theorem.102P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114Fig. 1. The graph G in the proof of Theorem 1 when n = 2 and m = 5, also known as the Petersen graph. A vertex with a label {i, j} corresponds to the set {xi , x j }.(cid:2)(cid:3)m+n2Proof of Theorem 1. Let k =. If k ≥ m, the set S of all items has size m = min(k, m) and is agreeable to all agents since preferences are monotonic. Assume from now on that k < m, and consider the undirected graph G with all (m −k)-element subsets of {x1, x2, . . . , xm} as vertices and with edges connecting vertices whose corresponding sets are disjoint. For example, if n = 2 and m = 5 (so k = 3 and m − k = 2), the graph G corresponds to the well-known Petersen graph and is shown in Fig. 1.If all agents weakly prefer S\T to T for some (m − k)-element subset T ⊆ S, then S\T is our desired agreeable subset of size k. Suppose for contradiction that for any (m − k)-element subset T ⊆ S, there exists an agent who strictly prefers T to S\T . We color the vertices of G with n colors in the following way: For each vertex v of G corresponding to a set T , color it with the color corresponding to an agent who strictly prefers T to S\T . If there is more than one such agent, choose one arbitrarily.Since k =(cid:2)(cid:3)m+n2≥ m2 , we have m ≥ 2(m − k). By Lemma 1, the chromatic number of G is(cid:9)(cid:6)m − 2(m − k) + 2 = 2k − m + 2 ≥ 2− m + 2 = n + 1.m + n − 12Since we colored G with n colors, there exist two adjacent vertices sharing the same color. Let T 1 and T 2 be the sets corresponding to these vertices. This means that T 1 (cid:6)i S\T 1 and T 2 (cid:6)i S\T 2 for some agent i. Since T 1 and T 2 are disjoint, we have T 1 ⊆ S\T 2 and T 2 ⊆ S\T 1. Monotonicity now implies thatS\T 1 (cid:5)i T 2 (cid:6)i S\T 2 (cid:5)i T 1 (cid:6)i S\T 1,a contradiction. This means that we can always find a subset of size k that is agreeable to all agents.Finally, we show that there exist monotonic preferences for which the bound min (k, m) is tight. In fact, we can even choose preferences that are represented by additive utility functions. We consider two cases.• n ≥ m. Then min(k, m) = m. For i = 1, 2, . . . , n, let the preference of agent i be given by an additive utility function usuch that u(xmin(i,m)) = 1 and u(x j) = 0 for all j (cid:16)= min(i, m). Then any subset that is agreeable to agent i must contain item xmin(i,m). Hence a subset that is agreeable to all agents must contain all m items.• n < m. Then min(k, m) = k. For i = 1, 2, . . . , n − 1, let the preference of agent i be given by an additive utility function u such that u(xi) = 1 and u(x j) = 0 for all j (cid:16)= i. Let the preference of agent n be given by an additive utility function usuch that u(x j) = 1 for j ∈ {n, n + 1, . . . , m} and u(x j) = 0 otherwise.For i = 1, 2, . . . , n − 1, any subset that is agreeable to agent i must contain item xi . Also, any subset that is agreeable to agent n must contain at least half of the items xn, xn+1, . . . , xm. Hence a subset that is agreeable to all agents must have size at least n − 1 += k, as desired.==(cid:13)(cid:14)(cid:13)(cid:14)(cid:2)(cid:3)m+n−12m+n2m−n+12This completes the proof. (cid:2)3.2. Matching the worst-case boundTheorem 1 gives us a tight worst-case bound on the size of the smallest agreeable set for any number of agents and items. However, its proof does not yield a method for obtaining a set of that size. Since the number of sets that we have to consider is exponential in the number of items, brute-force search is infeasible even for moderate numbers of items. Our goal in this section is to show that when there are two or three agents with responsive preferences, it is in fact possible to compute an agreeable set whose size matches the worst-case bound in polynomial time. This implies that we can compute such a set even when the number of items is large.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114103An important issue when we discuss algorithms is how we represent the agents’ preferences. Since preferences on subsets, unlike preferences on single items, might not have a succinct representation, it is not possible to design algorithms that run in time polynomial in the number of items if the algorithm is required to read the entire preference. To circumvent this problem, we assume in this section that preferences are responsive; this allows us to extend preferences on single items to partial preferences on subsets. Our algorithm for two agents will only make use of the preferences on single items and compute a necessarily agreeable subset.3 On the other hand, our algorithm for three agents will also query the agents’ preferences on subsets through a preference oracle in addition to utilizing the preferences on single items.We first handle the case of two agents.(cid:10)(cid:11)Theorem 2. Assume that there are two agents with preferences (cid:5)singm+2such that |T | ≤2algorithm that computes such a subset T .and T is necessarily agreeable with respect to both (cid:5)sing1(cid:10)Moreover, there exist preferences on the single items in S for which the bound and (cid:5)sing21(cid:11)is tight.m+22on the single items in S. There exists a subset T ⊆ S. Also, there exists a polynomial-time and (cid:5)sing2Proof. Assume first that m = 2k + 1 is odd, and suppose without loss of generality that x1 (cid:5)singchoose our set T of = k + 1 items as follows:(cid:11)(cid:10)1m+22x2 (cid:5)sing1· · · (cid:5)sing1x2k+1. We 1. Choose x1.2. Between each of the k pairs of items (x2, x3), (x4, x5), . . . , (x2k, x2k+1), choose the item that is preferred according to (cid:5)sing2. If (cid:5)sing2is indifferent between any pair of items, choose an arbitrary item from that pair.1. Moreover, since we choose the item that is preferred according to (cid:5)singFor any j = 1, 2, . . . , m, our set T contains at least j/2 of the j items x1, x2, . . . , x j ; by Proposition 1, T is necessarily agreeable with respect to (cid:5)singfrom each of the sets {x2, x3}, {x4, x5}, . . . , {x2k, x2k+1} along with x1, Proposition 1 implies that T is also necessarily agreeable with respect to (cid:5)sing2Assume now that m = 2k is even. Let Sof size k that is necessarily agreeable with respect to both (cid:5)sing(cid:10)(cid:15) = S\{x1}. We apply the algorithm from the case where m is odd to choose a (cid:15)2 when the universe considered is S. and (cid:5)singand (cid:5)sing= k + 1 that is necessarily agreeable with respect to both (cid:5)sing. Hence T is necessarily agreeable with respect to both (cid:5)singand (cid:5)sing(cid:11)1221.(cid:15)set T ⊆ SIt follows that T ∪ {x1} is a subset of size when the universe considered is S.m+2212Next, we show that there exist preferences on single items for which the bound (cid:11)(cid:10)m+22is tight. If m = 2k + 1 is odd and the preference (cid:5)singmust already contain at least 1(cid:10)(cid:11)m+22= k + 1 items.is strict, then by Proposition 1, any subset that is necessarily agreeable with respect to (cid:5)singalone 122· · · (cid:6)singFinally, suppose that m = 2k is even, and let (cid:5)singx1. By Proposition 1, any subset T ⊆ S that is necessarily agreeable with respect to (cid:5)singx2k and x2k (cid:6)singx2k−1 (cid:6)singalone must contain at least k items, one of which is x1. If T contains exactly k items, then it contains exactly k − 1 items among x2, x3, . . . , x2k. Proposition 1 implies that such a set T is not necessarily agreeable with respect to (cid:5)sing. Hence any subset (cid:11)2m+2T ⊆ S that is necessarily agreeable with respect to both (cid:5)sing= k + 1 items, as 2desired. (cid:2)2 must contain at least be such that x1 (cid:6)singand (cid:5)singand (cid:5)singx2 (cid:6)sing1· · · (cid:6)sing(cid:10)1121121At a high level, the algorithm in Theorem 2 bears a resemblance to the “Trump rule”, which was proposed by Pruhs and Woeginger [44] for fair division of indivisible items between two agents. Like our algorithm, the Trump rule takes as input the preferences on single items of the two agents. Using our terminology, the rule is guaranteed to produce an allocation with the property that each agent views her bundle as necessarily agreeable, whenever such an allocation exists. The difference between the Trump rule and our algorithm is that the Trump rule produces a partition of the items into two subsets with each agent taking one subset, whereas our algorithm produces a single subset that both agents share.Observe that in the case of two agents, the upper bound for the size of the smallest necessarily agreeable set (Theorem 2) coincides with the bound for the size of the smallest agreeable set (Theorem 1). This is somewhat surprising because the definition of a necessarily agreeable set only involves preferences on single items, and yet the worst-case bound remains unchanged even if we have access to the full preferences. The following example shows that the same statement ceases to hold when there are three agents.3 If we do not assume responsiveness, there still exists a polynomial-time algorithm for two agents that discovers the agents’ preferences on subsets through a preference oracle; this algorithm is described in the direct proof of Theorem 1 for two agents.104P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114Example 1. Let m = 6, and assume that the preferences on single items of the three agents are as follows:11. x1 (cid:6)sing2. x2 (cid:6)sing3. x3 (cid:6)sing23x4 (cid:6)sing1x5 (cid:6)sing2x6 (cid:6)sing3x5 (cid:6)sing1x6 (cid:6)sing2x4 (cid:6)sing3x6 (cid:6)sing1x4 (cid:6)sing2x5 (cid:6)sing3x2 (cid:6)sing1x3 (cid:6)sing2x1 (cid:6)sing3x3;x1;x2.In Example 1, any subset that is necessarily agreeable to all three agents must contain x1, x2, x3, since each of them is ranked first by some agent. Moreover, choosing only one of x4, x5, x6 does not yield a necessarily agreeable set for the agent who ranks that item fourth. Hence a necessarily agreeable set must contain at least five items. On the other hand, if we = 4 that is agreeable to have access to the agents’ full preferences, Theorem 1 implies that we can find a set of size all agents.6+32(cid:10)(cid:11)Therefore, to compute an agreeable set whose size matches the worst-case bound when there are three agents, it is not sufficient to consider preferences on single items only. Nevertheless, if the algorithm has access to the agents’ full preferences, it is possible to find such a subset in polynomial time. To access the preferences, the algorithm is allowed to make a polynomial number of queries to a preference oracle. In each query, the algorithm can specify an agent and two subsets of items to the preference oracle, and the oracle reveals the preference of that agent between the two subsets.Theorem 3. Assume that there are three agents with responsive preferences (cid:5)1, (cid:5)2, and (cid:5)3 on S. There exists a polynomial-time algorithm that computes a subset T ⊆ S such that |T | ≤and T is agreeable to all three agents.(cid:10)(cid:11)m+32Proof. Assume first that m = 2k is even. Our goal is to find a subset of size = k + 1 that is agreeable to all three agents. Suppose without loss of generality that x2k−1 is the most preferred item according to (cid:5)1, x2k is the most preferred item other than x2k−1 according to (cid:5)2, and among the remaining 2k − 2 items, the preference (cid:5)1 ranks them as x1 (cid:5)1x2 (cid:5)1 · · · (cid:5)1 x2k−2.Let A = {x1, x2, . . . , x2k−2}, and consider the pairs (x1, x2), (x3, x4), . . . , (x2k−3, x2k−2). Let B be a set of k − 1 items con-taining an item from each pair that is not preferred to the other item in the pair according to (cid:5)2. If (cid:5)2 is indifferent between any pair of items, we choose arbitrarily. Responsiveness implies that A\B (cid:5)2 B.As long as A\B (cid:5)2 B, we remove an element from B that was also originally in B, and insert the other item in its pair into B. We must eventually reach a point where B (cid:5)2 A\B, at the latest after k − 1 moves. We consider two cases.(cid:10)(cid:11)m+32• We have not performed any move. By definition of B, we have that B (cid:5)2 A\B and A\B (cid:5)2 B, and therefore A\B ∼2 B. Since preferences are monotonic, it follows that ( A\B) ∪ {x2k} (cid:5)2 B and B ∪ {x2k} (cid:5)2 A\B.• We have performed at least one move. Suppose without loss of generality that in our last move, we inserted x2i−1 into and removed x2i from B. Let C = ( A\(B ∪ {x2i})) ∪ {x2i−1} and D = (B\{x2i−1}) ∪ {x2i}, i.e., C and D are the sets A\Band B before the last move, respectively. We have that C (cid:6)2 D and B (cid:5)2 A\B, and it follows from monotonicity that C ∪ {x2k} (cid:5)2 D and B ∪ {x2k} (cid:5)2 A\B. We claim that at least one of D ∪ {x2k} (cid:5)2 C and ( A\B) ∪ {x2k} (cid:5)2 B holds.Assume for contradiction that C (cid:6)2 D ∪ {x2k} and B (cid:6)2 ( A\B) ∪ {x2k}. Responsiveness implies thatC (cid:6)2 D ∪ {x2k} (cid:5)2 B (cid:6)2 ( A\B) ∪ {x2k} (cid:5)2 C,a contradiction. Hence at least one of D ∪ {x2k} (cid:5)2 C and ( A\B) ∪ {x2k} (cid:5)2 B holds, as claimed.In both cases, we can find in polynomial time a subset E ⊆ A of size k − 1 containing an item from each of the pairs (x1, x2), (x3, x4), . . . , (x2k−3, x2k−2) such that E ∪ {x2k} (cid:5)2 A\E and ( A\E) ∪ {x2k} (cid:5)2 E.We now choose our agreeable set of size k + 1 as follows:1. Choose both x2k−1 and x2k.2. Choose either E or A\E according to which set agent 3 prefers. (If agent 3 is indifferent between the two sets, choose one of them arbitrarily.)We claim that our chosen set T is agreeable to all three agents. We prove the claim separately for each of the agents.• For any j = 1, 2, . . . , m, the set T contains at least j/2 of the j most preferred items according to (cid:5)1. Since (cid:5)1 is responsive, Proposition 1 implies that T is necessarily agreeable to agent 1.• Since E ∪ {x2k} (cid:5)2 A\E and A\E ∪ {x2k} (cid:5)2 E, and T contains either E or A\E along with both x2k−1 and x2k, T is • Since we choose the set E or A\E that agent 3 prefers and we include both of the remaining items x2k−1 and x2k, T is agreeable to agent 2.agreeable to agent 3.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114105Hence T is agreeable to all three agents, as claimed. This concludes the analysis of the case where m is even.(cid:10)(cid:11)Finally, assume that m = 2k + 1 is odd. Our goal is to find a subset of size (cid:15) = S\{x1}. We apply the algorithm from the case where m is even to choose a set T ⊆ Sagents. Let S(cid:15)is agreeable to all three agents when the universe considered is Sagreeable to all three agents when the universe considered is S. (cid:2)m+32= k + 2 that is agreeable to all three (cid:15)of size k + 1 that . It follows that T ∪ {x1} is a subset of size k + 2 that is 3.3. Computing small necessarily agreeable setsIn this section, we consider a model in which the algorithm only has access to each agent’s ranking over the items. We will therefore be interested in computing a small subset that is necessarily agreeable to every agent. While the algorithm has significantly less information at its disposal than before, as we will see, it is still possible to find small subsets that are necessarily agreeable to all agents.(cid:2)(cid:3)m+n2If the algorithm had access to the agents’ preferences over all subsets of items, Theorem 1 implies that it could always find a subset of size that is agreeable to all agents. For two agents, the algorithm in Theorem 2 only uses the agents’ rankings to compute a subset of this size that is necessarily agreeable to both agents. As Example 1 shows, however, a necessarily agreeable subset of this size might not exist even when there are three agents. Indeed, it is not clear how much extra “penalty” we have to pay for the information restriction that we are imposing. For example, it could be that with three agents, there already exist preferences on single items for which any necessarily agreeable subset contains at least cm items for some constant c > 1/2. We show in the next theorem that this is in fact not the case—there always exists a necessarily agreeable subset of size m/2 + O (log m) as long as the number of agents is constant. Moreover, such a set can be computed in polynomial time.Theorem 4. For any constant number of agents, there exists a subset of S of size m/2 + O (log m) that is necessarily agreeable to all agents. Moreover, such a subset can be computed in polynomial time.To prove this theorem, we will use the following result from discrepancy theory due to Bohus [12].Lemma 2 ([12]). Let σ1, σ2, . . . , σn be permutations of the set M = {1, 2, . . . , m}. There exists a function f : M → {−1, 1} such that for any 1 ≤ p ≤ q ≤ m and any 1 ≤ j ≤ n,(cid:15)(cid:15)(cid:15)(cid:15)f (σ j(i))(cid:15)(cid:15)(cid:15)(cid:15)q(cid:16)(cid:15)(cid:15)(cid:15)(cid:15)≤ 8n log m.i=pMoreover, such a function can be computed in polynomial time.Proof of Theorem 4. Suppose that agent j ranks the single items as xσ j (1) (cid:5)singcan efficiently compute a function f : S → {−1, 1} such thatj(cid:15)(cid:15)(cid:15)(cid:15)f (xσ j (i))(cid:15)(cid:15)(cid:15)q(cid:16)(cid:15)(cid:15)(cid:15)i=1≤ 8n log mxσ j (2) (cid:5)singj· · · (cid:5)singjxσ j (m). By Lemma 2, we for any q = 1, 2, . . . , m and any j = 1, 2, . . . , n.We construct our agreeable subset as follows. We include in our subset all items xi such that f (xi) = 1, as well as the (cid:17)4n log m(cid:18) most preferred items of each agent that are not yet included. (If some agent has fewer than (cid:17)4n log m(cid:18) items that are not yet included, we simply include all of that agent’s items.) For i = 1, 2, . . . , m, let Xi be an indicator variable such that Xi = 1 if item xi is included in the set and Xi = −1 if not. For any agent j and any i = 1, 2, . . . , m, we haveXσ j (1) + · · · + Xσ j (i) ≥ min{i, −8n log m + 2 · (cid:17)4n log m(cid:18)} ≥ 0.By Proposition 1, this implies that the chosen set is necessarily agreeable to all agents. Moreover, our subset includes at mostm2+ (n + 1) · (cid:17)4n log m(cid:18) = m2+ O (log m)items, as desired. (cid:2)Next, we address the tightness of the bound in Theorem 4. Bohus’s result is known to be asymptotically tight for con-stant n: Newman et al. [43] constructed, for every m that is a power of three, an example of three permutations whose discrepancy is (cid:3)(log m). While upper bounds on the discrepancy of permutations can be easily turned into upper bounds 106P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114on the size of necessarily agreeable sets as seen above, lower bounds are somewhat more delicate. Nevertheless, Newman et al.’s examples satisfy stronger conditions than merely having a large discrepancy. One of these conditions, which we state in the following lemma, will be sufficient for proving a lower bound on the size of necessarily agreeable sets. The lemma is a restatement of Corollary 2 in the work of Newman et al. [43].Lemma 3 ([43]). Given any positive integer k, let m = 3k and M = {1, 2, . . . , m}. There exist three permutations σ1, σ2, σ3 of M such that for any function f : M → {−1, 1}, if (cid:8) :=i∈M f (i) ≥ 1, then there exist 1 ≤ q ≤ m and 1 ≤ j ≤ 3 such that(cid:17)q(cid:16)i=1f (σ j(i)) ≤−k + 2(cid:8) − 23.We now show that the bound in Theorem 4 is tight even when there are three agents. Recall that if there are two agents, it is possible to compute a subset of size that is necessarily agreeable to both agents (Theorem 2).(cid:10)(cid:11)m+22Theorem 5. Suppose that m = 3k for some positive integer k. There exist preferences on single items of three agents such that every necessarily agreeable subset of items has size at least m/2 + (cid:3)(log m).Proof. Let σ1, σ2, σ3 be the permutations of S from Lemma 3, where we use the set S = {x1, x2, . . . , xm} instead of the set M = {1, 2, . . . , m}. For each j = 1, 2, 3, let the preference on single items of agent j be xσ j (1) (cid:5)singxσ j (m).Consider any subset T ⊆ S of size at most m/2 + k/4. We will show that T cannot be necessarily agreeable to all three agents, which immediately implies the theorem since k = log3 m. To see that this is the case, let f T : S → {−1, 1} denote the indicator function of T , i.e., f T (xi) = 1 if xi ∈ T and f T (xi) = −1 if xi /∈ T . Since T is of size at most m/2 + k/4, we have (cid:8)T :=i=1 f (xi) = |T | − |S \ T | ≤ k/2. If (cid:8)T < 0, then T is trivially not necessarily agreeable, so we may assume that (cid:8)T ≥ 0. Since m is odd and (cid:8)T is an integer, we also have (cid:8)T ≥ 1. By Lemma 3, there exists 1 ≤ q ≤ m and 1 ≤ j ≤ 3 such thatxσ j (2) (cid:5)sing· · · (cid:5)sing(cid:17)mjjjq(cid:16)i=1f T (σ j(xi)) ≤−k + 2(cid:8)T − 23≤−k + k − 23< 0.By Proposition 1, T is not necessarily agreeable to agent j, as desired. (cid:2)Theorems 4 and 5 show that the bound m/2 + O (log m) for the size of the smallest necessarily agreeable set is asymptot-ically tight. We next present a randomized algorithm that, despite its simplicity, computes a necessarily agreeable subset of size m/2 + O (m) in polynomial time. The algorithm works by first choosing whether to include each item independently with 50% probability, and then including the O (m) most preferred items of each agent that were excluded in the first step.√√For the analysis of the algorithm, we will require two probabilistic results. The first result, the Chernoff bound, is a fundamental result that gives an upper bound on the probability that a sum of independent random variables is far away from its expected value. For simplicity, we only state the bound for the case of symmetric ±1 random variables, which suffices for our usage. This version can be found, for example, as Theorem A.1.1 in Alon and Spencer’s book [4].Lemma 4 (Chernoff bound). Let X1, X2, . . . , Xr be i.i.d. random variables such that Pr[ Xi = 1] = Pr[ Xi = −1] = 1/2, and let X :=X1 + · · · + Xr . For any a ≥ 0, we have(cid:19).Pr[| X| ≥ a] ≤ exp−a2/2r(cid:18)The second result, Lévy’s inequality, yields a bound on the maximum of partial sums of independent random variables [35]. Once again, we state the inequality only for symmetric ±1 random variables.Lemma 5 (Lévy’s inequality). Let X1, X2, . . . , Xr be i.i.d. random variables such that Pr[ Xi = 1] = Pr[ Xi = −1] = 1/2, and let Y i :=X1 + · · · + Xi for i = 1, 2, . . . , r. For any real number x, we have(cid:20)Prmax1≤i≤r(cid:21)|Y i| ≥ x≤ 2 Pr[|Y r| ≥ x].We now present the algorithm and its analysis.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114107Theorem 6. Assume that the number of agents is constant. Let (cid:5) ∈ (0, 1), and let c > 0 be a constant such that eConsider the following randomized polynomial-time algorithm:−c2/2 ≤ (cid:5)/(2n). 1. For each item, either include it in our set or not with probability 1/2, independently of the remaining items.(cid:2)most preferred items of each agent that were excluded in Step 1.2. Include the c√m(cid:3)With probability at least 1 − (cid:5), the algorithm computes a subset of size m/2 + O (√m) that is necessarily agreeable to all agents.Proof. Let X1, X2, . . . , Xm be independent random variables such that Xi = 1 if item xi is included in our subset in the first step, and Xi = −1 if not. By the definition of the algorithm, each Xi is 1 or −1 with probability 1/2, independently of the other Xi ’s.For j = 1, 2, . . . , m, suppose that agent j ranks the single items as xσ j (1) (cid:5)singxσ j (2) (cid:5)singj· · · (cid:5)singjxσ j (m). Let Y:=jijXσ j (1) + · · · + Xσ j (i) for i = 1, 2, . . . , n. Applying Lemma 4 with a = c(cid:22)|YPr(cid:23)√mjm| ≥ c≤ e−c2/2.√m yieldsUsing Lemma 5 with the random variables Xσ j (i) for i = 1, 2, . . . , n, it follows that(cid:20)Prmax1≤i≤m(cid:21)(cid:15)(cid:15)(cid:15)Yji(cid:15)(cid:15)(cid:15) ≥ c√m≤ 2e−c2/2.Using the union bound over all agents j, we have(cid:20)Prmax1≤i≤m(cid:15)(cid:15)(cid:15)Yji(cid:15)(cid:15)(cid:15) ≥ c√m for some j ∈ {1, 2, . . . , m}(cid:21)≤ 2ne−c2/2 ≤ (cid:5).√Hence, with probability at least 1 − (cid:5), Ywe include the (cid:2)cto reflect these changes, we have Yagreeable to all agents. Since we include at most m/2 + cset contains at mostm(cid:3)] for all i = 1, . . . , n and j = 1, . . . , m. Now, since in Step 2 m(cid:3) most preferred items of each agent that were excluded in Step 1, if we update the random variables ≥ 0 for all i, j. By Proposition 1, the set that the algorithm returns is necessarily m items for each agent in Step 2, the m items in Step 1 and c∈ [−(cid:2)cm(cid:3), (cid:2)c√√jiji√√√+ O (m)m2+ (n + 1) · c√m = m2items, as desired. (cid:2)4. Efficient approximationWhile our results in Sections 3 provide insights on small agreeable sets and how to compute them efficiently, an im-portant issue is still left unaddressed by these results. In many instances, the minimum size of an agreeable set is much smaller than the worst-case bound over all instances with that number of agents and items. Indeed, an extreme example is when there is a single item that every agent likes more than all of the remaining items combined. In this case, it suffices to select that item alone. This results in a much smaller set than the worst-case bound, which is at least half of the items for any number of agents.In this section, we investigate the problem of computing an agreeable subset of optimal size for any given instance, as opposed to one whose size matches the worst-case bound over all instances with the same number of agents and items. We show that finding an optimal agreeable set is computationally hard, and therefore focus on finding an approximate solution. We do so using two well-known models for representing preferences, namely the value oracle model and additive valuations. For each of these models, we present polynomial-time algorithms for computing an agreeable set of approximately optimal size. Moreover, we show that the approximation ratios obtained by our algorithms are asymptotically tight for both models.4.1. General preferencesWe begin with a model in which agents can have arbitrary preferences on subsets of items. Recall that our results so far do not yield any guarantee on the approximation ratio beyond the obvious O (m) upper bound for arbitrary preferences over subsets of items. The goal of this section is to explore the approximation ratios that we can achieve in this general setting.Before we move on to our results, let us be more precise about the model that we work with. First, we work with the agents’ utility functions u1, u2, . . . , un instead of directly with the preferences themselves. Since the number of subsets of Sis exponentially large, the utility functions take exponential space to write down. For this reason, it is undesirable to include them as part of the input. Instead, we work with the value oracle model [22], in which the algorithm can query the value 108P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114of ui(T ) for any subset T ⊆ S and any i = 1, 2, . . . , n. We also note that we do not assume responsiveness of the agents’ preferences in this section.Our first result is a simple polynomial-time approximation algorithm with approximation ratio O (m/ log m). Even though this approximation guarantee is only (cid:3)(log m) better than the obvious O (m) bound, we will see later that this is already the best we can hope for in polynomial time.Theorem 7. There exists a polynomial-time O (m/ log m)-approximation algorithm for computing a minimum size agreeable set in the value oracle model.Proof. We start by partitioning the set S of items into (cid:17)log m(cid:18) parts S1, . . . , S(cid:17)log m(cid:18), where each part is of size at most (cid:17)m/ log m(cid:18). For each set A ⊆ {1, 2, . . . , (cid:17)log m(cid:18)}, we check whether the set i∈ A S i is agreeable or not by comparing each agent’s value for the set to that for its complement. We then output the smallest agreeable set that we find. Since the number of possible sets A is linear in m, the running time of our algorithm is polynomial in m and n.∗| = k. By be a smallest agreeable set. Suppose that |STo prove the approximation guarantee of the algorithm, let Smonotonicity, the union of all sets S i containing elements of Sis also agreeable, and it is one of the sets that we check. Moreover, this union has size at most k · (cid:17)m/ log m(cid:18), implying that our algorithm indeed has approximation ratio O (m/ log m). (cid:2)(cid:24)∗∗Even though our algorithm is very simple, we show next that its approximation guarantee is in fact the best one can hope for, even when there is a single agent.Theorem 8. For every constant c > 0, there exists m0 such that for every m > m0, there is no (possibly randomized and adaptive) algo-rithm that makes at most mc/8 queries to the value oracle and always outputs an agreeable set with expected size at most m/(c log m)times the optimum, even when there is only one agent.In other words, the above theorem implies that there is no polynomial time algorithm with approximation ratio o(m/ log m). We note here that our lower bound is information-theoretic and is not based on any computational com-plexity assumptions. Moreover, it rules out any algorithm that makes a polynomial number of queries, not only those that run in polynomial time.Proof of Theorem 8. Let g : S → R≥0 be a function such that(cid:12)g(T ) =10if |T | ≥ m/2;otherwise.Moreover, for each subset T∗ ⊆ S, let f T ∗ : S → R≥0 denote the functionf T ∗ (T ) =(cid:12)10if |T | ≥ m/2 or Totherwise.∗ ⊆ T ;That is, f T ∗ is g together with a planted solution T∗.∗Let TConsider any algorithm A that makes at most mc/8 queries. Assume for the moment that A is deterministic. Let us ex-amine a run of A when the agent’s utility function is g. Suppose that A’s queries to g are on the sets T 1, T 2, . . . , T (cid:2)mc/8(cid:3) ⊆ S.be a subset of S of size (cid:2)c log m/4(cid:3) chosen uniformly at random. Consider the queries that A makes when ⊆ S. For each j =(cid:15)i ) for all i = 1, 2, . . . , j − 1, then A goes through the same computation route (cid:15)(cid:15)j . Moreover, when both runs share the same computational route so far and T j = Tj , (cid:15)(cid:15)j) as follows. First, if |T j| ≥ m/2, then g(T j) is always equal to f T ∗ (Tj). the agent’s utility function is f T ∗ ; suppose that the queries made are on the sets T1, 2, . . . , (cid:2)mc/8(cid:3), if T i = Tfor both g and f T ∗ , and hence T j = Twe can bound the probability that g(T j) (cid:16)= f T ∗ (TOtherwise, we have(cid:15)i and g(T i) = f T ∗ (T(cid:15)2, . . . , T(cid:15)(cid:2)mc/8(cid:3)(cid:15)1, TPr[g(T j) (cid:16)= f T ∗ (T(cid:15)j)] = Pr[g(T j) (cid:16)= f T ∗ (T j)] = Pr[T∗|, this probability is 0. Else, since T j is independent of T∗ ⊆ T j].If |T j| < |T∗, we can bound the probability asPr[T∗ ⊆ T j] ==(cid:5)(cid:4)(cid:5)(cid:4)|T j |(cid:2)c log m/4(cid:3)m(cid:2)c log m/4(cid:3)(cid:9) (cid:6)|T j|m(cid:6)|T j| − 1m − 1(cid:9)(cid:6). . .|T j| − (cid:2)c log m/4(cid:3) + 1m − (cid:2)c log m/4(cid:3) + 1(cid:9)P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114109(cid:9)(cid:2)c log m/4(cid:3)(cid:6)≤|T j|m−(cid:2)c log m/4(cid:3)≤ 2≤ 2m−c/4.−c/4) · mc/8 =By the union bound, the probability that the two sequences of queries are not identical is at most (2m−c/8, which is less than 1/2 when m is sufficiently large. Furthermore, observe that when the two sequences are identical, 2mA must output an agreeable subset with respect to the utility function g; any such set is of size at least m/2. Thus, the expected size of the output of A when given the utility function f T ∗ is more than m/2 · (1/2) = m/4. However, the optimal agreeable set for f T ∗ has size only (cid:2)c log m/4(cid:3). As a result, the expected size of the output of A is more than m/(c log m)times the optimum, as desired.Finally, note that if A is randomized, we can use the above argument on each choice of randomness and average over all the choices, which gives a similar conclusion. (cid:2)We remark that the same result holds even if we require the utility function of the agent to be subadditive or submodu-lar.4 To obtain the proof for a subadditive utility function, for any T (cid:16)= ∅ such that g(T ) = 0, we set instead g(T ) = 1/2; we perform an analogous modification to f T ∗ . Subadditivity holds for g sinceg( A ∪ B) ≤ 1 = 1/2 + 1/2 ≤ g( A) + g(B)for any A, B (cid:16)= ∅, and similarly for f T ∗ . The rest of the proof then proceeds as before.On the other hand, more work is required to adapt the proof to submodular functions. In particular, we let k = (cid:2)c log m/4(cid:3)and define g as follows:g(T ) =⎧⎪⎨⎪⎩11 −|T |k+112|T |−k(k+1)if |T | ≥ m/2;if k ≤ |T | < m/2;otherwise.Likewise, for any T such that originally f T ∗ (T ) = 0, we modify the value of f T ∗ (T ) to be the same as g(T ). One can check that g and f T ∗ are submodular, and the proof again proceeds as before.4.2. Additive utilities(cid:17)In this section, we assume that the agents’ preferences are represented by additive utility functions. Each agent i has some nonnegative utility ui(x j) for item x j , and ui(T ) =x∈T ui(x) for any subset of items T ⊆ S.Clearly, the problem of deciding whether there exists an agreeable set of a certain size is in NP. The following theorem shows that it is NP-complete, even when there are two agents. Note that if there is only one agent, it is easy to find an optimal agreeable set by repeatedly choosing an item that yields the highest utility to the agent among the remaining items until the set of chosen items is agreeable.non-negative integers, decide whether there exists a subset B ⊆ A such that |B| = | A \ B| = | A|/2 and (cid:17)For the hardness proof, we will reduce from the following problem called Balanced 2-Partition: Given a multiset A of a∈ A\B a =a∈ A a/2. Like the well-known 2-Partition problem where the cardinality constraint is not included, Balanced 2-Partitiona∈B a =(cid:17)(cid:17)is NP-hard, as shown in the following lemma.Lemma 6. Balanced 2-Partition is NP-hard.Proof. We reduce from 2-Partition, a problem in which a multiset B of positive integers is given and the goal is to decide whether there exists a multiset T ⊆ B such that b∈T b =b∈B\T b. 2-Partition is known to be NP-complete (see, e.g., [24]).(cid:17)(cid:17)Given a 2-Partition instance, we create a Balanced 2-Partition instance as follows. Let A be the multiset containing all elements of B and |B| additional zeros. Clearly, the reduction runs in polynomial time. We show that B is a YES instance of 2-Partition if and only if A is a YES instance of Balanced 2-Partition.(YES Case) Suppose that B is a YES instance of 2-Partition, i.e., there exists T ⊆ B such that S ⊆ A be the multiset containing all elements of T and |B| − |T | additional zeros. Clearly, |S| = |B| = | A|/2 and (cid:17)(cid:17)(cid:17)b∈T b =b∈B b/2 =a∈ A a/2, meaning that A is a YES instance of Balanced 2-Partition as desired.(cid:17)(cid:17)b∈T b =(cid:17)b∈B\T b. Let a∈S a =4 A function f : S → R≥0 is said to be submodular if f ( A ∪ {x}) − f ( A) ≥ f (B ∪ {x}) − f (B) for any A ⊆ B ⊆ S and x ∈ S\B. Any submodular function is also subadditive.110P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114(NO Case) We prove the contrapositive; suppose that A is a YES instance of Balanced 2-Partition. This means that there a∈ A\S a. Let T be the subset of B containing all elements of B whose (cid:17)a∈ A\S a =b∈B\T b. Hence B is a YES exists S ⊆ A of size | A|/2 = |B| such that corresponding elements are included in S. Clearly, we have instance of 2-Partition. (cid:2)b∈T b =a∈S a =a∈S a =(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)Theorem 9. For two agents with additive utility functions, it is NP-hard to decide whether there is an agreeable set of size exactly m/2.Proof. The reduction from Balanced 2-Partition proceeds as follows. Let a1, . . . , a| A| be the elements of A. The set Scontains | A| items x1, . . . , x| A|, each associated with an element of A. The utility functions are then defined by u1(xi) = aiand u2(xi) = M − ai , where M =a∈ A a. We show next that this reduction is indeed a valid reduction.(cid:17)(cid:17)(cid:17)(YES Case) Suppose that there exists B ⊆ A such that |B| = | A|/2 and a∈B a =a∈ A a/2. Let T be the set of all items corresponding to the elements of B. It is obvious that T has size | A|/2 = m/2 and that T is agreeable.(NO Case) We prove the contrapositive; suppose that there is an agreeable subset T ⊆ S of size m/2. Let B ⊆ A be the x∈S\T ui(x) for i = 1, 2. When i = 1, a∈ A a/2. It follows set of elements corresponding to the items in T . Since T is agreeable, this implies that (cid:17)that a∈ A a/2. When i = 2, using the fact that |T | = m/2, we have a∈ A a/2. Since |B| = m/2 = | A|/2, this concludes the proof. (cid:2)x∈T ui(x) ≥a∈B a ≤a∈B a ≥a∈B a =(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)(cid:17)Theorem 9 shows that the problem is weakly NP-hard even when there are two agents. Nevertheless, when the number of agents is constant, the following theorem shows that there exists a pseudo-polynomial time dynamic programming algorithm for computing an optimal agreeable set. In particular, the problem is not strongly NP-hard for any constant number of agents.Theorem 10. For any constant number of agents with additive utility functions, there exists a pseudo-polynomial time algorithm that computes an agreeable set of minimum size.Proof. The algorithm uses dynamic programming. Assume that the utilities of agent i for the items are nonnegative integers (cid:15) ≤ m and each tuple with sum σi . We construct a table (cid:9) of size (m + 1)(σ1 + 1) . . . (σn + 1), where for each 0 ≤ m(cid:15), y1, . . . , yn) of the table corresponds to the minimum number of items from ( y1, . . . , yn) with 0 ≤ yi ≤ σi , the entry (cid:9)(mamong the items x1, x2, . . . , xm(cid:15) that we need to include so that agent i has utility exactly yi for all i (if this is achievable). Initially we have (cid:9)(0, 0, . . . , 0) = 0 and (cid:9)(min increasing order. For each m(cid:15), y1, . . . , yn) = ∞ otherwise. We then iterate through the values of m(cid:15) ≥ 1, we update the entries of the table as follows:(cid:15)• If ui(xm(cid:15) ) ≤ yi for all i and(cid:4)m1 + (cid:9)(cid:4)(cid:15), y1, . . . , yn) = 1 + (cid:9) m(cid:15), y1, . . . , yn) = (cid:9)(mlet (cid:9)(m• Else, let (cid:9)(m(cid:5)(cid:15) − 1, y1 − u1(xm(cid:15) ) . . . , yn − un(xm(cid:15) )< (cid:9)(m(cid:15) − 1, y1, . . . , yn),(cid:5)(cid:15) − 1, y1 − u1(xm(cid:15) ) . . . , yn − un(xm(cid:15) )(cid:15) − 1, y1, . . . , yn)..Finally, we look up the entries (cid:9)(m, y1, . . . , yn) such that yi ≥ σi/2 for all i and return the minimum value over all such entries. The algorithm runs in time O (mσ1 . . . σn). Note that if we also want to return an agreeable set (rather than just the size), we can also keep track of the sets of items along with the values in our table. (cid:2)While there is a pseudo-polynomial time algorithm for the problem when the number of agents is constant, we show next that if the number of agents is not constant, the problem becomes strongly NP-hard. In other words, there is no pseudo-polynomial time algorithm for this variant unless P = NP.Theorem 11. When the number of agents is not constant, it is strongly NP-hard to decide whether there is an agreeable set of size exactly (m + 1)/2.(cid:15)Proof. We reduce from 3SAT. Given a 3SAT formula φ with mvariables y1, y2, . . . , yn(cid:15) , let (cid:15) + 1agents, where we abuse notation and call the agents C1, C2, . . . , Cm(cid:15) , y1, y2, . . . , yn(cid:15) , and m = 2nthere be n = mitems correspond to all the literals y1, ¬ y1, y2, ¬ y2, . . . , yn(cid:15) , ¬ yn(cid:15) and the remaining item is called a. We items, where 2nassume without loss of generality that each clause of φ has at least two variables—it is obvious that every 3SAT formula can be transformed into this form in polynomial time. The utility functions of the agents are defined byclauses C1, C2, . . . , Cm(cid:15) on n(cid:15) + n(cid:15)(cid:15)(cid:15)(cid:12)uCi (b) =10if b = a or the literal b is present in Ci;otherwise;andP. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114111u yi (b) =(cid:12)10if b = a, b = yi, or b = ¬ yi;otherwise.We show next that this is a valid reduction. First, note that all of the integer parameters are polynomial in the size of the input. Hence, we are left to show that YES and NO instances of 3SAT map to YES and NO instances of our problem respectively.(YES Case) Suppose that there exists an assignment that satisfies φ. For each yi , let bi be the literal of yi that is true according to this assignment. Let T = {a, b1, b2, . . . , bn(cid:15) }. Since each clause C j is satisfied by the assignment, we have (cid:17)x∈T uC j (x) ≥ 2, and therefore T (cid:5)C j S \ T . Moreover, for each variable yi , we have n(cid:17)(cid:15) + 1 = (m + 1)/2 as i=1 uC j (bi) ≥ 1. It follows that x∈T u yi (x) = 2, which also implies that T (cid:5) yi S \ T . As a result, T is an agreeable set of size n(cid:17)(cid:15)desired.(NO Case) We prove the contrapositive; suppose that there exists an agreeable set T ⊆ S of size (m + 1)/2 = n(cid:15) + 1. We assume without loss of generality that a ∈ T ; indeed, since the utility of any agent for a is at least as much as the utility of the agent for any other item, if a /∈ T we can replace an arbitrary item in T by a and maintain the agreeability of T .Since T (cid:5) yi S \ T , at least one literal corresponding to yi is included in T . Moreover, since the size of T is n(cid:15) + 1 and a ∈ T , exactly one literal of each yi is in T ; let bi be this literal. Consider the assignment to the variables such that all the bi ’s are set to true. Since T (cid:5)C j S \ T for every C j and C j contains at least two literals, at least one literal in C j is set to true by this assignment. Hence the assignment satisfies the formula φ. (cid:2)Given that computing an agreeable set of minimum size is NP-hard, it is natural to attempt to find an approximation algorithm for the problem. When the utilities are additive, this turns out to be closely related to approximating the classical problem Set Cover. In Set Cover, we are given a ground set U and a collection C of subsets of U . The goal is to select a minimum number of subsets whose union is the entire set U .Set Cover was one of the first problems shown to be NP-hard in Karp’s seminal paper [28]. Since then, its approximability has been intensively studied and is now well understood. A simple greedy algorithm yields a (ln |U | + 1)-approximation for the problem [27,36]. On the other hand, a long line of work in hardness of approximation [3,20,38,42,45] culminates in Dinur and Steurer’s work [19], in which the NP-hardness of approximating Set Cover within a factor of (1 − ε) ln |U | was proved for every constant ε > 0.The first connection we will make between Set Cover and approximating minimum size agreeable set is on the negative side—we show that any inapproximability result for Set Cover can be translated to that for approximating minimum size agreeable set as well. To do so, we first state Dinur and Steurer’s result more precisely.Lemma 7 ([19]). For every constant ε > 0, there is a polynomial time reduction from any 3SAT formula φ to a Set Cover instance (U , C) and a function f (U ) which is polynomial in |U | such that• (Completeness) if φ is satisfiable, the optimum of (U , C) is at most f (U );• (Soundness) if φ is unsatisfiable, the optimum of (U , C) is at least ((1 − ε) ln |U |) f (U ).We are now ready to prove the hardness of approximating minimum size agreeable set.Theorem 12. For any constant δ > 0, it is NP-hard to approximate minimum size agreeable set to within a factor (1 − δ) ln n of the optimum.Proof. Let ε = δ/2. Given a 3SAT formula φ, we first use Dinur and Steurer’s reduction to produce a Set Cover instance (U , C). Let there be |U | agents, each of whom is associated with a distinct element of U ; it is convenient to think of the set of agents as simply U . As for the items, let there be one item for each subset C ∈ C and additionally let there be one special item called t. In other words, S = C ∪ {t}.The utility function of each agent a ∈ U is then defined byua(s) =⎧⎪⎨|{C ∈ C | a ∈ C}| − 11⎪⎩0if s = t;if s ∈ C and a ∈ s;otherwise.We show next that this reduction indeed gives the desired inapproximability result.(Completeness) If φ is satisfiable, then there are f (U ) subsets from C that together cover U . We can take T to contain all of these subsets and the special item t. Clearly, T has size f (U ) + 1 and is agreeable.(Soundness) If φ is unsatisfiable, then any set cover of (S, C) contains at least ((1 − ε) ln |U |) f (U ) subsets. Consider any agreeable set T . For each a ∈ U , from our definition of ua(t), the set T must include at least one subset that contains a. In other words, T \ {t} is a set cover of (S, C). Hence, |T | ≥ ((1 − ε) ln |U |) f (U ).112P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114((1−ε) ln |U |) f (U )f (U )+1The two parts together imply that it is NP-hard to approximate minimum size agreeable set to within a factor of the optimum. This ratio is at least (1 − δ) ln n when f (U ) ≥ 2/δ, which can be assumed without loss of generality (since otherwise we can solve the Set Cover instance in time |U |O ( f (U )) = |U |O (1), implying that P = NP). (cid:2)Unlike the above inapproximability result, it is unclear how algorithms for Set Cover can be used to approximate mini-mum size agreeable set. Fortunately, our problem is in fact a special case of a generalization of Set Cover called Covering Integer Program (CIP), which can be written as follows:minimize c T xsubject to Ax ≥ 1,0 ≤ x ≤ u,x ∈ Zm,where c, u ∈ Rm and A ∈ Rn×m are given as input.The problem of finding a minimum size agreeable set can be formulated in this form by setting c, u and A as follows:cs = 1us = 1Ai,s = 2ui(s)(cid:17)s(cid:15)∈S ui(s(cid:15))∀s ∈ S∀s ∈ S∀i = 1, 2, . . . , n, ∀s ∈ SSimilarly to Set Cover, the approximability of CIP is well studied. In particular, the problem is known to be approximable to within a factor O (log n) of the optimum in polynomial time [32]. This immediately implies an O (log n)-approximation algorithm for finding a minimum size agreeable set as well.Theorem 13. For agents with additive utility functions, there exists a polynomial-time O (log n)-approximation algorithm for comput-ing a minimum size agreeable set.5. DiscussionIn this paper, we introduce the notion of agreeability, which captures an agent’s acceptance of the set of items allo-cated to her group, and present a number of fundamental results on the notion. For any number of agents and items, we derive a tight upper bound on the number of items that may need to be included in an agreeable subset. We also present polynomial-time algorithms for computing an agreeable set whose size matches the upper bound or approximates the optimal size for a given instance using well-known models for representing preferences.Our work suggests a number of possible future directions. With polynomial-time algorithms for computing an agreeable set whose size matches the upper bound for two and three agents in hand, a natural question is whether we can similarly obtain efficient algorithms when there are more agents. The algorithm for three agents is already quite involved, so one might suspect that the problem is intractable for larger numbers of agents. If that were to be the case, it would be useful to have a confirmation by means of a hardness result, even for some fixed large number of agents. Since the problem is a search problem for which we know that a solution always exists, it cannot be NP-hard, but could potentially be hard with respect to a subclass of TFNP such as PPAD or PLS. One could also investigate the complexity of deciding the existence of agreeable subsets of certain sizes for which there is no guarantee of existence, as we do in Theorems 9 and 11.Another avenue for future work is to extend the notion of agreeability to more general settings. For instance, a motivating example that we give is that the group of agents receive some items as prizes from a team competition that they won against another group. One could consider a generalization where there are more than two competing groups. However, in this case there are several reasonable ways of defining agreeability, since we do not know how the remaining items are distributed among the remaining groups. One possibility is to require that each agent in the group finds the set of items to be worth at least 1/k of the whole set, where k is the number of groups. An alternative definition is to impose the condition that for each agent in the group, there is a way to partition the remaining items among the other k − 1 groups so that the agent does not envy any of the other groups. While both definitions reduce to our notion of agreeability in the case of two groups and additive utilities, the equivalence ceases to hold when there are at least three groups or if utilities are not additive. As such, the results that we can obtain are likely to depend on the definition that we use.An interesting related question that goes beyond our setting is the following: When is it possible to obtain a fair alloca-tion between two or more groups of agents, where, like in our work, agents in the same group share the same set of items? As mentioned in the introduction, this question has been a subject of recent attention, but much work remains to be done. For example, in the traditional fair division setting with one agent per group, the undercut procedure [16] is an elegant method for computing an envy-free allocation whenever one exists. Whether we can come up with a similar procedure for the group setting is an appealing direction that we leave for future research.P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114113AcknowledgementsThis work was partially supported by NSF Awards CCF-1655215, CCF-1813188, CCF-1815434, by the European Research Council (ERC) under grant number 639945 (ACCORD), and by a Stanford Graduate Fellowship. The authors would like to thank Nikhil Bansal and Aleksandar Nikolov for helpful discussions, and the reviewers of the 25th International Joint Con-ference on Artificial Intelligence (New York, USA, July 2016), the 26th International Joint Conference on Artificial Intelligence (Melbourne, Australia, August 2017), and Artificial Intelligence Journal for many insightful comments.References[1] David S. Ahn, Santiago Oliveros, Combinatorial voting, Econometrica 80 (1) (2012) 89–141.[2] Noga Alon, Splitting necklaces, Adv. Math. 63 (3) (1987) 247–253.[3] Noga Alon, Dana Moshkovitz, Shmuel Safra, Algorithmic construction of sets for k-restrictions, ACM Trans. Algorithms 2 (2) (2006) 153–177.[4] Noga Alon, Joel H. Spencer, The Probabilistic Method, 3rd edition, Wiley Publishing, 2008.[5] Georgios Amanatidis, Evangelos Markakis, Afshin Nikzad, Amin Saberi, Approximation algorithms for computing maximin share allocations, ACM Trans. [6] Haris Aziz, Markus Brill, Vincent Conitzer, Edith Elkind, Rupert Freeman, Toby Walsh, Justified representation in approval-based committee voting, Soc. [7] Haris Aziz, Serge Gaspers, Simon Mackenzie, Toby Walsh, Fair assignment of indivisible objects under ordinal preferences, Artif. Intell. 227 (2015) Algorithms 13 (4) (2017) 52.Choice Welf. 48 (2) (2017) 461–485.71–92.[8] Imre Bárány, A short proof of Kneser’s conjecture, J. Comb. Theory, Ser. A 25 (3) (1978) 325–326.[9] Salvador Barberà, Walter Bossert, Prasanta K. Pattanaik, Ranking sets of objects, in: Salvador Barberà, Peter Hammond, Christian Seidl (Eds.), Handbook of Utility Theory, vol. 2, Kluwer Academic Publishers, 2004, pp. 893–977.[10] Kshipra Bhawalkar, Tim Roughgarden, Welfare guarantees for combinatorial auctions with item bidding, in: Proceedings of the 22nd Annual ACM–SIAM Symposium on Discrete Algorithms, 2011, pp. 700–709.Intelligence, 2018, pp. 91–97.[11] Arpita Biswas, Siddharth Barman, Fair division under cardinality constraints, in: Proceedings of the 27th International Joint Conference on Artificial [12] Géza Bohus, On the discrepancy of 3 permutations, Random Struct. Algorithms 1 (2) (1990) 215–220.[13] Sylvain Bouveret, Ulle Endriss, Jérôme Lang, Fair division under ordinal preferences: computing envy-free allocations of indivisible goods, in: Proceed-ings of the 19th European Conference on Artificial Intelligence, 2010, pp. 387–392.[14] Sylvain Bouveret, Jérôme Lang, Efficiency and envy-freeness in fair division of indivisible goods: logical representation and complexity, J. Artif. Intell. Res. 32 (2008) 525–564.30 (2) (2016) 259–290.Welf. 39 (2–3) (2012) 615–631.[15] Sylvain Bouveret, Michel Lemaître, Characterizing conflicts in fair division of indivisible goods using a scale of criteria, Auton. Agents Multi-Agent Syst. [16] Steven J. Brams, D. Marc Kilgour, Christian Klamler, The undercut procedure: an algorithm for the envy-free division of indivisible items, Soc. Choice [17] Ioannis Caragiannis, David Kurokawa, Hervé Moulin, Ariel D. Procaccia, Nisarg Shah, Junxing Wang, The unreasonable fairness of maximum Nash welfare, in: Proceedings of the 17th ACM Conference on Economics and Computation, 2016, pp. 305–322.[18] John P. Dickerson, Jonathan Goldman, Jeremy Karp, Ariel D. Procaccia, Tuomas Sandholm, The computational rise and fall of fairness, in: Proceedings of the 28th AAAI Conference on Artificial Intelligence, 2014, pp. 1405–1411.[19] Irit Dinur, David Steurer, Analytical approach to parallel repetition, in: Proceedings of the 46th Symposium on Theory of Computing, 2014, pp. 624–633.[20] Uriel Feige, A threshold of ln n for approximating set cover, J. ACM 45 (4) (1998) 634–652.[21] Uriel Feige, On maximizing welfare when utility functions are subadditive, SIAM J. Comput. 39 (1) (2009) 122–142.[22] Uriel Feige, Vahab S. Mirrokni, Jan Vondrák, Maximizing non-monotone submodular functions, SIAM J. Comput. 40 (4) (2011) 1133–1153.[23] Duncan K. Foley, Resource allocation and the public sector, Yale Econ. Essays 7 (1) (1967) 45–98.[24] Michael R. Garey, David S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. Freeman, 1979.[25] Laurent Gourvès, Agreeable sets with matroidal constraints, J. Comb. Optim. (2018), https://doi .org /10 .1007 /s10878 -018 -0327 -1.[26] Joshua E. Greene, A new short proof of Kneser’s conjecture, Am. Math. Mon. 109 (10) (2002) 918–920.[27] David S. Johnson, Approximation algorithms for combinatorial problems, J. Comput. Syst. Sci. 9 (3) (1974) 256–278.[28] Richard M. Karp, Reducibility among combinatorial problems, in: Proceedings of Complexity of Computer Computations, 1972, pp. 85–103.[29] Ian Kash, Ariel D. Procaccia, Nisarg Shah, No agent left behind: dynamic fair division of multiple resources, J. Artif. Intell. Res. (51) (2014) 579–603.[30] Martin Kneser, Aufgabe 360, Jahresber. Dtsch. Math.-Ver. 58 (2) (1955) 27.[31] David A. Kohler, R. Chandrasekaran, A class of sequential games, Oper. Res. 19 (2) (1971) 270–277.[32] Stavros G. Kolliopoulos, Neal E. Young, Approximation algorithms for covering/packing integer programs, J. Comput. Syst. Sci. 71 (4) (2005) 495–505.[33] David Kurokawa, Ariel D. Procaccia, Junxing Wang, When can the maximin share guarantee be guaranteed?, in: Proceedings of the 30th AAAI Confer-ence on Artificial Intelligence, 2016, pp. 523–529.[34] Jérôme Lang, Logical preference representation and combinatorial vote, Ann. Math. Artif. Intell. 42 (1) (2004) 37–71.[35] Paul Lévy, Théorie de l’addition des variables aléatoires, Gauthier–Villers, 1937.[36] László Lovász, On the ratio of optimal integral and fractional covers, Discrete Math. 13 (4) (1975) 383–390.[37] László Lovász, Kneser’s conjecture, chromatic number and homotopy, J. Comb. Theory, Ser. A 25 (3) (1978) 319–324.[38] Carsten Lund, Mihalis Yannakakis, On the hardness of approximating minimization problems, J. ACM 41 (5) (1994) 960–981.[39] Pasin Manurangsi, Warut Suksompong, Asymptotic existence of fair divisions for groups, Math. Soc. Sci. 89 (2017) 100–108.[40] Pasin Manurangsi, Warut Suksompong, Computing an approximately optimal agreeable set of items, in: Proceedings of the 26th International Joint Conference on Artificial Intelligence, 2017, pp. 338–344.[41] Jiˇrí Matoušek, A combinatorial proof of Kneser’s conjecture, Combinatorica 24 (1) (2004) 163–170.[42] Dana Moshkovitz, The projection games conjecture and the NP-hardness of ln n-approximating set-cover, Theory Comput. 11 (2015) 221–235.[43] Alantha Newman, Ofer Neiman, Aleksandar Nikolov, Beck’s three permutations conjecture: a counterexample and some consequences, in: Proceedings of the 53rd Annual IEEE Symposium on Foundations of Computer Science, 2012, pp. 253–262.[44] Kirk Pruhs, Gerhard J. Woeginger, Divorcing made easy, in: Proceedings of the 6th International Conference on Fun with Algorithms, 2012, pp. 305–314.[45] Ran Raz, Shmuel Safra, A sub-constant error-probability low-degree test, and a sub-constant error-probability PCP characterization of NP, in: Proceed-ings of the 29th Annual ACM Symposium on Theory of Computing, 1997, pp. 475–484.[46] Erel Segal-Halevi, Shmuel Nitzan, Proportional cake-cutting among families, CoRR, arXiv:1510 .03903, 2015.114P. Manurangsi, W. Suksompong / Artificial Intelligence 268 (2019) 96–114[47] Erel Segal-Halevi, Shmuel Nitzan, Envy-free cake-cutting among families, CoRR, arXiv:1607.01517, 2016.[48] Erel Segal-Halevi, Warut Suksompong, Democratic fair allocation of indivisible goods, in: Proceedings of the 27th International Joint Conference on [49] Forest W. Simmons, Francis Edward Su, Consensus-halving via theorems of Borsuk–Ulam and Tucker, Math. Soc. Sci. 45 (1) (2003) 15–25.[50] Piotr Skowron, Piotr Faliszewski, Jérôme Lang, Finding a collective set of items: from proportional multirepresentation to group recommendation, Artif. [51] Hugo Steinhaus, The problem of fair division, Econometrica 16 (1) (1948) 101–104.[52] Warut Suksompong, Assigning a small agreeable set of indivisible items to multiple players, in: Proceedings of the 25th International Joint Conference Artificial Intelligence, 2018, pp. 482–488.Intell. 241 (2016) 191–216.on Artificial Intelligence, 2016, pp. 489–495.[53] Warut Suksompong, Approximate maximin shares for groups of agents, Math. Soc. Sci. 92 (2018) 40–47.[54] Warut Suksompong, Resource Allocation and Decision Making for Groups, PhD Thesis, Stanford University, 2018.[55] Hal R. Varian, Equity, envy, and efficiency, J. Econ. Theory 9 (1974) 63–91.[56] Lirong Xia, Jérôme Lang, A dichotomy theorem on the existence of efficient or neutral sequential voting correspondences, in: Proceedings of the 21st International Joint Conference on Artificial Intelligence, 2009, pp. 342–347.