Artificial Intelligence 89 ( 1997) 317-364 Artificial Intelligence Ramification and causality Michael Thielscher * International Computer Science Institute. 1947 Center Street, Berkeley, CA 94704-1198, USA Received December 1995; revised June 1996 Abstract In formal systems laws describing dependencies the problem in action specifications the ramification problem denotes represented among components for reasoning about actions, indirect effects. These effects are not explicitly from general of handling but follow of the world state. An adequate treatment of indirect effects requires a suitably weakened version of the general law of persistence. It also requires a method to avoid unintuitive changes suggested by the aforementioned dependency laws. We propose a solution to the ramification problem that uses directed relations between two single effects, stating the circumstances under which the occurrence the second. We argue for the necessity of an approach based on causality by of the first causes principle elaborating the limitations of common paradigms employed to handle ramifications-the of categorization and the policy of minimal change. Our abstract solution is realized on the basis of a particular action calculus, namely, the fluent calculus. Keywords: Temporal reasoning; Reasoning about actions; Ramification problem; Causality; Fluent calculus 1. Introduction The ability to reason about changing environments, which effects of one’s own actions and explaining observed phenomena, basis for understanding in their habitat. Formal approaches to model This research area was initiated by McCarthy actions plays a fundamental the world to an extent sufficient this ability have a long [ 3 11, who claimed role in common involves predicting the serves humans as a to survive and to act intelligently tradition that reasoning in AI. about Drawing conclusions about dynamic is grounded on formal specifica- tions of what effects are caused by the execution of a particular obviously to provide an exhaustive description defining infeasible action. Since the result of executing it is * On leave from FG Intellektik, TH Darmstadt. E-mail: michaelt@icsi.berkeley.edu. 0004.3702/97/$17.00 Copyright @ 1997 Elsevier Science B.V. All rights reserved. PUSOOO4-3702(96)00033-l sense. environments 318 M. Thielscher/Artijiciai lntelli~ence 89 (I 997) 317-364 in each possible that they affect-while the rest of the world is subject state of the world, action specifications i.e., is assumed in complex domains should be restricted an action to the to the part of the world to remain stable. Yet even this approach becomes law of ,~e~~istence, if one tries to put all effects into a single, complete unmanageable an action may cause only a small number of direct changes, specification. Although that can be hard to foresee. they in turn may in the first place causes For instance, nothing but a change of the switch’s position. However, the switch may be part of an electric circuit so that, say, some light bulb is turned off as a side effect, which in turn room by running against a may cause someone chair that, as a consequence, the fire alarm and so on and so forth.’ initiate a long chain of indirect effects the action of toggling a switch, which set whose implosion activates in a suddenly darkened falls into a television to hurt himself consider The task, then, is to design a framework are not assumed specifications the ramification problem. 2 A satisfactory treatment of the following two major issues. to formalize action scenarios where action to completely describe all possible effects. This is called requires a successful to this problem solution First, we need an appropriately weakened version of the aforementioned law of persis- that are unaffected by the tence that applies only to those parts of the world description the to this problem, we suggest keeping action’s direct and indirect effects. As a solution through the world description obtained law of persistence as it stands while considering result. Indirect effects are then accommodated its application merely as an intermediate by further state obtains. This method accounts perfectly both for rigorous persistence of unaffected parts and for arbitrarily complex chains of indirect effects. until an overall satisfactory successor reasoning from Second, dependencies indirect effects typically are consequences between world description components of additional, general knowledge of domain-specific (usually called not all effects suggested puenrs)-but the from are desirable standpoint of causality. As an example, consider the simple electric circuit depicted in Fig. 1, which consists of a battery, two switches and a light bulb. The obvious these components may formally be described by the logic expression connection between SM/~ A SW? E light, i.e., the light is on if and only if both switches are on. Now suppose state displayed, where both WI and light we toggle in the particular are false while sw2 is true. Then, besides true, we that the light bulb turns on. This indirect effect is inspired by the formula also expect the direct effect of SWI becoming the first switch this perspective the above may not only be described as “the fire alarm the switch”, but also as, say, “the chair the distinction between in this context concerns step and those which deserve separate state transitions indirect effects occurring during a single (also called delayed effects). state after having hits the the next state transition)“. As a reasonable, albeit informal, guidance we suggest a single agent himself, has the summarize what happens until someone, e.g., is activated in the successor (and presumably in the successor is falling state ’ A crucial question world’s state transition E.g., toggled television set during state transition possibility should to intervene by acting again (stopping the chair from falling, the reasoning for instance) * The naming was suggested cation problem to exploit aim of restricting in exactly logical consequences search space. in [ I5 1, inspired by [ IO 1. The latter, however, was not devoted the above sense, contrary (called ramifications) to what is often claimed; of goal specifications to the ramifi- rather, this thesis describes how in planning problems, with the M. Thielscher/Artijcial Intelligence 89 (1997) 317-364 319 Fig. I. An electric circuit consisting of a battery, both switches are closed. The respective by a unique propositional state of each of the three dynamic components constant, where negation is denoted by a bar on top of the respective symbol. involved is described two switches, and a light bulb, which is on if and only if expected the intuitively the implication SWI A SW:! > light. However, despite result, the mere knowledge of the connection between this just mentioned, which includes being the switches and the bulb is not sufficient: Notice that the above formula, SWI ASW~ = light, that instead of the light also entails is that the second one being jumps turned on, the indirect effect of toggling its position-a sw1 A light > ~2, which suggests the first switch the implication result which contradicts our intuition. of merely taking into account formalizations The reason for the inadequacy logical as pure formulas-usually pendencies formulas do not include causal information. More precisely, -. sw2 IS clearly one observes false. However, exploiting true in any state and, therefore, contains evidential information, sw1 to be true and light to be false then it is safe to conclude called domain constraints-is the implication for reasoning about causality As a solution this implication to the second problem, we propose of de- that these swl A light > that is, if that sw2 is is misleading. 3 in the form of so-called cuusuZ relationships, which formalize statements to incorporate like causality A change of FFi to SWI causes a change of light to light, provided sw2 is true. the direct effects of executing an action in a particular state of the world, indirect effects one by one, to accommodate After computing we will apply suitable causal relationships, until a satisfactory each of which only caused by a direct one and also for indirect effects the relationship effects. To illustrate result obtains. Employing the latter, consider two particular relates effects, accounts a collection of single causal relationships, for several in turn causing indirect effects indirect further A change of light provided detector-activated is true to light causes a change of light-detector to light-detector, in addition specification an automated procedure information of a formal automatic generation to the one above. Since we do not expect the designer of a formal domain to create a complete set of suitable causal relationships, we will also present to extract them from given domain constraints plus some general influence other fluents. On the basis and their specifying which fluents may possibly theory of actions in Section 2)) causal relationships (to be defined are formally introduced in Section 3. 3 See [ 33 I for a general discussion on the different natures of causal and evidential implications. 320 M. Ti~ielscher/Arti~cial Intelligence 89 (I 997) 317-364 Yet the purpose of this article is not only to suggest incorporating but also to supply evidence causal information the principle of categorization to cope with the ramification that something like problem. To this of existing paradigms aimed at and the policy of minimal that are fluents (e.g., a change of light is considered more that some resist any fluents is the assumption of minimal approaches distinguish trying namely, to change relationships is inevitable when the limited expressiveness by means of our causal this approach end, in Section 5 we illustrate ramifications, handling speaking, categorization-based change. Roughly likely more than other fluents than a change of sw2). However, we will show likely (Section 5.1) . Even more common unique categorization change, which amounts values of strictly more fluents our method captures all intuitively the original to find non-minimal reasonable comparison with related work can be found state (Section 4), expected a resulting to rejecting state if it is obtained by changing the than necessary. While we will offer a formal proof that to that we are also able solutions, which are perfectly acceptable provided all changes are a detailed in Section 5.2 we will illustrate states with minimal distance resulting from the standpoint of causality. On the basis of these observations, in the concluding discussion. In the second part of the paper, Section 6, we integrate tionships into a particular for the sake of simplicity first part (see Section 2), our calculus involves which correct with respect application fluent formulas as a solution the concept of causal action calculus, namely, the jiuent calculus states are described via a set of propositional rela- [ 19,201. While in the constants itself employs a more complex notion of fluent, that include quantification. The encoding will be proved and their induced by causal relationships to the formal semantics to the ramification problem. 2. A basic theory of actions In the first part of the paper, we employ a suitably theory of actions and and in this theory are states. A state is a snapshot of the change, which enables us to stress solely on the problem of domain constraints ramifications. underlying instant of time. Formally, we describe a state by assigning set of propositional i.e., the part of the world being modeled, at a particular to a fixed finite The basic entities truth-values constants. dynamic system, simple Definition 1. Let 3 be a finite set of symbols called jluent names. A juent either a fluent name f E 3 or its negation, denoted by 7. A set of fluent inconsistent set of fluent iff it contains literals. some f E 3 along with 7. A state is a maximal consistent literal is is literals Notice that formally any combination impossible the paper we assume might be considered below). Throughout fluent literal, f E 3. This notation extends E.g., for each state S we have ISI = 3. Furthermore, to sets of fluent among some fluents the following notational conventions: of truth-values denotes a state, which, however, (see If e is a that is, IfI = 171 = f where ]SI = {I[(: e E S}. then if e is a negative fluent literal literals S as follows: then by \[I we denote its affirmative component, due to specific dependencies hf. Thielscher/ArtiJicial Intelligence 89 (1997) 317-364 321 2 should be interpreted literals then by 3 we denote literals given a set F of fluent names. as IL]. In other words, f = f. Finally, the set (2: ! E S}. E.g., 7 contains if S is a set of fluent fluent all negative Example 2. To model the electric circuit depicted in Fig. 1, we use the three fluents J- = {SW, ) sw2, light} to denote, state displayed respectively, the states of the two switches and the light bulb. The current is represented by (sw1, SW:!, light}. in Fig. 1, for instance, The elements of an underlying set of fluent names can be considered to allow for statements to a particular atoms for about states. Truth and a state S are based on defining constructing formulas (propositional) falsity of such formulas with respect literal e to be true if and only if e E S. Definition 3. Let 3 be a set of fluent names. The set ofjuent formulas is inductively (contradiction) defined as follows: Each fluent literal in _??JF and T (tautology) and I are fluent formulas, and if F and G are fluent formulas and FzG.~ then so are FAG, F VG, F > G, Let S be a state and F a fluent formula, then the notion of F being true (respectively false) in S is inductively defined as follows: is false in S; literal e is true in S iff e E S; (1) T is true and I (2) a fluent (3) FAGistrueinSiffFandGaretrueinS; (4) F V G is true in S iff F or G is true in S (or both); (5) F > G is true in S iff F is false in S or G is true in S (or both); (6) F 5 G is true in S iff F and G are true in S, or else F and G are false in S. Fluent dependencies that are possible formulas provide means between particular to distinguish states that cannot occur due to specific fluents. Formulas which have to be satisfied in all states in a domain are also called domain constraints. Example 2 (continued). We employ constraint the intended This formula holds, for instance, but is false in, say, the state {swt,swz, to model relation between in the state depicted light}. the fluent formula swt A swz s light as domain the two switches and the light bulb. in Fig. 1, viz. {m, swz,light}, The second basic entity in frameworks to reason about dynamic actions, whose execution ramification fects of actions, we employ a suitably specification. Each action law consists of: causes state transitions. Again, since stress shall than on sophisticated methods of specifying simple, STRIPS-Style problem [9,23] rather environments are lie on the the direct ef- notion of action 4 As negation can be expressed through negative literals, we omit the standard connective “7”. This is just for the sake of readability as it avoids too many different forms of negation. 322 M. Thielscher/Art@cial Intelligence 89 (I 997) 317-364 l A condition C, which is a set of fluent literals all of which must be contained in the state at hand in order to apply the action law. l A (direct) resulting effect E, which is a set of fluent literals, the action law. ICI = lEl (that state after having applied For the sake of simplicity, we assume the very same set of fluent names). This enables us to obtain the direct effect by simply removing This assumption laws for a single action. and effect refer to from set C from the state at hand and adding set E to it. since we allow several does not impose a restriction of expressiveness the state resulting is, condition too, all of which hold in the Definition 4. Let F be a set of fluent names, and let A be a finite set of symbols, called action names, such that F n A = {}. A n action (C, a, E) where literals such that C, called condition, and E, called e&Sect, are consistent ICI = (El; and a E A. law is a triple sets of fluent If S is a state then an action law (Y = (C,a,E) is applicable in S iff C C S. The application of a to S yields the state (S \ C) U E. Notice that S being a state, C and E being consistent, (S \ C) U E to be a state again-not underlying laws which contains more than one applicable can be used to describe actions with nondeterministic necessarily, domain constraints. Notice also that it is possible effect. ’ and however, one which satisfies ICI = jE/ guarantee the to construct a set of action law for an action name and a state. This for two actions, Suppose our electric circuit domain allows toggling either switch. These actions are represented by the action names toggle, Example 2 (continued). namely, and toggle,, respectively, along with the four action laws ({SWI},togglq, {swI}), ({m}, Qg&, {sw2}), ({w},W&, {SWI}), ({~w2>, to&e,, (sw2)). (1) is, the only direct effect of these actions That position. When executing, the above laws is applicable due to {w} C S. Its application yields in the state S = {m, say, toggle, sw2, light}, is a change of the respective switch’s then the first of (S\ {SWI}) U{swl} = {swl,sw2,light}. Notice that our domain constraint SWI A sw2 z light is false in the resulting state. illustrates the underlying Our example law may violate specified. In the next section, we develop a method to further modify such a preliminarily resulting, of an action since only direct effects have been state in order to account that a state obtained domain constraints indirect effects. the application for additional, impossible through 5 Suppose, as an example, that a gun nondeterministically This may be formalized by the two action are applicable See [ 451 for details on how to represent and reason about nondeterministic in the state {loaded}, which suggests laws ({ }, spin, { }) and ({loaded), gets loaded or not when spinning [ 38 J spin, {loaded}). Both of them two possible outcomes, viz. {loaded} and {loaded}. its cylinder actions on this basis. M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 323 3. Causal relationships The ramification problem the resulting laws by exploiting the fact that an arbitrary number of different In theory, we could of course compile all conceivable light}, t oggle,, {SW, ,Yi@, light}). light}, by the two laws ({swl,~w~,light},togglei, toggle, arises as soon as it does not suffice is the case whenever domain constraints, which rect effects of actions. This literals violates underlying indirect effects. into action single action can be formulated. For instance, ({SWI},togg&{swi}) ({swI,m, {swI,sw2, this procedure bears may require an enormous number of action nation of indirect effects. Consider, distinguished switch switch-bulb pair in a similar fashion as in Example 2. Defining all effects of toggling separate switch solely by means of action one for each possible combination and the other n switches. The second problem with exhaustive introduction the entire set of action the di- to compute of fluent collection in turn give rise to additional, indirect effects laws for a in our running example we could replace and the state is applied result, viz. {SWI,SW~, light}. However, its inadequacy. First, it for every possible combi- for example, a model of an electric circuit where a contains a each of which additionally the laws, to the switch being operated laws is that the of the desired two major problems which demonstrate of a new domain constraint may cause, in the worst case, a re-definition laws would then require 2”+’ different laws used before. then we obtain laws to account in n sub-circuits {swt,sw2,light}) of truth-values is involved assigned If now action to 3.1. Applying causal relationships As a consequence of the above observations, we keep the given action laws but the direct effect merely as intermediate. regard a state obtained after having computed Any single indirect effect is then obtained according to a directed causal relation between specific fluents. For instance, having as direct effect a change of the first switch into its causing upper position the light bulb is on. We will formalize causal relationships in the state depicted to change in Fig. 1, this is regarded as additionally its state also, for the second switch of this kind by expressions like SWI causes light if sw2. (2) such expressions of fluent Formally, collection been considered ing computed E = {SWI}. The causal light, which supersedes in the state-effect The reason operate on state-effect pairs literals and E contains effects so far. E.g., let S = {SW, ,sw~, light} be the state obtained all (direct or indirect) the direct effect of toggle,, as described (S, E) where S is the current that have after hav- then in (2) gives rise to the indirect effect this results in the preceding section, relationship light in S. This new effect is added to E. Altogether, formalized pair ({swi , sw2, light}, {SW,, light}). for maintaining the second component, E, is that identical intermediate states S can be reached by different different, sometimes opposite which are mechanically connected treatment. Suppose, as an example, sets of effects E, each of which may require a there are two switches that they cannot be through a spring) such (say, (3) (4) state 324 M. Thielscher/Artificial Intellipmce 89 (I 997) 317-364 closed simultaneously. two causal relationships, The corresponding domain constraint, -- swt V sw2, gives rise to viz. swi causes -. SW:! If T, sw2 causes SW] if T. in toggling the first switch the state {FiFt,sw~} yields Now, {swt , sw2) if we apply the corresponding state is obtained by toggling outcomes differ considerably: while {SW,, sw2) is expected by referring application of (4). In both cases, this leads to the desired unique successor state. 6 action law in ( 1). The very same intermediate the second switch in the state {swl , SWT}. Yet the intended the final result should be {swt,sw~}, can only be achieved to the differing direct effects, {swt} and {SW*}. The former enables only the of (3) in the second case. This distinction the latter only the application to the intermediate result, {swt,sw2}, In the first case, intermediate the The formal definition of causal relationships and their application is as follows: Definition 5. Let 3 be a set of fluent names. A causal relationship of the form E causes Q if 0 where Q, is a fluent formula based on 3 and E and Q are fluent literals. is an expression Let (S, E) be a pair consisting of a state S and a set of fluent literals E, then a causal to (S, E) iff @A3 is true in S and E E E. Its U{Q} and E’ = (E\(e)) relationship E causes Q if @ is applicable application yields the pair (S’, E’) where S’ = (s\(P)) Let R be a set of causal then by (S, E) -q relationships, in R whose application to (S, E) yields (S’, E’) we denote (S’, E’). existence of an element U{Q}. the In words, a causal relationship indirect effect Q is currently that if S is a state and E is consistent, is applicable the particular effects. Notice that 5” is a state and E’ is consistent, of causal ($,EI),...,(S,,,E,) ~1,. . . , r, suchthatforeach relationships .s is among if the associated false, and its cause condition @ holds, the current implies then (S, E) +R too. ’ In what follows, we say that a sequence iff there exist pairs and 1 <i<n,riisapplicableto to a pair (SO, Eo) (Si_l,Ei_l) (S’, E’) is applicable (S;, E,). We adopt a standard notation in writing (S, E) AR( S’, E’) to indicate empty) sequence of causal relationships in R which is yields the existence of a (possibly applicable to (S, E) and yields (S’, E’). Now suppose we are given a suitable set of causal relationships and have obtained a set the direct effects of an action via Definition 4. of fluent literals S after having computed State S may violate resulting ing and (serially) state satisfying state, we compute additional, the domain constraints, the underlying applying causal relationships. domain constraints. In order to obtain a satisfactory select- in a results indirect effects by (nondeterministically) If this procedure eventually then this is called a successor state. h Other examples that require taking into account how an intermediate state is obtained will be discussed in Sections 3.3 and 5.3. ’ In order to guarantee consistency of E’, we remove the negation ij from E prior to adding Q. This is necessary because z may have been generated as a direct or indirect effect before, which has to be withdrawn. An example where this situation occurs will be discussed below, in Section 5.2. M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 325 Definition 6. Let 3 be a set of fluent names, A a set of action names, L a set of action laws, 2) a set of domain constraints, let S be a state satisfying D, and let a E A be an action name. A state S’ is a successor state of S and a iff there exists an applicable law (C, a, E) E C such that and R a set of causal relationships. Furthermore, (with respect to S) action ((S\C) (1) UEE) (2) S’ satisfies 2). -r;)n( S’, E’) for some E’, and Example 2 (continued). An adequate set of causal relationships domain consists in the following four elements: for our electric circuit swl causes light if sw2, sw2 causes light if swt, SW1 causes light if T, sw2 causes light if T. (5) In words, if either switch gets closed, then this causes the light bulb to turn on provided the other switch in a dark bulb regardless of the other switch. is already on. Conversely, opening either switch results pair the state-effect the first action law in ( 1) to the state depicted ({SW, ,swz,light}, sw2, Applying the first of the light}, yields in ({swt , sw2, light}, given causal relationships {SW,, light}). The first component of this pair satisfies the underlying domain constraint, it is the unique successor since SWI A sw2 = light, hence to ({SW,, swz, light}, {SW,}) and since no other causal relationship ({SW], sw2, light}, {SWI, light}) does not allow for further application of causal relation- ships. {SW,}). Then results is a successor state. Moreover, in Fig. 1, viz. {m, and its application is applicable, is applicable in (5) Later lationships application important in this paper, in Section 5.2, we will see that the order in which causal insofar as a different ordering may allow re- the are applied, might be crucial of different relationships. On the other hand, we can prove result of order independence in case a unique set of relationships the following is applied: Proposition 7. Let F be a set of fluent names, S a state, and E a set of JIuent literals. Furthermore, to (S, E) which yields let r-1, . . , r, be a sequence of causal relationships (n 2 0) applicable (SE) -{r,) (&,EI) +-+{rz) ... -+{r,,} (Sn,&). (6) Then, for any permutation yields rn( 11, . . . , r,(,) which is also applicable to (S, E) and which (SE) -+{r,,,,)) ($3;) *{r_,?,) ... -rl_,,,i) (S:,,E:), (7) we have S,, = S:, and E,, = E:,. Proof. For each fluent name f E F’, let k; be the number of causal relationships ri = .ei causes (1 < i < n). The application f if @i, and k7 the number of causal relationships ri = ei causes of a causal relationship ei causes pi if 0; requires 7 if @; that 326 M. Ti~iel.~cher/Artificinl Intelligence 89 (1997) 317-364 e; be true in the state at hand. Therefore, only on kf’ and k;. * Since the finally resulting truth-value of f depends (6) and (7) do not differ in this respect, we know f E S,, iff f E SA. Likewise, we have f E En iff f E EL and 7 E E, iff 7 E EA. 0 It is important to realize that neither uniqueness of a successor state nor even its ex- in general. The former characterizes of this kind will be discussed is guaranteed istence behavior-examples The meaning of the latter will be elucidated crucial of given domain constraints. later, e.g. in Section 5.2. in Section 3.3. First of all we raise another issue, namely, how to obtain an adequate set of causal relationships on the basis actions with nondeterministic in detail 3.2. Influence information the indirect to compute set of these relationships. Any of represents intuitively an Obtaining the intended result by applying causal relationships relies, of course, on a suitable in that each element effects of actions these sets should be sound causal relation, and it should also be complete effects. 9 The four causal relationships electric circuit domain. There is obviously a close correspondence of this set and the domain constraint underlying the following relationships There can be automatically is, however, is devoted analysis in that it covers all conceivable (5)) for instance, constitute a set suitable between this example scenario, which to the problem of how an adequate extracted from given domain constraints. plausible indirect for the the elements is why set of causal domain constraint a crucial, well-known the causal the fact that towards to be considered obstacle relationships this the swi A sw2 = light, this formula would give rise to ad- if evaluated purely syntactically. For instance, light if sw2 in (5). The fact that if swr the to have both SW:! and light, equally well suggests in (5) are inspired by swt causes relationships causal relationship [ 241: Despite end underlying ditional, unintended recall becomes following the causal true then it is impossible causal relationship: swl causes _. sw2 if light. (8) the state {SW,, m, This would, however, sanction of turning on SW] in the state depicted would magically jump this information able to automatically is an unintuitive its position outcome, in Fig. 1. In other words, in order to satisfy light} to be a possible successor state the second switch the domain constraint. Though does not provide enough to be the mere domain constraint to rule out (8). Hence, we need some additional domain knowledge design a suitable set of causal relationships. More precisely, we will exploit general fluents upon others. For instance, we provide information of potential the knowledge that changing influence of some a switch’s ’ More precisely, if .f E S then either:: = k7 or k; = kT - 1. In the first case, we have f E S, (and .f’ t En iff k; > 0), in the second case .f E S, (and f E E,,) The analogue holds for 7 E S. ‘) Here, “conceivable” can-to state the obvious-refer only to what is potentially derivable given main constraints. One cannot expect formalization to obtain an indirect effect desired does not include a piece of knowledge hinting at the possible existence of this effect. in some scenario the do- if the scenario’s M. ThieDcher/Artificial Intelligence 89 (1997) 317-364 321 position might switches to move. lo This kind of information rather than directly is formalized as follows: influence the state of a light bulb causing other Definition 8. Let F be a set of fluent names. A binary fluent names inJ7uence information. is called relation Z C F x F on these If (j-1, f2) E 1, then this is intended to denote tentially affects the truth-value of f2. Regarding we choose Z = {(SW,, light), light but not vice versa nor do they mutually (sw2, light)}, that a change of fl ‘s truth-value po- for instance, the influence the electric circuit domain, that is, both switches might interfere. constraints generating all possible violations of a domain constraint information set of causal provide enough relationships. information for au- is to and to formalize causal rela- The basic idea plus influence an adequate Domain tomatically investigate tionships which help to “correct” domain constraints. We first construct A 27, i.e., of the conjunction !I V . the initial state supposedly has satisfied be some (direct or indirect) some other potentially definition: affects the fluent literal & to !k via a causal this. More precisely, let 27 be the set of underlying form (CNF, for short) of the conjunctive normal of all constraints. Then ZJ is violated iff some conjunct A G holds. Since true must effect q, and this “flaw” can be “corrected” by changing I!./ in the following to Z. All this is formalized ;I), the reason for !I A in case the fluent relationship-but A .t?,, being that c A I& according only . V f,, in the CNF is violated. This in turn means Definition 9. Let F be a set of fluent names and D a set of domain constraints. An this influence procedure: a set of causal relationships R following information Z then determines (1) Let R := {}. (2) Let D1~...AD,betheCNFofA\.Foreach do the following: (3) For each j = 1,. . . ,mi do the following: (4) For each k= l,..., mi, k #j such that (i!jl, D;=!?,V...V&, (i= l,...,n) l&l) E 1, add this causal relation- ship to R: 6 causes ek if /j &. (9) I = I, ,,I, ISi,iSk (9)) exploits relationships that none of the causal Notice procedure (cf. formulas. in any case, a conjunction However, this does not imply that some causal information otherwise being representable cannot be obtained by applying Definition 9. This is so because any causal relationship can be transformed because Definition 5 allows arbitrary e if @ generated by this the condition @ is, the general expressiveness set of causal relationships of the form (9). On into an equivalent of literals-whereas e causes ‘(‘The word “directly” switches indirectly, e.g., through activating a relay (see Example 17, below). is crucial here since switches do have the ability to influence the position of other 328 h4. Thielscher/ArtificiaI Intelligence 89 (I 997) 317-364 the other hand, employing representations. More sophisticated means constraints without constructing goes beyond the scope of this paper. ‘I ‘I2 normal the general notion may lead to considerably more compact from domain to this end; yet this forms should be developed to extract causal relationships Example 2 (continued). Given domain constraint D = SW! A sw2 E light and influence information Z = {(SW] , light), (SW:!, light)}, by applying Definition 9 we obtain causal relationships as follows: V E& V light) A (swl V light) A (swz V light). l The CNF of D is (m l As regards - Incasej=l, - In case j = 1, k = 3 we have (SW,, light) E 2, which yields -- the first conjunct, D1 = SWI V sw2 V light, we obtain (swi,sw2) k=2 wehave $Z. the following: SW] causes light if sw2. _ In case j = 2, k = 1 we have (sw~, swl - In case j = 2, k = 3 we have (sw~, light) E 2, which yields ) $5’ 1. SW:! causes light if SW]. - In case j = 3, k = 1 we have (light, SW] ) $Z Z. _ Incase k=2 wehave $1. l As regards (light,swz) j=3, the second conjunct, D2 = swt V light, we obtain the following: _ In case j = 1, k = 2 we have (SW], light) E 1, which yields SW] causes light if T. - In case j = 2, k = 1 we have (light,swl ) @ 1. l As regards the third conjunct, 03 = sw2 V light, we obtain the following: - In case j = 1, k = 2 we have (sw~, light) E Z, which yields sw2 causes light if T. - In case j = 2, k = 1 we have (light, sw2) $ Z. Altogether, we obtain exactly granted above to obtain the desired solution. the four causal relationships listed in (5), which we have A crucial ity. Notice issue regarding the concept of causal relationships that in the worst case exponentially many causal is of course its complex- relationships have to be p if P where Y is most simple in describing for any two literals e and Q such that (I&l, 101) E 2, under which all causal p if @,,,, and for instance, be accomplished the circumstances by collecting , E causes obtained via Definition 9 for E and Q, i.e., E cauaea Q if @I,. the task would be to construct, rise to indirect effect p. This might, ” To be more precise, a causal relationship E causes effect E gives relationships to @I V defining P as the most compact I2 A related challenge would be to find suitable deductive in conjunction with influence without going Holds( Q, s) 1. Such a deductive characterization formula equivalent into details, information look of the way domain constraints speaking and like Causes(E, p,@) E Infi( IFI, Ipl) A Vs[Holds(@,s) A Holds(E, s) > V @,,,. representations relationships. This may, roughly give rise to causal could prove useful in a variety of particular action calculi. M. Tf~ielscher/Artijiciul Intelligence 89 (1997) 317-364 329 in any respect. causal relationships combinatorial in large domains these pathological conjunct. Despite tend to be locally structured in that each single domain constraint the CNF construction. Up to quadratic many relationships to the worst case: the domain constraints do not interfere. explosion of the size of the domain con- exist for each cases, there is, however, a decisive char- is the number of causal relationships In general, relates (i.e., to their overall in n. As an is linear of this section, where a distin- another switch, swi, generated due to the potential straints during resulting acteristic due to which especially small compared large domains only a small number of fluents. Suppose the number of fluent names number n. Then the number of causal relationships example, guished switch, swa, affects II different sub-circuits and a bulb, are described by n domain constraints of the form swo A sWi z light,. As argued above, compiling all indirect effects into action laws for toggling SWO. In contrast, only 4n causal relation- laws requires 2 +t different to the ones listed in (5). Notice ships are needed, viz. four for each sub-circuit that it still pays regarding successor have to be applied when toggling states since SWO. Hence, we have avoided the maximum be fixed and small compared in any case at most II causal relationships the situation discussed at the beginning lighti (1 < i < n). The dependencies effort when actually computing size of a domain constraint factor of this example the computational being generated each containing the exponential involved) similar recall The fact that domain constraints do not interfere in determining the second crucial problem mentioned avoids tionship has to be modified or removed at the beginning. No existing causal rela- if new domain constraints are added. reality. Consider, as an example, a light bulb being connected with two that is, either switch can be used to turn on the light. This is expressed Before we conclude the desired direction of chains of indirect effects. As argued this section, let us stress that influence re- it may to define a direction of reasoning which does not correspond information always [ 411, in toggle2 be desirable swi V sw2 z and {light}). to toggle, turn-on-light, flects sometimes to the physical parallel switches, by the domain constraint in addition ({light}, then, as argued becomes relationships a change of fight may affect SWI and sw2. This the influence on the resulting Z = { (swt , light), constraint Definition 9: true in addition requires in [41], one expects ramification to the direct effect, the consideration information used light. Suppose we define an action action ( 1)). The corresponding If this action is applied to the state S = {m,m, (cf. turn-on-light law shall be light}, of additional directions of influence, namely, light. I3 Obtaining is formally to tell us that either SW] or else swz this by means of causal that represented by extending Based (light,swz). ) , (light, sw2) }, the domain to according in Example 2 by (light, SWI) and (swz, light), swt V sw2 G light gives rise to the following causal relationships (light, swl SWI causes light if T, sw2 causes light if T, SW] causes light if swz, ?Z$ causes light if swt, light causes swt if m, light causes Yogi if T, light causes light causes sw2 if K, -. sw2 if T. (10) ” This may not correspond to everyone’s intuition, but let us accept it for the sake of argument 330 M. Thielscher/Artificinl Intelligence 89 (I 997) 317-364 Recall the state S = {SW], sw2, light} and the action law for turn-on-light yields aforementioned action -- turn-on-light. The application of the the state-effect pair ({swI,SE, light}, {light}). Its first component violates relationships in (10) are the ones in the third row. The resulting the underlying domain constraint. The only applicable causal state-effect pairs are ({swl,sw2,light}, {light,swl}) and ({swI,swz, light}, {light,swz}). satisfies constraint, the domain the first component that no further causal relationships In both cases, to a successor state. Notice states are the only successor states. either of these state-effect pairs. Hence, that This illustrates infinite, chains of applications of causal relationship. The reader there are cyclic, hence is invited to any possible state with fluent names SW], sw2, and light, then the causal rules in (10) never support infinite application that also if toggle, or toggle, in ( 10) are applicable (cf. ( 1) ) are applied does not necessarily that having cyclic hence constitutes the resulting information sequences. to verify influence imply 3.3. Indirect effects versus implicit qualijcation Thus far we have seen how domain constraints give rise to additional, it has been observed e.g. in [ 15,261 implicit qualifications of actions. indirect effects that domain constraints might In the following, we the concept of causal relationships along with the notion of potential of actions. However, instead give rise to additional, illustrate influence perfectly accounts that for this distinction. the following adaption to hunt a turkey which [ IS]. Example 10. Consider We intend is either alive or not (described via the fluent name alive) and which is walking around or not (fluent name walking). The domain constraint that walking > alive restricts walking is, a change of alive might affect the truth-value of walking but not vice versa. According to Definition 9, this determines to vivid ones. Let Z = {(alive, walking)}, [ 1 ] of the yale shooting scenario a single causal relationship, turkeys viz. ulive causes walking if T. (11) Consider, now, the action law ({alive}, shoot, {alive}). Fig. 2 illustrates the respective shoot in the two states which satisfy alive. In case the initial state the direct effect, alive. If the initial state it is sufficient domain constraint gives rise to an additional, then the underlying to compute results of executing is {alive, walking}, is {alive, walking}, indirect effect via ( 1 1)-not only does the turkey drop dead, it also stops walking. if it idles [ 291. The corresponding the turkey In contrast, suppose we want to entice {walking}). law is ({wulking},entice, action is applied entice {alive, walking}, constraint. The initial state {z,walking} action law yields {alive, walking}, which violates to the two states which satisfy walking. Again, then the direct effect suffices to obtain a state satisfying Fig. 3 shows the respective is different: Applying the aforementioned the domain constraint. Moreover, ( 11) results when if the initial state is the domain M. Thielscher/Artificial Intelligence 89 (I 997) 317-364 331 {alive, walkzng} shoot __, {alive, walking} - of ({alive},shoot, {alive}) in a state that satisfies to the initial state depicted is the domain constraint walking > alive. In case the action step based on ( 11) has to be in (a), where ramification the turkey in (b) , an additional to the initial state depicted to ensure the turkey stops walking when shot dead. Fig. 2. The application not walking, law is applied computed in order results directly {alive, lualling} entice l {alive, dking} (Q) (b) {allve,waltifig} enlice A {alive, &king} e > + ((11)) ? > ? Fig. 3. The application of ({walking}, is alive, results directly law is applied cannot be “corrected” executed successfully in a state to the initial state depicted on the basis of the given causal relationships, the turkey in a state where is not alive that satisfies entice, {wdkin~}) to the initial state depicted in (a), where the turkey the domain constraint walkirq > alive. In case the action in (b), the intermediate state violates the domain constraint. This the action entice cannot be ( I I). Hence, to the corresponding alive does not occur as effect. Hence, no successor is not applicable since Definition 6. In other words, our domain constraint gives rise to the additional, qualification that a turkey must be alive if we want to successfully exactly the desired conclusion. ({alive, walking}, state-effect entice pair {waking}) to implicit is it-which state exists according In general, whenever no successor state exists according to Definition hints at implicit qualifications end of Section 3.1). This shows of the action under consideration that providing adequate influence 6, then this (cf. the remark at the gives information 332 M. Thielscher/Artijiciul Intelligence 89 (1997) 317-364 for free, by means of causal qualification. relationships, the distinction between ramification and 4. A fixpoint characterization of ramifications solution to the ramification problem. The successive application of causal relationships erational the more static, fixpoint oriented characterization This method is based on the idea of minimizing mation. The objective of our comparison the definition of [29] are also obtained by the application of causal relationships. can be regarded as a somewhat op- to in [ 291. of indirect effects introduced infor- change while respecting causal is to prove that all successor states satisfying In this section, we relate our approach to the ramification information is why As we have argued, an adequate solution of causal dependencies it is insufficient to simply minimize state any state which has minimal distance requires more problem than provided by the mere domain sophisticated i.e., to take as constraints. This possible successor from the initial state and which satisfies both the direct effect and the underlying domain constraints. Neither does changes nor does it enable us to distinguish between this allow for preventing unintended ramifications it is to replace domain constraints by a suitable set of directed rules, called causal suggested than the corresponding rules and are therefore weaker rules, which serve as deduction implications. (cf. Section 3.3). As a consequence, and qualifications change, [ 291 in Definition 11 (see [ 291) sion @ + ?P where @ and P are fluent formulas. Let 3 be a set of fluent names. A causal rule is an expres- Let C be a set of causal rules. If 0 is a set of fluent formulas, the smallest set of fluent formulas which contains 0 and is deductively then by 7~ (0) we closed denote under C-that is, (1) @C Z(O); (2) (3) for any formula 0 such that 7~ (0) if @+P E C and @E Ic(0) then P E 7c(O). /= 8 we have 6’ E E( 0); and If 0 E 7~ (0) then this denoted by 0 l-c 19. Example 2 (continued). Consider light}. Let 0 = {swr , SW~}, then It(O) applicable. from swi, light, and swi A sw2 > light. In contrast, let 0’ = {SW,, light}, the singleton includes set of causal rules C = {SW, A sw2 =+ is then sw2 $ 7~ (0’) despite sw2 follows the given causal light since rule Causal rules serve as the basis for a fixpoint characterization accounts action with direct effect E, then a state T is successor for indirect effects. Informally speaking, after having executed, iff the following holds: l T satisfies E, l T is consistent with the set of causal rules, and l each change of a truth-value from S to T is grounded on some causal rule. This last condition reflects the idea of minimal change. of successor states which in a state S, an M. Thielscher/Artijkial Intelligence 89 (I 997) 317-364 333 Definition 12 (see [29] ). Let _F be a set of fluent names, A a set of action names, C let S be a state and a E A a set of action be an action name. A state T is a minimal change successor of S and a iff there exists an applicable laws, and C a set of causal rules. Furthermore, law (C, a, E) E L: such that (with respect to S) action T={k (snT)UEtcl}, (12) i.e., T is fixpoint of the function AT. {e: (S f’ T) U E kc e} given S and E. Example 2 (continued). An adequate set of causal rules for the electric circuit domain consists of the following three elements: SW] A sw2 + light, SW] + light, SW:! 3 light. (13) sw2, light} as depicted in Fig. 1, and suppose we apply Let S = {m, law is T = {SWI , sw2, light}: ({SWI}, toggle,, {swt}). Th e only minimal We have (SnT) U E = {sw~} U {SWI}, and the causal rules in ( 13) allow to additionally light} does not satisfy derive Eq. ( 12): (S fl T’) U E = {light} U {SW,}, which does not allow for deriving the missing literal, K. state T’ = {swI,~, light. In contrast, change successor the unintended the action I4 The following state T satisfying less (with C. IS respect justifies observation (12) has minimal distance to set inclusion) successor”: Each from S, that is, there is no state T’ with in changes while also satisfying E and the rules the naming “minimal change Observation 13. Let 3 be a set ofJuent names, C a set of causal rules, S a state, and ( 12)) if E a consistent set ofjuent S n T 2 S n T’ then T = T’. literals. Then for any two states T and T’ satisfying Proof. Since each of S, T, and T’ is a state, S n T = S n T’ implies T = T’. Moreover, Let J! E S n T such that 1 $! S n T’, assuming S r? T 2 S n T’ leads to a contradiction: i.e., ? E T’. Since T is consistent (12), we have and satisfies (SnT)UEl+cj. On the other hand, we know (SnT’) UEbc? (S n T”) U E = (sw2,light) U {swi} allows to see why T” = {swt ,sw~, light}, where only the direct effect is computed, does not thus, that all formulas @ > P induced by causal rules @ =S Q hold in minimal I4 It is also interesting satisfy E?q. (12): T” is not a fixpoint. This illustrates change successors. ” Observation of a theorem stated and proved tion 12 to the basic definition of the possible models approach 148 J Below, we provide a direct proof. in [ 291, which essentially derive light given (13); 13 is a consequence relates Defini- to additionally 334 M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 dueto?ET’.Together, 7~ ( S n T) . This contradicts S n T 2 S n T’. I6 (SnT)UEl+c?and 0 (SnT’)UEkc?show that?-e(SnT’) g In what follows, we restrict attention is a conjunction to non-disjunctive of literals. I7 Since @ + !I A . . . A & (n 3 0) is equivalent causal rules @+ P, where to the P n rules @ + Ct , . . . , @ + &, we assume, without loss of generality, in some It(O) of a rule is a single fluent to be a set of literals. Thus, each causal rule of the Eq. ( 12), where 0 is guaranteed be replaced by @t + L plus @ + !. This allows us form @t V @2 =+ t can equivalently to assume each causal rule be of the form lr A . . A & + 1 where !, 11, . , . , !,!! (m 3 0) are fluent literals. treat the In what follows, for notational antecedent of a causal rule, @, as a set of literals. The conjunction of these literals will be denoted by A@. that the consequent is only needed convenience we will formally literal. Moreover, computing The main result of this section will be a proof that each minimal change successor can in Section 3. Not only does this verify states with minimal distance change to be obtained by applying our approach developed that our method covers all intuitively from the original successors. Notice testing whether to actually compute minimal these states have to be guessed prior the condition of Definition that, following Eq. (12), it also provides a means expected successor they satisfy state, 12. In view of the intended result, we first present a pseudo-iterative characterization of minimal change successors and prove its adequacy: Proposition 14. Let 3 be a set ofpuent names, C a set of causal rules, S a state, and E a set of literals. For each state T we define (1) To(T) (2) Ti(T) Then T satis$es := (SfIT) :=ri_l(T)U{l: (12) iff T = Up” T;(T). u E. @=+!eC~nd@&Ti_l(T)},fori=1,2,....’~ Proof. We have to prove {e: (S n T) U E kc !} = Ui”, ri( T) . 0th erwise, . , Gn + t?, of inference (S JY T) U E t-c ! implies rules u,“, ri(T). @t + et,. 1 < i < n, @i 2 ( S n T) U E U {l, , . . . , !;- 1). Consequently, “LHS C RHS”: Let e E LHS. In case ! E (S n T) U E, we find that e E To(T) C the existence of a finite sequence in C (n 3 1) such that ! = & and, for each C Up” ri( T) . ( S fl T) U E kc e}. The base case, i = 0, holds by definition since To(T) = (Sn T) U E. For i > 0 let e E ri( T) such that there exists some @ + e E C where @ C Ti- 1 (T) . The induction hypothesis A@, hence for T,_,(T) “LHS > RHS”: By induction on i, we prove ri( T) C: {k e E r,(T) implies (SnT) (SnT) UEI-c UEtc 0 l. This alternative characterization proving the formal relation between of minimal successors this concept and the application of causal relation- the basis change forms for that 7~ is obviously monotone, I6 Notice tion I I ). I7 A brief discussion on the nature of disjunctive causal rules can be found at the end of this section. ‘* Recall that @ is considered a set of literals. is, 8 C H’ always that _ implies 7~ (8) & lc (69’) (cf. Defini- M. Thielscher/ArtijiciaI Intelligence 89 (1997) 317-364 335 rule @+! determines It also induces ships. To this end, each causal set of causal relationships. the domain constraint A@ > e, which has to be satisfied by a state resulting application of a series of causal relationships. Besides exploiting Proposition in the following proof is to ensure to justify an indirect effect, then a corre- that whenever a causal rule is actually applied sponding causal relationship E causes Q if Qi is also applicable. The latter particularly requires E occur in the current set of previously obtained 14, the crucial point from the successful (direct or indirect) a corresponding effects E, i.e., the second component of the current state-effect pair (S, E). laws, and C a set of causal rules. Furthermore, Theorem 15. Let 3 be a set of fluent names, A a set of action names, C a set of let 2) = (A @ > .k @ =+ C E C} action be a set of domain constraints, and let R be a set of causal relationships containing for each {PI,. . . , p,,} + e E C and each 1 < i < n the element q3; causes e if p1 A . . . A q~;_~ A pi+] A . . . A pan. (14) Let S be a state which satisfies V, and let a E A be an action name, then each minimal to C) of S and a is successor state (with respect to change successor T (with respect R and V) of S and a. Proof. Let (C, a, E) E C be any action law such that C G S. We prove by induction that for each i E No there exists a pair (S;, Ei) such that ( (S \ C) U E, E) -&,( S,, Ei) and Ti(T) C S, and Ti(T) for the sake of readability we abbreviate T(T) \ S & Ei (cf. Proposition 14). I9 In what follows, by r. In case i = 0, SO := (S \ C) U E and Eo := E satisfy the conditions: We have (S \ C) U E since ICI = [El and ro is consistent. Furthermore, To = (S n T) U E c To\S=((SnT)uE)\SCE. For the induction step, let i > 0 and ($_I, Ei-1) satisfy the claim. Then, let {e, ,..., &}:={!: !~r,ande@Ti_r} (15) that are added to Ti_1 to obtain Ti. Hence, there exist m causal for each 1 < j < m. Let us that @,i 2 rj-1 the first rule, @1 + 11. From the induction hypothesis we conclude Ti_ 1 c Si_ 1 be the set of all literals rules @I + J?I,. . . ,Gnt =+&, E C such consider and, consequently, @I C Si-1. Moreover, we can find some p E @I such that p E E,_l: \ S c E,-1 Assuming implies \ S) n @JI = {}. Th’ 1s implies @I C S since @I 2 r;-1, II E S (since S satisfies D), hence @I > [I). From !I E ri C T we also know Cl E SnT C TO. This contradicts i.e., Ei-1 n @I = {}, the induction hypothesis (cf. ( 15) ) . the contrary, el # Ti-\ hence (ri-1 ri-1 Thus, the causal relationship rp causes e, if A(@* \ {p}) in R is applicableto (Si-1, Ei-1) provided e, E Si_l . But Si-1 is a state, that is, if it does not contain already contains can obtain (1 it need not be applied. Hence, either we e,, and the causal relationship or else we keep (Si_I,E,_I) \ (1)) U {!I}), \ {I}) U {e,}, ((Si-1 (E,_l I’) The very regards last condition ensures the set E; of previously obtained the aforementioned applicability (direct or indirect) effects. of all relevant causal relationships as 336 M. Thielscher/Artijiciul intelligence 89 (1997) 317-364 and know 11 E Si_1. Likewise we can successively &, . . , , l,,,, provided there is no k E (2, . . . , m} and 9 E @k such proceed with all other literals, U if?,, . . . ,Pk_1}. rp causes & if A\(!& \ ($0)) that cp E Ei- 1 In other words, we have to prove (2 < k < m) which el, . . . , &- ,. to (&I, Ei_ I ) but is not so after first having computed . , &I)) is no causal but cp # (Ei-1 \(&,., there was applicable To see wky this is guaranteed, relationship let us assume the contrary. Then rp E E,-l and cp $E’ . .,ek-l}) (E~-~ \ (4,. Ti-1 assert the existence of some e,i E {e,, with 8, E Ti (cf. (15)), u{b.. . ( &_l} this contradicts T > T,_l U TI being consistent. , ek_I } imply p E {!, , such that c E Ti-1. In conjunction , ek-1 }. This and 9 E @k C To summarize, having successfully applied all m causal relationships (whenever nec- essary), we obtain the two sets S;:=(Si_l\{~ ,..., %})U{l, ,..., &,} and E~=(E;_I\E)UL, where L = (a,,... fi_l & S,-1 and (15)) ,&) \ S. The pair (Sj,E,) satisfies the claim: r, C S; (due to and Ti \ S C E, (due to Ti_1 \ S C Ei-1 and (15)). Since there exists only a finite number of changes r; = r, r, = T is a state, T C S,, implies T = S,,. Consequently, from S to T, we have Uz for some II E No. Because ((S\Cl u-&E) * Q--+_ (T, En), that is, T is successor state. 0 Interestingly, the converse of this theorem does not hold, that is, there might exist successor states (in the sense of Definition 6) that cannot be obtained using the fixpoint- based approach. to detect them with the approach discussed change, which thus might be too restrictive. is restricted In Section 5.3, we argue that these states are intuitive, and failing in this section is due to the policy of minimizing to non-disjunctive that our result Finally, causal recall rules. the nature of rules involving disjunctions In the re- in mainder of this section, we briefly discuss as in their consequent, T=s-UVC. (16) -- there exist rules are used to express nondeterministic Typically, disjunctive to given S = (a,~}, two different minimal ( 16) (suppose E = {}), viz. T, = {a, i?} and T2 = (5, c}, respectively. *O Notice that T3 = {u, c} is not a minimal change successor since merely having a V c does not allow for concluding be replaced by these two non-disjunctive change successors with respect a nor c. The latter observation that (16) could equivalently behavior. For instance, suggests rules: a*c, c*Ll. (17) these rules yield Indeed, This indicates sented by the rz rules the same result as above when applied that a disjunctive rule Qi+ PI V . . . V ?Pn can often be adequately to the state S = {E, Z}. repre- -- *” To see why, take S f’ T, = {E}, say, which entails the missing literal, o, given (1 V c via ( 16). M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 331 i = 1,. . . , n. However, where causal rules are considered. For example, ( 16) and ( 17) are not generally equivalent if additional if we add these two rules to (16): aVc*a, aVc*c, change successor of S = {a,?} exists. Yet this example change successor of S with respect then T = {a,~} is minimal {} t-{(t6),(ts)) a A c. In contrast, no minimal { ( 17)) (18)) consequent to imagine to imagine does not make ing non-disjunctive information. of the causal a meaningful a more convincing (16) and causal since S n T = {} and to and in ( 18) share fluent names, which it is hard relation expressed by these rules. But it is also hard since adding, say, a V c + d instead of ( 18) that requir- causal (17) behave differently. This strongly rules means no severe restriction when formalizing lacks significance: Notice that antecedent rules causal suggests example is why 5. The necessity of causal relationships . . . In this section, we contrast abstract concepts the problem of undesired aim is to illustrate method. We accomplish every reasonable correctly. that are most widely used (often in slightly different variants) the proposal to employ causal relationships with other to tackle indirect effects in the context of the ramification problem. Our compared to our some prototypical example scenarios, which about actions must at least be able to treat this by discussing for reasoning of these concepts expressiveness the restrictive formalism 5.1. . . compared to categorization-based approaches to avoid intuitively to the law of persistence as regards changes ramifications-or, The standard approach some sort of categorization between different, typically notion of preference ones when computing subject circulate approaches of our electric circuit domain, we will illustrate obvious in this respect, which causes difficulties it belongs definition: is that an appropriate categorization in literature, *’ the common to. To this end, we employ unexpected the underlying indirect effects is to introduce among set of fluent names. This distinction two or three, kinds of fluents comes along with a specific in other is etc. While a variety of names for such fluent classes in one category compared less sophisticated, only a particular category to changes fundamental assumption of categorization-based always exists. With a simple extension that the role of a fluent might be less in finding a single appropriate category the following, prototypical categorization-based *’ E.g., frame versus non-frame fluents [241; relevant versus dependent [ 4 1; persistent versus non-persistent I 11; or persistent, remanent and contingent fluents [ 6 1. 338 M. Thielscher/ArfiJcial Intelligence 89 (I 997) 317-364 - light Fig. 4. An extended electric circuit described by five fluents. The two possible states of the first switch are is down), up (SW] is true) and down sw2 (the second switch and m (the light bulb is off). is false). The current state is described by ?iCi (the first switch relay (the relay is deactivated) (swt is closed), m (the third switch is open), 16. Let 3 be a set of fluent names. Furthermore, (secondary fluents) 22 be two disjoint then T is closer let, for each state S, 3,) (S) subsets such that to S than T’, written = 3. Let S, T, T’ be states, fluents) u 3;(S) and 3,Y (S) Definition (primary 3,,(S) T -+ T’, iff (1) either (2) orIT\S/n3~~(S)=IT’\SIn3,,,(S) lT\S/n3,,(S) 5 IT’\Slf13,j(S) andIT\SIn3Y(S) zIT’\SIf13S(S). Let D be a set of domain constraints, A a set of action names, and C a set of action laws, If S is a state and a E A an action name, bused mccesmr (C, a, E) E C such that of S and a iff there exists an applicable then a state T is a categorization- (with respect to S) action law (1) EGT; (2) T satisfies 27; and (3) there is no T’ -Q T such that E C: T’ and T’ satisfies D. respect primary In words, a state T is closer to some state S than a state T’ iff S and T differ in less than S and T’ do, or else S, T and S, fluents than to a in Example 2, we consider swi, sw2 primary and toggle,, {SW, }) to the state sw2, light} admits, as intended, T = {SWI , sw2, light} as the unique categoriza- light}. successor to set inclusion) (with T’ differ in the same primary S and T’ do. For instance, switch magically light secondary S = {x, tion-based fluents to prefer a change of the light bulb’s state compared fluents but S and T differ in less secondary in any state. Then the application of ({m}, since T -+ T’ for the counter-intuitive state T’ = {SWI , m, its position jumping Consider, now, the following extension of our electric circuit (see also Fig. 4): Example 17. We augment Example 2 by introducing fluent name sws, plus a relay, represented to force the second switch third switch. Formally, the following domain constraints: a third switch, represented by the is intended the relay to jump open. The relay is controlled by the first and are described by among all these components by relay. If activated, the dependencies (swz) 22 The terms “primary” and “secondary”, respectively, were inspired by [ 40 ) M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 339 swl A sw2 c light, Z@ A sw3 = relay, relay > sw2. (19) fluent names into primary and secondary the state of the circuit depicted in Fig. 4. In order to find an adequate respectively, Let S denote partition of the involved first that we should have swt , sw2 E F,, (S) and light E 3$,(S) as above. For if observe we toggle either of swl or sw2, then we prefer a change of light instead of a change of the first domain constraint). Analogously, we should have the other switch SW] E 3,,(S) then we prefer a change of relay instead of a change of the first switch constraint). Hence, we obtain swt , sw2 E 3P(S) the third switch, (as regards and relay E Fs( S). For if we close and light, relay E 3$(S). 23 the second domain (as regards fluents, Suppose, now, we close the third switch, sws. Obviously, the expected the second switch, sw2, jumping result is that its -- the corresponding is a categorization- swz, F@i, relay, light} and a = toggle, toggle3, {sw~})): Besides that a second primary in turn causes -- state {swi , sw2, sw3, relay, fight} the relay becomes activated, which position. Indeed, based successor of S = {W, ({m}, suggest any state with swt, sw2, sws being successor, second primary to verify its truth-value namely, where swi changes that the state {SW,, sw2,5&, relay, light}, of Definition 16 as it does not violate to S. Hence, we obtain a second successor state where the first switch magically opens, the relay remains deactivated the direct effect {sws}, the above domain constraints since that a instead of swz: The reader is invited too, satisfies the conditions and has minimal distance fluent has to be changed suggests another categorization-based its truth-value the observation fluent, SW] or sw2, must change and the light bulb turns on. the domain constraints (19). However, the action law true violates (given The reason for the unexpected fail to assign a unique, second state appropriate to occur category in this example to fluent sw2, whose role is that we is (regarding like a secondary it should be considered primary it behaves the relay). One might suggest an additional than secondary necessarily the sub-circuit twofold: On the one hand, (as fluent involving SWI and light), and on the other hand, that this particular example could be modeled by regards category of, say, tertiary fluents, 3t( S), which have even just introducing sw2, relay E 3,Y( S), fluents. Then, lower priority and light E 3, (S) and extending Definition 16 appropriately yields the expected unique strange categorization, where similar resulting entities, namely classification requires a deeper analysis of possible direct and indirect effects in the electric circuit it is not hard to imagine more and is far from being complex domains the difficulty of deciding state. However, besides switches, belong requiring more and more categories, which heavily the somehow to different fluent name should belong. to which class a particular plausible. Moreover, taking swt E 3/,(S), this particular categories, intuitively increases In contrast, since causal relationships local dependencies, describe regarding different domain constraints: only they can easily deal with fluents which behave differently in conjunction with influence information 23 Whether SWJ is considered primary or secondary is irrelevant for our argument 340 M. Tl~ielscher/Art~cial Intelligence 89 (1997) 317-364 Example Fig. 4 are represented by this relation: 1’7 (continued). The possible influences in the electric circuit depicted in this on direct information concentrates Notably, see, is sufficient; nothing has to be stated about the possibility influence SW:! (through argument to the domain constraints relationships: only, which, as we shall that sw3 might indirectly the relay). Notice also that sw2 occurs both as first and as second in this example. Applying Definition 9 the following nine causal in conjunction with Z yields in 2, which encodes its twofold nature influences (19) SW] causes light if sw2, sw2 causes light if swi, ECi causes light if T, sw2 causes light if T, EVi causes relay if swj, sw3 causes relay if swi, (20) swi causes relay if T, sw3 causes relay if T, relay causes -. sw2 If T. The topmost four relationships as described a similar way, the next last relationship due four relationships; to (relay, sw2) E Z. are obtained in detail in Section 3.2; the domain constraint WA from the domain constraint SW] ~sw2 G light in sw3 = relay yields, and, finally, from relay > sw2 we obtain the Suppose given the state depicted in Fig. 4, i.e., S = {swl,~w2,SW3,k&j,light}, the action causal relationships law is the state-effect pair ({m, toggle,, {swj}). Then the starting point for the application plus of ({~,SW~,SW~,relay,light},{sw~}). The state violates relationship in (20) the second domain constraint relay if m. is sw3 causes ({m, swz, sw3, relay, light}, (sw3, relay}). in (19). The only applicable Its application yields (21) causal Now the state violates relationship application yields in (20), namely, the third domain constraint relay causes causal in (19). The corresponding -. SW:! If T, is the only applicable one. Its ({W,m, sw3, relay, light}, {sw~, relay,FiT5}). there are no other successor states. This is exactly the desired conclusion the underlying domain constraints and, consequently, there is no alternative way of applying causal relationships denotes to in this The first argument satisfies a successor (21), example. state. Since 5.2. . . . compared to the policy of minimal change A widely accepted assumption concerning erating indirect effects ought to satisfy the ramification the property of minimal problem says that gen- change. Regardless M. Thielscher/Art@ciaI Intelligence 89 (1997) 317-364 341 I I Fig. 5. A modified electric circuit an activation described as in Fig. 4 except device is assumed of the light bulb (cf. Fig. 4) augmented by a device, represented by detect, which registers is (this device combines a phototransistor and Bipflop). The current is closed) and the state of the additional state that now sws holds (the third switch to be detect (no action of light has occurred). as discussed categorizations to the original above, whenever a “proper” successor state is of possible state than another “proper” successor state, then the latter strictly closer that our method should be rejected. Yet while covers all states in this respect. The following example shows the importance of this in that requiring minimal change might fail to obtain all intuitively expected possible successor states, hence might lead to unintended in Section 4 shows it is not restricted the result proved to the minimal change policy, that confess conclusions. from Example 17 is slightly modified and Example 18. The extended electric circuit further augmented (and stays) activated as soon as the light bulb turns on (see Fig. 5). The new arrangement is encoded by the following domain constraints: by a light detecting device (fluent name detect) that becomes SW! A sw2 E light, SWI A sw3 = relay, relay 3 FC@, light > detect. After enhancing domain constraints give rise to the following causal relationships: the influence information Z used in Example 17 by (light, detect), (22) these swl causes light if sw2, swz causes light if SW], SWI causes light if T, sw2 causes light if T, swl causes relay if sw3, sw3 causes relay if swl, (23) SWI causes relay if T, sw3 causes relay if T, relay causes -. sw2 if T, light causes detect if T Suppose we toggle expected outcome? Obviously, the latter switch, swz. Hence, the first switch, SW], in the state depicted the relay gets activated and, in the finally is open resulting then, attracts in Fig. 5. What is the the second state. Notice, however, 342 M. Thielscher/Art@cial Intelligence 89 (1997) 317-364 involving is closed, the sub-circuit that is, before too. This may activate the light bulb for an instant, its position as a result of activating the light bulb gets the second the case, activation might be registered by the photo device, detect. Hence, state, it may or may not be the that as soon as the first switch closed, switch jumps then this short-time while it is clear that the light bulb is off in the resulting case that detect becomes viz. T, = {SW,, sw2, sw3, relay, light, detect} and T2 = {SW,, sw2, SW~, relay, m, Notice and the initial state, S = {m, than T2 and S do. states, detect}. that these states differ only in the value of the fluent detect. Notice also that T, less fluents true. We therefore should expect two different successor sw2, sw3, relay, light, detect}, differ in strictly the relay. If this is indeed -~- Our set of causal toggle,, ({K}, relationships {SW,}) to S yields supports (23) the state-effect pair this conclusion. The application of ({SW,, ~w~,sw3,G,light, detect}, {SW,}). (24) The first component There are several possibilities -. sw2 if T, which results followed by relay causes in to proceed. First, we can apply SWI causes violates both the first and the second domain constraint in (22). relay if sw3 ({SW,, sw2, sw3, relay,light,detect}, {sw~, relay,FiE}). The first argument a successor state (as expected, cf. T, above). satisfies the underlying domain constraints and, consequently, denotes Another possibility to proceed with the state-effect pair (24) is to apply the following chain of causal relationships: swl causes light if sw2, SW] causes relay if sw3, relay causes -. SW:! If T, SW? causes light if T. (25) In words, we first conclude However, since the activation of the relay causes SW? to become off” the light bulb again via the finally applied causal relationship. Thus, we obtain pair the light bulb turns on due to the second switch being on. false, we have to “turn the ({SW, ,m, sw3, relay,light,ZiZ}, {SW,, relay,JiE,light}). the chain of causal relationships the successor Again, we obtain yet. Recall current effects after having applied the last one is applied, we can insert somewhere obtained state-effect pair is in between. This additionally state TI. But we have not considered all possibilities in (25). Since light is true and among the first of these relationships the causal relationship causes detect become and remains the true until if T true, that is, the finally detect light causes ( (swi , w, SW~, relay, tight, detect), {SW!, detect, relay, m, tight)). Its first component is identical successor states can be obtained, which is exactly the desired conclusion. to the second expected successor state, T2. No further M. Thielscher/Art@d Intelligence 89 (1997) 317-364 343 To see why no minimal change-based formalism can possibly obtain this, consider these causal rules C: swl A sw2 + light, m+ light, SW:! + light, SWI A sw3 * relay, m * relay, sw3 * relay, relay * SW:!, light =+ detect, in conjunction with S as above and E = {SW,}. While Tr = {SW, ,m, detect} satisfies Eq. ( 12), Tz = { swt , swz, sws, relay, light, detect} does not since - sws, relay, light, (SnT2) uE={ sw3, light} U {SW,} ifc detect. State TI being the only minimal change successor suggests that detect necessarily too optimistic a conclusion. false, which is obviously remains This last observation suggests between possible for distinguishing changes on the other hand. In fact, the aim of generating change but to avoid changes identical. that minimization is not always an adequate concept indirect effects on the one hand, and unfounded is not to minimize ramifications that are not caused, which, as we have seen, need not be 5.3. . . . compared to causal rules We have seen in Section 3.3 that domain constraints may give rise to implicit quali- that sometimes acts in both fashions, depending on which effect actually oc- instead of indirect effects. By Example 10 we have illustrated the expressiveness fications even a single constraint curs. Both causal However, the concept of causal rule (causing !r being causal scenario: relationships /J as ramification true and _!! being support like et A !2 + e, say, relationships and causal rules allow for modeling this distinction.24 of causal rules with this respect is limited compared relationships. The reason is that the applicability is not restricted in case !2 being false) shall to situations where true), while & occurring indicate this sophistication, 25 which an implicit qualification. is required to of a causal !t occurs as effect (with as effect In contrast, in the following Example 19. Let us consider a more subtle, ancient method by using a (manually the fluent name the dangerous underneath zone or not, and the fluent name alive to hunt turkeys, namely, is described using is in is used as before. The ground itself being at-trap trap-open. The fluent name at-trap describes whether trapdoor. The state of this trapdoor that if the turkey the trapdoor is designed the turkey activated) finds such a[ive causes 24 Regarding Example relationship the causal 25 This is why n different in Theorem 15). (14) -- 10 with domain constraint wulkin~ > alive, s if T but not walking causes alive this is achieved by taking the causal if T; similarly, one would employ rule alive + walking but not walking + alive [ 291. relationships are needed to represent a rule with n literals in its antecedent (cf. 344 M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 and the trapdoor domain constraint: is open, then it cannot be alive. This is represented by the following at-trap A trap-open > alive. (26) the We can open entice trapdoor can possibly alert door; implicit qualification is Z = {(trap-open, relationship according trapdoor via the action the turkey via ({at-trap, alive}, entice, {at-trap, alive}). While the victim’s it would never kill state of being alive or not, the turkey itself by moving open, {trap-open}) ({trap-open}, influence towards law and the state of the is trap- to give rise to the the open to the extent thus, at-trap can never that influence alive. The latter is intended trap-open for entice. Hence, In conjunction with (26)) alive)}. the adequate influence this determines information a single causal to Definition 9, namely, trap-open causes alive if at-trap. (27) the state S = {alive, at-trap, trap-open} (say, after having enticed Given executing open yields our domain constraint. Since is applicable, which results In contrast, consider whose execution yields is not applicable (27) exists. In other words, is exactly the intended two cases by employing alive trap-open + alive, this distinction if the turkey), state, which violates (27) {alive, at-trap, trap-open} as intermediate trap-open occurred as effect, the causal relationship in the expected successor state {alive, at-trap, trap-open}. trap-open} the state S = {alive,at-trap, the intermediate and the action entice, too. But now since trap-open did not occur as effect, that is, no successor state for entice, which trap-open these result. Notice that we are only able to distinguish state {alive, at-trap, trap-open}, implicit qualification is an additional, between (27) but not the analogous causal relationship at-trap causes trap-open. For both correspond to identical causal rules, namely, at-trap A goes beyond the expressiveness of causal rules. 6. A fluent calculus realization Having presented, thoroughly problem, discussed, and demonstrated to the ramification to the development of a suitable, concrete calculus. Our encoding employs siveness of our approach devoted representation calculus-based full expressiveness sentation of states in Section 6.1. In Section 6.2, we then model causal relationships their execution. The resulting encoding action semantics proposed the benefits and expres- is the fluent the term repre- and is proved adequate with respect to the high-level technique underlying approaches, however, we do not develop a logic program but exploit logic. We begin by defining an appropriate the second part of the paper in the first part of the paper. [ 19,201. Unlike previous the Jluent calculus of first-order 6.1. Reified states The atomic elements of state descriptions stants throughout we introduce guments chosen con- the first part of the paper, for the sake of simplicity. For our calculus, is now an n-place predicate with ar- [22,38]. This involves both a richer notion of fluents. A fluent from a given set of objects have been restricted to propositional (or entities) M. Thielscher/Artijicial Intelligence 89 (1997) 317-364 345 a generalized by requiring in any respect. The following definition concept of action finiteness of any underlying laws and fluent formulas including quantifications. Yet set of entities, we still guarantee decidability extends Definition 1: Definition 20. Let c? be a finite set of symbols called entities. Let F denote a finite set of fluent names, each of which is associated with a natural number called arity. A jZuent is an expression jluent f( 01, . . . , 0,) wherefE~isofaritynandot,...,o,EC?.A literal is a fluent or its negation, denoted by f( 01, set of variables. An expression Let li be a denumerable . . , o,,). f( tl , . . , t, ) and its negation is of arity n and ti E 0 U V ( 1 < , t,,) are called jluent expressions iff f E F .f(t1,... i<n). As before, a state is a maximal consistent set of fluent the sake of assume an arbitrary but fixed set c3 of entities, literals. For readability, from now on we implicitly a set F of fluent names, and a set V of variables, respectively. The extended expressiveness Example 2 (continued). circuit domain as follows. Consider switches, along with the unary fluent OIZ describing the nullary light denotes fluent in Fig. 1 is then formalized the two entities 0 = { st , $2) representing to model the electric the two In addition, the state of the light bulb as before. The state displayed the state of its argument. as S = {on(st),on(s2), is exploited light}. As opposed to the situation calculus [ 32,371, in a collection of all fluent literals represented. To this end, fluent literals are reified, state terms, each of which consists represented state being as terms. These terms are connected via a special binary function, which is illustratively denoted by o and written state S= {on(s~),on(s*),light} in infix notation. For instance, a term representation i.e., formally is of the the fluent calculus employs structured that are true in the (on(s~> oon(s2)) alight fluent expressions in [ 17,321) [ 191 that this representation where the bar denoting negative first been argued frame axioms can be modeled by manipulating terms. Then all sub-terms which are not affected by these operations term, hence continue It has (e.g., law of persistence: The effects of actions through removal and addition of sub- in the state is formally a unary function. avoids extra axioms the general terms like (28) to be true. to encode technique remain Intuitively, the position at which a fluent literal occurs - - irrelevant. That is, (28) and the term on( ~2) o (light o on( SI) ), say, represent states. This connection intuition function 0: is modeled by requiring the following formal properties in a state term should be identical for the Qx, y, 2. (X 0 y) 0 z = x 0 ( y 0 z ) (associativity), \Jx, y. Qx. xoy=yox x00=x (commutativity ), (unit element) 346 M. Thielscher/Art$cial Intelligence 89 (1997) 317-364 of fluent for o. This constant literals. The above axioms constitute the where the special constant 8 denotes a unit element theory, empty collection which we abbreviate from now on we omit parentheses on the level of 0. Notice that the axioms AC1 formalize essential properties of the data structure “set”. 26 For formal reasons, we introduce a function r which maps sets of fluent expressions A = {!I, . . . , &} rA = 1, 0 . . . 0 !,, (including to their term representation the law of associativity, by ACI. Given an equational represents r{) = 8). In conjunction with the standard axioms of equality (see (29), below), our equational to prove the inequality they do not contain of two state terms whenever the equivalence collection of fluent they are built up from an theory entails literals. These axioms alone, however, do not suffice for identical of two state terms our encoding. For it will also be necessary whenever the same fluent literals. This requires an extended notion of the standard so-called unique name assumption. More precisely, we adopt the concept of unijcation ) . Let E be an equational theory, that is, a set of universally quantified equations. Two terms s and t are said to be E-equal, written s =E t, iff s = t is entailed by E plus the standard (T is called an E-unifier of s and t iff scr =E tu. A axioms of equality. A substitution set CUE (s, t) of E-unifiers of s and t is called complete if it contains, of s and t, a more or equally general substitution.27 Unification defined as follows: completeness known from logic programming for each E-unifier is then (see, e.g., [ 21,42,47] completeness Definition 21. Let E be an equational uni$cation complete with respect to E iff E* contains the following: theory. A consistent set of formulas E* is called (1) (2) The axioms The standard equality axioms, viz. in E. x=x x=y>y=x x=yAy=z >x=z (reflexivity), (symmetry ) , (transitivity), x;=y>f(x1,..., X; )...I x,) (29) =.f(x1,...,y,...,x,7) (substitutivity I), x1 =y 3 P(Xl,..., Xi ,..., x,7) EP(Xl,... , y, . . . , x,,) (substitutivity II), function for each n-place variables are universally Equational any two terms s and t with variables X the following holds: symbol quantified. formulas, (3) i.e., formulas with “=” as the only predicate, such that for f and predicate P, and for each 1 < i < n. All x The reader may wonder why we do not additionally reason for this is given below, right after Proposition 22. *’ That is, whenever Here, Var( t) denotes substitution and X(T are E-equal. 0 such that (~‘0 =E g) 1”. The latter holds the set of variables occurring su =E tc~ then there exists some V’ E CUE( s, f) such that (d <E U) Iv~,,.(,~)~v~,~(,). the existence of a in term r, and ((r’ <E a)lv means iff for each variable x E V, the two terms (x(r’)O require the function o be idempotent. The (subtle) M. Thielscher/Art$ciul Intelligence 89 (1997) 317-364 341 (a) (b) If s and t are not E-unifiable, If s and t are E-unifiable, we have then E* /= 4X. then for each complete s = t. set of unifiers CUE( s, t) where r denotes the variables which occur in g= but not in 2. ** theory for our axioms AC1 can be obtained [ 5,431) complete in [ 201, a unification for any two terms s, t, some complete As shown by computing, and adding (see, e.g., symbol right of the entailment theory will be called extended unique name assumption, an example, consider -- set {{x H 97, z H on(si ) 0 light}} Hence, the corresponding in the terms on(x) o z and on(sl) is a complete equational In what follows, (30). set CuACl (s, t) of ACl-unifiers formula which this unification is to the complete by EUNA. As o on( ~2) o light. The singleton terms. abbreviated of these set of ACl-unifiers EUNA + Vx, z [on(x) o z = on(sl) oon(s2)olight>x=s;!Az=on(s~)olightJ according to (30). Before we proceed with the fluent calculus encoding, we prove some crucial properties of EUNA. These properties show how the subset relation and the set difference and union operations can be modeled on the term level. Proposition 22. Let A and B be two sets ofjluent literals. IFAc:BthenEUNA~3z.7Aoz=rB,elseEUNA~=trz.r,ozir8. (1) (2) ~ACB~~~~EUNA~=Z[~AOZ=~B-Z==~\~]. (3) I~A~B={}~~~~EUNA~=~Z[~=~AO~~_Z=~A”B]. ( 1) In case A C B, let Z = B \ A, then rA 072 and 7~ are ACl-equal. According Proof. to Definition In case A g B, ?-A o z and r8 are not ACl-unifiable. implies EDNA + \Jz. ?-A 0 z $78. 21, this implies EUNA k 7~ o i-2 = ~-8, hence EUNA b &.rA o z = 78. to Definition 21, this According (2) Let z be a term then r,J o z and rs are AC l-equal iff each fluent literal occurring in ?-A 0 z also occurs r,.$ o z This in turn is equivalent EDNA b z = rB\A. in 7-B and vice versa and no fluent literal occurs twice or more in (given A C B), hence to z and rs\A being AC l-equal (3) A term z and the term ?-A o r8 are ACl-equal iff each fluent literal occurring in ?-A o 78 and vice versa and no fluent literal occurs z also occurs (given A n B = 0). This in turn is equivalent EDNA + Z = r,&JfJ. q to z and rAUs being ACl-equal, in twice or more in z hence 2x By CT= we denote v={X,Htl,..., XnHfll}. the equational formula xl = [I A A x II = tll constructed from the substitution 348 M. Thielscher/Art@icial Intelligence 89 (1997) 317-364 For illustration, let A = {Ms2)}, B = {on(sl),on(sz),light}, C = (on(sl),light}, then A C B and A fl C = {}. Accordingly, (1) EUNA ~3z.on(s2) oz =on(s,) oon(s2) alight, (2) EUNA j= Vz [on(s2) 0 z =On(sl) oOn(s2) OlightZ -- z =orl(sl) alight], (3) EUNAkVz[z = on s2 oon(sl) ) ( alight= z con olightoon(s2)l. In particular, the equivalence expressed in clause (2) of the above proposition will be from a state. That is, if C is the the set S\C. Precisely used below to model the removal of an action’s condition condition of some action, S is some state, and z is a term such that EUNA /= TC oz = Q-~, then we know that z represents o is not required z = ?-sic. E.g., if 0 were idempotent, But clearly 7~ $ TA\A unless A = {}. In contrast, without o being entails 7-A 0 7,~ $ TA whenever 7~ $0, for defining logic this is the reason why the function to be idempotent. For if it would be, then 7~ o z = rs would not imply then for any Set A we would have r/1 0 $-A = 7A. idempotent, EUNA under which a term represents literals, a state. We use a many sorted are composed of (of fluent collections function o. Below, variables of the sort fluent Iiterals, “fluent literal” are indicated by e, variables of the sort “action name” by a, and variables of the sort “entity” by X, sometimes with sub- or superscripts. All other variables are of the sort “collection”. i.e., A + {}. the circumstances language with four sorts, namely, literals) , action names, and entities. Collections the constant 0, and our connection Free variables are implicitly We are now prepared to be universally assumed fluent quantified. formula defmes a predicate Holds(e, s) with the intended in S: To begin, the following that .! is contained meaning Holds(e, s) z 32. e 0 z = s. Then the following formula determines the constitutional properties of state terms: Stute( s) z Ve[ Holds( C, s) = lHulds( 2, s) ] A W, z. s # t 0 e o Z. (31) (32) In words, s represents both. Furthermore, proposition states the adequacy of this formalization: a state if it contains no fluent literal may occur each fluent twice literal or its negation but not in s. The following (or more) Proposition 23. Let s be a collection of jluent State(s) 4tute( then EUNA, (31)) (32) b iff there exists some state S such that EUNA k s = ~5, else EUNA, (31), (32) k literals, s). Proof. We have EUNA, (31), (32) /= State(s) iff EUNA,(31),(32) k (3z.eoz =s ~Vz’.~oz’+s) /~Vz.s#k’oeoz (33) for each fluent literal 1. M. Thielscher/ArtQicial Intelligence 89 (1997) 317-364 349 (=+) Suppose then the entailment that S consists the second disjunct Altogether of the first conjunct (33) holds for each fluent literal C. Let S := {C: EUNA + 3.~. eoz = s}, that S is a state. It also ensures of in s. literals which occur that no fluent in s. Moreover, literal occurs in (33) ensures in (33) ensures twice or more the entailment in the fluent this implies EUNA b s = 7s. (-+=) Suppose EUNA k s = 7s for some state S. Then all fluent ( 1) of Proposition exactly once in s. Let e be a fluent Thus, clause Moreover, ACl-unifiable. Definition 21. since s does not contain This 0 implies EUNA b literal. S being a state implies that the first conjunct 22 ensures a literal is entailed. twice or more, s and e o 1 o z are not (3a) of to clause ‘dz. s # e o e o z according literals in 78 occur that e E S iff 2 @ S. in (33) Next, we show how to encode domain constraints in the fluent calculus. to exploit entities. the extended notion of a fluent, we allow fluent formulas In order to quantify over Definition 24. The set of Juent formulas is inductively defined as follows: Each fluent expression then so are F A G, F V G, F > G, F = G, 3x. F, and Vx. F (where x E V). that and T and I are fluent formulas, and if F and G are fluent formulas formula without is, where each is bound by some quantifier. Let S be a state and F a closed fluent in S is inductively defined then the notion of F being true (respectively false) A closed formula free variables, is a fluent occurring variable formula, as follows: is false in S; literal e is true in S iff f? E S; is true in S iff F and G are true in S; (1) T is true and I (2) a fluent (3) FAG (4) F V G is true in S iff F or G is true in S (or both); (5) F > G is true in S iff F is false in S or G is true in S (or both); (6) F z G is true in S iff F and G are true in S, or else F and G are false in 5’; (7) 3x. F is true in S iff there exists some o E c? such that F{x H o} is true in S; (8) Vx. F is true in S iff for each o E 0, F{x H o} is true in S. Here, F{.x H o} denotes occurrences of x by o. the fluent formula resulting from replacing in F all free to express domain constraint underlying the light bulb. This formula Based on the definition In our electric circuit example, we will use the fluent formula Vx. on(x) s light as the the switches and in the state S = {on( sI ), on( s2), light}. the encoding of fluent In order to state that a fluent formula in this formula formulas is true in a state represented by some term s, each fluent literal e occurring is replaced by the expression Holds( e, s) . E.g., our domain constraint is true, for instance, of the Holds predicate is straightforward. in the fluent calculus relation between above becomes the intended (31))) (cf. Vx. Holds( on( x) , s) s Holds( light, s) . (34) For formal term s to a formula reasons, we introduce a function like (34). This transformation r mapping a fluent formula F and some is inductively defined as follows: 350 M. Thielscher/Art$cial fnfelligence 89 (1997) 317-364 VT(T,s) = T, 77( I, s) = I, ?r( e, s) = Holds( e, s) , z-(FAG,s) =T(F:s) r\~(G,s), z-( F V G, s) = rr(F: s) v rr(G, s), z-(F > G,s) =~r(F:s) > n(G,s), TT(F-G,s)=r(F,s) -r(G,s), ?I-(Vx. F; s) = vx. 7?-( E s) ) T(3XF;S) =Llx.YT(F:s). (35) For notational the definition of Holds, of fluent formulas is correct: convenience, we will usually write Holds( E s) instead of r( E s). Given (3 1) , and the extended unique name assumption, our encoding Proposition 25. Let F be a Jluent formula and let S be a state, then EUNA, (3 1) /= Holds(Rrs) is true in S, else EUNA, (31) k THolds(F; 7s). i’F literal then, according 22, the latter is equivalent Proof. If e is a fluent Following Proposition turn is equivalent of 7~. The claim can then be proved by straightforward F. Cl to EUNA, (31) k Holds(e, 7s) according to Definition 24, e is true in S iff {l} C S. in to EUNA b 32. e o z = ~~7, which to (31) and the definition induction on the structure of In particular, we call Possible a state term that satisfies a given set of domain con- straints D: Possible(s) z A Holds(D, s) . DEV In our example scenario, this amounts to (cf. (34) ) Possiblet s) s [Vx. Holds(on( x) , s) s Holds( light, s) 1. (36) We conclude this section by introducing an extended notion of action laws. An from 0) instances. in which case it is considered In what follows, law may now contain variables, action for all of its ground denotes a finite sequence of variables chosen from the given set V (respectively chosen that occur then a ground 0 = {X, h 01,. . .) x,~o,}to[,whereot is also denoted by [[ ZJ , free in some expression of arbitrary but fixed If X is a sequence this is written o,~O.LetZ=ot length. then ,..., ,..., t, instance of some expression &[X] is obtained by applying a substitution representative 0) entities of the variables the expression X (respectively t[ ?I. Let ? = XI,. . . , x,$, o,,then6[Zi]B Definition 26. Let A be a finite set of action names, each of which is associated with a law is a triple (C [ Xl, a( X), Et?]) where C [ Tl natural number called arity. An action M. Thielscher/Art$cial Intelligence 89 (I 997) 317-364 351 and E[X] are sets of fluent expressions It is assumed If S is a state, a ground that (C[;S] 1 = (E[o] ( for any sequence 0 of entities. instance a[51 of an action and a E A is of arity equal to the length of X. law cu[Z] = (C[jT],a(Z),E[Y]) of ILY [ O] to S yields (S \ C [ 01) U E [ 01. is applicable in S iff C [ 01 C S. The application Example 2 (continued). toggle(x) by the following For our electric circuit domain, we define an action called two laws: (37) say, toggle(st) When executing, {x H st } of the first action application yields in S = {on(st),on(~), law in (37) is applicable light}, due then the instance 0 = C_ S. The to {on(x)}0 <s\ {ono}) u {on(sd} = {on(s,),on(S2),light}. By defining a ternary predicate called Action, we encode a given set of action laws C={(C~~X~l,u~~~~),E~~~~l),...,(C,[~,,l,~,,~~,,~,~,,~~~l)} (n30) as follows: (38) of action The application calculus-based meaning instance of some action encoding is that Result(s,a, to Definition laws according 26 is modeled called Result. The the result of applying law for the action name a to the state represented by S: a ternary predicate iff S’ represents by defining s’) in our fluent intended some is true Rest&( s, a, s’) - 3c, e, z [Action(c, a, e) A c o z = s A s’ = z o e] . (39) Notice hand is contained equation also guarantees clause (2) of Proposition effect, e, to z (according states that this encoding Proposition 6 n} a set of action length m. Furthermore, that the first equation, c o z = S, ensures that the condition of the action in the state represented by s (cf. clause that z contains all fluent literals law at ( 1) of Proposition 22), This to the addition of the in s but not in c (according the second equation encodes (3) of Proposition 22). The following proposition 22). Finally, to clause is correct: 27. Let A be u set of action names, C = { (C;[X,] ) a(Zi) 9 E[Yi]): 1 < i laws, S a state, a E A of arity m, and 5 a sequence of entities of let s’ be a collection of$uent literuls. Then EUNA, (38), (39) k Result(s,u(Z),s’) (40) ifthere applicable exists an action law a[?] = (C[Y],u(Z),E[Z]) E l whose instance a[G] in S and whose application yields a state S’ such that EUNA + s’ = 7s’ is , else EUNA, (38), (39) b ~Result(s,u(Z),s’). 352 M. Thielscher/Artificial Infelligence 89 (1997) 317-364 Proof. From EUNA, it follows iff there cu,[X,] = (C;[Z~],a(Z;>,E[lY~]) in C such that (38) and (39) (40) that in conjunction with the standard equality axioms, is an instance is true (Ui[Z] of an action (29) E law EUNA +!Iz[Tc,,B, oz =sI\s’=z OTT<,;,,. This in turn is true iff ( 1) Ci [ Z] C S (according (2) EUNA /= s’ = ~(s\c,l~~)~~,l~l (according tion 22 since (S\ Ci[O]) n Ei[O] = 0). to clause ( I ) of Proposition 22), and to clauses (2) and (3) of Proposi- Following Definition 26, these conditions and resulting in S’ = (S \ Ci[Z] ) U Ei[Z] such that EUNA b s’ = 7s’. 0 are equivalent to ai [ 01 being applicable in S As before, however, the resulting i.e., (36) k lPossible( state term s’ may violate s’). In this case, the corresponding the underlying domain state term requires the fluent by means of causal relationships. Their encoding within in the following section. constraints, further manipulation calculus is presented 6.2. Executing causal relationships Similar to the case of action to formulate causal laws, we may exploit relationships with variables the extended notational in their components. expres- These are then considered representatives for all of their ground instances. siveness relationships Definition 28. A causal relationship is an expression of the form E causes where Qi is a fluent formula and E and e are (possibly negated) fluent expressions. e if @ Let (S, E) be a pair consisting of a state S and a set of fluent literals E. Furthermore, let Y = G causes free variables occurring S k @[O] A m e if @ be a causal relationship, and let X denote a sequence of all in E, e, or @. Then an instance Y[ O] is applicable to (S, E) iff and E[ 51 E E. Its application yields the pair (S’, E’) where S’ = (S \ {era1 )I u {@[a 1 and E’ = (E \ {e[Cl}> U {d51}. Let A be a set of action names, C a set of action laws, 2, a set of domain constraints, let S be a state satisfying V, a E A Furthermore, and R a set of causal relationships. of arity m, and 0 a sequence of entities of length m. A state S’ is a successor state of S and a(6) to S) instance a[o] of an action law cu[Z] = (C[F],a(X),E[Z]) iff there exists an applicable EL such that (with respect ((S\C[O]) (1) (2) S’ satisfies uE[5],E[Zi])&_(S’,E’) for some E’, and ;D. Example 2 (continued). Based on the formalization throughout this section, we define the following two causal relationships: of our electric circuit domain used on(x) causes light if ‘my. on(y), on(x) causes light if T. (41) h4. Thielscher/Artificial Intelligence 89 (1997) 317-364 353 the instance Then {on( ~1))) and since on( st ) occurs {X H st} of the first one is applicable to ({on(s,),on(s*),light), since Yy. on(y) A light is true in the first component of this state-effect pair in the second component. The application yields ({on(sl),on(s2),light),(on(sl),light)). Now the first component constitutes a successor satisfies the underlying domain constraint (cf. (34)), thus state of {on( si ) , on( s2), light} and toggle( s1 ). Having the extended concept of causal relationships raises the question is, how causal relationships with variables can be immediately from domain constraints given an appropriate notion of influence how Definition 9 can be adapted-that extracted information. Doing this for arbitrary domain constraints, however, turns out to be a nontrivial problem. of the form Y’xsy’v’~. p(x, y, z). constraint For instance, Suppose also that some action causes some instance, false is violated afterwards. Then we need to decide how this and that the domain constraint some other can be “corrected” true. This obviously by making on how the different requires precise suppose we have a domain instances of p interact. instance p(o{, oi,oi) say p( ot,u2,03), information to become Since we assume finiteness of sets of entities, it is generally to rewrite possible free: Each Yx. F is replaced by constraint so that it becomes quantifier any domain /n\oEO F{x H o}, and each 3x. F is replaced by VoEO F{x H o}. If the components fluent of the influence expressions, to pairs of (positive) are also restricted information ground then Definition 9 can be directly adopted. this method does not exploit however, influence Obviously, the extended expressiveness the resulting set may contain information. relationships with variables of causal relationships with variables. As a consequence, large subsets, each of which could be represented by a single causal relationship. We therefore develop a generalization of Definition 9 at least for a certain class of domain constraints and causal ground case. To be precise, we consider domain constraints of a quantifier fluent expression with free variables X. Furthermore, information Z are interpreted indicates that a change of any instance fl (is,) may affect any instance f2(02). is of the form ‘G. e[ X] or of the form 3X. [[?I, where extraction of extension of the ![?I of the influence For these domain constraints, If ft , f2 are fluent names, in which each occurrence and a straightforward the components the automatic as follows: is intuitive then (ft is a , f2) E Z When computing the CNF of a set of domain constraints which in the literals. Then above sense, sub-formulas Y’x. ![?I each conjunct literals and expressions of the form Y?. e[ X] and 3X. e[ X] . On this basis, an adequate set of causal relationships and 3X. e[Y] are treated like ordinary is obtained as follows: in the resulting CNF is a disjunction is restricted of ground consisting Definition 29. Let V be a set of domain determines a set of causal relationships R following (1) Let R := {}. (2) LetDiA...AD,betheCNFofAV.ForeachDi=F~V...VF,,, do the following: (3) For each j = I,. . , rni do the following: constraints. An influence information 1 this procedure: (i=l,...,n) 354 M. Tlzielscller/Art~cinl Intelligence 89 (1997) 317-364 (4) For each k= l,..., mi, k#j, let @ := 5, 29 A I = 1, w, I jj.1 $i and add the following causal relationships (a) If Fj = l?j then (1) (2) if Fk = !k then add q causes if Fk =%,.!k[?k] then add c CaUSeS to R: .$ if @, if Fk = 3&.-!k[zk] (3) If Fj =Ei.l,;[_i] then then add t,, CaUSeS (b) (c) ( 1) if Fk = & then add e,i [Xi] causes & if @, (2) if Fk =vzk.&[?k] then add JJ;[Zj] causes &[xk] if @, ifFk=!&.&[&] (3) If Fj = 5;. l,i[I?j] then thenaddmcausesPk[Yk] if tJ?k.-@&@. &[&I &[x,] if @, if &!k.&[&] A@. ( 1) if Fk = !k then add e,i [ g,] causes !k if V’xi. e,rxi] A @, (2) (3) ifFk=\J?k.!k[?k] thenaddei[x,lcauses!k[?k] if VXj.m//@, if Fk = 3%k.!k[?k] then add !i[Z,j] CaLlSeS fk[i?k] if Y?j.mA %?k. ek[xkl A @. In any of these cases, however, add the respective causal relationship only if (lt,jl, lekj) E z. Example 2 (continued). Recall our domain constraint D = \Jx. on(x) E light, and let Z = {(on, light)}. Applying Definition 29 yields the following causal relationships: l The CNF of D is (3x. on(x) V light) A (Vx. on(x) V light). l As regards the first conjunct, DI = 3x. on(x) V light, we obtain the following: -Incasej=l,k=2 we have (on, light) E 1, which yields on(x) causes light if ‘dx. on(x) according to clause - In case j = 2, k = 1 the second k=2 l As regards - Incase j=l, (cl). we have (light, on) # 1. conjunct, 02 = Vx. on(x) V light, we obtain we have (on, light) E 1, which yields the following: on(x) causes light if T according to clause - In case j = 2, k = 1 (bl). we have (light, on) $1. Altogether, we obtain exactly the two causal relationships granted in (41). The encoding of a given set of causal , r, [ Xn ] = E, causes 28. We define a predicate Causes(s, e, s’, e’) which pn if @,,} (n 3 0) if @I,... Definition in the fluent calculus is intended relationships R = (~1 [Xl] = ~1 causes ~1 follows to be true 2y If F/ = VZ. Y[ ,Y] then E denotes the formula 3k. ![,?I, and if F, = 3X. @I k] then 9 denotes VT. P[i]. - M. Thielscher/Art$cial Intelligence 89 (1997) 317-364 355 iff there is an instance of a causal relationship whose application E, S’, and E’: (S’, E/)-where yields in R which is applicable s, e, s’, and e’ are term representations to (S, E) and of S. Causes( s, e, s’, e’) Holds(@; A 5, s) A 3z (i o z = s A s’ = z o pi) n -v 3zj i=l A Iv. &j 0 LJ = e Qw.&owjeAe’=eopi V ilW(~OW=eAe’=WO@i) (42) 1 needs explanation. The first row in the right-hand the two conditions @i r\g be true in S and S’ = (S\{z}) the condition si E E. Finally, to encode If z $! E, then we just have side of the formula U { pi}. The second row the condition E’ = (E \ {z}) U {pi}, to add pi to the to If, on the other hand, z E E, then we have This definition encodes encodes two cases have corresponding additionally shows that this encoding with our encoding of fluent formulas to be distinguished: row). term e (third the sub-term remove is correct given the definition of Holds, row). The following proposition in conjunction (31), ‘& from e (fourth (cf. (35)): Proposition 30. Let R be a set of causal relationships. Furthermore, E a set of Jluent literals, and s’ and e’ two collections of fluent literals. Then let S be a state, ElJNA,(31),(42) /= Causes(Ts,TE,s’,e’) (43) iff there exist two sets ofjuent and (SE) +-R (S’,E’), literals S’ and E’ such that EUNA k s’ = rs~ A e’ = 7~’ /=Causes(~s,~E,s’,e’). else EUNA,(31),(42) Proof. From relationship side of (42) (42) it follows ri [ Xi] = Ei causes that (43) is true iff there is an instance pi if @i in R such that the conjunction ri[ 01 of a causal in the right-hand is entailed. This in turn holds iff ( 1) Qii [ Z] A pi [ 01 is true in S (according to Proposition 25) ; C2) s’ = T~s\{Qi~4~YJ{dal) (3) (4) (4~1) C E ( according (a) either {m} (according to clauses (2) and (3) of Proposition 22) ; to clause ( 1) of Proposition 22) ; and of Proposition $Z E and e’ = rEu{L1~[611 (according 22)) to clauses (1) and (3) (b) or else {ei[i?l} C E and e’ = rCE,~~l)u~p,rC,) (according to clauses (l)-(3) 22). Following Definition 28, these conditions sets S’ and E’ such that EUNA b s’ = 7s’ and EUNA /= e’ = rKf. of Proposition are equivalent ’ 0 to (S, E) -++{r,ral) (S’, E’) for According by repeatedly to Definition applying causal relationships 28, a successor state is obtained from an intermediate until a state results that does not violate state the 356 M. Thielscher/Art@ial Intelligence 89 (1997) 317-364 relationships In order to encode domain constraints. a predicate Rami~( s, e, s’). It is intended causal satisfies and S’. This essentially defined way of encoding requires in (42). As this cannot be expressed the domain constraints-where to (S, E) eventually to construct results to be true iff the successive application in a pair whose first component, this by means of the fluent calculus, we define of S’, of S, E, the transitive closure of the Causes relation logic, we use the standard s, e, and s’ are term representations in first-order transitive closure using a second-order formula: fjSl,el.n(sl,el,sl,el) A VSI, el, ~2, e2, $3. e3 Rami&( s, e, s’) - VII (H(sl,el,S2,e2) ACul(ses(s;?,e;!,s3,e3) [ 3 fl(s17e17s3,e3)) 3 3e’. Z7( s, e, s’, e’) A Possible( s’) . I (44) That is, Ramifi( s, e, s’) is true iff both there is some e’ such that (s, e, s’, e’) is in the transitive closure of Causes, and s’ satisfies the domain constraints. Finally, adding (39) completes our encoding. An instance Successor( s, a, s’) shall be true iff s’ represents a successor state of a and the state represented by s: the ramification to formula process Successor( s, a, s’) -3c,e,z[Action(c,a,e) Acoz =sARumi&(z oe,e,s’)]. (45) let 3C denote To summarize, the union of EUNA with the definitions of Holds (31)) Possible (36)) Action (38)) Causes (42)) Ramify (44)) and Successor (45)) based on given sets of domain relationships. As the main result of the second part of this paper we prove that 3C provides a correct encoding of our solution to the ramification laws, and causal constraints, problem. action Theorem 31. Let 3C be the encoding of a set of domain constraints, a set of action laws, and a set of causal relationships. Furthermore, let A be a set of action names, S and S’ two states, a E A of arity m, and 0 a sequence of entities of length m. Then 3C j= Successor( s, a( ;5>, s’) iff there is a successor state S’ of S and a(Z) such that EDNA b s’ = rs~, else 3C + +uccessor( s, a( 5)) s’). Proof. The result follows from Definition 28, Propositions 27 and 30, and the fact that (44) encodes to satisfy the domain constraints the transitive closure of the Causes relation plus the requirement in conjunction with Proposition 25). Cl (cf. (36) M. Tlzielscher/Art~cirtl Intelligence 89 (I 997) 317-364 351 7. Discussion We have presented a method to accommodate indirect effects of actions which in- intuitively from unmotivated conceivable to distinguish the notion of causality two effects with the intended meaning the concept of causal relationships, each of volves changes. To this end, we have developed which connects the occurrence of the former causes the occurrence of the latter as indirect effect. Causal relationships the domain direct effects of an action can be generated auto- constraints. Moreover, we have argued matically given additional domain-specific injluence information-of how fluents may generally that causal relationships knowledge-called in order to reach a state that satisfies all underlying that, under specific circumstances, are serially applied to the intermediate affect each other. from computing state resulting We have illustrated (Section 5.1)) domains plicit qualifications rization and regarding domain constraints and ramification ification the method presented lem. regarding of our approach the expressiveness the problem of im- versus indirect effects (Section 3.3), fluents which resist any catego- (Section 5.2), expected non-minimal distinction between qual- for comparing the basis prob- to the ramification form in this paper with existing approaches that require a sophisticated (Section 5.3). These involving change results information The necessity of additional [ 151 in the context of the possible worlds approach tically by the mere domain constraints in of actions are implicitly possible to the original consideration yield unintended in Fig. depicted but contradict to prevent changes that are suggested syntac- the intuition, was first observed indirect effects for successor states staying as close as state while satisfying both the direct effects of the action under that this might in the circuit (such as a switch magically obtained by searching the authors argued [ 141. There, changes l), no solution was offered. and the domain constraints. Although its position jumping categorization-based between to this problem so-called frame and non-frame flu- solution to the persistence assumption, and their truth-values restrict persistence In [ 241, the first and most elementary was formally developed by distinguishing ents. so Only the former are subject completely determine [ 71, in (the second part of) ods do not simply the other. Instead among all possible changes framework based on this concept applicability already argued to each fluent the more complex deep analysis of possible of different approaches a domain the truth-values of the latter. Similar [4], and in [ 221. More sophisticated to one category by allowing arbitrary changes ideas have been used e.g. in categorization meth- in to define a partial preference ordering 16)) e.g. [ 391. In [40], a systematic they exploit different categories (as in our Definition in Section 5.1 that even if it is possible in a particular domain is introduced with the aim of assessing the range of that follow the same principles. However, we have to assign an appropriate category fine-grained, the categorization is suitably this task becomes as it requires if only is the more difficult a the only suitable one, a interactions. Besides, despite being “’ Earlier, the author of 1481 raised the idea of introducing some notion of preference as regards changes of specific fluents to changes of other fluents. Yet her discussion was only informal and took place in the context of an example. 358 M. Ti~iels~lzer/Arti~cial Intelligence 89 (I 997) 317-361 particular categorization may appear very unnatural even in simple domains, as we have illustrated in the context of Example 17. More recently, several approaches have been established notions of causality, as does our method, situation The monotonic, cations of indirect effects by means of complete descriptions a particular circuit domain, which fluent might be caused [8] would encode as calculus-based to change. As an example, to tackle the problem of unintended formalism developed that take into account specific changes. in [ 81 supports specifi- of how the truth-value 01 recall the basic electric ~u,s[Cuuses(a,s,light) = (Cuuses(a,s,sw,) AHolds(sw:!,s)) v (Cuuses( a, s, sw2) A Holds( SW, ) s) ) ] ) (46) Vu, s[ Cuncels( a, s, light) = Cuncels( a, s, SWI ) V Cuncels( a, s, SW?) ] where Cuuses( a, s, f) f to become f to become given the specification should be read as “executing action a in situation s causes fluent true”, Cuncels(u, s causes fluent false”, and Holds( f, s) as “fluent f is true in situation s”. Suppose we are action CI in situation s, f) as “executing of how SWI may become true (respectively false), viz. ‘da, s[ Cuuses( a, s, SWI ) = a = toggle, A lHofds( SW! , s) 1, Vu,s[Cuncels(u,s,sw~) 3 a = toggle, AHolds(swl, s)] plus this general axiom of persistence: VLZ, s, f[ Holds( f, do( a, s) ) -_ Cuuses( a, s, f) V (Holds( f, s) A 7Cuncels( a, s, f) ) ] (47) s) denotes the situation say, that +folds(swl, action a in situation obtained by executing so) A Holds(sw2, so) A lHolds(light, s. where &(a, One then obtains, SO) im- plies Cuuses( toggle,, SO, SWI ) and, hence, Cuuses( toggle,, SO, light). This in turn implies SO)), as intended. No effort has to be made to suppress an un- Holds(light,do(toggle,, to (46) exists that may support wanted change of sw2 since no causal this. On the other hand, the use of if-and-only-if as in (46), Otherwise, To see why, consider i.e., hierarchical. changes cannot be precluded. i.e., if fluents depend mutually, unmotivated the simplest possible cyclic specification, to domains where these dependencies descriptions of causal dependencies, relation similar is restricted are acyclic, namely, Vu, s[Cuuses(a, s, f~) = Cuuses(u,s, f2) 1 (48) in SO does not influence Suppose a is an action whose execution (48) in conjunction with the persistence axiom (47) and f2 keep their truth-values. For neither Xuuses(u, entailed. The two mechanically constitute second in the right-hand of Holds( f, s)) or to the finally resulting connected a simple example which falls limitation of [ 81 compared side of a definition is too weak to conclude SO, f 1) nor Cuuses(u, fr nor f2, then formula that both fr SO, f2) is in Section 3.1, for instance, switches discussed into the category of mutual dependencies. A to our approach stems from the fact that the formula like (46) either refers to the original state (in case successor state (in case of Cuuses( a, s, f) or M. Thielscher/Art~cial Intelligence 89 (I 997) 317-364 359 respectively, occurring Cuncels( n, s, f), no intermediately formalization bulb is recorded by the light detector does not allow for deriving In [4,29], the notion of causality in conjunction with the persistence axiom). Consequently, fact can possibly this the successor state where a flash of the light effect; hence, trigger an indirect in our Example 18. Definition 11). By virtue of being directed deduction non-causal way (e.g., WI A sw2 + light has a different meaning is introduced by defining so-called causal rules (cf. in a than, say, WI A light to [ 41, rules, they cannot be applied in [ 291 compared rather is that constraints in the approach [29] additionally their equivalence than ramifications rule. Apart from state whose distance this, the two approaches Besides a far more simple formalization employed implicit qualifications for deriving (cf. Section 3.3). The reason appear closely in case of deterministic ” [ 41 to state no matter how many changes are necessary requires all changes be explicitly grounded on some related. For instance, actions and domain In particular, both methods are =+ m). the latter does not allow from domain one always strives for a successor this end, while causal we strongly presume constraints which do not give rise to qualifications.. grounded on the policy of minimal successor of another proper successor might not always capture non-minimal approaches on the one hand and our concept of causal relationships has been elaborated in Section 5.3. Recall expressiveness and ramifications to stress that in the approaches of [4,29] part of a domain specification. This requires more design effort than necessary-as be seen by our suggestion more general any potential than the distance this paradigm states may exist which have these two on the other hand, a lack of triggered by one and the same domain constraint. Finally, we want that causal rules be given as can of causal rules regarding sophisticated distinctions between qualifications distance but are equally plausible. A second difference between state is strictly in Section 5.2, however, to the original state. As argued the intuition because successor to generate causal relationships to rejecting larger change, which amounts there we have it is assumed by employing automatically on potential information influences. illustrated that Similar remarks apply to a recently developed integration of causality in 1261, also with resembling causal the aim of handling relationships formulas effects and their indirect consequences. into the situation indirect to formulas are used These calculus-based effects 12.51. There, define dependencies arc of the form framework presented first-order between Vs[@(s) ACuused(fl,ul,s) A...ACuused(f,,o,,,s) 3Cuused(f,u,s)] (49) u, s) should be read as “fhtent is caused s”, and where Q(s) describes properties of situation where Cuused(f, situation the basic electric circuit domain, whose encoding by means of the approach include to take truth-value s. As an example, u in recall [ 251 would f Vs[ Holds( sw2, s) A Cuused( swl , true, s) > Cuused( light, true, s) ] ” Moreover, a third approach, is similar between these three frameworks, to [ 4,29 1 in using expressions which resemble causal rules. A thorough I 1 I, I2 1, which is based on a nonmonotonic theory of “conditional entailment”. and formal comparison however, has not yet been performed. 360 M. Tlzielsclier/Art~c~i~~i 1rztelligenc.e X9 (1997) 317-364 along with the action definition j’ Vs[ +Jolds(swl , s) > Cuused(swl , true, do( toggle,, s) ) 1. (50) The general axiom of persistence employed in this context is (like in (50)) and the laws of causality the direct effects of actions This axiom is of course useless unless the extension of the predicate Caused is minimized given which is of the form (49) ) . This is formally achieved by applying circumscription Hence, besides also leaving the various causal relations the effort of constructing designer, this work, too, appears closely related is expressive enough qualification may occur can be solved by employing (each of [ 301. to the change as well. In fact, (49) and for this is that the predicate Caused (49). For instance, our Example 19 in Section 5.3. The reason side of the implication to allow for the sophisticated distinction between is grounded on the paradigm of minimal that the scheme ramification to [ 4,291. Notice, however, in the left-hand this method discussed VJS [ Holds( at-trap, s) A Cuused( trap-open, true, s) > Cuused( alive, false, s) but not ‘ds[ Holds( trap-open, s) A Cuused(ut-trap, true, s) > Cuused( ulive,fulse, s) 1. In order to account for expected non-minimal for the approaches discussed changes, changes, more sophisticated means than above. This requires triggered by actually occurred conceivable effects, and unfounded changes. The approach developed in [ 271, between semantics this challenge have to be developed distinguish minimization to carefully (direct or indirect) which uses Dijkstra’s fails to address is tackled by allowing the assumption determine be produced gun). 33 Our causal relationships if the respective been generated as indirect effect. of persistence. But triggering actions (e.g., a turkey magically account effect either of programming appropriately. to (temporarily) in case languages In this approach, release fluents to reason about actions, problem the ramification to from being subject starts walking fluents, unexpected the domain constraints do not completely effects may if being shot at with an unloaded for this problem since they are only applicable the direct effects or has previously is among the new values of all in this way released different representing is considerably An approach which is based on networks still related, networks describe, argued in dynamically to standard effects. If probability from all methods discussed causal so far yet [ 341. These -4s of one or more nodes may be re-set and, then, the values of all depending nodes need to be adjusted according indirect (Bayesian) then a network whose rules of probability. This can be regarded as generating in the first place, static dependencies to the binary 01 l-case, values are restricted their components. probabilistic truth-values however, [ 35,361, theories among the 72 For the sake of simplicity we neglect ” We thank Vladimir Lifschitz for this observation. the concept of action preconditions. M. Thielscher/Art~ficial Intelligence 89 (1997) 317-364 361 ! 1 (bl Fig. 6. Graphs Example 19, and (c) representing the structural between Ruents regarding (a) Example 18, (b) dependencies - -. the domain constraint SWI V SW? (Inducing a cycle), respectively. suitable 18 since information. relationships. in this section recall Example the non-minimal is the one depicted remains successor have been determined, light stays false; hence, for Example 18. Although First, recall Fig. 6(a). Since the proposition detect necessarily resembles our concept of influence between true, or it happens in Fig. 6(b). This, however, does not allow the two situations where either trap-open becomes today, let us point out some restrictions of causal networks compared For instance, nodes are fluent names the relation between Fig. 6(a) depicts a network is far from being formally this approach and the other methods discussed to the established concept of causal the resulting value of a node, after having fixed the direct effects, must not be computed until all new values of false its predecessors state regarding Example where a light flash has been detected cannot be obtained. Second, 19. Since a change of trap-open might cause a change of alive depending on at-trap, the adequate network to distinguish true with at-trap being whose necessity has been claimed similar graphs, which means Section 3.1; relationships from these rather specific observations, to have a formal probabilistic actions without preconditions, which denotes how this approach can also be applied postdiction finding explanations This discussion of approaches based on only and it merely refers to the temporal projection problem, the task to predict the effects of action sequences. This raises the question or in [ 381) ; the latter of which deals with the execution of action sequences. the insights gained causal theories are based on acyclic connected (cf. (cf. Fig. 6(c) ). Aside it most interesting regarding networks. The calculus presented for observations made during leads us to the question of how like the mechanically cannot be represented in Section 5.3, is not supported by causal networks- to be the other way round. Hence, (also called chronicle completion to causal rules. Finally, networks in other modes of reasoning however, we would consider the sophisticated distinction the range of applicability that simple examples (3) and (4)) like planning for instance, representing considers switches result [36], in this article. Our formalization high-level, abstract description have concentrated form of action specifications to exploit in the first part of this paper has been embedded language and semantics in in a for action scenarios, where we only and, to this end, employed a simple as regards direct effects. Three recent, similarly high-level on aspects of ramifications 362 M. Thielsclzer/Artifici(II Intelligence 89 (I 997) 317-364 language action semantics description in [ 461. These approaches concept of causal be based on the dialect developed here needed constitute [22], which handles does the extension of the ego-world-semantics relationships. ramifications an alternate focus on sophisticated ways to formalize [ 131, the ego-world-semantics are considered prime candidates In case of the action description in [ 31, which includes this aspect, namely, the action [ 381, and the framework presented for being enhanced by the this should language, the notion of nondeterminism, if more than a single successor state exists. The resulting extension would in as language presented and minimization, to the variant of the action description on the basis of categorization in [40]. presented The main purpose of these three formal frameworks [ 19,201. Our Theorem 3 1 demonstrates effects, existing calculi can be extended is provably correct with respect problem in the second part of this paper we have adapted is to provide a uniform semantics to reason about actions and change. Given our formal proposal in such a way that their to our semantics. the fluent is the work the that our extension of this approach in the first part. While to the formal semantics described solely on the ramification in its basic form, to the linear connection shown [ 16,28]-has problem, logic about actions based on linear e.g. regarding postdiction problems and nondeterministic in this article has been concentrated being closely related, indirect to the ramification formalism, for calculi designed to handle solution As an example calculus correct with respect reported fluent calculus-besides method a wide range of applicability, actions in conjunction with (locally) research consists ontological [ 21 and reasoning aspect, [ 31, reasoning about counter-factual action sequences inconsistent specifications in combining into a uniform and expressive calculus. all these results, each of which [ 441, or concurrent actions [ 31. Thus, a main goal of future focuses on a single Acknowledgements The author wants to thank Wolfgang Bibel, Jiirgen Giesl, Christoph Herrmann, Kohler, Stuart Russell, Lokendra Shastri, and the anonymous ments and suggestions with Charles Elkan, G. Neelakantan Kartha, Vladimir Lifschitz, Norman McCain, Erik thanks Sandewall, on the paper. The paper has also benefited and Hudson Turner. Special to Hans-H. Thielscher. referees Jana for helpful com- from discussions References [ I 1 A.B. Baker, Nonmonotonic reasoning in the framework of situation calcuhrs, Artif: fnfeil. 49 ( 199 I ) S-23. solution for plan generation, New Generalion Compu/. 4 ( 1986) and M. Thielscher, Explicit and implicit indeterminism: reasoning I 1 S-1 32. about uncertain 12 ] W. Bibel, A deductive 13 1 S.-E. Bomscheuer and contradictory specifications of dynamic systems, J. Logic Propxm. ( 1997). [ 4 1 G. Brewka and .I. Hertzberg, How to do things with worlds: on formalizing actions and plans, J. Logic Com/x~t. 3 ( 1993) 5 17-532. 15 1 W. Btittner, Unification in datastructure multisets, J. Autom. Reasoning 2 ( 1986) 75-88. [ 6 I M.O. Cordier and P. Siegel, A temporal revision model for reasoning about world change, in: Proceedings Second International Conference on Principles oj’Knowledge Representation cmd Reusoning, Cambridge, MA (1992) 732-739. M. Thielscher/Artijicial Intelligence 89 (1997) 317-363 363 [ 7 1 A. de1 Val and Y. Shoham, Deriving properties of belief update from theories of action (II), in: Proceedings IJCAI-93, Chambety about action [ 8 1 C. Elkan, Reasoning ( 1993) 732-737. in first-order logic, in: Proceedings Ninth Biennial Conference of the Canadian Society for Computational Studies of Intelligence, Vancouver, BC ( 1992). 19 ] R.E. Fikes and N.J. Nilsson, STRIPS: a new approach to the application of theorem proving to problem solving, Artif: Intell. 2 (1971) 189-208. [ 101 J.J. Finger, Exploiting constraints in design synthesis, PhD thesis, Stanford University, Stanford, CA (1987). 1 I I 1 H. Cieffner. Causal theories for nonmonotonic reasoning, in: Proceedings AAAI-90, Boston, MA ( 1990) 524-530. 1 12 1 H. Geffner, Deft&t Reasoning: Causal and Conditional Theories (MIT Press, Cambridge, MA, 1992). [ I3 1 M. Gelfond and V. Lifschitz, Representing J. Logic Program. 17 action and change by logic programs, (1993) 301-321. [ 14 1 M.L. Ginsberg and D.E. Smith, Reasoning about action I: a possible worlds approach, A@ Intell. 35 (1988) 165-195. 1 IS I M.L. Ginsberg and D.E. Smith, Reasoning about action II: the qualification problem, Artif: Intell. 35 ( 1988) 31 J-342. I 161 J.-Y. Girard, Linear [ 17 I C. Green, Application DC (1969) 219-239. logic, Theor. Comput. Sci. 50 (1987) I-102. of theorem proving to problem solving, in: Proceedings IJCAI-69, Washington, 1 I8 I S. Hanks and D. McDermott, Nonmonotonic logic and temporal projection, Artif: Intell. 33 ( 1987) 379-412. 1 19 1 S. Holldobler and .I. Schneeberger, A new deductive approach to planning, New Generation Compuf. 8 ( 1990) 225-244. [ 201 S. Holldobler and M. Thielscher, Computing Ann. Mafh. Arf$ Intel/. 14 ( 1995) 99- 133. change and specificity with equational logic programs, [ 2 I I .I. Jaffar, J.-L. Lassez and M.J. Maher, A theory of complete logic programs with equality, .I. Logic Program 1 ( 1984) 2 I I-223. I22 1 G.N. Kartha and V. Lifschitz, Actions with indirect effects, in: Proceedings Fourth Interna/ional Co@rence on Principles of Knowledge Representation and Reasoning, Bonn ( 1994) 34 I-350. [ 23 I V. Lifschitz, On the semantics of STRIPS, in: M.P. Georgeff and A.L. Lansky, eds., Proceedings of the Workshop on Reasoning about Actions and Plans (Morgan Kaufmann, Los Altos, CA, 1986). I24 I V. Lifschitz, Frames I25 I F. Lin, Embracing in the space of situations, Artij Infell. 46 ( 1990) 365-376. causality the indirect effects of actions, in specifying in: Proceedings NCAI-95, Montreal, Que. (1995) 1985-1991. [ 26 I F. Lin and R. Reiter, State constraints I27 I W. Lukaszewicz for programming 1955. and E. Madalifiska-Bugaj, languages: Preliminary revisited, J. Logic Comput. 4 ( 1994) 655-678. Reasoning about action and change using Dijkstra’s semantics report, in: Proceedings IJCAI-95, Montreal, Que. ( 1995) 19SO- I28 I M. Masseron, C. Tollu and J. Vauzielles, Generating plans in linear logic I. Actions as proofs, Theor. Compuf. Sci. 113 (1993) 3499370. I29 I N. McCain and H. Turner, A causal Montreal, Que. ( 1995) 197881984. theory of ramifications and qalitications, in: Proceedings IJCAI-95, I30 I J. McCarthy, Circumscription-a I31 I J. McCarthy, Programs with form of non-monotonic common sense, reasoning, Artif: fntell. 13 ( 1980) 27-39. in: Proceedings Teddington Conference on the in: J. McCarthy, Formalizing Common ( 1959) ; reprinted Mechanization of Thought Processes, London Sense ( Ablex, Norwood, NJ, 1990). [ 32 I J. McCarthy and PJ. Hayes, Some philosophical intelligence, in: B. Mehzer and D. Michie, eds., Machine Intelligence 4 (Edinburgh University Press, Edinburgh, 1969) 463-502. I33 I J. Pearl, Embracing I34 I J. Pearl, Probabilistic Reasoning in Intelligent Systems: Nefworks of Plausible I@rence reasoning, Art$ Intell. 35 ( 1988) 259-27 I from the standpoint of artificial in default problems causality (Morgan Kaufmann, San Mateo, CA, 1988). I35 I J. Pearl, Graphical models, causality, and intervention, Sfrrf. Sri. 8 ( 1993) 266-273. 364 M. T~~ielscher/Art~~ficial Intellipnce 89 (1997) 317-364 [ 36 1 J. Pearl, A probabilistic calculus of actions, in: Proceedings Tenth Annucd Con@vxxce on Uncertuintv in Artijicicd Intelligence, Seattle, WA ( 1994) 454-462. [ 37 1 R. Reiter, The frame problem for goal regression, result Cotnpurcttion (Academic in the situation calculus: a simple solution Intelligence in: V. Lifschitz, ed., Art$ificicd Press, New York, 199 1) 359-380. (sometimes) and a completeness and Mathenznticul Theory of [ 38 1 E. Sandewall, Features and Fluents. The Representcltinn of Knowledge about Dynamical Sy~terns (Oxford University Press, Oxford, 1994). [ 39 1 E. Sandewall, Reasoning about actions and change with ramification, in: Cornpurer Science 7ijday, Lecture Notes in Computer Science 1000 (Springer, Berlin, 1995). I40 1 E. Sandewall, Systematic change, Tech. Rept. LiTH-IDA-R-95-15, LinkGping comparison ( 1995). of approaches Department to ramification of Computer restricted minimzation using of Science, LinkGping University, 14 I 1 E. Sandewall, Assessments lnternc~tionul Gmference of ramification methods cf Knowledp on Principles that use static domain constraints, in: Proceedinp Representtrtiorz and Reasoning, Cambridge, MA (1996) 99-110. I42 1 J.C. Shepherdson, I43 ] M.E. Stickel, A unification algorithm [ 441 M. Thielscher, An analysis SLDNF-resolution with equality, J. kttom. Retrsorzing 8 ( 1992) 297-306. for associative commutative approaches of systematic functions, J. ACM 28 ( 198 1) 207-274. to reasoning about actions and change, in: P. Jorrand and V. Sgurev, eds., International Corlfererlce on Artijicicd lnrelligence: Methodology, Systems, Applications (AIMSA), Sofia (World Scientific, Singapore, 1994) 195-204. (45 1 M. Thielscher, Representing actions in equational International Conference on Logic Programming, [ 461 M. Thielscher, The logic of dynamic systems, in: Proceedings 1962. logic programming, Santa Margherita Ligure in: Proceedings ( 1994) 207-224. IJCAI-95, Montreal, Que. ( 1995) 1956- Eleventh [ 47 I M. Thielscher, On the completeness I48 1 M. Winslett, Reasoning Paul, MN (1988) 89-93. about action using a possible models approach, J. Autom. Reasoning 17 ( 1996) 199-2 14. in: Proceedings AAAI-RR, St. of SLDENF-resolution, 