Artificial Intelligence 80 (1996) 29-93 Artificial Intelligence Diagnosis based on explicit means-end models Jan Eric Larsson * Department of Automatic Control, Lund Institute of Technology, Box 118, S-221 00 Lund, Sweden Received June 1993; revised March 1994 Abstract validation, This artrcle describes three diagnostic methods for use with industrial processes. They are i.e., consistency checking of sensor and measurement values using any measurement redundancy of instrumentation; alarm analysis, i.e., analysis of multiple alarm situations to find which alarms ate directly connected to primary faults and which alarms are consequential effects of the primary ones; andfault diagnosis, i.e., a search for the causes of and remedies for faults. The three methods use multilevel Jaw models (MFM), to describe the target process. They have been implemented in the real-time expert system tool G2, in C, and in Common Lisp, and successfully tested on simulations of several processes. The knowledge representation ontology used is based on the notion of$ows, of mass, energy, and information, which are used to describe physical systems. The relationships between structure and function of a system is described by teleological relations, which connect the flow structures into a graph, built at model construction time. This allows the diagnostic reasoning to be implemented as searchers in a static graph structure, and it can thus be performed extremely rapidly. As with other model-based approaches, general algorithms are used over a representation with generative capacities. The representation gains strength from being functional with a very abstract physical level, more abstract than most qualitative physics models. It works well with systems that can be described using flows, while it currently lacks the capability of capturing important aspects of other types of systems, for example, electronic circuits. * This arti’cle is based on the author’s doctor’s of Automatic Control, Lund the Department fellowship visit at Knowledge Institute of ‘Technology, Lund, Sweden, and on work done during a postdoctoral Stanford University, Palo Alto, CA. Current address: Knowledge Systems Laboratory, Systems Laboratory, Department of Computer Science, Stanford University, 701 Welch Road, Building C, Palo Alto, CA 94304, USA. thesis from 0004-3702/96/$15.00 SSDIOOO4-3702(94)00043-3 @ 1996 Elsevier Science B.V. All rights reserved 30 J.E. LarssodArtificial In?elligence 80 (1996) 29-93 1. Introduction Diagnosis of industrial processes can be performed with different types of models. types in use today focus on physical structure and behavior, and for information. The latter is important to try and incorporate more teleological However, most model contain diagnosis, knowledge little or no means-end, i.e., teleological, though, and it seems to be worthwhile in model-based diagnosis. level of abstraction, This article describes diagnosis using one type of explicit means-end models, mul- [ 731. These are functional models of for a formal that in [ 79,801, and in [ 671. The following work is based on tilevel jaw models (MFM), as developed by Lind with a very high goals, or purposes, of the modeled language there are several minor differences between different versions of MFM, as presented [ 731, in Lind’s newer version the version described The contributions reasoning using MFM: combined with a teleological system. Lind has suggested a syntax ideas on how to use the MFM representation. Note in [ 671, while the latest definition of MFM appears of this article are descriptions in [ 79,801. for diagnostic and given general of three methods representation validation, l measurement 0 alarm analysis, l fault diagnosis. The measurement validation algorithm takes a set of measured to check consistency. A single erroneous flow values and uses is flow measurement redundancy any available marked and corrected. of measurements If there are several conflicting are marked but no flow value is corrected. values, the consistent subgroups The alarm analysis algorithm flow, highJlow, low volume, and high volume. Each alarm an MFM model, and the method recognizes are either primary or consequences of the primary ones. takes as input a set of alarm states such as normal, low is associated with a part of the primary alarms, while the other alarms The fault diagnosis algorithm uses an MFM model ing” style of diagnosis. The input can come from questions from measured signals and triggering of rules. The system explanations, and gives remedies. to produce a “backward chain- answered by the user or looks for faults, provides 2. The basic concepts of MFM An MFM model has been designed three basic concept is a normative description of a system, a representation to do, how it should do it, and with what it should do it. Thus, types of MFM are: of what it the 0 goals, l functions, l physical components. The goals are the objectives or purposes of the system, structors and operators want the system the goals are obtained, that the con- to reach. The functions are the means by which i.e., the powers or capabilities of the system. The physical com- i.e., the ends J.E. L.ursson/Art$cial Intelligence 80 (1996) 29-93 31 Fig. 1. Goals, functions, components, are connected while the components relations, but this is not shown via condition and relations. The functions are connected to functions via realize relations. Subgoals may be connected to goals via achieve relations, to functions in the figure. All three kinds of relations are many-to-many. ponents are what the system is constructed The go,&, and components from, the equipment of which it consists. depend on each other in specific ways. Thus, in MFM types of relations, that can be used to connect the objects: functions, there are different relations, relations, relations. l achieve l condition 0 realize An achieve functions are used to obtain into a tank could be used enough. A condition relation connects relation connects a set of functions that goal. For example, to achieve the goal of keeping to a goal, and it signifies that these the function of transporting water the level of the tank high in order for the function be fulfilled case for a mass transport electrical power to the pump must be fulfilled flow. function a goal to a function, and signifies to be available. For example, that the goal must this would be the realized as a pump, where the subgoal of delivering to drive the mass in order for the pump A reaZi:~e relation connects a physical component is used to realize or implement that the to a function, and signifies the function. For example, a pump could be component used to realize a mass transport function. to observe It is important that all the relations can be many-to-many. Several functions can be usNed to achieve one goal, one function may satisfy several goals, one goal can by several goals, be a condition one function can implement can be realized with many different components, functions, one function may be conditioned and one component several different see Fig. 1. to several functions, MFM dlemands that goals, functions, that functions and physical components are separate entities. The assumption from components no function in structure assumption of qualitative physics. In addition assumes by the designer during model construction. that the goals are not given by separate functions. Instead be viewed as separate to the is similar to this, MFM also they must be stated 3. Goals The concept of a goal to MFM, as it is the representational is central It is important part to be able to recognize in every activity using means-end device for and describe goals, as information. Without teleologic,al information. they play an important 32 J.E. Lmsson/Art$cial Intelligence 80 (1996) 29-93 knowing broad definition of a goal is as follows: the goals, it is more or less impossible to know the available functions. A A goal is the outcome towards which certain activities of a system are directed. However, specific descriptions. Thus, three different this definition types of goals are recognized: is very general, and it is useful to narrow it down to more l production goals, 0 safety goals, l economy goals. Production goals A production goal is used to express that to enable production, some specific process i.e., that an inequality of the following variable should be kept within a specified form should be satisfied: general interval, Of course, one of the limits could be infinitely system will be kept in a certain state, where production small or large. This means is indeed possible. that the Safety goals to express A safety goal process variable interval, case is probably a one-sided should be kept within safe regions, that for reasons of safe operation, is used some specific should be kept above or below some value, or inside or outside an the same test as for a production goal. However, a more common that some process variables this means far enough from dangerous values. i.e., essentially In practise, interval. Economy goals An economy goal is used to express considerations of overall process optimization. to a rather complex function G( xt , x2, x3, . . .) , depending efficiency. The satisfaction could be expressed Thus, it is typically connected on operational as satisfaction of the following constraints and economical inequality: Go < G(Xl,X2,X3,...) < Gl, where GO and Gt are numerical tory efficiency. i.e., an inequality of the following It would also be possible form: limits inside which the system is working with satisfac- to define an economy goal as an optimization, Often, however, translated it is impossible to use this form directly. into one of the earlier forms in order to be useful. Instead, the test must be J.E. LmssodArtijcial Intelligence 80 (1996) 29-93 33 4. Functions The second important concept of MFM is that of afunction. In the context of processes it is possible to find several interpretations of the function concept. In MFM a function is always associated with a goal, and correspondingly, goals are always associated with functions. In general, a function of a system could be given the following definition: A function is a r6le that a system has in the achievement of a goal. MFM describes the functional structure of a system as a set of interrelated flow struc- tures on different abstraction levels. The levels are connected via achieve and condition relations, and the how structures consist of connected flow functions. The types of tlow structures currently treated in MFM are: 0 mass flows, 0 energ:y flows, 0 information flows. These flows are of completely different types, but they have many properties in common. Most flow functions can appear in each type of flow structure, thus, there are three $0~ types of flow functions. There are also several function types, which are treated in MFM. First, there are the following Imass and energy flow functions: 0 source 0 transport, l barrier, 0 storag:e, l balance, l sink. These functions can be used for describing information flows as well. There are also some specific information flow functions: l observer, l decision maker, 0 actor. In addition to the flow functions proper, some organizational functions are also used. They are concerned with expressing support and control: 0 network, 0 manager. The network function is used to group a flow structure and connect it to a goal, while the manager function describes control and supervisory systems, including human operators. Most of the graphical symbols used to build MFM models are shown in Fig. 2. The choice of jaw functions The flow functions chosen in MFM are specifically aimed at describing certain aspects of physical systems, primarily mass and energy flows. This choice is a limitation, but it is not arbitrary. The motives for choosing jlow functions are as follows: 34 LE. Larsson/Artijicial Intelligence 80 (1996) 29-93 Mass flow functions Energy flow functions ~~~ .::i:i: :;:F>kzy ,, Source Transport Barrier Storage Balance Sink Observer Decision Actor Manager Network Goal Fig. 2. The symbols for the different MFh4 objects. l Interchange of mass and energy is responsible for the causal interaction between physical components. l Controlling l Controlling l How concepts applies the flows of mass and energy the flows of mass and energy is important is important for safety. for production efficiency. to a wide range of physical processes. Thus, while the choice of flow functions to be interesting. MFM could be extented with other types of functions, discussion. is a limitation, it is general and useful enough for a see [67] Source functions represents A source function the capability of a physical system to act as an infinite reservoir of mass, energy, or information. Of course, this is an idealization of the behavior are of a physical etc. A source provided by limitations function which maximize F. It has one output port where to other flow functions, system, but it is often useful. Typical examples of source functions tanks, storages, power supplies, flow F, and it can have capability and it can also be connected to subgoals via condition it can be connected is characterized by an output transmitters, information relations. Transport functions represents function from one part of the system A transport or information Typical examples of transport transported by gravity, heat exchangers, is characterized an interval connected relations. in which F must to other flow functions, by a throughput the capability of a system to transfer mass, energy, to another. to another or from one medium functions are provided by pumps, pipes where liquids are information function e.g., lie. It has one input and one output port where it can be flow F, and it can have capability channels, etc. A transport limitations, and it can be connected to subgoals via condition J.E. LarssodArhjicial Melligence 80 (1996) 29-93 35 Barrier functions represents from one part of the system A barrier function energy or information another. Typical examples of barrier heat isolating materials, A barrier equal flow funct.ions, and it can be connected the capability of a system to prevent the transfer of mass, to to another or from one medium are provided by traps in water systems, the safety encasing of nuclear reactors, encryption devices, etc. flow F, which should be close or to other to zero. It has one input and one output port where it can be connected to subgoals via condition relations. by a throughput is characterized functions function Storage fhmctions A storage function represents the capability of a system Typical examples of storage or information. liquids are stored, the water in a central heating system where energy where information is stored, etc. A storage function V, representing one output flow Fo. These attributes should fulfill the inequality: the amount of mass or energy accumulated, functions and to accumulate mass, energy, are provided by tanks where is stored, memory is characterized by a state variable one input flow Fi and dV - dt -fi+F, GE,, if it can be defined. A storage function has one input and one output port where it can be connected to subgoals via condition relations. formulation of Lind, a storage function may have several inputs and outputs, this has been disallowed and it can be connected to other flow functions, in the current work. [73]. For simplicity, In the original Balance functions A balance function the total rates of incoming are provided by forks in pipes, etc. A bal,ance function should fulfill the inequality: represents the capability of a system to provide a balance between functions flows. Typical examples of balance selectors, in heated water, channel of steam is characterized by a set of input and output flows. These flows and outgoing injection ]FI +Fz+...+F,,I <cl. A balance flow functions, function has several input and output ports where it can be connected to other and it can be connected to subgoals via condition relations. Sink functions A sink function represents mass, energy or information. As with sources, physical by tanks, storages, energy dissipation, s:ystem, but it is often useful. Typical examples of sink functions are provided information receivers, etc. A sink function is the capability of a system to act as an infinite drain of this is an idealization of the behavior of a 36 J.E. L.arsson/Artijicial Inielligence 80 (1996) 29-93 by an input flow F, and it can have capability characterized It has one input port where it can be connected be connected to subgoals via condition relations. to other flow functions, limits which maximize F. and it can also Observer functions function represents An observer to translate physical obser- the capability of a system vations to information. Typical examples of observer functions are provided by measure- ment devices, but they can also be performed by human operators. An observer function has one output port where it can be connected and it can also be connected to subgoals via condition to other flow functions, relations. Decision functions represents A decision function are performed control algorithms of Lind functions low-level the intentions making. A decision to other flow functions, by both control systems and operators. the decision making capabilities of a system. Decision this work, even from as decision function has one input and one output port where it can be connected relations. In functions, which differs [ 731. Lind does not view simple control algorithms and it can also be connected are modeled with decision to subgoals via condition Actor functions function represents An actor the capability into physical consequences. Typical examples of actor functions are provided by valves and motors, but they can also be performed by operators. An actor function has one input port where it can be connected to to other flow functions, subgoals via condition and it can also be connected of a system information relations. to turn Network functions A network function to allow another represents system the property of a system its function. to perform to provide the conditions It is used as a way of into a flow structure. A network function can necessary grouping be connected several connected flow functions to goals via achieve relations. Manager functions A manager function is used to represent resource management example would be the description of a control system, not as an information task. In the current work, manager as a system may be connected it can be connected functions describing to an achieve-by-control an information and control. A typical flow, but functions function has one port where It can contain a network of flow flow path. A manager to manage a certain to an information intended relation. flow. J.E. Lursson/Artij?cial Intelligence 80 (1996) 29-93 31 All the tlow functions have several attributes associated to them, but as these depend on the algorithms that use them, they will be described together with the reasoning methods, in later sections. This concludes the description of the semantics of MFM. It would certainly be possible to use a representation based on, for example, predicate logic, but no such representation has been developed. For the simple and fast diagnostic algorithms to be presented in this article, the graphical representation with a simple, underlying data structure based on objects and links is quite sufficient. 5. Flow structures Flow functions may be connected to each other into flow paths or Jrow structures. These structures are used to model how mass, energy, or information flows from function to function. In fact, flow functions always belong to a flow path and may never be used in isolation. A flow structure is a graph of connected flow functions. The functions can be con- nected via three different types of relations, called links in the terminology of Lind: 0 mass !Aow connections, a energy flow connections, a information flow connections. The fiow fkction connection syntax Flow functions may only be connected according to specific syntax rules: l A flow function can only be connected at its specific connection points. l A flow function may only be connected to functions of the same flow type, i.e., mass, energy, or information. l Sources may only be connected to outgoing transports. l Transports may be connected to sources, storages, balances, sinks, observers, de- cision functions, and actors. They must be outgoing from sources and observers, and incoming to sinks and actors, but may have any direction when connected to storages, balances, and decision functions. l Barriers may only be connected to balances. l Storages may only be connected to transports. l Balances may only be connected to transports and barriers. l Sinks may only be connected to incoming transports. l Observers may only be connected to outgoing transports. l Decision functions may only be connected to transports. l Actors’ may only be connected to incoming transports. The original formulation of Lind allows storages and barriers to be connected, and stor- ages may have multiple inports and outports, but for simplicity this has been disallowed here. A storage with multiple connections can always be replaced by a storage connected via transports to one or two balances with many ports. The rationale for these connection rules may be formulated in the following points: 38 J.E. LurssodArtijicial Intelligence 80 (1996) 29-93 Fig. 3. A heat exchanger system. The flowsheet shows how water is pumped through a steam injector, where it is heated with steam, and through a plate heat exchanger, where it heats the product. l Some rules are needed in order to ensure intelligible models, e.g., the demand that only flow functions of the same flow type be connected. l Some rules are motivated by consistency, transports, or that transports may not be directly connected e.g., that sources may not be connected to each to incoming other. l Some rules derive from the assumption i.e., the transports drive the flows. Thus sources, storages, balances, to produce that transports are active and other functions and flows. This is also the reason for passive, sinks must be connected why transports may not be connected directly to transports, to barriers. The given description of MFM is based on [ 731, while the following is original work. It should be noted that later versions of MFM differ in the descriptions of control systems and information flow, [ 79,801. 6. An example of a flow model The following example will be used to explain the basic concepts of MFM. The target see Fig. 3. This simple system serves quite to a temperature, but a brief analysis shows that there are two subgoals also: having the concepts of MFM. The primary goal is to heat the product process consists of a plate heat exchanger, well certain water and product available, the media to the heat exchanger: i.e., bringing to explain l Gl: heat product l G2: bring product l G3: bring water to heat exchanger. to certain to heat exchanger, temperature, is rather small, but there are many functions present: The given example process l Fl: provide product, l F2: transport product, l F3: transfer l F4: provide l F5: transport 0 F6: transport water, l F7: provide water, l F8: provide stream, thermal energy between media, thermal energy, thermal energy, J.E. L.arsson/Artificial Intelligence 80 (1996) 29-93 39 Fig. 4. Goals, functions, components, and relations of the heat exchanger system. l F9: tmnsport l FlO: mix water and steam. steam, The third type of objects are the physical components. Note that the product and water tanks do not actually appear in Fig. 3. tank, l Cl: product l C2: product pump, l C3: heat exchanger, l C4: water tank, 0 C5: water pump, l C6: steam system, 0 C7: steam valve, l C8: steam injector. and components. However, the goal Gl is superior there is a goal hierarchy, These are the sets of goals, functions, these objects are important. First, are subgoals of Gl. Thus, There are also relations between goals, functions, heat exchanger component from water product. graph. As can be seen, the graph of objects and relations small process as the one in the example. relations found this function In Fig. 4, both the goal hierarchy and the means-end are represented in a graphical In an MFM model, to product, in Fig. 5. is used and the relations between to G2 and G3, i.e., the latter relations. formed by goal-subgoal For example, and components. the thermal energy to achieve the goal of heating the in a relations are shown is quite complex, even for a and the goals, functions, is is used to realize the function of transferring language. A model of the example process 7. Diagnostic algorithms Before we proceed to describe the diagnostic methods, it will be useful to mention a few facts about the implementations performed. in implemented The algorithms have been [ 89,901, as a part of the doctor’s project described successfully The latter is a real-world process products. tool G2, expert system in [ 671. All three algorithms were tested on simulations of two processes, a simple lab process and Steritherm. sterilization of liquid food for ultra-high the real-time temperature 40 J.E. LurssodArtifcial Intelligence 80 (19%) 29-93 Fig. 5. A flow model of the heat exchanger system. The goals and goal hierarchy are shown in the tree structure of the graph, while the functions are connected into flow paths in three networks. The topmost goal, to heat the product, is achieved by the beat transfer flow path (upper network), while the subgoals, to bring water and product to the heat exchanger, are achieved by the water flow path (lower left), and the product flow path (lower right). The components and realize relations are not shown. The algorithms have also been implemented in C, and together with a graphical editor and an ASCII file system they form an MFM Toolbox for Macintosh systems. This version has been tested with several processes, including all used with the G2 and Common Lisp implementations. A simpler console version of this program will run on any system with a C compiler [ 691. The alarm analysis and fault diagnosis algorithms have also been implemented in Common Lisp for use in the Guardian system [40]. Here, the algorithms have been tested on several small examples of systems of the human body. Currently, a large MFM model of the body of an intensive-care unit patient is being verified by medical experts. 8. The architecture of a monitoring and control system The three methods for diagnostic reasoning fit into different parts of a monitoring and control system. The measurement validation algorithm typically belongs on a rather low level, where it can be used to feed validated signal values to higher level algorithms, such as the alarm analysis, the fault diagnosis, and other tasks dealing with supervisory diagnosis and control, see Fig, 6. The inputs needed can be obtained in several different ways. They can be direct or filtered signals from sensors. It would also be possible, though, that they were the outputs of some low-level data filtration on the direct signals, e.g., outputs from a Kalman filter or from some statistical algorithm. The measured flow values are assigned to the attributes of the appropriate flow functions. It is these flow values that the measurement validation algorithm operates on. The validated output values could then be used by algorithms on higher levels. J.E. Larsson/Artificial Intelligence 80 (1996) 29-93 41 Alarm analysis Fault diagnosis Measurement validation Data filtration ( Process 1 Fig. 6. The places for the diagnostic methods in a monitoring and control system. Raw data from the process is treated by filters and low-level numerical routines before it is sent on to the other algorithms. The measurement validation algorithm works on an intermediate level, while the alarm analysis and fault diagnosis algorithms belong in the topmost, supervisory level of the system. The alarm analysis would be found in the higher levels of the system, together with supervisory control, user presentation, etc. The fault diagnosis method would also be placed here For example, in the Guardian system, the alarm analysis and fault diagnosis operate on qualitative data, supplied by several routines that perform data filtration and abstraction based on the current resources available to the system. The MEM algorithms can, of course, be used in a stand-alone fashion, presenting their results directly to the user or operator, but it is more realistic to use them as integral parts of a larger monitoring and control system. The latter approach was used in the project “Knowledge-Based Real-Time Control Systems” [ 3-9,631, and is currently being investigated in the Guardian project. Here, the MFM algorithms are used alternatively with other methods, depending on the available resources and needs, and the results of several methods may be combined to obtain higher quality diagnosis than any single method can provide. When the operating conditions of the target system change considerably, a new and different MFM model may be needed. This would, for example, be the case when a nuclear power plant switches from production to emergency shutdown mode. In such a case the monitoring and control system must also switch to a new MFM model. 9. Measurement validation Most in~dustrial processes are equipped with a large number of sensors, of which several directly or indirectly measure the same variables. Especially when material and energy balance equations are taken into account, the total set of measurements commonly gives rise to redundancy, which can be used to check the consistency of the signals, i.e., to validate them. 42 J.E. LmssodArtijicial Intelligence 80 (1996) 29-93 Flow semantics In order to use MFM as a basis for measurement a semantics has been to the different flow functions. defined that assigns flow values and grouping in common, and have thus been grouped Four of the flow functions have their attributes into one class, called jaw carrier. Sources, balances, and sinks are all flow carriers. Storages, barrier functions, and forking balances are given a separate treatment. The following attributes are used: transports, non-forking information validation, l Flow carriers have one flow value; a quantitative to a flow of mass or energy. Its unit of measure could be, e.g., m3/s or J/s. A is device, and its flow attribute to a single measurement that corresponds physical flow carrier set to the value of the measured signal. is connected variable l Storages have three flow values. There are input and output flows connected responding measurements. There is also a third attribute, corresponding of change of the mass or energy contained storage’s volume. Thus, a storage can be connected in the storage, to at most three measurements. to cor- to the rate i.e., the derivative of the l Barriers have no flow value, as they do not transport working states, and they serve only as borders between separately analyzed any matter or energy in flows. the sum of the inflows should equal l Forking balances have no flow value. Instead, the sum of the outflows. In addition it belongs validated, or reconciled, to the flow attributes, each flow function contains to a group of several flow functions with consistent information about whether flow values, and also a flow value, which can be different from the measured one. Consistent subgroups With use of the semantics above it is possible connected the following rules: flow functions) into internally consistent to split an MFM model (i.e., a set of subgroups. This is done via use of l For the flows, FI and F2, of two connected flow carriers the following inequality should hold: IF1 - F21 < ~1. the two flow carriers belong If it does, support each other. If, however, the flow values should disagree, arate subgroups. This latter situation is in error. to the same (consistent) indicates subgroup; they belong they to sep- that at least one of the measurements l If the input flow Fi of a storage is equal to the flow F of the flow carrier connected at the input of the storage, i.e., the following inequality holds: the input part of the storage belongs Should the two flows disagree, subgroups. The corresponding flow, F, of the flow carrier connected to it. as the flow carrier. to the same subgroup the storage and the flow carrier belong to different is true for the output flow, F,, of a storage and the J.E. L.ursson/Art@cial Intelligence 80 (1996) 29-93 43 Fig. 7. An example of a flow path. Here the flow functions form t\yo consistent subgroups, where one group is surrounding the other. The three possible fault hypotheses are that the four measurements are correct and the one is faulty, that the one is correct and the four are faulty, and that all measurements are faulty. l For each storage, with volume V, inflow Fi. and outflow F,, the following inequality shoulmd hold: dV --fi+F, dt <cl. they belong the input and output parts of a storage belong If it does, if not, measurement inlet and the outlet must be treated as two completely to separate subgroups. Note that this requires If this is not available, of the derivative. the flows connected separate flows. to the same subgroup, some separate to the l For each balance, with inflows and outflows Fi, the following inequality should hold: IFI +F2+- ..+ F,I 6 ~1. to the balance all belong to the same consistent If it does, the flow carriers connected to another If not, at least one of the connected flow carriers belong subgroup. subgroup. the telling In this case, the balance should be given a special marking, user that one or more of the flow carriers are not consistent, while others may be. flow carriers are marked as However, belonging in the current to different groups. implementations, all connected l If the flow values of two flow functions same flow path, but separated by one or more to the same subgroup. However, belong flow path do not form subgroups. agree, and the flow functions subgroups, are in the they still that are not in the same flow functions inconsistent values. It should be noted Applicatio:n of the five rules above enables a splitting of each flow into smaller groups with consistent measurement that there can be groups with holes in them; they need not be directly consecutive. This is the case in Fig. 7. Here the flow values are shown above and the is shown with a shading of the graphical symbols. There are two subgroup subgroups, about several flow functions connected and no global analysis in line; the other four only look at directly connected the other. The last rule uses information that the last rule means is needed. This enables to be very efficient. the flow functions and one encloses flow functions the algorithm information Flow propagation The description so far has used the assumption ments. This is quite seldom will usually be unknown. the case. Many of the flow values needed that all flow functions have measure- in the algorithm 44 J.E. L.arsson/Artifcial Intelligence 80 (1996) 29-93 guess the unknown connected as different propagation The MFM flow paths can be used, however, to propagate flow values. The idea is quite simple: to a known one, the known value is propagated if an unknown flow information, i.e., to is to the unknown. However, to have several flow value l A flow value from a subgroup flow values can be more or less trustworthy, rules. The implemented algorithm uses the following it is necessary rules: flow function than one over flow values supplied by single of more validated. when propagated both upstream and downstream It has precedence in flow paths. is said to be flow functions, l A single measured and downstream, l If two validated flow value is propagated to unmeasured flows, both upstream if there is no other information flow values should meet, available. the one which is propagated stream has precedence over the one propagated upstream. This does not imply downstream propagation propagation behave consistently. it only serves to make in some sense; is better down- that the flow l If two flow values propagated downstream again, this is an arbitrary decision from single is has precedence over the one propagated upstream. Once the one which flow functions should meet, to make the propagation work. l Guessed values are not propagated over balance functions, except when only one value is currently unknown or unguessed. these propagation rules, the system can provide both validated flows whenever redundant information, and guessed values for most flow functions in a Using there is enough network. Validation Each flow value has a corresponding validated flow attribute. This is set according to the following rules: l If a flow value is the only one in its subgroup, and it is surrounded by a consistent group its own flow value is overridden, and the flow of the surrounding subgroup, becomes the validated flow of the flow function. a In all other cases, the validated to the presentation information scheme In addition some subgroup l A coloring to the user: is used to separate of validated flow is equal to the corresponding measured flow values, the implementation flow. also presents representation different subgroups group they belong l Each flow function of the MFM model. Thus, the inconsistent in the graphical in the receive a light gray, gray, or dark gray rim, depending on which to. that is alone in its group is highlighted the symbols of the flow functions subgroups in red. to explicitly mark all single subgroups is only one possible alternative of It is derived The decision many. probably not certain. of a larger, consistent possibility be taken from the obvious possibility that the measured value is in error. It is very important to observe, however, It is also possible, subgroup albeit with a lower probability, is in error, while is that all the measurements into account when the results of the analysis are wrong. It is very important are presented the single value is correct. The third that these cases to the operator in question that this is only probable, that all measurements J.E. L.ursson/Artificial Intelligence 80 (1996) 29-93 45 level algorithm. This is the reason why the implemented system primarily or higher displays information It should be noted validated groups order of magnitude. However, of failure likelihood, values. The same assumption have precedence guessed inconsistent guessing about the different consistent that the presentation rests on the assumption subgroups, the method could be extended and then a single value could be more trustworthy likelihoods of single subgroups as less trustworthy that all failure than are in the same to use explicit measures than a group of in the flow propagation, where validated values to the if there exists two the than one sensor value, to sensors. However, is aimed at giving some reliability each based on more is found over single values. This flow values of functions not connected groups of measurements, strategy of downstream propagation is arbitrary. downstream inconsistencies, of reliability. between The above description propagation is based on the G2 implementation. instead. This still allows is used In the C version, single to detect any the method flow values with even a minimal degree but does not provide guessed In either case, the method is able to detect any possible inconsistency flow measurements. Note also that the measurement Instead, each flow structure validation method uses neither achieve nor condition relations. inter- actions are considered. This makes the method behave very favorably when the problem size increases. Furthermore, to be used for measurement validation, described however. is only are needed, but the process may be neither goals nor means-end as a list of separate flow structures. This is not true of the other algorithms, if the MFM model relations is treated as a separate part, and no global Examples of measurement validation Let us dlemonstrate tanks, see Fig. 8. The main goal of the process tank, a pump, and two cylindrical keep the water level in the tanks at a specified mass flow, i.e., the circulation as a source and a sink. One of the transport pump) depends on the subgoal achieved by a secondary complicateld but has been modeled can be seen in the MFM model the method on a small example. The process consists of a storage is to level. This is achieved by the primary tank has been modeled both to the that the pump motor has power, and this goal in turn is is quite simply as a source, a transport, and a sink. All this flow of electrical energy. The power support system of water. Here, the storage (the one that corresponds in Fig. 9. functions Example 1.. Now assume tank, storage of the upper that flow measurements from the outflow of the flow of the pump, and the inflow, derivative, and outflow the throughput tank, and that these flows have the values as shown in Table 1. are available The situation described are found. The flow values are shown above the flow function in Table 1 is also shown in Fig. 10, where only the concerned symbols; the tank has three values, corresponding realized by the upper flow functions the storage inflow, denivative of volume, and outflow. function The flow of Fl and all the flows of F3 agree, and thus they form a consistent The flow of F2 disagree, however, forming another subgroup, with only one function subgroup. in 46 J.E. Lursson/Art@cial Intelligence 80 (1996) 29-93 Fig. 8. The tanks process. Water is pumped from a storage tank, to a cylindrical tank, from where it flows down into another tank, and then back to the storage again. Fig. 9. An MFM model of the tanks process. The main goal is to keep the level of the upper tank correct, and it is achieved by a water flow. In order for the transport function F2 to be available, i.e., to keep the pump running, energy must be supplied. Table 1 A set of flow measurement values flow of Fi flow of F2 inflow of F3 deriv of F3 outflow of F3 (outflow from storage) (flow through pump) (upper tank inflow) (volume change) (upper tank outflow) 20 x 10e6 m3/s 10 x lo@ m3/s 20 x 10V6 m3/s 0 x 10m6 m3/s 20 x 10e6 m3/s 20 10 20 0 20 Ft F2 F3 Fig. 10. A flow path corresponding to Table 1. The flow of F2 disagrees from the rest, and there are two consistent subgroups, whereof one is single and surrounded. it. The system marks an inconsistency. and the validated the two subgroups that there is In this case it also marks F2 specially, as it is a single function group, flow value of F2 is set to 20 x 10V6 m3/s (the flow of the surrounding in different colors, thus notifying group 1. The consistent subgroup In addition a single function group. to this, the flow function F2 should also have a special marking, information has been shown in Fig. 10 with a shading system. for forming J.E. Lmsson/Art~@cial Intelligence 80 (I 996) 29-93 41 Table 2 A second set of flow measurement values flow of Fi flow of F2 inflow of F3 deriv of F3 outflow of F3 10 x 10V6 m3/s unmeasured 20 x 10e6 m3/s 0 x 10M6 m3/s 20 x 10m6 m3/s Fl F2 F3 (outflow from storage) (flow through pump) (upper tank inflow) (volume change) (upper tank outflow) Fig. 11. A flow path corresponding to Table 2. The flow value of F2 is propagated from the storage, where the measurements form a multiply validated and consistent subgroup. It can then be seen that Fi forms a single, (but not surrounded), subgroup. Table 3 A third set of flow measurement values flow of Fi flow of F2 inflow of F3 deriv of F3 outflow of F? 20 x 10e6 m3/s 20 x 10V6 m3/s 10 x lo+ m3/s 5 x 10e6 m3/s 5 x 10e6 m3/s (outflow from storage) (flow through pump) (upper tank inflow) (volume change) (upper tank outflow) Fl ~2 F3 Fig. 12. A flow path corresponding to Table 3. Here there are two consistent subgroups which both consist of more than one measurement. The algorithm signals that the flows do not agree, but it cannot guess which ones that are correct. that instead a situation which the flow value of Fl Example Z!. Now assume that the flow of F2 is not measured; correspond the validated value of 20 x 10e6 m3/s upstream of the single function Fl). guessed value of F2, and Fl however, since it is not surrounded by other flow values. is 10 x 10m6 m3/s and in Table 2. It would to the flow function description of Fig. 11. In this case the system propagates from the inflow, derivative, and outflow of F3 subgroup has precedence over the value that the flow of Fl does not agree with the flow is not reset, is marked as a single failure. Its validated to F2 (the value from the validated It then observes is shown the situation described by Table 3, which is also found in Example 3. Further assume Fig. 12. Here we have two consistent is difficult it. This situation to support The system marks the two inconsistent particular value as wrong could be misleading subgroups, each with more than one measurement to assess, as many sensor values must be wrong. groups, but takes no further action. Marking any and potentially dangerous. 48 J.E. L.ursson/Arttj?cial Intelligence 80 (19%) 29-93 10. Alarm analysis Most industrial processes are equipped with a large number of alarms. In a failure state it is quite usual that many of the alarms will trigger. Some of them will be directly connected to the primary sources of error, but others may be secondary, i.e., not connected to any failed equipment, but due only to consequential effects of the primary failures. In a failure state it is vital for the operator to separate the primary from the secondary alarms. Failure conditions for Jlow functions Every flow function may or may not be alarmed, i.e., be connected to a corresponding part of the process, in such a way that a measurement tells whether the function is currently available or not. However, the alarm conditions are limited according to the following rules: l A source is working if the current outflow F is less than the source’s maximum capacity FCaP: F < FcaP. If this condition is not fulfilled, the alarm locap is true. l A transport is working if the current flow F lies within an interval, specified in the design: 40 < F 6 Fhi. If the flow F is below Fl, the alarm lo@w is true; if it is above Fhi hiflow is true. l A barrier is working if the current flow F is low enough, (approximately zero): IFI < et. If this condition is not fulfilled, the alarm leak is true. l A storage is working if the current volume V lies within a specified interval: 40 < V < hi, and the following inequality is fulfilled: dV z-Fi+F, 6~1. If the volume V is lower than N,,, the alarm lovol is true, if it is higher than Vhi, hivol is true. If the expression within bars is less than -et if it is larger than et the al-311 the alarm leak is true; is true. l A balance is working if the following inequality is fulfilled: If the expression within bars is less than -et than ei the al-$11 is true. the alarm leak is true; if it is larger J. E. Lmsson/Art@cial Intelligence 80 (I 996) 29-93 49 FI F2 Fig. 13. A connected has a working actual flow through source and transport. The source has a maximum outflow capacity, Fcap, and the transport interval, 4, Q fi < Fhi. If the wanted outflow of the source goes over its capacity or if the the transport leaves the working interval, alarms occur. l A sink is working if the current inflow F is less than the sink’s maximum capacity F cap: F < Fcap. If the condition is not fulfilled, the alarm locup is true. A method for alarm analysis Failure;s can only propagate from flow function to flow function of the failure conditions described above. Thus, some primary in certain ways. This failures functions, failures in the connected is given in Fig. 13, where a source Fl is is a consequence in some t;ypes of flow functions may cause secondary while failures connected. to a pump. in others will not. An example to a transport function F2. This could correspond to, e.g., a tank connected The source has an output flow F$, which must lie beneath the maximum capacity, F cap, of the source. Thus, the following inequality must hold: F, 6 Fcap. If it does not, either because has risen, the source will have a locup alarm. the capacity Fcap has fallen or because the output flow F, The transport has a throughput flow F,, which must lie in between a lower and an upper limit, FIO, and Fhi, which are set during must holdl: the design. Thus, the following inequalities If they da not, the transport will cause one of two alarms. If Ft < FI,,, the alarm will be loflow; if Ft > Fhi, the alarm will be hi$ow. Note th,e normative character of these assumptions. Here, the working interval of the transport must be decided during the design and modeling phase. that the output flow or the source is controlled by the throughput flow Assume further of the transport, so that during normal operation: interval of the transport it during normal working conditions. Then is small enough so that Fcap is always analysis can be per- the following and that the working outside formed: l If the capacity Fcap of the source should fall below the desired outflow, the transport flow Ft will be forced out of flow medium, and its throughput will not get enough 50 J.E. ~rs~o~/~~~ci~~ intdigence 80 (19%) 29-93 and below the working interval, Thus, if the source loses its capacity, the transport cannot keep its flow within the correct limits. This implies that a locap alarm of a source will force a tofrow alarm in the connected transport function. l If, on the other hand, the current throughput flow of the transport should become higher than the upper limit of the working interval, i.e., Fr rises above & because of some fault, this may or may not lead to the output flow of the source going above the m~imum capacity FCGp. Thus, a ~~~u~ alarm of a transport may cause a bucffp alarm in a connected source. I If the current throughput flow of the transport should fall below the lower limit of the working interval, the flow demanded from the transport will still be below the source’s capacity, and the source will not be affected. Thus, a luj&w alarm of a transport will not cause any alarm in a connected source. This analysis can be expressed very simply and crisply in two rules, where all the quantitative information is suppressed and only the alarm information used: l A source locap alarm will force the connected transport to have a ~~~~~ alarm. e A transport hQ‘7ow alarm may cause a connected source to have a locap alarm. With the use of these two rules for how faults may cause other faults, and thus, how alarms may cause other alarms, any alarm situation concerning a source connected to a transport may be analyzed. Assumptions of flow function behavior In the examples above, the different working condi~ons gave rise to a set of assump- tions of how the flow functions involved will react when connected to each other. Using such assumptions for all flow functions, a small G2 program was written to automati- cally generate rules for all possible alarm causations [68]. In fact, a set of rules was first generated by hand; and when the automatic rule generation program was ready, the previous hand-generated rules where checked and found to be correct. Possible secondary alarms The examples can be extended to all the allowed connections of flow functions. This gives a set of rules for how an alarm in one flow function may or will cause consequential alarms in the connected functions. A complete set of rules is as follows: l A source tocup will force the connected transport to have a loffow. l A transport lo$ow may cause a storage connected at the inlet of the transport to have a hid, and a storage connected at the outlet to have a 15voE. It may cause another transport connected in the same direction via a balance to have a /O&W. If the balance has no other connections the same alarm will be forced. l A transport hi;flow may cause a connected source or sink to have a locup. It may cause a storage connected at the inlet of the transport to have a lovol, and a storage connected at the outlet to have a h~voZ. It may cause a transport connected in the same direction via a balance to have a hiflow. If the balance has no other connec- tions, the same alarm will be forced. It may cause another transport connected in the opposite direction via a balance to have a loJlow. LE. Larsson/Ar@cial Inrelligence 80 (19%) 29-93 51 l A barrier leak may cause a transport connected via a balance to have a lojibw, or a h$ow. l A storage lovol may cause an outgoing connected transport to have a lojlow. l A storage hivol may cause an incoming connected transport to have a lo~Iow, and it may cause an outgoing connected transport to have a hijow. l A storage leak may cause the same storage to have a 10~01. l A storage jll may cause the same storage to have a hivol. l A balance leak may cause a connected outgoing transport to have a lojow, and a connected incoming transport to have a hiflow. l A balance fill may cause a connected incoming transport to have a lojlow, and a connected outgoing transport to have a hi$ow. l A sink locap will force the connected transport to have a 1oJlow. l An alarm in a network will force a function depending on this network to fail. Note that the final rule makes use of means-end relations. Thus, even if most of the algorithm is concerned with comparing alarms of functions in a single flow structure, information may propagate upwards in the model graph, and a single alarm may ulti- mately affect the failure states of all goals and networks above it all the way up to the toplevel goals of the entire model. Different rule sets for different domains The rule set presented above is one reasonable solution of how to choose the possible secondary alarms. However, it rests on several assumptions about the behavior of flow functions. If these assumptions are changed, new rule sets are needed. This point may be illustrated by some examples: l One possible assumption is that active transports will not be forced into a hifrow state, even if they are connected via a balance to another transport which has a hipow. This corresponds to the case of two rotor pumps connected with a pipe, and the assumption is that the first pump cannot force the medium to flow quicker through the second one. The obvious counter-assumption is to allow one transport to cause another further down the line. The latter is the normal case in the hifow rules above. l Another assumption is that storages have a limited volume and are closed, i.e., a stlorage hivol may cause a 1ofTow in an incoming transport. If a storage may overflow, this causation will not take place. The first assumption was used in the rulers above. The solution to these ambiguities is to allow several types of flow functions, e.g., as transports. Likewise, it has been shown above, in the separation of active and passive would be: possible to allow closed and ove$owing storages. However, this may lead to a plethora of almost similar flow functions and make it more difficult to understand the MFM models. Anothla possibility is to design different rule sets, and use the most appropriate one for specific processes, equipment, and design tasks. In this case, the choice of flow function assumptions is made once and for all in the beginning of the modeling process. This would still leave the problem of how to mix MFM models from different domains, 52 J.E. Lursson/Arti$cial Intelligence 80 (1996) 29-93 however. The possibility of different assumptions on flow function behavior and, consequently, rule sets, rises several interesting questions. For example, what different they differ in properties and in applicability rule of different to sets could be proposed, and how would different domains or processes? And given some different rule sets, how should the best to provide several rule sets one for a certain and have the supervisory monitoring the appropriate one as a part of the diagnosis. and control system choose It might even be possible task be chosen? The choice of assumptions, i.e., the choice of flow function semantics, as well as the choice of flow functions types, is made from a very large number of possible abstractions of behaviors of flow systems, and rather than being a theoretical problem of enumerating all possibilities the selection of flow functions and their semantics The first step on the way to deciding which rule sets are preferable experience of construction that problem. is to gain practical it is the author’s opinion an engineering and use of MFM models, and this is an ongoing effort. their different properties, and investigating is ultimately Higher order rules The rule set shown contains only rules involving it would seem possible functions. At a first glance, fault causation either involved more flow functions, or involved by two or more other functions. two or three tightly connected flow that there could exist cases where a separated flow functions There are no such cases, however, as can easily be seen from the fact that the only that allows propagation of a faulty flow value without having an to each other, the in type of flow function alarm of its own is the balance. As balances may not be connected longest chain of fault causation the middle. All other causations is three flow functions involve only pairs of directly connected long, and there is a balance flow functions. An alarm analysis algorithm It is important to observe, however, to decide which of the alarms The rules above can be used for automated alarm analysis. Given a set of alarms, it is that must be primary ones, and which ones that that fault may be possible may be secondary. a fault is indeed secondary; “hidden” by a causation, fault. Thus, the method differentiates between positively primary alarms, and alarms that may be either primary or secondary, taken so-called to mean that this is not a peculiarity of MFM. It is a basic property of all causal analysis. the corresponding indeterminate the same as “failed and indeterminate”. the concept “secondary” It should be noted As soon as a new alarm value is discovered, that one cannot be certain i.e., look like a secondary there might be multiple faults, and a primary In this article, is always alarms. is set to an alarm value, e.g., a transport alarm of the concerned loJow, a storage hivol, or a balance to the new alarm are tried, in order to see if they flow functions may If so, the failure state of one or several flow function fill. Then all rules that can be applied match change, the new situation. from normal to primary failed or secondary failed. J.E. Larsson/Art$cial Intelligence 80 (19%) 29-93 53 Fig. 14. A storage connected to two transports. If the alarm state of the storage is not measured, while both transports receive lofrow alarms, the order of the alarms will determine which of them that will be considered primary. This can be. solved by a conflict resolution mechanism, however, which recognizes the case and sets both transpoa. alarms to secondary failed. The rules are only applied locally and involve two or three closely connected flow functions. The only way global information is propagated is via the connections in the MFM graphs. Thus, the efficiency is proportional to the length of the networks and the depth of the abstraction hierarchies. This makes the execution very fast. Unknown alarm states When some alarm states are unknown, the flow networks can be used to guess the missing values. This method is called consequence propagation. The idea is simple. Given a set of known (primary and secondary) alarms and a set of unknown alarm states, the unknown values are filled in with secondary (i.e., indeterminate) alarms according to a set of rules. The rules used for this exactly correspond to the alarm analysis rules. Every such rule can be converted to a guessing rule, to be used in case the flow function in question is not given an alarm state from measurements. For example, two consequence propagation rules may be formulated for the source and transport in Fig. 13: l If there is a source locap alarm, then guess a loJIow alarm in a connected transport. l If there is a transport hifow alarm, then guess a locap alarm in a connected source. ConJIct rfsolution There are cases where conflicting guesses would be possible. Consider the situation shown in Fig. 14. Assume that the alarm state of the storage F2 is not measured, while those of the transports Fl and F3 are. Further assume that first Fl and then F3 has lojIow alarms. The guess for the alarm state of F2 would be a 20~01, and the alarm of F3 could be a consequence of this. If, however, the lojlow of F3 came before that of Fl, the guess would be a hivol for F2, and now the alarm of F3 would be considered primary instead. Thus, there are cases where the order of the alarms would give rise to different results. This situation can be remedied with a conflict resolution strategy, which is quite sim- ple; it gives preference for as many secondary, (i.e., indeterminate), alarms as possible. For example, in the case above, both transport alarms should be considered indetermi- nate. This conflict resolution gives rise to some further diminishing of the diagnostic resolution and more complexity in the rules, but the resulting interpretation is always correct. This actually corresponds to a “wait and see” step, because if the fault of 54 J.E. L.arsson/Artifcial Intelligence 80 (1996) 29-93 F3 was indeed a primary one, died. Measurement faults this would be discovered if the fault of Fl was reme- Sensor faults are common sources of false or incorrect alarms. In such cases the state of the process will not be correctly shown in the alarm presentation, where this occur can be very dangerous. and situations The method described is not aimed at discovering it is sensitive to false alarms and largely dependent on correct sensor values. However, some cases can be detected as situations where the alarm state contains a sensor fault. This is true when one alarm will force another. If the latter alarm is not active, something is wrong with the measurements to one (or more) of the alarm states. incorrect alarms. leading Instead Implementations The description above the alarm analysis. The method has also been to implement Common Lisp. The C version uses a table driven algorithm resulted in even faster execution, see Section 14. is based on the G2 implementation, which uses generic rules in C and instead of rules. This has implemented Using the results The result from applying the described method primary or indeterminate. An operator or algorithm can then use this information task of finding faults in a fault situation. An obvious for the user is to first check the primary strategy the faults known is that alarms will be marked as either in the When these have been remedied, most of the indeterminate while some may instead have become primary. These should to be primary. faults will also be gone, then be taken care of. It is possible, however, likelihoods it may be investigated remain. This knowledge If failure actions of the operator. Likewise, another, alarms from standard which actions to discriminate to take first. rule base the results of the alarm analysis. to use other knowledge are known or can be guessed, to guide the search through they can be used for ordering the alarms. the than and other primary in nature, and should be clearly separated is more it is indeterminate important or dangerous if one alarm first, although is heuristic It may, for example, be implemented situations using a and giving advice on between different Examples of alarm analysis Let us now demonstrate the method on an example. Once again the tanks process will be used Example 4. Assume to their alarm states, while F4 and F6 have not. Further assume that the functions Fl, F2, F3, and F5 have measurements that Fl has a locap, F2 connected J.E. Larsson/Art@cial Intelligence 80 (1996) 29-93 55 Fig. 15. An alarm analysis situation. The functions Fl , F2, F3, and F5 have locap, ZO~ZOW, and lovol &~Is. The alarms of F4 and F6 have been guessed. In this situation, the locap of Fl is the only primary alarm. TFZ R i-4 F5 Fig. 16. Another alarm analysis situation. Here the fofIow of F2 must be primary, as there is an alarm in the achieving network (the lofiow of F9). Fig. 17. A third alarm analysis situation. Here there are three primary alarms. The situation is highly dynamic. a lojbw, F3 a Zovol, and F5 a lovol alarm. This alarm situation is used to indicate shading of the flow function means a primary alarm, a lighter shade an indeterminate unalarmed say, a complicated far simpler. is shown in Fig. 15. The the failure state (a dark shade alarm, and white a normal or to the plethora of alarms that could appear in, is, of course, state). This would correspond fault situation in a larger plant, although this situation symbols An application alarm, while propagation of the presented methods will result in that the locap of Fl must be the loflow of F2 and the lovol of F3 may be secondary. The that F4 and F6 might have had loflow alarms, had they implies the alarm analysis can also that F4 has a Zofow alarm, that the lovol of F5 may be a secondary alarm. The result is that the locap of of it. This has tank, thus be that there is too little water in a primary consequence been measured. Thus, assuming conclude Fl been shown with the shading and the sole cause of the fault situation could that tank. is the only primary alarm, while all the others may be consequences in Fig. 15. Fl is the source function of the storage !L If the function F9 (transport of electrical energy Example to have an alarm also, the last rule in the rule set (the rule concerning the achieve and condition relations), would primary the pump to the pump motor) was causation via that F2 (the pump) also had had a faults: no power supply for fault, i.e., there would now be at least two primary iand too little water in the storage tank, see Fig. 16. imply 56 J.E. LurssodArtijcial Intelligence 80 (1996) 29-93 the algorithm would conclude that there Example 6. If instead F3 had a hivol alarm, the hivol of F3, and the Zovol of F5, see were three primary alarms, the locup of Fl, Fig. 17. This would correspond to a dynamic process state, where the pump flow and the volumes of the lower and storage tanks were too low, while the volume of the upper tank was too high. 11. Fault diagnosis systems in diagnosing in process control The classical use of knowledge-based operator the rules in backward chaining. The techniques MYCIN that each rule base is specific inconsistencies, difficult diagnose is to aid the process faults. This is usually done by a rule-based expert system, running are well known, a good example being for example for a certain process and task, a rule base may contain is system can only to overview, both in building and updating, and a rule-based the faults anticipated and a large rule base most probably will do so, a large rule base systems have several shortcomings, in the design of the rule base. [ 1121. However, rules-based These shortcomings can be solved to a large degree by using model-based approaches. The process of design, construction, made more efficient, Consistency within find any deviation all these properties with other model-based and updating of the knowledge database can be if the models are intuitive and easy to use for the domain expert. and the model can be used to faults. MFM shares from the working state and not only prespecified the model can often be guaranteed, approaches. The MFM data structure for diagnosis In MFM the means-end dependencies are explicitly represented, so when a certain on which the reasons information subsystems i.e., a fault occurs, the model will provide that may be in error, and thus, in which component control goal fails, functions for the failure can be found. The working conditions are the same as used in alarm analysis. Thus, each flow function might be in a normal or to a locup, loflow, working hi$ow, 10~01, hivol, leak, or$ll. state, or have a fault, more or less directly corresponding for flow functions used in the fault diagnosis algorithm corresponding algorithm must have a way of finding out the failure states of The fault diagnosis flow functions. Thus, each flow the physical components to function may have a question investigate automatic sensor readings may be used. Each flow function can also have a remedy of the fault, in the form of a text string to be output by the algorithm, or an automatic procedure the failure state of the function. Alternatively, to be asked, or a test to be performed, to the different in order to call. As an example, we will once again use the flow model of the tanks process. In order to enable a fault diagnosis, the different flow functions should be assigned questions: l The source Fl could have the question “Zs there water associated to it, together with the remedy “Fill water in the storage in the storuge tan/?. tank?’ J.E. hrsson/Artijcial Intelligence 80 (1996) 29-93 51 l The transport F2 could have the question no remedy, as the pump has a supporting would probably be taken care of in that system. “Is the pump transporting water?’ but it to run. The remedies system enabling the question l The storage F3 could have “Zs the water level of the upper tank correct?“, but it could also have a special rule associated to it. This rule could be activated by the algorithm and use an external measurement to set the failure state of the flow function. The remedy could be “The water level of the upper tank will be corrected by other actions”. l The rest of the flow functions and remedies. questEons or remedies. These would simply be skipped by the algorithm. It is also possible, however, in the water network could have similar questions that some of the flow functions had no l The source F8 in the electrical energy network could have the question “ZS power available?“. l The transport F9 could have the question “Zs the power switch on?” and the remedy “Switch on the power”. that the above assumptions is used as part of a monitoring and remedies. Thus, are for use in the following and control system, it would be a better solution to a, model of physical structure, and use the latter to formulate questions, and to provide remedies. This solution example. When the al- that system would handle the MFSI re- is used in the Guardian to connect Note gorithm both questions model ceive measurements, project. The search strategy structure rule-based implemented, expert system, An MFM model consists of information In a standard in rules, but in MFM The fault diagnosis algorithm it uses questions about the goals of a process, how these goals are achieve,d by networks of functions, how the functions depend on subgoals, and how they are realized by physical components. this information it is explicitly described. is implemented Thus, a fault diagnosis can be easily as a search in the model graph. The strategy usled for this search is as follows: traverses to single to find the failure state of those flow functions on the answers or sensor readings, parts of the flow model flow functions. Depending is combined with the alarm analysis and may not have to be traversed. The algorithm consequence in, propagation, which and interleaves with the diagnosis algorithm. The simple rule for successful matching of is that every diagnosis to flow function guessing. should have either a diagnostic question/sensor the MFM graph, and when it comes (i.e., guessing of consequences), reading or be subject and consequence as information is performed incrementally propagation or sensor readings comes The specifics of the diagnostic l The user chooses a goal for diagnosis. search are as follows: ,thus the whole process) will be investigated. However, If this is a toplevel goal, the whole model the goal chosen can in which case only part of the process will be diagnosed. l The search propagates downwards from the goal, via achieve relations, into the connected network of flow functions, each of which is now investigated. (and also be a subgoal, 58 J.E. L.ursson/Arttj?cial Intelligence 80 (1996) 29-93 l Each flow function may have a diagnostic question, which is asked find out whether function, rule or relation order of the function may be found. the corresponding the function i.e., whether physical component is currently is available or not. Alternatively, to a physical component, whereby information about realizing in order to the there can be a the working l The appropriate consequence propagation algorithms are activated. alarm state of the flow function is set, and the alarm analysis and l If a flow function conditioned the connected by a subgoal subgoal is found to be at fault, or has no means If, however, a investigated. that part of the subtree is recursively is skipped. of being checked, function is working, The fault diagnosis method has been yields an incremental along resolution is needed, and the algorithm static connections. and local algorithm. implemented as a group of generic rules, which It should be noted that the search propagates nor conflict search, pattern matching, Thus neither global is very efficient. The description has also been implemented performing a depth-first above is, once again, based on the G2 implementation. The method in C and Common Lisp, in the form of recursive procedures search. This enables even faster execution. in the PERFECT project As is shown in Section 14, the speed of the fault diagnosis algorithm is so high that it may seem unnecessary Instead, to select which parts of the Ml34 model why not simply check all goals and functions, one after the other? This approach has the speed of the diagnosis taken been and sensor is not determined readings and other computa- may be costly to keep the number of questions tions, etc. Due to this, it will often be important and to as small parts as possible of the the diagnosis sensor process. alone. The questions in time and other resources, or involve simulation readings down and to direct by the search algorithm [ 108-l 111. However, to investigate. An example of fault diagnosis Let us now demonstrate the method on a small example. Once again, the tanks process will be used. that the level of the upper tank is not correct, Example 7. Assume violated, and that the user asks for a diagnosis of that goal. The algorithm goal Gl, i.e., the topmost goal, and moves down into the network describing (water) the flow functions flow and checks i.e., the goal Gi is starts at the the mass in turn. The source Fl describes to be reached by the search algorithm. The current position the source function of the storage tank, and is the first flow in the is marked of the flow model, see Fig. 18. The source Fl has the following function graphic representation question associated to it: Q: Is there water in the storage tank? The user checks this and discovers Thus he gives the answer “no” and Fl activated but can draw no further conclusions, that there is almost no water left in the storage tank. is marked with a Zocap. The alarm analysis is see Fig. 19. J.E. LurssodArtificial Intelligence 80 (1996) 29-93 59 Fig. 18. The diagnostic search started from the goal Cl, followed the achieve relation down into the water flow network, and has reached the source Fi. Fig. 19. The diagnostic search has concluded that the source Fl is faulty. Then it has moved on to reach the transport F2. Fig. 20. The diagnostic search has concluded that the transport F2 was at fault, and the alarm analysis signals that the fau:lt of Fl is primary, while the fault of F2 may be secondary. Then the search has reached the storage F3. The algorithm now moves on to F2 and asks the following question: Q: Is the pump running? Once again, the answer is “no” and F2 is marked with a lo&w alarm. The alarm analysis is activated and deduces fault, while the lofow of F2 may be caused by the fault of Fl, see Fig. 20. that the locap of Fl must be a primary 60 J.E. LurssodArtijcial Intelligence 80 (1996) 29-93 Fig. 21. The diagnostic search has finished its investigation of the water flow network, and the alarm analysis concludes that there is one primary fault, three secondary, and two guessed faults, at F4 and F6. As the transport F2 was at fault and there is a condition relation, the search has continued down to the energy supply network and has reached the source F8. The storage function F3 corresponds to it, that asked whether that it is connected to the upper tank. It could have a question the volume of that tank was within the correct limits. be to a level alarm sensor. It will automatically a lovol alarm. Before the diagnosis has started, the Zofow of F2 has been established, this alarm was considered the alarm analysis algorithm associated Assume, however, assigned primary, but once decides that it may be a consequential fault. The transport function F4 corresponds to the gravitationally upper tank. It has no alarm and no question, be used to guess the alarm state, which will be a loj?ow. so here the consequence caused outflow from the propagation will The storage F5 corresponds to the lower tank, and is also connected the reasonable sensor. Under automatically marked with a Zovol, and the algorithm can now use the guessed that the Zovol of F5 can also be a consequential of F4 to decide that the level of this tank assumption fault. to an alarm is too low, it is loj?ow The flow functions F6 and F7 are neither alarmed or have questions; would guess that F6 has a loflow alarm, while F7 is in a normal this can be seen in Fig. 21. thus the algorithm state. All (working) As there was a fault in F2, the algorithm now goes down in the subtree below it, and the goal G2. It moves further down, finds the source F8, see Fig. 21, starts diagnosing and asks the question that belongs to it: Q: Is power supplied? The user checks seems to have electrical power; then he gives “yes” as the answer. that the power line is connected to the wall, and that other equipment When the algorithm comes to the transport F9, see Fig. 22, which corresponds to the power switch of the pump, it asks the following question: Q: Is the power switch on? The user discovers to this question. The transport analysis now deduces its support system. The total that the power switch and answers “no” function F9 is marked with a lo&w alarm. The alarm in that the fault of F2 was indeed primary, as there is a fault is in the “off” position fault situation is thus that there are two independent LE. L.arsson/ArtQ%zial Intelligence 80 (1996) 29-93 61 Fig. 22. Tine diagnostic search has concluded that the source F8 is working and reached the transport F9. Hg. 23. The state after the fault diagnosis. As the transport F9 is at fault, the fault in F2 is also a known primary faullt. The user may now ask for explanations and remedies, and the algorithm will search through the graph and output the appropriate text strings from the failed flow functions. causes of the level being to low; there is not enough water in the storage tank, and the pump power switch is not on, see Fig. 23. This system state will probably not last very long, however, as the water presently in the two cylindrical tanks will flow down into the storage tank and fill it up, thus making the source function Fl available again. Example 8. The implemented system also allows the flow functions to have explanations and remedies associated with them, and these can now be asked for. In the example, the algorithm would go through the different primary faults. When Fl is reached, it would output the following remedy: R: EN water in the storage tank. When it reaches the power switch, F9, it would output another remedy: R: Syvitch on the power. So far, the examples built within the G2 implementation has used this simple strat- egy of outputting one remedy text for each failed function. Another possibility would be to have the system activate rules or procedures to produce explanations and reme- dies using information from the whole MFM model, or to actually perform remedying actions. The rules and procedures needed should be written in the general G2 rule format. 62 J.E. LmssodArtijcial Intelligence 80 (1996) 29-93 is that the goal Gl, (maintain This is due to the failure of Fl, “The diagnosis is not fuljlled. tank’s ability provide water), and F2, (the pump), which are not working. F2’s failure caused by the fact fulfilled. This is due to the failure of F9, (the pump’s power switch), which not working.” the water level of the upper tank), to is is not is that the goal G2, (provide the pump with power), (the storage Fig. 24. An explanation of the failure state in Examples 7 and 8. The text was copied from the screen of the associated with each goal and MFM Toolbox to generate function. Some formulations explanations, in C. The expressions within brackets are textual descriptions not to produce correct natural are clumsy, but the example to show the system’s ability is intended language. Generation of explanations is implemented for automatic generation of explanations algorithm This algorithm of the MFM model objects and builds a textual explanation The C and Common Lisp versions of the fault diagnosis were enhanced with an language style. as a recursive depth-first search, that reads the fault states as it moves down the graph. about the fault state of the whole MFM model, and of why goals and functions depending on This algorithm uses information reasonable can produce other goals and functions have failed. An example output is shown in Fig. 24. in a restricted natural causal explanations algorithm the explanations is used as a part of a larger monitoring the fault diagnosis system, and When in cooperation with diagnosis generated other algorithms. For example, unit personnel, but explanations will be used in communication with the intensive-care once the fault diagnosis has computed a set of failed functions, treatments for these will be handled by a separate treatment database and a treatment plan generator. Guardian and remedies should be handled the execution of these plans. the automatically in the Guardian also monitors i.e., diseases, project, 12. Experimental experiences No matter what the theoretical properties of diagnostic algorithms are, their utility will ultimately be decided by their practical usefulness. Different properties of the methods will add up to determine their relative merit. MFM is a new and largely untested modeling concept, and it differs from most other as well as in detail. Thus, before any of the and use the experiences gained can be assessed, the best we can do currently, further experiences of modeling is to present conceptually properties approaches, model-based above-mentioned are needed. Therefore, from some of the models that have been constructed. Three test processes The algorithms process, Steritherm, described above have all been tested on simulations of the tanks theory at the Department of Automatic Control, Lund Institute of Technology, Lund, Sweden. It and the Guardian model of the human body. is a small laboratory process used in teaching basic control The tanks process J.E. Lmsson/Artijcial Intelligence 80 (1996) 29-93 63 Fig. 25. The Steritherm flow sheet (screen dump from the G2 Toolbox implementation). to produce was used aL.s the generic “toy” example during and demonstrating Steritham all three algorithms. is a widely used, moderately the examples used the development of the MFM algorithms, in this article. As has been shown, it suffices for sized process see Fig. 25. Steritherm to be of manageable temperature in world- research Real- [ 3-9,631, of which the author’s doctor’s project was an informal for ultra-high is a real process size for an academic It was the target process used in the Swedish project “Knowledge-Based treatment ((UHT) of dairy products, wide use, but it is still small enough project. Time Control Systems” part. The MF’M model of Steritherm describes the liquid foodstuff, and how this is done by heating to 137’C for a few seconds. The to this, the supporting main flow of thermal energy flows of product and water for heating and cooling are described. Some other support systems, systems have not been included such as pressurized in the model. air and the 220 and 380 Volt electrical the toplevel goal of sterilizing in detail, and in addition the product is modeled validation The measurement algorithm has been verified using the fairly complex product m,ass flow of Steritherm. The alarm analysis was tested on the thermal energy the fault diagnosis on faults which had effects on the entire plant. All tests flow, and fault situations. The conclusion was that all three algorithms worked were on realistic to handle multiple accurately and gave correct and useful information. They all managed faults without problems. It may also be noted that no changes whatsoever were necessary when transferring The Guardian from the tanks process and diagnosis to Steritherm. system the algorithms project aims at developing intensive-care agent, which can use several different patients and available resources. use with post-operative intelligent changing demands architecture [ 38,391. a monitoring [ 401. The system is implemented reasoning methods, according It is based on the BBI blackboard for as an to the system For the Guardian project, a large MFM model of the human body has been devel- such as the temperature, calcium, and magnesium, oped. It covers all the systems needed heart, circulation, acid-base balance, for intensive-care the nutrition, of sodium, potassium, the body fluid volume, the concentrations unit monitoring, body respiration, 64 J.E. Lmsson/Art@ial Intelligence 80 (1996) 29-93 Table 4 Three modeling though, tasks of different size. The times are fairly reasonable estimates of the man-hours used. Note, that the Guardian modeling effort is still not entirely finished Process Lab Tanks Steritherm Guardian Size “‘toy” medium large Knowledge engineering Model construction 0 2 months 4 months 1 hour 1 week 1 week and the, often multiple, regulatory mechanisms for all these systems. The two implemented algorithms (alarm analysis and fault diagnosis) have been verified and found to work without any problems on this model, which is probably the largest MFM model in existence. Judging from these experiences, it is clear that MFM algorithms scale favorably, without changing any qualitative properties in behavior or results. Reasonable assessments of the efforts needed to construct the three MFM models are shown in Table 4. The knowledge engineering includes the time needed to study the process and to find out the physical facts of how it works, while the model construction time was used for identifying the goals and functions and constructing the actual MFM model. Since it is difficult in practice to completely compartmentalize the different phases from each other, the figures in Table 4 are approximations. As can be seen, the MFM specific effort is quite modest. Although no comparative studies are available, it is the author’s experience that the MFM modeling effort is much smaller than the effort needed to turn the same knowledge into a rule base. Furthermore, the model-based and graphical nature of MFM makes it considerably easier to handle MFM models, than to use knowledge encoded in rules. 13. Properties of the algorithms Using MFM to represent diagnostic knowledge has several clear advantages over using an ordinary rule-based system, and it may also retain some of these advantages in comparison with other model-based techniques. This is due to the fact that MFM models consist of static graphs. The algorithms are local and incremental. They work in real time, and propagate information along static links only. This makes them very efficient, and the effort as a function of model complexity increases at worst linearly with the size of the MFM models. The local nature also has the benefit that feedback and recirculation loops pose no problems for the algorithms. Worst-case estimates Diagnostic reasoning tasks like the ones described above can be implemented as searches in MFM graphs. The fault diagnosis method uses a depth-first search, and as the size of every subtree is known, it is simple to obtain a worst-case estimate of the time or computational effort needed to diagnose a certain subgoal. Similar statements LE. LarssodArtijEcial Intelligence 80 (1996) 29-93 65 the other two algorithms. In general, reliable for MFM which will provide are true for algorithms case efforts. It is important operating mode, a different MFM model may be needed functions. must have a whole set of MFM models available, and worst-case estimates these. to write diagnostic of worst- that in case the target process may shift the new goals and the MFM algorithm In such cases, the monitoring and control system using to note, however, it is possible and precise to describe information for each of Ham’ reakime demands The ability of giving worst-case estimates of the time needed for a diagnostic for diagnosis under hard real-time in a fixed time, the known worst case can be used constraints. Whenever to comply with the timing demands. If not, the subproblem subtask a to test makes MFM well suited subtask must be finished whether in question cannot be solved. it is indeed possible Here, the hierarchical structure of MFM models is quite valuable. The general structure of an MFM model is such that the toplevel goals and flow structures describe plant-wide in these flow structures are conditioned by subgoals, goals and functions. The functions each concerned with support systems for the main systems, and the functions here are in turn conditioned For example, would describe generators, and the primary of reactor, generators, subsystems. Measurements the toplevel flow structures to the flow of water. On the next level there would be flow models etc., and on the next lower level models of reactor and generator in an MFM model of a nuclear power plant, the flow of energy are usually available on all these different reactor, via primary water system, by smaller subsystems. levels. from the search moves downwards the fault diagnosis search is implemented that are most general and concern production The fault diagnosis algorithm presented above starts from the topmost goals, i.e., those and safety demands of the entire goals in the MFM graph and attacks more specific plant. Then as a simple depth-first subproblems. Currently, all levels to obtain a result. It would be a simple matter to use search, which investigates to a breadth-first the toplevel, plant-wide diagnosis, and then gradually search deeper, making first handle the time the diagnostic would run out, a more or less coarse diagnosis would be available. Thus, MFM allows graceful degradation under hard real-time constraints. finer and finer as more time was available. Whenever search instead. This would allow the algorithm (or staged depth-first) resolution Large scaling of problems MFM’s graphical structure makes the presented algorithms behave favorably when the increase at worst linearly with the size of the problems are scaled up. All three methods MFM model. However, most incoming data cause only local changes and very often, cost of performing adding another the a fault diagnosis of one subpart of a model is not affected at all by less than linearly. For example, the computational in the diagnosis, effort increases (separate) subpart. 66 J.E. Lursson/Artijicial Intelligence 80 (1996) 29-93 Table 5 The three methods have been implemented as G2 knowledge databases Measurement validation Alarm analysis Fault diagnosis Parallel execution 66 rules 93 rules 19 rules updating of diagnostic used in the three methods incremental them to be efficiently parallelized. Since the methods use only local infor- can be done in two in the system. The distribution information there is no global bottleneck The local, also enables mation, different ways: l Each processor can be responsible to a standard distributed control and supervisory for a specific subpart of the model. This corre- sponds system, where each part of the process and thus of the MFM model has a designated processor. The topmost levels of the model will have to be handled by a globally that gathers from the other processors. responsible processor the information to tasks on a server basis. When a new subpart of the this task is sent to a new processor. In this version, in the MFM graph splits into several parallel l Processors may be assigned MFM model must be traversed, a fault diagnosis moving downwards branches. Once again note implementation may seem unnecessary, level simulations, further motivate increase of efficiency. that although the algorithms themselves other activities such as sensor readings, are so fast that a parallel lower to time or other resources asking questions, etc., may require enough 14. Implementation The algorithms presented tool G2, in C for Macintosh expert system Guardian project. All examples and C implementations. shown above have been implemented in the real-time and tested systems, and in Common Lisp for use in the in both the G2 in this article have been tested and each algorithm The first implementation was done in G2 and used this tool’s special graphical data rules. The MFM models are built with G2’s standard graphical rule base, each of which the speed of sampling period of one second, each call to a available and structures and generic interface is reasonably the methods. Since G2 has a minimal diagnostic algorithm has been sold to CERN. G2 was developed by Gensym Corporation takes precisely 1 second. The system is commercially see Table 5. This does not show is implemented implementation as a generic [89,90]. small, The second implementation are portable, but the graphics algorithms available in conventional monitoring the algorithms. Since the fault diagnosis for Macintosh interface systems. This implementation has been done in C [ 691. The MFM data structures and only to be used the efficiency of and file system enables and control systems, and it also highlights the algorithms is currently is the most time-consuming of the algorithms, J.E. Lursson/Arttj?cial Intelligence 80 (1996) 29-93 67 data for fault diagnoses of the three models using Table 6 Performance the C implementation. number of MPM objects used in the model, “Rules” are the number of rules needed diagnosis with backward chaining, “Worst case” is the longest possible execution the model, ancl “Rules per second” gives the apparent by a rule-based speed of the algorithm, system. More. than half the time is spent on sensor readings and bookkeeping should “Objects” are the total to perform an equivalent time for a fault diagnosis of it have been performed operations Process Lab tanks Steritherm Guardian Objects 27 99 331 Rules 39 150 544 Worst case Rules per second 480 /.LS 630 /.LS 1100 ps 81 000 240 000 500 000 sensor readings some performance data for it are shown in Table 6. Here, the fault diagnosis was executed using simulated fault situation. Note that the times given are for the worst case, i.e., when all objects of the model must be investigated. Often, a diagnosis alarm analysis are faster still. The central part of the C code implementation diagnosis faster, and the measurement and of the fault is orders of magnitude from a pregenerated validation algorithm is given in Appendix B. described below a rule base for performing The Lisp implementation MFM model and produces with a standard backward chaining each function into respectively. These of the MFM models rule-based systems. and system. Each goal is translated a small includes translator the fault diagnosis that reads an algorithm into one rule, and and failed, to give a rough estimate of the complexity to that of standard the function is working compared two, handling rule bases were used the cases when the speed of the algorithms The relative difference different size. For affect the execution in efficiency the smaller models, times. between some the models is probably due initializing and bookkeeping to their operations that the Guardian model poses a test with significant difficulties. It should be noted (i.e., functions on one level loops It contains numerous depend on subfunctions, and most of the flow structures consist of loops (since most of the flows in the human body are closed can handle all the classically difficult cases of feedback, recirculation loops, and circular dependencies without problems, and these in turn depend on the original loops). The algorithms in the means-end functions), dimension though. 15. An overview of related work The main contributions to MFM have been made by Morten Lind and his group. Lind contains Lind’s suggestion [ 74,76,77] describes the basics of MFM, while [ 73,79,80] for a diagnostic operator a STRIPS planning and a system discussion of MFM and other types of models. system. Lind has also treated real-time diagnosis [72]. Lind’s group has developed a graphical [ 61,621, a fault diagnosis for alarm analysis and fault diagnosis interfaces system system [75], and design of interface [24,94,95], [45], [ 171. [78] contains a comparative for ship engines MFM has also been used in nuclear safety research [ 11,201, in operator for fault diagnosis [ 231, for constructing COGSYS diagnostic systems interfaces [ 108-l 111, for 68 J.E. L.ursson/Art$cial Intelligence 80 (19%) 29-93 fault diagnosis in process industry [ 124,125], and in intelligent man-machine systems for nuclear plants [ 871. The methods described in this article have been presented in earlier papers; measure- ment validation in [ 651, alarm analysis in [ 641, and fault diagnosis in [ 661. They have all been thoroughly described in the Doctor’s thesis [67], which is the basis for this article. The report [68] contains more detailed descriptions of the implementation of the algorithms, while [69] reports on the C implementation. Model-based diagnosis The most thorough work in model-based diagnosis has arguably been done in research areas related to qualitative physics. The main bulk of the work of the Al community has concerned diagnosis of analog and digital electronic circuits, but there has also been applications in neurophysiology, hydraulic systems, process industry, and other domains, see 1371. Since automatic reasoning usually does not need all the quantified details of a math- ematical model, and because sometimes only knowledge about qualitative behavior is available, several qualitative representations have been suggested to replace mathemat- ical models in physics. Common approaches are to use representations based on, e.g., logics, constraints, or directed graphs. Sussman and Steele [ 1161 describe a system based on hierarchical constraints and consistency checking. Davis [ 181 describes the use of both structural and functional models in diagnosis. The area of qualitative physics is described in [ 31,126]. A good overview of model-based diagnosis is given in [ 371. [ 191 also gives a good overview, while [ 1221 gives a more theoretical overview and relates to standard expert system techniques. The theoretical foundation for several of these diagnostic methods is Reiter’s algorithm [ 35,107]. A model of physical structure and component behavior is used to generate a description of the target system in logic formulae. Together with information about measurements, Reiter’s algorithm is then used to compute the minimal set of possible hypotheses that is sufficient to explain the current (failed) state of the system. The method outlined above has been implemented in a domain independent architec- ture called the General Diagnostic Engine (GDE) , [ 541. GDE uses an assumption-based truth maintenance system ( ATMS) , [ 50,5 11, and is a direct, incremental implementation of Reiter’s algorithm. Most of the results in this area concern digital circuits, but analog circuits and circuits containing components with internal states have also been addressed. There are also probabilistic approaches. All of this is excellently covered in [ 371. Other important approaches to qualitative reasoning have been taken by de Kleer and Brown [ 531, which points out the need for both topological and functional mod- els and formulates a theory based on confluences, by Forbus [30], which describes a modeling method starting with a physical description of a system, giving a set of constraints, and using the process concept to model behavior, and by Kuipers [ 58-601, describing a qualitative simulation method. The system starts with a set of qualita- tive constraints and an initial state, and can predict the set of possible futures for the system. Dvorak’s project [25,26] describes the MIMIC fault diagnosis system, based J.E. LmssodArtijcial Intelligence 80 (1996) 29-93 69 language for qualitative also uses a QSIM representation. to maintain a set of measurement failures by tracing dependencies. algorithm presented in this article, although simulation The DATMI program [58-601. The Inc-Diagnose system [22] uses a qualita- and can diagnose This can be compared with the measurement differ- there are considerable interpretations, on the QSIM [92] tive representation sensor validation ences. A comparison It is important to note that MI34 differs from the “classical” kinds of model-based as exemplified by Reiter’s algorithm diagnosis, mains as well as in the basic problem results produced. The main contribution research with new methods, well suited for application systems. formulation of Ml34 and GDE, in the typical of the diagnostic is that it extends in process target do- task and in the the model-based industry and control The classical AI version of model-based diagnosis is clearly geared towards diagnosis circuits and similar domains. The models describe how components into a physical of electronic connected components behavior of the entire circuit, using varying input signals, structure, and the diagnosis i.e., tests. are the behavior of the more or less complex faulty often by tries to isolate faulty components, are described by analog or discrete equations or constraints. From MFM only handles a special class of behaviors; a small set of very abstract ure state of each flow function and a diagnosis the casual it is assumed can be observed flow functions. Furthermore, those which can be described by that the fail- or tests, consists of a description of the fault state of the whole target system, in pro- reasons the alarm analysis that there is a known desired state of the pro- in these assume the use of varying and similar domains. For example, both for this fault state. MFM is quite often not possible from direct measurements towards systems algorithms is geared industry inputs and cess and nuclear and fault diagnosis cess. On the other hand, domains. It is imeresting to note, though, to Reiter’s algorithm the project of Walseth et al. uses Ml34 that [ 124-1251. This is thus a very interesting to effort generate with the goal of joining MFM and more classical model-based diagnosis. input Another difference in a more general and unconstrained are not explicitly analysis to electronic circuits. can be obtained is that in MFM the concept of goals is central, while most classical concerned with teleology. A notable exception is [49], approaches where a teleological In this domain, de Kleer is applied from an analysis of structure shows how the purposes of components case, this is not possible. and function. However, the principle of no function in structure, i.e., it is physics has proposed Qualitative to conclude what function a component has from observation of its physical impossible: is observed, and there is the equivalent principle properties alone. In MFM, this principle solely from an analysis of its functions. that the goals of a system cannot be concluded to tell whether the purpose For example, with no additional of a telephone or to stop a door from closing. is to enable electro-mechanical it is not possible communication information, 70 J.E. Larsson/Art$cial Intelligence 80 (1996) 29-93 in describing the flow information An interesting question is to what extent MEM models are equivalent to other qualita- to generate MFM models from, say, a structure and behavior, QSIM, QPT, or other model-based is that most of these representations tive and quantitative models, and whether it would be possible automatically representation. As with bond graphs, could provide cient system. An Theory mation the two types of models. This is still a question open to research, however. of MFM are less detailed important (QPT) in the process concept. is that Forbus’ Qualitative Process infor- to device a translation between they may not be suffi- the goals of the target the answer needed information, for MFM, while i.e., to define representations may indeed provide If so, it may be possible The flow descriptions [ 301, and similar the means-end teleological and quite interesting possibility these other models might be translated produce other models automatically. is at the most abstract end. However, this article, is also presented yields efficiency complex circuits by using abstractions of behavior. that it can still provide valuable diagnostic than those of other models. Thus, into MFM, but MFM flows will not suffice to In the dimension of more or less abstraction, MFM in it should be clear from the results results. The idea that abstraction that can diagnose reported in Hamscher’s XDE [ 361, a program tentative study is available, It is also worth noting that, although no comparative the construction of MFM models most probably demands a lesser effort than many other model-based approaches, This project “Knowledge-Based were built using quantitative equations constraint efforts demanded mainly because MFM demand any detailed knowledge the is based on the author’s experiences conclusion Real-Time Control Systems”, where models of Steritherm for the G2 simulator, quantitative for DMP, and qualitative causal graphs for MIDAS. All these tasks the MFM model of Steritherm, than the behavior models used, and it does not etc. A practical difference between MFM and most other model-based such as equations, constraints, than that needed is more abstract to construct techniques simulation equations larger from can be very efficient. The MFM algorithms presented in the time scale of microseconds, while a typical is quite slow. Indeed, computations may become tasks MFM methods perform diagnostic based on Reiter’s algorithm for systems with more than a few tenths of components. GDE system can increase the diagnosis probable and (temporarily it is still orders of magnitude the difficulties in comparing ignoring its efficiency by several orders of magnitude, by concentrating to the probably faults only. This algorithm may perform poorly for certain symptoms, faulty sections of the circuit, and to focus on the most though, slower than the MFM algorithms. two very different algorithms) In [ 521, de Kleer shows how a is that in this article system intractable A fuller overview of related work is given in Appendix A. 16. Conclusions The article has presented for use with multilevel perform measurement three newly diagnostic methods flow models, MFM. The methods use MFM as a database and and fault diagnosis. They have been validation, invented and implemented alarm analysis, LE. Larsson/Ar@cial Intelligence 80 (1996) 29-93 71 MFM Functional Qualitative Quantitative Integrated General - Lind De Kjaer-Hansen Validation Alarms Diagnosis Planning Presentahor Simulation Larsson Creutzfeldt Larsson Lind Creutzfeldt Sassen Larsson Walseth J#rgensen Larsen Lind Duncan Businaro Monta Larsson Arz6n Krijgsman Crespo de Kleer Forbus Kuipers Woods DeCoste Isermann Frank Woods Mah Kramer Lees Petti Viiia struss Marifio Davis Reiter de Kleer Dvorak Ng Modarres Padalkar Modarres Padalkar Allen Tomita Rasmussen Modarres ChBruy Bond graphs Kuipers Fig. A.1. An overview of some different projects, according problem solved (rows). to model type used (columns), and the type of implemented in G2, C, and Common Lisp and successfully tested on several processes. The searc:h algorithms are all very efficient and work in real time, and their sensitivity to large scaling of models is at worst linear. Together with implemented toolboxes and demonstrations, the project shows a good example of the usefulness and power of means-end models. Appendix A. An overview of related work MFM is a young and largely unexplored research area. The current work is related to several other areas of research, such as (model-based) diagnosis, model-based reasoning, qualitative physics, and general modeling. This appendix will give an overview of previous work and related projects, and some overview papers and books are also mentioned. In the following overview, the different projects has been sorted according to the type of models they use, and in each group they are separated into different problem areas, such as f,ault diagnosis, simulation, presentation, etc. This has been summarized in Fig. A.l. 12 J.E. LmssodArttjkial Intelligence 80 (1996) 29-93 Projects using MFM Lind. Morten Lind is the creator of MFM. The most important documents about MFM are defined. These of MFM, and works as the definition are [73,79,80], where reports give an introduction of Lind’s current version. Some examples are also given. MFM. [ 7 I] is the original paper of the syntax, and semantics to the background the basic ideas, Lind’s solution for the data structures and diagnostic algorithms in [ 74,76,77]. The implementation interface for building MFM graphs, also written in Smalltalk to be used under the is done in Smalltalk 80. MFM top layer is described Together with a graphical [24,94,95], this forms the main effort of Lind’s group. De et al. Westinghouse Corporation used MFM to perform a functional analysis of a new control room concept for a pressurized water reactor in the early 1980s [ 201. Kjax-Hansen. Kjaer-Hansen has used MFM in the development of models of decision making processes [ 481. Measurement validation Larson. The only MFM method is the one described problem in Section 9 of this article. that treats measurement validation as a separate Creutzfeldt. The project described in [ 171 is partly concerned with measurement treats sensor validation It is a real-time diagnostic system, with low-level data collection in Fortran. MFM models are manually validation. The project diagnosis. written which handle them by propagating measurement of the system exists, with a small heat distribution plant as target process, but the thesis is yet to be published. together with alarm analysis and fault routines rules, tests a mixture of translated processing. The system generates hypotheses through alarm analysis, and fault diagnosis. A working demonstration the high-level values into Nexpert Object the MFM graphs, thus performing validation, and Alarm analysis Larson. A method this work, and it seems However, for alarm analysis with MFM to be the only one separately concerned with alarm analysis. (see above) partly treats this problem. in Section 10 of is presented the project of Creutzfeldt Fault diagnosis Several projects use MFM for fault diagnosis. Lind. Lind has described his approach that the structure of MFM models to real-time diagnosis it is is well suited for fault diagnosis under hard to obtain that produce an answer with low resolution quickly and then can use any to a time to increase the resolution of the diagnosis. Each goal corresponds task, and as lower level subgoals are met, the diagnosis becomes argued real-time constraints. By searching algorithms additional part of the diagnostic finer and finer, thus giving a behavior similar to that of anytime algorithms [ 10,213. in the MFM graphs, it is possible in [75], where top-down Creutzfeldt. Fault diagnosis is also the main aim of the Creutzfeldt project (see above). J.E. LnrssonlArtijicial Intelligence 80 (I 996) 29-93 13 Jorgensen. The thesis of Jorgensen [45] treats the problem of building general MFM models for diagnosis of ship engines, thereby aiding supporting reuse of modeling knowledge. Sassen et al. The Dutch project PERFECT uses a preprocessor to translate MFM models into CGGSYS programs for diagnosis [ 108-l 1 1 ] . The implemented method uses external measurement values to check the working condition of every leaf node in the MFM graph, and then propagates the fault information upwards, thus enabling the system to quickly find low-level faults, and then to use any additional time to give descriptions of the consequences on higher levels. An advantage with checking all leaf nodes is that they may be ordered according to failure likelihood, but a drawback is that all leaf nodes must be continually checked. The project has several points in common with the method described in Section 11 of this article. CGGSYS is a real-time expert system shell developed as a cooperation between 35 British and European companies. It is written in PIDP-I 1 and C, uses the text-based language KRL (Knowledge Representation Language) to describe the knowledge database, uses a blackboard architecture, and is designed to be quite efficient [ 141. The PERFECT system works as a compiler and translates MFM models into code for the COGSYS system. Sassen is part of the SCWERE project (Supervisory Control With Embedded Real- time Expert systems). This is a joint project between the faculties of Informatics, Electrical, Mechanical, and Chemical Engineering of Delft Technical University. The aim of the project is to support plant-wide control systems on a supervisory level using AI techniques in real time, see for example [ 105,106,117,118]. Larsson. Section 11 of this article presents a method for fault diagnosis using down- ward search in MFM graphs. Walseth. The Norwegian project of Walseth et al. uses MFM for diagnosis of a water/ammonia separation unit [ 124,125]. One contribution is the idea of connecting MFM goal s,atisfaction to tests on quantitative state variables in the functions. The MFM model is then used to produce input to Reiter’s algorithm, which is the diagnostic vehicle for this project. Planning Larsen. One project of Lind’s group uses MFM to control the production of STRIPS plans for startup of plants [ 61,621. The standard way of using STRIPS for planning is to perform a search among applicable operators, in order to construct a viable plan, i.e., a sequence of actions that takes the process from initial to goal state. MFM contains information about which functions that must be available for a goal to be achieved, and the implemented system uses this information to control the (otherwise blind) search through operators. Sometimes this needs guessing and backtracking, and truth maintenance techniques are used. For readings on STRIPS, see [ 281. Presentation. Lind. Lirtd has also treated presentation of means-end information and the design of operator .interfaces [ 721. The main idea is to use the graphical representation of the MFM models, combined with flow sheets and highlighting of functions and correspond- ing physical components. Another set of symbols and a graphical environment were 14 J.E. LurssodArt~cial Intelligence 80 (1996) 29-93 in the SIP project developed use; this thesis uses Lind’s older versions. A part of the effort of Lind’s group development cooperated with CEC-JRC [ 811, but the new symbols have not been put to further is the [24,94,95]. Lind has also of a general graphics environment Ispra in Italy. for MFM information to find faults and Praetorius Duncan and Pmtorius. Duncan [23] use MFM as an alternative to operators, and have made very interesting operators. The students experiments with students acting as inexperienced way of presenting diagnostic comparative received a few hours of training standard efficient test did not involve the result MFM as a means of presentation. To perform graphical presentation Businaro. Businaro flow sheet or an MFM model, and than a flow sheet as a fault diagnosis aid. It should be noted, however, in an example process using either a to be more that the trained operators, and that the test series was small. In spite of this, and clearly provides a good reason for further work with the test, Duncan and Pratorius developed a system for MFM. Sassen has later performed similar experiments. interfaces using some studies of man-machine et al. performed test, MFM proved is very interesting, in this MFM, in the mid 1980s [ 11 I. Monta et al. Toshiba is developing nuclear reactors. The system uses MFM to represent plant knowledge in the next generation of operator comprehensive is based on design principles a supervisory control system for boiling water science and to appear room software, and this may very well be the most for diagnosis. The system is scheduled from cognitive and interesting project so far. Larsson. Some ideas about and examples of presentation of means-end information are given integrated related information. in [67]. The conclusion in a multiple view system, allowing several ways of presenting is that MFM may be suitable for presentation, when the same and Projects using other functional models Several projects have used means-end MFM, but closely both is used; usually a tree or graph describing related. This means and functional models, which are not pure of goals, functions, or that some representation a hierarchy of goals or functions. Alarm analysis Modarres et al. The Goal Tree Expert System containing trees to perform diagnostic of goal trees and success of tree structures requirements, clearly resembles MFM. This data structure has been used to implement program, Lisp and runs on an IBM-PC/AT. that helps to evaluate alarm systems goals and subgoals on the higher It has been successfully i.e., what components [86]. The system tasks. The representation (GCYIRES) project uses a database consists levels, and hardware it that must be working, on the lower ones. Thus, the UMPIRE-I in Common is written tested on real processes. Padalkar et al. The Intelligent Process Control System (IPCS) uses hierarchical mod- fault in graphs, and thus in fact performs an alarm analysis. The target process of functions in hierarchical representation of systems and subsystems. Constraints els of structure and function propagation is described and subfunctions, tree structures with a functional [ 971. The system models and a structural fault diagnosis representation to perform J.E. LmssodArtijcial Intelligence 80 (1994) 29-93 75 are used to find faulty components, in the hierarchies, lution the diagnosis. The system has been tested successfully on a small power plant producing electricity is then propagated downwards to find the lower level causes. In this way, a diagnosis with low reso- the granularity of is quickly available, and then any extra time is used to improve and steam at the Senboku Works of Osaka Gas Company and this information in Osaka, Japan. Fault diagnosis Modarres et ai. The GGI’RES system has also been used to perform implemented program uses a depth-first The failures construct facility, and the results seem to have been satisfactory. in equipment an on-line in the leaf nodes fault diagnosis expert system found search downwards in goal [ 131. The system has been used for an experimental trees fault diagnosis. to find to reactor nuclear under fault diagnosis Allen and Rao. Fault Padalkar et al. The IPCS system of Padalkar et al. [97] deserves to be mentioned too, as it performs a mixture of alarm analysis and fault diagnosis. faults in a tree struc- levels contain the tree faults are found. See for the toplevels of the trees contain and subcomponents. A diagnosis consists of a search path through trees describe a process and its possible leaves, where alarms, while the primary the lower the root to one or several ture, where components from example [ I 1. Planning subgoals generated synthesizer an automatic through automatically to construct operating to give a qualitative description Tomita et al. The project of Tomita et al. describes of operating procedures based on functional models of plants. The system uses a heuristic search for chemical plants. The goal is to give operator support. The database contains directed fragments of operating graphs fashion, sequences, and scripts to help build plans as networks of the of scopes, where each scope corresponds for plant. Scripts describe constructing to the startup of a practical chemical plant: a subprocess of an existing ethylene plant, and this application of the plant behavior, to construct plans top-down. Working plants are described of sequences of scopes. The system has been applied for scopes to work, and are used as guidelines called scopes, which are used seems to have been successful function or subfunction plans, consisting in a bottom-up to an abstract the conditions sequences [ 1201. Another system is specifically aimed at batch processes is a tree of tasks and subtasks, which must be performed itself used operation. The process topology of the plant. The operational knowledge description subtasks performs a quick simulation of how to perform each possible is described to schedule a set of operations, using a linear programming to check the result. as a directed graph, showing [ 1211. Here the data structure to ensure successful the physical i.e., task. The system uses the tree of needed technique, and then in a table of recipes, is contained Presentation Rasmussen. Rasmussen has thoroughly discussed the design of man-machine faces and describes accomplish the importance of presenting means-end information in order this, see for example [ 102,103]. Rasmussen has done a greatly original inter- to 16 LE. Lmsson/Art@cial Intelligence 80 (1996) 29-93 are performed on a rule-based the tasks of operators and other users of man-machine work of structuring systems, and of the behavior used for the tasks. Some tasks are usually performed on a skill-based tasks, no- level, which means a more or less automated or reflexive behavior. Other is tably some kinds of diagnosis, is expressed on a rather simple, symptom-action needed but the knowledge form. Yet the most complex and difficult ones, are performed on a other tasks, and especially reasoning with the use of models. This knowledge-based structure task levels fit differently well to be performed by operators and for being automated. The demands on an implementation are also very different depending on the task type; thus a skill-based by conventional expert system, and a knowledge-based reasoning. Rasmussen’s an extensive overview. task may be solved task may be better solved by an system for automated to [ 1021 for contributions [ 1041 is a starting point for the ideas behind MFM. are very rich; the reader is referred techniques, while a rule-based task by a more advanced level, where reasoning since the different implies complex is of paramount level, which importance, control Modarres et al. The GOTRES representation has also been utilized as a database for [ 471. In this project, an operator advisory system for operation of nuclear power plants a Prolog implementation was used for building a small expert system. Simulation idea here is to use a more abstract Several projects use functional models for generation of equations and simulation. The of a system’s behavior, and in order to produce equations, representation general to move away from physical detail which is not needed, which then may be used in modeling or simulation. Ch&uy et al. The system CAMBIO uses graphical diagrams reactions. The different description of biochemical by the reactions are represented described by connections. Thus, building a graph on a computer equations must be given manually, representation may provide an interesting connection readings on CAMBIO, it is unclear how successful Bond graphs. From to give a functional types of reactions and media affected structures are symbols, and the reaction by graphical the system reaction by lets a user design a compound screen. The system reads this graph and can produce Some extra information reactions. The CAMBIO in [ 671. For in Pascal, but and then perform a simulation. e.g., about the order of the different see [ 12,27,88]. The system has been implemented the study and systematic use of block diagrams to MFM, as described semi-automatically it has been. comes the concept of bond graphs representation and signal exchanges between components a product of two variables, representation the effort corresponds the product the velocity of rotation temperature is the effect. In mechanics, and the flow the entropy in several disciplines, frequency, while to the voltage, while as process [ 46,98,119]. They display both energy is described as in processes. Each connection the effort and thejow. The bond graphs serve as a graphical In electronics, often corresponding to equations. the flow corresponds thus, the effort is the force or torque and the flow the effort is the absolute in thermodynamics to the current; The elements connected simple bonds corresponding resistors, example [ 1191. are functional components to wires, shafts, or rods, resistance elements describing of several kinds. They may be for flywheels, or masses, to inductors, inertia elements corresponding J.E. L.arsson/Arti$cial Intelligence 80 (1996) 29-93 Fig. A.2. A simple mechanical system with a mass, a spring, and friction. The mass is seen as a point mass, and the excitation is a force independent of velocity. From [ 1191. S, I -1 IL R C Fig. A.3. A bond graph of the system in Fig. A.2. The excitation is S,. The spring is modeled as a capacity element, the friction as a resistance, and the mass as an inertia element. The connection is a series junction, as the velocities are equal and the different forces added. From [ 1191. Fig. A.4. An augmented bond graph of the system. The force of the effort source acts on the mass which responds with the velocity ~2, but after deducting the spring and friction forces, which are functions of the velocity. From [ 1191. C:lik R:f elements which match condensers capacity transformers, and series connection. The causality between different components system of arrows and bars. etc. There are also two kinds of junctions, p and s junctions, or springs, @art sources, Jlow sources, for parallel are shown with a With these building blocks, it is possible and other systems. A mechanical thermo- is shown in Fig. A.2. This system and has a point mass, a linear spring, and some It may be described by a simple bond graph, see Fig. A.3. An augmented bond is also dynamical, is a simple example friction. graph of the system described. The forces and velocities are shown in the graph. to describe electrical, mechanical, system in Fig. A.4. Here from mechanics, in the system the causality is shown From bond graphs it is possible to automatically transfer functions. Bond graphs have some superficial properties thus they are both built from abstract functions connected generate differential equations or in common with MFM, into flows, and may be used to 78 J.E. Larsson/Artijicial Intelligence 80 (1996) 29-93 generate balance equations. There, however, between bond graphs and MFM are as follows: l Bond graphs have no achieve or condition the similarities end. The major differences relations, and thus cannot represent the means-end l The functions dimension, which is the main point of MFM. are not the same. Thus, bond graphs have no barriers, while MFM have no capacity elements, etc. l The how paths of bond graphs are described by efforts and flows, and the actual values are usually not decided beforehand but solved for, as equations are solved. MFM flows are built from pure flow variables, and the flow values must be known beforehand; the normative nature of MFM. l The intended use is vastly different. Bond graphs are often used as a graphical rea- is mainly concerned with diagnostic of equations, while MFM representation soning. This leads to the clear conclusion with each other. As bond graphs do not encompass it would be misleading and potentially dangerous that bond graphs and MFM have very little to do the most important aspect of MFM, it. to use them in trying though. If good bond graph descriptions of a process are and these flows may be used when building to understand One connection is possible, they represent energy balances, available, MFM models. Projects using qualitative behavioral models The most thorough work in model-based diagnosis has arguably been done in research in Section to qualitative physics. This area has already been overviewed areas related 15. Here, some further projects will be described under the appropriate headings. Alarm analysis Kramer et al. The Model Integrated Diagnosis Analysis System, MIDAS, basically It uses qualitative alarm analysis, with extensions fault diagnosis. towards performs information [ 29,961. An alternative in [ 931, from where the example below is taken. about process variables described implementation in graphs. For readings on MIDAS, see in G2 of part of the MIDAS system is described MIDAS is a qualitative method The incoming measurements belong to the same primary models, where each is translated for finding deviations steady state. that are turned into alarms, which are grouped fault. In order to do this, MIDAS uses a chain of different from a nominal into clusters The first type of model used is the Signed Directed Graph into the next one more or less automatically. (SDG) which the physical equations of the process. State variables are represented by arcs. SDG also contain is derived by nodes, the faults. The SDG graphs are transformed to Extended SDGs to handle loops. The ESDGs are used to generate event graphs. In these, a set of the total set of root causes, relationships from and qualitative possible primary global feedback events, Consider i.e., qualitative state changes, are linked tank in Fig. AS. The level, L, of the tank is controlled by the inflow, qi, and the outflow, qO. In the outflow pipe, there is a flow resistance, R, that may vary. The balance equations of the tank are together with a root cause. the gravity J.E. Larsson/Art@cial Intelligence 80 (1996) 29-93 19 Fig. AS. A small gravity there is a flow resistance, R, in the outflow pipe. tank. The level, L, of the tank is controlled by the inflow, qi, and outflow, qO, and Upstream leak Tank leak R Fig. A.6. A signed directed graph describing together with arcs that describe how a change the gravity in one of the variables will affect the others. From tank. The variables qi. L, qO, and R are shown, [93]. L = Clqi - c2q0 and q0 = f-(R)&. The SDG produced translated produce an event graph of the gravity into an Extended SDG from these equations is found to handle global tank, see Fig. A.7. in Fig. A.6. The SDG model loops and then used feedback is to MIDAS supervises all measured variables with a set of monitor procedures. These send qualitative messages to construct an on-line graph of the actual events, alarms are. analyzed in Fig. A.8. shown to an event interpreter, which uses the event graph representation and connected. The architecture of the MIDAS on-line their links, and root causes. Thus, the is system Fault diagnosis Several projects within AI have used model-based sis. This effort has been described earlier, connections to MFM and process control domains will be described. to perform fault diagno- in Section 15. Here, some projects with closer reasoning It uses QSIM models to perform a semi-quantitative is based on the QSIM modeling Dvorak and Kuipers. The MIMIC system simulation which uses quantitative the simulation [ 25,261. i.e., a qualitative relationships. The system compares one or several models, each corresponding introduces process. on these. language simulation of a system, about some values and information and the real process, and can track to a working or fault state. The system instead of the tested on small example processes and seems to be working well several new ways of using alarms, basing them on the model It has been Ng. The Inc-Diagnose project described and a new version of the diagnostic in [92] uses a set of QSIM qualitative to perform algorithm of Reiter [35,107], states fault 80 J.E. Lursson/Art@cial Intelligence 80 (19%) 29-93 .High Inflow ~Levcl Sensor High Bias : Downs&earn Leak f Flow Sensor High Bias :NOT Level Sensor Bias :NOT Flow Sensor Bias :NOT Level Sensor Bias fTanl;L& i Low Inflow Level Sensor Low Bias i Outlet Blockage Flow Sensor Low Bias Fig. A.7. An event graph describing the gravity tank. There am eight events and four root causes. This is the data structure that MIDAS uses on-line. From [93]. Data from sensors 1 Fig. A.8. The architecture of the MIDAS on-line system. The input signals are sent to monitors, which turns them into qualitative events. The event interpreter receives all events and uses them to construct an on-line event graph, which represents the current situation in the process. From [93]. LE. L.arsson/Art@ial Intelligence 80 (1996) 29-93 81 formulation, systems. Reiter’s of simple physical a diagnosis problem theory describes SD, a set of components, Comp, and a set of observations, a set of first-order diagnosis as a system description, Obs. In Reiter’s SD is usually Ng instead uses QSIM constraints. Viewed as a formal problem, diagnosis complete problem, but Ng gives an algorithm method has been tested on a temperature small processes, where machine. formulas, but is a NP- efficient. The regulator, and a toaster; times were a few minutes on an Explorer Lisp that he claims controller, a pressure the execution is reasonably logical Simulation Kuipers. Kuipers has developed is described as a set of qualitative the language QSIM for qualitative [58- constraints with a given initial state, future behaviors of the system, by producing a states. The expressive power of QSIM supports such rela- simulation the possible subtraction, and derivation, while others only state a monotonical relationship. This idea can be seen as an abstraction of differential equations. (see the MIMIC diagnostic has been used to build system 601. A system and QSIM can then compute tree of all possible, qualitative tionships a,s addition, functional The QSIM above). representation Projects using quantitative behavioral models reasoning, The classical models of control so-called observer-based methods, theory are quantitative; usually differential fault detection using mathematical models and parameter estimation, Process with know ledge-based [43]. Fault detection with classical methods 341. In qualitative space models with a symbolic (QPT) described. equations. extended in [ 32- of state framework derived from the Qualitative Process Theory results and only a few examples will be a combination to combine (HPT), Woods describes and quantitative models the Hybrid Phenomena [ 301. In this group is given excellent [ 127-1291. HPT there are many is an attempt is overviewed overviews Theory in Measurement validation Mah et ial. The classical form of data reconciliation the most probable values of a set of interdependent description. There are essentially f’or an instructive that handle small, random errors and uses statistical methods in order see for exam- sensors, two kinds of methods, those concerned with finding gross er- [82] to find ple those rors. An example of the first type of method is found in [ 821. The assumed model is y = x -t E, where y is a vector of measurements, random errors. The system process as a set of nodes and directed arrows. The nodes correspond arrows x is a vector of true flow rates, and E is a vector of the to the rows and the to and a 1 an outflow is described by an incidence matrix, A, which describes to the columns of the matrix, and a -1 marks an inflow 82 J.E. Lursson/Art@cial Intelligence 80 (1996) 29-93 from a node. The errors, ei, are described by a covariance matrix, Q, which should be positive definite and known. The data reconciliation as a constrained weighted problem can then be formulated estimation problem: least-squares mm] (y - x)~Q-‘(Y - x) 1 subject to the constraint Ax=O. An approximation, 2, of the true flow values, x, is given by 2 = y - QAT( AQAT) -’ Ay. The use of linear programming also been suggested. techniques, interval arithmetic [42], and fuzzy logic has techniques for example chi tests. There are global The most common testing, for treating gross errors are based on statistical hy- pothesis tests [ 21, and nodal tests [ 831, which finds out whether a gross error is present, but which require some other method to [ 841, which instead re- find out where the fault is, and direct tests on each measurement These methods are usually combined with a search quire a previous data reconciliation. of suspicious values for the erroneous measurements level, a and retesting. Common covariance matrix must be known, and thus may fail, and they usually fault hypothesis only, instead of giving all possibilities. to all methods are that they need a preset significance using some kind of elimination find the most probable they are probabilistic Alarm analysis There are many methods for alarm analysis based on quantitative techniques. See [70] for an overview. Fault diagnosis of Delaware Petti. The Diagnostic Model Processor method has been developed by Tom Petti at to find in [ 1001 the University a set of violated working assumptions, much resembles a neural network. shows an implementation and some examples of the use of the method. [99-1011. This system uses quantitative i.e., a set of faults, and its internal the DMP methodology, while [ 1011 describes equations structure that during and available measurements DMP uses model equations fault free operation, all model equations to arrive at the most likely agree fault conditions. It assumes and to what extent each in what direction with the real measurements. By analyzing can be deduced, and each the most likely failed assumptions is violated, model equation case of redundancy helps to make the diagnosis more certain. The process model consists form, i.e., so that they ideally equal zero. Each of a set of equations written on residual the upper and lower limits for which the equation also has tolerance the equation residual of each equation - 1 and 1, telling how much the equation deviates from the ideal value. An example of a tank with a gravity outflow is given in Fig. A.9. is satisfied. With the use of the tolerance is turned into a number between limits and a sigmoidal limits, representing function, J.E. Larsson/Artijcial Inrelligence 80 (1996) 29-93 83 Fig. A.9. A tank with a gravity outflow. The outflow depends on the level as qOUt = am. and the outflow are measured, and can thus be used in a model equation. Both the level The outfow of the tank is given by: E = qaut - ~&s, form. Each equation depends on a number of assumptions, to be satisfied. The in order for the equation immediately in the equations, or implicit, e.g., that there are no leaks or blocks in the piping, such as correct sensor for values readings in residual which is written i.e., conditions which must be fulfilled assumptions may be explicit, visible etc. The assumptions 0 The level sensor 0 The outflow sensor l No leaks in the tank or pipe. Each equation is related is working. for the tank equation are: is working. to assumptions via connections, which state the sensitivity of the equation Finally, failure for a fault in this assumption. nation of the satisfaction indicates both how much and in what direction has been found. A DMP model of Steritherm likelihoods, Fi, for each assumption may be computed, by a combi- from zero fails, i.e., whether a fault equations. The deviation values of the connected the assumption is shown in Fig. A.lO. DMP has been shown easy to be a simple and useful diagnostic method. An advantage to change the DMP data structure when a process that it is relatively Due to the summing of tolerance into boolean values. DMP can handle multiple hypothesis, which may be potentially problematic. and weighting methodology, levels, and it is rather insensitive there are no problems of turning quantitative measurements faults, but it will find only one possible is is rebuilt. to the setting Projects using integration of different models As different model types are more or less well suited for different types in a mixed representation. the integration of different methods and model types. to use several model on et al. The “Knowledge-Based advantageous focussed Anin [ 3-9,631, suggests a general architecture all the tasks needed in a full control and supervision are low-level simulation, as well as supervision loop control, sequence control, alarm and control system. The tasks currently handled logic, and quantitative and diagnosis based on fault trees, symptom-based for a knowledge-based system accommodating Real-Time Control Systems” project described in tasks, it would be Some projects have 84 J.E. Larsson/Artificial Intelligence 80 (1996) 29-93 MODEL Fig. A.lO. A DMP model of Steritherm. The picture contains the model equations and the assumptions, and some of the connections are also shown. c diagnosis, MIDAS, MFM, and DMI? All structure. A demonstration system has been implemented this is contained in a multiple view data et al. The DICE system [44,55-571, It is based on a blackboard rules. Boolean and multivalued architecture and represents logic based on fuzzy ideas are system. The system is written in C and runs logic together with a truth-maintenance in G2. is a real-time expert system for its knowledge Krijgsman control systems. with production available, on VAXIVMS platforms. Crespo et al. The RIGAS system [ 15,161 is a real-time expert system based on a architecture. Some knowledge to solve control subprob- blackboard lems, while others, called processes, handle to external and internal stimuli. They may be either periodic or sporadic, and react to, e.g., requests the activities needed, such as responding sources are assigned from the operators. Fault diagnosis Viiia and Hayes-Roth. Viiia and Hayes-Roth [ 1231 use a set of different models to architecture. The prime a the physical a component) are organized level, which describes system using a blackboard the processes performed by the component build a real-time knowledge-based (each describing models structural level where level, where all parametrization qualitative description of the system and its parameters; i.e., erroneous all causes of faults, three constructed. These have location. The system uses these models off-line and sensor connectivity, structure of the component; are represented; levels of information: takes place; a sign level, which is a and a fault level, which defines signs. With the prime models, domain models are functional to precompute in five levels of information: a functional a parameter physical connectivity, of the component J.E. LarssodArtijcial Intelligence 80 (19%) 29-93 85 a hierarchy of abstract models which are analyzed This to choose simulation is then used on-line, and diagnosis. information to find a worst-case the appropriate model timing estimate. for real-time Vifia and Hayes-Roth has tested this system on two control systems, RCIC, an aux- [ 411, and Guardian, for [ 401. The precomputed models en- in real time. The for control prob- to handle reasoning system, unit, and model-based in a blackboard architecture is specifically designed architecture developed in a surgical simulation a system diagnosis intensive-care [ 38,391. This blackboard for a power plant cooling to perform implemented iliary subsystem patient monitoring able the system system has been lems with hard and soft deadlines, useless or less valuable control applications Struss. Struss sentation of physical of electronic assumption-based constraints seems to work well in the domain of analyzing goal of the: work is to arrive at a general circuits, and the importance truth maintenance levels [ 113-l 151 describes between different after a certain i.e., when the result of some AI-based algorithm will be time. The system has been used in real-time in semi-conductor manufacturing [ 91 I. structure and function. The system a fault diagnosis of using multiple views repre- system using multiple is concerned with diagnosis is pointed out. An [ 50,5 11, is used to keep track of and it simple electronic circuits. The long term system in the structural and functional hierarchies, (ATMS) Mariiio et al. Marifio et al. general multiple view representation. sification problems. Here, the inference views during scribed by bridge objects. the diagnostic theory of diagnosis. [ 851 describe a fault diagnosis The system engine is designed is object-oriented search, and the contact points between expert system with a and used for clas- to switch between different the views are de- Appendix B. Fault diagnosis code Here follows a listing of C code for the fault diagnosis algorithm. This code has actually been copied concerned with bookkeeping, and alarm analysis algorithms have been omitted, the MFM Toolbox updating from though. in C. Some variables the graphics, and the measurement and statements validation /*_-RF” Fault ~~agnosis___-___________----_--__--_-______--__---_-----_-*, /* /+ Author: Jan Eric Larsson /* /* /* /* /* /+__Clobal ~~fi~iti~~~---------------___________________________________*, */ */ Knowledge Systems Laboratory */ Stanford University */ 701 Welch Road. Building C, Palo Alto, CA 94304, USA */ Phone: +l 415 723 0948, E-mail: LarssonQKSL.Stanford.Edu */ */ struct CoalStruct { int No. State. Conditions; struct NetvorkStruct * Network; struct ManaSerStruct l Manager; struct ConditionStruct * Condition [MAXCONDSI; ); 86 J.E. L.arsson/Art@cial Inteiiigence 80 (1996) 29-93 struct NetvorkStruct { int No, State, Functions, Coals; struct FunctionStruct * Function [MAXFUNCS] StruCt malstruct l cd [MAXCOALS] ; ; ); struct ManagerStruct c int No, State, Fuactions; struct FunctionStruct struct CoalStruct * Goal; l Function CMA~FUNCSI; 1; struct FunctionStruct c int No, Type, MType. State, struct FunctionStruct * Is [MAXLINKS], * out [MAXLINKS] ; StruCt ConditionStruct struct NetworkStruct * Network; struct MahagerStruct * Manager; l Condition CMAXCONDS~; Ins, Outs, Conditions; 3; struct ConditionStruct ( int No, State; struct CoalStruct * Coal; struct FunctionStruct * Function; 3; /*--Fault Diagnosis_____________________________________________________*, search dovnwards in the the state values on the way up. DiagnoseCoal These procedures perform the depth-first MFM graph, and set performs the diagnostic the state of the goal is unknown, sets the state to undecided, avoid loops and DiagnoseManager, (if a manager exists). returned. updated according (to in the means-end dimension), and calls DiagnoseNetwork seach for a goal object. It checks that to the results the state Finally, is /* * * * * * * * * */ int DiagnoseGoal (Coal) struct GoalStruct * Goal; if (Goal -> State -- UNKNOWN) c Goal -> State = UNDECIDED; Goal -> State - DiagnoseNetwork (Goal -> Network); if (Goal -> Manager !- NULL) { if (DiagnoseManager (Goal -> Manager) == FAILED) < Coal -> State = FAILED; > 3 3 return (Goal -> State); i 3 /* * DiagnoseNetwork and DiagnoseManager perform the dovnward search for t network and manager objects. They simply go through the functions * calling DiagnoseFunction for each, and then return in the object, * working or failed. * */ depending on the results returned. int DiaghoseNetvork (Network) struct NetworkStruct * Netvork; c int n; J.E. Larsson/Artijcial Intelligence 80 (1996) 29-93 87 if (Network -> State =- UNKNOWN1 i Network -> State = UNDECIDED; Network -> State = DiagnoseFunction for if (DiagnoseFunction (n = 1; n < Network -> Functions; n ++) { (Network -> Function CO]); (Network -> Function Cnl) =- FAILED) f Netvork -> State = FAILED; 1 1 1 return (Network -> State) ; 1 int DiagnoseManager (Manager) struct MauagerStruct * Manager; C int n; if (Manager -> State -- UNKNOWN) C Manager -> State - UNDECIDED; Manager -> State = DiagnoseFunction (Hanager -> Function CO]); for if (n = 1; n < Manager -> Functions; n ++) i (Manager -> Function Cull == FAILED) C (DiagnoseFunction Manager -> State = FAILED; > ) > return > (Manager -> State) ; it reads its state to a sensor reading. * DiaguoseFuuction performs the diagnostic * First, * * must be continued among the conditions of the function, but when it * is normal, further search of the current branch can be skipped. * =/ from the monitor array, which corresponds If the value is unknown or failed search for a function object. the search int DiagnoseF’mction struct Functi~xiStruct l Function; { (Function) int n; Function -> State = Monitor CFunction -> Nol; if (Function -> State != WORKING kk Function -> Conditions > 0) i (n = 11; II c Function -> Conditions; n ++I { (DiagnoseCondition (Function -> Condition [nil == FAILED) { Function -> State = FAILED; for if > 1 1 return (Function -> State); 1 It simply propagates the search downwards to the next goal. search for a condition t DiagnoseCondition performs the diagnostic * object. * =/ int DiagnoseCondition struct ConditionStruct { (Condition) * Condition; Condition -> State = DiagnoseCoal (Condition -> State); return (Condition -> Goal); 1 88 J.E. Larsson/Arttjkial Intelligence 80 (1996) 29-93 Acknowledgements I would like to thank my supervisor, professor Karl Johan astrom, and the originator of MFM, professor Morten Lind, and Doctor Karl-Erik &z&n for inspiration and support. This project has been influenced by the Swedish IT4 project “Knowledge-Based Real- Time Control Systems”, and I also wish to thank the members of the project group. The project has been supported by the IT4 project no. 3403 and the TFR project no. 92-956. The Guardian project is taking place at Stanford University, and I would like to thank Doctor Barbara Hayes-Roth and the staff at the Knowledge Systems Laboratory for valuable help and support. The postdoctoral visit is supported by grants from the Swedish Research Council for Engineering Sciences, the Swedish Institute, the Royal Physiographic Society in Lund, and the Nils Hiirjel Research Fund at Lund Institute of Technology. Finally, I would also like to thank the anonymous referees for constructive suggestions that helped to clarify the paper. References [I] D.J. Allen and M.S.M. Rao, New algorithms for the synthesis and analysis of fault trees, Ind. Eng. Chem. Fund. 19 (1980) 79-85. [2] G.A. Ah&y and T. Sztanb, Checking and correction of measurements on the basis of linear system model, Problems Control Inf Theory 4 (1975) 57-69. 131 K.E. Arzen, Knowledge-based control systems: aspects on the unification of conventional control systems and knowledge-based systems, in: Proceedings 1989 American Control Conference, Pittsburgh, PA (1989). [4] K.E. .&z&n, Knowledge-based control systems, in: Proceedings 1990 American Control Conference, San Diego, CA ( 1990). [ 51 K.E. &z&i, A model-based control system concept, Tech. Rept. TPRT-3213, Department of Automatic Control, Lund Institute of Technology, Lund ( 1992). [6] K.E. Arzen, C. Rytoft and C. Gerding, A knowledge-based control system concept, in: Proceedings ESS ‘90 Intelligent Process Control Design, Ghent ( 1990). [7] Asea Brown Boveri, SattControl, TeleLogic and Department of Automatic Control, Lund Institute of Technology, Lund, Knowledge-Based Real-Time Control Systems-IT4 Feasibility Study, Studentlitteratur ( 1988). [ 8 ] Asea Brown Boveri, SattControl and Department of Automatic Control, Lund Institute of Technology, Lund, Knowledge-Based Real-Time Control Systems --IT4 Project: Phase 1, Studenthtteratur ( 1990). [9] Asea Brown Boveri and Department of Automatic Control, Lund Institute of Technology, Lund, Knowledge-Based Real-7ime Control Systems--IT4 Project: Phase 2, Studentlitteratur ( 199 1) . [ lo] M. Boddy and T. Dean, Solving time dependent planning problems, in: Proceedings IJCAI-89, Detroit, MI (1989) 979-984. [ 111 T. Businaro, A. Di Lorenzo, G.B. Meo, M.I. Rabbani and E. Rubino, An application of MPhI method for nuclear plant state identification, in: Proceedings Enl. Halden Progr. Group Meeting on Computerized Man-Machine Communication, Goteborg ( 1985). [ 121 A. Cheruy, R. Montellano and M.P. Bemier, Computer-aided design in modeling of biotechnical processes, in: P. Bree.dveld et al., eds., Modeling and Simulation of Systems (Baltzer, Basel, Switzerland, 1989) 235-237. [ 131 D.T. Chung and M. Modanes, GGTRES: an expert system for fault detection and analysis, Reliability Eng. System Safety 24 (1989) 113-137. [ 141 COGSYS, COGSYS Manual (COGSYS Ltd., Salford, 1990). LE. Larsson/Artifcial Intelligence 80 (1996) 29-93 89 I1 51 A. Crespo, J.L. Navarro, R. Viv6, A. Espinosa and A. Garcia, A real-time expert system for process control, in: Proceedings 3rd IFAC International Workshop on Artificial Intelligence in Real-Time Control, Sonoma, CA ( 1991). 116 1 A. Crespo, J.L. Navarro, R. Viv6, A. Garcia and A. Espinosa, RIGAS: an expert server task in real-l:ime environments, in: Proceedings 1992 IFAC/IFIP/IMACS International Symposium on Artificial Intelligence in Real-lime Control, Delft (1992) 631-636. [ 171 J. Creutzfeldt, Sensorvalidering, alarmbehandling, og fejldiagnose i storm processanheg (Sensor validation, alarm analysis, and fault diagnosis in large processes), Ph.D. Thesis, preliminary status report, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1990). [ 181 R. Davis, Diagnostic reasoning based on structure and behavior, Artif Intell. 24 ( 1984) 347-410. [ 191 R. Davis and W. Hamscher, Model-based reasoning: troubleshooting, in: H. Shrohe, ed., Exploring Artifcial Intelligence (Morgan Kaufmann, San Mateo, CA, 1988) 297-346. [20] M.K. De, J.A. Rumancik, A.J. Impink and J.R. Easter, A functional design approach to PWR safety, in: Proceedings International Meeting on Thermal Nuclear Reactor Safety, Chicago, IL (1982). [ 211 T. Dean and M. Boddy, An analysis of time dependent planning, in: Proceedings AAAI-88, St. Paul, MN (1988) 49-54. [ 22 1 D. CeCoste, Dynamic across-time measurement interpretation, Artif: Intell. 51 ( 199 1) 273-341. [23] K.D. Duncan and N. Prretorius, Flow displays representing complex plant for Diagnosis and process control, in: Proceedings 2nd European Meeting on Cognitive Science Approaches to Process Control, Siena (1989). [24] J. Duschek, Syntax analysis of modeling languages and a knowledge-based system for modeling, Master’s Thesis, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby (1991). 1251 D.L. Dvorak, Monitoring and diagnosis of continuous dynamic systems using semiquantitative simulation, Doctor’s Dissertation, AI 92-170, Artificial Intelligence Laboratory, University of Texas at Austin, Austin, TX (1992). [ 261 D.L. Dvorak and B. Kuipers, Process monitoring and diagnosis, IEEE Expert (June 1991) 67-74. 1271 M. Farza and A. Chtruy, CAMBIO: a software for modeling and simulation of bioprocesses, Comput. Appl. Biosci. 7 (1991) 327-336. [28] R.E. Fikes and N.J. Nilsson, STRIPS: a new approach to the application of theorem proving to problem solving, Artif Intell. 2 (1971) 189-208. [ 291 FE. Finch, Automated fault diagnosis of chemical process plants using model-based reasoning, Doctor’s Thetis, Massachusetts Institute of Technology, Cambridge, MA (1989). [ 301 K.D. Forbus, A qualitative process theory, Arttf Intell. 24 (1984) 85-168. 1311 K.D. Forbus, Qualitative physics: part, present, and future, in: H. Shrobe, ed., Exploring Artificial Intelligence (Morgan Kaufmann, San Mateo, CA, 1988) 239-296. 1321 PM. Frank, Fault diagnosis in dynamic systems using analytical and knowledge-based redundancy-a survey and some new results, Automatica 26 (1990) 459-474. [33] PM. Frank, Enhancement of robustness in observer-based fault detection, in: Proceedings IFAUIMACS Symposium SAFEPROCESS ‘91, Bden-Baden (1991) 275-287. [ 341 P.M. Frank, Robust model-based fault detection in dynamic systems, in: Proceedings IFAC Symposium on On-Line Fault Detection and Supervision in the Chemical Process Industries, Newark, DE (1992). 1351 R. Greiner, B.A. Smith and R.W. Wilkerson, A correction to the algorithm in Reiter’s theory of diagnosis, Arttf Intell. 41 (1989) 79-88. [ 361 W. Hamscher, Modeling digital circuits for troubleshooting, Artif: Intell. 51 (1991) 223-271. 1371 W. Hamscher, L. Console and J. de Kleer, eds., Readings in Model-Based Diagnosis (Morgan Kau Fmann, San Mateo, CA, 1992). [ 38 1 B. Hayes-Roth, A blackboard architecture for control, Art$ Intell. 26 ( 1985) 25 l-321. [39] B. Hayes-Roth, Architectural foundations for real-time performance in intelligent agents, Real ‘lime syst 2 (l-2) (1990). [40] B. Hayes-Roth, R. Washington, D. Ash, R. Hewett, A. Collinot, A. Vitia and A. Seiver, Guardian: a prototype intelligent agent for intensive-care monitoring, Art$ Intell. Medicine 4 (1992) 165-185. 1411 R. Hewett, ICE Manual, BBl Internal Report, Knowledge Systems Laboratory, Stanford, CA (1990). 90 J.E. L.arsson/Art@cial Intelligence 80 (19%) 29-93 [42] D.M. Himmelblau, Interval analysis as a tool for data rectification, in: Proceedings AIChE Annual Meeting, Houston, TX ( 1987). 1431 R. Isermann, Process fault detection based on modeling and estimation methods-a survey, Automatica 20 (1964) 387-404. [44] R. Jager, Direct real-time control using knowledge-based techniques, in: Proceedings ESS ‘90 Intelligent Process Control Design, Ghent [45] S.S. Jorgensen, Generic MFM models ( 1990). for use in fault diagnosis of ship system’s machinery, Ph.D. Thesis, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1993). [ 461 D. Karnopp and R. Rosenberg, System Dynamics: A lJn@ed Approach (Wiley, New York, 1975). tree models as the knowledge-base [47] of goal tree-success of IS. Kim and M. Modarres, Application operator advisory systems, Nuclear Eng. Design 104 ( 1987) 67-8 1. 148 J J. Kjrer-Hansen, Decision structures of multi-agent systems, Ph.D. Thesis, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1992). [49] J. de Kleer, How circuits work, Arttf Intell. 24 ( 1984) 205-280. [SO] J. de Kleer, An assumption-based 1511 J. de Kleer, Extending [ 521 J. de K&r, Focusing on probable diagnoses, in: Proceedings AAAI-91, Anaheim, CA (1991) 842-848. [53] J. de Kleer and J.S. Brown, A qualitative physics based on confluences, Artif Intell. 24 ( 1984) 7-83. [54] J. de Kleer and B.C. Williams, Diagnosing multiple faults, Artif Intell. 32 ( 1987) 97-130. [ 551 A.J. Krijgsman the ATMS, Arttf Intell. 28 (1986) 163-196. in: Preprints of the 1992 IFAC/lFIP/lMACS TMS, Artif Intell. 28 (1986) 127-162. and R. Jager, DICE: a real-time toolbox, International Symposium on Arti$cial Intelligence in Real-lime Control, Delft (1992) 637-641. 1561 A.J. Krijgsman, R. Jager, H.B. Verbruggen and PM. Bruijn, DICE: a framework for real-time intelligent in: Proceedings 3rd IFAC International Workshop on Artificial Intelligence in Real-7ime Control, control Sonoma, CA (1991). [ 571 A.J. Krijgsman, H.B. Verbruggen, PM. Bmijn and E.G.M. Holweg, DICE: a real-time intelligent control environment, 1581 B.J. Kuippers, Commonsense in: Proceedings ESS ‘90 Intelligent Process Control Design, Ghent (1990). reasoning about causality: deriving behavior from structure, Artif Intell. 24 (1984) 169-204. [59] B.J. Kuippers, Qualitative [ 601 B.J. Kuippers, Qualitative 25 (1989) 571-585. simulation, Artif: Intell. 29 ( 1986) 289-338. reasoning: modeling and simulation with incomplete knowledge, Automatica [ 611 M.N. Larsen, Strips as a planning method within abstractions and MFM modeling, Tech. Rept., Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1990). [62] M.N. Larsen, Modeling start-up tasks using functional models, Final Rept., Project 4937-92-08-ED ISP DK, CRC JSP Ispra ( 1993). [63] J.E. Larsson, A knowledge-based control system concept, Monitoring, and Controlling Aseptic Processing, The Swedish Institute of Technology, Lund ( 1990). in: Workshop on Methods for Measuring, for Food Research, Lund Institute [ 641 J.E. Larsson, Model-based alarm analysis using MFM, in: Proceedings 3rd IFAC International Workshop on Artificial Intelligence in Real-Time Control, Sonoma, CA ( 1991). [ 651 J.E. Larsson, Model-based measurement validation using MFM, in: Proceedings IFAC Symposium on On-Line Fault Detection and Supervision in the Chemical Process Industries, Newark, DE ( 1992). [66] J.E. Larsson, Model-based fault diagnosis using MFM, in: Proceedings IFAC Symposium on On-Line Fault Detection and Supervision in the Chemical Process Industries, Newark, DE ( 1992). [67] J.E. Larsson, Knowledge-based methods for control systems, Doctor’s thesis, TFRT-1040, Department of Automatic Control, Lund Institute of Technology, Lund ( 1992). [68] J.E. Larsson, An MFM toolbox, Tech. Rept. TFRT-7493, Department of Automatic Control, Lund Institute of Technology, Lund ( 1992). [69] J.E. Larsson, Hyperfast algorithms Symposium on Computer-Aided Control System Design, Tucson for model-based diagnosis, (1994). in: Proceedings IEEUIFAC Joint [70] EP Lees, Process computer alarm and disturbance analysis: review of the state of the art, Comput. Chemical Eng. 7 (6) (1983). [ 7 I ] M. Lind, The use of flow models for design of plant operating procedures, in: IWGAVPPCI Specialists Meeting on Procedures and Systems for Assisting an Operator During Normal and Anomalous Nuclear Power Plant Operation, Garching (1979). J.E. L.ursson/Artificial Intelligence 80 (I 996) 29-93 91 ] 721 M. Lind, Human-machine interface for diagnosis based on multilevel flow modeling, in: Proceedings 2nd European Meeting an Cognitive Science Approaches to Process Control, Siena (1989). [73] M. lind, Representing goals and functions of complex systems-an introduction to multilevel flow lnstitute of Automatic Control Systems, Technical University of modseling, Tech. Rept. 90-D-38, Denmark, Lyngby ( 1990). [74] M. Lind, Abstractions version l&-descriptions of classes and their use, Tech. Rept. 90-D-380, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1990). 1751 M. lind, An architecture for real-time MFM diagnosis, Tech. Rept., Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1990). [76] M. .Lind, Abstractions for modeling of diagnostic strategies, in: Proceedings IEAC Workshop on Computer Software Integrating ABKBS Systems in Process Control, Bergen ( 1991). [ 771 M. Lind, On the modeling of diagnostic tasks, in: Proceedings Third European Conference on Cognitive Science Approaches to Process Control, Cardiff (1991). [78] M. Lind, A categorization of models and its application for the analysis of planning knowledge, in: Proceedings POST ANP ‘92 Conference on Human Cognitive and Cooperative Activities in Advanced Technological Systems, Kyoto (1992). [79] M. Lind, Functional architectures for systems management and control. Interactive planning for ISP DK, integrated supervision and control of complex plant, Final Rept., Project 4937-92-08-ED CEC JRC Ispra ( 1993). [SO] M. ILind, Modeling goals and functions of complex industrial plants, Appl. Arts Intell. 8 (1994) 259-283. 18 1 ] M. Lind, E. Harder, H. Jensen and S. Agger, Systembeskrivelse og pr%sentation i proceskontrol (System representation and presentation in process control), SIP project Tech. Rept., Institute of Automatic Conltrol Systems, Technical University of Denmark, Lyngby ( 1987). [ 821 R.S.H. Mah, Chemical Process Structures and Information Flows (Butterworths, Boston, MA, 1990). [83] R.S.H. Mah, G.M. Stanley and D.M. Downing, Reconciliation and rectification of process flow and inventory data, I & EC Prac. Des. Dev. 15 (1976) 175-183. [ 841 R.S.H. Mah and A.C. Tamhane, Detection of gross errors in process data, AIChE .I. 28 (1982) 828-830. [85] 0. Mnrifio, E Rechenmann and I? Uvietta, Multiple perspectives and classification mechanism in object-oriented representation, in: Proceedings ECAI-90, Stockholm ( 1990) 425-430. [ 861 M. Modarres and T. Cadman, A method of alarm system analysis for process plants, Comput. Chemical Eng. 10 (1986) 557-565. [87] K. Monta, J. Takizawa, Y. Hattori, T. Hayashi, N. Sato, J. Itoh, A. Sakuma and E. Yoshikawa, An intelligent man-machine system for BWR nuclear power plants, in: Proceedings AI91-Frontiers in Innovative Computing for the Nuclear Industry, Jackson, WY ( 1991). [88] R. Montellano, MI? Bemier, A. Cheruy and M. Farza, A knowledge-based system in modeling and control for biotechnological processes, in: Preprints ofthe 1990 IFAC World Conference, Tallinn ( 1990) 54-58. [89] R.L. Moore, L.B. Hawkinson, M. Levin, A.G. Hoffmann, B.L. Matthews and M.H. David, Expert system methodology for real-time process control, in: Proceedings IOth IFAC World Congress, Vol. 6, Munchen ( 1987) 274-28 1. [ 901 R.L. Moore, H. Rosenof and G. Stanley, Process control using a real-time expert system, in: Proceedings I Ith Triennial IFAC World Congress 1990, Tallinn ( 1991) 241-245. [ 9 11 J.L. Murdock and B. Hayes-Roth, Intelligent monitoring and control of semiconductor manufacturing equipment, IEEE Expert (December 199 1) 19-3 1. [92] H.T. Ng, Model-based, multiple-fault diagnosis of dynamic, continuous physical devices, IEEE Expert (December 1991) 38-43. [93] A. Nilsson, Qualitative model-based diagnosis-MIDAS in G2, Master’s Thesis TFRT-5443, Department of Automatic Control, Lund Institute of Technology, Lund ( 1991) . [94] A. &man, The interface substrate, Tech. Rept., Institute of Automatic Control Systems, Technical University of Denmark, Lyngby ( 1990). [95] A. IDsman, Graphical control environment (Grace), Ph.D. Thesis, Institute of Automatic Control Systems, Technical University of Denmark, Lyngby (1992). 92 J.E. Iarsson/Art@ial Intelligence 80 (1996) 29-93 [96] 0.0. Oyeleye, Qualitative modeling of continuous chemical processes and applications to fault diagnosis, Doctor’s Thesis, Massachusetts Institute of Technology, Cambridge, MA (1989). 1971 S. Padalkar, G. Karsai, C. Biegl, J. Sztipanovits, K. Okuda and N. Miyasaka, Real-time fault diagnosis, IEEE Expert (June 1991) 75-85. (98 1 H.M. Paynter, Analysis and Design of Engineering Systems (MIT Press, Cambridge, MA, 1961). [ 991 T.F. Petti, Using mathematical models in knowledge-based control systems, Ph.D. Dissertation, University of Delaware, Newark, DE (1992). [ 1001 T.F. Petti and P.S. Dhurjati, Object-based automated fault diagnosis, Chemical Eng. Commun. 102 (1991) 107-126. 1 101 ] TX Petti, J. Klein and P.S. Dhurjati, Diagnostic model processor: using deep knowledge for process fault diagnosis, AIChE I. 36 (1990) 565-57.5. [ 1021 J. Rasmussen, Information Processing and Human Machine Interaction: An Approach to Cognitive Engineering (North-Holland, New York, 1986). 1031 J. Rasmussen and L.P. Goodstein, Information technology and work, in: M. Helander, ed., Handbook of Human-Computer Interaction (North-Holland, New York, 1988). 1041 J. Rasmussen and M. Lind, Coping with complexity, Tech. Rept., Risg National Laboratory, Roskilde (1981). 1051 R. van den Ree, H. Koppelaar and E.J.H. Kerckhoffs, Knowledge management in process modeling. Engineering systems with intelligence: concepts, tools, and applications, in: Proceedings of the European Robotics and Intelligent Systems Conference (Kluwer Academic Publishers, Dordrecht, 199 1) 83-90. 1061 R. van den Ree, H. Koppelaar and E.J.H. Kerckhoffs, Proposal for process modeling, in: Proceedings IMACS MCTS ‘91, Modeling and Control of Technological Systems, LilJe (1991) 732-737. 1071 R. Reiter, A theory of diagnosis from first principles, Artif: Intell. 32 (1987) 57-96. 1081 J.M.A. Sassen, Design issues of human operator support systems, Doctor’s Thesis, Faculty of Mechanical Engineering and Marine Technology, Laboratory for Measurement and Control, Delft University of Technology, Delft ( 1993). [ 1091 J.M.A. Sassen and R.B.M. Jaspers, Designing real-time knowledge-based systems with PERFECT, in: Preprints of the 1992 IFAC/IFlP/IMACS International Symposium on Arttficial Intelligence in Real-?ime Confrol, Delft (1992) 625-630. [ 1 lo] J.M.A. Sassen, A. Ollongren and R.B.M. Jasper-s, Predicting and improving response-times of PERFECT models, in: Preprints of the 1992 IFAC/IFIP/IMACS Internan’onal Symposium on Artificial Intelligence in Real-Time Confrol, Delft (1992) 709-714. J.M.A. Sassen, PC. Riedijk and R.B.M. Jaspers, Using multilevel flow models for fault diagnosis of industrial processes, in: Proceedings 3rd European Conference on Cognitive Science Approaches to Process Control, Cardiff (1991) 207-216. [ Ill] [ 1121 E.H. Shortliffe, Computer Based Medical Consultations: MYCIN (North-Holland, New York, 1976). [ 1131 P Struss, Multiple representation of structure and function, in: J. Gero, ed., Expert Systems in Computer- Aided Design (North-Holland, New York, 1987). [ 1141 P Struss, Diagnosis as a process, in: W. Hamscher, L. Console and J. de Kleer, eds., Readings in Model-Based Diagnosis (Morgan Kaufmann, San Mateo, CA, 1992). [ 1151 P Struss, What’s in SD? Towards a theory of modeling for diagnosis, in: W. Hamscher, L. Console and J. de Kleer, eds., Readings in Model-Based Diagnosis (Morgan Kaufmann, San Mateo, CA, 1992). Ill61 G.J. Sussman and G.L. Steele, Constraints: a language for expressing almost-hierarchical descriptions, Arttf Intell. 14 ( 1980) I-40. [ 1171 V.J. Terpstra, H.B. Verbruggen and PM. Bruijn, Integrating information processing and knowledge representation in an object-oriented way, in: Proceedings Workshop on Computer Software Structures Integrating AUKBS Systems in Process Control, Bergen ( 1991) 19-29. [ 1181 V.J. Terpstra, H.B. Verbruggen, M.W. Hoogland and R.A.E. Ficke, A real-time, fuzzy, deep-knowledge based fault diagnosis system for a CSTR, in: Proceedings IFAC Symposium on On-Line Fault Detection and Supervision in the Chemical Process Industries, University of Delaware, Newark, DE ( 1992). [ 1191 J.U. Thoma, Introduction to Bond Graphs and Their Applications (Pergamon, New York, 1975). [ 1201 S. Tomita, K.S. Hwang, E. O’Shima and C. McGreavy, Automatic syntheziser of operating procedures for chemical plant by use of fragmentary knowledge, J. Chemical Eng. Japan 22 ( 1989) 364-372. J.E. Lursson/Arrificial Intelligence 80 (19%) 29-93 93 1211 S. Tomita, H. Yuhki, M. Mohri, T. Sawa and E. O’Shima, Development of batch process operating system, in: Proceedings 3rd World Congress of Chemical Engineering, Tokyo (1986). 1221 P. Torasso, and L. Console, Diagnostic Problem Solving (North Oxford Academic, Kogan Page Ltd., London, 1989). 1231 A. Viaa and B. Hayes-Roth, Knowledge-based real-time control: the use of abstraction to satisfy deadlines, in: Proceedings 3rd IFAC International Workshop on Artificial Intelligence in Real-Time Control, Sonoma, CA ( 199 1) . [ 1241 J.A. Walseth, Diagnostic reasoning in continuous systems, Ph.D. Thesis, ITK-rappolt 1993: 164-W, Divisic’n of Engineering Cybernetics, Norwegian Institute of Technology, Trondheim ( 1993). [ 125 ] J.A. Walseth, B.A. Foss, M. Lind and 0. CEgaard, Models for diagnosis-application to a fertilizer plant, in: Proceedings IFAC Symposium on On-Line Fault Detection and Supervision in the Chemical Process Industries, University of Delaware, Newark, DE ( 1992). [ 1261 D.S. Weld and J. de Kleer, eds., Readings in Qualitative Reasoning about Physical Systems (Morgan Kaufmann, San Mateo, CA, 1990). [ 1271 E.A. Woods, The hybrid phenomena theory, in: J. Mylopoulos and R. Reiter, eds., Proceedings IJCAI- 91, Sydney, NSW (Morgan Kaufmann, San Mateo, CA, 1991). [ 1281 E.A. Woods, The hybrid phenomena theory, Ph.D. Thesis, Institute. of Engineering Cybernetics, Techni’cal University of Norway, Trondheim (1993). [ 1291 E.A. Woods and J.G. Balchen, Structural estimation with the hybrid phenomena theory, in: PreprinB of the 3rd IFAC International Workshop on Artijicial Intelligence in Real-lime Conlrol, Sonoma, CA (199l:l. 