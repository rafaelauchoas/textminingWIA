Artificial Intelligence 246 (2017) 22–33Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintInfinitary equilibrium logic and strongly equivalent logic programs ✩Amelia Harrison a,∗a University of Texas, Austin, TX, USAb Universidad Politécnica de Madrid, Madrid, Spainc University of Málaga, Málaga, Spain, Vladimir Lifschitz a,∗, David Pearce b, Agustín Valverde ca r t i c l e i n f oa b s t r a c tArticle history:Received 20 January 2016Received in revised form 9 November 2016Accepted 8 February 2017Available online 21 February 2017Keywords:Answer set programmingStrong equivalenceLogic of here-and-thereStrong equivalence is an important concept in the theory of answer set programming. Informally speaking, two sets of rules are strongly equivalent if they have the same meaning in any context. Equilibrium logic was used to prove that sets of rules expressed as propositional formulas are strongly equivalent if and only if they are equivalent in the logic of here-and-there. We extend this line of work to formulas with infinitely long conjunctions and disjunctions, show that the infinitary logic of here-and-there characterizes strong equivalence of infinitary formulas, and give an axiomatization of that logic. This is useful because of the relationship between infinitary formulas and logic programs with local variables.© 2017 Elsevier B.V. All rights reserved.1. IntroductionAnswer set programming (ASP) is a form of declarative programming based on the stable model semantics of logic programs [1–7]. The concept of strong equivalence plays an important role in the theory of ASP. Informally speaking, two sets of rules are strongly equivalent if they have the same meaning in any context.Compare, for instance, the rulesq(X, Z ) ← q(X, Y ), q(Y , Z ), p(X), p(Y ), p(Z )and← q(X, Y ), q(Y , Z ), not q(X, Z ), p(X), p(Y ), p(Z ).(1)(2)Both rules express the idea that relation q is transitive on domain p. But in many contexts these rules do not have the same meaning: the effect of adding (1) to a logic program describing p and q is, in general, not the same as the effect of adding (2). The first rule allows us to derive new facts about q; adding it to a program turns relation q into its transitive closure. The second rule is a constraint; adding it weeds out the stable models in which q is not transitive.✩This paper is an invited revision of a paper which first appeared at the 13th International Conference on Logic Programming and Non-monotonic Reasoning.* Corresponding author.E-mail addresses: ameliaj@cs.utexas.edu (A. Harrison), vl@cs.utexas.edu (V. Lifschitz), david.pearce@upm.es (D. Pearce), a_valverde@ctima.uma.es(A. Valverde).http://dx.doi.org/10.1016/j.artint.2017.02.0020004-3702/© 2017 Elsevier B.V. All rights reserved.A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33The situation is different, however, if the program to which we add rules (1) and (2) contains the choice rule{q(X, Y )} ← p(X), p(Y )23(3)(“for any X , Y from p, decide arbitrarily whether to include q( X, Y ) in the stable model”). The set consisting of rules (1)and (3) is strongly equivalent to the set consisting of (2) and (3). Consequently, in the presence of choice rule (3), the program obtained by adding (1) has the same stable models as the program obtained by adding (2).According to Lifschitz et al. [8], strong equivalence is closely related to the 3-valued logic called the logic of here-and-there, which was introduced by Arend Heyting [9] long before the invention of computer programming.1 Consider the ground instances of rules (1)–(3):q(t1, t3) ← q(t1, t2), q(t2, t3), p(t1), p(t2), p(t3),← q(t1, t2), q(t2, t3), not q(t1, t3), p(t1), p(t2), p(t3),{q(t1, t2)} ← p(t1), p(t2)(t1, t2, t3 are arbitrary ground terms) and rewrite these ground rules as propositional combinations of ground atoms in the following way:q(t1, t2) ∧ q(t2, t3) ∧ p(t1) ∧ p(t2) ∧ p(t3) → q(t1, t3),¬(q(t1, t2) ∧ q(t2, t3) ∧ ¬q(t1, t3) ∧ p(t1) ∧ p(t2) ∧ p(t3)),p(t1) ∧ p(t2) → q(t1, t2) ∨ ¬q(t1, t2).(4)(5)(6)Formulas (4) and (5) are equivalent to each other in classical logic. But this fact cannot be established in the logic of here-and-there, which is weaker than classical logic. Formula (6) is a tautology; this fact cannot be established in the logic of here-and-there either. On the other hand, the equivalence between the set consisting of formulas of forms (4) and (6)and the set consisting of formulas of forms (5) and (6) can be proved even in this weaker logic. This example illustrates a general fact: two sets of rules written as propositional formulas are strongly equivalent if and only if they are equivalent in the logic of here-and-there [8, Theorem 1].In view of this relationship, proving strong equivalence can be often reduced to reasoning in a system of axioms and inference rules that is sound and complete with respect to the logic of here-and-there. Such formal systems have been known for a long time; see Section 5.1.The proof of the theorem relating strong equivalence to the logic of here-and-there is based on the characterization of stable models in terms of equilibrium logic [10]—a nonmonotonic counterpart of the logic of here-and-there.The statement of the theorem is not restricted to finite sets of formulas. This is important because a single rule with variables has infinitely many ground instances if we allow function symbols (or symbols for arbitrary integers) in ground terms. But some rules found in ASP programs can be represented by sets of propositional formulas only if we allow formulas themselves to be infinite; infinite sets of finite formulas do not suffice. Consider, for instance, the ruleq ← count{ X : p(X)} = 0.(7)The aggregate expression in the body means, informally speaking, that set p is empty. This rule can be thought of as an implication with an infinite conjunction in the body:(cid:2)t¬p(t) → q.Here t ranges over ground terms. The need for infinite conjunctions and disjunctions is common when rules contain local variables, such as X in the example above. Many ASP programs, in particular many programs in the input language of the grounder gringo and its subset, the ASP Core language [11], can be represented by formulas of this type [12].In many cases, first-order formulas can also be used to capture the meaning of ASP programs. For example, rule (7) can be represented using the first-order formula∀x¬p(x) → q.But possibilities of this approach are more limited. For instance, if count in (7) is replaced with sum, or 0 is replaced by a variable, the resulting rule cannot be represented using a first-order formula.In this paper, on the basis of the definition of a stable model for infinitary propositional formulas proposed by Miroslaw Truszczy ´nski [13], we extend to such formulas some definitions and theorems of the theory of strong equivalence and equilibrium logic. Our goals are1 The name “here-and-there” is appropriate in view of the fact that this logic can be described in terms of Kripke frames with two worlds, “Here” and “There.” It is known also as “the logic of present and future” or “the Smetanich logic.”24A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33(i) to define the infinitary version of the logic of here-and-there,(ii) to define its nonmonotonic counterpart—the infinitary version of equilibrium logic,(iii) to verify that stable models of infinitary formulas in the sense of Truszczy ´nski can be characterized in terms of infinitary equilibrium logic,(iv) to verify that infinitary propositional formulas are strongly equivalent to each other iff they are equivalent in the infinitary logic of here-and-there,(v) to find an axiomatization of that logic.We will see that achieving goals (i)–(iv) is straightforward, given the work done earlier for finite formulas. Goal (v) is more challenging.A preliminary version of this paper was presented at the 2015 Conference on Logic Programming and Nonmonotonic Reasoning [14]. The material in Sections 2.4 and 5.3 is new to this version.2. Stable models and equilibrium logic in the infinitary setting2.1. Review: infinitary formulasLet (cid:2) be a propositional signature, that is, a set of propositional atoms. The syntax of infinitary formulas defined by Truszczy ´nski [13] can be described as follows. For every nonnegative integer r, (infinitary propositional) formulas (over (cid:2)) of rank r are defined recursively, as follows:• every atom from (cid:2) is a formula of rank 0,• if H is a set of formulas, and r is the smallest nonnegative integer that is greater than the ranks of all elements of H, • if F and G are formulas, and r is the smallest nonnegative integer that is greater than the ranks of F and G, then then H∧and H∨are formulas of rank r,F → G is a formula of rank r.(cid:2)as F ∨ G. The symbols (cid:8) and ⊥ will be understood as abbreviations for ∅∧respectively; ¬F stands for F → ⊥, and F ↔ G stands for (F → G) ∧ (G → F ). These conventions allow us to view We will write {F , G}∧and ∅∨finite propositional formulas over (cid:2) as a special case of infinitary formulas.as F ∧ G, and {F , G}∨A set or family of formulas is bounded if the ranks of its members are bounded from above. For any bounded family (cid:3)(Fα)α∈ A of formulas, we denote the formula {Fα : α ∈ A}∧by α∈ A Fα , and similarly for disjunctions.(cid:3)For example, if p1, p2, . . . and q are atoms then each ¬pi is a formula of rank 1, ¬pi is a formula of rank 2, andi¬pi → q(8)iis a formula of rank 3.Subsets of a signature (cid:2) will be also called interpretations of (cid:2). The satisfaction relation between an interpretation and a formula is defined recursively, as follows:• For every atom p from (cid:2), I |= p if p ∈ I .• I |= H∧• I |= H∨• I |= F → G if I (cid:13)|= F or I |= G.if for every formula F in H, I |= F .if there is a formula F in H such that I |= F .A model of a set H of infinitary formulas is an interpretation that satisfies all formulas in H. A formula is tautological if it is satisfied by all interpretations.2.2. Review: stable models of infinitary formulasTruszczy ´nski’s definition of the reduct of an infinitary formula is a straightforward extension of the definition proposed is defined by Paolo Ferraris [15] for the finite case. The reduct F I of a formula F with respect to an interpretation Irecursively:• For every atom p from (cid:2), p I is p if p ∈ I , and ⊥ otherwise.• (H∧)I = {G I | G ∈ H}∧• (H∨)I = {G I | G ∈ H}∨• (G → H)I is G I → H I if I |= G → H , and ⊥ otherwise...Let us calculate, for instance, the reduct of formula (8) with respect to the interpretation {p1}. The reduct of ¬pi is ⊥ if i = 1 and ¬⊥ otherwise. Consequently the reduct of the antecedent of (8) is ⊥ ∧ ¬⊥, and the reduct of (8) is the tautologyA. Harrison et al. / Artificial Intelligence 246 (2017) 22–33⊥ ∧ ¬⊥ → ⊥.25(9)An interpretation I is a stable model of a set H of formulas if it is minimal with respect to set inclusion among the interpretations satisfying the reducts F I of all formulas F from H.For example, {p1} is a stable model of the set(cid:5)(cid:4)(cid:2)p1,i¬pi → q(10)because {p1} is minimal among the interpretations satisfying p1 and (9).2.3. Infinitary logic of here-and-thereAn HT-interpretation of (cid:2) is an ordered pair (cid:14)I, J (cid:15) of interpretations of (cid:2) such that I ⊆ J . Intuitively, the atoms in I are true “here” (“in the world H ”), and the atoms in J are true “there” (“in the world T ”).The satisfaction relation between an HT-interpretation and a formula is defined recursively, as follows:• For every atom p from (cid:2), (cid:14)I, J (cid:15) |= p if p ∈ I .• (cid:14)I, J (cid:15) |= H∧• (cid:14)I, J (cid:15) |= H∨• (cid:14)I, J (cid:15) |= F → G ifif for every formula F in H, (cid:14)I, J (cid:15) |= F .if there is a formula F in H such that (cid:14)I, J (cid:15) |= F .(i) (cid:14)I, J (cid:15) (cid:13)|= F or (cid:14)I, J (cid:15) |= G, and(ii)J |= F → G.An HT-model of a set H of infinitary formulas is an HT-interpretation that satisfies all formulas in H.Let us check, for instance, that the HT-interpretation (cid:14)∅, {p}(cid:15) satisfies the formula ¬¬p. According to the clause for implication, it is sufficient to check that (cid:14)∅, {p}(cid:15) (cid:13)|= ¬p and {p} |= ¬¬p. The second condition is obvious; to check the first, observe that {p} (cid:13)|= ¬p.The semantics of infinitary formulas defined above can be viewed as a 3-valued semantics as follows. About a formula Fwe say that it is forced in the world H of an HT-interpretation (cid:14)I, J (cid:15) if it is satisfied by (cid:14)I, J (cid:15); we will say that it is forced in the world T if it is satisfied by J . The set of worlds in which F is forced will be called the truth value of F with respect to (cid:14)I, J (cid:15). It is easy to check by induction on the rank that every formula that is forced in H is forced in T as well. Consequently, the only possible truth values of a formula are ∅, {T }, and {H, T }.2.4. Negative formulasAccording to Glivenko’s theorem [16], every tautology that begins with negation is intuitionistically valid. Mark Nadel [17] observed that this theorem does not generalize to infinitary propositional formulas. In this section we prove a general-ization of the Glivenko property for the infinitary logic of here-and-there.The class of negative formulas is defined recursively:and H∨• H∧• F → G is negative if G is negative.are negative if every formula in H is negative;It is clear, for instance, that (cid:8) are ⊥ negative: these symbols stand for ∅∧of the forms ¬F and F → ¬G are negative also.and ∅∨, respectively. It follows that all formulas Theorem 1. Every negative tautological formula is satisfied by all HT-interpretations.This fact shows, for instance, that the infinitary De Morgan laws¬¬(cid:2)α(cid:6)αFα ↔Fα ↔(cid:6)α(cid:2)α¬Fα,¬Fαare satisfied by all HT-interpretations.Theorem 1 is immediate from the following lemma.Lemma 1. If a formula F is negative then an HT-interpretation (cid:14)I, J (cid:15) satisfies F iff J satisfies F .26A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33Proof. The only-if part holds for all formulas, not only those that are negative. We will prove the if part by induction on the definition of negative formulas. The case of H∧is straightforward. Assume that J |= F → G and G is negative. We need to check thatand H∨(cid:14)I, J (cid:15) (cid:13)|= F or (cid:14)I, J (cid:15) |= G.If J (cid:13)|= F then (cid:14)I, J (cid:15) (cid:13)|= F . Otherwise J |= G and by the induction hypothesis it follows that (cid:14)I, J (cid:15) |= G.2.5. Equilibrium models of infinitary formulasAn HT-interpretation (cid:14)I, J (cid:15) is total if I = J . It is clear that a total HT-interpretation (cid:14) J , J (cid:15) satisfies F iff J satisfies F .An equilibrium model of a set H of infinitary formulas is a total HT-model (cid:14) J , J (cid:15) of H such that for every proper subset Iof J , (cid:14)I, J (cid:15) is not an HT-model of H.The following proposition is similar to Theorem 1 from [15].Theorem 2. An interpretation J is a stable model of a set H of infinitary formulas iff (cid:14) J , J (cid:15) is an equilibrium model of H.For example, (cid:14){p1}, {p1}(cid:15) is an equilibrium model of (10). Indeed, the interpretation {p1} satisfies both formulas from (10), and the HT-interpretation (cid:14)∅, {p1}(cid:15) does not satisfy the first of them.Lemma 2. For any infinitary formula F and any HT-interpretation (cid:14)I, J (cid:15),I |= F J iff (cid:14)I, J (cid:15) |= F .The lemma can be proved by strong induction on the rank of F .Proof of Theorem 2. It follows from the lemma that a total HT-interpretation (cid:14) J , J (cid:15) is an equilibrium model of H iff• J satisfies all formulas from H, and• there is no proper subset I of J such that I satisfies the reducts F J of all formulas F from H.These conditions express that J is a stable model of H.3. Strong equivalence in the infinitary setting3.1. Strong equivalence and HT-modelsAbout sets H1, H2 of infinitary formulas we say that they are strongly equivalent to each other if, for every set H of infinitary formulas, the sets H1 ∪ H and H2 ∪ H have the same stable models. About formulas F and G we say that they are strongly equivalent if the singleton sets {F } and {G} are strongly equivalent.A unary formula is an atom or a formula of the form p → q, where p and q are atoms. The following theorem is similar to the main theorem from [8].Theorem 3. For any sets H1, H2 of infinitary formulas, the following conditions are equivalent:(i) H1 is strongly equivalent to H2,(ii) for every set H of unary formulas, sets H1 ∪ H and H2 ∪ H have the same stable models;(iii) sets H1 and H2 have the same HT-models.For instance, the formulas F ∨ ¬F and ¬¬F → F , where F is an arbitrary infinitary formula, are strongly equivalent to each other. Indeed, an HT-interpretation does not satisfy F ∨ ¬F iff the truth value of F with respect to that interpretation is {T }, and the same holds for ¬¬F → F .Proof of Theorem 3. Clearly, (i) implies (ii). To see that (iii) implies (i), observe that if sets H1 and H2 have the same HT-models then H1 ∪ H and H2 ∪ H have the same HT-models, and consequently have the same equilibrium models. It follows by Theorem 2 that H1 ∪ H and H2 ∪ H have the same stable models.It remains to check that (ii) implies (iii). Suppose (cid:14)I, J (cid:15) is an HT-model of H1 but not an HT-model of H2. We will show how to find a set H of unary formulas such that (cid:14) J , J (cid:15) is an equilibrium model of one of the sets H1 ∪ H, H2 ∪ H but not the other. It will follow that the interpretation J is a stable model of one but not the other.A. Harrison et al. / Artificial Intelligence 246 (2017) 22–3327Case 1: (cid:14) J , J (cid:15) is not an HT-model of H2. Since (cid:14)I, J (cid:15) is an HT-model of H1, it is easy to see that (cid:14) J , J (cid:15) must be an HT-model of H1 as well. Then we can take H = J . Indeed, it is clear that (cid:14) J , J (cid:15) is an HT-model of H1 ∪ J . Furthermore, for any I that is a proper subset of J , (cid:14)I, J (cid:15) cannot be an HT-model of H1 ∪ J , so that (cid:14) J , J (cid:15) is an equilibrium model of H1 ∪ J . On the other hand, since (cid:14) J , J (cid:15) is not a HT-model of H2, it cannot be an HT-model of H2 ∪ J .Case 2: (cid:14) J , J (cid:15) is an HT-model of H2. Let H be the setI ∪ {p → q | p, q ∈ J \ I}.Since (cid:14) J , J (cid:15) satisfies every formula in H, it is an HT-model of H2 ∪ H. To see that it is an equilibrium model, consider any HT-model (cid:14)K , J (cid:15) of H2 ∪ H. Clearly, K must contain I . But it cannot be equal to I , since (cid:14)I, J (cid:15) is not an HT-model of H2. Thus I ⊂ K ⊂ J . Consider an atom p in K \ I and an atom q in J \ K . For these atoms, p → q belongs to H. But (cid:14)K , J (cid:15)does not satisfy this implication, contrary to the assumption that it is an HT-model of H2 ∪ H. We may conclude that (cid:14) J , J (cid:15)is an equilibrium model of H2 ∪ H. Finally, we will check that (cid:14) J , J (cid:15) is not an equilibrium model of H1 ∪ H. Consider the HT-model (cid:14)I, J (cid:15) of H1. Clearly, it is an HT-model of I . Moreover, it satisfies each implication p → q in H: (cid:14)I, J (cid:15) does not satisfy p because p /∈ I , and J satisfies q because q ∈ J . We see that (cid:14)I, J (cid:15) satisfies all formulas in H, so that it is an HT-model of H1 ∪ H. Furthermore, I is different from J since (cid:14) J , J (cid:15) is an HT-model of H2 and (cid:14)I, J (cid:15) is not. Consequently, I is a proper subset of J , and we may conclude that (cid:14) J , J (cid:15) is not an equilibrium model of H1 ∪ H.3.2. SubstitutionsA part of any formula can be replaced with a strongly equivalent formula without changing the set of stable models. For instance, it is easy to check that the formulas p ∧ ¬p and ⊥ are strongly equivalent to each other; it follows that the formulasF ∧ (q → (p ∧ ¬p))andF ∧ ¬q(11)have the same stable models. Corollary 1 below expresses a more general fact: several parts (even infinitely many) can be simultaneously replaced by strongly equivalent formulas. Its statement uses the following definitions, based on Harrison et al. [18].Let (cid:2) and (cid:2)(cid:19)be propositional signatures. A substitution (from (cid:2)(cid:19)to an infinitary formula over (cid:2), such that the range of φ is bounded. A substitution is extended from the atoms of (cid:2)(cid:19)arbitrary infinitary formulas over (cid:2)(cid:19)as follows:to (cid:2)) is a function φ that maps each atom from (cid:2)(cid:19)to then φ F = {φG | G ∈ H}∧• If F is H∧then φ F = {φG | G ∈ H}∨• If F is H∨• If F is G → H then φ F = φG → φ H ...Consider, for instance, a pair of formulas (11) of a signature (cid:2). Let (cid:2)(cid:19)be (cid:2) ∪ {r}, where r is a new atom. If φ is the function that maps r to p ∧ ¬p and all other atoms to themselves, and ψ is the function that maps r to ⊥ and all other atoms to themselves, then the formulas (11) are φ(F ∧ (q → r)) and ψ(F ∧ (q → r)).Corollary 1. Let φ and ψ be substitutions from (cid:2)(cid:19)F over (cid:2)(cid:19), φ F is strongly equivalent to ψ F , so that φ F and ψ F have the same stable models.to (cid:2) such that for all p ∈ (cid:2)(cid:19), φ p is strongly equivalent to ψ p. Then for any formula Proof. By Theorem 3, the assertion of the corollary can be stated as follows: if for all p ∈ (cid:2)(cid:19)the same HT-interpretations, then for any formula F over (cid:2)(cid:19)is easy to check by induction on the rank of F ., φ p and ψ p are satisfied by , φ F and ψ F are satisfied by the same HT-interpretations. This 4. Axiomatization of the infinitary logic of here-and-thereWe will first discuss the easier problem of axiomatizing classical infinitary logic [19], [18, Remark 4].4.1. Review: axioms and inference rules for classical infinitary logicThe derivable objects in the deductive system Care (infinitary) sequents—expressions of the form (cid:6) ⇒ F , where F is an infinitary formula, and (cid:6) is a finite set of infinitary formulas (“F under assumptions (cid:6)”). To simplify notation, we will write (cid:6) as a list. We will identify a sequent of the form ⇒ F with the formula F .∞The inference rules are the introduction and elimination rules for the propositional connectives and the weakening rule, as shown in Table 1.The axiom schemas of C∞areF ⇒ F28A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33Table 1Inference rules of Cdisjunction, H is a bounded set of formulas.∞. In the introduction and elimination rules for conjunction and (∧I) (cid:6) ⇒ H for all H ∈ H(cid:6) ⇒ H∧(H ∈ H)(∨I) (cid:6) ⇒ H(cid:6) ⇒ H∨(→I) (cid:6), F ⇒ G(cid:6) ⇒ F → G(W ) (cid:6) ⇒ F(cid:6), (cid:7) ⇒ Fand(cid:6)⎛⎝(cid:2)(cid:2)Fα ∧⎞⎠¬FαB⊆ Aα∈Bα∈ A\B(H ∈ H)(∧E) (cid:6) ⇒ H∧(cid:6) ⇒ H(∨E) (cid:6) ⇒ H∨(→E) (cid:6) ⇒ F (cid:7) ⇒ F → G(cid:7), H ⇒ F(cid:6), (cid:7) ⇒ F(cid:6), (cid:7) ⇒ Gfor all H ∈ H(12)where {Fα}α∈ A is a non-empty bounded family of formulas. The latter generalizes the law of the excluded middle: if A = {1}then (12) becomes(F 1 ∧ (cid:8)) ∨ ((cid:8) ∧ ¬F 1).The need for this generalization is discussed in Section 5.3. The set of theorems of Cincludes the axioms of the system and is closed under the application of its inference rules.∞is the smallest set of sequents that System Cis sound and complete:∞Theorem 4. An infinitary formula is a theorem of C∞iff it is tautological.The soundness part is straightforward. The proof of completeness, outlined in [18, Footnote 4], is analogous to the proof of completeness for the finite case due to László Kalmár [20]. It can be presented using the following notation: for any interpretation I , M I stands for the setI ∪ {¬p | p ∈ (cid:2) \ I}.∞It is easy to check by induction that for any formula F , Mtheorem of Cthe other hand, the disjunction of the formulas M{Fα}α∈ A to be the family of all atoms. It follows that every tautological formula is a theorem.∧→ ¬F is a Ifor any interpretation I . On ∧I over all interpretations I is an instance of axioms schema (12): take otherwise. In particular, if F is tautological then M→ F is a theorem of C→ F is a theorem of Cif I satisfies F , and M∧I∧I∞∞4.2. Axioms and inference rules for the infinitary logic of here-and-thereThe infinitary deductive system HT∞is obtained from C∞by replacing the generalized law of the excluded middle (12)with two axiom schemas:F ∨ (F → G) ∨ ¬Gand(cid:2)(cid:6)F →(cid:6)(cid:2)Fαα∈ AF ∈Hα(Fα )α∈ Aα∈ A(13)(14)for every non-empty family (Hα)α∈ A of sets of formulas such that its union is bounded; the disjunction in the consequent of (14) extends over all elements (Fα)α∈ A of the Cartesian product of the family (Hα)α∈ A . Axiom schema (14) generalizes one direction of the distributivity of conjunction over disjunction to infinitary formulas: if A = {1, 2}, H1 = {F 1, G 1}, and H2 = {F 2, G 2}, then (14) turns into(F 1 ∨ G 1) ∧ (F 2 ∨ G 2) → (F 1 ∧ F 2) ∨ (F 1 ∧ G 2) ∨ (G 1 ∧ F 2) ∨ (G 1 ∧ G 2).We say that formulas F and G are equivalent in HTThe following theorem expresses the soundness and completeness of HTif F ↔ G is a theorem of HT∞.∞∞.Theorem 5. An infinitary formula is a theorem of HT∞iff it is satisfied by all HT-interpretations.The proof is given in Section 4.3.From Theorems 3 and 5 we conclude:A. Harrison et al. / Artificial Intelligence 246 (2017) 22–3329Corollary 2. Bounded sets H1, H2 of infinitary formulas are strongly equivalent iff H∧1 is equivalent to H∧2 in HT∞.4.3. Proof of Theorem 5The proof applies the idea of the proof of Theorem 4 above to the 3-valued case. Soundness is straightforward. The proof of completeness uses the following construction, due to Pedro Cabalar and Paolo Ferraris [21, Section 5]: for any HT-interpretation (cid:14)I, J (cid:15), M I J stands forI ∪ {¬¬p | p ∈ J } ∪ {¬p | p ∈ (cid:2) \ J } ∪ {p → q | p, q ∈ J \ I}.By v I J (F ) we denote the truth value of F with respect to (cid:14)I, J (cid:15) (see Section 2.3). We will omit the subscripts I, J in M I Jand v I J (F ) when it is clear which HT-interpretation we refer to.Lemma 3. For any infinitary formula F and HT-interpretation (cid:14)I, J (cid:15),∧ ⇒ ¬F is a theorem of HT(i) if v(F ) = ∅ then M(ii) if v(F ) = {T } then for every atom q in J \ I , M(iii) if v(F ) = {H, T } then M∧ ⇒ F is a theorem of HT;∞.∞∧ ⇒ F ↔ q is a theorem of HT∞;Proof. We will prove the claim by strong induction on the rank of F . We assume the claim holds for all formulas with rank less than n and show that it holds for a formula F of rank n. We consider cases corresponding to the different possible forms of F and truth values v(F ). Note that if v(F ) is {T } then the set J \ I is non-empty. Indeed, if I = J then the truth value of any formula is either ∅ or {H, T }.Case 1: F is an atom.Case 1.1: v(F ) = ∅. Then F ∈ (cid:2) \ J , and ¬F ∈ M.Case 1.2: v(F ) = {T }. Then F ∈ J \ I , and for every atom q in J \ I , the implications F → q and q → F are in M.∞∧ ⇒ H∧∧ ⇒ H∧∧ ⇒ H∧1↔ q and M∧ ⇒ ¬(H∧).∧ ⇒ H∧ ↔ q.∧ ⇒ ¬G is a . From this we can derive M2 . Then we can derive M∧ ⇒ G ↔ q is a theorem for every G in H1, and M. The induction hypothesis is then applicable to all formulas in H.. The induction hypothesis is then applicable to all formulas in H.Case 1.3: v(F ) = {H, T }. Then F ∈ M.Case 2: F is of the form H∧Case 2.1: v(F ) = ∅. Then there exists a formula G in H such that v(G) is ∅. By the induction hypothesis, Mtheorem of HTCase 2.2: v(F ) = {T }. Let H1 be the set of all formulas in H with truth value {T }, and H2 be the set of all formulas in Hwith truth value {H, T }. It is clear that H1 ∪ H2 = H and that H1 is non-empty. Consider an arbitrary element q of J \ I . ∧ ⇒ G is a theorem for every G in H2. By the induction hypothesis MFrom these we can derive MCase 2.3: v(F ) = {H, T }. Then for each element G in H, v(G) = {H, T }, and by the induction hypothesis Mtheorem. From these sequents we can derive M.Case 3: F is of the form H∨Case 3.1: v(F ) = ∅. Then for each element G in H, v(G) = ∅, and by the induction hypothesis Mthese sequents we can derive MCase 3.2: v(F ) = {T }. Let H1 be the set of all formulas in H with truth value {T }, and H2 be the set of all formulas in Hwith truth value ∅. It is clear that H1 ∪ H2 = H and that H1 is non-empty. Consider an arbitrary element q of J \ I . By the ∧ ⇒ ¬G is a theorem for every G in H2. From induction hypothesis Mthese we can derive MCase 3.3: v(F ) = {H, T }. Then there exists a formula G in H such that v(G) is {H, T }. By the induction hypothesis, Mis a theorem. From this we can derive MCase 4: F is of the form F 1 → F 2. The induction hypothesis is then applicable to F 1 and F 2.Case 4.1: v(F ) = ∅. Then v(F 1) is non-empty and v(F 2) is empty.Case 4.1.1: v(F 1) = {T }. By the induction hypothesis Man atom q in J \ I . By the construction of M, we know that ¬¬q is an element of M. From the sequents M∧ ⇒ ¬(F 1 → F 2).∧ ⇒ ¬¬q, we can derive MMCase 4.1.2: v(F 1) = {H, T }. By the induction hypothesis, both Mwe can derive M∧ ⇒ G ↔ q is a theorem for every G in H1, and M∧ ⇒ ¬(H∨∧ ⇒ H∨1∧ ⇒ F 1 ↔ q for any q in J \ I . Consider ∧ ⇒ F 1 ↔ q, ∧ ⇒ ¬F 2 are theorems. From these sequents ∧ ⇒ ¬F 2 is a theorem, as is M∧ ⇒ ¬G is a theorem. From 2 ). Then we can derive M∧ ⇒ ¬F 2, and M∧ ⇒ F 1 and M∧ ⇒ H∨ ↔ q.∧ ⇒ G is a ∧ ⇒ ¬(F 1 → F 2).∧ ⇒ ¬(H∨).↔ q and M∧ ⇒ H∨∧ ⇒ G.30A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33Case 4.2: v(F ) = {T }. Then v(F 1) = {H, T } and v(F 2) = {T }. By the induction hypothesis Mq ∈ J \ I , and M∧ ⇒ F 1 is a theorem as well. From these two sequents we can derive M∧ ⇒ (F 1 → F 2) ↔ q.∧ ⇒ F 2 ↔ q is a theorem for any Case 4.3: v(F ) = {H, T }.∧ ⇒ F 1 → F 2.Case 4.3.1: v(F 1) = ∅. Then by the induction hypothesis M∧ ⇒ F 1 → F 2.Case 4.3.2: v(F 2) = {H, T }. Then by the induction hypothesis MCase 4.3.3: v(F 1) (cid:13)= ∅ and v(F 2) (cid:13)= {H, T }. Since v(F ) is {H, T }, v(F 1) is different from {H, T } and therefore must be equal to {T }. It follows that v(F 2) is different from ∅, and therefore must be {T } also. Consider an element q in J \ I . By the ∧ ⇒ F 2 ↔ q are theorems. From these two sequents we can derive induction hypothesis both MM∧ ⇒ ¬F 1 is a theorem. From this we can derive M∧ ⇒ F 2 is a theorem. From this we can derive M∧ ⇒ F 1 ↔ q and M∧ ⇒ F 1 → F 2.Note that in the proof of the lemma we did not refer to axiom schemas (13) and (14); the assertion of the lemma would hold even if those axioms were removed from HT∞.Lemma 4. The disjunction of the formulas M∧I J over all HT-interpretations (cid:14)I, J (cid:15) is a theorem of HT∞.Proof. Let Q stand for the set of disjunctionsp ∨ (p → q) ∨ ¬q,¬p ∨ ¬¬p(15)(16)for all p, q from (cid:2). Formulas of the form (16) are instances of the “weak law of excluded middle”, and it is easy to verify that they (like formulas (15)) are theorems of HT. Let (HD )D∈Q be the following family of sets:∞HD = {p, p → q, ¬q}HD = {¬p, ¬¬p}if D = p ∨ (p → q) ∨ ¬q;if D = ¬p ∨ ¬¬p.Then the formula(cid:2)(cid:6)S →(cid:6)(cid:2)S DD∈QS∈HD(S D )D∈QD∈Q(where the disjunction in the consequent extends over all elements (S D )D∈Q of the Cartesian product of the family (HD )D∈Q ) is an instance of axiom schema (14). Since the antecedent of this implication is the conjunction of all formulas . It follows that the consequent is a theorem as well. To complete the proof it is sufficient to in Q , it is a theorem of HTshow that for every disjunctive term∞(cid:2)D∈QS Dof the consequent there exists an HT-interpretation (cid:14)I, J (cid:15) such that the sequent(cid:2)D∈QS D ⇒ M∧I Jis a theorem.(17)(18)Consider one of the conjunctions (17), and let C be set of its conjunctive terms. The elements of C are formulas of the formsp, ¬p, ¬¬p, p → q.If C contains both a formula and its negation then (18) is a theorem for every (cid:14)I, J (cid:15). Otherwise, let I denote the set of all atoms in C , and J denote the set of all atoms p such that ¬¬p is in C . Let us check that I ⊆ J . Assume p ∈ I so that p ∈ C . Since C is consistent, it does not contain ¬p, and since it contains a term from each disjunction (16), it contains ¬¬p. So (cid:14)I, J (cid:15) is an HT-interpretation.We will show that every formula from M I J belongs to C . By the choice of I , I ⊆ C . By the choice of J , {¬¬p | p ∈ J } ⊆ C . Consequently {¬p | p ∈ (cid:2) \ J } ⊆ C , because C contains one term from each disjunction (16). Finally, we need to check that {p → q | p, q ∈ J \ I} ⊆ C . Consider a pair of atoms p, q that occur in J but not in I . By the choice of I , p is not in C , and by the choice of J , ¬q is not in C . Since C contains one term from each of the disjunctions (15) and contains neither p nor ¬q, C must contain p → q.A. Harrison et al. / Artificial Intelligence 246 (2017) 22–3331Proof of completeness. Let F be an infinitary formula over signature (cid:2) that is satisfied by all HT-interpretations of (cid:2). By Lemma 3(iii), M I J ⇒ F is a theorem of HTfor all HT-interpretations (cid:14)I, J (cid:15). By Lemma 4, it follows that F is a theorem also.∞It is clear from the proof that HTwill remain complete if we require that formulas F and G in axiom schema (13) be ∞literals and that the sets Hi in axiom schema (14) be finite.5. Related work5.1. Axiomatizations of the logic of here-and-thereThe first axiomatization of the logic of here-and-there was given without proof by Jan Łukasiewicz [22]: add the axiom schema(¬F → G) → (((G → F ) → G) → G))(19)to propositional intuitionistic logic. This axiomatization was rediscovered and proved complete by Ivo Thomas [23]. (In the (cid:19)(cid:19)2.) The simpler axiom schema (13) was proposed by Toshio Umezawa [24], and the notation of that paper, schema (19) is 3completeness of the system obtained by adding that schema to intuitionistic logic was proved by Tsutomu Hosoi [25].5.2. Early work on infinitary formulasTruszczy ´nski’s definition of an infinitary propositional formula reviewed in Section 2.1 differs from the syntax of infinitary formulas defined by Dana Scott and Alfred Tarski [19] and Carol Karp [26] in two ways. On the one hand, it is more restrictive, because it requires the ranks of formulas to be finite, and forming the conjunction or disjunction of a set of formulas is allowed only if the set is bounded. On the other hand, it does not restrict the cardinality of this set. Let ξbe the cardinality of the underlying infinite signature. Then we can form 2ξ formulas of rank 1. A conjunction of rank 2 can have up to 2ξ conjunctive terms, so that we can form up to 22ξformulas of rank 2. And so forth. In the infinitary languages introduced in earlier publications, the set of conjunctive and disjunctive terms was required to be countable or, more generally, restricted by a fixed cardinal number.Interest in countable conjunctions and disjunctions in research on infinitary logic is related to the connection between that work and the use of algebraic methods in logic [27]. Any Boolean algebra can be viewed as the set of truth values that can be assigned to propositional atoms. The truth value of a finite formula is calculated by interpreting conjunction, disjunction, and negation as meet, join, and complement. Deductive systems of classical propositional logic are sound with respect to this semantics in the sense that for any Boolean algebra and any assignment of truth values from that algebra to atoms, all provable formulas get the value 1. Algebraic semantics can be extended to propositional formulas with countable conjunctions and disjunctions if the Boolean algebras are required to be σ -complete (every countable subset has a meet and a join). Thus restricting the cardinality of the set of terms in conjunctions and disjunctions is parallel to the completeness conditions studied in the theory of Boolean algebras.In applications of infinitary formulas to the theory of ASP uncountable conjunctions play an essential role. The formula τ E, proposed in [12, Section 4.7] as the representation of an aggregate expression E, is generally an uncountable conjunc-tion.5.3. Independence of the generalized excluded middleReplacing the axiom schema (12) by the law of the excluded middle F ∨ ¬F would make C∞incomplete. This fact is stated without proof by Scott and Tarski [19] (for a Hilbert-style formulation), and it can be proved as follows.Consider the instance of (12) in which {Fα}α∈ A is a sequence of distinct atoms:¬pi.(20)(cid:12)(cid:11)(cid:6)(cid:2)pi ∧(cid:2)i /∈BB⊆Z+i∈BLet L be the Boolean algebra of Lebesgue measurable subsets of [0, 1), and let M be the σ -ideal of elements of measure 0. The quotient algebra L/M is complete [28, Corollary 31.1] and consequently provides a semantics for infinitary propositional formulas. The modified system is sound for this semantics. For every positive integer i, let Xi be the set of real numbers xfrom [0, 1) such that the i-th digit in the binary representation of x is 1. Choose the equivalence class of Xi in the quotient set L/M as the truth value assigned to the atom pi . Then the truth value of each disjunctive term of (20) is 0. Indeed, for every set B of positive integers, the set(cid:13)i∈BXi ∩(cid:13)([0, 1) \ Xi)i /∈B32A. Harrison et al. / Artificial Intelligence 246 (2017) 22–33is a singleton (its only element is the number x such that the i-th digit in its binary representation is 1 iff i ∈ B), and singletons are sets of measure 0. Consequently the truth value of (20) is 0 as well. It follows that this formula is not a theorem.Independence problems of this kind are discussed also by Carol Karp [26].5.4. Infinitary deductive systemsAll axioms and inference rules of HTare included in the “extended system of natural deduction” for infinitary for-mulas [18]. From the results presented above it is clear that the other axioms of the extended system are redundant. The infinitary De Morgan law∞(cid:2)¬(cid:6)F →¬F ,F ∈HF ∈His one of these redundant axioms. The fact that this formula is a theorem of HTthe general completeness theorem, in the preliminary version of this article [14, Section 8].∞is proved directly, without a reference to ∞∞In the infinitary deductive systems Cthe set of theorems is defined in terms of closure under a set of inference rules; there is no definition of a proof. Accordingly, to justify the claim that a certain formula is a theorem, we need to show that it belongs to every set that includes all axioms and is closed under the inference rules. Such arguments can be represented in a concise form, without mentioning closure under inference rules explicitly [18, Section 3].and HTIt is possible to reformulate the definition of a theorem in an infinitary system in terms of proofs, but such proofs will consist generally of infinitely many formulas, since some inference rules have infinitely many premises.In formalized mathematics, proofs are useful in that they are finite syntactic objects that can establish the validity of assertions about infinite domains. “Infinite proofs”, on the other hand, do not have this property [29].The note quoted above defines a correspondence between the validity of infinitary formulas in the logic of here-and-there and the provability of formulas in some finite deductive systems. On the basis of that correspondence, finite proofs can be sometimes used to justify the validity of infinitary formulas.6. ConclusionUnder the stable model semantics, two sets of propositional formulas are strongly equivalent if and only if they are equivalent in the logic of here-and-there. The proof of this theorem uses equilibrium logic. In this paper, we extended equilibrium logic to infinitary formulas; we defined an infinitary counterpart to the logic of here-and-there and introduced an axiomatization, HT, of that system; finally, we showed that bounded sets of infinitary propositional formulas are strongly equivalent if and only if they are equivalent in HT∞∞.Gebser et al. [12, Section 5] used strong equivalence of infinitary formulas to state several useful properties of aggregate expressions. We expect that this concept will find other applications to the theory of answer set programming.AcknowledgementsThanks to the anonymous referees for helpful comments. Thanks also to Pedro Cabalar, Yuliya Lierler, Victor Marek, Dhananjay Raju, John Schlipf, and Mirek Truszczy ´nski for useful discussions related to the topic of this paper. The first two authors were partially supported by the National Science Foundation under Grant IIS-1422455. The third author was partially supported by the projects TIN2013-42149-P and UPM RP151046021.References[1] M. Gelfond, V. Lifschitz, The stable model semantics for logic programming, in: R. Kowalski, K. Bowen (Eds.), Proceedings of International Logic Pro-gramming Conference and Symposium, MIT Press, 1988, pp. 1070–1080.[2] M. Gelfond, V. Lifschitz, Classical negation in logic programs and disjunctive databases, New Gener. Comput. 9 (1991) 365–385.[3] V. Marek, M. Truszcz ´nski, Stable models and an alternative logic programming paradigm, in: The Logic Programming Paradigm: a 25-Year Perspective, Springer-Verlag, 1999, pp. 375–398.[4] I. Niemelä, Logic programs with stable model semantics as a constraint programming paradigm, Ann. Math. Artif. Intell. 25 (1999) 241–273.[5] M. Gelfond, Answer sets, in: F. van Harmelen, V. Lifschitz, B. Porter (Eds.), Handbook of Knowledge Representation, Elsevier, 2008, pp. 285–316.[6] G. Brewka, T. Eiter, M. Truszcz ´nski, Answer set programming at a glance, Commun. ACM 54 (12) (2011) 92–103.[7] AI Mag. 37 (3) (2016).[8] V. Lifschitz, D. Pearce, A. Valverde, Strongly equivalent logic programs, ACM Trans. Comput. Log. 2 (2001) 526–541.[9] A. Heyting, Die formalen Regeln der intuitionistischen Logik, Sitzungsber. Preuss. Akad. Wiss. Phys.-Math. Kl. (1930) 42–56.[10] D. Pearce, A new logical characterization of stable models and answer sets, in: J. Dix, L. Pereira, T. Przymusinski (Eds.), Non-Monotonic Extensions of Logic Programming, in: Lecture Notes in Artificial Intelligence, vol. 1216, Springer, 1997, pp. 57–70.[11] F. Calimeri, W. Faber, M. Gebser, G. Ianni, R. Kaminski, T. Krennwallner, N. Leone, F. Ricca, T. Schaub, ASP-Core-2: input language format, Available at https://www.mat.unical.it/aspcomp2013/files/ASP-CORE-2.03b.pdf, 2012.A. Harrison et al. / Artificial Intelligence 246 (2017) 22–3333[12] M. Gebser, A. Harrison, R. Kaminski, V. Lifschitz, T. Schaub, Abstract Gringo, Theory Pract. Log. Program. 15 (2015) 449–463.[13] M. Truszcz ´nski, Connecting first-order ASP and the logic FO(ID) through reducts, in: E. Erdem, J. Lee, Y. Lierler, D. Pearce (Eds.), Correct Reasoning: Essays on Logic-Based AI in Honor of Vladimir Lifschitz, Springer, 2012, pp. 543–559.[14] A. Harrison, V. Lifschitz, D. Pearce, A. Valverde, Infinitary equilibrium logic and strong equivalence, in: Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning, LPNMR, 2015, pp. 398–410.[15] P. Ferraris, Answer sets for propositional theories, in: Proceedings of International Conference on Logic Programming and Nonmonotonic Reasoning, LPNMR, 2005, pp. 119–131.[16] V. Glivenko, Sur quelques points de la logique de M. Brouwer, Acad. Roy. Belg. Bull. Cl. Sci. (5) 15 (1929) 183–188.[17] M. Nadel, Infinitary intuitionistic logic from a classical point of view, Ann. Math. Log. (1978) 159–191.[18] A. Harrison, V. Lifschitz, M. Truszcz ´nski, On equivalence of infinitary formulas under the stable model semantics, Theory Pract. Log. Program. 15 (1) (2015) 18–34.137–144.[19] D. Scott, A. Tarski, The sentential calculus with infinitely long expressions, Colloq. Math. 6 (1958) 165–170.[20] L. Kalmár, Zurückführung des Entscheidungsproblems auf den Fall von Formeln mit einer einzigen, binären, Funktionsvariablen, Compos. Math. 4 (1936) [21] P. Cabalar, P. Ferraris, Propositional theories are strongly equivalent to logic programs, Theory Pract. Log. Program. 7 (2007).[22] J. Łukasiewicz, Die Logik und das Grundlagenproblem, in: Les Entretiens de Zürich sue les Fondements et la méthode des sciences mathématiques 1938, Leemann, Zürich, 1941, pp. 82–100.[23] I. Thomas, Finite limitations on Dummett’s LC, Notre Dame J. Form. Log. III (3) (1962) 170–174.[24] T. Umezawa, On intermediate many-valued logics, J. Math. Soc. Jpn. 11 (2) (1959) 116–128.[25] T. Hosoi, The axiomatization of the intermediate propositional systems Sn of Gödel, J. Fac. Sci., Univ. Tokyo 13 (1966) 183–187.[26] C.R. Karp, Languages with Expressions of Infinite Length, North-Holland, Amsterdam, 1964.[27] H. Rasiowa, R. Sikorski, The Mathematics of Metamathematics, PWN, Warsaw, 1963.[28] S. Givant, P. Halmos, Introduction to Boolean Algebras, Springer, 2009.[29] A. Harrison, V. Lifschitz, J. Michael, Proving infinitary formulas, Theory Pract. Log. Program. 16 (2016) 787–799.