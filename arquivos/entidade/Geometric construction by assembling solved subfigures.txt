Artificial Intelligence 99 (1998) 73-119 Artificial Intelligence Geometric construction by assembling solved subfigures ’ Jean-Fraqois Dufourd *, Pascal Mathis *, Pascal Schreck 3 Laboratoire ties Sciences de l’ltnage, de l’lnformatique et de la T&ditection (L.S.i.I.T, URA CNRS 1871), Universite Luuis Pasteur, 7, rue Rene’ Descartes, 67084 Strasbourg, France Received June 1996 Abstract Among thle expected contributions of Artificial Intelligence to Computer-Aided Design is the possibility of constructing a geometric object, the description of which is given by a system of topological and dimensional constraints. This paper presents the theoretical foundations of an original approach to formal geometric construction of rigid bodies in the Euclidian plane, based on invariance under displacements and relaxation of positional constraints. This general idea allows to explain in greater detail several methods proposed in the literature. One of the advantages of this approach is its ability to efficiently generalize and join together different methods for local solving. The paper also describes the main features of a powerful and extensible operational prototype based on these ideas, which can be viewed as a simple multi-agent system with a blackboard. Finally, some significant examples solved by this prototype are presented. @ 1998 Elsevier Science B.V. Keywords: Geometric solving; Assembling formal construction; System of geometric constraints; Computer-aided of figures; Multi-agent system; Blackboard design; Local 1. Introduction Following Intelligence * Corresponding ’ This research the seminal work of Sutherland to Computer-Aided Design [ 521, an expected contribution is the possibility (CAD) of building of Artificial a 3D author. Email: dufourdadpt-info.u-strasbg.fr. is supported by the GDR-PRC de Programmation and GDR-PRC Algorithmique. Mod2les et Infographie (French CNRS) * Email: mathis@dpt-info.u-strasbg.fr. 3 Email: schreck@dpt-info.u-strasbg.fr. 0004-3702/98r’$19.00 PlISOOO4-3’102(97)00070-2 @ 1998 Elsevier Science B.V. All rights reserved. 14 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 for its topology and rigid object defined by a system of geometric constraints [45] embedding. The topological constraints and adjacency tools hide the setting of these constraints express of the object, namely incidence relationships its vertices, edges and faces. Usually, the components drawing composition of the object. The embedding of the object. The designer gives them as a system of dimensions constraining ponents of a sketch. The problem constraints. When between in CAD, functional de- the form and the metrics the com- is then to build components which satisfy all these into real number equations, we come upon the so-called constraints translating express during them or transcendental solving a system of polynomial ally been approached using graphs Newton-Raphson and drawbacks of such an approach have often been described [ 28,44,54]. in a purely numerical way, sometimes the method initial [ 35,391 or the homotopy-based method into subsystems. That to split system the problem of equations. Such a question has gener- often the after preprocessing, is the case with [ 301. Advantages in the literature, e.g. in interpretation As stated in [ 1,2], to tackle this question it seems to us interesting in two phases. The first phase is a solving process yielding a formal construction plan, and the second one is a numerical several numerical of approximation the formal expression of a geometric construction corresponding Formally of the construction plan. This way, the possibility of producing errors and failures can be fairly diagnosed. Moreover, the solutions are not propagated is preserved, problems of convergence is a powerful means of rendering object generic. are eliminated, solving systems of geometric constraints as encountered constructions [ 11,18,46-481. to the ones encountered In CAI, one wants area and studied in the plane has many similarities in education So, dimensioning in a sketch graphi- in high-school mathematics. to obtain all the solutions in the Instruction with solving geometric Computer-Aided cally sets a constraint The aims, however, are quite different. and discuss general case the most plausible (CAI) system similar solution. them, even in degenerate cases, while, in CAD, one expects to obtain Formal solving appears in some CAD knowledge-based in common with geometric mechanical systems, e.g. [ 1,8,16]. Such provers based efficient methods like constraint graph decomposition [22]. Moreover, systems have several aspects on axiomatics [ 27,4 1 ] or progressive a two-phase and cannot be applied easily figure rigid$cation treatment. But these methods are restricted to any geometric universe. [ 50,5 1,54,55] could be reconsidered using types of constraints to specific This question has also been solving [ 15,561. Restrictions tackled by computer algebra systems is quite similar For to automatic proving based on formal or size of the solved criticisms of this approach. algebra as well as with solving, one must work with systems of equations whose variables are the formal such systems, polynomial reasoning systems and the tedious calculation But surely, numerical coordinates involved are common is that both with computer of the geometric objects rather than the geometric objects the main drawback on the generality themselves. [ 19,20,32]. In this paper, we present a general constraints as encountered in CAD formal to specify framework rigid body. We propose for systems of geometric an original J.-E Dufourd et al. /Artijicial Intelligence 99 (1998) 73-l I9 75 in in [7], literature [7,30,41,50,51], under displacements and proposed invariance for a solving process based on specifies the methodological in particular by formalizing approach solving of parts. This framework the systems and computed metric constraints, its use of two used ilar to ours. There are however considerable the content of the two levels, and the numerical over, besides proach ical tion. local foundation in the assembling of sub- using what we call a border. The approach looks sim- concepts, than formal character. More- of our ap- including ones based on numer- It has great solving power and wide applica- local and global, in its underlying to encompass different methods, differences rather for common problems, one of the advantages levels of construction, and computer its efficiency is its ability iterations algebra. Next, we present the current implementation of our framework, a prototype which works by using assembling employing differ- in the plane using and local solving tactics. We describe ent strateg.ies and two phases, one formal and one interpretative, methods. These methods are two knowledge-based and use method is closely of methods, [ 131. Finally, related we give several examples of significant problems which have been solved by the proto- on the general characteristics rather than on technical details. We show that our CAD prototype [ 35,391. We focus here on assembling, systems and the Newton-Raphson systems with a blackboard Intelligence multi-agent to .4rtificial type. The structure of the paper is as follows. Section 2 gives an example of an easy to universe solved using our method. Section 3 outlines and systems of constraints. understand problem the formal framework for the geometric the formal solving method and the assembling, of workable to make this framework effective. Sec- the prototype. Section 7 shows on three examples how they can tion 6 briejly presents be used. Section 8 compares our propositions with other works, and Section 9 concludes our discussion. strategies with local solving methods together. Section 5 presents Section 4 defines indications some 2. An example of geometric construction with assembling Our method allows us to build step by step geometric constructions in the Euclidian solving parts of the system of constraints and assembling the principles of this approach in the example them by illustrated by plane by locally displacements. We examine the constraint system of Fig. 1. Fig. 1 represents a dimensional part where characteristic points, curves and numerical values are respectively named a, . . . , g, r and kl , . . . , k5, (~1, . . . ~y3, in order to specify constraints. double-arrow differs according In the example, kl corresponds lines. to a constraint of distance between points a and b, and k5 to a constraint of distance between point e and oriented In the technical drawing area, the meaning of a dimensional to the positions of the joined line fg. Fig. 1 specifies all the constraints imposed on our sketch, point b. Some constraints constraints of tangency, are drawn in the figure by dimensions, are implicit. The question of transforming the hexagon cdefga with like into explicit and others, them 16 J.-E Dufourd et al. /ArtQicial Intelligence 99 (1998) 73-119 Fig. 1. A constraint system. the scope of this paper. We thus consider in the following that we constraints have a problem is beyond textually set by: distance distance distance distance distance distance from point LL to point b = kl from point a to point g = k2 from point c to point d = k3 from point d to point e = k4 from point e to oriented from point f to point g = k6 line dc to oriented line fe to oriented line ba to oriented angle from oriented angle from oriented angle from oriented line fg = k5 line de = al line fg = a2 line bc = ~3 points a, b, g are collinear is a circular arc curve r oriented oriented line ab is tangent line bc is tangent to r at a to r at c It must be completed by topological constraints coming lines and points-circles produce neither a drawing nor numerical values us, a solution must have the form of a simple program of construction, being implicitly given, it is impossible from the drawing, e.g. points- to to solve the system of constraints. For that we call a incidence. Dimensions J.-E Dufourd et al./Art@cial Intelligence 99 (1998) 73-119 11 plan of comtruction. one or several numerical In order to solve It can later be interpreted with particular numerical data to give and graphical [ 161. this system module a displacement, we can arbitrarily that is true figures solutions, fix a point as x-axis, by choosing for the system, adjoining in this first coordinate as origin and fix a direction solution a particular that we are working for origin and then by choosing c at et, the x-axis elements of construction, we can transform the method of the loci [ 12,32,42], using construct points ct and ei in the following way: another point. When constructing a suffix 1 to any identifier will indicate system. For instance, point d is fixed at dl is fixed. In order to better define the the constraints into incidence as in [ 11,18,28,29,47,48]. relationships, Thus, we easily fix point dl; fix direction dlcl; construct construct the oriented the point ci intersection line 111 of direction dlcl passing through dl; of 111 and of the circle with centre dl and radius k3; construct the oriented angle rul with 111; line Z2t passing through dl and forming an oriented construct the point ei intersection of 121 and of the circle with centre dl and radius k4; Continuing the construction is not as easy: the problem (cl, dl , et ), but without possible continuation that points cl and et are not uniquely determined equations of degree greater or equal to 2. This question in geometry where constraints subfigure is well known arc r or to locate point ft. In fact, we have successfully loci the auxiliary method. Note line and a circle. This into polynomial [ 471, regarding degeneracy. Let us simply interpretation, with respect by taking to the sketch. We can try to do the construction f at fi and direction the orientation into account indicate fixing point (f2, g2, e2:1 in the following way: is how to draw the circular constructed with the method of by the same of a as intersections can be translated in is discussed from a second coordinate fg at fzg2. We construct system, determined the auxiliary by subfigure that it is treated during the numerical and the proximity of the solutions fix point f2; fix direction construct construct f2g2; the oriented the point g2 intersection line 132 with direction f2g2 passing through f2; of 132 and of the circle with centre f2 and radius k6; construct angle the oriented -_(y2 with 132; line 142 passing through f2 and forming an oriented construct the oriented line 152 parallel to 132, of same sense, and distant from it by k5; construct e2 intersection of 142 and 152; 78 J.-E Dufourd et al. /Art$cial Intelligence 99 (1998) 73-I 19 Fig. 2. Auxiliary subfigure with subscript 3. but without construction then easily construct a3, b3, g3 and c3 (Fig. 2): any possibility in a third coordinate of continuation. Once again, we try to go on with the system, by fixing point a3 and the direction a3bj. We fix point as; fix direction a3b3; construct construct the oriented the point 63 intersection line 163 of direction b3a3 passing through a3; of 163 and of the circle with centre a3 and radius kl; construct the point g3 intersection of 163 and of the circle with centre a3 and radius k2; construct the oriented angle a3 with 163; line 173 passing through b3 and forming an oriented construct construct the oriented the oriented line 183 bisector of 163 and 173; line 19s passing through a3 and perpendicular to 163; construct the point ws intersection of 183 and 193; construct construct the point c3 orthogonal projection of wg on Z73; the circular arc r3 = a3c3 of centre 03; One may continue the construction solved subfigures. Thus, by auxiliary to es is equal to ciei. gses = g2e2. The point es is thus determined subfigure In the same way, by auxiliary (cl, dl, el), the distance cse3 from c3 (f2, g2, e2), we have as the intersection of the circles with the subfigure by using the metric properties of the already J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 79 respective construction centres cg and g3, and respective and gzez. We can add to our plan of the subfigure radii clel indexed by 3 the line: construct the point e3 intersection of the circles with the respective centres c3 and g3, and respective radii clel and gze2; the whole construction. system under can be deduced (~3, d3, e3) has already been constructed It would be easy to construct d3 and f3 in order to achieve subfigure the designation But that is useless because first coordinate two subfigures and e were determined and e3, the unique displacement computed. Thus, 401-3 is such that p1,3(cl,dl,el) the unique displacement can compute that 4~2~3 (~2, f2, g2) = (e3, f3, g3) . Thus, we end the construction in the subfi,gure in the (cl, dl , el ). More precisely, each of these from the other by a displacement. Now, since points c system as cl and el and in the third as cg 401-3 which transforms cl into cg and el into e3 can be In the same way, we e2 into e3 and g2 into g3 such indexed by 3 the two other subfigures by displacement: in the first coordinate plan by assembling = (c3,d3,e3). transforming 402-3 compute ~1-3 which transforms determine d3 = p1+3(dl); compute 92-,3 which transforms determine f3 = 402+3( f2); (cl, el) into (~3, e3); (e2, g2) into (eg , g3) ; The concatenation of the construction is brought back plans of subfigures in subfigure for the initial problem in the last fixed coordinate through displacements. Notice system, we could have chosen any one of the two others and obtained indexed by 3. This plan indexed by 1, 2, and 3, is system, that instead of the third two formal solution forms a general plan which a particular other solutions being obtained coordinate other partic,ular solutions. 3. Geometric constraint systems syntactical--or of figure concerns for by the syntactical turns a declarative Our approach of the formal construction formal-level and a semantical-or level while of figures interpretative-level. leads us to distinguish between a So, the notion of a figure is accounted the specification the semantical level. A formal solver acts essentially at the syntactical to it. level: it Despite specification into an imperative one equivalent this, an accurate and rigorous description of a geometric universe as the one less natural. than the semantical one. given in [ 243 is a little bit tedious and makes the basic ideas of our method For that rea:son, the syntactical level will be much less detailed 3.1. Geometric universes and$gures Our formal framework is the Euclidian can be seen as a geometric universe whose classical plane with a coordinate inter- fixed once and for (0, i,J3 system pretation all. 80 J.-E Dufourd et al. /Art@cial Intelligence 99 (1998) 73-119 The syntactical functional description signature 2 consisting of the geometric universe contains in a set 0 of symbols classically geneous for atomics sorts, and type constructors + and x. Each symbol a from 0 is interpreted E, of objects with type LY. With two types LY and /3 from 2, cy + p is interpreted the set of the functions and cy + as the set of predicates on E,. Among geometric of geometric a hetero- types, or as a set as to Ep, (Y x /3 as the Cartesian product of E, with Ep a set 0, of sort or a Cartesian product these sorts, we distinguish type is either a geometric sorts. So, a geometric from E, sorts. the natural and real numbers lines, circles, directions, contains It has also some geometric universe to the sorts Nat and Real. (straight) Example 3.1. Our geometric sponding oriented respectively correspond Displacement. The use of oriented statements. A direction sure a direction by the angle between a representative {Point, Line, Circle, Direction, Length, Angle, Displacement), For compound Point + Point which we use later. corre- objects as points, They to the sorts Point, Line, Circle, Direction, Length, Angle and leads to more precise lines. Later, we will mea- line and the x-axis. Thus, 0, = and 0 = 0, U {Nat, Real}. types, we have for instance Point x Point, Point x Direction and Point x lines to define oriented angles class of oriented angles and displacements. is an equivalence lengths, The signature 2 contains as well functional and predicative symbols. Indeed interpreted confusion, we note every function or predicate using by functions respectively and predicates on the sets E,. Since its corresponding symbol. they are there is no Example 3.2. The functional symbols with the following profiles midp : Point x Point + Point centre : Circle 4 Point distpp : Point x Point --t Length distpl : Point x Line -+ Length angle : Line x Line -+ Angle dir : Point x Point -+ Direction to the functions giving the distance between correspond of a circle, the angle between same goes with the following predicative two oriented respectively the midpoint of two points, the centre the distance between a point and a line, lines and the direction defined by to distinct points. The two points, symbols perp : Line x Line + tgclp : Circle x Line X Point + _= _:CZyXCY+ expressing polymorphic the perpendicularity, the tangency and the equality. Note that the equality is and with unfixed notation. We add another polymorphic function symbol J.-E Dufourd et al. /Art@cial Intelligence 99 (1998) 73-119 81 transj‘: Displacement x LY + LY allowing the application of a displacement to each geometric object of type cy. We suppose that the set E, of geometric objects of type LY is bijectively determined structure and that there is an homeomorphism that the set E, has a by a system of real coordinates. More precisely, we suppose ?/a : II x . . . x Z,, -+ E, where topological each Zj is an interval of R. We say that n is the degree of freedom of (Y or, as usually, systems ya are used that each clbject of type LY has n degrees of freedom. The coordinate during the solutions and to draw the geometric objects. in order to calculate numerically of the program construction the interpretation Usually, a figure later on, we often prefer explained vector, f = (ol,..., That way, the type of f is simply is a set of geometric objects. But for some reasons to consider that will be a figure as an n-tuple, denoted by a . . . , a,,. types LYI, atomic 0,) of geometric objects of respective the Cartesian product (~1 x . . . x a,. Example 3.3. In the case of the Euclidian plane, Direction have respectively a degree of freedom 2, 4 and 3. types Point, Point x Point and Point x Let f = (o,,..., o,)beafigureoftypealx...xcu,.Wesaythatf’=(~;,,...,o;~) is a subfigure of f if it is one of its subvectors. We say that f is proper if no component o; of f can be defined from its other components oj of f, with j # i, using the functions of the universe. 3.2, Geometric constraint system A figure can be specified by a logical [ 15,22,47]. to use the constraint terminology: for such a system given as a statement. system Since we are interested by the effective construction formula concerning the geometric universe of figures, we prefer thus, specified objects can be seen as solutions Definition 3.4 (Constraint system). A system of geometric constraints-or geometric (X, A, C), where X is a set of unknowns, denoted by constraint system--S and C a set of constraints, denoted by Z(S) , A a set of parameters, denoted by d(S), C(S) , of the form is a triple where each pi [ X, A] is a predicative parameters term, namely a constraint. Unknowns from A are regarded with their sorts that are always geometric, from X and i.e. in 0,. We suppose that unknowns and parameters come from a referential set which is a disjoint union of countable sets V, of a-typed variables. 82 J.-E Dufourd et al./Art$cial Intelligence 99 (1998) 73-II9 variabIes as a set Y of variables. the sort (Y of a variable x by using Thus, we always have X c V and A c V. We suppose that any set Y of variables into a vector also denoted by Y. Conversely, we can consider If necessary, we will the notation x : a. We use the notation formula which contains variables of X and A. expressed should be algebraically (Sec- systems of the geometric objects respectively in the set of constraints C. We impose also the two natural condi- can be totally ordered every vector Y of distinct specify pi [ X, A] In our framework, we request by polynomial equations using tion 3.1). We note var(p;[ X, A 1) and var( C) in pi(X, A) and tions that every constraint the coordinate to denote an atomic positive the sets of all variables XnA=@ and XUA=var(C). Finally, in order to simplify, we will often note C for the system (X, A, C). 3.3. Solutions for a system Definition 3.5 (Solution). When constraint from system S is a valuation geometric objects of the Euclidian plane, there are no parameters, a solution the set of the unknowns i.e. an application for a geometric to the set of the which respects types and satisfies every predicate pi [ a( X) ,0]. If we fix an ordering on the unknowns, we can consider any solution for a geometric the constraint set of figures which are solutions for S. system as a vector of geometric objects, i.e. as a figure. We note F(S) If the set 7(S) is finite and non-empty, we say that S is well-constrained. is empty, we say that S is over-constrained. constrained. With the assumption nomial equations, F’(S) the solutions manifold. Such types could be formally described by a more elaborated such as T or F [ 231, but an intuitive vision of such type constructions present context. for S. The degree of freedom of this type is the dimension of the algebraic typing system in the If it If it is infinite, we say that S is under- into poly- the type of can be translated in a way, defines is an algebraic manifold which, that all of the constraints is enough Example 3.6. Consider C(Ss) = {distpp(xl,x2) represents the type of 5 units long segments. the system S5 defined by Z( Ss) = {xt : Point, x2 : Point} and of degree 3 which It defines an algebraic manifold = 5). When the S contains parameters, we consider is the function computing solutions space where S, is well-constrained, for the corresponding that the it has only one solution which for each point a of the parameter space, the set LF’( S,) of the system S, with a fixed. If the subset of the parameter and contains is finite, non-empty i.e. where F(S,) J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 83 some part homeomorphic with a paving stone of R”, we say that the parametric is well-constrained. for almost all of the points a of the parameter space, we say that the parametric S is under-constrained If the system S, is under-constrained over-constrained). (respectively over-constrained) system system S (respectively point of view, the well-constrainedness the number of unknowns of a system does not and the number of constraints. From our semantical than degrees of freedom because of possible system can con- [ 151. On the other hand, such a system redundancy is avoided by adding some strong hypotheses this problem field of numbers, a well-constrained than degrees of freedom involve any relation between Indeed, because of the underlying tain fewer constraints can contain more constraints of constraints. Usually, field of numbers, for instance pendence of the constraints of homogeneous For reasons of simplicity, we will try later to stay at the semantical real field since we choose this way dloes not suppress all difficulties, any situation where the restrictive hypothesis concerning the constraints the complexification to solve constraints of the underlying the consideration is required. and/or thus we denote by the expression in Euclidian plane geometry. Proceeding in general of the algebraic independence as inde- [ 311. level, and with the the algebraic coordinates Inclusion of solution sets is as usual translated by a consequence relation. and and equivalence). the same parameters. The set F(S) Definition 3.7 (Consequence same unknowns included for S’ if for each point a of the parameters space, we have F( S,) C 3( Si). S’ is then called a consequence of S, which is denoted by S + S’. S and S’ are equivalent is denoted by s++ S’. Let S and S’ be two systems with the for S is of the solutions in the set .7=(S’) of the solutions if S + S’ and S’ +- S, which It may seem unnecessary to compare with different unknowns. However mediate unknowns sets is a subset of of a given system the other. If variables are ordered, we can say as well that one of the unknown vectors is a subvector of the other. are added and defined by new constraints, is considered. two systems S = (X, A, C) and S’ = (X’, A, C’) inter- second when a subsystem In both cases, one of the unknowns in two cases: first when this is indispensable Let X be a subvector of X’ and 7r the projec- Definition 3.8 (Extended consequence). tion such that 7r( X’) = X. Then, S + S’ if and only if 3(S) C 7~( F( S’) ), and S’ + S if and onl:y if 7r( F( S’) ) C F(S) . This definition means that any solution for S can be extended into a solution in the first case, and any solution second ca:se. for S’ can be projected into a solution 3.4. Operations on constraint systems for S’ for S in the Since we use formal manipulations some operations concerning constraints, of constraint unknowns systems, we must precisely and parameters. specify 84 J.-E Dufourd et al./Art@cial Intelligence 99 (1998) 73-119 sum, difference, disjunction). Let S = (X, A, C) and S’ = Definition 3.9 (Subsystem, systems. S’ is a subsystem of S if C’ G C, X’ G X and (X’, A’, C’) be two constraint A’ c A. The sum S+ S’ is the constraint system S” = (X”, A”, C”) where X” = X U X’, A” = A u A’ - X” and C” = C U C’. If S’ is a subsystem of S, the difference S - S’ is the system S” = (X”, A”, C”) where X” = uar( C”) n X, A” = uar(C”) fl A and C” = C - C’. It is important to note that unknowns of S + S’ which also appear in d(S) or A( S’) are removed from A”. This fact corresponds The disjunction of two systems S and S’ containing somehow is noted S @ S’. It is not a constraint of, on the one hand, the conjunction parameters but the disjunction on the other hand, solution if Si, . . . , S, are p constraint More generally, and parameters, we note @,, S; the disjunction system the conjunction and the same in the sense already defined, of S and, of the constraints for S @ S’ is a for S’. Therefore, we have F( S @ S’) = 3(S) U F( S’). the same unknowns of the constraints of S’. A solution of the p systems. Thus, we have for S or a solution systems containing to parameter passing. the same unknowns F(&Si) i=l = (JF(Si). i=l 3.5. Solving constraint systems The aim of geometric construction is mainly some numerical constraint by producing Newton-Raphson method parametric numerical figures. This can be done by transforming that is a solved form in the following [ 35,39,43] sense. systems. When a system does not contain parameters, solutions. For example, this or the Sunde method to solve well-constrained is the way geometric it can be processed the classical [ 5 1,54,55] work. To yield is needed: no process for the system, into a triangular a constraint system figures solutions solutions can be shown, and we must produce a construction system, a formal method for a parametric Definition 3.10 (Triangular triangular and if the constraints pi [ X, A] contains only unknowns solved when all the constraints pi[X, A] are in the form the unknowns of {xi, . . . , Xi}. Such a triangular form, solved form). A parametric constraint system S is i, form is said to be can be ordered so that, for every xi=fi[xl,...,x;-l,Al, where fi [ x1, . . . , xi-l, A] denotes a functional xi- 1) and the parameters in A. term whose unknowns are in {xi, . . . , A solved triangular system has at most one solution. . . , x;__l , A] may correspond in f;[xi,. of the parameters way as a construction plan whose interpretation system. space. A solved triangular In fact, some functional symbols to partial functions not defined for some values in an operational system can be viewed is the parametric figure solution for the J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 85 Definition 3.11 (Solvable system). We say that a parametric there are hr2 > 1 solved triangular Z(T), for every i, and such that systems Tl, . . . , T, with A( Ti) = d(S), system S is solvable if 2 Z(S) (i) TI + S, . . . , T,,, =+ S, (ii) S* &Ti. ;=I Each condition Z(S) 2 Z(z) points out that some new, or intermediate, unknowns can appear construction be translated in a triangular and the condition into equality: system. The condition (i) expresses (ii) its completeness. In other words, both conditions the correctness of the can F(S) = ijF(C). i=l This notion of solvability as it that all solutions can be yielded formally using the geometric universe syntax. the Euclidian the model we considered is both syntactical It is syntactical and semantical. above, namely as it requires expresses It is semantical plane. By definition, a solvable system is well-constrained. this comes from the impossibility be proved by Lowenheim-Skolem’s to axiomatize theorem [ 491. However is false: the real field in a finite way, which can the converse Example 3.12 ( Carver and Lesser [ 121) . The famous problem of the circle quadrature is insolvable. The zeroes of polynomials with degree greater than with ruler and compass and radicals or equal of their coefficients. For this reason, computer-aided themselves with approximate to 5 cannot be written as terms built with elementary operations designers often content values. Moreover, of a solvable and correct decomposition system is seldom carried out in practice. Thus, geometric the complete junction of solved systems leads for of figures by necessary conditions incorrectness must be rectified by a so-called discussion phase the initial system. This or a checking phase during interpretation. The Newton-Raphson method [ 39,431 often used in CAD gives a good example of an incomplete and incorrect method because only one solution can be found and this method can diverge even though there are solutions. into a dis- reasoning that are not solutions to the construction the numerical 4. Solving modulo the displacements group The notion of isometry, and more precisely of even isometry, is based on. Usually, an even isometry that preserves distance and orientation is one of the significant is called a displacement. That of the plane. As usual, notion our method is an affine application we extend this notion to all the considered types in our geometric universe. 86 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 4.1. Action of the displacements group over the geometric universe Following a rigorous point of view, the action of a displacement object should be denoted by transf( 40, o) according Example 3.2. To simplify and to conform into P( 0). (p over a geometric in to the common habits, we shorten this notation to the signature given above The set of the plane displacements forms a group under composition of functions. This allows us to define for each geometric set E, in the following way: for each pair (f, f’) of E, x E, type LY an equivalence relation z-a over the f G, f’ if and only if there is a displacement p such that p(f) = f’. the displacements, its orbit. The quotient Definition 4.1 (Orbit, modisp degree of freedom). The equivalence or merely modulo type a is named of the objects of type a modisp. For each type cy, the set En/-* quotient structure whose dimension type ff. so, into modisp, of a geometric object of is the set can be fitted with the is called the modisp degree of freedom of i.e. the set of the orbits, class modulo set Ea/ +, abbreviated topologic is reduced Considering to a single element, that the objects with this type are completely determined the quotient set, two opposite cases may occur. First, if there is only one then the modisp degree of freedom by their to is equal that the objects of this type are invariant under types is not orbit, i.e. E,/-, is null. This means position. This happens with the points and the lines. Second, a single element, to the degree of freedom, This means displacements. are described equal to zero and smaller This happens with the lengths and the angles. The corresponding the modisp degree of freedom then the modisp degree of freedom than the degree of freedom. types. In the other cases, if each orbit is reduced is equal to E,, as metric i.e. E,/=, to 3 (one Example 4.2. Circles have a degree of freedom equal two for their centre) and a modisp degree of freedom equal to 1: each orbit contains circles of the plane with the same radius and the set of all the orbits is homeomorphic to lR+. Ellipses have a degree of freedom equal for each radius, one for the direction and a modisp degree of the ellipses with the same short freedom equal and large radii. Triangles are figures with a degree of freedom equal to 6 (two for each vertex). Their modisp degree of freedom triangles with corresponding to 5 (one two for their centre) for their radius and the to 2: in this case, each orbit contains is equal to 3: each orbit contains of their great axis, and edges of same length. to the quotient, As it can be seen, the group of displacements acts also over figures and parametric the orbit of such a figure yields a so-called modisp figures. By passing relating figure. In the case of a parametric space to a modisp figure. To simplify, numerical values-of a point-i.e. when no problem occurs, we will use the term figure for both “plain” and parametric figures. Likewise, we must consider the geometric universe. the effects of the displacements figure, a modisp parametric figure is a function on the functions of the parameter J.-E Dufourd et al/Artificial Intelligence 99 (1998) 73-119 87 Definition 4.3 (Stability under displacements). A function g with n arguments ble under displacements if, for each displacement g(dZl)v...r is sta- cp, the equality cp(g( zt, . . . , z,)) = p( z,)) holds for all zi , . . . , zn. Note that this values in a metric tant role in CAD because expression of some properties of already solved subfigures. implies g( zi, . . . , z,) = g(qo( zl), . . . , q( z,)) type. Such functions for the functions with are called metric functions. They play an impor- and allow the they are linked with the systems of dimensions Example 4,.4. The functions midp, distpp and distpl are stable under displacements. referring The two latter are metric functions because to the absolute coordinate or the y-coordinate system are not stable under displacements. they return a length. The functions (0, i: 53 such those yielding the n-coordinate We take the liberty to lightly misuse term visible. So, a parametric if, for each displacement functional placements Finally, we must consider the notations by making of a function g( zi, . . . , zn, A) is stable under dis- the parameters rp, rp( g( zi , . ..,z,,A)) the effects of the displacements =g(~P(zl),...rqD(zn),A). on the predicates and constraints of the geometric universe. Definition 4.5 (invariance under displacements). A constraint is invariant under displacements if it is equivalent . , p,[ X, A]} ibd(o(WAl,.. straint of the form p[X, A] is invariant under displacements if, for each displacement rp, we have {P[P(-U,AI} @ {p[XAl). . , pm [ rp( X) , A] } for each displacement system S = {p, [X, A 1, to the system S, = 40. In particular, a single con- Then, a system is invariant under displacements in particular if all of its constraints are invariant under displacements as it is the case in CAD. xi and x2 be points. The Example 4.6. Let parameter k be a length and unknowns equality distpp(xl the con- straints defined by the equalities of the form g(xt , . . . , xn, A) = h( ye , . . . , ynl, A’) where respectively by A and A’, and where xi and g and h are metric functions parameterized yi are unknowns, , x2) = k is invariant under displacements. More generally, are invariant under displacements. The invariance under displacements of a constraint system is rendered by the form of the solutions as it can be seen in the next proposition. Proposition 4.7 (Passing A system S is invariant under displacements if and only tf 3( S) is a union of orbits. So, we say that the solutions for S are modisp figures. to the quotient). Proof. Let. S be an invariant under displacements will say “an invariant If S has no solution, system”). system (from now on, we simply is trivially then this proposition 88 J.-E Dufourd et al./Ar@cial Intelligence 99 (1998) 73-119 let f be a solution is equivalent for S and q any displacement. to S. Thus, by Definition 3.7, p(f) for S,-I which Then, p(f) is a is a solution true. Otherwise, solution for S too. let S be a constraint Since +J is a bijection, Conversely, displacement. Since 3(S) and so S is invariant under displacements. is a union of orbits, we have rp-’ (3(S) 0 system such that 3(S) is a union of orbits and 4p a the system S, is such that p-t (3(S)) ) = 3(S), = 3( S,). therefore 3(S) = 3( S,) 4.2. Positioning and reference A modisp figure f = (01,. . . , op) is positioned by the choice of one of its represen- In the case of the Euclidian this is usually done setting a point and a system can be defined from such a pair, so we call it a reference plane, tatives. direction. A coordinate frame-in short a reference-of the Euclidian plane. The type Reference is defined as the Cartesian prod- Definition 4.8 (Type Reference). if an object of type uct Point x Direction. We say that a figure contains a reference Reference can be determined only from its components 01, . . . , op using functions stable under displacements. We say that a family of figures with type LY contains a reference this refer- if each figure of the family contains a reference system S ence contains a reference tion of this reference unknowns. and the way to determine is the same for all the figures of the family. We say that a constraint In this case, note that the determina- the same subvector of in each figure of 3(S) contains a reference. included involves if 3(S) Example 4.9. A figure with two distinct points a and b contains, references the reference constituted by its centre and the direction of its major axis. the (a, dir( a, 6) ) and (midp( a, 6) , dirf a, 6) ). An ellipse contains, among others, among others, The classical problem of the construction of a triangle ~1~2x3 from the length of its three edges leads to the constraint system S= {distpp(xl,x2) = kl,distpp(nz,x3) = k2,distpp(x3,xl) = k3}, x1 and x2 by their value. of the stability under displacements where kl, k2 and k3 are positive parameters. This system contains, among others, reference contain that we denote by (xi, dir( x1, x2)) the reference defined substituting that all the solutions indicating the for S only in Definition it is not possible f = (d) containing To point out the importance to define a reference point only the set of the lines fact can be proven by reducing we show that a figure Indeed, is no function g from placements. This function, on the one hand, we have g( q( d) ) = g(d) because p(d) we have cp(g(d)) no fixpoint. This refutes ments. 4.8, line d, does not contain a reference. there to the set of the points stable under dis- it to the absurd. Let g be such a is a direction vector of d. Then, = d, and on the other hand, function has from that the function g is stable under displace- d a line and p a translation whose vector from a line, because because a translation the hypothesis identity distinct # g(d) J.-E Dufourd et al. /Artijcial Intelligence 99 (1998) 73-119 89 (see Section 3.1) . is a matter Generally, the family of all the figures with the same type (Y does not contain strict0 if sensu a reference because of the so-called degenerate cases. This cannot be produced only proper figures of type cy are considered from a reference Checking that a system contains the fact that a system S contains the type Reference. As we have seen above, and therefore hard to do. So we content ourself with syntactical comes contains but it is e.asy to check. In practice, unknowns, contain a reference, because the subfigures solution ,, x2) = k ensures distpp(xi reference. for this constraint it is enough a reference for the semantical level criteria. The first one if the type of vector Z(S) this is not a sufficient condition, to consider a single constraint whose the nature of the constraint assures that the set of contains a reference. Typically, that the two points xi and x2 are different and contain the constraint a To solve an invariant system, we make sure that it contains a reference and then, we by to this reference. We say that we jlx a reference. The constraints impose a value which a rleference is fixed are named reference constraints. Example 4.10. We fix a reference imposing constraints midp(a, b) = 0 and dir(a, b) = 7r/3. for instance two distinct points a and b that a = 0 and dir(a, b) = ST/~. We can fix another one by the for a figure containing In orde.r to simplify our notations, by the unknowns from these unknowns determined a reference for an invariant xi,, . . . , xit, we condense system containing the set of the constraints a reference fixing in the single generic constraint ref(_q, , . . . , Xin). Example 4.11. The two unknowns Xi and xj of type Point linked by the constraint a reference. We fix this reference by the constraints xi = 0 disrpp(x;, Xj) = k determine and dir( xi, xj) = 0 that we sum up ref( xi, xj). The notions of reference and displacement are closely linked. Thus, the degrees of freedom of the types Reference and Displacement are equal, and we have the following well-known properties: l in an Euclidian displacement type Reference is null; space of dimension is only one translating one into the other; so the modisp degree of freedom of the two references, d, given there l let be two figures with the same type containing no reference, in Example 4.9, then there is an infinity of displacements other. In such a case, we say that these figures contain less than a reference; typically lines as translating one into the l if a figure f contains a reference, then for any pair of distinct displacements (cpi , (~2)) we have pt( f) the set {q(f) 1 cp E CD} is infinite too. f 402(f) and, for any infinite set of displacements Cp, 4.3. Positioned figures and systems With the notion of reference constraint, we can moreover distinguish one figure within to the absolute a modisp orbit. More precisely, we have the following proposition coordinate (0, Z j) given above. refering system 90 J.-E Dufourd et al./Art~@ial Intelligence 99 (1998) 73-119 Proposition 4.12 (Positioning Let LY be a type of figures containing corresponding to the reference constraint ref( xi,, . . . , .I-;~). In each the type Reference modisp orbit 0 of the figures of type a, there is one and only one figure satisfying the reference constraint ref( xi, , . . . , xjn ). by a reference). Proof. We show this proposition and ref(xl, x2) defined as in Example 4.11. This does not restrict much ality and permits in the case where (Y = Point x Point x cyl x . . . x a,, the gener- the proof. Let R be a modisp orbit of E, and f’ = p such that CJY( a’) = 0 . , 0;) E R a figure. There is only one displacement to trim down (a’,b’,oi,.. and q(dir(a’, b’)) = 0: it is the composition the rotation of centre 0 and angle of measure of the expected figures. Let us show that there of the translation -dir(a’, b’). The figure p( f’) of vector alo with is one like this one. Let . . , 0:) be two figures from the same orbit is only one figure or) and g = (a’, b’,o{,. the conditions of the proposition. On the one hand, there is a displacement f = (a,b,ol,..., and meeting p such dir( a’, b’) = 0. So, p( 0) = 0 and (o(Q = 7’ (hence ~(3 = J3. Then p is the identity function and f = g. = g and, on the other hand, we have a = a’ = 0 and dir(a, b) = that q(f) 0 This property is particularly useful in the case of an invariant system whose solutions are orbits. from Example 4.9 the problem of the construction the lengths of its three edges. The corresponding solution of a triangle Example 4.13. Resume system S is invariant xi ~2x3 given among other under displacements. that the centre of the circumcircle w is set onto 0 and the half-line with constraints, origin xi passing by the midpoint of (x2, x3) is equal to the x-axis. With our geometric universe, these unusual constraints have the form for S is reached A particular imposing, {interll(med(xl,x2),med(xl,x3)) = O,dir(xl,midp(xz,xs)) =O}. More commonly, we can fix a reference half-line xix:! onto the x-axis. like in Example 4.9 setting a onto 0 and Thus, to obtain a particular figure solution to add to S some reference constraints positioning for S. We say that we position for an invariant system S, it is necessary one figure from each such a system as the following definition and sufficient orbit solution and proposition point out. Definition 4.14 (Positioned system). Let r be a name constraint ref(x;, , . . . , xix ) . The system S positioned in r is the system noted S + r and defined by the reference for S+r={ref(xi ,,... ,x;,),m[X,Al,... ,p,,[XAl}. The solutions of the displacements, well-constrained modisp if 3(S) for S + r are particular all the solutions for S which permit solutions to find, by action for S. In particular, we say that a system S is is union of orbits. This notion is a finite non-empty J.-E Dufourd et al. /ArtQicial Intelligence 99 (1998) 73-l 19 91 linked directly More precisely, we have: to the notion of well-constrained system when passing to the quotient. (Characterization of the well-constrained modisp systems, change of Proposition 4.15. if and only if it is invariant reference) A constraint system is well-constrained modisp under displacements and, for each reference constraint r, the positioned system S + r is well-constrained. Moreover, if r and r’ are two reference constraints, then for each solution f for S + r, there is a displacement cp translating it into a solution q(f) for S + rt. then according for S and for each displacement union of orbits. So, according Let f be a figure solution Proof. If S is a well-constrained modisp system, 3(S) is a finite non-empty invariant under displacements. solution 0 is an orbit solution Proposition 4.12. It can be deduced for S + r and the set of the orbits-or modisp figures-solutions finite and non-empty, therefore S + r is well-constrained. that there is a bijection between for S, then there is only one figure from D satisfying for S + r, f to Proposition to the definition above, 4.7 it is is a fortiori a if r because of the set of solutions for S. This last set is 50, and it is the same for rp( f). Conversely, Conversely, if S is invariant under displacements, 3(S) if S + r is well-constrained, above-which still works-implies is finite and non-empty that this union then F(S) is a union of orbits. Thus, and the bijection described is finite and non-empty too. Now, let f be a solution for S + r. The set {p(f) only one figure f’ satisfying 1 p is a displacement} the reference constraint is an orbit r’. So, for S containing solution f’ cp and a figure f’ = sp( f) solution is a solution for S + r’, and to each solution for S + r’. f for S + r correspond 0 a displacement Intuitively, this proposition that reference system and relaxed for a system positioned indicates in our method, a system invariant Thus, constraint system, and so on until all the partial solutions The notion of partial construction clearer in the next subsection. is positioned is released for another one which will permit to be partially constraints by another to an solved, can be added reference constraint. then the reference to solve another part of the into a single one. role which becomes of a subfigure plays an important can be assembled Before that, it is advisable to define how to syntactically treat the unknowns where several references reference constraint used, we give a new name which in the following definition. the unknowns, are considered as discussed in the same construction in the case process. So, for each is used to qualify systematically Definition 4.16 (Located system). Let S be an invariant r = ref( Xi,, . . . , xq). We note S.r the system S and the associated reference constraint located in r and corresponding in a pointed notation. More precisely, S.r is defined by Z( S.r) = {xl .r, . . . , xn.r}, A( S.r) = d(S) for the set of the constmints of S + r where each unknown Xi is replaced by the qualified unknown to the system S + r with its unknowns and C( S.r) = C( S + r).r, where the notation C( S + r).r system containing a reference qualified stands x;.r. 92 J.-E Dufourd et al./Artijicial Intelligence 99 (1998) 73-119 i.e. We also use the notation 1’ for the set of the de-qualified unknowns of a system, I’( S.r) = Z(S). We will see later on that a qualified unknown x.r cannot be qualified again recovers the specification into x.r.r’. Note that the notion of well-constrainedness of rigid bodies, excluding non-connected or articulated bodies. mod&p exactly 4.4. Partial solving The notions of subfigure and subsystem introduced above pass to the quotient as well. So, we can talk about modisp subfigure and subsystem The following proposition results from this. invariant under displacements. Proposition 4.17 (Well-constrained Let S be a well-constrained modisp system and S’ be a well-constrained modisp subsystem of S. Then, to each modisp figure f solution for S corresponds a modisp subfigure ff which is solution for St. Conversely, subsystem). any solution f' for S’ can be extended into a solution f for S. As we have seen, to solve a construction problem, our method works with representa- tives of modisp figures obtained by fixing local references. So, to pass from a positioned subfigure the former into the latter. This process is justified by the following proposition. the displacement moving the method determines to another one, Proposition 4.18 (Replacing Let S be a well-constrained modisp system located into S.r and S’ be a well-constrained modisp subsystem of S located into S’.r’. a subfigure). To each figure f solution for S.r corresponds a figure f’ solution for S.r’ and a single displacement rp such that cp( f’) is a subfigure off. from immediately the definitions This proposition, whose proof results sitions above, points out that it is possible constraints a reference constitute solved part S’.r’ must be considered. We call such informations S’.r’ within the system S. This generalizes [ 4 11. More precisely, we have the following definition. and propo- at first only a part S’ of the of a system S to begin a construction with a local reference defined by in S - S’ do not the remaining constraint coming from the the border of the system the notion of virtual bonds used by Owen constraints a well-constrained modisp system: some metric informations r’. But, in general, to consider Definition 4.19 (Border). located defined by Z(B) =Z(S- system and S’ be a subsystem of S into S’.r’. The border of S’.r’ within S is the system B = border( S’.r’, S) d(B) =Z(B).r’ Let S be an invariant S’) nI(S’), and C(B) = {g(xt,. . . ,x,) = g(xl.r’, . . . ,x,.r’) 1 g any metric function and x1,. . . ,x, E Z(B)}. Note that the unknowns provided by S’.r’ become parameters of B. These parameters to S’.r’. This are named border parameters and are meant to be substituted by solutions substitution can be numeric or formal if S’.r’ contains parameters. J.-E Dufourd et al./Art@cial Intelligence 99 (1998) 73-119 93 Proposition 4.20 (Property of the border). under displacements. Moreover, associated with being named r, then B + r is solvable. if B contains a reference, System B = border(S’.r’, S) is invariant the reference constraint because Suppose functional .between metric it only contains under displacements terms as constraints. that B is invariant Proof. It j.s clear equalities reference associated with the reference constraint we simplify our purpose without is ref(xl , ~2) where xi and x2 are two unknown points. is solvable, note first that Z( B).r’ not over-constrained. Moreover, solutions distpp( x1 .r’, x2.r’). Examine now the other unknowns of Z(B) Let x be such an unknown a r. As in the proof of Proposition 4.12, r In order to show that B + r for B and thus, B + r is for x1 = 0 and at most two of the x-axis and the circle of centre 0 and radius to their sort. loss of generality by supposing there is only one solution for x2 in the intersection (x # xl and x # x2): that the reference that B contains is an obvious according solution l if x is of the sort Point, then C(B) = distpp(x.r’,xl.r’) distpp(x,xl) fore x is in the intersection of two known distinct circles; contains, among others, and distpp(x,xz) = distpp(x.r’,xz.r’); the constraints there- l if x is of a sort Line, then C(B) contains the constraints distpl(xl, x) = distpl(xl .r’, x.r’) and aflgll(x,stlig(xl,x2)) =anglf(x.r’,stlig(xl.r’,x2.r’)), the oriented angle between oriented where. angll measures the oriented centre xi and radius distpl(xl.r’, x.r’) making a given angle with oriented stlig( .x1, x2) (whose construction lines, and stlig gives line of circle of line then x is a tangent is not complicated) line passing two points; through ; l if x is of the sort Circle, then C(B) contains the constraints radius(x) = radius( x.r') , distpp( centre( x), x1 ) = distpp( centre(x.r') , xi .r’) and distpp(centre( x) , x2) = distpp( centre(x.r’), x2.1’); hence it is easy to construct x; l etc., for each sort. In each case, we can build a finite number of solutions for x, so B + r is solvable. 0 We can now examine what happens with the remaining system S’ are well-constrained modisp, this means in common syntactic. that define a reference. Let us clarify constraints. If S and its sub- that S and S’ have at least unknowns is purely this phenomenon which Definition 4.21 (Common reference). Two constraint reference if S’ and S” contain a reference determined by the same vector of unknowns included if they reference and Z( S’) n Z( S”) is of the type Reference. They have more have a common reference than a common in 2( S’) n Z( S”). We say that they have exactly a common systems S’ and S” have a common reference but not exactly. if they have a common reference 94 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 Hence, we have the following main proposition which makes clear the role of the border. Proposition 4.22 (Use of the border). Let S be a well-constrained modisp system and S’ be a subsystem of S containing a reference and such that S” = S - S’ contains as well a reference. If SF is well-constrained modisp, then the following assertions hold: ( 1) S’ and S” have a common reference. (2) If S’ and S” have exactly a common reference, then S” is well-constrained modisp, else S” is in general under-constrained modisp. (3) If S’ is located into S’.r’, then S” + border(S’.r’, S) is well-constrained modisp. Proof. Note first that S” cannot be over-constrained solution for S”. because any solution for S gives a let f’ = (al,. Examine assertion ( 1) and suppose that the common unknowns to S’ and S”. Then, respectively for S’.r’ where at,. bk,bk+ I,... S”, say XI,. . . , xk, do not form a reference. Let r’ and r” be some reference straints added be a solution f” = (b I,..., xk. According XI,..., and bj do not contain so(br) = a~, . . . > p( bk) = ak. Moreover, since S” contains a reference, ity of figures all different and solution is well-constrained modisp. to the second and third properties there a reference, . . ,ak,ak+l,. for Sr’. So .F(S.r’) . . ,a,,,q(bk+l),. refuting . . ,qu(bP)): the assumption is an infinity of displacements f, of the form (at,. in Section 4.2, since between S’ and con- . . ,a,,?) . . , xk and to the a; that qz~ such there is an infin- they are that S for S”.r” where bl, . . . , bk correspond . . , ak correspond , b,>) a solution . . ,ak,ak+l,. is infinite, IYXpCCtiVely t0 x1,. Next, consider assertion (2) 4.15, for any reference constraint . . ,xk and suppose to Proposition reference defined by xl,. cording tions for S”.r. Then, call r the constraint be a solution (alt-..tak~ak+19..~ tively to XI,. . . , Xk. So, each solution where is an infinity of solutions there , a,,) in the case where S’ and S” have exactly a common that S” is under-constrained modisp. Ac- r, there is an infinity of solu- . . , xk and let f’ = respec- . . , ak, bk+l, . . . , b,) the figures of the form is infinite and that S is well-constrained modisp. Therefore S” is well- fixing for S’.r where at,. for S”.r is of the form (al,. for bk+l, . . . , b,. All the unknowns xl,. by) are solution . . , ak correspond for S.r. Then, .F(S.r) (al,...,ak,ak+l,...,bk+l,..., this refutes our assumption constrained modisp. reference that a common Now, we show (2) the proof, we suppose say xt and x2. We note r the common in the case where S’ and S” have more than a common refer- for S’ and ence. In order to simplify ref- S” is made up of two common points, ref(xl , x2). If we suppose that S” is well-constrained modisp, then erence constraint that xt = 0 and St.r and S”.r yield both a finite non-empty such set of solutions for x2 from S’.r, dir(xl, x2) = 0. So, we have a finite non-zero number of solutions from S”.r, say {bh, . . . , l$}. these In general, say {ui,. there two sets are disjoint. The case where implies are not algebraically this case is possible do not impose any condition that S’ and S” since we to over the form of S’ and S”. But generally one tries In this case S.r has no solution independent: with our hypothesis, the two sets have a non-empty and intersection and other solutions is a contradiction. . . , ai} J.-E Dufourd et al./Artifcial Intelligence 99 (1998) 73-119 95 this situation avoid modisp . in CAD. So, we can say that S” is in general under-constrained Finally, we prove assertion well-constrained modisp, note border( S’.r’, S) is not over-constrained. We can show as in the proof of assertion that each solution that S” + border( S’.r’, S) is not under-constrained modisp. 0 In order that S + S” + border( S’.r’, S), for S” + border( S’.r’, S) can be extended is therefore S” + (2) for S such that S” + border( S’.r’, S) into a solution (3). first to show 4.5. Assembling In the previous subsection, we have shown system can be partially the border of the already solved subsystems. The proof of Proposition 4.22 located solutions. We them, what is the same, solved using points out how a global solution can be produced say that we assemble as we will see below. the subfigures, or the subsystems defining that an invariant from the partial Definition 4.23 (Assembling). Let S’ and S” be two subsystems of the same system S respectively into S’.r’ and S”.r”. Let cp be an unknown of type Displacement not in Vur( S). The assembling of S’ with S” by 40 is a system Si = asb( S’.r’, S”.r”, p) defined by located (i) Z’(Si) =Z(S’.r’) U {y.r’ 1 y E Z(S”) (ii) A(&) = d(S); (iii) C(Si) = C(S’.r’) UC(S”.r”) U eqdisp(S’.r’,S”.r”,(p) -Z(S’)} U {p}; with eqdisp( S’.r’, S”.r”, rp) = {y.r’ = trunsf( p, y.r”) 1 y E Z( S”)}. In this definition, S’ and S” play dissymmetric roles. However, it is easy to see that asb( S’.r’, S”.r”, p) and asb( S”.r”, S’.r’, 9) are equivalent modisp. The assembling works the:refore in a sense or in the other. Note that this operation is useful only if the two systems have a common to Proposition 4.22, if they have less than a common and if they have more than a common to get a solution is required reference, reference. the assembling a certain reference, for cp. In this case, we say that According has an infinity of solutions, kind of border compatibility the two systems are assemblable. The assembling operation of the assembling is compatible with the solving of the invariant operation comes from the following systems. theorem which The correctness indicates that the assembling operation yields no false solution. Theorem 4.24 (Correctness). so thatZ(S1) =Z(S2) andT(S{) S4.r’. i”S,.r + S2.r and S{.r’ + SG.r’, then asb(&.r, S{.r’,q) + asb(Sz.r,Si.r’,(o). Let S1, Sz, Sjand Si be four invariant constraint systems respectively located into S1 .r, &.r, S{ .r’ and =Z(Si), Proof. If asb(Sl.r, $.I’, cp) has no solution, noting Si .r’, q) c:an be broken (PO permitting ment to say. Otherwise, that eqdisp( Sl .r, S{ .r’, ~0) = eqdisp( S2.r. Si.r’, q), a solution F for asb( Sl .r, f’ for S{ .r’ and a displace- solution into a solution f for St .r, a solution to solve eqdisp( Sl.r, Si.r’, (D). The figure is therefore then there is nothing f 96 I-E Dufourd et al. /Art$cial Intelligence 99 (1998) 73-119 to &.r, the figure f’ solution giving F, is clearly a solution for S$.r’ and the assembling of these two figures by qpo, for U&(&X, $3, PO>. 0 We can deduce immediately the following corollary. Corollary 4.25. If St .r H S2.r and Si .r’ H Si.r’ then asb(Sl.r,S~.r’,~) H asb(&.r,Si.r’,p). The completeness of the assembling operation that all the solutions which expresses the solutions the border of one of them. for two subsystems whose union is then given by the following theorem for the initial system S can be found by assembling is S and whose solutions are found using Theorem 4.26 (Completeness). Let S be a well-constrained modisp system and S’ be a well-constrained modisp subsystem of S. Suppose that S’ is located into S’.r’, which is solvable giving the solved forms T[, . . . , TL,, and that the system S” = S - S’ + border( S’.r’, S) is located into S”.r”, which is solvable too giving the solved forms T”,..., T,‘I,. Then: ( 1) asb( T/, T,!‘, qj_+,i) is solvable for each i and each j; (2) S.r’ u @,i_i asb( 7;‘, q’, (Pi-i), where p.4i-i are new distinct unknowns neither contained in Ui var( T/i’, nor in lJj var(T!‘). Proof. Assertion whose existence system eqdisp(T/, Ty, pjpj,i) and, then, the images of the solutions ( 1) is clear: the choice of a common 4.22-permits is given by Proposition reference between 7’/ and Ty- to compute pj_...+i within for Ty. the seen For assertion (2), note that S.r’ is contained immediately that S.r’ H asb(S’.r’, S”.r”, rp). For each i and each j such lJ’ + S’.r’ and TJ!’ + S”.r”, we therefore have asb(T/,Ty, pj+i) =+ S.r’ by previous and another one to S”.r’ and therefore by displacement So, there are some i and j such that fl Hence, for asb( q’, Ty, p,j+;). in asb( S’.r’, S”.r”, 5p), thus it can be that the for S’.r’, say f 1, say f2, to S”.r”. for Ty. is a solution the figure (f2, f 1, pjpj_i), containing 0 theorem. Conversely, each solution f plus some auxiliary objects, f for S.r’ gives a solution for q’ and f2 a solution is a solution a solution, We have shown in this section that in order to get all the solutions for a constraint system S, it is possible one of them, then to assemble is subject to the correctness to solve locally two subsystems S’ and S” using it. But the success of the whole geometrical the border of construction and the completeness of the local solving methods. 5. Strategies The previous theory of constraint systems solving does not make any hypothesis about the way to concretely proceed. In order to make it operational, we must clarify strategies for the choice of subsystems, local methods, activation of methods and assembling. J.-E Dufourd et al. /Artijicial Intelligence 99 (1998) 73-119 91 5.1. Decomposition in subsystems Two main strategies can be considered for the decomposition con- into subsystems. The first one proceeds a priori by static analysis of the is to detect common or perfect matching play and the like pairs of articulation is done locally on each of the subsystems in [ 30,411, where notions the solving constraint graph connectivity references. That method of a geometric role. Next, straint system subsequent followed an essential partial solutions are assembled The second strategy proceeds dynamically to obtain the global solution. by simultaneous exploration system. More precisely, at each step, a solving method is brought of the method allow and solving of a subsystem which will be assembled. This strategy of the constraint play on the part of the system yet unsolved. The capabilities determination to the artificial related [7] with a unique numerical approach based on a blackboard iterative method. intelligence and solving into the is [ 131. It is used in We can say that the first strategy is top-down, whereas have used the second one in our prototype, because solving methods, which can be deeply different. knowledge-based in the same solver. That is the idea of multi-agent solving methods. systems, computer the second Indeed, we can associate is bottom-up. We it favours the conjoint use of several specialized iterative methods systems, where agents are the local algebra systems and numerical the subsystem in the same way. Thus, constraints In our prototype, determined imum of the remaining the use of other methods approximations which is restricted solve only one of them. to solve of constraints the knowledge-based systems to formally obtain a triangular the propagation in one step is not always try to solve the max- system. Conversely, and amplification is restrained, of or partial solutions. That is the case for the Newton-Raphson method, to to take into account set of constraints the minimum necessary to avoid In fact, in our prototype, at a given step, several constraint can coexist without any possible assembling, because ence. The prototype In case of -Failure, a new solving process tries then to complete one of them using is tried by fixing a new reference. subsystems they have not any common already solved refer- the border of the others. 5.2. Activation of the local solving methods and on included type of constraints. The local solving methods in a solver depend on the underlying can be handled by a geometric knowledge-based geometric Thus, constraints which can be expressed universe the like by ruler and compass Proge’ [ 18: 47,481. Constraints, where more complex elements are included, e.g. areas treated with any method but of polygons numerical Classical procedural methods where a triangular construction [ 31 or Geometer’s which could be integrated iterative ones, e.g. Newton-Raphson. s.ystem is directly produced can also be accepted. Thus, programs of interactive [ 211, the system described in [40], Cabri-Geom2tre [26] generate directed acyclic graphs of constructions in CAT, like LEG0 in our framework. can be scarcely or trigonometric Sketchpad functions, system, 98 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 systems, As classically in the multi-agent vate the local solving methods. They can be sequentially priorities. They can be activated chronization the sequential case has always been complex enough we must say at first why and when trigger a method and not another one. The criteria be considered to acti- into account syn- in this direction, because Indeed, to : formal character or not, completion, quickness of solving. two strategies can be considered triggered in parallel with the usual problems of concurrency, [ 131. We have not yet worked to seize upon our attention. and termination are numerous taking Thus, in our prototype, where a formal result-more precisely a construction plan- favour geometric methods based on reasoning than is first required, we always numerical methods. The second ones are triggered only when the first ones block, what is realized by a technique of static priorities. The method having is activated until it cannot make progress In this case, the assembling more required construction is possible. is tried, with success or failure. Then, the methods are once is stopped when the formal is complete or no method can be activated and no assembling in the decreasing priority order. The running the solving anymore or an assembling the highest priority is possible. rather 5.3. Detection of common references An important point is the detection of common plans. We saw in Section 4.3 that two constraint the type of their common unknowns systems are two construction subplans. subplans, contains references between systems have a common the Reference type. When two construction reference when the constraint these unknowns must be defined both in the two For these common unknowns to determine coordinate (Section 3.1) and some relationships a reference-or system-the between figure must be proper correspondent degrees of freedom must be satisfied. In a practical way, when the underlying polynomial equations are algebraically in general, to check that (see Section 3.3)) these two conditions independent lead us the D-Dm-R>3, where D, Dm and R are respectively the sums of the degrees of freedom of the common objects built in the two subplans, of their degrees of freedom modisp and of the degrees of restriction of the relations between of a to the number of degrees of freedom also called valency relation, from the objects which are bound by the relation. removed brings these objects. The degree of restriction [ 301, corresponds The previous relationship to test if there to the fore that is exactly a common it is not sufficient that reference or more, but that a the formal cleanness of the figure (see term R must be subtracted, to measure D - Dm > 3 to know corrective Section 3.1) . two subplans with the common points a and b. These two points by setting a constraint of the form distpp(a, 6) = k or implicitly Example 5.1. Consider are given explicitly because Dm = 0 and R = 2 or 1, whether we have detected (k = 0) or not( k # 0). In the first case, D - Dm - R = 2 and the configuration they are in the same subplan. Thus, for this configuration, we have D = 4, that the two points are confound does not J.-R Dufourd et al. /Artifzcial Intelligence 99 (1998) 73-119 99 a reference, because determine case, D - Dm - R = 3, the configuration reference, because D - Dm = 4. the 2-tuple (a, b) is not a proper figure. In the second a reference, and even more than a determines Consider now two subplans with common point a and circle c. Then, D = 5, Dm = 1 to c, e.g. as its centre, or not. In a reference, does not determine and R = 2 or 1, whether a is detected as to be bound the first case, D - Dm - R = 2 and this configuration because this configuration D-Dm=4. a reference, the 2-tuple determines (a, c) is not a proper figure. In the second case, D - Dm - R = 3, than a reference, because and even more The hypothesis of algebraic independence makes the test of formal equality possible, between points a and b in the first example, and between point a and the centre of c in the second one. reference When subplans, the assembling. on the nature of the configuration. the same its extraction and the corresponding to two to realize In the prototype, different procedures of extraction are used depending displacement must be prepared has been detected in a configuration belonging Let us notice however the interpretation may abort with particular values, which enables a failure of the in the formal phase, if an assembling that even is found numeric effective construction. 5.4. Triggering of the assembling The case of the assembling of two solved systems was investigated insufficient assembling. since Section 5.3 showed that more than two systems can be candidate In this general case, the assembling possibilities in Section 4. This is to an and order must be studied. !j.2 (Order of assembling). Let S, .rl , S2.r2 and S3.q be three solved located Theorem subsystems stemming from a well-constrained modisp system S. If they are assemblable two by two, then we have: This result can be generalized the assembling that when be achieved at any moment, result. The possibilities two by two of several solved subsystems at any number of subsystems. This extension is possible, for the completeness in any order, without prejudice shows it can of the of assembling can be examined in greater details. When the assemblable systems have exactly a common reference, we can have the located subsystems S1.r1, &.r2 and S3.13 obtained by local solving situation of three and of a well-constrained modisp system and such that S1.r1 and Sz.rz are assemblable S3.rg is assemblable with asb(S1.r1, S2.r2, q9+1), but neither with &.rl nor with &x2. In other words, an order is imposed by the assembling possibilities. This happens only when S3.13 and asb(S1 .q, S2.r2, (02-1) have exactly a common reference. 100 J.-E Dufourd et al./Artij?cial Intelligence 99 (1998) 73-l 19 two subsystems When, as it is often the case, the geometric universe does not allow the definition of than a the previous situation cannot happen. The frame to the of the In these conditions, is more restrictive, but the strategy can be simplified only if they have strictly more in the case of algebraic are assemblable independence reference. satisfied thanks in general exact references, common of the assembling following underlying theorem, polynomial equations (see Sections 3.3 and 5.3). Theorem 5.3 (Assembling located subsystems stemming from a well-constrained modisp system S. If Sl.rl and and this system is itself assemblable S2.r2 are assemblable Let SI .rl, S2.r2 and S3.q be three solved possibilities). with S3.r3, then S3.q (case 1) or with S2.73 (case 2). into asb( Sl .rI , &.r2,92+1) is assemblable with Sl.rl contain if &.r3 reference S2.r2, rp2,1), reference. For S3.r3, is assemblable with asb(Sl.rl, strictly more than a common I), with S2.q this reference (case 2) or else with asb( Sr .rI, S2.r2,4~_1) Proof. By hypothesis, subsystems common with St .rl (case in its entirety. The latter case is impossible, because common would border of asb( Sl.rl, &x2, false by hypothesis, because and we are in general equations Si.ri the metric of this which impose, by Proposition 4.22, that the solving of S3.r3 needed a constraint of the the borders of Sl.rl and S2.q. Now, this is this assembling was not available at the construction of &.rs of the underlying polynomial (see Section 3.3). The two other cases enable S3.r3 to be assemblable with in S3.r3 and in asb(S1 .rl, &.r2,402+1), in the case of algebraic (case 1) or with S2.q to be defined both (~2_.,1), excluding the two is it would enable independence (case 2). 0 Thus, the assembling can be done according to different strategies, particularly when a is completely decomposed the assembling system In the first case, instance, achieved before a local solving of the correspondent and locally solved or, conversely, as soon as possible. is as early and in the second one at the latest. For is by graph in triangles and an assembling of the constraint subsystems [ 411, a complete decomposition in reconstruction. 5.5. Exhaustive strategies In our framework, we have a finite set of possible initial a finite set of local solving methods, and, at each step, a residual subsys- to finitely enumerate in all the possible is said exhaustive. Our initial unknowns. Therefore, of all local methods it is possible in all references into play such an enumeration references-using the unknowns-, tem constraining all the triggering possibilities subsystems. A strategy bringing prototype use such a strategy. only When the local methods are correct and complete, whatever is the same. That is, either all the strategies used, the result system or all of them yield solving methods are at the best correct, so the global resulting incomplete. the set of all the numerical solutions. the exhaustive strategy fail to solve the constraint the local is itself In practice, solving method J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 101 Note that, although the assembling method is correct and complete, even if the local methods ara correct and complete and the triggering well-constrained systems. This comes letting unsolved constraints, what limits strategy is exhaustive, -on the subsystems that they determine the global solving method can fail to solve the lack of power of the local methods theirselves- from the possibilities of assembling. 6. A prototype description This section describes the characteristics of the prototype. a formal solving engine which works with several It is based on the assembling local resolution idea and integrates methods. 6.1. Geneml presentation Our prototype has been designed within to draw sketches, has been augmented [ 33,34,36] based modeller is used metric constraints. Topological deduced construction module added to the modeller. constraints, the framework of a project on a topology- named Topofl [4,5]. The interface of the modeller, which to enter are and adjacency constraints, i.e. incidence to enable the user in order from the sketches. So, the prototype can be seen as a formal constraint-based Our approach local solving methods is based on the assembling different each method prototype had three local solving methods. Two of them are knowledge-based The third one builds equation our prototype of in Section 5, the systems. systems solved by the Newton-Raphson method. Thus, federated by the prototype. As explained local reference. For this experimentation, of subfigures obtained by application is applied from a fixed initial to a multi-agent is similar system. Initially, a common base of facts contains i.e. the description of the geometric objects and the constraints. Every solving method accesses and updates system. During a the base, which can be seen as the blackboard solving phase, about the subfigures already constructed. the system of constraints, contains also border of our multi-agent i.e. informations the blackboard informations, strategy, following reference, an exhaustive the procedure In the prototype, a general procedure, local solving and applies an early assembling a common strategy for two main reasons. The first one is to avoid the production of irrelevant subfigures modification the prototype method and performs assembling the strategy. Each time two subfigures have them. We choose an early little is to allow a dynamic is deduced, it stops the running is no possible assembling. Theorem 5.2 attests informations. Each time a constructive definition in other bigger ones. The second left after such an assembling to detect a possible the assembling. of the border In this case, immediately that there assembles contained launches reason phase. tries At each step, the running method extracts from the blackboard not yet solved. Next, knowledge. The assembling phase updates is achieved when it completes the problem the blackboard the blackboard is solved or no new deduction the part of the problem step by step with new pieces of too. The whole formal solving can be produced. Note 102 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 that the Newton-Raphson However, non-convergence. for a well-constrained the solving may fail in the numerical phase, due to the classical method ensures the success problem. reasons of The result of the formal phase is a general construction plan which will be numerically conditions results are not correct due to the use of necessq is necessary interpreted. Some numerical by some local solving methods such as the knowledge-based the constraints checks all the constraints, redundancy numerical of solutions. has no harmful effect and over-constrained solution to filter the results. At this stage, our protoype systematically used or not used in the solving process. This way, constraint if no remains. Finally, heuristics are used in order to narrow down the set cases are finally noticed systems. A verification of Like the modeller Topojil, the prototype was developed in C language Graphics workstations using the GL graphic blackboard and our local resolution methods. More technical details are given library. The next sections briefly present for Silicon the in [ 38 3. 6.2. Geometric universe and blackboard For several reasons explained constraints. Thus, all constraints appear are predicative in our geometric universe only to express terms of depth 1. Function the construction. in [ 1, 10,221, we only use predicates to formalize the symbols symbol fdist symbol distpp : Point x Point -+ Length previously used Example 6.1. The function the relation symbol distpp : Point x Point x Length --+. However, we sometimes becomes need the function in a construc- tion plan. The relation symbol angle : Point x Point x Point x Point x Angle --t is needed initl : Real -+ Length to express constraints between : converts a real number Angle + Angle, the value mod- ulo 2rr in l-n-, to express respectively r] of an angle. : Point x Point -+ Length to define lengths into a length. We also have invangle, two bi-points. The function symbol suppangle, modangle the supplementary, the opposite, Unknowns represent geometric terms and parameters of the system, seen as variables in Section 3, are considered is also formalized with a closed in the prototype as typed logic constants. Each constraint term, which is a fact. Arguments of facts are either unknowns or parameters predicative lengths and so on. The which of in the unification depth of predicative logic constants are set in their terms. In order to avoid functional place. From a syntactical is a synonym of a functional term. From a semantical point of view, it is a geometric object defined by a functional term. lines, circles, reasons, particularly objects, is 1 for efficiency point of view, such a constant terms in constraints, i.e. points, the function of 4.5 units between Example 6.2. With constraint distpp(pl of type Angle, an angle constraint of -(a (p3p4) is written cy2 = invangle(suppangle( symbols of Example 6.1, a distance and , ~2, k), where k is a logical constant of type Length. If LYE and 02 are constants (~1~2) and and predicate two points pl and p2 is written k = initZ(4.5) - cyl) between cq )) and angle(pl, p2,p3,p4, (~2). the directions J.-E Dufourd et al. /Art$cial Intelligence 99 (1998) 73-119 103 Initially, contains it produces the blackboard adds the local construction private facts are eliminated when the running to a local base of facts. The border of a construction of metric is obvious combinatorial is only implicitly terms, as explained that the complete represented. in Section 4, but just by predicative evaluation of the border terms. Moreover, it is not relevant due to a risk of the border explosion of the number of facts. This is why, in our prototype, the statement of the problem. A solving method and some new facts which are private. These solving method stops. So, they correspond is not expressed by the equality Indeed, to limit the number area, because the blackboard is not just a memory access clude deduction mechanisms of explicit pieces of knowledge. These functions manage both the border and some particular properties of constraints. are realized For instance, representa- by deduction mechanisms tion, we need particular data functions to the local solving methods, which only see predicates facts. relation So, for the internal among other properties, permutativity these ones are hidden by access for the angle constraints. of depth 1 in the base of and Chasles types. But, functions in- 6.3. Knowledge-based systems The first two local solving methods are geometric in the way of theory and differ from each other and infer from initial constraints. The deduced relations are either defining incidence of a geometric locus or new constraints. The construction [ 11. They are based on the same Aldefeld by their soilving strategy. Both use the method of loci new relations relations giving a geometric object from dejining incidence [ 11,18,32,42,47,48] formal methods is inferred relations. logical Example 6.3. A defining “point p is on circle c”. If line 1 and circle c are already defined, is then defined by their intersection. is for instance incidence relation “point p is on line I” or of p the construction The axioms of our logic theory have the form of either closed atoms or implications with variables. Variables others, only present correspond involved in the conclusions in the premises are always universally quantified. The are existentially quantified. They of implications, to the naming of functional terms, as explained in Section 6.2. The inference the synonyms. The functional meaning of some relation symbols objects, which are put in the same equivalence detect synonymous rules are the modus ponens and the paramodulution used to deal with like distpp is used to class. Both of lthe knowledge-based systems contain production rules corresponding to the implications of the logical theory. Each production rule has the form ifP1,. . . , Pn then Cl,..., Cm conditions D 1, . . . , Dp, where the Pi are premises, The conclusions the Ci are conclusions, and the Di are extra-logic conditions. are either predicative terms of depth 1 or definitions like Conditions construction. of conditions Applying validate 104 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 time such a definition where f is a function symbol, in size each replaced by a constant, symbols premises. are not the in logic is produced. the 2; and 2 are variables. The construction plan increases and the constant. Since the function the If Z is existentially theory, definitions to instantiate term defines are never quantified reused then the functional rules do not modify of the geometric in the production They avoid a proliferation the verification tests whether objects are already defined or not in the local reference. for the variables if the constants a rule yields new relations only the meaning of irrelevant substituted relations. Indeed, the conditions. The blackboard the local base of facts initialized construction plan, recorded records all the deductions. The part of the blackboard corresponding to for the running method increases with new relations. The The two knowledge based-systems strategy, in relation with non-termination search strategy, loops. Thus, and, for this geometric the production framework, in the general blackboard, is extended with new definitions. have the same logic theory but differ by their search risks. Indeed, we have noticed that, with a usual rules used to solve most of our problems do not produce this kind of rules, the most efficient strategy is the depth-$rst search. the knowledge base of the first system only contains the need to have a more complete module of geometric construction in our second knowledge-based loops. In this system, a breadth-Jrst However, to consider produce search tree is used. It is not complete, but suffices in most cases to achieve sophisticated constructions. led us system more complicated that often search with a limitation on the depth of the rules Thus, we have two levels of knowledge-based systems. But, problems are solved with solving, and, when it fails, the second level system is required. the rules of the first level only. Therefore, in CAD, most of the it can begin a 6.4. Newton-Raphson method [ 39,431 is very useful The Newton-Raphson method finds a numerical solution for a non-linear system. This method equation most of the constraints as convergence failure. So, when it is possible, we prefer others methods. problems, unicity of the solution set in this area. However, in CAD software because it has many well-known it can solve drawbacks, found and lack of information after a contains Our prototype the Newton-Raphson to raise and to show how it can federate several very different methods. Raphson method fail. When cases, constraint by Newton-Raphson, to solve a few parts of the problem determined and the other methods can work anew. to continue a solving when the two knowledge-based the problem will certainly be totally solved. However, its solving capability In fact, the Newton- systems in many from only one it is enough it is running, is called method One can wonder why such a numerical method is used in a purely formal framework. In fact, in the first formal phase, our method only prepares a formal system of numerical phase. The Newton- equations, which interpretative Raphson method being well known, we only give some indications about the setting up of the equations in the second to be solved. is effectively system solved J.-E Dufourd et al./Art$cial Intelligence 99 (1998) 73-119 10.5 A geometric constraint is chosen by a heuristics working on constraints. Next, a minimal of finding systems. A complete explanation such a minimal system containing this constraint is based on irreductibility system is given in [ 381. the not yet solved is constituted. The way properties of equations A minirnal system can be written {P~[~~,AI,...,P~[X,AI}, where X I= {.rt , . . . , x,} constraints, at work. This system is the set of geometric unknowns is used to produce the global definition and the pi[ X, A] are the XI,..., xn =NR(p1,... ,Pk,XOl,. . . ,x%), where x01, . . . ,x0, are the initial values of the concerned geometric objects extracted from the sketch and NR is the function of the Newton-Raphson resolution. A functions pr,: triangular form is obtained with the projection numerical These definitions defined in Section 3.1 are used are actually added to the construction to extract a numerical In fact, the references plan. system with real unknowns t1, *. . , t, from the minimal system, and the equations .fl(fl*- . . , tnt) = 0, is numerically to,,, deduced functions. This formal system, which is prepared in the formal where f; are polynomial the initial values phase, tl , . . . , t, are the toi,..., real coordinates of the geometric unknowns xi, . . . , x,. So, the Newton-Raphson method is well integrated solved by the Newton-Raphson from nOi, . . . , x0,. When a solution in our formal way of solving by triangulation. method with is found, 7. Some examples We present here three examples In each case, the sketch entered with the modeller Tupofil, that allows us to fix the topology. The the the metric constraints. Our prototype automatically solved with our prototype. names is interactively user interactively geometric objects Then, the solving system produces The solutions gives like points, are also drawn on the screen. lines, circles. into the blackboard. the formal construction plan and solves it numerically. It puts the constraints 106 J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 Fig. 3. Sketch of Example 1. Table 1 Constraint system of Example 1 onl(pl,ll) I point pl is on line I1 onl(pl,l2) onl(p2,12) onl(p3.11) onl(p3,13) onl(p4.13) onl(p4,14) onl(p5.14) onl(p5,15) onl(p6,15) onl(p6.16) onl(p7,12) onl(p7,16) onc(p2,cl) onc(p3, cl) % point p2 is on circle cl 7. I. Example I fixPl(P7.12.P2) distpp(pl,p2,kl) distpp(p7,p2. k2) distpp(p4, p3, k3) dWp(p5,p4, k4) distpp(p’l,p6, k5) disrpl(p5,16, k6) angle(pl,p2,pl,p3,al) angle(p6,p5,~6,~7, a2) angle(p4,p3,~4,~5,a3) tgclP(cl,ll,P3) tgclp(cl, 12,P2) centre(cl,p8) % sets the initial reference % the distance from pl to p2 is kl % the angle of lines plp2, plp3 is al % circle cl is tangent to line 11 at p3 % p8 is the center of circle cl We first return to the introductive intersection example of Section 2. The sketch, where a voluntar- is in Fig. 3. The geometric for points, lines, circles, angles and lengths. The names are not the same as in ily incorrect objects have names chosen by the prototype, pi, li, ci, ai and ki, respectively oriented Section 2. of circle and line has been drawn, straight J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 107 system is extracted The corresponding constraint jCpZ(p7, E2, p2) which plays from the sketch and will be the final reference the constramt local reference with p7 as origin and 12 as x-axis oriented first local reference whole figure. This forces the prototype explanations about newly which the fixation of the metric parameters at the begin of the plan. Next, the construction obtained by successive knowledge-,based Each subplan lies in Table 1. In this table, we can remark the role of our ref( xi,, . . . , xik) and sets a towards p2. In fact, this for the table, plan, is in Table 2. First, we can notice is of three subplans, which are built by the first level to work in a desired way. In the following lie after %. The whole construction elaborated by the prototype, system. is numbered and the corresponding geometric definitions is automatically assemblings introduced symbols in dotted notation. For instance, by the number named p7. .I. A subplan begins with the definitions of a point and an oriented a local reference. For instance, for the subplan 1, we have: are suffixed the definition of p7 in the subplan 1 is line to set ~7.1 q : initp(-296.958130, -248.927719) 12.1 = initd(p7.1,1.561722) The local origin constraintfixpZ(p7,12~2) at their values and 3, this reference appears and k10 by fdist: in the construction in the sketch by functions is at (0,O) except for the first subplan, which solves fixing point ~7.1 and line 12.1 passing the particular through ~7.1 and ~2.1 initp and ini&. Note that, in the subplans 2 for the benefit of a new one. The border subplan of the subfigure 3 with the definitions of lengths k9 is relaxed constraint k9 =filist(p7.1,p3.1) k10 =fdist(p5.2,p3.2) These definitions are extracted from the subplans 1 and 2, as indicated by the suf- fixes .l and. .2, respectively of circles ~15.3 and ~16.3, whose intersection gives ~3.3. for points p7, p3 and p5, p3. They are used in the definitions The complete construction The formal execution time ence. Note that the formal solution given in Section 2, which was obtained by fixing another reference is finally brought back by displacements founded by the prototype in the first refer- from the one for the whole figure. Indigo 2 workstation. solutions. The topological are satisfied by some of these, like those in Fig. 4, which the The interpretation with the user’s data yields several numerical constraints have been selected. Note statement, even if it is probably not in accordance with the user’s wishes. Other solutions, are eliminated. which do not satisfy is 0.15 set on a Silicon Graphics that the second drawing in this figure perfectly and the dimensions the constraints, is different respects 7.2. Example 2 is an example where usual graph decomposition methods Here we propose based systems, particularly two ways of solving. At first, the prototype the powerful fail and for which the two knowledge- so-called parallelogram rule [ 54,551. Next, requires 108 J.-E Dufourd et al./Artijcial Intelligence 99 (1998) 73-119 Table 2 Construction for Example 1 % fixing of the metric parameters k5 = initl(250.000) k4 = initl( 158.000) n3 = inita( 1.413717) k3 = initl( 304.000) a2 = inita(2.809980) k2 = initl(200.000) kl = initl(300.000) nl = inifa(O.558505) k6 = initl(70.000) % subplan suffixed by .I -248.927) ~7. I = initp( -296.958, 12.1 = initd(p7.1,1.561722) u 12 = invangle ( suppangle ( a 1) ) ~3.1 = mkcir(p7.1, k2) ~2.1 = interlc(l2.1, c3.1) ~4.1 = mkcir(p2.1, kl) ~1.1 = interlc(l2.1,c4.1) (17.1 = inita( 1.570796) 17.1 =lpla(p2.1,12.1,a7.1) ~~9.1 = bissect(a1) 18.1 = lp[u(p1.1,12.1,n9.1) ~8.1 = interll(l8.1.17.1) % initialization of length k5 % initialization of angle a3 % initialization of point ~7.1 % initialization of line 12.1 % definition of angle al2 % circle with centre ~7.1 and radius k2 % intersection of 12.1 and ~3.1 % line passing through ~2.1 and making angle ~7.1 with 12.1 % a9.1 is half al % intersection of 18.1 and 17.1 11.1 = lppa2(pl.l,p2.l,pl.l,a12) % line passing through ~1.1 and making angle al2 with ~1.1~2.1 % circle with centre ~8.1 and passing through ~2.1 cl.1 = mkcir2(p8.1,p2.1) ~3.1 = inferlc(ll.1,cl.l) 055 = inv_angle( a3) % subplan suffixed by .2 ~5.2 = initp(0.000,0.000) 14.2 = initd(p5.2,O.OOO) ~6.2 = mkcir(p5.2, k4) ~4.2 = interlc(l4.2, ~6.2) ~7.2 = mkcir(p4.2, k3) 13.2 = lpla(p4.2,14.2, a55) ~3.2 = interlc(l3.2, ~7.2) N 105 = inv_angle( n2) % subplan suffixed by .3 p7.3 = inifp(0.000,0.000) 16.3 = initd(p7.3,O.OOO) 19.3 = ldl(16.3, k6) cl 1.3 = mkcir(p7.3, k5) 1~6.3 = interlc(16.3,~11.3) 15.3 = lpla(p6.3,16.3, a105) J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 109 Table 2 - continued p5.3 = interll(l5.3.19.3) k9 = fdist(p’7.l,p3.1) kl0 = fdist(p5.2, ~3.2) ~15.3 = mkc,‘r(p7.3, k9) ~16.3 = mkcir(p5.3, k10) ~3.3 = intercc(cl6.3, ~15.3) % definition of the displacement depl.3 from 2 to 3 depl.3 = make_dep_pp(p3.3,p5.3,p3.2,p5.2) % use of displacement depl.3 ~4.3 = tran@(p4.2, depl.3) % now the subplan .l is completed % definition of the displacement dep2.1 from 3 to 1 dep2.1 = muke_dep_pp(p3.l.p7.1,p3.3,p7.3) ~6.1 = transfi(p6.3.dep2.1) ~5.1 = tran.@(p5.3,dep2.1) ~4.1 = tran@(p4.3,dep2.1) % intersection of ~16.3 and ~15.3 % displacement of ~4.2 into ~4.3 % displacement of ~6.3 into ~6.1 % displacement of ~5.3 into ~5.1 % displacement of ~4.3 into ~4.1 b ‘:i::, Fig. 4. Two numerical solutions for Example 1. Fig. 5. Sketch of Example 2. 110 J.-E Dufourd et al. /Artijicial Intelligence 99 (1998) 73-119 system of Example 2 Table 3 Constraint onl(pl,11) onl(pl,l2) onl(p2.13) onl(p2.14) onl(p3,15) onl(p3,16) onl(p4,14) onl(p4.16) onl(p4,17) onl(p5,12) onl(p5,17) onl(p5,lS) onl(p6.18) onl(p6.19) onl(p7,11) onl(p7,19) onl(p7,110) onl(p8,13) onl(p8,15) onl(p8,llO) distpp(p5,pl.kl) distpp(p8,p2, k2) dWp(p4, ~2, k3) disrpp(p3, p8, k4) distppW,p3, distppW,p4, k5) k6) distpp(p6,pS,k7) ~wp(p7,p6, k8) distpp(p8, ~7, k9) angle(pS,p7,p4,p5,al) angle(pS,p2,p7,pl,a2) angletp6,~7,~6,~5,a3) angWp3, ~8, p3,p4, n4) we forget Newton-Raphson by the prototype is presented in Fig. 5. the second level knowledge-based the system, and method. The sketch with the names of the geometric objects chosen the prototype requires in Table 4. Note The system of geometric constraints they correspond reference without discovering is in Table 3 and the first geometric construction that the subplan numbers 2, 4, and 6 are not visible, solving attempts, which have aborted after fixing new definitions. Both of the knowledge-based is presented because a local systems are required. The first level system builds of the subplan 1 and the subplans 3, 5, 7. Subplan 1 is completed with the following definitions deduced by the second level system applying the parallelogram the beginning to partial rule. k18 =fdist(p8.3,p4.3) k19 =fdist(p7.7,p5.7) ~65.1 = mkcir(p8.1, k18) 112.1 = Ippa(p7.l,p8.1,~1) ~68.1 = mkcir(p7.1, k6) ~10.1 = interlco(ll2.1,c68.1) % intersection of 112.1 and ~68.1 ~69.1 = mkcir(pl0.1, k19) ~4.1 = intercc(c69.1,~651) Let us explain quadrilateral distance k6 between p5 and p4, and the angle al between oriented ~8~4~5~7 this fragment of plan in which in the subplan numbered the prototype to construct tries by 1. The points p7 and p8, the the lines p8p7 and p4p5 J.-E Dufourd ef al. /Artijicial Intelligence 99 (1998) 73-l 19 111 Table 4 Construction 1 for Example 2 k9 = initl(200.000) k8 = initl( 100.000) k7 = inirl( 100.000) k6 = initl(200.000) k5 = i&1( 100.000) k4 = inirl( 100.000) n4 = inita(2.024582) a3 = inita(-2.164208) al = inita(0.034907) k3 = initl( 150.000) k2 = i&1( 180.000) kl = initl(210.000) a2 = inita(-3.141593) ~8.1 = initpl O.OOO,O.OOO) 110.1 = inird(p8.1,O.OOO) cl.1 = mkcir(p8.1, k9) ~7.1 = interic(ll0.1,cl.l) p8.3 = inilp~:0.000,0.000) 15.3 = initd( p8.3,O.OOO) ~10.3 = mkh(p8.3, k4) 1~3.3 = interic(l5.3, c10.3) cl 1.3 = mkbr(p8.3, k2) ~12.3 = mkcir(p3.3, k5) 16.3 = lpla(p3.3.15.3, a4) ~4.3 = inteh(f6.3. ~12.3) ~13.3 = mkcir(p4.3, k3) ~2.3 = intercc(cl3.3,c11.3) ~4.5 = initp (0.000, 0.000) 17.5 = inird(~4.5,O.OOO) ~21.5 = mkcir(p4.5, k6) p5.5 = interlc(l7.5, c21.5) a412 = h-angle ( a3) ~5.7 = inifp(O.OOO,O.OOO) 18.7 = initd(p5.7,O.OOO) ~30.7 = mkcir(p5.7, k7) ~6.7 = interlc(l8.7, ~30.7) ~33.7 = mkcir(p6.7, k8) 19.7 = lpla(p6.7,18.7, a472) ~7.7 = interlc(l9.7, c33.7) k18 =fdist(p8.3,p4.3) k19 = fdisr(p7.7,p5.7) ~65.1 = mkcir(p8.1, k18) 112.1 = lppa(p’l.l,p8.1,al) ~68.1 = mkcir(p7.1, k6) ~10.1 = inrerlco(ll2.1,c68.1) ~69.1 = mkcir(pl0.1, k19) ~4.1 = intercc(c69.1,~65.1) depl.1 = make_dep-pp(p4.1,p8.l,p4.3,p8.3) ~3.1 = transfp(p3.3,depl.l) ~2.1 = wansfi(p2.3,depl.l) 11.1 =lppa2(p7.l,pS.l,p2.1,a2) 17.1 =lppa2(p4.1,pS.l,p7.1,al) dep2.1 = make_deppl(p4.1,17.1,p4.5,17.5) ~5.1 = transfi(p5.5,dep2.1) dep3.1 = make_dep_pp(p5.l,p7.l,p5.7,p7.7) ~6.1 = transfi(p6.7.dep3.1) ~70.1 = mkcir(p5.1, kl) pl.1 = inrerlc(ll.l,c70.1) are known. By the two first lines of the fragment, are constrained by the distances k18 and k19 deduced of subplans thanks auxiliary permits 3 and 7. The quadrilateral in such a way that ~4~5~7~10 point ~10 is built to directly obtain p4. The second geometric construction from two other edges of the quadrilateral informations the border to the easy construction is a parallelogram. of an This point is presented in Table 5. The first level knowledge- of the subplan 2 and the subplans 3, 5, 7. The local formally the subplan 2, giving is used to complete based system builts the beginning method based on Newton-Raphson the definitions of ~5.2 and ~7.2: ~5.2 = NR(0) ~7.2 = NR(0) 112 J.-E Dufourd et al. /Art$cial Intelligence 99 (1998) 73-119 Table 5 Construction 2 with Newton-Raphson for Example 2 k9 = initl(200.000) k8 = initl( 100.000) k7 = initl( 100.000) k6 = initl(200.000) k5 = initl( 100.000) k4 = initl( 100.000) n4 = initu(2.024582) a3 = inifa( -2.164208) al = inita(0.034907) k3 = initl( 150.000) k2 = initl( 180.000) kl = initl(210.000) a2 = inita(-3.141593) ~8.2 = initp(O.OOO,O.OOO) 15.2 = initd(p8.2,0.000) ~6.2 = mkcir(p8.2, k4) ~3.2 = interlc(l5.2, ~6.2) ~7.2 = mkcir(p8.2, k2) ~8.2 = mkcir(p3.2, k5) 16.2 = lpla(p3.2,15.2, a4) ~4.2 = interlc(l6.2, ~8.2) ~9.2 = mkcir(p4.2, k3) ~2.2 = intercc(c9.2, ~7.2) ~67.2 = mkcir(p5.2, kl) ~1.2 = interlc(ll.2, ~67.2) ~8.3 = initp(O.OOO,O.OOO) 110.3 = initd(p8.3,O.OoO) ~12.3 = mkcir(p8.3, k9) ~7.3 = interlc(llO.3, ~12.3) ~4.5 = initp(O.OOO,O.OOO) 17.5 = initd(p4.5.0.000) ~26.5 = mkcir(p4.5, k6) ~5.5 = interlc(l7.5, ~26.5) a908 = invangle(a3) p5.7 = initp(O.OOO,O.OOO) 18.7 = initd(p5.7,O.OOO) ~35.7 = mkcir(p5.7, k7) ~6.7 = interlc(l8.7, ~35.7) ~38.7 = mkcir(p6.7, k8) 19.7 = lpla(p6.7,18.7, a908) ~7.7 = interlc(l9.7, ~38.7) ~5.2 = M(O) ~7.2 = M?(O) % Newton-Raphson method depl.2 = make-deppp(p7.2,p5.2,p7.7,p5.7) ~6.2 = transfp(p6.7.dep1.2) 11.2 = lppa2(p7.2,~8.2,~2.2, a2) Fig. 6. Four solutions for Example 2. J.-E Dufourd et al. /Art$icial Intelligence 99 (1998) 73-119 113 Cl Pll Fig. 7. Sketch of Example 3. Table 6 Constraint system for Example 3 onl(p1, II) onl(pl,l2) onl(pl,l3) onl(p2,14) onl(p2,12) onl(p2.15) onl(p3.13) onl(p3,16) onl(p3,17) onl(p4.15) onl(p4,17) onl(p4,18) onl(p5,19) onl(p5,llO) onl(p6,llO) onl(p6,lll) onl(p7.19) onl(p7,112) onl(p8,113) onl(p9.112) onl(p9.113) onl(plO,lll) onl(plO, 112) onl(pll,ll2) onl(pll,ll4) onl(pl2,114) onl(pl2,115) onl(pl3.11) onl(pl3.116) onl(pl3.115) onl(pl4,117) onl(pl5,117) onl(p15,118) onl(pl6.14) onl(pl6,116) onl(p17,118) onl(pl7.116) onl(pl8.119) onl(pl9.119) onl(pl9.18) onl(pl8.16) onc(pl8,cl) onc(pl9, cl) onc(p8, c2) onc(pl4, c2) centre(cl,p20) centre(c2,p21) diqvptp2,pl,kl) distpptp2,pl6, k2) distpp(p3,pl.k3) distpp(p4, ~2, k4) distpp(p4, ~3, k5) distpp(pl9, ~4, k6) distpp(pl9,p18, k7) distpp(p9,p8, k8) disrpp(p7,p9. k9) distpp(p6,p5, k10) distpp(plO,p6, kll) distpp(plO,pll,kl2) distpp(pl2,pll,k13) distpp(pl3,pl2, k14) distpp(pl5,p14, k15) distpp(pl7,pl5, distpp(pl7,pl6, k16) k17) angle(p3,pl,p4,p2,al) angle(p16,p2,p16,p13,a2) angle(pl,p2,pl,pl3,a3) angle(p2,pl,p2,~16,a4) angle(pl8,p19,p18,p3,~5) angle(p19,p18,p19,p4,a6) angleCp5,p7,~5,~6,a7) angle(p6,plO,p6,~5,a8) angle(plO,p7,plO.p6.a9) angle(p9,p8,~9,~7,alO) angle(pll,pl2,pll,plO,all) angle(p12,p13,p12,pll,ul2) angle(pl5,pl7,pl5,pl4,al3) angle(p17,p16,p17,pl5,al4) radius(c1, k18) radius(c2, k19) tgclp(c2,113,p8) In the numerical pass, the call M(O) prepares it. The unknowns solves number 1, 4, 6 correspond once again to aborted solving attempts. are the coordinates the equations system number 0 and of points ~5.2 and ~7.2. The subplans The solving times on our workstation are respectively 1.37 set and 1.12 sec. for the first and the second formal constructions. The prototype provides several solutions 114 J.-E Dufourd et al./Arttjkial Intelligence 99 (1998) 73-119 Fig. 8. Three numerical solutions for Example 3. in Fig. 6. The solving with presented solutions. The resolution with the Newton-Raphson solution of Fig. 6. the knowledge-based based method gives only systems gives all these the first 7.3. Example 3 The third example constraints. The sketch but without constraint system lines, angles and dimensions is in Table 6. is presented is the biggest, with 47 topological and 34 dimensional constraints in Fig. 7 with points and arcs of circles names, formal to simplify. The corresponding names The formal solving time is 2.67sec on our workstation. The numerical interpretation solutions, three of them being shown yields several in Fig. 8. The first and second drawings differ by the choice of the centre of the arc of circle on the left side in the by the user which does not figures. The third is valid but will certainly be eliminated solution. accept a self-intersecting Larger examples with more than 200 constraints have been solved with our prototype. This experimentation can be found in [ 17,381. 8. Discussion classified invariance described The different approaches two main categories, depending into under displacements. in the literature. Thus we content ourselves in geometric construction based on constraints can be roughly they disregard or not the The approaches of the first category have often been them into: to summarily classify like in CAD the work of Alde- [ 1,2] or Suzuki et al. [53], and in CA1 the prototype Pro@ for ruler and and the expert system of polyhedra generation on whether [ 18,47,48] systems, l methods using geometric knowledge-based feld compass constructions described in [37]; J.-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 115 l methods founded on computer algebra, like the Maple-toolbox called Lt-Geol [ 191 and the implementation l methods using numerical attempt in [ 141 of Lebesgue’s method [ 321; iterations, such as the Newton-Raphson of [ 91 used in the Viking system one [35,39], [ 441 or the the method of linear approximation method based on homotopies of [30]; l methods based on propagation of degrees of freedom restriction graph or in a collection of objects, like in the picture editors Sketchpad [6], PictureEditor ThingLub often completed process. Note that Juno-2 uses sophisticated and separate constraints by numerical [ 271, Juno-l ones for or Juno-2 [2.5]. These methods the case of failure of the propagation repack to localize, unpack, techniques in a constraint [ 521, are The approaches of the second category, which use displacements, to the theory we have outlined to be solved by the Newton-Raphson method [ 251. are more or less in Sections 3 and 4. They can use the to common local or formal calculus. Moreover, to metric in these approaches, which limits the resolution power. locally and assemble partial solutions In fact, all known approaches but ours use a unique or is based on numerical to our framework, is often reduced is essential thanks related closely methods of the first category references and displacements. method, which is elementary the notion of border, which constraints on common Here we briefly review references them. The approach of Owen [41] consists in describing a constraint objects of degrees of freedom system by a constraint to 2, more equal restricts the geometric are geometric the pairs of articulation radius and the constraints lines and circles of given universe, have a known radius. The edges are binary constraints. for the objects as well as for the constraints. graph. The vertices precisely points, That Thus, circles necessarily are so simple the egality of two lengths cannot be taken into account. The graph is decomposed top-down way, searching tri-connected until solving is limited components. The process of assembling Simple ruler and compass. For instance, by its three perpendicular not solvable by his method. The class of solvable problems of the constructions with ruler and compass. and adding virtual bonds if necessary, triangles or isolated edges can be obtained. The local and they can be with a triangle which is defined into the formalism of Owen, but is is therefore a strict subset if there are tri-connected is the inverse operation of the decomposition. graphs are not solved by this method, components, to triangles the problem of constructing isolated edges and fails heights can be translated tri-connected that in a though to numerically Lamure and Michelucci [ 301 also follow an approach by graph decomposition. They use homotopies is more gene,ral that the previous one, for the geometric universe as well as for the class to the terminal of solved problems. Although solving method, contrary this approach has the usual drawbacks of the numerical the processes of assembling. Their method the homotopy gives a certain to the Newton-Raphson iterative ones. method, stability realize The approach of Bouma et al. [7] consists in solving subsystems into subfigures, or the help of assembling clusters, with a constraint with priori, but their number can easily be extended. They such as in the approach of Sunde, and more complex templates graph and displacements. The templates include a triangle configuration, systems, which are triangulated are given a in a bottom-up way. The figures are then combined 116 J.-E Dufourd et al. /ArtiJcial Intelligence 99 (1998) 73-119 by a mechanism solves triangular equations. The emphasis using Grobner bases. The local solving method is very simple. It systems by a method of loci which is directly translated into algebraic is therefore put on the method of assembling. Our approach, in common with that of Bouma et al., employs systems with different the use of displacements, and triangular is feasible by an exploitation method, references, is formal, while that of Bouma et al. stays numeric. founded on the use of common strategy it solves non- but has other major differences. First, local methods which are as powerful as possible. That the bottom-up of borders of any complexity. Second, its assembling is very simple. Third, our approach The approach of Sunde [ 50,5 11, extended by Verroust et al. [ 54,551, corresponds to strategy on a graph. The vertices are points or segments and the edges are and of angles. The graph is progressively made rigid, starting In this extreme is reduced the by CD-sets and a bottom-up constraints of distances from the edges and using production approach, where to its simplest expression. Because of the use of ad hoc data structures different kinds of constraints, mainly distances and angles constraints CA-sets, rules to assemble the rules do most of the work, the local solving method approach can only treat a rather restricted geometric universe. two subfigures. this interesting to manage All these methods have the drawback of encoding in the form of a constraint on the geometric is not general and imposes universe. Thus, the fact that circles must have fixed radii is not an usual CAD constraint, but it is present only to satisfy constraints which are imposed by the graph structure. a geometric problem restrictions graph, which allowing To conclude this discussion, it seems the more local solving methods are advanced, the less the assembling methods need to be developed, and vice versa. We prefer a simple assembling the solving power or to dedicate the heart of the system, which the alternative method needs applicative domains, which seems more difficult. the integration of complex methods. This allows us to increase it to a specialized domain, without having to reconsider assembling. To do the same, them to is based on an immutable to define new assembling templates or to dedicate 9. Conclusion framework We have presented a mathematical to formalize the displacements the solving of constraint in a geometric universe. systems which are well-constrained modulo From this study we have developed a formal solving approach for the CAD area by local and assembling. We have indicated how constraints of reference, solving, displacement which are added for a local solving, for a displacement. We have studied the essential Finally, we have shown how this approach can be used in a prototype topological-based modeller. and the different notions of the constructions. integrated logic, which are the foundations role of the border of subplans simply and to directly prove in the achievement of our approach, the correctness are relaxed into a geometry Classical us to express completeness is necessary, can integrate any of the solving methods proposed allow and in terms of graphs it in the literature and can easily extend of the solving by assembling. Because no transformation this framework allows us to work in any geometric universe. Moreover, L-E Dufourd et al. /Artificial Intelligence 99 (1998) 73-119 117 the principle its solving formal, our approach can also use numerical methods. scope without reconsidering of assembling. Thus, although One can ask about the performances with specialized problems. For such applications, frequent and unnecessary displacements. Therefore, when simple scale of priorities. included of software based on this approach when dealing an unadapted method could lead to the choice of a good solving method, than our heuristic in our system, could be due to a more sophisticated In the future, we will expand the possibilities the notion of coordinate system-or of assembling to extend that this daunting Less specifically, or not, where an algebraic group of transformations more general group acts. step will be simplified with the help of our assembling our framework in 2D and prepare the transition techniques. for other universes, geometric than the displacements seems to be convenient Our prototype must be enriched by new methods, solving strategies, heuristics reference, in order to 3D. We hope and selecting methods and clever strategies triggering the use of the methods strategy. Moereover, automatic completion by allowing the under-constrained of the constraint the definition of articulated Our prototype will need to be better integrated is today. Thus, our 2D frame must be extended Topojil. Moreover, designed and realized. For instance, modified, especially by taking in the light of our experiment, into account the constraints to place can be revised the references. Besides, in a parallel and cooperative cases must be taken system to make it well-constrained, in account either by as in [2], or for the mode of systems, as in [ 281. in the TopoJl modeller than it to take advantage of the 3D facilities of a more convivial user interface can be entered or can be better visualized, [4,5] implicit ones of such a modeller will consist [ 21. A final, but natural extension of geometric objects, particularly parametrization An application would different of animated a rich plans. then be the building of objects with the same topology, but with forms and dimensions. Another one, as in [28,29], would be the generation sequences by a step by step progression of one of the parameter values. in managing in terms of our construction References’ [ l] B. Aldefeld, Variations of geometries based on a geometric-reasoning method, Computer-Aided Design 20 (3) (1988) 117-126. [2] B. Aldefeld, H. Malberg, H. Richter, K. Voss. Rule-based variational geometry in Computer-Aided Design, in: D.T. Pham (Ed.), Artificial in Design, Springer, Berlin, 1992, pp. 27-46. Intelligence de geometric-Cabri-Geometre, [ 31 Y. Baulac, Un micro-monde 1990. Grenobk, [4] Y. Bertrand, J.-F. Dufourd, Algebraic 56 ( 1) ( 1994) 29-60. [ 5 ] Y. Bertrand, J.-F. Dufourd, J. Francon, P. Lienhardt, Algebraic Vision---GMIP specification Ph.D. Thesis, Universite J. Fourier, of a 3D-modeller based on hypermaps, Computer in geometric in: Proceedings TAPSOFT Conference, Lecture Notes in Computer Science, Vol. 668, Springer, specification and development modeliqg, Berlin, 1993, pp. 75-89. [6] A. Borning, R. Duisberg, Constraint-based tools for building user interfaces, ACM Trans. Graphics 5 (4) (1986) 345-374. [ 71 W. Bouma, Design :27 (6) I. Fudos, C. Hoffmann, (1995) 487-501. J. Cai, R. Paige, A geometric constraint solver, Computer-Aided 118 J.-E Dufourd et al. /Artijicial Intelligence 99 (1998) 73-l 19 [81 L91 (101 r111 [I21 [I31 for constraint geometric objects defined by constmints, three-dimensional in Interactive 3D Graphics, 1986, pp. 11 l-129. B. Brilderlin, Constructing ACM Siggraph Workshop L.G. Bullard, L.T. Biegler, Lp strategies 1989, pp. 69-84. A. Bundy, Computer Modelling of Mathematical Reasoning, Academic Press, London, 1983. M. Buthion, Un programme RAIRO Informatique 13 (1) J.-C. Carega, Theorie des Corps-La N. Carver, V. Lesser, Evolution of blackboard I-30. architectures, Expert Systems with Applications Regle et le Compas, Hermann, Paris, 1989. qui r&out (1979) 73-106. de constructions des problemes formellement simulation, geometriques, 7 (1994) in: Proceedings AIChE Conference, in: Proceedings ] 141 Cl. Chen, Les constructions a la regle et au compas par une methode algebrique, Tech. Rept., Rapport de DEA, Universite Louis Pasteur, Strasbourg, France, 1992. [ 151 S.C. Chou, Mechanical Geometry 1988. Dordrecht, Theorem Proving, Mathematics and its Applications, Reidel, [ 161 J.-F. Dufourd, P. Mathis, P. S&reck, Constructions geometriques in: dam un modeleur a base touologique, - _ systems by assembling, (1995) 398-411. . 1989. editor, (special constraint structures, in: Tracts a geometric geometriques, J.A. Feldman for constrained issue), Artificial proving machine, 4th ACM-Siggraph 1994, pp. 351-361. in: E.A. Feigenbaum, pour les constructions planar euclidean geometric in TCS, Vol. 7, Cambridge University J.-Y. Girard, P. Taylor, Proofs and types, 1.0-a Maple package 1988. Solid Modeling and Applications, Atlanta, GA, ACM Press, New and Thought, McGraw-Hill, New York, 1963, pp. 134-152. International Conference, Springer, Berlin, 1988, pp. 379-391. de CFAO et d’lnformatique Gmphique 10 (4) Revue Intemationale J.-F. Dufourd, P. Mathis, P. Schreck, Formal resolution of geometrical in: Proceedings York, 1997, pp. 271-284. J.-F. Dufourd, P. S&reck, Un systeme a base de connaissances Actes de Ia Conference AFCET-RFIA, L.W. Ericson, Lt-Geol Tech. Rept. 101, INRIA, Rocquencourt, L.W. Ericson, C.K. Yap, The design of Linetool, in: Proceedings Computational Geometry Conference, Lecture Notes in Computer Science, Vol. 333, Springer, Berlin, 1988, pp. 83-92. in: Proceedings Computer N. Fuller, P. Prusinkiewicz, Geometric modeling with Euclidean constructions, Graphics H. Gelemter, Realization of a geometry-theorem (Eds.), Computers Y. Lafont, Press, Cambridge, J.A. Goguen, Modular specification of some basic geometrical constructions, Geometry A. Heydon, G. Nelson, The Juno-2 constraint-based System Research Center, 1994. N. Jackiw, The Geometer’s Sketchpad, Visual Project, Key Curriculum Press, San Francisco, CA, 1992. N. Kin, T. Noma, T.L. Kunii, PictureEditor: and constraints, pp. 83-92. G.A. Kramer, Geometric of Sussex, 1990. G.A. Kramer, Using degrees of freedom analysis First ACM Symposium of Solid Modeling and CAD/CAM Applications, ACM Press, New York, 1991, pp. 371-378. H. Lamure, D. Michelucci, Decomposition Saint-Etienne, S. Lang, Algebra, Addison-Wesley, Reading, MA, 1965. H. Lebesgue, LeGons sur les Constructions Gtom&riques, Gauthier-Villars, P. Lienhardt, Subdivisions of N-dimensional 1989, pp. 228-236. 5th ACM Symposium on Computational Geometry, representation: Topological models P. Lienhardt, generalized maps, Computer-Aided Design 23 ( 1) ( 1991) 59-81. R. Light, D.C. Gossard, Modification of geometric models through variational geometry, Computer-Aided Design 14 (4) a 2D picture editing system based on geometric constructions International Conference, Springer, Berlin, 1989, drawing editor, Tech. Rept. SRC-13la, Digital, in the kinematic analysis of mechanisms, graphs, Tech. Rept., Ecole des Mines, in: Proceedings Computer Graphics a comparison with n-dimensional generalized maps, in: Proceedings Intelligence 37 (1987) 123-153. to solve geometric constraint in: Computational Computer spaces and N-dimensional Ph.D. Thesis, University of 2D constraints (1982) 209-214. in: Proceedings for boundary Paris, 1950. reasoning systems, 1995. 1171 1181 1191 L201 [211 [221 [231 1241 P51 [261 ~271 [281 1291 I301 1311 [321 [331 [341 I351 J.-E Dujiourd et al./Art$cial Intelligence 99 (1998) 73-119 119 [36] M. Miintyll, A note on the modeling space of Euler operators, Computer Vision-GMIP 26 ( 1) ( 1984) 45-60. [37] D. Martin, P. Martin, An expert system for polyhedra modelling, in: Proceedings Eurographics Conference, North-Holland, Amsterdam, 1988, pp. 221-232. [38] P. Mathi;, Un systeme de resolution de contraintes par assemblage en modelisation geometrique, Ph.D. Thesis, IJniversite de Strasbourg, 1997. [39] J.L. Moris, Computational Methods [40 1 T. Noma, T.L. Kunii, H. Enomoto, E. Aso, T. Yamamoto, Drawing in Elementary Numerical Analysis, Wiley, New York, 1983. through input Computer Graphics geometrical International constructions: applications, Conference, Springer, Berlin, 1988, pp. 403-415. specifications and in: Proceedings 141 J J. Owen, Algebraic solution 1st ACM of Solid Modeling and CAD/CAM Applications, ACM Press, New York, 1991, pp. 397- from dimensional in: Proceedings for geometry constraints, Symposium 407. [42] J. Petersen, Problemes de Constructions Geometriques, [43] W.H. Press, S.A. Teukolsky, W.T Werling, B.P. Flannery, Numerical Recipes in CS, Cambridge University .I. Gabay, new ed., 1990. Press, Cambridge, 1992. interactive [44] D. Pugh. Using sketch University, Pittsburgh, PA, 1993. interpretation to design solid objects, Ph.D. Thesis, Carnegie Mellon 1451 D. Roller, F. Schonek, A. Verroust, Dimension driven geometry in CAD: a survey, Tech. Rept., LIENS, Ecole Normale Sup&ieure, Paris, 1988. [46] P. S&reck, Automatisation des constructions geometriques a la regle et au compas, Ph.D. Thesis, [47] P S&reck, Universite de Strasbourg, Implantation Revue d’tntelligence Artilicielle 8 (3) 1993. d’un systeme a base de connaissances ( 1994) 223-247. for solving geometric [48] P. S&reck, A knowledge-based constructions problems, IrEds.), Proceedings 7th International Conference on Systems Research, Lasker Cybernetics, 1994, pp. 19-24. in: J.W. Brahan, G.E. and Informatics pour les constructions geometriques, [49] J.R. Shoenfield, Mathematical Logic, Addison-Wesley, Reading, MA, 1973. [50] G. SundIe, A CAD system with declarative 1986. Geometrc Modeling, Rensselaerville, specification of shape, in: Proceedings IFIP WG 5.2 on [Sl] G. Sunde, Specification of shape by dimensions and other geometric constraints, in: Proceedings Eurographics Workshop on Intelligent CAD Systems, Noordwijkerhout, communication a man-machine Sketchpad: 1521 I.E. Sutherland, 1987. system, in: Proceedings IFIP Spring Joint Computer Conference, graphical 1963, pp. 329-346. [53] H. Suzuki, H. Ando, F. Kimura, Geometric constraints and reasoning for geometrical cad systems, Computer and Graphics 14 (2) [54] A. Verroust, Etude de problemes (1990) 211-224. lies a la definition, la visualisation et l’animation d’objets complexes en inforrnatique graphique, These d’Etat, Universite de Paris-Sud, Orsay, 1990. [55] A. Verroust, F. Schonek, D. Roller, Oriented method for parametrized (1992) 531-535. Aided Design 24 (10) [56] W.T. Wu, Basic principles of mechanical theorem proving in elementary geometries, J. Symbolic computer-aided design, Computer- Computation 4 (1984) 207-235. 