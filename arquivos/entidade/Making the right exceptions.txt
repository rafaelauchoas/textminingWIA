Artificial Intelligence 238 (2016) 96–118Contents lists available at ScienceDirectArtificial Intelligencewww.elsevier.com/locate/artintMaking the right exceptions ✩,✩✩Harald Bastiaanse, Frank Veltman∗Institute for Logic, Language and Computation, Universiteit van Amsterdam, P.O. Box 94242, 1090 GE Amsterdam, The Netherlandsa r t i c l e i n f oa b s t r a c tArticle history:Received 2 December 2013Received in revised form 26 May 2016Accepted 30 May 2016Available online 2 June 2016Keywords:CircumscriptionDefaultsNonmonotonic logicInheritance networksThis paper is about the logical properties of sentences of the form S’s are normally P, and starts from the idea that any logical theory for such sentences should meet the following simple requirement:If the only available information about some object x is that x has property S, it must be valid to infer by default that x has all the properties P that objects with property Snormally have.We investigate how this requirement can be met by theories developed within the framework of circumscription, and specify a constraint – the exemption principle – that must be satisfied to do so. This principle determines in cases of conflicting default rules which objects are exempted from which rules, and, as such, is the main source for the capricious logical behavior of the sentences we are interested in.To facilitate comparison (and implementation) we supply an algorithm for inheritance networks and prove that arguments that can be expressed in both frameworks are valid on the circumscriptive account if and only if the inheritance algorithm has a positive outcome.© 2016 Elsevier B.V. All rights reserved.1. IntroductionDiscussions often end before the issues that started them have been resolved. In the 1980s and 1990s default reasoning was a hot topic in the field of logic and AI. The result of this discussion was not one single theory that met with general agreement, but a collection of alternative theories, each with its merits, but none entirely satisfactory. This paper aims to give a new impetus to this discussion.The issue is the logical behavior of sentences of the formS’s are normally PSuch sentences function as default rules. What they mean is roughly this: when you are confronted with an object with property S, and you have no evidence to the contrary, you are legitimized to assume that this object has property P .The research for this paper was partly financed by the Netherlands Organisation for Scientific Research (project NWO-360-20-200), whose support is ✩gratefully acknowledged.This paper has a long history. Successive drafts have been presented between 2009 and 2015 in Amsterdam, Groningen, Gent, Göttingen, Westport, ✩✩Ann Arbor, Beijing, and Guangzhou. We thank the audiences for their valuable feedback. We also want to thank the referees, whose suggestions led to significant improvements both in content and in presentation.* Corresponding author.E-mail addresses: bastiaanse_harald@hotmail.com (H. Bastiaanse), f.veltman@uva.nl (F. Veltman).http://dx.doi.org/10.1016/j.artint.2016.05.0050004-3702/© 2016 Elsevier B.V. All rights reserved.H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–11897The ‘evidence to the contrary’ can vary. Sometimes it simply consists in the empirical observation that the object con-cerned is in fact an exception to the rule. On other occasions the evidence may be more indirect. Consider:premise 1premise 2premise 3premise 4A’s are normally ES’s are normally not ES’s are normally Ac is A and c is Sby defaultc is not EThis is a case of conflicting defaults.1 At first sight one might be tempted to draw both the conclusion that c is E (from premises 1 and 4) and that c is not E (from premises 2 and 4), and maybe on second thought to draw neither. But the third premise states that objects with the property S normally have the property A as well. So, apparently, normal S’s are exceptional A’s, as the rule that A’s are normally E does not hold for them. In other words, only the S-defaults apply to c. So, presumably, c is not E.Default reasoning has been formalized in various ways, and within each of the existing theoretical frameworks a number of strategies have been proposed to deal with conflicting defaults. In the following we will focus on two of these frameworks, Circumscription (McCarthy [1,2]), and Inheritance Networks (Horty et al. [3]), and implement a new strategy to deal with conflicting rules in each of these.2. Naive circumscriptionWithin the circumscriptive approach a sentence of the form S’s are normally P is represented by a formula of the form∀x((Sx ∧ ¬ Ab SxP x x) → P x).Here Ab SxP x x is a one place predicate. The subscript ‘SxP x’ serves as an index, indicating the rule concerned. If an object asatisfies the formula Ab SxP x x, this means that a is an abnormal object with respect to this rule.More generally, let L0 be a language of monadic first order logic. With each pair (cid:6)ϕ(x), ψ(x)(cid:7),2 we associate a new one-place predicate Abϕ(x)ψ(x), thus obtaining the first order language L.A default rule is a formula of L of the form∀x((ϕ(x) ∧ ¬ Abϕ(x)ψ(x) x) → ψ(x)).Here, ϕ(x) and ψ(x) must be formulas of L0 that are quantifier-free and in which no individual constant occurs. The formula ϕ(x) is called the antecedent of the rule, Abϕ(x)ψ(x) x is its abnormality clause, and ψ(x) its consequent. Again, the index ϕ(x)ψ(x) is there just to indicate that it concerns the abnormality predicate of the rule with antecedent ϕ(x) and consequent ψ(x). When it is clear which variable is at stake we will write Abϕψ rather than Abϕ(x)ψ(x). And often we will shorten ‘∀x((ϕ(x) ∧ ¬ Abϕψ x) → ψ(x))’ further to∀x(ϕ(x) (cid:2) ψ(x)).Since it is clear from the antecedent and the consequent of a default rule what the abnormality clause is, this should not cause confusion.3In ordinary logic, for an argument to be valid, the conclusion must be true in all models in which the premises are true. The basic idea underlying circumscription is that not all models of the premises matter but only the most normal ones – only the ones in which the extension of the abnormality predicates is inclusion-wise minimal given the information at hand. Formally:Definition 2.1.(i) Let L be a language as described above, and let A = (cid:6)A, I(cid:7) and A(cid:8) = (cid:6)A(cid:8), I(cid:8)(cid:7) be two models for L with the following properties:(a) A = A(cid:8)(b) for all individual constants c, I(c) = I(cid:8)(c);;1 If a concrete example is wanted, substitute ‘adult’ for A, ‘employed’ for E, and ‘student’ for S.2 Notation: we write ϕ(x) to denote a formula ϕ of L0 in which (at most) the variable x occurs freely.3 Some readers may not like the fact that in this set up the formulas ∀x(Sx (cid:2) P x) and ∀ y(S y (cid:2) P y) are not logically equivalent, because they contain different abnormality predicates. We could remedy this defect by introducing the same abnormality predicate Abϕ(·)ψ(·) for all pairs (cid:6)ϕ(x), ψ(x)(cid:7), indepen-dent of the free variable x occurring in ϕ(x) and ψ(x). Here ‘·’ refers to a symbol that does not belong to the vocabulary of L0, and by ϕ(·), we mean the expression that one obtains from ϕ(x) by replacing each free occurrence of x by an occurrence of ·.Some readers may insist that on top of this we should enforce that whenever ϕ(x) is logical equivalent to χ (x), and ψ(x) to θ(x), ∀x(ϕ(x) (cid:2) ψ(x))gets equivalent to ∀x(χ (x) (cid:2) θ(x)). This can be done by stipulating that we are only interested in models that assign the same extension to Abϕ(·)ψ(·) and Abχ (·)θ (·) if ϕ(x) is logical equivalent to χ (x) and ψ(x) to θ(x). However, for our purposes, we can keep things simple.98H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118(c) for all abnormality predicates Abϕψ , I( Abϕψ ) ⊆ I(cid:8)( Abϕψ ).Then A is at least as normal as A(cid:8).(ii) Let C be a class of models. Then A = (cid:6)A, I(cid:7) is an optimal model in C iff A ∈ C and there is no model in C that is more normal than A.(iii) Let (cid:6) be a set of sentences. Then (cid:6) |=c ϕ iff ϕ is true in all optimal models of (cid:6).Notice that in (i) of this definition nothing is said about the interpretation of ordinary predicates. A can be at least , while for all P ∈ L0, the interpretations I(P ) and I(cid:8)(P ) are totally different. However, in practice we as normal as A(cid:8)are always looking for the most normal models within a given class C, and it may very well happen that within C the interpretation of the ordinary predicates is heavily constrained or even fixed.If (cid:6) |=c ϕ, we say that ϕ follows by circumscription from (cid:6). Here is an example.premise 1 Adults normally have a bank accountpremise 2 Adults normally have a driver’s licensepremise 3premise 4John is an adultJohn does not have a driver’s licenseby defaultJohn is an adult with a bank accountThis can be formalized aspremise 1premise 2premise 3premise 4∀x(( Ax ∧ ¬ Ab A B x) → Bx)∀x(( Ax ∧ ¬ Ab A D x) → Dx)A j¬D jby circumscription B jIt is easy to check that the conclusion B j follows by circumscription from the premises.This example illustrates why the abnormality predicates have a double index referring to both the antecedent and the consequent of the rule, rather than a single one referring to just the antecedent. It is not sufficient to distinguish between normal and abnormal A’s, and formalize a sentence like Adults normally have a bank account as ∀x(( Ax ∧ ¬ Ab A x) → Bx). The distinction has to be more fine grained. An object with the property A can be a normal A in some respects and an abnormal A in other. Even though John is an abnormal adult in not having a driver’s license, he is a normal adult in having a bank account, or at least we want to be able to conclude by default that he is. If we had formalized the argument in the following way, we would not have gotten very far.4premise 1 ∀x(( Ax ∧ ¬ Ab A x) → Bx)premise 2 ∀x(( Ax ∧ ¬ Ab A x) → Dx)premise 3 A jpremise 4 ¬D jLet us now look at the case of conflicting defaults introduced at the end of section 1. The formalized version looks like this:premise 1premise 2premise 3premise 4by circumscription ¬Ec∀x( Ax (cid:2) Ex)∀x(Sx (cid:2) ¬Ex)∀x(Sx (cid:2) Ax)Ac ∧ ScUnfortunately, in this simple set up the conclusion ¬Ec does not follow from the premises. We find two kinds of optimal models: in some the sentences ¬ Ab S A c, ¬ Ab S¬E c, and Ab A E c hold, which is fine, but in the other the sentences ¬ Ab S A c, Ab S¬E c, and ¬ Ab A E c are true.Recall that in the informal discussion of this example it was suggested that the three default rules involved together imply that objects with property S are exceptional A’s; normal A’s have the property E, but normal S’s don’t, even though normal S’s do have property A.In the next section we will see how one can enforce that in all models in which these three defaults hold, also the formula ∀x(Sx → Ab A E x) will be true. Once we have this, the only optimal models will be models in which ¬ Ab S A c, ¬ Ab S¬E c, and ¬ Ab A E c are true, which means that the conclusion follows.4 The first to point this out was John McCarthy in [2].H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–11899The circumscriptive theory developed below differs from other circumscriptive theories in various ways. We will illustrate these differences by comparing our set up with the set up of the theory developed in [4] and [5] by Bonatti et al. for description logic.5Bonatti et al. introduce abnormality predicates with only one index, and write for example Whale (cid:11) Abmammal to indicate that whales are abnormal mammals. As we pointed out above, this way it gets difficult, if not impossible, to deal properly with different – independent – default properties of the same kind of objects. Unfortunately, the paper does not discuss this problem.6Secondly, the strategy Bonatti et al. use to deal with cases of conflicting defaults differs from the strategy we will use. They introduce a priority order ≺ on the set of abnormality predicates, the idea being that if AbA ≺ AbB, minimizing AbA has preference over minimizing AbB. It is not really clear how this priority ordering comes about. “The user can specify priorities between minimized predicates” is one thing Bonatti et al. say about this, but they add that these priorities normally reflect the Specificity Principle: if A is a more specific concept than B, then AbA ≺ AbB.The ‘if’ in the last sentence cannot be an ‘if and only if’. Specificity is not all that matters in deciding which defaults are applicable in a given situation. Consider for examplepremise 1 ∀x(Sx (cid:2) Ax)premise 2 ∀x( Ax (cid:2) ¬Sx)Scpremise 4by default ?Read ‘Sx as ‘x is a student’ and ‘ Ax as ‘x is an adult’. It is impossible that both ¬ Ab S A c and ¬ Ab A¬S c hold. Intuitively, minimizing Ab S A should have priority in this case, enabling the conclusion that Ac is presumably true. But S is not more specific than A – not at least in the sense that Bonatti et al. give to this phrase. On their account, concept S is more specific than P if the extension of S is a subset of the extension of P in all relevant models (i.e. all models the knowledge base allows). But in the example Sx does not strictly imply Ax.Unlike Bonatti et al., we think that priority questions cannot be left to the user. It is not a pragmatic matter to decide which defaults apply in which circumstances. It’s not something to decide ad hoc. It is a matter of semantics. That some of the arguments discussed in this paper are valid and other arguments are not, is because ‘normally’ means what it means. We think of ‘normally’ as a logical constant next to ‘not’, ‘necessarily’, ‘sometimes’ etc., but differing from these in that its properties can only be described in a non-monotonic system.Our strategy in the following fits in better with the second suggestion of Bonatti et al. We will specify an alternative to the specificity principle, and investigate the logic it generates.3. Exemption and inheritanceThere are two kinds of rules, rules that allow for exceptions and rules that do not allow for exceptions. So far we talked only about the first kind, but we also want to discuss the second kind. In order to do so, sentences of the form ∀x(ϕ(x) → ψ(x)) can get a special status as strict rules. These strict rules are to be distinguished from universal sentences that are only accidentally true, and they will be treated differently.7The general set up will be this: Let (cid:7) be a finite set of default rules and strict rules and (cid:8) be a set of sentences. Think of I = (cid:6)(cid:7), (cid:8)(cid:7) as the information of some agent at some time, where (cid:7) is the set of rules the agent is acquainted with, and (cid:8) the agent’s factual information. We correlate with I a pair (cid:6)UI , FI (cid:7), and call this the (information) state generated by I. UI is called the universe of the state. The elements of UI are models of (cid:7), but not all models of (cid:7) are allowed. The universe UI must satisfy some additional constraint that will be discussed below. FI consists of all models in UI that are models of (cid:8).In this set up validity is defined as follows:(cid:7), (cid:8) |=d ϕ iff for all optimal models A ∈ FI , A |= ϕ.Read ‘(cid:7), (cid:8) |=d ϕ’ as ‘ϕ follows by default from (cid:7) and (cid:8)’.To explain the constraint, it is necessary to introduce some technical notions.5 The expressive power of the languages of description logic differs from the expressive power of monadic first order languages, but the differences are not relevant for our discussion.6 Dealing properly with independent default properties is also a problem for theories that analyze the default implication if . . . , then normally . . . as a variable strict conditional. Here Delgrande [6], Asher and Morreau [7], and Boutilier [8] can serve as examples. The only modal theory we know of that gets this right is the one presented in Veltman [9].7 It is tempting to introduce a necessity operator in the object language to distinguish rules from accidental statements. We resist this temptation, making the distinction only at a meta-level, because we want to stay as closely as possible to the original circumscriptive framework.100H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118Definition 3.1 (Complying).(i) Suppose A |= ∀x(ϕ(x) (cid:2) ψ(x)), and let d be an element of the domain8 of A. Then d complies with ∀x(ϕ(x) (cid:2) ψ(x))(in A) iff d does not satisfy Abϕψ x.(ii) Let (cid:7) be a set of rules, and let d be some element of the domain of some model A of (cid:7). Then d complies with (cid:7) (in A) iff d complies with all the default rules in (cid:7).So, if an object satisfying ϕ(x) complies with ∀x(ϕ(x) (cid:2) ψ(x)), it will also satisfy ψ(x). But notice that the definition allows for the following situations:• The object d complies with ∀x(ϕ(x) (cid:2) ψ(x)), but d does not satisfy ϕ(x).• The object d satisfies ϕ(x) and ψ(x), but d does not comply with ∀x(ϕ(x) (cid:2) ψ(x)).We will present examples later on. For now, just take ‘comply’ as a technical term.3.1. The exemption principleThe constraint we will impose on UI is motivated by the following minimal requirement.If the only information about some object is that it has property P , it must be valid to infer by default that this object complies with all the default rules for objects with property P .9What would be the use of these rules if they would not at least allow this inference?It may seem easy to satisfy this requirement, but it is not.Definition 3.2.(i) An exemption clause is a formula of the form ∀x(ϕ(x) →(cid:2)δ∈(cid:6) Abδ x).(cid:2)Here we write ‘ Abδ ’ to refer to the abnormality predicate of the default rule δ. (cid:6) can be any finite set of default rules. So, δ∈(cid:6) Abδ x is a disjunction of a finite number of abnormality predicates.10(ii) Let (cid:7) be a set of rules. (cid:7)ϕ(x) is the set of rules in (cid:7) with antecedent ϕ(x).(cid:2)(iii) The exemption clause ∀x(ϕ(x) →δ∈(cid:6) Abδ x) is an exemption clause for (cid:7) iff (cid:7) |= ∀x(ϕ(x) →(cid:2)δ∈(cid:6)∪(cid:7)ϕ(x) Abδ x).11To see how these definitions work, consider again(cid:7) = {∀x( Ax (cid:2) Ex), ∀x(Sx (cid:2) ¬Ex), ∀x(Sx (cid:2) Ax)}.Here (cid:7) Sx = {∀x(Sx (cid:2) Ax), ∀x(Sx (cid:2) ¬Ex)}. Let (cid:6) = {∀x( Ax (cid:2) Ex)}. Clearly, there is no model such that some object in its domain satisfies Sx and complies with (cid:6) ∪ (cid:7) Sx. So,(cid:3)(cid:7) |= ∀x(Sx →Abδ x).δ∈(cid:6)∪(cid:7) Sx(cid:2)By (iii) above this means that ∀x(Sx →δ∈(cid:6) Abδ x), i.e. ∀x(Sx → Ab A E x), is an exemption clause for (cid:7), the idea being that objects with property S are, so to speak, exempted from the rule that A’s are normally E.The word ‘exempted’ suggests that default rules are some kind of normative rules. Indeed, often it is helpful to think of them that way. The use of the word ‘normally’, already suggests that we are dealing with a kind of norms here. To count as a normal S, S’s must be A, and to count as a normal A, A’s must be E, but here an exception is made for the S’s. S’s must be A, but they do not have to be E, they are not subjected to this rule. Actually, for them the opposite holds, to count as a normal S they must be not E.‘Being exempted from a rule’ does not mean ‘being an exception to the rule’: The S’s don’t have to be E, but this does not mean they are, in fact, not E.In the following definition it is made explicit for any set of rules (cid:7) which kinds of objects are exempted from which rules in (cid:7).8 Let A = (cid:6)A, I(cid:7) be a model. Usually, the set A is called the universe of A, but since that phrase is already in use for something else we refer to A as the domain of A.9 The earliest place we know where this requirement is explicitly stated is on page 63 in Geffner [10]: “Given the evidence E = {p} we can apply a default p → q even in the presence of sets of defaults in conflict with p → q.”10 By definition, if (cid:6) = ∅, δ∈(cid:6) Abδ x = ⊥.11 Here and elsewhere ‘(cid:10) |= ψ ’ means that (cid:10) entails ψ in classical logic.(cid:2)H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118101Definition 3.3. Let (cid:7) be a set of rules, and let (cid:8) be an arbitrary set of formulas.(i) The exemption extension (cid:7)∈of (cid:7) is given by∈ =(cid:7)∞(cid:4)n=0∈(cid:7)nwhere (cid:7)∈= (cid:7)∈n(ii) The state generated by I = (cid:6)(cid:7), (cid:8)(cid:7) is the state (cid:6)UI , FI (cid:7) given by∪ {ϕ | ϕ is an exemption clause for (cid:7)∈n= (cid:7) and (cid:7)∈n+10(a) A ∈ UI iff A is a model of (cid:7)∈(b) FI consists of all models in UI that are models of (cid:8).;}.Notice that (cid:7)∈has the following property, which we will call the Exemption Principle.If (cid:7)∈ |= ∀x(ϕ(x) →(cid:3)δ∈(cid:6)∪(cid:7)ϕ(x)Abδ x), then (cid:7)∈ |= ∀x(ϕ(x) →(cid:3)δ∈(cid:6)Abδ x).(cid:7)∈is defined inductively. By adding exemption clauses to a set of rules a new set of rules is created which may generate new exemption clauses, etc.12 Given that (cid:7) is finite, there are only finitely many possible exemption clauses. So, after finitely many steps a fixed point is reached. (cid:7)∈is the weakest extension of (cid:7) for which the exemption principle holds.On the face of it, the exemption principle is not very strong. It just says that if the rules for objects with the property expressed by ϕ(x) are incompatible with the rules in some set (cid:6), then every object with the property expressed by ϕ(x) is exempted from at least one of the rules in (cid:6).Without the exemption principle the minimal requirement cannot be met. If the principle does not hold, then there exists an optimal model A, a property ϕ(x), and an entity d in the domain of A such that d satisfies ϕ(x), but d does not comply with at least one of the rules in (cid:7)ϕ(x), because instead d complies with a rule that is not compatible with the rules in (cid:7)ϕ(x).With the exemption principle this cannot happen.Proposition 3.4 (Minimal requirement). Suppose ∀x(ϕ(x) (cid:2) ψ(x)) ∈ (cid:7). Then (cid:7), {ϕ(c)} |=d ψ(c).Proof. To determine whether (cid:7), {ϕ(c)} |=d ψ(c), we have to look at the state (cid:6)UI , FI (cid:7) generated by I = (cid:6)(cid:7), {ϕ(c)}(cid:7) and check that every optimal model in FI has the property that the object named c complies with (cid:7)ϕ(x).Recall that UI contains the models of (cid:7)∈Now, consider any model A = (cid:6)A, I(cid:7) in FI in which the object I(c) does not comply with (cid:7)ϕ(x). We will show that A, and that FI contains all models in UI in which ϕ(c) is true.is not optimal.Let (cid:6) be the set of defaults in (cid:7)∈tion principle this means that (cid:7)∈ (cid:17)|= ∀x(ϕ(x) →some element d0 in A(cid:8)satisfies (ϕ(x) ∧ ¬ Now, let A(cid:8)(cid:8) = (cid:6)A(cid:8)(cid:8), I(cid:8)(cid:8)(cid:7) be defined as follows:(cid:2)δ∈(cid:6)∪(cid:7)ϕ(x) Abδ x).with which I(c) complies. Apparently, (cid:7)∈ (cid:17)|= ∀x(ϕ(x) →δ∈(cid:6) Abδ x). By the exemp-δ∈(cid:6)∪(cid:7)ϕ(x) Abδ x). Hence, there exists a model A(cid:8) = (cid:6)A(cid:8), I(cid:8)(cid:7) in UI such that (cid:2)(cid:2)– A(cid:8)(cid:8) = A;– For individual constants a, I(cid:8)(cid:8)(a) = I(a);– For P an ordinary predicate or an abnormality predicate,if d (cid:17)= I(c), then d ∈ I(cid:8)(cid:8)(P ) iff d ∈ I(P ), andif d = I(c), then d ∈ I(cid:8)(cid:8)(P ) iff d0 ∈ I(cid:8)(P ).Consider any quantifier-free formula θ(x) in which no individual constant occurs. Clearly, if d (cid:17)= I(cid:8)(cid:8)(c), then d satisfies θ(x) in A(cid:8)(cid:8)iff d satisfies θ(x) in A, while I(cid:8)(cid:8)(c) satisfies θ(x) in A(cid:8)(cid:8)iff I(cid:8)(c) satisfies θ(x) in A(cid:8)Given that all sentences of (cid:7)∈are of the form ∀xθ(x) with θ as described, A(cid:8)(cid:8).will be a model of (cid:7)∈. And clearly, A(cid:8)(cid:8)is more normal than A. Therefore, A is not optimal. (cid:3)Example. Applying Proposition 3.4 we find that∀x( Ax (cid:2) Ex), ∀x(Sx (cid:2) ¬Ex), ∀x(Sx (cid:2) Ax), Sc |=d Ac ∧ ¬Ec.12 An example is given below, when the inheritance principle is discussed.102H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–1183.2. The inheritance principleThe exemption principle has some surprising consequences, one of which is the inheritance principle, which in its simplest form runs as follows:Let (cid:7) be a set of rules. Suppose that (cid:7)∈ |= ∀x(ϕ(x) (cid:2) ψ(x))and (cid:7)∈ |= ∀x(ψ(x) → Abχ θ x). Then (cid:7)∈ |= ∀x(ϕ(x) → Abχ θ x).To see how this works, consider the theory (cid:7) consisting of the following five rules∀x(Q x (cid:2) Rx)∀x(P x (cid:2) Q x)∀x(P x (cid:2) ¬Rx)∀x(Sx (cid:2) P x)∀x(Sx (cid:2) Rx)QP•(cid:4)R(cid:3)•(cid:5)(cid:6)(cid:7)(cid:8)(cid:7)(cid:5)(cid:7)(cid:2)(cid:5)(cid:7)(cid:7)(cid:5)•(cid:4)(cid:7)(cid:7)(cid:7)(cid:7)S•Consider the first three rules, and notice that the exemption principle enforces that ∀x(P x → Ab Q R x) ∈ (cid:7)∈. Now, it follows in one step from the inheritance principle that ∀x(Sx → Ab Q R x) ∈ (cid:7)∈.Without an appeal to the inheritance principle the proof is a bit longer. We give it here because it illustrates why 1 . Given that |= ∀x(Sx → (P x ∨ ¬P x)), it follows that Definition 3.3 (i) is inductive. Note first that ∀x(P x → Ab Q R x) ∈ (cid:7)∈|= ∀x(Sx → ( Ab Q R x ∨ Ab S P x)). But then ∀x(Sx → Ab Q R x) ∈ (cid:7)∈(cid:7)∈2 .1By applying the exemption principle to the last three rules we find that ∀x(Sx → Ab P ¬R x) ∈ (cid:7)∈. So, the S’s, which in optimal circumstances are both P and Q , are exempted both from the rule that P ’s are normally not R and from the rule that Q ’s are normally R. They are normally R for independent reasons. As such, the example illustrates the fact that it is possible for an object not to comply with a rule whereas both the antecedent and the consequent of the rule hold for it. Objects with the property S do not comply with the rule ∀x(Q x (cid:2) Rx), but in optimal circumstances they will have both the properties Q and R.In its general form the inheritance principle runs as follows.Proposition 3.5 (Inheritance principle). Let (cid:6)UI , FI (cid:7) be the state generated by the information I = (cid:6)(cid:7), (cid:8)(cid:7). Let (cid:6) ⊆ (cid:7) be a set of default rules.Suppose(cid:3)Abδ x).δ∈(cid:6)(a) (cid:7)∈ |= ∀x(ϕ(x) (cid:2) ψ(x)) and (b) (cid:7)∈ |= ∀x(ψ(x) →Then∈ |= ∀x(ϕ(x) →(cid:7)(cid:3)δ∈(cid:6)Abδ x).Proof. By first-order logic alone, it is trivially true that∈ |= ∀x(ϕ(x) → (ψ(x) ∨ ¬ψ(x))).(cid:7)Given (a), objects that satisfy ϕ(x) and ¬ψ(x) will also satisfy Abϕψ x. Thus, the above statement remains true when ¬ψ(x)is replaced by Abϕψ x. Similarly, given (b) the formula above remains true when ψ(x) is replaced by δ∈(cid:6) Abδ x. Hence,(cid:2)∈ |= ∀x(ϕ(x) → ((cid:7)Abδ x ∨ Abϕψ x)).(cid:3)δ∈(cid:6)(cid:3)δ∈(cid:6)Given the exemption principle this meansAbδ x).(cid:3)∈ |= ∀x(ϕ(x) →(cid:7)3.3. Some more examples3.3.1. The kiteGiven the inheritance principle it is easy to see why the following argument is valid.H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118103∀x(Rx (cid:2) ¬U x)∀x(T x (cid:2) U x)∀x(Q x (cid:2) T x)∀x(Q x (cid:2) Rx)∀x(P x (cid:2) Q x)∀x(Sx (cid:2) P x)Sc∴ Rc ∧ T cT•(cid:2)(cid:5)(cid:5)(cid:6)U•(cid:5)(cid:5)(cid:6)(cid:2)(cid:5)(cid:2)(cid:2)(cid:9)R•(cid:2)(cid:2)(cid:9)(cid:2)QPSc(cid:5)•(cid:4)•(cid:4)•(cid:4)(cid:4)•Looking at the first four rules, we see that the exemption principle enforces that ∀x(Q x → ( Ab R¬U x ∨ AbT U x)) ∈ (cid:7)∈. By applying the inheritance principle twice we see that ∀x(Sx → ( Ab R¬U x ∨ AbT U x)) ∈ (cid:7)∈. So in all relevant models either AbR¬U c or AbT U c is true. From this it follows that in all optimal models ¬ Ab S¬P , ¬ Ab P Q , ¬ Ab Q R , and ¬ Ab Q T are true, which enables the default conclusion that P c, Q c, Rc and T c.Notice that on the naive account from section 2 none of these can be concluded. It would not even be possible to make the first step upwards from Sc to P c. Here we can not only make this first step but also a second to Q c and further up to Rc and T c. Only when we hit a direct conflict do we need to stop. By having the upper abnormalities propagate downward, we do not have to take into account potential abnormalities at the lower levels.3.3.2. Defeasible modus tollensBoth Defeasible Modus Ponens and Defeasible Modus Tollens are valid.∀x(Sx (cid:2) P x)Sc∴ P c∀x(Sx (cid:2) P x)¬P c∴ ¬ScThe latter shows that an object need not have property S to count as an object that complies with the rule ∀x(Sx (cid:2) P x). Intuitively, if the object c had property S, it would be an abnormal S. So, assuming that the object c is normal and complieswith the rule, it will not have property S.3.3.3. Defeasible modus ponens beats defeasible modus tollensNow, consider the following premisespremise 1 ∀x(Sx (cid:2) P x)premise 2 ∀x(P x (cid:2) ¬Sx)premise 3 ScAt first sight one might be tempted to conclude P c by Defeasible Modus Ponens and ¬P c by Defeasible Modus Tollens, but in fact the exemption principle enforces that ∀x(Sx → Ab P ¬S x) ∈ (cid:7)∈. This means that the only default conclusion to be drawn is P c.The reason we bring this up is that several authors have questioned the validity of Defeasible Modus Tollens with putative counterexamples like the following:premise 1 Men normally don’t have a beardpremise 2John has a beardby defaultJohn is not a manHowever, the only thing this example shows is that one has to be very careful in providing ‘intuitive’ counterexamples when dealing with default arguments. One must be sure that the premises faithfully represent all one knows about the matter at issue.In this case we know in fact more than the premises state. We know, for instance, that people with a beard normally are men. That’s is why the conclusion sounds weird in the first place.Now, if we state this explicitly as a third premise we get:104H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118premise 1 People with a beard normally are menpremise 2 Men normally don’t have a beardpremise 3 John has a beardAnd as we saw, Defeasible Modus Ponens beats Defeasible Modus Tollens, so the only conclusion to be drawn is that John is a man.Modus Tollens is closely related to Contraposition, but it is not the same. Modus Tollens, in the defeasible form dis-cussed here, says: If all you know is the rule ∀x(Sx (cid:2) P x) and the fact ¬P a, then it follows by default that ¬Sa. This is much weaker than saying that the rule ∀x(Sx (cid:2) P x) implies the rule ∀x(¬P x (cid:2) ¬Sx). What we have at best is this: if all you know is the rule ∀x(Sx (cid:2) P x), it follows by default that ∀x(¬P x (cid:2) ¬Sx). But it is important to realize that this conclusion expresses just an accidental truth, not a rule.13 And notice that ∀x(Sx (cid:2) P x), Sa, ¬P a (cid:17)|=d ∀x(¬P x (cid:2) ¬Sx), so this accidental conclusion is easily defeasible, whereas in the same context we can still apply defeasible Modus Tollens: ∀x(Sx (cid:2) P x), Sa, ¬P a, ¬P b |=d ¬Sb.3.4. CoherenceEvery set (cid:7) of default rules is consistent in the strict logical sense of the word.14 This does not mean that every such set is okay. Here are some examples.Consider(cid:7) = {∀x(Sx (cid:2) P x), ∀x(Sx (cid:2) ¬P x)}.Within our framework a theory of this form is of no use. Note that (cid:7) |= ∀x(Sx → ( Ab S P ∨ Ab S¬P )). We can apply the exemption principle (take (cid:6) = ∅ and ϕ(x) = Sx) to find that ∀x(Sx → ⊥) is an exemption clause for (cid:7). So, (cid:7)∈ |= ¬∃xSx.A more complicated example is this one:W•(cid:5)(cid:5)(cid:6)(cid:5)(cid:10)(cid:2)(cid:2)(cid:9)(cid:5)(cid:2)(cid:3)C•R•∀x(Rx (cid:2) C x)∀x(C x (cid:2) Rx)∀x(Rx (cid:2) W x)∀x(C x (cid:2) ¬W x)‘Rainy days normally are cold’, ‘Cold days normally are rainy’, ‘On rainy days the wind is normally west’, ‘On cold days the wind is normally not west’. Something is wrong with this theory. By the exemption principle no such days exist: (cid:7)∈ |=¬∃xRx. Proof: note first that ∀x(C x → Ab R W x) ∈ (cid:7)∈. By the inheritance principle it follows that ∀x(Rx → Ab R W ) ∈ (cid:7)∈. Applying the exemption principle once more yields ∀x(Rx → ⊥) ∈ (cid:7)∈.A third example is given by(cid:7) = {∀x(Sx (cid:2) P x), ∀x((Sx ∧ Q x) (cid:2) ¬P x), ∀x((Sx ∧ ¬Q x) (cid:2) ¬P x)}.Again, this does not sound like an acceptable theory. Too many exceptions are being made. Note that (cid:7) |= ∀x((Sx ∧ Q x) →( Ab(Sx∧Q x)¬P xx) ∨ Ab SxP xx). Hence, by the exemption principle ∀x((Sx ∧ Q x) → Ab SxP xx) ∈ (cid:7)∈; similarly, ∀x((Sx ∧ ¬Q x) →Ab S P x) ∈ (cid:7)∈. Hence, (cid:7)∈ |= ∀x(Sx → Ab S P x). But then ∀x(Sx → ⊥) ∈ (cid:7)∈.The above leads to the following definition.Definition 3.6. A set of rules (cid:7) is coherent iff for every ϕ(x) which is the antecedent of some rule in (cid:7), (cid:7)∈ ∪ {∃xϕ(x)} is consistent.A set of rules is incoherent if it is logically impossible to satisfy the minimal requirement. In such a case there is some property such that no object with this property can comply with all the rules for objects with this property. Given the exemption principle, no such objects are allowed.As will become clear in due course, for inheritance networks we can give an exact syntactic characterization of the sets of rules that are incoherent.3.5. Is the exemption principle all there is to it?We have presented the exemption principle as a minimal constraint – a constraint that must be imposed on a cir-cumscriptive theory to meet the minimal requirement. We have seen that this principle has many, sometimes surprising 13 Here, it would help if we had introduced a necessity operator (cid:3) in the object language. Then we could just say (cid:3)∀x(Sx (cid:2) P x) |=d ∀x(¬P x (cid:2) ¬Sx), but (cid:3)∀x(Sx (cid:2) P x) (cid:17)|=d (cid:3)∀x(¬P x (cid:2) ¬Sx).14 To see why this is so, consider a model in which all objects are abnormal in all respects.H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118105consequences, and deals successfully with a lot of examples. So, naturally the question arises if this constraint is all one needs to settle questions of priority between conflicting defaults.One might think that the next example shows that the answer is ‘no’.15 Consider the following set of premises.∀x(U x (cid:2) ¬V x)∀x(Rx (cid:2) V x)∀x(T x (cid:2) U x)∀x(Sx (cid:2) T x)∀x(Q x (cid:2) Rx)∀x(P x (cid:2) Q x)Sc ∧ P cUTSV•(cid:5)(cid:5)(cid:6)(cid:2)(cid:5)•(cid:4)(cid:2)(cid:2)(cid:9)(cid:2)•(cid:4)•(cid:2)(cid:2)(cid:9)(cid:2)(cid:2)(cid:9)(cid:2)(cid:2)(cid:5)(cid:5)(cid:6)(cid:5)(cid:5)(cid:6)(cid:5)(cid:5)•c•R(cid:4)•Q(cid:4)•PHere, one might want to conclude first that T c and Q c – after all these are immediate default consequences of Sc and P c – and then make a second step further up to U c and Rc – why stop before we hit a direct conflict? This is how we reasoned when we discussed the kite example in section 3.3.1. Why wouldn’t this kind of forward chaining go through here?There is, in fact, a huge difference between this example and the example in section 3.3.1, which is best brought out by comparing the pictures. In example 3.3.1 we have one path – one line of argument – leading up from Sc to the conclusions Rc and T c. Here we have for each of the properties P , Q , R, S, T , U , V two different paths – two completely independent lines of argument – one leading to the conclusion that c has the property concerned, the other leading to the conclusion that c does not have the property concerned.16 There is no reason to think, given the information at hand, that the one line of argument leads to a more normal situation than the other. This means that no conclusion can be drawn here. Indeed, on our account it is not valid to conclude that U c or Rc; it is not even valid to conclude that T c or Q c.So, we don’t think this example shows that the exemption principle is too weak. But of course, the possibility is not excluded that somebody will come up with a more convincing example. Besides, also in the absence of such an example, it might be enlightening – perhaps only from a mathematical point of view – to investigate possible strengthenings of the exemption principle.We have to leave this to another occasion. For now, we just content ourselves setting a new minimum – the old one being the specificity principle – to principles regulating the priority ordering between conflicting defaults.4. NetworksInheritance networks are, simply put, the kind of structures we have been picturing to illustrate the examples. Thus, an inheritance network is a directed graph in which the nodes represent properties and the arcs represent rules. More precisely:Definition 4.1. An inheritance network is a pair (cid:6)V , (cid:7)(cid:7), where each element of (cid:7) is a combination of an ordered pair of elements of V and a polarity which may be positive, negative, strict positive or strict negative.Elements of V are called nodes and elements of (cid:7) are called arcs. We will refer to an arc from u to v as ‘ uv’ if this arc is positive, as ‘ uv’ if it is negative, as ‘ uv’ if it is strict positive and as ‘ uv’ if it is strict negative.−∗∗−All nodes except one represent properties. This one node stands for an object. There are no arcs to this node and only strict arcs from this node to other nodes. The object is supposed to have the properties represented by these nodes.The definition above does not distinguish between nodes representing properties and the node representing an object. The difference is purely a matter of interpretation.To describe inferences in these networks, the notion of a path is crucial.Definition 4.2. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network, with a, b ∈ V .(i) A positive path from a to b is a subset {α1, . . . , αn} ⊆ (cid:7) such that there exist v 1, . . . , vn−1 ∈ V such that:15 The example was brought to our attention by one of the referees.16 For example, prima facie one wants to conclude U c from Sc via ∀x(Sx (cid:2) T x), and ∀x(T x (cid:2) U x), and ¬U c from P c via ∀x(P x (cid:2) Q x), ∀x(Q x (cid:2) Rx), ∀x(Rx (cid:2) V x), and ∀x(U x (cid:2) ¬V x).106H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118• α1 is a positive (or strict positive) arc from a to v 1;• αi is a positive (or strict positive) arc from v i−1 to v i , where 1 < i < n;• αn is a positive (or strict positive) arc from vn−1 to b.Moreover, the empty set is considered a positive path from any v ∈ V to itself.(ii) X ⊆ (cid:7) is a negative path from a to b if there are X1, X2, a(cid:8)(cid:8), b, α such that• X = X1 ∪ {α} ∪ X2;(cid:8)• X1 is a positive path from a to a• X2 is a positive path from b to b• α is a negative (or strict negative) arc from a;;(cid:8)(cid:8)(cid:8)to b, or from b(cid:8)to a(cid:8).17If there exists a positive (negative) path from a to b, this serves as prima facie evidence that objects with property ahave (do not have) property b. Of course, in interesting examples we have prima facie evidence for both b and not b, which brings us to the next key notion: the conflicting set.Definition 4.3. Where (cid:6)V , (cid:7)(cid:7) is an inheritance network and a ∈ V , a subset X ⊆ (cid:7) is a conflicting set relative to a iff there is some b ∈ V such that X contains both a positive and a negative path from a to b.A conflicting set X is a minimal if no proper subset of X is a conflicting set relative to a.Here ‘minimal’ does not mean having the least possible number of elements. It means that if more arcs were taken out, the set would no longer be conflicting.4.1. Making inferences in inheritance networksLet (cid:6)V , (cid:7)(cid:7) be an inheritance network, and u, v ∈ V . We will write ‘u (cid:3) v’ to indicate that there is both a positive path from u to v and a positive path from v to u.Definition 4.4. Where (cid:6)V , (cid:7)(cid:7) is an inheritance network and a ∈ V , let E ss(cid:7)(a) be set of arcs defined byα ∈ E ss(cid:7)(a) iff α ∈ (cid:7) and (i) α is strict,or (ii) α = uv for some u (cid:3) a,−or (iii) α = uvfor some u (cid:3) a.For a given property a, the set E ss(cid:7)(a) contains the rules that are essential for a, the rules from which the objects with property a cannot be exempted. No object can be exempted from any strict rule; the objects with property a cannot be exempted from any rule for objects with property a, and more generally, the objects with property a cannot be exempted from any rule for objects with a property u that is “default equivalent” to a.Definition 4.5. Where (cid:6)V , (cid:7)(cid:7) is an inheritance network and a ∈ V , let d(a) be defined byY ∈ d(a) iff Y = X − E ss(cid:7)(a) for some minimal conflicting set X relative to a.The intuition is that the objects with property a are exempted from at least one rule in every set Y ∈ d(a).The inheritance principle comes in by letting the d function propagate backwards along positive paths, collecting d-sets in the D function defined below.Definition 4.6. Where (cid:6)V , (cid:7)(cid:7) is an inheritance network and a ∈ V , let D(a) be defined byY ∈ D(a) iff Y ∈ d(b) for some b for which there is a positive path from a to b.We are now ready to define the consequence relation. This will be done in terms of exception sets, sets of arcs represent-ing rules to which an exception must be made.Definition 4.7. Let (cid:6)V , (cid:7)(cid:7) an inheritance network and a ∈ V .X ⊆ (cid:7) is an acceptable exception set for a iff X ∩ Y (cid:17)= ∅ for all Y ∈ D(a).Such an X is minimal if every proper subset of X is not an acceptable exception set for a.17 Note that it’s possible that a = a(cid:8), b = b(cid:8)and X1 and X2 are empty.H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118107Each minimal exception set represents a way to make as few exceptions as possible. A given conclusion b follows from a in a network if b can be reached from a under each of these ways.Definition 4.8. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network. Let a, b ∈ V .• a (cid:21)(cid:7) b iff for every minimal exception set X for a there is a positive path Y from a to b such that X ∩ Y = ∅.• a (cid:21)(cid:7) ¬b iff at least one of the following is true:(i) For every minimal exception set X for a there is a negative path Y from a to b such that X ∩ Y = ∅.(ii) No minimal exception set X for a is also an acceptable exception set for b.We did not prepare the reader for the second clause of negative entailment. It is there for the special case in which there is no path from a to b. In such a case it may happen that objects with property b are so abnormal that one can safely assume that objects with property a18 do not have property b.To see how this works, notice first that if there is a path from a to b, D(b) ⊆ D(a). So in that case every minimal exception set for a is an acceptable exception set for b.19 Now, if there is no path from a to b, and some minimal exception set for a is an acceptable exception set for b, this means that one has to reckon with the possibility that objects with property b are in all respects at least as normal as objects with property a. However, if no minimal exception set is an acceptable exception set for b, this means that the a’s are normal in some respect in which the b’s are exceptional. Assuming that the a’s are as normal as possible, one may in such a case by default infer that the a’s don’t have the property b.204.2. Examples4.2.1. As a first example, we consider the following desirable inference.premise 1 Adults normally have a bank accountpremise 2 Master students are normally adultspremise 3 Master students are normally not employedpremise 4 Adults are normally employedpremise 5John is a master studentby defaultJohn is an adult with a bank account,but he is not employedRendered as an inheritance network, the premises look like this.E(cid:11)(cid:11)(cid:12)(cid:13)(cid:13)(cid:11)•(cid:14)(cid:14)(cid:15)(cid:14)A(cid:3)•(cid:3)B•J•(cid:11)M(cid:3)(cid:3)•Our first step is to determine the d function. Since there are no conflicting sets relative to A, B, and E, we have d( A) =−, A E}. Only the first d(B) = d(E) = ∅. The conflicting sets relative to master student are {M A, M Eof these is minimal. Since E ss(cid:7)(M) = {M A, M E−, J M}, we obtain d(M) = {{ A E}}.−, A E} and { A B, M A, M ESimilarly, there is a single minimal conflicting set relative to J : the set {M A, M E−, A E, J M}. We have E ss(cid:7)( J ) = { J M}, so d( J ) = {{M A, M E−, A E}}.{{M A, M E−, A E}}•|∅(cid:11)(cid:11)(cid:12)(cid:13)(cid:13)(cid:11)(cid:11)(cid:3)(cid:3)•{{ A E}}•(cid:14)(cid:14)(cid:15)(cid:3)∅(cid:14)•∅(cid:3)•We can now determine D( J ). Since there is a positive path from J to every other node, D( J ) is the union of all the d’s. Only two are non-trivial, so D( J ) = {{M A, M E−, A E}, { A E}}.Since { A E} ∈ D( J ), every acceptable exception set for John will contain arc AE. Since { A E} is itself an acceptable excep-tion set, this makes it the only minimal exception set. Thus, a conclusion is acceptable iff there is a path from J to it that does not use arc AE. That is, if there is a path in the following network.18 a could be the individual node, but this does not change the story. (It’s the special case in which there is only one object with property a.)19 The converse does not hold. For example, in a network without conflicts ∅ is a minimal exception set – actually, the only one – for every node.20 Admittedly, we might not have come up with this second clause, if we had not been looking for an algorithm covering the circumscriptive validities. In all the inheritance algorithms we know of it is a necessary condition for b/¬b to follow from a that there is a positive/negative path from a to b.108H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118•E(cid:11)(cid:11)(cid:12)(cid:13)(cid:13)(cid:11)J•(cid:11)M(cid:3)(cid:3)•(cid:3)A•(cid:3)B•Therefore as desired we obtain J (cid:21)(cid:7) ¬E, J (cid:21)(cid:7) A, J (cid:21)(cid:7) B.4.2.2. The Double DiamondThe following network is a well-known extension of the Nixon Diamond, generally referred to as the Double Diamond.A•(cid:5)(cid:5)(cid:6)(cid:2)(cid:5)(cid:2)(cid:2)(cid:9)(cid:2)P•F•(cid:2)(cid:2)(cid:9)(cid:2)R•(cid:5)(cid:5)(cid:6)(cid:2)(cid:5)(cid:2)(cid:2)(cid:9)(cid:2)Q•premise 1 Nixon is a Republican and a Quakerpremise 2 Quakers are normally Pacifistpremise 3 Republicans are normally not Pacifistpremise 4 Republicans are normally Football fanspremise 5 Pacifists are normally Anti-militarypremise 6 Football fans are normallynot Anti-military(cid:2)(cid:2)(cid:9)(cid:2)(cid:2)(cid:9)(cid:5)(cid:5)(cid:6)(cid:5)(cid:5)(cid:6)(cid:2)(cid:2)NThe question is whether Nixon is Anti-military.⊗(cid:5)(cid:5)In preemption based approaches (notably Horty et al. [3]), the positive path from N to A is disabled by the negative path from N to P , so that ¬ A may be concluded. This outcome is considered counterintuitive since the negative path to A is itself disabled by its positive counterpart, which is why such paths are referred to as zombie paths. (See Makinson & Schlechta [11].)Since our own approach is not based on this kind of preemption, we can do a bit better here.The first thing to notice is that there are no pairs of conflicting paths starting at P , F , A, R, or Q . Therefore, all of them −}}. It is important to have empty d, and D(N) = d(N). We subsequently find that D(N) = {{Q P , R Pkeep in mind that ‘minimal exception set’ does not mean ‘exception set with the smallest amount of elements’ – {Q P } is not the only minimal exception set (of N) here. The others are {R P−}, {Q P , R F , P A, F A−, P A} and {R P−, R F }, {R P−, F A−}.We trivially obtain N (cid:21)(cid:7) R, N (cid:21)(cid:7) Q . But as to the other properties, nothing can be concluded, not even N (cid:21)(cid:7) F .4.2.3. A floating conclusionAlso the next example is much discussed in the literature on inheritance networks.21premise 1 Nixon is a Republican and a Quakerpremise 2 Quakers are normally Dovespremise 3 Republicans are normally Hawkspremise 4 Nobody is both a hawk and a doveHpremise 5 Hawks normally are politically motivatedpremise 6 Doves normally are politically motivatedP•(cid:5)(cid:5)(cid:6)(cid:5)(cid:10)(cid:10)•(cid:4)(cid:2)(cid:2)(cid:9)(cid:2)(cid:3)(cid:3)•R(cid:2)(cid:2)(cid:9)(cid:2)(cid:2)(cid:9)(cid:2)(cid:2)⊗(cid:5)(cid:5)(cid:6)(cid:5)(cid:5)(cid:6)(cid:5)(cid:5)ND•(cid:4)•QDoes it follow that Nixon is politically motivated? According to the theory presented here, the answer to this question is ‘yes’.22 It is easy to see that D(N) = d(N) and that d(N) = {{R H, Q D}}. This means there are two minimal exception sets of N, namely {R H} and {Q D}. The exception set {R H} does not contain any element of the rightmost path from N to P , and the exception set {Q D} does not contain any element of the leftmost path from N to P . Thus, for each minimal exception set there is a positive path from N to P which does not contain any element of that set. Therefore, N (cid:21)(cid:7) P .21 The example has been around since 1987, and is due to Ginsberg, but he did not publish it in print until 1993 in [12].22 This is what most people working in this field want. Horty [13] provides a counterexample, but it concerns normative rules rather than defaults. See Prakken [14] for an insightful discussion.H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–1181094.2.4. Closed loopsThe theory covers inheritance networks with cyclic paths. Here is an example.D•(cid:4)(cid:3)•E(cid:4)•A(cid:2)(cid:9)•B(cid:3)(cid:5)(cid:5)(cid:16)(cid:2)•CA’s are normally Bpremise 1premise 2B’s are normally Cpremise 3 C ’s are normally Apremise 4A’s are normally Dpremise 5 D’s are normally not Epremise 6premise 7B’s are normallyEx is Aby defaultx is EAt first glance, one might expect d( A) = {{D ESince all points of the loop must be taken into account, we have E ss(cid:7) ( A) = { A D, A B, B E, BC, C A}. Therefore the con-−} in d( A), rather than the inclusion of , B E} leads to the inclusion of X − E ss(cid:7)( A) = {D E−, B E}}. However, this is not the case.−flicting set X = { A B, A D, D E{D E−, B E}. Thus, E may be validly concluded when starting at A, B or C .4.3. CompletenessWe have been using pictures of networks to illustrate the examples in the sections on circumscription. So it will come as no surprise that the inheritance networks can be translated into the monadic first order language we discussed there. More surprising, and a lot less trivial to show, is the fact that this translation preserves logical validity: the consequence relation (cid:21) specified for the network-based approach, covers exactly (for what it can express) the validity notion |=d of the circumscriptive framework.23We provide the translation and the formal statement here. For the proof, see Appendix A.Definition 4.9. Let N = (cid:6)V , (cid:7)(cid:7) be an inheritance network, and suppose V = {v 1, . . ., vn}. We associate with every v i ∈ V a predicate P i , and with every arc α ∈ (cid:7) a rule given byv i v j↑j= ∀x(P i x (cid:2) P j x)v i v−↑ = ∀x(P i x (cid:2) ¬P j x)↑ = ∀x(P i x → P j x)↑ = ∀x(P i x → ¬P j x)∗v i vj∗−jv i vWe will call (cid:7)↑ = {α | α ∈ (cid:7)} the lift of N.24Theorem 4.10 (Soundness–completeness theorem). Let N = (cid:6)V , (cid:7)(cid:7) and (cid:7)↑v i (cid:21)(cid:7) v j if and only if (cid:7)↑, {P ic} |=d P jc, and v i (cid:21)(cid:7) ¬v j if and only if (cid:7)↑, {P ic} |=d ¬P jc.be as in the definition. Suppose (cid:7)↑is coherent. Then The theorem only holds for coherent theories. Therefore it is desirable know what the notion of coherence amounts to in terms of inheritance networks. This is where the following theorems come in. Again, the proofs can be found in Appendix A.Theorem 4.11. Let (cid:7)↑be the lift of the inheritance network (cid:6)V , (cid:7)(cid:7). Then (cid:7)↑is coherent if and only if there is no v ∈ V with ∅ ∈ d(v).The following definition and proposition describe what a network looks like when ∅ ∈ d(v) for some v ∈ V .Definition 4.12. The node x semi-strictly implies (semi-strictly refutes) y if there is a positive (negative) path from x to ywhere every arc after the first is strict.23 In this paper the starting point was the notion |=d and we have been looking for a consequence relation (cid:21) on networks matching this notion. It would be interesting to go the other way around and represent, say, the network algorithm developed in Thomason, Horty & Touretzky [15] in circumscriptive terms. We have tried to do so, but so far failed. Still, we think it should be possible. In [16] Bochman develops a theory in the framework of Reiter’s Default Logic [17] matching the network algorithm developed in Thomason et al. [15] (as presented in Horty [18]). In Qian & Irani [19] a policy is given for representing default theories developed in Reiter’s framework in a circumscriptive set up. So, maybe combining the insights of these two papers will do the job.24 Since networks do not distinguish between individuals and properties, the lift will represent individuals with predicates. A premise like ‘John is an adult’, which in the circumscription framework could be represented as A j, is represented in an inheritance network as a strict arc from J to A, the lift of which is ∀x( J x → Ax). This is clumsy, but, fortunately, it does not lead to any real problems.110H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118Proposition 4.13. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network. Then ∅ ∈ d(v) iff there is some z and some y (cid:3) v, x (cid:3) v such that ysemi-strictly implies z and x semi-strictly refutes z.5. ConclusionIn the above we have studied the logical properties of defaults, or more particularly of sentences of the form S’s are normally P. We have shown that most, if not all of their capricious logical behavior can be explained on the basis of one simple underlying principle that determines in cases of conflicting defaults which objects are exempted from which rules. We have built two theories based on this principle, one within a circumscriptive framework, and the other in terms of inheritance networks. In the appendix we will prove a completeness theorem showing that arguments that can be expressed in both systems are valid on the one account iff they are valid on the other.Despite the length of this paper, we have only taken the first steps developing these systems. Undoubtedly, a more sys-tematic model theoretic study of the circumscriptive part will result in a shorter and more elegant proof of the completeness theorem. We also think that on the algorithmic side further investigations may yield simplifications. For example, it will become clear in the appendix that things get a lot less complicated if the networks do not have cycles. Finally, a study like this should be complemented by a study answering the question under which conditions a set of default rules can be safely adopted as a guiding line for taking decisions. Maybe this is a question for methodologists rather than for logicians, but the answer is important to everybody interested in common sense reasoning.Appendix A. Completeness of the network algorithmWhen defining the d and D functions we suggested that d models the effect of a weakened version of the exemption principle and D the effect of the inheritance principle. Before starting with the completeness proof proper, we will prove this explicitly.Things are more complicated for networks with cycles than for networks without cycles. Therefore, we first concentrate on the latter.A.1. Reformulating the principlesDefinition A.1. The weak exemption extension (cid:7) w of (cid:7) is given by(cid:7) w = (cid:7) ∪ {ϕ | ϕ is an exemption clause for (cid:7)}.Note that (cid:7) w = (cid:7)∈1 . The weak exemption extension uses only one step of the definition of the regular exemption extension.Definition A.2.(i) The clause ∀x(ϕ(x) →(cid:7) |= ∀x(ψ(x) →(cid:2)δ∈(cid:6) Abδ x).(cid:2)(ii) The inheritance extension (cid:7) I of (cid:7) is given byδ∈(cid:6) Abδ x) is an inherited clause for (cid:7) iff there is some ψ such that ∀x(ϕ(x) (cid:2) ψ(x)) ∈ (cid:7) and (cid:7) I =∞(cid:4)n=0(cid:7) Inwhere (cid:7) I0= (cid:7) and (cid:7) In+1= (cid:7) In∪ {ϕ | ϕ is an inherited clause for (cid:7) Ina}.Since the exemption principle implies the inheritance principle, the following holds.Proposition A.3. (cid:7)∈ |= (cid:7) w I .How about (cid:7) w I |= (cid:7)∈? We doubt this holds for every (cid:7), but it does hold for the special case that (cid:7) is the lift of a cycle-free inheritance network. Before we turn to the proof of this statement some more observations are needed.The rules and exemption clauses figuring in the sets ((cid:7)↑)w I have a very specific syntactic form, which gives us a lot is has more abnormal-will be a model of ((cid:7)↑)w I if A is. This also holds if for some predicates P i that do not occur in the of freedom constructing models of such sets. For example, all the sentences concerned are universal, so every ((cid:7)↑)w Ipreserved under submodels. Moreover, if the only difference between two models A and A(cid:8)ities than A, then A(cid:8)consequent of any rule in ((cid:7)↑)w I , the extension of P i in A(cid:8)is a subset of the extension of P i in A. More precisely:is that A(cid:8)H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118111be the lift of an inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vm}. Let (cid:10) consist of sentences of the form Lemma A.4. Let (cid:7)↑(cid:2)∀x(P i x →δ∈(cid:6) Abδ x).Let A = (cid:6)A, I(cid:7) and A(cid:8) = (cid:6)A(cid:8), I(cid:8)(cid:7) be two models with the following properties:(a) A |= (cid:7)↑ ∪ (cid:10).(b) A = A(cid:8)(c) For all individual constants c, I(c) = I(cid:8)(c).(d) For all predicates P i , the following holds:.(da) If P i does not occur in the consequent of any rule in (cid:7)↑(db) Otherwise, I(cid:8)(P i) = I(P i)., then I(cid:8)(P i) ⊆ I(P i).(e) For all P i and P j , I( Ab P i P j ) ⊆ I(cid:8)( Ab P i P j ) and I( Ab P i ¬P j ) ⊆ I(cid:8)( Ab P i ¬P j ).Then A(cid:8) |= (cid:7)↑ ∪ (cid:10).Proof. Left to the reader.On the way to the completeness theorem, we will often be looking for correspondences between notions that play a role in inheritance networks and notions in the circumscription framework. One such notion is the notion of a path.Clearly, if there is a positive path X from v i to v j in the network (cid:6)V , (cid:7)(cid:7), then (cid:7)↑ |= ∀x((P i x ∧(cid:5)For coherent theories the converse is also true. This follows immediately from the following more general proposition.¬ Abα x) → P j x).25α∈ X(cid:2)Lemma A.5. Let (cid:7)↑∀x(P i x →some P i , (cid:7)↑ ∪ (cid:10) ∪ {∃x(P i x ∧ ϕ(x))} is consistent. If (cid:7)↑ ∪ (cid:10) |= ∀x((P i x ∧ ϕ(x)) → P j x), then there is a positive path from v i to v j .be the lift of an inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vm}. Let (cid:10) consist of sentences of the form δ∈(cid:6) Abδ x). Let ϕ(x) be a quantifier-free formula in which all predicates are abnormality predicates, and such that for Proof. Let A be a model of (cid:7)↑ ∪ (cid:10) in which P i(c) ∧ ϕ(c) is true for some c and Abδc is true for every δ except those where ϕ(c) |= ¬ Abδc. Given Lemma A.4 such a model must exist.by adjusting A so as to make P kc false whenever there is no positive path from v i to vk. This does not affect Create A(cid:8)the truth of P i(c) ∧ ϕ(c).Claim: A(cid:8)The claim is proved by induction on the number of distinct consequents of rules in (cid:7)↑is still a model of (cid:7)↑ ∪ (cid:10). This means that P jc is true in A(cid:8).. Hence, there is a path from v i to v j .Case n = 0:If there are no rules in (cid:7)↑, then none of the predicates we make false is the consequent of such a rule. Therefore, A(cid:8)is a model of (cid:7)↑ ∪ (cid:10) by Lemma A.4.If the number of distinct consequents occurring in the rules of (cid:7)↑is at most n, then A(cid:8)is a model of Induction hypothesis:(cid:7)↑ ∪ (cid:10).Case n + 1: Assume that (cid:7)↑have n + 1 distinct consequents. Suppose towards contradiction that A(cid:8)is not a model of (cid:7)↑ ∪ (cid:10), and consider some vl such that A |= Plc, A(cid:8) (cid:17)|= Plc.↑Let (cid:7)↑−l−l be (cid:7)↑∪ (cid:10). Therefore, A(cid:8)of (cid:7)such that A(cid:8) |= P kc, ¬Plc and ∀x(P kx (cid:2) Plx) ∈ (cid:7)↑.contradicts some rule in ((cid:7)↑ ∪ (cid:10)) − ((cid:7)↑−lwith all rules where Pl is a consequent removed. By the Induction Hypothesis, A(cid:8)is a model ∪ (cid:10)). More specifically, there must be some kSince A(cid:8) |= P kc, by construction there is a positive path from v i to vk. The rule ∀x(P kx (cid:2) Plx) is the lift of an arc from vk to vl. Hence, there is a path from v i to vl.But then Plc should not have been made false in constructing A(cid:8). This contradiction shows that A(cid:8)is a model of (cid:7)↑ ∪ (cid:10). (cid:3)The next lemma shows that when (cid:7) is the lift of a network, (cid:7) w I is ‘closed’ with regards to exemption clauses. That is: if (cid:7) w I entails some exemption clause, then this exemption clause or a stronger one is an element of (cid:7) w I .Lemma A.6. Let (cid:7)↑assume ((cid:7)↑)w I ∪ {∃xP i x} is consistent. If ((cid:7)↑)w I |= ∀x(P i x →(cid:2)be the lift of an inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vm}. Consider ((cid:7)↑)w I = (cid:7)↑ ∪ (cid:10), andδ∈(cid:6) Abδ x), then there is some (cid:6)(cid:8) ⊆ (cid:6) such that ∀x(P i x →(cid:2)δ∈(cid:6)(cid:8) Abδ x) ∈ (cid:10).Proof. By contraposition. Suppose there is no such (cid:6)(cid:8). Then↑ (cid:17)|= ∀x(P i x →(cid:7)(cid:3)δ∈(cid:6)Abδ x).25 We are a bit sloppy here. We should have written ‘ Abα↑ ’ instead of ‘ Abα ’, because it concerns the abnormality predicate of the lift α↑of the arc α.112Takeϕ(x) =(cid:6)(cid:7)δ∈(cid:6)H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118(cid:8)(cid:7)(cid:8)(cid:6)¬ Abδ x∧Abδ xδ /∈(cid:6)and let A be a model with a single element c, where P ic and ϕ(c) are true and P jc is true for only those P j where (cid:7)↑ |= ∀x((P i x ∧ ϕ(x)) → P j x).(cid:2)δ∈(cid:6) Abδ x), so it suffices to show that A is a model of ((cid:7)↑)w I .By construction A (cid:17)|= ∀x(P i x →We will first show that A is a model of (cid:7)↑. Consider any rule ∀x(P kx (cid:2) Plx). Two possibilities occur. (i) (cid:7)↑ (cid:17)|= ∀x((P i x ∧ϕ(x)) → P kx). In this case A (cid:17)|= P kc, and since the object named c is the only element of the domain, trivially A |= ∀x(P kx (cid:2)Plc). (ii) (cid:7)↑ |= ∀x((P i x ∧ ϕ(x)) → P kx). Now, either ϕ(x) |= Ab P k Pl c, in which case trivially A |= ∀x(P kx (cid:2) Plx). Or else ϕ(x) |= Ab P k Pl c, in which case we find that (cid:7)↑ |= ∀x((P i x ∧ ϕ(x)) → Plx). So, by construction A |= Plx, and this together with the facts that A |= P kc and A |= Ab P k Pl c yields that A |= ∀x(P kx (cid:2) Plc).Now suppose A is not a model of ((cid:7)↑)w I . Then (cid:10) contains a formula of the form ∀x(P j x →δ∈(cid:6)(cid:8) Abδ x) such that A |= P jc and (cid:6)(cid:8) ⊆ (cid:6). Since A |= P jc, by construction (cid:7)↑ |= ∀x((P i x ∧ ϕ(x)) → P j x). Therefore by Lemma A.5 there is a positive path from v i to v j . But then by definition (cid:10) should include the exemption clause ∀x(P i x →δ∈(cid:6)(cid:8) Abδ x). This contradicts our assumption of there being no such (cid:6)(cid:8), so A must be a model of ((cid:7)↑)w I . (cid:3)(cid:2)(cid:2)Theorem A.7. Let (cid:7)↑((cid:7)↑)∈.be the lift of a cycle-free inheritance network (cid:6)V , (cid:7)(cid:7) with V = {v 1, . . . , vm}. If (cid:7)↑is coherent, ((cid:7)↑)w I |=Proof. It suffices to show that ((cid:7)↑)w I satisfies the exemption principle. So, let θ , θ (cid:8)be any clauses of the form below:θ = ∀x(P i x →(cid:3)Abδ x),δ∈(cid:6)(cid:8) = ∀x(P i x →θ(cid:3)Abδ x).δ∈(cid:6)∪((cid:7)↑)P i xWe have to prove that whenever such a θ (cid:8)is implied by ((cid:7)↑)w I , so is θ . Suppose ((cid:7)↑)w I |= θ (cid:8). By Lemma A.6, θ (cid:8) ∈((cid:7)↑)w I .26 There are two cases, depending on where θ (cid:8)Case (i): θ (cid:8) ∈ ((cid:7)↑)w . In this case↑ |= ∀x(P i x →Abδ x).(cid:3)(cid:7)δ∈(cid:6)∪((cid:7)↑)P i x∪((cid:7)↑)P i xThis means that (cid:7)↑ |= θ (cid:8), and therefore, θ ∈ ((cid:7)↑)w .was added.Case (ii): θ (cid:8) ∈ ((cid:7)↑)w I − ((cid:7)↑)w . In this case there is a positive path from v i to some v j such that↑((cid:7))w |= ∀x(P j x →(cid:3)Abδ x).δ∈(cid:6)∪((cid:7)↑)P i xBy Lemma A.6 we may assume that ((cid:7)↑)w contains this exemption clause, and therefore↑((cid:7)) |= ∀x(P j x →(cid:3)Abδ x).δ∈(cid:6)∪((cid:7)↑)P i x∪((cid:7)↑)P j xClaim: the above can be strengthened to↑ |= ∀x(P j x →(cid:7)(cid:3)Abδ x).δ∈(cid:6)∪((cid:7)↑)P jTo prove the claim, let χ be the strengthened formula and χ (cid:8)Define μ(x) as follows:⎛⎞⎛⎞the ‘un-strengthened’ one. Assume (cid:7)↑ (cid:17)|= χ .μ(x) =⎜⎝(cid:7)¬ Abδ x⎟⎠ ∧⎝(cid:3)Abδ x⎠ .δ∈(cid:6)∪((cid:7)↑)P jδ∈((cid:7)↑)P i26 Strictly speaking a stronger clause than θ (cid:8)begin with.might be included instead, but we may assume without loss of generality that θ (cid:8)is maximally strong to H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118113(cid:7)↑ ∪ {∃x(P j x ∧ μ(x))} is consistent. (Since (cid:7)↑is coherent, (cid:7)↑ ∪ {∃xP j x} is consistent. Therefore this follows directly from , (cid:7)↑ (cid:17)|= χ .) Since there is no path from v j to v i (otherwise there would be a cycle), contraposition of Lemma A.5with some element d(cid:7)↑ |= χ (cid:8)tells us it cannot be the case that (cid:7)↑ |= ∀x((P j x ∧ μ(x)) → P i x). Therefore there is a model of (cid:7)↑satisfying P j x ∧ ¬P i x ∧ μ(x).Adjust this model such that for no δ in ((cid:7)↑)P i d satisfies Abδ x. Since d does not satisfy P i x, this adjusted model is still a model of (cid:7)↑(given that there is no path as above). However, this model does not make χ (cid:8)true. Contradiction.Given that (cid:7)↑ |= χ , it follows that ∀x(P j x →δ∈(cid:6) Abδ x) ∈ ((cid:7)↑)w . Since there is a path from v i to v j , this in turn leads (cid:2)to θ ∈ ((cid:7)↑)w I . (cid:3)A.1.1. Adding cyclesIn order to properly deal with lifts of networks that include cycles, we first introduce a notion of equivalence that (for lifts) corresponds to being in the same cycle.Definition A.8. Let (cid:7) be a set of rules. The formulas ϕ and ψ are equivalent in (cid:7) iff there are ϕ1, . . . , ϕm, ψ1, . . . , ψn such that ϕm = ψ = ψ1, ψn = ϕ = ϕ1 and for all 1 ≤ i < m, 1 ≤ j < n(cid:7) |= ∀x(ϕi(x) (cid:2) ϕi+1(x)), and (cid:7) |= ∀x(ψ j(x) (cid:2) ψ j+1(x)).If ϕ and ψ are equivalent in (cid:7), we write ϕ ≈(cid:7) ψ , or simply ϕ ≈ ψ if no confusion is possible.Instead of the weak exemption extension (cid:7) w we will utilize the expanded weak exemption extension (cid:7) W .Definition A.9.(i) The clause ∀x(ϕ(x) →(cid:2)that(cid:7) |= ∀x(ϕ(x) →δ∈(cid:6) Abδ x) is an expanded exemption clause for (cid:7) iff there are ψ1 ≈ ψ2 ≈ . . . ≈ ψn ≈ ϕ such (cid:3)Abδ x).δ∈(cid:6)∪(cid:7)ϕ(x)∪(cid:7)ψ1(x)∪...∪(cid:7)ψn(x)(ii) The expanded weak exemption extension (cid:7) W of (cid:7) is given by(cid:7) W = (cid:7) ∪ {ϕ | ϕ is an expanded exemption clause for (cid:7)}.Of course, showing that (cid:7)∈and (cid:7) W I are equally strong, will require some elaborations. Note that Lemmas A.4 and A.5are already stated and proven in terms of general networks which may include cycles.Proposition A.10. (cid:7)∈ |= (cid:7) W I .Proof. We first prove that (cid:7)∈ |= (cid:7) W . Let θ ∈ (cid:7) W . We may assume that (cid:7) (cid:17)|= θ (otherwise (cid:7)∈ |= θ follows immediately). Therefore, θ is of the form(cid:3)θ = ∀x(ϕ(x) →Abδ x)δ∈(cid:6)with(cid:7) |= ∀x(ϕ(x) →(cid:3)Abδ x)δ∈(cid:6)∪(cid:7)ϕ(x)∪(cid:7)ψ1(x)∪...∪(cid:7)ψn(x)for some ψ1 ≈ ψ2 ≈ . . . ≈ ψn ≈ ϕ.Since ψ1 ≈ ϕ, (repeated) use of the inheritance principle lets us conclude(cid:3)∈ |= ∀x(ψ1(x) →(cid:7)Abδ x).δ∈(cid:6)∪(cid:7)ϕ(x)∪(cid:7)ψ1(x)∪...∪(cid:7)ψn(x)By taking (cid:6)(cid:8) = (cid:6) ∪ (cid:7)ϕ(x), we may use the exemption principle to conclude(cid:3)∈ |= ∀x(ψ1(x) →(cid:7)δ∈(cid:6)∪(cid:7)ϕ(x)∪(cid:7)ψ2(x)∪...∪(cid:7)ψn(x)Abδ x).Now, by (repeatedly) using the inheritance principle again we arrive at∈ |= ∀x(ϕ(x) →(cid:7)(cid:3)δ∈(cid:6)∪(cid:7)ϕ(x)∪(cid:7)ψ2(x)∪...∪(cid:7)ψn(x)Abδ x).114H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118The same process can be repeated for all ψi , leaving us with(cid:3)∈ |= ∀x(ϕ(x) →(cid:7)Abδ x),δ∈(cid:6)∪(cid:7)ϕ(x)from which it follows through the exemption principle that∈ |= ∀x(ϕ(x) →(cid:7)(cid:3)Abδ x).δ∈(cid:6)This proves that (cid:7)∈ |= (cid:7) W . Therefore, (cid:7)∈I |= (cid:7) W I . Since the exemption principle implies the inheritance principle, (cid:7)∈ |= (cid:7)∈I , which means that (cid:7)∈ |= (cid:7) W I . (cid:3)Lemma A.11. Let (cid:7)↑(cid:10) ∪ {∃xP i x} is consistent. If (cid:7)↑W I |= ∀x(P i x →be the lift of an inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vm}. Let (cid:10) = (cid:7)↑w I − (cid:7)↑(cid:2)(cid:2)δ∈(cid:6) Abδ x), then there is some (cid:6)(cid:8) ⊆ (cid:6) such that ∀x(P i x →, and assume (cid:7)↑ ∪δ∈(cid:6)(cid:8) Abδ x) ∈ (cid:10).Proof. Analogous to the proof of Lemma A.6.Theorem A.12. If (cid:7)↑is the lift of an inheritance network (cid:6)V , (cid:7)(cid:7) and is coherent, then ((cid:7)↑)W I |= ((cid:7)↑)W I∈.Proof. Mostly analogous to the proof of Theorem A.7, but we need to look more closely at Case (ii). Analogous to what we concluded in the simple case, we have↑ |= ∀x(P j x →(cid:7)δ∈(cid:6)∪((cid:7)↑)P i x∪((cid:7)↑)Q 1 x∪...∪((cid:7)↑)Q n x∪((cid:7)↑)P j xAbδ x)(cid:3)with P i ≈ Q 1 ≈ . . . ≈ Q n. Now if there is a positive path from v j to v i then P j ≈ P i . Then by construction ∀x(P j x →(cid:2)δ∈(cid:6) Abδ x) ∈ ((cid:7)↑)W . Since there is a path from v i to v j , this in turn leads to θ ∈ ((cid:7)↑)W I .(If there is no positive path from v j to v i then this part is also analogous to the proof of Theorem A.7.) (cid:3)A.1.2. ((cid:7)↑)W I and the construction of the D functionThe preceding subsection establishes that (cid:7)∈and (cid:7) W I have the same models. What is easier to see – but still important to prove – is that the alternative constraints leading to (cid:7) W I correctly model what happens in constructing the D function. The following lemma and proposition cover this part of the completeness proof.be the lift of some network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Then X ⊆ (cid:7) is a conflicting set relative to v i if and Lemma A.13. Let (cid:7)↑only if27(cid:6)↑ |= ∀x(cid:7)P i x →(cid:8)Abα x.(cid:3)α∈ XProof. Suppose X ⊆ (cid:7) is a conflicting set relative to v i . Suppose towards contradiction that there is a model A of (cid:7)↑thatsuch (cid:6)(cid:8)A |= ∃xP i x ∧¬ Abα x.(cid:7)α∈ XSince X is a conflicting set relative to v i , there is some v j such that X contains both a positive and a negative path to v j . Therefore by repeated modus ponens (as well as modus tollens, possibly) it follows that both P j x and ¬P j x. Contradiction.For the other direction, suppose X is not a conflicting set relative to v i . Let A be a model in which ∀xP i x is true, and ∀x¬ Abα x is true for all α ∈ X , while the extension of the remaining predicates is determined by applying the rules in (cid:7)↑. Since there are no logical relations between the predicates other than those provided by (cid:7)↑, this can be done. The resulting model A is a model of (cid:7)↑is false on A. (cid:3)(cid:15), but ∀x (cid:2)P i x →(cid:16)α∈ X Abα xProposition A.14. Let (cid:7)↑be the lift of an inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Let(cid:6)(cid:8)φ = ∀xP i x →Abα x.(cid:3)α∈ XIf ((cid:7)↑)W I |= φ, then Y ∈ D(v i) for some Y ⊆ X . Conversely, if X ∈ D(v i) then ((cid:7)↑)W I |= φ.27 Note that this proposition states that the formula is true on every model of (cid:7)↑, even those which are not models of ((cid:7)↑)W I .H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118115Proof. Suppose ((cid:7)↑)W I |= φ. By the construction of ((cid:7)↑)W I , there must be some k such that there is a positive path from v i to vk and(cid:6)(cid:8)↑((cid:7))W |= ∀xP kx →Abα x.(cid:3)α∈ XBy the construction of ((cid:7)↑)W , it follows that⎞⎛↑ |= ∀x(cid:7)⎝P kx →(cid:3)Abα x⎠ .α∈ X∪E ss(cid:7) (vk)By Lemma A.13, this means that X ∪ E ss(cid:7)(vk) is a conflicting set relative to vk. Therefore, Y ∈ d(vk) and hence, Y ∈ D(v i), where Y = X − E ss(cid:7)(vk) ⊆ X .For the converse, suppose X ∈ D(v i). Then there is some v j such that there is a positive path from v i to v j and X ∈ d(v j). Therefore, X ∪ E ss(cid:7)(v j) is a conflicting set relative to v j . By Lemma A.13,⎛⎞↑ |= ∀x(cid:7)⎝P j x →(cid:3)Abα x⎠ .α∈( X∪Min(cid:7) (v j ))By construction of ((cid:7)↑)W ,(cid:6)↑((cid:7))W |= ∀xP j x →(cid:8)Abα x,(cid:3)α∈ Xand therefore ((cid:7)↑)W I |= φ. (cid:3)A.2. CompletenessKnowing (via (cid:7) W I ) how the D function and (cid:7)∈are related is an important step on our way to completeness, but we are far from done. One thing we do not yet know is what on the inheritance network side corresponds to the models in the sets F of the states (cid:6)U , F (cid:7). The bulk of the completeness proof lies in showing that these models correspond to acceptable exception sets, with optimal models corresponding to minimal exception sets.Proposition A.15. Let (cid:7)↑information state generated by I . Then for all A ∈ F , the set X = {α ∈ (cid:7) | A |= Abαc} is an acceptable exception set for v i .be the lift of the inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Let I = (cid:6)(cid:7)↑, {P ic}(cid:7). Let (cid:6)U , F (cid:7) be the Proof. Consider Y ∈ D(v i). We must show that there is some δ ∈ Y such that δ ∈ X .By Proposition A.14,(cid:6)↑((cid:7))W I |= ∀xP i x →(cid:8)Abα↑ x.(cid:3)α∈YTherefore, A |=(cid:2)α∈Y Abαc. Hence, there is some α ∈ Y such that A |= Abαc, which means that α ∈ X . (cid:3)Below, when X = {α ∈ (cid:7) | A |= Abαc}, we will often say that X is the exception set represented by A.Next proposition says that every minimal exception set is represented by at least one model in F.Proposition A.16. Let (cid:7)↑information state generated by I .be the lift of the inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Let I = (cid:6)(cid:7)↑, {P ic}(cid:7). Let (cid:6)U , F (cid:7) be the For every minimal exception set X for v i there is a model A ∈ F such that A |= Abαc iff α ∈ X .Proof. Let X be a minimal exception set for v i . Construct A as follows:• For the domain A, take the same domain as that of some other model in F , and choose I(c) arbitrarily.• Stipulate that I(c) ∈ I(P i) and that I(c) ∈ I( Abα) iff α ∈ X .• For all P j , stipulate that I(c) ∈ I(P j) if and only if there is a positive path from v i to v j that does not contain an element of X .• For all d (cid:17)= I(c) and for all P j , stipulate that d /∈ I(P ).116H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118Clearly, A |= Abαc iff α ∈ X . To show that A ∈ F , it is sufficient to show that A ∈ U . For this it suffices to show that A |= ((cid:7)↑)W I .For elements other than c, the predicate assignments are trivially consistent with all rules and exemption clauses in Rules in (cid:7)↑((cid:7)↑)W I . For c, we first look at the rules in (cid:7)↑: Consider φ ∈ (cid:7)↑, whereφ = ∀x((P j x ∧ ¬ Ab P j Pk x) → P kx)..We may assume that A |= P jc ∧ ¬ Ab P j Pk c. (Otherwise, c is trivially consistent with the rule.) Thus, there is a positive path from v i to v j that does not contain an element of X , and the arc from v j to vk is not in X . Therefore, there is also such a path from v i to vk, and thus P kc.For negative rules, again take φ ∈ (cid:7)↑but now withφ = ∀x((P j x ∧ ¬ Ab P j ¬Pk x) → ¬P kx).Again we may assume that A |= P jc ∧ ¬ Ab P j ¬Pk c. Thus there is a negative path from v i to vk containing no element of X . To prove that A |= ¬P kc we have to show that there is no positive path from v i to vk. Suppose there is such a positive path, and let Y be the union of these two paths. Then Y is a conflicting set relative to v i . Since X is a minimal exception set for v i , some α ∈ Y must be in X . Since the negative path had no such overlap, this α must be part of the positive path.As we’ve shown that every such positive path contains an element of X , it follows by construction that A |= ¬P kc. Therefore the valuation for c is consistent with this rule.Exemption clauses in ((cid:7)↑)W I : Suppose θ ∈ ((cid:7)↑)W I , whereθ = ∀x(P j x →(cid:3)Abα↑ x).α∈(cid:6)By Proposition A.14, Y ∈ D(v j) for some Y ⊆ (cid:6). We may assume that P jc. Therefore there is a positive path from v i to v j , and thus Y ∈ D(v i). Since X is a minimal exception set for v i , it follows that there is some α(cid:8) ∈ Y for which α(cid:8) ∈ X . By construction, A |= Abα(cid:8) c, and therefore, θ holds for c. (cid:3)Finally, we show that minimal exception sets correspond to optimal models.Proposition A.17. Let (cid:7)↑information state generated by I . Then A is optimal in F iff there is a minimal exception set X for v i that is represented by A.be the lift of the inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Let I = (cid:6)(cid:7)↑, {P ic}(cid:7). Let (cid:6)U , F (cid:7) be the Proof. For the proof from left to right let A be optimal in F . By Proposition A.15, the set X = {α ∈ (cid:7) | A |= Abαc} is an (cid:8) ⊂ Xacceptable exception set for v i . Assume towards contradiction that X is not a minimal exception set for v i , and that Xis. By Proposition A.16, there is a A(cid:8) ∈ F which represents X.(cid:8)Now construct model A(cid:8)(cid:8)applied to c, it uses the same evaluation as A(cid:8)predicates made true by A(cid:8)(cid:8)therefore not optimal.to be exactly like A except that when evaluating predicates (including abnormality predicates) . Showing that A(cid:8)(cid:8) ∈ F is fairly trivial and left to the reader. The abnormality is strictly more normal than A, which is are a strict subset of those made true by A. So A(cid:8)(cid:8)For the other direction, let X be a minimal exception set for v i . By Proposition A.16, there are models A ∈ F such that A |= Abαc iff α ∈ X .Now, suppose B ∈ F is at least as normal as A. By Proposition A.15, B models some acceptable exception set Y for v i . Since B is at least as normal as A, we have Y ⊆ X . Since X is minimal, this means Y = X . So, A is at least as normal as B, which means that A is an optimal model. (cid:3)Having established the correspondence between optimal models and minimal exception sets, the last step in the com-pleteness proof is to go from these models to the allowable inferences as defined in Definition 4.8.Theorem A.18. Let (cid:7)↑information state generated by I .be the lift of the inheritance network (cid:6)V , (cid:7)(cid:7), with V = {v 1, . . . , vn}. Let I = (cid:6)(cid:7)↑, {P ic}(cid:7). Let (cid:6)U , F (cid:7) be the (i) If X is a minimal exception set for v i, and there is a positive path from v i to v j that does not contain any element of X , then A |= P jc for every A ∈ F representing X in c.A |= ¬P jc for every A ∈ F representing X in c.(ii) If f X is a minimal exception set for v i, and there is a negative path from v i to v j which does not contain any element of X , then (iii) If X is not an acceptable exception set for v j , then A |= ¬P jc for every A ∈ F representing X in c.(iv) If A |= P jc for every A ∈ F representing X in c, then there is a positive path from v i to v j which does not contain any element of X .(v) If A |= ¬P jc for every A ∈ F representing X in c, then either there is a negative path from v i to v j which does not contain any element of X or X is not an acceptable exception set for v j .H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118117Proof. The proofs of (i) and (ii) are left to the reader.The proof of (iii) is also straightforward: If X is not an acceptable exception set for v j , then there is some Y ∈ D(v j)(cid:2)such that X ∩ Y = ∅. Since Y ∈ D(v j), ((cid:7)↑)W I |= ∀x(P j x →α∈Y Abα x) (Proposition A.14).(cid:2)Suppose A ∈ F represents X in c. Since X ∩ Y = ∅, A does not make To prove (iv), suppose every A ∈ F representing X in c makes P jc true. Construct B = (cid:6)B, I(cid:7) as follows:α∈Y Abαc true. Therefore, A |= ¬P jc.• For the domain B, take the same domain as that of some other model in F , and choose I(c) arbitrarily.• Stipulate that I(c) ∈ I(P i) and that I(c) ∈ I( Abα) iff α ∈ X .• For all P j , stipulate that I(c) ∈ I(P j) if and only if there is a positive path from v i to v j that does not contain an element of X .• For all d (cid:17)= I(c) and for all P j , stipulate that d /∈ I(P j).We have shown in the proof of Proposition A.16 that B ∈ F . Thus, by construction there is a positive path from v i to v jthat does not contain an element of X .To prove (v), suppose every A ∈ F representing X in c makes ¬P jc true. Construct B(cid:8)like B in (iv), but stipulate that I(c) ∈ I(P j). Then B(cid:8) /∈ F , and more specifically B(cid:8) (cid:17)|= ((cid:7)↑)W I . Pick φ ∈ ((cid:7)↑)W I such that B(cid:8) |= ¬φ. A number of cases arise, depending on φ.(a) φ = ∀x(P kx ∧ ¬ Abφ x → ¬P j x) for some k, with B(cid:8) |= P kc ∧ ¬ Abφc. In this case, there is a negative path from v i to v j(via vk) that does not contain an element of X .(b) φ = ∀x(P j x ∧ ¬ Abφ x → ¬P kx) for some k, with B(cid:8) |= P kc ∧ ¬ Abφc. In this case too, there is a negative path from v i to v j (via vk using modus tollens at the end) that does not contain an element of X .(cid:2)(cid:2)δ∈(cid:6) Abδ x) for some (cid:6), with B(cid:8) |= ¬ (c) φ = ∀x(P j x →δ∈(cid:6) Abδc. Then it follows that X ∩ (cid:6) = ∅. By Proposition A.14, Y ∈ D(v j) for some Y ⊆ (cid:6). Since X contains no element of (cid:6), it contains no element of this Y . Therefore, X is not an acceptable exception set for v j .is like case (c), then the Y which is found is also part of v j . If φ(cid:8)(d) φ = ∀x(P j x ∧ ¬ Abφ → P kx) for some k, with B(cid:8) |= ¬P kc ∧ ¬ Abφc. In this case, change the model one step further, making P kc true. Since the new model B(cid:8)(cid:8) /∈ F , find a new φ ∈ ((cid:7)↑)W I such that B(cid:8)(cid:8) |= ¬φ. If this φ(cid:8)is like in case (a) or (b), there is still a negative path from v i to v j , which is just one arc longer than the path we found in case (a) and (b). (Recall that a negative path can go through any amount of positive arcs ‘in the wrong direction’ at the end.) If φ(cid:8)is itself like case (d), then we continue to proceed in the same way. Since no amount of making predicates true will make the model part of F , going on long enough will lead to a φ(cid:8)of one of the first three forms. The only potential complication in this induction is the possibility that we are led to a formula like type a or b where P k is true merely because of a change we made to the model. In this case there is a negative path from v j to itself of which no element is in X . Since this path is a contradicting set relative to v j , it follows that X is not an acceptable exception set for v j . (cid:3)Corollary A.19 (Soundness–completeness). Let (cid:6)V , (cid:7)(cid:7) be an inheritance network, and suppose (cid:7)↑only if (cid:7)↑, {P ic} |=d P jc, and v i (cid:21)(cid:7) ¬v j if and only if (cid:7)↑, {P ic} |=d ¬P jc.is coherent. Then v i (cid:21)(cid:7) v j if and Proof. The proof of the second equivalence is left to the reader. As for the first: let (cid:6)U , F (cid:7) correspond to (cid:6)(cid:7)↑, {P ic}(cid:7).By definition, v i (cid:21)(cid:7) v j if and only if (a) for every minimal exception set X for v i , there is a positive path Y from v i to v j with X ∩ Y = ∅.By Theorem A.18, (a) holds iff (b) A |= P jc for every A ∈ F representing some minimal exception set for v i in c.By Proposition A.17, (b) holds iff (c) A |= P jc for every optimal model A in F .By definition, (c) is true iff (cid:7)↑, {P ic} |=d P jc (¬P jc). (cid:3)A.3. CoherenceTheorem A.20. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network with V = {v 1, . . . , vn}. Then (cid:7)↑is incoherent if and only if ∅ ∈ d(v i) for some i.Proof. (cid:7)↑((cid:7)↑)W I |= ∀x¬P j x for some P j . By the convention on empty disjunctions, ∀x¬P j x is equivalent to ∀x(P j x →By Proposition A.14 this means that ∅ ∈ D(v j). The latter implies that ∅ ∈ d(v i) for some i. (cid:3)is incoherent if and only if there is some P i such that (cid:7)↑W I ∪ {∃xP j x} is inconsistent. This is so if and only if α∈∅ Abα x). (cid:2)Proposition A.21. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network without strict arcs. If ∅ ∈ d(x), then there are some z and some y (cid:3) x, ysuch that (cid:7) contains a positive arc from y to z and a negative arc from yto z.(cid:8)(cid:8) (cid:3) xProof. Suppose ∅ ∈ d(x). Then there is some minimal conflicting set X ⊆ E ss(cid:7)(x). We may assume without loss of generality that X is the union of a positive path {xy1, y1 y2, . . . , ym z} and a negative path {xy(cid:8)(cid:8)(cid:8)1, y2, . . . , y1 y(cid:8)n. (cid:3)Since ym z ∈ X , it follows that ym z ∈ E ss(cid:7)(x). Therefore, x (cid:3) ym. Analogously, x (cid:3) y−}.(cid:8)n z118H. Bastiaanse, F. Veltman / Artificial Intelligence 238 (2016) 96–118Proposition A.22. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network. If ∅ ∈ d(x), then there are some z and some y (cid:3) x, ysemi-strictly implies z and ysemi-strictly refutes z.(cid:8)(cid:8) (cid:3) x such that yProof. Suppose ∅ ∈ d(x). Then there is some minimal conflicting set X ⊆ E ss(cid:7)(x). We may assume without loss of generality −} (where some of these that X is the union of a positive path {xy1, y1 y2, . . . , yn z} and a negative path {xymay actually be strict).(cid:8)2, . . . , y(cid:8)1, y(cid:8)1 y(cid:8)n zPick the smallest i for which yi strictly implies z.28 Since yi−1 yi ∈ X , it follows that yi−1 yi ∈ E ss(cid:7)(x). But by construction yi−1 yi is not strict. Therefore, yi−1 (cid:3) x.(cid:8)j−1Analogously, yinstead.) Now let y = yi−1, y(cid:8) = y(cid:8)j−1. By construction, y semi-strictly implies z and y(cid:8)semi-strictly refutes it. (cid:3)(cid:3) x when we pick the smallest j for which y(cid:8)j strictly refutes z. (If no y(cid:8)j does so, pick j = n + 1Corollary A.23. Let (cid:6)V , (cid:7)(cid:7) be an inheritance network. (cid:7)↑strictly implies z, and y semi-strictly refutes z.is incoherent if and only if there are x, y, z ∈ V such that x (cid:3) y, x semi-References[1] J. McCarthy, Circumscription: a form of non-monotonic reasoning, in: M.L. Ginsberg (Ed.), Readings in Nonmonotonic Reasoning, Kaufmann, Los Altos, CA, 1987, pp. 145–151.[2] J. McCarthy, Applications of circumscription to formalizing common sense knowledge, in: V. Lifschitz (Ed.), Formalizing Common Sense: Papers by John McCarthy, Ablex Publishing Corporation, Norwood, New Jersey, 1990, pp. 198–225.[3] J.F. Horty, R.M. Thomason, D.S. Touretzky, A skeptical theory of inheritance in nonmonotonic semantic networks, Artif. Intell. 42 (1990) 311–348.[4] P.A. Bonatti, C. Lutz, F. Wolter, Description logics with circumscription, in: P. Doherty, J. Mylopoulos, C. Welty (Eds.), Proceedings of the 10th Interna-tional Conference on the Principles of Knowledge Representation and Reasoning, KR 2006, AAAI Press, 2006, pp. 400–410.[5] P.A. Bonatti, C. Lutz, F. Wolter, The complexity of circumscription in DLs, J. Artif. Intell. Res. (2009) 717–773.[6] J. Delgrande, An approach to default reasoning based on a first-order conditional logic: revised report, Artif. Intell. 36 (1988) 63–90.[7] N. Asher, M. Morreau, Commonsense entailment: a modal theory of nonmonotonic reasoning, in: J. van Eijck (Ed.), Logics in AI: Proc. of the European Workshop JELIA’90, Springer, Berlin, Heidelberg, 1991, pp. 1–30.[8] C. Boutilier, The complexity of circumscription in DLs, Artif. Intell. 68 (1994) 87–154.[9] F. Veltman, Defaults in update semantics, J. Philos. Log. (1996) 221–261.[10] H. Geffner, Default Reasoning: Causal and Conditional Theories, vol. 4, MIT Press, Cambridge, MA, 1992.[11] D. Makinson, K. Schlechta, Floating conclusions and zombie paths: two deep difficulties in the “directly skeptical” approach to defeasible inheritance nets, Artif. Intell. 48 (1991) 199–209.[12] M. Ginsberg, Essentials of Artificial Intelligence, Morgan Kaufmann, 1993.[13] J.F. Horty, Skepticism and floating conclusions, Artif. Intell. 135 (2002) 55–72.[14] H. Prakken, Intuitions and the modelling of defeasible reasoning: some case studies, arXiv preprint, cs/0207031.[15] R.H. Thomason, J.F. Horty, D.S. Touretzky, A calculus for inheritance in monotonic semantic nets, in: Z. Ras, M. Zemankova (Eds.), Proceedings of the Second International Symposium on Methodologies for Intelligent Systems, North Holland, 1987, pp. 280–287.[16] A. Bochman, Default theory of defeasible entailment, in: Proceedings of the 11th International Conference on the Principles of Knowledge Representa-tion and Reasoning, KR 2008, AAAI Press, 2008, pp. 466–475.[17] R. Reiter, A logic for default reasoning, Artif. Intell. 13 (1) (1980) 81–132.[18] J.F. Horty, Some direct theories of nonmonotonic inheritance, in: D. Gabbay, C. Hogger, J. Robinson (Eds.), Handbook of Logic in Artificial Intelligence and Logic Programming, vol. 3, Oxford University Press, 1994, pp. 111–187.[19] Z. Qian, K.B. Irani, Circumscribing defaults, in: Proceedings of the 12th International Joint Conference on Artificial Intelligence, IJCAI, Morgan Kaufmann, 1991, pp. 438–445.28 For yi−1 to exist we must assume x does not semi-strictly imply z, but this is safe because if it does then we can pick y = x and skip the next couple of steps in the proof.