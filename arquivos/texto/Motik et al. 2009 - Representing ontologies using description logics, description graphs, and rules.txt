Artiﬁcial Intelligence 173 2009 12751309 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Representing ontologies description logics description graphs rules Boris Motik Bernardo Cuenca Grau Ian Horrocks Ulrike Sattler b University Oxford UK b University Manchester UK r t c l e n f o b s t r c t Article history Received 20 February 2009 Received revised form 3 June 2009 Accepted 9 June 2009 Available online 13 June 2009 Keywords Knowledge representation Description logics Structured objects Ontologies Description logics DLs family stateoftheart knowledge representation languages expressive power carefully crafted provide useful knowledge modeling primitives allowing practically effective decision procedures basic reasoning problems Recent experience DLs shown expressivity insuﬃcient accurately structured objectsobjects parts interconnected arbitrary treelike ways DL knowledge bases describing structured objects usually underconstrained precludes entailment certain consequences causes performance problems reasoning To address problem propose extension DL languages description graphs knowledge modeling construct accurately objects parts connected arbitrary ways Furthermore enable modeling conditional aspects structured objects extend DLs rules We present indepth study computational properties formalism In particular ﬁrst identify sources undecidability general unrestricted formalism Based analysis investigate restrictions general formalism reasoning decidable We present practical evidence logic model nontrivial structured objects Finally present practical decision procedure formalism tight complexity bounds 2009 Elsevier BV All rights reserved 1 Introduction The Web Ontology Language OWL wellknown language ontology modeling Semantic Web 34 The World Wide Web Consortium W3C currently working revision OWLcalled OWL 2 10whose main goal address limitations OWL The formal underpinnings OWL OWL 2 provided description logics DLs 3knowledge representation formalisms wellunderstood formal properties DLs structured objectsobjects parts interconnected complex ways Such objects abound molecular biology clinical sciences clinical ontologies GALEN Foundational Model This extended version papers published WWW 2008 B Motik B Cuenca Grau U Sattler Structured objects OWL Representation reasoning Proc 17th Int World Wide Web Conference WWW 2008 Beijing China April 2125 2008 ACM Press 2008 pp 555564 KR 2008 B Motik B Cuenca Grau I Horrocks U Sattler Representing structured objects description graphs Gerhard Brewka Jérôme Lang Eds Proc 11th Int Joint Conf Principles Knowledge Representation Reasoning KR 2008 Sydney NSW Australia August 1619 2008 AAAI Press 2008 pp 296306 respectively Corresponding author Oxford University Computing Laboratory Wolfson Building Parks Road Oxford OX1 3QD United Kingdom Email addresses borismotikcomlaboxacuk B Motik bergcomlaboxacuk B Cuenca Grau ianhorrockscomlaboxacuk I Horrocks sattlercsmanacuk U Sattler 00043702 matter 2009 Elsevier BV All rights reserved doi101016jartint200906003 1276 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Anatomy FMA National Cancer Institute NCI Thesaurus numerous structured objects For example FMA models human hand consisting ﬁngers palm bones blood vessels highly interconnected Modeling structured objects poses numerous problems DLs OWL family languages The design DLs driven desire provide practically useful knowledge modeling primitives ensuring decidability core reasoning problems To achieve goal modeling constructs available DLs usually carefully crafted resulting language exhibits variant treemodel property 39 satisﬁable DL ontology model elements connected treelike manner This property derive decision procedure prevents accurately describing usually nontreelike structured objects model exists model reﬂect intended structure This technical problem severe consequences practice 28 In search correct way describing structured objects modelers create overly complex descriptions required expressive power actually missing descriptions entail consequences follow descriptions accurately captured intended structure We discuss expressivity limitations DLs Section 3 present practicallymotivated example In order address lack expressivity paper extend DLs description graphs stood schemalevel descriptions structured objects To allow representation conditional statements structured objects extend DLs ﬁrstorder rules 20 In way obtain powerful versatile knowl edge representation formalism It allows example structure hand description graphs statements bone hand fractured hand fractured rules nonstructural aspects domain medical doctor person MD degree DLs Unsurprisingly formalism undecidable unrestricted form It widely recognized reasoning algorithms likely effective practice underlying logics decidable Therefore discuss main causes undecidability investigate restrictions formalism decidable We observed structured objects described possibly large bounded number parts For example human body consists organs decomposed smaller parts decomposi tion eventually lead parts want know In vein FMA describes skeleton hand internal structure distal phalanges ﬁngers The number parts needed hand determined granularity hierarchical decomposition hand This decomposition naturally deﬁnes acyclic hierarchy description graphs For example ﬁngers described description graphs subordinate hand description graph hand naturally subordinate description graphs ﬁngers We use observation deﬁne particular acyclicity restriction description graphs Acyclicity bounds number parts needs reason provided DL axioms obtain decision procedure basic reasoning problems If description graphs combination DL axioms acyclicity condition ensure decidability possible interactions DL axioms graphs rules 26 To ensure decidability limit interaction imposing additional role separation condition In particular separate roles binary predicates DL axioms roles rules furthermore depending expressivity DL additionally require DL axioms refer roles description graphs We present hypertableaubased 31 reasoning algorithm decides satisﬁability problem decidable cases acts semidecision procedure undecidable ones Furthermore present tight complexity bounds decidable variants formalism identify main sources complexity We implemented reasoning algorithm HermiT1 reasoner 30 initial experiments shown algorithm amenable practice Evaluation approach currently diﬃcult lack test data We devised algorithm extracts description graphs existing OWL ontologies applied GALEN FMA The resulting ontologies treated caution domain experts conﬁrmed substantial parts derived ontologies agree intuition Our transformation starting point comprehensive remodeling ontologies description graphs Our experiments allowed discover modeling error GALEN indication practical usefulness formalism Furthermore classiﬁcation times transformed ontolo gies similar orders magnitude original ontologies despite fact formalism adds considerable expressive power DLs We believe description graphs modeling structured objects number domains list Anatomy In Sections 3 4 present comprehensive example description graphs applied model human anatomy Chemistry The precise description molecules important problem bioinformatics 23 A formal representation molecules chemical compounds integrate information different chemical databases 23 The structure molecules treelike For example hydrocarbons chemical compounds containing carbon 1 httpwwwhermitreasonercom B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1277 hydrogen chains benzene hydrocarbon molecules contain exactly benzene ring The structure benzene described formalism description graphs represent benzene ring bounded size standard OWL axioms represent treelike carbonhydrogen chains Scientiﬁc workﬂows Scientiﬁc workﬂows descriptions steps scientiﬁc experiments rep resented directed graphs node depicts single experiment step edge represents information ﬂow steps The precise description workﬂows increasingly important example bioinformatics Attempts provide semantics workﬂows OWL 16 success limited far nontreelike structure Since workﬂows typically bounded naturally represented description graphs Engineering OWL recently engineering domains aerospace industry involve representation complex structured objects aeroplanes 19 The number parts needed aircraft naturally bounded way case human body domains easily represented description graphs 17 2 Preliminaries The formal underpinnings OWL 2 provided DL SROIQ 25 To results easier follow paper consider DL SHOIQ covers SROIQ socalled complex role inclusions Using wellknown encoding 1321 complex role inclusions encoded SHOIQ axioms decidability results reasoning algorithms paper easily extended SROIQ OWL 2 We present deﬁnition SHOIQ Section 21 In Section 22 recapitulate wellknown principles extending DLs ﬁrstorder rules Finally Section 23 present overview hypertableau algorithm SHOIQ 31 21 The description logic SHOIQ A SHOIQ signature triple NC N R N I consisting mutually disjoint sets atomic concepts NC atomic roles N R cid5 cid5 A role R R named individuals N I In rest paper assume signature implicit relevant deﬁnitions inverse role R N R The function inv deﬁned set roles invR R R An RBox axiom expression form R1 cid4 R2 role inclusion DisS1 S2 role disjointness RefR invR reﬂexivity IrrS irreﬂexivity SymR symmetry AsyS asymmetry TraR transitivity R R 1 R2 roles S S1 S2 simple roles deﬁned For X set RBox axioms let cid4 X reﬂexivetransitive closure relation R1 cid4 R2 invR1 cid4 invR2 R1 cid4 R2 X A role R transitive X role R exists cid5 cid4 cid5 X A role S simple X transitive role R exists R R cid4 X R R cid4 X S Given set RBox axioms X set concepts wrt X smallest set containing cid6 concept concept A atomic concept nominal C negation C cid8 D conjunction C cid9 D disjunction RC existential restriction RC universal restriction SSelf local reﬂexivity cid2 n SC atleast restriction cid3 n SC atmost restriction A atomic concept individual C D concepts R role S simple role wrt X n nonnegative integer The set literal concepts deﬁned N L NC A A NC A TBox T ﬁnite set RBox axioms general concept inclusion GCI axioms C cid4 D C D concepts wrt subset RBox axioms T 2 cid5 X TrainvR TraR X R An assertion expression form Ca concept assertion Ra b role assertion b equality assertion cid14 b inequality assertion C concept R role b named individuals An ABox A ﬁnite set assertions Finally SHOIQ knowledge base pair T A T TBox A ABox An interpretation signature NC N R N I tuple I cid15I I cid15I nonempty set called interpretation domain I function assigning element aI cid15I named individual N I set A I cid15I atomic concept A NC relation R I cid15I cid15I atomic role R N R The extension I concepts roles satisfaction axioms assertions I deﬁned shown Table 1 An interpretation I model T A written I cid17 T A axioms T assertions A satisﬁed I The basic inference problem SHOIQ checking T A satisﬁablethat model T A exists A concept C subsumes concept D wrt T A written T A cid17 C cid4 D C I D I model I T A It known T A cid17 C cid4 D T A Ca Da unsatisﬁable individual occurring T A 3 The negationnormal form nnfC concept C concept equivalent C negations occur atomic concepts concepts form SSelf The concept nnfC computed time linear size C 3 With K denote size knowledge base Kthat number symbols required encode K input tape Turing machine numbers coded binary SHIQ ALCHOIQ SHOQ obtained SHOIQ obtained SHOIQ disallowing nominals inverse roles respectively disallowing transitivity axioms ALCIF allows negation conjunction 2 The TBox T assumed contain GCIs RBox axioms represented separate set R simplify presentation following sections paper assume T contains GCIs RBox axioms 1278 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Table 1 Modeltheoretic semantics SHOIQ R I cid6I I sI CI C cid8 DI C cid9 DI RCI RCI SSelfI cid2 n SC I cid3 n SC I Interpretation roles concepts cid18 y xcid19 cid18x ycid19 R I cid15I sI cid15I C I C I D I C I D I x y cid18x ycid19 R I y C I x y cid18x ycid19 R I y C I x cid18x xcid19 S I x cid2 y cid18x ycid19 S I y C I cid2 n x cid2 y cid18x ycid19 S I y C I cid3 n I cid17 C cid4 D I cid17 R1 cid4 R2 I cid17 DisS 1 S 2 I cid17 RefR I cid17 IrrS I cid17 SymR I cid17 AsyS I cid17 TraR I cid17 Ca I cid17 Ra b I cid17 b I cid17 cid14 b Interpretation axioms assertions iff iff iff iff iff iff iff iff iff iff iff iff C I D I R I R I 2 1 S I S I 2 1 x cid15I cid18x xcid19 R I x cid15I cid18x xcid19 S I R I invRI S I invSI x y z cid15I cid18x ycid19 R I cid18 y zcid19 R I cid18x zcid19 R I aI C I cid18aI bI cid19 R I aI bI aI cid14 bI Note cid2N number elements N Table 2 Satisfaction rules interpretation I μ cid17 Cs I μ cid17 Rs t I μ cid17 s t I μ cid17 m I cid17 I cid17 R cid2 cid2 m i1 U i1 U iff iff iff iff iff iff cid3 n j1 V j cid3 n j1 V j sIμ C I cid18sIμ t Iμcid19 R I sIμ t Iμ I μ cid17 U 1 cid3 cid3 m implies I μ cid17 V j 1 cid3 j cid3 n cid3 I μ cid17 i1 U n j1 V j mappings μ I cid17 r rule r R cid2 m disjunction existential universal restrictions inverse roles axioms form cid6 cid4 cid3 1 Rcid6 Finally ALCF obtained ALCIF disallowing inverse roles 22 Extending DLs rules Description logics extended rulesclauses interpreted standard ﬁrstorder semanticsin straightfor ward way 142026 Let N V set variables disjoint set individuals N I An atom expression form Cs Rs t s t s t individuals variables C concept R role A rule expression form U 1 Um V 1 V n 1 U V j atoms m cid2 0 n cid2 0 The conjunction U 1 Um called body disjunction V 1 V n called head Without loss generality assume rule r contains body The body head rule written cid6 respectively A rule Horn head rule contains atom Variables x y directly connected rule r occur body atom r furthermore connected transitive closure directly connected A rule r connected pair variables x y occurring r connected r Let I cid15I I interpretation μ N V cid15I mapping variables elements interpretation domain Let aIμ aI individual xIμ μx variable x Satisfaction atom rule set rules R I μ deﬁned Table 2 23 Hypertableau calculus SHOIQ We present overview hypertableau calculus 31 decide satisﬁability SHOIQ knowledge base T A B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1279 The algorithm ﬁrst preprocesses T A set rules ΞT T ABox A ΞAT This transformation consists steps First transitivity axioms eliminated T encoding general concept inclusions similar encodings known context description modal logics 273738 Second axioms normalized complex concepts replaced atomic ones way similar structural transformation 35 Third normalized axioms translated rules correspondences description ﬁrstorder logic 8 We omit details preprocessing sake brevity 31 Section 41 All steps satisﬁability preserving ΞT T A ΞAT equisatisﬁable T A Preprocessing produces HTrulessyntactically restricted rules hypertableau calculus guaranteed ter minate In deﬁnition HTrules rest paper use following function ar Given role R variables constants s t function returns atom atomic role semantically equivalent Rs t cid4 arR s t Rs t St s R atomic role R inverse role R S Deﬁnition 1 HTrule We assume set atomic concepts NC contains nominal guard concept O individual concepts occur input knowledge base An atmost equality atom form s t u integer S role B literal concept u equivalent s t cid3n SB s t u constants variables n nonnegative cid3n SB atom called annotation This atom semantically An HTrule r rule form 1 m cid2 0 n cid2 0 possible separate variables center variable x set branch variables yi set nominal variables z j following properties hold A atomic concept B literal nominal guard concept O nominal guard concept R atomic role S role Each atom body r form Ax Rx x Rx yi R yi x A yi Az j Each atom head r form Bx cid2 h SBx B yi Rx x Rx yi R yi x Rx z j Rz j x x z j yi y j x cid3h SB Each yi occurs body r atom form Rx yi R yi x Each z j occurs body r atom form O az j Each equality yi y j x occurs r cid3h S A head r occurs subclause r form 2 yk 1 cid3 k cid3 h 1 h1cid5 cid6 cid7 arS x yk A yk cid8 k1 1cid3kcid4cid3h1 yk ycid4 x cid3h S A 2 Each equality yi y j x occurs r cid3n S A head r occurs subclause r form 3 yk 1 cid3 k cid3 h 1 h1cid5 k1 arS x yk h1cid8 k1 A yk cid8 1cid3kcid4cid3h1 yk ycid4 x cid3h S A 3 Intuitively body head HTrules seen starshaped variable x represents center star branch variables yi connected center role atoms Such shape ensures HTrules enforce treelike modelsa property explain good computational properties DLs 39 Atoms form x z j HTrules stem nominals For example axiom C cid4 naturally corresponds rule Cx x To avoid making calculus unnecessarily complex rules contain constants 31 Therefore nominal guard concepts push constants rules ABox For example mentioned rule transformed HTrule Cx O az x z assertion O aa Nominal guard concepts unique nominal internally algorithmthat allowed occur input knowledge base Atmost equalities yi y j x cid3n RC stem translation atmost concepts example cid6 cid4 cid3 1 Rcid6 translated Rx y1 Rx y2 y1 y2 x cid31 Rcid6 affect meaning equality merely records provenance shall discuss usage shortly The concept RC rest paper abbreviation cid2 1 RC cid31 Rcid6 The annotation x The hypertableau calculus takes set HTrules R input ABox A decides satisﬁability R A 1280 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Deﬁnition 2 Hypertableau algorithm Individuals Given set named individuals N I set root individuals N O smallest set N I N O x N O xcid18R B icid19 N O role R literal concept B integer The set generalized individuals N A smallest set N O N A x N A xi N A integer The individuals N A N O tree individuals A tree individual xi successor x x predecessor xi Descendant ancestor transitive closures successor predecessor respectively ABoxes The hypertableau algorithm operates ABoxes obtained extending standard deﬁnition fol lows In addition standard assertions ABox contain atmost equalities special assertion false interpretations Furthermore assertions refer individuals N A N I Each inequality s t s cid14 t stands symmetric inequality t s t cid14 s The true annotated atmost equalities An ABox A contain renamings form cid25 b b root individuals The relation cid25 A acyclic A contain renaming cid25 b individual A contains cid25 b occur assertion inequality A An individual b canonical root individual A written b cid26acid26A iff cid25 reﬂexivetransitive closure cid25 A b exists individual c cid14 b b cid25 c cid25 An input ABox contains named individuals atmost equalities renamings concepts literal roles atomic Satisfaction ABoxes interpretation obtained straightforward generalization deﬁnitions Section 21 individuals interpreted elements interpretation domain cid15I I cid17 cid25 b iff aI bI Merge target An individual t merge target individual s t named individual t root individual s named individual s descendant t Pruning The ABox pruneAs obtained A removing assertions containing descendant s Merging The ABox mergeAs t obtained pruneAs replacing individual s individual t assertions annotations renamings s t root individuals adding renaming s cid25 t Pairwise blocking The labels individual s individual pair cid18s tcid19 ABox A deﬁned follows LAs LAs t cid9 cid9 cid10 A As A A atomic concept cid10 R Rs t A Let strict ordering transitive irreﬂexive relation N A containing ancestor relationthat s ancestor s s cid5 s By induction assign individual s A status follows cid5 tree individual s directly blocked tree individual t iff s cid5 cid5 t predecessors s t respectively t blocked t s LAs LAt LAs cid5 LAt t LAs s cid5 LAt cid5 cid5 s LAt cid5 LAs cid5 t s indirectly blocked iff predecessor blocked s blocked iff directly indirectly blocked Derivation rules Table 3 speciﬁes derivation rules given ABox A set HTrules R derive ABoxes A1 An In Hyprule σ mapping set variables HTrule individuals occurring assertions A σ U result replacing variable x atom U σ x In NIrule u root individual R role B literal concept integer deﬁne rootforu R B ucid18R B icid193 Rule precedence The rule applied possibly annotated equality s t ABox A A contain equality s t u cid3n RB NIrule applicable Clash An ABox A contains clash iff A A clashfree Derivation For set HTrules R ABox A derivation pair T ρ T ﬁnitely branching tree ρ function labels nodes T ABoxes following properties hold node t T ρt A t root T 3 The function rootfor formalization algorithm 31 introduced presentation algorithm Section 6 easier B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1281 Table 3 Derivation rules hypertableau calculus Hyprule If 1 2 21 22 23 r R r U 1 Um V 1 V n mapping σ variables r individuals A exists σ x indirectly blocked variable x N V σ U A 1 cid3 cid3 m σ V j A 1 cid3 j cid3 n A1 A n 0 A j A σ V j 1 cid3 j cid3 n cid2rule rule rule NIrule If 1 cid2 n RBs A s blocked A 2 3 A contain individuals u1 31 32 arR s ui Bui 1 cid3 cid3 n ui cid14 u j 1 cid3 j cid3 n A ui indirectly blocked A 1 cid3 cid3 n A1 A arR s ti Bti 1 cid3 cid3 n ti cid14 t j 1 cid3 j cid3 n t1 tn fresh distinct tree successors s s t A equality possibly annotated s cid14 t s t indirectly blocked If 1 2 3 A1 mergeAs t t merge target s A1 mergeAt s s cid14 s A As As A s indirectly blocked If 1 If A1 A s t u u root individual s root individual tree successor u t root individual s t indirectly blocked A symmetry applies usual 2 3 4 5 cid2n RB Ai mergeAs cid26rootforu R B icid26A 1 cid3 cid3 n Fig 1 A forestshaped ABox t leaf T ρt derivation rule applicable ρt R t children t1 tn ρt1 ρtn exactly results applying arbitrarily chosen specting rule precedence applicable rule ρt R cases A derivation successful T contains branch t1 t2 ABox ρti clashfree The Hyprule similar hypertableau calculus ﬁrst order logic 6 given HTrule form 1 ABox A Hyprule tries unify atoms U 1 Um subset assertions A uniﬁer σ rule nondeterministically derives σ V j 1 cid3 j cid3 n For example given Rx y RCx D y assertion Ra b Hyprule derives RCa Db The cid2rule deals existential quantiﬁers example given RCa rule introduces fresh individual t derives Ra t Ct The rule deals equality example given b rule replaces individual assertions individual b introduces renaming cid25 b order track merge As discussed 31 renamings necessary ensure soundness NIrule Finally rule detects contradictions Aa Aa cid14 Termination calculus ensured blocking correctness relies notion forestshaped ABoxes Such ABox shown Fig 1 nodes edges correspond individuals role assertions respectively Named individuals shown black nodes originate input ABox connected arbitrary ways Tree individuals shown white nodes called blockable individuals 31 introduced cid2rule connected arbitrary named individuals tree individuals treelike way For convenience tree individuals represented algorithm strings example s a1 denotes s ﬁrst successor Now possible cid2rule applied nonblocked individuals jeopardizing completeness Intuitively s blocked t ABox A derivation rule applicable A model knowledge 1282 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 base constructed unraveling Athat replicating fragment s t inﬁnitely Effectively blocking means need introduce tree successors order satisfy assertions form cid2 n RCs reuse successors t Applications derivation rules preserve forest shape ABox inverse roles nominals number cid6 restrictions cause subtle problems Consider Fig 1 assume d satisfy atmost restriction cid3 1 R This implies v s individual merged compromise tree shape ABox The NIrule deals problem promoting v s root individual individuals connected arbitrary ways occur input ABox Thus application Hyprule ABox Fig 1 HTrule R y1 x R y2 x y1 y2 x cid31 Rcid6 By examining annotation equality NIrule detect equality stems atmost concept response turns v s root individual It possible establish bound number introduced root individuals prove termination cid31 Rcid6 derives atmost equality v s d The complexity hypertableau calculus possible interaction number restrictions inverse roles nominals If description logic support constructors HTrules ΞT T simpler form prevents derivation assertions satisfy preconditions NIrule In cases atom form yi y j x cid3n RB simpliﬁed yi y j set root individuals set named individuals Furthermore Condition 32 cid2rule satisﬁed need explicitly checked On SHOQ HTrules ΞT T following simpler form Deﬁnition 3 Simple HTrule A simple HTrule rule r form 1 possible separate variables center variable x set branch variables yi set nominal variables z j following properties hold A atomic concept B literal nominal guard concept O nominal guard concept R atomic role Each atom body r form Ax Rx x Rx yi A yi Az j Each atom head r form Bx cid2 n RBx B yi Rx x Rx yi Rx z j x z j yi y j Each yi occurs body r atom form Rx yi Each z j occurs body r atom form O az j Simple HTrules allow simpler version blocking instead pairs individuals needs consider single individuals Deﬁnition 4 Single blocking By induction individual s A assigned status follows tree individual s directly blocked tree individual t t blocked t s LAs LAt s indirectly blocked predecessor blocked s blocked directly indirectly blocked 3 Problems modeling complex structures To understand limitations modeling structured objects DLs OWL consider problem modeling skeleton human hand structure shown Fig 2a The carpal bones form base hand The central hand contains metacarpal bones leading ﬁnger The ﬁngers consist phalanges proximal phalanges connected metacarpal bones ﬁngers apart thumb contain middle phalanx proximal distal phalanx This structure intuitively conceptualized shown Figs 2b2e4 This structure straightforwardly encoded DL ABox A ABox assertions represent concrete data A represent structure particular hand In paper concerned modeling structured objects schema levelthat want general structure hands We able instantiate description times For example patient hand concrete patient instantiate different hand structure shown Figs 2b2e depending properties patient axioms ontology structure exhibit distinct features This clearly achieved ABox assertions We logical schemalevel interpretation Figs 2b2e treating vertices concepts arrows partici pation constraints concepts For example vertices 1 6 correspond concepts Hand Index_ﬁnger instances hands index ﬁngers respectively Furthermore arrow 1 6 inter preted statement hand index ﬁnger In DLs participation constraint commonly represented axioms 45 4 The relationship attached_to assumed bidirectional edges labeled oriented B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1283 Fig 2 The anatomy hand conceptual models Hand cid4 partIndex_ﬁnger Hand cid4 cid3 1 partIndex_ﬁnger 4 5 Thus knowledge base K containing axioms 619 provide formalization structure shown Fig 2e5 Index_ﬁnger cid4 partDistal_phalanx_oif Index_ﬁnger cid4 partMiddle_phalanx_oif Index_ﬁnger cid4 partProximal_phalanx_oif Distal_phalanx_oif cid4 attached_toMiddle_phalanx_oif Middle_phalanx_oif cid4 attached_toDistal_phalanx_oif Middle_phalanx_oif cid4 attached_toProximal_phalanx_oif Proximal_phalanx_oif cid4 attached_toMiddle_phalanx_oif Index_ﬁnger cid4 cid3 1 partDistal_phalanx_oif Index_ﬁnger cid4 cid3 1 partMiddle_phalanx_oif Index_ﬁnger cid4 cid3 1 partProximal_phalanx_oif Distal_phalanx_oif cid4 cid3 1 attached_toMiddle_phalanx_oif Middle_phalanx_oif cid4 cid3 1 attached_toDistal_phalanx_oif Middle_phalanx_oif cid4 cid3 1 attached_toProximal_phalanx_oif 5 The suﬃx _of_index_ﬁnger abbreviated _oif 6 7 8 9 10 11 12 13 14 15 16 17 18 1284 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Proximal_phalanx_oif cid4 cid3 1 attached_toMiddle_phalanx_oif 19 Fig 3 Unintended model I cid5 Let I interpretation corresponding Fig 2e obvious way Clearly I satisﬁes K justiﬁes formalization Fig 2e K Let extend K knowledge bone fractures For example let Kcid5 extension K axiom 20 stating middle phalanx index ﬁnger broken index ﬁnger broken Index_ﬁnger cid8 partMiddle_phalanx_oif cid8 Broken cid4 Broken 20 Given structure index ﬁnger shown Fig 2e expect Kcid5 phalanx attached broken middle phalanx index ﬁnger broken imply index ﬁnger distal cid11 Index_ﬁnger cid8 cid12 Distal_phalanx_oif cid8 attached_toMiddle_phalanx_oif cid8 Broken cid4 Broken 21 That Kcid5 Unfortunately Kcid5 underconstrained models Kcid5 correspond structure index ﬁnger shown Fig 2e Axioms 7 9 imply existence middle phalanges index ﬁnger Kcid5 capture fact given index ﬁnger middle phalanges object Thus inﬁnite interpretation I middle phalanx index ﬁnger broken middle phalanges second level model need broken axiom 20 necessarily derive index ﬁnger broken consequently axiom 21 consequence Kcid5 shown Fig 3 model Kcid5 In I cid5 cid5 underconstrained lead problems performance reasoning In order disprove entailment DL reasoner try construct canonical model Kcid5 model contains little information derivable Kcid5 possible Such models highly repetitive larger intended ones constructing costly The interpretation I example canonical model contains inﬁnite tree phalanges instead ﬁnite structure shown Fig 2e In experience main reason DL reasoners process complex ontologies FMA certain versions GALEN These problems addressed ensuring models Kcid5 resemble possible intended ceptualization shown Figs 2b2e DL axioms usually syntactically restricted resulting logic exhibits variant tree model property 39 DL knowledge base model model certain tree shape I The tree model property generally considered desirable absence leads undecidability reasoning At time means leave conﬁnes DLs want faithfully represent structured objects cid5 cid5 Rule formalisms datalog 1 routinely express conditions nontree structures typically provide existential quantiﬁcation Such rules applied individuals explicitly mentioned knowledge base express schema constraints patient unknown hand Ontology languages OWLFlight 12 Telos 33 logic programming variant FLogic 22 based datalog share restrictions Combining rules description logics overcomes limitations datalog yields expressive knowledge representation formalism capable axiomatizing nontree structures 2026 Similarly ﬁrstorder version FLogic 22 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1285 provides combination existential quantiﬁcation rules Such solutions complex susceptible modeling errors Furthermore extension DLs rules undecidable simple DLs 26 case ﬁrstorder version FLogic A number decidable combinations DLs rules proposed practice decidability typically achieved syntactically restricting applicability rules For example DLsafe rules 32 restricted apply explicitly named objects Rolesafe 26 weakly safe 36 rules impose restrictions pre vent application rules arbitrary elements domain similar restrictions employed nonmonotonic rule extensions DLs 152936 Consequently extensions useful mainly query answering schema modeling To address problems outlined section SROIQ 25 provides complex role inclusionsaxioms form R1 Rn cid4 S stands role composition Such axioms restricted way ensures decidability basic reasoning problems The use complex role inclusions solves identiﬁed problems axiomatize arbitrary structures Fig 2b In rest paper propose formalism modeling arbitrarily connected structured objects extending DLs description graphs For example Fig 2d seen description graph showing thumb proximal distal phalanx attached Different structured objects represented separate description graphs appropriately connected For example hand thumb represented different description graphs connected Furthermore structured objects need modeled different levels abstraction For example like abstract structure common ﬁngers shown Fig 2c specialize index ﬁnger introducing middle phalanx shown Fig 2e To end formalism provides graph specialization statements represent fact structure general Finally order represent conditional aspects domain allow arbitrary rules description graphs example state bone hand fractured hand fractured We introduce formalism following section exclude unintended inﬁnite models Fig 3 Our formalism related weakly guarded tuple generating dependencies 9 guarded fragment ﬁrst order logic 2 allow axiomatizing nontree structures bounded treewidth Unlike formalisms graphextended knowledge bases allow functional roles arbitrary rules furthermore present different syntactic restrictions achieve decidability reasoning 4 A formalism modeling complex structures In section present knowledge representation formalism We start deﬁning notion description graph Deﬁnition 5 Description graph An cid4ary description graph G V E λ M directed labeled graph V 1 cid4 set cid4 vertices E V V set edges λ labeling function assigns set literal concepts λcid18icid19 N L vertex V set atomic roles λcid18i jcid19 N R edge cid18i jcid19 E M NC set main concepts G For A atomic concept V A set vertices contain A label V A k V A λcid18kcid19 We deﬁne vertices G integers order able use indices The main concepts G identify objects structure deﬁned G In Fig 2 main concepts framed rounded rectangles Thus main concepts description graph shown Fig 2b Hand Palm meaning graph deﬁnes structure hands palms Intuitively instance main concept implies existence corresponding graph instance G R j denote description graph contains Rlabeled edge As notational convenience use vertex vertex j In order represent conditions structure graph formalism allows graph rules The following deﬁnition reﬁnes general notion rule introduced Section 22 Deﬁnition 6 Graph rule A graph atom atom form Gt1 tcid4 G cid4ary description graph ti N I N V 1 cid3 cid3 cid4 A graph rule rule concepts roles atoms atomic head body contain graph atoms Next introduce graph specializations allow represent structured objects different levels abstraction For example capture abstract structure common ﬁngers description graph G ﬁnger shown Fig 2c 1286 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Table 4 Satisfaction GBox elements interpretation I cid17 G G V E λ M iff Key property x1 xcid4 y1 ycid4 cid15I cid18x1 xcid4cid19 G I cid18 y1 ycid4cid19 G I cid3 1cid2icid2cid4 xi yi cid2 1cid2 jcid2cid4 x j y j Disjointness property x1 xcid4 y1 ycid4 cid15I cid18x1 xcid4cid19 G I cid18 y1 ycid4cid19 G I Start property atomic concept A M x cid15I x A I x1 xcid4 cid15I cid18x1 xcid4cid19 G I cid3 kV A x xk cid2 1cid2i jcid2cid4 xi cid14 y j Layout property x1 xcid4 cid15I cid18x1 xcid4cid19 G I cid2 iV Bλcid18icid19 xi B I cid2 cid18xi x j cid19 R I cid18i jcid19ERλcid18i jcid19 I cid17 G 1 cid4 G 2 iff x1 xcid42 cid15I cid18x1 xcid41 xcid42 cid19 G I 2 cid18x1 xcid41 cid19 G I 1 I cid17 G 1v 1 vn G 2w 1 wn iff 1 cid3 cid3 n cid18 y1 ycid42 x1 xcid41 y1 ycid42 cid15I cid18x1 xcid41 cid19 G I 1 cid19 G I 2 xv y w cid2 1cid2 jcid2n xv j y w j Note cid4i arity description graph Gi specialize structure thumb introducing description graph G thumb shown Fig 2d The following graph specialization axiom captures relationship description graphs G ﬁnger cid4 G thumb 22 Deﬁnition 7 Graph specialization A graph specialization axiom form G 1 cid4 G 2 G 1 V 1 E1 λ1 M1 G 2 V 2 E2 λ2 M2 description graphs V 1 V 2 Next introduce axioms allow appropriately connect graph instances For example description graph G hand shown Fig 2b contains vertices 3 4 represent thumb proximal phalanx correspond vertices 1 3 description graph G thumb shown Fig 2d We specify correspondence following graph alignment G hand3 4 G thumb1 3 23 This axiom ensures instances G hand G thumb share thumb vertex share proximal phalanx vertex vice versa Deﬁnition 8 Graph alignment A graph alignment axiom form G 1v 1 vn G 2w 1 wn G 1 G 2 description graphs sets vertices V 1 V 2 respectively v V 1 w V 2 1 cid3 cid3 n Finally deﬁne GBoxes graphextended knowledge bases Deﬁnition 9 Formalism A graph box GBox tuple G GG GS G A GG GS G A ﬁnite sets description graphs graph specializations GG graph alignments GG respectively The deﬁnition ABoxes Section 21 extended allow graph assertions form Ga1 acid4 G cid4ary graph ai 1 cid3 cid3 cid4 individual A graphextended knowledge base 4tuple K T P G A T TBox P ﬁnite set connected graph rules G GBox A ABox Next deﬁne semantics formalism Deﬁnition 10 Semantics An interpretation I cid15I I deﬁned usual addition interprets cid4ary description graph G cid4ary relation cid15I G I cid15I cid4 Each tuple G I called graph instance G A graph assertion satisﬁed I written I cid17 Ga1 acid4 cid18aI cid19 G I Satisfaction description graph graph specialization graph alignment I deﬁned Table 4 A knowledge base K T P G A satisﬁed I written I cid17 K components satisﬁed I 1 aI cid4 The key disjointness properties Table 4 ensure distinct instances G share vertex example different instances G hand share vertex represents thumb These properties required ensure B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1287 representation structured objects bounded core assumption formalism In particular prevent existence inﬁnite chains instances G hand crucial decidability formalism The start property Table 4 ensures instance main concept A G occurs instance G For example Hand main concept G hand instance Hand occur vertex 1 instance G hand Similarly vertex 3 G hand labeled Thumb main concept G thumb vertex 3 instance G hand vertex 1 instance G thumb way The disjunction start property handles case main concept labels multiple vertices For example hand ﬁve ﬁngers single graph distinction ﬁve ﬁngers given instance Finger guess ﬁve ﬁngers dealing Finally layout property ensures instance G labeled connected speciﬁed deﬁnition G Graph specializations interpreted inclusions graph relations example axiom 22 states instance thumb instance ﬁnger The graphs share vertices general graph speciﬁc graph introduce additional vertices Finally graph alignments state graphs share vertex speciﬁed list share vertices list For example alignment 23 states instances G hand G thumb share vertices 3 1 respectively share vertices 4 3 respectively The main reasoning problem graphextended knowledge bases satisﬁability checking concept subsumption instance checking reduced satisﬁability usual Description graphs allow faithfully represent nontree connections parts structured object For contains axioms 1320 Gcid5cid5 correctly axiomatizes structure index ﬁnger example consider graphextended knowledge base Kcid5cid5 T cid5cid5 Gcid5cid5 T cid5cid5 contains description graph G index_ﬁnger shown Fig 2e The GBox Gcid5cid5 unlike DL knowledge base Kcid5 Section 3 graphextended knowledge base Kcid5cid5 entails axiom 21 Note Deﬁnition 10 ensure objects instance description graph G connected edges speciﬁed Gthat maximum cardinality edges instance G ﬁxed Because axioms 1319 strictly necessary inference previous paragraph Although Deﬁnition 10 straightforwardly extended conditions impose appropriate cardinality restrictions refrain reasons First cardinalities axiomatized explicitly shown previous example presented formalism general Second adopted approach allows study ﬁnergrained level impact constructs decidability reasoning 5 Undecidability reasoning Checking satisﬁability graphextended knowledge base K T P G A clearly undecidable com bination DLs ALC unrestricted Horn rules undecidable 26 We T checking satisﬁability K undecidable interaction description graphs unrestricted Horn rules In proof use wellknown undecidable problem checking emptiness intersection contextfree gram mars 18 A contextfree grammar tuple G T N P S T ﬁnite set terminal symbols N ﬁnite set nonterminal symbols S N start symbol P N T N ﬁnite set productions The language generated cid5 set terminal G denoted LG Given contextfree grammars G T N P S G symbols T N N cid5 T N cid5 undecidable 18 cid5 checking LG LG cid5 P cid5 S Proposition 1 Checking satisﬁability graphextended knowledge base K P G A rules P Horn G GG undecidable cid5 T N Proof Let G T N P S G extended knowledge base KGGcid5 simulates derivations G G symbol P T N N P P cid5 We ﬁrst construct graph Let R P atomic role uniquely associated The knowledge base KGGcid5 contains Horn rule form 24 production cid5 contextfree grammars N N form P Q 1Q 2 Q n cid5 P cid5 S cid5 cid5 cid5 R Q 1 x0 x1 R Q 2 x1 x2 R Q n xn1 xn R P x0 xn 24 symbol P T GBox KGGcid5 contains description graphs G 1 P V 1 P E 1 P λ1 P M1 P For terminal P M2 P E 2 G 2 P V 2 P λ2 P deﬁned follows A 1 2 M1 P cid182cid19 B V 1 P cid181cid19 A G 1 P G 2 P λ1 P λ2 P 1 2 V 2 P cid181cid19 B λ1 P B M2 P cid182cid19 A λ2 P R P 2 1 R P 2 1 Finally ABox KGGcid5 contains assertion Aa 1288 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Fig 4 Grid construction ALCF It straightforward KGGcid5 satisﬁable Let I interpretation obtained intersecting models KGGcid5 interpretation domain cid15I let w P 1 Pn T ﬁnite word set nonterminal symbols T Due GBox KGGcid5 domain objects α0 αn cid15I exists cid18αi1 αicid19 R I 1 cid3 cid3 n P nonterminal symbol It straightforward rules 24 encode derivations G G Now let Kint Q N resp Q N GGcid5 graphextended knowledge obtained extending KGGcid5 Horn rule 25 Q derivation Q w exists G resp G cid18α0 αncid19 R I cid5 cid5 cid5 R S x y R Scid5 x y 25 Clearly Kint GGcid5 unsatisﬁable LG LG cid5 cid14 proves claim proposition cid2 One try ensure decidability requiring P As suﬃcient interaction description graphs G number restrictions T source undecidability In proof present reductions wellknown domino tiling problem A domino triple S D H V D D 1 Dm set tiles H D D V D D horizontal vertical compatibility conditions respectively An Stiling function τ N N D cid18τ j τ 1 jcid19 H cid18τ j τ j 1cid19 V6 It known given domino S checking Stiling exists undecidable 7 Proposition 2 Checking satisﬁability graphextended knowledge base K T G A T TBox ALCF G GG undecidable Proof We ﬁrst present graphextended KB Kgrid implies existence inﬁnite grid The TBox Kgrid contains following ALCF axioms cid6 cid4 cid3 1 H cid6 cid4 cid3 1 V 27 The ABox Kgrid consists single assertion A1a The GBox Kgrid contains graphs G V E λi Mi 1 cid3 cid3 4 The sets vertices V edges E labels edges G shown Fig 4a Furthermore Mi Ai labels λi vertices G given 26 cid9 cid9 cid9 cid9 λ1 λ2 λ3 λ4 1 cid25 A1 2 cid25 A2 3 cid25 A3 4 cid25 A4 1 cid25 A2 2 cid25 A1 3 cid25 A4 4 cid25 A3 1 cid25 A3 2 cid25 A4 3 cid25 A1 4 cid25 A2 1 cid25 A4 2 cid25 A3 3 cid25 A2 4 cid25 A1 cid10 cid10 cid10 cid10 6 N set natural numbers B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1289 We Kgrid satisﬁable model I Kgrid contains inﬁnite twodimensional grid shown Fig 4b Individual corresponds left corner grid instances description graphs labeled lowercase letters Since A1 main concept G 1 I contains instance g1 G 1 Vertex 2 g1 labeled A2 I contains instance g2 G 2 V functional 27 graphs glued grid By similar argument I contains instance g3 G 3 instance g4 G 4 glued g1 g2 grid By repeating argument clear grid extends indeﬁnitely right downwards For domino S D H V let KS graphextended knowledge base obtained extending TBox Kgrid following axioms tile D D 1 cid3 cid3 m corresponds atomic concept D cid6 cid4 D1 cid9 cid9 Dm D cid8 D j cid4 1 cid3 j cid3 m D cid8 HD j cid4 D D j H D cid8 V D j cid4 D D j V 28 29 30 31 These axioms ensure point grid labeled D according compatibility conditions S Thus KS satisﬁable Stiling extracted model KS conversely Stiling exists model KS obtained labeling vertices grid shown Fig 4b according Stiling These facts imply claim proposition cid2 The proofs Propositions 1 2 suggest undecidability arises partly graphextended knowledge bases axiomatize models containing unbounded sequences description graph instances In practice structured objects usually modeled certain level granularity naturally determines bound sequence graphs needs represent In cases structure object acyclic hierarchy parts example carpal bones parts hand hand carpal bones To reﬂect acyclic nature representation reasonable impose acyclicity condition formalism Intuitively condition ensures description graphs arranged hierarchical manner instantiation provides bounded representation Deﬁnition 11 Acyclic GBox Let G GG GS G A GBox let cid4 reﬂexivetransitive closure graph specialization relation cid4 GS The GBox G acyclic strict irreﬂexive transitive necessarily total order GG exists G V E λ M G A M cid5 GG G cid14cid30 G following conditions hold cid5 λcid5 M cid5 V cid5 E cid5 cid5 G G cid5 cid4 G implies A λcid18icid19 V V cid5 cid14cid4 G implies A λcid18icid19 V cid5 A graphextended knowledge base acyclic GBox acyclic Intuitively G 1 G 2 means instance G 1 allowed imply existence instance G 2 In example G hand G ﬁnger G hand G thumb allows instance hand imply existence ﬁnger andor thumb We G ﬁnger G thumb ﬁnger general thumb The conditions Deﬁni tion 11 state G 1 cid14 G 2 instance G 2 imply existence instance G 1 node G 2 labeled negation start concept G 1 For example G thumb cid14 G hand vertex instance G thumb labeled main concept G hand Effectively prevents cyclic implications instances description graphs Requiring GBox acyclic invalidates Proposition 1 In fact checking satisﬁability K P G A G acyclic decidable G axiomatize structures obtained unfolding G straightforward way matter rules P treelike Furthermore Section 62 checking satisﬁability K T G A decidable T SHOQ We interaction inverse roles number restrictions description graphs leads undecidability G acyclic Proposition 3 Checking satisﬁability graphextended knowledge base K T G A T TBox ALCIF G GG acyclic GBox undecidable Proof Let Kgrid graphextended KB GBox contains description graphs G V E λi Mi 1 cid3 cid3 4 structure shown Fig 5a Mi Ai To GBox acyclic assume vertices G 1290 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Fig 5 Grid construction ALCIF labeled A j cid14 j negative labels shown Fig 5a sake clarity The ABox Kgrid contains assertion A1a Finally TBox Kgrid contains following ALCIF axioms cid6 cid4 cid3 1 R cid6 cid4 cid3 1 H B1 cid4 R A2 B2 cid4 R A1 B3 cid4 R A4 B4 cid4 R A3 cid6 cid4 cid3 1 V C1 cid4 R A4 C2 cid4 R A3 C3 cid4 R A2 C4 cid4 R A1 We Kgrid satisﬁable model I Kgrid contains inﬁnite twodimensional grid shown Fig 5b Instances description graphs denoted lowercase letters Due ABox assertion A1a I contains instance g1 G 1 Due B1 cid4 R A2 vertex 2 g1 connected instance A2 I contains instance g2 G 2 Since R inversefunctional vertex 1 g2 vertex 2 g1 shown arrow m1 Furthermore V functional vertex 4 g2 vertex 3 g1 shown arrow m2 Hence g1 g2 form squares grid By similar argument I contains instance g4 G 4 g1 g4 share vertices shown arrows m3 m4 Finally I contains instances g1 3 3 G 3 share vertices g2 g4 shown arrows m5m8 Thus g1 g1 3 share vertex 1 g3 g4 connected I g2 key property instance Consequently g1 g2 g1 3 3 gridlike manner Note instances gi share vertex 5 I satisﬁes concept Ai occurring label vertex G j cid14 j By repeating argument clear grid extends indeﬁnitely right downwards 3 g2 Now given domino S D H V extend Kgrid axioms 2831 knowledge base KS satisﬁable Stiling exists proves claim cid2 This result intuitively understood follows Let G 1 G 2 description graphs start concepts A1 A2 respectively furthermore let g1 g2 instances G 1 G 2 respectively Then inverse roles number restrictions merge g1 g2 vertex g1 labeled A1 contained g2 conversely vertex g2 labeled A2 contained g1 Therefore vertices G 1 G 2 labeled A2 A1 respectively possible enforce existence inﬁnite nontreelike structures B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1291 6 Reasoning graphextended knowledge bases In section present algorithm reasoning graphextended knowledge base K T P G A In order overcome undecidability results previous section Section 61 introduce role separation way attaining decidability Intuitively role separation places restrictions usage atomic roles T P G order limit possible interaction different types axioms In Section 62 present hypertableaubased algorithm checking satisﬁability K When K weakly separated roles occurring P occur T vice versa algorithm provides decision procedure T SHOQ G acyclic G semidecision procedure T SHOIQ Finally Section 63 decidability case regained requiring K strongly separated roles occurring P G occur T vice versa 61 Role separation Let K T P G A graphextended KB In Section 5 proposed acyclicity G way limit size structures existence implied G As expected acyclicity invalidates proof Proposition 2 The proof Proposition 3 reveals interaction graphs inverse roles functionality axioms circumvent desired effects acyclicity Thus way ensuring decidability restrict interaction T P G placing restrictions usage roles The general approach captured following deﬁnition specialized following sections Deﬁnition 12 Role separation A role separation scheme Λ N RT N RP N RG triple N RT N RP N RG necessarily disjoint subsets set atomic roles N R The roles N RT N RP N RG called T P Groles respectively A graphextended knowledge base K T P G A Λseparated roles occurring T P G T P Groles respectively A similar idea ensure decidability fusions Abstract Description Systems ADSs 5 compo nent ADSs share concepts interaction roles restricted ensure decidability The separation T P Groles similar spirit ADSs lack standard ﬁrstorder variables directly represent arbi trarily connected structures rules The potentially axiomatized ADS encoding likely complex practicable Furthermore fusions ADSs require strict separation roles rules weakly separated knowledge bases Section 62 Similarly standard hypertableau algorithm presented Section 23 algorithm ﬁrst preprocesses K set rules R GBox G ABox A We deﬁne notion Λadmissibility R G A identiﬁes types inputs core algorithm handle This notion closely parallels Deﬁnition 12 discuss shortly straightforward relationship Λseparation knowledge bases Λadmissibility algorithm inputs Deﬁnition 13 Admissibility Let R set rules G GBox A ABox Λ N RT N RP N RG role separation scheme The triple R G A Λadmissible roles G Groles A input ABox R separated disjoint subsets RT RP T P rules respectively rule r RT HTrule roles r T roles rule r RP connected graph rule roles r P roles A Λadmissible triple R G A simple rules RT simple HTrules R G A acyclic G acyclic Let K T P G A graphextended KB ΞT T Acid5 A ΞAT result preprocessing T preprocessing transformation 31 Section 41 Section 23 summary R P ΞT T By inspecting transformation straightforward role separation scheme Λ K Λseparated R G Acid5 Λadmissible T SHOQ R G Acid5 simple G acyclic R G Acid5 acyclic Furthermore K contain transitivity axioms trivial K equisatisﬁable R G Acid5 Finally Λ N RT N RP interaction T P transitivity axioms T encoded GCIs way 31 Section 41 affecting satisﬁability Therefore omit details preprocessing phase sake brevity present algorithm decides satisﬁability admissible triple R G A 62 Weakly separated knowledge bases We deﬁne notion weak role separation Deﬁnition 14 Weak separation A role separation scheme N RT N RP N RG weak N RT N RP A graphextended knowledge base K weakly separated weak role separation scheme Λ exists K Λseparated Similarly 1292 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Fig 6 Example derivation hypertableau algorithm R set rules G GBox A ABox R G A weakly admissible weak role separation scheme Λ exists R G A Λadmissible Intuitively weak separation prevents interaction T P avoids wellknown sources undecid ability ones identiﬁed 26 From modeling point view weak separation interesting allows general knowledge TBox axioms specialize knowledge description graphs For example general structure ﬁnger described DL axioms description general coarsegrained knowledge base use description graphs specialized knowledge structure index ﬁnger graphs One choose appropriate style modeling knowledge different levels granularity The main limitation weak separation use rules express knowledge roles DL axioms Thus weak separation impose additional restrictions graphextended KBs present standard DL knowledge bases description graphs Note DLsafe 32 need satisfy weak admissibility requirement consider rules paper limited applicability schema reasoning We present algorithm check satisﬁability weakly separated knowledge base K The formal deﬁnitions algorithm intricate ﬁrst outline main ideas means example Consider following graphextended knowledge base K1 T1 P1 G1 A1 T1 C cid4 R A B cid4 b P1 A1 Ca G1 contains following description graph G V 1 2 3 λcid181cid19 A λcid182cid19 B M A λcid183cid19 C S 2 T 3 U 3 1 2 1 The preprocessing T1 produces ABox ΞAT1 O bb following set rules ΞT T1 Cx R Ax Bx O b yb x yb 34 1 weakly admissible rules R1 HTrules Let R1 ΞT T1 A1 1 P consider roles T roles ΞAT1 A1 Clearly R1 G1 A1 By successively applying derivation rules shown Tables 3 5 R1 G1 A1 1 algorithm tries construct 1 The evolution A1 ABox represents model R1 G1 A1 1 shown Fig 6 assertions derived single application derivation rule separated dotted lines Note derivation rules Table 5 closely follow semantic conditions description graphs given Deﬁnition 10 The Hyprule derives new assertions based contents R body rule r R matched assertions ABox assertion head r derived nondeterministically Thus Ca 33 Hyp rule derives assertion R Aa To satisfy assertion cid2rule introduces fresh tree successor s1 derives assertions Ra s1 As1 To track successor relation algorithm represents individuals ﬁnite strings form cid31α1 αn αi symbols cid31 special symbol certain deﬁnitions simpler Thus individual actually corresponds string cid31νa νa symbol furthermore s1 corresponds individual cid31νaτ τ tree symbol That s1 successor evident fact cid31νa preﬁx s1 cid31νaτ The concept A main concept G assertion As1 individual s1 occur instance G vertex 1 ensure hypertableau calculus contains Grule An application Grule As1 derives assertion Gs1 t11 t12 Individuals t11 t12 fresh graph successors s1 reﬂected string representation t11 s1γ1 cid31νaτ γ1 t12 s1γ2 cid31νaτ γ2 γ1 γ2 graph symbols A tree 32 33 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1293 Fig 7 A generalized forestshaped ABox named individual graph successors said form cluster individuals s1 t11 t12 example cluster In order connect label vertices instance G hypertableau calculus contains G L rule Its application current set assertions adds assertion Ct12 But inferences repeated Hyprule derives R At12 cid2rule derives Rt12 s2 As2 s2 t12τ cid31νaτ γ2τ Grule derives graph assertion Gs2 t21 t22 G L rule connects labels vertices Let A2 1 ABox containing assertions derived far shown Fig 6 Clearly unrestricted application cid2 Grule lead nontermination Therefore like standard hypertableau algorithms algorithm applies blocking Roughly speaking tree individuals s1 s2 occur A2 1 concepts individual blocks latterthat cid2 Grule applied successors blocked individual Blocking applicable ABox A2 1 structure generalizes notion forest shaped ABoxes Section 23 In particular A2 1 seen consisting clusters shown Fig 6 leftmost middle rightmost columns connected assertions Ra s1 Rt12 s2 In general forestshaped ABoxes form shown Fig 7 They contain kinds individuals summarize Root individuals shown Fig 7 black circles types Named individuals ones occur input ABox Root individuals named introduced NIrule Table 3 interaction verse roles number restrictions nominals An indepth discussion rationale NIrule available 31 Tree individuals introduced cid2rule order satisfy existential quantiﬁers TBox knowledge base shown Fig 7 white circles single edge Graph individuals introduced Grule order satisfy start property graphs GBox knowledge base shown Fig 7 white circles double edge The central concept forestshaped ABoxes notion cluster formal deﬁnition ensures root individ uals graph individuals form cid31γi form single cluster tree individual t graph individuals form tγi form cluster Fig 7 shows clusters distinct tree individuals member individuals enclosed dashed line The key idea clusters individuals cluster arbitrarily connected ii individuals different clusters connected treelike manner Thus forestshaped ABox seen tree clusters structure tree backbone We exploit tree backbone generalize notions blocking pruning standard hypertableau algorithms In Lemma 1 formalize notion forestshaped ABoxes R G A weakly separated application hypertableau derivation rules forestshaped ABox produces forestshaped ABox Intuitively arbitrarily shaped P rules R applied assertions involving individuals cluster introduce arbitrary connections weak separation affect tree backbone The tree backbone constructed solely T rules R Nominals introduce slight complication Consider ABox A2 1 From Bt11 O bb 34 Hyp rule derives t11 b The rule prunes t11 removes graph tree descendants t11 replaces b pruning necessary order avoid nontermination repeated individual creation merging socalled yoyo problem 4 After t11 replaced b ABox contains graph assertion Gs1 b t12 b cluster s1 t12 ABox forest shaped This remedied graph cleanup mentioned assertion replaced Gv 1 b v 2 v 1 cid31γ1 v 2 cid31γ2 fresh graph individuals cluster b The cluster s1 t12 merged cluster b order resulting ABox forest shaped Furthermore graph cleanup subsequently applied assertion form Gw 1 b w 2 individuals w 1 w 2 1294 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 replaced v 1 v 2 respectively Reusing individuals graph cleanup sound key property Table 4 allows establish bound number individuals introduced cleanup We deﬁne algorithm formally At point assume rules R HTrules assume simple Thus algorithm applied triple R G A obtained preprocessing graphextended knowledge base TBox SHOIQ Deﬁnition 15 The hypertableau algorithm checking satisﬁability admissible triple R G A obtained modifying parts Deﬁnition 2 follows Individuals Let Στ Σγ Σν countably inﬁnite mutually disjoint sets tree graph symbols respec tively contains special symbol cid31 The set Σι NIsymbols smallest set cid18α R B icid19 Σι α Σγ Σν Σι role R literal concept B integer An individual ﬁnite string form cid31α1 αn n cid2 1 α1 Σν Σγ Σι αi Σγ Στ 2 cid3 cid3 n αi Σν Σγ Σι implies αi1 Σγ 1 cid3 cid3 n An individual αn Στ resp αn Σγ tree resp graph individual Furthermore individual form cid31α root individual α Σν individual named Let N A N I N O sets individuals named individuals root individuals respectively For individual xα N A x possibly equal cid31 xα successor x x predecessor xα descendant ancestor transitive closures successor predecessor respectively Cluster For individual s N A function s deﬁned follows s s s tree individual s t s tα Individuals s t cluster s t Graph cleanup Let A ABox containing assertion Gu1 ucid4 ui u j cluster ui ancestor u j A cleanup u j ABox obtained A pruning u j replacing remaining assertions u j individual t deﬁned follows A contains graph assertion Gv 1 vcid4 ui v v j cluster ui t v j t fresh graph successor ui A graph cleanup A obtained A iteratively applying cleanup candidate individuals long possible sequence satisﬁes following restriction cleanup applicable ui u j ui ancestor u j cleanup applied ﬁrst ui 7 Merge target An individual t merge target individual s t named individual t root individual s named individual t root individual s descendant t Merging The ABox mergeAs t obtained pruneAs replacing s t assertions applying graph cleanup Derivation rules The derivation rules Table 3 extended ones Table 5 In NIrule Table 3 u cid31α root individual R role B literal concept integer rootforu R B cid31cid18α R B icid19 Rule precedence The rule applied possibly annotated equality s t ABox A A cid3n RB NIrule applicable Furthermore Grule applicable ABox contain equality s t u G G Gcid4 G L rule applicable ABox If R G A weakly admissible simple T rules R simple HTrules explained Section 23 NIrule gets applied root individual occurring derivation involves NIsymbol pairwise blocking simpliﬁed single blocking Therefore implicitly assumptions R G A sim ple We R G A weakly admissible simple acyclic hypertableau algorithm decision procedure Intuitively R simple T SHOQ different clusters interact adverse way number restrictions Consider example ABox shown Fig 7 Individual u merged t t inherits main concepts asserted u Thus t u occur assertions description graphs G 1 G 2 respectively G 1 cid14 G 2 inconsistency derived acyclicity G prevent application derivation rules Hence despite fact different clusters merged establish bound size cluster prove termination We prove soundness completeness termination algorithm To end ﬁrst formalize intuitive notion forestshaped ABoxes application derivation rule preserves property 7 Note freedom choice t order cleanup applied candidate individuals graph cleanup A uniquely deﬁned purposes algorithm cleanup A suﬃce B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1295 Table 5 Derivation rules related description graphs Grule Grule Gs1 scid4 Gt1 tcid4 A si ti 1 cid3 cid3 cid4 s j t j 1 cid3 j cid3 cid4 cid14 A If 1 2 3 4 si ti indirectly blocked 1 cid3 cid3 cid4 A1 A s j t j 1 cid3 j cid3 cid4 If 1 2 3 si ti indirectly blocked 1 cid3 cid3 cid4 Gs1 scid4 Gt1 tcid4 A si t j cid14 j A1 A If 1 As A A M G V E λ M GG 2 3 Grule s blocked A v V A v 1 vn individuals u1 ucid4 exist Gu1 ucid4 A u v s Ai A Gt1 tcid4 1 cid3 cid3 n t v s tk fresh graph successors s G L rule Gcid3rule Grule If 1 Gs1 scid4 A G V E λ M 2 3 Asi A λcid18icid19 Rsi s j R λcid18i jcid19 cid14 A si indirectly blocked 1 cid3 cid3 cid4 A1 A Asi A λcid18icid19 Rsi s j R λcid18i jcid19 If 1 G 1 cid4 G 2 GS 2 G 2s1 scid42 A 3 G 1s1 scid41 A 4 si indirectly blocked 1 cid3 cid3 cid4 A1 A G 1s1 scid41 If 1 G 1v 1 vn G 2w 1 wn G A G 1s1 scid41 G 2t1 tcid42 A sv sv j 2 3 4 5 si ti indirectly blocked 1 cid3 cid3 cid4 t w 1 cid3 cid3 n t w j 1 cid3 j cid3 n cid14 A A1 A sv j t w j 1 cid3 j cid3 n Lemma 1 Let R set rules G GBox A ABox R G A simple weakly admissible Then ABox Acid5 labeling node derivation R G A satisﬁes following properties b root individuals ui individuals γi γ j Σγ τi τ j Στ R T role form Ru uτi Ru Ru1 u2 u1 u2 individuals form u u1 u2 u1 u2τi uτi uτ j u1 u2 individuals cluster U P role ui cluster Furthermore graph tree root individual cluster u0 exists u0 path Acid5 individual u0 Acid5 individuals u1 un1 exist ui1 ui occur graph assertion Acid5 U u1 u2 Acid5 1 cid3 cid3 n 4 In O au Acid5 O nominal guard concept individual u named Furthermore cid2 n RBu Acid5 concept B nominal guard concept 5 For tree individual tn Acid5 individuals s0 sn t0 tn1 exist s0 root individual ii 1 cid3 cid3 n individuals si ti1 cluster iii 0 cid3 cid3 n individual ti tree successor si R isi ti Acid5 T role R Proof Let Λ N RT N RP N RG weak role separation scheme RT RP subsets R satisfying conditions Deﬁnition 13 We prove lemma induction rule application Since A input ABox induction base trivial Assume claim holds ABox A0 consider inferences deriving ABox Ai Grule The ABox A1 trivially satisﬁes Conditions 15 Gcid4 G G G L rule These rules applied individuals cluster A1 satisﬁes Conditions 15 Grule Assume Ai obtained application Grule assertion As A0 All individuals t1 tcid4 introduced rule application cluster s Ai satisﬁes Conditions 15 cid2rule Assume A1 obtained application cid2rule assertion cid2 n RBs A0 All individuals t1 tn introduced rule application tree successors s Rs ti A1 B nominal guard concept A1 satisﬁes Conditions 15 Hyprule Assume Ai obtained A0 application Hyprule rule r R The rule r contain nominal guard concept head Ai satisﬁes Condition 4 Furthermore Hyprule introduce fresh individuals Condition 5 trivially holds Ai 1 Each Rs t Acid5 cluster 2 Each s t Acid5 3 In Gu1 ucid4 Acid5 1296 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 If r RP r connected variables r matched individuals cluster All role atoms head r P roles weak separation Ai satisﬁes Conditions 13 Thus let r RT simple HTrule consider types assertions derived instantiating atom head r If s t derived instantiating atom form x z j body r contains atom O az j This atom matched assertion O A0 Condition 4 t named individual Hence s t satisﬁes Condition 2 If s t derived instantiating yi y j simple HTrule r body r contains atoms Rx yi Sx y j matched assertions Ru s A0 Su t A0 R S T roles individual s t cluster u tree successor u root individual Clearly s t satisﬁes Condition 2 If Rs t derived instantiating Rx x s t s cluster s assertion satisﬁes Condition 1 If Rs t derived instantiating Rx yi simple HTrule r body r contains atom Sx yi matched assertion Ss t A0 satisﬁes Condition 1 Clearly Rs t satisﬁes Condition 1 If Rs t derived instantiating Rx z j simple HTrule r body r contains atom O az j matched assertion O A0 By Condition 4 t root individual Rs t satisﬁes Condition 1 rule Consider types equality assertions A0 rule applied For u1 u2 u1 u2 cluster rule prunes individualcall sand replaces individual cluster Clearly resulting assertions satisfy Conditions 1 2 Furthermore individual s occurs ABox pruning assertions involving predecessors s individuals cluster s A1 satisﬁes Conditions 35 For u1 u2τi u1 u2 cluster rule prunes u2τi replaces u1 Thus assertions form Ru2 u2τi Ru2τi u2τi u3 u2τi u2 u3 cluster u2τi u2τ j changed assertions Ru2 u1 Ru1 u1 u3 u1 u1 u2τ j respectively satisfy Conditions 1 2 Furthermore pruning removes individuals cluster u2τi A1 satisﬁes Conditions 35 For u rule prunes u merges Thus assertions form Rv u v u changed assertions Rv v respectively satisfy Conditions 1 2 Replacing u Gu1 ui u produces ﬁrst assertion satisfy Condition 3 graph cleanup replaces u j graph individual cluster Since A0 satisﬁes second Condition 3 graph cleanup replaces individuals cluster u graph individuals cluster resulting ABox satisﬁes Conditions 15 cid2 Theorem 1 summarizes properties algorithm Theorem 1 The following properties hold set rules R GBox G ABox A R G A weakly admissible simple acyclic 1 R G A satisﬁable derivation R G A successful 2 R G A satisﬁable successful derivation R G A exists 3 derivation R G A ﬁnite Proof Claim 1 The claim follows following property R G A satisﬁable cid18A1 Ancid19 result applying derivation rule R G A R G Ai satisﬁable 1 cid3 cid3 n consequently Ai clashfree The proof 31 Lemma 13 rule application graph cleanup nonstandard Let I model R G A consider application rule s t A producing ABox A1 Let Acid5 ABox obtained A pruning s replacing t Since I cid17 s t sI t I clearly The ABox A1 obtained Acid5 I cid17 Acid5 graph cleanup additionally replace individuals ui v If v fresh extend I obtain model A1 deﬁnition graph cleanup Acid5 contains graph assertions G ui G v key property Deﬁnition 10 u I j j Clearly j R G A1 satisﬁed I cid2 v I Proof Claim 2 Let Acid5 construct model R G A To ﬁrst introduce deﬁnitions clashfree ABox labeling leaf successful derivation R G A To prove claim A path ﬁnite nonempty sequence pairs individuals p x0 cid5 x 0 cid5 cid5p x n Further q successor p p predecessor q The Let tailp xn tail xn cid5 x n let q p xn1 xn1 cid5 cid5 x x n1 n1 set paths PAcid5 deﬁned inductively follows denote path x0 cid5 x 0 xn cid5 x n PAcid5 root individual occurs Acid5 cid5 p s p s Acid5 scid5 PAcid5 p PAcid5 s scid5 PAcid5 p PAcid5 s s cid5 cid5 successor tailp s successor tailp s cid5 cid5 occurs assertion Acid5 s occurs assertion Acid5 s cid5 cid5 blocked Acid5 directly blocked Paths p q PAcid5 cluster written p q B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1297 p q p individuals tailp tailq cluster p q successors path path b root individuals q b b successor path We deﬁne interpretation I follows atomic concept A T role R P role U description graph G 8 cid15I PAcid5 cid6 cid7 aI aI bI cid9 A I R I p A cid6 cid9cid13 root individual occurs Acid5 cid14 b cid26acid26Acid5 b cid11 cid12 tailp cid7cid14 cid15 cid10 Acid5 cid6 cid6 cid11 cid9 cid15 root individual p cid14 p cid18p1 p2cid19 p1 p2 R cid7cid14 cid15 cid15 cid9cid13 cid7 cid15 s p scid5 cid18p1 p2cid19 p1 p2 U cid18p1 pcid4cid19 pi p j 1 cid3 j cid3 cid4 G cid7 R cid12 Acid5 tailp1 tailp2 cid10 cid12 Acid5 cid5 Acid5 cid11 cid12 tailp1 tailp2 R cid11 tailp s cid15 p cid14 cid15 cid15 s scid5 cid9 cid9 p p cid11 cid6 cid10 U I G I cid12 cid10 Acid5 cid11 tailp cid10 cid12 tailp1 tailpcid4 cid10 Acid5 Acid5 HTABox cid15I To prove I cid17 R G A ﬁrst ps qs s scid5 individual w following claims hold Rs s Acid5 If Bw Acid5 resp As Acid5 LAcid5 w LAcid5 s rule applicable Acid5 case implies ps A I iff cid18ps pscid19 R I resp ps A I Immediate deﬁnition I cid5 B literal concept ps B I The proof immediate B atomic If B A previous Aw Acid5 As Acid5 As cid5 Acid5 If cid2 n RBs Acid5 ps cid2 n RBI By deﬁnition paths s blocked Since cid2rule applicable cid2 n RBs individuals u1 exist Rs ui Acid5 1 cid3 j cid3 n Each assertion Rs ui satisﬁes Property 1 HTABoxes ui following forms 1 cid3 cid3 n ui cid14 u j Acid5 Bui Acid5 cid18ps pui let pui ps ui ui cid19 R I Furthermore Bui Acid5 ui cluster s If s tree individual let pui deﬁnition I facts Rs ui Acid5 Bui Acid5 ps ui ui conclude cid18ps pui let pui cid19 R I pui qs ui ui B I ui successor s ui s cluster If ui directly blocked v let pui In case Rtailps ui Acid5 deﬁnition ps v ui implies I By ui root individual Let pui Consider 1 cid3 j cid3 n In cases tail applicable tail We Rs ui Acid5 cid5pu j implies pui cid5pui cid14 tail ui ui Bui Acid5 imply cid18ps pui Since Acid5 cid14 pu j Thus conclude ps cid2 n RBI cid5pu j Acid5 cid19 R I pui cid5pui cid14 tail rule B I LAcid5 ui LAcid5 tailpui imply pui B I For assertion αcid5 Acid5 Furthermore αcid5 I cid17 αcid5 Consider α A If α Acid5 I cid17 α deﬁnition I form b cid14 b b named individuals straightforward form Ra b Ba cid2 n RBa named individual implies I cid17 αcid5 contains renamings applied α produce assertion αcid5 Acid5 Acid5 We I cid17 R Consider simple HTrule r RT variables x yi z j Deﬁnition 3 mapping μ variables cid15I I μ cid17 Bm body atom Bm r Let σ mapping variables r individuals Acid5 deﬁned follows σ x tailμx σ yi tail σ yi tailμ yi cases covered previous σ z j tailμz j cid5μ yi μ yi successor μx μ yi cid14 μx 8 The function cid26 cid26Acid5 introduced Deﬁnition 2 1298 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 Atom Bm form Ax A yi Az j Rx x Rx yi R T role By deﬁnition paths σ x blocked Furthermore μ yi successor μx σ yi successor σ x σ yi cluster σ x named individual Finally deﬁnition I σ Bm Acid5 Each variable z j occurs form b r atom form O az j Condition 4 Lemma 1 deﬁnition I paths O I b b named individual μz j form The Hyprule applicable r Acid5 head atom Hn r We following possibilities structure Hn σ σ Hn Acid5 Assume Hn form Cx C literal concept concept form cid2 n SB Cσ x Acid5 By μx C I Thus I μ cid17 r Assume Hn form Rx x Rσ x σ x Acid5 By cid18μx μxcid19 R I Thus I μ cid17 r I μ cid17 r Assume Hn form B yi Bσ yi Acid5 Thus I μ cid17 r LAcid5 σ yi LAcid5 tailμ yi p yi Assume Hn form Sx yi Sσ x σ yi Acid5 E I By deﬁnition blocking By deﬁnition I cid18px p yi cid19 S I Thus The case Hn form Sx z j analogous previous Assume Hn form x z j σ x σ z j A Since rule applicable Acid5 σ x σ z j Since σ x named individual block individuals tail μx μz j Thus I μ cid17 r cid5μx σ x implies Assume Hn form yi y j σ yi σ y j Acid5 Since rule applicable Acid5 σ yi σ y j By Deﬁnition 3 antecedent r contains atoms Rx yi Rx y j cid18μx μ yicid19 R I cid18μx μ y jcid19 R I By Condition 1 Lemma 1 deﬁnition I path μ yi form root individual successor μx cluster μx similar restrictions hold μ y j But σ yi σ y j implies μ yi μ y j Thus I μ cid17 r Consider rule r RP containing variables x1 xn μ mapping variables cid15I I μ cid17 Bm body atom Bm r Since r connected nonunary atom Bm involves P role description graph Condition 3 Lemma 1 deﬁnition I imply paths μxi cluster Let σ mapping deﬁned σ xi tailμxi 1 cid3 cid3 n By deﬁnition I σ Bm Acid5 variables r individuals Acid5 body atom Bm Since Hyprule applicable r Acid5 σ σ Hn Acid5 head atom Hn But deﬁnition I I μ cid17 Hn The proof I cid17 G completely analogous previous paragraph omit sake brevity cid2 cid5 descendant node g Proof Claim 3 We derivation T ρ R G A satisﬁes following properties 1 derivation rule applied subset ρg derivation node g T derivation rule applicable cid5 g 2 integer depending R G A exists assertions ρg ρg tree individual s ρg number tree ancestors s 3 ρg tree individual s number graph successors s bounded 4 derivation path number graph individuals introduced graph cleanup bounded 5 number root graph individuals ρg bounded Together items imply 6 number individuals introduced derivation path bounded Items 1 6 imply number applications derivation rules derivation path bounded implies claim lemma 1 This item holds exactly way case standard hypertableau algorithm 31 Lemma 15 derivation rule applied subset assertions ρg derivation node g T assertions added cid5 cid5 descendant node g ρg prevent reapplication derivation rule assertions ρg g We omit details sake brevity 2 Let c number atomic concepts occurring R G A let depth tree individual s written deps number tree ancestors For g T ancestors tree individual ρg present ρg Condition 5 Lemma 1 Thus tree individual s depth 2c 1 ancestors individual label exist ρg s blocked ρg The cid2rule applicable blocked individuals cid2rule applied s Thus tree individual s ρg deps cid3 3 To prove item ﬁrst useful property Let order description graphs G satisﬁes conditions Deﬁnition 11 Furthermore let assume hypertableau algorithm modiﬁed individual s Acid5 assigned label ωs possibly string form G 1v1 v cid5 1 Gnvn v cid5 n 35 n cid2 0 G description graph v v rules cid5 vertices G Individuals labeled according following B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1299 For s tree named individual fresh graph individual introduced graph cleanup ωs string If application Grule assertion As introduces graph assertion Gt1 tcid4 s ti 1 cid3 cid3 cid4 ωt j ωsGi j 1 cid3 j cid3 cid4 j cid14 By induction applications derivation rules following properties hold clash free ABox Acid5 labeling node T ρ For graph individual s Acid5 ωs form 35 contains assertion Gnu1 ucid4n s u v cid5 n Acid5 b G 1 Gn1 c Gn1 cid14 Gn Acid5 w w cid5 j cid14 j s s cid14 t ωs ωt contains necessarily distinct graph assertions Gnw 1 wcid4n Gnw cid5 1 w cid5 cid4n ii For individual s Acid5 s tree individual Acid5 contain individual t cluster Property clearly holds input ABox A let Acid5 ABox satisfying consider possible derivation rules The Hyp G G G L Gcid4 Grule introduce fresh individuals remove assertions ABox invalidate Furthermore cid2rule introduces tree individuals ti ωti string resulting ABox clearly satisﬁes Assume rule applied assertion s t Acid5 individual s merged t By Lemma 1 pruning removes graph individuals cluster ABox merging possible graph cleanup clearly satisﬁes Condition ic ii Furthermore merging requires graph cleanup freshly introduced graph individuals clearly satisfy Conditions ii Consider application Grule assertion As Acid5 ary description graph G cid4cid5 cid5 cid5 λcid5 M cid5 V cid5 E A M cid5 Assume s labeled follows Gn V n En λn Mn ωs G 1v1 v 1 Gnvn v cid5 n cid5 By induction assumption ωs satisﬁes Conditions ii Moreover rule precedence G G L Gcid4 rule applicable Acid5 The Grule applicable Acid5 cid5 j cid14 j Since ωs satisﬁes Condition ia conclude Gn1 Gn Furthermore ωs satis contain assertions Gnw 1 wcid4n Gnw w w ﬁes Condition ib G G i1 1 cid3 cid3 n 1 cid5 1 w cid5 cid4n By Condition ia Acid5 Bs Acid5 cid5cid5 graph G B λncid18v G Gn cid14cid30 G cid5cid5 contains assertion Gnu1 ucid4n s u v cid5 n Since G L rule applicable cid19 Since G acyclic Deﬁnition 11 following properties hold description cid5 n main concept C G cid5cid5 If G If G cid5cid5 cid4 Gn v cid5cid5 cid14cid4 Gn G cid5cid5 cid4 Gn v cid5 n vertex G s qv cid5 n cid5 n vertex G cid5cid5 Cs Acid5 cid5cid5 Gcid4rule applicable Acid5 contains assertion G cid5cid5q1 qcid4cid5cid5 Let G cid5t1 tcid4cid5 graph assertion introduced Grule t v s consider fresh graph indi vidual ti labeled follows ωti G 1v1 v cid5 1 Gnvn v cid5 n G cid5v We ωti satisﬁes Conditions ii Condition ia obviously satisﬁed estab lished Condition ib satisﬁed induction assumption ωs To ωt satisﬁes Condition ic consider possible relationships Gn G cid5 Gn G Gn G cid5 cid5 Condition ic vacuously satisﬁed Precondition 3 Grule ensures v cid14 v cid5 n graph assertions G cid5t1 tcid4cid5 Gnu1 ucid4n satisfy Condition ic cid5 Gn cid14cid30 G G Consider relationship Gn G cid5 cid5 cid4 Gn v vertex Gn By case 1 As Acid5 cid4 cid5 cid14cid4 Gn G applicable Acid5 cid5 cid4 Gn v vertex Gn By case 2 Acid5 Grule applicable Acid5 contradiction Acid5 G precondition 3 contradiction rule contains assertion G cid5q1 qcid4cid5cid5 qv s Finally ωti ωq individual q cluster ti Grule applied assertion graph twice By 1 possible ωti satisﬁes ii This completes proof 1300 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 cid5 We use 3 Let g number graphs maximum arity graph G The ordering cid5 acyclic n cid3 g 1 label form 35 Each label understood tuple g 1 triples G v v integers 1 There g 1 ag1 G description graph v v different labels number bounded ϑ 22a1g12 But ii number graph individuals cluster tree individual Acid5 bounded ϑ implies Item 3 4 Consider graph tree individual s ABox Acid5 labeling derivation node Let t1 tn sequence tree individuals t1 successor root individual tn s tk closest tree predecessor tk1 Furthermore let χs S1 Sn sequence Sk maximal subset Acid5 individuals cluster tk In worst case s merged named individual individual Sk merged Sk1 By ﬁrst condition deﬁnition graph cleanup fresh graph individuals introduced χs unique renaming individuals By Item 2 n cid3 Item 3 size S bounded number sequences χs unique renaming individuals bounded Consequently number fresh graph individuals introduced graph cleanup bounded 5 Item 4 property fact acyclic imply number fresh root graph individuals introduced Grule bounded The proof analogous proof Item 3 omitted sake brevity 6 By 4 5 total number root individuals ABox bounded Furthermore 1 2 3 number descendants bounded Therefore 1 total number applications derivation rules derivation path bounded cid2 Since preprocessing TBox affect satisﬁability graphextended knowledge base immediately following theorem Theorem 2 Checking satisﬁability weakly separated acyclic graphextended knowledge base K T P G A T SHOQ decidable We consider case K T P G A weakly separated acyclic graphextended knowledge base T SHOIQ The TBox T preprocessed usual let R ΞT T P Acid5 A ΞAA R G Acid5 weakly admissible acyclic simple By Proposition 3 checking satisﬁability R G Acid5 undecidable consequently hypertableau algorithm necessarily terminate Consider Fig 7 If R simple T contains inverse roles v merged s Individual v need occur assertion involving main concept graph cluster u Thus algorithm necessarily derive contradiction graph cluster u subordinate graphs cluster s Hence G acyclic clusters arbitrary size leads nontermination Our algorithm semidecision procedure This nontrivial practically interesting conse quence algorithm uses blocking Assume T rules R obtained cyclic TBox R G Acid5 satisﬁable Blocking increases chances termination fact provided G acyclic algorithm necessarily terminate performs particular type inference Our algorithm semidecision procedure G acyclic unlikely terminate satisﬁable R G Acid5 Since rules RT simple pairwise blocking NIrule applicable Further usual case semidecision procedures derivations fair intuitively means application inference rule postponed inﬁnitely Deﬁnition 16 Fair derivation A derivation T ρ R G A unfair branch t1 t2 T exists inﬁnitely nodes ti1 ti2 branch derivation rule applicable assertions ρti j Fair opposite unfair The correctness proofs standard hypertableau algorithm SHOIQ 31 involved lengthy generalization graphextended knowledge bases To paper reasonable length sketch proofs claims The proofs obtained straightforward combination proofs Lemma 1 Theorem 1 proofs 31 We ﬁrst generalize Lemma 1 account assertions derived R simple Lemma 2 Let R set rules G GBox A ABox R G A weakly admissible Then ABox Acid5 labeling node derivation R G A satisﬁes Conditions 35 Lemma 1 following conditions b root individuals ui individuals γi γ j Σγ τi τ j Στ 1 Each Rs t Acid5 cluster R T role form Ru uτi Ruτi u Ru Ra u Ru1 u2 u1 u2 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1301 2 Each equality Acid5 form s t cid3n RB s tree individual successor t tree individual possibly annotated equality form u u1 u2 u1 u2τi u uτiγ j uτi uτ j u uτiτ j u1 u2 individuals cluster Proof sketch The proof straightforward combination proofs Lemma 1 31 Lemma 12 The main differ ence application rule equality form u uτiγ j prunes uτiγ j merges u The cluster uτiγ j necessarily pruned graph cleanup ensures individuals cluster uτiγ j replaced individuals cluster u cid2 Theorem 3 The following properties hold set rules R GBox G ABox A R G A weakly admissible 1 R G A satisﬁable derivation R G A successful 2 R G A satisﬁable successful fair derivation R G A exists cid7 cid16 cid17 cid9cid13cid6 jcid2i ρt j Since T ρ fair derivation rule applicable Acid5 Proof sketch The proof Claim 1 Theorem 1 apart case NIrule 31 Lemma 13 For Claim 2 let T ρ successful fair derivation R G A The main difference proof Claim 2 Theorem 1 T ρ necessarily ﬁnite Let t1 t2 branch T ρti clash free let Acid5 We construct model R G A way Theorem 1 following difference treatment T roles cid7 R cid7 R cid12 Acid5 tailp1 tailp2 cid10 cid12 Acid5 cid5 Acid5 cid14 cid15 cid15 root individual p cid14 cid15 root individual p cid14 cid15 cid15 p1 p2 R cid7cid14 cid15 cid15 cid6 cid7 cid15 s scid5 cid15 cid15 s scid5 p cid18p1 p2cid19 cid15 cid6 cid9cid13 cid15 s p scid5 cid7 p cid11 tailp s cid11 cid5 cid12 cid11 tailp cid12 cid11 cid15 p cid14 cid14 cid15 cid15 p cid14 cid12 tailp tailp cid10 Acid5 Acid5 p cid15 cid15 s scid5 R I p cid6 R R cid7cid14 cid15 cid9cid13cid6 cid9cid13 cid9 cid10 cid10 cid10 p p p cid11 cid6 cid7 cid6 cid6 s The proof I model R G A straightforward combination proof Claim 2 Theorem 1 31 Lemma 14 cid2 Termination lost application rule assertions form u uτiγ j invalidates Condition ii proof Claim 3 Theorem 1 The results Section 63 algorithm terminates inference performed A practical implementation detect inferences warn user loss termination guarantees 63 Strongly separated knowledge bases For K T P G A T SHOIQ termination regained K strongly separated acyclic Then R ΞT T P Acid5 A ΞAA triple R G Acid5 strongly admissible acyclic deﬁned Deﬁnition 17 Strong separation A role separation scheme N RT N RP N RG strong N RT N RP N RG N RP A graphextended knowledge base K T P G A strongly separated strong role separation scheme Λ exists K Λseparated Similarly triple R G A strongly admissible strong role separation scheme Λ exists R G A Λadmissible Strong separation restricts modeling style signiﬁcant way weak separation essentially requires modeler determine advance knowledge modeled DLs graphs Thus knowledge modeled DLs specialized graphs vice versa To understand strong separation ensures decidability reasoning consider Fig 7 The tree backbone contains T roles clusters contain P roles Groles Thus T rules R applied tree backbone P rules applied graphs single cluster Therefore R simple rule T derive equality equates s v merges distinct clusters Theorem 4 Let R set rules G GBox A ABox R G A strongly admissible acyclic Then derivation R G A ﬁnite Proof sketch Since R G A strongly admissible rules R separated sets RT RP T rules P rules respectively share roles By straightforward modiﬁcation proof Lemma 2 strong role separation role assertions form Ru1 u2 R T role u1 u2 1302 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 cluster form Ru u u tree individual This strengthen Lemma 2 ABox Acid5 labeling node derivation R G A contains equalities form u u1 u2 u uτi uτi uτ j u uτiτ j equalities form u uτiγ j derived9 As number individuals introduced derivation path bounded Assume rule applied u uτi uτi uτ j u uτiτ j Just like proof Claim 3 Theorem 1 merged individual tree individual entire cluster pruned resulting ABox satisﬁes consequently number individuals cluster tree individual bounded ϑ If rule applied u resulting ABox subjected graph cleanup number newly introduced individuals bounded exactly way Item 4 proof Claim 3 Theorem 1 It remains shown number new root individuals introduced NIrule bounded Let maximal number tree ancestors individual occurring Acid5 31 Lemma 15 shown exponential number atomic concepts roles Furthermore 31 Lemma 15 shown root individuals introduced NIrule seen forming tree polynomial branching factor depth Since number graph individuals cluster bounded addition description graphs change essence argument root individuals introduced NIrule seen forming tree clusters size cluster ϑ depth tree Thus number root individuals bounded implies claim theorem cid2 Theorem 5 Checking satisﬁability strongly separated acyclic graphextended knowledge base K T P G A T SHOIQ decidable 7 Complexity reasoning We determine exact complexity bounds checking satisﬁability graphextended knowledge base K T P G A In Section 71 problem NExpTimehard T Then Section 72 problem NExpTime K acyclic weakly separated T SHOQ K acyclic strongly separated T SHIQ left future work The case K strongly separated acyclic T SHOIQ 71 Lower bound A graphextended knowledge base K contains set P disjunctive datalog rules checking satisﬁability P NExpTimecomplete 11 standard ﬁrstorder semantics intuitively expect result provide lower bound complexity checking satisﬁability K To understand case consider following intuitive explanation result 11 The satisﬁability P decided following threestep process 1 Compute grounding Pg P replace P variables rules individuals possible ways 2 Nondeterministically guess interpretation I Pg 3 Check I model Pg Without restricting P way ﬁrst step implemented exponential time second step requires nondeterministic exponential time overall complexity procedure NExpTime If arity predicates occurring P bounded number ground atoms Pg polynomial P interpretations I enumerated exponential algorithm Similarly number variables P bounded Pg polynomial P furthermore second step clearly restrict attention interpretations contain ground atoms Pg enumerate relevant interpretations exponential time Thus problem NExpTimehard P allowed contain predicates arbitrary arity rules arbitrary number variables The set rules P graphextended knowledge base K contain rules unbounded number variables contain graph atoms arbitrary arity Graph atoms satisfy disjointness key properties Deﬁnition 10 imposes restrictions interpretation graph atoms addition P hardness result 11 apply In fact checking satisﬁability K NExpTimehard rules allowed contain unary binary predicates variables We identify new source complexity reasoning graphextended knowledge bases description graphs succinctly encode exponential structures We prove hardness reduction bounded domino tiling problem 7 Given domino S D H V initial condition S ntuple I Dα0 Dαn1 tiles D A bounded Stiling I function τ N2n N2n D N2n 0 2n 1 τ 0 Dαi 0 cid3 n cid18τ j τ 2n 1 jcid19 H cid18τ j τ j 2n 1cid19 V 9 Due strong admissibility equalities form u1 u2τi Lemma 2 u uτi relevant termination proof B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1303 Fig 8 Construction exponential grid 2n denotes addition modulo 2n Given domino S initial condition I checking bounded Stiling I exists NExpTimecomplete 7 Lemma 3 Let K P G A graphextended KB G GG acyclic GBox rule P contains atomic concepts roles variables Then checking satisﬁability K NExpTimehard Proof For arbitrary integer n ﬁrst construct graphextended knowledge base Kn cyclic grid 2n 2n elements The ABox Kn n graphs G V E λi Mi 1 cid3 cid3 n shown Fig 8a Mi Ai1 The knowledge base Kn following rules grid contains single assertion A0a The GBox Kn grid implies existence grid contains grid contains A0x R4x y R1x z H y z A0x R3x y R2x z H y z A0x R2x y R1x z V y z A0x R3x y R4x z V y z Hx y R4x z R1 y w Hz w Hx y R3x z R2 y w Hz w V x y R2x z R1 y w V z w V x y R3x z R4 y w V z w 36 37 38 39 40 41 42 43 We Kn grid satisﬁable model I Kn grid contains structure shown Fig 8b The individual corresponds apex pyramid Due assertion A0a model I contains instance G 1 vertex 5 corresponds Vertices 14 G 1 labeled A1 I contains instances G 2 shown ﬁgure By repeating argument I seen containing pyramid consisting n levels level contains 2i 2i vertices Furthermore ﬁrst level rules 3639 ensure vertex 4 connected H vertex 1 vertex 3 connected H vertex 2 vertex 2 connected V vertex 1 vertex 3 connected V vertex 4 grid ﬁrst level cyclic Rules 4043 inductively use H V edges level 1 construct missing H V edges level grid level 1 cyclic rules construct level cyclic grid Thus I contains level n cyclic grid size 2n 2n elements labeled An Consider domino S D H V m tiles D initial condition I Dα0 Dαn1 Let KSI grid following rules domino tile D D graphextended knowledge base obtained extending Kn corresponds atomic concept D 44 45 46 47 48 49 50 1304 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 A0x O 0x O 0x R1x y O 0 y Anx O i1x Hx y O y Anx O ix Dαi x Anx D1x Dmx D ix D jx 1 cid3 j cid3 m D ix Hx y D j y D D j H D ix V x y D j y D D j V 1 cid3 n 1 cid3 n 51 Let I model KSI By rules 4445 apex pyramid vertex reachable apex R1chain labeled O 0 Rule 46 ensure ﬁrst n vertices nth level pyramid labeled O 0 O n1 Rules 47 label vertices appropriate tiles initial condition Finally rules 48 51 ensure element nth level grid labeled exactly tile according compatibility conditions S Therefore KSI satisﬁable bounded Stiling I exists proves claim cid2 Note rule 48 contains disjunction Without disjunctions rules description graphs graph G GBox K V A cid3 1 main concept A G reasoning G P deterministic complexity drops ExpTime description graphs G encode structure computed determin istically exponential time unfolding G rules P applied structure exponential time Axioms form 48 available basic description logic ALC proof Lemma 71 shows reasoning graphextended KBs NExpTimehard basic DLs 72 Upper bounds The hypertableau procedure Section 6 worstcase optimal description graphs rules T ALC 31 Section 53 This ABox Acid5 labeling derivation node set HTrules R ΞT T ABox ΞAT A given point time contain exponentially nonblocked directly blocked tree individuals Acid5 contain doubly exponential number indirectly blocked individuals The complexity hypertableau procedure reduced NExpTime ensure label individual s fully determined Acid5 applying cid2rule assertion containing s rule application strategy ensures s subsequently blocked Acid5 contains indirectly blocked individuals A similar approach 14 obtain tableau algorithm ALC running NExpTime For SHOQ SHIQ algorithm worstcase optimal DLs ExpTimecomplete 3 Description graphs increase complexity NExpTime excess complexity modiﬁed hypertableau algorithm relevant present modiﬁed hypertableau algorithms decide satisﬁability graphextended acyclic knowledge base K T P G A NExpTime K acyclic weakly separated T SHOQ Since use extensive guessing realize idea outlined algorithms unlikely practicable K acyclic strongly separated T SHIQ Our modiﬁed algorithms applied R G A R normalized according following deﬁnition This assumption loss generality set HTrules normalized replacing concepts form cid2 n RB rules fresh atomic concepts Deﬁnition 18 Normalized rules A set HTrules R normalized atleast restriction concepts occur R rules form 52 Ax cid2 n RBx 52 We ready present algorithm case T SHOQ Theorem 6 Checking satisﬁability weakly separated acyclic graphextended knowledge base K TBox SHOQ NExpTimecomplete provided numbers K coded unary Proof Hardness shown Lemma 3 By properties preprocessing 31 K transformed equisatisﬁable triple R G A R normalized A input ABox We satisﬁability R G A decided following variant calculus Section 6 1 The cid2rule modiﬁed applied assertion cid2 n RBs ABox Acid5 introduces fresh tree successors t1 tn s nondeterministically derives following assertions 1 cid3 cid3 n B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1305 ti ti cid14 root individual Acid5 b ti u ti cid14 u individual u Acid5 c ti u ti cid14 u tree successor u s Acid5 d ti t j ti cid14 t j j cid3 n e Ati Ati atomic concept A occurring R G A cluster s 2 The Grule modiﬁed applied assertion As ABox Acid5 introduces fresh graph successors t1 tn s nondeterministically derives following assertions 1 cid3 cid3 n ti ti cid14 root individual Acid5 b ti u ti cid14 u individual u Acid5 c Ati Ati atomic concept A occurring R G A cluster ti 3 When rule applied assertion ti u derived previous cases merges ti u 4 The rule precedence satisﬁes following restrictions addition ones given Deﬁnition 15 rule applied highest priority b rule applied secondhighest priority c Hyprule applied HTrule form 52 thirdhighest priority d cid2rule applied Grule applicable 5 The strict ordering deﬁnition blocking follows creation orderthat individual s added ABox individual t s t The modiﬁed cid2 Grules obviously sound proof Claim 1 Theorem 1 applies minor changes Furthermore assertions introduced cid2 Grules form speciﬁed Lemma 1 new rule precedence stronger Deﬁnition 15 proofs Claims 2 3 Theorem 1 apply change Let A0 ABox labeling node derivation R G A let A1 ABox obtained A0 application cid2 Grule introduces fresh individuals t1 tn let A2 clashfree ABox obtained A1 exhaustive applications rules mentioned Items 4a4c We following property cid5 A2 contains ti A3 clashfree ABox obtained A2 applying derivation rules rule applicable A3 A3 contains ti LA2 ti LA3 ti This follows following facts By Items 1a1d 2a2b 4a4b ABox A2 contains inequality ti cid14 u individual u A2 individual A2 A3 ti potentially merged Hence A3 derived merging ti contains By Item 3 A3 derived application rule ti u u merged ti A3 contains ti By Items 1e 2c ABox A2 contains Ati Ati atomic concept A Hence A3 derived adding assertion form Bti A3 contains By Item 4c fact R normalized A2 contains assertions form cid2 n RBti implied HT rules form 52 Since derivation rule introduce concept Ati introducing clash HTrule form 52 derive new assertion form cid2 n RBti By Items 1e 2c 4d Grule applied exhaustively individuals cluster ti cid2rule introduce tree descendant ti Therefore subsequent application cid2rule introduces individual v ti v ti cid14 v introduced Item 1b allows inductive application argument We following property cid6 individual A3 indirectly blocked This cid5 implies blocking status ti A2 A3 means descendant ti indirectly blocked ti We following property pruning removes individuals ABox This simple consequence fact cid5 Items 3 4a4d individual ti merged individual A1 derivation A2 participate merging inference derive A3 Let c number atomic concepts R G A Item 5 deﬁnition single blocking A0 contain 2c nonblocked tree individuals As shown proof Claim 2 Theorem 1 A0 contain tree cluster tree individual contain ϑ graph individuals Furthermore cid6 implies A0 contain exponentially blocked individuals Consider named individual A0 Since individuals reused graph cleanup merging graph individual u introduce ϑ individuals label ωu form 35 There ϑ labels graph cleanup introduce ϑ 2 individuals In way proof Item 3 Claim 2 Theorem 1 Grule introduce ϑ individuals ϑ 2 individuals Thus A0 contains ϑr ϑ 3 root graph individuals number named individuals R G A Thus total number individuals itot clashfree ABox exponential R G A Furthermore derivation rule applied polynomial number individuals Finally individuals removed ABox pruning Thus derivation path R G A constructed nondeterministic exponential time implies claim cid2 1306 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 We prove analogous claim case T SHIQ Theorem 7 Checking satisﬁability strongly separated acyclic graphextended knowledge base K TBox SHIQ NExpTimecomplete provided numbers K coded unary Proof Hardness shown Lemma 3 membership proof analogous Theorem 6 The hypertableau algorithm Section 6 modiﬁed follows 1 The cid2rule modiﬁed applied assertion cid2 n RBs ABox Acid5 introduces fresh contains tree predecessor u s tree successors t1 tn s nondeterministically derives following assertions 1 cid3 cid3 n ti u ti cid14 u Acid5 b ti s ti cid14 s c ti u ti cid14 u tree successor u s Acid5 d ti t j ti cid14 t j j cid3 n e Ati Ati atomic concept A occurring R G A f Rs ti Rs ti Rti s Rti s atomic T role R occurring R G A 2 The Grule modiﬁed applied assertion As ABox Acid5 introduces fresh graph successors t1 tn s nondeterministically derives following assertions 1 cid3 cid3 n ti u ti cid14 u individual u Acid5 b Ati Ati atomic concept A occurring R G A cluster ti 3 The rule amended derive Acid5 4 Items 25 proof Theorem 7 change contains Rs t Rs t Although negative role assertions form Ru v satisfy Lemma 2 participate model construction proof Theorem 3 Theorem 4 holds change Furthermore Item 1e modiﬁed calculus ensures individual s tree successor t s labels LAs t LAt s fully determined application cid2rule individual t j pairwiseblocked immediately introduced blocked The rest argument analogous proof Theorem 6 cid2 8 Implementation We implemented reasoning algorithm hypertableaubased reasoner HermiT 31 Evaluating adequacy approach diﬃcult lack test data Furthermore remodeling existing ontologies new modeling paradigm require considerable effort In order obtain test data reasoner adoption approach practice easier developed algorithm automatically transforms TBox T1 graphextended knowledge base K The knowledge base K rough approximation starting point comprehensive remodeling T1 proper graphextended KB Our experience GALEN discussions authors GALEN led conclude transformed KB K represents anatomical structures human body way closer modelers intention original DL axioms10 81 The transformation algorithm Our algorithm transforms TBox T1 graphextended K T G P A K stronglyseparated G contains description graph It clearly useful automatically transform T1 smaller description graphs unclear kinds heuristics use order determine boundaries different description graphs Our transformation based assumptions The ﬁrst assumption concepts roles T1 relevant G For example Hand relevant graph human body Fracture similarly hasPart role belongs graph hasAge role The second assumption relevant concept represented vertex G edges G decoded axioms form A cid4 RB In words conjecture writing axioms 5355 modelers actually wanted index ﬁnger middle phalanx proximal phalanx parts phalanges attached Index_ﬁnger cid4 partMiddle_phalanx_oif Distal_phalanx_oif cid4 attached_toMiddle_phalanx_oif Proximal_phalanx_oif cid4 Index_ﬁnger 10 Thanks Alan Rector Sebastian Brandt 53 54 55 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1307 Table 6 Information test ontologies Total number concepts Total number roles Total number GCIs GCIs discarded transformation Translated GCIs Into description graph Into rules graph Into DL TBox Vertices description graph Edges description graph GALEN 2748 413 6962 320 6642 680 155 5807 325 667 FMA 430 38 3479 328 3151 2966 1 184 342 1076 Our algorithm given DL TBox T1 set relevant concepts NC g set relevant roles N R g The set actually deﬁnes set Groles roles T roles Our algorithm ﬁrst normalizes T1 certain way Then creates vertex V concept A NC g sets λcid18icid19 A Then processes axiom α T1 follows If α form A cid4 RB A B NC g R N R g j vertices λcid18icid19 A λcid18 jcid19 B algorithm adds edge cid18i jcid19 E extends λ R λcid18i jcid19 If α contain role N R g α copied T If α contains roles N R g existential quantiﬁer algorithm translates α graphregular rule adds P If α form involves Grole T role simultaneously form A cid4 RB A B R relevant graph Such axiom invalidates syntactic restrictions formalism natural interpretation Human intervention needed interpret axioms reasonable way axioms discarded algorithm strategy manually identify set roles N Determining sets NC g N R g manually easy According experience GALEN FMA good naturally belong graph N R g closure cid5 wrt explicit role inclusions T1 Then NC g set concepts A B occurring axiom N R g A cid4 RB T1 R N R g Intuitively A B connected role included graph likely A B included graph cid5 R g 82 Classiﬁcation results To evaluate approach classiﬁed original version GALEN fragment FMA Next transformed graphextended KBs classiﬁed resulting KBs reasoning algorithm presented Section 6 We discuss obtained results Table 6 summarizes information original transformed ontologies We performed experiments standard laptop 1 GB RAM Classiﬁcation original version GALEN fragment FMA took 129 s 57 s respectively furthermore classiﬁcation transformed ontologies took 781 s 6 s respectively The increase classiﬁcation time GALEN partly prototypical nature implementation In case FMA classiﬁcation times substantially lower original ontology translated graph generated models smaller Our results prototypical implementation complex ontologies processed indication approach practically feasible Our transformation leads change semantics ontology axioms lost process semantics axioms modiﬁed Many parts resulting description graph correspond intuitive description human body For example union graphs shown Figs 2b2e extracted transformed ontology Although information lost translation resulting description graphs seen precise original axioms expect obtain new entailments For example discovered GALEN concept satisﬁable original ontology unsatisﬁable transformed ontology revealed modeling error original ontology The problem occurs representation patellaa bone knee connected cer tain tendons retinacula represented concepts LateralPatellaRetinaculum MedialPatellaRetinaculum GALEN describes relationship patella retinacula follows LateralPatellaRetinaculum hasOtherEndAtPatella cid8 MedialPatellaRetinaculum hasOtherEndAtPatella cid8 56 57 1308 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 hasOtherEndAt isAtOtherEndOf cid6 cid4 cid3 1 isAtOtherEndOf 58 59 In human body patella connected lateral medial retinaculum In GALEN isAtOtherEndOf functional retinacula connected patella object This leads believe isAtOtherEndOf probably declared functional GALEN underconstrained require lateral retinaculum medium retinaculum knee connected patella state lateral retinaculum medial retinaculum different Consequently concept Patella consistent GALEN modeling error detected The description graph produced transformation contains node patella retinaculum furthermore retinacula connected isAtOtherEndOf patella Since isAtOtherEndOf functional retinacula invalidates disjointness property description graphs Deﬁnition 10 makes Patella unsatisﬁable 9 Conclusion We presented expressive formalism extends DLs description graphs rules allowing precise modeling arbitrarily connected structures Our formalism applicable anatomy domains number arbitrarily interconnected objects natural bound The main open theoretical challenges determine decidability andor complexity reasoning graph extended knowledge bases different assumptions expressivity DL TBox T set rules P All undecidability results Section 5 require T contain number restrictions We conjecture T allowed contain number restrictions P G contain graph alignments reasoning decidable G acyclic This T properties Table 4 apart key disjointness properties transformed equivalent formula guarded fragment ﬁrstorder logic known decidable 2 furthermore key disjointness properties innocuous merely prevent axiomatization inﬁnite chains instances description graph Another important research direction decidability achieved placing different restrictions set rules P For example conjecture role separation requirement formalism extended ELP rules 24 losing decidability Finally complexity reasoning strongly separated acyclic graph extended knowledge base TBox SHOIQ open The main practical challenge validate applicability formalism applications To end extend ontology editor Protégé 4 support description graphs apply formalism identiﬁed practical scenarios References 1 S Abiteboul R Hull V Vianu Foundations Databases Addison Wesley 1995 2 H Andréka J van Benthem I Németi Modal languages bounded fragments predicate logic Journal Philosophical Logic 27 3 1998 217 274 3 F Baader D Calvanese D McGuinness D Nardi PF PatelSchneider Eds The Description Logic Handbook Theory Implementation Applications 2nd edition Cambridge University Press August 2007 4 F Baader U Sattler An overview tableau algorithms description logics Studia Logica 69 2001 540 5 Franz Baader Carsten Lutz Holger Sturm Frank Wolter Fusions description logics abstract description systems Journal Artiﬁcial Intelligence Research 16 2002 158 6 P Baumgartner U Furbach I Niemelä Hyper tableaux Proc European Workshop Logics Artiﬁcial Intelligence JELIA 96 Évora Portugal September 30October 3 1996 LNAI vol 1126 Springer 1996 pp 117 7 E Börger E Grädel Y Gurevich The Classical Decision Problem Springer 1996 8 A Borgida On relative expressiveness description logics predicate logics Artiﬁcial Intelligence 82 12 1996 353367 9 A Calì G Gottlob M Kifer Taming inﬁnite chase Query answering expressive relational constraints Gerhard Brewka Jérôme Lang Eds Proc 11th Int Joint Conf Principles Knowledge Representation Reasoning KR 2008 Sydney NSW Australia August 1619 2008 AAAI Press 2008 pp 7080 10 Bernardo Cuenca Grau Ian Horrocks Boris Motik Bijan Parsia Peter PatelSchneider Ulrike Sattler OWL 2 The step OWL Journal Web Semantics Science Services Agents World Wide Web 6 4 2008 309322 11 E Dantsin T Eiter G Gottlob A Voronkov Complexity expressive power logic programming ACM Computing Surveys 33 3 2001 374425 12 J Bruijn A Polleres R Lara D Fensel OWL DL vs OWL ﬂight Conceptual modeling reasoning semantic web Proc 14th Int World Wide Web Conference WWW2005 Chiba Japan May 1014 2005 ACM 2005 pp 623632 13 S Demri H Nivelle Deciding regular grammar logics converse ﬁrstorder logic Journal Logic Language Information 14 3 2005 289329 14 FM Donini M Lenzerini D Nardi A Schaerf ALlog Integrating datalog description logics Journal Intelligent Information Systems 10 3 1998 227252 15 T Eiter T Lukasiewicz R Schindlauer H Tompits Combining answer set programming description logics semantic web D Dubois CA Welty MA Williams Eds Proc 9th Int Conf Principles Knowledge Representation Reasoning KR 2004 Whistler Canada June 25 2004 AAAI Press 2004 pp 141151 16 A Goderis U Sattler CA Goble Applying description logics workﬂow reuse repurposing Ian Horrocks Ulrike Sattler Frank Wolter Eds Proc 2005 Int Workshop Description Logics DL 2005 Edinburgh UK July 2628 2005 CEUR Workshop Proceedings vol 147 17 H Graves Representing product designs description graph extension OWL 2 Alan Ruttenberg Ulrile Sattler Cathy Dolbear Eds Proc 5th Int Workshop OWL Experiences Directions OWLED 2008 EU Karlsruhe Germany October 2627 2008 B Motik et al Artiﬁcial Intelligence 173 2009 12751309 1309 18 JE Hopcroft R Motwani JD Ullman Introduction Automata Theory Languages Computation 2nd edition Addison Wesley 2000 19 I Horrocks H Graves Application OWL 11 systems engineering K Clark PF PatelSchneider Eds Proc OWL Experiences Directions Workshop OWLED 2008 DC Washington DC USA April 12 2008 20 I Horrocks PF PatelSchneider A proposal OWL rules language Proc 13th Int World Wide Web Conference WWW 2004 New York NY USA May 1722 2004 ACM Press 2004 pp 723731 21 I Horrocks U Sattler Decidability SHIQ complex role inclusion axioms Artiﬁcial Intelligence 160 12 December 2004 79104 22 M Kifer G Lausen J Wu Logical foundations objectoriented framebased languages Journal ACM 42 4 1995 741843 23 M Konyk A De Leon Battista M Dumontier Chemical knowledge semantic web Proc 5th Int Workshop Data Integration Life Sciences DILS 2008 LNCS vol 5109 Springer 2008 pp 169176 24 M Krötzsch S Rudolph P Hitzler ELP Tractable rules OWL 2 Amit P Sheth Steffen Staab Mike Dean Massimo Paolucci Diana Maynard Timothy Finin Krishnaprasad Thirunarayan Eds Proc 7th Int Semantic Web Conference ISWC 2008 Karlsruhe Germany October 2630 2008 LNCS vol 5318 Springer 2008 pp 649664 25 O Kutz I Horrocks U Sattler The irresistible SROIQ P Doherty J Mylopoulos CA Welty Eds Proc 10th Int Conf Principles Knowledge Representation Reasoning KR 2006 Lake District UK June 25 2006 AAAI Press 2006 pp 6878 26 AY Levy MC Rousset Combining Horn rules description logics CARIN Artiﬁcial Intelligence 104 12 1998 165209 27 B Motik Reasoning description logics resolution deductive databases PhD thesis Univesität Karlsruhe Germany 2006 28 B Motik B Cuenca Grau U Sattler Structured objects OWL Representation reasoning Proc 17th Int World Wide Web Conference WWW 2008 Beijing China April 2125 2008 ACM Press 2008 pp 555564 29 B Motik R Rosati A faithful integration description logics logic programming Proc 20th Int Joint Conf Artiﬁcial Intelligence IJCAI 2007 Hyderabad India January 612 2007 Morgan Kaufmann Publishers 2008 pp 477482 30 B Motik R Shearer I Horrocks Optimized reasoning description logics hypertableaux F Pfenning Ed Proc 21st Conference Automated Deduction CADE21 Bremen Germany July 1720 2007 LNAI vol 4603 Springer 2007 pp 6783 31 B Motik R Shearer I Horrocks Hypertableau reasoning description logics Technical report University Oxford 2008 JAIR submitted publi cation 32 Boris Motik Ulrike Sattler Rudi Studer Query answering OWLDL rules Journal Web Semantics 3 1 2005 4160 33 J Mylopoulos A Borgida M Jarke M Koubarakis Telos Representing knowledge information systems ACM Transactions Information Sys tems 8 4 1990 325362 34 PF PatelSchneider P Hayes I Horrocks OWL web ontology language Semantics abstract syntax W3C Recommendation httpwwww3orgTR owlsemantics February 10 2004 35 DA Plaisted S Greenbaum A structurepreserving clause form translation Journal Symbolic Logic Computation 2 3 1986 293304 36 R Rosati DLlog A tight integration description logics disjunctive datalog P Doherty J Mylopoulos CA Welty Eds Proc 10th Int Conf Principles Knowledge Representation Reasoning KR 2006 Lake District UK June 25 2006 AAAI Press 2006 pp 6878 37 RA Schmidt U Hustadt A principle incorporating axioms ﬁrstorder translation modal formulae F Baader Ed Proc 19th Int Conf Automated Deduction CADE19 Miami Beach FL USA July 28August 2 2003 LNAI vol 2741 Springer 2003 pp 412426 38 S Tobies Complexity results practical algorithms logics knowledge representation PhD thesis RWTH Aachen Germany 2001 39 MY Vardi Why modal logic robustly decidable N Immerman P Kolaitis Eds Proc DIMACS Workshop Descriptive Complexity Finite Models Princeton University USA January 1417 1996 DIMACS Series Discrete Mathematics Theoretical Computer Science vol 31 American Mathematical Society 1996 pp 149184