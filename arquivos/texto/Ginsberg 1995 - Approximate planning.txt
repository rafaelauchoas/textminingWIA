Artificial Intelligence 76 1995 89123 Artificial Intelligence Approximate planning Matthew L Ginsberg ClhL 1269 University Oregon Eugene OR 974031269 USA Received April 1993 revised March 1994 Abstract This paper makes linked contributions First argue planning systems instead correct plan returned achieves goal complete plans returned approximately correct complete plans returned achieve goal plans returned The contribution formalize notion Our second aim demonstrate practical importance ideas We argue cached plans casebased planners best thought approximate opposed exact use approach plan subgoals gr g2 separately combine plans generated produce plan conjoined goal A gz The computational benefits working subgoals separately long recognized attempts correct complete planners failed 1 Introduction When talk plan achieving goal typically mean plan turkey I sweet wish stated goal As example involves stuffing roasting potatoes pumpkin pie buying bottle wine calling happy holidays turkey preparation plan preparing actions I plan making I Thanksgiving I hardly mean turkey actions removed family members In fact plan stuff turkey roast represented like stuff roast 1 Supported Air Force Office Scientific Research contract 920693 ARPARome Labs contracts F3060291C0036 F3060293C00031 Email ginsbergcsuoregonedu 0004370295950 1995 Elsevier Science BV All rights reserved SSDIOOO4370294000778 90 ML GinsbergArtificial Intelligence 76 1995 89123 A B C D Fig 1 Get A B C building fourblock tower ellipses denote currently undetermined action sequences I inter sperse plan If I need roast turkey immediately stuffing I write stuff roast 2 second set ellipses dropped There course instances 1 unsatisfactory Perhaps I run turkey paper shredder beginning preparation unstuff stuffing garnish liberally peanut butter serving In sense 1 plan things wrong The conventional approach problem deal plans appearing 1 far specific plans stuff yams telephone roast eat 3 guaranteed extraneous actions interfere achieving goal But practical point view plan 3 nearly worthless inconceivable I execute exactly written There examples phenomenon If intend construct plans retrieving library known solutions similar problems socalled casebased planning 14 important plans library include measure flexibility After unlikely new situation exact match situation plan constructed Our ability plan conjunctive goals rests similar ideas When possible important plan conjuncts separately merge results appears require solutions individual conjuncts plan schemas 1 Planning conjuncts separately enables computational advantage benevolence environment reflected frame assumptionwe typically achieve subgoal worry work things Another example conjunctive planning problem appears Fig 1 The goal A B B C restriction effect build fourblock tower For human planner problem easy We realize general plan getting B C simply similarly getting A B When combine plans encounter problemthe action moving A B fail We modify plan getting B C adding additional action moving C table ML GinsbergArtificial Intelligence 76 1995 89123 91 I presented problem authors generative planning systemsMinton PRODIGY 171 Wilkins SIPE 211 Both reported personal communication problem pose significant difficulties solve adding additional precondition action movex y effect y table block z table 1 The problem approach doubles branching factor plan ning problems This lead prohibitive computational difficulties problems involved larger imagine having block prior constructing 13block tower domain prohibits 1Cblock ones As example immediacy difficulties Penberthy Welds UCPOP 181 proved incapable solving fourblock version problem Fig 1 inclusion domainspecific control information Worse fact branching factor increased problems involve tall towers Imagine example blue block red red block table The branching factor doubled working domain blue blocks 3 Explicit control rules provide potential ways particular difficulties use problematic What control rule use previous domain includes painting actions colors blocks change What control rule allow efficiently solve problem Fig 1 constraint changed jiveblock towers prohibited Related problems appear plan debugging If human planner discovers bug portion plan achieve complex goal typical response restrict impact bug small portion analysis plan problem That modifications address bug destroying effect original plan depends commonsense ability construct manipulate plans holding universally hold general like Iplans My intention paper develop formalization ideas implicit plan 1 use constructs conjunctive planning Please bear work mathematics variety fundamentally new ideas need formalize 1 We need plans new actions added arbitrary ways include immediacy requirements plan 2 This goal section present variety mathematical results new plans needed later 2 We need define conditions plan approximately achieves goal The basic idea plan P approximately correct instances P actually executed achieve goal We 1 Wilkins alternative suggestion creating operators This equivalent practice doubling branching factor introducing second operator equivalent doubling introducing disjunction precondition Will Harvey personal communication The problem time space UCPOP reported exhausted available memory working problem s This assuming treat color precondition filter We need actions available changed blocks colors 92 ML GinsbergArticial Intelligence 76 1995 89123 formalize Section 3 introducing idea exception plan formalizing conditions plans hold sufficiently frequently prepared treat approximately correct 3 The problem building planner ideas discussed Sections 4 5 Section 4 discusses theoretical issues involved construction planner showing possible plan conjuncts separately ideas Section 5 discusses preliminary implementation work 4 Concluding remarks contained Section 6 proofs deferred appendix Let end introduction disclaimer I mean imply existing implemented systems incapable manipulating expressions 1 Tates OPlan example 2201 appears use ideas rou tinely But planners behave fashion far lacked formal foundation correcting intention In providing solid formal foundation nonlinear planning McAllester Rosenblitts paper 161 step forward step formalized ideas previously eluded precise description omitted procedural tricks implemented planners effective As result formally wellgrounded planners described Pen berthy Weld 181 typically exhibit performance far worse informal systems preceded My hope shed formal light ideas proven effective practice 2 Plans I adopt view plan partially ordered collection actions action functional expression b Definition 21 An action variable functional expression arguments function include variables A ground action action contains variables By action mean action moving location presumably determined considerations We simply define plan partially ordered sequence actions need able distinguish 1 2 In cases want action precede b immediately actions interspersed We handle follows Definition 22 A plan triple A A finite collection actions partial order A Q b actions b E A mean precede b binary relation A c u b b We assume satisfy following conditions 1 Ifcaandcbthenub 2 If b c c b ML GinsbergArtificial Intelligence 76 1995 89123 93 We b mean b successor intermediate actions permitted Note definition refers A collection instead set allow action appear multiple times partial order To understand additional conditions suppose immediate successor c c Now b successor c precede b The second condition dual In practice plans bounded initial terminal actions We model requiring plans contain dummy initial terminal actions denoted di d respectively Definition 23 A plan A said bounded di E A d E A di d E A We assume paper plans bounded The general turkeyroasting plan 1 corresponds partial order di stuff roast d plan roasts turkey immediately stuffing corresponds di stuff roast dr The second inequality instance Before proceeding let spend moment discussing difference annotation links partiallyordered plan causal annotations introduced McAllester Rosenblitt 161 McAllester Rosenblitts links serve bookkeeping function information contain action intended achieve precon dition recovered need plan constructed Recording information arcs serves computational purpose making plans efficient work Our annotation different Annotating arc makes associated plan semantically different object sense added new constraint set linearizations given plan Note language fundamentally flexible McAllester Rosenblittswe allow addition arbitrary new actions plans This important enables work flexible plan 1 instead far restrictive 3 Lemma24 ZfA 1 Ifabunduc 2 Ifacundbc isuplun bc thenub thenforunyubcEA An action immediate predecessor successor Suppose plan A If chain 94 ML GinsbergArtial Intelligence 76 1995 89123 c s cn c 6 b b CLS follow room c The following lemmas capture written Z transitive closure Lemma25 Let A 1 IfcbandcJCa 2 IfbcandaZc beaplan ThenforanyabcEA theneithercZborab theneitherbicorba Lemma26 13 c LetA beaplanThenforanyabcEAifaibandacb It straightforward define conditions plans equivalent instance Definition 27 Two plans Pt P2 called equivalent identical variable renaming Definition 28 A plan AI I I binding list ll mapping A2 A1 following properties instance plan AZ 22 1 For E AZ ia al In words mapping maps action 2 constructed applying bindings u 62 C 61 Every ordering constraint second plan appears 3 i2 G I An example probably help If stuff roast actions accept argument eat action doesnt stuff turkey roast turkey eat instance I stuff roast The plan 4 corresponds partial order di stuff turkey roastturkey eat d 5 corresponds di stuff roast dt The required injection given X stuffturkey ix x di x d x stuff roast turkey x roast 4 5 6 7 ML GinsbergArtificial Intelligence 76 1995 89123 95 binding list T binds turkey It clear action x ix The image f 7 partial order di stuff turkey roast turkey d clearly included partial order 6 image contains single pair stuffturkeyroastturkey contained 6 Proposition 29 The instance relation Definition 28 partial order We write Pt S P2 denote fact plan PI instance plan p2 We careful definitions restrict number new actions inserted actions plan When comes time actually execute plan need select specific action sequence Definition 210 A plan P A 6 called linear following conditions hold 1 Every action A ground 2 3 A linear plan instance plan P called linearization P In words linearization plan replaces variables object constants selects ordering actions involved derived solely immediacy conditions This condition implies additional actions added plan As example linear plan 3 corresponds partial order di stuff yams telephone roast eat d There way add action ordering having precede di follow dt violate conditions Definition 22 Lemma 211 If P A linear plan 6 total order Proposition 212 PI C P2 set linearizations PI subset set linearizations P2 Given result makes sense think plan terms linearizations linearization way actually executing actions plan Definition 213 A plan set set linear plans 96 ML GinsbergArtcial Intelligence 76 1995 89123 3 Approximate correctness Given inevitably mistakes sense linearizations given plan actually achieve intended result formalize idea plan 1 correct general The solution use extension idea I proposed 1991 lo As example suppose I trying block A block B blocks world A clear C currently B wide variety blocks scattered table Here plan achieving goal moveC moveA B 8 I plan C way A B Ive assumed moment additional actions added involves variable appears 8 Note location block currently Bif relocate A B clear A longer Given sense 8 solution problem It solution places C doesnt work sense pathological locations work What need capture way set exceptions small relative set possibilities From formal point view exception involves specific binding vari able This leads following Definition 31 Given binding list u plan P A result applying P defined plan actions A binding list applied plan unchanged This plan denoted PI We example bind A 8 obtain moveCA moveA B The following result obvious Lemma 32 Given plan P binding list PI 2 P 0 We position conditions set plans small relative We need careful plans generally infinitely linearizations simply Q small relative P Q fewer linearizations P Instead Q small relative P Q P Q P The motivation definition generally ways bind particular variable Q committed specific choice In following definition Q measure 0 P instead simply saying Q small relative P The term borrowed real analysis use ML GinsbergArtificial Intelligence 76 1995 89123 91 formal definition smallness properties analytic definition modelled The finite union small sets small example The 0 means ratio size Q P approximately 0 Q measure 1 P ratio approximately 1 Q P comparably sized Definition 33 A plan Q said measure 0 plan P Q P Q PI binding list cr A plan plan set Q said measure 0 plan plan set P following conditions satisfied 1 Q finite union sets measure 0 P 2 There exist plan sets R S Q G R R S P measure 0 S The requirement Q P ensures binding list CT trivial The second condition definition handles cases Q subset set measure 0 P S P example specific linearization removed P Adding linearization P impact question Q measure 0 P S union P missing linearization As example plan movea b measure 0 plan variable bound constant 9 But plan b 9 10 11 measure 0 plan 9 difference plans binding variable fact action movea b final action 11 immediate predecessor plans terminal action 9 For similar reasons plan actions al a2 sequential measure 0 plan actions unordered Since 9 measure 0 plan set 10 11 instance subset 9 11 measure 0 10 Finally 9 measure 0 plan set given removing movea c 12 10 After binding b reduces set small relative set possible bindings removing single possible bindings advance shouldnt change conclusion The second condition Definition 33 allows continue measure size plan set relative 10 12 removed 98 ML GinsbergArtijicial Intelligence 76 1995 89123 What adding new actions plan If add variable actions result general measure 0 original plan committing linearizations original plan include additional actions form event But add specific action story different Proposition 34 Let P plan P instance P associated injection A A Then action A iA variable P measure 0 P Definition 35 A plan set Q said measure 1 P P Q measure 0 P Two plans sets called approximately equal measure 1 Lemma 36 Q measure 0 P following conditions holds 1 Q 2 Q subset set measure 0 P 3 Q measure 0 subset P 4 Q measure 0 superset S P P measure 1 S Lemma 37 Q measure 0 P Q measure 0 P U Q Proposition 38 Approximate equality equivalence relation We following Proposition 39 Let P 0 plan set Then provided language includes infinitely object action constants plan set measure 0 measure 1 P It result gives teeth ideas proposing plan measure 0 measure 1 P able return generally correct plans fact failed large fractions linearizations The requirement infinitely constants necessary If example 37 places object moved use fact specific choice measure 0 overall plan conclude union wasthereby violating Proposition 39 Similarly set actions circumscribed way use Proposition 34 counterexample proposition Finally present technical results need later We begin recalling usual definition convergence sequence Si sets Definition 310 Let Si sequence plan sets Then Si converge set S X index mx mx x E Si x E S M L GinsbergArtificial Intelligence 76 1995 89l 23 99 Lemma 311 Suppose sequence Pi plan sets Pi1 measure 0 Pi Then Pi converge set Every infinite descending chain element measure 0 previous converges set It case infinite descending chain plan sets measure 0 previous For function constant f chain considering movex 3 movex f 3 movex ffl 3 Lemma 312 Suppose S measure 1 T measure 0 U Then T measure 0 U Suppose denote A 8 B symmetric difference A B AeBABUBA We Proposition 313 Suppose set D measure 1 A 8 B measure 0 A Then A B approximately equal 4 Planning Having introduced notions need use construct planner Before let clear problem I hoping address Our focus planning opposed reasoning action simulation In words assume semantics actions provided somewhat specifically assume given linear plan L goal g way tell g holds L executed From formal point view assume given goal g Lg set linear plans achieve g The analysis present independent specific semantics action underlying function L In examples course need rely specific semantics action For blocks world semantics presumably intuitive corresponds usual STRIPS description The difference interpretation conventional need way interpret actions attempted preconditions satisfied view actions simply effect domain question We following definition Definition 41 A planning P accepts input goal g plan set P It returns plan set Pg P c P approximately equal Lg 17 P In cases assume goal fixed writing Pg corresponding function accepts plan set P 100 ML GinsbergArtiJCcial intelligence 76 1995 89123 The plan set P focus planners attention plans particular form The condition Pg P measure 1 Lg II P means necessarily allof planner In picturesque terms planner approximately complete plans P achieve g actually returned The condition Lg n P measure 1 Pg P means plans returned planner achieve goal words planner approximately correct In situation like Lg measure 1 plan set P P generally achieves g In remainder section begin discussing planning systems general describing implementation concerns likely arise construction There technical issues address First planning produce answers planning queries actually correct complete limit More precisely planning construct sequence answers converges actual set Lg Second planning respond conjunctive goal gl A g2 invoking subgoals gi g2 separately combining results More precisely Pssz constructed Pg Pg2 We begin discussing Ps On intuitive level way Pg works follows Given goal g actions succeed establishing g If preconditions actions general satisfied preconditions hold initial situation PG union plan sets form I action achieving g 13 If preconditions general satisfied invoke P recursively precondition merge results obtain plans enable append end plans The result 13 fact special case observation preconditions known hold initial state 1 preconditions hold plan set approximately equal set plans The expression 13 simply result appending end plans We follows interested P constructs plans achieving g Pig tells elements particular plan set _fuil achieve g This obvious analogs existing planners 1 2 3 In like TWEAK 11 exceptions involve finding Chapman calls clobberers New actions plan work called white knights McAllester Rosenblitt 161 potential flaws plan action overturn consequences threats Overcoming threats involves adding new actions plan ensure consequences action hold Finally discuss Section 5 use declarative construct Pg Pyg ML GinsbergArtificial Intelligence 76 1995 89123 101 I Fig 2 The Sussman anomaly Before turning technical issues let look example bit The problem consider wellknown Sussman anomaly 191 shown Fig 2 The goal A B B C At point consider subgoals separately The involves simply getting B C This generally achieved Plan moveB C 14 Although instances 14 succeed getting B C finite number ways happensomething B C B moved away C end plan Each exceptions measure 0 14 plan 14 generally achieves B C Furthermore B C add list preconditions action hold initial situation This implies plan set 14 approximately equal set plans getting B C action B C PonBC I moveBC 13 The conditions approximate equality satisfied Most plans achieve goal instances plan fact exceptions set measure 0 15 To continue analysis compute PlonBC moveBC I order determine elements 15 exceptions plan There ways exceptions arise One preconditions action fail hold clobber fact B C action executed The action moveBC preconditions B clear C B clear initial situation general plan clobbers fact B It follows plan 14 fail instance 1 B moveBC 16 102 ML GinsbergArtificial Intelligence 76 1995 89123 B C 16 general There specific plans manage failure possibility failed action moving B C simply effect locations blocks Another way 14 B assuming fail given Recall C _ B C 17 moved C The remaining possibility B C end plan moved away Combining 16 17 PTonBC moveBC I et UeUe3 union following sets exceptions el I B BC e2 moveC moveBC es moveBC moveB Each sets measure 0 15 union If wish continue process computing PonBCel UezUes 18 elements exception shortly sequence constructed set plans achieve The second goal A B complicated goal getting B C set achieve fashion eventually goal As converge slightly It generally achieved moveC moveA B 19 Once finitely ways 19 chosen poorly previous case In keeping Proposition infinite number distinct complete actions added locations table C moved The A B bad choices additional 39 assuming fail binding list exceptions follows f movelC moveC moveAB f2 movel _ moveC moveA B f3 moveC movelA moveA B f4 movel B moveC fs moveC fs moveCA f7 moveCB moveAB moveAB moveA B moveAl moveA B 20 In f4 extended notation actions b ordering constraint somewhat writing b plan taking ML GinsbergArtijcial Intelligence 76 1995 89123 103 In formal terms plan 19 fail following reasons 1 The attempt C way fail This happen moved C fr moved Cs intended destination f 2 Something moved A f3 f6 B f4 f7 We exceptions case depending block moved way C fe f7 f fd 3 A moved B fs Because exceptions measure 0 19 19 satisfactory choice PonA B I We PlonAB moveC moveAB I Uft We needed careful constructing exceptions f3 indi cated instead obvious choice fi movelA moveC moveA B 21 allowed action moving A occur parallel action moving C way The reason action moving I wont A interfere rest plan action succeedand C moved way Put formally subset f actually achieves onA B includes component approximately equal movelA moveC moveAB 22 measure 0 f Again recall semantics failed actions effect Since A clear Fig 2 action 22 fails 22 effectively reduces 19 From computational point view attractive work f work accurate f3 appearing 20 The reason fi measure 0 original plan 19 simpler f3 presumably easier generate It obviously easier stop soon set measure 0 original plan encountered complete analysis obtain f3 instead fi This exactly commonsense planners dowhen plan set conjuncts worry wrong feel confident dismissing In running example know wrong plan moving A B additional block A The need extra action ensures looking set measure 0 overall plan dont think More specifically dont bother draw conclusion A C cleared It remain keeping approach wish work fi instead f3 The general version construction similar At oddnumbered step cluding look plans achieve goal identified At evennumbered steps look exceptions plans far 104 ML GinsbergArtificial Intelligence 76 1995 89123 Definition 42 Given planning P goal g planning sequence gener ated P g given Pilg UPgP Pilg Pig Pilg P7gPilg9 odd 23 The sequence initialized POg 0 Some notation definition easier work If write ZJ symmetric difference Pi Pil suffices Di computed step We know Di added Pi odd steps removed steps Now 23 PgP Pilg vig P7g9Pilg9 odd 24 Further simplification possible If example evaluate 24 recursively 25 If know caught exceptions 2 nd step know P Tg PiTg 8 replace 25 simpler DiS P7gvi18 26 In similar way know Di1 g includes plans achieve g odd step conclude Dig Pg Di1 g 1 27 In 26 27 purpose step correct possible incorrectness previous step possible incompleteness previous step issue We position achieve technical goals section Theorem 43 Given planning P goal g planning sequence gener ated P g converges Lg This result shows construct planner correct complete approximately correct approximately complete Our remaining goal showing combine planners results gl g2 obtain plan gl A g2 Resumably semantics underlying L plan achieves conjunctive goal gl A g2 achieves gl g2 ml A g2 Ug1 fl Lg ML GinsbergArtificial Intelligence 76 1995 89123 105 The following result obvious Lemma 44 Suppose PI achieves goal gl P2 achieves g2 Then PI f P2 achieves gl A g2 0 The problem course PI f P2 linear plans achieve plans generally achieve achieves B C 19 generally achieves A B conclude solution PI P2 specific require goals use fact 14 generally general goals If weaken Sussman anomaly lemma moveBC moveC moveAB 28 involves This plan actionsmoving B C moving C way moving A B C moved A B ordering Sussman anomaly constraints allows action moving C way Here general problem action moving B C precede involved Unfortunately solution Proposition 45 There exist plans PI P2 Ql Q2 Qi measure 0 Pi Ql fl Q2 measure 1 PI n P2 The Sussman anomaly isnt bad correct plan _ moveC moveBC moveAB I measure 0 measure 1 28 28 generally measure 0 28 time fails original goal getting A B B C goal In fact succeeds If measure 1 28 fail achieve depends order actions general achieve The towerconstruction problem Fig 1 example Proposition 45 hold The plan BC I gets B C moveA B generally gets A B Nevertheless plan constructing tower measure 0 moveA B BC I proposition sets plans additional Pi plans achieving action moving C table In terms subgoals Qi exception We necessarily merge specific plans achieving individual Nor Proposition 45 tells necessarily plan conjunctive conjuncts goal 106 h4L GinsbergArtificial Intelligence 76 1995 89123 merging plans generally achieving consequence immediate Theorem 43 conjuncts But following Corollary 46 Given planning P goals gl g2 denote Pig planning sequence generated P g Then sequence Pigl n Pig2 29 converges Lgl A gz plan achieving conjunction gl gz 0 This result evidence limit 29 viable right track need bit practice More precisely need Definition bettertaking way compute Pggz guarantee 41 To let look Sussman anomaly satisfy requirements terms planning bit sequences We know construct subgoals PtonAB moveC moveAB I PzonAW PIMAB Jfi PionBC moveBC P2onBC PtonBC Uei ei fi given 18 20 respectively Let US denote conjoined element sequence sequence given 29 simply Pi It follows P moveBC moveC moveAB 30 The second element sequence 18 20 We compute involves removing combining Pt example exceptions plan et movel B moveBC sets removed Pt onB C moveC moveAB 31 32 original Pt A B Pt A B The result particular merge We standardized apart variables et 18 replaced l 31 following set plans movel B moveBC moveC moveAB 33 1 moveC moveAB moveBC moveC B moveBC moveAB I 34 35 The plans obvious merge separate plans A variable I In second parallel simply executed bound ML GinsbergArticial Intelligence 76 1995 89123 107 et identified second action action resulting action sequence The plan similar bound Each plans fails achieve accumulated Pt A B The ordering orderings et Pt A B B l bound C new currently unidentified B moved C And finally C moved B 35 subgoal getting B C In 33 block moved B In 34 A moved B 34 It involves additional variable As remarked measure 0 set exceptions measure 0 tells A binds B moving B C achieve overall goal B occupied try The plan 33 action 35 34 We continue fashion accumulating exceptions 30 In addition 34 plan measure 0 set exceptions overall plan moveBC moveC moveA B result merging PI B C ft tells B C early plan getting C way en route moving A fail We conclude generally valid plan solving Sussman anomaly given removing plan 30 union plans moveC moveBC moveAB moveBC moveC moveAB I I The result equivalent plan moveC moveBC moveAB 34 usual solution original problem Here result dealing general situation Theorem 47 Suppose plan sequences Pi converging alwaysnd 0 Pin Qj For j Pi n Qj approximately conjunctive goal gl A g2 set P Construct f P Now j Pi 8 Pi Qj 8 Qjl measure equal L gl Ag2 n P Lgl n P Qi converging Lg2 In analysis Sussman anomaly actually terminated construction points sanctioned result example reflects lookahead consider plans subgoals somewhat earlier This early termination fact exception et B B C plan getting B C combined plan moveC moveAB 37 38 108 ML GinsbergArtificial Intelligence 76 1995 89123 A B C D Fig 3 Get A B C building fourblock tower getting A B led exception moveC moveAB moveBC 39 general plan moving B C combination 38 It turns set measure 0 el actually achieves B C moveAB moveBC 40 The reason initial action moving A B fail C way B wind C Now 39 instance 40 exception general plan getting B C The recognition exception A B succeed blocked getting B C binding A B B C overall plan subtle Roughly speaking need action moving moving B C plan order achieve In terms Theorem 47 40 subgoal isnt exception moveC moveAB moveBC 41 thats matters Once identified 41 exception Theorem 47 satisfied construct exception original plan overall plan 36 confidence let consider As final example conditions problem The Fig 3 recall goal A B B C towerconstruction repeated problem building fourblock sequence The planning tower getting B C begins PI B C exceptions given el moveB moveBC e2 C BC e3 moveBC moveB e4 movel moveC moveBC 42 43 ML GinsbergArtificial Intelligence 76 1995 89123 109 The final exception involves situations B moved fourblock 43 generated In practice tower involved exception C likely e moveC moveBC 44 putting B C violate We realize constraint C We temporarily work e instead e4 20 Sussman indicated anomaly possibility working fi 21 fourblock instead offs In similar way planning sequence getting A B begins Q A B exceptions f moveA moveA B fz B moveA B f3 moveA B moveA fi moveB moveAB When combine sequence previous Pl nQl moveAB moveBC exceptions include g1 moveAB moveBC gz moveBC moveA B sets measure 0 respect But g1 ug2 L moveA B B C 45 46 47 48 possible orderings A B unable C added eliminated From commonsense fact threeblock point view B C B tower A There ways analysis extended The exceptions 47 48 result intersections 42 46 sets analyzed work leading Since fi approximation natural f moveA moveA B f2 B moveAB f3 moveA B moveA 110 ML GinsbergArtcial Intelligence 76 1995 89123 f4 moveBC moveAB fs movel moveB moveAB 49 50 50 indicates way B block threeblock l B This 45 need worry finding exceptions 49 tower finding exceptions measure 0 prospective invalidate original plan We choose finding way B C creating finding way A B it4 The problem continues 42 line The final stack solution 49 threeblock moving B C Let suppose choose wrongly look instances B B C B actually ends C Here general solution B movel moveBC 51 Unfortunately A doesnt help original difficulty need bind moveA B moveAl 52 known exception fails A B So turn attention 49 begin moving C fact able A B So achieve onA B plan 1 moveC moveBC moveA B 53 work moving C potentially getting B C indicated Unfortunately threeblock 44 plan appropriate goal getting A B B C stack cause problem achieving 43 allowing conclude subgoal But finally replace 53 generally achieve original 44 The analysis different work conventional fact build fourblock planner There adding new precondition y table block table operator saying tower encoded order x y Now try B C naturally generate plan moving C table C table possible way achieve disjunctive solve problem plan precondition constructed identified bug simple plan putting B C A B This plan extended instead response blindly In approach 53 A plan problem overcome needed general attempt identified fourblock difficulty B C 46 later refined generated 49 4 As Sussman anomaly actually need bit careful details ML GinsbergArtificial Intelligence 76 1995 89123 111 difference treatments example Consider planner There conventional A B When modified work crucial achieving avoid replanning subgoal proceeds planning B C planning ensuing backtrack discard lost simple example complex problems difficulty plan getting B C plan getting A B Not goal getting A B After existing plan correct The approach described behaves fashion The successive refine ments plan getting A B beginning basic plan A B eventually culminating moveC moveBC moveAB plan 54 use fundamental approach proceed gradually continue discarded suggested merging computations subgoals basic plans moving B C A B debugging leads methods In fact work sense refining plan sets ways interactions tower built starting result This associated conventional focussed plan constructing corresponding In framework search process 5 Implementation considerations In order actually build planning plan sets including separate problems manipulation Second need place And finally need discuss like Theorem 47 simple effective practice issues order Witness based ideas described need addressed First need discuss operation plan intersection underlying construction produce plan sets results ideas result substantially details surrounding implementation footnote previous section We deal 5 I Plan intersection manipulating plan sets Plan intersection variety authors described possibility language actions obtained As result focus Section 2 restricted known plan merging discussed typical treatment Foulser et al 41 The construction related identical Foulser et al allow plans merged plan description assume In keeping conventional plan sequential interspersed new information interests draw distinction 112 ML GinsbergArtificial Intelligence 76 1995 89123 Nevertheless ideas introduced Foulser coauthors 4 implement somewhat general notion plan intersection The method continues treating sequences actions actions related Z notation atomic units merging larger structures units The details great theoretical interested reader referred code 5 One thing bear mention result intersecting plans plan set represented single plan witness construction 33 34 35 intersection 3 1 32 The implementation obviously needs cater possibility Manipulating general plan sets bit interesting This difficult problem simpler practice recognition plan sets consideration generally form DD2UD3D4UD 55 Di symmetric differences successive Pi general fairly simply represented The evaluation intended left right 55 fact DD2uD3D4uD5 The implementation constructed way representing particular plan set alternating sum 55 Taking union intersection alternating sums tedious terribly difficult Of course manipulations involved fundamentally dependent plan tersection operation described earlier Existing planners work global data structures gradually accumulating actions overall plan This makes plans somewhat brittle need discard great deal existing work portion plan changes A described plans subgoals separately frequently merge plans involved order understand possible subgoal interactions The upshot speed planner built ideas crucially dependent speed underlying mechanism plan merging Foulser et al point plan merging exponentially expensive They point exponential expense appears incurred practice plans merged consist small numbers linear segments This matches experience Finally specific plan segments tend appear times analysis overall computation speeded substantially caching results merging computation way 6 The code described section MVL obtained anonymous ftp tuoregonedu theorem proving 5911 6 More effective appears cache results plan instance computation ML GinsbergArtificial Intelligence 76 1995 89123 113 52 Constructing plan sets Given implementation manipulates plan sets obtain sets place There sources 1 Information initial situation corresponding plan encoded fashion Thus towerconstruction example know onC D generally achieved universal plan set definitely achieved plan 1 It follows onC D 2 Information actions occurring succeeding en coded similarly For action statement occurred true What says occurs end sequence theplan actions end 3 Finally operations transform plan sets new plan sets We seen form intersection corresponds frame axiom setting Definition 51 There exists frame operator F accepts input plan sets returns plan set The operator defined particular goal fluent g inserted database plans set P deleted database plans P Lg FP P Somewhat formally goal achieved plans F P P achieved plans outside set Note equality definition exact approximate As example expect F 10 I 56 What tells fluent true initial situation know reason false situations expect true times Here example F a0 I If action succeeds achieving goal actions delete goal use frame axiom conclude goal continues hold additional actions occur Here slightly interesting example Suppose goal added database plan deleted b What 3 b The result I bU b 57 actions b occur goal true occurs b This fits neatly implementation details discussed plan set 57 conveniently written alternating sum 114 ML GinsbergArticial Intelligence 76 1995 89123 It examples operator 3 unary 3 plan sets We defined pairs 3P Q 3P 3Q 57 plan sets P Q interact construction 3PQ The reason important indicate actions actually frame operator planning database typ domain explicit description set plans achieve given add g plans plans plan set use frame operator 3 actually construct add delete ically description goal g In order construct database entirety Working actions delete g allows compute Pg similarly fluents In examples encountered Q Q 3 P Q approximately ideas usefully incorporated axiom notion set plans serves provide small relative P P approximately equal equal 3 P Q This use frame systems loose confirmation utility measuretheoretic The function 3 variety analogs earlier work We frame axiom clear connection plans facts added deleted database returns called analog modal truth criterion 11 facts hold generally accepts remarked setting Chapman information information isomorphic set functions The collection plan sets lattice subset relation formally set plan sets naturally plans twopoint p E P Pp f The set 2 inherits lattice structure structure 2 51 A function modal operator 71 existing notion modality modal operator viewed modally set S linear set 2 t f For particular plan set P plan p Pp t lattice embed 2 bilattice referred relationship functions community 3 6 3 frame operator 151 philosophical setting I suggest maps bilattice elements hard extend new bilattice elements natural structure The point embedding setting We use declarative mechanisms bilattice framework purpose planner instead All need provide declarative description action allows treat 3 semantic object exist bilattice plan sets question need construct special theorem prover 19111 resort general multivalued manipulate The axiom declarative description needs frame statement g achieved true plans sets terminate action adds g g capture STRIPSlike axiom Definition 51 To consider This sentence removed formalize true plan sets terminate To triggersg g deleted Using mean actions deleting g reify g add predicate triggers g added triggerslg wiii mean frame modality 3 write ML GinsbergArtificial Intelligence 76 1995 89123 115 Ftriggersgtriggerslg 3 holdsg This allows use information sets g holds F plan sets achieve g plan The rest axiomatization defines extent triggers addsap Asucceeds triggersp deletes ap A succeedsa triggers lp occursu A precs 1 A precsok I 3 succeedsu holdsp A precsokl precsok PI precsok I 58 59 60 61 62 remaining 58 59 succeed Axioms database succeedthey preconditions 62 lists preconditions occur preconditions tell successful actions add delete facts appropriate actions satisfied A list rest ground case 61 satisfied The bracketed expressions confused plans list preconditions axioms satisfied situations Finally need identify situations assigned init occursu set instead init somewhat initial situation writing plan set succeeds init sets initial initial situation preconditions actions occur sentence plan We assigned information situation dummy action occurs compact We add specific example addsinit onC 0 C D initial situation planning purposes action There advantages exploiting approach allows use declarative description bilattice machinery noise procedural We add actions effect boiling water comes balloon causing values fluents declarative needed declarative hierarchical framework language planners continues mind effects duration instead require variable time computed based overall machinery ideas typically associated 121 introduce defaults 313 All work remains use framework like popping setting provide need planning As discussed 81 ramifications capturing 53 Status The current implementation goodbut perfectmatch constructs The examples Section 4 specific control assumptions discussed Plans plan sets implemented theoretical described nature 116 ML GinsbergArtiJcial Intelligence 76 1995 89123 search control decisions supported implementation In bilattice setting appear restrictions planning general control heuristics attempting implement general control notions opposed specializations Rather invoke Theorem 47 directly planner works determining point particular line reasoning significant impact overall answer In words decides answer change set measure 0 relative current value This keeping analysis Section 4 curtailed portion analysis soon tell answer didnt matter Theorem 47 guarantees point things clearly irrelevant implementation able terminate reasoning conditions theorem satisfied Most time planner spent reasoning sort deciding particular line reasoning impact plan generated 6 Conclusion My overall aim paper single idea planners manipulate specialized plans guaranteed achieve goals general plans expected We presented formalization idea expecting plan achieve goal terms plan failing set measure 0 set possible executions Building planner idea introduces additional possibilities existing planners lack important possible combine approximate plans subgoals obtain approximate plan conjunction The main technical result paper Theorem 47 confirms observation An examination towerconstruction problem indicates planner advantages conventional debug plans constructed independence assumptions opposed catering possible plan interactions outset Finally discussed briefly implementation ideas exploits fact plan sets viewed elements bilattice As mentioned introduction existing planners OPlan appear informal use ideas discussed know planner explicitly conforms notions presented A preliminary implementation planner built bilatticebased theorem prover MVL 113 implementation issues remain addressed Dealing topic ongoing research Acknowledgement I like thank David Etherington Nir Friedman Will Harvey Jim Hendler David McAllester Drew McDermott Steve Minton Dan Weld David Wilkins ML GinsbergArtificial Intelligence 76 1995 89123 117 anonymous reviewers members PRINCPIA GIRL research groups useful discussions ideas Appendix A Proofs Lemma24 rfA 1 Ifabandac 2 Zfacandbc isaplan thenbc thenab thenforanyabcEA Proof If b c b c b c Since c b c b b c The second claim similar 0 Lemma25 Let A 1 Ifcbandca 2 IfbGcandaZc ThenforanyabcEA beaplan theneithercTborab theneitherbTcorba Proof Suppose c b c T c T b We prove 6 b induction length chain c CO c If n 0 c c b 6 b For inductive case suppose lemma holds chains length n 1 Then example c cl c b cl b Since cl T apply inductive hypothesis conclude 6 b 0 Lemma26 Z c Let A beaplan ThenforanyabcEA ifabandacb Proof Suppose a0 6 For ai chain ai c conclude ai c Thus aj c j eventually conclude b c b c It follows c actually appears chain c 0 Proposition 29 The instance relation Definition 28 partial order Proof That relation reflexive transitive clear antisymmetric 1 binding list associated showing p1 instance p2 72 binding list showing p2 instance 1 action 1 alvla2 actions differ names variables 0 Lemma 211 If P A linear plan total order 118 ML GinsbergArtficial Intelligence 76 1995 89123 Proof Suppose 6 bi c b c b c unordered Then bo 6 b CO c c b c sequences differ single point bi1 bi_1 bi bi_1 ci bi f ci conflict If sequences c b suppose Now point Lemma 24 Cl contained Proposition 212 9 C P2 set linearizations PI subset set linearizations P2 Proof One direction C transitive easy PI C P2 instance PI instance P2 list u injection embeds P2 L If modify For direction P2 AZ 2 2 Specifically suppose linearization consider total order actions unique Skolem constants Since variables linearization extended binding binding change list CT injection preserves If b P2 Skolem constants variables represent A2 4 AI injects actions PI Al I rl linear plan L 61 Al ground P2 linearization Al binding A2 Al It remains extra action b linear plan L construct linearization PI P2 follows preserved corresponding relation holding PI add plan suppose To preserved b P2 PI Now follows PI b F c c _ c b We satisfy Definition 22 add PI b c points P2 Thus b 4 b PI preserved lemmas Thus b unordered continue suppose resulting plan P It clear P linearizations lacks b PI f b P2 But P instance 4 contradiction proof complete points related PI respect 0 Proposition 34 Let P plan P instance P associated injection A A Then action A iA variable P measure 0 P identical Proof Let P plan A iA replaced new variable Now clear P instance P P measure 0 P new variable Thus P measure 0 P P nonvariable binds action 0 ML CinsbergArcial Intelligence 76 1995 89123 119 Lemma 36 Q measure 0 P following conditions holds 1 Q 2 Q subset set measure 0 P 3 Q measure 0 subset P 4 Q measure 0 superset S P P measure 1 S Proof 1 The set finite union sets measure 0 P 2 Take R given set measure 0 P S P 3 Take R Q S given subset P Now S P 0 4 Take R Q S given P measure 1 S S P measure 0 S Cl Lemma 37 Q measure 0 P Q measure 0 P U Q Proof Since P C P U Q clear measure 0 P For converse Q measure 0 S S P measure 0 S Thus Q measure 0 P Q measure 0 union R Q S P U Q definition 0 Proposition 38 Approximate equality equivalence relation Proof That approximate transitive To suppose approximately measure 1 X similar reflexive symmetric clear need equal Y Y Z We X measure 1 Z Z X approximately equality equal We need Z X measure 0 Z know zXCZYUYX A1 The term measure 0 Z Y measure 1 Z The second term measure 0 Y Z measure 1 Y follows term measure 0 Z Thus union measure 0 Z X 0 measure 1 Z second Al Proposition 39 Let P 8 plan set Then provided language includes infinitely object action constants plan set measure 0 measure 1 P Proof The proof result Proposition 33 lo essentially unchanged analogous If subset Q plan set P measure 0 measure 1 P repeatedly apply secondary clauses Definition 33 construct finite collection plan sets Qi plan set S Ui Qi Qi SI nontrivial Ui 120 ML GinsbergArtificial Intelligence 76 1995 89123 loss generality We suppose general case harder For Sj arbitrary Skolem constant linearization Qi SICi pi binds Sj follows Sj Since union finitely Qi single variable let Sj Sj Since Sj instance Qi contain infinite number Skolem constants available S S bound language S contains 0 Lemma 311 Suppose sequence Pi plan sets Pi1 measure 0 Pi Then Pi converge set linear plan appears loss generality assumptions Pi constructed Proof Let P arbitrary consider subsequence measure 0 union Pi U Pi assume minimal set Pi1 measure 0 Pi Given infinitely Pi Pis elements contain P We assume Pi contains Ptl Pi1 measure 0 Pi Pt subexpression variable x introducing plan Since contain n subexpressions element contains P n This conflict assumption P appears Pi1 replacing replacing movex blockon replace object constant variable length chain eventual plan P contains n object action constants infinitely Pi proof complete example new variable follows maximum 0 Lemma 312 Suppose S measure 1 T measure 0 U Then T measure 0 U Proof We instead T measure 0 T U U equivalent We know T S measure 0 T measure 0 T U U S measure 0 TUUsoTcTSUSisofmeasureOinTUUaswell 0 Proposition 313 Suppose set D measure 1 A 8 B measure 0 A Then A B approximately equal Proof SupposethatABFandBAEsothatA8BEUFNowifDisof measure 1 E U F measure 0 A know E U F measure 0 A Thus F measure 0 A B measure 1 A But E U F measure 0 A measure 0 A U E U F B U F Thus F measure 0 B U F F measure 0 B In words B measure 1 B U F Since E measure 0 B U F follows E measure 0 B A measure 1 B Thus A B approximately equal 0 Theorem 43 Given planning P goal g planning sequence generated P g converges Lg ML GinsbergArtificial Intelligence 76 1995 89123 121 Proof We begin showing sequence converges argue verges Lg To converges suffices symmetric differences successive elements planning sequence converge set But step construction example Qg P R1 g Now know L Tg fl Pi1 g measure 1 Dii Pit g Pizg U Di_1 GUI conclude But know L lg nPi_2g measure 0 24_2 i2nd step supposed remove plans failed achieve g Similarly L g fl Di 11 measure 0 Di_ 1 1 st step supposed add plans achieve g It follows Llg nPi2g U L3 nQ11 measure 0 Di1 U Vi27 Lemma 312 Di measure 0 Vi1 U Di2 This result holds odd virtue similar argument NOW suppose construct new sequence Si Si D2i U Dzit We apply Lemma 311 conclude converge 8 follows Di Thus planning sequence converges The argument converges Lg similar step construction remove set measure 1 remaining error Thus sequence symmetric differences Pig Lg converges 0 proof complete q Proposition 45 There exist plans Pi 4 Ql Q2 Qi measure 0 Pi Ql n Q2 measure 1 PI rl P2 Proof An example follows statement proposition main text q Theorem 47 Suppose conjunctive goal gl A g2 set P Construct plan sequences Pi converging Lgl n P Qt converging Lg2 fl P Now alwaysnd j Pi 8 Pi Qj 8 Qjl measure 0 Pi nQj For j Pi nQj approximately equal Lgl Ag2 n P Proof The proof rests following proposition Proposition Al Let f PI P function plan sets distributes respect settheoretic union f PI P Pi Now suppose sequence 122 ML GinsbergArtificial Intelligence 76 1995 89123 converges Pi Au Ptj 8 Pijl Atj measure 1 I 8 PiPtj Thenprovided 1 There u collection indices fi Aiji measure 0 f Ptji fPP 2 For set indices f Pi f Piji approximately equal Proof We prove result n 1 general case harder Suppose fP function plan sets distributes respect settheoretic union fP G P Suppose sequence Pi converges P Aj Pj 0 Pjl Aj measure 1 8 P 8 Pi Then provided fP 1 There index j Aj measure 0 f Pi 2 For index fP f Pj approximately equal TO fix P Pi A U B SO P U A Pi U B Now fP ufAfP JfB f distributes respect U It follows fP efPi C fA U fB C AUBPBPi Since fP At measure 1 fP 8 f Pi 8 Ats converging 0 follows fixed j Aj measure 0 fP But apply Proposition 313 conclude fP f Pj approximately equal Since fP f Pj approximately equal Aj measure 0 f Pj proposition proved The second proposition proved Aj measure 0 f Pj know measure 1 fP 8 f Pi f Pi fP approximately equal 0 To prove original theorem simply f 13 conditions As guaranteed approximate validity fashion planning sequences subgoals constructed Cl References I D Chapman Planning conjunctive goals Art Intel 32 1987 333377 2 K Currie A Tate OPlan open planning architecture Artif Intell 52 1991 4986 31 JJ Finger Exploiting constraints design synthesis PhD Thesis Stanford University Stanford CA 1987 41 DE Foulser M Li Q Yang Theory algorithms plan merging Arrif Inrell 57 1992 143181 51 ML Ginsberg Multivalued Infell 4 1988 265316 logics uniform approach reasoning artificial intelligence Comput ML GinsbergArtificial Intelligence 76 1995 89123 123 6 ML Ginsberg Formalizing action Tech Report Stanford University Stanford CA 1989 7 ML Ginsberg Bilattices modal operators J Logic Comput 1 1990 4169 8 ML Ginsberg Computational considerations reasoning action Proceedings Second International Conference Principles Knowledge Representation Reasoning Boston MA 1991 91 ML Ginsberg The MVL theorem proving SIGART Bull 2 3 1991 5760 lo ML Ginsberg Negative subgoals free variables J Logic Programming 11 1991 271293 1 l ML Ginsberg Users guide MVL Tech Report University Oregon Eugene OR 1993 121 ML Ginsberg HW Holbrook What defaults hierarchies Proceedings 1992 Nonmonotonic Reasoning Workshop Plymouth VT 1992 131 ML Ginsberg DE Smith Reasoning action I possible worlds approach Artif Intell 35 1988 165195 141 KJ Hammond Explaining repairing plans fail Arti Intell 45 1990 173228 151 SA Kripke Semantical considerations modal logic L Linsky ed Reference Modality Oxford University Press London 1971 6372 161 D McAllester D Rosenblitt Systematic nonlinear planning Proceedings AAAI91 Anaheim CA 1991 171 S Minton JG Carbonell CA Knoblock DR Kuokka 0 Etzioni Y Gil Explanationbased learning problem solving perspective ArtijI Intell 40 1989 63l 18 181 JS Penberthy DS Weld UCPOP sound complete partial order planner ADL Proceedings Third International Conference Principles Knowledge Representation Reasoning Boston MA 1992 103113 191 GJ Sussman A Computational Model Skill Acquisition American Elsevier New York 1975 201 A Tate Project planning hierarchic nonlinear planner Tech Report 25 Department Artificial Intelligence University Edinburgh 1976 21 DE Wilkins Practical Planning Extending Classical AI Planning Paradigm Morgan Kaufmann San Mateo CA 1988