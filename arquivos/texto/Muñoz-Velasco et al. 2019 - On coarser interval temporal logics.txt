Artiﬁcial Intelligence 266 2019 126 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint On coarser interval temporal logics Emilio MuñozVelasco Mercedes Pelegrín b Pietro Sala c Guido Sciavicco d Ionel Eduard Stan e Department Applied Mathematics University Malaga Spain b Department Statistics Operational Research University Murcia Spain c Department Computer Science University Verona Italy d Department Mathematics Computer Science University Ferrara Italy e Department Mathematics Computer Science Physics University Udine Italy r t c l e n f o b s t r c t Article history Received 16 April 2017 Received revised form 7 September 2018 Accepted 20 September 2018 Available online 17 October 2018 Keywords Modal temporal logic UnDecidability Complexity The primary characteristic interval temporal logic intervals points taken primitive ontological entities Given generally bad computational behavior interval temporal logics techniques exist produce decidable computationally affordable temporal logics based intervals In paper inspiration Golumbic Shamirs coarser interval algebras generalize classical Allens Interval Algebra order deﬁne previously unknown variants Halpern Shohams logic HS based coarser relations We prove surprisingly satisﬁability problem coarsest variants HS3 decidable PSpacecomplete ﬁnitediscrete case PSpacehard case proving complexity bounds implement tableaubased satisﬁability checker test systematically generated benchmark Our results strengthened showing coarserthanAllens relations guarantee decidability prove second variant HS7 remains undecidable interesting cases 2018 Elsevier BV All rights reserved 1 Introduction Interval Temporal Logics ITLs consider time intervals primitive ontological entities This represents advantage dealing relevant application domains planning synthesis controllers characterized advanced features neglected dealt unsatisfactory way pointbased formalisms ITLs applied ﬁelds hardware realtime veriﬁcation language processing constraint satisfaction planning 3822140 Moreover fact temporal logics considered natural basis temporal exten sions Description Logics 6 attempts design intervalbased extensions formalisms 41 1054 ITLs considered temporal counterpart TSQL temporal extension language SQL databases included standard SQL2011 45 Halpern Shohams Modal Logic Allens Relations HS prominent ITL 28 Its elegance expressive power attracted attention temporal modal logic communities promising applications hampered fact discovered Corresponding author guidosciaviccounifeit G Sciavicco stanioneleduardspesuniudit IE Stan Email addresses ejmunozumaes E MuñozVelasco mariamercedespelegrinumes M Pelegrín pietrosalaunivrit P Sala httpsdoiorg101016jartint201809001 00043702 2018 Elsevier BV All rights reserved 2 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 logic ﬁrst introduced HS highly undecidable Various strategies considered literature deﬁne fragments variants HS better computational behavior These include constraining underlying tempo ral structure 37 restricting set modal operators 141 softening semantics reﬂexive 3033 restricting nesting modal operators 17 restricting propositional power languages 19 Allens Interval Algebra IA 2 backbone HS modal operators HS repertoire correspond Allens interval relations Our proposal based Golumbic Shamirs 26 idea consider interval relations precise relationship intervals They reduce set binary relations Allens Interval Algebra IA 2 deﬁning coarser relations corresponding logical disjunction Allens relations approach generates natural coarser algebras IA7 IA3 The involves seven relations preserving original relations equal joining meets overlaps single relation similarly inverses joining starts ﬁnishes single relation similarly inverse ones On hand takes consideration relations original plus relation intersects viewed disjunction remaining ones inverse includes equality The coarser algebras IA7 IA3 inspire logics HS7 HS3 proposed paper These languages follow similar ideas standard SQL2011 29 interval relations necessarily Allens ones example later interpreted disjunction Allens meets later applied classical areas artiﬁcial intelligence temporal databases We prove satisﬁability problem HS3 PSpacecomplete ﬁnitediscrete case PSpacehard interpreted interesting class linearly ordered sets coarser relations guarantee decidability interval temporal logic HS7 remains undecidable interesting class linearly ordered sets A partial picture computational behavior satisﬁability problem HS3 cases drawn recent results concerning fragments HS 3415 As matter fact prove HS3 polynomially embedded ABBA fragment HS relations immediately expressed terms meets met relation intersect obtained means combination modalities ABBA ABBA decidable primitive recursive ﬁnite case 34 case rational numbers 15 HS3 Here prove satisﬁability problem fact PSpacecomplete stronger result ﬁnitediscrete case PSpacehard classes Similarly know modality HS7 machinery corresponds disjunction starts ﬁnishes implies undecidability satisﬁability problem temporal logic contains ﬁnitediscrete case 30 strengthen results HS7 proof applies cases covered 30 It worth mentioning HS3 unique case universe decidable interval temporal logics example interval temporal logics PSpace satisﬁability problem fragment DDBBEE HS case rational numbers 35 fragment D reﬂexive variant 33 On hand maximal decidable fragments HS ﬁnitediscrete case fragments ABBL AEEL fragment ABBA contains decidable ﬁnite rational frames leftright symmetric limiting applicability hampered fact satisﬁability problem ExpSpacecomplete The paper organized follows We ﬁrst necessary preliminaries Section 3 working examples highlight expressive power HS3 Section 4 devoted complexity satisﬁability problem HS3 In Section 5 discuss satisﬁability problem HS7 prove generally undecidable ﬁnally Section 6 implementation satisﬁability checker HS3 results series systematic tests concluding Section 7 2 Preliminaries In section necessary preliminaries rest work 21 Syntax Let D cid3D cid4 strict linear order A strict interval respectively nonstrict interval D ordered pair x y x y D x y respectively x y In recent literature strict semantics strict intervals considered usually adopted This conforms deﬁnition interval adopted Allen 2 differs given Halpern Shoham 28 If exclude identity relation 12 different relations intervals linear order called Allens relations 2 relations R A adjacent R L later R B begins R E ends R X 1 X A L B E D O R D R O overlaps depicted Fig 1 inverses R X We interpret interval structures Kripke structures Allens relations playing role accessibility relations Thus associate universal modality X existential modality cid3 Xcid4 Allens relation R X For X A L B E D O inverse modalities X cid3 Xcid4 modalities X cid3 Xcid4 corresponding inverse relation R X R X Halpern Shohams logic HS 28 multimodal logic formulæ built ﬁnite nonempty set AP atomic propositions referred proposition letters classical propositional connectives modal operator Allens relation follows ϕ p ψ ψ ξ ψ ξ cid3Xcid4ψ cid3 Xcid4ψ E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 3 Fig 1 Allens interval relations HS modalities HS3HS7 modalities In grammar p AP X A L B E D O propositional connectives constants cid11 dual modalities Aϕ cid3 Acid4ϕ derived standard way In general given subset S X X X A L B E D O deﬁne relation R S cid2 XS R X cid2 XS R X The corresponding modal operator denoted simply juxtaposing original symbols obtain string ex ample modal operator disjunction Allens relations overlaps denoted cid3O Dcid4 In cases relation intersect introduce shorthand sake readability I A A B B E E O O D D Wellformed HS3 formulæ obtained grammar X L I HS7 formulæ deﬁned restriction X L A O D B E1 22 Semantics The semantics HS HS3 HS7 given terms interval models M cid3ID V cid4 D linear order ID assigns atomic ID set strict intervals D V valuation function V AP cid15 2 proposition p AP set intervals V p p holds The truth formula ϕ given interval x y interval model M deﬁned structural induction formulæ follows M x y cid2 p x y V p p AP M x y cid2 ψ M x y cid16cid2 ψ M x y cid2 ψ ξ M x y cid2 ψ M x y cid2 ξ M x y cid2 ψ ξ M x y cid2 ψ M x y cid2 ξ M x y cid2 cid3 Xcid4ψ z t x yR X z t M z t cid2 ψ z t M z t cid2 ψ M x y cid2 cid3 Xcid4ψ z t x yR X Fig 1 describes semantics HS7 HS3 operators terms HS operators Notice distinguishing characteristic ofs HS inherited fragments considered paper fact truth propositional letter given interval inﬂuence truth propositional letter intervals contained points Alternative choices include locality principle implies assigning truth value propositional letter interval starting points 38 introduction locality ITLs recent work 32 example renewed constraining principles This similar modeltheoretic constraints shown useful applications help reduce complexity problems satisﬁability modelchecking follow general approach undecidability rule decidability 1 This notation confused standard notation fragments HS indicated set modal operators ABBA includes modal relations cid3 Acid4 cid3 Acid4 cid3Bcid4 cid3Bcid4 4 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 Table 1 Bike sharing database Trips trip_id starttime stoptime bikeid from_st_id to_st_id 4118 4275 4291 4316 4342 4480 20130627 1211 20130627 1444 20130627 1458 20130627 1506 20130627 1513 20130627 1940 20130627 1216 20130627 1445 20130627 1505 20130627 1509 20130627 1527 20130627 2228 Maintenance 316 64 433 123 852 27 85 32 32 19 19 340 28 32 19 19 55 46 repair_id starttime stoptime bikeid from_st_id to_st_id 5327 5335 5346 5353 20130628 0905 20130628 0914 20130628 0926 20130628 0935 20130628 1015 20130628 1041 20130628 1425 20130628 0950 594 227 118 226 27 26 74 24 1 1 1 1 exception It worth observing HS3 HS7 expressive simulate universal operator depends essentially modalities jointly exhaustive HS3 Gϕ ϕ HS7 Gϕ ϕ cid3 Xϕ Xϕ XLI cid3 XL A O D B E Xϕ Xϕ Formulæ HS HS3 HS7 interpreted different classes interval models Their frame properties inﬂuence computational complexity satisﬁability problem witnessed recent series results 141 Notable classes linear orders include Lin class linear orders class Fin ﬁnite linear orders classes built N Z Q R As far class dense linear orders concerned simple application downward LöwenheimSkolems Theorem Cantors Theorem proves decidability fragment HS Q implies decidability fragment generic dense linear order We generically use expression ﬁnitediscrete case cases include Fin N Z class Dis discrete linear orders Beside notable exceptions fragment ABBA HS fragments HS tend behave similar way ﬁnitediscrete cases 3 Coarser interval relations work In section discuss working examples temporal reasoning coarser interval temporal logics 31 An example speciﬁcation language This example inspired Divvy City Chicagos bike sharing The consists ﬂeet bikes locked network docking stations located city Bikes rented returned station city creating network trips possible combinations starting ending points Anonymous trip data stored temporal database openly available Divvy Data Challenge program The database consists tables Table 1 Trips stores data user rentals Maintenance stores data repairs maintenance activities bikes We assume repairs maintenance place special station identiﬁer 1 Since naturally temporal information tables equipped attributes starttime stoptime tuple interval identiﬁed endpoints interpreted valid time tuple 22 Interval temporal logics reason database different ways query languages extract information current instance data speciﬁcation languages express functional dependencies integrity constraints requirements met instance data example follow approach use HS3 speciﬁcation language Once requirements deﬁned formalized domain experts ﬁrst problems solve consistency problem problem checking met actual instance database In general formalization consistency problem solved checking set formulæ representing requirements satisﬁable Formulæ expressing requirements built following propositional letters trip j k represent bike performed trip station j station k repair j k represent bike collected station j brought station k repaired Although HS3 nearly expressive HS natural requirements cid3 cid3 cid3 cid3 cid3 cid3 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 5 written language To start enforce Trip table time instant given bike belong trip More formally bike identiﬁer pairs intervals satisfying trip j k trip l m share point particular trip start time previous trip ended cid4 jk trip j k repair syntactic sugar cid3 cid3 Gtrip j k trip l m jk jkcid16lm Similarly ensure repairs bike overlap Grepair j k repair l m jk jkcid16lm cid4 Here necessary use trip syntactic sugar jk repair j k cid3 Grepair cid3Icid4repair During maintenance bike trip viceversa Grepair trip cid3Icid4trip cid3 Gtrip repair cid3Icid4repair Grepair 1 j repair j k j kcid161 cid3 Finally guarantee maintenance performed regularly Gcid3Lcid4repair Then guarantee repair ﬁnishes station 1 starts station different 1 The formalization arguably simple intuitive While similar maybe immediate formalization carried pointbased temporal logic LTL easy extend model include pure intervalbased properties Indeed uncommon systems paired meteorological information statistical knowledge extraction purposes Moreover meteorological information enriched data concerning pollution levels particular antipollution measures taken city councils Now suppose order promote use bike sharing systems private cars decided rates trips occur intervals time antipollution measures active discounted In order service appealing decided discounts apply trips overlap way interval time antipollution measures active Assuming anti_pollution labels intervals measure active discount shortcut jk discount j k labels trips eligible discount state cid4 Gtrip cid3Icid4anti_pollution discount 32 An example natural language processing Natural language processing wellestablished branch Artiﬁcial Intelligence wellknown structure natural language partly described interval temporal logic constructs 403 Recently rise automatic personal assistants chatbots given new meaning natural language processing tools task studied developed One major challenges automatic processing text context retrieval 8 consequence context description A context seen interval conversation particular topic discussed Because nature context forced uninterrupted sequence instants particular topic discussed intervals labeled propositional letters represent contexts projection principles locality homogeneity Section 2 Moreover conversation contexts overlap generally Allens relation In example certain company designing natural language processing tool analyze conversations agents clients The agents contact clients aim selling certain product company speciﬁc 6 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 requirements concerning ordering structure conversation described requirements contexts arise conversation They impose essential contexts price product denoted price known advantages advantages products possible minor defects defects arise conversation cid3Lcid4price cid3Lcid4advantages cid3Lcid4defects The company wants disadvantages product discussed price order concepts separated conversation Gprice cid3Icid4defects In order stress positive message company requires advantages mentioned separately mentioning defects product Gdefects cid3Lcid4advantages cid3Lcid4advantages Finally company wants price mentioned recalling advantages product Gprice cid3Icid4advantages 4 HS3 PSPACEcomplete In section ﬁrst prove satisﬁability problem HS3 PSpacehard regardless class linearly ordered sets interpreted PSpace interpreted class ﬁnite linear orders NZ As usual constructions underlying ideas ﬁnite case emblematic entire range classes discrete structures ﬁnite case small model theorem PSpace nondeterministic algorithm possible deterministic implementation form tableau case N simply outline small periodic model theorem The cases Z class discrete linear orders Dis considered simple albeit technically trivial generalizations case N 41 Compass structure interpretation Given linear order D alternatively think HS model compass structure G D L strict intervals x y seen points x y halfplane D D identiﬁed constraint x y L extended labeling L D D 2Clϕ Clϕ set subformulæ given formula ϕ Lx y denotes subset Clϕ precisely formulæ true interval x y including propositional letters Modal operators immediately interpreted geometric way modality cid3Bcid4 cid3Bcid4 correspond moving vertical line plane cid3Ecid4 cid3Ecid4 correspond moving horizontal line Such interpretation works nicely fragments HS3 HS7 introduced 44 3631 advanced tool undecidability proofs 42 Hardness A Quantiﬁed Boolean QB formula expression form θ Q 1 p1 Q n pn f formula propositional logic 1 n Q When variable formula f f quantiﬁed f said closed formula truth problem closed QB formula known PSpacehard 42 In following provide LogSpace reduction truth problem closed QB formulæ satisﬁability problem HS3 Let P respectively P set indexes universally respectively existentially quantiﬁed variables θ The strategy reduction follows We want encode treelike structure linear ordering underlies model committing particular property ordering Such tree represents QB formula θ natural way level 1 pi1 occurs ith quantiﬁer existential occurs positive negative twice ith quantiﬁer universal occurs positively negatively So example f encoded binary tree root children p1 p1 For tree height n corresponds encoding quantiﬁed formula n propositions use n 1 propositional letters h1 hn1 encode levels binary tree The idea construction exempliﬁed Fig 2 colors consistent intervals letter hi true propositional formula p1 occurs quantiﬁed formula p1 f E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 7 Fig 2 A treemodel θ p1p2p3p4p1 p2 p1 p2 p3 p4 p3 p4 righthand embedding compass structure lefthand Let ϕstart following formula cid3 ϕstart h1 Ghi cid5 h j 1in1 cid3 Ghi cid5 jn1 cid3Icid4h j 1 2 1in1 jn1 It easy M x y cid2 ϕstart M x y cid2 h1 ii interval z t satisﬁes hi satisfy cid19 intersects z t satisﬁes h j j cid16 iii interval z t interval z h j j cid16 cid19 t By interpreting h intervals nodes tree know thanks ϕstart root tree h1 exists The idea encode f quantiﬁerbyquantiﬁer level need care speciﬁc quantiﬁer The interval labeled h1 carry propositional letter f truth values p1 pn encoded hi intervals cid19 descendant given hi interval z t conditions 2 n 1 In following z cid19 z apply t z h j interval s cid19 s j left descendant Now let ϕquant following formula cid19 j right descendant ii s z cid19 s h j interval s s cid19 t cid19 t cid19 t cid3 cid3 ϕquant G hi cid3Icid4 G G iP cid3 iP cid3 iP 1 ji cid3 hi cid3Icid4 1 ji cid3 hi cid3Icid4 1 ji Lemma 1 Let M x y cid2 ϕstart ϕquant Ih j cid3Icid4hi1 pi Ih j cid3Icid4hi1 pi Ih j cid3Icid4hi1 3 4 5 cid19 t cid19 z cid19cid19 t cid19cid19 If M z t cid2 hi ith quantiﬁer f cid19 cid2 hi1 pi M z M z cid19cid19 cid2 hi1 pi cid19cid19 t cid19 t universal exist distinct descendants z ii If M z t cid2 hi ith quantiﬁer f existential exists descendant z cid19 t cid19 M z cid19 t cid19 cid2 hi1 pi M z cid19 t cid19 cid2 hi1 pi cid19cid19 t cid19 t cid19cid19 t cid19 respect h j interval First notice z Proof Suppose M x y cid2 ϕstart ϕquant M z t cid2 hi ith quantiﬁer f universal Then 3 cid19 cid2 hi1 pi At time 4 applies applies z t z cid19cid19 Consider relative cid19 t cid19 M z z cid19 coincide intersect z t cid19 t position z cid19 s cid19 t t thanks ϕstart Therefore z cid19 trivially correct s z h j interval j 1 interval position z cid19 s regarded s s immediate h j predecessor z t intuitive notion imprecise dense models By ϕstart know cid19 cid19 t z cid19 z hi1interval Then 3 4 satisﬁed situation interval s u u cid19 s contradiction intersects z t z cid19 z let assume loss generality Let s cid19 M z cid19cid19 cid2 hi1 pi clearly z cid19 t cid19 candidate satisfy 3 4 intersects s cid19 s Towards contradiction suppose t s cid19cid19 h j interval words s cid19 coincide intersect s cid19cid19 z interval type s interval u u cid19 cid16 z cid19cid19cid19 s cid19cid19 t cid19 t cid19 t cid19 t cid19 8 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 Therefore case s z argument applied z cid2 cid19cid19 t cid19 descendant z t Since cid19 t cid19cid19 follows As ii simply replicates argument 5 cid19 z z cid19 t Finally need sure decision truth value given pi taken respected This means truth value pi given node tree copied node subtree Since tree encoded linear ordering way distinguish right subtree node left guaranteed encoding far point lemma satisﬁed intervals respect current node consequence remaining construction ϕcasc following formula cid3 cid3 ϕcasc G hi pi1 I Ih j Ipi1 G 2in cid3 2in 1 ji1 cid3 hi pi1 I Ih j Ipi1 1 ji1 Lemma 2 Let M x y cid2 ϕstart ϕquant ϕcasc let M z t cid2 hi 2 n 1 If M z t cid2 pi1 descendant z t labeled pi1 ii If M z t cid2 pi1 descendant z t labeled pi1 6 7 Proof If M x y cid2 ϕstart ϕquant ϕcasc M z t cid2 hi M z t cid2 pi 6 applies It immediate consequent captures precisely maximal intervals2 left right htype interval intersect descendant z t z t Since intervals precisely pi forced hold proved The argument ii identical cid2 Observe Lemma 1 Lemma 2 combined force hi interval correspond universal quantiﬁer left right descendants pi pi wanted Let set ϕθ Ghn1 f ϕstart ϕquant ϕcasc Lemma 3 Let θ Q 1 p1 Q n pn f closed quantiﬁed Boolean formula Then θ true ϕθ satisﬁable Proof Suppose ﬁrst θ true want prove ϕθ satisﬁable ﬁnite model Let proceed duction number variables θ making sure step construction remains ﬁnite As base case suppose θ proposition θ Q 1 p1 f f propositional formula p1 oc curs If Q 1 universal f satisﬁed matter value p1 easily build model M domain D 0 1 2 3 4 5 V p1 V h2 0 1 4 5 V h1 2 3 immediate M 2 3 cid2 ϕQ 1 p1 f The case Q 1 existential treated similar way As far inductive step satisﬁable By inductive hypothesis know quantiﬁed formula cerned assume Q 1 p1 Q 2 p2 Q n pn f n 1 propositional variables corresponding HS3 formula satisﬁable Let assume Q 1 universal This means formulæ Q 2 p2 Q n pn f p10 Q 2 p2 Q n pn f p11 satisﬁable n 1 propositional variables inductive hypothesis applies Let M1 M2 respective models ﬁnite domains D1 D2 Notice assuming M1 M2 models letters h2 hn1 p2 pn Now cid19 2 model obtained M1 respectively M2 simply making p1 true respectively false let M model We build model M based domain D1 0 1 D2 assume 0 1 new fresh points 0 greater point D1 respectively 1 smaller point D2 cid19 The valuation M built follows V h1 0 1 ii V p V 1 cid19 cid19 propositional variable iii V p V 2 propositional variable iv 2p interval belongs M x y cid16 0 1 x D1 0 1 y D2 0 1 x y V hi 1 n It checked M 0 1 cid2 ϕQ 1 p1 Q 2 p2Q n pn f wanted The case Q 1 existential treated similar way cid19 1p interval belongs M cid19 1 respectively M Let focus converse direction let assume ϕθ satisﬁable want prove θ true Let proceed induction number propositional variables θ As base case let θ Q 1 p1 f let M linear model M x y cid2 ϕQ 1 p1 f assume Q 1 universal By ϕstart Lemma 1 Lemma 2 know cid19cid19 x cid19cid19 y cid19cid19 y M x y cid2 h1 exist descendants x cid19 cid2 cid19 y cid19 cid2 h2 p1 f M x following cases hold M x cid19 y y cid19cid19 cid2 h2 p1 f M x cid19 x x cid19cid19 y cid19 x cid19 y cid19cid19 y x cid19 y 2 Over dense linear orders intervals belong model argument holds E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 9 cid19cid19 y cid19cid19 cid2 h2 p1 f Either way f satisﬁed matter value p1 Q 1 p1 f h2 p1 f M x true The case Q 1 existential treated similar way As far inductive case concerned assume θ Q 1 p1 Q 2 p2 Q n pn f Q 1 universal Since ϕθ satisﬁable hypothesis linear model M interval x y M x y cid2 ϕθ Let D linear ordering M based By ϕstart M x y cid2 h1 cid19 left descendant x y Let D1 D set points interval x cid19cid19 right descendant x y cid19cid19 y let D2 D set points interval x cid19 y cid19cid19 cid2 p1 cid19cid19 y By combining Lemmas 1 2 know D1 D2 M x cid19 ID1 cid19cid19 cid2 p1 x x cid19cid19 ID2 Notice D1 respectively D2 seen underlying linear order model M1 respectively x cid19 cid2 ϕQ 2 p2Q n pn f p10 M2 propositional letters h2 hn1 p2 pn We know M1 x cid19 cid2 ϕQ 2 p2Q n pn f p11 cid19 y x cid19cid19 ID2 Thus inductive hypothesis cid19 y x Q 1 p1 Q 2 p2 Q n pn f true The case Q 1 existential treated similar way cid2 cid19cid19 cid2 ϕQ 2 p2Q n pn f p10 x cid19cid19 cid2 ϕQ 2 p2Q n pn f p11 x cid19 cid2 p1 M x cid19 y cid19 ID1 M1 x cid19 ID1 M1 x cid19 x cid19cid19 x cid19 D1 x cid19 y cid19cid19 D1 x cid19 ID1 x cid19cid19 ID2 M1 x cid19cid19 ID2 M x cid19 cid2 p1 M x cid19 y cid19cid19 y cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19cid19 y cid19 y cid19 y cid19 y cid19 y Theorem 1 The satisﬁability problem HS3 interpreted class linear orders PSpacehard Proof Since Lemma 3 proves satisﬁability problem QB formulæ reduced LogSpace satisﬁability problem HS3 result immediate cid2 43 PSpace membership ﬁnite case Now prove satisﬁability problem HS3 decidable PSpace particular case ﬁnite linear orders We start proving small model property HS3 interpreted ﬁnite models key showing decidability complexity satisﬁability problem This taken care Lemma 4 given importance convenient understand driving concepts getting technical details In ﬁnite case satisﬁable formula ﬁnite model compute bound size model prove model exceeding bound reduced smaller model satisﬁes formula To end provide description row compass structure represents model ﬁnite description carefully designed achieve goals ﬁrst ﬁnite number different descriptions second rows description occur portion model essentially So number different descriptions computed bound shall refer model G bigger bound contracted version Gcid19 portion model exists rows description eliminated The initial proof devoted deﬁning description row second deﬁnition contracted model parts proof showing resulting structure universal formula respected existential formula eventually satisﬁed Observe formula ϕ equisatisﬁable ϕcid19 ϕ cid3Icid4ϕ cid3Lcid4ϕ Indeed easy exists compass structure G D L ϕ exists compass structure Gcid19 D Lcid19 ϕcid19 ϕcid19 L0 1 notion called initial satisﬁability Then loss generality focus initial satisﬁability search models domain type 0 1 2 0 1 initial interval Lemma 4 Let ϕ ﬁnitely satisﬁable HS3 formula Then satisﬁed model M D cardinality 2O ϕ3 Proof Let G D L compass structure initially satisﬁes formula ϕ We prove size D exceeds bound exists compass structure Gcid19 Dcid19 Lcid19 ϕ Dcid19 D The contraction method obtained way iterated order obtain model cardinality exceed given bound Deﬁnitions Given G D L satisﬁes ϕ point x y deﬁne set requests subset Clϕ holds interval x y Intuitively request temporal formula satisﬁed existential witnessed interval universal inﬂuences labels existing intervals A set requests behaves differently depending modal operators involved We choose consider requests type cid3Icid4 cid3Lcid4 separate requests type cid3Lcid4 follows deﬁne set R I Lx y subset Lx y contains formulas type cid3Icid4ψ Iψ cid3Lcid4ψ Lψ set RLx y subset Lx y contains formulas type cid3Lcid4ψ Lψ By exploiting properties modal operators represent requests convenient way Indeed observe given intervals x y cid19 y x cid19 y x y existential request cid3Lcid4ξ x y x x y These properties allow deﬁne set requests row y G follows cid19 y x y universal request Iξ x cid19 y universal request Lξ x existential request cid3Icid4ξ x cid19 cid19 y x x 10 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 R I L y R I Lx y 0 x y Then represent sequence chain R 1 R2 RR containment ordering elements In similar way 0 x x row y deﬁne I L y implicit set cid19 y cid19 y RLx y RLx RL y RLx y 0 x y I Lx y RLx y ϕ interval x y This immediately implies RL y ϕ R The asymmetry types requests inherent asymmetry compass structures Now observe R I L y ϕ To recall element R chain R I L y ideally separated components existential universal requests type cid3Icid4 cid3Lcid4 regularity property observed effectively limits maximal cardinality component cardinality different Rs occur ϕ logϕ Now single row As consequence number possible different chains R 0 ﬁrst point model chain R I L y contains sets requests intervals 0 y 1 y observed requests components successive Rs grow monotonically bigger smaller subset points 0 m y sets requests identical change interval m 1 y structure repeats chain count set request occurs number consecutive points appears Now let S ID 2Clϕ function I L y bounded ϕ ϕϕ 2 Sx y ψ Clϕ x cid19 y ψ Lx cid19 cid19 y 0 x cid19 cid19 x y y cid19 Intuitively S associates point x y formulæ closure ϕ occur maximum rectangle x y lower right corner notion deﬁned G ﬁnite compass structure geometrically interpreted Sx y rectangle x y If ﬁx row y easy prove sets Sx y enjoy similar regularity properties sets requests S0 y S1 y S y 1 y As allows effectively bound cardinality set fact Sx y 2 ϕ Therefore represent components row y requests cid6 y Sx y 0 x y chain sets Sx y row y cid6 y 2 ϕ observe sets Sx y need consistent contain formula negation Each element chain cid6 y chosen 22ϕ number possible different chains cid6 y bounded 22ϕ 22ϕ1 1 turn bounded 2 Let associate single row y function ϕ2 count y R I L y cid6 y 1 4 ϕ 1 R R I L y L cid6 y count yR L min4 ϕ 1 x R I Lx y R Sx y L ϕ2 log4ϕ1 possible Observe row y chain R count y functions justiﬁed observing given chain associated different function depending times given set requests times given rectangle occur given position At point y deﬁne I L y chain cid6 y 4 ϕ 1ϕ2 2 row y RL y R I L y count y cid6 y This regarded complete description row y compass structure limited information need perform contraction Taking account number different component row y number possible values row y bounded ϕ 2 ϕlogϕ 2 ϕ2log4ϕ1 2 ϕ2 ϕ 2 ϕϕlog4ϕ1logϕϕ 2O ϕ3 wanted Contraction If D exceeds bound simple combinatorial argument exist rows y1 y2 row y1 row y2 Fig 3 Indeed let analyze component bound ϕ takes account ϕ logϕ counts number number different RL y order contraction work diagonal 2 ϕ2 log4ϕ1 counts possible different chains requests sure rows chain 2 number possible different functions count y given row sure row chain count 2 number possible chains cid6 y sure rectangles identiﬁed y1 y2 In order prove safely contract model y1 y2 let focus attention set Rec y2 G contains points z t z y t y For ϕ2 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 11 Fig 3 A picture contraction method In gray contracted area red downleft triangle preserved yellow upright triangle moved changes green vertical segments copied G Gcid19 For interpretation colors ﬁgures reader referred web version article ψ Clϕ ψ Lz t z t Rec y identify points z t right le f t cid19 tup In words ψ Lz t follows z points z t right le f t respectively rightmost leftmost highest lowest occurrences ψ rectangle y We deﬁne set W y 0 y given y minimal subset 0 y contains rightmost leftmost highest lowest witnesses ψ y ψ Clϕ Thus deﬁne following nondecreasing monotone function cid19 zright tdown t cid19 zle f t z cid19 ψ Lz cid19 t cid19 t g 0 y1 0 y2 In deﬁnition x 0 y1 R I Lgx y2 ii x 0 y1 Sx y1 Sgx y2 iii W y2 Imgg y2 1 Imgg Imgg image g Let cid7 y2 y1 ﬁnally build compass structure Gcid19 Dcid19 Lcid19 Dcid19 D cid7 Lcid19 deﬁned followsi Lcid19x y Lx y 0 x y y1 ii Lcid19x y Lx cid7 y cid7 y1 x y Dcid19 iii Lcid19x y Lgx y cid7 y1 x y1 y Dcid19 In following shall denote coordinates G x y Gcid19 depends particular area G certain point copied correspondence key rest proof cid19 There exists natural correspondence points G points Gcid19 I Lx y1 R x cid19 y Consistency Let prove new smaller compass structure consistent universal request respected Given points x y z t compass structure given X L L I x y X z t following holds x yR X z t Xξ Lx y ξ Lz t In words x y X z t z t consistent universal requests x y relation X The following cases arise points x cid19 Gcid19 cid19 z cid19 y cid19 t contraction x If y cid19 t cid19 y If x cid19 z cid19 y cid19 1 points located area Gcid19 cid19 X z 1 points located area Gcid19 cid19 Gcid19 cid19 y cid19 t cid19 cid19 x cid7 y cid19 y cid7 x structure x fact x y X z t G downleft triangle preserved X L L I thanks fact x y X z t G upright triangle moved changing X L L I thanks cid19 Gcid19 cid19 X z cid19 y cid19 t cid19 cid19 cid19 y cid19 z cid19 y y cid19 1 z cid19 y cid19 z cid19 Lg y1 t In ﬁrst case x In second case x The case z If y cid19 y cid19 Gcid19 cid19 L z cid19 belongs downleft triangle subcases arise y cid19 1 clearly x cid19 t cid19 y cid19 y cid19 t cid19 Gcid19 cid19 1 Lgx y2 Lcid19 y 1 t cid19 means x yR Lz cid7 t cid7 x y L z cid7 t cid7 cid19 cid19 y cid19 cid7 Observe gx y2R I x y G cid19 cid7 y2 implies If y cid19 cid19R Lz y 1 G immediately obtain x By construction Lcid19x x y cid16 gx y2 y y2 x y2 G g y1 y2 t cid19 Gcid19 gx y2 I g y1 t cid19 cid19 y cid19 y 1 y cid19 cid19 cid19 cid19 belongs downleft triangle exists x y cid19 cid19 y cid19 y cid19 y 1 1 z 1 t cid19 t cid19 cid19R Lz cid19 z Lcid19z cid19 cid7 Again subcases arise y cid19 Lgx t cid19 t cid19 cid7 cid19 cid7 G means x y L gx t Gcid19 cid19 y cid19 Gcid19 cid19 t cid19 G turn implies x cid19 cid7 G implies subcases If x yR I gx t cid19 cid7 G construction x yR I x y1 x Lx y1 Lgx y2 Then Sx y1 Sgx y2 x y I gx y G y y2 particular x y I gx t cid19 cid7 G turn implies x cid19 1 symmetric x x cid19 cid7 G x y I gx t g monotonic nondecreasing x yR Lgx t If hand x yR Lgx t If hand y cid19 cid7 x In ﬁrst case x cid19 x cid19 1 I y cid19 L z cid19 I z cid19 I z cid19 Gcid19 cid19 Gcid19 cid19 Gcid19 cid19R Az cid19R I z cid19R I z cid19 z cid19 z y cid19 1 t cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 t cid19 t cid19 t cid19 t t cid19 cid19 cid19 12 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 cid19 cid19 y cid19 y The case t 1 x cid19 cid19 cid19 cid19 y If x 1 z 1 t cid19 y subcases arise If t L gx t x y x y I t cid19 1 x x cid19 symmetric cid19 1 y construction exists x y1 Lcid19z cid19 t cid19 Gcid19 cid19 y cid19 cid19 x cid19 t cid19 cid19 cid7 G x L z cid19 cid7 G Lcid19x cid19 I Lz cid19 symmetric implies x yR Lgx t cid19 If hand t cid19 t cid19R Lz cid19 y cid19 y x cid19 cid19 x cid19 t cid19 cid19 Lgx t t situation x cid19 y cid19 y The case z cid19 cid19 If z 1 t cid19 cid19 y 1 y cid19 cid19 cid19 y 1 y Then construction exist x x y1 Lcid19x cid19 cid7R I gx t gx y cid7 G implies x cid19 Gcid19 cid19 I z cid19 y cid19 t cid19 y cid19 cid7 G y2 shared point case gx y cid19 Lgx y cid19 y cid19R I z cid19 t cid19 y cid19 cid7 Lcid19z cid19 cid7 Once cid19 cid7 G cid19 cid7 cid19 cid7 x cid19 1 belongs intervals cid19 cid7 Since cid19 t cid19 cid19 Lgx t cid19 cid7 I gx t Fulﬁllingness Finally remains prove Gcid19 fulﬁlling existential request eventually satisﬁed Given x cid19 y cid19 IDcid19 cases arise depending existential request originated If y If x cid19 cid19 t cid19 t cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 x cid7 y 1 far requests type cid3Lcid4 Lcid19x cid19 concerned originate satisﬁed cid19 y downleft triangle structure modiﬁed contraction fulﬁlling guaranteed Consider request type cid3Lcid4ψ Lcid19x cid19 Lx y G exists z t z y ψ Lz t cid19 Lz t subcases arise depending position z t structure G If t y1 ψ Lcid19z conﬁned downleft triangle If t y2 construction ψ Lz cid7 t cid7 case fulﬁlling guaranteed fact upright triangle moved changing structure If ﬁnally z y1 t g monotone nondecreasing exists x x x y1 ψ Lg y cid19 y cid7 y y2 gx rightmost vertical segment starting y2 exhibiting ψ ψ Lcid19x cid19 It important notice z y1 second subcase relation R L x G cid3Lcid4ψ belongs RL y1 RL y2 equal Now let cid3Icid4ψ Lcid19x cid19 G exists z t x yR I z yt ψ Lz t Two cases arise depending position z t If t y1 ψ Lcid19z cid19 Lz t conﬁned downleft triangle If hand t y1 z x y1 t given z t intersect x y Let x y leftmost index vertical segment starting y1 starts exhibits ψ construction gx index starts leftmost vertical segment starting y2 exhibits ψ This means exists ψ Lgx y y y2 ψ Lcid19x y cid7 cid19 1 x cid19 concerned cid19 y cid7 As far requests type cid3Lcid4 Lcid19x originated satisﬁed upright triangle structure modiﬁcations structure fulﬁlling guaranteed Consider request type cid3Lcid4ψ Lcid19x cid19 G exists z y t x ψ Lz t subcases arise depending position z t structure G If z y2 ψ Lcid19z cid7 t cid7 conﬁned upright triangle If t y2 cid3Lcid4ψ belongs label Lx y2 ψ belongs label Lx y2 way ψ Lcid19z cid19 1 notice cid19 independently ψ occurs downleft triangle fulﬁlls request originated x precise position If ﬁnally z y2 t exists x y2 y x ψ Lx y x vertical segment starting y2 exhibits ψ lowest coordinate g monotone nondecreasing assume x Imgg exists x y1 gx x ψ Lcid19x Now let cid3Icid4ψ cid19 G exists z t x yR I z t ψ Lz t subcases arise depending Lcid19x position z t structure G If z y2 ψ Lcid19z cid7 t cid7 Lz cid19 time conﬁned upright triangle If hand z y2 t x intervals x y z t intersect We exists x y2 vertical segment starts y2 exhibits ψ highest coordinate g monotone nondecreasing assume x Imgg exists x y1 gx x Now know y t ψ Lx y G construction ψ Lcid19x cid19 y cid7 Gcid19 x cid19 y cid19 Lgx y cid7 Clearly x x g monotonic nondecreasing Let cid3Lcid4ψ Lcid19x Lx y1 exists z t t y1 ψ Lz t By construction Lz t Lcid19z cid19 z t belongs downleft cid19 Lgx y cid7 Then triangle Gcid19 G fulﬁlling exists z t z y cid7 ψ Lz t By construction Lz t Lcid19z cid7 t cid7 cid19 Lgx y cid7 Then x G fulﬁlling exists z t G gx y cid7R I z t ψ Lz t Three cases arise cid19 z t downleft triangle preserved depending position z t If t y1 Lz t Lcid19z cid19 cid19 y contraction g monotonic nondecreasing x gx x cid19 Lcid19z cid7 t cid7 request satisﬁed If z y2 z t upright triangle Lz cid19R I z cid7 t cid7 request satisﬁed If hand z y2 y previous case applies x construction exist x y1 ψ Lgx y y y2 Lgx y Lcid19x cid19 y cid7 x cid19R Lz cid7 t cid7 request satisﬁed Finally let cid3Icid4ψ Lcid19x cid19 y cid7R I x cid7 y cid7 proving request fulﬁlled cid19 request satisﬁed Let cid3Lcid4ψ Lcid19x cid19 Lgx y cid7 Then G fulﬁlling R 1 exists x y1 Lcid19x cid19 y cid7 request satisﬁed cid19 z cid19 y Lgx y2 R cid19 y cid7 Gcid19 cid19 1 y cid19R Lz cid19R I z cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y cid19 y x cid19 t cid19 t cid19 t cid19 t cid19 t cid19 t cid19R I x cid19 If x E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 13 Now Gcid19 bound repeat entire process cid2 compass structure ϕ consistent fulﬁlling Clearly Dcid19 D If Dcid19 claimed A small model HS3 model HS3 formula ϕ domain contains 2O ϕ3 points Small models evidently exponential length means Lemma 4 proves HS3 decidable nondeterministic exponential time A little work needed prove fact decidable polynomial space To end nondeterministic algorithm uses polynomial space obtain result thanks Savitchs Theorem PSpace NPSpace 39 The idea underlying polynomialspace algorithm check satisﬁability HS3 formula non deterministically generating model limits Lemma 4 way given moment compass rows kept memory single row contain information allow generate To end need introduce notation deﬁnitions An atom nonempty set F Clϕ ψ Clϕ ψ F ψ F ψ ξ Clϕ ψ F ξ F words atom maximally consistent subset Clϕ labels compass structure fact atoms We denote Aϕ set possible atoms ϕ For X L L I denote Rϕ X set contains existential requests formulæ type cid3 Xcid4ξ Clϕ given set Rϕ I subset cid6 Clϕ observable denoted Ocid6 set cid6 Rϕ I Intuitively restricting attention existential requests n particular relation R I In order eﬃciently row deﬁne counting tuple triple R R R Rϕ I L y count number times occurs row Intuitively R contains requests satisﬁed satisﬁed row y R contains requests satisﬁed y compass structure For row abstraction word counting tuple seen realization element R R n N I R C R R0 R 0 n0 Rm R m nm cid16 R i1 R counting tuples R R The size given row abstraction C R number C R C Ri respectively C R algorithm shown Figs 4 5 C R C R cid19 0 C R indicate set R j respectively R cid6 i1 ii R R i1 m iii R i1 m 0im ni access elements follows write cid6 0l j nl In 0l j nl j R cid6 row abstractions Consider algorithm Fig 4 Clearly guarantee completeness approach L I M value set theoretical bound dimension possible ﬁnite model given formula ϕ explained Lemma 4 Each let step considered nondeterministic step requested object guessed algorithm veriﬁes properties given property respected algorithm rejects algorithm seen PSpace veriﬁer The requests type cid3Lcid4 ϕ handled following way f Lcid3Lcid4ψ represents cid19 z interval z t model built z t satisﬁes ψ interval z requests type cid3Lcid4 handled symmetric way So algorithm correctly guesses requests type cid3Lcid4cid3Lcid4 considers satisﬁed limits given f L f L function Initialize write IL I M denote intervals built set 0 L I M Then correct initial atom F guessed properties checked function CheckFirstAtom Obviously checked formula ϕ belong F turn contain request type cid3Lcid4 F holds 0 1 ﬁrst line conditions F Moreover requests type cid3Lcid4 F precisely satisﬁed right 0 1 collected function f L second line F contains formulæ requested satisﬁed 0 1 line Finally coherent f L F contains formulæ leftmost satisfying interval 0 1 fourth line Right loop initial compass structure represent model guessed level corresponding y 1 row abstraction C R line contains precisely counting tuple formed nonstarred requests satisﬁed 1 We account formula mentioned line component cid6C R requests type cid3Lcid4 component LC R current step point 0 cid19 z cid19 t The compass structure guessed rowbyrow starting line 1 corresponds set intervals ending point 1 Therefore easy check given point y ﬁnished verify current row abstraction request type cid3Lcid4 request set R counting tuple matched satisﬁed This explains ﬁrst loop At given step corresponding set R row step 2 guessed abstraction called C R set formulæ cid6C Rcid19 The remaining code correct guess To end ﬁrst set set requests type cid3Lcid4 precisely deals checking C R insisting point line point row use temporary variable cid6 C Rcid19 initially set Then check C R correct precisely C R tuplebytuple Consider problem checking correctness ith tuple corresponds check C R interval row The temporary variable C R pre takes value set requests satisﬁed row 1 The guess C R rejected set requests type cid3Icid4 satisﬁed equal set satisﬁed point C R plus satisﬁed line First check number components C R cid19 cid19 cid19 cid19 cid19 cid19 14 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 procedure HS3Satϕ L I M begin I 1cid4 Initialize f L f L L I M let F Aϕ CheckF irst AtomF f L f L C R cid3RF cid6C R F LC R RF L step 0 step L I M LC R i0 C R C Ri C R row abstraction return Y es row step 2 cid19 let C R let cid6C Rcid19 Clϕ LC Rcid19 ψ 0 row R L f L ψ cid6 C Rcid19 C R cid19 cid16 C R 1 return No 0 C R C R C R pre cid19 cid19 C R pre C Ri pre C R cid19i cid16 C R return No Ocid6C Rcid19 cid6C R C R cid19 C R cid19i cid2 C Ri return No let F Aϕ Check AtomC R C Rcid19 cid6 cid6 cid16 cid6C Rcid19 C Rcid19 return No C Rcid19 F cid6 cid19 f L f L cid19 C R C R cid6C R cid6C Rcid19 step step 1 return No Fig 4 A PSpacealgorithm HS3 formulæ satisﬁability checking procedure Initialize f L f L L I M begin L let L Rϕ let f L L IL I M 1 let L Rϕ let f L L IL I M 1 L procedure CheckF irst Atomϕ f L f L begin ϕ F RF L RL F ψ 0 1 R L f L ψ F ψ f L ψ 0 1 f L ψ 0 1 F ψ 0 1 f L ψ return T rue return F alse procedure Check AtomC R f L f L begin ψ row R L f L ψ ψ row R L f L ψ F cid6C R ReqI F C Ri RF L RF L F ψ f L ψ row f L ψ row F ψ row R f L ψ F ψ row R f L ψ return T rue return F alse Fig 5 Auxiliary procedures algorithm Fig 4 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 15 cid19 cid19 component C R correct chain If C R interval type x row intersect interval row chain requests cid19 ith component passed tests C R remains seen guessed atom occupy label interval row key point complexity algorithm PSpace atoms checked exist stored The conditions atom F exist formulæ cid6C Rcid19 ii requests type cid3Icid4 ith component C R iii requests type cid3Lcid4 respectively cid3Lcid4 precisely formulæ leftmost respectively rightmost satisfying interval seen respectively seen iv formulæ include satisﬁed precisely row left right v ﬁnally formulæ contradict functions f F witness formula leftmost satisfying interval starts better readability denote Fig 4 R union identity relation intervals plus relation R X X E E D O A L R union identity relation intervals plus relation R X X B B D O A L Now cid6 C Rcid19 certainly includes F having guessed atom algorithm compares cid6 cid19 cid6C Rcid19 rejects different C Rcid19 set formulæ C R cid19 Theorem 2 The ﬁnite satisﬁability problem HS3 PSpacecomplete Proof Our procedure requires store counters row step row abstractions time suﬃces prove represented polynomial space respect ϕ Since counters exceed 2O ϕ3 clearly K O ϕ3 bits store Now consider row abstraction C R R1 R 1 n1 R2 R 2 n2 analyze components By deﬁnition R1 R2 R subset Rϕ I worst case R differs R i1 precisely formula Therefore focus R component 2 ϕ different elements C R The component R follows pattern reversed total 4 ϕ different counting triples row abstraction Each requires 2 logϕ 1 K bits represented entire row abstraction requires 2 logϕ 1 K K bits To quantity add cid19 space store instances cid6C R C R C R temporary instance requiring log2 ϕ 1 bits space single atom F requiring log2 ϕ 1 bits Summing algorithm Fig 4 works polynomial space Since Theorem 1 gives matching lower bound claim cid2 Our PSpace algorithm impractical Each nondeterministic choice guess complex objects atoms generated beginning computation timedemanding step In Section 6 possible deterministic implementation ﬁnite satisﬁability checker HS3 result systematic series tests 44 PSpace membership case natural numbers The satisﬁability problem HS3 general discrete case assuming ﬁniteness models decided essentially principles ﬁnite case details case N The relevant difference ﬁnite case case N lies problem model representation order deﬁne suitable ﬁnite representation inﬁnite models based natural numbers use technical machinery deﬁned Lemma 4 First given compass structure G D L index 0 y denote G y y D y y L y L y labeling function deﬁned L yx y Lx y 0 x y y y preﬁx G It essential understand stepping G G y effect changing content row y y y requests satisﬁed G satisﬁed anymore G y Therefore denote row y y value function row y reduced compass structure G y A ﬁnite compass structure G based domain D 0 ymax said pseudofulﬁlling exist points y y ymax row y row y cid19 y 0 y cid19 iii cid19 y ψ Lx ii 0 x y ψ RI x y exists 0 x cid19 iv row y y row y The key point cid19 y ψ RLx y exists y x pseudofulﬁlling structure selfcontained existential request originated intervals end y satisﬁed intervals end y notice position ymax plays essential role satisfying condition conditions iii satisﬁed structure pseudofulﬁlling ideally portion model y y replicated inﬁnitely Proving HS3 decidable PSpace interpreted N requires steps ﬁrst proving model exists pseudofulﬁlling structure ϕ label interval 0 1 second effectively bound maximum cardinality pseudofulﬁlling structure checking existence pseudomodel PSpace The ﬁrst steps dealt Lemma 5 focused precise bound given proving pseudofulﬁlling structures converted models essentially different proof Lemma 4 notion periodicity involved far step concerned simple modiﬁcation algorithm Fig 4 suﬃcient cid19 y ψ Lx cid19 y cid19 y 16 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 Lemma 5 Let ϕ HS3 formula satisﬁable N Then exists pseudofulﬁlling structure ϕ domain D cardinality 2O ϕ3 Proof Since ϕ satisﬁable N exists compass structure G N L We want prove exists bounded pseudofulﬁlling structure describes cid19 cid19cid19 y cid19 y ψ Lx row y row y Deﬁnitions Since set possible different row descriptions ﬁnite smallest y N cid19cid19 smallest y description repeats inﬁnitely cid19 x cid19 In identical way cid19 x cid19 Observe cid19 y row y G ymax pseudofulﬁlling structure ϕ L0 1 cid19 N exists y y Then choose y y way 0 x y ψ Sx y exists x y y choose ymax y smallest index 0 x y ψ Sx y exists x y y row y ymax prove contract given bound cid19 ψ RL y exists y x cid19 ψ RL y exists y x row y row y ymax cid19 ymax ψ Lx cid19 ymax ψ Lx cid19 y ψ Lx cid19 y cid19 y cid19 y cid19 y cid19 y Contraction Given points ˆy ˆy cid19 deﬁne O cc ˆy ˆy cid19 ψ x y cid19 ψ Lx y 0 x ˆy y cid19 cid19 ˆy cid19 cid19 t cid19 t cid19 ψ Lz cid19 y zle f t z cid19 zright tdown t By construction O cc y y O cc y ymax As Lemma 4 identify ψ O cc y y points z t cid19 y right le f t ψ Lz t z y t y follows z cid19 tup In words points z t right le f t y t respectively rightmost leftmost highest lowest witnesses formula O cc y y We collect ordinates type z deﬁned set V erψ y y coordinates type t set Horψ y y In similar way deﬁne sets V erψ y ymax Horψ y ψ O cc y ymax Clearly ˆy cid19 4 We identify set V b x 0 x ymax pair ψ ˆy case V erψ ˆy ˆy blocked verticals minimal set satisﬁes following conditions V erψ y y V erψ y ymax V b ψ O cc y y R L domcount y ii count yR L 4 ϕ 1 x V b R I Lx y I Lx y R Sx y L count yR L iii count yR L 4 ϕ 1 R Sx y L x V b R I Lx y R Sx y L 4 ϕ 1 Observe x V b R cid19 0 y ymax blocked horizontals min V b 2 ϕ4 ϕ 1 Moreover identify set Hb y imal set satisﬁes following conditions Horψ y y rowsψ y ymax Hb ψ O cc y y ii 0 y y ymax Hb Observe Hb 2 ϕ 4 For row 0 y ymax deﬁne additional counting function count V y R I L y cid6 y 1 2 ϕ 4 ϕ 1 R L R I Lx y R Sx y L x V b R cid19 Horψ ˆy ˆy I L y cid6 y cid19 z cid19 count V yR L x R I Lx y R Sx y L cid19cid19 cid19 ˆy ˆy Similarly Lemma 4 conclude number possible count V y functions 2 ϕ4 ϕ 1ϕ2 ϕ2log2ϕ4ϕ1 Now consider rows 0 ˆy ˆy cid19cid19 ˆy cid19 y 2 cid19 y ˆy strictly contained consecutive elements Hb y cid19 directly apply Lemma 4 obtain smaller structure Gcid19 If row ˆy row ˆy cid19 ˆy pseudofulling If G ymax based domain D G based domain Dcid19 But rows ˆy ˆy required properties guaranteed exist number rows strictly contained consecutive elements y cid19 ymax pair y consider rows ˆy ˆy cid19 count V ˆy count V ˆy Hb greater equal Dcid19 D ˆy cid19cid19 Hb y cid19 y cid19 y cid19cid19 cid19cid19 cid19 cid19 Ncid7 ϕ 2 ϕϕlog2ϕ4ϕ1log4ϕ1logϕϕ We iterate contraction y structure obtained end process cardinality equal cid19 Ncid7 consecutive elements y cid19cid19 y cid19 y cid19cid19 The pseudofulﬁlling Hb Ncid7 2 ϕ 4 ϕ 2 ϕϕlog2ϕ4ϕ1log4ϕ1logϕϕ 2O ϕ3 wanted The pseudofulﬁlling structure obtained way transformed compass structure based natural numbers model based natural numbers applying essentially technique seen Lemma 4 cid2 Dealing satisﬁability formulæ HS3 interpreted set integers require mathe matical tool different notion pseudofulﬁlling structures generalized symmetric interval 0 1 limits suitably recomputed Then Lemma 5 works way prove existence A similar argument deciding satisﬁability formula HS3 interpreted class Dis discrete linear orders computational properties E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 17 Theorem 3 The satisﬁability problem HS3 case natural numbers case integers case Dis PSpacecomplete 5 HS7 undecidable In section satisﬁability problem HS7 interpreted class linearly ordered set contains inﬁnite order undecidable ﬁnitediscrete cases covered results 30 Undecidability proven reduction socalled Octant Tiling Problem OTP example 13 This problem establishing given ﬁnite set tile types T τ1 τN tile second octant integer plane O n m Z2 0 n m For tile type τ T let rightτ le f tτ upτ downτ colors corresponding sides τ To solve problem ﬁnd function f O T right f n m le f t f n 1 m f n m f n m 1 A simple application König Lemma Compactness Theorem ﬁrstorder logic allows prove OTP undecidable similar argument 11 prove undecidability Quadrant Tiling Problem In following reduce OTP satisﬁability problem HS7 Our construction similar unde cidability reductions interval temporal spatial logics 3113 adapted loss expressive power coarser operators The reduction exploits correspondence points x y octant suitable set unit intervals uintervals labeled propositional letter u ii propositional vari ables represent tiles T iii modal operators HS7 enforce constraints problem The starting point construction consists building inﬁnite sequence uintervals Let ϕuchain following formula ϕuchain u0 Gul cid3 A O cid4ul1 mod 2 cid3 l01 Gu u0 u1 Gu D B Eu cid3 Gul D B Eu cid19 l l01 Gu cid19 0 u cid19 1 Lemma 6 Let M x y cid2 ϕuchain Then exists inﬁnite increasing sequence points y0 y1 y2 y0 y ii 0 M yi yi1 cid2 u iii z t cid16 yi yi1 0 M z t cid2 u t x z yi N 8 9 10 11 12 cid19 0 M y0 y cid2 u Proof By hypothesis M x y cid2 ϕuchain M x y cid2 u0 Because 8 interval y0 y1 M y0 y1 cid2 u1 x y0 y To prove suppose sake contradiction y0 y By 11 cid19 obtain M y0 y cid2 u 1 contrary 12 Consequently y y0 Following argument taking 9 account immediately sees ϕuchain forces existence chain y y0 y1 y2 uintervals verifying ii Suppose sake contradiction M z t cid2 u z t cid16 yi yi1 N t x z yi N Let analyze possible cases occur If yi z t yi1 N x z t y0 contradiction 10 z t uinterval contained R D B E uinterval yi yi1 x y0 If yi z yi1 t yik k N k 1 x z y0 t y1 violation 10 If yi z yi1 yi1 t yi2 x z y0 y0 y y1 thanks 9 M z t cid2 u0 M z t cid2 u1 Assume yi yi1 u0interval ﬁrst case contradiction cid19 12 yi1 t u 1interval second case contradiction cid19 z yi1 turn u 1interval If yi yi1 u1interval symmetric argument applies If t yi N hypothesis z yi N contradiction 10 Finally z x t y0 10 Thanks 9 M z t cid2 u0 M z t cid2 u1 In ﬁrst case 8 ensures existence cid19 u1interval cause conﬂict u0interval x y0 Otherwise x t interval x t satisﬁes u 0 u cid19 1 contradiction cid2 cid19 0interval u cid19 0interval u By following formula ϕube easily identify intervals start end uintervals ϕube Gu cid3D B Ecid4cid11 D B Eu cid19 Gu cid19 A O u ub 13 14 18 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 cid19 A O u ue Gu Gub A O u Gue A O u 15 16 17 Lemma 7 Let M x y cid2 ϕuchain Lemma 6 ϕube let y0 y1 y2 inﬁnite sequence points existence guaranteed For 0 interval form yi z z yi1 satisﬁes ub ue exists interval ii For 0 interval form z yi1 z yi satisﬁes ue ub exists interval form form Proof Consider ﬁrst uinterval yi yi1 sequence point z yi z yi1 Such z exists thanks 13 Also 13 interval yi z certainly u interval Lemma 6 z t z t yi1 cid19 z uinterval 14 applies yi z ubinterval Since yi1 yi t uinterval 17 applies yi z ue interval proving Point ii proven likewise cid19 t yi t cid19 Consider following formula L T abuse notation identify tile symbols propositional letters represent ϕconf C0 cid3 GCl cid3 A O cid4Cl1 mod 2 l01 GC C0 C1 GCl D B EC cid3 cid19 l cid19 0 C l01 cid19 GC 1 GC A O ue A O ub GC D B EC cid3D B Ecid4cid11 Gu cid5 s G sL cid3 sscid19Lscid16scid19 s s cid19 cid3 A O cid4 cid3 A O cid4 cid5 τ cid3 A O cid4 τ T Gu cid3 A O cid4C cid3 A O cid4 Gu cid3 A O cid4C cid3 A O cid4 G cid3 A O cid4C cid3 A O cid4C 18 19 20 21 22 23 24 25 26 27 28 29 Lemma 8 Let M x y cid2 ϕuchain Lemma 6 Then exists inﬁnite sequence indexes k0 k1 k2 ϕube ϕconf let y0 y1 y2 inﬁnite sequence points existence guaranteed uinterval type yi yi1 satisﬁes precisely letter L cid2 C ii j 0 M yk j yk j1 iii C interval yk0 yk1 iv z t cid16 yk j yk j1 v C interval type yk j yk j1 vi z t cid16 yk j yk j 1 z t cid16 yk j11 yk j1 composed exactly units middle τ T j 0 M z t cid2 C t x z yi N ﬁrst unit yk j yk j 1 unit yk j11 yk j1 satisfy j 0 M z t cid2 t x z yi N Proof Point immediate consequence 24 25 Since M x y cid2 C0 18 interval z t x z y t y M z t cid2 C1 Suppose sake contradiction z y By 20 obtain cid19 1 contrary 21 Therefore z y y0 set k0 0 Now prove iii M z y cid2 C t y3 yk1 First note 22 combination Lemma 7 avoids yi t yi1 N Formulæ 24 26 imply y0 y1 y1 y2 y2 y3 respectively τ intervals tile τ Therefore t y1 cid19 0 M z y cid2 C E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 19 Fig 6 A model ϕT interpretation tiling second octant contradicts 27 t y2 contradicts 28 applying 29 19 20 21 y2 y3 easy y3 t By similar argument prove existence inﬁnite chain t y3 possible Then yk1 indexes k0 k1 stated ii iv Formulæ 27 28 immediately imply v Finally order prove vi suﬃces observe ﬁrst intervals units second thanks 29 interval interval yi1 yi implies yi1 ends C interval yi starts C interval Thus sake contradiction z t interval different ﬁrst unit C interval contradiction point iv Given structure built Lemma 8 refer mth interval level C mth tile level interested connecting mth tile given level mth tile In particular cid19 Corrinterval Corr tile z t connected tile z propositional letter introduced following formula cid19 interval t z cid19 t ϕcorr Gu cid3 A O cid4Corr Gu A O cid3 A O cid4Corr GCorr A O ue GCorr A O ub G A O Corr Gu cid3 A O cid4 A O Corr GCorr D B ECorr D B EC D B EC C 30 31 32 33 34 35 36 Lemma 9 Let M x y cid2 ϕuchain anteed Lemma 6 let k0 k1 k2 inﬁnite sequence indexes existence guaranteed Lemma 8 ϕconf ϕcorr let y0 y1 y2 inﬁnite sequence points existence guar ϕube For j 0 interval yk ji yk j i1 interval point yk ji1 starts Corrinterval ii For j 0 interval yk ji1 yk j i2 interval point yk ji ends Corrinterval iii If z t cid16 yi ym m 0 M z t cid2 Corr t x z yi N iv For j 0 points yk j yk j 1 yk j 2 ﬁnish Corrinterval v The mth tile level connected mth tile level level ﬁrst m index tile level mth tile connected mth tile preceding level vi Every level precisely tiles preceding level plus Proof Reasoning Lemma 7 point immediate consequence 30 33 point ii immedi ate consequence 31 applied interval yk j yk j i1 To prove iii observe 32 33 mandate Corrintervals begin end points type yi As far iv concerned turns yk j yk j 1 end Corrinterval 34 yk j2 35 A combinatorial argument cor nerstone 36 proves v vi As matter fact Corrintervals start given tile end C interval C interval thanks 36 But easy observe mth tile certain C interval connected lth tile l cid16 m C interval contradiction 36 Finally thanks iv tile C interval connected tile previous C interval completing argument We complete construction pictured Fig 6 forcing tiling constraints respected Let ϕcolor following formula 20 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 ϕcolor cid3 τ T cid3 τ T Gτ A O Corr cid3 A O cid4 cid5 τ cid19 Gτ A O A O τ cid19T upτ downτ cid19 τ cid19 cid5 τ cid19T rightτ le f tτ cid19 37 38 Lemma 10 The satisﬁability problem HS7 interpreted class linear frames contains inﬁnitely ascending order reduced OTP Proof Let T instance OTP let ϕT ϕuchain ϕube ϕconf ϕcorr ϕcolor Suppose ﬁrst M x y cid2 ϕT M model frame belongs class linear frames By Lemma 8 point y y0 starts ﬁrst level units containing precisely tile By Lemma 9 successive level contains precisely tile preceding 37 38 mth tile respects horizontal constraint m 1th tile exists vertical constraint mth tile successive level Therefore M represents correct tiling second octant summary fact ϕT satisﬁable given set tiles T implies OTP solution speciﬁc set T On contrary given solution OTP immediate build model ϕT simply placing tile correct position level suitably ﬁlling model evaluation C Corr In words given set T T tiles second octant ϕT satisﬁable cid2 Theorem 4 The satisﬁability problem HS7 interpreted class Fin Dis N Z Q R Lin undecidable Proof The class ﬁnite linear orders covered 30 By Lemma 10 satisﬁability problem HS7 case reduced OTP undecidable cid2 6 Experimental results The results Section 4 imply implement relatively eﬃcient ﬁnite satisﬁability checker HS3 In section data structures implementation strategies policies ideas implement satisﬁability checker case natural numbers general discrete case Implemented decision procedures interval temporal logics common literature Among ex ceptions procedure fragment A HS implemented 1623 experimental imple mentation aimed computational eﬃciency attempt use automatic tableaux generator MetTeL2 43 The previous attempt apply generic theorem prover interval temporal logic 18 tableaubased decision procedure fragment D interpreted dense linear orders veloped LoTREC 24 Unfortunately benchmark problems satisﬁability interval logic formulæ makes diﬃcult compare different implementations 61 Implementation We chosen develop semantic tableau satisﬁability checker HS3 Both tableau formula checked represented rooted decorated trees A rooted tree tree G V E r V nonempty set E V V E V 1 r V root element V called node A rooted decorated tree 27 rooted tree enriched function associates node decoration thought information carried node represent formulæ decoration propositional letter operator represent semantic tableaux decoration consists information needed expand tableau close In rooted decorated tree nodes successors called leaves ﬁnite path root leaf called branch Formulæ represented binary rooted decorated trees Each node tree decorated code represents Boolean modal operator propositional letter Formulæ read contextually represented trees simple recursive procedure eliminates implications pushes negations propositional letters obtaining equivalent formulæ negated normal form Moreover checking satisﬁability procedure transforms formula ϕ formula ϕ cid3Lcid4ϕ cid3Icid4ϕ initial satisﬁability checked Section 4 A tableau represented kary tree form leftchild rightsibling Each node tree contains pointer node formula tree represents subformula analysis interval holds activein active ﬂag leafinternal ﬂag pointers left child right sibling parent Domains represented totally ordered sets ﬂoating point numbers interval pair ﬂoats This speciﬁc purpose new point added pair existing ones created simply computing average model remains ﬁnite construction Some tableau nodes leaves construction E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 21 Table 2 Expansion rules semantic tableaubased procedure ψ τ x y D ψ x y D τ x y D cid3 Xcid4ψ x y D ψ x1 y1 D1 ψ xn yn Dn Xψ x y D ψ x1 y1 D ψ x2 y2 D ψ xm ym D ψ τ x y D ψ x y D τ x y D cid10 n ν X x y D Di μi X x y D x j y j λ j X x y D m νcid2 X x y D x j y j λcid2 j X x y D tableau temporally represent branch store domain information plus data help choosing branch depending expansion policy In addition trees formula tree tableau tree ﬁxed satisﬁability checking process given formula evolves additional data structures help apply tableau ex pansion rules In particular collection current leaves stored linked list Each element list points tableau node represents leaf branch chosen expansion step A nontrivial adaptation generic tree visit algorithm implemented order correctly identify given tableau node set leaves belong subtree rooted Finally dynamic data structure built destroyed expansion step allows examine branch tobeexpanded tableau node lies order establish branch closed contradictory represents model case procedure stops returns given formula satisﬁable Such structure thought hash table contains intervals formulæ currently true eﬃcient constant time lookup method The initial tableau formula ϕ initial satisﬁability checked tableau tree composed single tableau node following decoration formula node pointer address root formula tree represents ϕ interval 0 1 active ﬂag leaf ﬂag 1 domain 0 1 pointers null Given leaf current tableau branch represented following operations performed branch closing checking branch model checking ii choosing tobeexpanded tableau node Assuming current branch B closed model tobeexpanded tableau node chosen according following policy active node B closest root Expansion rules described Table 2 Boolean rules standard rules modal operators designed follows Let I set intervals ﬁnite domain As existential cases deﬁne function ν I L L I Fin N following meaning Given interval x y domain D ν X x y D returns number existing different intervals relation R X x y plus number new intervals created relation R X order explore qualitatively distinct possibilities For example νL 0 1 0 1 2 5 cid3Lcid4ψ holds 0 1 current domain 0 1 2 ψ hold interval 125 175 15 2 2 25 3 4 15 25 Notice example adding 125 175 necessary represents new interval completely existing points similar happens 3 4 cid3Lcid4ψ holding 0 1 satisﬁed new interval starting point 2 Similarly universal case deﬁne function νcid2 parameters returns number existing different intervals relation R X x y order expand universal modality new intervals created Moreover expanding existential modality require branch new bigger domain seen existential modalities require new points ith domain particular order returned function μ N I L L I Fin Fin Finally expanding existential modality new node branch decorated interval belongs possibly new domain The jth interval particular order expansion returned function λ N I L L I Fin I Following previous example μ1 L 0 1 0 1 2 0 1 125 175 2 λ1 L 0 1 0 1 2 125 175 Because restricting initial satisﬁability functions return domains intervals new points 0 1 smaller 0 In way existential operator cid3 Xcid4ψ existential disjunctive rule creates branches search possible location ψ Universal operators easier 22 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 treat given current interval current domain use function λcid2 analogous previous obtain intervals formula applied universal operators add points domain observed change Given node expanded correct rule chosen expansion clearly precisely rule applied result step applied leaves subtree rooted chosen node For eﬃciency reasons dec orations duplicated A given branch B identiﬁed leaf closed following conditions hold propositional contradiction exist nodes B decorations p x y p x y respectively cardinality domain decoration leaf exceeds bound Lemma 4 When given leaf selected expansion step branch contains checked contradictions If contradiction leaf simply eliminated list leaves leaves eliminated formula unsatisﬁable Otherwise node expanded protocol managing activeinactive ﬂags expan sion follows nodes inactivated expanded case universal nodes copied end branch active ﬂag 1 Therefore current branch B model active node B node universal D decoration leaf Xψ x y decoration node B exists node ψ x j y j B 1 j νcid2 X x y D The soundness completeness procedure shown following result Theorem 5 A formula ϕ HS3 ﬁnitely satisﬁable tableaubased method rules Table 2 returns Satisﬁable Proof Let introduce ﬁrst following notion Consider node n tableau formula ϕ let Sn set decorations nodes n root We denote Dn domain decoration n We Sn satisﬁed extension Dn exists model M based extension Dn ψ x y Sn case M x y cid2 ψ We ﬁnitely satisﬁable formula HS3 presented method terminates returns Satisﬁable contrapositively procedure closes branches formula ﬁnitely satisﬁable To prove stronger claim node n height h tableau ϕ branch contains n closed Dn Dcid19 L I M L I M maximum number points Sn satisﬁed extension Dcid19 domain shown Lemma 4 Notice n root ϕ ﬁnitely satisﬁable We proceed prove claim induction If h 0 branch contains n contains nodes decorations p x y p x y Sn simply satisﬁable number points named decorations nodes L I M Sn satisﬁed extension Dn If h 0 n expanded rule nodes n1 n2 exist descendants n inductive hypothesis applies If rule applied Boolean claim follows immediately If universal rule suppose Xψ x y decoration n Every branch contains n contains nodes cid19 decoration ψ z t interval z t result expansion particular node n cid19 x yR X z t If Sn satisﬁable extension Dn particular Sn ψ z t Sn contradiction inductive hypothesis Finally existential rule suppose cid3 Xcid4ψ x y decoration n If Sn satisﬁable extension Dn model domain extends Dn satisﬁes cid3 Xcid4ψ x y ψ z t x yR X z t By construction n contains decoration ψ z t independently z t Dn This means successor n Sn cid19 contradiction inductive hypothesis cid19 satisﬁable extension Dn cid19 Now argue method sound formula ϕ HS3 returns Satisﬁable exists model M M 0 1 cid2 ϕ Consider branch B contradictory active nodes universal node universal decoration expanded possible interval domain D branch Now let M model based D valuation function deﬁned follows interval x y propositional letter p x y V p p x y decorates node B We want prove structural induction node n B decoration ψ x y M x y cid2 ψ If ψ propositional letter negation result immediately If ψ composite formula cases arise universal formula In case fact B closed implies n expanded expansion applied branches contain n ψ conjunction conjuncts included decorations nodes B disjunction disjunct included decoration node B ψ cid3 Xcid4ξ node B decorated ξ z t z t x yR X z t In cases inductive hypothesis applies M satisfy ψ x y In case ψ universal formula ψ Xξ B extended case node n decoration ξ z t occurs B z t z t D x yR X z t inductive hypothesis applies cid2 cid19 62 Benchmark experimental results Our procedure programmed objectoriented C standard language threads capabilities Threads run vir tually parallel carry speciﬁc policy choosing leaf examined Each policy fair E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 23 Table 3 A benchmark ﬁnitely satisﬁable formulæ HS3 Finitely satisﬁable ϕ1 ϕ3 ϕ5 formula p0 Ip2 Lp2 cid3Lcid4p1 Lp1 Ip3 Lp3 cid3Lcid4p2 p0 Ip2 Lp2 cid3Lcid4p1 Lp1 Ip3 Lp3 cid3Lcid4ϕ2 p0 Ip2 Lp2 cid3Lcid4p1 Lp1 Ip3 Lp3 cid3Lcid4ϕ2 1 3 Fig 7 Example possible model ϕ1 Table 3 branch eventually examined advantage different policies improved execution time especially sat isﬁable formulæ We took account key aspects domain cardinality branch sparseness The sparseness degree branch allows estimate distinct intervals domain actually compute esti mation calculate average positive propositional letters assigned interval deﬁne sparseness branch variance distribution associated assigning positive propositional letters intervals We implemented following policies branches smaller domain sparse ﬁrst SBF ii branches longer domain sparse ﬁrst LBF iii branches LastInFirstOut order LIFO tableau tree explored depthﬁrst All experiments carried IntelR CoreTM i76700HQ clock 260 GHz cores 16 GB RAM Robustness scalability In order test robustness scalability implementation designed sequence ﬁnitely satisﬁable formulæ shown Table 3 systematically generated k 1 3 5 length relation time program takes establish satisﬁability Formulæ generated inductively given ϕk obtain ϕ2 generate ϕk2 ϕk ﬁnitely satisﬁable different models More importantly formulæ ϕk grow length modal depth following 9 length modal depth number different models important indicators measure experimental diﬃculty proving satisﬁability formula The results scalability experiment shown Fig 8 replacing propositional letter pi pi2 ϕ2 k k For sake clarity Fig 7 shows points model ϕ1 Table 3 returned algorithm In Fig 7 lefthand consider subformula ϕ1 correspondingly righthand considered subformula fact satisﬁed model Observe line classical tableaubased algorithms necessary requests shown example obligatory truth value p1 0 1 ϕ1 require Moreover trivially satisﬁed subformulas shown instance 0 1 subformula Lp2 satisﬁed fact 0 ﬁrst point model Semirandomized test In order test implementation realistic scenario need formulæ satisﬁ ability status ﬁxed Purely random formulæ necessarily challenging satisﬁability tester matter fact random formulæ tend satisﬁable admitting different models Moreover testing scalability unsatisﬁable formulæ increasing length appropriate effort needed prove 24 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 Fig 8 Elapsed time satisﬁable formulæ length modal depth Fig 9 Timeouts versus number ﬁnalized formulæ formula unsatisﬁable depends aspects length example depth tableau contradiction Therefore proceeded follows First designed simple technique systematically generate scalable unsatisﬁable formulæ To end listed certain number propositional tautologies p p q q p q p p p q certain number modal tautologies HS3 cid3Lcid4cid3Lcid4p cid3Lcid4p cid3Lcid4p Lcid3Lcid4p Then systematically applied cycles uniform substitution initial group tautologies obtaining longer ones Once satisﬁed average length resulting formulæ 150 symbols negated obtaining unsatisﬁable formulæ Second designed simple method generate randomized formulæ controllable length alphabet AP propositional letters employing intuitive schema recursively produces formula tree given current height h randomly choose Boolean modal operator probability directly proportional h propositional letter alphabet probability inversely proportional h perform depending case recursive calls height h 1 It argued procedure guarantee obtained formula speciﬁc length guarantee formulæ generated average length suitably modulate initial value h obtain formulæ tend desired length Modulating proportion h AP gives control probability generated formula satisﬁable following principles 25 Finally created database 5000 formulæ comparable length contains formulæ groups proportion 40 certainly unsatisﬁable 60 probably satisﬁable We tested procedure problem order establish fraction entire group solved different timeout settings 5 30 seconds The results experiments depicted Fig 9 As seen timeout 15 seconds establish satisﬁability 97 tested formulæ 7 Conclusions In paper studied previously unknown variants Halpern Shohams logic HS inspired Golumbic Shamirs interval algebras generalize classical Allens Interval Algebra coarser interval relations While ﬁner HS7 generally undecidable coarser HS3 PSpacecomplete ﬁnite case case natural numbers integers PSpacehard cases A summary known results coarser interval temporal logics Table 4 Undecidability HS ﬁnite case proven 28 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 25 Table 4 A summary results paper Class Fin N Z Dis Lin Q HS HS7 Undec 28 Undec 28 Undec 30 Undec HS3 PSpacecomplete PSpacehard authors mention particular case stricter undecidability results fragments HS example 12 actually imply HS undecidable case Fragments HS extensively studied recent literature unfortunately natural comparison coarser fragments HS3 HS7 syntactical fragments HS The systematically analyzed relative expressive power 1 computational complexity point view 1415 There number open problems interesting research directions topic Besides natural completing picture decidability complexity satisﬁability problem coarser interval temporal logics obvious questions arise results For example proved ﬁnitediscrete case fragment LL NPcomplete 14 means exist natural useful logics expressively LL HS3 Moreover exists recently emerged interval temporal logic subpropositional restrictions 20719 makes sense explore logic HS3 similar restrictions Acknowledgements This work partially supported project TIN1570266C2P1 E MuñozVelasco founded Spanish Min istry Science PhD grant FPU1505883 M Pelegrín founded Spanish Ministry Education project Formal Methods Veriﬁcation Synthesis Discrete Hybrid Systems P Sala G Sciavicco founded Italian INDAM GNCS Appendix A Supplementary material Supplementary material related article online httpsdoi org 10 1016 j artint 2018 09 001 References 1 L Aceto D Della Monica V Goranko A Ingólfsdóttir A Montanari G Sciavicco A complete classiﬁcation expressiveness interval logics Allens relations general dense cases Acta Inform 53 3 2016 207246 2 JF Allen Maintaining knowledge temporal intervals Commun ACM 26 11 1983 832843 3 R Alluhaibi Simple interval temporal logic natural language assertion descriptions Proc 11th International Conference Computational 4 A Artale D Bresolin A Montanari V Ryzhikov G Sciavicco DLLite interval temporal logics marriage proposal Proc 21st European Semantics IWCS 2015 pp 283293 Conference Artiﬁcial Intelligence ECAI 2014 pp 957958 5 A Artale E Franconi A temporal description logic reasoning actions plans J Artif Intell Reason 9 1998 463506 6 A Artale R Kontchakov V Ryzhikov M Zakharyaschev A cookbook temporal conceptual data modelling description logics ACM Trans Comput Log 15 3 2014 2512550 7 A Artale R Kontchakov V Ryzhikov M Zakharyaschev Tractable interval temporal propositional description logics Proc 29th AAAI Conference Artiﬁcial Intelligence AAAI 2015 pp 14171423 8 RA BaezaYates Challenges interaction information retrieval natural language processing Proc 5th International Computa tional Linguistics Intelligent Text Processing CICLing 2004 pp 445456 9 P Balsiger A Heuerding S Schwendimann A benchmark method propositional modal logics K KT S4 J Autom Reason 24 3 2000 297317 10 C Bettini Timedependent concepts representation reasoning temporal description logics Data Knowl Eng 22 1 1997 138 11 E Börger E Grädel Y Gurevich The Classical Decision Problem Perspectives Mathematical Logic Springer 1997 12 D Bresolin D Della Monica V Goranko A Montanari G Sciavicco Decidable undecidable fragments Halpern Shohams interval temporal logic complete classiﬁcation Proc 15th International Conference Logic Programming Artiﬁcial Intelligence Reasoning LPAR Lect Notes Comput Sci vol 5330 Springer 2008 pp 590604 13 D Bresolin D Della Monica V Goranko A Montanari G Sciavicco The dark interval temporal logic marking undecidability border Ann 14 D Bresolin D Della Monica A Montanari P Sala G Sciavicco Interval temporal logics strongly discrete linear orders expressiveness Math Artif Intell 71 13 2014 4183 complexity Theor Comput Sci 560 2014 269291 15 D Bresolin D Della Monica A Montanari P Sala G Sciavicco On complexity fragments modal logic Allens relations dense structures Proc 9th International Conference Language Automata Theory Applications LATA Lect Notes Comput Sci vol 8977 Springer 2015 pp 511523 16 D Bresolin D Della Monica A Montanari G Sciavicco A tableau right propositional neighborhood logic ﬁnite linear orders implementation Proc 22nd International Conference Automated Reasoning Analytic Tableaux Related Methods TABLEAUX Lect Notes Comput Sci vol 8123 2013 pp 7480 17 D Bresolin D Della Monica A Montanari G Sciavicco The light interval temporal logic BernaysSchönﬁnkel fragment CDT Ann Math Artif Intell 71 13 2014 1139 18 D Bresolin V Goranko A Montanari P Sala Tableaux logics subinterval structures dense orderings J Log Comput 20 1 2010 133166 19 D Bresolin A Kurucz E MuñozVelasco V Ryzhikov G Sciavicco M Zakharyaschev Horn fragments HalpernShoham interval temporal logic ACM Trans Comput Log 18 3 2017 2212239 26 E MuñozVelasco et al Artiﬁcial Intelligence 266 2019 126 20 D Bresolin E MuñozVelasco G Sciavicco Subpropositional fragments interval temporal logic Allens relations Proc 14th European Conference Logics Artiﬁcial Intelligence JELIA Lect Notes Comput Sci vol 8761 Springer 2014 pp 122136 21 Z Chaochen MR Hansen Duration Calculus A Formal Approach RealTime Systems EATCS Monographs Theoretical Computer Science Springer 2004 22 J Chomicki D Toman Temporal logic information systems Logics Databases Information Systems 1998 pp 3170 23 D Della Monica A Montanari G Sciavicco D Tishkovsky First steps automated synthesis tableau systems interval temporal logics Proc 5th International Conference Computational Logics Algebras Programming Tools Benchmarking COMPUTATION TOOLS 2014 pp 3237 24 L Fariñas del Cerro D Fauthoux O Gasquet A Herzig D Longin F Massacci Lotrec generic tableau prover modal description logics Proc 1st International Joint Conference Automated Reasoning IJCAR 2001 pp 453458 25 IP Gent T Walsh The SAT phase transition Proc 11th European Conference Artiﬁcial Intelligence ECAI 1994 pp 105109 26 MC Golumbic R Shamir Complexity algorithms reasoning time graphtheoretic approach J ACM 40 5 1993 11081133 27 V Goranko A Montanari G Sciavicco Propositional interval neighborhood temporal logics J Univers Comput Sci 9 9 2003 11371167 28 J Halpern Y Shoham A propositional modal logic time intervals J ACM 38 4 1991 935962 29 S Klarman Practical querying temporal data OWL 2 QL SQL2011 Proc 19th International Conference Logic Programming Artiﬁcial Intelligence Reasoning LPAR EPiC Series vol 26 Center Artiﬁcial Intelligence Research 2014 pp 5261 30 J Marcinkowski J Michaliszyn The undecidability logic subintervals Fundam Inform 131 2 2014 217240 31 M Marx M Reynolds Undecidability compass logic J Log Comput 9 6 1999 897914 32 A Molinari A Montanari A Murano G Perelli A Peron Checking interval properties computations Acta Inform 53 68 2016 587619 33 A Montanari I PrattHartmann P Sala Decidability logics reﬂexive subinterval superinterval relations ﬁnite linear orders Proc 17th International Symposium Temporal Representation Reasoning TIME IEEE Computer Society 2010 pp 2734 34 A Montanari G Puppis P Sala Maximal decidable fragments Halpern Shohams modal logic intervals Proc 37th International Colloquium Automata Languages Programming Part II ICALP Lect Notes Comput Sci vol 6199 Springer 2010 pp 345356 35 A Montanari G Puppis P Sala A decidable weakening compass logic based coneshaped cardinal directions Log Methods Comput Sci 11 4 2015 36 A Montanari G Puppis P Sala G Sciavicco Decidability interval temporal logic A B B natural numbers Proc 27th Symposium Theoretical Aspects Computer Science STACS Inria Nancy Grand Est Loria 2010 pp 597608 37 A Montanari G Sciavicco N Vitacolonna Decidability interval temporal logics splitframes granularity Proc 8th European Conference Logics Artiﬁcial Intelligence JELIA Lect Notes Artif Intell vol 2424 Springer 2002 pp 259270 38 B Moszkowski Reasoning About Digital Circuits PhD thesis Dept Computer Science Stanford University Stanford CA 1983 39 CM Papadimitriou Computational Complexity AddisonWesley Longman Publishing Co Inc 1994 40 I PrattHartmann Temporal prepositions logic Artif Intell 166 12 2005 136 41 A Schmiedel Temporal terminological logic Proc 8th National Conference Artiﬁcial Intelligence AAAI AAAI Press 1990 pp 640645 42 LJ Stockmeyer AR Meyer Word problems requiring exponential time Preliminary Report Proc 5th Annual ACM Symposium Theory 43 D Tishkovsky RA Schmidt M Khodadadi The tableau prover generator MetTeL2 Proc 13th European Conference Logics Artiﬁcial Computing STOC ACM 1973 pp 19 Intelligence JELIA 2012 pp 492495 44 Y Venema Expressiveness completeness interval tense logic Notre Dame J Form Log 31 4 1990 529547 45 F Zemke Whats new SQL2011 SIGMOD Rec 41 1 2012 6773