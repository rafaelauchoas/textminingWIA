Artiﬁcial Intelligence 175 2011 346377 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Formalising Fishermans Folly puzzle Pedro Cabalar Paulo E Santos b Dept Computación University Corunna Spain b AI Automation Group IAAA Centro Universitário da FEI São Paulo Brazil r t c l e n f o b s t r c t Article history Available online 3 April 2010 Keywords Common sense reasoning Qualitative spatial reasoning Reasoning actions change This paper investigates challenging problem encoding common sense knowledge involved manipulation spatial objects reasoning actions change perspective In particular propose formal solution puzzle composed nontrivial objects holes strings assuming version Situation Calculus written ﬁrstorder Equilibrium Logic models generalise stable model semantics 2010 Elsevier BV All rights reserved 1 Introduction Real life situations deal strings tying objects passing holes appear time time different contexts Examples range tying shoelaces handling ropes sailboat organising cable connections map inside oﬃce building city Although humans amazing intuition solving problems nature formal representation reasoning holes strings relatively unexplored area To understand complexity problem note instance fully detailed mathematical model involved objects assuming rigid feasible computational purposes let consider deformable objects like string Moreover humans typically solutions spatial reasoning problems terms qualitative descriptions instead This fact orientation followed Qualitative Spatial Reasoning QSR 13 ﬁeld attempts logical formalisation spatial knowledge based primitive relations deﬁned elementary spatial entities In general QSR approaches lack formal treatment actions change apart exceptions 45 The formal treatment actions central Reasoning Actions Change RAC community 67 In work formalise spatial domain perspective RAC aiming provide step direction rigorous treatment reasoning actions change qualitative space This work falls logicbased knowledge representation subﬁeld Artiﬁcial Intelligence 89 main goals logical formalisation reasoning processes capable inferring knowledge representations world construction medium pragmatically eﬃcient computation formal representation provides means organise domain knowledge allowing eﬃcient consistent queries updates revisions knowledge base rigorous treatment ontological commitments provide base rules guide reasoning world instance considered effects actions extent ramiﬁcations effects considered assume persistence objects time 10 In particular problem correctly inferring effects noneffects actions received attention AI community heading Frame Problem In nutshell challenge solving Frame Problem ﬁnd compact representation noneffects actions complexity representation order number actions domain number domain elements times actions Much solutions problem related development Corresponding author Email addresses cabalarudces P Cabalar psantosfeiedubr PE Santos 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201004004 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 347 nonmonotonic reasoning formalisms 11 deﬁnition law inertia states actions change properties domain explicitly written 12 Attempts solve Frame Problem stumbled existence multiple possible models sound domain representations counterintuitive exempliﬁed socalled Yale Shooting problem 13 In work tackle formalisation spatial scenario logic built elegant solution Frame Problem ontological commitments exempliﬁed simple solution Yale Shooting scenario presented Section 4 To obtain suitable representation spatial domains containing strings holes adopted following methodology We begin speciﬁc formalisations particular scenarios usually implies abstract simpli ﬁed description level advance general representations cover different domains necessarily implies ﬁnegrained ontology As starting point puzzlelike examples constitute good test bed offer small number objects keeping complexity challenging problem knowledge representation Thus puzzles involving physical objects drosophila1 base line develop AI research In paper starting point work developed 16 presented automated solution classical puzzle called Fishermans Folly introduced The approach taken 16 falls short formal treatment ﬂuents actions problematics surrounding concepts inertia The present paper tackles issues presenting formalisation Fishermans Folly puzzle Equilibrium Logic version Situation Calculus SC Here Situation Calculus 176 provides syntactical tools formalise domain Equilibrium Logic 18 suitable semantics problem identiﬁes minimal models means resemble circumscription 19 20 We shall deal concepts details In context original contributions present work include following novel formalisation Situation Calculus Equilibrium Logic The main advantage formalisation traditional classic logic SC ﬁrstorder encoding predicate extension minimisation providing rigorous solution frame problem classic logic accomplished fragment secondorder calculus ﬁrst logical formalisation scenario composed string rigid objects hosting holes This formalisa tion allows representation string segments creation annihilation depending action evoked It worth mentioning necessity handle fragments objects way brings new challenge Knowledge Representation formalisms paper deﬁne notion connectivity ﬂuent action formalism ﬂuent linked Section 51 issue considered ﬁeld Qualitative Spatial Reasoning 11 The Fishermans Folly puzzle The elements Fishermans Folly puzzle holed post Post ﬁxed wooden base Base string Str ring Ring pair spheres Sphere1 Sphere2 pair disks Disk1 Disk2 The spheres moved string disks ﬁxed string endpoint The string passes posts hole way sphere disk remain post It worth pointing spheres larger posts hole string separated post cutting post string destroying spheres The disks ring contrast pass posts hole In initial state shown Fig 1a post middle ring turn supported posts base The goal puzzle ﬁnd sequence nondestructive transformations applied domain objects frees ring objects regardless ﬁnal conﬁguration Fig 1b shows possible goal state A crucial observation puzzle actually deals holes post hole ring hole sphere holes Note natural language description probably identify holes host objects saying string passes sphere hole post passes ring hole Furthermore talk sliding ring post moving post ring hole We argue complexity imposed possibly inﬁnite states string allied necessity handling void space holes makes spatial puzzles Fishermans Folly rich benchmark domains tackled Common Sense Knowledge Representation standpoint 218 Moreover fact problem involves Reasoning Actions Change Qualitative Spatial Reasoning objects ubiquitous everyday domains number versions puzzles involving strings holes2 Making use analogous puzzles check representation reasoning methods developed puzzle applied variants verifying elaboration tolerance 22 formalisation In paper formalism developed solve Fishermans Folly puzzle solves puzzles Rope Ladder puzzle Fig 2 solution presented Section 7 Tricky Dick puzzle cf Appendix C The way proposed formalism easily applied distinct domains suggests proposed solution tolerant elaborations However claim work developed solve problem involving strings holes 1 Following metaphor 14 15 2 Eg httpwwwpuzzlethiscoukproducts_mad_cowhtm accessed 12102009 348 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 1 The Fishermans Folly puzzle Fig 2 The Rope Ladder puzzle initial state rigid objects For instance formalism capable representing case number rings interlocking symbol Olympic games puzzles string loops knots relevant solution forth At point worth mentioning previous work dealing separately holes strings formal standpoint Reasoning holes holed objects discussed 23 24 formal ontology entities based topological aspects developed In present work assume holes sharing level existence rigid objects reiﬁed individuals involved actions In present paper interested entities engaged actions leaving aside aspects precise ontology A ﬁne grained spatial ontology Fishermans Folly following guidelines proposed 23 presented 25 The problem incorporating knowledge strings string manipulation tackled 2627 robotic capable learning tie knot visual observation proposed called Knot Planning Observation KPO paradigm In KPO state string represented matrix encoding segments deﬁned portion string lies endpoints points crosses Actions ﬂexible objects context deﬁned extension Reidemeister moves knot theory 28 This representa tion suitable identiﬁcation string states vision falls short context problem solving main purpose present paper In contrast work proposed 26 account knots paper Incorporating ideas KPO paradigm work shall investigated future Nonetheless research knot planning reasoning strings holes issues growing community robot assisted needle steering interested 29 This paper organised follows Section 2 presents early solution puzzle order provide intuitions present development Section 3 introduces Equilibrium Logic Situation Calculus theories written Equilibrium Logic developed Section 4 Section 5 presents formalisation Fishermans Folly version Situation Calculus The correctness developed formalism discussed Section 6 Section 7 presents formal solution complex version Fishermans Folly puzzle Section 8 concludes paper Appendices A B C present P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 349 Fig 3 Schematic representation initial state respectively Prolog code planner developed following guide lines presented paper proofs papers propositions formal solution puzzle 2 A simple automated solution Fishermans Folly puzzle The formalisation Fishermans Folly presented paper based simple automated solution puzzle proposed 16 brieﬂy presented section provide intuitions work The simple solution presented 16 relies distinguishing puzzles objects sorts holes includes post hole ring hole holes spheres long objects includes string post regular objects including remainder objects For hole h faces distinguished h long object l tips l deﬁned h l The domain objects represented following constants Disk1 Disk2 left right disks Base repre senting square base Ring Sphere1 Sphere2 PostH representing holed objects Str Post called long objects string nonholed post shall discussed paper For helping reader ﬁgure puzzle state use schematic representations like Fig 3 shows initial state Arrows correspond segments long objects deﬁned pairs hole crossings hole long object l Ellipses represent holes crossing tip These arrows point direction tip l boxes linked regular objects The positive face hole implicitly corresponds visible ellipse tip l Central simple solution deﬁnition list data structure named chain X This data structure repre sents sequence hole crossings long object X traversing X negative tip positive For instance state shown Fig 3 represented following chains chainPost Ring The represents long object Post crosses ring hole chainStr Sphere1 states string crosses hole sphere 1 post hole hole sphere 2 respectively Note brevity outgoing hole faces shown following direction negative positive tip Sphere2 PostH An action pass deﬁned3 represent movements puzzle objects The effects pass add delete hole crossing chain applied Using deﬁnitions solution Fishermans Folly puzzle represented sequence chains shown Fig 4 state identiﬁed sequence number plus pair lists chainPost chainStr order Note State 5 actually reached goal point ring hole Ring occur list crossed long object In 16 present iterative deepening planning manipulates chains order ﬁnd solution puzzle This early approach completely overlooks formal aspects domain This lack formality implies number drawbacks First possibility proving correctness automated solutions obtained available mathematical tools analyse Second proper ontology domain simple chain deﬁnition allow formal deﬁnition Amongst deﬁnitions like theory capture spatial properties objects threedimensional regions including holes Besides spatial properties formalisation spatial puzzle rigorous treatment actions change including indirect effects actions deﬁnition nonexecutable actions eﬃcient representation actions noneffects issues virtually impossible address given early listbased representation In contrast present paper proposes rigorous logical account Fishermans Folly puzzle solution follow logical proof 3 In 16 actions deﬁned representing movement rigid objects movement holed objects As later current paper actions replaced single passing bundle elements hole Fig 4 actually shows solution terms new representation 350 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 4 A formal solution Fishermans puzzle graphical representation Moreover relational nature formalism allows deﬁnition spatial extent objects deﬁned paper shall On theory proposed deﬁned wellknown reasoning actions change formalism carries built complete account problematics surrounding rigorous deﬁnitions dynamic domains 3 Firstorder equilibrium logic There exist alternatives incorporating nonmonotonicity formalism Reasoning Actions Change RAC One possibility Predicate Circumscription 19 deﬁne set auxiliary predicates4 minimise extent particular circumscription policy deciding predicates ﬁxed min imised freely varied deciding parts theory circumscribed parts These decisions proved nontrivial task In fact said area RAC evolved continuous proposal later solution motivating examples showing counterintuitive results inadequate circumscription minimisation policy5 Another possibility formalising action domains recently gained popularity use Logic Program ming LP underlying logical devise particular methodology proposed 35 relies Stable Models semantics 36 The advantages LP 1 default negation provides natural way representing defaults particular inertia law solving frame problem 2 unlike classical material implication program rules provide directional behaviour convenient representing causal effects particular avoiding ramiﬁcation qualiﬁcation problems straightforward way Traditionally work combining Situation Calculus LP stable models semantics pair exceptions 3738 Perhaps main reason need resort ground theory stable models essentially propositional formalism This limitation drastically changed years thanks 4 Many literature like Clipped 30 Abnormal 1331 Occluded 32 Causes 33 Affects 7 5 Consider instance minimal abnormality policy Yale Shooting Problem 13 Ramiﬁcation Problem 34 chronological minimisation Stanford Murder Mystery 31 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 351 logical characterisation stable models terms Equilibrium Logic 39 particular extension ﬁrst order theories Quantiﬁed Equilibrium Logic QEL 40 As result characterisation concept stable model deﬁned theory predicate calculus equality In fact stable models alternatively described secondorder logic operator 41 similar Circumscription In section proceed introduce main deﬁnitions QEL For better understanding crucial bear mind intuitive connection logic programming In follows talking logic programs adopt logical syntax notation replacing usual operators respectively implication conjunction negation In way instance typical logic program rule like pX rX Y qY written formula Rx y Q x P x variables implicitly universally quantiﬁed This interpretation extensible Equilibrium Logic operator informally understood default negation Let L cid6C F P cid7 ﬁrstorder language C set constants F set functions P set predicates Firstorder formulae L built usual way syntax classical predicate calculus As In tuitionistic Calculus formula ϕ actually stand ϕ We write AtomsC P stand set atomic sentences built predicates P constants C Similarly TermsC F denote set ground terms built functions F constants C From formula free variables implicitly assumed preceded universal quantiﬁcations The deﬁnition Equilibrium Logic steps start ﬁrst monotonic intermediate logic deﬁne model selection criterion logic We recall deﬁnition introduced 18 logic quantiﬁed hereandthere static domain decidable equality Herbrand structures referring logic HT short The HT logic intermediate logic It deﬁned terms Intuitionistic Calculus plus axioms cid2 cid3 β α β cid2 α x αx x x αx x αx x y x y x cid12 y cid3 αx x αx DE abbreviation x cid12 y stands x y In particular DE axiom decidable equality states equality predicate behaves classical way satisfying law excluded middle The corresponding semantics HT described follows Deﬁnition 1 HTinterpretation An HT interpretation language L cid6C F P cid7 tuple cid6D σ H T cid7 1 D nonempty set constant names identifying element interpretation universe For simplicity constant universe element 2 σ TermsD C F D assigns constant D term built functions F constants extended set constants C D It satisfy σ d d d D 3 H T sets ground atomic sentences H T AtomsD P Satisfaction formulae recursively deﬁned follows Given interpretation M cid6D σ H T cid7 following statements true M cid16 pt1 tn pσ t1 σ tn H M cid16 t1 t2 σ t1 σ t2 M cid12cid16 M cid16 α β M cid16 α M cid16 β Disjunction analogous M cid16 α β M cid12cid16 α M cid16 β ii cid6D σ T cid7 cid16 α β classical logic M cid16 x αx d D M cid16 αd cid6D σ T cid7 cid16 αd M cid16 x αx d D M cid16 αd We M model theory Γ M satisﬁes formulae Γ An interpretation like cid6D σ T T cid7 said total seen classical interpretation cid6D σ T cid7 In fact easy check Proposition 1 cid6D σ T T cid7 cid16 Γ iff cid6D σ T cid7 cid16 Γ classical logic 352 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Nonmonotonic entailment obtained introducing modelminimisation criterion Let deﬁne following order ing relation interpretations Deﬁnition 2 We interpretation M cid6D σ H T cid7 smaller interpretation Mcid17 cid6D σ H M cid2 Mcid17 H H cid17 cid17 T cid7 writ That comparable M Mcid17 differ H component M cid2 Mcid17 iff H H cid17 As usual write M Mcid17 M cid2 Mcid17 M cid12 Mcid17 H H cid17 The deﬁnition introduces idea minimal models HT logic Deﬁnition 3 Equilibrium model A total model M theory Γ equilibrium model smaller model Mcid17 M Γ Note equilibrium model total form M cid6D σ T T cid7 seen classical interpre tation M cid6D σ T cid7 We Quantiﬁed Equilibrium Logic QEL logic induced equilibrium models A Herbrand HTinterpretation cid6D id H T cid7 D TermsC F σ id id identity relation In rest paper implicitly assume handle Herbrand HT models Herbrand equilibrium models As usual literal atom pt negation pt A logic program conjunction implications α β α body conjunction literals β head disjunction literals variables universally quantiﬁed Proposition 2 From 18 M cid6D σ T T cid7 Herbrand equilibrium model logic program Π iff T stable model possibly inﬁnite ground program gr D Π obtained replacing variables terms D possible ways Although QEL deﬁned arbitrary ﬁrstorder theory use cases fragment QEL ﬁts syntactic class logic program rules Furthermore rest formulae use belong class translated LP direct QEL representation compact readable requires fewer auxiliary predicates When specifying translations theories Γ1 Γ2 strongly equivalent respect signature L written Γ1 L s Γ2 iff theory Γ signature sets equilibrium models Γ1 Γ Γ2 Γ restricted signature L coincide The idea strong equivalence guarantees replacing Γ1 Γ2 vice versa regardless context Γ In 18 shown checking regular equivalence logic Quantiﬁed Here There necessary suﬃcient condition Γ1 L s Γ2 provided Γ1 Γ2 belong signature L Proposition 3 ϕ ψ γ HTequivalent ϕ ψ ϕ γ This proposition states compress program rules like ϕ ψ ϕ γ formula ϕ ψ γ conjunction consequent Proposition 4 ϕ formula ϕ deﬁnition In fact deﬁnition derived operator It asserts negated formula ϕ understood replaced constraint ϕ body Proposition 5 ϕ x y HTequivalent ϕ x cid12 y This proposition saying rule equality head understood constraint rule head negation x y moved antecedent Proposition 6 Let Γ1 theory consisting single formula αx y βx y γ x 1 language L x tuple variables occur free antecedent consequent Then Γ1 L pair formulae s Γ2 Γ2 αx auxx γ x αx βx y auxx auxx fresh auxiliary predicate included L 2 3 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 353 In words proposition6 asserts handle negation existentially quantiﬁed formula rule body introducing new auxiliary predicate For example formula cid2 Personx y cid3 Person y Parentx y Orphanx strongly equivalent Personx auxx Orphanx Personx Person y Parentx y auxx auxx taking intuitive meaning x parent The section develops Situation Calculus Quantiﬁed Equilibrium Logic 4 Situation Calculus theories equilibrium logic We introduce version Situation Calculus essentially maintains standard syntax 176 replaces Predicate Calculus Quantiﬁed Equilibrium Logic underlying logical framework Our formalisation multi sorted We deﬁne ﬁnite set action names Action plus ﬁnite set ﬂuent names Fluent A situation deﬁned usual way constant S0 initial situation term like doa s action s situation turn We use variables sort Situation f f sort Action s s Fluent cid17 cid17 cid17 Notice deal Herbrand models axioms unique names assumption needed However include Domain Closure axioms sorted variables For instance variable ranging sort Action cid5 cid4 A1x1 x1 cid5 cid4 Anxn xn DC Ai action names included Action xi tuple variables cardinality arity Ai Analogous axioms included Fluent sort All ﬂuents functional f x unique value v range possible values denote range f The predicate Holds f x v s represents ﬂuent f x assigned value v range f situation s f considered functional range f In order homogeneous notation Boolean ﬂuent Boolean True False As later especially convenient7 specifying inertia default Since ﬂuent stands function unique value cid2 Holds f x v s cid3 cid2 Holds cid3 f x v cid17 s v v cid17 UV Although Situation Calculus build formulae situation term usually interested describing situations unfeasible occurring actions executed This typically accomplished predicate Possa s point action possible situation s This predicate socalled unfeasibility axioms intuitively describing conditions Possa s false effect axioms Possa s antecedent implication acting condition causal rule applied Note predicate true default want specify action executed explicitly stating cases action performed However Equilibrium Logic predicates false default use predicate Impossa s stating exact opposite performing action impossible situation s A ﬂuent designated default value default f d d range f In order establish effect default value divide sort Fluent disjoint subsets Inert inertial ﬂuents NonInert noninertial ﬂuents events For noninertial ﬂuent f NonInert default f d include axiom cid4 v cid2 v cid12 d Holds f x v s cid3cid5 cid2 Holds cid3 f x d s DV intuitively captures meaning default value situation s In case inertial ﬂuents default ﬂuent value value previous situation inertia assumption cid2 Released cid3cid5 f x s cid2 Impossa s Holds cid4 w f x v s cid2 w cid12 v Holds INE cid3 f x v doa s cid2 Holds f x w doa s cid3 cid3 In words action execution possible Impossa s ﬂuent f x value v previous situation s evidence ﬂuent different value w situation doa s ﬂuent value v remains unchanged doa s The additional condition Released f x s included convenient 6 See recent works 42 43 detailed description technique removing existential quantiﬁers rule bodies 7 Most logic programming formalisations inertia boolean ﬂuents use second negation called strong explicit In sense atom like Holds f x False s seen strong negation f x situation s The advantage representation inertia axiom Boolean nonBoolean ﬂuents 354 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 5 State transition Yale Shooting scenario release given inertial ﬂuent f x following inertia default particular situation s Predicate Released particularly useful forcing ﬂuent f x undeﬁned associated value represent negation following derived predicate cid2 cid3 Deﬁned f x s vHolds cid2 cid3 f x v s 4 As Axiom INE establish default assumption ﬂuent value initial situation S 0 The inertial default f d ﬂuent default value provided case In words f include following version DV cid3cid5 cid3 cid4 v cid2 v cid12 d Holds f x v S0 cid2 Holds f x d S0 DV0 For compact description ﬂuent use notation8 f D R d D ﬂuent domain R range d optional speciﬁcation default value default f d We write ESC Equilibrium Situation Calculus denote multisorted version QEL including set axioms seen section DC UV DV INE DV0 Since spatial theory deal relatively complex representation convenient consider ﬁrst clas sical actions scenario Yale Shooting Scenario 13 better understanding notation semantics It worth pointing solution scenario ESC shows semantics Equilibrium Logic Situ ation Calculus solves Frame Problem rigorous way This solution inherited formalisation Fishermans Folly puzzle developed Example 1 Consider classical Yale Shooting Scenario 13 gun previously loaded order shoot kill turkey Initially gun loaded turkey alive We load gun wait situation shoot The formalisation Example 1 include sorts Action load wait shoot Inert loaded alive ﬂuents range Boolean default value The theory YALE consist ESC plus formulae Holdsloaded True s Impossload s Holdsloaded False s Impossshoot s cid2 cid17 doload s Holds Impossload s s cid2 cid17 doshoot s Holds Impossshoot s s Holdsloaded False S0 Holdsalive True S0 cid3 cid17 loaded True s alive False s cid3 cid17 cid2 Holds loaded False s cid3 cid17 5 6 7 8 9 Proposition 7 Theory YALE unique equilibrium model atoms Holds corresponds state transition Fig 5 Proof See Appendix B cid2 As result following QEL consequence YALE cid3cid3cid3 cid2 cid2 alive False shoot wait doload S0 cid2 Holds suﬃces check Fig 5 Having ESC disposal section formalises Fishermans Folly puzzle Equilibrium Situation Calculus 8 The current formalisation functional ﬂuents default values adapted 44 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 355 5 Formalising puzzle In 16 puzzle entities classiﬁed different sorts regular objects holes actually singleholed objects long objects respectively named Regular Hole Long In Fishermans Folly domain sorts respectively consist Regular Disk1 Disk2 Base Hole Ring Sphere1 Sphere2 PostH Long Str Post 10 Notice notational simplicity identify hole like ring hole host object like Ring The set physical objects simply denoted Object def Regular Hole Long We handle additional derived sorts The sort sets long objects Longset def 2Long specify given object pass hole currently crossed long objects To understand need sort note instance Sphere1 pass ring provided currently crossed Post We assume available set predicates standard meaning note Longset ﬁnite extension predicates provided explicitly requiring axiomatisation Similarly use union operator ﬁxed usual meaning similar way We deﬁne sides hole faces tips long object follows cid6 Face def cid6 Tip def faceh faceh tipx tipx cid7 cid8 cid7 h Hole cid7 cid8 cid7 x Long h tip face new constructors function symbols9 For sake compactness use abbrevia x respectively standing faceh faceh tipx tipx In way instance tions h The predicate Opposite string tips Str assert different hole faces correspond hole Ring faces denoted Ring Ring Str x Opposite cid2 h h cid3 Opposite cid2 h cid3 h 11 Finally deﬁne pair additional ﬁnite derived sorts deal links objects The sort Node def Tip Hole Regular captures possible elements form node link The difference respect Object link node We deﬁne Nodeset def 2Node linking long object x use tips x allow moving bundles linked objects use sort Longset x 51 Spatial predicates ﬂuents We begin deﬁning inertial ﬂuent linked Inert linked Node Node Boolean False meaning selfexplanatory In scenario linked relate tip regular holed object information vary time We prefer maintain ﬂuent static predicate allow future inclusion possible actions change degree connectivity objects Formulae particular Fishermans Folly puzzle conﬁguration labelled FFn For instance initial facts linked puzzle cid2 Holds cid2 linked Str cid3 Disk1 True S0 cid3 cid2 Holds cid2 Holds cid2 Holds linked linked cid2 cid2 cid2 Str Post cid3 cid3 Disk2 PostH cid3 True S0 cid3 True S0 cid3 cid3 linked Post Base True S0 FF1 As declaration linked False default If provide information predicate apart INE axiom DV allows deriving rest false The following axioms ﬂuent linked 9 Remember handle Herbrand models 356 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 cid2 Holds cid2 Holds cid2 Holds linkedx y True s cid3 cid3 linkedx y True s x linked x cid2 cid3 False s cid2 Holds cid2 Holds cid3 linked y x True s cid3 linked y z True s cid3 cid2 Holds linkedx z True s cid3 12 13 14 They respectively assert relation linked commutative transitive tips long object linked10 In principle information pass hole vary time For reason consider static predicate CannotPassx h y represent object x pass hole h currently crossed set long objects y In Fishermans Folly example include following facts CannotPassdisk sphere CannotPassdisk Ring CannotPassBase Ring CannotPassBase PostH CannotPassBase sphere CannotPassPost sphere CannotPassPost PostH CannotPasssphere PostH CannotPass CannotPass CannotPassPostH sphere CannotPassRing sphere sphere Ring Post cid3 cid2 cid2 sphere sphere cid3 cid17 FF2 cid17 disk varying Disk1 Disk2 sphere sphere Sphere1 Sphere2 Note instance circumstance string passed hole Note spheres pass Ring Ring crossed Post In order guarantee constraint following axioms included CannotPassh h y CannotPassx h y y z CannotPassx h z 15 16 respectively stating single holed object h pass x pass h crossed y hold superset y We assert long object x pass hole tips default CannotPassx h y CanPass cid2 xv h y cid3 CannotPass cid2 xv h z cid3 17 CanPass auxiliary predicate assert exceptions rule It worth pointing predicates false default CannotPass negative predicate assuming objects pass holes default Apparently chosen Fishermans Folly scenario actually exist cases objects pass holes words FF2 smaller CanPass predicate However complex scenario case information complete way If advantage representation hypothetical planner ﬁnding optimistic plans tried physical object unfeasible point execution help ﬁnd new fact CannotPassx h y realised In way reﬁning information CannotPass obtained plan actually solves physical problem 52 Crossings segments When representing long object relevant information interested set hole crossings It impor tant notice long object cross hole times different directions especially common long object ﬂexible like string If understand long objects holes threedimensional regions crossing overlapping region hole long object We deﬁne segment maximal continuous portion long object overlapping hole An important assumption long objects For long object x segment x connecting hole crossings 10 In paper disregard handling circular long objects similarly linking negative positive tips long object This possibility left future study P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 357 Our representation domain particular state long object given situation rely concept segment Thus writing formulae require way refer given segment The representation segments long object x segment labels A segment label term uniquely identify segment long object x In textual graphical explanations represent segment x x long object label tip x Intuitively good candidate sort segment labels natural numbers 0 1 2 equivalently Peano like representation 0 s0 ss0 use ordering follow sequence crossings long object In way instance string initial segments Str 0 Disk1 Sphere1 tip x Str 1 Sphere1 PostH Str 2 PostH Sphere2 Str 3 Sphere2 Disk2 An important problem set segments vary time depending actions performed When segments disappear real problem means stop label relevant ﬂuents represent long object state Unfortunately need create new segments included existing segments In way able partition segment new fragments times needed One possibility rational numbers aim11 However order avoid axiomatisation adopt simpler choice We use new Herbrand functions label constructors predi mid1i j mid2i j succi x predi denotes predecessor segment x x succi denotes successor segment x x mid1i j x mid2i j denote pair segments positioned ordering middle x x j We assume exists way assign different label object segment occurring initial situation S0 Let InitLabel ﬁnite set initial labels The sort Label recursively deﬁned l Label iff l InitLabel l forms predi succi mid1i j mid2i j j Label As said represent list segments crossings following chain negative tip x positive x To aim imagine linear graph node segment arc labelled crossing connects segments represented corresponding outgoing hole face Following notation initial situation string Str correspond graph Str 0 Sphere1 Str 1 PostH Str 2 Sphere2 Str 3 The representation graph pair inertial ﬂuents Long Label Label End Long Label Face instance pair facts like cid2 Holds nextStr 0 1 s cid2 Holds cid3 towardsStr 0 Sphere1 cid3 s represent labelled graph edge Str 0 special constant End example HoldsnextStr 3 End S0 Sphere1 Str 1 For convenience segment list point It noticed possible pair x form real object segment situation For instance goal situation long object Post cross hole unique segment labelled case Post 0 Thus instance segments Post 1 Post 2 situation 1 2 possible labels The existence segment x given situation s captured fact atom Holdsnextx z s Holdstowardsx y s true situation segment referenced argument true atom cid3 cid2 Holds nextStr 0 1 S0 The initial situation puzzle represented formula cid2 Holds towardsStr 0 Sphere1 cid2 Holds nextStr 1 2 S0 cid2 Holds nextStr 2 3 S0 cid2 Holds nextStr 3 End S0 cid3 cid2 Holds nextPost 0 1 S0 cid2 Holds nextPost 1 End S0 S0 cid2 Holds cid2 Holds cid3 cid2 Holds cid3 cid3 cid3 cid3 towardsStr 1 PostH towardsStr 2 Sphere2 S0 cid3 cid3 S0 towardsPost 0 Ring cid3 S0 FF3 11 Another possibility explored use existential quantiﬁers surely mean diﬃcult reading longer formulae guarantee segment labels pairwise different 358 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 6 Schematic representation initial state showing long object segments ﬁfth line previous statement post crossing Ring divided segments Post 0 Post 1 We include following axiom check S 0 segment x k preceded different crossings cid2 Holds cid2 Holds j nextx j k S0 nextx k S0 18 cid3 cid3 At point like recall schematic representation introduced Section 2 Fig 3 reproduced Fig 6 convenience Note representation segments x An additional noninertial ﬂuent useful specifying action preconditions readable12 way Long Label Face Its meaning ﬁxed axiom cid2 Holds nextx j s cid3 cid2 Holds towardsx j p s cid3 cid2 Holds fromx p s cid3 19 respectively indicate previous hole crossing given segment x 53 Actions From physical point view solution Fishermans Folly puzzle exclusively described terms actions passing objects holes given direction In principle lead consider action like passx p meaning pass object x hole face p instance passRing PostH Although principle x type Regular Long Hole practice objects relevant passed hole wrt puzzles states For example assume disconnected disk decide pass post hole diﬃcult action effect state representation Generally speaking passing regular object x hole relevant x linked tip long object For reason disregard case x Regular favour passing long object tips instead x Tip Note passing tips disregard passx p long object x Long replaced sequence p The remaining possibility passx p x Hole passx single holed object In fact diﬃcult formalisation case x currently crossed segments long objects p passx p passx p passx Apart individually passing tips holed objects bear mind feature present problem linked objects In puzzle pairs linked elements linking tips regular objects linking tip holed object It diﬃcult imagine scenarios instance Tricky Dick puzzle discussed Appendix C link tips different long objects linked holed objects When elements linked passing hole implies passing individual components We deﬁne concept object bundle maximal set linked objects The noninertial ﬂuent bundle Nodeset Boolean True reﬂect given set objects B forms bundle situation This ﬂuent True default easier specify arbitrary set objects b form bundle Its meaning captured following axioms 12 In fact references additional ﬂuent action preconditions replaced suitable use quantiﬁers P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 359 Fig 7 Movements passing positive tip passx cid2 Holds bundleb False s cid3 cid3 linkedx y False s linkedx y True s bundleb False s cid3 cid2 Holds p cid3 cid2 x b y b Holds cid2 x b y b Holds cid3 bundle False s cid2 Holds 20 21 22 Axiom 20 asserts set b form bundle contains unlinked objects x y Axiom 20 captures bundle maximality bundle b contain object x linked external element y b Finally 22 asserts set bundle Example 2 Axioms bundle 2022 linked 1214 plus initial state linked Fishermans Folly puzzle FF1 default values linked bundle allow deriving facts cid2 Holds cid2cid6 cid8cid3 bundle Str Disk1 True S0 cid3 cid2 Holds cid2 Holds cid2 Holds cid2cid6 cid8cid3 cid3 bundle cid2cid6 Str bundle cid2cid6 Post bundle Post Disk2 Base True S0 cid8cid3 cid3 True S0 cid8cid3 cid3 PostH True S0 bundle formed situation S0 To sum main action form passb p meaning pass bundle b hole face p We ﬁrst unfeasibility axioms conditions impossible perform action passb p given situation To aim deﬁne auxiliary noninertial ﬂuent crossedBy Hole Longset Boolean False axioms cid2 Holds cid2 Holds towardsx hv s cid3 cid2 Holds crossedBy cid3 cid2 cid3 h x True s cid3 cid3 crossedByh True s crossedByh b True s cid2 Holds cid2 Holds crossedByh b True s cid3 23 24 In words crossedBy points long object sets crossing given hole h situation s The unfeasibility conditions speciﬁed follows cid2 Holds cid2 x b Holds bundleb False s Imposs cid3 cid2 cid3 crossedByh True s passb p s cid3 CannotPassx h Imposs cid2 cid3 cid2 b hv cid3 s pass 25 26 Axiom 25 asserts pass set b form bundle Axiom 26 says bundle b pass hole h b contains node13 x currently pass h Let proceed effect axioms causal rules describing effects action To aim effects constraints passing tip holed object inside bundle described separately For instance passing positive tip x face p cid2 cid3 Imposs passb p s x b s cid2 cid17 cid3 passb p s cid2 Holds nextx End s Opposite cid3 cid2 cid3 cid17 p p cid2 Holds cid2 cid3 Holds cid3 cid17 cid2 Holds cid2 Holds fromx p cid3 cid17 s cid3 cid17 nextx succi s cid3 cid2 x succi End s towardsx p s cid2 Released towardsx s cid3 PR 13 To precise modify CannotPass reﬂect set objects pass altogether hole currently crossed set objects needed current puzzles disregarded paper 360 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 8 Movements passing negative tip passx p Axiom PR stands Positive tip Right This axiom asserts x segment add new crossing x passing preceding crossing hole opposite direction p p new segment x succi The analogous movement positive tip Positive tip Left covered cid17 cid2 Imposs passb p s cid3 x b s cid2 cid17 cid3 Opposite passb p s cid2 Holds cid2 Holds towardsx i0 p cid3 cid17 nextx i0 End s cid2 Released nextx i1 s cid3 cid17 cid17 cid2 cid3 cid2 Holds p p cid2 cid3 Holds s nextx i1 End s cid2 Released towardsx i0 s cid3 nextx i0 i1 s cid3 cid3 PL cid17 remove states execute passx crossing segment Fig 7 schematically shows effects movements PR PL p crossing x opposite direction p Analogous axioms included passing tip x cid3 cid2 Passing Negative tip Left stated follows cid3 cid2 cid3 Imposs passb p s x b s passb p s Opposite cid17 cid2 cid17 cid2 Deﬁned cid2 cid2 Holds fromx s cid3 x predi s cid3 cid2 p p Deﬁned nextx s cid2 cid3 cid17 Holds cid2 cid3 cid2 Holds cid3 cid17 x predi p cid3 cid17 fromx p s s NL cid3 ﬁrst segment previous crossings followed crossing p add new Note require Deﬁnednextx s x existing ﬁrst segment predi passing p segment followed crossing End case sole object segment Finally action passing Negative tip long object Right hole represented follows cid17 cid2 Imposs passb p s cid3 x b s cid2 cid17 cid3 cid2 Opposite passb p s cid2 Holds towardsx i0 p s cid2 Released p p Deﬁned cid2 Released cid3 cid3 cid3 cid17 cid2 Holds cid2 cid3 nextx i0 i1 s cid3 fromx i0 s cid3 nextx i0 s NR means x i0 initial segment previous crossing points x i1 face p crossing removed x i1 implicitly ﬁrst segment Fig 8 graphically represents effects NL NR notice ﬁgure symmetrical Fig 7 towardsx i0 s We consider effects passing holed object h hole outgoing face p PostH b pass post hole ring For instance passb Ring words slide ring upwards post hole The execution action affect crossings long object x face hv h Note long object cross hole times different directions Imposs cid2 cid2 passb p s cid3 cid3 h b Opposite cid2 Holds cid2 cid3 cid17 p p cid17 s cid17 s cid2 cid3 Holds fromx i0 p cid2 cid3 Holds cid3 passb p s cid2 Holds cid2 Holds towardsx i0 hv s cid17 nextx i0 mid1i0 i1 s cid2 cid3 Holds x mid1i0 i1 cid2 Holds cid3 x mid2i0 i1 cid2 cid2 cid2 Holds cid3 cid17 hv s cid3 cid17 cid2 Holds cid3 nextx i0 i1 s cid3 towardsx i1 p s towardsx i0 p s cid3 cid17 cid2 Holds cid2 cid3 x mid1i0 i1 mid2i0 i1 s cid3 cid17 1R This ﬁrst movement applicable segment x i0 crosses h x i1 preceded opposite p followed crossing p The effect passb p crossing p cid17 p s i1 s cid2 cid3 x mid2i0 i1 cid3 cid17 cid17 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 361 Fig 9 Movements 1R 1L action passh p list insertion new crossings p h h p This implies creation new segments labelled mid1i0 i1 mid2i0 i1 The opposite movement captured axiom cid17 cid2 Holds towardsx i0 p cid3 cid3 cid17 s passb p s cid2 cid3 Imposs passb p s cid2 cid17 s cid2 Holds cid2 Holds cid2 Holds nextx i2 i3 s cid3 cid17 nextx i0 i3 s nextx i1 i2 s cid2 Released cid2 Released nextx i1 s nextx i2 s cid2 cid3 cid17 p p cid3 cid3 h b Opposite cid2 Holds cid3 cid3 towardsx i1 hv s cid3 nextx i0 i1 s cid2 Holds cid2 Holds cid2 Holds cid2 cid3 Released cid2 Released cid17 towardsx i2 p s cid17 towardsx i0 hv s cid3 towardsx i2 s cid17 towardsx i1 s cid3 hv p p cid3 cid3 1L When sequence crossings p p cid17 p list Movements 1R 1L schematically represented Fig 9 The remaining movements create destroy segments swap crossings opposite face p action passh p implies removing crossings cid2 cid3 cid17 p p Imposs passb p s cid2 cid17 s cid2 Holds cid2 Holds passb p s towardsx i0 hv s cid3 towardsx i0 p s cid3 h b Opposite cid2 Holds cid3 cid2 Holds cid2 Holds cid17 towardsx i1 p s cid3 cid17 towardsx i1 hv s fromx i0 p cid3 cid17 s cid2 Holds cid3 cid3 nextx i0 i1 s cid2 cid2 cid3 cid3 Imposs passb p s cid2 cid17 s cid2 Holds cid2 Holds nextx i1 i2 s towardsx i0 hv s passb p s cid3 h b Opposite cid2 Holds cid3 nextx i0 i1 s cid2 Holds cid17 cid2 Holds cid3 towardsx i1 hv s towardsx i1 p s cid3 cid2 Holds towardsx i0 p cid2 cid3 Holds cid17 cid17 cid3 cid17 s cid3 nextx i2 p s cid2 cid3 cid17 p p cid3 2R 2L The graphical representation movements shown Fig 10 The goal speciﬁed ground situation s satisﬁes formula GOALs cid4 def x v cid2 Holds towardsx Ringv s cid3cid5 entailed scenario description GOALs asserts Ring hole referenced crossing completely free We deﬁne Holes Strings Theory HST set formulae ESC 1126 PR PL NR NL 1L 1R 2L 2R An HST scenario consists axioms HST plus deﬁnition sorts Regular Hole Long domain dependent 362 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 10 Movements 2R 2L action passh p axioms containing conjunction ground atoms predicate CannotPass initial values linked In particular deﬁne Fishermans Folly scenario FOLLY adding HST sorts 10 domain dependent axioms FF1 FF2 FF3 The following proposition shows method labelling new segments works expected Proposition 8 Let M Equilibrium model HST scenario let Ls M cid16 Deﬁnednextx s labels existing segments situation s Then antecedent PR holds M composed label referred consequent succi belong Ls The happens NL new label predi 1R new labels mid1i0 i1 mid2i0 i1 Proof sketch This relies fact establish strict ordering relation labels coincides sequence long object initial situation composed labels satisﬁes predi mid1i j mid2i j j succi cid2 An important observation axioms HST scenario seen logic program rules formali sation Yale Shooting scenario Example 1 Furthermore HST preserves dependence ordering situations predecessor situation s depends successor doa s So similar splitting technique prove following results Proposition 9 Let M equilibrium model HST scenario Then M satisﬁes 18 situation s cid3 cid3 cid2 Holds nextx k s cid2 Holds nextx j k s j In words situation different crossings point long object segment x k Proposition 10 Any HST scenario unique Equilibrium model Proof sketch As YALE carefully look movements checked induce deterministic state transition cid2 In case FOLLY theory consistent unique equilibrium model capturing transition state puzzle The section discusses correspondence formalisation respect model domain based list manipulation We argue model guarantees correctness rigorous account Fishermans Folly puzzle 6 The induced transition operations lists crossings As seen previous formalisation far away typical uses Situation Calculus classical Predicate Calculus replaced FirstOrder Equilibrium Logic underlying logical formalism The use Situation Calculus allows express nontrivial properties providing high degree ﬂexibility elaboration tolerance In way formalisation cope simple modiﬁcations scenario like adding new constraints deﬁning new actions On hand use Equilibrium Logic underlying logical formalism allows inherit typical constructs action representations Answer Set Programming 45 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 363 ASP removing ASP restriction propositional theories As result compact representation inertia INE naturally deal indirect effects like Axiom 19 handle action disqualiﬁcations shown respect predicate Imposs Analogous investigation Yale Shooting Scenario Fig 5 Section 4 study transition induced logical representation This help better understanding behaviour eﬃcient implementation planning algorithm On hand taken account transition elaboration tolerant logical representation instance adequately represent default values inertia indirect effects small elaborations domain drastically affect transition conﬁguration In order transition states problem manifest Yale Shooting scenario ﬂuents Boolean inﬁnite set states furthermore representation hard possibility arbitrarily creating new segments To avoid segments transition representation adopt approach followed previous work 16 brieﬂy introduced Section 2 puzzle state represented ordered list crossings long object Transitions speciﬁed combinations elementary trans formations lists inducing transition simple forwarddriven planner designed We correspondence listbased solution puzzle present formalisation proving correctness planner In section use Greek letters α β γ denote lists adopt usual Prolog list notation The expression α β represents concatenation lists α β Given HST interpretation M situation s deﬁne corresponding state set lists chainx long object x Long The formal deﬁnition chainx terms auxiliary list crx segment labels x This list cr collects crossings follow given long object segment x cf informal deﬁnitions presented Section 2 Deﬁnition 4 Crossing list Given model M HST scenario segment x ground situation s deﬁne list crx s recursively follows cid9 crx s def p crx j s M cid16 Holdsnextx j s Holdstowardsx p s M cid16 Holdsnextx End s The list chainx s appends left right tip x ﬁrst element list obtained crx s x ﬁrst segment x This formally speciﬁed Deﬁnition 5 Chain list Given model M HST scenario long object x ground situation s deﬁne list chainx s chainx s cid5 cid4 x def crx s cid5 cid4 x M cid16 Deﬁnedfromx s Deﬁnednextx s ﬁrst segment label x With rules easy state corresponding initial situation described pair lists cid4 chainStr S0 chainPost S0 Str cid4 Post Sphere1 Ring PostH cid5 Post Sphere2 Str cid5 Now value chainx doa s transition directly computed chains pair simple list transformation operators action type passing tips passt p passing singleholed objects passh p Deﬁnition 6 Operator opTtp Let x long object t tips t xv p face p mation list α chainx caused action passt p written opTtp deﬁned opTtp cid5 y cid12 p cid4 cid4 cid5 cid17 cid17 cid4 β β cid4 x x cid4 α β cid4 y p x cid5 x t x t x α β cid5 β t x p cid5 β t x α p α cid4 x y cid17 x cid4 y x cid5 β y x cid5 p cid5 cid17 β y cid12 p α β denotes concatenation lists α β opposite face The transfor def 27 28 29 30 364 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 It easy conditions 2730 respectively correspond movements PR PL NL NR introduced Section 51 The remaining movements puzzle stated shown Deﬁnition 7 opposite face p Given list crossings α chainz Deﬁnition 7 Operator opHhp Let h hole p face p long object z transformation α caused action passh p written opHhpα recursively deﬁned opHhpα def cid17 x x γ cid4 x p hv p cid7 cid7 γ x p hv α x cid4 α cid7 cid7 γ cid17 α cid7 cid5 cid7 γ cid7 cid7 γ cid4 hv p cid4 hv cid4 y cid5 cid5 cid17 cid5 cid7 cid7 β α cid17 hv p cid4 x g v cid5 cid4 p α α cid2cid4 cid5cid3 cid7 cid7 β cid5 g v g cid12 h γ opHhp cid7 cid4 cid7 β cid17 x cid12 p x hv y cid7 cid2 cid5 cid7 β p γ opHhp cid7 cid3 cid5 cid7 β p β x cid12 p x hv p opHhp cid7 cid2 cid4 cid5 cid7 β cid17 y cid12 p γ opHhp hv y y cid12 p γ opHhp cid3 p β cid17 p γ cid3 y β p cid2 cid2 cid3 y β 31 32 33 34 35 36 After careful reading observed conditions 3336 correspond movements 1R 1L 2R 2L As opH operator processes triples x hv y list central element crossing moved hole h Note movements exhaust possibilities x y target face p opposite face p cases covered 3336 Note element triple ﬁrst element triple This means elementary movements combined shown following example extracted14 similar puzzle explained Section 7 cid17 Example 3 Combined movements Assume list α cid4 H1 Ring H2 Ring H1 Ring H2 cid5 opHRingH2 α computed shown We relevant The result corresponding passRing H2 steps involving change list At step movement applied embracing involved crossings The accumulated result shown second appended list When new crossings appear shown boldface cid4 cid4 H1 Ring H2 Ring H1 cid10 Ring cid11cid12 H2 cid5 cid13 H1 Ring H2 cid10 Ring cid11cid12 H1 2R cid4 H2 cid5 cid13 cid5 Ring cid4 H1 cid10 Ring cid11cid12 H2 cid13 cid5 1R cid4 H2 Ring H2 H1 H2 Ring cid5 cid4 2R H2 H1 Ring H2 Ring H2 H1 H2 Ring cid5 Conjecture 1 Let Γ HST scenario M model Γ x long object s ground situation chainx s deﬁned wrt M Then 1 If M cid16 Imposspasst p s chainx dopasst p s opTtpchainx s 2 If M cid16 Imposspassh p s chainx dopassh p s opHhpchainx s Conjecture 1 shall formally proved future work We built forward planner holestrings Appendix A tries action executions iterative deep ening strategy operators opH opT exclusively considering lists crossings representing state Notice planner point view Fishermans Folly goal consists checking lists crossings contains face like Ringv The planner obtain solution action executions Fig 11 presents ﬁrst solution obtained planner steps shows executed actions intermediate state chain lists15 A graphical representation included 14 List α portion chainStr state s3 Fig 15 15 For sake readability omitted object tips x x respectively occur ﬁrst element list chainx P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 365 Fig 11 A formal solution Fishermans puzzle graphical representation 7 A second puzzle Rope Ladder In section brieﬂy present second strings holes puzzle named Rope Ladder Fig 12 Rope Ladder seen complex variant Fishermans Folly containing sort objects entangled rigid Ushaped object The ring initial state puzzle trapped horizontal edge Ushaped ﬁgure vertical edges holed posts resembles single post Fishermans puzzle The string makes zigzag post hole state S0 Fig 13 crossing hole twice initial state There holed spheres slide string initially lying near tips string tips linked disk The constraints analogous stated previous domain spheres pass postholes ring disks free passage hole isnt crossed object A formalisation Rope Ladder puzzle automated solution analogous developed Fisher mans Folly We case sorts Regular Disk1 Disk2 Hole Ring Sphere1 Sphere2 H1 H2 Long Str Post 37 H1 H2 stand post holes Post represents Ushaped object holes long object sort Instead FF1 FF2 FF3 include domain dependent axioms cid2 Holds cid2 linked Str cid3 Disk1 True S0 cid3 cid2 Holds cid2 Holds linked cid2 cid2 Str linked Post cid3 cid3 Disk2 cid3 H2 True S0 cid3 True S0 cid2 Holds cid2 linked Post cid3 cid3 H1 True S0 RL1 366 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 CannotPassdisk sphere CannotPassdisk Ring Fig 12 The Rope Ladder puzzle initial state CannotPassPost sphere CannotPassPost postH CannotPasssphere postH cannotPass CannotPass CannotPassRing sphere cid17 disk varying Disk1 Disk2 sphere sphere Sphere1 Sphere2 postH H1 H2 sphere Ring Post sphere sphere CannotPasspostH sphere cid3 cid17 cid2 cid3 cid2 cid2 Holds nextStr 0 1 S0 cid3 cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds towardsStr 0 Sphere1 nextStr 1 2 S0 nextStr 2 3 S0 nextStr 3 4 S0 nextStr 4 5 S0 nextStr 5 6 S0 cid3 cid3 cid3 cid3 cid3 cid3 S0 cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid2 Holds cid3 towardsStr 1 H1 towardsStr 2 H2 towardsStr 3 H1 towardsStr 4 H2 S0 S0 S0 cid3 cid3 cid3 cid3 S0 towardsStr 5 Sphere2 cid3 S0 nextStr 6 End S0 cid3 nextPost 0 1 S0 cid2 Holds cid3 nextPost 1 End S0 towardsPost 0 Ring cid3 S0 RL2 RL3 The reduced number changes formalisation Fishermans Folly account Rope Ladder indication formal solution respects Elaboration Tolerance 22 concerns representation different physical conﬁgurations The solution Rope Ladder puzzle sketched Figs 13 14 listbased description states solution shown Fig 15 8 Discussion In work investigated logicbased formalisation domain involves qualitative spatial reasoning nontrivial physical objects strings holes reasoning actions change objects The domain chosen spatial puzzle named Fishermans Folly goal ﬁnd sequence actions applied puzzles objects disentangle ring complex arrangement string rigid objects holes The endeavour formalising Fishermans Folly puzzle line challenges common sense reasoning16 egg cracking problem 4648 logical formalisations motivated McCarthys seminal papers 21 17 From abstract level automated solutions domains obtained simple search state 16 A list challenges Common sense problem page httpwwwformalstanfordeduleoracommonsense accessed 10122009 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 367 Fig 13 Solution Rope Ladder ﬁrst 368 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 Fig 14 Solution Rope Ladder second state S 0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 chainp Ring Ring Ring chainstr Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 Sphere1 H1 H1 H1 H1 H1 H1 H1 Ring H1 H1 H1 H1 H1 H2 H2 Ring Ring H2 H2 Ring H1 Ring H2 H2 H2 H2 H1 H1 H2 H2 Ring Ring H2 H2 H2 H1 Ring H1 H1 H2 H2 Ring Ring H2 H2 Ring H1 Ring Ring H1 H2 H2 Sphere2 Sphere2 H1 H1 Ring Ring H1 Ring H1 H2 Ring Ring Sphere2 H2 H2 Ring Ring H2 Sphere2 Ring H2 Ring H2 H1 H2 Sphere2 H1 H2 H2 Sphere2 H2 H2 H2 Sphere2 H2 Sphere2 H2 H2Ring Sphere2 Ring Ring H2 H2 Sphere2 Sphere2 H2 Ring H2 Sphere2 Ring H2 Sphere2 Ring H2 H2Ring H2 Disk2 H2 Ring actions passStr passH2 Post passSphere2 Ring passRing H2 passSphere2 Ring passRing H2 passRing H1 Ring passH1 Post Ring passH2 Post passSphere2 Ring passRing H2 passSphere2 Ring Fig 15 A formal solution Rope Ladder puzzle P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 369 space resembling automated solutions classical domains 8puzzle 49 However sort solutions carry number implicit hardwired assumptions reasoning domain brought light logical representation An example assumptions present socalled Yale Shooting Scenario 13 simple domain proved elusive problem formalisation commonsense knowledge fact formal descriptions allowed existence counterintuitive models Nevertheless possible hand code correct state transition solution scenario shown Fig 5 However turns solution consequence sound reasoning domain intended model correct logical encoding scenario The problem logic derive intended models possible counterintuitive ones problem motivated development nonmonotonic logics 11 We presented Section 4 formalism solves problem In Sections 5 6 proposed formalism solve Fishermans Folly puzzle solution illustrated listbased model logical reasoning process The connection listbased model logic formalisation puzzle analogous relating statetransition description Yale Shooting Scenario formal description listbased solution Fishermans Folly puzzle carry strong assumptions reasoning domain logical description makes clear In particular logic formalisation puzzle solves problem deﬁning parts list changed incorporating commonsense law inertia stable model semantics underlying formalism developed Another advantage logic direct application state transition problem solving ﬂexibility handling elaborations domain including new transition automaton imply changing completely structure let inclusion indirect effects continuous change instance principle logic allows adding related axioms In fact research equip logic proper tools accomplish robust eﬃcient knowledge representation 7689 In paper follow streamline research tackles solution problems knowledge representation assuming Situation Calculus handling ﬂuents actions Equilibrium Logic correctly dealing nonmonotonicity 18 lingua franca Although approach presented paper solve puzzles distinct complexities situations complex treatment needed For instance current approach diﬃculties representation holed object crossing holed object Instead assume work state hole crossing hole intermediate state exists momentarily state transition complete crossing holds Relaxing restriction matter future investigations Another interesting subject future work relate current formalisation lowerlevel representation based spatial primitives opening questions like creation destruction regions crossings segments deal concept inertia spatial change Clarifying spatial properties puzzles objects strings ﬂexibility providing precise reiﬁcation holes real objects subject current research 25 It worth mentioning importance reasoning strings holes goes pure theoretical embracing application domains cabling reasoning ﬂexible perforated objects needed opti mising spatial arrangements networks cables autonomous maintenance mechanical machines devices extracted damaging surrounding parts But challenging application reasoning strings rely ﬁeld robotic surgery autonomous machines deal plan handle sutures situations involving distinct delicate structures Acknowledgements We like close paper pointing inﬂuence John McCarthys ideas adopted main motivations inspired work This report investigations logical formalisation common sense domain issue ﬁrst proposed McCarthy 21 project later stated philosophical stance 17 Our formalisation developed Situation Calculus Equilibrium Logic The ﬁrst proposed McCarthy 17 novel nonmonotonic formalism generalising stable models surprisingly recently characterised simple modiﬁcation Circumscription ﬁrst proposed McCarthy 19 Thus wouldnt far truth sentence concept paper inspired Johns ideas Paulo Santos acknowledges support FAPESP CNPq Brazil Pedro Cabalar acknowledges support Spanish Ministry MEC project TIN200615455C0302 Xunta Galicia project INCITE08PXIB105159PR We want thank reviewers thorough work useful suggestions helped improve paper Appendix A Planner In section include Prolog source planner The program contain domain dependent data applicable Fishermans Folly similar puzzles like section Rope Ladder The additional data Fishermans Folly scenario omitted easily deduced FF1 FF2 FF3 370 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 The planner contains additional action currently commented cutting link Of course enabling action allows Ring shorter solutions like instance cutting link post base passing Post SORTS objectX longX regularX holeX sign sign oppositeX X oppositeX X tipXV longX signV poleHV holeH signV actionpass_tTP tipTpoleP actionpass_hHGV holeHpoleGV G H actioncutTtipT UNFEASIBILITY crossedBy_H_S crossedByHXXsS memberchainXLS memberH _LcrossedByHXsS imposs1pass_tX_H_ S crossedByHAS cannotPassXHA imposs1pass_tTH_ S memberlinkedTYtrueS cannotPassYHA crossedByHAS imposs1pass_hHH2_ S cannotPassHH2AcrossedByH2AS imposs1cutT S memberlinkedT_falseS imposs2pass_hH_ S memberlinked_HtrueS impossAS imposs1AS imposs2AS EFFECTS replaceS0XVS1 appendPreX_SufS0 appendPreXVSufS1 transS0 cutX V S1 memberlinkedX VYtrueS0 replaceS0linkedX VYfalseS1 transS0 pass_tXVP S1 memberchainXAS0 opTXVPAB replaceS0chainXBS1 trans pass_h__ transchainXAS0 pass_hHP chainXBS1 opHHPAB transS0pass_hHPS1 transFactS0 pass_hHP FactS1 transS0pass_hHPS1 opTX PAG appendBYX A oppositePY appendBX G appendBYPX G opTX PX PBX B opTX PX YBX P1YB oppositePP1 PR PL NL NR opH__ XX opHHP XGVBXD GHopHHP GVBD opHHP XHVYBXPHVP1G oppositePP1 X P1 Y P opHHP YBG 1R opHHP P1HVPB HVG oppositePP1opHHP PBL LPG 1L opHHP XHVPBXPHVG oppositePP1 X P1 opHHP PBL LPG 2R 2L opHHP P1HVYB HVP1G oppositePP1Y PopHHP YBG P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 371 TEMPORAL PROJECTION executeS write_stateS executeSAAs write_stateSnlwriteACTION writeAnl imposs1ASwriteimpossAnlfail transSAS1executeS1As PLANNING DEPTHFIRST ITERATIVE DEEPENING find_planMinDepthMaxDepthSol initialS0iterate_depthMinDepthMaxDepthS0Sol iterate_depthNLimit__NLimitfail iterate_depthNLimitS0Sol writeTrying depth writeNnl get_planNS0Sol M N1 iterate_depthMLimitS0Sol get_plan_NS0SsPlanS0SsPlan is_goalS0nl get_planN_P_lengthPMMNfail get_planNS0SsPlan0Sol actionA check_undo_actionsAPlan0 impossAS0 check_linked_actionS0AS1A2 transS1AS2 violated_constraintS2 get_planNS2S0SsA2Plan0Sol If passed object tip linked hole pass hole check_linked_actionS1pass_tTPS2pass_tTPpass_hHP memberlinkedTHtrueS1holeHtransS1pass_hHPS2 check_linked_actionS1AS1A Reject states repeated crossings hh violated_constraintS memberchain_YLS append_PreXX_SufL opposite_actionpass_tTPpass_tTP1oppositePP1 opposite_actionpass_hXPpass_hXP1oppositePP1 check_undo_actionsAA1_ opposite_actionAA1 check_undo_actions__ write_solutionTP reverseTT1reversePP1 write_statesT1P1 write_states_ write_statesSwrite_stateS write_statesSSsAAs write_stateSwrite_actionAwrite_statesSsAs write_stateSmemberchainXLSwritechainXLnlfail write_state_nl write_actionAwriteACTION writeAnl goal find_plan07Kwrite_solutionK Appendix B Proofs For proving Proposition 7 ﬁrst use properties QEL allow convert YALE equivalent theory syntactic form normal logic program containing function symbols variables This normal program 372 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 transformed inﬁnite ground program inductively split compute transition shown Fig 5 Proof Proposition 3 Proved 50 cid2 Proposition 11 For interpretation cid6D σ H T cid7 formula ϕ cid6D σ H T cid7 cid16 ϕ implies cid6D σ T cid7 cid16 ϕ Proof It easily follows structural induction cid2 Proposition 12 cid6D σ H T cid7 cid16 ϕ equivalent cid6D σ T cid7 cid16 ϕ Proof By simply checking conditions satisfaction HT cid2 Lemma 1 The formula α ψ ϕ ψ ϕ HTtautology Proof For interpretation M cid6D σ H T cid7 prove cid6D σ T cid7 cid16 α M cid16 ψ ϕ implies M cid16 ψ ϕ The ﬁrst condition follows fact α classical tautology Assume M cid16 ψ ϕ This implies cid6D σ T cid7 cid16 ψ ϕ classical logic equivalent cid6D σ T cid7 cid16 ψ ϕ turn equivalent M cid16 ψ ϕ Proposition 12 cid2 Lemma 2 The following formula HTtautology ϕ ϕ cid2 cid3 ψ ϕ ψ ϕ B1 Proof For interpretation M cid6D σ H T cid7 prove cid6D σ T cid7 cid16 B1 M cid16 ϕ ϕ implies M cid16 ψ ϕ ψ ϕ The ﬁrst condition trivial B1 classical tautology To prove second condition assume M satisﬁes ϕ ϕ By Lemma 1 left right direction equivalence ψ ϕ ψ ϕ HTtautology For right left direction clear cid6D σ T cid7 cid16 ψ ϕ ψ ϕ classical tautology Assume M cid16 ψ ϕ By Proposition 12 equivalent cid6D σ T cid7 cid16 ψ ϕ turn equivalent cid6D σ T cid7 cid16 ψ ϕ We remain prove M cid16 ψ implies M cid16 ϕ Assume M cid16 ψ M cid12cid16 ϕ From M cid16 ϕ ϕ conclude M cid16 ϕ By Proposition 12 equivalent cid6D σ T cid7 cid16 ϕ cid6D σ T cid7 cid16 ψ ϕ cid6D σ T cid7 cid12cid16 ψ Proposition 11 implies M cid12cid16 ψ reaching contradiction cid2 Proof Proposition 5 Since DE asserts equality satisﬁes excluded middle x y x y apply Lemma 2 obtain ϕ x y HTequivalent ϕ x cid12 y But Proposition 4 HTequivalent ϕ x cid12 y cid2 Proof Proposition 6 Independently shown 4243 cid2 Proof Proposition 7 Note ﬁrst YALE form logic program excepting use existential quantiﬁer INE DV DV0 use conjunction 8 9 Using propositions Section 3 previous results appendix transform YALE logic program consider Π gr D YALE inﬁnite ground logic program resulting replacing variables terms Herbrand universe D An important observation program split sense Splitting Theorem 51 ground atom Holds Imposs cid17 s indexed situation s depends17 atom indexed doa s Furthermore atoms doa s doa cid12 depend This allows construct inductive proof structure situation terms For instance initial state situation S0 uniquely ﬁxed 9 Then splitting theorem independently compute states doload S0 dowait S0 doshoot S0 considering corresponding ground rules cid17 We implemented 1transition programs lparsesmodels The resulting programs seen Figs 16 17 From execution obtain possible single transitions leading successor states S 0 Fig 5 Then consider situations actions dowait doload S 0 doload doload S0 The complete formal proof actually consist assuming correspondence ﬁgure holds situations terms n actions doan doan1 doa1 S0 applying splitting prove terms n 1 actions Finally note unique state S0 transitions deterministic This shows YALE unique equilibrium model cid2 17 An atom p depends atom q exists rule p occurring head q body P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 373 Equilibrium Situation Calculus ESC domain situationS domain fluentF domain inertialIF domain noninertialNIF domain actionA Types fluents fluentIF fluentNIF We consider 1 transition situations0 situationdoAs0 Unique value UV holdsFSV holdsFSW V W rangeFV rangeFW Inertia INE holdsIFdoAs0V impossAs0 holdsIFs0V releasedIFs0 abIFVAs0 rangeIFV abIFVAs0 holdsIFdoAs0W WV rangeIFV rangeIFW Default values DV holdsNIFSV ab2NIFSV defaultNIFV rangeNIFV ab2NIFSV holdsNIFSW WV rangeNIFV rangeNIFW Default values inertial fluents DV0 holdsIFs0V ab3IFs0V defaultIFV rangeIFV ab3IFs0V holdsIFs0W WV rangeIFV rangeIFW defined predicate definedFS holdsFSV rangeFV Fig 16 Axioms ESC single transition S0 A S 0 represented lparsesmodels program Appendix C A puzzle Tricky Dick The Tricky Dick puzzle designed Richard Earson presented International Puzzle Party London 1999 The puzzle shown Fig 18 consists wooden cylinders different length connected tiny piece string pair metallic rings different diameter large pass small string loop linked small cylinder embracing large cylinder ﬁnally string linked large cylinder crossing small ring linked large ring As puzzles goal removing small ring gets free rest puzzle In order formalise puzzle simplifying assumptions For instance cylinders pass large ring playing puzzle soon discover real role piece small ring Thus sake simplicity consider large ring regular object ignoring hole A second simplifying assumption considering cylinders tiny string links single piece In fact mobility puzzle practically null equivalent single Ushaped wooden piece 374 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 YALE SHOOTING SCENARIO We define sorts fluent values In case Boolean fluents booleantruefalse We define fluents inertialloaded rangeloadedBool booleanBool inertialalive rangealiveBool booleanBool We define set actions actionload actionshoot actionwait Executability axioms impossloadS holdsloadedStrue impossshootS holdsloadedSfalse Effect axioms holdsloadeddoloads0true impossloads0 holdsalivedoshoots0false impossshoots0 holdsloadeddoshoots0false impossshoots0 Initial state generation 1 holdsFs0VAL rangeFVAL 1 hide holdsX1X2X3 Fig 17 YALE represented lparsesmodels program Fig 18 The Tricky Dick puzzle Finally role string loop different way handle longest string Since loop permanently ﬁxed actually seen ﬂexible holed object18 To sum sorts scenario correspond Regular LargeRing Hole Ring Loop Long Str Post C1 Post represents Ushaped object formed cylinders tiny string The initial state puzzle schematically represented situation S0 Fig 19 The domain dependent axioms cid2 Holds cid2 linked Str cid3 Post True S0 cid3 cid2 Holds cid2 Holds linked cid2 cid2 Str linked Post LargeRing cid3 Loop cid3 cid3 True S0 cid3 True S0 TD1 18 In fact directly related topics currently considering immediate future work linking tips string making knot forms string loop handled holed object deﬁne faces pass objects loop P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 375 Fig 19 Solution Tricky Dick 376 state S 0 s1 s2 s3 s4 s5 s6 s7 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 chainPost Loop Loop Ring Loop Loop Ring Loop Ring Loop Ring Ring Loop Loop Ring chainStr Ring Loop Ring Loop Ring Loop Ring Ring Loop Ring Loop Ring Loop Ring Loop Ring Loop Loop Ring Loop Fig 20 A formal solution Tricky Dick puzzle actions passRing Loop Post passStr passRing Loop passLoop Post Str passPost passRing Loop passPost Ring Ring Ring Ring Str cid3 cid2 Holds nextStr 0 S0 1 CannotPassLargeRing Ring CannotPassLargeRing Loop cid2 Holds cid2 Holds cid2 Holds cid2 Holds nextStr 1 S0 End cid3 towardsStr 0 S0 Ring cid2 Holds cid3 nextPost 0 S0 1 nextPost 1 S0 End cid3 cid3 towardsPost 0 S0 Loop cid3 TD2 RL3 The solution shown Figs 19 20 respectively contain graphical representation complete inter mediate states terms chain lists The real interesting feature puzzle state s5 actually feasible real device rigidness post cylinders The real puzzle solution implies combined movement right ring rotated Loop However theeffects combined movement pivoting left simultaneously embracing Post exactly correspond state s6 virtually decompose action ﬁrst passing loop Post passing Post second step cid2 References 1 O Stock Ed Spatial Temporal Reasoning Kluwer Academic 1997 2 AG Cohn SM Hazarika Qualitative spatial representation reasoning An overview Fundamenta Informaticae 46 12 2001 129 3 AG Cohn J Renz Qualitative spatial representation reasoning F van Hermelen V Lifschitz B Porter Eds Handbook Knowledge Repre sentation Elsevier 2008 pp 551596 4 M Souchanski P Santos Reasoning dynamic depth proﬁles Proc 18th European Conference Artiﬁcial Intelligence ECAI IOS 2008 pp 3034 5 M Bhatt S Loke Modelling dynamic spatial systems situation calculus Spatial Cognition Computation 8 12 2008 86130 6 R Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems MIT Press Cambridge MA 2002 7 M Shanahan Solving Frame Problem A Mathematical Investigation Common Sense Law Inertia MIT Press Cambridge MA 1997 8 E Davis Representations Commonsense Knowledge Morgan Kaufmann 1990 9 F van Harmelen V Lifschitz B Porter Eds Handbook Knowledge Representation Foundations Artiﬁcial Intelligence Elsevier Science 2007 10 R Davis H Shrobe P Szolovits What knowledge representation AI Magazine 14 1 1993 1733 11 G Brewka Nonmonotonic Reasoning Logical Foundations Commonsense Cambridge University Press 1991 12 M Shanahan The frame problem EN Zalta Ed The Stanford Encyclopedia Philosophy Fall 2008 httpplatostanfordeduarchivesfall2008 entriesframeproblem 13 S Hanks D McDermott Nonmonotonic logic temporal projection Artiﬁcial Intelligence 33 3 1987 379412 14 H Simon J Schaeffer The game chess H Aumann Ed Handbook Game Theory Economic Applications vol 1 NorthHolland 1992 pp 117 15 J McCarthy AI sport Science 276 5318 1997 15181519 16 P Cabalar P Santos Strings holes exercise spatial reasoning 10th Iberoamerican Conference AI IBERAMIA06 Lecture Notes Artiﬁcial Intelligence vol 4140 2006 pp 419429 17 J McCarthy P Hayes Some philosophical problems standpoint artiﬁcial intelligence Machine Intelligence Journal 4 1969 463512 18 D Pearce A Valverde Quantiﬁed equilibrium logic ﬁrst order logic hereandthere Tech Rep MA0602 University Málaga Spain 2006 19 J McCarthy Circumscription A form nonmonotonic reasoning Artiﬁcial Intelligence 13 1980 2739 20 V Lifschitz Circumscription DM Gabbay CJ Hogger JA Robinson Eds The Handbook Logic Artiﬁcial Intelligence Logic Programming vol 3 Oxford University Press 1994 pp 297352 21 J McCarthy Programs common sense Proc Teddington Conference Mechanization Thought Processes 1959 pp 7591 22 J McCarthy Elaboration tolerance httpwwwformalstanfordedujmcelaborationps 1999 23 AC Varzi Reasoning space The hole story Logic Logical Philosophy 4 1996 339 24 R Casati AC Varzi Parts Places MIT Press 1999 25 P Santos P Cabalar Playing puzzle mereotopology Spatial Cognition Computation 8 12 2008 4764 26 T Morita J Takamatsu K Ogawara H Kimura K Ikeuchi Knot planning observation Proc IEEE ICRA 2003 pp 38873892 27 J Takamatsu T Morita K Ogawara H Kimura K Ikeuchi Representation knottying tasks IEEE Transactions Robotics 22 1 2006 6578 28 K Reidemeister Knot Theory BCS Associates 1983 29 N Abolhassani R Patel M Moallem Needle insertion soft tissue A survey Medical Engineering Physics 29 4 2007 413431 30 R Kowalski M Sergot A logicbased calculus events New Generation Computing 4 1986 6795 31 AB Baker A simple solution Yale shooting problem Proc Intl Conf Knowledge Representation Reasoning 1989 pp 1120 32 E Sandewall Features Fluents A Systematic Approach Representation Knowledge Dynamical Systems Oxford University Press 1994 P Cabalar PE Santos Artiﬁcial Intelligence 175 2011 346377 377 33 F Lin Embracing causality specifying indirect effects actions CS Mellish Ed Proc Intl Joint Conf Artiﬁcial Intelligence IJCAI Morgan Kaufmann Montreal Canada 1995 34 M Thielscher Ramiﬁcation causality Artiﬁcial Intelligence Journal 12 89 1997 317364 35 M Gelfond V Lifschitz Representing action change logic programs Journal Logic Programming 17 1993 301321 36 M Gelfond V Lifschitz The stable models semantics logic programming Proc 5th Intl Conf Logic Programming 1988 pp 10701080 37 C Baral Embedding revision programs logic programming situation calculus Journal Logic Programming 30 1 1997 8397 38 H Turner Representing actions logic programs default theories A situation calculus approach Journal Logic Programming 31 1997 245298 39 D Pearce A new logical characterisation stable models answer sets Nonmonotonic Extensions Logic Programming Proc NMELP96 LNAI vol 1216 SpringerVerlag 1996 40 D Pearce A Valverde Towards ﬁrst order equilibrium logic nonmonotonic reasoning Proc 9th European Conf Logics AI JELIA04 2004 pp 147160 41 P Ferraris J Lee V Lifschitz A new perspective stable models Proc International Joint Conference Artiﬁcial Intelligence IJCAI07 2007 pp 372379 42 P Cabalar Existential quantiﬁers rule body Proc 23rd Workshop Constraint Logic Programming WLP09 2009 43 J Lee R Palla System F2LP computing answer sets ﬁrstorder formulas Proc 10th Intl Conf Logic Programming Nonmonotonic Reasoning LPNMR09 Lecture Notes Computer Science vol 5753 Springer 2009 pp 515521 44 P Cabalar D Lorenzo Logic programs functions default values 9th European Conference Logics Artiﬁcial Intelligence JELIA04 Lisbon Portugal LNAI vol 3229 2004 pp 294306 45 V Lifschitz Answer set programming plan generation Artiﬁcial Intelligence 138 2002 3954 46 M Shanahan An attempt formalise nontrivial benchmark problem common sense reasoning Artiﬁcial Intelligence 153 12 2001 141165 47 L Morgenstern Midsized axiomatizations commonsense problems A case study egg cracking Studia Logica 67 3 2001 333384 48 V Lifschitz Cracking egg An exercise commonsense reasoning Proc Symposium Logical Formalizations Commonsense Reasoning 1998 49 S Russell P Norvig Artiﬁcial Intelligence A Modern Approach PrenticeHall 2003 50 V Lifschitz LR Tang H Turner Nested expressions logic programs Annals Mathematics Artiﬁcial Intelligence 25 1999 369389 51 V Lifschitz H Turner Splitting logic program International Conference Logic Programming 1994 pp 2337