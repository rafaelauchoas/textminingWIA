Artiﬁcial Intelligence 262 2018 248278 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Algorithms electric vehicle scheduling largescale mobilityondemand schemes Emmanouil S Rigas Aristotle University Thessaloniki 54124 Thessaloniki Greece b Electronics Computer Science University Southampton Southampton SO17 1BJ UK Sarvapali D Ramchurn b Nick Bassiliades r t c l e n f o b s t r c t Article history Received 17 July 2016 Received revised form 14 February 2018 Accepted 10 June 2018 Available online 18 June 2018 Keywords Mixed integer programming Heuristic search Local search Maxﬂow Electric vehicles Shared vehicles Mobility demand We study setting Electric Vehicles EVs hired drive pickup dropoff points MobilityonDemand MoD scheme The goal maximize number customers serviced total EV utilization To characterise optimisation problem maxﬂow problem order determine set feasible trips given available EVs location We model solve EVtotrip scheduling problem oﬄine optimally Mixed Integer Programming MIP techniques solution scales medium sized problems Given develop nonoptimal algorithms incrementalMIP algorithm medium large problems greedy heuristic algorithm large problems Moreover develop tabu searchbased local search technique improve compare solution nonoptimal algorithms We study performance algorithms settings battery swap battery charge station cope EVs limited driving range Moreover settings EVs need scheduled online propose novel algorithm accounts uncertainty future trip requests All algorithms empirically evaluated real world data locations shared vehicle pickup dropoff stations In experiments observe EVs carry battery large longest trips greedy algorithm battery swap maxﬂow solution preprocessing step provides optimal solution At time greedy algorithm battery charge close optimal 97 average improved local search When EVs large battery execute longest trips incrementalMIP generates solutions slightly better greedy optimal algorithm best scales medium sized problems Moreover online algorithm shown average 90 optimal Finally greedy algorithm scales 10times tasks incrementalMIP 1000times static MIP reasonable time 2018 Elsevier BV All rights reserved 1 Introduction In world 60 total population living cities current personal transportation model sustainable based entirely privately owned internal combustion engine vehicles These Corresponding author Email addresses erigascsdauthgr ES Rigas sdr1sotonacuk SD Ramchurn nbassilicsdauthgr N Bassiliades httpsdoiorg101016jartint201806006 00043702 2018 Elsevier BV All rights reserved ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 249 vehicles cause high pollution air sound face low utilization rates1 52 Electric Vehicles EVs eﬃcient alternative internal combustion engines comes running costs 17 environmental impact quality driving However advantages come tradeoff EVs short ranges long charging times To address issues cities typically resort building large number charging stations fast chargers battery swapping capabilities Now facilities worth building EVs use However drivers buy EVs charging stations ﬁrst available leading catch22 situation In order increase vehicle utilization MobilityonDemand MoD schemes advocated 30 MoD involves vehicles individuals small groups commuters providing alternative privately owned vehicles Such systems potential reduce traﬃc congestion urban areas need large numbers parking spots2 By MoD aims achieve considerably higher vehicle utilization rates compared individually owned ones vehicles cover transportation needs commuters Moreover advantages include fact car ownership reduced upfront charges means lowincome people better served Given beneﬁts EVs MoD schemes paper explore scenarios EVs MoD schemes consider associated optimisation challenges By addressing challenges advantages transportation modes combined 3010 Moreover use EVs MoD schemes offer opportunity market EVs potential car owners try technology buying In way EVequipped MoD schemes help popularise EVs time having positive impact urban traﬃc conditions environment To date number MoD schemes ZipCar3 CarShare4 proposed albeit normal cars However EVs present new challenges MoD schemes For example EVs limited range requires charge regularly battery swapped stop Moreover MoD schemes popular important ensure chargingswap capacity managed scheduled allow maximum number consumer requests serviced large geographical area In addition order MoD schemes economically sustainable given higher cost buying EVs compared conventional vehicles important working maximum capacity servicing maximum number customers clock Against background model MoD scheme EVs develop number algorithms solve problem scheduling trips MoD consumers order maximize number trip requests serviced coping limited range EVs These algorithms attempt deal computational complexity scheduling problem number contexts online vs oﬄine battery swap battery charge smallsized large problems Thus ﬁrst recast scheduling problem maxﬂow problem solution lets determine upper limit trip requests able executed given set available EVs Then scheduling trips MoD scheme highly combinatorial problem optimal oﬄine solution demand known advance scales medium sized problems tens EVs hundreds trips Thus cope large problems develop nearoptimal oﬄine solutions incremental MIP greedy heuristic tabu searchbased local search technique improve solution quality nonoptimal algorithms Moreover tackle online version problem demand known advance develop online scheduling algorithm In cases given limited range EVs consider situations battery swapped fully charged charged stations The work presented initiated 38 basic versions MIP greedy algorithms battery swapping Speciﬁcally paper advances state art follows 1 We provide characterisation MoD scheme maxﬂow problem By solving problem able determine set feasible trips given set available EVs 2 We propose optimal Mixed Integer Programming MIP formulation problem scheduling EVs MoD scheme maximizes number completed tasks trip requests consumers EV utilization number time points EV travelling battery swap battery charging station 3 Given average scalability optimal solution develop incrementalMIP greedy heuristic algorithm shown generate nearoptimal solutions considerably lower execution times 4 We propose tabu searchbased local search technique order improve solution quality non optimal algorithms 5 We propose battery swap optimization algorithm minimizes number necessary battery swaps order reduce need spare batteries cost 1 EVs energy storage devices driven In way renewable energy utilization increase Thus EVs domain word utilization refers driving use energy storage devices 2 Demand travel reduced However fact multiple users end cars means fewer cars road congestion indirectly improve congestion reduce number cars parked sides roads Such parked cars create congestion 3 httpwwwzipcarcom 4 httpwwwenterprisecarshare com 250 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 6 We propose online algorithm scheduling EV trips MoD cope uncertainty number future trip requests 7 Finally realworld data shared vehicle stations Washington DC observe EVs carry battery large longest trips greedy algorithm battery swap combination max ﬂow provides optimal solution At time variation battery charge 97 optimal local search 985 local search Moreover case EVs large battery execute longest trips observe greedy algorithm provide optimal solution anymore incremental MIP correct choice generates solution 05 better greedy lower execution time optimal algorithm best scales medium sized problems Moreover objective maximization EV utilization utilization increases 36 number completed tasks reduces 15 average In addition online algorithm 90 optimal In terms scalability greedy algorithm local search scales 10times tasks incremental MIP 1000times static MIP reasonable time When taken algorithms results establish ﬁrst benchmarks study EV scheduling algorithms MoD schemes The rest paper structured follows Section 2 discusses related work Section 3 presents model typical MoD scheme Section 4 presents formulation problem max ﬂow Section 5 presents MIP formulation problem battery swap Section 51 battery charge Section 52 incremental MIP scheduling algorithm Section 53 greedy algorithm battery swap Section 54 battery charge Section 55 local search algorithm Section 56 battery swap optimization algorithm Section 57 Moreover Section 6 presents online scheduling algorithm Section 7 describes empirical evaluation Finally Section 8 concludes presents future work 2 Related work In problem study paper set locations act pickup dropoff stations number EVs available station Tasks trip requests speciﬁc point time collected MoD company assignment EVs tasks calculated EV relocation supported end location executed task start location After execution task EVs battery replaced fully charged charged In section related work terms problem structure problem domain application presented 21 Vehicle routing scheduling problems Our work shares similarities vehicle routing scheduling problems bike sharing rolling stock aircraft scheduling rental car scheduling ride sharing For example Raviv et al 36 present algorithms eﬃcient repositioning bikes order maximize customer satisfaction bike sharing Agatz et al 1 summarize number optimization techniques problem ride sharing Bistaffa et al 7 apply coalition formation techniques order calculate stable gametheoretic point view payments ride sharing setting Moreover Budai et al 9 present optimal algorithm problem rolling stock balancing Bayen et al 5 use MIP order optimally solve aircraft scheduling problem Between works general similarities fact optimization techniques greedy approaches nature problem particular need charging battery swapping task execution makes different In addition similarities problems capacitated vehicle routing problem 14 special case Vehicle Routing Problem 15 vehicle limited carrying capacity project scheduling problem 51 machine scheduling problem 28 Regarding capacitated vehicle routing problem case similar extent EV limited capacity EVs necessarily serve customers task executed speciﬁc point time EVs limited range leading charging battery swapping necessary tasks As far project scheduling problem concerned EV execute task right location right time range battery These considered skills EV project scheduling problem skills However contrast project scheduling problem exactly EV execute task starting time duration task ﬁxed depend EV execute Finally machine scheduling problem problem similar structure example EVs assumed identical executing task time task executed EV The main difference execution task start speciﬁc time point execution task EV available execute task charges swaps battery Overall need battery charging swapping strict order task execution differentiate problem compared aforementioned ones harder ﬁnd optimal solution ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 251 22 MoD conventional vehicles To date number works dealt problems related management vehicles MoD schemes For example Pavone et al 33 study setting similar ﬁnite number customers vehicles pickup dropoff stations exist Due fact cases unbalanced high number vehicles stations low authors apply robotic rebalancing techniques In assume robotic vehicles autonomously driven stations order match high demand The authors apply mathematical programmingbased techniques minimize number necessary rebalancing trips In addition Smith et al 45 study problem instead robotic vehicles authors assume rebalancing drivers exist In empirical studies occasions rebalancing drivers unbalanced In order solve problem assume customers transport rebalancing drivers locations use mathematical programming optimally route stations In slightly different vein robotic autonomous driving vehicles exist Zhang et al 46 model MoD closed Jackson network 44 passenger loss They optimal algorithm minimizes number vehicles needing rebalancing achieving good vehicle availability network solving linear program The authors evaluate verify effectiveness approach realistic setting discuss environmental beneﬁts approaches lead reduced need vehicles In contrast papers use aposteriori rebalancing techniques Instead decision making procedure selection trips executed takes account proper distribution EVs locations In taken consideration insights 6 authors leaving tasks unexecuted certain time point lead higher task execution future Looking vehicle sharing problem different perspective Carpenter et al 12 focus problem sizing vehicle pools number vehicles single location ﬁnite set customers The authors aim minimize size pools achieving high customer satisfaction They propose analytical techniques size vehicle pool ﬁnite population customers according pools busy period demand Moreover propose additional heuristic sizing method requires prior data pool demand In vein George et al 22 address problem determining optimal ﬂeet size vehicle sharing company derive analytical results relationship vehicle availability station companys network locations Initially formulate closed queuing network model later develop proﬁtmaximizing optimization problem determining optimal ﬂeet size Similarly Waserhole et al 55 formulate setting closed queuing network model inﬁnite buffer capacity Markovian demands However case authors use pricing techniques incentivise customers choose trips unbalance In case study optimal number vehicles stations considered case initial location ﬁxed number vehicles optimized order maximize customer satisfaction Section 72 In works presented far internal combustion enginebased vehicles assumed account limited range EVs Thus balancing load number pending requests network network choosing trips execute serving time maximum number users time spent charging vehicles taken account 23 Techniques management EVs MoD schemes In recent years signiﬁcant research community addressing challenges involved deploying EVs In vein signiﬁcant number AIbased approaches solve EVrelated problems proposed According 37 majority existing works consider main problem categories 1 Energy eﬃcient EV routing range maximization algorithms mechanisms developed route EVs order minimize energy loss maximize energy harvested5 trip 41 47 48 2 Congestion management algorithms designed manage control charging EVs minimize queues charging points discomfort drivers 34 16 49 3 Integration EVs Smart Grid number mechanisms developed schedule control charging EVs Grid Vehicle G2V peaks possible overloads electricity network avoided minimizing charging cost Other mechanisms developed utilize storage capacity EVs Vehicle Grid V2G order balance electricity demand ease integration intermittent renewable energy sources grid 54 53 50 29 39 40 Although AI techniques applied EVrelated problems privately owned vehicles limited work consid ered management EV activities MoD scheme For example Cepolina Farina 13 study use singlesitter compactsized EVs MoD scheme operating pedestrian zone The vehicles shared day different users similarly majority works presented far way trips assumed However authors assume open ended reservation exist dropoff time ﬁxed adding dimension problem Given propose methodology optimize ﬂeet size distribution stations 5 EVs ability convert heat produced braking electricity recharge batteries 252 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 maximize number serviced customers minimizing cost random search algorithm Finally Doppers Iwanowski 18 aim map EVs customers based set criteria priority mobility needs state battery EV charging time In model problem assigning EVs tasks MoD scheme known quadratic assignment problem 27 solve problem antcolony optimization algorithm In case criterion selecting trips execute maximization total number serviced customers maximization EV utilization However contrast works study settings different EV charging approaches considering traditional charging battery swapping Next formally deﬁne problem 3 Problem deﬁnition We study MoD setting customers announce intentions drive pairs locations particular time day ahead After intentions collected MoD company6 applies scheduling algorithm assign EVs tasks trips set locations In choosing tasks execute MoD company aims maximize number customers serviced utilization EVs We assume EVs limited driving range requires battery swapped 48 charged stations MoD scheme In battery swap station battery recharged instead replaced fully charged Battery swap eﬃcient alternative battery recharging signiﬁcantly reduces idle time EVs Battery swapping privately owned vehicles raises problem battery ownership EV unloads battery battery However cases shared EVs study issue single MoD company exists batteries belong Moreover MoD schemes overcome high cost implementation complexity battery swapping advantage economies scale speciﬁc battery type EVs assume EVs model Thus process battery swapping easier expensive kend t start τi bicid6 kstart travel time task end time tend We denote j A set EVs k L set locations pickup dropoff stations k L maximum capacity ck N We consider set discrete time points T N t T time global EVs Moreover set tasks cid2 task denoted tuple cid5kstart starting time τi bi energy cost task We task τi denote tasks starting location k time point t cid2st t k cid2 t start k tasks ending t kstart location k time point t cid2endt k cid2 tend k Note oneway rental assumed start end locations task different7 Oneway rental introduces signiﬁcant ﬂexibility users management complexities complex decision making choosing customers service high importance initial location EVs 4 start end locations task t start t start t kend kend Each EV j current location time point t denoted k jt location changes EV executes task EV change location executing task Here assume time point t 0 EVs L initial location ﬁxed optimized run time operation initial locations kinitial jt0 starts time point t 1 Moreover j current battery level bt j N maximum range τ max ﬁxed consumption rate j unit energytime point remaining driving range terms time τt j bt jcon j N ﬁxed charging rate ch j For task accomplished EV j location kstart time point t start At t EV parked exactly location travelling exactly pair locations Henceforth index j stands EVs k locations t time points tasks Table 1 Where required simplify explanation slightly abuse notation denote quantities dependent functions τt j independent identiﬁed solely indices j j In paper mainly study oﬄine setting propose preliminary solution online setting based insights oﬄine In following section present formulation problem maxﬂow 4 Formulation maximum ﬂow problem In section formulate EV task allocation problem maxﬂow problem 24 solve MIP By approach aim remove tasks impossible executed reducing execution time increasing solution quality scheduling algorithms presented following section All pick drop locations considered nodes network execution tasks ﬂow node The initial location EV source node end location EV sink node In case sources sinks Thus multisource multisink maximum ﬂow problem transformed maximum ﬂow 6 We assume single MoD company operate stations setting Note having multiple companies induce interesting strategic decision making challenges aim study future 7 We assume customers drive cars start end locations stopping parking trip In case user like set start end location task equivalent adding speciﬁc travel times trip opposed computing travel time pairs charging locations ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 253 Table 1 Notations problem deﬁnition algorithms Notation Explanation j k ck t kstart kend t start tend τi bi τ max j bt j j ch j τt j prk jtk cid4 jit λi bch jt EV Location Capacity k Time point Task Start location task End location tasks Starting time point task Ending time point task Travel time task Battery cost task Maximum range EV j Battery level EV j time point t Consumption rate EV j Maximum charging rate EV j Driving range terms time True EV j parked location k time t boolean True EV j working task time t boolean Task accomplished boolean Charging rate EV j time point t problem follows Given network N V E set sources S s1 sn set sinks T t1 tm instead single source sink node ﬁnd maximum ﬂow N We transform multisource multisink problem maximum ﬂow problem adding consolidated source connecting vertex S consolidated sink connected vertex T known supersource supersink inﬁnite capacity edge In formulation decision variable λi 0 1 denoting task accomplished objective maximization executed tasks Equation 1 Alternatively utilization EVs total travelling time maximized Equation 2 This achieved constraint location inﬂow greater equal outﬂow Equation 3 Given EV changes location executing task location k time point t number tasks started k time point prior t equal tasks ended k time point prior t plus EVs initial location equal k task executed existence EV cid2 max λi icid2 cid2 λi τi max icid2 cid2 icid2tstart tkstart λi k cid2 cid2 λi 1 t k 1 2 3 icid2tend tkend k j Akinit j k dep The outcome procedure set tasks executed assuming battery swap EVs start battery level b fully charged battery capable executing longest trip In fact b hold max ﬂow algorithm returns optimal solution terms number completed tasks This easily veriﬁed given following reasons task source location kstart Moreover ﬁxed time departure t ﬁxed duration τi In max ﬂow algorithm duration task contains time battery swap Given EVs carry battery fully charged beginning task EV execute task Thus task executed EV exists kstart time point dep Equation 3 assures task considered executed EVs exist source location task t time departure Thus given objective function Equation 1 Equation 2 solver select execute tasks lead maximization total number completed tasks EV utilization respectively In case b hold max ﬂow algorithm provide theoretical upper limit terms completed tasks This true fact algorithm assumes EVs capabilities Thus EV assigned task actually execute task possibly future ones executed The holds case battery charging charging takes longer time compared battery swapping We refer algorithm MaxFlow destination kend In case initial location EVs given input optimized formulation updated follows One decision variable init Loc jk 0 1 denoting location k initial location EV j added Moreover Equation 4 constrains EV exactly initial location added 254 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 formulation Equation 3 updated predeﬁned decision variable Equation 5 We refer algorithm MaxFlowInit cid2 init Loc jk 1 j kL cid2 icid2tstart tkstart λi k cid2 cid2 λi cid2 init Loc jk t k 4 5 icid2tend tkend k j A kL The max ﬂow algorithm calculates optimal set tasks executed However task execution schedule EV calculated Thus algorithm preprocessing step order determine tasks executed Then scheduling algorithms described following section order calculate task execution schedule EV As seen Sections 71 72 improves scalability optimal scheduling algorithm solution quality greedy 5 Oﬄine scheduling algorithms MoD schemes In section tackle problem deﬁned Sections 3 4 particular context demand trips station known advance We term problem oﬄine problem algorithm run predetermine trips day ahead In Section 51 present MIP formulation problem battery swap Section 52 battery charge Then Section 53 incremental MIP scheduling algorithm Section 54 greedy algorithm battery swap Section 55 battery charge Finally Section 57 present battery swap optimization algorithm 51 Optimal scheduling battery swap The aim MoD scheme maximize number tasks completed aka customer satisfac tion Equation 6 total number time points EVs travelling aka EV utilization Equation 7 objective functions alternately To achieve present optimal solution based Mixed Integer Programming MIP8 solved IBM ILOG CPLEX 1262 use battery swapping cope EVs limited range MIP techniques particularly useful solve large combinatorial problems combinatorial auctions 42 3 travelling salesman problem 19 Also solution benchmark customized algo rithms paper Section 56 Section 6 We refer algorithm OffOptSwap Note case max ﬂow algorithm returns optimal set tasks executed algorithm simply calculates EV task execution schedule However max ﬂow returns upper limit terms executed tasks algorithm decides tasks actually executed In deﬁne binary decision variables 1 λi 0 1 denot ing task accomplished 2 cid4 jit 0 1 denoting EV j executing task time t 3 prk jtk 0 1 denoting j parked time point t location k Moreover set constraints Objective functions cid2 max max λi cid2 icid2 cid2 cid2 cid4 jit j A icid2 tT Subject Completion constraints cid2 cid2 cid4 jit τi λi j A cid2 tstart ttend cid2 j A tttend tstart cid4 jit 0 cid2 cid4 jit1 cid4 jit j t t start cid4 jit τtstart j j t tend 6 7 8 9 10 11 1 tstart ttend 8 Other optimization techniques applied However aim paper study different optimization techniques establish ﬁrst benchmarks problem previously solved Temporal spatial routing constraints ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 cid2 kL 2 cid2 prk jtk 1 cid2 cid4 jit j t cid2 icid2 cid2 cid4 jitstart icid2 prk jtstart prk jtend cid2 tT kL cid4 jitstart j 1kstart cid4 jitend kend j prk jtk ck k t cid3 cid3prk jt1k prk jtk cid3 cid3 j j A prk jt0k kinit cid4 jit0 0 j j k Cut constraints cid2 j A prk jtk cid2 j A prk jt1k cid2 λi cid2 λi t k cid2st tk cid2endtk 255 12 13 14 15 16 17 18 19 The completion constraints ensure proper execution tasks Thus executed task time travelled equal duration trip concerned9 Equation 8 time travelling place task executed Equation 9 Moreover task executed EV time Equation 10 Equation 13 Now EV execute task range calculated based battery level starting time task violated Equation 11 case trip requests range single battery load solver schedule We assume EVs ﬁxed average consumption time EV reaches parking station fully charged battery swapped number swaps minimized posteriori Section 57 presents battery swap minimization algorithm The temporal spatial routing constraints ensure proper placement EVs time Equation 12 requires time point EV executing task EV parked location assures Equation 10 time point EV executes task Moreover Equation 13 ensures EV changes location executing task sum changes EVs locations denoted prk decision variable double total number tasks executed Note constraint linearized run time CPLEX10 Now task executed EV execute task tasks starting location time point task begins Equation 14 similarly task executed EV executed task tasks end location time point task ends Equation 15 Moreover time point maximum capacity location violated Equation 16 Finally time point t 0 EVs initial locations Equation 17 means tasks executed t 0 Note case Equation 17 removed solver decide optimal initial location EV given speciﬁc set tasks waiting executed Equation 19 ensures location total number EVs charging stations changes EVs depart arrive execute task executing tasks Despite fact constraint covered Equation 13 added formulation signiﬁcantly speeds execution time For example setting 8 locations 15 EVs 60 time points 70 tasks constraint 13 reduces average execution time 450 s 200 s In fact known introduction additional cut constraints MIP problem cut infeasible solutions early stage branch bound searching process reduce time solve problem 20 By battery swapping EV range minutes However battery swap schemes impose high costs implementation complexity Thus section variation optimal solution instead battery swap traditional battery charge scheme presented 52 Optimal scheduling battery charging Here problem scheduling EVs MoD scheme formulated fast battery charging refer algorithm OffOptCharge In addition decision variables constraints presented previous section 9 In case user like set start end location task equivalent adding speciﬁc travel times trip opposed computing travel time pairs charging locations Otherwise Equation 3 MIP formulation work properly 10 This usually adding extra decision variables extra constraints 256 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Call Optimalcid2 j Algorithm 1 Incremental MIP Scheduling Algorithm Require cid2 A L T cid2 τi j A kinitial 1 completedT asks 2 j A 3 4 Optimal OffOptSwap OffOptCharge 5 6 Once MIP solved update set completed tasks new completed tasks 7 8 9 end completedTasks completedTasks newTasks cid2 cid2 ne w T asks Return Schedule j set latest completed tasks k L ck τ max j j 10 Return completedTasks deﬁne continuous variable bch jt 0 ch j denotes EV j charging time point t charging rate charging rate 0 maximum charging rate ch j11 2 completion constraints bch jt cid2 kL 0 b jt0 prk jkt ch j j t tcid2 tcid120 bch jtcid12 cid2 tcid2 icid2 tcid12cid12tstart cid4i jtcid12cid12 j 100 j t 20 21 Equation 20 ensures EV j charge parked When EV parked charge charging rate maximum However driving prk jkt 0 charge The charging takes place time point chosen solver long available range compromise task execution ability At time Equation 21 ensures battery level EV j exceeds 100 goes 0 cid4i jtcid12cid12 j b jt0 initial battery level energy consumed Thus EV j execute task range charge battery capacity Note Equation 21 replaces Equation 11 cid4 t tcid120 bch jtcid12 battery charged cid4 t tcid12cid12tstart icid2 cid4 The solutions presented far calculate optimal schedule EVs However later Sections 71 77 quadratic time complexity mainly usable small medium sized problems 300 tasks 20 EVs For reason algorithms calculate solutions close optimal low computational complexity essential In section algorithm incrementally calls MIP EV presented 53 Incremental MIP scheduling algorithm MIP problems known NPHard worst case 25 A widely employed strategy overcome computa tional diﬃculty solution large MIP models based idea decomposition 20 The decomposition approach divides large complex problem computationally expensive intractable formulated solved directly single MIP model smaller subproblems solved eﬃciently Usually decom position approaches lead suboptimal solutions However substantially reduce problem complexity solution time makes possible apply MIP based techniques large realworld problems Based idea decomposition present oﬄine scheduling algorithm incrementally calls solves MIP formulation problem Note insights taken 8 particular discussion planning completely independent agents The intuition algorithm following Given dimension problem affects execution time number EVs Section 71 solve MIP problem EV separately Thus MIP formulation solved sequentially Algorithm 1 EV list available EVs In set containing completed tasks initialized line 1 optimal algorithm called EV 12 lines 29 Every time schedule EV calculated line 6 sets completed tasks remaining tasks updated accordingly lines 7 8 At end procedure set contains completed tasks returned line 10 Note algorithm works battery swap battery charge We refer battery swap OffIncrSwap battery charge OffIncrCharge The incremental MIP algorithm achieves near optimal solutions relatively small execution time Section 71 However problems thousands EVs tasks execution time increases13 Given greedy 11 Not maximum charging rate prolong lifetime battery Moreover available energy limited highest charging rate available example limited energy renewable sources study case paper 12 We experimented orderings EVs signiﬁcant effect execution time solution quality 13 This algorithm consume lot memory Thus eﬃcient memory management implementation algorithm crucial We methods provided CPLEX ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 257 Fig 1 Greedy heuristic scorek calculated remaining tasks algorithms based heuristic search proven effective similar highly combinatorial problems 35 section greedy algorithms presented 54 Greedy scheduling battery swap Given EVs change locations driven customers tasks EV able execute future directly related ones executed past end location task start location In large settings normally tasks executed Thus selection ones execute great importance decision affect future task execution In case MIP formulation solver ﬁnds optimal schedule EVs maximises number tasks executed EV utilization However scalability algorithm average For reason present greedy algorithm applies onestep look ahead heuristic search mechanism This algorithm achieves later near optimal performance scales thousands EVs tasks We refer algorithm OffGreedySwap For time point t station k consider number available EVs number remaining tasks executed Given tasks executed known advance number available EVs greater equal number tasks remaining executed safely assume EVs available execute tasks note EVs arrive later executing tasks In case task executed according starting time In case number EVs lower number remaining tasks need carefully choose tasks need executed current time point tasks executed future To end employ onestep look ahead heuristic criterion The intuition heuristic priority tasks lead destinations 1 high number tasks remain executed 2 tasks executed soon 3 In way EVs remain idle long time combines customer satisfaction EV utilization At time point select tasks start executed time point Based initial location k task calculate score Equation 22 In calculating sum consideration number EVs exist destination However remove ones depart arrival EV k Thus come score location sck k scorek R select execute tasks lead locations highest score The sum guarantees locations tasks executed soon locations high numbers remaining tasks high score Example Fig 1 In destination given task ﬁve tasks remaining executed departure times 5 7 8 9 12 If task executed EV arrive destination time point 7 Thus able execute tasks 8 9 12 Moreover 3 EVs exist destination If EVs care 57 8 new EV able execute tasks 9 12 For reason score calculated 9 12 cid2 scorek 1cid2t cid2t t dep tarr j j destination tarr j 22 The greedy scheduling formulation presented consists 1 preprocessing phase 2 main scheduling algorithm Algorithm 4 applies task execution algorithm 541 Preprocessing During preprocessing phase initialization sets variables takes place Algorithm 2 In sets cid2k cid2 C Tkt cid2k created initialized set line 2 Then tasks starting location k L assigned set cid2k line 5 location k time point t C Tkt line 9 populated tasks executed t Moreover set Rtkstart line 13 containing number tasks remaining executed location time point t created initialized Finally variable prk jtk line 16 holds initial location EV variable evstk line 19 counts number EVs parked location initialized In section steps assignment EV task presented 258 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 j init cid2k C Tkt Algorithm 2 Initialization sets variables Require cid2 A L T j A l 1 k L Initialize sets 2 3 end 4 cid2 Populate cid2k cid2kstart 5 cid2kstart 6 end 7 k L t T cid2 Populate C Tkt 8 9 10 11 end 12 k L t T Populate Rtkstart 13 kstart C Tkt C Tkt k AND t start t C Tktcid12 t end cid12 t Rtkstart prk jtk kinit 14 end 15 j A k L t T Initialize prk jtk 16 17 end 18 k L t T Initialize evstk j prk jtk 19 20 end ev stk cid4 j Algorithm 3 Task execution cid12 t τi 0 t 1 t cid12 t t cid12 t τi cid12 t τi j assigned cid12 t t 1 cid4 jitcid12 1 t 2 Parked location agent j updated 3 prk jtcid12kstart 4 prk jtcid12kend 5 The number completed tasks increased 6 taskSum taskSum 1 7 Number EVs start end locations updated evstkstart 1 t 8 ev stkstart evstkend 9 ev stkend 10 Return cid4 prk taskSum evstkend cid12 t cid12 t τi evstkstart 1 t 542 Task execution Each time EV j assigned task Algorithm 3 called number actions place Initially EV j set working task changing value variable cid4 jit 0 1 duration trip line 1 variables cid4 jit prk jtl λi Then parked location k j updated based end location kend task arrival time tcurrent τi lines 3 4 Finally total number completed tasks increased line 6 total number EVs parked start end location trip updated accordingly lines 8 9 Note following modelling problem MIP formulation Equation 15 EV arrives destination stays time point necessary battery swap 543 The offgreedyswap algorithm Here elaborate key steps greedy algorithm Algorithm 4 For C Tkt awaiting executed current time point following steps executed repetitively task 1 If number available EVs range greater number tasks remaining executed starting location tasks set executed sequentially lines 38 For task execution lead violation maximum capacity destination location waiting queues exist exists EV parked current location assigned task executed calling Algorithm 3 If EV exists task completed 2 If number EVs parked current location range tasks remaining executed lines 921 scores end location task calculated Then sck descending order based scorek lines 1014 If execution task violate maximum capacity destination location tasks higher scores executed based EV availability Once exists EV parked current location assigned task executed calling Algorithm 3 Otherwise task completed The execution Algorithm 4 generates schedule EVs total number completed tasks In case max ﬂow algorithm Section 4 Greedy algorithm gets input set tasks executed problem scheduling EVs tasks simple resource allocation problem In case heuristic ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 259 Algorithm 4 Greedy Scheduling Algorithm Battery Swap Require cid2 A L T cid2 τi j A kinitial τ max 1 t T 2 3 k L If available EVs start total task number j j evstkstart Rtstart k L ck 4 5 kend C Tkt If evstτi kend prk jtk 1 AND τ jtstart τi If EV execute task ckend search j execute end sck k scorek k L 6 7 8 If available EVs start total task number 9 10 Calculate scorek Equation 22 assign sck 11 12 13 14 15 16 17 If end location task equal location sorted score array task executed 18 19 20 end Sort sck descending order based scorek k sck C Tkt k j A If evstτi kend prk jtk 1 AND τ jtstart execute ﬁrst task C Tkt remove tasks list If EV Algorithm 3 Search j τi kend ckend end end 21 22 23 24 25 26 27 28 end 29 Return cid4 prk end end end end taskSum function EVs execute tasks exist lines 921 Algorithm 4 executed Thus time point EVs simply assigned tasks Next analysis average case time complexity greedy algorithm presented 544 Complexity analysis battery swap While algorithm greedy steps sorting scorek computationally costly Hence follows elaborate complexity key steps algorithm Theorem 1 Complexity class Algorithm 4 The average case complexity Algorithm 4 cid2 L A T L2 logL L2 T Proof For lines 1 2 Algorithm 4 number iterations ﬁxed T L Now t lk iterations line 4 depend C Tkt However T L equal cid2 The calculation scores lines 1013 depend L C Tkt line 12 sorting scorek line 14 L logL L L logL sorting scorek L update order locations The selection tasks selection EVs execute selected tasks lines 1525 depend L C Tkt A Thus computational cost given following equation Cost T L C Tkt L C Tkt L logL L L C Tkt A equal Cost T L C Tkt1 L L A T L L logL L 23 24 In average case tasks EVs equally distributed locations time points C Tkt cid2 T L Equation 29 Cost T L cid2 T L equal 1 L L A T L2 logL L2 T 25 260 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Algorithm 5 Greedy Scheduling Algorithm Battery Charge Require cid2 A L T cid2 τi j A kinitial 1 t T 2 3 k L If available EVs start total task number τ max j j k L ck 4 5 evstkstart Rtstart kend δi C Tkt If evstτi kend ckend search j execute prk jtk 1 AND b jt τi end k L If EV execute task 6 7 8 9 If available EVs start total task number 10 11 Calculate scorek Equation 22 assign sck 12 13 14 15 16 17 18 If end location task equal location sorted score array task executed 19 20 21 end Sort sck descending order based scorek k sck C Tkt sck k scorek kend lk j A If evstτi kend ckend If EV Algorithm 3 end end end end end j A 22 23 24 25 26 27 28 For EVs battery state updated based EV driving based energy needed 29 30 31 32 33 34 35 36 37 end 38 Return cid4 prk kL prk jtk 1 AND b jt 1 ch j 100 b jt b jt1 1 ch j b jt b jt1 1 j taskSum end end end cid4 Search j prk jtk 1 AND b jt τi execute ﬁrst task C Tkt remove tasks list Cost cid2 1 L L A T L2 logL L2 T Finally A 1 L 1 Equation 26 Cost cid2 L A T L2 logL L2 T 26 27 Therefore complexity increases proportionally linearly number tasks EVs quadratically number locations times logL times time points quadratically number location times number time points Therefore average case complexity Algorithm 4 O cid2 L A T L2 logLL2 T These results veriﬁed experimentally Section 71 In section variation greedy scheduling algorithm battery charge instead battery swap presented 55 Greedy scheduling battery charging In section present Algorithm 5 uses battery charge instead battery swap Algorithm 5 works similarly Algorithm 4 main difference instead swapping batteries task completed battery level monitored updated EV based status parked travelling lines 2736 In words EV travels battery discharges EV parked battery level increase charging takes place For reason variable b jt 0 100 order capture level battery charge EV time point In case energy needed parked location energy charged EV lines 2931 travelling battery discharged lines 3133 In order decide charging schedule EV use algorithms presented 39 According algorithm assuming EV needs n units energy charging takes place ﬁrst n time points arrival EV station available chargers exist ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 261 energy provided grid In contrast OffOptCharge charging rate ﬁxed maximum affect task execution ability algorithm greedy maximum rate optimal needed Given optimal knowledge future demand need use maximum charging rate The problem eﬃcient load balancing electricity network studied paper use advanced charging scheduling algorithms considered future work Also contrast Algorithm 4 order decide EV execute task current range maximum range happening case battery swap fully charged battery swapped EV compared energy demand upcoming task lines 5 20 We refer algorithm OffGreedyCharge 551 Complexity analysis battery charge Here complexity class Algorithm 5 calculated Theorem 2 Complexity class Algorithm 5 The average case complexity Algorithm 5 O cid2 L A T L L logL L A Proof Following similar thinking previous case computational cost Cost T L C Tkt L C Tkt L logL L L C Tkt A A equal Cost T L C Tkt1 L L A T L L logL L A 28 29 In average case tasks equally distributed locations time points C Tkt cid2 T L Equation 28 Cost T L cid2 T L 1 L L A T L L logL L A A 1 L 1 equal Cost cid2 L A T L L logL L A 30 31 Therefore average case complexity Algorithm 5 O cid2 L A T L L logL A Note average case complexity Algorithm 5 higher compared Algorithm 4 However Section 71 practical difference small In section local search technique improve solution quality nonoptimal algorithms presented 56 Local search algorithm Local search problems formulated ﬁnding optimal solution number candi date solutions Local search algorithms solution solution space candidate solutions search space applying local changes solution deemed optimal stopping condition met Local search established technique improve solution provided nonoptimal algorithm In case need local search algorithm order improve initial solution calculated fast greedy algorithm Thus developed tabu searchbased algorithm Tabu search metaheuristic technique includes subroutine local search pro cedure appropriate problem solved This subroutine runs iteratively ﬁnds new solutions neighbourhood current solution A key characteristic tabu search require new trial solution better current In way algorithm escape local minima 24 Tabusearch preferred alternative local search methods simulated annealing 1 representational characteristics better match problem formulation 2 known outperform local search algorithms terms solution qualityrobustness computation time 31 It proved perform problems similarities TSP QAP problems 23 32 In follows present formulation tabu searchbased algorithm MoD problem 1 Local search procedure At iteration select neighbouring solution leads maximum number serviced tasks maximum EV utilization 2 Neighbourhood structure An immediate neighbour current trial solution reached changing task assignment EV 3 Form tabu moves All EVs assigned tasks 262 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Algorithm 6 Local search algorithm Require cid4 jit A L T 1 best Solution cid4 jit 2 cid2 3 4 5 1 cid4 jitstart Executed F alse j A Collect tasks executed EV E V sT asksMap j E V sT asksMap j δi Executed T rue tasksU nexecuted tasksU nexecuted δi end end j A elseCollect unexecuted tasks 6 7 8 9 10 11 12 end 13 No improvement n rounds 14 15 16 17 18 19 20 21 22 23 24 25 end end end Call MIP E V sT asksMap j T asksU nexecuted Assign number completed tasks current Solution j Find assignment maximizes number completed tasks If max assignment tabu list let current Solutionk Update E V sT asksMapk T asksU nexecuted tabuListk E V sT asksMapk current Solutionk best Solution best Solution current Solutionk return best Solution 4 Addition tabu We iterate EVs calculate tasktoEV assignment OffOpt Swap OffOptCharge solve problem The EV assignment leads higher number total serviced tasks added tabu list 5 Maximum size tabu list The number EVs EV tabu exists EVs contain 6 Stopping rule A number iterations improvement current solution Algorithm 6 presents local search procedure MoD scheme This algorithm takes input tasktoEV signment calculated Greedy algorithm Then tasks assigned EV added set EVsTasksMap j All tasks assigned EV added set TasksUnexecuted lines 212 Then OffOptSwap OffOptCharge called EV tasks initially assigned EV plus ones assigned EV14 The completed tasks EV calculated optimal algorithm added current Solution variable After EVs examined leads higher increase number executed tasks tabu list selected current solution updated based assignment EV Also assignment added tabu list This procedure continues n iterations EVs ﬁnished improve ment current solution In case assume solution improve algorithm terminates lines 1325 In section battery swap optimization algorithm applies scheduling algorithms battery swap presented 57 Battery swap optimization The algorithms use battery swap calculate schedule EV assuming stop fully charged battery swapped However battery swap station actually necessary vehicle energy execute tasks Moreover frequent battery swapping demands higher volumes available batteries stations increasing cost MoD company 56 For reasons present optimal scheduling algorithm takes input EVs travelling schedule taskExec jt 0 1 minimizes number battery swaps posteriori We formulate problem battery swap minimization MIP techniques solve optimally We denote decision variables 1 swap jt 0 1 binary decision variable EV j swaps battery time point t 2 bt jt 0 range j integer decision variable battery level EV time point The value bt jt 0 maximum range EV CPLEX limit values range The objective function Equation 32 consists sum battery swaps EVs minimized subject constraints No EV swap battery executing task Equation 33 initial battery level 14 We believe unassigned tasks assigned tasks source improving solution EV Algorithm 7 Tasks scheduling algorithm uncertainty ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 263 Su mr 0 A verager 0 Call Optimal cid2 f ix cid2exp η H 1 r Rounds 2 3 4 5 6 7 8 9 end 10 Return Schedule cid2 f ix A verager argmax A verage Keep schedule cid2 f ix unchanged Optimal cid2expη Sumr Sumr end A v erager Sumr H cid4 λcid2exp Number completed tasks η added Sumr EV equal range task execution starts fully charged battery Equation 34 Moreover time point battery level EV equal level previous time point plus range battery swapped EV minus energy consumed driving Equation 35 CPLEX limit values bt jt 0 range j Objective functions cid2 cid2 min swap jt j t j t Subject swap jt taskExec jt 1 j t bt jt0 range j j bt jt bt jt1 swap jt1 range j taskExec jt cons j j t 32 33 34 35 Having discussed number oﬄine approaches solving EV allocation MoD schemes turn online problem In particular address problem coping unknown future trip requests 6 Online scheduling algorithm So far assumed complete knowledge future customer demand exist However assumption hold reality present algorithm ability effectively cope uncertainty future demand This algorithm uses concepts related Model Predictive Control MPC 11 approach In assuming MoD company knowledge demand small number tasks cid2 f ix cid2 remainder usually longer term future demand stochastic nature degree captured probability distribution learnt historical data expected set tasks cid2exp Note start time expected tasks execution latest task ﬁxed set Given sets tasks aim calculate schedule execution ﬁxed tasks leads higher probability executing tasks future To achieve steps followed Algorithm 7 Step 1 set expected tasks calculated plan execution ﬁxed expected tasks calculated line 3 Step 2 execution plan related ﬁxed tasks remains unchanged number η H sets expected tasks cid2exp iteratively sampled calculate average expected number executed tasks lines 47 This procedure steps 1 2 executed number rounds r R Then schedule ﬁxed tasks leads higher expected utility number tasks expected executed selected The ﬁxed tasks scheduled executed deﬁnitely executed assumption overbooking stations booking cancellations customers exists If booking cancelled schedule feasible anymore However study scenario paper15 Moreover longer time period ﬁxed tasks usually leads higher number executed tasks leads higher waiting time future EVs announce request This algorithm works battery swap battery charge We refer battery swap variation OnSwap battery charging OnCharge In section present detailed evaluation algorithms 15 If booking covered example realworld implementation traﬃc conditions dont permit pay compensa tion ask users provide larger time window departure time 264 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 7 Evaluation Fig 2 Locations pickup dropoff locations Here evaluate algorithms number settings order determine ability handle potentially large numbers tasks locations EVs To end use real locations pickup dropoff points owned ZipCar16 Washington DC USA available open data17 distance duration trips18 calculated Google maps Fig 2 Car station locations close ignored 8 stations selected19 Note Washington DC cities highest traﬃc congestion USA20 43 MoD reduce congestion reduces demand parking spots parked cars create congestion Therefore MoD scheme ﬁt perfectly setting potential reduce congestion caused privately owned vehicles The evaluation algorithms executed main parts EXP1 The execution time scalability max ﬂow optimal incremental MIP greedy local search algorithms evaluated EXP2 The performance algorithms terms average number completed tasks EV utilization evaluated EXP3 The sensitivity max ﬂow algorithm analyzed EXP4 The eﬃciency battery swap optimization algorithm evaluated EXP5 The performance online algorithm optimal oﬄine evaluated EXP6 The correctness optimal greedy algorithms veriﬁed All experiments executed following setting 1 time point selected equal 15 min total 58 time points exist equivalent execution MoD service 700 1800 2 For optimal algorithms objective function maximizes task execution Equation 6 maximization completed tasks stated 3 tasks formulated based 56 possible trips trips combinations 8 locations form MoD scheme However locations close ignored Trips categorized groups 1 suburbs city centre 2 city centre 3 city centre suburbs These groups selected according intuition expected ﬂow traﬃc city day Also divided day sessions 1 morning 2 noon 3 afternoon In morning session majority trips come group 1 60 tasks group 1 40 rest noon session come group 2 60 tasks group 2 40 rest afternoon session come group 3 60 tasks group 3 40 rest Within session tasks selected uniform distribution tasks selected equal probability Start times tasks group drawn 16 httpwwwzipcarcom ﬁnd cars dc 17 httpopendata dc gov datasets 18 Combinations locations acting start end points trip 19 All data locations trips following experiments httpintelligence csd auth gr ﬁles datasets ev AIJ data zip 20 httpmobilitytamu edu ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 265 Table 2 Names main algorithms evaluation Algorithm MIP battery swap MIP battery charge Greedy battery swap Greedy battery charge Greedy battery swap local search Greedy battery charge local search IncrementalMIP battery swap IncrementalMIP battery charge Short OffOptSwap OffOptCharge OffGreedySwap OffGreedyCharge OffGreedySwapLS OffGreedyChargeLS OffIncrSwap OffIncrCharge Fig 3 Execution time preprocessing uniform distribution morning session start times 112 mean 65 σ 317 noon 1236 mean 24 σ 69 afternoon 3650 mean 43 variance 404 Also j 10 ch j 25 time point EV working battery level reduced 10 units energy time point EV charging battery level increased 25 units energy fast battery charging The average range EV currently 150 We assume average speed 40 kmh means EV drive 375 h In evaluation setting time point equal 15 min 375 h equal 15 time points Thus j 10 battery time point A fast charger fully charge EV hour Thus ch j 25 battery time point Both j ch j conﬁguration parameters selected user Note experiments executed Windows PC Intel i74790K CPU 16 GB RAM running 2400 MHz 71 EXP1 execution time scalability Execution time scalability typical metrics scheduling algorithms Hence set experiments vary number tasks measure execution time OffOptSwap OffOptCharge OffIncrSwap Off IncrCharge OffGreedySwap OffGreedyCharge OffGreedySwapLS OffGreedyChargeLS Table 2 711 Improvement execution time preprocessing Here evaluate improvement execution time OffOptSwap OffOptCharge MaxFlow algorithm preprocessing step As seen Fig 3 preprocessing step execution time decreases signiﬁcantly For example 200 tasks execution time OffOptSwap reduced 629 OffOptCharge 608 This fact MaxFlow algorithm prunes set tasks Thus rest experiments use optimal algorithm combination preprocessing step Note improvement execution time achieved greedy algorithm case small fact execution time low Regarding preprocessing step execution time low For example setting 100 EVs 3000 tasks execution times variations MaxFlow algorithm increase linearly R2 09971 MaxFlow R2 0992 MaxFlowInit21 As seen Fig 4 low execution time 3000 tasks execute 035 s variation initial location optimized slowest constraint decision variable exists The optimization initial location EVs leads increase average task execution However create problems For example 21 We use MATLABs Curve Fitting Toolbox Note ﬁndings reported values R2 guaranteed true settings experiments presented paper 266 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Fig 4 Execution time MaxFlow 100 EVs Fig 5 Execution time battery swap 15 EVs centroids average values Table 3 All algorithms battery swap trend 15 EVs Algorithm OffOptSwap OffGreedySwap OffIncrSwap Trend Quadratic Linear Quadratic R2 9842 9213 9935 relocation vehicles needed prior beginning operation MoD company incurs extra cost Thus following experiments focus case initial location optimized 712 Scalability varying small medium task sizes In setting 15 EVs 300 tasks case battery swap seen Fig 5 greedy algorithm 10 times faster incrementalMIP 1000 times faster optimal The rate growth greedy algorithm linear algorithms rate quadratic Table 3 The linear time complexity greedy related preprocessing step prunes infeasible tasks Section 54 The number tasks shown xaxis following ﬁgures based number tasks preprocessing step Thus point plot centroid execution times multiple experiments actual numbers tasks In case incrementalMIP preprocessing step leads lower number executed tasks discussed subsection rest experiments However plot execution time combination preprocessing step fair comparison algorithms Regarding incrementalMIP investigated use cut constraints improve scalability algorithm In fact added cut constraints 1 For tasks overlap time executed 2 The tasks isolated EVs initial location tasks leading location executed decision variable set zero The addition extra constraints reduced MIP preprocessing time total execution time For example setting 2000 tasks 45 EVs MIP preprocessing time reduced 0352 s 0345 s total execution time increased 222964 s 23390 s Thus decided use extra constraints In case battery charge seen Fig 6 algorithms behave similarly battery swap average execution time higher Table 4 In case battery charge plot execution time greedy algorithm combination local search technique This combination leads higher ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 267 Fig 6 Execution time battery charge 15 EVs centroids average values Table 4 All algorithms battery charge trend 15 EVs Algorithm OffOptCharge OffGreedyCharge OffGreedyChargeLS OffIncrCharge Trent Quadratic Linear Quadratic Quadratic R2 9924 9675 7962 9864 Fig 7 Execution time battery swap 100 EVs centroids average values execution times compared incrementalMIP lower compared optimal In fact execution time OffGreedyChargeLS initially increases number tasks increases 120 execution time decreases This explained fact given number EVs remains stable number tasks increases greedy algorithm calculates schedule covers EVs availability reason local search improve solution lot Thus terminates sooner compared settings space improvement larger As described Section 72 OffGreedySwap combined MaxFlow assumptions provides optimal solution Thus point combine local search battery swap 713 Scalability varying large task sizes Here assume range EVs 20 available EVs long execute longer trips Thus MaxFlow provides upper limit feasible tasks details Section 72 OffGreedySwap provide optimal solution We choose setting 100 EVs 3000 tasks For settings optimal algorithm scale low execution times incremental greedy algorithms preferable options When battery swap seen Fig 7 OffGreedySwap 1000 times faster OffIncrSwap 10000 times faster OffGreedySwapLS It interesting notice local search execution time initially increases 1300 tasks starts decreasing Table 5 The explanation similar given previous subsection 268 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Table 5 All algorithms battery swap trend 100 EVs Algorithm OffGreedySwap OffGreedySwapLS OffIncrSwap Trend Quadratic Quadratic Quadratic R2 9847 9148 9548 Fig 8 Execution time battery charge 100 EVs centroids average values Table 6 All algorithms battery swap trend 100 EVs Algorithm OffGreedyCharge OffGreedyChargeLS OffIncrCharge Trend Quadratic Quadratic Quadratic R2 9954 9258 961 Table 7 Variable dimensions algorithms battery swap Algorithm OffOptSwap OffGreedySwap OffIncrSwap EVs Trend Quadratic Linear Quadratic R 2 9839 9829 9832 Time points Trend Quadratic Linear Quadratic R2 991 91 999 Locations Trend Quadratic Quadratic Quadratic R 2 979 9849 9217 When battery charge seen Fig 8 execution times algorithms follow similar trend Table 6 However contrast battery swap large number tasks OffIncrCharge higher execution time compared OffGreedyChargeLS This explained fact OffOptCharge algorithms time consuming compared OffOptSwap similarly previous case large numbers tasks local search algorithm terminates earlier Note case OffGreedySwapLS time second degree polynomial x2 term negative However case OffGreedyChargeLS positive This explained fact case battery charging Section 72 space improvement bigger Thus local search technique runs longer time Note larger numbers tasks expect execution time start dropping We evaluate execution time varying rest dimensions EVs time points locations 714 Scalability dimensions In section evaluate algorithms terms execution time varying dimensions problem EVs time points locations As seen Figs 9 10 11 Table 7 cases execution times OffOptSwap OffIncrSwap increase quadratically However locations vary term x2 negative execution time initially increases decreases This explained fact number locations increases number EVs remains unchanged tasks spread fewer executed making problem easier solve In terms OffGreedySwap varying number EVs ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 269 Fig 9 Execution time MIP 100 Tasks variable number EVs Fig 10 Execution time MIP 100 Tasks variable number time points Fig 11 Execution time MIP 100 Tasks variable number locations time points execution time increases linearly varying number locations increases quadratically Thus theoretical complexity analysis presented Section 54 veriﬁed The results battery charge similar 72 EXP2 completion tasks EV utilization Here evaluate algorithms terms average task completion average EV utilization In main scenarios In ﬁrst assume EVs carry battery fully charged large execute longest task In second assume EVs carry smaller battery notfully charged able execute longest tasks In case EVs carry battery seen Figs 12 13 OffGreedySwap preprocessing step MaxFlow algorithm provides optimal solution explanation 270 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Fig 12 Completed tasks 15 EVs oﬄine algorithms Fig 13 Eﬃciency compared optimal 15 EVs Section 543 In contrast OffGreedyCharge preprocessing step provides solution close optimal 97 optimal 300 tasks This explained fact battery charging time consuming compared battery swap EVs range start executing task However local search algorithm having input solution greedy algorithm perfor mance OffGreedyCharge improves reaches 985 OffOptCharge It interesting note greedy algorithm combined MaxFlow improvement number completed tasks compared case MaxFlow setting 200 tasks 262 OffGreedySwap 24 OffGreedyCharge Regarding incrementalMIP algorithm cases performs worse compared optimal greedy algorithms For example 300 tasks 9634 GreedySwap OffOptSwap 9874 GreedyCharge local search 9727 solution improved local search When comparison MaxFlow results worse This explained fact MaxFlow provides optimal set tasks given set EVs Thus broken subproblems solution deteriorates Thus experimental setting incrementalMIP For larger setting 100 EVs 4000 tasks performance algorithms remains similar The Off GreedySwap combination MaxFlow provides optimal solution OffGreedyCharge close optimal In fact 4000 tasks OffGreedyCharge 996 optimal local search applied eﬃciency increases 9975 optimal The better performance OffGreedyCharge compared smaller setting explained fact large numbers tasks options greedy algorithm sensitive optimal selection task The fact OffGreedyCharge reach absolute optimal expected myopic nature local heuristic Figs 14 15 Given performance algorithms argue battery swap OffGreedySwap combination MaxFlow appropriate solution problem sizes provides optimal solution low execution time Whereas battery charge combination OffGreedyCharge MaxFlow use local search afterwords leads best solution especially large problems However small problems tens EVs hundreds tasks OffOptCharge best choice provides optimal solution reasonable time slower compared Now trying maximize EV utilization objective function Equation 7 seen Fig 16 observe average 36 increase EV utilization average number completed tasks decreased 15 In words difference objective functions terms EV utilization task completion ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 271 Fig 14 Completed tasks 100 EVs oﬄine algorithms Fig 15 Eﬃciency compared optimal 100 EVs Fig 16 EV utilization 15 EVs time points occupied small However settings tasks longer duration exist expect difference increase solver options ﬁll travelling schedule EVs long tasks Note cases differences battery swap battery charge variations terms completed tasks small For example 15 EVs 200 tasks OffOptSwap OffOptCharge executed average 1196 tasks Fig 17 On rare occasions noticed slight differences 1 2 tasks This explained fact fast charging making delay compared battery swap small 3 time points opposed 1 time point The MaxFlow algorithm treats EVs equally assumes execute task However EVs 20 available EVs carry smaller batteries execute longest tasks set tasks returned MaxFlow upper limit tasks executed An interesting question scheduling algorithms perform case In setting 200 tasks 15 EVs seen Fig 18 OffOptSwap achieves best performance 11 better performance compared greedy 200 tasks Note MaxFlow returns upper limit tasks executed OffGreedySwap expected provide optimal solution anymore The OffGreedySwapLS OffIncrSwap similar performance greedy 272 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Fig 17 Completed tasks OffOptSwap vs OffOptCharge 15 EVs Fig 18 Completed tasks 15 EVs oﬄine algorithms battery swap Fig 19 Completed tasks 100 EVs oﬄine algorithms battery swap slightly ahead smaller number tasks incrementalMIP matches performance greedy larger number tasks Now setting 3000 tasks 100 EVs seen Fig 19 performance OffGreedySwap 995 OffGreedySwapLS 3000 tasks exist Moreover OffIncrSwap performs initially worse compared greedy algorithm 1000 tasks advantage However 2500 tasks starts levelling Note standard deviation OffIncrSwap higher compared OffGreedySwap Also note incrementalMIP algorithm combination local search execution time increases 10times average solution quality improves 03 average Given execution time incremental greedy algorithms combined local search argue setting EVs carry different battery types number tasks larger 1000 incrementalMIP appropriate solution As seen Fig 20 performance battery charge similar We discuss sensitivity MaxFlow algorithm 73 EXP3 sensitivity MaxFlow Here evaluate MaxFlow algorithm setting ﬁx number tasks completed 500 vary number EVs number locations pickup dropoff points order determine EVtotaskallocation problem affected change number EVs locations Note synthetic data locations Given number tasks completed remains ﬁxed expect increasing number EVs number completed tasks increase In case number locations remains ﬁxed case Fig 21 However case number locations increases observe opposite ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 273 Fig 20 Completed tasks 100 EVs oﬄine algorithms battery charge Fig 21 Sensitivity MaxFlow For interpretation colours ﬁgures reader referred web version article Fig 22 Number battery swaps optimization trend Interestingly 40 EVs 10 locations exist number completed tasks actually higher compared case 100 EVs 60 locations exist This interesting observation explained follows 1 number locations increases average number EVs location t 0 decreases probability EV able execute future task starting given location decreases 2 number locations increases number possible trips increases exponentially EVs tend spread Thus similarly previous point probability EV able execute future task decreases Thus optimization number location pickup dropoff points important problem solved MoD company 21 related cost possible MoD deployment number locations stations performance terms serviced tasks proﬁt Our algorithms experimental results help We discuss eﬃciency battery swap optimization algorithm 74 EXP4 battery swap optimization Here evaluate proposed battery swap optimization algorithm setting optimization takes place based tasks assigned scheduling algorithms EV In assume EVs carry battery type discharge rate j 10 time point 10 battery discharged average trip duration 2 time points The battery swap minimization algorithm shown achieve reduction 875 Fig 22 number necessary battery swaps Its execution time half second large settings Overall minimization battery swaps important task order reduce cost battery swapping 274 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Fig 23 Oﬄine Optimal vs Online algorithm Fig 24 Online eﬃciency compared optimal oﬄine real world deployment Note algorithm applied scheduling algorithms use battery swap In section optimal oﬄine algorithm evaluated online 75 EXP5 online VS oﬄine scheduling task execution Given knowledge future demand possible online algorithm Algorithm 7 evaluated optimal We choose η 15 r 5 reminder η represents number sets expected tasks r number rounds Section 6 numbers observed provide good balance performance execution time Also day divided periods morning noon afternoon round tasks period ﬁxed rest drawn distribution ﬁrst morning tasks ﬁxed noon afternoon tasks come distribution They generated uniform Gaussian distribution 50 tasks come uniform distribution 50 come Gaussian distribution mean σ selected way tasks come future session noon afternoon based current time point As seen Figs 23 24 Online algorithm acceptable performance setting 100 tasks performance achieved algorithm terms average task completion 90 compared optimal oﬄine Note future tasks come 50 Gaussian distribution remaining 50 come uniform distribution Thus methodology eﬃciency handle tasks coming different distribu tions Also execution time η similar times presented optimal oﬄine algorithms number tasks Thus based number types computers MoD company possesses η r chosen accordingly better accuracy prediction achieved22 schedule calculated available time schedule tasks decided actual execution In section correctness MIP greedy algorithms veriﬁed 76 EXP6 correctness MIP algorithm In order verify correctness MIP greedy algorithms conducted number experiments We created set tasks executed single EV end location task start location Then run algorithms set tasks gave optimal solution Then expanded set tasks known outcomes observed MIP returned optimal solution The greedy provide optimal solution certain number EVs tasks larger numbers 20 tasks 1 EV giving suboptimal solutions expected In section issues related time complexity MIP formulations problem discussed 22 High numbers η r lead better accuracy However demand computational power Thus parallel execution preferable ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 275 Fig 25 Variable number tasks ﬁxed dimensions OffOptSwap 77 Discussion computational complexity oﬄine optimal solution The MIP formulation oﬄine optimal algorithm solved CPLEX CPLEX uses Branch Cut optimization method 26 turn based Branch Bound search algorithm Initially root node problem solved linear program simplex shifting optimizer algorithm approach ﬁrst introduced IBM SPRINT approach 2 Then solution exists variables integral Branch Bound begins choosing nonintegral variable ﬁxing value closest upper lower integers resolving problem remaining variables According 57 average case complexity branch bound algorithm polynomial depth search tree expected number children node cost parent 1 If MIP problem d variables search space Branch Cut consists combination possible splits problem variables accounts binary tree depth d 2d nodes In experiments observed CPLEX log value objective function root node Branch Cut starts optimal value Therefore branches search tree lead nodes cost root node Due observation expect computational complexity algorithm polynomial number variables problem Thus calculate number decision variables examine correlation execution time For OffOptSwap number dswap variables given following equation dswap cid2 cid2 A T A L T cid2 total number tasks A total number EVs T total number time points day divided L total number locations pickup dropoff points problem dimensions total Decision variable λδi 1 dimension cid2 decision variable cid4 jit 3 dimensions A cid2 T decision variable prk jtk 3 dimensions A T L In order verify expectation problem grows polynomial time plot time solve MIP problem number variables dswap problem calculated equation Each time vary dimension problem hold rest ﬁxed Figs 25 26 27 28 Note number decision variables preprocessing step For cid2 A T results verify cases observe R2 95 time complexity O d2 swap Therefore complexity according problem size O cid2 cid2 A T A L T 2 O cid22 cid22 A2 T 2 A2 L2 T 2 2 cid22 A T 2 cid2 A L T 2 cid2 A2 L T 2 O A2 T 2 cid22 L2 Interestingly L dimension problem execution time remains second degree polynomial number decision variables coeﬃcient x2 gets negative values Fig 28 As explained earlier Section 72 number locations increases EVs spread ability execute tasks reduced Therefore infeasible tasks exist execution time drops Thus conclude result time complexity MIP formulation related solely number decision variables hardness problem solved Next evaluate complexity variation battery charge For OffOptCharge number dcharge variables given following equation dcharge cid2 cid2 A T A L T A T decision variable λδi 1 dimension cid2 decision variable cid4 jit 3 dimensions A cid2 T decision variable prk jtk 3 dimensions A T L decision variable bch jt 2 dimensions A T We executed experiments case OffOptSwap results verify cases observe R2 96 cid2 A T time complexity O d2 charge Therefore complexity according problem size O cid2 cid2 A T A L T A T 2 O cid22 2 cid22 A T 2 A L T cid2 2 A cid2 T cid22 A2 T 2 2 cid2 A2 L T 2 2 cid2 A2 T 2 A2 L2 T 2 2 A2 L T 2 A2 T 2 O A2 T 2 cid22 L2 For dimension L results similar ones discussed previous paragraph In fact seen Section 71 measurements execution times revealed quadratic time complexity consistent analysis In section main results observations conclusions summarized 276 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 Fig 26 Variable number EVs ﬁxed dimensions OffOptSwap Fig 27 Variable number time points ﬁxed dimensions OffOptSwap Fig 28 Variable number locations ﬁxed dimensions OffOptSwap 78 Summary key results To summarize experimental evaluation observe EVs carry battery large longest trips greedy algorithm battery swap combination max ﬂow provides optimal solution At time variation battery charge 97 optimal local search 985 local search Moreover case EVs large battery execute longest trips observe greedy algorithm provide optimal solution anymore incrementalMIP correct choice generates solution 05 better greedy lower execution time optimal algorithm best scales medium sized problems Moreover objective maximization EV utilization utilization increases 36 number completed tasks reduces 15 average In addition proposed battery swap minimization algorithm applied aposteriori existing task execution schedule minimizes necessary battery swaps minimizing cost Finally ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 277 proposed online algorithm takes consideration uncertainty future demand veriﬁed good performance Generally speaking performance algorithms depends number EVs number pickup dropoff locations consequence number possible trips 8 Conclusions future work In paper studied problem scheduling set shared EVs MoD scheme initially characterize problem max ﬂow determine set feasible tasks given available EVs location Later proposed MIP formulation solve optimally Given solution scales medium sized problems proposed nonoptimal algorithms The ﬁrst incremental MIP solution calls MIP incrementally EV The second greedy scheduling algorithm scales thousands tasks EVs Finally developed tabu searchbased local search technique improve solution quality nonoptimal algorithms In cases battery swap battery charge cope EVs limited range In experiments observe EVs carry battery large longest trips greedy algorithm battery swap combination max ﬂow provides optimal solution At time variation battery charge close optimal slightly improved local search When EVs large battery execute longest trips incremental MIP generates solutions slightly better greedy optimal algorithm best scales medium sized problems Moreover online algorithm shown average 90 optimal When taken algorithms results establish ﬁrst benchmarks study EVs MoD schemes benchmarks future research Future work look possible relocation mechanisms EVs order improve task completion rates Such mechanisms based crowdsourcing techniques available drivers crowd drive EVs locations discussed Section 2 In similar vein car pooling multiple customers ride EV considered In addition aim investigate marketbased techniques incentivise customers execute trips improve numbers tasks executed Moreover given vagaries online implementation factored aim expand online algorithm Dealing cancellations predicting delays travel issues dealt realworld deployment Thus consider improve extend online algorithm number ways 1 We aim introduce probability distributions future demand use machine learning techniques order better forecast future demand increase number executed tasks 2 We aim investigate use dynamic pricing techniques order balance requests stations 39 3 We aim introduce relocation drivers order cope case bookings cancelled In way schedule future tasks remain feasible 4 We aim introduce notion acceptable risk schedule future tasks chance constraints tuning constraints humanunderstandable way research question Acknowledgements We like thank anonymous reviewers constructive comments boosted eﬃciency proposed methods greatly improved paper References 1 N Agatz A Erera M Savelsbergh X Wang Optimization dynamic ridesharing review Eur J Oper Res 223 2 2012 295303 2 R Anbil R Tanga EL Johnson A global approach crewpairing optimization IBM Syst J 31 1 Jan 1992 7178 3 A Andersson M Tenhunen F Ygge Integer programming combinatorial auction winner determination Proceedings Fourth International 4 M Barth S Shaheen Shareduse vehicle systems framework classifying carsharing station cars combined approaches Transp Res Rec J Conference MultiAgent Systems 2000 pp 3946 Transp Res Board 1791 2002 105112 5 AM Bayen CJ Tomlin Y Ye J Zhang Milp formulation polynomial time algorithm aircraft scheduling problem 42nd IEEE International Conference Decision Control vol 5 IEEE Cat No 03CH37475 Dec 2003 pp 50035010 6 R Bent P Van Hentenryck Waiting relocation strategies online stochastic vehicle routing IJCAI 2007 pp 18161821 7 F Bistaffa A Farinelli G Chalkiadakis SD Ramchurn Recommending fair payments largescale social ridesharing Proceedings 9th ACM Conference Recommender Systems RecSys 15 ACM New York NY USA 2015 pp 139146 httpdoi acm org 10 1145 2792838 2800177 8 RI Brafman C Domshlak On complexity planning agent teams implications single agent planning Artif Intell 198 2013 5271 9 G Budai G Maróti R Dekker D Huisman L Kroon Rescheduling passenger railways rolling stock rebalancing problem J Sched 13 3 2010 281297 httpsdoi org 10 1007 s10951 009 0133 9 10 LD Burns Sustainable mobility vision transport future Nature 497 7448 2013 181182 11 EF Camacho CB Alba Model Predictive Control Springer Science Business Media 2013 12 T Carpenter S Keshav J Wong Sizing ﬁnitepopulation vehicle pools IEEE Trans Intell Transp Syst 15 3 June 2014 11341144 13 EM Cepolina A Farina A new shared vehicle urban areas Transp Res Part C Emerg Technol 21 1 2012 230243 14 B Chandran S Raghavan Modeling Solving Capacitated Vehicle Routing Problem Trees Springer US Boston MA 2008 pp 239261 15 GB Dantzig JH Ramser The truck dispatching problem Manag Sci 6 1 Oct 1959 8091 httpsdoi org 10 1287 mnsc 6 180 16 MM De Weerdt EH Gerding S Stein V Robu NR Jennings Intentionaware routing minimise delays electric vehicle charging stations Proceedings TwentyThird International Joint Conference Artiﬁcial Intelligence IJCAI13 AAAI Press 2013 pp 8389 278 ES Rigas et al Artiﬁcial Intelligence 262 2018 248278 17 M Densing H Turton G Bäuml Conditions successful deployment electric vehicles global energy perspective Energy 47 1 18 FA Doppers S Iwanowski Emobility ﬂeet management ant algorithms Proceedings EWGT2012 15th Meeting EURO Working Group Transportation September 2012 Paris Proc Soc Behav Sci 54 2012 10581067 19 M Dorigo LM Gambardella Ant colony cooperative learning approach traveling salesman problem IEEE Trans Evol Comput 1 1 20 CA Floudas X Lin Mixed integer linear programming process scheduling modeling algorithms applications Ann Oper Res 139 1 2005 131162 21 S Funke A Nusser S Storandt Placement loading stations electric vehicles detours necessary J Artif Intell Res 53 2015 633658 22 DK George CH Xia Fleetsizing service availability vehicle rental closed queueing networks Eur J Oper Res 211 1 2011 2012 137149 Apr 1997 5366 198207 23 F Glover E Taillard E Taillard A users guide tabu search Ann Oper Res 41 1 Mar 1993 128 httpsdoi org 10 1007 BF02078647 24 Frederick S Hillier Gerald J Lieberman Introduction Operations Research 2010 25 F Hutter L Xu HH Hoos K LeytonBrown Algorithm runtime prediction methods evaluation Artif Intell 206 2014 79111 26 IBMKnowledgeCenter Branch Cut Cplex Tech Rep CPLEX Reference Manual 2015 httpwww01ibm com support knowledgecenter SSSA5P _ 12 6 2 ilog odms cplex help refcppcplex html branch html 27 EL Lawler The quadratic assignment problem Manag Sci 9 4 1963 586599 28 ZA Lomnicki A branchandbound algorithm exact solution threemachine scheduling problem J Oper Res Soc 16 1 1965 89100 httpsdoi org 10 1057 jors 1965 7 Control CDC 2010 pp 206212 29 Z Ma D Callaway I Hiskens Decentralized charging control large populations plugin electric vehicles 49th IEEE Conference Decision 30 WJ Mitchel CE BorroniBird LD Burns Reinventing Automobile Personal Urban Mobility 21st Century MIT Press 2010 31 IH Osman Metastrategy simulated annealing tabu search algorithms vehicle routing problem Ann Oper Res 41 4 1993 421451 32 PM Pardalos L Pitsoulis T Mavridou MG Resende Parallel search combinatorial optimization genetic algorithms simulated annealing tabu search grasp International Workshop Parallel Algorithms Irregularly Structured Problems Springer 1995 pp 317331 33 M Pavone SL Smith E Frazzoli D Rus Robotic load balancing mobilityondemand systems Int J Robot Res 31 7 2012 839854 34 H Qin W Zhang Charging scheduling minimal waiting network electric vehicles charging stations Proceedings Eighth ACM International Workshop Vehicular InterNetworking VANET 11 ACM New York NY USA 2011 pp 5160 35 SD Ramchurn M Polukarov A Farinelli C Truong NR Jennings Coalition formation spatial temporal constraints AAMAS 2010 36 T Raviv M Tzur IA Forma Static repositioning bikesharing models solution approaches EURO J Transp Logist 2 3 2013 37 E Rigas S Ramchurn N Bassiliades Managing electric vehicles smart grid artiﬁcial intelligence survey IEEE Trans Intell Transp Syst pp 11811188 187229 httpsdoi org 10 1007 s13676 012 0017 6 16 4 Aug 2015 16191635 38 ES Rigas SD Ramchurn N Bassiliades Algorithms electric vehicle scheduling mobilityondemand schemes 2015 IEEE 18th International Conference Intelligent Transportation Systems Sept 2015 pp 13391344 39 ES Rigas SD Ramchurn N Bassiliades G Koutitas Congestion management urban EV charging systems IEEE International Conference 40 V Robu EH Gerding S Stein DC Parkes A Rogers NR Jennings An online mechanism multiunit demand application plugin hybrid Smart Grid Communications SmartGridComm 2013 pp 121126 electric vehicle charging J Artif Intell Res 48 2013 175230 41 M Sachenbacher M Leucker A Artmeier J Haselmayr Eﬃcient energyoptimal routing electric vehicles AAAI 2011 42 T Sandholm S Suri A Gilpin D Levine Winner determination combinatorial auction generalizations Proceedings First International Joint Conference Autonomous Agents Multiagent Systems Part 1 AAMAS 02 ACM New York NY USA 2002 pp 6976 43 D Schrank B Eisele T Lomax Tti 2012 Urban Mobility Report Tech Rep 2012 44 R Serfozo Introduction Stochastic Networks SpringerVerlag New York 1999 45 S Smith M Pavone M Schwager E Frazzoli D Rus Rebalancing rebalancers optimally routing vehicles drivers mobilityondemand systems American Control Conference ACC 2013 June 2013 pp 23622367 46 K Spieser K Treleaven R Zhang E Frazzoli D Morton M Pavone Toward systematic approach design evaluation automated mobility ondemand systems case study Singapore Road Vehicle Automation Springer 2014 pp 229245 47 S Storandt Quick energyeﬃcient routes computing constrained shortest paths electric vehicles Proceedings 5th ACM SIGSPATIAL International Workshop Computational Transportation Science IWCTS 12 2012 pp 2025 48 S Storandt S Funke Cruising batterypowered vehicle getting stranded 26th Conf Artiﬁcial Intelligence AAAI 2012 49 S Storandt S Funke Enabling emobility facility location battery loading stations 27th Conf Artiﬁcial Intelligence AAAI 2013 50 O Sundstrom C Binding Planning electricdrive vehicle charging constrained grid conditions 2010 International Conference Power System Technology POWERCON 2010 pp 16 Sci 24 11 1978 11631174 51 FB Talbot JH Patterson An eﬃcient integer programming algorithm network cuts solving resourceconstrained scheduling problems Manag 52 J Tomic W Kempton Using ﬂeets electricdrive vehicles grid support J Power Sources 168 2 2007 459468 53 K Valogianni W Ketter J Collins D Zhdanov Effective management electric vehicle storage smart charging AAAI 2014 pp 472478 54 S Vandael N Boucké T Holvoet K De Craemer G Deconinck Decentralized coordination plugin hybrid vehicles imbalance reduction smart grid The 10th International Conference Autonomous Agents Multiagent Systems vol 2 2011 pp 803810 55 A Waserhole V Jost Pricing vehicle sharing systems optimization queuing networks product forms EURO J Transp Logist 2014 128 56 O Worley D Klabjan Optimization battery charging purchasing electric vehicle battery swap stations 2011 IEEE Vehicle Power Propulsion Conference Sept 2011 pp 14 57 W Zhang BranchandBound Search Algorithms Their Computational Complexity Tech Rep DTIC Document 1996