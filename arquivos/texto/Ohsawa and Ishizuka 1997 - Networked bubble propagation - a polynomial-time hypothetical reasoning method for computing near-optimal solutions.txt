Artificial Intelligence 91 1997 131154 Artificial Intelligence Networked bubble propagation polynomialtime hypothetical reasoning method computing nearoptimal solutions Yukio Ohsawa Mitsuru Ishizuka bl Department Systems Engineering Osaka University l3 Machikaneyama Toyonaka City Osaka 560 Japan b Department Information Communication Engineering Universiry Tokyo 73l Hongo Bunkyoku Tokyo 113 Japan Received March 1996 revised November 1996 Abstract Hypotheucal reasoning abduction important knowledge processing framework theoretical basis usefulness solving practical problems including diagnosis sign In cases probable hypotheses set diagnosis expensive design desirable Costbased abduction numerical weight assigned hypothesis optimal solution hypotheses set minimal sum element hypotheses weights searched deals problems However slow inference speed crucial prob lem costbased abduction NEcomplete In order achieve tractable inference costbased abduction aim obtaining nearly exactly optimal solution For approach approximate solution method exploited mathematical programming beneficial On hand standpoint knowledge processing important realize inference network reflects knowledge structure Knowledge structure fruitful information efficient inference In paper propose inference method works knowledge network based mechanism similar pivot complement method efficient approxi mate O1 integer programming method nearoptimal solution polynomial time Op N number variables hypotheses We refonnalize method new type network inference executed propagating bubbles This method achieves inference time 0 N executing bubble propagation small subnetwork taking aldvantage knowledge structure 1997 Elsevier Science BV Keywords Hypothetical reasoning Knowledge network Approximate solution method Polynomialtime inference Corresponding author Email osawasysesosakauacjp 1 Email ishizukamivtutokyoacjp 0004370271700 1997 Elsevier Science BV All rights reserved PIISOOO4370296000616 132 E Ohsawa M IshizukdArtifcial Intelligence 91 1997 131154 1 Introduction Hypothetical reasoning abduction useful knowledge 21221 knowledge diagnosis design Its logicbased components ble practical problems presented ground knowledge 2 hypothetical facts false contradict If _Z sufficient observed wished explained hypothetical hypotheses That function hypothetical following framework applica framework rules true H consists hypotheses true deriving given goal G searches reasoning Z supports G combined X set h satisfies knowledge H 2 composed inference hypotheses set h 2 H consistent constraints divided reasoning h C H ZuhtG 2 U h y 0 clause 2 3 hypotheses hypothesis We h solution associating G set observed modelbased observations Also associating components connection designing perform modelbased diagnosis symptoms set simply H possible hypothetical solution set As example state component reasoning perform h consistent hypothesis possible component G given specification finding set fault hypotheses 171 obtain hypotheses likely diagnosis In cases wish assigned set minimal design Costbased goal solution Here numerical weight hypotheses element hypotheses greatest posterior probability probability corresponding diagnosis solution lowest cost product weight possible hypothesis h According set hypothesis abduction deals type problem best explanation fault expensive solving H optimal solution cost searched cost sum weights set p likely abduction Also designing cost component weight element hypothesis This means 41 minimal given logp cost hypotheses available assigning obtained costbased However crucial problem hypothetical reasoning time nonmonotonic speed That consistency slow inference makes computation nentially number possible hypotheses proven symbolic goal like 161 employs useful portion knowledge parallel hypotheses NPcomplete proving inference starting 15271 To overcome approaches proposed Topdown including N The computational costbased abduction checking possible hypotheses time grow expo complexity speed 111 slow inference inference 28 focus search 61 MGTP starting seen ATMS goal On hand bottomup causes inference QSQR approach E Ohsawa M lshizukaArtificiaI Intelligence 91 1997 131154 rank vuX CwXSivarSi kl 143 10 11 The row Eq 11 variation second rank th rows mean boundary values matrix computation Procedure 3 Appendix B rank 1 zeroes righthand Eq 11 I nodes stays nonbasic value source node stays possible rank equal rank For example varSl Eq 11 computed Eq 10 Fig 6 var Sl varS2 0 Then var S2 1 1 row ratios nodes second variation var il var S1 var S2 var P var Q var R lllll 12 513 The calculation relative depths determined The relcztive depth denoted depthX varies value node X changes increases according upper bound basic node X smallest value Idepth X 1 destination corresponds If varT2 0 depthX denote indicates source nodes value upper lower bound Whether X decreases lower source value region We select search point kept feasible node This shift search point 1 2 2 Fig 1 defined Eqs 13 15 upX ZwX upper lower bounds node X respectively minimum 0 depthX 0 depthX UPX X varX wX x varX 0 depthX oo 13 14 1 Z Ohsawa M IshizukdArhcial Intelligence 91 1997 131154 1 Attachment ruling arrows procedure 3 2 The extracted propagation path respect Tl network 1 mows attached rank1 procedure Fig8 arrows attached rank2 procedure Fig8 3 The bubble propagated 71 P Fig 6 An example computing influence degrees 14 Eqs indicate inequalities 13 value X respectively Eq 15 means The basic node X decreasing destination node var X 0 bracket 0 71 Tr Iw Zr 71 Iw Tt count nodes goal upper lower bounds equal 21 Also varTl 0 0 node allowed selected source nodes bounds violated value change source node TI supposing In Fig 6 consider bubble conditions increasing Tl propagates node P Assume values bubble propagation TlS1S2PQR 00107070305 Since Tl upTl depthP calculated TI propagates variables computed time varPvurT computed 03 Eq 13 Similarly 10903030705 12 relative depths nodes bubble P increase 03 value P Thus variance jdepth P smallest 0 according Eq Since 1 Ohsawa M lshizukaArtijicial Intelligence 91 1997 131154 133 avoid backtracking There approaches combined inference based extension forts inference N path network method upsidedown metainterpretation time hypothetical reasoning merits 201 ef 121 method 3 Despite remains intractable exponential represented nearoptimal intractability computing propositional solution This computational abduction problem Ol research integer programming logic translated overcome developed PC N number variables Hence key insight solutions operations finds nearoptimal search near exactly optimal costbased abduction An efficient NP 2 This method pivot close polynomialtime method The overall procedure PC method 131 problem Then solution set minimal optimal solution method complete complement optimal solution takes time Op costbased integer programming equivalent Ol nearminimal cost obtained quickly PC method best existing methods solution quality computation time 131 However standpoint considering effective mathematical cessing obtain bridge predicate knowledge network fast approximate Ol research operations anism achieve executing operation focused subnetwork inference meaning viewpoint knowledge pro richer knowledge 191 Thus wish develop inference method works similar bridge knowledge processing networkbased mech faster original PC method That overall network sort black box procedure integer programming Also apart constructing knowledge particular knowledge PC method difficult structures Moreover understanding programming extend structure mechanism time reduced performance knowledge numerical representing improve calculations expression processing heuristics inference logic In paper translate briefly propositions tions defined real numbers method represented propagating time 131 The inference reduced ON performance proposed exactly optimal 2 employed Also practical cases 131 matrixbased PC mechanism process Very networkbased nodes network truth values proposi range 0 1 We introduce bubble propagation truth values arcs network faster 0 N4 calculations original PC method good 131 solutions translated integer programming outlined Section 4 explains PC method The remainder present paper follows In Section 2 cost Then Section networked runs network solution Section 7 based abduction problem 3 PC method constraint network called bubble propagation network constructed knowledge base In Section 5 illustrate inference new networked bubble propagation method The time performance quality estimated conclusional remarks given Section 8 Section 6 empirically theoretically 134 1 Ohsawa M IshizukdArtijicial Intelligence 91 1997 131154 2 Translation costbased abduction Ol integer programming knowledge represented We consider costbased abduction propositional Horn clauses single atom weight value For example paper Each possible hypothesis let Z set possible weighted hypotheses H represent background following knowledge base Knowledge Base 1 G goal stands case X2 X5 inconsistent coexist 1 1 0 upper lower bounds truth value G defined respectively The clause head means The values G anchored environment Knowledge Base 1 2 GX3 GX4 XX1X2X5 X4X5X6 incX2X5 H X1X2X5X6 The solution hypotheses violating given set h s H expected optimal Eq 4 h wanted constraints sum weights member support G minimal weightXl 1 weight X2 2 weight X5 1 weight x6 2 4 In order integer programming method applicable translate edge base inequalityconstraints Xi 12 samenamed We transform Eq 5 Also set Horn clauses sharing sionalatom likeYXtYX2 knowl In place let define structural variables truefalse Xi Y Their values restricted ANDrule 0 1 head Y conclu Y X ORrule transformed Y variables lO values corresponding atoms propositions propositional Horn clause Y Xi X2 X Eq 6 Saln I 0 s 0 lq 2 0 5 6 Here slack variables variables values slacks inequality constraints n defined like S z 12 SY 2xi cIYXi il 7 We set value goal G 1 0 That inconsistency hypotheses like X2 X5 taken Horn clauses false heads clause Under truth values defined constraints lattice point assignment feasible E Ohsawa M IshizukaArtiJCcial Intelligence 91 1997 131154 135 Fig 1 A visual illustration PC variables X Y 2 vertices larger black dot marks lattice points atoms integer value 1 0 optimal minimal cost sum weights element hypotheses solution set h searched The set element hypotheses truth values 1 interpreted solution hypotheses set h Thus costbased abduction translated Ol integer programming 3 Outliue pivot complement PC Our approach based networked reformalization PC method 21 efficient approximate solution method Ol integer programming Since PC method approximate method output solution exactly optimal minimum cost However solutions obtained near optimal ones detailed results 2 nearly 1000 involved variables difference optimal nearoptimal solutions low2 ordered magnitude optimal value object function This performance highly ranked existing Ol integer programming methods far Let outline PC method referring example illustrated Fig 1 structural variables X Y Z exist In Fig 1 solid line polyhedron 136 E Ohsawa M IshkukaArtifcial Intelligence 91 1997 131154 bound integer programming function feasible region constraints satisfied surfaces equality constraints For example 2X Y 22 14 striped surface bounds inequality constraint U E 2X Y 22 14 0 The task denoted u search lattice point feasible region Ol minimized defined objective A search point intersection surfaces dimension search surfaces U y z form vertex 1 Fig 1 Variables surfaces touch search point vertex 1 nonbasic variables V E X Y Z 05 surfaces u X Y Z 05 y Y 0 z Z 0 space corresponds intersect called nonbasic variables Y 2 correspond respectively Variables nonbasic variables called basic variables number structural variables The PC method local search method consisting phases The search begins point time method 5 IS14 polynomial time cases vertex 1 Fig point exact optimal cost quickly linear programming method strictly polynomial runs polynomial likely nonlattice vertex polyhedron local search phase better solution That complementing tural variables Fig 1 l search point moves vertex vertex 6 Fig 1 reached reduced values struc vertex 6 vertex 7 current 0 1 vise versa improvement phase attempt 241 The initial point value objective lattice point solution lattice point In phase flipping moving function Moving vertex change search point search phase value nonbasic vertex nonbasic basic variable changes executed value stay feasible region Here basic variation For Fig 1 moves prevent violation constraint V 3 0 In case vertex 2 1 OO vertex nonbasic bounded surface U Thus vertex 1 0500 search point moves pivoting exchanging nonbasic direction selected example direction X search point moves 2 violates variables basic vertex 2 U changes vertex 2 0700 constraint U 0 V Y Z U Y Z V nonbasic basic nonbasic change vertex 1 In search phase vertex nearer occur current position lattice point search continues 3 4 Fig I going feasible Ol improvement total time taken search phase broken chiefly violating constraint vertex takes region complementing executed 4 5 Fig 1 Complementing 7 Fig 1 Pivoting In PC procedure standstill cost value integer values reduce phase For easy comprehension later sections confess main strategy replace similar variables pivoting single propagation path timeconsuming pivoting propagation bubbles function pivoting runs faster That pairs basic nonbasic exchanged matrixbased PC method restriction pivoting operations faster propagation selected bubbles I Ohsawa M IshizukdArtijicial Intelligence 91 1997 131154 137 X1X2 s Y Ti Y Xi struchml node 1 4 u slack node Fig 2 A unit constraint network BPN 4 Networked bubble propagation NBP method In section translate search phase networked bubble propagation NBP We focus pivoting realized networkbased operations networked mechanism 41 Construction bubble propagation network BPN Our NBP method works bubble propagation network BPN unit networks corresponding corresponds knowledge The possible attached leaves We unit constraint network BPN structed connecting BPN constructed hypotheses overall BPN subsection AND ORrule overall background shown Eqs 5 6 networked called structural nodes associated structural variables called slack nodes like S I 12 variables The values nodes constrained slack nodes constrained Arcs connect p B A structural node A slack node B variation respect A That propagation coefficients Eq 7 Fig 2 circular nodes atoms Square nodes n associated slack 0 11 rate value B node A arrow directly points B slack nodes determined structural slack nodes propagation rates A propagation Eqs 5 6 structural nodes upper lower bounds unit value variation rates structural PCS Xi 19 pSY 1 PlXi 1 PTY 1 8 1 n The propagation rate p A B opposite direction defined 1 p B A Appendix A B A 138 E Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 c1 Q Fig 3 Networked representations Knowledge Base 1 1 Traditional network 2 Bubble propagation network BPN Let BPN Knowledge Base 1 Fig 3 1 shows traditional inference methods 121 Knowledge Base 1 The knowledge base represented BPN Fig 32 combining type knowledge network previous unit BPNs like Fig 2 constructed referring referred As illustrated Fig 4 figure 0 basic structural l nonbasic slack node We black color node means representation I nonbasic node nonbasic constant number nonbasic variables BPN determined location bubbles Fig 4 structural nodes correspond PC method Thus search point determined intersecting means Section 53 use node structural q basic slack state bubble The position search point determined structural variables A state space surfaces This nonbasic variables NBP method In example eightdimensional The initial state BPN determined linear programming shown Fig 4 1 like propagated search phase BPN transits initial final state propagating During state 1 2 bubbles pivot PC method stated Fig 4 The propagation bubble later Section 5 The search phase ends bubbles gather structural nodes node A Xi changing equivalent 42 Ruling arrows propagation path The important key fast inference NBP method bubbles time bubble direction ruling arrows considerably reduces I Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 Fig 4 Transitions BPN stated inference propagation That destination node bubble moves equivalent basic variable nonbasic variable exchanged pivot restricted small subnetwork propagation path determined ruling arrows A ruling arrow indicates initial node rules value terminal node More specifically l node determines value 0 1 rules values neighboring nodes On hand value 0 node determined according neighboring I nodes For example Eq 7 Xi determined values X1 determined S I S 0 Also IXlX2XilXil value 0 node fixed neighboring nodes determined This ordering ruling nodes given following procedure Procedure 1 depicted ruling arrows network Fig 5 illustrates ruling arrows attached BPN Fig 4 1 Procedure 1 Procedun 1 Attaching ruling arrows 1 2 3 4 5 6 Attach outgoing arrows 0 nodes adjacent nodes From I node incoming arrows attached adjacent nodes attach outgoing arrow excepted node From 0 node arrow incoming adjacent node attach outgoing arrows adjacent nodes Attach incoming arrows 0 nodes adjacent nodes To 0 node outgoing arrows attached adjacent nodes attach incoming arrow excepted node To I node arrow outcoming adjacent node attach incoming arrows adjacent nodes In Fig 4l ruling arrows attached edges bold lined edges Since exists directed path X2 Xs nodes rules value 140 L Ohsawa M IshizukaArtijicial Intelligence 91 1997 131154 Fig 5 Attaching ruling arrows BPN Fig 4 1 numbers indicate step Procedure 1 arrows attached A propagation path sequence edges starting source node non basic node bubble propagates following ruling arrows edges arrows traced Specifically propagation path given Procedure 2 A bubble propagates source node basic node propagation path ruling relation nodes consistent For example bubble node A propagates node Fig 4 1 bubbles This inconsistent redundant Also values structural nodes determined uniquely number bubbles reduced seven On hand bubble propagation node A X2 Xi free problem X1 X2 propagation path node A Each step bubble propagation nonbasic node 0 I focused propagation path Procedure 2 Determining propagation path 1 2 3 Propagation path source node Select node propagation path traced 2 If node stop Add E edges touching Z ruling arrows received Z V nodes edges E propagation path Set Z traced 2 E Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 141 5 Mechanism NBP method The mechanism NBP method explained section We explain bubble propagation process Section 51 supplement method minor improvements Section 52 Then Section 53 illustrate example NBP process Knowledge Base 1 5 I Numerical calculation bubble propagation A destination node basic node bubble moves source node selected change value source node Section 3 To select destination node following calculations necessary 1 Zke calculation influence degrees The influence degree defined w X Si variation value X respect unit variation representing node Si 12 rank representative 0 nodes rank later determined Procedure 3 computed summing products propagation rates edges path Si X 2 The calculation variation ratio The variation ratio ratio var Si 12 variations basic structural nodes Si 12 propagation path This variation ratio computed solving simultaneous equations coefficients given influence degrees constraint values n nodes source node vary bubble propagation The variation ratio variables Si 12 propagation path obtained later wX Si varX 3 The calculation relative depths From variation ratio tell node reaches lower upper bound minimal simultaneous change source basic node minimal relative depth In following explain details items 1 3 511 The calculation infIuence degrees w X St computed summing influences Si X paths arrows ruling arrows ones temporarily attached influence product propagation rates edges path This computation goes arrows cover propagation path More specifically Procedure 3 executed Here sets Z Z sets nodes arrows received procedure nodes arrows spouted procedure respectively Procedure 3 Computing infuence degrees source node given Tl propagation path I7 determined Procedure 2 1 rank 1 rank 1 Let St E ZZ 0 node adjacent TI let Z St TI Detach arrows 17 let J set nodes ZZ Regard Tl basic node temporarily end procedure 2 wSrankSrank 1 wX 0 node X E ZZ X k 142 E Ohsawa M IshizukaArtial Intelligence 91 1997 131154 3 Select 0 node I rl Z A If node exist select I node ngb ngb 1 incoming arrows B ngb number edges touching B Then remove B J 5 If node B 7 4 Attach outgoing arrows nonarrowed edges touching A For I node node C ends arrows wCSi wCSi PCAwASi 12nk add C I Go 3 5 If ngb 1 arrows incoming B attach arrow remaining edge touching B Call arrows end 0 node D Then add D I wDSi wDSi pDBwBSi 6 If ngb arrows incoming 7 If adjacent 0 node I node I node E Then rank B rank rank 1 Trankt B Go 3 rank 1 E add E Z 2 Otherwise stop An example Procedure 3 illustrated form propagation path source Tl This path extracted magnified Let assume rate values edge depicted propagation Fig 6 The bold solid lines Fig 6 1 Fig 6 2 While rank 1 beginning wStSi 1 obtain wTlSl p U St 1 Below denote variation wUSr 1 pTlSl value node X varX Next rank 2 node S2 selected step 7 1 Procedure 3 We obtain wVS2 1 p P V 1 Appendix A determine p P V The sequence operations proceeds w U SZ 1 obtained T2 U step 6 As result influence degrees obtained Procedure 3 stops pVS2 1 wP following figure 512 The calculation variation ratio The variation ratio ratio value variations nodes propagation vur X basic basic node source node Tl Tl path variation denoted bubble propagates included ratio nodes computed Eq 10 X arbitrary node variation var propagation obtain var St vur S2 var solving Eq 11 influence degrees obtained Procedure 3 ratio vur Sl vur variation Tl Since path E Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 145 varTlvarvarS2vurPvarQvurR 0150303030303 Eventually changed variances values TlPQR0150410100608 The goal calculations constraints lower bounds Fig 63 attaching ruling arrows step 1 Procedure 3 destination In fact values obtained satisfy node influence degrees variation ratios relative depths bubble propagates violating constraints upper propagation path detached state operations network shows edges 52 Other rejinements NBP method Along main strategy realizing pivoting propagation described refinements incorporated inference faster accurate bubbles Device 1 We prefer I nodes execme bubble propagation following reasons 1 If 0 node source basic nodes ones 0 nodes 0 selecting sources 0 I possible T Fig 6 That node A Fig 6 l select destination source node propagation path large For example area bold lines including solid dotted 2 Turning node l 0 returning l roundabout way complementing 21 pivoting prevalent I 0 PC method value In fact according Device 2 In search phase focus complement 0 nodes reached tracing edges direction ruling arrows starting l nodes propagation path includes constraint violation This l node 0 node violating Device 3 For improvement cutable time linear phase employ bottomup network size N shown inference process exe Improvement phase revised Test truth value 1 denied If derived Perform atoms denied accordingly true hypothesis action iteratively goal derived hypothesis actually deny hypothesis test hypothesis improve solution This procedure original improvement 0 N3 PC method phase PC method time reduction better obtained ON That variables tries complementing 146 k Ohsawa M IshizukaArtifcial Intelligence 91 1997 131154 3 atoms goal hypothesis complementing 4 atoms set PC method violate constraint Our new step improves cost solution set case 53 An example behavior NBP method We NBP method works problem Knowledge Base 1 It reaches initial state 1 Fig 4 solving linear programming problem The transition state 1 final state 3 shown Fig 4 l State 1 2 In state 1 values XlX2XsXX5X6 0505051051 A bubble propagates source Ti A X2 0 node St Procedure 3 While rank 1 source influence rates obtained WX3rX2 pX3rCpCX2 wX5X2 PBPB 1 1 Then varXI var X2 varX5 var A varother white nodes E n 1 1 1 2 1 lT propagation path node A nodes edges traced opposing ruling arrows starting A ZL7 includes bold lined nonartowed edges Fig 4 1 var X1 variation bubble A propagates Xt reaches state 2 At moment values x1X2X3X4X6 ooo 111 l State 2 3 Change 0 nodes values 0 1 0 Since solution obtained moment exactly optimal X5 X6 improvement phase run inference stops 6 The complexity NBP knowledge structure The hypothetical reasoning classified problems different complexity reported 15271 One important conclusions computational complexity inference depends knowledge structure A singly connected graph graph includes closed paths If knowledge network singly connected inconsistencies exist elementary hypotheses As search inference time hypothetical time constraint satisfaction problem 78 I Oksawa M IshizukaAmjcial Intelligence 91 1997 131154 141 reasoning polynomial number possible hypotheses knowledge network singly connected 151 In section computational complexity depends knowledge structure NBP The main point covered Theorem 1 Theorem 1 If original knowledge network singly connected 0 nodes 0 1 values This theorem means knowledge network singly connected struc tural variables values 0 1 output initial linear programming procedure needless execute search phase accurate BPN differs primal dual constraint network employed 7 S singly connected BPN translated singly connected primal dual network wider range problems singly connected BPNs Theorem 1 derived Lemmas 2 3 proven Appendix C Lemma 2 Zf ruling arrow attached edge BPN 0 nodes values 0 1 Lemma 3 A ruling arrow attached edge BPN overall knowledge network singly connected Besides deriving Theorem 1 Lemma 2 means NBP method reduces problem easier ones ruling arrows increases number l nodes bubbles propagate 0 0 nodes For example Fig 4 values 0 nodes 0 1 state 2 edges BPN attached ruling arrows Such structure dependency inference time good feature method unnecessarily long time regardless problem structure Note Theorem 1 extended 251 inconsistencies exist hypotheses 7 Experimental evaluation NBP method 71 Solurion quality test cases We implemented NBP method Sun SPARCstation 10 C The maxi mum main virtual memory experiments reported 83 Mbytes We applied NBP method hypothetical reasoning problems including 10 300 possilble hypotheses We generated test problems randomly condition body Horn clauses background knowledge 5 atoms An atom appeared 10 times overall background knowledge These restrictions unity densitywe want know dependency time problem size factors 148 r Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 feasible cases region temporarily like vertex 4 Fig 1 solutions obtained We evaluated solutions obtained test case cost For cases best solutions PC method NBP method break 250 problems For excepted recover standstill PC Since method PC NBP methods obtained exactly solutions search phase problems However Device 3 Section 13 problems 52 NBP method successfully obtained improvement solution set including better solutions NBP method invented reformalizing networked operations optimal Thus NBP method capable obtaining phase PC method stopped redundant PC method optimal solutions pivoting operations constraint violating 72 Evaluation computation time NBP method 721 An analytical estimation inference time NBP As stated couple subBPNs connected section focus propagation path bubble propagation The size propagation path increase overall knowl edge size That suppose generate new ratios number 0 Cl 0 I nodes larger If assume ratios equal combined BPN Since BPNs equal average size propagation extending propagation resultant BPN combination path determined propagation path encountering graphs ratiosvia I 0 node average size original pair BPNs probability path equal This leads faster inference NBP method PC method 0 matrix involved constant propagation path 0N2 matrix elements computed checked equality based original PC method number atoms order bubble propagation pivoting N number variables time reduced In NBP 0 N2 constantsized The total computation reduced time TWP formulated TNBP Cttit ch Timpr 16 Tinif Tsrch Impr denote improvement phases respectively Tsrch estimated time required linear programming search Tsrch number bubbles propagate b average number source candidates bubble propagation c searching time bubbles destination cx average size propagation path 17 Here CC N bubble propagation backpropagation propagation 0 nodes bubbles I node 0 node prevalent seldom occurs b nearly L Ohsawa M IshizukaArtcial Intelligence 91 1997 131154 149 Inferencetime CPUtime set 10000 1000 100 10 1 01 1 0 0 0 X 10 100 200 Number possible element hypotheses Hypothetical reasoning NBP method Hypothetical reasoning PC method Hypothetical reasoning implicit enumeration method Hypothetical reasoning Prologbased reasoning Fig 7 CPU time hypothetical reasoning NBP methods proportional N c constant order evaluation correct Tsrch order 0 N2 In NBP Timp order ON Device 3 Section 52 absolute value cnit time linear programming shorter Tsrch Timpr As conclusion estimate Tnp 0 N2 The main difference Tsp total time 0N4 PC method comes difference bubble propagation matrix calculation pivoting This merit coming reflecting knowledge structure networkbased mechanism 722 Experimental results Computational speeds Prologbased reasoning implicit enumeration method 11 IC method present NBP method depicted Fig 7 dot 150 E Ohsawa M IshizukaArtiial Intelligence 91 1997 131154 inference estimations average time problems certain problem 0 N4 0 N2 respectively Although depicts PC NBP methods close slightly theoretical Prologbased implicit enumeration methods allow obtainment strictly optimal solution time methods time The PC NBP methods compute nearoptimal ON2 obviously important particularly achieved NBP method practical adoption automatic computation practical tractable polynomial large problems Also jumping size The data case NBP significant improvement 0N4 inference solutions finish 8 Conclusions Recently usefulness local search rerecognized seen 9182326 Unlike methods salient efficient inference features PC method 1 use optimal real domain initial solution obtained quickly linear 2 programming method sophisticated knowledge network local search mechanism works real domain binary O 1 domain On hand networkbased structure knowledge base This structure reflects fast inference By merging merits networkbased N number possible hypotheses This considerably methods inference BPN achieved 0 N2 time hypothetical approach important knowledge network fast search PC method fruitful information reasoning faster previous This improvement inference region bubble propagating operation network pivoting operation This base important type focusing limited dealing largescale knowledge bases time new method comes restricting functionally equivalent knowledge region We developing predicate predicate Horn clauses recursion extending BPN advantage approach handling networked knowledge stepwise expansion manner topdown logic version NBP efficiently deal bubble propagation network 191 indicates Appendix A Propagation rate slack node structural node Definition pA B pB A For structural node A slack node B pointed valueof A arrow definepAB pABpBA 1 given pBA Reason definition variance V equal bubble propagation Yvar In Fig 6 2 value S2 varies vur S2 However node V stays nonbasic stays upper lower bound E Ohsawa M IshizukaArtijkial Intelligence 91 1997 131154 151 var V 0 Thus variance time value P offset effect S2 V pVPvurP pYS2vurS2 O var P varS2pYS2pYP Accordingly defining peV p P VpYvur obtained calculation ruling arrows starting 2 From equation variance value node P 1 obtain vurP pPVpyP Appendix B Proof rank rank end Procedure 3 The number 0 nodes equal number I nodes number K number bubbles 0 I number structural BPN Also Procedures 1 3 0 node nodes 0 0 receives arrow I node TI T2 Tronp spouts SlS29mk arrow Therefore K rank number arrows received structural nodes equal K rank number arrows spouted slack nodes arrows spouted slack nodes received structural nodes received structural nodes spouted slack ones It follows rank equal rank Appendii C Proofs lemmas Lemma Z If u mling arrow attached edge BPN 0 nodes values 0 1 Proof Every node specifically 0 nodes BPN element edges attached ruling arrows traced l nodes opposite direction ruling arrows loop arrows loop arrows tracing way However loop L arrows exist following reasons 1 If node L spout arrows edges L 0 node A edges L adjacent A spouted A 2 The node L spout arrows I node I node spout arrow edge receives arrows edges 3 L include 0 0 node 0 0 node spouter receiver arrows respectively Therefore 0 nodes value ruled l nodes ruling arrows Also iE I node P receives number Ps adjacent edges 1 ruling arrows value single remaining adjacent structural node P ruling arrow P outgoes equal 0 1 coefficients Eq 7 1 1 value 0 node restricted 0 1 152 I Ohsawa M IshizukaArtifcial Intelligence 91 1997 131154 Thus tracing ruling arrows beginning 0 nodes ruling arrows conclude 0 nodes values 0 1 q In proof Lemma 3 use Lemma 4 let precede proof Lemma 4 Lemma 4 Every edge BPN attached ruling arrow overall BPN singly connected Proof Here prove negation Lemma 4 false That suppose BPN singly connected includes attached Procedure 1 r set edges ruling arrows If assumption true exists directed subgraph G connected pruned BPN contradicts connected subgraphs connected equal edges pair nodes G connected edges G r connected edge e r This assumption directed r limitless looped graph included overall knowledge network overall BPN singly connected Thus edges touching node P E e n G e arrowed according definition G Therefore whichever 0 0 0 I node P e arrowed Procedure 1 This contradicts assumption e E r 17 Lemma 3 A ruling arrow attached edge BPN overall knowledge network singly connected Proof In place let classify slack nodes nodes S I Fig 2 type S T respectively For example Fig 3 lined squares type S bold lined type T network knowledge knowledge Now assume closed path If closed path exists BPN knowledge singly connected shares I nodes types S T Section 41 definition types including single AND ORrule R This type slack nodes S T singly connected isomorphic given knowledge network supposed subBNP subBPN singly connected given background Call I nodes T type S type shared closed path R nodes T S respectively Then XI Y Xt Y adjacent nodes T T 0 Therefore sum values nodes equal Xt Y R example lower bound n 1 S 1 n 0 S 0 upper bound S Eq 6 The l S 1 n S 0 ll X respectively value structural node range X l nodes n 1 structural R This redundant X slack nodes S T nonbasic n 1 nonbasic nodes n structural nodes equal X Fig 2 x2 x3 S Eq 5 possible values sets X2X3 OO 0 11 Thus X2X3 nodes X2X3 state nodes 0 E Ohsawa M lshizukaArtifcial Intelligence 91 1997 131154 153 inconsistent constraints assumption closed path exists overall BPN negated Thus overall BPN singly connected overall knowledge network singly connected This combined Lemma 4 derives lemma 0 References I E Baha An additive algorithm solving linear programs zeroone variables Opsearch 13 1965 517546 2 E Balas C Martin Pivot complimenta heuristic Ol programming Manage Sci 26 1980 8696 31 E Bry Query evahrtion recursive databases bottomup topdown reconciled Data Knowledge Eng 5 1990 289312 4 E Chamiak SE Shimony Costbased abduction MAP explanation Art Intell 66 1994 345374 5 GB Dantzig Linear Programming Extension Princeton University Press Princeton NJ 1963 6 J Kleer An assumptionbased TMS Art Intell 28 1986 127162 7 EC Freuder A sufficient condition backtrackfree search J ACM 29 1982 2432 8 H Geffner J Pearl An improved constraintpropagation algorithm diagnosis Proceedings IJCAI07 Milan 1987 1105l 111 9 J Gu Local search satisfiability SAT problem IEEE Trans Syst Man Cybern 23 1993 1108 1129 lo JN Hooker A quantitative approach logical inference Deck Support Syst 4 1988 4569 111 K Inoue Y Ohta R Hasegawa Hypothetical reasoning systems MGTP ICOT Tech Rept TR763 1992 121 M Ishizuka F Ito Fast hypothesetical reasoning inferencepath network Proceedings IEEE Conference Tools AI 1991 352360 131 M Ishxzuka T Okamoto A polynomialtime hypothetical reasoning employing approximate solution method Ol integer programming computing nearoptimal solution Proceedings IOth Bienniul Conference Canadian Society Computational Studies Intelligence Banff Alta 1994 179186 141 N Karmarkar A polynomialtime algorithm linear programming Combinatorics 4 1984 373395 151 HA Kautz B SeIman Hard problems simple default logics Proceedings First International Conference Principles Knowledge Representation Reasoning Toronto Ont 1989 189197 161 A Kondo T Makino M Ishizuka An efficient hypothetical reasoning predicatelogic knowledge base Proceedings IEEE International Conference Tools AI 1991 360367 171 T Makino M Ishizuka A hypothetical reasoning constraint handling mechanism applications circuitblock synthesis Proceedings Pacific Rim International Conference Artijcial Intelligence 90 Nagoya 1990 122127 181 S Minton Minimizing conflicts heuristic repair method constraint satisfaction scheduling problems Artc Intell 58 1992 161205 191 Y Ohsawa M Ishizuka Networked bubble propagation polynomialtime predicatelogic hypothetical reasoning networked bubble propagation method G McCalla ed Advances Artiicial Intelligence Proceedings Eleventh Canadian Conference AI Lecture Notes Artificial Intelligence 1081 Springer Berlin 1996 375387 20 Y Ohia K Inoue A forwardchaining hypothetical reasoner based upsidedown meta interpretation Proceedings International Conference Fjih Generation Computer Systems 1992 522529 21 D Poole A logical framework default reasoning Artif Intell 36 1988 2747 22 D Poole R Aleliunas R Goebel Theorist logical reasoning defaults diagnosis NJ Cercone G Macaha eds Knowledge Frontier Essays Knowledge Representation Springer New York 1987 154 Z Ohsawa hf IshizukaArtijicial Intelligence 91 1997 131154 23 B Selman H Kautz An empirical study greedy search satisliability testing Proceedings AAAI93 Washington DC 1993 4651 24 E Santos Jr A linear constraint satisfaction approach costbased abduction Artif Intell 65 1994 l28 25 E Santos Jr ES Santos Polynomial solvability costbased abduction Artif Intell 86 1996 157170 261 B Selman H Kautz Domainindependent extensions GSAT solving large structured satisfiability problems Proceedings IJCAI93 Chambery 1993 290295 27 J Stillman Its default complexity membership problems restricted propositional default logics Proceedings AAAI90 Boston MA 1990 571578 281 L Vieille From QSQ QoSaQ global optimization recursive queries Proceedings Expert Database Systems 1988 421435