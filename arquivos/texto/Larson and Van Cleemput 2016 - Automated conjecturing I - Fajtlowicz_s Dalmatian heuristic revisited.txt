Artiﬁcial Intelligence 231 2016 1738 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Automated conjecturing I Fajtlowiczs Dalmatian heuristic revisited CE Larson a1 N Van Cleemput bc Department Mathematics Applied Mathematics Virginia Commonwealth University Richmond VA 23284 United States b Department Mathematics European Centre Excellence NTIS New Technologies Information Society University West Bohemia Univerzitní 8 306 14 Plze ˇn Czech Republic c Department Applied Mathematics Computer Science Statistics Ghent University Krijgslaan 281 S9 WE02 9000 Ghent Belgium r t c l e n f o b s t r c t We discuss new implementation new experiments Fajtlowiczs Dalmatian conjecturemaking heuristic Our program makes conjectures relations real number invariants mathematical objects Conjectures matrix theory number theory graph theory reported experiment conjectures automate game play The program way design advances mathematical research These experiments suggest automated conjecturemaking useful ability design machines perform variety tasks require intelligence 2015 Elsevier BV All rights reserved Article history Received 22 December 2013 Received revised form 9 October 2015 Accepted 12 October 2015 Available online 2 November 2015 Keywords Automated conjecturing Automated conjecturemaking Mathematical discovery Automated scientiﬁc discovery Dalmatian heuristic 1 Introduction We reimplemented Fajtlowiczs useful littleknown Dalmatian heuristic automation mathematical conjecturemaking heuristic instance referenced pages journal The heuristic gen eral conjecture relations real number invariants objects mathematical We include examples conjectures number theory matrix theory graph theory characterization game positions One number theory conjectures implies stronger Goldbachs Conjecture Some number theory conjectures imply Riemann Hypothesis And graph theory conjectures advance lower bound theory independence number graph widelystudied NPhard graph invariant We implemented idea suggested Barry Mazur include existing theorems program way program guaranteed produce statements implied existing mathematical knowledge Our program makes interesting useful conjectures basis examples Humans ordinarily necessity decisions based limited data A general automated conjecturemaking module plausible useful guesses based limited data central architectural feature design machines intelligent Guesses instance constrain search possible actions Fajtlowicz introduced Dalmatian heuristic automation mathematical conjecturemaking 20 years ago 1 Simply heuristic produce considered mathematical statement truewith respect given examples matrices integers Corresponding author Tel 1 804 828 5576 fax 1 804 828 8785 Email addresses clarsonvcuedu CE Larson nicovancleemputgmailcom N Van Cleemput 1 The authors dedicate article Prof Justin Leiber teacher mentor friend inspiration httpdxdoiorg101016jartint201510002 00043702 2015 Elsevier BV All rights reserved 18 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 graphs etcand statement gives new information objects particular says objects implied stored statement conjecture It successfulboth limiting number conjectures produced earlier versions Graﬃti program producing conjectures research mathematicians His student DeLaVina reimplemented heuristic program produces conjectures led research publications mathematicians 2 heuristic Fajtlowicz experiments demonstrate domain independence Dalmatian heuristic predominant bestknown uses heuristicin programs Fajtlowicz DeLaVinahas production graph theory conjectures But heuristic speciﬁc production graph theory conjectures Our program opensource written Python C implemented Sage package Details acquisition use program Sage opensource mathematical computing environment reproduce results relegated Appendix A Our experiments implementing applying heuristic including domains authors knowledge browsed textbook reference book lead conclusions elaborate discuss 1 Successful mathematical discovery heuristics applicable variety mathematical domains 2 Good conjectures based limited data 3 Mathematical discovery programs aim produce conjectures address advance preexisting mathemat ical questions 4 Intelligent conjecturemaking programs domain require developer expertise domain Some conclusions surprising hope inspire new research automated scientiﬁc discovery We conjecturemakingand conjecturerevision face contradictory data counterexamplesas central feature intelligence We guesses based previous experience relevantly similar situations learn guesses wrong revise test experience 2 Background related work Turing famously proposed idea designing intelligent machines engineering problem proposed test evaluating success machines In 1948 suggested designing machines mathematical research starting point mathematical research certainly requires intelligence good starting point mathematical research require little contact outside world 3 In 1950s Newell Simon developed Logic Theorist program prove theorems ﬁrstorder logic went predict discover prove important mathematical theorem decade 4 Success come quicklybut signiﬁcant progress areas automating mathematical discovery theoretical impediment continued improvement There reason believe Newell Simons prediction achievedand likely sooner later The automation theorem proving far largest bestdeveloped area automated mathematical discovery research A highlight area 1996 proof Robbins Conjecture 5 More recently Timothy Gowers Fields Medalist likely accomplished mathematician research automated mathematical discovery Mohan Ganesalingam developed theoremproving program2 Research automated conjecturemaking initiated Wang late1950s 6 His Program II produced thou sands statements propositional logic considered conjectures potential theorems His program included heuristics deciding statements output Evaluated tool advancing mathematical research Wangs program failure He wrote It ﬁrst thought crude principles suﬃcient cut number theorems degree reasonably small number theorems remain It turns theorems The number theorems printed running machine hours formidable writer attempted analyze mass data obtained 6 What Wang wanted program produce limited number statements logicians Wang selected statements include publicationbut needed way program identify interesting useful important statements The ﬁrst program conjectures leading published mathematical research Fajtlowiczs Graﬃti program 7101 An early version Graﬃti called Sorcerers Apprentice 11 program like Wangs produced large number statements In Goethe poem Disney Fantasia version Mickey Mouse sorcerers apprentice intends use masters spells animate broom help carry bucket water ends 2 A preprint paper available arxivorgabs13094501 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 19 brooms buckets water help help allthe ﬂood water bigger mess clean ﬁrst place The Sorcerers Apprentice Problem reduce ﬂood potential conjectures useable scannable numberhow design program produce signiﬁcant interesting useful statements It diﬃcult program produce endless stream mathematical statements And given stream mathematical statements chance statements mathematical The problem produce ones This problem remedied Fajtlowiczs invention Dalmatian heuristic implemented early1990s versions Graﬃti 12 The Dalmatian heuristic design limits quantity output statements guarantees quality output statements The program conjectures number objects considered stored programso number generated conjectures fundamentally limited Each conjecture sig niﬁcant respect objecteach provide better information stored object conjectures When applied problem ﬁnding bounds invariantsin cases bounds preexisting research interestand provided examples objects existing theory suﬃce predict value invariant example program implementing Dalmatian heuristic produce conjecture In sense truth conjecture advance existing theory conjecture said interesting signiﬁcant The utility output improved including existing knowledge program We discuss experiment implementing new idea The Graﬃti program conjectures described Fajtlowiczs papers 13 The Dalmatian heuris tic ﬁrst appears 1 DeLaVinas Graﬃtipc program successor Graﬃti implements heuristic described 2 Selected conjectures Graﬃti commentary collected Fajtlowicz included evolving report Written Wall WoW distributed email interested researchers3 The conjectures Graﬃtipc collected DeLaVina Written Wall II WoW24 It worth noting differences programs Fajtlowicz experimented variety heuristics small number objects predominantly graphs DeLaVinas Graﬃtipc compute maintain use data millions graphs Graﬃti written Pascal commandline interface generally distributed Graﬃtipc written C Visual Basic designed users mind attractive GUI interface distributed interested students researchers The code programs distributed Our program shares use Dalmatian heuristic Graﬃti Graﬃtipc Our code freely available downloaded experimented modiﬁed It goal project encourage general use experimentation conjecturemaking programs easy The use existing bounds improve conjecture quality new described program Fajtlowicz reports conjectures 1 based database 600 graphs memory available computers day natural limitation number objects Graﬃti DeLaVina uses database connected graphs small number vertices typically million graphs While computers program runs relatively huge amounts memory program use large numbers objects practice small number objects generating conjectures The number use limited memory limits machine We generated millions objects searches counterexamples conjectures A variety programs developed attempt simulate research mathematicians conjec tures try produce conjectures mathematicians These include programs Fajtlowicz DeLaVina Lenats AM 1417 Epsteins GT 1819 Coltons HR 2023 Hansen Caporossis AGX 2426 Mélots Graphedron 2728 Graﬃti Graﬃtipc AGX led especially large number publications mathematical researchers There related interesting work automation mathematical discovery including GRAPH program Cvetkovíc large group University Belgrade collaborators 29 Brigham Duttons INGRID program 3031 geometry programs Bagai collaborators 3233 hypergeometric series work Wilf Zeilberger 34 applications automatic recognition integerrelations Borwein Bailey collaborators 35 3 The Dalmatian heuristic Fajtlowiczs Dalmatian heuristic conjecture relations real number invariants objects Many common objecttypes including graphs natural numbers matrices associated real number invariants Some mathematical objects including arbitrary topological spaces obviously associated real number invariants The numerical invariants graph include number vertices graph number edges maximum degree vertices numerous The numerical invariants matrix include determinant matrix rank number rows The numerical invariants natural number include number number factors number primes number number distinct primes unique factorization 3 A version 2004possibly version Fajtlowicz distributedcan ﬁrst authors blog independencenumberproject wordpresscom 4 Available cmsuhdedufacultydelavinaeresearchwowIIindexhtm DeLaVina maintains lists papers inspired conjectures Graﬃti Graﬃtipc cmsuhdedufacultydelavinaeresearchwowRefhtm 20 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 It possible generate conjectures single stored object Counterexamples existing conjectures added additional objects On approach objects database included exactly theoretical valueno object included arbitrarily Fajtlowicz suggests approach beneﬁts conducting research 1 The produced conjectures based limited number examples objects given type Let O1 On examples objects given type Let α1 αk real number invariants And let α invariant conjectured upper lower bounds An unlimited stream algebraic functions invariants formed α1 α2 α1 α1α3 α2 α42 One natural way approach grow trees representing expressions operators representing algebraic operations nonleaf nodeswith number subnodes equal arity operatorand invariants leaf nodes These expressions form conjectured bounds α If interested upper bounds α form inequalities α α1 α2 α α1 α α1α3 α α2 α42 These inequalities interpreted true objects given type That inequality α α1 α2 interpreted For object O αO α1O α2O A conjectured upper bound u added database conjectures bound passes following tests 1 Truth test The candidate conjecture α u true stored objects O1 On 2 Signiﬁcance test There object O O1 On uO minu1O urO u1 ur currently stored conjectures That candidate conjecture better bound αO previously conjectured upper bound These criteria capture Fajtlowicz calls Principle Strongest Conjecture strongest conjecture counterexample known By design truth test guarantees program know counterexample signiﬁcance test guarantees conjectured bound stronger gives better bounding value otherat single object known program What follows pseudocode main loop program case conjectured upper bounds invariant desired upper_bound potential conjectured upper bound invariant expression constructed invariants operators included program objects list examples known program The value invariant upper_bound applied O objects real number similarly value u applied O u conjectured_upper_bounds O objects real number In case truth signiﬁcance tests passed upper_bound added conjectures store conjectured_upper_bounds The main loop case lower bound conjectures parallel def truthinvariant upper_bound objects O objects invariantO upper_boundO return Fail return Pass def significanceupper_bound conjectured_upper_bounds objects O objects upper_boundO minuO u conjectured_upper_bounds return Pass return Fail def dalmatianinvariant upper_bound conjectured_upper_bounds objects truthinvariant upper_bound objects Pass significanceupper_bound conjectured_upper_bounds objects Pass conjectured_upper_bounds upper_bound def mainobjects invariants invariant conjectured_upper_bounds whilestopping_condition False upper_bound generate_next_potential_upper_bound dalmatianinvariant upper_bound conjectured_upper_bounds objects Here concrete illustration Dalmatian heuristic works example number theoryas invariants generally known We step generation conjectured lower bounds π x number primes x Note π 5 3 π 16 6 So ideally generate lower bounds π x maximum conjectured lower bounds applied object 5 3 maximum 16 6 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 21 Table 1 Dalmatian heuristic example 1 2 3 4 5 6 7 8 9 Lower bound expression sum_of_digits number_prime_factors number_of_divisors sum_of_digits2 number_prime_fac tors2 number_of_divisors2 sum_of_digits number_prime_factors sum_of_digits number_of_divisors number_prime_factors number_of_divisors Values 5 3 7 6 1 3 1 6 2 3 5 6 25 3 49 6 1 3 1 6 4 3 25 6 6 3 8 6 7 3 12 6 3 3 6 6 Truth test Signiﬁcance test Fail Pass Pass Fail Pass Fail Fail Fail Pass NA Pass Pass NA Fail NA NA NA Pass Conjectures store number_prime_factors number_of_divisors number_of_divisors number_of_divisors number_of_divisors number_of_divisors number_of_divisors number_prime_factors number_of_divisors The initial objects 5 16 invariants form potential lower bounds sum_of_digits number_prime_factors number_of_divisors operators 2 1 Here assume signiﬁcant conjecture added conjectures store insigniﬁcant conjectures removed The order potential lower bounds considered corresponds iteration number Table 1 First invariants selves represented tree root nodes considered followed application unary squaring operator invariants followed application binary sum operator applied distinct pair invariants Expressions formed unary add 1 operator formed program stops ninth iteration point conjectures conjecture store exactly predict value π x objects x 5 16 The considered conjecture Iteration 1 Table 1 sum digits integer x π x This true objects known program pass truth test conjecture store remains The considered conjecture number prime factors integer x π x This conjecture passes truth test true known objects trivially passes signiﬁcance test The conjectures store updated include lower bound The considered conjecture Iteration 3 number divisors integer x π x This true objects signiﬁcant lower bound better number_prime_factors lower bound known objects number_prime_factors added conjectures store In fact good known objects Since object x 5 16 number_prime_factorsx number_of_divisorsx The number_of_divisors bound removed conjectures store insigniﬁcant The change conjectures store comes Iteration 9 The considered conjecture number prime factors integer x plus number divisors π x This true known objects bound passes truth test The bound gives larger value number_of_divisors known objects signiﬁcant added conjecture store In fact number_of_divisors longer signiﬁcant bound removed At point object x maximum conjectured bounds equals actual value π x No bounds signiﬁcant program stops Some Graﬃtis bestknown conjectures following lower bounds independence number α graph maximum number pairwise nonadjacent vertices graph NPhardtocompute graph invariant prior addition Dalmatian heuristic program5 1 If G connected graph d α d average distance distinct vertices G Both average distance connected graph independence number graph wellstudied concepts This conjecture proved Chung 36 2 If G connected graph r α r radius G This conjecture originally proved Erd os Saks Sós 37 Another proof Fajtlowicz follows characterization graphs radius equals independence number 38 3 For graph G R α R residue G number zeros remaining repeated application HavelHakimi procedure degree sequence graph This conjecture originally proved Favaron Mahéo Saclé 39 reproved literature One nice proof Griggs Kleitman 40 5 The Dalmatian version Graﬃti conjecturesthey fact replicated Dalmatianbased conjecturemaking program ﬁrst author Patrick Gaskill blog independencenumberwordpresscom details 22 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 PreDalmatian versions Graﬃti generate interesting number theory conjectures including instance formula π x We record examples Graﬃtis Dalmatian heuristic conjectures domains 1 Graph theory WoW 747 If G connected graph d b 2 b bipartite number order largest induced bipartite subgraph 1 Here objects connected graphs average distance bipartite number graph invariants This conjecture generalizes Chungs theorem mentioned earlier recently proved Hansen collaborators 41 2 Geometry WoW 738 For vertex v triangle s length line segment bisects v extends opposite s length line segment v midpoint opposite Here objects triangle vertices s triangle vertex invariants It reasonable believe useful geometric knowledge awaits discovery In fact Coxeter claimed geometry developing fast kind mathematics 42 Nevertheless Graﬃtis geometry conjectures initiate research This explained reasons fundamental conjecture directly advance existing research question particular existing upper bounds length line segment bisects vertex extends opposite lower bounds length line segment vertex midpoint opposite 3 Chemistry WoW 895 For fullerene separator fullerene 1 Here objects fullerenes separator fullerene invariant Fullerenes recentlydiscovered 1985 form carbon include 60atom soccerballshaped buckyball Mathematically structure fullerene trivalent planar graph pentagonal hexagonal faces There instance 1812 mathematically possible 60atom fullerenes appears experiment 43 Many fullerenes different atom counts appeared experiment hollow structures like C60 endohedral structures form tubes technically incomplete fullerenes The fullerene literature vast includes large number papers connecting invariants mathematical structure physical invariants A mathematical fullerene invariant include difference largest secondlargest eigenvalue separator symmetric matrix representing bonding structure atoms There empirical evidence connecting large separator values fullerene stability 4445 Graﬃtis conjecture proved Stevanovi c Caporossi 46 It worth noting DeLaVinas Graﬃtipc program conjectures related electronic structure fullerenes reported 47 pp 127128 It said fullerene conjectures graph theory chemistry But graphs represent molecules 19th centuryin way advances chemists understanding subject ability predict chemical phenomenon 43 A prototypical example CoulsonRushbrooke Pairing Theorem 48 chemical graph theoretic language stated terms π electron energy levels alternant hydrocarbons terms eigenvalues bipartite graphs In books Fowler Manolopoulos Atlas Fullerenes instance counted chemistry counted graph theory hardly distinguished Fajtlowicz generated conjectures domains graph theory largely demonstrate heuristics invented limited use graph theory general domain independent 4 The program An expression generating program written C speed heart program In context expression rooted labeled binary tree rooted tree node children node respectively children labeled respectively binary operator unary operator invariant The expressions generated according increasing complexity deﬁned twice number binary operators plus number unary operators The program uses algorithm described 49 numbers generated structures compared implementation 50 The generated expressions tested true provided invariant values truth test handed internal heuristic output Internally implemented conjecturemaking heuristics Dalmatian heuristic andfor testing purposesthe heuristic described 49 Importantly results following sections reproducible Details ﬁnd code associated scripts collected ﬁnal section paper The general approach generating conjectures follows 1 Produce stream inequalities evaluable functions invariants inequality symbol Some pass truth signiﬁcance tests stored conjectures 2 Initialize initial collection objects These CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 23 3 Generate conjectures true stored objects signiﬁcant respect objects previously stored conjectures Pass generated statement truth signiﬁcance tests The program needs stopping condition The best case object conjecture gives exact value object In case possibility improving current conjecturesin sense conjectures better predictions values existing objectsexact predictive power objects achieved In case natural stopping condition attained stopping condition required One possibility simply stop making conjectures hardcoded userspeciﬁed time 4 Remove insigniﬁcant conjectures After conjecture added store conjectures case conjecture store longer signiﬁcant If conjectured upper bounds example invariant α generated conjectured bound αi conjectures store signiﬁcant respect stored objects object O αiO minα jO j cid7 object O bound gives better predicted value αO conjectured bound Insigniﬁcant conjectures removed 5 Search counterexample conjectures This human automated way In case number theory conjectures conjectures easily checked testing conjectures integer 1 arbitrary large integer In case objects usually require work generate stream distinct objects In case graphs McKays geng provides stream examples graphs single vertex userspeciﬁed number vertices 6 Add counterexample repeat conjecture generating testing process The program conjec tures number objects stored reason exactly conjecture conjectures store better bound stored object conjecture If instance stored objects conjectured bounds conjectured bounds possibly signiﬁcant best conjectures best bound objects second objectbut conjecture possible remaining objects unique best predicted value conjecture removed insigniﬁcant From point view user program required inputs program 1 A list objects The type arbitrary usually type To meaningful results represent mathematical type object For instance want generate conjectures graphs c5 k5 petersen predeﬁned graph objects deﬁne objects c5 k5 petersen objects parameter program 2 A list invariants These functions deﬁned type objects objects list For instance radius size order predeﬁned realvalued graph functions deﬁne invariants radius size order invariants parameter program 3 A positive integer listing position invariant list invariants like conjecture bounds list invariants For instance conjectures radius graph desired user enter 0 list parameters C program A concrete example use program Appendix A The outputs program conjecture objects These look like statements given examples subsequent sections paper In fact conjec tures text representations relationships invariants useful features encoded methods The program default conjectures upper bounds chosen invariant There non required user options In particular option generates lower bound conjectures The operators expression user options They hardcoded program unlike functions computing invariants operators needed C program Additional operators added making additions code A user exclude operators All conjectures reported set operators code changes 5 Matrix theory examples Neither author matrix theorist reason chose matrix theory domain experimenta tion Sage number builtin matrix invariants We implemented invariants 51 Sage procedures function way Sages builtin invariants The objects symmetric matrices property eigenvalues real The invari ants determinant nullity number zero eigenvalues rank number nonzero eigenvalues trace sum diagonal entries nrows number rows matrix permanent maximum_eigenvalue minimum_eigenvalue average_eigenvalue number_of_distinct_eigenvalues spectral_radius difference largest smallest eigenvalues ratio_min_max_absolute_eigenvalues ratio absolute values largest smallest eigenvalues sqrt_abs square root sum absolute values entries matrix frobenius_norm square root sum squares entries matrix 24 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Table 2 Upper bound conjectures determinant symmetric matrix 1 2 3 4 5 6 7 8 9 10 11 detx detx detx detx detx detx detx detx detx detx detx permanentx minimum_eigenvaluextracex maximum_eigenvaluextracex rankx 1spectral_radiusx permanentxmax_column_sumx1 maximumrankx minimum_eigenvaluex2 maximum_eigenvaluexminimumminimum_eigenvaluex tracex 1 minimum_eigenvaluexminimumtracex maximum_eigenvaluex maximum_eigenvaluexl_inf_normx separatorx tracexaverage_eigenvaluex permanentx maximum_eigenvaluex1minimum_eigenvaluexfrobenius_normx Table 3 Lower bound conjectures determinant symmetric matrix 1 2 3 4 5 6 7 detx detx detx detx detx detx detx minimum_eigenvaluexseparatorx minimumpermanentx lognullityx 2l_inf_normxnrowsx permanentx separatorx 1frobenius_normx permanentx l_inf_normxfrobenius_normx minimumrankx1 minimum_eigenvaluexnullityx 4l_inf_normx2 permanentx Table 4 Upper bound conjectures absolute value determinant symmetric matrix 1 2 3 4 5 6 8 9 10 11 12 13 abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx abs_detx lognullityx2 frobenius_normx2 frobenius_normx2number_of_distinct_eigenvaluesx l_inf_normxfrobenius_normx sqrtmaximum_eigenvaluex2frobenius_normx 4minimum_eigenvaluex2 average_eigenvaluex spectral_radiusx2number_of_distinct_eigenvaluesx spectral_radiusx2ratio_min_max_absolute_eigenvaluesx 1 maximum_eigenvaluex tracexfrobenius_normx maximumseparatorx2 maximumpermanentx l_inf_normx minimum_eigenvaluexspectral_radiusx 1 12minimum_eigenvaluex2spectral_radiusx Table 5 Lower bound conjectures absolute value determinant symmetric matrix 1 2 3 abs_detx abs_detx abs_detx average_eigenvaluex 1 rankx l_inf_normx 1 max_column_sum maximum sum entries column l_inf_norm maximum absolute value entries matrix separator difference largest second largest eigenvalues Bounds determinant matrix exist matrix theory literature For instance Hadamards Inequality says determinant matrix product Euclidean lengths vectors deﬁned columns 51 We presume new bounds researchers The following conjectures taken example program Matrix theorists generate conjectured bounds invariant advance research The ﬁrst round conjectures upper bounds determinant det symmetric matrix included Ta ble 2 In general expect counterexamples existing conjectures best objects input conjecturemaking program We ﬁnd experts systematically generating matrices testing satisﬁed conjecture counterexample We generated round conjectured lower bounds determinant symmetric matrix These Table 3 One round upper lower bound conjectures absolute value determinant included The upper bound conjectures Table 4 The lower bound conjectures absolute value determinant matrix Table 5 The second conjecture course trivially true point given better bound absolute value determinant object bound ﬁrst conjecture CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 25 Table 6 Lower bound conjectures Goldbachx 1st round 1 2 Goldbachx Goldbachx 1digits10x digits10x 1 Table 7 Lower bound conjectures Goldbachx 2nd round 1 2 3 4 5 Goldbachx Goldbachx Goldbachx Goldbachx Goldbachx euler_phixprime_pix euler_phix prime_pix count_divisorsx digits2x 12sqrt12sqrteuler_phix 12mertensx While use conjectured bounds invariant statements mathematical investigation possible use heuristic estimation invariant value An estimate value determinant matrix minimum values conjectured upper bounds determinant maximum values conjectured lower bounds While determinant matrix eﬃciently computable estimate practical hardtocompute invariantsfor example independence number graphwhere estimates generated eﬃciently computable conjectured bounds Another case conjecturedriven invariant estimates use characterizing class objects An example discussed connection game Chomp 6 Number theory conjectures We chose number theory domain experimentation author special knowledge subject We aware Goldbachs Conjecture distribution prime numbers Prime Number Theorem Riemann Hypothesis While expect contribution classical wellresearched area mathematics think experiments Goldbach 1742 letter Euler conjectured integer n 2 sum primes 52 The conjecture veriﬁed integers 4 1014 53 large number partial results continuing Let Goldbachx number representations x sum primes Goldbach6 1 Goldbach8 2 Clearly Goldbachs Conjecture true Goldbachx 0 x 2 Thus conjectured lower bounds Goldbachx potential utility researchers yield new avenues investigation The objects integers invariants integer invariants The ﬁrst run conjectures Goldbachx involved invariants prime_pi number primes x euler_phi number integers x relatively prime x number returns number x digits10 number digits base10 rep resentation x digits2 number digits base2 representation x sigma sum divisors x count_divisors number divisors x next_prime smallest prime greater x previous_prime largest prime smaller x count_quadratic_residues number quadratic residues x Most invariants included merely builtin Sage functions Table 6 records ﬁrst round Goldbachx conjectures Conjecture 1 curious bound goes 0 x gets large bound little predictive use Nevertheless object initially known program inte ger 4 object lower bound exactly predicts true value 1 Goldbach4 The second conjecture stronger general fails predict Goldbach4 supersede ﬁrst conjecture ﬁrst conjecture stronger x 4 Both conjectures tested true values x 1000000 No coun terexample second conjecture conjectures added list conjectures The second conjecture general stronger Goldbachs Conjecture true imply In order generate different conjectures removed digits10 invariant added new invariants mertens sum values Möbius function integers x 54 p 36 li logarithmic integral lower bound 0 zeta Riemann zeta function reciprocal_prime_sum sum reciprocals primes x max_prime_divisor largest prime divisor x prime_product product primes x The second run program produced conjectures Table 7 The distribution prime numbers time Gauss famously conjectured logx This Prime Number Theorem PNT π x number primes x asymptotic proved independently Hadamard ValléePoussin 1896 52 prime_pix Sage implementation π x There getting good explicit estimates π x One bound Rosser 55 says x 55 x x log x 2 π x x log x 4 26 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Table 8 Upper bound conjectures π x 1st round 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix prime_pix previous_primex numberx 1digits10x 12sigmax digits10x euler_phix maximumcount_quadratic_residuesx euler_phix 1 maximumeuler_phix 12numberx digits2x2 digits10x count_quadratic_residuesx 12euler_phix 1 next_primex numberx 1digits2x 2sigmaxdigits2x maximumeuler_phix 2count_divisorsx 2sqrtprevious_primex count_quadratic_residuesx previous_primex euler_phixlognumberx digits10x2 12 4count_quadratic_residuesx 2digits2x maximum12previous_primex digits10x digits2x next_primexlognumberx 1 sigmaxcount_divisorsxdigits2x 2numberx 1digits2x 12digits2x 14next_primex maximumdigits2x2 euler_phix count_divisorsx maximumeuler_phix 1 2count_divisorsx 2next_primex 1digits2x log10previous_primexlogdigits10xdigits2x 2count_quadratic_residuesx digits10x 2 sigmaxlognumberx 1 logdigits2x 1count_quadratic_residuesx previous_primexlog12count_quadratic_residuesx 14count_divisorsx2 count_quadratic_residuesx sqrt1count_divisorsxnext_primex logcount_divisorsxlog10 1count_quadratic_residuesx next_primexdigits10x 1 1 4sqrtprevious_primex 1 euler_phix numberxlognext_primex sigmax digits2xdigits10x 1 previous_primex 12count_quadratic_residuesx sigmax count_divisorsxdigits10x 12count_quadratic_residuesx sigmaxcount_divisorsxdigits2x 12count_quadratic_residuesx euler_phix next_primex digits2x2 previous_primex next_primex previous_primex digits2xsqrtcount_divisorsx maximum2digits2x previous_primex count_quadratic_residuesx maximumeuler_phix 1 count_quadratic_residuesx digits2x digits2xsqrtcount_divisorsx count_quadratic_residuesx logprevious_primexcount_divisorsxlog10 count_quadratic_residuesx maximumcount_quadratic_residuesx 12sigmaxdigits10x sqrtcount_divisorsxdigits10x count_quadratic_residuesx digits10x 2next_primexdigits2x sqrtdigits10x count_divisorsxnumberx Other wellknown bounds Rosser Schoenfeld 56 Conjectures ﬁrst run program recorded Table 8 The invariants ﬁrst run conjectures Goldbachx By design program know truth conjectures tested 49 integers 440 Conjectures 2 13 26 Table 8 possible similar form PNT We tested truth conjectures integers x 1000000 Conjecture 26 false x 467 Conjectures 2 13 true tested values x Lastly generated conjectures related Riemann Hypothesis The bestknown version conjecture posed Riemann claim zeros Riemann zeta function Von Koch showed Riemann hypothesis equivalent statement π x Lix lnt dt offset logarithmic integral Lix lix li2 54 p 37 Thus expect bounds π x Lix researchers x lnx x 201 Lix x 2 cid2 1 In initial run encountered Sorcerers Apprentice Problem Starting single integer object program generated conjectures counterexamples added store objects repeated process In making repeated rounds program soon produced 200 counterexamples 71 corresponding conjectures stopped ﬁrst 25 conjectures Table 9 The list long potential experts expected consider 71 conjectures mere handful conjectures CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 27 Table 9 Upper bound conjectures π x Lix 2nd round sqrtnumberxreciprocal_prime_sumx 1 reciprocal_prime_sumxdigits10x 1 sqrtnumberx 1 mertensx sqrtsigmaxcount_divisorsx 1 lognext_primexsqrtdigits2xlog10 mertensxdigits10x digits2x digits2xdigits10xreciprocal_prime_sumx sqrtsigmax mertensx reciprocal_prime_sumx2 logcount_quadratic_residuesx euler_phixreciprocal_prime_sumx digits2x numberxlognext_primex2 sqrtcount_quadratic_residuesxsqrtreciprocal_prime_sumx sqrt12sqrtsigmax mertensx lognumberxlog10reciprocal_prime_sumx 1 sqrtsigmaxdigits10xsqrt12 12maxmax_prime_divisorx 12euler_phix sqrteuler_phix logmax_prime_divisorxlog10 log2count_divisorsxlog10 digits2x maxdigits10x2 12count_divisorsx sigmaxsqrtreciprocal_prime_sumx 1 12sqrteuler_phix 12max_prime_divisorx sqrtsigmax mertensx sqrt12euler_phix digits2x maxcount_divisorsx sqrtcount_quadratic_residuesx 1 12logprime_productx 12sigmax π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix π x Lix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Table 10 Upper bound conjectures π x Lix improve Von Koch bound x 1000000 1 2 3 π x Lix π x Lix π x Lix digits10x14 digits2x sqrtnumberx logeuler_phix maximumdigits10x 12sqrtprevious_primex The conjectures wanted ones possible use proving Riemann Hypothesis In x lnx integers x 3 light ﬁltered conjectured bounds ones 1000000 The produced conjectures satisfying additional condition Table 10 7 Bounds graph theoretic domination number Both authors graph theorists Our interests research specialties include independence number theory graph generation chemical graph theory algorithm design expert theory dominating sets domination number graph A dominating set graph set D vertex graph D adjacent vertex D domination number graph cardinality minimum dominating set 57 Computing domination number graph intractable NPhard currently impossible general graphs moderate size Conjectured bounds domination number theoretical interestbounds functions eﬃciently com putable invariants practical interestthese lead speed domination number computations girth radius fractional_independence_number The objects connected graphs The invariants started included domination_number matching_number annihilation_number average_distance diameter order size szeged_index wiener_index average_degree min_degree max_degree residue Many standard graph theoretic invariants introductory texts 58 These invariants builtin Sage functions coded Sage procedures For acyclic graphs girth set inﬁnity The Szeged Wiener indices special chemical graph theory The fractional independence number optimum solution relaxation independence number linear program upper bound independence number The annihilation number degree sequence upper bound independence number introduced Pepper 5960 residue degree sequence lower bound independence number introduced Fajtlowicz 39 The invariants listed domination_number known upper bounds domination number eventually removed order try generate better upper bound conjectures Manual removal invariants way longer required inclusion use known bounds precluded initial production conjectures We McKays program geng 61 generate graphs small speciﬁed order loop automat edly ﬁnd counterexamples generated conjectures automatedly improve produced conjectures In run 28 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Table 11 Upper bound conjectures domination number graph 1 2 3 domination_numberx domination_numberx domination_numberx fractional_independence_numberx annihilation_numberx residuex 1 Fig 1 A counterexample Conjecture 3 Table 11 Table 12 Upper bound conjectures domination number graph 1st run 1 2 3 4 5 6 7 8 9 10 11 12 13 14 domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx 12orderx sizex 1 2diameterx 1 diameterx2 girthx2 residuex 2 average_degreex orderx maxradiusx average_distancexgirthx 2residuex 1 min_degreex residuex 2diameterx radiusx 2 min_degreex 1residuex 1 maxresiduex girthx orderx maxdiameterx orderx 2radiusx generating upper bound conjectures domination number program ended examples automated search counterexamples conjecture domination number graph matching number The conjecture exactly predicted true value domination number graphsand program stopped This known diﬃcult prove fact domination number Again existing theory included conjecture In run removed matching_number list invariants program generated conjectures Table 11 The ﬁrst knew true The false Ryan Pepper 24 vertex counterexample graph Fig 1 After adding Peppers counterexample generated run upper bound domination conjectures These Table 12 Stephen Hedetniemi coauthor standard reference domination 57 points second conjectures false K1 K2we including graphs order n 3 automated counterexample searchand trivially true graphs order n 3 The truth Conjecture 7 follows wellknown result He provided counterexamples Conjectures 3 4 5 11 The graph Fig 2 disproves 201 vertices domination number 100 girth 3 maximum degree 100 average distance 297 diameter 4 radius 2 We added Hedetniemis counterexamples objects program generated second round conjectures upper bounds domination number graph results Table 13 Several conjectures reappeared second round All conjectures ﬁrst remain open Finally generated round conjectured lower bounds domination number graph The results Table 14 The ﬁrst conjecture false Pepper points large cycles counterexamples The second conjectures curious trivially true point conjecturemaking process graphs bounds gave larger predicted domination number previously conjectured bounds CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 29 Fig 2 A counterexample conjectures Table 12 Table 13 Upper bound conjectures domination number graph 2nd run 1 2 3 4 5 6 7 8 9 domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx domination_numberx 12orderx sizex 1 2max_degreex 2 residuex2 orderx max_degreex diameterx max_degreex 1 2residuex 1 maxresiduex diameterx 1 maxmax_degreex 2diameterx min_degreex Table 14 Lower bound conjectures domination number graph 1st run 1 2 3 domination_numberx domination_numberx domination_numberx radiusx 1 1average_distancex 1radiusx 8 Lower bounds graphtheoretic independence number The independence number graph called stability number vertex packing number node packing number largest number mutually pairwise nonadjacent vertices graph It NPhard compute 62 practical theoretical large literature There 50 published bounds graph invariant In case goal generate conjectured lower bounds independence number consequences existing proved lower bounds It practically impossible compute independence number arbitrary graphs moderate size 2000 vertices6 In case authors specialists The ﬁrst author written papers theory maximum independent sets computation number applications 6364606545 But similar investigation carried nonspecialist collected published facts use Special use knowledge ﬁnd counterexamples conjectures ﬁnding counterexamples automated investigation entirely expert knowledge In previously reported experiments existing bounds included programand program rediscoveries Mazur later suggested including known boundstheoretical knowledgein program program making conjectures implied existing theory This easy implement conjectures store simple seeded known bounds In way program produces conjectures mathematically signiﬁcant precise sense better invariant value predictions objects known bounds The known bounds included experiments following aforementioned radius residue Fajtlowiczs maxevenminusminhorizontal bound maximum vertices v number vertices minus number edges subgraph induced vertices distance v bound Angel Campigotto Laforest 66 6 Neil Sloan maintains list abilities experts neilsloanecomdocgraphshtml 30 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Fig 3 GraphJAADW Table 15 Lower bound conjectures independence number graph 1 2 independence_numberx independence_numberx densityx lovasz_thetax min_degreex 1 card_peripheryx max_degreex residuex The upper bound theory independence number surprisingly good eﬃciently computable upper bound independence number graph good estimates true value invariant famous Lovász number ϑ graph Lovászs original deﬁnition terms orthogonal representations graph 67 There known equivalent deﬁnitions 68 All deﬁnitions relatively technical worth detailing One deﬁnition optimal value semideﬁnite programand solving semideﬁnite programs eﬃciently 69 We computed Lovász number independence number graphs 10 vertices 12 million simple graphs 10 vertices 70 For graphs ﬂoor Lovász number equals independence number Lovász number exactly predicts independence number No similar lower bound exists For small graphs residue good But order graph increases residue good Our goal ﬁnd new lower bounds advance theory While unlikely single lower bound predictive Lovász number upper bound possible lower bounds predictive given graph We conducted investigations ﬁrst small hard graphs second random graphs In ﬁrst investigation independence irreducible graphs 64 examples program These graphs admit deﬁnitions The signiﬁcance graphs calculation independence number graph eﬃciently reduced calculation independence number independence irreducible subgraph In sense hardest graphs independence number computations Here included eﬃciently computable graph invariants builtin Sage coded Sage procedures So investigation include domination_number include instance lovasz_theta The complete list independence_number card_center Graphconnected_components_ number cycle_space_dimension card_periphery Graphdensity Graphaverage_distance Graph diameter Graphradius Graphgirth Graphorder Graphsize Graphszeged_index min_degree Graphwiener_index max_degree Graphaverage_degree matching_number residue annihilation_ number lovasz_theta cvetkovic Here report conjectures program attracted ﬁrst author simplicity relation known bounds The ﬁrst conjecture independence irreducible graphs independence_number mingirth1 cvetkovic cvetkovic Cvetkovic bound minimum number nonnegative nonpositive eigenvalues graph It upper bound independence number The fact showed simple formula conjectured lower bound surprising The conjecture veriﬁed graphs vertices But counterexample vertices graph Fig 3 The conjecture independence_number 2matching_number2maximum_degree inde pendence irreducible graphs This conjecture veriﬁed graphs vertices But counterexample fourteen vertices graph formed putting single edge vertex 7cycle cycle graph seven vertices vertex second 7cycle The conjectures Table 15 veriﬁed graphs vertices remain open In previous run program potential counterexamples searched systematically generating small graphs McKays geng Counterexamples added objects program process iterated In run program use geng We wanted use larger graphs potential counterexamples systematic generation impossible instance approximately 1065 graphs order 25 We chose random selec CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 31 Table 16 Lower bound conjectures independence number graph 1 2 3 independence_numberx independence_numberx independence_numberx mingirthx matching_numberx1 peripheryx2maximum_degreex minedgesxorderx1diameterx tions graphs orders 10 25 search counterexamples These generated essentially choosing order graph pair vertices ﬂipping coin determine include edge vertices theory random graphs large dates 1950s 71 Three conjectures Table 16 They interpreted true random graphs The ﬁrst conjectures Table 16 interesting cause sense generalize radius lower bound independence number graph mentioned earlier following conjecture Graﬃti The second conjecture involves periphery cardinality set vertices maximum eccentricity 9 Chomp A conjecturemaking program design gameplaying program We initial experiment game Chomp Chomp impartial twoplayer perfect information game terminates ﬁnite number moves winning strategy 72 The game played rectangular board beginning completely covered cookies The upper left corner board contains poisoned cookie Which player eats poison cookie loses A consists player choosing square cookie removing cookie cookies right cookie right There board positions player N played perfectly N guaranteed win regardless future moves previous player play P makes The winning strategy N known special cases instance cookies form L rows cookies A winning strategy N general case known Given board position best N order secure eventual victory A position theoretically solvable despite fact human machine knows solutionit current human machine powers Ns goal current board position known solvable Our idea use known winning positions N known winning strategy objects generate conjectures positions use choice For Chomp game board easily represented 01 matrix 1s entries representing squares board cookies Various invariants deﬁned We deﬁned invariants Chompspeciﬁc use matrix invariants largest singular value obvious interpretation terms game play Chomp conjectures involving natural Chomp invariants provablein terms game strategyand initiate Chomp Theory Our ideal Chomp Theory consist number invariantrelation statements satisﬁed winning position satisﬁed losing position The invariants cookie_rank number different rows different number 1s equals matrix rank duplicate_columns number duplicated columns duplicate_rows number dupli cated rows first_two_columns_difference difference number 1s ﬁrst second columns first_two_rows_difference difference number 1s ﬁrst second rows possible_cookies initial number 1s beginning game number_of_cookies number 1s matrix L_difference difference length longest row longest column diagonal_cookies number 1s diagonal matrix max_column_cookies number 1s leftmost column matrix max_row_cookies number 1s topmost row matrix inside number 1s leftmost column topmost row The objects 26 simple winning game positions derived Gales original paper We generated conjectured upper lower bounds 12 invariants A possible game position satisfy winning position conjectures conjecture true winning position satisfy conjectures At moment game N number possible moves The heuristic choose yielding board position satisﬁed fewest number conjectureson theory yield position likely winning position P We implement lookahead heuristic A sample generated conjecturesall upper bound conjectures number cookies diagonal game boardare recorded Table 17 To extent conjectures true completely characterize winning game positions In case player human robot basing moves conjectures play maximally intelligent game Chomp 32 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Table 17 Upper bound conjectures number cookies diagonal game position possible_cookiesx max_column_cookiesx L_differencex 1 duplicate_rowsx cookie_rankx 1 1cookie_rankx sqrtL_differencex minduplicate_columnsx max_column_cookiesx cookie_rankx first_two_columns_differencex cookie_rankx first_two_rows_differencex cookie_rankx first_two_rows_differencex diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx diagonal_cookiesx 1 2 3 4 5 6 7 8 9 10 11 10 Future work These preliminary results conjecturemaking program based Dalmatian heuristic use searchers investigations bounds real number invariants objects Our example conjecturebased Chomp playing program suggests automated conjecturemaking functionality design intelli gent behaviors Researchers use program able improve results ways Some possibilities include following 1 Add invariants This issue design program use We relatively small numbers invariants In contrast DeLaVinas Graﬃtipc included 100 invariants originally developed 2001 2 2 Vary counterexampleﬁnding process Instead systematically generating possible small counterexamples choosing random examples size objects useful choose examples extremal respect invariants formula conjectured bound Hansen Caporossis AGX instance able generate examples 3 Add existing bounds ones proved literature conjectures program In way program produce conjectures example produced conjecture gives better bound known theorem conjecture In Fajtlowiczs terms produced conjectures informative signiﬁcant compared existing theory We initial experiments use idea successfully independence number conjectures 4 Use propertyrelations conjecturemaking program Generated counterexamples certain properties If commonalities identiﬁed possible reﬁne conjectures true The general ization Dalmatian heuristic design program makes conjectures relations properties objects explained Lastly discuss idea extending automation invariantrelation conjectures automation property relation conjectures The Dalmatian heuristic described conjectures relations invariants object Conjectures properties object A property condi tion object An integer perfect equals sum proper divisors Being perfect integer property given integer property Being wet integer property An example propertyrelation conjecture If integer perfect This stated Being perfect suﬃcient condition Being necessary condition perfect The analogues upper lower bounds invariant necessary suﬃcient conditions property Let P property integer perfect If suﬃcient conditions integer property desired conjecturemaking program need produce propertyexpressions Q 1 Q 2 statements form If integer property Q property P simply If Q P If necessary conditions desired program need produce statements form If integer property P property Q Let O1 On examples objects given type Let Q 1 Q k properties And let P property conjectured necessary suﬃcient conditions If objects integers G 1 Gn P property perfect P G True G perfect False G perfect An unlimited stream boolean functions invariants formed Q 1 Q 2 Q 1 Q 1 Q 3 Q 2 Q 4 Q 3 This stream produced way These expressions form conjectured necessary suﬃcient conditions P If interested necessary conditions P form statements P Q 1 Q 2 P Q 1 P Q 1 Q 3 P Q 2 Q 4 Q 3 These statements interpreted true objects given type That statement P Q 1 Q 2 interpreted For object O P O Q 1O Q 2O A conjectured necessary condition Q added database conjectures property passes following tests CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 33 1 Truth test The candidate conjecture P Q true stored objects O1 On 2 Signiﬁcance test There object O O1 On Q O Q 1O Q rO Q 1 Q r currently stored conjectures That candidate conjecture better necessary condition P O previously conjectured necessary condition If interested suﬃcient conditions P form statements Q 1 Q 2 P Q 1 P Q 1 Q 3 P Q 2 Q 4 Q 3 P These statements interpreted true objects given type That statement Q 1 Q 2 P interpreted For object O Q 1O Q 2O P O A conjectured suﬃcient condition Q added database conjectures property passes Truth Signiﬁcance tests In case signiﬁcance test follows Check object O O1 On Q O Q 1O Q rO Q 1 Q r currently stored conjectures That candidate conjecture better suﬃcient condition P O previously conjectured suﬃcient condition Another way think propertyrelation conjectures terms sets objects property Let P set objects property P Necessary conditions membership P deﬁne superclass N P What wanted conjectures superclass smaller smaller So conjectured necessary condition Q informative previous conjectures deﬁnes smaller superclass N cid12 P N cid12 N Similarly suﬃcient conditions membership P deﬁne subclass S P What wanted conjectures subclass larger larger So conjectured suﬃcient condition Q informative previous conjectures deﬁnes larger subclass S cid12 S Scid12 P The ﬁrst author described Dalmatianstyle necessary condition heuristic 13 DeLaVina Waller described implemented Dalmatianstyle suﬃcient condition heuristic 73 Sophie The Sophie version Graf ﬁtipc produced useful conjectures including following 1 WoW2 196a For connected graph G αG rG G Hamiltonian path 73 α inde pendence number graph r radius A Hamiltonian path graph path visits vertex exactly Here objects graphs properties equal independence number radius Hamiltonian path Suﬃcient conditions graph having Hamiltonian path continuing 7475 2 WoW2 329 For graph G G KönigEgerváry αG αcG α independence number graph αc critical independence number graph A graph KönigEgerváry independence number graph plus matching number graph equals number vertices graph These graphs generalization bipartite graphs KönigEgerváry Theorem guarantees bipartite graphs property 58 It continuing ﬁnd new characterizations class graphs 7679 Sophies conjecture proved 64 We conclude section emphasizing Dalmatian heuristic applied production non mathematical conjectures requirement objecttypes mathematical They physical The requirement objecttypes real number invariants Application Dalmatian heuristic given situation requires problem represented question value numerical invariant ob ject The answer terms relations numerical invariants object So object main invariant invariants speciﬁed data examples provided conjectured bounds main invariant generated assuming values invariants conjectures predictions value main invariant In sequel paper plan discuss ideas automated conjecturemaking programs design conscious robots We believe automated conjecturemaking invariant property relations broader applications described researchers experiment conjecturemaking programs variety settings 11 Discussion Finally discuss observations use program 1 Successful conjecturemaking programs require domainspeciﬁc heuristics The description Dalmatian heuristic refer particular branch mathematics mathematical objecttypes We demonstrated general utility graph theory number theory matrix theory characterizing game positions Graﬃtis post Dalmatian conjectures geometry chemistry graph theory provided evidence domainindependence provided evidence It claimed different domains require different heuristics The authors speciﬁcally generated conjectures mathematical areas expert knowledge We paged relevant books looking invariants try determine invariants experts interested conjectured bounds Knowledge existing theorems improve conjectures produced conjecturemaking program This knowl edge experts havebut expert knowledgeanyone page relevant texts papers ﬁnd theorems Knowledge examples objects appeared literature domain improve conjectures For program described guarantee truth produced conjecture respect 34 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 objects It useful intelligent counterexampleﬁnder We know oneor require domainspeciﬁc heuristics The object generators research derlying idea These ﬁnite structures systematically generated objects desired size No expert knowledge required Generators like geng generating graphs simply eﬃcient ones nonexperts write A graph order n instance simply symmetric 01 matrix A nonexpert easily write program generates symmetric 01 matrices order There sense domainspeciﬁc knowledge use improving conjecturemaking programs experts need consult literature ﬁnd invariants examples write eﬃcient object generators Nevertheless know example successful conjecturemaking program uses domainspeciﬁc heuristics And claim domainspeciﬁc heuristics necessary 2 Success conjecturing programs design Scientiﬁc discovery general result effort directed speciﬁc questions aware case discovery traced work speciﬁc prob lems Even famous example Flemings discovery penicillin counterexample Fleming investigating antibacterial agents The success mathematical discovery programs contributed mathematical discovery largely ex plained fact designed advance speciﬁc mathematical problems Fajtlowiczs Graﬃti DeLaVinas Graﬃtipc program Conjecturing discussed contribute advancing research existing mathematical prob lems insofar produce bounds mathematical invariants bounds existing Borwein Baileys programs contribute advancing existing mathematical problems insofar produce closed form expressions hy pergeometric series AGX contributes advancing existing mathematical problems insofar ﬁnds characterizations families extremal graphs McCunes theorem prover contributes advancing research existing mathematical prob lems insofar proved open conjectures Part reason programs contribute scientiﬁc discovery designed contribute scientiﬁc discovery designed things existing mathematicians Many mathematical discovery programs successful designed address speciﬁc problems Development program contributes scientiﬁc discoveries requires knowing counts contribution scientiﬁc discovery successful discovery program contribution Scientists mathematicians address issue work scientiﬁc discovery ﬁrst know open questions ones central And scientiﬁc mathematical research equal value Discovery eﬃcient algorithm computing independence number graph instance explosive theoretical practical consequences yield eﬃcient algorithm NPhard invariant The discovery odd perfect numberwhose existence open question time Euclidwould far fewer mathematical consequences maybe practical consequences The way determine value mathematical research engage community mathematical researchers users mathematics research connected existing mathematical questions potential consequences research external criteria judging value mathematical research Many mathe matical papers explicitly address existing mathematical problemthey intend contribution answering outstanding question helping better understand problem diﬃculties developing tools attacking problem In contrast mathematical papers explicitly implicitly address exist ing mathematical problem contribution scientiﬁc discovery considerably tenuous Some address curious observationperhaps small integers written sum primesand attempt explain observation Some results mathematical literature recorded textbooks passed reproved extended generalized usedand forgotten The utility mathematics natural sciences science raison detre primary source value society Of course mathematicians like Hardy famously proclaimed desire pursue mathematical truths completely practical utility 80 He speciﬁcally mentions want research use weapons design worth noting Hardy claim hoped research mathematical utilityof course interested advancing existing mathematical problems The examples gives useless mathematics theorems inﬁnitely prime numbers square root irrational But mathematics addressed existing mathematical questions mathematical utility mathematicians interested prime numbers speculated lengths commensurable proof 2 irrational shows A researcher attempt design conjecturemaking program produce statements interesting sur prising 81but produced statements advance existing problem expected scientiﬁc contribution regardless interesting surprising Colton instance set program HR ﬁnd relations integer invariants sigma sum divisors tau number divisors integer property isprime Among conjectures program produced isprime sigmaa isprimetaua CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 35 Unless existing necessary conditions primality sum divisors integer suﬃcient conditions primality number divisors integer statement advance existing mathematical research Some limitations statements produced conjecturemaking program required order produced statements use researchersthey instance need relatively simple form Human researchers feeling meaning truth complicated statements What Hardy calls depth statement partly measured syntactic complexity It human mathematicians abilities wrestle complex statements involving multiple invariants Computers able investigate deeper statements humans able As automated theoremproving programs improve complicated conjectures usethey proved applied machines complexity aside true statements making predictions guiding behavior 3 Intelligent conjecturemaking programs require sophisticated datamining techniques An interesting feature pro grams implementing Dalmatian heuristic conjectures based examples In way similar human conjecturemakers If added examples counterexamples previously conjectures examples signiﬁcant program useless examples stored required Again similar humans We dont remember exampleonly signiﬁcant ones 4 Developers programs contribute scientiﬁc discovery try simulate human scientiﬁc discovery If design program humans scientiﬁc discoveries course solved problem automating scientiﬁc discovery But program counted intelligent things distinctly nonhuman ways The chess Deep Blue certainly said play intelligent chess Since success program ability evaluate hundreds millions positions secondfar human capabilitiesDeep Blue said simulate human chess playing Some researchers aimed simulate human scientiﬁc discovery 82 Others aimed produce programs contributed new scientiﬁc discoveries Some hoped These differences tensions date earliest days research Wangs criticism Simon Newells Logic Theorist program wasnt actually good proving theorems Wang produced program better job proving body test theorems 6 Simon Newells response goal develop program primary aim prove theorems develop program proves theorems way humans simulate human theoremproving abilities Wang claim program simulated human theorem proving Lenats work AM cited contribution research automation mathematical discovery 81 But AM designed mathematical discoveries designed produce statements addressed existing mathematical problems And mathematical discoveries It designed entirelyto simulate human mathematical discoveryand evaluated standards simulation research Research automated scientiﬁc discovery look build successful ideas discovery research Confusion issue simulation versus discovery dates earliest days research Wang reports read Lenats dissertation development AM program writes build baﬄing foundation 83 What Wang failed understand Lenats program contribution simulation research designed contribute mathematical research And confusion continues present daywhich corrected hinder research programs meant contributions mathematical discovery Acknowledgements The authors like thank Murray Campbell Ermelinda DeLaVina Wyatt Desormeaux Teresa Haynes Stephen Hedetniemi Charles Johnson Douglas Klein Doris Larson Barry Mazur Steven J Miller Andrew Odlyzko Ryan Pepper giving useful comments correcting typos ﬁnding counterexamples conjectures providing literature references We appreciate help We like thank William Stein Sage contributors work Sage amazing resource indispensable project The authors like thank referees careful reading useful suggestions greatly improved quality presentation This research supported project NEXLIZ CZ1072300300038 coﬁnanced European Social Fund state budget Czech Republic Appendix A Acquiring program We provide program experimentation development Readers encouraged explo rations Our program Conjecturing available nvcleempgithubioconjecturing It functions package Sage open source mathematical software program 84 Sage intended free replacement general mathematical software programs Maple Matlab Mathematica In contrast proprietary programs examine correct improve Sages included algorithms code Sage users develop programs research encouraged include public distribution Sage general use user base community developers large growing Versions Sage major operating systems manuals documentation available wwwsagemathorg Examples use program discussed 36 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 Our program designed Sage package The attraction Sage project stems fact free easytouse large number builtin invariants variety mathematical objects researchers easily use code Sage uses Python interface language includes wellknown packages GAP algebra SINGULAR algebraic geometry PARI number theory LAPACK linear algebra R statistical computation NumPy SciPy numerical computing CVXOPT convex optimization linear semideﬁnite programming The ﬁrst program expression generator described earlier This C program wrapped Sage package allows installed command The second program containing main loop Python ﬁle conjecturingpy This ﬁle loaded Sage provide seamless integration expressions generator Dalmatian heuristic It provides method conjecture thatin basic formtakes arguments list objects list invariants main invariant invariant wants ﬁnd bound The objects Sage objects provision invariants able translate objects numerical values The invariants functions single argument inputs objects The main invariant represented index location list invariants The conjecturemaking code partly based Patrick Gaskills code related project available githubcomIndependenceNumberProjectinp What follows short example conjecture method Sage sage def max_degreeg return maxgdegree sage invariants Graphsize Graphorder max_degree sage objects graphsCompleteGraphn n 345 sage conjectureobjects invariants 0 sizex 2orderx sizex max_degreex2 1 sizex 12orderxmax_degreex The ﬁrst lines example deﬁne new existing Sage graph theoretic invariant max_degree The line speciﬁes invariants list builtin userdeﬁned invariants potentially appear conjectured expressions user remove add likes The fourth line speciﬁes objects list graphs program making conjecturesin case list initialized complete graphs Again user remove add arbitrarily oth ers The conjecture function takes lists invariants objects number specifying invariants invariants list main invariant case 0 input indicating invariants0namely Graphsizeshould main invariant The lines output program conjectured upper bounds size graph All conjectures happen false necessarily true complete graphs 3 4 5 verticesbut false graphs input list Scripts generate conjectures reported runs program available nvcleempgithub ioconjecturing The scripts generate conjectures listed Table 18 The purpose providing scripts twofold They allow reproducibility results provide models researchers imitate generating conjectures Exact reproducibility depend researcher machine speed second authors The expression generation program times 5 seconds A user faster machine generate expressions test truth signiﬁcance machine slower machine generate fewer expressions In case possibility ending slightly different conjectures conjectures report All invariants experiments builtin Sage functions userdeﬁned procedures The code userdeﬁned procedures ﬁles matrixtheorypy numbertheorypy graphtheorypy Here details generation matrix theory conjectures The ﬁrst rounds conjectures sym metric 2 2 matrices integer entries ranging 10 10 This allow systematic generation family examples In fact 2 2 matrices turned special subclass matrices lead good conjecturesother researchers quickly 3 3 matrices counterexamples Furthermore specialness examples led nongeneral conjectures In run instance program conjectured symmetric matrix absolute value determinant large smallest eigenvalue In fact conjecture true 2 2 matrices integer entries But certainly true general diagonal matrix 1 2 s diagonal counterexample CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 37 Table 18 Associated scripts conjecture runs Conjectures Script Table 2 Table 3 Table 4 Table 5 Table 6 Table 7 Table 8 Table 10 Table 9 Table 11 Table 13 Table 14 determinant_upper_bound_conjecturespy determinant_lower_bound_conjecturespy abs_determinant_upper_bound_conjectures1py abs_determinant_lower_bound_conjectures2py goldbach_conjectures1py goldbach_conjectures2py prime_pi_conjectures1py riemann_conjecturespy riemann_conjecturespy domination_upper_bound_conjecturespy domination_upper_bound_conjectures2py domination_lower_bound_conjecturespy We expect generation larger matrices larger range entries lead better conjectures In case impossible systematically generate interesting class researcher experiment choosing randomly generated matrices chosen class McKays program geng generating graphs speciﬁed order freely available non commercial use works easily Sage References 1988 Congr Numer vol 66 1988 pp 2332 Raton FL 1987 Congr Numer vol 60 1987 pp 189197 Boca Raton FL 1989 vol 70 1990 pp 231240 1 S Fajtlowicz On conjectures Graﬃti V Graph Theory Combinatorics Algorithms vols 1 2 Kalamazoo MI 1992 WileyIntersci Publ Wiley New York 1995 pp 367376 2 E DeLaVina Graﬃtipc variant Graﬃti DIMACS Ser Discret Math Theor Comput Sci 69 2005 71 3 A Turing Intelligent machinery The Essential Turing 2004 pp 395432 4 HA Simon A Newell Heuristic problem solving advance operations research Oper Res 6 1 1958 110 5 W McCune Solution Robbins problem J Autom Reason 19 3 1997 263276 6 H Wang Toward mechanical mathematics IBM J Res Dev 4 1960 222 7 S Fajtlowicz On conjectures Graﬃti Proceedings First Japan Conference Graph Theory Applications Hakone 1986 vol 72 1988 pp 113118 8 S Fajtlowicz On conjectures Graﬃti III Nineteenth Southeastern Conference Combinatorics Graph Theory Computing Baton Rouge LA 9 S Fajtlowicz On conjectures Graﬃti II Eighteenth Southeastern International Conference Combinatorics Graph Theory Computing Boca 10 S Fajtlowicz On conjectures Graﬃti IV Proceedings Twentieth Southeastern Conference Combinatorics Graph Theory Computing 11 BA Cipra The sorcerers apprentice Science 244 4906 1989 770 12 E DeLaVina Some history development Graﬃti Graphs Discovery DIMACS Ser Discret Math Theor Comput Sci vol 69 Amer Math Soc Providence RI 2005 pp 81118 13 CE Larson A survey research automated mathematical conjecturemaking Graphs Discovery DIMACS Ser Discret Math Theor Comput Sci vol 69 Amer Math Soc Providence RI 2005 pp 297318 14 DB Lenat The ubiquity discovery Artif Intell 9 3 1977 257285 15 DB Lenat On automated scientiﬁc theory formation case study program Mach Intell 9 1979 251286 16 DB Lenat The nature heuristics Artif Intell 19 2 1982 189249 17 R Davis DB Lenat KnowledgeBased Systems Artiﬁcial Intelligence McGrawHill International Book Co 1982 18 SL Epstein On discovery mathematical theorems IJCAI 1987 pp 194197 19 SL Epstein Learning discovery systems search mathematical knowledge Comput Intell 4 1 1988 4253 20 S Colton A Bundy T Walsh Automatic concept formation pure mathematics Proceedings 16th International Joint Conference Artiﬁcial Intelligence IJCAI99 vol 2 Morgan Kaufmann Publishers 1999 pp 786791 21 S Colton Refactorable numbersa machine invention J Integer Seq 2 991 1999 2 22 S Colton Automated Theory Formation Pure Mathematics Springer Heidelberg 2002 23 S Colton Automated conjecture making number theory HR Otter Maple J Symb Comput 39 5 2005 593615 24 G Caporossi P Hansen Variable neighborhood search extremal graphs 1 autographix Discrete Math 212 1 2000 2944 25 G Caporossi P Hansen Variable neighborhood search extremal graphs 5 Three ways automate ﬁnding conjectures Discrete Math 276 1 26 M Aouchiche G Caporossi P Hansen M Laffay Autographix survey Electron Notes Discrete Math 22 2005 515520 27 H Mélot Facet deﬁning inequalities graph invariants graphedron Discrete Appl Math 156 10 2008 18751891 28 J Christophe S Dewez JP Doignon G Fasbender P Grégoire D Huygens M Labbé S Elloumi H Mélot H Yaman Linear inequalities graph invariants graphedron uncover optimal relationships Networks 52 4 2008 287298 29 D Cvetkovi c I Gutman The GRAPH useful tool chemical graph theory J Comput Chem 7 5 1986 640644 30 R Brigham R Dutton INGRID software tool extremal graph theory research Congr Numer 39 1983 337352 31 RD Dutton RC Brigham F Gomez INGRID graph invariant manipulator J Symb Comput 7 2 1989 163177 32 R Bagai V Shanbhogue JM Zytkow SC Chou Automatic theorem generation plane geometry Methodologies Intelligent Systems Springer 2004 8194 33 R Bagai V Shanbhogue JM Zytkow SC Chou Discovery geometry theorems avoiding isomorphic situation descriptions Proceedings Fifth International Conference Computing Information ICCI93 IEEE 1993 pp 354358 34 HS Wilf D Zeilberger Towards computerized proofs identities Bull Am Math Soc 23 1 1990 7783 35 JM Borwein DH Bailey Mathematics Experiment Plausible Reasoning 21st Century AK Peters Natick MA 2004 1993 pp 415424 38 CE Larson N Van Cleemput Artiﬁcial Intelligence 231 2016 1738 York 1998 36 FRK Chung The average distance independence number J Graph Theory 12 2 1988 229235 37 P Erd os M Saks VT Sós Maximum induced trees graphs J Comb Theory Ser B 41 1 1986 6179 38 S Fajtlowicz A characterization radiuscritical graphs J Graph Theory 12 4 1988 529532 39 O Favaron M Mahéo JF Saclé On residue graph J Graph Theory 15 1 1991 3964 40 Jerrold R Griggs Daniel J Kleitman Independence HavelHakimi residue Discrete Math 127 13 1994 209212 Graph theory appli cations Hakone 1990 41 P Hansen A Hertz R Kilani O Marcotte D Schindl Average distance maximum induced forest J Graph Theory 60 1 2009 3154 42 D Logothetti HSM Coxeter An interview HSM Coxeter king geometry TwoYear Coll Math J 11 1 1980 219 43 PW Fowler DE Manolopoulos An Atlas Fullerenes Clarendon Press Oxford 1995 44 PW Fowler KM Rogers S Fajtlowicz P Hansen G Caporossi Facts conjectures fullerene graphs leapfrog cylinder Ramanujan fullerenes Algebraic Combinatorics Applications Gößweinstein 1999 Springer Berlin 2001 pp 134146 45 S Fajtlowicz CE Larson Graphtheoretic independence predictor fullerene stability Chem Phys Lett 377 56 2003 485490 46 D Stevanovi c G Caporossi On 1 2spectral spread fullerenes Graphs Discovery DIMACS Ser Discret Math Theor Comput Sci vol 69 Amer Math Soc Providence RI 2005 pp 365370 47 SM Daugherty Independent sets closedshell independent sets fullerenes PhD thesis Victoria BC Canada 2010 AAINR66829 48 RB Mallion DH Rouvray The golden jubilee CoulsonRushbrooke pairing theorem J Math Chem 5 1 1990 121 49 A Peeters GrInvIn software framework education research graph theory Thesis PhD Ghent University 2008 50 A Peeters K Coolsaet G Brinkmann N Van Cleemput V Fack GrInvIn nutshell J Math Chem 45 2 2009 471477 51 RA Horn CR Johnson Matrix Analysis 2nd edition Cambridge University Press 2012 52 GH Hardy EM Wright An Introduction Theory Numbers 5th edition Oxford University Press 1979 53 J Richstein Verifying Goldbach conjecture 4 1014 Math Comput 70 236 2001 17451749 54 RE Crandall C Pomerance Prime Numbers A Computational Perspective vol 182 Springer 2005 55 B Rosser Explicit bounds functions prime numbers Am J Math 63 1 1941 211232 56 JB Rosser L Schoenfeld Approximate formulas functions prime numbers Ill J Math 6 1962 69 57 TW Haynes ST Hedetniemi PJ Slater Fundamentals Domination Graphs Monogr Textb Pure Appl Math vol 208 Marcel Dekker Inc New 58 DB West Introduction Graph Theory 2nd edition Prentice Hall 2001 59 R Pepper On annihilation number graph Recent Adv Appl Math Comput Inf Sci 1 2009 217220 60 CE Larson R Pepper Graphs equal independence annihilation numbers Electron J Comb 18 1 2011 61 BD McKay Nauty users guide version 24 Computer Science Dept Australian National University 2007 62 Michael R Garey David S Johnson Computers intractability A Guide Theory NPCompleteness Ser Books Math Sci WH Freeman Co San Francisco Calif 1979 63 CE Larson A note critical independence reductions Bull Inst Comb Appl 51 2007 3446 64 CE Larson The critical independence number independence decomposition Eur J Comb 32 2 2011 294300 65 E DeLaVina CE Larson A parallel algorithm computing critical independence number related sets Ars Math Contemp 2015 press 66 E Angel R Campigotto C Laforest A new lower bound independence number graphs Discrete Appl Math 161 6 2013 847852 67 L Lovász On shannon capacity graph IEEE Trans Inf Theory 25 1 1979 17 68 Donald E Knuth The sandwich theorem Electron J Comb 1 1994 1 48 pp electronic 69 L Lovász Semideﬁnite programs combinatorial optimization Recent Advances Algorithms Combinatorics CMS Books MathOuvrages Math SMC vol 11 Springer New York 2003 pp 137194 70 RC Read RJ Wilson An Atlas Graphs vol 21 Clarendon Press Oxford 1998 71 Béla Bollobás Random Graphs second edition Cambridge Stud Adv Math vol 73 Cambridge University Press Cambridge 2001 72 D Gale A curious Nimtype game Am Math Mon 1974 876879 73 E DeLaVina R Pepper W Waller Independence radius Hamiltonian paths MATCH Commun Math Comput Chem 58 2 2007 481510 74 RJ Gould Updating Hamiltonian problema survey J Graph Theory 15 2 1991 121157 75 RJ Gould Advances Hamiltonian problema survey Graphs Comb 19 1 2003 752 76 RW Deming Independence numbers graphsan extension KoenigEgervary theorem Discrete Math 27 1 1979 2333 77 F Sterboul A characterization graphs transversal number equals matching number J Comb Theory Ser B 27 2 1979 228229 78 L Lovász Eardecompositions matchingcovered graphs Combinatorica 3 1 1983 105117 79 JM Bourjolly WR Pulleyblank KönigEgerváry graphs 2bicritical graphs fractional matchings Discrete Appl Math 24 1 1989 6382 80 GH Hardy A Mathematicians Apology The University Press 1940 81 S Colton A Bundy T Walsh On notion interestingness automated mathematical discovery Int J HumComput Stud 53 3 2000 351375 82 P Langely HA Simon GL Bradshaw JM Zytkow Scientiﬁc Discovery Computational Explorations Creative Process MIT Press Cambridge MA 1987 83 H Wang Computer theorem proving artiﬁcial intelligence Computation Logic Philosophy Springer 1990 pp 6375 84 W Stein Sage open source mathematical software version 2102 The Sage group httpwwwsagemathorg 2008