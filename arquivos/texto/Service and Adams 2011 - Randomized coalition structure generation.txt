Artiﬁcial Intelligence 175 2011 20612074 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Randomized coalition structure generation Travis Service Julie Adams b Vanderbilt University 357 Jacobs Hall 2201 West End Nashville TN 372351824 USA b Vanderbilt University 359 Jacobs Hall 2201 West End Nashville TN 372351824 USA r t c l e n f o b s t r c t Article history Received 25 December 2010 Received revised form 11 July 2011 Accepted 1 August 2011 Available online 9 August 2011 Keywords Coalition structure generation Coalition formation Characteristic function game Randomization employed achieve constant factor approximations coalition structure generation problem time previous approximation algorithms In particular manuscript presents new randomized algorithm generate 2 3 n2587n time improving previous algorithm approximate solution O n283n time guarantee performance Also presented new required O techniques allow 1 4 approximate solution generated optimal time O 2n improves previous best approximation ratio obtainable O 2n time 1 8 The presented algorithms based careful analysis sizes numbers coalitions smallest optimal coalition structures An empirical analysis new randomized algorithms compared deterministic counterparts provided We ﬁnd presented randomized algorithms generate solutions utility comparable returned deterministic counterparts cases producing better results average Moreover signiﬁcant speedup approximation ratios randomized algorithms deterministic algorithms In particular randomized 1 2 approximate algorithm runs approximately 224 time required deterministic 1 2 approximation algorithm problems 20 27 agents 2011 Elsevier BV All rights reserved 1 Introduction Many situations require partitioning agents disjoint teams coalitions coalition cooperatively com pletes subgoal subtask 13 However process optimally partitioning agents coalitions computationally diﬃcult fact number potential coalitions scales exponentially number agents Characteristic function games class cooperative games models cooperative multiagent situations assigning coalition value indicating joint utility agents receive form coalition 1247 For example utility difference utility earned completing subtask assigned potential coalition estimated cost incurred task execution Given set agents N characteristic function game deﬁned function ν N Rcid20 The value νC coalition C N joint utility members C receive C forms A coalition structure simply partitioning agents disjoint coalitions The coalition structure generation problem CSG problem construct coalition structure C S maximizes νC S cid2 CC S νC Corresponding author Email addresses tserviceacmorg T Service julieaadamsvanderbiltedu J Adams 00043702 matter 2011 Elsevier BV All rights reserved doi101016jartint201108002 2062 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 The asymptotically fastest algorithm solve CSG problem exactly based dynamic programming runs O 3n time 28 Due high computational complexity optimal CSG algorithm research focused development anytime algorithms While anytime algorithms quickly return approximate solutions worst case current anytime algorithms require O nn time determine optimal solution far worse O 3n time dynamic programming algorithm Among current stateoftheart Rahwan et als 1 Integer Partition algorithm Due high computational complexity constructing optimal coalition structure recent work focused developing approximation algorithms return solutions bounds quality time O 3n 910 For example prior algorithm capable returning solution 2 n283n time This paper improves stateoftheart CSG approximation algorithms presenting randomized algorithms achieve approximation ratios prior work require signiﬁcantly time For example new randomized approximation algorithm capable generating 2 n259n time This result improves n283n time deterministic algorithm approximation ratio We gen previous O 4 approximation optimal time O 2n algorithm observe values 2n 1 coalitions erate 1 order guarantee approximate solution 2 3 approximation O 3 optimal O Our methods permit approximation ratios unachievable current approximation algorithms For example randomized algorithm ﬁrst designed guarantee 3 5 approximation ratio All presented approximation algorithms probabilistic sense guaranteed return stated approximation ratio high probability Iteratively running algorithms small number times simply taking highest quality solution yields stated approximation ratio high probability For example given algorithm ﬁnds 2 2 running algorithm k times taking best result yields 2 3 approximation ratio probability 1 2 k Several presented algorithmic results form 3 approximation probability 1 1 Algorithm A returns coalition structure guaranteed value factor probability greater 1 2 A runs expected time O gn f optimal That output algorithm quality solution presents random variable presented algorithms runtime algorithm random variable An empirical study presented shows randomized algorithms perform similarly deterministic coun terparts terms utility ﬁnd higher quality solutions Further shown run time randomized algorithms approximation guarantees signiﬁcantly faster deterministic algorithms The remainder paper organized follows Section 2 describes prior work coalition structure genera tion Section 3 presents new randomized algorithms coalition structure generation Section 4 provides empirical comparison new randomized algorithms deterministic counterparts Section 5 presents concluding remarks 2 Related work Much algorithm research focused coalition structure generation problem The current fastest algorithm guaranteed ﬁnd optimal solution based dynamic programming requires O 3n time ﬁnd optimal coali tion structure n agents 728 Given high computational complexity recent work focused development anytime approximation algorithms Sandholm et al 2 developed ﬁrst anytime algorithms coalition structure generation problem Sand holm et al viewed coalition structure generation search lattice partitions n agents referred coalition structure graph Sandholm et als algorithm proceeded searching levels coalition structure graph coalition structures consisted coalitions followed breadth ﬁrst search graph examining coalition structures consist coalitions followed coalition structures consist 1 coalitions Sandholm et al derive guarantees quality best solution far based levels coalition structure graph searched Among stateoftheart anytime coalition structure generation Rahwan et als 16 Integer Partition algorithm As Sandholm et als algorithm Integer Partition algorithm searches directly space coalition struc tures The Integer Partition algorithm groups coalition structures subspaces based sizes coalitions contain For example coalition structures 1 2 3 4 3 4 1 2 subspace contain coalition size 2 coalitions size 1 Rahwan et al generate upper lower bounds quality coalition structures subspace The Integer Partition algorithm uses bounds perform branch bound search space coalition structures Empirically Rahwan et al shown Integer Partition algorithm capable quickly pruning subspaces consideration performs signiﬁcantly better Sandholm et als algorithm While Integer Partition algorithm performs empirically problem distributions possible construct distributions Integer Partition algorithms performance deteriorates signiﬁcantly 10 The worst case runtime required ﬁnd optimal solution Integer Partition algorithm Sandholm et als algorithm O nn worst case coalition structure examined O nn coalition structures T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2063 21 Deterministic approximation algorithms Our recent work focused developing approximation algorithms coalition structure generation guar anteed ﬁnd approximate solution given quality O 3n time 910 For example shown possible ﬁnd approximate solution value 2 n283n time All current approximation algorithms deterministic return answer time run problem instance The currently reported research expands stateoftheart showing employ randomization generate approximate solutions quality guarantees time current deterministic techniques 3 optimal O The presented randomized approximation algorithms relying deterministic preprocessing phase This preprocess ing phase formed basis previous approximation algorithms The following deﬁnitions Deﬁnition 21 A characteristic function ν monotonic iff C S N νC cid2 νS Intuitively characteristic function monotonic adding agent coalition harm coalition members Deﬁnition 22 A characteristic function ν ksuperadditive iff C S N 1 C S 2 C S cid2 k νC νS cid2 νC S C1 Ck k cid3 2 optimal coalition structure superadditive game C S If ν nsuperadditive superadditive merger coalitions larger coalition harm C1 Ck1 Ck ful If C S optimal This means superadditive game coalition structure places agent coalition referred grand coalition optimal 2 Superadditivity natural assumption If coalitions C1 C2 merge worst case members C1 C2 behave merger occur receive value νC1νC2 However larger coalitions times incur additional overhead communication andor computational overhead 11 It merger coalitions beneﬁcial point That point coordination costs outweigh potential beneﬁt derived larger coalition The notion ksuperadditivity models situations For example game ν ksuperadditive C1 C2 earn strictly utility C1 C2 independently cost coordinating actions members C1 C2 outweighs additional utility C1 C2 k Our previous work showed superadditive games existence optimal coalition structures coalitions ksuperadditive games guaranteed 9 Theorem 23 Let r cid2 n positive integer If ν n coalitions If ν 2n 2r1 superadditive ν optimal solution consisting 2r 2 coalitions r superadditive ν optimal solution consists 2r 1 The reader directed prior paper 9 formal proof Theorem 23 intuition follows Let ν ksuperadditive C S contains 2 coalitions ν ksuperadditive νC1 C2 cid3 coalitions C1 C2 contains k νC1 νC2 However new optimal coalition structure fewer coalitions constructed replacing C1 C2 2 coalitions Less C S 2 agents Therefore coalitions C1 C2 contradiction Hence coalition C S small coalition coalition k optimal coalition structure ν smallest number coalitions If C S k formally C S C S large Our prior work showed construct new game ν k characteristic function game ν r r kn r superadditive monotonic 1 ν k 2 optimal solutions ν ν k 3 given approximate solution ν k r r value solution equal greater value constructed ν polynomial time Pseudocode construction monotonic ν k r broken steps 9 The ﬁrst step shown Algo rithm 21 takes arbitrary coalitional game ν constructs new game ν k monotonic The second step shown Algorithm 22 uses newly constructed ν k kn r superadditive monotonic r r kn r superadditive necessarily construct new game νmax 2064 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 Algorithm 21 Constructing ν k r ν k cid11 1 1 cid10 kn r C N C 2 C νC 3 cid13 C cid13 ν k C C ν k ν k ν k r C 4 5 6 r r cid13 ν k C C C cid13 ν k r C C cid13 C r r r 7 8 9 end end end 10 end 11 ν k r C νC C C kn r Algorithm 21 constructs kn r superadditive game considering merger pair disjoint coalitions C S order increasing size For coalition C cid2 k best value possible splittings C C S cid2 kn r disjoint coalitions stored ν k C By proceeding order increasing size results ν k C equalling value C set equal νC optimal coalition structure agents C For coalitions C k agents ν k In addition storing value coalition optimal way split coalition C smaller coalitions S C S stored Given coalition structure ν k coalition equal value constructed ν following splittings coalitions r r r r Algorithm 22 Constructing νmax 1 k 1 n 2 3 C N C k C νmaxC ν k C r 4 5 6 7 8 9 νmaxC νmaxC νmaxC νmaxC end end end 10 end r r C Algorithm 22 constructs monotonic game setting C N νmaxC maxSC ν k requires taking maximum 2 sidering coalitions order increasing size When considering coalition C νmaxS maxScid13S ν k S cid2 C Thus determining maxSC ν k C This total process requires O n2n time S Naively building νmax values coalition C Algorithm 22 constructs νmax eﬃciently cid13 S C S requires taking maximum C 1 values ν k C ν k Notice known ν optimal solution C S This result true C value great coalitions C S consists k solutions coalition C argmaxCN νC value νC S Likewise C1 Cm m cid2 k disjoint possibly coalitions maximize νC1 νCm disjoint sets Given set m coalitions coalition structure m possible coalitions νC1 νCm cid3 m constructed polynomial time 9 Algorithms ﬁnd original game ν value m collection m coalitions referred solution extraction procedures Previous deterministic approximation algorithms worked constructing ν k C2 Since ν k possibly coalitions C1 C2 maximized ν k accomplished taking maximum νC νN C C N O 2n time This technique yields approximate solution ν 1 ν extracting disjoint monotonic ﬁnding coalitions constructed ν 1 constructed C1 ν k k νC S k νC S 2 2r1 k r1 approximation solution ν 2 2r1 r r r r r r r r 3 Randomized coalition structure generation This section presents randomized algorithm approximate coalition structure generation The presented techniques signiﬁcantly improve runtimes deterministic counterparts The algorithms presented succeed ﬁnding f approximate solution probability greater e1 e Rerunning algorithm example times selecting best solution runs results f approximate solution probability 1 1 e1 e 3 095 probability runs fail ﬁnd f approximate solution 1 e1 e 3 However performance algorithm probabilistic element The algorithms runtime random variable When algorithms runtime random variable report T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2065 algorithms expected runtime The observed runtime presented algorithms close expected runtime high probability All presented results follow careful analysis number coalitions respective sizes particular optimal solution As result single randomized approximate algorithm capable generating approximation ratios presented Instead necessary tailor algorithm approximation ratio Therefore different algorithm approximation ratio presented Many presented algorithms involve examining coalitions agents contain ﬁxed fraction cid11 agents The ﬂoor symbols dropped statement cid4 agents coalitions consist cid10 n r algorithms correctness proofs order improve readability For example integer The ﬂoor n r formula derived asymptotic bounds r implicitly taken situations Removal ﬂoor symbols affects readability n r written n cid3 n All presented randomized approximation algorithms based following underlying idea Given arbitrary coalitional game ν ﬁrst construct ν k appropriately chosen k r Second extract m disjoint coalitions maximize combined value It previously shown accomplished O n2n time m 1 2 The main contribution work situations extracting m disjoint possible coalitions maximize sum values m 3 4 possible simple randomized algorithms r In summary presented randomized approximation techniques variations following procedure 1 Construct ν k stant m r ensure exists optimal coalition structure contains m coalitions 2 Run possibly multiple solution extraction procedures return best solution Multiple solution extraction procedures required smallest optimal solution contain 1 m coalitions Each extraction procedure designed handle subset possible sizes smallest optimal solution kn r rkn r time 9 All presented algorithms require ν k r mono monotonic requires additional O n2n time 9 Unless stated requires O Constructing ν k nrn2 kn r rk tonic Enforcing constraint ν k assume ν k monotonic k r r r Algorithm 31 represents ﬁrst solution extraction procedure extract disjoint coalitions C1 C2 maxi mize ν k r C1 ν k C2 r Algorithm 31 Extracting coalitions monotonic ν 1 C1 N 2 C2 3 C N 4 5 6 7 8 end νmaxC νmaxN C νmaxC1 νmaxC2 C1 C C2 N C end The second extraction procedures Algorithms 32 33 randomized require priori knowledge maximum sizes coalitions extracted Algorithm 32 works follows Assume known disjoint coalitions C 3 total value f times optimal solution A simple randomized approach ﬁnd disjoint coalitions total value f times optimal simply adds agent sets equal probability That probability 1 3 C3 Ci 1 2 3 total value C1 C2 C3 f times Since νmax monotonic long C Lemma 31 shows optimal solution The probability C order guaranteed ﬁnd C1 C2 C3 high probability necessary repeat procedure O 3 times 3 agent ai added coalition C1 probability 1 3 ai added C2 probability 1 Ci 1 2 3 simply 1 2 C 1 C 3 C C C C C C 1 2 3 1 3 2 Lemma 31 In binomial distribution success probability p cid15 1 p approximately 6321 cid16 trials probability success e1 e Please Appendix A proof Lemma 31 Lemma 32 provides proof correctness runtime Algorithm 32 2066 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 Algorithm 32 Extracting coalitions monotonic ν Requires parameter num_iterations cid13 1 cid13 2 cid13 3 C C C k 0 num_agents 1 C1 2 C2 3 C3 4 0 num_iterations 5 6 7 8 9 10 11 12 13 14 15 16 end end cid13 1 νC νC cid13 C1 C 1 cid13 C2 C 2 cid13 C3 C 3 cid13 2 νC end Add agent ak coalitions C cid13 1 C cid13 2 C cid13 3 equal probability cid13 3 νC1 νC2 νC3 Algorithm 33 Extracting coalitions monotonic ν Requires parameters num_iterations upperbound Add agent ak S 1 S 2 equal probability end A S 1 A cid3 upperbound ν A νS 1 A νC1 νC3 end A S 2 A cid3 upperbound ν A νS 2 A νC2 νC4 cid13 cid13 1 cid13 3 C C end S 1 A A C k 0 num_agents 1 Ci 1 2 3 4 2 0 num_iterations 1 2 3 4 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 end end cid13 cid13 2 νC 1 νC νC cid13 1 2 3 4 Ci C S 2 A A C C end end cid13 2 cid13 4 cid13 3 νC cid13 4 νC1 νC2 νC3 νC4 Lemma 32 Let C iterations best solution Algorithm 32 value νC 3 disjoint coalitions set n agents If ν monotonic O 3 1 νC C 3 probability e1 2 νC 2 C 1 C e 1 C 2 C 3 1 C Proof During single iteration Algorithm 32 probability agents C 3 C simply 1 Therefore 3 C C 2 C 1 C The iterations Algorithm 32 form binomial distribution success probability 1 C 2 cid13 C 3 iterations probability greater e1 e cid13 2 νC 3 Since ν monotonic νC Algorithm 32 succeeds ﬁnding coalitions cid13 3 cid3 νC cid13 1 2 3 3 C placed C 2 νC 1 νC cid13 1 νC 3 cid2 C 1 3 C 2 C C C C cid13 1 cid13 2 3 2 3 1 The following variation Algorithm 32 henceforth referred Algorithm 32a eﬃcient cid13 1 probability practice Rather place agent C cid13 3 probability 03125 The increased eﬃciency stems fact probabilities 0375 0375 C 03125 created easily fair coin generating event 1 3 probability All empirical results employ Algorithm 32a The use Algorithm 32a affect presented asymptotic results Lemma 33 shows required number iterations increase slightly Algorithm 32a cid13 3 equal probability agent ai placed C cid13 2 C cid13 2 C cid13 1 C Lemma 33 Let C iterations best solution Algorithm 32a value νC 3 disjoint coalitions set n agents If ν monotonic O 3012 1 νC C 3 probability e1 2 νC 2 C 1 C C e 1 2 C 3 Proof During single iteration Algorithm 32a probability agents C 3 simply 0375 probability 0375 e1 e νC cid13 1 2 The iterations Algorithm 32a form binomial distribution success iterations probability greater cid13 1 3 Since ν monotonic νC Algorithm 32a succeeds ﬁnding coalitions C cid13 2 νC 2 νC 2 Therefore C 03125 C C C 03125 3 03125 C C C 1 C placed C 2 2 C 1 νC cid13 3 cid3 νC 0375 C C 3 C C cid13 1 cid13 2 cid13 3 C 2 3 3 1 1 1 1 1 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2067 Assume loss generality C1 cid3 C2 cid3 C3 Thus C2 C3 cid2 2 total number iterations required variation Algorithm 32a 3 C1C2C3 Therefore cid6 C1 C3 C2 3 cid5 1 0375 cid5 1 03125 cid6 2C1 C3 C2 3 cid3 3012C1C2C3 cid4 O cid2 1 0375 1 03125 The fourth ﬁnal solution extraction procedure Algorithm 33 extracts disjoint coalitions monotonic game Algorithm 33 works follows Assume known disjoint coalitions C 1 C 3 C 4 total value f times optimal Without loss generality assume C cid3 C cid3 C 2 4 3 Algorithm 33 places agent randomly sets S1 S2 equal probability After randomly distributing S1 maximizes νC S1 νS1 C S1 subject agents S1 S2 Algorithm 33 ﬁnds coalitions C S1 cid2 u Notice ν monotonic equivalent ﬁnding coalitions C1 C2 S1 maximize C S1 νC1 νC2 subject coalitions containing u agents This process repeated cid2 u Algorithm 33 returns S2 That coalition C S2 maximum iterations νC S1 νS1 C S1 νC S2 νS2 C S2 S2 maximizes νC S2 νS2 C S2 subject C S2 1 C If C 3 2 νC Determining runtime Algorithm 33 requires following combinatorial identity proof provided S1 C cid3 C 4 Therefore Algorithm 33 return f approximate solution 3 νC S2 νS2 C S2 cid3 νC S1 νS1 C S1 cid3 νC S2 u cid3 C 2 C cid3 C 1 νC 2 C νC 4 4 3 1 Appendix A Lemma 34 The following identity holds positive integers n u ncid2 cid5 n cid6cid5 k cid6 k r ku 2nu cid5 cid6 n u Lemma 35 bounds time required iteration Algorithm 33 Lemma 35 With upperbound u cid2 n 3 iteration Algorithm 33 runs time O 1 2u cid3 cid4 n u Proof The probability S1 k given iteration probability S1 given subset agents 1 2n cid4 cid3 n k 1 2n cid4 cid3 n k If S1 k loop beginning line 7 executed 2k times k cid2 u loop beginning line 13 runs 2nk iterations n k cid2 u iterations n k u cid3 cid4 nk u Summing possible sizes S1 yields expected runtime possible sets k agents cid4 times k u Likewise cid3 k u ucid2 cid6cid7 cid5 n k k0 1 2n 2k cid6cid8 cid5 n k u 1 2n 1 2n 2 2n nu1cid2 cid5 n cid6cid5 k cid6cid5 k0 cid5 ncid2 n k ku cid6 n k u cid6 k u 2 2n 1 2n cid5 n ucid2 k0 k ku1 cid6 2k cid2 2 2n k cid8 2nk cid6 k u nu1cid2 cid6cid7cid5 cid5 n k cid6cid5 ku1 cid5 ncid2 n cid6cid8 cid6 k u cid5 n k u 1 2n cid6 k u 1 2n cid6 cid5 cid5 n k ucid2 k0 cid6 2k 1 2n ncid2 cid6cid7cid5 cid5 n knu ncid2 k cid6 cid5 n knu cid5 cid5 k cid6cid6 2nk 2nu n u n 2 2n 2u O 1 2u n u cid2 cid6 cid5 n u 1 C 4 disjoint coalitions set n agents C 3 C 2 C Lemma 36 Let C C C C monotonic O 2 1 2 νC 1 νC value νC 4 probability e1 C 3 νC 2 3 4 e 1 iterations best solution Algorithm 33 upperbound C cid3 C cid3 C cid3 C 3 2 4 If ν 3 Proof If iteration Algorithm 33 C loop beginning line 7 eventually A C cid13 3 cid3 νC νC 3 Likewise upperbound cid3 C 4 2 νC value νC cid13 2 νC νC 3 νC 4 1 νC 1 νC cid13 1 νC 1 C 4 3 Since ν monotonic C S1 C 2 C 3 S2 upperbound cid3 C 3 νC 3 νS1 C 1 S1 C cid3 C 3 4 3 cid3 νC 1 νC 3 cid13 4 cid3 νC 2 νC 4 Therefore Algorithm 33 return solution By Lemma 31 probability iteration Algorithm 33 C1 C3 S1 C2 C4 S2 strictly greater e1 e cid2 2068 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 Table 1 Approximation ratios corresponding running times presented algorithm arbitrary coali tional games The ﬁrst column provides approximate ratio algorithm terms fraction value optimal solution guaranteed The second columns list time required obtain stated approximation ratio deterministic randomized algorithms respectively Approximation ratio 23 35 12 13 14 Deterministic alg runtime O NA O O O n2n n283n n259n n222n Randomized alg runtime n2587n n2382n n209n O O O O n2n O 2n Lemma 37 determine runtime approximation algorithms The proof Lemma 37 Appendix A Lemma 37 Let r ﬁxed integer cid4 cid3 n nr O rn nr1 r1n r The new randomized approximation algorithms presented given provided lemmas Table 1 presents sum mary approximate ratios running times obtainable new randomized algorithms Theorem 38 A 2 3 approximate coalition structure ν O n2587n time O n2587n time run Algorithm 31 Proof A 2 3 approximation obtained follows First construct ν 2 5 ﬁnd disjoint coalitions maximize sum values Finally run Algorithm 32 3 This procedure guarantees 2 3 approximate solution high probability Let C S optimal coalition structure ν 2 number coalitions By Theorem 23 C S cid2 4 We 4n 5 O 241n iterations 5 consider cases 1 C S 2 C S cid2 3 Algorithm 31 returns 2 4 Let coalitions C S 3 approximate solution O 2n time C1 cid3 C2 cid3 C3 cid3 C4 Since ν 2 5 Otherwise C1 C2 C3 C4 optimal coalition structure fewer coalitions Since C3 cid3 C4 case C3 n 5 Therefore C1 C2 n 5 At following true νC1 νC2 cid3 2 b νC1 νC3 νC4 cid3 2 c νC2 νC3 νC4 cid3 2 Since inequalities false summing right lefthand sides yields 3 νC S 3 νC S 5 superadditive C3 C4 2n 3 νC S 2n 5 cid3 cid4 νC1 νC2 νC3 νC4 2 2 ν cid3 cid4 C S However contradiction νC1 νC2 νC3 νC4 νC S If νC1 νC2 cid3 2 3 νC S Algorithm 31 returns 2 cases true C1 C3 C4 C2 C3 C4 contain fewer 4n Lemma 32 Algorithm 32 returns 2 5 O 241n iterations 4n 3 approximate solution O 3 requires O n2587n time cid2 The bottleneck step constructing ν 2 5 3 approximate solution O 2n time If second 5 coalitions Therefore Theorem 39 A 3 5 approximate coalition structure ν O n238n time O n238n time After constructing ν 1 run Algorithm 31 followed Algorithm 32 3 optimal coalition structure ν 1 number coalitions By Theorem 23 C S cid2 5 There 3n Proof First construct ν 1 4 O 228n iterations Let C S 3 3 cases consider 1 C S cid2 3 Algorithm 31 return 2 3 3 5 approximate solution O 2n time 3 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2069 νC1 2 5 νC S νC1 νCi cid3 1 3 νC S cid4 cid3 Let Ci coalition C2 C3 C4 νC1 Therefore cid4 cid4 cid3 cid3 3 ν 4 15 νC1 νCi cid3 3 C S 9 15 5 νC S ν C S 3 5 ν C S 3n 4 O 228n time C1 cid3 n If νC2 νC3 νC4 cid3 3 5 νC S 4 If νC1νCi cid3 3 5 νC S 2 C S 4 If νC2 νC3 νC4 3 5 νC S highest value Since νC2 νC3 νC4 νC S νC1 cid3 νC S νCi νC1 cid3 νC S 2 3 3 Hence νC2 νC3 νC4 cid3 3 Algorithm 32 returns 3 Algorithm 31 returns 3 5 Since ν n 5 approximate solution O 3 5 approximate solution 5 νC S 3 C S highest valued coalitions C S solution O 3 2n 3 O 209n iterations cid2 3 superadditive coalitions Ci C j Ck contain 2n 3 5 approximate solution Algorithm 32 returns 3 3 agents Since 5 approximate Theorem 310 A 1 2 approximate coalition structure ν O n209n expected time Proof Construct ν 1 4 O n209n time run Algorithm 31 identify disjoint coalitions maximize sum values followed Algorithm 32 3 iterations upperbound n 6 By Lemma 35 iteration Algorithm 33 requires O cid3 cid4cid4 cid3 1 n 6 2 cid4cid4 cid3 n n6 5n 8 O 199n iterations Finally run Algorithm 33 2 4n 7 O 149n time Hence total runtime Algorithm 33 O O 208n cid3 n n6 4n 7 n 6 2 2 optimal coalition structure ν 1 We procedure guarantees 1 Let C S Let C1 cid3 C2 cid3 cid3 Cr coalitions C S cid2 7 4 superadditive C1 Cr2 Cr1 Cr optimal coalition structure fewer coalitions Since Cr1 cid3 Cr Cr1 cid3 8 Hence r Ci cid3 n n 8 number coalitions By Theorem 23 C S n 2 approximate solution high probability Note Cr1 Cr n 4 ν 1 4 4 There cases considered 1 C S 2 C S cid2 4 Algorithm 31 returns 1 5 One C1 C2 C3 C4 C5 total value νC S 2 approximate solution O 2n time rithm 31 returns 1 2 approximation solution Note C1 C2 cid3 2n C3 C4 C5 cid2 3n C S value νC3 νC4 νC5 cid3 νC S 5 Therefore νC3 νC4 νC5 cid3 νC S 2 high probability O 3 2 3 C S 6 One C1 C5 C6 C2 C3 C4 total value νC S 2 If νC1 νC2 cid3 νC S Algo 5 largest 5 coalitions Algorithm 32 returns solution 3n 5 O 194n iterations 2 C1 C5 C6 cid2 5 νC S 2 νC S C2 C3 C4 cid2 5 2 solution value νC S 2 8 C2 C3 C4 cid3 n 8 C5 C6 cid3 n 4 C1 cid3 n 2 If C1 C5 C6 total value 8 Likewise C2 C3 C4 total value 8 Therefore case Algorithm 32 returns 4 C S 1 7 One C1 C2 C3 C4 C5 C6 C7 total value νC S Since C4 C5 C6 C7 cid3 2 Algorithm 32 return 2 Therefore C1 C2 C3 value νC S 2 n 2 O 174n iterations Otherwise C4 C5 C6 C7 value νC S 2 2 C1 C2 C3 cid2 1 1 2 approximate solution O 3 Algorithm 33 return 1 2 approximate solution 2 4n 7 iterations C7 cid2 C6 cid2 1 6 cid2 Theorem 311 A 1 3 approximate coalition structure ν O n2n time Proof First construct ν 2 9 O n2n time Run Algorithm 31 identify disjoint coalitions maximize sum values followed Algorithm 32 3 5n 12 O 159n iterations We procedure guarantees 1 Let C S optimal coalition structure ν 2 3 approximate solution high probability number coalitions By Theorem 23 C S cid2 8 There 9 cases consider 1 C S 2 C S cid2 6 Algorithm 31 returns 1 7 One C1 C2 C3 C4 C5 C6 C7 total value νC S 3 approximate solution O 2n time If C1 C2 C3 C4 3 approximation solution Otherwise Algorithm 32 returns 1 3 3 total value νC S 3 approximation solution O 3 Algorithm 31 returns 1 7 O 161n iterations 3n 2070 3 C S T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 8 One C1 C2 C3 C4 C5 C6 C7 C8 total value νC S superadditive C7 C8 2n Algorithm 31 return 1 νC S 3 2n 9 C6 C7 C8 Therefore C3 C4 C5 C6 C7 C8 total value νC S 12 O 159n iterations cid2 ﬁnd 1 3 approximate solution Notice C1 C2 cid3 2n 3 Thus n n 9 Therefore C6 C7 C8 cid3 n n 3 5n 3 4 3 approximation O 3 3 If C1 C2 value n 4 ν 2 cid3 C3 C4 C5 cid3 5n 12 Algorithm 32 8 9 The presented 1 4 approximation algorithm runs O 2n time Since requiring ν k monotonic requires O n2n time r possible use monotonicity simplify 1 4 approximation algorithm Algorithm 34 presents randomized algo rithm extract disjoint coalitions maximize sum values games necessarily monotonic forms basis 1 4 approximation algorithm Algorithm 34 works similarly Algorithm 33 Each agent placed sets S 1 S2 equal probability For S1 S2 highest valued coalition containing upperbound agents determined Each iteration cid13 process yields disjoint coalitions C 2 The coalitions highest total value returned The analysis running time correctness Algorithm 34 analogous Algorithm 33 Hence iteration Algorithm 34 requires O time upperbound u Therefore C1 C2 disjoint coalitions iterations Algorithm 34 ﬁnds approximate solution cid13 1 C C1C2 1 2u cid4cid4 n u cid3 cid3 containing fewer upperbound agents 2 value νC1 νC2 probability e1 e Algorithm 34 Extracting coalitions necessarily monotonic ν Requires parameters num_iterations upperbound Add agent ak S 1 S 2 equal probability end C S 1 C cid3 upperbound cid13 1 cid13 cid13 1 C end νC νC C C k 0 num_agents 1 Ci 1 2 2 0 num_iterations 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 end νC νC C C end end cid13 2 end C S 2 C cid3 upperbound cid13 2 end cid13 cid13 2 νC1 νC2 1 νC νC cid13 1 2 Ci C Theorem 312 A 1 4 approximate coalition structure ν O 2n expected time O 2n time Note situation ν 2 Proof First construct ν 2 constructed identify coalition C N highest value single O 2n time loop coalitions 9 total running time Finally run Algorithm 34 twice First 2 O 196n Second 2 9 O 136n iterations upperbound 2n 5 O 132n iterations upperbound n necessarily monotonic Once ν 2 4 total running time O 195n 2n 4n 9 9 9 Let C S optimal coalition structure ν 1 fewest number coalitions By Theorem 23 C S cid2 8 Assume loss generality Ci C j C S Ci cid3 C j j There ﬁve cases consider 4 1 C S 2 C S cid2 4 The highest valued coalition 1 5 One C1 C2 C3 C4 C5 total value νC S 4 approximate solution O 2n time Since C4 C5 cid2 2n 4 5 C5 cid2 C4 cid2 n 4 2 2n 5 iterations Algorithm 34 ﬁnd 1 4 approximate solution 3 C S 6 One C1 C2 C3 C4 C5 C6 total value νC S 9 agents C1 C2 cid3 n Since coalitions Ci C j 3 C3 C6 C4 C5 bounded 4 collectively contain 2n n 2n 9 9 Note 3 4n n 3 C3 cid2 C1 C2 C3 n C4 C5 C6 cid2 n n 3 2n 3 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2071 Table 2 The average utilities generated randomized deterministic algorithms ﬁve different approximation ratios problem distributions Normal Modiﬁed Uniform NDCS Approximation ratio Randomized Deterministic Randomized Deterministic Randomized Deterministic 23 35 12 13 14 32497 32575 61714 61951 62246 63163 32401 NA 6101 NA 615042 NA 32466 32497 52971 503595 57466 52648 32371 32375 432585 40579 49087 48788 28568 32371 31659 385415 36772 48072 inequality follows fact C5 C6 cid3 2n 1 4 C S 4 approximate solution 2 7 One C1 C2 C3 C4 C5 C6 C7 total value νC S 9 Therefore C3 cid2 2n iterations 4n 9 Ci C j collectively contain 2n bounded n 4n 63 Notice 9 2 C2 cid2 C1 C2 n C3 C4 C5 C6 C7 cid2 n 5n 9 9 agents C1 cid3 n 26n n 7 As inequality follows fact ν 2 4n 9 9 superadditive Therefore C2 cid2 2n 2n 9 Again coalitions 7 C2 C7 C3 C6 C4 C5 4 9 Hence Algorithm 34 ﬁnd 9 Algorithm 34 26n 63 ﬁnd 1 4 approximate solution 2 iterations 8 One C1 C8 C2 C7 C3 C6 C4 C5 total value νC S 5 C S coalitions Ci C j collectively contain 2n bounded n 6n 9 superadditive Therefore C1 contain 2n 2 3 iterations cid2 n n 3 The coalitions C1 contain 7n Again 9 agents C1 C8 C2 C7 C3 C6 C4 C5 2n 9 4 approximate solution 9 agents Therefore Algorithm 34 ﬁnd 1 9 agents ν 2 4 9 4 Empirical study This section presents empirical comparison randomized approximation algorithms deterministic coun terparts The empirical results presented subsections The ﬁrst compares randomized deterministic algorithms terms solution utilities generate The second subsection compares runtimes randomized deterministic algorithms number problem sizes All data points averaged 20 independent runs For run randomized algorithms run iterations guarantee stated approximation ratio probability 1 1 e1 e 3 095 41 Utility comparison All experiments presented subsection consists problems 24 agents The performance randomized deterministic algorithms compared following problem distributions standard coali tion structure generation literature 191012 1 Normal Distribution value coalition C set C N 10 001 2 Modiﬁed Uniform Distribution coalition C assigned value drawn uniformly 0 10 C coalitions value increased random number drawn uniformly 0 50 20 probability 3 Normally Distributed Coalition Structures NDCS value coalition C drawn normal distribution mean C standard deviation C Table 2 provides average utility solutions generated deterministic randomized algorithms Recall deterministic 3 5 approximation algorithm exists In general average utility solutions generated randomized algorithm slightly deterministic algorithm This result randomized algorithm probabilistic When averaged 20 independent runs likely run algorithm fail ﬁnd solution good deterministic algorithms solution It interesting note runs randomized algorithm performed better deterministic algorithm For example average performance randomized 1 3 approximation algorithm slightly higher average performance deterministic 1 3 approximation Modiﬁed Uniform problem distribution This expected following example illustrates Consider 2 3 approximation algorithms Assume optimal coalition structure consists equally sized equally valued coalitions C1C2 C3 Further assume 2072 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 Fig 1 Comparison runtimes deterministic randomized algorithms approximation guarantee variety problem sizes Runtimes plotted logarithmic scale coalitions value 0 The deterministic 2 3 approximation algorithm simply return approximate coalition structure consisting coalitions C1 C2 However possible randomized 2 3 approximation algorithm return coalition structure consisting C1 C2 C3 returning solution value strictly greater returned deterministic algorithm While example artiﬁcial illustrates type situation randomized algorithms outperform deterministic counterparts situations randomized algorithm probability returning optimal solution deterministic algorithm unable 42 Runtime comparison This subsection presents comparison runtimes deterministic randomized algorithms Fig 1 presents comparison runtimes randomized deterministic algorithms performance guar antees problems ranging 20 27 agents As run time randomized deterministic algorithms depend problem instance particular coalition utilities reported running times modiﬁed uniform distribution T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 2073 As seen Fig 1 cases runtime randomized algorithms lower determin istic counterparts The exception 1 4 approximation algorithms randomized deterministic algorithms performed roughly equivalently terms runtime randomized algorithm slightly faster average problem sizes The following average speedups achieved randomized algorithms compared deterministic counter parts 1 The 1 2 The 1 3 The 1 4 The 2 4 randomized algorithm ran 896 time deterministic counterpart 3 randomized algorithm ran 427 time deterministic counterpart 2 randomized algorithm ran 224 time deterministic counterpart 3 randomized algorithm ran 508 time deterministic counterpart The empirically determined runtime randomized algorithms scaled quickly theoretical runtime analysis provided Section 3 This believed result terms hidden O notation With larger numbers agents empirical runtime match theoretical bounds 5 Conclusions This paper presents simple randomized algorithms generating coalition structures quality guarantees arbitrary monotonic coalitional games The presented algorithms generate approximation ratios time previous approximation algorithms The algorithms build prior work follow careful analysis number coalitions sizes particular coalition structures The probability given randomized algorithm generates solution stated approximate ratio arbitrarily close 1 rerunning algorithm small number times For example 3 runs guarantee stated approximation ratio achieved probability greater 95 One presented randomized algorithms obtain 2 n2587n time improving previous approximation algorithm required O 283n time generate 2 3 approximate solution Also new tech niques allow 1 4 approximate solution generated optimal time O 2n order guarantees solution quality values 2n 1 coalitions observed This result improves previous best approximation ratio obtainable O 2n time 1 8 3 approximate O This manuscript shows employ randomization generate performance guarantees current deterministic approaches unable generate The presented randomized algorithms ﬁrst algorithms capable guaranteeing approximation ratio 3 5 arbitrary characteristic function games A limitation techniques presented manuscript desired approximation ratio chosen priori appropriate algorithm run Thus present work stands contrast previous coalition structure gen eration work single anytime algorithm presented generates successively better solution quality guarantees As paper demonstrated anytime property sacriﬁced better solution quality guarantees time necessary approximation ratio known ahead time However requirement selecting approximation ratio priori common approximation algorithms combinatorial problems Appendix A Proofs Lemma 31 In binomial distribution success probability p cid15 1 p approximately 6321 cid16 trials probability success e1 e Proof Since probability single trial unsuccessful 1 p probability n trials unsuccessful 1 pn Hence probability successful trial n trials 1 1 pn Consider case n cid15 1 p cid5 cid16 1 pn cid6 n 1 1 n Since 1 1 n n increases monotonically 1 e n 1 1 n n cid2 1 e Hence 1 1 p 1 p cid3 e1 e cid2 Lemma 34 The following identity holds positive integers n u cid5 n k ncid2 ku cid6cid5 cid6 k u 2nu cid5 cid6 n u 2074 T Service J Adams Artiﬁcial Intelligence 175 2011 20612074 Proof Let f x x 1n f x cid4 cid3 cid9 n k0 n k xk binomial theorem Differentiating f x u times yields f ux n n 1 n u 1x 1nu1 cid5 n cid6 k k 1 k u 1xku1 ncid2 ku k rewritten f ux n n u cid6 cid5 ncid2 n k ku x 1nu k k u xku Finally dividing sides u setting x 1 yields desired identity cid2 cid3 n nr Lemma 37 Let r ﬁxed integer O cid4 rn nr1 r1n r Proof Recall Stirlings approximation states cid6 n cid5 cid5 cid5 cid6 n ncid3 cid4 1 o1 cid4 n cid6 n e n cid5 n nr 2πn cid6 n r e n r1n r cid5 O 1 cid10 cid5 cid10 n n e n n n r n r e n r n r cid6 n n r e cid6 n n r O 1 cid5 n n r rn nr 1 n nn r n n cid6 r1n r r n n r cid2 O References 1 T Rahwan S Ramchurn N Jennings A Giovannucci An anytime algorithm optimal coalition structure generation Journal Artiﬁcial Intelligence Research 34 2009 521567 2 T Sandholm K Larson M Anderson O Shehory F Tohmé Coalition structure generation worst case guarantees Artiﬁcial Intelligence 111 12 1999 209238 URL httpjmvidalcsescedulibrarysandholm99bpdf 3 O Shehory S Kraus Methods task allocation agent coalition formation Artiﬁcial Intelligence 101 12 1998 165200 URL httpjmvidalcse scedulibraryshehory98apdf 4 VD Dang N Jennings Generating coalition structures ﬁnite bound optimal guarantees Proceedings Third International Joint Conference Autonomous Agents Multiagent Systems 2004 pp 564571 5 T Rahwan NR Jennings An improved dynamic programming algorithm coalition structure generation Proceedings 7th International Conference Autonomous Agents MultiAgent Systems 2008 pp 14171420 URL httpeprintsecssotonacuk15062 6 T Rahwan N Jennings Coalition structure generation Dynamic programming meets anytime optimisation Proceedings 23rd Conference Artiﬁcial Intelligence AAAI 2008 pp 156161 URL httpeprintsecssotonacuk16112 7 T Rahwan N Jennings An improved dynamic programming algorithm coalition structure generation Proceedings 7th International Conference Autonomous Agents MultiAgent Systems 2008 pp 14171420 URL httpeprintsecssotonacuk15062 8 Y Yeh A dynamic programming approach complete set partitioning problem BIT Numerical Mathematics 26 4 1986 467474 9 T Service J Adams Approximate coalition structure generation Proceedings 25th National Conference Artiﬁcial Intelligence AAAI 2010 10 T Service J Adams Constant factor approximation algorithms coalition structure generation Autonomous Agents MultiAgent Systems 2010 URL httpdxdoiorg101007s1045801091247 11 N Ohta V Conitzer R Ichimura Y Sakurai A Iwasaki M Yokoo Coalition structure generation utilizing compact characteristic function representa tions Proceedings 15th international Conference Principles Practice Constraint Programming CP09 2009 pp 623638 12 K Larson T Sandholm Anytime coalition structure generation An average case study Journal Experimental Theoretical AI 12 2000 4047