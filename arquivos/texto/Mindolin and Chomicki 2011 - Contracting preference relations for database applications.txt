Artiﬁcial Intelligence 175 2011 10921121 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Contracting preference relations database applications Denis Mindolin Jan Chomicki Department Computer Science Engineering 201 Bell Hall University Buffalo Buffalo NY 142602000 USA r t c l e n f o b s t r c t Article history Received 27 February 2009 Received revised form 17 September 2010 Accepted 17 September 2010 Available online 1 December 2010 Keywords Preference contraction Preference change Preference query 1 Introduction The binary relation framework shown applicable reallife preference handling scenarios Here study preference contraction problem discarding selected preferences We argue property minimality preservation strict partial orders crucial contractions Contractions constrained specifying preferences protected We consider preference relations ﬁnite ﬁnitely representable preference formulas We present algorithms computing minimal preferenceprotecting minimal contractions ﬁnite ﬁnitely representable preference relations We study relationships preference change binary relation framework belief change belief revision theory We evaluate proposed algorithms experimentally present results 2010 Elsevier BV All rights reserved A large number preference handling frameworks developed 16720 In paper work binary relation preference framework 1022 Preferences represented ordered pairs tuples sets preferences form preference relations Preference relations required strict partial orders SPO transitive irreﬂexive binary relations The SPO properties believed capture rationality preferences 16 This framework deal ﬁnite inﬁnite preference relations represented ﬁnite preference formulas Working preferences framework naive expect change Preferences change time likes mean like future Preference change active topic current research 1117 It argued 15 discovery sources preference change elicitation change important preserve correctness preference model presence change In binary relation framework natural correctness criterion preservation SPO properties preference relations An operation preference change preference revision proposed 11 We note preference relation changed revision operator new preferences semantically combined original preference relation However combining new preferences existing ones way people change preferences real life Another common operation preference change semantic subtraction set preferences set preferences hold reasons holding contracted preferences longer valid That given initial preference relation cid3 subset CON cid3 called base contractor hold We want change cid3 way CON hold This exactly opposite way preference revision operators change preference relations Hence change captured existing preference revision operators In multiagent scenarios negotiation different agents involve giving individual agents preferences 1 In complex scenarios preferences added given Research partially supported NSF grant IIS0307434 This paper extended version Mindolin Chomicki 2008 23 Corresponding author Email addresses mindolinbuffaloedu D Mindolin chomickibuffaloedu J Chomicki 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201011011 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1093 Fig 1 Example 1 Marys preferences Another reason contracting user preferences reallife applications need widening preference query results In database applications preference relations compute sets best preferred tuples according users preferences Such tuples represent objects like cars books cameras The operator binary relation framework compute sets called winnow 10 BMO 22 The winnow operator denoted wcid3r r original set tuples cid3 preference relation If preference relation cid3 large user preferences result wcid3r narrow One way widen result discarding preferences cid3 Those preferences hold longer important In paper address problem contraction preference relations We consider ﬁnitely representable ﬁnite preference relations We illustrate preference contraction ﬁnite Example 1 ﬁnitely representable Example 2 preference relations Example 1 Assume car dealer web site showing inventory cars Mary customer interested buying car Assume Mary previous purchase history dealer preferences possibly outdated cars known prefers car ti car t j denoted ti cid31 t j j j 1 5 Let inventory r1 consist cars r1 t1 t3 t4 t5 t2 currently missing The preference relation illustrated Fig 1 set edges edge ti t j shows ti preferred t j The set best cars according Marys preference relation wcid31 r1 t1 Assume dealer observes Mary browsing web site indicates equal cars t1 expected according cid31 t3 t5 As result preference relation cid31 changed t1 t3 t5 best cars dominated car inventory That implies preferences set CON1 consisting following preferences preference t1 t3 preference t1 t3 t4 t5 hold need contracted removed cid31 Those preferences shown dashed arrows Fig 1 Notice t2 inventory Mary explicitly provided information preferences involving t2 preferences t1 t2 t2 t3 t4 t5 remain unchanged In example showed simple scenario preference contraction The user preference relation ﬁnite relation preferences contracted elicited userprovided feedback Variations scenario possible First users preference relation inﬁnite representable ﬁnite preference formula Second possibly inﬁnite set preferences discard deﬁned formula Example 2 Assume Bob prefers newer cars given cars year cheaper preferred t cid32 t cid5 tyear t cid5 year tyear t cid5 year tprice t cid5 price denote standard orderings rational numbers attribute year deﬁnes year car attribute price price The information cars stock shown table r2 id t1 t3 t4 t5 Kia VW Kia VW year 2007 2007 2006 2006 price 12 000 15 000 15 000 7000 Then set preferred cars according cid32 wcid32 r2 t1 Assume having observed set wcid32 r2 Bob understands narrow He decides car t3 worse t1 He generalizes stating cars 2007 cost 12 000 better cars 2007 costing 15 000 Hence set preferences user wants discard represented relation CON2 cid3 cid5 cid2 t t CON2 tyear t cid5 year 2007 tprice 12 000 t cid5 price 15 000 The scenarios illustrated examples following common ﬁnite ﬁnitely representable inﬁnite SPO preference relation cid3 set CON ﬁnite inﬁnite preferences discard Our goal modify cid3 resulting preference relation SPO preferences CON hold anymore 1094 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Another important property preference relation change minimality Indeed simple way removing subset preference relation violating SPO properties remove preferences relation However likely user expects Hence important change preference relation minimally Fig 2 Example 3 Example 3 Take Marys preferences Example 1 A naive way discard CON1 CON1 t1t3 t1t5 t3t5 t4t5 cid31 represent contracted preference relation cid3cid5 1 transitive 1 SPO t1 cid3cid5 1 t3 t1 cid2cid5 1 t5 Hence change preserve SPO To changed preference relation transitive preferences discarded addition CON1 At time discarding preferences good solution important Therefore need discard minimal subset cid31 contains CON1 preserves SPO modiﬁed preference relation Two t1t2 CON1 Fig 2b shows contracted solutions possible ﬁrst case remove preferences P relation second preferences P cid31 CON1 Fig 2a However turns cid3cid5 t2t3 t2t4 t2t5 CON1 Fig 2c shows contracted relation 1 t5 t1 cid2cid5 1 t3 t1 cid3cid5 1 t2 t2 cid3cid5 1 t2 t2 cid3cid5 1 2 Similarly cid32 CON2 Example 2 The relation cid3cid5 cid5 cid5 t cid3 2 t VW 2007 12 000 t6 VW 2007 14 000 t7 VW 2007 15 000 t5 cid3cid5 preference relation minimally different cid32 contain CON2 shown cid3 cid2 t y t cid2 t y t As relation cid3 2 different naive solution cid3cid5 costing 12 000 better car 2007 costing 12 000 15 000 We note cid3 minimally different cid32 containing CON2 p cid2 15 000 2 sense cid3 y 2007 tp 12 000 t y t y t cid5 p 12 000 t y tp t p cid3 cid5 cid5 cid5 cid5 2 cid32 CON2 transitive t5 2 t7 An SPO 2 t6 t6 cid3cid5 2 t7 t5 cid2cid5 2 implies car 2007 2 relation The examples subset SPO preference relation discarded resulting relation lose SPO properties irreﬂexive transitivity axiom preserved A possible way remedy problem relax SPO requirements imposed preference relations allow nontransitive preference relations However number reasons SPO axioms important preserve First SPO properties believed capture rationality preferences The second reason related usage preferences database applications There eﬃcient algorithms preference query evaluation assume preference relations transitive 126 Example 4 A popular preference query evaluation algorithm SFS 12 works follows Given database table r preference relation cid3 SFS 1 sorts r according weak order consistent cid3 2 picks tuple o r sorted cid5 cid3 o If tuple order checks tuple o r appeared o o o wcid3r best r according cid3 discarded o wcid3r Take r o1 o3 cid3 o1o2 o2o3 transitive Applying SFS r cid3 results wcid3r o1 o3 Note SFS fails return correct answer wcid3r o1 intransitivity cid3 tuple o2 tuple dominates o3 discarded prevent o3 output cid5 Hence relaxing SPO properties preference relations require developing new preference query evaluation algorithms likely eﬃcient 8 Moreover approach contracting preference relations propose paper property closure original contracted preference relations SPOs Closure important makes iterating contraction revision 11 possible As illustrated Examples 1 2 essence preference contraction approach propose following discarding subset CON preference relation cid3 preferences additional CON discarded resulting cid3 contains CON removal cid3 preserves SPO properties preference relation SPO A subset P modiﬁed preference relation called contractor cid3 CON The set Pm alternative minimal contractors given cid3 CON contain large inﬁnite number elements How perform contraction cases There essentially possibilities Minimal contraction The user care contractor Pm chosen goal change prefer ence relation minimally Meet contraction The user know want reveal contractor Pm choose So safe remove P Pm cid3 In case minimality change sacriﬁced D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1095 Fig 3 Meet contraction We notice approaches preference contraction similar minimal contraction meet contraction belief revision 19 They justiﬁed similar reasons Section 8 contains comparison analysis framework proposed preference change belief revision Example 5 Consider Example 3 contraction cid31 CON1 The set minimal contractors Pm cid31 CON1 P 2 cid31 The result meet contraction shown Fig 3 The meet contraction corresponds picking removing P 1 P 1 P 2 The operators preference contraction minimal contraction meet contraction extreme cases However share important property specifying CON type contraction minimal meet user control result To overcome disadvantage introduce variants contraction operators preferenceprotecting min imal contraction preferenceprotecting meet contraction These operators require user provide set preferences cid3 believes hold contraction contracted This gives user P limited control result contraction Preferenceprotecting minimal contraction We choose P cid3 The minimality change preserved case P Pm Pm protects P remove minimal contractor member P P Preferenceprotecting meet contraction We choose P Pm protecting P P P remove cid3 Example 6 Take set minimal contractors Pm P preference set P protecting minimal contraction return P set minimal contractors protecting P protecting meet contraction Example 3 Assume user wants protect t2t3 contraction Out contractors P P 1 protects Hence preference 1 result contraction shown Fig 2b Similarly singleton Fig 2b shows result applying preference 1 P 2 1 P 2 We observe operators minimal contraction meet contraction special cases P preference protecting minimal contraction preferenceprotecting meet contraction respectively Above showed simple use cases preference contraction In reallife applications preference contraction stepbystep manner collecting user feedback elaborating contraction user change sets CON undo contraction vary contraction parameters operators Such feedback collected users P directly asking questions relationships certain objects 4 indirectly analyzing users clicks web pages critiques parameters objects 9 However details usage scenarios scope work The main results paper follows 1 We present necessary suﬃcient conditions minimality contractors 2 We propose algorithms minimal preference contraction ﬁrst ﬁnitely representable preference relations second ﬁnite preference relations The algorithms require CON ﬁnitely stratiﬁable 3 We class preference formulas studied paper checking ﬁnite stratiﬁability performed quantiﬁer elimination 4 We reduce minimal preferenceprotecting contraction minimal contraction 5 We meet preferenceprotecting meet contraction accommodated framework 6 We study relationship preference contraction belief contraction revision 7 We perform experimental evaluation proposed framework present results experiments Appendix A 2 Basic notions The preference relation framework use paper variation proposed 10 Let A A1 Am associated domain Di We consider kinds inﬁnite ﬁxed set attributes Every attribute Ai domains C uninterpreted constants Q rational numbers Then universe U tuples deﬁned 1096 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 U cid4 Ai A Di We assume tuples o o cid5 equal iff values corresponding attributes equal Deﬁnition 1 A binary relation cid3 U U preference relation strict partial order SPO relation transitive irreﬂexive Binary relations R U U considered paper ﬁnite inﬁnite Finite binary relations represented ﬁnite sets pairs tuples The inﬁnite binary relations consider ﬁnitely representable formulas Given binary cid5 A formula representation F cid3 relation R formula representation denoted F R That Ro o preference relation cid3 called preference formula We consider kinds atomic formulas cid5 iff F R o o Equality constraints o Ai o cid5 Ai o Ai cid13 o cid5 Ai o Ai c o Ai cid13 c o o cid5 tuple variables Ai C attribute c uninterpreted constant Rationalorder constraints o Aiθo cid5 Ai o Aiθ c θ cid13 cid2 cid3 o o cid5 tuple variables Ai Q attribute c rational number A preference formula atomic formulas equality resp rationalorder constraints called equality resp rational order preference formula If equality rationalorder constraints formula formula called equalityrationalorder formula simply EROformula Without loss generality assume preference formulas quantiﬁerfree EROformulas admit quantiﬁer elimination We use representation binary relations directed graphs ﬁnite inﬁnite case Deﬁnition 2 Given binary relation R U U tuples x y xR y xy R xy Redge x y A path R Rpath x y ﬁnite sequence Redges start node ﬁrst edge x end node edge y end node edge start node edge sequence Redge appears The sequence nodes participating Rpath Rsequence The length Rpath number Redges path The length Rsequence number nodes An element preference relation called preference We use symbol cid3 subscripts refer preference relations We write x cid4 y shorthand x cid3 y x y We x preferred y y dominated x according cid3 x cid3 y In paper present algorithms ﬁnite relations Such algorithms implemented relational algebra operators selection σ projection π join cid14cid15 set difference union 24 Set difference union relational algebra semantics set theory provided argument relations compatible The semantics operators follows Selection σC R picks relation R tuples condition C holds The condition C Boolean expression involving comparisons attribute names constants Projection πLR returns relation obtained relation R leaving columns listed L dropping Join relations R S R cid14cid15 R X1SY 1R XnSYn S computes product R S leaves tuples R X1 SY 1 R Xn SYn drops columns SY 1 SYn resulting relation When need copy relation R relational algebra expression add subscripts relation R1 R2 3 Preference contraction Preference contraction operation discarding preferences We assume user intends discard preferences expresses preferences discarded binary relation called base contractor The interpretation pair base contractor ﬁrst tuple preferred second tuple We require base contractor relations subsets preference relation contracted Hence base contractor irreﬂexive necessary transitive Apart containment original preference relation impose restrictions base contractors ﬁnite inﬁnite stated Throughout paper base contractors typically referred CON D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1097 Fig 4 cid3 CON Example 7 Fig 5 cid3 CON Example 8 Transitive edges omitted Deﬁnition 3 A binary relation P preference relation SPO The relation cid3 P A relation P contractor P minimal contractor cid3 CON P cid3 CON st P cid5 cid3 P cid5 contractor preference relation cid3 CON CON P cid3 cid3 P called contracted relation contractor cid3 CON Deﬁnition 4 A preference relation minimally contracted contracted minimal contractor Contraction operation constructing contractor Minimal contraction operation constructing minimal contractor cid5 We notice requirement CON subset cid3 introduced imposed solely sake simplifying discussion Indeed according user preference relation cid3 tuple o better o removing cid3 trivial Moreover deﬁnition preference contraction guarantees preference preference o o appear contracted cid3 contracted preference relation subset original Therefore contracting cid3 CON At time preference contraction conjunction preference revision 11 result adding new preference cid3 However revision preference relation special care taken preferences CON discussion techniques outside scope current paper contained cid3 equivalent contracting cid3 CON cid3 CON cid5 According Deﬁnition 3 minimality contractor deﬁned terms set containment Obviously deﬁnitions possible For instance minimality deﬁned terms cardinality contractor However paper focus developing techniques preference contraction work ﬁnite ﬁnitely representable possibly inﬁnite preference relations It clear minimalityasminimumcardinality criterion case The notion minimal contractor narrows set contractors However illustrate Example 7 minimal contractor generally unique given preference base contractor relations Moreover number minimal contractors inﬁnite preference relations inﬁnite Thus minimal contraction differs minimal preference revision 11 uniquely deﬁned given preference revising relations Example 7 Take preference relation cid3 total order x1 x4 Fig 4 Let base contractor relation CON x1x4 Then following sets minimal contractors cid3 CON P x3x4 x2x4 x1x4 P x1x2 x1x3 x1x4 P x1x2 x3x4 x1x4 P x1x3 x2x4 x2x3 x1x4 2 1 4 3 The number minimal contractors large As following example illustrates cases exponential number edges base contractor Example 8 Let preference relation cid3 total order x1 x2n1 n xi cid3 x j 1 cid2 j cid2 2n 1 CON x2i1x2i3 0 n 1 consisting n edges To remove edge x2i1x2i3 cid3 resulting relation transitive need remove x2i1x2i2 x2i2x2i3 Thus 2n possible contractors It easy minimal Another important observation contracted preference relation deﬁned subset original preference relation We want preserve SPO properties transitivity irreﬂexivity preference relations Since subset irreﬂexive relation irreﬂexive relation additional actions needed preserve irreﬂexivity contraction However subset transitive relation transitive relation We need consider paths original preference relation transitivity produce CONedges discarded We paths CON detours Deﬁnition 5 Let cid3 preference relation P cid3 Then cid3path x y P detour xy P First let consider problem ﬁnding contractor necessary minimal As showed contracted preference relation CONdetours To achieve additional edges preference 1098 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 6 Φxy Example 9 relation discarded However discard edges sure paths contracted preference relation produce removed edges Hence necessary suﬃcient condition subset preference relation contractor formulated intuitive way Lemma 1 Given preference relation SPO cid3 base contractor CON relation P iff CON P contains paths x y xy P cid3 P cid3 contractor cid3 CON cid3 P follows irreﬂexivity cid3 Assume cid3 P Proof Prove xy P cid3 P xy cid3 P assumption transitivity cid3 violated First CON cid4 P x y cid3 P xy P implies cid3 P If xy P implies P path xz zy disconnected contradicts initial assumption If xy P contains paths x y cid3 P transitive xz zy cid3 P SPO The irreﬂexivity contractor cid3 CON deﬁnition Second existence path transitive violates SPO properties cid2 Now let consider property minimality contractors Let P minimal contractor preference relation cid3 base contractor CON Pick edge xy P An important question arises xy member The answer obvious xy member CON CONedge removed preference P relation However xy member CON To study problem introduce notion outer edge set edge belonging contractor relation Deﬁnition 6 Let CON base contractor preference relation cid3 P xy P CON contractor cid3 CON Let Φ0xy xy Φixy cid5 ui v P cid6 cid6 ui1 v i1 Φi1xyui ui1 v i1 v cid2 v i1 v ui ui1 0 cid3 P cid3cid7 cid2 cid3 cid3 P Then outer edge set Φxy xy deﬁned Φxy cid8 i0 Φixy Intuitively outer edge set Φxy edge xy P added preference relation cid3 preserve contractor property removed P added preference relation The reasoning follows When result xy removed P Φixy removed P Otherwise edge Φi1xy twoedge path cid3 edges Φixy contracted Hence SPO properties cid3 P requires recursively removing entire Φxy P need preserved removing xy P Φi1xy removed P CON contains edges contractor P The example illustrates inductive construction outer edge set Some properties outer edge sets shown Lemma 2 Example 9 Let preference relation cid3 set edges Fig 6 P construct Φxy assuming xy edge base contractor CON deﬁned dashed edges Let Φ0xy xy Φ1xy xv xz Φ2xy uv uz Thus Φxy xy xv xz uv uz D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1099 Lemma 2 Let P following properties contractor preference relation cid3 base contractor CON Then xy P CON Φxy 1 uv Φxy u cid4 x y cid4 v 2 uv Φxy ux yv P 3 Φxy CON P cid5 P Φxy contractor cid3 CON Proof First prove Properties 1 2 hold We induction index Φixy construct Φxy Since deﬁnition xy Φ0xy Properties 1 2 hold construction Φ0 Now let Properties 1 2 hold Φnxy vn Φnxy cid4 x y cid4 vn unx y vn P Pick un1 vn1 Φn1xy By construction Φn1xy vn Φixyun1 vn cid3 vn1 vn vn1 P un1 cid3 vn vn1 un1un P 1 2 implied 1 Note un1 cid4 x y cid4 vn1 follow 1 2 transitivity cid4 Similarly un1x yvn1 P 2 transitivity cid3 P Hence Properties 1 2 hold cid9 n i0 Φixy n The follows CON P cid5 SPO CON P cid5 Transitivity cid3 P Now prove Property 3 cid3 P cid5 follows irreﬂexivity cid3 Assume cid3 P Irreﬂexivity cid3 P uz zv cid3 P exactly uz zv Φxy Φxy cid3 P zv cid3 P contradiction derived case uz cid3 P cid3 CON cid2 Φxy CON cid5 implies uz zv Φxy However Property 1 implies However uz Φxy cid5 derive contradiction A similar contractor cid5 transitive uv cid3 P imply uv Φxy uv cid3 P zv Φxy Therefore cid3 P Φxy cid3 P cid5 SPO P cid5 cid5 Out properties shown Lemma 2 important It says edge xy contractor needed disconnect CONdetours edge dropped contractor entire outer edge set A general result follows Lemma 2 formulated theorem It represents necessary suﬃcient condition contractor minimal Theorem 1 Fullcontractor minimality test Let P CON iff xy P CONdetour cid3 xy P contractor cid3 CON Then P edge minimal contractor cid3 minimal contractor Proof The proof direction straightforward Assume edge contractor P exists CONdetour edge P loses subset P containing edge If P P contractor cid3 CON Lemma 1 Hence P P CONdetour cid3 having edges P P Let P 1 CONdetour edge If 1 holds Φxy xy belongs 2 CONdetour xy belongs P Φxy contractor cid3 CON Since Φxy edges CON construction Thus Lemma 2 implies P P minimal contractor contradiction If 2 holds use argument Φxy CON If Φxy CON uv Φxy CON Lemma 2 minimal contractor For sake contradiction assume xy P u cid4 x x cid3 y y cid4 v ux y v P CONdetour going u v xy P tion cid2 edge This contradicts initial assump Note directly Deﬁnition 3 check minimality contractor P requires checking contractor In contrast minimality checking method shown Theorem 1 requires checking properties properties subsets P distinct elements P respect members Sometimes direct application minimality test Theorem 1 hard bound length CONdetours Hence clear test formulated terms validity ﬁnite formulas Fortunately transitivity preference relations implies minimality condition Theorem 1 stated terms paths length Corollary 1 A contractor P edges xy P cid3 CON minimal iff edge xy P CONdetour consisting 1100 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 7 Checking minimality contractor pick CONdetour T P Proof Trivial For xy P edge xy If length equal corollary holds Otherwise x start node T y end node T Let start node u T different x Since common edge T P xy edge path u x element end node T y different cid3 P cid2 v Hence CONdetour length xy element P Similarly yv cid3 P Transitivity cid3 P implies ux cid3 P As result following tests check minimality contractor P In ﬁnite case P minimal following relational algebra expression results set cid10 πP 2 XP 2Y cid2 P R1 P 1 πP 2 XP 2Y P 2 cid14cid15 P 2Y R3 X cid2 πP 2 XP 2Y cid14cid15 R1Y P 2 X R3 P 3 P 2 cid14cid15 P 2Y R3 X cid14cid15 P 2 XC X R3Y CY R3 P 3 cid14cid15 R1 XC X R3Y CY C cid3 cid11 C cid3 C C R1 P 1 cid14cid15 R1Y P 2 X P 2 cid14cid15 R1 XC X P 2Y CY tables R C P columns X Y storing cid3 CON P renamings R P respectively Applying minimality test ﬁnite relations illustrated example correspondingly R1 R3 P 1 P 2 P 3 refer Example 10 Take preference relation represented table R base contractor represented table C Fig 7a Consider table P representing contractor R C Then result relational algebra expression evaluated tables shown table D Since contractor represented P minimal The minimality P achieved removing tuple D In ﬁnitely representable case P minimal following formula valid x y cid2 cid2 cid3 F P x y F cid3x y u vF CONu v F cid3u x u x cid3 F P u x F P y v F cid3 y v y v cid3 cid2 We note relations deﬁnable EROformulas checking minimality contractor performing quantiﬁer elimination formula Example 11 Let preference relation cid3 deﬁned formula F cid3o o base contractor CON cid3 deﬁned formula cid3 cid2 o o cid5 cid2 F CON 1 cid2 od cid2 2 o cid5 d 4 cid3 cid2 od 0 o cid5 d 3 cid3 cid5 od o cid5d d Q attribute Let Fig 7b Denote relation represented ﬁrst second disjuncts F CON CON1 CON2 correspondingly The relation P deﬁned F P contractor cid3 CON cid3 cid3 cid2 1 cid2 od cid2 2 2 o d cid2 4 cid5 cid2 od 0 0 o cid3 cid5 d cid2 3 cid2 o o cid5 F P D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1101 Fig 8 Preference contraction 2 correspondingly We By corollary need consider CONdetours length 1 edge starts twoedge CONdetour corresponding CON1edge Moreover second 1 edges 2 edges All CONdetours edges belong correspond CON2edges started value However minimal Corollary 1 To minimize construct Similarly denote relations represented ﬁrst second disjuncts F P P use Corollary 1 check minimality P Note P edge twoedge detours contracted P Now consider P P d 0 1 2 3 second edge corresponding twoedge CON2detour contracted P d 1 2 second edge P P end o cid2 od 0 2 edges Hence need consider CON2detours length When P removing edges P cid2 Hence minimal contractor test satisﬁed P Hence P d 1 2 2 edge ends o 1 cid2 od cid2 2 2 o 1 2 o 1 P cid2 o o d cid2 3 d cid2 4 0 od cid3cid3 cid3 cid2 cid3 cid5 cid5 cid5 cid5 cid5 cid5 F P 4 Construction minimal contractor cid9 n In section propose method computing minimal contractor An approach minimally contracting preference relation cid3 CON intuitive incremental contraction Namely try partition CON arbitrarily subsets CON intermediate preference relation cid3 P i1 CONi given P 1 expecting P minimal contractor cid3 entire CON However following example guarantee minimality P ways CON partitioned intermediate preference relations contracted individual partitions chosen carefully i0 CONi ith iteration 0 n compute minimal contractor P cid9 n i0 P Example 12 Let preference relation cid3 total order shown Fig 8a base contractor CON x1x3 x2x4 Let 0 cid3 CON0 x1x3 x1x2 partition CON CON0 x1x3 CON1 x2x4 Then minimal contractor P P minimal contractor P 1 minimal contractor 0 cid3 CON subset x1x3 x2x4 x2x3 contractor 0 x2x4 x2x3 However relation P 1 cid3 P P In algorithms computing minimal contractors proposed section essentially follow approach described First method computing contractor cid3 CON Then contractor fail minimal Subsequently propose method partitioning CON strata iterative contraction cid3 stratumbystratum results minimal contractor 41 Stratiﬁcation base contractor We illustrate idea computing contractors set P follows took CONedge x1x4 P relation cid3 Example 7 P edges starting CONdetours contractor CON 1 constructed 1 Example 7 The set P 1 edges start path x1 x4 For preference 1 turned minimal contractor As shown lemma set consisting Lemma 3 Let cid3 preference relation CON base contractor relation cid3 Then P cid5 xy cid6 cid6 x cid5 v CONx cid5 x x cid5 cid3 y y cid4 v cid7 contractor cid3 CON Proof By construction P x y disconnected starting edge Hence P contractor cid3 CON cid2 CON P Lemma 1 implies cid3 P SPO Indeed given xy P path 1102 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 9 Preference contraction However example contractor minimal Recall Theorem 1 edge minimal contractor CONdetour shares edge contractor However case edge starting CONdetour discarded CONdetour disconnected edge contractor deﬁned Lemma 3 That P Example 13 Let preference relation cid3 total order x1 x5 Fig 9a Let base contractor CON x1x4 x2x5 shown Fig 9b Let P x1x2 Fig 9c contractor cid3 CON In fact set solid edges P P necessary First CONedge Second edge x2x4 CONdetour x1 cid3 x2 cid3 x4 P x1x2 minimal contractor cid3 CON As having edge x1x2 P x1x2 x1x3 x1x4 x2x3 x2x4 x2x5 Then cid3 P minimal P As shown Example 13 minimal contractor constructed including edges start CONdetour detour disconnected Thus adding edge contractor need know edge detour starting contractor So instead contracting cid3 CON split CON strata contract cid3 incrementally strata CON Essentially stratum CON consists edges detours disconnected single iteration violating minimality contractor computed far The method splitting base contractor strata propose use follows Deﬁnition 7 The stratum index xy CON maximum length cid3path started y consisting end nodes CONedges A stratum set CONedges stratum index This method stratiﬁcation following useful property If preference relation minimally contracted strata indices n minimally contracting relation stratum index n 1 guarantees minimality entire contraction Clearly preference relation inﬁnite tuple start cid3paths arbitrarily large lengths Therefore stratum index CONedge undeﬁned We exclude cases assume edge CON relations stratum index deﬁned Deﬁnition 8 Let CON base contractor preference relation cid3 Let K CON y xxy CON cid3CON cid3 KCON KCON Then CON stratiﬁable iff y KCON integer k paths started y cid3CON length k CON ﬁnitely stratiﬁable iff constant k paths cid3CON length k The intuition deﬁnition follows The K CON deﬁnes set end nodes CONedges nodes lose incoming edges contraction The relation cid3CON restriction cid3 set KCON Deﬁnition 8 implies edge stratiﬁable CON stratum index deﬁned Since shortest path cid3CON length 0 stratum index stratiﬁable relations 0 Example 14 Take preference relation cid32 t cid32 t cid5 tprice t cid5 price domain set rational numbers Q base contractors CON1 CON2 cid3 cid3 cid5 cid5 cid2 t t cid2 t t CON1 CON2 tprice 10 000 tprice t price cid5 cid2 t cid5 price 5000 t cid5 price 6000 cid3 Then KCON1 KCON2 deﬁned F CON K1 cid3CON1 cid3CON2 deﬁned cid5 cid5 cid3 cid2 t t cid2 t t F cid3CON1 F cid3CON2 tprice t tprice 5000 t price cid3 cid5 cid5 price 6000 x cid22 F CON K2 x xprice 5000 xprice 6000 respectively Hence D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1103 Clearly length paths cid3CON1 unbounded Hence CON1 ﬁnitely stratiﬁable The relation CON2 ﬁnitely stratiﬁable longest path cid3CON2 length 1 Above illustrate ﬁnite stratiﬁability property base contractor The preference relation base contractors represented EROformulas It open question stratiﬁable relations deﬁned EROformulas ﬁnitely stratiﬁable 42 Computation minimal contractor Below present approach constructing minimal contractor stratiﬁable relation CON Theorem 2 Minimal contractor construction Let cid3 preference relation CON stratiﬁable base contractor cid3 Let Li set end nodes CONedges stratum Then P deﬁned follows minimal contractor cid3 CON P cid8 i0 E E 1 P cid5 xy cid6 cid6 v Lixv CON x cid3 y y cid4 v y v cid2 cid3cid7 P i1 CON P icid8 j0 E Intuitively set E contains CONedges stratum edges cid3 need discarded contract preference relation stratum P union sets stratum Proof Theorem 2 Every E contains CONedges stratum Thus P SPO Its irreﬂexivity follows irreﬂexivity cid3 Transitivity proved induction stratum index contains CON Now prove cid3 P It given cid3 transitive Assume cid3 P n transitive Prove cid3 P n1 cid3 P n En1 transitive For sake contradiction assume x y zxy cid2 cid3 P n1 cid3 xz zy cid2 cid3 P n1 cid3 implies Transitivity cid3 P n xz zy En1 P n 1 imply xy cid3 P cid2 v Lnxv CON x cid3 y y cid4 v y v P n xy En1 Hence n CON cid3 1 2 3 According 3 y cid4 v If y v 2 1 3 imply xz En1 contradiction If y cid3 v xz En1 CON construction En1 Note zv CON implies zv CONedge stratum index n 1 implies zv P n zy En1 yv P n implies intransitivity cid3 P transitive The violation transitivity means edge xy P exists path x n y edges P contradiction Thus P n contradicts inductive assumption Thus cid3 P n1 transitive induction Assume cid3 P n n implies intransitivity cid3 P Lemma 1 Since xy P contractor cid3 CON CON contradicts 2 3 If zv P n zy yv P n Now prove P minimal contractor If Theorem 1 xy P CONdetour shares P En CONdetour x cid3 y cid4 v shares P P CONdetour started yv stratum index greater n cid2 edge xy Note xy P implies xy En n By deﬁnition n xy Since CONdetours xy belongs n exist k n yv Ek However impossible construction edges yv P Since yv P Example 15 Let cid3 CON Example 13 Fig 10a transitive edges omitted clarity We use Theorem 2 construct minimal contractor cid3 CON The relation CON strata end nodes L0 x5 L1 x4 Then E0 x2x3 x2x4 x2x5 P E0 E1 minimal contractor cid3 CON 1 P E0 E1 x1x3 x1x4 P P 0 1 1104 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 43 Preﬁx suﬃx contractors Fig 10 Using Theorem 2 compute minimal contractor It easy observe minimal contractor P constructed Theorem 2 property edge xy starts CONdetour xy P edge Full contractors property called preﬁx Preﬁx contractors minimal Theorem 1 It turns given preference relation given base contractor preﬁx contractor unique Proposition 1 Given preference relation cid3 stratiﬁable base contractor CON exists unique preﬁx contractor P cid3 CON Proof The existence preﬁx contractor follows Theorem 2 The fact preﬁx contractor equal constructed Theorem 2 proved induction stratum index CON Namely n P n contained preﬁx contractor cid3 CON Clearly set E 0 contracting cid3 0th stratum CON P n preﬁx contractor cid3 CON If edge preﬁx contractor Assume edge P xy En1 CON CONdetour x cid3 y cid3 v xy P edge yv P Hence xy cid5 preﬁx contractor P disconnect CONdetour index n yv start CONdetour stratum index n Hence P minimal contractor P unique preﬁx contractor cid2 Lemma 1 However P yv P cid3 P n cid5 cid5 cid5 A natural question arises discussion preﬁx contractors suﬃx contractor cid3 CON suﬃx edge constructed similarly preﬁx contractor Analogously contractor P xy P edge Note case preﬁx contractor suﬃx contractor minimal Theorem 1 It turns connection preﬁx suﬃx contractors straightforward To deﬁne use notion inverse binary relation ends CONdetour cid3 xy P Deﬁnition 9 Given binary relation R U U inverse Rinv R Rinv xy yx R Take preference relation cid3 base contractor CON It clear cid3inv preference relation SPO CONinv base contractor cid3inv CONinv cid3inv Proposition 2 Take preference relation cid3 base contractor CON Let P P inv suﬃx contractor cid3 CON preﬁx contractor cid3inv CONinv Then Proof The fact P relation To prove P edge xy P inverse detour P inv contractor cid3 CON follows deﬁnitions SPO inverse binary implies ends inv suﬃx contractor cid3 CON recall preﬁx property P starts CONinvdetour cid3inv xy P edge In cid3 edge yx P invedge cid2 Note Proposition 2 fact inverse inverse relation R R imply suﬃx contractor cid3 CON unique To compute suﬃx contractor cid3 CON compute cid3inv CONinv use Theorem 2 compute preﬁx contractor P At time important remember preconditions theorem CON stratiﬁable wrt cid3 By deﬁnition inverse CON stratiﬁable wrt cid3 imply CONinv stratiﬁable wrt cid3inv vice versa cid3inv CONinv compute inverse P 5 Contraction ﬁnitely stratiﬁable base contractors In section consider practical issues computing minimal contractors In particular method constructing preﬁx contractor proposed Theorem 2 adapted classes preference base contractor relations D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1105 x y false Algorithm 1 minContrF cid3 F CON 1 0 2 F P 1 3 F KCON y QExF CONx y 4 F cid3CON x y F CONx y F KCON x F KCON y 5 F Li y getStratumF cid3CON F KCON 6 F Li deﬁned 7 F E x y QEvF Li v F CONx v F cid3x y y v F cid3 y v F P x y F E x y x y F P F P 1 F Li y getStratumF cid3CON F KCON i1 i1 8 9 10 11 end 12 return F P y v F CON y v Due connection preﬁx suﬃx contractors discussed previous section methods compute suﬃx contractors overhead computing inverses From focus preﬁx contractors Observe deﬁnition minimal contractor Theorem 2 recursive Namely ﬁnd edges need discard contracting preference relation stratum n 1 CON need know edges discard contracting previous strata It means base contractor relations ﬁnitely stratiﬁable CON inﬁnite number strata corresponding computation terminate Assume CON ﬁnitely stratiﬁable relation First note base contractor ﬁnite preference relation ﬁnitely stratiﬁable paths preference relations longer size relation base contractors required subsets preference relations At time CON base contractor inﬁnite preference relation ﬁnitely stratiﬁable ﬁnite In particular case length paths cid3CON bounded number paths inﬁnite Below consider cases ﬁnite ﬁnitely representable ﬁnitely stratiﬁable base contractors separately 51 Computing preﬁx contractor ﬁnitely representable relations Here assume relations CON cid3 represented ﬁnite EROformulas F CON F cid3 We aim construct ﬁnite EROformula F P represents preﬁx contractor cid3 CON The function minContrF cid3 F CON shown exploits method constructing preﬁx contractors Theorem 2 adapted formula representations relations All intermediate variables algorithm store formulas Hence example expression form F x y means formulavariable F assigned formula written righthand free tuple variables x y The operator QE algorithm computes quantiﬁerfree formula equivalent argument formula For EROformulas operator QE runs time polynomial size argument formula number attributes A ﬁxed exponential number attributes A The function minContr Algorithm 1 starts contractor P 1 line 2 formulas F KCON F cid3CON representing KCON cid3CON computed lines 3 4 deﬁnition sets To 0th stratum CON function getStratum line 5 After iteration whileloop compute formula deﬁning E line 7 Theorem 2 compute formula representing intermediate contractor F P line 8 compute formula F Li representing stratum The whileloop terminates stratum contains edges F Li deﬁned Finally contractor cid3 CON returned To compute formulas representing different strata CON getStratum Algorithm 2 It takes parameters formula F cid3CON representing relation cid3CON formula F KCON representing set end nodes CONedges stratum index It returns formula represents set end nodes CONedges stratum undefined corresponding set That formula computed according deﬁnition stratum Proposition 3 Let CON ﬁnitely stratiﬁable base contractor preference relation cid3 Then Algorithm 1 terminates computes preﬁx contractor cid3 CON Proposition 3 holds Algorithm 1 uses construction Theorem 2 Below example comput ing preﬁx contractor ﬁnitely representable preference relation Example 16 Let preference relation cid3 deﬁned following formula cid3 cid2 o o cid5 F cid3 oprice o cid5 price base contractor CON Fig 11 deﬁned 1106 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Algorithm 2 getStratumF cid3CON F KCON Require cid2 0 1 0 2 3 4 F Li y QEF KCON y x1F cid3CON y x1 F Li y QEx1 xi F cid3CON y x1 F cid3CON x1 x2 F cid3CON xi1 xi x1 xi1F cid3CON y x1 F cid3CON x1 x2 F cid3CON xi xi1 5 end 6 QE yF Li y 7 return F Li 8 9 10 end return undefined cid3 cid2 o o cid5 F CON cid2 11 000 cid2 oprice cid2 13 000 o cid5 10 000 cid2 oprice cid2 12 000 o price 15 000 price 14 000 cid5 Fig 11 Example 16 cid3 price Q attribute Then F KCON o oprice 14 000 oprice 15 000 F cid3CON o o cid5 Fig 11 The end nodes CON strata deﬁned following formulas F KCON o cid5 F cid3o o cid5 F KCON o F L0 o oprice 15 000 F L1 o oprice 14 000 The relations contracting CON strata deﬁned following formulas cid3 cid3 cid2 o o cid2 o o cid5 cid5 F E0 F E1 11 000 cid2 oprice cid2 13 000 13 000 o 10 000 cid2 oprice cid2 11 000 13 000 o cid5 cid5 price cid2 15 000 price cid2 14 000 Finally contractor P cid3 CON deﬁned F P o o cid5 F E1 o o cid5 F E2 o o cid5 The ﬁnite stratiﬁability property CON crucial termination algorithm algorithm terminate relations ﬁnitely stratiﬁable Hence given base contractor relation useful know ﬁnitely stratiﬁable Let consider formula F cid3CON Without loss generality assume represented DNF By deﬁnition CON ﬁnitely stratiﬁable relation iff constant k cid3CONpaths length k In theorem property checked single evaluation quantiﬁer elimination operator Theorem 3 Checking ﬁnite stratiﬁability property Let F R EROformula representing SPO relation R following form cid3 cid2 o o cid5 F R cid3 cid2 o o cid5 F R1 F Rl cid3 cid2 o o cid5 F R conjunction atomic formulas Then checking constant k length Rpaths k single evaluation QE formula size linear F R In Theorem 3 assume atomic formula operators cid2 cid3 transformed disjunction formulas uses strict comparison operator equality operator The proof Theorem 3 details corresponding ﬁnite stratiﬁability property test provided Appendix B 52 Computing preﬁx contractor ﬁnite relations In section consider ﬁnite relations cid3 CON We assume relations stored separate tables preference relation table R base contractor table C having columns X Y Every tuple table corresponds element corresponding binary relation Hence R SPO C R Here present algorithm Algorithm 3 computing preﬁx contractor preference relation cid3 CON represented tables Essentially algorithm adaptation Theorem 2 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1107 Algorithm 3 minContrFiniteR C Require R transitive C R 1 P C 2 Get end nodes C edges 3 K πY C 4 RC related R cid3CON cid3 Deﬁnition 8 5 RC πR XRY K1 K2 R cid14cid15 K1Y R X cid14cid15 K2Y RY 6 K 7 8 9 10 11 Get end nodes stratum C edges E K π X RC Prepare K RC iteration K K E RC RC RC E cid14cid15 RCY EY 12 13 Add P Redges contracting current stratum C cid14cid15 P P πR1 XR1Y R1 CY EY cid14cid15 R1 XC XR2Y CY cid14cid15 R1Y R2 X R2 P C E 14 end 15 return P The function minContrFinite takes arguments R C The function implemented terms relational algebra operators First constructs table K column Y storing end nodes C edges K corresponds KCON Deﬁnition 8 computed analogously Second computes table RC storing restriction original preference relation R K cid3CON Deﬁnition 8 These tables needed obtaining strata C After function picks strata C contracts original preference relation stratum turn shown Theorem 2 In iteration whileloop computes end nodes E current stratum line 8 removes K line 10 removes C edges current stratum RC prepare iteration In line 13 compute table P columns X Y represents minimal contractor computed far The whileloop terminates table K exhausted strata processed The extraction strata CON order stratum index performed follows It clear nodes ending CONedges stratum 0 start edge RC The set E computed line 8 difference set K nodes ending C edges set nodes starting edges RC Hence initial value E contains nodes ending C edges stratum 0 To end nodes stratum C need remove edges RC end members E remove E K After stratum highest index obtained relation K Algorithm 3 uses renamings K K1 K2 renamings R R1 R2 Proposition 4 Algorithm 3 computes preﬁx contractor R C It implemented OC2 R log R time The correctness Proposition 4 holds Algorithm 3 follows Theorem 2 To compute running time assume cost binary operation join union difference relations T S O T S arguments sorted key O T log S That cost clearly reduced appropriate use indexing hashing All input arguments intermediate relations Algorithm 3 kept sorted The relation P containing intermediate contractor edges relation R stored single relation edges belonging P marked In line 1 relation C sorted X Y copied P In line 3 projection C computed result sorted Y copied K The relation RC computed line 5 sorted X Y The processing lines 15 takes time O R log R given C cid2 R The running time body whileloop clearly dominated running time line 13 O C R log R Finally size K O C running time algorithm stated Proposition 4 6 Preferenceprotecting contraction Here propose operator preferenceprotecting contraction In addition base contractor CON subset P original preference relation protected removal contracted preference relation speciﬁed Such relation complementary respect base contractor relation CON deﬁnes preferences discard relation P deﬁnes preferences protect Deﬁnition 10 Let cid3 preference relation CON base contractor cid3 Let relation P P A contractor P called P contractor P cid3 CON P P cid3 CON P cid3 protecting contractor cid3 CON A minimal protecting minimal contractor cid3 CON called P P Given contractor P cid3 CON Lemma 1 P contain edge CONdetour Thus P contains entire CONdetour protecting P contracting cid3 CON possible 1108 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 12 Proof Theorem 5 Theorem 4 Let CON stratiﬁable base contractor relation preference relation cid3 P contractor cid3 CON protects P TC transitive closure P CON P iff P TC cid3 There exists minimal As noted necessary condition theorem follows Lemma 1 The suﬃcient condition follows Theorem 5 prove adding P cid3 P problematic A naive way computing preferenceprotecting minimal contractor ﬁnding minimal contractor P P However cid3 P SPO general obtaining SPO cid3 P P The solution propose uses following idea First ﬁnd base contractor CON equivalent minimal contraction cid3 CON protected P minimal contraction After compute minimal cid5 cid3 CON contractor cid3 CON cid5 Theorem 2 Recall contractor P constructed Theorem 2 The preﬁx property P Otherwise assume edge xy P P start CONdetours cid3 P P protecting contractor P xy For CONdetour length started xy P edges deﬁned follows cid6 cid6 u u cid3 x cid3 y u y CON ux P starts CONdetour cid3 By Lemma 1 contain edge different xy belongs CONdetour started contain edge ending CONdetour The set implies edges P Q xy cid5 cid7 cid5 It turns set Q useful property contained P protecting contractor construct P protecting minimal contractor shown theorem Theorem 5 Let cid3 preference relation CON stratiﬁable base contractor cid3 Let P P CON CON Then preﬁx contractor cid3 CON Q P cid3 P transitive relation protecting minimal contractor cid3 cid5 CON Q We prove P preﬁx contractor cid3 CON For P Since We contradicts preﬁx property P detour x v cid3 started xy having edge We choices CONdetour Q detour Consider ﬁrst case Clearly y cid13 v xv CON construction contractor cid3 CON Q That Proof Let P sake contradiction assume xy P cid5 P preﬁx contractor CON xy P P Q Note path y v cid3 contains P implies CONdetour x v started xy xy P CON cid13 Thus xv CON x cid3 y cid3 v Fig 12a yv Q follows xy P contradicts initial assumption P protects P edge P P Consider second case Q detour x v started xy having edge xy P u y P Fig 12b ux xy P contractor cid3 CON Q implies path transitivity P imply u y P Since xv Q uv CON ux P uv CON imply yv Q That fact P cid3 y v contains P That contradicts initial assumption xy edge Hence Q detour x v started xy having xy P Now prove P fact contractor cid3 superset CON preﬁx contractor cid3 CON xy P Q detour CONedge uv ux P obtained joining edge ux T xy P minimal contractor cid3 CON The fact contractor cid3 CON follows corresponding detour T edge If CONdetour xy satisﬁes minimality condition Theorem 1 If Hence CONdetour We showed P Therefore P minimal contractor cid3 CON cid2 CON We prove minimality Since P xv CON xy P protects P cid5 cid5 cid5 Note sets end nodes CON Q edges end nodes CONedges coincide construction Q Therefore CON Q stratiﬁable ﬁnitely stratiﬁable iff CON stratiﬁable ﬁnitely stratiﬁable correspondingly Hence CON ﬁnitely stratiﬁable relation Algorithms 1 3 compute preferenceprotecting minimal contractor cid3 CON If relations cid3 CON ﬁnite Q constructed polynomial time size cid3 CON relational algebra expression constructed deﬁnition If relations ﬁnitely representable Q computed quantiﬁer elimination operator QE D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1109 Fig 13 Using Theorem 5 compute preferenceprotecting minimal contractor Fig 14 cid3 transitive edges omitted CON P n For Theorem 5 apply relation P transitive Nontransitivity P implies edges xy yz P protected transitive edge xz critical However relation obtained result preferenceprotecting contraction preference relation SPO Hence edge xz protected resulting preference relation This fact implies protecting relation equivalent protecting minimal transitive extension transitive closure Therefore P transitive needs compute transitive closure use Theorem 5 For ﬁnite relations transitive closure computed polynomial time 13 For ﬁnitely representable relations Constraint Datalog 21 compute transitive closure Another important observation P protecting minimal contractor cid3 CON computed according Theorem 5 necessarily preﬁx contractor cid3 CON This fact illustrated following example Example 17 Let preference relation cid3 total order x1 x5 Fig 13a transitive edges omitted clarity Let base contractor CON x1x4 x2x5 P x1x3 x2x3 x4x5 The existence minimal P construct The set Q equal x3x4 x3x5 CON cid3 CON P CON However P protecting contractor cid3 CON follows Theorem 4 We use Theorem 5 cid5 x1x4 x2x5 x3x4 x3x5 We construct preﬁx contractor strata end nodes L0 x5 L1 x4 Then E0 x2x4 x3x4 x2x5 x3x5 protecting minimal contractor cid3 preﬁx contractor cid3 CON edges x3x4 x3x5 start CONdetour 1 By Theorem 5 P E0 E1 x1x4 P E0 E1 P The relation CON P P 1 0 cid5 cid5 In conclusion section formally number minimal contractors stratiﬁable base contractor inﬁnite We mentioned fact times reasonable proved cid5p Q domain attribute p base To use Theorem 5 Take preference relation t cid3 t contractor CONt t cid2 t t cid5p 1 Take subset P b cid3 deﬁned p cid13 n tp n t cid5 tp 0 t tp 0 t cid5 tp t p 1 t p 0 t p 1 P cid3 cid5 cid5 cid5 cid5 cid5 b b 0 b 1 Fig 14 It easy check P b protecting minimal contractor cid3 CON Denote P Theorem 5 P P Since number rational numbers b 0 1 inﬁnite set P inﬁnite size By Lemma 1 P contains edge 0 b P different minimal contractors transitive intersect cid3 Hence b b P Hence P contains inﬁnite number P cid13 b 0 b P b set P b b 7 Meet preference contraction In section consider operation meet preference contraction In contrast preceding sections main focus minimality preference relation change contraction operation considered changes preference relation necessarily minimal way A meet contractor preference relation union minimal contractors When certain set preferences required protected contracting preference relation operation preferenceprotecting meet contraction 1110 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Deﬁnition 11 Let cid3 preference relation CON base contractor cid3 P contractor cid3 CON iff cid3 The relation P meet meet Fig 15 Example 18 P meet cid8 P P P meet set P meet minimal contractors cid3 CON The relation P meet P CON iff P protecting meet contractor cid3 P P meet cid8 P P P meet P set P meet P P protecting minimal contractors cid3 CON Note relations cid3 P meet cid3 P meet P represented intersections preference SPO relations preference SPO relations Let ﬁrst consider problem constructing meet contractors By deﬁnition edge xy meet contractor preference relation cid3 CON minimal contractor cid3 CON contains xy Theorem 1 implies CONdetour cid3 containing xy xy corresponding meet contractor However fact xy belongs CONdetour suﬃcient condition xy corresponding meet contractor Example 18 Let preference relation cid3 total order u x y v Let CON1 uv Fig 15a CON2 uv yv Fig 15b There CON1 CON2detour containing xy u cid3 x cid3 y cid3 v There minimal contractor u y xv xy uv However minimal contractor cid3 CON2 cid3 CON1 contains xy P contains xy edge yv CON2detour u cid3 x cid3 y cid3 v CON2 1 In Theorem 6 meet contractors constructed case ﬁnitely stratiﬁable base contractors cid3 edge CONdetour We use Theorem 4 minimal According theorem cid3edge xy meet contractor cid3 CON iff contractor P CON xy P contractor cid3 CON contains xy edges detour protected Theorem 6 Let CON ﬁnitely stratiﬁable base contractor preference relation cid3 Then meet contractor P meet cid3 CON Rmeet cid5 xy cid6 cid6 uv CONu cid4 x cid3 y cid4 v cid2 cid3 ux cid3 CON u x cid2 y v cid3 CON y v cid3cid7 cid5 cid3 CON iff CONdetour Proof By Corollary 1 edge xy minimal contractor P edges cid3 xy P edge Hence minimal contractor subset Rmeet Now edge xy Rmeet minimal contractor cid3 CON contains xy Let u cid4 x cid3 y cid4 v uv CON Let construct set P ux y v ux y v follows u cid3 x y cid3 v u cid3 x y v u x y cid3 v u x y v cid5 P cid5 cid5 CON P transitive P protects P P CON Since P xy P cid2 cid5 cid5 cid3 Theorem 4 implies P cid5 CONdetour cid3 u v xy P protecting minimal contractor P cid3 edge This implies Now consider case P P meet deﬁned P protecting meet contractors A naive solution construct difference However example solution work general D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1111 Fig 16 cid3 CON P Example 19 Example 19 Let preference relation cid3 total order u x y v Fig 16 Let CON u y xv P Note yv P member P CONdetour yv edge contractor yv member P contractor ux implies xy protecting contractor order disconnect path u y Hence protecting minimal Theorem 6 yv P meet Hence yv P meet P However note ux P The theorem shows P protecting contractor constructed The idea similar Theorem 6 However construct meet contractor set CON common minimal contractors In protecting meet contractor superset C P CON contained Such set C P case P viewed union CON set edges cid3 discarded protection P Theorem 7 Let CON ﬁnitely stratiﬁable base contractor preference relation cid3 P P protecting meet contractor P meet CON Then P P cid3 CON transitive relation P cid3 P Rmeet cid5 xy cid6 cid6 xy P cid2 uv CONu cid4 x cid3 y cid4 v cid3 ux cid3 C P u x cid2 y v cid3 C P y v cid3cid7 cid5 xy cid6 cid6 uv CONu cid4 x cid3 y cid4 v cid2 ux P cid3 u x cid2 y v P y v cid3cid7 C P protecting contractor cid3 CON It constructed Proof First easy observe C P subset P edges xy participate CONdetours length edges protected Since CONdetour edge contractor xy member contractor P If xy P protecting minimal contractor P Second P cid3 CON subset Rmeet We xy Rmeet P That Corollary 1 edge uv CON u cid4 x cid3 y cid4 v ux yv P holds xy P cid2 holds P cid2 deﬁnition cid3 cid3 ux cid3 C P u x y v cid3 C P y v If u x y v hold expression holds Assume u cid3 x case y cid3 v similar If ux C P contradiction Hence ux cid3 C P xy Rmeet showed ux P P contained P Third xy Rmeet similar proof Theorem 6 By deﬁnition Rmeet proof Theorem 6 We set P For sake contradiction assume P Having P detour implies edge ux yv C P contradicts deﬁnition Rmeet detour implies xy P P Since CONdetour xy unprotected P protecting minimal contractor cid3 CON The proof cid5 P xy u cid4 x cid3 y cid4 v Construct set P xy cid5cid5 CON cid5 P transitive closure P cid5 cid5cid5 CON cid13 This implies CONdetour consisting P edges P cid5 CON Having single edge P P Having ux yv cid5cid5 CON Theorem 5 protecting minimal contractor cid3 CON P edges detour contradicts initial assumption P contradicts deﬁnition Rmeet protecting minimal contractor P P Hence P xy P P cid2 P Finally P Rmeet P cid5cid5 cid5cid5 We note given expressions meet P protecting meet contractors Theorems 6 7 easily obtain contractors ﬁnite ﬁnitely representable relations evaluation relational algebra query case quantiﬁer elimination case Example 20 Let preference relation cid3 total order x1 x5 Fig 17a transitive edges omitted clarity Let base contractor CON x1x3 x2x3 x2x5 P x2x4 A meet contractor P meet cid3 CON x1x3 x2x3 x2x5 x2x4 x3x4 x4x5 The resulting contracted preference protecting meet contractor cid3 CON x1x3 x2x3 x2x5 x4x5 The resulting lation shown Fig 17b A P contracted preference relation shown Fig 17d Note C P CON x4x5 1112 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 17 Computing meet contractor P protecting meet contractor 8 Binary preference relations vs preference states The topic current paper preference contraction binary preference relation framework However paper touching subject contracting preferences Some relevant papers considered Section 9 One fundamental works area 18 Hansson introduced preference state framework based belief revision theory Even preference state binary preference relation frameworks different fundamental principles preference change operators similar Below present connections frameworks In particular adaptation preference state framework preference relation framework As result obtain framework encompasses preference contraction restricted preference revision User preferences 18 represented preference states A preference state logically closed set sentences describing preferences agent Every preference state underlying set preference relations The connection states relations follows A preference relation order tuples unambiguous description preferences agent A preference relation induces set logical sentences relations However case preferences agent unambiguous Hence preference state associated set possible preference relations Deﬁnition 12 An alternative element U universe tuples Nonempty subsets U called sets alternatives The language LU sentences deﬁned A B U A B LU A B LU A B LU sentence LU A subset LU called restricted preference set The language deﬁned restricted version lan guage 18 Boolean operator allowed negation Throughout discussion assume set alternatives ﬁxed nonempty subset Ur U Deﬁnition 13 Let R subset Ur Ur The set R sentences deﬁned follows A B R iff A B R A B R iff A B Ur A B R Deﬁnition 14 A binary relation R Ur Ur restricted preference model iff strict partial order Given restricted preference model R corresponding R called restricted preference state A relation R S minimal representation restricted preference state S iff R S minimal relation S R S In contrast deﬁnition preference model 18 deﬁned set SPO relations preference state intersection R members R corresponding preference model We deﬁne operators change restricted preference states revision contraction Restricted states changed sets sentences In 18 change preference state set sentences deﬁned corresponding change conjunction corresponding statements Moreover change set sentences allowed In adaptation framework deﬁne conjunctions statements language Moreover preference revision 11 allows adding new preferences preference contraction proposed paper allows D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1113 discarding existing preferences Here aim deﬁne operator restricted preference set revision captures semantics operators Deﬁnition 15 A restricted preference set S called positive iff contains sentences form A B A B Ur Analogously S negative iff contains sentences form A B A B Ur A restricted preference set complement S denoted S A B Ur A B S iff A B S A B S iff A B S Positive negative restricted preference sets change restricted preference states Intuitively positive preference set represents existence preferences negative set represents lack preferences Deﬁnition 16 Let R restricted preference model Then operator R restricted preference revision R iff cid16 positive negative restricted preference sets S R cid5 R S R cid5 cid5 1 S R cid5 2 R SPO 3 SPO R cid5cid5 S R cid5cid5 R R cid5cid5 cid3 R cid5 S positive R cid5 cid3 R cid5cid5 R S negative The condition deﬁnition expresses minimality restricted preference state change This condition different positive negative sets add positive statements want discard existing positive sentences negative statements added new positive sentences added The restricted preference revision operator deﬁned different preference state revision 18 First preference state revision allows revision ﬁnite sets arbitrary sentences positive negative sets sentences Second minimality condition deﬁned set containment 18 deﬁned function symmetric set difference original preference relations R The difference preference state representation result preference revision 18 union relations R case intersection Below deﬁne operator contraction restricted preference states similar contraction prefer cid5 cid5 ence states Deﬁnition 17 Let R restricted preference model Then operator R restricted preference contraction R iff positive negative restricted preference sets S R S R S Given operators restricted preference states deﬁned relationships preference change framework straightforward Proposition 5 Let R restricted preference model S positive negative restricted preference set R S minimal representation S Then R S 1 S positive restricted preference set R R S cyclic path 2 TCR R S S positive restricted preference set R R S cyclic paths 3 minimal contractor R R S S negative restricted preference set R P P cid16 TC transitive closure operator Proof When restricted preference model revised positive preference set resulting relation R intersection minimal SPO extensions R R R S R extension R minimal extension R result equivalent result union preference revision 11 S contain edge A B A B S Such exist cyclic path R R S However cyclic paths exist S TCR R S We note equal transitive closure R R S Hence R cid5 cid5 cid5 cid5 When restricted preference model revised negative preference set resulting relation R subset R Moreover A B S pair A B R S Hence R minimal contractions R R S result meet contraction R R S cid2 S S intersection Below list properties revision contraction operators restricted preference states Proposition 6 Let R restricted preference model S positive negative restricted preference set Then S SPO closure 1 R 2 S R 3 S R R R S vacuity S S positive R S R cyclic path limited success 1114 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Proof All properties follow Proposition 5 Namely Property 1 follows fact result R S SPO case Proposition 5 Property 2 follows Proposition 5 deﬁnition R S Property 3 follows Proposition 5 1 S R implies R S R S positive 2 minimally contracted preference relation equal contracted nonexistent edges S negative cid2 Proposition 7 Let R restricted preference model S restricted positive negative preference set Then 1 R S SPO closure 2 S R S S negative R S 3 S R R R S vacuity 4 R 5 R S R S R S S Harper identity deﬁnition R cyclic path limited success S S positive R S R cyclic path limited Levi identity Proof Properties 1 2 3 follow Proposition 6 Property 4 follows fact R S R Proposition 6 implies R S deﬁnition S S negative S positive R S R cyclic path cid2 S R S An important difference restricted preferenceset change operators corresponding change operators 18 restricted versions successful Property 2 Proposition 5 Levi identity holds certain class restricted preference sets In addition operator preference set contraction 18 property inclusion R R S recovery S R R R S S As restricted framework deﬁned inclusion hold representation preference model single SPO relation Recovery hold restrictions language allowing disjunctions sentences We note main targets current work development eﬃcient practical approach contracting preference relations binary relation framework ﬁnite ﬁnitely representable cases In addition deﬁning semantics preference contraction operators developed set algorithms compute contractions We tested reallife data demonstrated eﬃciency In contrast 18 focuses semantical aspects preference change address computational issues preference change operators In particular ﬁnite representability addressed 9 Related work 91 Other operators preference relation change A number operators preference relation change proposed literature An operator preference revision deﬁned 11 A preference relation revised preference relation called revising relation The result revision preference relation 11 deﬁnes versions preference revision union prioritized Pareto different way original revising preference relations composed For semantics 11 identiﬁes cases called 0 1 2conﬂicts revision fails SPO preference relation satisfying operator semantics This work considers revising preference relations preference relations Although address problem discarding subsets preference relations explicitly revising preference relation Pareto prioritized revision operators result discarding subset original preference relation It shown 11 revised relation SPO limited classes composed relations cid5 wrt attribute better t Another operator preference relation change deﬁned 5 This work deals special class preference according skyline preference relation iff t relations called skylines 6 A tuple t preferred tuple t wrt attribute Preference relations 5 changed worse t equivalence relations In particular modiﬁed preference relation extension original relation pairs equivalent incompatible tuples ordered according new preferences This preference change operator adds new edges original preference relation preference relation contraction expressed operator cid5 cid5 In 23 introduced operation minimal preference contraction preference relations We studied properties operation proposed algorithms computing contractors preferenceprotecting contractors ﬁnitely stratiﬁable base contractors In current paper generalize approach develop method checking ﬁnite stratiﬁability property ﬁnitely representable base contractors We introduce operations meet meet preferenceprotecting contraction propose methods computing We provide experimental evaluation framework comprehensive discussion related work 92 Belief revision contraction Preferences considered special form human beliefs change modeled context belief change theory The approach represent beliefs truthfunctional logical sentences A belief set set D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1115 sentences believed agent A common assumption belief sets closed logical consequence The common operators belief set change revision contraction 3 A number versions operators proposed 19 capture reallife scenarios This approach different preference relation approach First language truth functional sentences rich allows complex statements preferences conditional preferences b c d indeﬁnite b c d In contrast preferences preference relation framework paper certain given preference relation cid3 possible check tuple preferred tuple In addition belief revision generally restricted ﬁnite domains We proposed algorithms contracting ﬁnite inﬁnite preference relations 93 Other frameworks An approach preference change proposed 9 Preferences changed interactive example critiques This paper identiﬁed types common critique models similaritybased qualitybased quantitybased However formal framework provided 17 describes revision rational preference relations propositional formulas The proposed revision operator satisﬁes postulates success minimal change The author shows proposed techniques work case revision single statement extended allow revisions multiple statements 14 proposes algorithms incremental maintenance transitive closure graphs relational algebra The graph modiﬁcation operations edge insertion deletion Transitive graphs 14 consist kinds edges edges original graph edges induced transitive closure When edge xy original graph contracted algorithm deletes transitive edges uv paths u v original graph xy As result contraction minimal according deﬁnition minimality Moreover 14 considers ﬁnite graphs algorithms work inﬁnite relations 10 Conclusions future work In paper presented approach contracting preference relations We considered operators preference contraction minimal preference contraction minimal preferenceprotecting contraction preference protecting meet contraction inspired different scenarios preference change We proposed algorithms techniques computing contracted preference relations given ﬁnitely stratiﬁable base contractors We evaluated proposed algorithms experimentally Appendix A showed reallife database applications One areas future work relax ﬁnite stratiﬁability property property consider general base contractors Another interesting direction future work design operator generalized preference relation change allows change preference relations discarding existing adding new preferences time The current approaches preference relation change restricted type change As showed discussion related work existing preference revision approach 11 fails work presence conﬂicts cycles A promising direction use preference contraction operators presented resolve conﬂicts In paper assume relations deﬁning preferences discard explicitly formulated user However assumption hardly works practical scenarios preference change formulating relation requires knowledge preferences case Hence promising direction perform interactive preference contraction change Acknowledgements We greatly appreciate conversations Matteo Cristani comments anonymous reviewers Appendix A Experimental evaluation MIN meet contraction MEET preferenceprotecting meet contraction P In section present results experimental evaluation preference contraction framework proposed We implemented following operators preference contraction preﬁx contraction denoted PREFIX preference MEET protecting minimal contraction P MEET PREFIX implemented Algorithm 3 P according Theorem 7 We operators contract ﬁnite preference relations stored database table R X Y The preference relations experiments ﬁnite skyline preference relations 6 deﬁned Section 9 Skyline preference relations database applications We note relations generally materialized database tables querying databases skylines However materialized scenarios preference elic itation 4 To generate relations NHL 2008 Player Stats dataset 2 Each tuple 18 different attributes 5 All algorithms experiments implemented Java 6 We ran experiments Intel Core 2 Duo CPU 21 GHz 20 GB RAM All tables stored PostgreSQL 83 database MIN according Theorem 5 MEET according Theorem 6 P 1116 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Fig 18 Contraction performance Small base contractors We carried sets experiments preference contraction algorithms In ﬁrst set model scenario base contractors manually constructed user Thus assume base contractors comparatively small size In second set experiments assume base contractors constructed automatically larger size A1 Small base contractors The aim experiments shown twofold First demonstrate algorithms preference contraction proposed good performance given base contractors small size Second difference sizes contractors computed different algorithms signiﬁcant It implies reallife appli cations appropriate contraction algorithm needs selected carefully depending required semantics The skyline preference relations use consist 51 887 80 612 116 411 edges To generate 400 500 600 tuples respectively 852 tuples 2 The size base contractors ranges 1 30 edges We pick 30 edges assuming scenario user unlikely provide large set preferences discarded For base contractor size randomly generated 10 different base contractors computed average time spent compute contractors average size The relations P storing preferences protect transitive relations containing 1 5 edges corresponding preference relation Fig 18 shows running time contraction operators depends size preference relation contract MIN slightly MEET worse contains 1 cid3 As observe performance P size base contractor Here P worse PREFIX need computing set Q Similarly running time P running time MEET computation C P Fig 19 shows dependency minimal contractor size size preference relation size base contractor For value base contractor size charts average size corresponding contractor Notice preference protection affect size contractors computed PREFIX P MIN coincide That fact contractors computed algorithms different properties minimal The size contractors computed MEET strictly size contractors computed P MEET This justiﬁed semantics contractors meet contractor union minimal contractors cid3 CON P protecting meet contractor subset meet contractor Another important observation size minimal contractors PREFIX P MIN size MEET differ signiﬁcantly Hence minimality signiﬁcant effect size meet contractors MEET P contractors base contractors small Fig 20 shows algorithm performance size computed contractors depend size MEET MEET involves MIN Fig 20b shows protecting minimal contractor protected preference set P running time P joins tables representing P size contractor varies size P MIN grows slowly The reason computation C P P As observe Fig 20a size P cid3 computation Q P affects running time P As expected size P D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1117 Fig 19 Full contractor size Small base contractors Fig 20 Small base contractors Varying P The size P minimal contractors protect P protecting meet contractor goes P grows fewer A2 Medium size base contractors We notice according Fig 18 time spent compute contractor algorithm exceed 3 seconds In Fig 21a running time algorithms versus relative size CON larger 1 cid3 experiment previous The size preference relation 80 612 size P size CON varies 1 806 edges 5 4030 edges cid3 As running time grows quadratically size CON consistent Proposition 4 Fig 21b shows size contractors changes CON Notice size minimal contractors grows signiﬁcantly slower CON CON 5 cid3 size meet contractor exceeds 40 cid3 size minimal contractors greater 10 cid3 As case small CON sizes minimal meet contractors differ greatly Hence reallife scenarios important know semantics preference contraction user intends high effect contraction result In experiments use data set 2 As preference relations use skylines As observed CON small size time spent compute contractor seconds regardless size cid3 Hence algorithms proposed contract ﬁnite relations eﬃciently scenarios database applications However CON large additional optimization techniques needed 1118 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Appendix B Proof Theorem 3 Fig 21 Medium size base contractors Theorem 3 Checking ﬁnite stratiﬁability property Let F R EROformula DNF representing SPO relation R following form cid3 cid2 o o cid5 F R cid3 cid2 o o cid5 F R1 F Rl cid3 cid2 o o cid5 F R conjunction atomic formulas Then checking constant k length Rpaths k single evaluation QE formula size linear F R Let R binary relation represented formula F R 1 l We split proof Theorem 3 lemmas In Lemma 4 length Rpaths bounded constant iff length R paths bounded constant disjunct F R F R Lemma 5 shows length R paths bounded constant iff bound length paths graph binary relation represented conjunct F R In Lemma 6 check length paths graph represented F R bounded To prove ﬁrst lemma use following idea Let sequence S o1 n cid3 2 tuples Rsequence o1 o2 on1 R The transitivity R implies Redge o1 tuples S 1 o1 o2 o1 R cid9 Note 2 contains edges started o1 Since R i1 R Redge 2 1 l l R edge Let R j necessarily unique j 1 l number R j edges 2 maximum cid5 Such R j called major component S Let sequence S consist end nodes R j edges order appear S Such S called major subsequence S cid5 2 Observation 1 Let S Rsequence R major component S S cid5 corresponding major subsequence S Then cid5 Rsequence 1 S 2 length S n length S cid5 cid25 n1 l cid26 The ﬁrst fact Observation 1 follows transitivity R second fact follows deﬁnition major subsequence Note major subsequence Rsequence Hence tuples construct major subsequence Observation 2 Let S0 St Rsequences 1 t S major subsequence S i1 corresponding major components R ji Let o0 ot ﬁrst tuples S0 St correspondingly Then R j1 o0 ot D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1119 Observation 2 follows deﬁnition major subsequence Fig 22 Major subsequences Example 21 Let S0 x1 x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 Rsequence Fig 22 illustrates possible construction major subsequence S1 S0 major subsequence S2 S1 major subsequence S3 S2 The edges Fig 22 correspond majorcomponent edges In sequence node dark major subsequence sequence Note S3 major subsequence subsequence nodes Lemma 4 There constant bounding length Rpaths iff 1 l constant bounding length R paths k2l1 i1 ing Rsequence The length S0 Rsequence length li 2 For sake contradiction let Rpath length k2l1 i0 k2l i0 Proof In case l 1 lemma trivially holds Further assume l 1 If 1 l length R paths bounded length Rpaths Assume 1 l R paths length k Show length Rpaths cid17 k2l1 li 1 Let S0 correspond i1 li Let S1 major subsequence S0 By Observation 1 S1 li Following logic let St major subsequence St1 corre k2lt1 li Such computation continue size sponding major component R jt1 The size St i0 St greater t cid2 k 2l Let major components S 1 Sk2l R j1 R jk2l correspondingly Note l possible different major components Thus k 2 major components R j1 R jk2l Let denote ﬁrst k 2 Rt1 Rtk2 tuples start corresponding major sequences ot1 otk2 By Observation 2 cid17 cid17 cid17 cid17 Rt1 ot1 ot2 Rt2 ot2 ot3 Rtk1 otk1 otk2 Since Rt1 Rtk2 expression implies R path length k 1 1 l contradiction cid2 In Lemma 4 showed problem checking boundedlength property Rpaths reduced problem testing property R paths Note R represented formula F R conjunction atomic formulas Let set attributes present formula F R deﬁned AF Ri Then F R represented cid3 cid2 o o cid5 F R cid18 cid3 cid2 o o cid5 λ A AAF Ri λ Ao o preference formula language implies atomic formula belongs exactly λ A cid5 conjunction atomic formulas attribute A Note structure Denote relation represented λ A Λ A In lemma problem checking ﬁnite stratiﬁability property R paths reduced problem Λ A paths Lemma 5 There constant bounding length R paths iff A AF Ri Λ A paths constant bounding length Proof Let k R path length k R io1 o2 R io2 o3 R iok ok1 1120 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 Then A AF Ri Λ A path length k Λ Ao1 o2 Λ Ao2 o3 Λ Aok ok1 Let k A AF Ri Λ A path length k cid3 cid3 cid3 cid2 1 o A o A 2 Λ A Λ A cid2 2 o A o A 3 Λ A cid2 k o A o A k1 Construct sequence tuples o1 o2 o3 follows Let o j A o A domain D A A Clearly following R path length k j A A AF Ri Otherwise let o j A value R io1 o2 R io2 o3 R iok ok1 cid2 Lemma 6 There constant bounding length Λ A paths iff Λ A path length o1 o2 o3 o4 UΛ Ao1 o2 Λ Ao2 o3 Λ Ao3 o4 Proof If constant k Λ A path length k Λ A path length If λ A unsatisﬁable Λ A paths Thus assume λ A satisﬁable Based preference formula language formula λ Ao o cid5 split conjunctive formulas 1 φL conjunction atomic formulas o Aθ c cid5 Aθ c 2 φR conjunction atomic formulas o 3 φM conjunction atomic formulas o Aθo cid5 A θ cid13 C Q constant c Any formulas missing λ A contain atomic formulas speciﬁed type φL φR capture range left right argument λ A correspondingly φM constrains relationship Here assume A Q attribute case C attributes similar Note φL deﬁned range rL φL 1 open rational number interval ﬁnite number holes possible atomic formulas o A cid13 c 2 single rational value formula o A c If φL undeﬁned rL entire set rational numbers Thus number distinct elements rL rL 1 The holds number distinct elements r R r R Hence class formulas rL r R 0 1 Clearly rL r R 0 Λ A paths exist So assume rL r R 1 Consider structure φM If φM undeﬁned rL r R 0 implies Λ A paths length cid5 A φM k k consisting tuples Avalues arbitrary elements rL r R If o A o atomic formula φM Λ A unsatisﬁable Since rL r R 0 Λ A paths length k ev cid5 A φM ery k constructed tuples value A equal member rL r R If o A o cid5 A o A o cid5 A φM implied cid5 A φM λ A unsatisﬁable However o A cid13 o o A o cid5 A φM dropped The existence Λ A path length implies rL r R 1 o A o cid5 A φM analogous The rL r R Hence Λ A paths length k k The case o A o cid5 A The existence Λ A path length implies different values case o A cid13 o c1 c2 rL r R Hence Λ A paths length k k constructed taking sequence tuples value A tuple c1 odd tuple c2 cid2 Proof Theorem 3 Here construct formula true iff constant k length Rpaths bounded k By Lemma 4 formula written conjunction l formulas represents fact length R paths bounded By Lemma 5 formula written disjunction formulas represents fact length Λ A paths bounded By Lemma 6 formulas size linear size Λ A Hence resulting formula linear size F R Due construction Lemma 6 formula quantiﬁers They eliminated QE cid2 References 1 Matteo Cristani personal communication 2 NHLcom Stats httpwwwnhlcomiceplayerstatshtm 2008 3 CE Alchourron P Gardenfors D Makinson On logic theory change Partial meet contraction revision functions The Journal Symbolic Logic 50 2 1985 510530 4 WT Balke U Güntzer C Loﬁ Eliciting matters controlling skyline sizes incremental integration user preferences Proceedings 12th International Conference Database Systems Advanced Applications DASFAA Springer 2007 pp 551562 5 WT Balke U Guntzer W Siberski Exploiting indifference customization partial order skylines Proceedings Tenth International Database Engineering Applications Symposium IDEAS IEEE Computer Society Delhi India 2006 pp 8088 D Mindolin J Chomicki Artiﬁcial Intelligence 175 2011 10921121 1121 6 S Börzsönyi D Kossmann K Stocker The skyline operator Proceedings 17th International Conference Data Engineering ICDE IEEE Computer Society Washington DC USA 2001 pp 421430 7 C Boutilier R Brafman C Domshlak H Hoos D Poole CPnets tool representing reasoning conditional ceteris paribus preference statements Journal Artiﬁcial Intelligence Research JAIR 21 2004 135191 8 CY Chan HV Jagadish KL Tan AKH Tung Z Zhang Finding kdominant skylines high dimensional space Proceedings ACM SIGMOD International Conference Management Data Chicago Illinois USA 2006 pp 503514 9 L Chen P Pu Evaluating critiquingbased recommender agents Proceedings AAAI2006 AAAI Press Boston Massachusetts USA 2006 pp 157 162 10 J Chomicki Preference formulas relational queries ACM Transactions Database Systems 28 4 2003 427466 11 J Chomicki Database querying changing preferences Annals Mathematics Artiﬁcial Intelligence 50 12 2007 79109 12 J Chomicki P Godfrey J Gryz D Liang Skyline presorting Proceedings 19th International Conference Data Engineering ICDE IEEE Computer Society March 2003 pp 717719 13 T Cormen C Leiserson R Rivest C Stein Introduction Algorithms second ed The MIT Press September 2001 14 G Dong L Libkin J Su L Wong Maintaining transitive closure graphs SQL International Journal Information Technology 5 1999 4678 15 J Doyle Prospects preferences Computational Intelligence 20 2 2004 111136 16 PC Fishburn Utility Theory DecisionMaking Wiley New York 1970 17 M Freund On revision preferences rational inference processes Artiﬁcial Intelligence 152 1 2004 105137 18 SO Hansson Changes preference Theory Decision 38 1 1995 128 19 SO Hansson Revision belief sets belief bases Belief Change Handbook Defeasible Reasoning Uncertainty Management Systems vol 3 Springer Dordrecht October 1998 pp 1775 20 SO Hansson T GrüneYanoff Preferences EN Zalta Ed The Stanford Encyclopedia Philosophy 2006 The Metaphysics Research Lab Center Study Language Information Stanford University Stanford CA 943054115 httpplatostanfordedu 21 PC Kanellakis GM Kuper PZ Revesz Constraint query languages Journal Computer System Sciences 1995 2652 22 W Kießling Foundations preferences database systems Proceedings 28th International Conference Very Large Data Bases VLDB Morgan Kaufmann Hong Kong China 2002 pp 311322 23 D Mindolin J Chomicki Minimal contraction preference relations Proceedings AAAI2008 AAAI Press Chicago Illinois USA 2008 pp 492 497 24 R Ramakrishnan J Gehrke Database Management Systems McGrawHill Science August 2002