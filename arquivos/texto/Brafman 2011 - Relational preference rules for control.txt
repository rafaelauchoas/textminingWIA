Artiﬁcial Intelligence 175 2011 11801193 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Relational preference rules control Ronen I Brafman Department Computer Science BenGurion University PO Box 653 BeerSheva 84105 Israel r t c l e n f o b s t r c t Article history Received 28 February 2009 Received revised form 4 July 2010 Accepted 4 July 2010 Available online 1 December 2010 Keywords Preference models Preference rules Relational models Rulebased systems Command control automation Value functions deﬁned ﬁxed set outcomes In work preference handling AI outcomes usually set assignments ﬁxed set state variables If set variables changes new value function elicited Given applications state variables properties attributes objects world implies introduction new objects requires reelicitation preferences However user mind preferential information generic relevant given type domain regardless precise number objects kind properties Such information requires introduction relational models Following footsteps work probabilistic relational models PRMs suggest work rulebased relational language preferences This language extends regular rulebased languages leads ﬂexible approach specifying control rules autonomous systems It extends standard generalized additive value functions handle dynamic universe objects Given speciﬁc set objects speciﬁcation induces generalizedadditive value function assignments controllable attributes associated objects We prototype decision support command control centers developed illustrate study use rules 2010 Elsevier BV All rights reserved 1 Introduction Much work AI preference handling focused tools modeling preferences lay users applications related electronic commerce support online selection goods 2912104 tools prefer ence elicitation combinatorial auctions 33 recommender systems 12 Some work targets classical decisionanalysis setting usually mediated expert decision analyst supporting elicitation process detailed classical structures utility functions 1117 However work considers use preferences key tool design complex systems The idea preferences design autonomous systems intuitive Autonomous systems decisions runtime ideally choices ones maximally preferred available choices current context A preferencebased design explicitly models designers preferences different choices different contexts uses generic mechanism selecting preferred feasible choice runtime A preferencebased design provide uniform declarative modular approach design speciﬁcation certain autonomous systems It naturally amenable customization deployment providing additional information context allowing additional userspeciﬁc preferences Compared electronic commercebased applications deal users usually spend little time require A preliminary version paper appears Proceedings International Conference Knowledge Representation Reasoning 2008 9 Email address brafmancsbguacil 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201011010 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1181 interface immediately intuitive design context allows sophisticated rich methods A designer likely willing spend minutes expected spend time learning effectively specify preference On hand designers willingness adopt new tool likely depend greatly convenience intuitive appeal tool learning required use effectively expert assistance This puts design context enduser context decision analysis context motivates need formalisms address setting These formalisms provide suﬃcient expressiveness remaining intuitive Decisiontheoretic agent design new paradigm It pervades classic text 32 recent work robotics shows successful 24 A fullﬂedged decisiontheoretic approach requires maintaining probabilistic state estimate utility function The main drawback classical propositional probability distributions utility functions limit agents knowledge ﬁxed set propositions objects Thus generic knowledge certain classes objects relationships captured This limits applicability systems single ﬁxed static domain On probabilistic relational objectoriented probabilistic models provide tools allow designers generic probabilistic models diverse contexts number properties concrete object instances different On preference need model preferences pressing harder learn data subjective nature This need preference representation tools support design control context provide ability express relational preferences intuitive manner designers easily grasp motivates paper Its main contribution introduction simple relational preference formalism semantics generalizes generalized additive value functions In addition explains optimal choices computed given speciﬁcation standard techniques variable elimination problem reduced problem computing probable explanation given probabilistic relational model PRM leveraging existing algorithms models Finally concrete application domain independent serves motivate type formalism illustrate possible application Relational Preference Rules RPRs specify preferences systems act dynamic environments set objects state change constantly They combine ideas rulebased systems earlier preference formalisms leading simple rulebased syntax weights attached different choices The basic idea simple value controllable attribute specify conditions affect desirability happy value context The syntax simple cid2 Condition attributes v v cid4 cid3 list weightvalue v pairs Readers familiar formalisms CPnets 6 especially UCPnets 5 clear resemblance conditional preferenceutility tables main difference conditions expressed formalisms propositional conditions relations Indeed given concrete set objects rules induce concrete value function induced possible groundings rules Like rulebased systems preference rulesbased systems process decision control applications rulebased systems currently They retain natural form rulebased systems ﬂexible conclusions based rigid deduction optimization Preference rules bare certain resemblance soft constraint logic programs SCLP 2 semantics different They closely related generalizedadditive value functions 161 ground rule factor induced value function They viewed specifying linear value function basis functions correspond rules Similar rules suggested formalism specify behavior multiagent And course rules motivated PRMs Markov Logic similar semantically 31 We discuss relations depth Section 4 The rest paper structured follows In Section 2 discuss syntax semantics pref erence rules Section 3 discusses complexity inference rules transformed Markov Logic theories In Section 4 discuss related work In Section 5 prototype built methodol ogy described paper This shows preference rules select information display decision makers realtime command control center We conclude discussion future challenges Section 6 2 Preference rules We introduce syntax semantics preference rules follow discussion choices 21 The language We adopt objectoriented world model Objects instances certain object classes A set attributes associated instance class The value attributes simple type integers reals strings object class Objectvalued attributes capture binary relations objects principle nary relation 1182 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 expressed multiple binary relations In addition allow class attributes Attributes separated classes controllable uncontrollable Example 1 Throughout paper refer ﬁreﬁghters domain instance type command control application motivated work In domain interested supporting decision making command control center emergency services large city Our objects correspond objects setting Uncontrollable variables correspond state variables location personal ﬁres controllable variables usually correspond information sources turn Some classes ﬁreman ﬁreengine ﬁre Fireman attributes location rank role class attributes basestation Imagine addition ﬁremen equipped sensors camera CO2level temperature Fire attributes location intensity Fireengine attributes location driver ladder The ﬁremens sensor attributes driver ladder attributes objects The camera object attributes display determine video stream displayed command center Both attributes examples controllable attributes We imagine application ﬁreengines driver attribute controllable Our goal deﬁne generic value function different instances domain type Technically specify function given set objects returns value function set possible assignments relevant attributes objects This preference rules following form rulebody rulehead cid4 cid3 v 1 w 1 vk wk Intuitively rulehead speciﬁes controllable attribute rule speciﬁes desirability w s weights different assignments values v s context speciﬁed rulebody Thus speciﬁcation process requires designer contemplate different contexts inﬂuence desirability different assignments possible values controllable variable More precisely rulebody following form class1x1 classkxk α1 αm αi form xipath REL value xipathi REL x jpath j Each xi appear earlier class jxi ele ment By path mean possibly attribute chain xmotherprofession REL denotes relational operator cid4 The rulehead form x jpath x jpath denotes controllable attribute cid5v 1 w 1 vk wkcid6 list pairs ﬁrst denotes possible value attribute rulehead sec ond realvalued weight Given rule r use wr v denote weight associated assigning value v head rule r Thus akin weighted Horn rule require literals body positive Finally allow multiple controllable attributes attribute chain For example xgirlfriendsalary allowed choose ones girlfriend girlfriends salary Example 2 The following rule expresses fact viewing stream generated ﬁreman location ﬁre value 4 1 ﬁremanx ﬁre y xlocation ylocation xcameradisplay cid4 cid3 4 0 Note effect cid5 cid6 cid7 1 ﬁremanx ﬁre y xlocation ylocation xcameradisplay cid4 cid3 4 Here rule expresses preference rank ﬁreman camera high know commanders onsite seeing ﬁremanx xcameradisplay xrank cid4 cid3 high 4 However rule allowed variable head rank ﬁreman directly controllable Here rule increase value observing oxygen level ﬁremen areas high level CO2 2 ﬁremanx xCO2level high xoxygenleveldisplay cid4 cid3 10 0 Here rule includes controllable attribute body 3 ﬁremanx ﬁreengine y xlocation ylocation ycameradisplay cid4 8 0 xcameradisplay cid3 It expresses fact usually dont need camera ﬁreengines camera location RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1183 Our need relational approach preference speciﬁcation stems fact set objects known design time In fact set change lifetime application need ﬁxed preference spec iﬁcation formalism work diverse settings For instance new ﬁres occur extinguished new equipment ﬁreman added Moreover want rewrite logic time deploy new location A note notation Although use term relational rules chose use objectoriented notation pure relational In application worked designing rules described Section 5 notation intuitive This course matter taste switch different notations Example 3 Here rules 1 2 described relational syntax ﬁremanx ﬁre y colocatedx y cameradisplayonx cid3 ﬁremanx highCO2levelx oxygenleveldisplayonx cid4 cid3 true 4 cid4 true 10 cid7cid7 cid7cid7 1 2 Early work PRMs similar choice 25 later work adapted relational notation Indeed object based notation inconvenient wish specify relations involving 3 objects Binary relations X commander Y captured relational syntax commander X Y objectoriented notation Xcommander Y However ternary relation parents X Y Z capturing fact X Y parents Z X Y married hard represent directly objectoriented notation Of course kary relation represented k binary notation new representation intuitive requires introduction addi tional relation objects On hand decisiontheoretic applications natural distinction controllable uncontrollable attributes One similar distinction controllable uncontrollable lations intuitive For example natural control location ﬁreman relation colocated 22 The semantics Preference rules ﬂexibility model diverse settings basically schemas ground rules concrete set ground rules generated depends nature actual objects A set objects induces set ground rules A ground rule instance obtained assigning concrete object appropriate class rule variables Thus given rule class1x1 classkxk α1 αm α assignment objects o1 ok variables x1 xk appropriate classes oi belongs classi obtain ground rule instance form αcid7 1 αcid7 αcid7 αcid7 obtained αi replacing x j corresponding o j similarly αcid7 m Example 4 Suppose single ﬁreman Alice single ﬁreengine Fred Because ﬁre objects ground instances Rule 1 However Rules 2 3 single ground instance AliceCO2level high Aliceoxygenleveldisplay Alicelocation Fredlocation Fredcameradisplay Alicecameradisplay cid4 cid3 10 10 cid4 cid3 0 8 Now suppose add ﬁre object Fire1 Rule 1 single ground instance Alicelocation Fire1location Alicecameradisplay cid4 cid3 4 0 If add ﬁreman Bob Rules 13 ground instance Alice replaced Bob A set O o1 objects induces set AO A1 Am attribute instances respective domains These precisely attributes associated objects O Naturally objects added removed AO changes We use denote particular assignment attribute instances Here introduce important closed world assumption basically states O set objects entire set objects Thus objectvalued attributes act like functions binary relations value O This bounds size number possible interpretations A preference rule base R r1 rk ri preference rule set objects O induces value function vO possible assignments AO The basic idea straightforward set objects induces set 1184 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 ground rules induce value function follows assignment sum values associated ground rules satisﬁes More formally given assignment attributes objects evaluate conditions form α1 αm xpath cid3 cid4 v 1 w 1 vk wk Let possible assignment current objects attributes We r satisﬁed attribute assignment α1 αm satisﬁed Recall αk form xipath REL value xipath REL x jpath xi x j object instances deﬁnition satisfaction given complete assignment attributes straightforward Given ground rule r attribute assignment rules value given denoted wr deﬁned follows w r satisﬁed assigns v xpath 0 r satisﬁed value assigns xpath v 1 vk The value function vRO induced rulebase R set objects O simply function assigns possible attribute assignment sum values ground instances given vROa cid7 wr ground instances rcid7 rR When R andor O ﬁxed context shall omit subscripts simply write va Example 5 Consider rulebase R containing Rule 1 set objects O containing ﬁreman Alice Bob ﬁre Fire1 The rules ground instances 1a Alicelocation Fire1location Alicecameradisplay cid4 cid3 1b Boblocation Fire1location Bobcameradisplay 4 0 cid4 cid3 4 0 Given ground rules value assignment attributes Alice Bob Fire1 depends locations value cameradisplay attribute If ﬁreman location ﬁre display camera value 4 If ﬁremen location ﬁre value 4 display single camera 8 display Under assignments value 0 23 Discussion We consider number issues formalism gives rise The ﬁrst issue multiple rules head Imagine add rule 4 ﬁremanx ﬁreman y ﬁrez x cid4 y xlocation ylocation xlocation zlocation cid4 cid3 4 xcameradisplay ycameradisplay Intuitively rule says negative value camera location We rules 1 4 head applied situation object attribute value choices bodies rules satisﬁed Notice introduction rule preferred cameras location ﬁre For camera 4 rule 1 possible symmetric instantiations rule 4 contribute 8 Altogether value turning cameras 0 assignments turn camera value 4 Should allow multiple rules head attribute Our current formalism remains deﬁned case implies add contribution groundings rules This implies value certain attribute value spread multiple rules opposed single place A similar choice arises PRMs Bayesian Logic 21 instance allows multiple rules head Relational Bayesian Networks 19 require unique ruleheads In cases combination rules rules external determine ﬁnal value A combination rule tells combine multiple inﬂuences That infer P ab c P ab P ac For example consider rule cid5 P worriedx truecall y x true cid6 09 This rule states probability x worried given x received y 09 Thus P worrieda truecallb 09 P worrieda truecallc 09 But P worrieda truecallb callc We dont information compute value One needs explicitly state combine inﬂuences like combiningruleworried noisyor RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1185 noisyor known technique combining multiple inﬂuences Using terminology RPR opted summation single default combination rule To suppose personx neighborx callmex worried cid3 cid4 true 4 false 0 context person called value 4 people value 8 generally rule contribute 4 k assignments worried true k number neighbors called We believe summation additivity makes sense case value functions It assume form independence cases natural For example I longer distinctions 3 calls neighbors Note property able capture fact cameras displays location good single cameras display In example achieved negative weights But use negative weights necessary Because model additive tempted think maintain relative order alternative assignments add constant c weight associated possible value attribute head And c suﬃciently large weights nonnegative This true controllable value appears body rule In case number times particular rule ﬁred ﬁxed assignment uncontrollable variables Thus value assignments controllable variables increases constant number times rule ﬁred times c However controllable attribute appears body rule rule ﬁred different number times different assignment controllable variables Thus change value different assignments constant ordering preserved Example 6 Consider following rules class1o oa true ob class1o oa cid4 true 4 false 0 cid3 cid3 cid4 true 0 false 4 Here value associated assignment assuming single object T F b T b F 4 8 0 0 Now suppose add constant 10 ﬁrst rule obtaining cid3 cid4 True 6 false 10 class1o oa True ob The new values T 2 6 F 0 0 b T b F clearly order valuations differently This sensitivity actual weight values weak point formalism However note property Markov Logic 31 appears popular formalism specifying PRMs Other PRMs property pay conceptual complexity need deﬁne explicit combination rules One possible way address problem learning algorithms adjust rule weights based experience This existing reinforcement learning algorithms positive preliminary results appear 35 Such algorithms allow reduced sensitivity exact weight values elicitation process simpler 3 Finding optimal assignment Each set objects number attributes controllable rest The uncontrollable attributes viewed specifying context operate Our main computational task given rulebase R set objects O ﬁnd assignment controllable attributes optimal Sometimes application choice constrained More formally let U C denote uncontrollable controllable attributes set 1186 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 attributes A induced O R respectively Let C Π XC Dom X denote set feasible allowed assignment C1 Let u c denote assignments set attributes U C respectively Our goal compute max cC vROu c u denotes current context uncontrollable attributes That want ﬁnd assignment controllable attributes maximizes v subject constraints C assignment u There number standard methods solving problem These include variants stochastic local search systematic branch bound search We discuss speciﬁcs methods known paper attempt empirically evaluate different alternatives Instead discuss methods The ﬁrst variable elimination standard method helpful establishing complexity results The second reduction problem related optimization problem PRMs The main advantage transformation models number lifted inference techniques exist ones require grounding rules immediately beneﬁt new techniques area We note practice especially application described Section 5 standard methods better implemented In application optimization problem needs resolved value uncontrollable variables assignment u changes solution close previous solution preferred In case stochastic local search starting search current solution bias search vicinity In case branch bound current solution provide good initial lower bound 31 Grounding ﬁltering To determine preferred assignment given context consisting assignment uncontrollable variables standard algorithms require ﬁrst ground ﬁlter rules2 This step generates set applicable ground rule instances ﬁlters according values uncontrollable variables Let r rule form class1x1 classkxk α1 αm α cid4 cid3 v 1 w 1 vk wk Let O current set objects uncontrollable values ﬁxed 1 The rule grounding ﬁltering process considers possible assignments x1 xk classes class1 classk respectively 2 It replaces occurrence attribute value given current assignment 3 It evaluates condition αi depends value uncontrollable attributes If condition evaluates false grounding ruled b Conditions evaluate true dropped The result ﬁltering stage set ground rules involving controllable attributes form ψ1 ψl ψ cid4 cid3 v 1 w 1 vk wk cid7 ψi form opath r opath o denote attribute path starting ending controllable attribute r value simple type ψ form opath w o o weight associated value v identical weight v original rule We actually seen examples process Example 4 o o cid7 O opath o cid7path cid7 cid7path cid7 32 Complexity grounded optimization Finding optimal assignment given set ground preference rules objects NPhard unconstrained problem obviously constrained problem Theorem 1 Deciding assignment controllable attributes optimal given set grounded ﬁltered preference rules NPhard Proof This result follows immediately classical results complexity maxHornsat problem deciding truth assignment maximal respect set weighted Horn clauses NPhard 20 To 1 Here agnostic language specifying constraints choice affect complexity constrained optimization task 2 The exception lifted inference algorithms exist PRMs RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1187 note weighted Hornrule form body head v w equivalent ground rule form body headcid5v wcid6 Thus decision problem hard maxHornsat We note given certain properties constraint graph induced rules problem solved polynomial time discuss It instructive proof reduction problem deciding assignment probable explanation MPE Bayesian network This highlights important relation inference model probabilistic models MPE known NPhard 36 Given Bayesnet variables X1 Xn deﬁne single class class attributes X1 Xn rule entry CPT variable We ignore object single rule That variable Xi possible assignment pai parents Bayesnet We add rule cid3cid8 cid5 pai Xi xi exp Prxipai cid6 cid9 cid10cid4 cid9 xi DXi The size set rules linear size Bayesnet Recalling joint probability Bayesnet product local conditional probabilities value formalism obtained adding weights applicable rules cid7 cid11 arg max w arg max expw conclude reduction obviously polynomial This transformation computing MPE ﬁnding preferred assignment generalizedadditive value function known Here multiplicative factoring probabilistic models leads additive factoring logarithm viewed generalized additive value function cid2 Of course original problem given set relational rules grounded ﬁltered rules The grounded ﬁltered set rules exponential maximal number variables appearing rule linear number rules 33 Variable elimination A set ground rules deﬁnes value function However value function special structure It sum sub functions corresponding single rule Each rule usually refers small number attributes This form value function v X v j Z j Z j X known generalized additive value function GAI short cid12 For example consider following ground rule instance Alicelocation Fire1location Alicecameradisplay cid4 cid3 4 0 This deﬁnes factor variables Alicelocation Fire1location Alicecameradisplay This factor assigns value 4 cases Alicelocation Fire1location Alicecameradisplay 0 Variable elimination generic technique things compute maximizing assignment The basic idea push max operator forward possible based following equivalence cid13 cid14 f 1 fk fk1 xn f j xn max x1 max xn cid15 max x1 max xn1 f 1 fk max xn cid13 fk1 xn f j xn cid14cid16 f 1 fk functions depend xn fk1 f j functions depend xn Deﬁning gnx1 xn1 max xn cid13 cid14 fk1 xn f j xn new maximization problem xn eliminated max x1 max xn cid13 cid14 f 1 fk fk1 xn f j xn max x1 max xn1 cid13 cid14 f 1 fk gn For information know technique 15 In worst case complexity technique exponential treewidth appropriate graph The graph question known cost network 15 contains node ground attribute edge ground attributes appear rule Its treewidth smaller number nodes For example imagine relational rule contains reference single object instance single variable different rules refer different object classes In case treewidth graph bounded maximal number attributes rule3 3 Of course obvious case problem simpler The point variable elimination beneﬁt types loose coupling variables automatically 1188 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 34 Reduction PRMs Earlier noted similarities model PRMs Now reduce problem op timal action choice RPRs problem computing probable explanation MPE Markov Logic Network 31 popular current PRMs A Markov Logic network consists set weighted ﬁrstorder formulas Together set constants deﬁnes Markov network node ground atom feature ground formula The weight associated feature generally realvalued function value nodes deﬁned Boolean function relevant atoms weight ﬁrstorder formula ground formula originates The probability distribution possible worlds x speciﬁed MLN constants P x 1Z exp w inix w weight ith formula nix number true groundings x Z normalizing constant Thus basically method assigning weights ﬁrstorder models domain restricted given set constants cid12 Suppose given preference rule form cid3 body head cid4 v 1 w 1 vk wk We transform follows set weighted formulas MLNs body head v w For example ﬁremanx ﬁre y xlocation ylocation xcameradisplay cid3 cid4 4 0 transformed ﬁremanx ﬁre y xlocation ylocation xcameradisplay 4 ﬁremanx ﬁre y xlocation ylocation xcameradisplay 0 To ﬁnd optimal assignment instantiate variables denoting uncontrollable attributes left control lable variables Now compute mostprobable explanation assignment highest probability arg max x X P x arg max x X 1 Z exp w inix arg max cid18 cid17cid7 cid7 w inix The essentially value function associated original preference rules Using reduction beneﬁt improvement algorithms solving MPE MLNs Until recently inference probabilistic models ﬁrst grounding model applying propositional reasoning tech niques Recent work come lifted algorithms probabilistic reasoning For MPE use ﬁrstorder variable elimination 2814 The key idea method computation grounding lifted rules formulas In ﬁrstorder variable elimination instead eliminating variable time regular variable elimination eliminates collection related variables Where variables related different instantiations predicate tallalice tallbob This method elegant complex conceptually computationally And clear eﬃcient practice grounded methods Still theoretically scale better number objects 4 Related work There diverse formalisms specifying preferences realvalued functions structured discrete domains domains described multiple discrete variable relational versions Here discuss ﬁnd relevant RPRs Mathematically probability distribution value function special properties Hence surprising preference rules formalism inspired PRMs Indeed similarity utility functions capture preferences probability functions Probability distributions natural multiplicative decomposition chain rule value utility functions additive decomposition like log probabilities Because log exp monotonic functions values maximize respect p maximize wrt logp Of course important differences notion conditional distribution plays important multiplicative decompo sition chain rule apparent semantics case value function Still computational questions preference rules PRMs similar One earliest attempts combine ﬁrstorder logic probabilities utilities Pooles independent choice logic ICL 27 This general formalism model games different agents different valuations state Our formalism geared systems multiple controllable variables viewed agent But cooperative single value associated assignment In ICL utility state described clauses form utilityagent value condition Multiple clauses form agent need RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1189 consistent values conditions complete specify values condition Preference rules hand additive structure applies multiple groundings multiple rules head Instead ICL rules partition space possible worldsassignments builtin additive semantics We typically difference preference rules similar formalisms SCLP Relational MDPs described RPRs resemble soft constraint logic programs SCLP 23 SCLPs constraint logic programs standard constraints replaced softconstraints A program set Horn clauses head atom body collection atoms value set values semiring An interpretation maps ground atom value satisﬁes clause value head greater equal value body It model program satisﬁes clauses As logic programs notion minimal model associated SCLP A minimal model obtained intersecting models program Here intersection implies taking minimal value assigned atom minimality deﬁned wrt semiring Finally goal simply collection atoms Intuitively minimal model correspond optimizing value function However differences semantics nontrivial map formalisms The important aspect additivity In preference rules aspects additivity First value model sum weights associated ground instances rules In SCLP value nonground formula supremum values associated ground instances Similarly deal combinations multiple rules head semantics SCLPs maximization sum Another difference values associated clause clauses body A popular model sequential decisions Markov Decision Process MDP 30 Relational variants MDPs introduced 7 A relational MDP fundamental model RPRs sense describes lying dynamics world RPRs devised primarily contexts need ability specify underlying world model For example application presented paper hardly likely knowl edge specify good world model describing dynamics rescue emergency services However domain experts good intuitions behavior good behavior bad seek capture convenient manner In MDPs term value function associated speciﬁc policy maps possible states value given policy An optimal value function maps state value given optimal policy In 734 reward value functions relational MDPs deﬁned case statement That partitioning set possible states according certain properties associating value These properties described sentences situation calculus This simpler explicit notation preference rules The describes explicit partition state space implicit contains additive structure cyclical references require counting number ground instances rules This expected value function MDP speciﬁes value states according optimal policy Preference rules hand viewed specifying value possible policies contain explicit reference choice actioncontrollable variable Recently 39 introduced ﬁrstorder decision diagrams FODD compact tool representing relational value functions FODDs like BDDs ADDs A FODD labeled rooted directed acyclic graph nonleaf node exactly children The outgoing edges marked values true false Each nonleaf node labeled atom P t1 tn equality t1 t2 ti variable constant Leaves labeled numerical values An FODD speciﬁcation value function states partitions set states compact manner case statement A FODD specify value function set possible states policies adding conditions pertain action values However utility tool specifying value functions clear intuitive format users specify directly clear gives computational advantages optimization One popular approach obtaining approximately optimal policies large MDPs linear valuefunction approxima w ϕi tion 388 Given set basis functions ϕi deﬁned states vector weights sought good approximation true value function Two key issues computing learning good weight vectors gen erating good basis functions Our formalism viewed deﬁning linearvalue function possible assignments basis functions features correspond rules cid12 cid7 cid7 j ci jφi ja Here φi ja number times ith rule ﬁred head rule assigned jth value 0 ci j weight associated jth value rule Although assume underlying model MDP believe use reinforcement learning algorithms improve rule weights rule bodies Successful application ideas imply designers need specify reasonable rules reasonable weights learning algorithms automatically improve online Encouraging initial results appear 35 We explained early view preference rules good candidate prescribing control For applications interesting multiple interdependent controllable variables This case 1190 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 control multiagent Each variable viewed describing choice action agent role agent takes particular context The value jointstrategy described set rules This idea explored 18 Rules form cid5ρ c vcid6 c condition set variables context agent variables v real value ρ function assigns assignments c holds value v The semantics additive value function deﬁned sum contributions rules This framework deﬁned abstractly conditions formulated propositional logic predicate calculus Indeed 22 applies ideas robot soccer domain rules conjunctions conditions expressed predicates free variables Thus like relational rules schemas applied contexts different numbers soccer playing agents The optimal assignment computed variable elimination control 5 Preference rules command control display Our work preference rules arose desire solve concrete problem current techniques inadequate We explain problem domain prototype built test ideas 51 Problem domain Consider command control room realtime operations This control room ﬁredepartment large city control room handling largescale emergencies earthquakes ﬂooding terrorist attacks control center complex missions NASA shuttle missions army command center monitoring center ﬁrm receives realtime data requires attention decision maker To concrete let focus ﬁrst setting ﬁre department needs deal ﬁre rescue operations disasters Imagine futuristic scenario ﬁreman camera helmet cameras located places city case today London cities heat smoke hazardous material sensors located ﬁremen places buildings In realistic scenario talking thousands possible information streams decision maker control room access Moreover information accessible querying databases street maps building plans building material speciﬁcations resource status ﬁremen ﬁre trucks special equipment Analysis tools analyze aspects current situation statistical tests risk analysis simulations available Clearly given decision maker handle volume information An ideal intelligent application able fuse information unlikely happen foreseeable future While work carried sensor fusion 23 current technology limited type scope sensory data fused We seek modest solution challenging appears feasible enormous impact quality decisions We seek tool automatically control information sources displayed decision maker based current state world4 Consider characteristics The set object types classes known ahead time Some instances known personnel ﬁre department change dynamically new ﬁre modeled new object ﬁre class The attribute values concrete object instances change situation As state changes attribute value change instances added removed display choices quickly matter seconds Finally information displayed modes instance video shown different sizes different places user screen Analysis results interesting items information shown directly icons require click Attributes represent display choices video stream displayed correspond trollable attributes All attributes uncontrollable We seek speciﬁcation describes preferred values controllable variables function values uncontrollable variables controllable variables For example I want video stream camera ﬁreman ﬁre scene depends ﬁremans status rank cameras shown In situations camera scene cameras preferred Abstracting away bit application assign value number controllable variables The desirability assignment controllable variable depends state uncontrollable variables value assigned controllable variables This set variables changes dynamically set objects changes In addition value choices constrained resource limitations screen size user attention Using simple rulebased determine value controllable variables natural unlikely feasible resource constraints introduce strong interdependence A value function hand provides context dependence ways First explicitly allowing condition value choices external parameters Second implicitly ideas constrained optimization seek optimal feasible solution 4 We address diﬃcult practical question state world maintained In situations assume human operators update database 911 operators In state automatically updated corporate settings online transactions contain relevant information RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1191 52 System prototype We built able select incoming video feeds present selected images screen Our conﬁgured video ﬁles concurrently number selected depending current state The selects video streams users screen In addition run queries background presents icons users screen provide quick access query result The choice query run contextdependent The function live simulated mode All needs list available video streams event update feed updates state monitored environment preference rules base Simulation mode works way event ﬁle stores events time occurrence ﬁles storing video streams place live feeds As far concerned difference expects URLs information sources feed state updates As access real command control center emulated video feeds videos captured game unreal tournament5 In modes game teams play game capture ﬂag Each team protect ﬂag attempting capture ﬂag opponents The developers played game recorded environment game The recorded video streams correspond players constantly monitor actions player ﬂags These videos stored database test simulation mode One run viewed httpwwwyoutubecomwatchvUP37mlxWToA This narrated demo self explanatory It shows dis play choices change events occur explains rationale The ﬂexible tested capturetheﬂag domain It implemented JAVA Documentation available httpwwwcsbguacilgioraschdocumentshtm sources author The supports stochastic local search branch bound algorithms The demo referred uses stochastic local search objects containing 25 sensors act uncontrollable variables 6 controllable variables corresponding cameras attached agents ﬂags The number free variables rules 3 branch bound problem small domain Our initial prototype issues need addressed realistic Our main goal demonstrate process selecting appropriate cameras function current context Much attention user interface issues required On hand like transitions display smooth minimal On hand changes display grab users attention desirable The principled way addressing change objective function reﬂect undesirability particular changes consecutive conﬁgurations In certain cases modeled additional preference rules example cid7 xcameradisplay ﬁremanx xcameradisplay cid7 Here x refers previous value attribute x basically penalizing change value Of course smoothness constraints naturally captured way general idea amending value function smoothness preferences address diverse preferences existing optimization methods optimize new function reduction PRMs work Another important HCI issue provide user right balance manual control automated change display cid3 cid4 0 1 A fundamental technical issue reliance source feeds new events reassigns uncontrollable variables In real systems usually requires advanced image processing techniques Moreover expect important uncontrollable variables perfectly observable requiring deal uncertainty context Handling requires richer model ideally probabilistic ability compute maximize expected value assignments controllable variables 6 Summary future work We presented new ﬂexible approach preference speciﬁcation based RPRs number advantages First intuitive Second ﬂexible regular rules rigid choices sensitive context choices augmented external constraints retaining semantics Preference rules speciﬁed generic given knowledge set classes set objects induce generalized additive value function Thus control dynamic systems state number objects changes speciﬁcation require complete information classes basic components This work provides rich set questions future work The ﬁrst question adequacy proposed model In modeling command control setting run number issues suggest revisions Consider example having camera certain arena valuable additional cameras counterproductive To capture gave positive value camera negative value pair 5 httpwwwunrealtournament3com 1192 RI Brafman Artiﬁcial Intelligence 175 2011 11801193 cameras Is direct way capturing single rule possibly referring number objects satisfying rule Similarly domain currently working preference rules preferred behavior agents game Some state variables agents integervalued health level ammunition level In domain natural weight associated assignment function integervalued variables constant Returning current formalism important practical challenge providing lifted inference The number ground rules quickly grows number objects increases exponentially number free variables rule Lifted inference methods able perform computation offline support methods work original set rules generating ground rules As showed map maximization preference rules suitable maximization problem PRMs utilizing results obtained area This raises issue integrate relational preference probability models provide decisiontheoretic model While speciﬁcation simple relational probabilistic utility models main question eﬃcient inference There different cases The simpler case preferences deﬁned controllable variables current formalism value uncontrollable variables unknown In case assuming probability distribution possible values uncontrollables need compute expected value assignments controllable variables In case compute probability uncontrollables body rule scale value accordingly perform optimization usual Note suitable PRM grounding rules A complex case preferences uncontrollable variables value inﬂuenced stochastically assignment controllable variables For example soccer game care ﬁnal score actions kicking passing inherent value They inﬂuence likelihood win In case probabilities valuesutilities tightly coupled solving maximization problem especially grounding rules real challenge An interesting theoretical question tradeoff succinctness formalism behavioral speciﬁcation size speciﬁcation complexity computing optimal behavior ease elicitation While hard measure empirical evaluation relationship criteria staple research knowledge representation The work appears relevant question knowledge compilation In particular Darwiche Marquis 13 consider problem compiling propositional weighted bases Weighted bases knowledge bases based penalty logic 26 They consist pairs form cid5φ wcid6 φ propositional formula w integervalued weight The weight thought cost violating formula The value complete assignment possible world sum weights associated formulas satisﬁed Hence optimal assignment minimizes value The propositional analogue preference rules equivalent weighted base clauses The key question theory knowledge compilation knowledge base form compiled knowledge base form offline queries answered eﬃciently respect new knowledge base Eﬃciency deﬁned respect size original knowledge base compiling exponentially larger knowledge base useful approach To deﬁne problem precisely needs explicit form knowledgebase static queries The idea worthwhile spend effort compiling static order answer queries quickly online Existing results weighted knowledge bases cover case queries ask particular possible world minimal certain formula implied minimal possible worlds The knowledgebase static possible assignment formula dynamic Our problem somewhat different First optimization problem decision problem seek optimal assignment opposed deciding particular assignment optimal Second dynamic case assignment uncontrollable variables This means set active clauses changes time methods described 13 apply In fact hard build set rules polynomial number uncontrollable variables induces exponentially different sets active rules6 Perhaps relevant discussion work 37 That work viewed exploring variants penalty logic differ type propositional formulas allow The authors present large number variants compare succinctness expressivity complexity It considers right complexity question perspective ﬁnding assignment maximal utility Their results provide important piece puzzle However ultimately like better understanding question wider scope Formally focusing Boolean variables propositional case speciﬁcation language deﬁnes mapping 0 1n 0 1m n number uncontrollable variables m number controllable variables This function returns optimal assignment controllables given certain assignment uncontrollables Thus explore alternative ways representing functions diﬃculty transforming large output respect input quickly compute function given certain representation Note formally function viewed set m Boolean functions central structures science 6 For value uncontrollable variable speciﬁc rule controllable ones RI Brafman Artiﬁcial Intelligence 175 2011 11801193 1193 But m Boolean functions suitable target representation different input representation intentionally mixes different controllable variables rule contains single controllable variable degenerate interesting case Acknowledgements I grateful Manfred Jaeger help relating work PRMs Liron Himi Ofer Schonberger Yuval Shahar Giora Shcherbakov development Yagil Engel comments earlier drafts This work supported ISF grant 110107 Paul Ivanier Center Robotics Research Production Management Lynn William Frankel Center Computer Science COST action IC0602 References 1 F Bacchus A Grove Graphical models preference utility Proc Eleventh Conference Uncertainty Artiﬁcial Intelligence UAI95 1995 pp 310 2 S Bistarelli Semirings Soft Constraint Solving Programming SpringerVerlag 2004 Chapter 6 3 S Bistarelli U Montanari F Rossi Semiringbased constraint logic programming Proc Fifteenth IJCAI IJCAI97 1997 pp 352357 4 J Blythe Visual exploration incremental utility elicitation Proc Eighteenth AAAI AAAI02 2002 pp 526532 5 C Boutilier F Bacchus RI Brafman UCPnetworks A directed graphical representation conditional utilities Proc Seventeenth Conference Uncertainty Artiﬁcial Intelligence UAI01 2001 pp 5664 6 C Boutilier R Brafman C Domshlak H Hoos D Poole CPnets A tool representing reasoning conditional ceteris paribus preference statements Journal Artiﬁcial Intelligence Research 21 2004 135191 7 C Boutilier R Reiter B Price Symbolic dynamic programming ﬁrstorder MDPs Proc Seventeenth IJCAI IJCAI01 2001 8 SJ Bradtke AG Barto Linear leastsquares algorithms temporal difference learning Machine Learning 22 13 1996 3357 9 RI Brafman Relational preference rules control Proc Eleventh International Conference Knowledge Representation Reasoning KR08 2008 pp 552559 10 RI Brafman C Domshlak T Kogan Compact valuefunction representations qualitative preferences Proc Twentieth Conference Uncertainty Artiﬁcial Intelligence UAI04 2004 pp 5158 11 D Braziunas C Boutilier Local utility elicitation GAI models Proc Twenty First Conference Uncertainty Artiﬁcial Intelligence UAI05 2005 pp 4249 12 L Chen P Pu Preferencebased organization interface Aiding user critiques recommender systems Proc Eleventh International Conference User Modeling UM07 2007 13 A Darwiche P Marquis Compiling propositional weighted bases Artiﬁcial Intelligence 157 2004 81113 14 R Salvo Braz E Amir D Roth Lifted ﬁrstorder probabilistic inference Proc Nineteenth IJCAI IJCAI05 2005 pp 13191325 15 R Dechter Constraint Processing Morgan Kaufmann 2003 16 PC Fishburn Utility Theory Decision Making John Wiley Sons 1970 17 C Gonzales P Perny GAI networks utility elicitation Proc International Conference Knowledge Representation Reasoning KR04 2004 pp 224234 18 C Guestrin S Venkataraman D Koller Contextspeciﬁc multiagent coordination planning factored MDPs Proc Eighteenth AAAI AAAI02 2002 pp 253259 19 M Jaeger Relational Bayesian networks Proc Thirteenth Conference Uncertainty Artiﬁcial Intelligence UAI97 1997 pp 266273 20 B Jaumard B Simeone On complexity maximum satisﬁability problem horn formulas Information Processing Letters 26 1 1987 14 21 K Kersting L De Raedt Bayesian logic programming Theory tool An Introduction Statistical Relational Learning MIT Press 2007 22 JR Kok MTJ Spaan N Vlassis Multirobot decision making coordination graphs Proc Eleventh ICAR ICAR03 2003 23 HB Mitchell MultiSensor Fusion An Introduction Springer 2007 24 M Montemerlo S Thrun H Dahlkamp D Stavens S Strohband Winning DARPA grand challenge AI robot Proc TwentyFirst AAAI AAAI06 2006 25 A Pfeffer D Koller B Milch KT Takusagawa SPOOK A probabilistic objectoriented knowledge representation Proc Fifteenth Conference Uncertainty Artiﬁcial Intelligence UAI99 1999 pp 541550 26 G Pinkas Reasoning nonmonotonicity learning connectionist networks capture propositional knowledge Artiﬁcial Intelligence 77 1995 203247 27 D Poole The independent choice logic modeling multiple agents uncertainty Artiﬁcial Intelligence 94 12 1997 756 28 D Poole Firstorder probabilistic inference Proc Eighteenth IJCAI IJCAI03 2003 pp 985991 29 P Pu B Faltings M Torrens Userinvolved preference elicitation IJCAI03 Workshop Conﬁguration 2003 30 M Puterman Markov Decision Processes Wiley New York 1994 31 M Richardson P Domingos Markov logic networks Machine Learning 62 2006 107136 32 S Russell P Norvig Artiﬁcial Intelligence A Modern Approach Prentice Hall 1995 33 T Sandholm C Boutilier Preference elicitation combinatorial auctions Y Shoham P Cramton R Steinberg Eds Combinatorial Auctions MIT Press 2006 34 S Sanner C Boutilier Practical solution techniques ﬁrstorder MDPs Artiﬁcial Intelligence 173 56 2009 748788 35 Y Shechter Control cooperative mas preference rules Masters thesis Department Computer Science BenGurion University 2010 press 36 SE Shimony Finding MAPs belief networks NPhard Artiﬁcial Intelligence 68 2 August 1994 399410 37 J Uckelman Y Chevaleyre U Endriss J Lang Representing utility functions weighted goals Mathematical Logic Quarterly 55 4 2009 341361 38 B Van Roy JN Tsitsiklis Stable linear approximations dynamic programming stochastic control problems local transitions Proc NIPS NIPS05 1995 pp 10451051 39 C Wang S Joshi R Khardon First order decision diagrams relational MDPs Journal Artiﬁcial Intelligence Research 31 1 2008 431472