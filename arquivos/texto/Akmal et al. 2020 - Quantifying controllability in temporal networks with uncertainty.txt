Artiﬁcial Intelligence 289 2020 103384 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Quantifying controllability temporal networks uncertainty Shyan Akmal ab1 Savana Ammons ac1 Hemeng Li ad1 Michael Gao ae1 Lindsay Popowski James C Boerkoel Jr Harvey Mudd College Claremont CA USA b Massachusetts Institute Technology Cambridge MA USA c University Illinois UrbanaChampaign Champaign IL USA d Cornell University Ithaca NY USA e Stanford University Stanford CA USA r t c l e n f o b s t r c t Article history Received 1 November 2019 Received revised form 16 July 2020 Accepted 7 September 2020 Available online 23 September 2020 Keywords Scheduling Temporal planning Controllability Probabilistic simple temporal networks Simple temporal networks uncertainty Controllability Simple Temporal Networks Uncertainty STNUs far limited levels strong dynamic weak Because currently systematic way agent assess far controllable uncontrollable STNU We provide new insights inspired geometric interpretation STNUs introduce degrees strong dynamic controllability continuous metrics measure far network controllable We utilize metrics approximate probabilities STNU dispatched successfully oﬄine online respectively We introduce new methods predicting degrees strong dynamic controllability uncontrollable networks We generalize metrics deﬁning likelihood controllability controllability measure applies Probabilistic Simple Temporal Networks PSTNs Finally empirically demonstrate metrics good predictors actual dispatch success rate STNUs PSTNs 2020 The Authors Published Elsevier BV This open access article CC BYNCND license httpcreativecommonsorglicensesbyncnd40 1 Introduction When tasked making schedule planner ideally capability pick exact times event occur In practice autonomous agents rarely control events affecting plans For example imagine chemist named Dr V running small experiment She ﬁrst combines 20 mL chemical W chemical X beaker The exact time takes chemicals react uncertain Dr V knows thirtyone minutes reaction ﬁnish unfortunately known reaction rates chemicals W X Within minutes reaction completing add 20 mL chemical Y mixture This paper invited revision paper 1 ﬁrst appeared 2019 International Conference Automated Planning Scheduling ICAPS19 Corresponding author lpopowskihmcedu L Popowski boerkoelhmcedu JC Boerkoel Email addresses nayshmitedu S Akmal sammonshmcedu S Ammons hl2359cornelledu H Li mgaohmcedu M Gao URL httpswwwheatlaborg JC Boerkoel 1 Work paper primarily completed undergraduate student Harvey Mudd College httpsdoiorg101016jartint2020103384 00043702 2020 The Authors Published Elsevier BV This open access article CC BYNCND license httpcreativecommonsorglicensesbyncnd40 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 1 An STNU representation Dr Vs experiment catalyzes new reaction taking thirty thirtyﬁve minutes Finally Dr V collect product precipitate Z solution minutes reaction completing To run experiment successfully Dr V needs schedule different events She able select times events addition chemical Y events completion times reactions control There multiple different strategies Dr V use deal uncertainty timing ensure experiments success The effectiveness different types scheduling strategies related scheduling problems controllability easily experiment successfully executed given inherent uncertainty Currently forms controllability discussed literature discrete tell Dr V experiment controllable tell controllable uncontrollable experiment In paper extend notion controllability introducing new continuous metrics temporal networks degrees strong dynamic controllability 1 These metrics motivated geometric interpretation STNUs pairs polytopes characterize far network controllable given different types execution strategies These metrics naturally relate probability network successfully dispatched In context deﬁne optimization problems determining probability successful dispatch given onlineoﬄine plans offer approximate solutions problems Finally degrees strong dynamic controllability extend naturally effectively PSTNs 2 2 Background 21 Simple Temporal Networks A Simple Temporal Network STN tuple S cid3T Ccid4 T set temporal events ti C set binary constraints T 3 Each element C form t j ti ci j ci j R By convention event t0 T STN represents ﬁxed reference point assigned time zero Because STN n temporal events mean n timepoints addition reference event A solution STN assignment values timepoints ti satisﬁes constraints A common approach checking STN consistent solution apply shortestpath algorithm weighted directed graph representation STN called distance graph If negative cycle discovered shortestpath process implies STN inconsistent solutions exist resulting distance graph representation space solutions 22 Simple Temporal Networks Uncertainty A Simple Temporal Network Uncertainty STNU STN explicitly models uncertainty 4 In STNU set events T partitioned set controllable events T c set uncontrollable events T u An agent allowed schedule speciﬁc times events T c times events T u determined Nature force external agent For t j T u exists unique ti T c forming contingent constraint form t j ti We use Cc denote set contingent constraints Cr denote remaining requirement constraints events T Then STNU deﬁned quadruple cid3T c T u Cr Cccid4 satisfying aforementioned properties cid2 j u j cid3 cid2 In STNU decision assignment time values controllable events A realization selection values contingent edges relative start times uncontrollable events assigned Nature The set possible realizations forms realization space cid3 STNU If decision violate constraints pairs controllable events decision admissible A decision realization determines schedule σ network If σ satisﬁes constraints STNU σ valid schedule For example Dr Vs experiment introduction modeled STNU There ﬁve events beginning ﬁrst reaction conclusion initial reaction addition chemical Y completion subsequent reaction extraction precipitate If measure time relative experiments start refer events ti ranges 0 4 respectively Events t0 t2 t4 Dr Vs control events t1 t3 uncontrollable This STNU representation experiment depicted Fig 1 Events network drawn nodes Requirement contingent edges drawn straight curvy arrows respectively The edges labeled intervals indicating lower upper bounds STNUs constraints 2 S Akmal S Ammons H Li et al 23 Controllability Artiﬁcial Intelligence 289 2020 103384 An STNU controllable agent reasonable way working uncertainty network schedule events Prior research focused primarily detecting types controllability strong dynamic weak We focus strong dynamic controllability important dispatch We omit weak controllability discussion relevant STNU execution 4 Henceforth paper use term uncontrollable STNU refer STNUs strongly controllable dynamically controllable An STNU strongly controllable single ﬁxed decision agent guarantees success regardless Nature behaves More formally network strongly controllable exists decision δ ω cid3 schedule determined δ ω valid 4 We decision strong decision Using example introduction check Dr Vs experiment strongly controllable ﬁxed decision guarantee experiments success takes place An STNU dynamically controllable agent decisions realtime guarantee success This means exists strategy agent follow ﬁnd valid schedule picking times controllable events execution based values taken past events For example Dr Vs experiment dynamically controllable wait reaction ﬁnishes proceed step immediately This corresponds scheduling t2 t1 t4 t3 involves reacting dynamically previously observed timepoints This strategy guarantees experiments success We formally deﬁne dynamic controllability following treatment 5 The deﬁnition somewhat technical necessary precisely capture intuitions previous paragraph The actions agent makes dispatch describes execution strategy mapping cid7 realizations decisions We strategy successful ω cid3 decision cid7ω realization ω produces valid schedule σ σ ω As deﬁned far strategy cid7 omniscient sense pick schedule having access perfect information realizations occur To model realworld applications decisions cid7 makes limited depend time values events taken place To end arbitrary time value τ Let σ τ denote set realized values contingent edges uncontrollable event assigned value strictly τ In words σ τ collection realized values ω agent able observe time τ We let σ τ denote set controllable events executed time τ Then strategy cid7 called dynamic realizations ω1 ω2 time value τ σ ω1τ σ ω2τ necessarily σ ω1τ σ ω2τ This deﬁnition captures principle dynamic strategy allowed decisions looking future Finally network dynamically controllable admits successful dynamic execution strategy A common technique testing STN dynamic controllability check conﬂicts The process largely parallels consistency check STNs operates labeled distance graph distance graph augmented labels capturing implications uncontrollable events 6 Additionally set reductions compiles implications required contingent constraints labeled distance graph A conﬂict arises semireducible negative cycle discovered reduction process 6 If conﬂict arises network dynamically controllable resulting labeled distance graph characterizes agent wait result uncontrollable event executing particular controllable events 24 Probabilistic Simple Temporal Networks A Probabilistic Simple Temporal Network PSTN augments STNU framework providing probability distributions uncertain duration contingent constraints 7 In PSTN t j T u exists unique ti forming contin gent constraint ci j C u form t j ti Xi j Xi j random variable probability density function P j For example X01 N μ1 σ 2 2 normal random variables representing t1 t3s start times relative t0 t2 Dr Vs experiment Then σ1 σ2 increase given dispatch strategy risky robust 1 X23 N μ2 σ 2 The distributions contingent constraints allow planners evaluate PSTNs terms risk probability dispatch strategy fail 810 robustness likelihood particular network executed successfully 1113 These approaches work ﬁrst approximating PSTN STNU This establishing risk parameter α determines probability mass acceptable sacriﬁce converting PSTN For contingent edge PSTN new STNU edge created bounds result sacriﬁcing proportion α probability mass The riskbased approaches 810 allow α parameter set user establish acceptable level risk proceed optimize objective functions The Static Robust Execution Algorithm SREA hand attempts ﬁnd risky α results STNU conducting binary search 3 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 2 The polytopes associated network S α uses LP attempts recover lost probability mass contingent edge possible 12 The Dynamic Robust Execution Algorithm DREA attempts SREA responsive dynamic updates reapplying SREA time new information contingent events received 12 3 Visualizing controllability An STN n temporal events determines region Rn follows Each axis corresponds value particular event constraint STN linear inequality consequently deﬁnes halfspace The solution space STN intersection halfspaces convex polytope If STN ﬁnite makespan time temporal events occur polytope bounded Points polytope correspond valid schedules STN Previous research leveraged geometric perspective determine ways assessing networks ﬂexibility 14 detect weak controllability 15 Motivated characterize STNUs geometric objects inform ideas controllability 31 Geometry STNUs An STNU n controllable events m uncontrollable events represented geometrically pair regions P P cid8 Rnm P cid8 P The larger region P set schedules including outside solution space arise admissible decision These situations agent ﬁnd The smaller region P cid8 set valid schedules situations agent desires end Comparing relative locations P P cid8 particular P sticks P cid8 gives sense diﬃcult control uncertainty present STNU This geometric perspective motivates consideration volume way measure uncertainty scheduling problems Since P cid8 shape treat STNU STN viewing contingent edge requirement edge P cid8 convex polytope Similarly P region formed inequalities ignore requirement constraints involving uncontrollable event convex polytope As example consider network S uncontrollable event t3 controllable events t1 t2 This network requirement constraints t1 t0 0 8 t2 t0 0 12 t3 t0 0 16 t1 t2 8 contingent constraint t3 t2 0 6 Using method described S determines polytopes shown Fig 2 The entire polytope P subregion lower left P cid8 32 Geometry uncertainty controllability To supplement geometric view associate polytopes independently set uncontrollable controllable events network The regions uncontrollables controllables provide information uncertainty control lability network respectively Each uncontrollable timepoint depends unique contingent edge possible values contingent edge form realization space cid3 deﬁned earlier If deﬁne U set tingent intervals STNU follows cid3 Cartesian product intervals U Geometrically cid3 mdimensional hyperrectangle The set strong decisions STNU determined polynomial time 4 This region determined tightening constraint STNU considering worstcase values contingent edges For example cid8 c involving T controllable event t cid8 replaced T t c lt constraint controllables The area determined uncontrollable t tightened inequalities strongly controllable region network This region set strong decisions polytope Rn described completely inequalities controllable events The original STNU strongly controllable exactly strongly controllable region nonempty cid8 t lt ut contingent edge original constraint T t 4 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 4 Beyond discrete categories controllability Currently controllability categorical network strongly dynamically controllable This limited categorization yield suﬃcient information applications Ideally like know likelihood success oﬄine dispatch strong controllability online dispatch dynamic controllability methods given temporal network In practice problem ﬁnding dispatch techniques maximize controllability infeasible focus ﬁnding good approximations We ﬁrst investigate idea context strong controllability Our novel degree controllability characterization provides new way understand evaluate existing dispatch approximate controllability approaches particularly context STNUs Moreover geometric framing offers new insights allow improve previous approaches working STNUs provides rigorous deﬁnition means maximally strongly controllable 41 Degree strong controllability In strongly controllable STNU execution simple The agent guarantee success simply ﬁnding committing single strong decision This makes strong controllability highly desirable property STNUs When network strongly controllable traditional approach check dynamic controllability check successful seeks dynamic execution strategy dispatch Any strategy necessarily keeps track uncontrollable events occur complicated precommitting particular decision Applications require oﬄine planning lowoverhead amenable involved strategies In cases useful understand controllable network worthwhile precommit single decision agent knows yield successful execution time For instance observed earlier Dr V ensure experiment runs successfully scheduling t2 t4 soon times t1 t3 realized This plan requires Dr V stay lab monitor reactions act soon terminate Suppose Dr V busy morning experiment She prefer pick ﬁxed times schedule t2 t4 drop lab speciﬁc times attend tasks rest experiment As noted earlier experiment strongly controllable ﬁxed strategy Dr V employ guarantee success However possible execution times t1 t3 equally likely turns setting t2 30 t4 65 Dr V guarantee experiment succeed 90 time admissible decision ﬁrst reaction thirty minutes This level controllability high success guaranteed Dr V willing employ simpler oﬄine strategy Deﬁnition Let S STNU realization space cid3 For given subset cid3cid8 required constraints S realization space cid3cid8 continuous 0dimensional metric value 0 1 deﬁned maximum possible value denote network Then Degree Strong Controllability DSC S cid3 let S cid8 cid4 cid5 cid3cid8 Vol Vol cid3 taken axisparallel hyperrectangles cid3cid8 cid3 S region cid8 strongly controllable Here Vol measures volume STNUs strong controllability agnostic underlying uncertainty distributed Similarly degree strong controllability measures maximum proportion realization space execution strategy ac count completely agnostic uncertainty distributed Networks lower degrees controllable networks degrees closer 1 ﬁxed decision controllable For example strongly controllable STNU DSC equal 1 We demonstrate empirical evaluation uncertainty contingent edges uniformly distributed DSC strong predictor likelihood success oﬄine dispatch Although general uncertainty encoded STNU imply quantiﬁable risk applications assuming uniform prior common reasonable sound choice absence prior information 16 Thus remainder section assume times bounds contingent edge STNU equally likely capturing volume corresponds directly probability success However assumptions distribution uncertainty DSC remains important measure controllability given STNU albeit expect weaker predictor likelihood success In Section 6 adapt deﬁnition case explicit information distribution uncertain events In deﬁnition DSC cid3cid8 necessarily subinterval Ss contingent intervals cid3cid8 collection intervals U cid8 hyperrectangle This means Cartesian product m intervals subset cid3 We denote viceversa observe collection uniquely determines cid3cid8 The DSC STNU lower bound maximum probability obtaining valid schedule given network committing admissible decision events executed This exists decision 5 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 paired realization cid3cid8 s volume cid3s volume calculating proportion time random realization yields valid schedule paired admissible decision subset cid3 create valid schedule So comparing cid3cid8 In following subsection introduce eﬃcient method approximates DSC dealing opti mization problem ﬁnds ﬁxed schedule guaranteed succeed probability greater equal estimated DSC value addressing corresponding decision problem 42 Estimating DSC To compute DSC suﬃces ﬁnd cid3cid8 strongly controllable The strong controllability S veriﬁed checking set linear constraints satisﬁed 4 However solving general problem diﬃcult maximizing nonlinear polynomial linear constraints NPhard 17 Thus propose approximation method ﬁnding optimal cid3cid8 maximum volume S cid8 cid8 421 Degree Strong Controllability Linear Program DSCLP Our DSCLP adapted maximum subinterval problem 18 The goal DSCLP ﬁnd set contingent ﬁxed decision ensures success associated Given STNU S cid3T c T u Cr Cccid4 set maximal subintervals S obtained solving following approximately maximize volume cid3cid8 subintervals U cid8 cid8 STNU S LP cid6 minimize subject t cid10 cid10 t t ut lt t t tT u t t t t t t t cid10 cid10 t t 0 t t t cid8 c cid8 lt cid10 cid8 ut cid10 0 0 0 t t T u t T c cid8 c Cr cid8 lt Cc cid8 ut Cc t T u t t t t t t 1 2 3 4 5 6 7 t Following convention 18 introduce variables t event t representing lower bound upper bound time interval event t occurs constrain variables respect requirement constraints lines 137 Our LP differs previous maximum subinterval approach 18 key ways First allows modify upper lower bounds contingent intervals different amounts lines 46 We introducing variables cid10 cid8 lt ut represent lower upper bounds original contingent interval tightened guarantee strong controllability The resulting t T c By contingent subinterval t t guaranteed speciﬁc schedule returned LP The ﬁnal way LP differs original uses new objective function sums contingent interval decreased normalized original length Let cid2t ut lt denote uncontrollable timepoint ts contingent interval length let cid10t cid10 t interval shrunk Then objective function equal contingent constraint t t Second LP sets t t ut cid10 cid8 lt cid10 t cid10 cid10 t t t t cid6 tT u cid10t cid2t This choice motivated considering volume lost f cid2 cid7 cid7 cid2t tT u tT u cid2t cid10t going cid3 cid3cid8 function cid10t variables setting objective function equal constant multiple gradient f evaluated cid2 cid140 Thus minimizing objective function corresponds minimizing ﬁrst order approximation volume lost shrinking contingent intervals Since cid3 cid3cid8 Cartesian products elements U U cid8 product lengths intervals U U cid8 provides approximate value DSC Moreover values taken t DSCLP determine admissible decision network strong decision S respectively Our LP yields choice U cid8 case volumes regions solution LP variables t T c optimal solution We decision returned cid8 6 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 LP way strongLP decision network If network high DSC strongLP decision likely good strategy network There natural choices LPs use approximate DSC For example maximize sum size subintervals captured strong decision 18 minimize maximum single contingent interval squeezed maximize minimum length contingent subintervals An empirical comparison methods included Subsection 712 shows DSCLP provides better approximations higher success rates approaches In particular use volume probability motivated relationship cid3 P P cid8 effective looser heuristics metrics like ﬂexibility estimating likelihood successful dispatch In Section 6 discuss ideas extended PSTNs allows advantage probability density information ﬁnd strong decisions dispatched high likelihood success 5 Degree Dynamic Controllability Although strong controllability valuable allows agent rely static schedule dynamic controllability applies wider range STNUs strongly controllable networks dynamically controllable viceversa In cases STNU dynamically controllable agent wish attempt dispatch schedule For success guaranteed probability successful execution high dispatching uncontrol lable network worthwhile To assess safe attempt dispatch agent need measure dynamically controllable network This motivates metric analogous DSC context dynamic controllability Deﬁnition Let S STNU realization space cid3 For given subset cid3cid8 required constraints S realization space cid3cid8 maximum possible value denote network Then Degree Dynamic Controllability DDC S deﬁned cid3 let S cid8 cid4 cid5 cid3cid8 Vol Vol cid3 taken cid3cid8 cid3 S cid8 dynamically controllable Vol measures volume region The key distinction DDC DSC cid3cid8 constrained axisparallel hyperrectangle This means network S allowed measurable subset cid3 In particular cid3cid8 cid8 necessarily STNU hyperrectangular realization space traditional sense STNU Generalized Realiza tion Space STNUGR We deﬁne new type network Subsection 52 offer intuition objects natural framework studying dynamic dispatch In remainder section lower bound DDC solving particular type temporal relaxation problem This Optimal DC Relax ODCRelax strategy introduced Subsection 51 optimally relaxes networks constraints dynamically controllable From compute volume cid3cid8 simply multiplying weights relaxed contingent intervals computing DSC This equivalent approximating volume optimal cid3cid8 inscribed hyperrectangle In general method underestimates true maximum volume ignores possibilities captured general view STNUs realization space To better approximation formally deﬁne STNUGRs Subsection 52 employ Subsection 53 demonstrate removing condition cid3cid8 hyperrectangle yields signiﬁcantly accurate estimates dispatch success Here improve predicted DDC probability normal approximation technique conclude discussing related approaches The examples approximation method introduced Subsection 53 demonstrate allowing nonhyperrectangular DC realization space captured STNUGR actually useful dispatch 51 Optimal dynamic controllability relaxations Dynamic controllability STNUs checked polynomial time 19 The fastest current algorithms determining DC search conﬂict series constraints taken simultaneously satisﬁed dynamic execution strategy As mentioned previous work characterized conﬂicts special type negative cycle occurring labeled distance graph STNU 6 Bhargava et al 20 build work introduce cubic time algorithm extract conﬂicts networks They identify conﬂicts aim solving temporal relaxation problems A relaxation problem involves taking uncontrollable network determining relax networks constraints minimal fashion produce new controllable network In context relaxing requirement constraints permitted STNU conﬂict consists set contingent edges resolution constant κ indicates total contingent edges shrunk resolve conﬂict obtained identiﬁed conﬂict We present solution presented Al gorithm 1 version relaxation problem contingents relaxed shrinking intervals 7 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 If STNU conﬂict solution optimal sense shrinks intervals minimize volume cid3 lost resolving conﬂict Suppose conﬂict consists intervals I1 I2 I p respective lengths cid21 cid22 cid2p We want shrink interval I j interval length cid2cid8 j sum cid2cid8 j s equal quantity cid8 cid2 κ cid2 j pcid6 j1 p exactly means conﬂict resolved Thus resolving conﬂict maximizing volume reduced realization space equivalent ﬁnding values cid2cid8 maximize product cid13 j j This optimization problem analytic solution Let q smallest index cid8 cid21 cid22 cid2q1 p q 1cid2q 0 cid2 j j1 cid2cid8 j1 cid2cid8 cid2cid8 8 cid12 cid2 p j Then taking cid2cid8 j cid2 j j q cid2 cid8 j cid2cid8 cid2cid8 cid2cid8 1 p q 1 q1 j q solves maximization problem In solution largest contingent intervals shrunk size smaller intervals left Intuitively solution reduces realization space look like hypercube Algorithm 1 Optimal Relax ODCRelax Strategy Input conf licts sorted list contingent intervals detected STNU conﬂict Input κ resolution constant p length conf licts Var Var cid2 list cid2 j length contingent interval conf licts j Initialization relaxations S sumcid21p κ q None OPTIMALRELAX j 1 p s sumcid21 j p j 1 cid2 j s S q j break A S sumcid21qp q 1 j 1 p edge conf licts j relaxationsedge j q cid2 j A return relaxations 1 2 3 4 5 6 7 8 9 10 11 12 13 We prove optimality induction q When q 1 cid2 j equal cid2cid8p deﬁnition q Now Arithmetic MeanGeometric Mean AMGM inequality asserts list nonnegative reals ﬁxed sum product maximized numbers equal So setting cid2cid8 cid2cid8p satisﬁes constraints maximizes j product scenario 1 2 cid2cid8 j cid2cid8 cid10 cid2cid8 p exists domain cid2 j s compact If cid2cid8 Now ﬁxed q 1 suppose result correct integers q We claim exists cid21 Suppose contrary true Then optimal selection values 1 cid21 assignment Equation 8 implies 1 j increasing product This contradicts optimality j2 cid2cid8 j subject constraint optimal choice cid2cid8 cid2cid8 1 cid2cid8 exist index k cid2cid8 k cid10 preserves sum cid2cid8 cid2cid8 k cid2cid8 1 k initial choice cid2cid8 cid21 claimed Now problem reduces maximizing cid12 1 cid2cid8 cid21 Finally inductive hypothesis proves claimed solution optimal j2 cid2cid8 This algorithm yields optimal relaxation networks single conﬂict In case multiple conﬂicts approach lends greedy algorithm pick conﬂicts relax time procedure The resulting algorithm optimal functions simple useful heuristic resolving conﬂicts minimizing probability mass lost relaxation cid21 It follows exists small positive cid10 replacing cid2cid8 cid13 p p j 8 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 3 The realization space Scid8 schedules The inner box realization space relaxed network underestimates volume realizations lead valid 52 STNU Generalized Realizations A Simple Temporal Network Uncertainty Generalized Realization Space STNUGR STNU permits depen dence contingent constraints Just like ordinary STNU STNUGR set temporal events T partitioned set controllables T c set uncontrollables T u As usual set binary requirement constraints Cr events T cid8 j denote time elapsed t j t This generalized network differs times uncontrollable events determined complicated fashion T c associated Suppose T u consists m uncontrollable events t1 t2 tm Then t j T u unique controllable t cid8 We let δ j t j t j The values δ j determined contingent intervals instead realization space cid3 data STNUGR The space cid3 measurable subset Rm 0 ﬁnite volume R0 denotes set nonnegative reals Nature samples point uniformly random cid3 sets δ j equal jth coordinate point sampled j 1 2 m This determines cid8 δ j Combining information altogether STNUGR uncontrollable t j occurs according equation t j t j deﬁned quadruple cid3T c T u Cr cid3cid4 cid8 j Although details deﬁnition involved deﬁnition normal STNU making cid3 explicit data network indirectly comes product contingent intervals affords power modeling dispatch situations During dispatch scheduler interested space realizations lead success given uncontrollable timepoints realized As Subsection 53 space hyperrectangle makes diﬃcult work usual STNU framework However viewed context STNUGRs easily track information viewing realiza tion space corresponding subnetwork Consequently STNUGRs useful extension STNUs helps schedulers identify realizations lead success dispatch 53 Estimating DDC Although solving relaxation problems useful interested accurately computing probability success ful dispatch dynamic execution strategy Previous research attempted measure likelihood ﬁrst relaxing stronglydynamically controllable networks As noted 21 volume resulting hyperrectangular alization space relaxed network accurately estimate relevant probability merely bounds Indeed relaxation approach underestimates probability severely estimate DDC For example consider STNU S cid8 uncontrollables t1 t3 controllable event t2 This network requirement constraints t1 t2 0 t3 t0 3 contingent constraints t1 t0 0 2 t3 t2 0 2 Network Scid8 dynamically controllable inspection optimal execution strategy schedules t2 t1 In case a1 t1 t0 a2 t3 t0 denote realized lengths contingent edges depicted Fig 3 schedule succeeds exactly a1 a2 3 happens 875 time In contrast wanted relax S cid8 dynamically controllable network maximizing volume intervals contingent edges shrink 0 2 0 32 This shrunk realization space takes 5625 original volume signiﬁcantly smaller true probability succeeding dispatch Interestingly underestimate holds higher dimensions We generalize construction S cid8 considering contingentchain STNU S k k 2 uncontrollables t1 t3 t2k1 k 1 controllable events t2 t4 t2k2 This network k 1 requirement constraints t2 j1 t2 j 0 j 1 2 k 1 order events k contingent constraints t2 j1 t2 j2 0 2 j 1 2 k ﬁnal requirement constraint t2k1 t0 2k 1 sets makespan 2k 1 network Note network S 2 deﬁnition precisely previous example S cid8 If let j t2 j1 t2 j2 j 1 2 k denote realized lengths contingent edges nonnegative reals equal 2 schedule succeeds precisely 9 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 a1 a2 ak 2k 1 It follows formula volume simplex maximum probability successful dispatch 1 1 2kk tends 1 rapidly k gets large On hand relaxing S k achieving dynamic controllability minimizing volume lost corresponds shrinking contingent interval length 2 1k The resulting realization hypercube takes cid15 k cid14 2 1 k 2 cid17 k cid16 1 1 2k 12 06 Again relaxation original volume This quantity monotonically increases k gets larger tends e yields estimate close 60 dramatic underestimate true probability success approaches 100 rapidly k increases For particular family STNUs explain phenomenon simple geometric reason inscribed hyperrect angles bad approximating volumes simplices This observation turn related concentration measure results high dimensions suggests avenue geometry helpful proving results scheduling Motivated examples leverage notion conﬂicts directly approximate probability successful dispatch normal approximation DDC Suppose STNU single conﬂict preventing dynamically controllable Carry notation previous section additionally let j denote difference realized value dispatch lower bound contingent interval I j j 1 2 p Then inequality pcid6 i1 cid8 ai cid2 holds conﬂict avoided sense observed realization come controllable STNU This idea dynamic execution strategies succeed conﬂicts avoided dispatch crucial insight allows estimate DDC We view j independent random variable drawn distribution 0 cid2 j Then Central Limit Theorem implies sum j left hand inequality approximated coming normal distribution N μ σ 2 If use assumption earlier contingent edges uniformly distributed uncertainty j s independent uniform random variables parameters cid4 cid21 cid2p approximating normal distribution given μ 12 sums means variances j s respectively Thus probability inequality holds computed standard normal CDF cid12 For uncontrollable STNUs single conﬂict normal approximation accurately estimates probability successful dispatch In case multiple conﬂicts use normal approximation estimate probabilities avoiding conﬂict separately multiply obtained probabilities Taking product implicitly treats conﬂict independent sharing contingent edges conﬂicts Because conﬂicts generally independent expect technique behave worse networks conﬂicts However detailed empirical evaluation normal approximation useful cases 2 σ 2 cid22 p cid4 cid22 1 cid5 cid5 54 Related approaches The ODCRelax algorithm builds work uses mixed integer LP solve broad range relaxation prob lems related dynamic controllability 21 Our approach tackles speciﬁc variant general formulation specialized scenario obtains analytic solution optimal case single conﬂict computed eﬃciently O p log p time STNU p conﬂicts Moreover ODCRelax naturally subroutine conﬂictdirected search methods 8 RelaxSearch method 20 augment existing algorithms Although work 22 evaluates probability successful dispatch dynamic controllability setting best knowledge normal approximation DDC ﬁrst known approach estimating rate online dispatch appealing relaxations nonlinear solvers Because deﬁnition DDC constrain shape cid3cid8 effectively captures notion robustness geometrically Note framework assume agents networks mandated satisfy requirement constraints violating constraint bad violating constraints simultaneously This consistent methodology 22 contrasts previous work 21820 allows requirement contingent constraints relaxed research 23 maximizes number constraints satisﬁed preference schemes 10 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 6 Generalizing degree controllability probabilistic simple temporal networks likelihood controllability In section extend concept Degree Controllability PSTNs This provides opportunities chal lenges The main opportunity PSTN contingent edges probability density functions PDFs provide richer sources information understanding events happen However presents ﬁrst challenge worry optimizing total density captured contingent edge merely optimiz ing volume This makes optimization problem complex lowdimensional cases The second challenge PSTNs introduce PDFs governing contingent edges unbounded realization edge drawn normal distribution For certain networks means inherently impossible control uncertainty regardless slack introduced network As simple example consider network single activity duration dictated distribution long unbounded tail If PSTN contains makespan constraint imposing deadline activity ﬁnish way guarantee success regardless generously deadline setonly removing deadline altogether guarantee success This means entire classes PSTNs inherently uncontrollable traditional discrete sense controllability We outline extend DSC DDC deﬁnitions PSTNs create useful ﬁnegrained met ric At highlevel deﬁnitions translate relatively straightforward way exchange ndimensional volume optimizations STNUs Sections 4 5 ndimensional mass optimizations case PSTNs Thus PSTN contingent edges bounded distributions end performing equivalent optimization STNU lacks information distribution uncontrollable events 61 Likelihood strong controllability PSTNs richer realization spaces STNUs Recall realization space STNU viewed product contingent intervals Consequently space bounded axisparallel hyperrectangle In contrast contingent constraint PSTN determined PDF P j We associate interval constraint taking minimal interval contains support P j Then case STNUs deﬁne realization space cid3 PSTN S product contingent intervals However set cid3 comes density function μ deﬁned product measure P j s contingent intervals Consequently realization space cid3 μ PSTN possibly unbounded space cid3 density function μ The total mass cid3 respect μ exactly 1 μ PDF Deﬁnition Let S PSTN realization space cid3 μ For given subset cid3cid8 required constraints S realization space cid3cid8 deﬁned maximum possible value denote network Then Likelihood Strong Controllability LSC S cid3 let S cid8 cid18 dμ cid3cid8 taken axisparallel hyperrectangles cid3cid8 cid3 S cid8 strongly controllable Note integral deﬁnition precisely probability mass cid3cid8 LSC natural generalization DSC PSTNs While mass realization space 1 deﬁnition ﬁnding axisparallel hy perrectangle captures greatest total probability mass signiﬁcantly diﬃcult Calculating mass single hyperrectangle requires computing deﬁnite integral component PDF taking product probabilities captured dimension Solving corresponding optimization problem generally intractable practice 1112 However like DSC LSC provides useful tool predicting likelihood successful execution strongly controllable strategy identiﬁed 611 Estimating LSC Interestingly formal mathematicallyprecise deﬁnition Likelihood Strong Controllability previously existed knowledge known prior approaches ﬁnding robust execution strategy PSTN 8101213 happen offer approximate approaches ﬁnding LSC This provides external validation LSC useful natural metric scheduling It points beneﬁt framing problem terms controllability points future potential providing unifying theory new insights help better dispatch PSTNs As discussed Section 24 previous approaches work ﬁnding strong decision schedule STNU approximates input PSTN In similar spirit use DSCLP ﬁnd strongly controllable schedules ap proximate LSC The approach simple step approach First approximate input PSTN STNU riskbased strategy prespeciﬁed α Second STNU approximation PSTN strongly controllable simply return If run DSCLP resulting STNU ﬁnd strongly controllably STNU minimally squeezes contingent edges exists STNU feasible We LSCLP approach 11 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Algorithm 2 MinLoss DC Input A PSTN S Output An approximately optimal DC STNU risk tolerance α V E P cid5 cid19 cid20 cid4 1 E U ExtractSTNUEdges 2 DCCheck 3 V E U cid4cid19 E U ODCRelax cid20 cid20cid5 cid4cid19 cid19 V E U cid20cid5 E P α 4 return V E U 62 Likelihood Dynamic Controllability As DSC extend DDC PSTNs following deﬁnition Deﬁnition Let S PSTN realization space cid3 μ For given subset cid3cid8 required constraints S realization space cid3cid8 deﬁned maximum possible value denote network Then Likelihood Dynamic Controllability LDC S cid3 let S cid8 cid18 dμ cid3cid8 taken cid3cid8 cid3 S cid8 dynamically controllable Unlike LSC unaware work attempts use dynamic controllability estimate maximum likelihood successful online dispatch PSTNs This makes LSC deﬁnition MinLoss DC approach approx imating LSC ﬁrst attempts deﬁne solve problem However like LSC borrow insights work applying DDC STNUs inform estimates LDC 621 Optimal DC relaxations PSTNs MinLoss DC We start adapting earlier ODCRelax approach PSTNs The MinLoss DC algorithm summarized Algorithm 2 works twostep process First extracts bounded contingent edge probabilistic contingent edge original PSTN procedure ExtractSTNUEdgesE P α ExtractSTNUEdges takes set probabilistic edges risk budget α returns set STNU edges edge probability realized value fall bounds guaranteed 1 α truncating α 2 probability density tail distribution Note truncate equal mass tail procedure naturally somewhat accounts distributions skews kurtoses modalities Second resulting STNU DC return If DC apply ODCRelax algorithm described Section 51 returns STNU corresponds minimally relaxing problem case squeezing intervals associated contingent edges involved conﬂict The terminology relax reﬂect reduce uncertainty need control contracting expanding contingent interval bounds makes controllability problem easier solve MinLoss resolves conﬂicts time sacriﬁces probability mass uncertain distribution needed The ODCRelax algorithm optimal case single relaxation uniform distributions optimality longer guaranteed different probability distributions multiple relaxations performed 622 Estimating LDC Similarly adapted ODCRelax approach work PSTNs adapt insights improve DDC estimates STNUs Generalized Realizations improve LDC estimates PSTNs Our approach estimating DDC STNUs involves extracting conﬂicts Because realization space PSTNs unbounded obvious qualiﬁes conﬂict PSTN setting Therefore adopt riskbased approximation strategy We ﬁrst approximate input PSTN STNU denoted Sα pre speciﬁed risk factor α Then extract conﬂicts Sα estimate maximum likelihood successful execution degree controllability pα applying normal approximation method Note normal approximation method naturally extend PSTNs form Central Limit Theorem apply works long distributions different contingent edges independent Then approximate LDC 1 αm pα m number uncontrollable events network 63 Risk likelihood controllability As mentioned current methods estimating LSC LDC currently approximate probabilistic contingent edges PSTN intervalbased STNUstyle contingent edges sacriﬁce probability density independently according risk tolerance α By total risk accrued network α S 1 1 αm m 12 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 4 Dispatch Success Rate vs DSCLP Prediction number contingent edges Thus approach deciding risk budget independent number uncontrollable events entire PSTN α S set α 1 m 1 α S distributes risk budget equitably uncontrollable events Our PSTN STNU αbased approximation affords natural parameterization based risk level α For instance hypothesize setting α high result riskier edges unnecessarily sacriﬁces likelihood hurting overall performance approach like MinLoss DC However setting α low hurt performance require relaxations STNU edges While LSCLP ODCRelax approaches attempt relax network optimally STNU edges agnostic underlying probability density functions We explore α impacts performance method like LSCLP MinLoss DC empirical analysis Finally LSC LDC approaches rely αbased STNU approximation PSTN use DSC DDC yield estimated degree controllability pα This yields overall estimated likelihood success 1 αm pα cases Thus extend approaches incorporate search α outerloop seeks maximize slightly reﬁned estimated likelihood success 1 αm pα problem instance However introduce signiﬁcant computational overhead require sweeping discretized space possible α values solving resulting degree controllability problem α parameter setting We empirical evaluation able achieve stateoftheart performance requiring additional computational overhead empirically tuning α entire benchmark instances 7 Empirical evaluation In section evaluate accuracy optimality degree controllability likelihood controllability We start empirically validating deﬁnitions Degrees Controllability applied STNUs 71 Degree controllability STNUs To evaluate approaches2 assessing DSC DDC ran experiments STNUs derived PSTNs pro vided publicly available ROVERS CARSHARING datasets 10 STNUstyle contingent edges uniform distributions preserved PSTNstyle contingent edges ROVERS dataset converted replacing contingent probabilistic edges drawn N μ σ 2 intervals μ 2σ μ 2σ STNUs derived ROVERS dataset evaluate DSC The PSTNs CARSHARING converted STNUs preserving network structure varying lengths edges derived STNUs consistent dynamically controllable 711 Accuracy DSCLP decision We examine DSC metric actually measures success rate strongLP decision For STNU solved DSCLP network We took decision returned program dispatch strategy After sampling uniformly contingent edges picked random realizations 50 000 times STNU Then recorded success rate proportion time strongLP decision random realization led valid schedule This determine strongLP decision produces betterthanaverage success rates compared decisions execution In Fig 4 success rate plotted approximate DSC value returned 2 All code problem instances available download httpsgithub com HEATlab Prob Ctrl 13 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 5 True DSC vs DSCLP Prediction DSCLP The graph displays clear linear trend r 0999 showing LPpredicted DSC STNU closely matches rate successfully executing network strongLP decision This validates notion strongdecision produces better average execution results paired realization Next discuss LPpredicted DSC compares true degree strong controllability 712 Optimality DSCLP We check accurate DSCLP approximation comparing true optimization problem maxi mizing volume Selecting subintervals maximize volume nonlinear optimization problem We solved problems Baron optimization software accessed NEOS server 2425 compute true DSC problem stances We compared value approximate degree LP Fig 5 demonstrates correlation LPpredicted DSC approximation solution optimization problem It demonstrates low degrees strong controllability LP underestimate degree values greater 05 LP approximation extremely accurate r 0996 This result consistent expectation approximation method works best STNUs high DSC values Although DSCLP slightly accurate lower DSC values approximation method returns low value DSC expect true DSC low In cases DSC low committing ﬁxed decision good strategy employ lack precision cases concerning We note DSCLP performs better networks dynamically controllable However given instances ROVERS predominantly dynamically controllable instances CAR SHARING exclusively dynamically controllable design rule possibility difference performance structural differences networks ROVERS versus CARSHARING We compared DSCLP choices objective functions conjunction LP approximating DSC Naturally DSC represents optimal possible strongly controllable strategy methods achieve higher empirical success rates better job approximating DSC The formulations enforce strong controllability compared included DSCLP DSCLP deﬁned Section 4 Max subinterval maximizes sum length contingent subinterval 18 Minimax minimize maximum single contingent interval squeezed Maximin maximize minimum length contingent subintervals For objective function generated simulated empirical success rate described Section 711 problem instances ROVERS CARSHARING dataset 36 uncontrollable networks original LP 18 failed ﬁnd feasible solution As discussed Section 4 shown Table 1 DSCLP yields highest success rate instances offers best approximation DSC methods tested 713 Accuracy approximate DDC We examine estimate DDC measures actual success rate STNU dispatch For STNU computed estimate DDC normal approximation method To measure dispatch rate empirically earlyﬁrst dispatch strategy discussed 26 uncontrollable STNUs derived datasets This strategy guaranteed succeed dynamically controllable networks natural choice testing networks DDC In trial simulated online dispatch 50 000 times realizations chosen randomly Success rate recorded 14 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Table 1 Comparison DSCLP LP formulations estab lishing Strong Controllability Approach DSCLP Max subinterval 18 Minimax Maximin Dispatch success rate 6913 6626 3621 3031 Fig 6 Dispatch Success Rate vs Approximate DDC proportion time obtained valid schedule In Fig 6 success rate plotted approximate DDC The graph displays clear linear trend r 0952 indicating normal approximation DDC accurately tracks actual success rate The approach worked STNUs multiple separate conﬂicts marked darker points graph For outliers right corner plot normal approximation drastically overestimate success rate In instances employed different dispatch strategy waited longer scheduling certain events success rates STNUs 2 normal approximation So cases predicted DDC matches maximum success rate achievable dynamic strategies In cases normal approximation method overestimated empirical success rate possible variant early ﬁrst strategy optimal choice 72 Accuracy Likelihood Controllability PSTNs Next evaluate deﬁnitions Degree Controllability STNUs translated Likelihoods Controllability PSTNs We test benchmarks time PSTN versions network In case preserve original PSTNstyle edges instead convert STNUstyle contingent edges prob abilistic ones essentially running earlier conversion process probabilistic contingent edges uniform contingent edges reverse That replace contingent interval form μ 2σ μ 2σ STNU original benchmark contingent constraint distribution N μ σ 2 normally distributed intervals midpoint obtain PSTN This reverse conversion process allows maintain aforementioned adjustments CARSHARING benchmarks likely consistent dynamically controllable 721 Accuracy LSCLP decision LSCLP begins extracting STNU approximates original PSTN We setting risk α 005 means extract STNU contingent edges capture exactly standard deviations 95 original PSTN contingent edge We use DSCLP ﬁnd strong decision approximates Degree Strong Controllabil ity The DSCLP result output approximately captures largest volume hyperrectangular realization space We use original PSTN calculate probability mass captured dimension hyperrectangle The product dimensions gives total probability mass captured strong decision use approximate LSC As took decision returned program dispatch strategy We select 50 000 random realizations PSTN time use sample Normal distribution associated contingent edge uniform distribution STNU Then recorded success rate proportion 15 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 7 Dispatch Success Rate vs LSCLP Prediction Fig 8 Dispatch Success Rate vs Approximate LDC time strongLP decision random realization led valid schedule In Fig 7 success rate plotted approximate LSC value returned LSCLP Consistent earlier DSC results graph exhibits clear linear trend r 0999 Note unlike analogous evaluation DSC depicted Fig 5 distinguish DC nonDC networks PSTNs tested inherently DC 722 Accuracy approximate LDC We evaluated performance LDC approximation method We PSTN edges distribution information assist calculating approximate LDC time Central Limit Theorems normal approximation step In order identify potential conﬂicts extract STNU approximates original PSTN risk α 005 results interval captures standard deviations contingent edge The edge distributions sample contingent edges generating random realizations The results evaluation shown Fig 8 As DDC LDC results exhibit strong linear relationship r 0949 73 Optimality likelihood controllability PSTNs Since tractable approaches optimally solving likelihood controllability problems currently exist compare LSCLP MinLoss DC current stateoftheart approximate approaches We focus comparison Static Robust Execution Algorithm SREA 12 previous approach directly optimizes LSC We compare online approach Dynamic Robust Execution Algorithm DREA 12 reruns SREA time new information received closest known approach approximating LDC Throughout use dynamic controllability dispatch algorithm taken 26 dispatch output methods described Since strong controllability special case dynamic controllability algorithm dispatch strongly controllable networks requiring adjustments Across approaches adopt convention 12 13 That giving realization falls outside STNU approximation attempt dispatch 16 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 Fig 9 LSCLP MinLoss DC Dispatch Success Rates Across Risk Levels CARSHARING Table 2 Performance dispatch strategies CARSHARING benchmark Approach MinLoss DC DREA LSCLP SREA DCDispatch Dispatch success rate Runtime milliseconds 5705 5485 5270 5192 4955 1612 109114 2567 74301 415 network controllability guidance execute controllable timepoints soon constraints corresponding preceding events satisﬁed Finally compare DCDispatch dynamic controllability dispatch algorithm taken 26 STNUcontrollability guidance incorporated We simulated realtime dispatch 200 times problem instance sampling randomly according probability dis tribution contingent edge We focus comparisons CARSHARING problem instances dispatch simulations coupled computationally intensive SREA DREA methods struggled signiﬁcantly larger ROVERS problem instances 731 Finding optimal risk levels In order maximize performance LSCLP MinLoss DC ﬁrst need determine risk level setting α edges predict best performance CARSHARING data set The results summarized Fig 9 Interestingly MinLoss performed best set lowest risk level tested α 0001 corresponded extracting STNU bounds uncertain edges capture 999 likelihood This demonstrates ODCRelax algorithms ability minimally relax uncertain intervals conﬂicts necessitate interval involved conﬂict This suggests setting α small values allows ODC Relax ﬂexibility sacriﬁcing likelihood needed LSCLP hand showed different trends largely mirrored MinLoss DC results Here setting α low hurt overall performance We suspect DSCLP unlike ODCRelax driven conﬂicts agnostic underlying distribution Thus setting α small provides LP opportunity miss densest portion probability mass attempt generically optimize volume LSCLPs dispatch success rate peaks α 02 drops slowly Note results shown Fig 9 assume LSCLP guide DispatchDC algorithm The fact DispatchDC attempts guide execution realizations fall outside original STNU bounds mitigate performance drops α increases 732 Optimality LSCLP MinLoss DC The results empirical comparison ﬁve algorithms shown Table 2 MinLoss DC demonstrates highest overall success rate result conﬁrmed wide diversity problem instances MinLoss DC statistically signiﬁcant p 005 higher dispatch success rates LSCLP SREA DCDispatch The statistically signiﬁcant difference DREA achieved higher dispatch rates SREA DCDispatch LSCLP The competitive approach MinLoss DC DREA online algorithm reruns SREA time new information schedule received The fact MinLoss DC achieves higher average success rate DREA 17 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 surprising notable MinLoss DC computes dispatchable network oﬄine prior execution incurs additional computational overhead execution compared dynamic dispatch methods This stark contrast DREA advantage gets recompute completely new strongly controllable schedule reoptimizes new information time new information arrives As noted Table 2 leads immense computational overhead DREA expending orders magnitude computation MinLoss DC We turn comparing methods approximately computing LSC LSCLP SREA As shown Table 2 approaches end having fairly comparable dispatch success rates LSCLP slightly edging SREA signiﬁcant margin LSCLPs main advantage SREA singleshot LP LP gets run times binary search innerloop This results orderofmagnitude reduction computation time We note speedup attributed fact SREA autotunes α value particular problem instance LSCLP entire benchmark oﬄine priori DCDispatch computational overhead expected given attempt optimize controllability PSTNs Note DREA extra computational overhead associated computing controllable network occurs oﬄine execution begins unlikely preclude use situation DCDispatch deployed 8 Conclusion In paper applied geometric view STNUs expanded notion controllability continuous measure These new degrees strong dynamic controllability assess far STNU controllable We deﬁnition cases strong dynamic controllability produce Degree Strong Controllability DSC Degree Dynamic Controllability DDC metrics provide information maximum probability success certain types oﬄine online strategies respectively In eﬃcient LP approximating DSC presented solution variant relaxation problem discussed Bhargava et al 20 provided normal approximation method estimating DDC We showed DSC DDC extended respectively new metrics Likelihood Strong Controllability LSC Likelihood Dynamic Controllability PSTNs Our empirical comparison demonstrated usefulness metrics capturing likelihood successful dispatch strong dynamic controllability cases STNUs PSTNs These contributions present uniﬁed geometric way tracking controllability temporal networks In future interesting deﬁne continuous metric interpolates strong dynamic weak controllability Although metrics extend deﬁnition controllability useful ways currently draw direct connection strong dynamic controllability That strong controllability implies dynamic control lability DSC value provide information network dynamically controllable This yield explicit way classifying states intermediate dynamic strong controllability offer reﬁned way comparing different networks Lastly relaxation algorithm normal approximation DDC currently handle STNUs multiple conﬂicts overlook possibility conﬂicts sharing contingent edges Further work attempt ﬁgure contend dependencies conﬂicts way accurately assesses probability successful dispatch Declaration competing The authors declare known competing ﬁnancial interests personal relationships appeared inﬂuence work reported paper Acknowledgements Funding work graciously provided The National Science Foundation grant IIS1651822 The Rose Hills Foundation Thanks anonymous reviewers HMC faculty staff fellow HEATlab members sup port constructive feedback We thank Nikhil Bhargava providing assistance implementation algorithms presented 20 Finally thank Jordan Abrahams Susan Martonosi Mohamed Omar offering expertise temporal networks optimization convex geometry respectively References 1 S Akmal S Ammons H Li JC Boerkoel Jr Quantifying degrees controllability temporal networks uncertainty Proc 29th International Conference Automated Planning Scheduling ICAPS19 2019 pp 2230 2 M Gao L Popowski JC Boerkoel Jr Dynamic control probabilistic simple temporal networks Proc 34st AAAI Conference Artiﬁcial Intelligence AAAI20 2020 pp 2230 3 R Deichter I Meiri J Pearl Temporal constraint networks Artif Intell 49 1991 6195 4 T Vidal H Fargier Handling contingency temporal constraint networks consistency controllabilities J Exp Theor Artif Intell 1999 2345 5 L Hunsberger Fixing semantics dynamic controllability providing practical characterization dynamic execution strategies Proc 16th International Symposium Temporal Representation Reasoning TIME09 2009 pp 155162 18 S Akmal S Ammons H Li et al Artiﬁcial Intelligence 289 2020 103384 6 P Morris A structural characterization temporal dynamic controllability Proc Principles Practice Constraint Programming CP06 2006 pp 375389 7 I Tsamardinos A probabilistic approach robust execution temporal plans uncertainty Methods Appl Artif Intell 2002 97108 8 P Yu C Fang B Williams Resolving uncontrollable conditional temporal problems continuous relaxations Proc 24th International Con ference Automated Planning Scheduling ICAPS14 2014 pp 341349 9 C Fang P Yu BC Williams Chanceconstrained probabilistic simple temporal problems Proc 28th AAAI Conference Artiﬁcial Intelligence 10 P Santana T Vaquero C Toledo A Wang C Fang B Williams Paris polynomialtime risksensitive scheduling algorithm probabilistic sim ple temporal networks uncertainty Proc 26th International Conference Automated Planning Scheduling ICAPS16 2016 pp 267275 11 J Brooks E Reed A Gruver JC Boerkoel Robustness probabilistic temporal planning Proc 29th AAAI Conference Artiﬁcial Intelligence 12 K Lund S Dietrich S Chow J Boerkoel Robust execution probabilistic temporal plans Proc 31st AAAI Conference Artiﬁcial Intelligence AAAI16 2014 pp 22642270 AAAI15 2015 pp 32393246 AAAI17 2017 pp 35973604 13 JR Abrahams DA Chu G Diehl M Knittel J Lin W Lloyd JC Boerkoel J Frank Dream algorithm mitigating overhead robust rescheduling Proc 29th International Conference Automated Planning Scheduling ICAPS19 2019 pp 312 14 A Huang L Lloyd M Omar J Boerkoel New perspectives ﬂexibility simple temporal planning Proc 28th International Conference Automated Planning Scheduling ICAPS18 2018 pp 123131 15 A Cimatti A Micheli M Roveri An SMTbased approach weak controllability disjunctive temporal problems uncertainty Artif Intell 224 16 ET Jaynes Probability Theory The Logic Science Cambridge University Press 2003 17 TS Motzkin EG Straus Maxima graphs new proof theorem Turán Can J Math 17 1965 533540 18 M Wilson T Klos C Witteveen B Huisman Flexibility decoupling simple temporal networks Artif Intell 214 2014 2644 19 P Morris N Muscettola Temporal dynamic controllability revisited Proc 20th National Conference Artiﬁcial Intelligence AAAI05 2005 2015 127 pp 11931198 20 N Bhargava T Vaquero B Williams Faster conﬂict generation dynamic controllability Proc 26th International Joint Conference Artiﬁcial Intelligence IJCAI17 2017 pp 42804286 21 J Cui P Yu C Fang P Haslum BC Williams Optimising bounds simple temporal networks uncertainty dynamic controllability straints Proc 25th International Conference Automated Planning Scheduling ICAPS15 2015 pp 5260 22 P Yu C Fang B Williams Resolving overconstrained probabilistic temporal problems chance constraint relaxation Proc 29th AAAI Conference Artiﬁcial Intelligence AAAI15 2015 pp 34253431 23 F Rossi B Venable N YorkeSmith Simple temporal problems preferences uncertainty Proc CP 2003 Workshop Online Constraint Solving Handling Change Uncertainty 2003 24 ED Dolan NEOS server 40 administrative guide CoRR arXivcs DC 0107034 2001 25 M Tawarmalani NV Sahinidis A polyhedral branchandcut approach global optimization Math Program 103 2005 225249 26 M Nilsson J Kvarnström P Doherty Classical dynamic controllability revisited tighter bound classical algorithm Proc 6th Interna tional Conference Agents Artiﬁcial Intelligence ICAART14 Angers France 68 March 2014 2014 pp 130141 19