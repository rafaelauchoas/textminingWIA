Artiﬁcial Intelligence 164 2005 4780 wwwelseviercomlocateartint MaxSolver An efﬁcient exact algorithm weighted maximum satisﬁability Zhao Xing Weixiong Zhang Department Computer Science Engineering Washington University Saint Louis Saint Louis MO 63130 USA Received 17 April 2004 Available online 2 March 2005 Abstract Maximum Boolean satisﬁability maxSAT optimization counterpart Boolean satisﬁabil ity SAT variable assignment sought satisfy maximum number clauses Boolean formula A branch bound algorithm based DavisPutnamLogemannLoveland procedure DPLL competitive exact algorithms solving maxSAT In pa propose investigate number strategies maxSAT The ﬁrst strategy set unit propagation unit resolution rules maxSAT We summarize existing unit propaga tion rules propose new based nonlinear programming formulation maxSAT The second strategy effective lower bound based linear programming LP We LP lower bound effective number clauses increases The strategy consists binaryclause ﬁrst rule dynamicweighting variable ordering rule motivated thorough analysis existing wellknown variable orderings Based analysis strategies develop exact solver maxSAT weighted maxSAT Our experimental results random problem instances instances maxSAT libraries new solver outperforms existing exact maxSAT solvers orders magnitude improvement cases 2005 Elsevier BV All rights reserved Keywords Weighted maximum satisﬁability DPLL Unit propagation Linear programming Nonlinear programming Variable ordering Corresponding author Email addresses zx2csewustledu Z Xing zhangcsewustledu W Zhang 00043702 matter 2005 Elsevier BV All rights reserved doi101016jartint200501004 48 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 1 Introduction overview Boolean satisﬁability SAT archetypical decision problem artiﬁcial intelligence logic theory computation SAT literals variables nega tions clause NPcomplete 629 Maximum Boolean satisﬁability maxSAT optimization counterpart SAT aim maximize number satisﬁed clauses MaxSAT general SAT solution maxSAT answer question decision counterpart vice versa Therefore maxSAT difﬁ cult solve SAT MaxSAT NPhard 15 clause literals SAT literals clause 2SAT polynomial soluble Weighted maxSAT extension maxSAT clause carries weight rep resenting signiﬁcance clause induced penalty violated In weighted maxSAT objective maximize total weight satisﬁed clauses MaxSAT weighted maxSAT realworld applications domains scheduling conﬁguration problems probabilistic reasoning auction pattern recognition 1420 For simplicity paper mention maxSAT refer weighted weighted maxSAT Following convention SAT refer ratio number clauses number variables constrainedness maxSAT The DavisPutnamLogemannLoveland DPLL algorithm SAT 10 ex tended branchandbound BnB algorithm maxSAT A BnBbased DPLL algo rithm shown competitive maxSAT 43 Much effort devoted improving performance BnBbased DPLL algorithm maxSAT combining techniques previously developed SAT 42843 methods Operations Research OR integer linear programming ILP cutting plane methods 122328 However efforts enjoyed limited success es pecially large complex problems In particular current ORbased approaches effective DPLLbased algorithms max2SAT 28 max SAT literals clause On hand BnBbased DPLL algorithm efﬁcient algorithm maxSAT handle relatively small prob lems moderate degrees constrainedness Therefore despite previous effort work needed order develop efﬁcient algorithms maxSAT weighted maxSAT special care required extending SAT techniques maxSAT In principle techniques developed SAT extended maxSAT 142043 However SAT techniques advantage fact SAT decision problem search avenue abandoned soon constraint violation evident This fact explicitly captured unit propagation unit resolution methods different variable orderings DPLL algorithm variants In contrast study unit propagation methods variable orderings maxSAT limited It important note maxSAT intrinsic features remarkably different decision counterpart Many existing techniques SAT carefully reconsidered applied max SAT Overall harder develop effective efﬁcient algorithm maxSAT SAT research developing efﬁcient exact maxSAT solver deserves attention generality importance problem Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 49 Aiming solving difﬁcult maxSAT weighted maxSAT problems optimally review previous research maxSAT taking DPLL framework SAT particular develop efﬁcient exact maxSAT algorithm based DPLL Our algo rithm ingredients viewed novel extensions main ideas existing methods SAT The ﬁrst combination unit propaga tion rules maxSAT Three rules proposed previous studies analyze extensively research The fourth new unit propagation rule developed research based integer nonlinear programming formulation maxSAT This innovative contribution enlarging arsenal unit propagations maxSAT We consider different ways combine propagation rules study The second element maxSAT algorithm effective lookahead lower bound estimate minimum number clauses unsatisﬁable node search Our lower bound based linear programming LP 21 This remarkable contribution ﬁrst successful application LP maxSAT despite similar successful previous efforts apply integer LP ILP maxSAT 122328 The ingredient consists new variableordering branching rules inspired results close examination popular variableordering rules SAT Moms rule 830 twoside JeroslowWang rule 24 max SAT The ﬁrst new variableordering rule designed max2SAT As binary clause ﬁrst rule indicates rule gives higher priority variable binary clauses unit clauses The second new rule designed cope large range constrainedness values max3SAT instances It dynamic variableordering heuristic able dynamically change variable ordering close Moms rule close twosided JeroslowWang rule constrainedness increases The paper organized follows ﬁrst discuss maxSAT types mathematical formulation problem Section 2 In Section 3 review DPLL algorithm SAT extended maxSAT We discuss factors affect performance including initial upper bound value ordering lower bound unit clauses existing variable ordering rules In Section 4 present unit propa gation rules maxSAT In Section 5 develop lower bound function based linear programming discuss LPbased lower bound effective highly constrained problem instances In Section 6 propose binaryclause ﬁrst dynamicweighting variable ordering rules We present experimental results new strategies efﬁcient maxSAT algorithm combines new strategies Section 7 We systematically compare new solver existing maxSAT solvers Sec tion 7 Finally discuss related work Section 8 conclude Section 9 Preliminary results research extended abstract paper appeared 45 2 Formulation maximum satisﬁability A satisﬁability problem SAT Boolean formula involving set Boolean variables conjunction set disjunctive clauses literals variables 50 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 negations A clause literal called unit clause clause literals named binary clause clause literals referred clause size A clause satisﬁed literals takes value T formula satisﬁed clauses satisﬁed The conjunction deﬁnes constraints possible combinations variable assignments SAT ﬁnd variable assignment satisﬁes clauses Specially 3SAT SAT clause literals When exists variable assignment satisfy clauses required ﬁnd assignment maximizes total number weight satisﬁed clauses 14 This maximum satisﬁability maximum SAT maxSAT short In general weighted maxSAT formulated minimization problem Given set m clauses deﬁned n Boolean variables v1 v2 vn minimize objective W subject wiyi mcid1 i1 cid2 yi ith clause unsatisﬁed 1 0 wi weight ith clause yi decision variable 21 corresponding ith clause 1 2 m When problem unweighted wi 1 21 Linear programming MaxSAT formulated integer linear program ILP 28 pseudo Boolean formula 1244 We map Boolean variable vi integer variable xi takes value 1 vi True 0 False xi 1 0 vi T F respec tively We map vi 1 xi With mappings formulate clause linear inequality For example clause v1 v2 v3 mapped x1 1 x2 x3 cid1 1 Here inequality means clause satisﬁed order left inequality value smaller However clause maxSAT satisﬁed corresponding inequality violated To address issue introduce auxiliary integer variable yi decision variable left ith mapped inequality Variable yi 1 corresponding clause unsatisﬁed making inequality valid yi 0 Since objective minimize total weight violated clauses equivalent minimizing sum products clause weights decision variables forced value 1 For example v1 v2 v3 weight 2 v2 v4 weight 3 written ILP minimizing W 2y1 3y2 subject constraints x1 1 x2 x3 y1 cid1 1 x2 1 x4 y2 cid1 1 The linear 01 program formulation maxSAT suggests problem solved integer linear programming ILP However ILP NPhard Furthermore shown 28 max2SAT direct application ILP maxSAT prob lems effective Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 51 22 Nonlinear programming The ILP formulation maxSAT extended nonlinear program formulation We use formulation derive new unit resolution rule maxSAT Sec tion 44 This extension achieved applying inclusionexclusion principle 31 turn inequalities ILP formulation equalities Here introduce integer expression represent literal For example given v1 v2 v3 introduce integer expressions x1 1 x2 x3 literals v1 v2 v3 Such integer expression takes value 1 corresponding literal set true value 0 Using inclusion exclusion principle write nonlinear equation fi yi 1 ith clause given formula yi decision variable taking value 0 1 Taking v1 v2 v3 example fi x1 1 x2 x3 cid3 x11 x2 x1x3 1 x2x3 cid4 x11 x2x3 Note fi value 1 0 Speciﬁcally fi 0 literal clause set true fi 1 As ILP formulation introduce decision variables yi s count unsatisﬁed clauses Here yi 1 fi 0 yi 0 fi 1 For binary clause v1 v3 unit clause v2 corresponding nonlinear equation x1 x3 x1x3 yi 1 1 x2 yi 1 respectively In general fi function xu xv xw xuxv xuxw xuxvxw xu xv xw integer variables introduced Boolean variables ith clause By yi 1 fi maxSAT problem minimize following nonlinear objective function mcid1 W i1 c mcid1 wiyi cid1 i1 πixi wi1 fi cid1 πij xixj cid1 πijkxixj xk 1 xi V xi xj V xi xj xkV V x1 x2 xn set variables instantiated 0 1 c constant πi πij πijk coefﬁcients items xi xixj xixj xk respectively 3 DPLL algorithm maximum satisﬁability brief review The DavisPutnamLogemannLoveland DPLL algorithm SAT 11 tracking algorithm progressively instantiates variable time searching satisfying variable assignment In step algorithm selects variable branches assign possible values T F variable Whenever clause violated setting variable T F algorithm backtracks previous variable The process continues satisfying assignment conclude assignment exists DPLL SAT extended maxSAT depthﬁrst branchandbound DF BnB DFBnB special branchandbound explores search tree depthﬁrst order DFBnB uses upper bound α minimum total weight clauses 52 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 satisﬁed initial value inﬁnity value suboptimal solution gen erated approximation algorithm Starting root node DFBnB selects recently generated node examine If variables current node instantiated total weight clauses violated far g value A algorithm current upper bound α α revised g value variables uninstantiated current node g value accumulated far greater equal α current node pruned For simplicity point main differences DFBnB max SAT backtracking SAT First upper bound α zero maxSAT Therefore backtracking SAT viewed special case DFBnB maxSAT α 0 search forbidding clause violation resulting reduced search cost In fact special condition α 0 makes unit propagation dis cussed Section 4 effective SAT Second DFBnB maxSAT abandon node search g value plus lower bound minimum total weight clauses violated remaining clauses h value A algorithm node exceeds current upper bound α This indicates maxSAT difﬁcult constrainedness increases causing clauses unsatisﬁed result ing higher upper bound α This implies method reduce search cost DFBnB accurately estimate total weight clauses satisﬁed remaining clauses node h value increase possibility pruning node lead better variable assignment This observation motivated work LPbased lower bound discussed Section 5 31 Initial upper bound One way improve DPLL maxSAT obtain good initial upper bound α The smaller initial α nodes pruned Ideally initial α set cost optimal solution typically unknown problem solved An initial α obtained approximation algorithm A local search algorithm WalkSAT 3238 best local search algorithms SAT good choice In experiments Section 7 example apply WalkSAT multiple times reduce initial upper bound Such combination local search systematic search called twophase algorithm 4 32 Lower bounds unit clauses Another way improve DPLL maxSAT compute lower bound mini mum total weight clauses satisﬁed current node search 321 Freuder Wallaces lower bound One simple lower bound uses unit clauses At node search literals unit clauses negate violated Let Cv C v sets unit clauses literal v v respectively Then minimum weight violated clauses variable v smaller total weight clauses C v total weight clauses C v A lower bound node search tree Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 53 obtained summing minimum weights associated variables appearing unit clauses node It shown simple lower bound signiﬁcantly improve performance DPLL algorithm maxSAT 14 We adopt lower bound function implementation DPLL algorithm deal maxSAT problems unweighted max2SAT 322 Shen Zhangs lower bound max2SAT Recently Shen Zhang proposed efﬁcient lower bound functions max 2SAT 39 These functions developed Freuder Wallaces lower bound By analyzing number unit clauses literals unit clauses appear binary clauses Shen Zhang deduced new lower bound functions LB3 LB4 LB4a shown stronger Freuder Wallaces lower bound The new lower bounds left original paper 39 In implementation integrated DPLL algorithm Section 72 adopted Shen Zhangs strongest LB4a solving unweighted max2SAT Note unclear new lower bound functions extended max3SAT weighted max2SAT 33 Variable ordering Each step DPLL chooses variable instantiated Strategies making choices referred variable orderings The performance DPLL algorithm greatly affected variable ordering 331 The sided JeroslowWang rule A wellknown rule 3SAT twosided JeroslowWang JW rule 24 Let C1 C2 Cm set clauses satisﬁed The sided JW rule selects variable v maximizes J v J v uninstantiated variables cid1 J v ni 2 vCi ni number literals ith clause This variable ordering based intuition shorter clauses important longer ones It gives variables appear shorter clauses higher weights variable appearing unit clauses likely selected It assumes ratio 421 weights variables unit binary threeliteral clauses It interesting note idea progressively halving weighting factors Johnson 27 thirty years ago approximation algorithm maxSAT We rule giving different weightings variables clauses different sizes weighted variable ordering weighted branching rule 332 The Moms rule Weighted variable ordering shown effective 3SAT 1330 Moreover experimental results supported scheme giving highest weighting variables shortest clauses 1330 This scheme led popular SAT heuristic Moms rule shortest clauses ﬁrst rule branches 54 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 variable having maximum occurrence clauses minimum size 830 The Moms rule better twosided JW rule 3SAT 1330 In 1330 Moms heuristic represented formula weighted variable ordering clause length weighting 5 times 2 large weighting clause length 1 Moms heuristic selects variable v maximizes J v J v uninstantiated variables J v cid1 vCi ni 5 The Moms rule successful 3SAT tends rid unit clauses soon forces lower bound increase search backtrack early 34 Value ordering Value ordering determines possible instantiations branch ing variable explored ﬁrst element affecting performance Different value ordering results different search complexity Generally better value dering strategy sooner search process reach better solution exists upper bound reduced quickly total search cost smaller On hand initial upper bound cost optimal solution search merely verify optimal solution hand optimal In case exploring branches variable instantiation affect num ber nodes visited branch Therefore effect value ordering large dominated effective initial upper bound strategy especially able provide optimal nearlyoptimal solution Our experimental analysis supported observation data shown In extended DPLL algorithm maxSAT apply efﬁcient local search WalkSAT algorithm 3238 good initial upper bound use value ordering strategy use ﬁxed value ordering ﬁrst setting variable T F 4 Unit propagation Unit propagation SAT recursively sets literals unit clauses T powerful strategy SAT central piece DPLLbased SAT solver Unit propagation forces variable unit clause value satisﬁes clause immediately ignores value completely Furthermore clauses contain ing literal equal forced value variable removed satisﬁed negated literal eliminated clauses The result simpliﬁed formula More importantly power unit propagation largely comes cascade effect setting variable unit clause ﬁxed value subsequently generate unit clauses simplify formula hand Conversely unit clauses having opposite literals v v appear current formula formula obviously unsatisﬁable current search avenue abandoned Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 55 In maxSAT clause satisﬁed Such unsatisﬁable clause simpliﬁed unit clause search Therefore force literal unit clause value T consider setting F long cause total weight violated clauses exceed current upper bound α Therefore unit propagation SAT pure form apply maxSAT Nonetheless principle unit propagation extended maxSAT Indeed unit propagation rules suggested different groups searchers We summarize section experimentally analyze Section 7 Moreover develop new unit propagation rule signiﬁcantly differ ent existing ones In rest section rules We experimentally examine effects effect combination Section 7 To presentation existing rules simply ﬁrst introduce terms For maxkSAT problem clause k literals consider node N search tree uninstantiated variable v N Let g total weight clauses violated N piv niv total weights clauses literals N v positive negative literals respectively 41 UP1 Pure literal rule cid5 Pure literal rule If k i1 niv 0 force v T ignore v F force v F ignore v T cid5 k i1 piv 0 The pure literal rule known monotone variable ﬁxing 28 Although algorithm rule moderate improvement SAT 33 experiments Wallace showed improvement pure literal rule considerable max2 SAT 42 We include rule extended DPLL algorithm maxSAT 42 UP2 Upper bound rule Upper bound rule If p1v g cid1 α force v T ignore v F n1v g cid1 α force v F ignore v T conditions hold prune current node The upper bound rule self evident When setting v F p1v g clauses violated making unfavorable comparing best variable assignment far 43 UP3 Dominating unitclause rule Dominating unitclause rule If p1v cid1 k i1 niv set v T ignore v F cid5 k i1 piv set v F ignore v T conditions hold n1v cid1 p1v n1v set v T v F ignore value cid5 The dominating unitclause rule ﬁrst proposed Niedermeier 35 It applied max2SAT 46 This rule selfevident setting v F causes p1 k i1 n1v clauses clauses violated immediately better violating v T Nevertheless pedagogical purpose simplify proof cid5 56 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 new propagation rule prove UP3 Appendix A nonlinear formulation maxSAT 44 UP4 Coefﬁcientdetermining propagation rule UP4 new unit propagation rule derived nonlinear programming formulation maxSAT It signiﬁcantly differs propagation rules focuses individual variables collectively clauses certain lengths The main idea UP4 infer coefﬁcient Fxi single variable xi cid2 0 need ﬁx variable xi false nonpositive nonnegative Fxi true respectively order minimize objective function problem However cid2 0 straightforward particularly max3SAT ensure Fxi Fxi longer linear function variables problem To circumvent difﬁculty consider upper bound UBxi lower bound LBxi Fxi If UBxi cid2 0 Fxi positive likewise UBxi cid1 0 Fxi negative UP4 summarized follows cid1 0 Fxi cid1 0 Fxi Coefﬁcientdetermining propagation rule For uninstantiated variable vi corresponding integer variable xi LBxi cid1 0 set vi F ignore vi T UBxi cid2 0 set vi T ignore vi F conditions hold UBxi LBxi set vi T vi F ignore value For max2SAT UBxi πi cid1 πij LBxi πi xj V xi πij 0 cid1 πij xj V xi πij 0 πi πij deﬁned Eq 1 The derivation bounds Appendix B For max3SAT difﬁcult obtain closed forms UBxi LBxi However upper lower bounds computed node search simplifying quadratic terms linear terms The simpliﬁcation process involves different ways turning quadratic terms linear ones different conditions tight bounds In words process computes like piecewise linear functions The provided Appendix B Note simplying quadratic term linear term loosens tightness corre sponding bounds making effective There interactions quadratic terms interactions quadratic linear terms grade tightness bounds Their ramiﬁcation UP4 rule effective problem constrainedness increases Such consequences observed experiments including reported Section 7 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 57 5 Linear programming based lower bound As mentioned Section 3 effective way improve DPLL maxSAT troduce admissible lower bound function h estimate total weight clauses satisﬁed node search If lower bound estimate h plus total weight g clauses violated greater equal current upper bound α g h cid1 α node pruned One main contributions paper effective lookahead lower bound maxSAT The new LP lower bound simple To compute h value node N apply ILP formulation Section 2 N However solving remaining maxSAT N ILP apply linear programming LP instead In words restrict mapped variables x1 x2 y1 integers 0 1 allow real values 0 1 As result obtain admissible estimate actual solution cost ILP instance LP restricted ILP By relaxing problem LP obtain lower bound estimation computation However application LPbased lower bound needs handled care Note solution LP relaxation problem node variables values middle range 0 1 taking value close 12 Such fractional variables troublesome binary clauses For example variables binary clause values slightly 12 forcing auxiliary variable y variable LP formulation Section 2 clause value 0 yielding contribution overall lower bound function Similar scenarios occur literal clauses Fortunately situations occur unit clauses decision variables contribute overall lower bound function setting literals unit clauses fractional value Therefore apply LP lower bound nodes unit clauses making accurate efﬁcient compute Moreover search unit clauses need eliminated increase expected lower bound eliminating unit clauses calculated exactly applying LP lower bound apply LP lower bound compute h expected gain g value unit clauses taken account h value All DPLL LP boosts lower bound value increasing g value In principle applying stronger lower bound function LPbased lookahead lower bound case reduce effective branching factor search The complexity extended DPLL algorithm exponential number constraints Assuming effective branching factor extended DPLL algorithm b average search depth given problem d d Okm k constant factor 1 m number constraints The complexity extended DPLL T Obd Obkm Using LPbased lower bound nodes pruned effective branching factor reduced bLP b total node expended Obkm LP However overhead time computing LP based lookahead lower bound In implementation LPbased lower bound Simplex algorithm CPLEX package 26 LP Theoretically worstcase complexity Simplex algorithm exponential 9 However practice Simplex algorithm efﬁciently solve problems nearly linear time dimension 58 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 problem number constraints encoded linear program 1641 Therefore consider overhead LP approximately Om Thus overall time complexity extended DPLL LPbased lower bound TLP OmObkm LP Combining factors TLP T number constraints m large This veriﬁed experiments Section 7 This means underconstrained modestconstrained problems overhead LP makes LPbased lower bound ineffective This observation explain difﬁcult LP effective satisﬁability problem instances 6 Variable ordering revisited Variable ordering studied maxSAT The popular variable ordering heuristics Moms rule twoside JW rule Section 33 originally developed SAT To advantage power unit propagations SAT rules focus variables appearing shortest clauses effective maxSAT In addition empirical analysis Section 7 shows perform problems constrainedness rules dominates conditions Motivated address issues propose following new variable ordering rules max2SAT max3SAT respectively 61 Binaryclause ﬁrst variable ordering max2SAT Due efﬁcient Lower bound functions unit propagation rules max2SAT conﬂicting unit clauses max2SAT v v cause lower bound increase branched Therefore plausible strategy max2SAT generate remove unit clauses possible produce conﬂicting unit clauses increase lower bound An effective implementation strat egy higher weighting variables appearing binary clauses variables unit clauses instantiation variable rise maximum number new unit clauses We variable selection rule binary clauses ﬁrst rule As Section 7 binary clauses ﬁrst rule effective max2SAT weighting ratio 125 binary clause ﬁrst rule effective Moms twoside JW rules max2SAT 62 Dynamicweighting variable ordering max3SAT The Moms twoside JW rules described Section 3 use static weightings weighting ratios variable ordering ﬁxed search regardless problem constrainedness As section max3SAT ef fective different ranges problem constrainedness Compared SAT max3SAT contain problem instances constrainedness These variable order ings SAT effective max3SAT To address problem propose dynamicweighting variable ordering Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 59 Dynamicalweighting variable ordering max3SAT problem total number clauses C total number variables V node DFBnB search tree explored extended DPLL algorithm select variable v maximizes J v J v uninstantiated variables J v cid1 vCi wiβr ni ni number literals ith clause Ci wi weight ith clause r clausevariable ratio r CV cid6 βr 5 26 333r 2 r 63 63 cid2 r cid2 72 r 72 In function values 63 72 determined empirically randomly generated problem instances Section 7 information generated To obtain empirical values tested different weighting ratios βs problem instances different constrainedness recorded best β value individual strainedness built linear function best ﬁt data points Our experiments Section 7 max3SAT clausevariable ratio smaller 63 Moms rule performs better clausevariable ratio bigger 72 twosided JW rule works better Therefore method switch weighting ratio β variable ordering close Moms rule similar twoside JW rule constrainedness increases having good performance nearly cases 7 Experimental evaluation applications The combination strategies discussed Sections 4 5 6 leads integrated algorithm maxSAT shorthand MaxSolver In section experimentally evaluate performance MaxSolver problem instances including SATLIB 25 When explicitly stated exper iments obeyed following conditions 15 initial upper bound problem computed WalkSAT 3238 10 random restarts 100 V ﬂips try V number variables given problem instance 2 experiments run PCs Pentium 24 GHZ processor 512 MB cache 3 The LP solver compute h value CPLEX 80 26 Note DualSimplex algorithm CPLEX optimizes computation h value current node based existing solution parent node search tree This feature signiﬁcantly reduce number iterations DualSimplex algorithm particularly current problem similar problem solved parent node We start investigation efﬁcacy improving strategies compare MaxSolver directly existing maxSAT algorithms aware able source code authors 60 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 71 Evaluation new strategies We ﬁrst compared average running time extended DPLL unit propagations LP lower bound combinations different variable orderings We ran algorithms DPLL DPLL different unit propagation DPLL UPs DPLL LP lower bound DPLL LP UP LP stand unit propaga tions LP lower bound respectively Each algorithm tested variable orderings Moms rule twosided JW rule In following ﬁgures average running time experiment given 95 conﬁdence interval 711 Max3SAT problems The experiments carried random max3SAT 80 variables clausevariable CV ratios ranging 4 8 increment 05 For CV ratios 4 6 65 8 100 10 problem instances respectively Unit propagation rules effective certain arrangement constrainedness As shown Fig 1 UP rule UP1 reduce DPLLs running time 210 times Detailed running time speedup UP rule Tables 1 2 When CV ratio low 4 55 initial upper bound α close 0 thanks effectiveness Walksat algorithm As result solving max3SAT similar Fig 1 Effects unit propagation UP rules unweighted max3SAT For group error bars left right results DPLL DPLL UP1 UP2 UP3 UP4 respectively DPLL UP rules DPLL UP2 DPLL UP1 Table 1 Effects unit propagation UP rules unweighted max3SAT tested twosided JW rule The running time seconds given followed relative speedup DPLLDPLL UPs parentheses DPLL UP1234 CV DPLL 0001 1480 0074 20 0148 40 0001 1480 0118 125 0878 17 1477 45 379 0039 54 2316 7251 17 12554 50 144 0870 38 23859 54697 17 90411 55 70 12950 30 123904 227258 16 376390 60 36 103533 27 1157851 433563 704714 16 65 25 465809 24 1496634 24 1732674 21 1443292 70 3643094 2203376 16 1502187 25 22 4514648 22 5734217 17 4533212 75 10005426 6076131 16 4637295 22 20 10656930 21 13643647 16 10323329 80 22153242 13526077 16 11053094 21 0004 370 0172 86 2153 58 21453 42 132326 28 478864 24 0002 740 0144 100 2372 53 23410 39 119434 32 431936 27 DPLL UP4 DPLL UP3 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 61 DPLL UP1 DPLL UP3 Table 2 Effects unit propagation UP rules unweighted max3SAT tested Moms rule The running time seconds given followed relative speedup DPLLDPLL UPs parentheses DPLL UP4 DPLL UP2 CV DPLL 40 45 50 55 60 65 70 75 80 0002 35 0004 18 0007 0001 0001 70 0001 70 0034 32 0073 15 0108 0012 0017 64 0015 72 0394 54 1339 15 2110 0221 0384 55 0377 56 10164 33 21932 15 33843 4632 7343 46 7229 47 112176 23 171548 15 261843 60335 64755 40 64875 40 419782 27 1141163 717444 16 303323 309602 37 380333 30 1859716 28 1975385 26 2912623 18 5136232 3928692 13 2142346 22737991 17490939 13 9060268 25 10335454 22 12303489 18 11016214 51183832 39371538 13 29720075 17 26938421 19 29934167 17 32912432 DPLL UP1234 70 95 94 73 43 38 24 21 16 Fig 2 Effects LP lower bound unweighted max3SAT solving 3SAT In case percentage unit clauses relatively high search making conditions unit propagations easy satisfy unit propagations happen frequently DPLL LP contrary ineffective lowconstrainedness regions overhead running time However shown Fig 2 directly compared DPLL LP DPLL unit propagation running time overhead LP gradu ally compensated pruning provides CV ratio increases making LP effective overconstrained problems As mentioned Section 5 computa tion time required LP linear number constraints problem hand When constrainedness low lineartime overhead costly compared single DPLL node expansion On hand highly constrained situation upper bound α large DPLL LP lower bound search sufﬁciently deep search avenue backtrack resulting large search cost typically exponential search depth DPLL LP hand estimate reasonably accurate h value relatively small overhead overconstrained problems As shown Fig 3a number expanded nodes LP grows slowly LP The different growth rates number expanded nodes LP LP DPLL LP outperform original DPLL overconstrained problems 62 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Fig 3 Expanded nodes DPLL LP b effects assigning weightings unit clauses DPLL LP Both b unweighted max3SAT Note running DPLL LP modiﬁed Moms twosided JW rules Instead weighting ratios 421 2551 assigned 051 weighting ratio Moms rule 021 twosided JW rule As discussed Section 5 need eliminate unit clause DPLL LP assign zero value unit clause weighted variable order The effect zero unit clause weighting Moms rule shown Fig 3b In DPLL LP change weighting ratio 2551 051 CPU time reduced 20 percent lowconstrained regions CV 4 80 percent highconstrained regions CV 8 The similar effect exists twosided JW rule The Moms twosided JW rules affect unit propagations LP lower bound differently As shown Figs 4a 4b Moms rule combined DPLL DPLL UP relatively better performance highly constrained regions CV 6 outperformed twosided JW rule CV ratio increases Note vertical axes ﬁgures logarithmic actual difference run ning time substantial In DPLL DPLL UP Moms rule tends rid unit clauses quickly If CV ratio low upper bound α It likely early increase number violated constraints g result lower bound value exceeding α forcing search backtrack early However CV ratio upper bound α high easy value g h exceed α Therefore Moms rule increase g value early stage search actually produces fewer unit clauses contribute g value search progresses This mainly cause Moms rule weightings binary literal clauses smaller twosided JW rule making difﬁcult nonunit clauses turned unit clauses Therefore Moms rule performs better twosided JW rule underconstrained regions worse overconstrained regions In short results showed Moms twosided JW rules effective different problem constrainedness Our new dynamicweighting variable ordering rule developed combine strengths different conditions Moreover instead statically setting weightings new rule dynamically adjusts weightings based current situation search As results Figs 4a 4b new rule nearly winner different constraint tightness Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 63 Fig 4 Effects different variable orderings unweighted max3SAT Compared DPLL DPLL UP Moms twosided JW rules difference DPLL LP shown Fig 4c Unlike DPLL DPLL UP use g value DPLL LP uses g value h value The g value unit clauses h value contributed binary threeliteral clauses making clauses DPLL LP contribute lower bound Namely matter clause removed early later search process DPLL LP search tree contribute lower bound g value clause removed early h value clause removed later As result matter variable branched early later DPLL LP DPLL LP relatively sensitive variable ordering DPLL DPLL UP 712 Max2SAT problems Compared max3SAT scenario max2SAT relatively simple Most strate gies applicable max2SAT sensitive constrainedness Because literals clause simpliﬁcation problem formula result unit clauses turn unit propagations happen frequently In addition relatively higher percentage unit clauses gives rise higher h values LP lower bound efﬁcient These arguments veriﬁed experimental results In experiments random instances 80 variables CV ratios ranging 2 5 increment 05 For CV ratios 2 3 35 5 100 10 problem instances respectively As shown Fig 5 unit propagation rules effective 64 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Fig 5 Effects unit propagation UP rules unweighted max2SAT For group error bars left right results DPLL DPLL UP1 UP2 UP3 UP4 respectively DPLL UP rules DPLL UP1 Table 3 Effects unit propagation UP rules unweighted max2SAT tested twosided JW rule The running time seconds given followed relative speedup DPLLDPLL UPs parentheses CV DPLL 20 25 30 35 40 45 50 DPLL UP4 0109 0001 1090 0001 1090 2166 0007 3094 0007 3094 18820 0042 4481 0040 4705 127651 0276 4625 0254 5026 394274 1068 3692 1090 3617 1061148 4067 2609 3936 2696 3086905 1442981 21 20246 1525 15846 1948 10457 2952 9634 3204 DPLL UP3 0002 545 0013 1666 0073 2578 0432 2955 1449 2721 4762 2228 DPLL UP2 0001 1090 0019 1140 0113 1442 0657 1943 1965 2006 6284 1689 0032 34 0828 26 8952 21 50205 25 167938 23 482873 22 DPLL UP1234 DPLL UP1 Table 4 Effects unit propagation UP rules unweighted max2SAT tested Moms rule The running time seconds given followed relative speedup DPLLDPLL UPs parentheses DPLL UP1234 DPLL UP4 DPLL UP2 DPLL UP3 CV DPLL 0001 0002 20 900 450 0002 450 0001 900 0015 2918 0042 1042 25 0028 1563 0014 3126 0171 4615 0505 1563 30 0310 2545 0169 4669 2377 4271 5795 1752 35 3694 2743 2246 4519 10064 4032 24543 1654 40 17092 2374 9585 4234 73602 1145 45 42926 1963 57354 1469 40899 2060 203894 1168 124990 1906 110876 2166 896 50 0030 33 1589 28 27526 28 1015202 234585 43 4058255 871081 46 8425353 2161377 39 23822247 6383872 37 261755 0090 4377 78910 strainedness ranges max2SAT In variable ordering unit propagation rule independently reduce DPLLs running time 101000 times combination makes greatest effect constrainedness Moreover unlike max3SAT effectiveness unit propagation rules max2SAT degrade problems come highly constrained See Tables 3 4 detailed performance UP rule As shown Fig 6 DPLL LP effective constrainedness ranges For variable orderings Fig 7 binary clause ﬁrst rule worst DPLL experiments winner nearly situations DPLL UP experiments Since DPLL UP DPLL implement integrated max2SAT algo Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 65 Fig 6 Effects LP lower bound unweighted max2SAT Fig 7 Effects different variable orderings unweighted max2SAT rithm adopt binary clause ﬁrst rule max2SAT All results suggest max2SAT LP lower bound unit propagation rules applied binary clause ﬁrst rule ﬁnal choice 713 Weighted maxSAT We set random maxSAT problems experimented unweighted case clause given random integer weighting uniformly distributed We results combined effects unit propa gation rules weighted max3SAT Fig 8 weighted max2SAT Fig 9 The results conclusions unweighted maxSAT equally valid weighted maxSAT unit propagation rules effective weighted max2SAT moderately constrained weighted max3SAT LP lookahead lower bound effective weighted max2SAT highly constrained weighted max3SAT new dynamic weighting variable ordering effective weighted max3SAT One additional ob servation problem size weighted problems usually easier corresponding unweighted problems seen comparing Figs 1 5 Figs 8 9 respectively 66 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Fig 8 Effects unit propagations UP weighted max3SAT Fig 9 Effects unit propagations b variable ordering weighted max2SAT 72 Integrated algorithm performance Based understanding effects existing strategies heuristics section study efﬁcacy new integrated algorithm MaxSolver To reiterate MaxSolver incorporates extended DPLL new strategies In experiments MaxSolver applied unit propagation rules max2SAT moderately constrained max3SAT cv ratio 3 6 LP lookahead lower bound max2 SAT highly constrained max3SAT cv ratio 6 new dynamic weighting variable ordering max3SAT To fully evaluate performance compared MaxSolver following existing al gorithms maxSAT maximum CSP maxCSP aware source codes available A DPLLbased solver BF developed Borchers Furman 4 A DPLLbased solver AMP developed Alsinet Manya Planes 2 A DPLLbased max2SAT solver SZ_LB4a developed Shen Zhang 39 A Pseudo Boolean Optimization solver PBS21 developed Aloul 1 A Weighted CSPbased solver WCSP developed Givry Larrosa 17 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 67 These algorithms contain known techniques SAT maxSAT max CSP To best knowledge BF AMP SZ_LB4a exact maxSAT solvers implemented C language variants DPLL method Another earlier exact maxSAT solver implemented Wallace 43 Lisp include comparison BF extended DPLL Moms rule simple unit propagation similar weaker UP2 AMP derived BF includes lower bound function described Section 32 uses twosided JW rule SZ_LB4a specialized max2SAT solver powerful max2SAT lower bound However applicable weighted max2SAT PBS specialized 01 ILP solver uses advanced techniques conﬂict diagnosis random restarts improved backtracking cutting planes WCSP encodes maxCSP maxSAT weighted constraint network solves problem stateofart algorithms weighted CSP We default settings solvers PBS VSIDS decision heuristic 34 advised author The results presented viewed comprehensive evaluation existing algorithms maxSAT We random unweighted maxSAT instances generated MWFF package Selman 37 random maxSAT instances Borchers maxSAT library 5 unsatis ﬁable instances SATLIB 25 generated applications planning model checking The results respectively Tables 511 indicates incomplete run 5 hours CPU time For problem class tables list CV ratio r numbers variables V clauses C followed columns running times solvers seconds Unsat Tables 7 8 11 number violated clauses unweighted maxSAT cost Tables 9 10 total weight Table 5 Average CPU times unweighted max2SAT 80 variables CV MaxSolver 20 25 30 35 40 45 50 000 001 004 018 085 389 1300 BF AMP 004 121 5179 68755 36 207 1300 3900 1222800 14000 007 104 1187 8000 48510 207352 461756 66 179 298 449 575 532 355 301 PBS WCSP 003 3013 014 18600 320612 057 159 580 1728 4547 SZ_LB4a 000 001 10 005 13 034 19 162 19 823 21 3273 25 27 14 14 9 7 4 3 Table 6 Average CPU times unweighted max3SAT 80 variables CV 40 45 50 55 60 65 70 75 MaxSolver 000 001 015 425 3800 22800 172300 749300 BF 000 001 019 695 10400 62900 949800 10 10 13 16 27 28 55 AMP 000 114 743 6479 38600 134252 793717 10 873 505 152 102 59 46 PBS 001 4490 16 3563 WCSP 003 118 660 2754 10725 37949 87717 379267 480 904 440 65 28 17 05 05 Table 7 Computation results unweighted max2SAT test problems Borchers library Instance p100 p150 p200 p250 p300 p350 p400 p450 p500 p2200 p2300 p2400 p2500 p2600 p2300 p2450 p2600 V 50 50 50 50 50 50 50 50 50 100 100 100 100 100 150 150 150 C 100 150 200 250 300 350 400 450 500 200 300 400 500 600 300 450 600 Unsat MaxSolver 4 8 16 22 32 41 45 63 66 5 15 29 44 65 4 22 38 001 001 002 002 007 012 009 065 042 008 004 032 1182 10622 006 193 1041 BF 001 004 481 2816 39409 287561 259249 034 57569 008 10 40 2405 1080 56299 239634 288054 425 143923 13 AMP 016 007 083 057 1061 2247 972 9581 3978 088 10616 226125 051 160 70 415 285 1516 1873 1080 1474 948 110 26540 70664 85 PBS 006 164 010 099 60 1640 13 165 WCSP 001 001 002 002 019 029 015 152 080 013 167 1399 153956 276236 128 15496 298756 10 10 10 10 27 24 17 23 19 16 418 437 1303 260 213 803 2870 SZ_LB4a 001 003 003 004 006 010 006 018 014 003 033 088 5072 9564 007 559 4041 10 30 15 20 09 08 07 03 03 04 83 28 43 09 12 29 39 6 8 Z X n g W Z h n g A r t ﬁ c l I n t e l l g e n c e 1 6 4 2 0 0 5 4 7 8 0 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 69 BF PBS Unsat MaxSolver Table 8 Computation results unweighted max3SAT test problems Borchers library Instance V p3250 p3300 p3350 p3400 p3450 p3500 p3500 p3550 p3600 p3675 p3750 AMP 396 1320 001 03 315 010 08 653 23 781 4471 35 2374 25069 73 4286 15074 73 2984 C 2 50 250 4 50 300 50 350 8 50 400 11 50 450 15 50 500 15 4 100 500 5 100 550 8 100 600 2 150 675 5 150 750 73 022 262 12130 10108 28 19 12 14 003 012 284 1273 3449 2069 887 3719 291341 818 234304 827 09 4101 11 638555 22 348 04 277547 12 WCSP 002 018 112 299 386 248 10359 22197 314986 07 14 04 02 01 01 117 60 11 141954 1738 BF PBS AMP WCSP C Cost MaxSolver 003 005 058 597 2277 Table 9 Computation results weighted max2SAT test problems Borchers library Instance V 007 16 wp2100 50 100 009 34 wp2150 50 150 011 69 wp2200 50 200 017 wp2250 50 250 96 023 wp2300 50 300 132 092 wp2350 50 350 211 038 wp2400 50 400 211 067 wp2450 50 450 257 188 wp2500 50 500 318 005 7 wp2200 100 200 029 wp2300 100 300 67 694 wp2400 100 400 119 53237 wp2500 100 500 241 28976 wp2600 100 600 266 024 24 wp2300 150 300 wp2450 150 450 5348 79 wp2600 150 600 189 352752 001 01 04 003 06 004 001 01 04 76 068 004 001 01 15 22025 20023 016 003 02 52 088 004 02 126 55 029 03 2832 308 007 02 916 241 009 01 812 121 036 02 001 4230 225 001 02 010 20 046 16 2305 795 372847 5372 1535 529 22061 04 14537 05 094 39 61 1136 147 18 473 3235 06 532110 15 04 06 53 351 990 107874 11725 53297 14026 172042 25678 514121 27347 20 8656 2985 685752 1282 575242 1076 043 010 Table 10 Computation results weighted max3SAT test problems Borchers library V Instance 50 wp3250 50 wp3300 50 wp3350 50 wp3400 50 wp3450 wp3500 50 wp3500 100 wp3600 100 wp3675 150 wp3750 150 PBS C Cost MaxSolver BF 250 300 350 400 450 500 300 600 675 750 004 007 021 053 037 2115 016 4513 028 217 1 13 25 33 35 77 6 26 2 5 006 011 069 170 152 14344 052 21394 15 16 33 32 41 68 5073 24 32 47 396 141 79 1709 AMP 03 006 15 189 014 20 113 54 24291 307 58 704320 132891 82538 203 55 305390 3737 2336 87706 001 132 51011 31324 WCSP 001 007 031 053 029 412 139 31366 03 10 15 10 08 02 87 70 871 311 9499 438 70 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Table 11 CPU times unsatisﬁable SATLIB instances C Unsat MaxSolver BF AMP PBS WCSP V Instance 100 850 2 jnh8 100 850 2 jnh9 100 850 2 jnh14 100 800 2 jnh211 100 900 3 jnh307 100 900 2 jnh308 50 100 1 aim5020no1 50 100 1 aim5020no2 aim5020no3 50 100 1 aim10016no1 100 160 1 60 160 1 pret6040 60 160 1 pret6060 60 160 1 pret6075 75 200 1 dubois25 90 240 1 dubois30 001 002 001 001 002 004 006 003 003 64925 327 335 412 1677 221763 004 40 005 25 003 30 003 30 032 160 006 15 002 03 002 07 002 07 032 320 118 1180 289 2890 032 160 165 825 290 1450 031 310 31 3100 238 2380 031 310 089 890 160 1600 076 380 2480 12400 397 1985 038 95 359 898 661 1652 010 17 25 015 02 001 007 23 13 004 03 001 009 30 20 03 001 006 44955 07 104719 16 10 00 67072 001 1049 32 468 14 8527 261 00 001 1053 31 469 19 8507 254 00 014 462 11 1059 26 00 001 8494 206 9931 59 23481 140 00 235837 1406 021 294750 13 728033 33 6442 00 violated clauses weighted maxSAT The numbers parentheses MaxSolvers relative speedups best existing method For random unweighted max2SAT Tables 5 7 BF degrades quickly CV ratio increases As BF solver max2SAT Moms rule applied poor performance indicates Moms rule ineffective max2SAT Maxsolver faster AMP implies unit propagation rules dramatically reduce node expansions LP lower bound effective SZ_LB4a performs second best instances Borchers library Table 7 indicates SZ_LB4as special lower bound function efﬁcient max2SAT The nonDPLL solvers PBS WCSP perform worse MaxSolver PBS unable solver problems moderate degree constrainedness For random max3SAT Tables 6 8 BF performs better max 2SAT competitive CV ratio low However degrades faster MaxSolver AMP CV ratio increases indicating Moms rule max3SAT effective LP lower bound comes effective CV ratio increases WCSP efﬁcient MaxSolver max2SAT problem size exceeds 100 variables PBS competitive max3SAT For random weighted max2SAT Table 9 weighted max3SAT Table 10 stances Borchers maxSAT library 5 compared MaxSolver BF WCSP algorithms apply In Table 9 WCSP outperforms MaxSolver BF 13 17 instances However instances WCSP wins small sizes high constrainedness For large problems moderate constrainedness Max Solver winner MaxSolver signiﬁcantly superior BF Table 9 mainly tremendous effects new UP4 unit propagation rule Moreover UP4 rule comes increasingly effective constrainedness increases In Table 10 effect UP4 rule moderate weighted max3SAT MaxSolver substantially outperform BF WCSP cases Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 71 MaxSolver outperforms solvers instances SATLIB As shown Table 11 jnh instances best solved MaxSolver For pret instances dubois25 PBS winner Note PBS orders magnitude slower Max Solver jnh instances unsatisﬁable clauses This matches results Tables 5 6 PBS worst highly overconstrained problems Therefore PBS suitable hard maxSAT worse MaxSolver suitable lowconstrained special structure instances WCSP worse MaxSolver instances tested originally developed maxCSP Finally MaxSolver outperforms BP AMP nearly problem solves reasonable time Therefore results indicate MaxSolver developed based random maxSAT works fairly instances special structures embedded In summary results MaxSolver improving strategies effective maxSAT problems outperforming ﬁve existing algorithms random maxSAT instances SATLIB orders magnitude reduction running time 8 Related work discussions A tremendous research devoted SAT In section discuss previous works maxSAT exact algorithm maxSAT 81 Exact algorithms maxSAT There different types exact algorithms maxSAT The pop ular extended DPLL algorithm based BranchandBound procedure So far known existing DPLLbased maxSAT algorithms include BF 4 AMP 2 SZ lower bound functions LB3 LB4 LB4a cho sen 39 Our MaxSolver belongs category The second type ORbased Pseudo Boolean algorithm like PBS 12 The type weighted CSPbased algorithm like WCSP 17 Freuder Wallace carried early signiﬁcant study overconstrained sat isfaction problems directly extending techniques constraint satisfaction 1443 They proposed number basic ideas constructing DPLLbased exact maxSAT solver discussed Section 3 In BF algorithm 4 Borchchers Furman ﬁrst applied local search obtain initial upper bound exact maxSAT algorithm This idea obtaining good initial upper bound adopted nearly exact maxSAT algorithm Based BF algorithm Alsinet Manya Planes introduced lower bound function sided JW rule variable ordering AMP 2 In SZ_LB4a Shen Zhang developed novel effective lower bound function max2SAT 39 We extend improve DPLLbased maxSAT paradigm MaxSolver algorithm aspects unit propagation lower bound function variable ordering 72 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 PBS ORbased Pseudo Boolean algorithm 12 It efﬁcient critically strained problems performance degrades greatly overconstrained problems WCSP weighted CSPbased algorithm 17 Its performance improves constrainedness increases However WCSP outperformed MaxSolver large problems More WCSP efﬁcient max2SAT max3SAT 82 Analysis maxSAT Niedermeier Rossmanith analyzed complexity particular exact maxSAT algorithm 35 They proved time complexity algorithm OF 13803K F total number literals formula F conjunctive normal form K number clauses They proved time bounds OF 13995k k maximum number satisﬁable clauses O11279F problem For max2SAT results imply bound O12722k Zhang studied relationship phase transitions SAT decision problem backbones variables ﬁxed values optimal solutions maxSAT op timization problem 47 His results suggest backbone maxSAT order parameter problem hardness Shen Zhang studied phase transitions max2SAT 40 empirically examined results phase transitions 7 83 Unit propagation The existing unit propagation rules UP1 UP2 UP3 summarized paper considered previous studies The unit propagation rule UP1 rule similar UP2 studied 24246 UP3 ﬁrst proposed Niedermeier Rossmanith 35 applied max2SAT 46 Niedermeier Rossmanith presented set transformation splitting rules order provide worst case complexity maxSAT 35 However conditions rules difﬁcult satisfy In paper provide extensive comparative analysis rules Our new unit propagation rule UP4 developed based idea formulating maxSAT nonlinear program The combination rules shown efﬁcient experiments Note ﬁrst nonlinear 01 formulation maxSAT suggested Hammer Rudeanu earlier 19 84 Lower bounds LP ILP heuristics Joy Mitchell Borchers ﬁrst apply ILP maxSAT 28 They showed ILPbased solver able outperform DPLLbased solvers max2 SAT However applied max3SAT ILPbased solver slower DPLLbased algorithm Blair Jeroslow Lowe applied LP SAT 3 However bounds obtained tight compared bounds applying ILP Hooker speculated better bounds LP possible 22 In paper proposed use LP maxSAT successfully showed power max3SAT ﬁrst time Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 73 85 Variable ordering Little research variable ordering maxSAT work 43 effects applying inmostunitclause inmostshortestclause heuristics small random unweighted maxSAT 25 variables Our binaryclause ﬁrst dynamic weighting variable ordering heuristics novel The binaryclause ﬁrst heuristic able advantage strong unit propagations lower bound functions max 2SAT problem instances dynamic variable ordering heuristic able adjust according problem characteristics cope different constraint situations max3 SAT problem instances 86 Weighted maxSAT In contrast effort devoted SAT unweighted maxSAT research weighted maxSAT limited In addition BF WCSP algorithms compared paper relevant previous work branchandcut algorithm weighted maxSAT 28 We include branchandcut algorithm analysis compatible BF algorithm discussed 28 9 Conclusions future work MaxSAT important problem realworld applications However existing algorithms maxSAT typically restricted simple problems small numbers variables low constrainedness The main contributions research novel unit propagation rule maxSAT based integer nonlinear programming mulation problem efﬁcient lower bound function based linear programming effective variable ordering heuristics designed speciﬁcally maxSAT The key results paper effective methods maxSAT algorithm inte grates methods solving hard maxSAT instances The methods set unit propagation rules linearprogramming based lookahead lower bound new variable ordering rules We new integrated algorithm maxSAT MaxSolver We experimentally showed new strategies MaxSolver effective different max2SAT max3SAT problems MaxSolver signiﬁcantly superior ﬁve existing stateoftheart algorithms maxSAT MaxSolver able signiﬁcantly perform existing algorithms orders magnitude improvement random maxSAT instances maxSAT instances converted real application domains As future plan apply MaxSolver overconstrained realworld appli cations For example Maximum Probable Explanation MPE problem Bayesian Networks formulated weighted maxSAT subsequently solved approx imately approximation maxSAT algorithm 36 We plan optimally solve large MPE problems new MaxSolver 74 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Acknowledgements Many thanks Zhongsheng Guo early implementation DPLL algorithm Fadi Aloul Javier Larrosa Haiou Shen Jordi Plane making programs available research John Hagar careful reading paper reviewers paper early version 45 constructive comments suggestions helped improve research presentation paper This research supported US National Science Foundation Grants IIS0196057 EIA0113618 ITR program US Defense Research Projects Agency Air Force Research Laboratory Air Force Material Command USAF der Cooperative Agreements F306020020531 F3361501C1897 The views conclusions authors interpreted necessarily representing ofﬁcial policies endorsements expressed implied US Government Appendix A Proof dominating unitclause rule UP3 Dominating unitclause rule If p1v cid1 k i1 niv set v T ignore v F k i1 piv set v F ignore v T If conditions hold If n1v cid1 p1v n1v set v T v F ignore value cid5 cid5 Our proof starts nonlinear formulation maxSAT introduced Section 2 For clarity consider max2SAT The proof maxkSAT k cid1 3 essentially lengthy Speciﬁcally prove p1v cid1 n1v n2v setting v T ignoring v F miss optimal solution The case n1v cid1 p1v p2v symmetric Following discussion nonlinear formulation maxSAT Section 22 introduce integer variable takes value 0 1 present Boolean variable takes value F T The problem max2SAT contain unit clauses minimize objective function W mcid1 i1 wiyi A1 m number clauses wi weight ith clause yi decision variable ith clause subject following constraints cid6 yi 1 fi fi li1 fi li1 li2 li1li2 ith clause unit clause ith clause binary clause A2 1 2 m li1 li2 01 integers corresponding Boolean variables ith clause Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 75 The restrictions A2 directly objective function A1 Let Ck sets clauses k literals k 1 2 let ci ith clause The objective function A1 rewritten W mcid1 i1 wi1 fi mcid1 i1 wi cid1 ci C2 wili1 li2 li1li2 cid1 ci C1 wili1 A3 To minimize W separate positive negative literals Let Ckvj Ck Ck vj Ck sets kliteral clauses contain literal vj vj respectively As discussed Section 21 represent positive literal vi integer variable xj negative literal vj integer expression 1 xj Furthermore Boolean variable vj unit binary clauses We consider clauses vj turn If vj positive literal corresponding integer variable xj unit clauses wili1 wixj p1vj xj A4 cid1 ci C1vj ci C1vj cid1 cid1 If vj positive literal corresponding integer variable xj binary clauses wili1 li2 li1li2 wixj li2 xj li2 cid1 ci C2vj cid1 cid1 wili2 ci C2vj wili2xj p2vj xj A5 ci C2vj ci C2vj For cases vj negative literal corresponding 1 xj cid1 ci C1vj cid1 ci C2 vj wili1 n1vj n1vj xj A6 wili1 li2 li1li2 n2vj cid1 ci C2 vj wili2xj n2vj xj A7 We focus coefﬁcient Fxj integer variable xj From A4 A7 summing coefﬁcient xj case cid1 cid1 Fxj n1vj n2vj p1vj p2vj wili2 wili2 cid5 Because ci C2vj wili2 cid2 p2vj n1vj p1vj p2vj cid2 Fxj cid5 iC2vj iC2 vj ci C2vj wili2 cid2 n2xj cid2 n1vj n2vj p1vj If p1vj cid1 n1vj n2vj Fxj positive minimize objective func tion W xj value 1 vj T If n1vj cid1 p1vj p2vj Fxj negative minimize W xj value 0 vj F This concludes proof 76 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 Appendix B Derivation coefﬁcientdetermining propagation rule UP4 Coefﬁcientdetermining propagation rule For uninstantiated variable vi corresponding integer variable xi LBxi cid1 0 set vi F ignore vi T UBxi cid2 0 set vi T ignore vi F conditions hold UBxi LBxi set vi T vi F ignore value To derive rule UP4 ﬁrst introduce lower bound LBxi upper bound UBxi coefﬁcient Fxi variable xi 1 cid2 cid2 n LBxi cid2 Fxi cid2 UBxi To derive LBxi UBxi ﬁrst represent objective function W way ﬁnal nonlinear formula contains variables xi From objective function Eq 1 Section 22 W mcid1 i1 wiyi c max2SAT W mcid1 i1 wiyi c cid1 xi V cid1 xi V πixi cid1 xi xj V πij xixj B1 cid1 πixi πij xixj cid1 xi xj V xi xj xkV πijkxixj xk B2 max3SAT We derive LBxi UBxi coefﬁcient Fxi xi We sider max2SAT max3SAT separately B1 Upper lower bounds max2SAT For max2SAT Eq B1 Fxi πi πi cid1 πij xj xj V xi cid1 xj V xi πij 0 cid5 Note cid1 πij xj πij xj B3 xj V xi πij 0 cid5 xj V xi πij 0 πij xj cid1 0 xj V xi πij 0 πij xj cid2 0 Therefore cid5 cid5 UBxi πi LBxi πi LBxi cid2 Fxi cid2 UBxi xj V xi πij 0 πij xj V xi πij 0 πij B2 Upper lower bounds max3SAT For max3SAT Eq B2 write cid1 cid1 Fxi πi πij xj πijkxj xk B4 xj V xi xj xkV xi Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 77 The main difference Fxi Eq B3 Fxi Eq B4 linear function xj s quadratic Since Fxi quadratic max3SAT derive linear upper bound Fxi deﬁne cid1 Fxi possible assignments Similarly Fxi satisﬁes F r linear roof F r xi xi deﬁne linear ﬂoor F f xi satisfying F f cid2 Fxi possible assignments Similar xi deﬁnitions linear roof linear ﬂoor introduced earlier Hammer et al 18 As bound quadratic Fxi difﬁcult use upper bound F r bound Fxi xi lower bound F f xi bound Fxi In remaining discussion consider F r xi corresponding bounds F l xi A simple method generate F r xi xi ﬁrst relax individual quadratic term πijkxj xk Fxi linear term sum resulting linear terms By expect linear terms cancel arrive tighter bound To relax quadratic term linear apply set inequalities introduced Hammer et al 18 speciﬁcally F f cid2 πijkxj xk cid2 λπijkxj 1 λπijkxk πijkxj xk cid2 λπijkxj xk 1 πijk 0 πijk 0 cid2 πijkxj xk cid1 λπijkxj xk 1 πijkxj xk cid1 λπijkxj 1 λπijkxk πijk 0 πijk 0 B5 B6 xj xk 01 integer variables λ real value satisfying 0 cid2 λ cid2 1 The proof sets inequalities straightforward 18 We apply inequality B5 relaxing quadratic term πijkxj xk linear term computing upper bound inequality B5 lower bound We consider upper bound ﬁrst Recall πijkxj xk quadratic term Fxi πij xj πikxk linear terms involving xj xk Without loss generality assume πij cid2 πik We apply inequality B5 relaxing πijkxj xk linear function λ taken follows λ πikπij 2πijk 1 1 2 0 πij πijk 1 πijk 0 πijk cid2 πik πij πijk 0 πijk πik πij πijk 0 πij cid2 0 πijk 0 0 πij πijk πijk 0 πij cid1 πijk The intention Eq B7 try cancel partially cancel resulting linear term existing linear term Fxi possible tight linear upper bound F r If πijk 0 ﬁrst values Eq B7 xi values chosen B7 By applying λ Eq B7 inequality B5 summing terms different xj cid2 F r xi ij xj Following discussion deriving bounds ij xj V xi π r xk obtain linear function F r xi written F r xi max2SAT Section B1 UBxi π r Fxi Fxi cid5 Linear function F r xi xj V xi π r cid2 UBxi ij 0 π r π r cid5 cid2 F r xi 78 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 The case lower bound similar symmetric case upper bound considered Speciﬁcally loss generality assuming πij cid2 πik choose λ follows λ 0 πik πijk 1 0 1 2 πikπij 2πijk πijk 0 πik cid1 0 πijk 0 πik 0 πik cid2 πijk πijk 0 πik 0 πik πijk πijk 0 πijk cid2 πik πij πijk 0 πijk πik πij B8 By applying λ Eq B8 inequality B6 write F f xi F f xi LBxi π f ij xj cid2 Fxi By reasoning lower bound max2SAT ij LBxi cid2 F f π f xi xj V xi π f cid2 Fxi π f cid5 xj V xi π f ij 0 cid5 Putting pieces ﬁnally cid5 UBxi π r LBxi π f LBxi cid2 Fxi cid5 xj V xi π r cid2 UBxi xj V xi π f ij 0 π r ij π f ij ij 0 B3 Coefﬁcientdetermining propagation rule For UBxi LBxi max2SAT max3SAT problems UBxi cid2 m 0 Fxi positive minimize objective W i1 wiyi xi value 1 vi T If LBxi cid1 0 Fxi negative minimize W xi value 0 vi F This concludes proof cid5 References 1 F Aloul A Ramani I Markov K Sakallah Generic ILP versus specialized 01 ILP update Inter national Conference Computer Aided Design ICCAD 2002 2 T Alsinet F Manya J Planes Improved branch bound algorithms MaxSAT Proceedings SAT2003 2003 3 CE Blair RG Jeroslow JK Lowe Some results experiments programming techniques prepo sitional logic Comput Oper Res 13 5 1986 633645 4 B Borchchers J Furman A twophase exact algorithm MaxSAT weighted MaxSAT problems J Combin Optim 2 4 1999 299306 5 httpwwwnmteduborchersmaxsathtml 6 S Cook The complexity theoremproving procedures Proceedings 3rd ACM Symposium Theory Computing 1971 pp 151158 7 D Coppersmith D Gamarnik M Hajiaghayi GB Sorkin Random MAX SAT random MAX CUT phase transitions Proceedings 14th Annual ACMSIAM Symposium Discrete Algorithms 2003 pp 364373 8 JM Crawford LD Auton Experimental results crossover point satisﬁability problems Pro ceedings AAAI93 Washington DC 1993 pp 2127 9 GB Dantzig MN Thapa Linear Programming 1 Introduction Springer New York 1997 10 M Davis G Logemann D Loveland A machine program theorem proving C ACM 5 1962 394397 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 79 11 M Davis H Putnam A computing procedure quantiﬁcation theory J ACM 7 1960 201215 12 H Dixon ML Ginsberg Inference methods pseudoboolean satisﬁability solver Proceedings AAAI02 Edmonton AB 2002 pp 635640 13 JW Freeman Improvements propositional satisﬁability search algorithms PhD thesis Univ Pennsyl vania 1995 14 EC Freuder RJ Wallace Partial constraint satisfaction Artiﬁcial Intelligence 58 1992 2170 15 MR Garey DS Johnson Computers Intractability Freeman New York 1979 16 PE Gill W Murray MA Saunders JA Tomlin MH Wright On projected Newton barrier methods linear programming equivalence Karmarkars projective method Math Programming 26 1986 183209 17 SD Givry J Larrosa P Meseguer T Schiex Solving MaxSAT weighted CSP Proceedings 9th International Conference Principles Practice Constraint Programming CP2003 2003 pp 363 376 18 PL Hammer P Hansen B Simeone Roof duality complementation persistency quadratic 01 opti mization Math Programming 28 1984 121155 19 PL Hammer S Rudeanu Boolean Methods Operations Research Related Areas Springer Berlin 1968 20 P Hansen B Jaumard Algorithm maximum satisﬁability problem Computing 44 1990 279303 21 FS Hillier GJ Lieberman Introduction Operations Research McGrawHill New York 2001 22 JN Hooker Input proofs rank cuttingplanes ORSA J Comput 1 1989 137145 23 JN Hooker G Fedjki Branchandcut solution inference problems prepositional logic Ann Math Artiﬁcial Intelligence 1 1990 123139 24 JN Hooker V Vinay Branching rules satisﬁability J Automated Reasoning 15 1995 359383 25 HH Hoos T Stuzle httpwwwsatliborg 1999 26 httpwwwilogcomproductscplex 27 DS Johnson Approximation algorithms combinatorial problems J Comput System Sci 9 1974 256 278 28 S Joy J Mitchell B Borchers A branch cut algorithm MaxSAT weighted MaxSAT D Du J Gu PM Pardalos Eds Satisﬁability Problem Theory Applications 1997 pp 519536 29 R Karp Reducibility combinatorial problems R Miller J Thatcher Eds Complexity Com puter Computations Plenum Press New York 1992 pp 85103 30 CM Li Anbulagan Heuristics based unit propagation satisﬁability problems Proceedings IJCAI97 Nagoya Japan 1997 pp 366371 31 CL Liu Introduction Combinatorial Mathematics McGrawHill New York 1968 32 D McAllester B Selman H Kautz Evidence invariants local search Proceedings AAAI97 Providence RI 1997 pp 321326 33 DB Mitchell B Selman H Levesque Hare easy distributions SAT problems Proceedings AAAI93 Washington DC 1993 pp 459465 34 M Moskewics C Madigan Y Zhao L Zhang S Malik Chaff engineering efﬁcient SAT solver Proceedings Design Automation Conference 2001 35 R Niedermeier P Rossmanith New upper bounds maximum satisﬁability J Algorithm 36 2000 63 88 36 JD Park Using weighted MAXSAT engines solve MPE Proceedings AAAI02 Edmonton AB 2002 pp 682687 37 B Selman Mwff Program generating random max kSAT instances Available DIMACS 38 B Selman H Kautz B Cohen Noise strategies local search Proceedings AAAI94 Seattle WA 1994 pp 337343 39 H Shen H Zhang Study lower bound functions Max2SAT Proceedings AAAI02 Edmonton AB 2002 pp 185190 40 H Shen H Zhang An empirical study Max2SAT phase transitions Proceedings LICS Workshop Phase Transitions 2003 41 DA Spielman S Teng Smoothed analysis algorithms simplex algorithm usually takes polyno mial time J ACM 51 1 2004 385463 80 Z Xing W Zhang Artiﬁcial Intelligence 164 2005 4780 42 RJ Wallace Enhancing maximum satisﬁability algorithms pure literal strategies 11th Canadian Conf AI 1996 43 RJ Wallace EC Freuder Comparative study constraint satisfaction DavisPutnam algorithms maximum satisﬁability problems D Johnson M Trick Eds Cliques Coloring Satisﬁability 1996 pp 587615 44 JP Walser Integer Optimization Local Search Springer Berlin 1999 45 Z Xing W Zhang Efﬁcient strategies weighted maximum satisﬁability Proceedings 10th Inter national Conference Principles Practice Constraint Programming CP2004 2004 pp 690705 46 H Zhang H Shen F Manya Exact algorithms MaxSAT Workshop FirstOrder Theorem Proving FTP03 2003 47 W Zhang Phase transitions backbones 3SAT maximum 3SAT Proceedings 7th Interna tional Conference Principles Practice Constraint Programming CP2001 2001 pp 155167