Artiﬁcial Intelligence 172 2008 9911017 wwwelseviercomlocateartint On propositional deﬁnability Jérôme Lang Pierre Marquis b IRIT CNRS Université Paul Sabatier 118 route Narbonne 31062 Toulouse France b CRIL CNRS Université dArtois rue Jean Souvraz SP 18 62307 Lens France Received 21 November 2006 received revised form 19 December 2007 accepted 28 December 2007 Available online 11 January 2008 Abstract In standard propositional logic logical deﬁnability ability derive truth value propositional symbols given propositional formula truth values propositional symbols Although appearing informally AI settings computationoriented investigation notion lacking paper aims ﬁlling gap After recalling deﬁnitions deﬁnability equivalent standard propositional logic based different intuitions deﬁning number related notions characterization results complexity results deﬁnability We close connections hypothesis discriminability reasoning action change 2008 Elsevier BV All rights reserved Keywords Knowledge representation Propositional logic Computational complexity Deﬁnability Hypothesis discriminability Reasoning action change 1 Introduction When reasoning knowledge represented propositional logic exhibiting structure great help By structure mean relationships exist sets propositional symbols andor formulas propositional formula cid2 Such relationships known names including dependency rele vance novelty controllability investigated 12 In paper focus additional form dependency called deﬁnability Deﬁnability captures different intuitions implicit deﬁnability explicit deﬁnability A propositional symbol y implicitly deﬁned given formula cid2 terms set X propositional symbols knowledge truth values propositional symbols X enables concluding truth value y y explicitly deﬁned cid2 terms X exists formula cid3X built X cid3X equivalent y cid2 This paper extended revised version parts papers Complexity results independence deﬁnability propositional logic appeared Proceedings Sixth International Conference Principles Knowledge Representation Reasoning KR98 pages 356367 Two forms dependence propositional logic Controllability deﬁnability appeared Proceedings Fifteenth National Conference Artiﬁcial Intelligence AAAI98 pages 268273 Corresponding author Email addresses langiritfr J Lang marquiscrilunivartoisfr P Marquis 00043702 matter 2008 Elsevier BV All rights reserved doi101016jartint200712003 992 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Table 1 The complexity DEFINABILITY Fragment C DEFINABILITY PROPPS general case DNNF qHornCNF IP coNPc P P coNPc Deﬁnability acknowledged important logical concept decades It closely related CraigLyndon interpolation theorem 3 Many studies logic determining given logic standard modal propositional ﬁrstorder satisﬁes basic Beth property theory implicitly deﬁnes symbol terms explicit deﬁnition symbol terms stronger projective Beth property implicit deﬁnability explicit deﬁnability coincide Thus classical ﬁrstorder logic satisﬁes basic Beth property famous Beths theorem 4 projective instance ﬁrstorder logic ﬁnite structures 5 Standard propositional logic known satisfy projective Beth property In paper consider ﬁnability standard propositional logic computational point view We present characterization complexity results prove useful AI applications including hypothesis discrimination reasoning actions change From computational point view results concern time space complexity As time complexity mainly considered decision problem DEFINABILITY consists determining given formula cid2 deﬁnes given symbol y generally given set Y symbols terms given set X symbols We identify complexity general case restrictions induced number propositional fragments formally deﬁned Section 2 proved AI contexts 69 results summarized Table 1 While table shows deﬁnability problem intractable general case P NP shows The main propositional fragments tractable SAT tractable DEFINABILITY Indeed DNNF contains DNF formulas OBDD formulas qHornCNF contains renamable Horn CNF formulas The fact large propositional fragments including complete ones fragments propositional formula equivalent DNNF great value practical perspective Nevertheless tractability SAT ensuring tractability DEFINABILITY Thus Blake frag ment IP tractable SAT likely DEFINABILITY We identify sufﬁcient conditions referred stability conditions propositional fragment tractable SAT tractable DEFINABILITY About space complexity focus size deﬁnitions general case size explicit deﬁnition symbol y terms set symbols X cid2 polynomially bounded input size We identiﬁed sufﬁcient conditions polytime conditioning polytime forgetting propositional fragments ensuring deﬁnitions computed polynomial time polynomial size deﬁnitions exist Interestingly inﬂuential DNNF fragment satisﬁes Blake fragment IP The result IP shows case computing explicit deﬁnition y X cid2 easy knows deﬁnition exists deciding exists hard The rest paper organized follows In Section 2 necessary background propositional logic computational complexity In Section 3 notion deﬁnability presented number related notions including notions minimal deﬁning family base undeﬁnable symbol necessary symbol relevant symbol notion unambiguous deﬁnability We notions relate connected previous concepts especially variable forgetting 210 notions weakest sufﬁcient strongest necessary conditions 11 In Section 4 number complexity results deﬁnability related notions We identify number tractable restrictions decision problems consideration We report complexity results size explicit deﬁnitions present algorithm J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 993 computing base In Section 5 deﬁnability closely related hypothesis discriminability In Section 6 explain important issues reasoning action change characterized terms deﬁnability In Section 7 brieﬂy sketch deﬁnability prove useful automated reasoning In Section 8 relate results literature Finally Section 9 concludes paper 2 Formal preliminaries 21 Propositional logic Let PS ﬁnite set propositional symbols called variables PROPPS DAGbased propositional language built PS connectives Boolean constants true false usual way Subsets PS denoted X Y For X PS PROPX denotes sublanguage PROPPS generated propositional symbols X From cid2 denotes ﬁnite set propositional formulas PROPPS Varcid2 set propositional symbols appearing cid2 cid2 size cid2 number symbols write Elements PS denoted x y Speciﬁc formulas PROPPS literal symbol x PS positive literal negated x negative literal x x complementary literals A clause resp term disjunction resp conjunction literals constant false resp true A Conjunctive Normal Form formula short CNF formula conjunction clauses A Disjunctive Normal Form formula short DNF formula disjunction terms A CNF formula Krom 12 clause contains literals A Krom formula said 2CNF formula quadratic formula A CNF formula Horn 13 clause contains positive literal A CNF formula cid2 renamable Horn 14 exists Horn renaming set V symbols v replacing occurrence v V resp v cid2 complementary literal v resp v leads Horn CNF formula A CNF formula cid2 QHpartition 6 exists partition Q H Varcid2 st clause δ cid2 following conditions hold δ contains variables Q δ contains positive literal H δ contains positive literal H contains variable Q A CNF formula cid2 qHorn 6 exists qHorn renaming set V symbols v replacing cid2 occurrence positive literal v resp negative literal v complementary literal v resp v leads CNF formula having QHpartition Q H The propositional fragment qHornCNF set qHorn formulas PROPPS includes Krom formulas H renamable Horn CNF formulas Q proper subsets A Negation Normal Form formula short NNF formula formula cid2 built PS connectives Boolean constants true false scope occurrence cid2 symbol Boolean constant Thus CNF resp DNF formula NNF formula An NNF formula cid2 decomposable DNNF formula 79 subformula cid2 form ϕ ψ Varϕ Varψ Obviously DNF formula DNNF formula converse hold DNNF propositional fragment containing DNNF formulas PROPPS Formulas PROPPS interpreted standard usual way Full instantiations propositional symbols PS BOOL 0 1 worlds denoted cid11ω set denoted cid8 Any world satisfying given formula ϕ said model ϕ Full instantiations propositional symbols X PS denoted cid11x called X worlds set denoted cid8X We shall identify cid11x corresponding canonical conjunction literals X order simplify notations instance X b cid11x 1 b 0 write cid11x b We shall identify ﬁnite set formulas conjunction formulas set denotes logical entailment denotes logical equivalence If cid2 cid3 cid9 PROPPS cid3 cid9 said cid2equivalent cid2 cid3 cid9 Assuming worlds represented subsets variables satisfy cid11ω given x PS cid11ωx 1 Horn envelope Horn CNF formula cid2 smallest set models wrt setinclusion cid2 994 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Varcid2 intersection closure1 set models cid2 A qHorn envelope qHorn CNF formula cid2 QHpartition smallest set wrt setinclusion models cid2 Varcid2 QHconvolution closure set models cid2 15 details In order avoid heavy notations abuse notations write x instead x For formula cid3 PROPPS propositional symbol x PS cid3x0 resp cid3x1 formula obtained replacing cid3 occurrence x constant false resp true More generally γ satisﬁable conjunction literals conditioning cid2γ cid2 γ formula obtained replacing cid2 occurrence positive literal x γ true occurrence negative literal x γ false An implicate resp implicant formula cid2 clause δ resp conjunction literals γ logical consequence cid2 resp cid2 logical consequence γ A prime implicate resp prime implicant cid2 logically strongest implicates resp logically weakest implicants A formula cid2 prime implicates normal form Blake formula prime formula 16 CNF formula clauses prime implicates cid2 representative equivalence class IP propositional fragment containing Blake formulas Example 1 b b c NNF formula DNNF formula CNF formula b c c d DNNF formula DNF formula CNF formula b d DNF formula b c b c d CNF formula DNNF qHorn CNF Blake b c b c Blake formula DNNF qHorn CNF b c b c b c d e b d e c d e d e f qHorn CNF formula DNNF Blake renamable Horn CNF Krom b c d renamable Horn CNF formula DNNF Horn CNF Krom Blake b b c d Horn CNF formula DNNF Krom Blake b b c Krom formula DNNF Horn CNF Blake For propositional fragments listed section recognition problem tractable exists deterministic polynomial time algorithm determining given propositional formula belongs fragment This obvious fragments qHornCNF subset consisting renamable Horn CNF formulas lesser extent IP For qHornCNF 617 IP comes correctness resolutionbased prime implicates algorithm like Tisons 18 CNF formula cid2 Blake clauses resolvent exists clause cid2 implies clause cid2 implied clause cid2 Unlike PROPPS subsets set CNF formulas qHornCNF DNNF IP known tractable satisﬁability problem SAT means fragments exists deterministic polynomial time algorithm determining given formula fragment satisﬁable For instance order determine Blake formula satisﬁable check reduce false clause direct consequence deﬁnition Blake formula For qHornCNF DNNF fragments respectively 6 79 22 Computational complexity We assume reader familiar basic notions computational complexity especially com plexity classes P NP coNP basic decision problems SAT UNSAT restrictions 1 The intersection closure C set S smallest set wrt S C e1 e2 C e1 e2 C J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 995 cid2 CNF formulas noted CNFSAT CNFUNSAT classes cid11p kcid20 cid12p kcid20 cid11p Let recall decision problem said kth level PH belongs cid11p k 19 details k cid12p kcid20 cid2p k cid2p k polynomial hierarchy PH cid2 cid2 k k k1 cid2p k hard cid12p k hard It wellknown exists 0 cid2p PH said collapse level It strongly believed PH collapse level truly inﬁnite hierarchy integer k PH cid15 cid2p k j cid2p j BH2 known DP class languages L L L1 L2 L1 NP L2 coNP The canonical BH2complete problem SATUNSAT pair formulas cid16ϕ ψcid17 SATUNSAT ϕ satisﬁable ψ This class belongs Boolean hierarchy NP coNP BH2 strictly contains NP coNP cid12p cid12p j cid2p An advicetaking Turing machine Turing machine associated special advice oracle A function necessarily recursive On input s special advice tape automatically loaded As computation proceeds normal based inputs s As An advicetaking Turing machine uses polynomial advice advice oracle A satisﬁes An cid2 pn ﬁxed polynomial p nonnegative integers n ﬁnally Ppoly class languages decided polynomial time deterministic Turing machines augmented polynomial advice It believed NP coNP included Ppoly 3 Deﬁnability Deﬁnitions properties characterizations 31 Implicit explicit deﬁnability Deﬁnability strong form dependence dependent propositional symbols interact situations deﬁnability imposes propositional symbols ﬁxed propositional symbols ﬁxed Deﬁnition 2 implicit deﬁnability Let cid2 PROPPS X Y PS y PS cid2 deﬁnes y terms X denoted X cid18cid2 y cid11x cid8X cid11x cid2 y cid11x cid2 y X cid18cid2 Y X cid18cid2 y y Y Note requiring cid11x cid2 satisﬁable useless cid11x cid2 y holds cid11x cid2 unsatisﬁable When Xworld consistent cid2 cid2 unsatisﬁable In case deﬁnability trivializes X cid18cid2 y holds X y Example 3 Let l stand leap year d4 resp d25 d100 d400 divisible 4 resp 25 100 400 Let cid2 d400 l d100 d400 l d4 d100 l d4 l d100 d4 d25 d400 d100 set formulas making precise connections symbols We d4 d25 cid18cid2 d100 d4 d100 d400 cid18cid2 l d4 d25 d400 cid18cid2 l cid2 deﬁne l terms d25 d100 d400 joint falsity propositional symbols enable telling l true false know d4 holds Other deﬁnability relations hold particular l d100 d400 cid18cid2 d4 l d100 cid18cid2 d4 l d100 cid18cid2 d4 d100 d400 When X cid18cid2 y holds state equivalently functional dependency X y holds cid2 This notion functional dependency wellknown relational database theory restricted binary domains 2021 Deﬁnability satisﬁes following easy properties proofs 1 cid18cid2 transitive 2 If Xcid20 X X cid18cid2 Xcid20 In particular cid18cid2 reﬂexive 996 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 3 If X cid18cid2 Y X cid18cid2 Y cid20 X cid18cid2 Y Y cid20 4 If X cid18cid2 Y cid2cid20 cid2 X cid18cid2cid20 Y 5 If X cid18cid2 Y Xcid20 cid18cid2 Y cid20 X Xcid20 cid18cid2 Y Y cid20 1 2 3 correspond famous Armstrongs rules inference known respectively transitivity rule inclusion rule augmentation rule 20 4 monotonicity property 5 derived rule inference Armstrongs known addition rule composition rule It easy cid2 satisﬁable y Varcid2 X X cid15cid18cid2 y Similarly cid2 valid X cid18cid2 Y holds Y X2 Other properties shown x cid18cid2 Y reported Lemma 23 22 Now notion deﬁnability easily deﬁned relating set propositional symbols X proposi tional symbol y given formula cid2 requires existence explicit deﬁnition y cid2 propositional symbols X While previous form deﬁnability typically referred implicit deﬁnability called explicit deﬁnability Deﬁnition 4 explicit deﬁnability deﬁnition propositional symbol Let cid2 PROPPS X PS y PS cid2 ex plicitly deﬁnes y terms X exists formula cid3X PROPX st cid2 cid3X y In case cid3X called deﬁnition y X cid2 As corollary Craigs interpolation theorem 3 stated general framework ﬁrstorder logic equivalence implicit form deﬁnability given explicit form stated This result known projective Beths theorem propositional logic We proof basic result enables pointing ﬁrst simple explicit deﬁnition Theorem 5 propositional projective Beths theorem Let cid2 PROPPS X PS y PS cid2 explicitly deﬁnes y terms X X cid18cid2 y Proof The direction obvious As direction suppose cid2 implicitly deﬁnes y terms X For world cid11x satisfying cid2 let ϕcid11x conjunction literals X true cid11x Since truth value y world satisfying cid2 depends truth values symbols X cid2 ϕcid11x y It follows disjunction cid3 ϕcid11x s cid11x world satisfying cid2 y explicit deﬁnition y X Similarly negation disjunction cid9 ϕcid11x s cid11x world satisfying cid2 y explicit deﬁnition y X cid2 cid3 cid9 cid2 In Lemma 51 15 ﬁnd representations based prime implicates cid2 explicit deﬁnitions cid3 cid9 given proof Theorem 5 The ﬁrst noted fXy second noted fX y Clearly representations succinct spatial efﬁciency point view exponential size cid2 formula cid2equivalent cid3 resp cid9 explicit deﬁnition y X cid2 speciﬁc need focus prime implicates representations Example 3 continued The following explicit deﬁnitions hold l l cid4 cid3 d4 d100 d400 cid4 cid3 d4 d25 d400 cid2 cid2 cid2 l d100 d4 cid2 d100 l d400 cid4 cid3 l d25 d100 cid2 d4 2 This shows rules complete cid2 valid deﬁnability relation instance axiom schema 3 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 997 Theorem 5 shows cid2 deﬁnes y terms X exists deﬁnition cid3X y cid2 X Varcid3X Now unicity deﬁnition y X cid2 cid2 deﬁnes y terms X As suggested proof Theorem 5 possible deﬁnitions y X cid2 generally logically equivalent cid2equivalent cid3 cid9 deﬁnitions y cid2 cid2 cid3 cid9 additionally cid3 cid9 cid3 cid9 deﬁnitions y cid2 set deﬁnitions y X cid2 quotiented logical equivalence ﬁnite lattice The resp greatest element lattice called strongest resp weakest deﬁnition y cid2 denoted DefXl cid2 y DefXu cid2 y Note DefXl cid2 y deﬁned X cid18cid2 y holds cid2 y resp DefXu Now previous notion deﬁnability propositional symbol easily turned general notion formula deﬁnability Formally Deﬁnition 6 formula deﬁnability Let cid2 cid9 PROPPS X PS cid2 deﬁnes cid9 terms X noted X cid18cid2 cid9 cid11x cid8X cid11x cid2 cid9 cid11x cid2 cid9 While formula deﬁnability extends propositional symbol deﬁnability propositional symbol y viewed formula y recovered easily Lemma 7 Let cid2 cid9 PROPPS X PS Let z fresh propositional symbol PS X Varcid2 Varcid9 X cid18cid2 cid9 X cid18cid2cid9z z Proof The proof comes straightforwardly following equivalence cid11x cid11x cid2 cid9 cid11x cid2 cid9 equivalent cid11x cid2 cid9 z z cid11x cid2 cid9 z z cid2 Thus gap generality propositional symbol deﬁnability formula deﬁnability rest paper sake simplicity restrict propositional symbol deﬁnability loss generality 32 Characterizations deﬁnability The proof Theorem 5 gives ﬁrst semantical expression deﬁnition y X cid2 makes sense X cid18cid2 y holds formula PROPX set models cid11xcid11x cid2 y The results aim giving syntactical characterizations provide practical ways computing deﬁnitions Before presenting need recall basic notions results independence forgetting 2 details Let X subset PS A formula cid2 PROPPS independent X exists formula cid3 st cid3 cid2 holds Varcid3 X When X x cid2 independent x It easily shown 2 cid2 independent X cid2 independent propositional symbol X The set propositional symbols formula cid2 depends denoted DepVarcid2 For instance cid2 b b DepVarcid2 Let cid2 PROPPS X PS The forgetting X cid2 denoted Xcid2 formula PROPPS inductively deﬁned follows 10 cid2 cid2 xcid2 cid2x1 cid2x0 x Ycid2 Yxcid2 For instance cid2 b c acid2 b c Clearly Xcid2 corresponds quantiﬁed Boolean formula usually free variables secondorder quantiﬁcation bears propositional atoms It shown 2 Xcid2 logically strongest consequence cid2 independent X logical equivalence Thus ϕ independent X cid2 ϕ Xcid2 ϕ Accordingly cid2 independent X cid2 Xcid2 holds 998 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Now projection formula cid2 set propositional symbols X result forgetting cid2 X cid3 Varcid2 X Projcid2 X cid4 cid2 Taking advantage notion projection following result gives characterization deﬁnitions propositional symbol y deﬁnable terms set propositional symbols X formula cid2 Theorem 8 Let cid2 PROPPS X PS Let cid3X PROPX y PS cid3X deﬁnition y X cid2 Projcid2 y X cid3X Projcid2 y X Proof We cid2 cid3X y cid2 cid3X y cid2 cid3X y cid2 y cid3X cid2 y cid3X PS Xcid2 y cid3X PS Xcid2 y cid3X cid3X independent PS X Projcid2 y X cid3X Projcid2 y X cid2 As direct corollary obtain following characterizations strongest weakest deﬁnitions y characterization deﬁnability Corollary 9 Let cid2 PROPPS X PS y PS If X cid18cid2 y DefXl If X cid18cid2 y DefXu X cid18cid2 y Projcid2 y X Projcid2 y X cid2 y Projcid2 y X cid2 y Projcid2 y X Example 3 continued Here weakest strongest deﬁnitions logical equivalence d4 l d25 d100 cid2 ld25d100l Def cid2 ld25d100u Def cid2 d4 l d100 d4 d25 d100 l d25 d100 Theorem 8 shows deﬁnability related notions weakest sufﬁcient condition strongest necessary condition 11 Indeed let X PS y PS A formula cid3 PROPX strongest necessary condition SNC y X given cid2 cid2 y cid3 holds cid3 necessary condition NC y X given cid2 formula cid9 PROPX cid2 y cid9 holds cid2 cid3 cid9 holds cid3 PROPX weakest sufﬁcient condition WSC y X given cid2 cid2 cid3 y holds cid3 sufﬁcient condition SC y X given cid2 formula cid9 PROPX cid2 cid9 y holds cid2 cid9 cid3 holds Note strongest necessary weakest sufﬁcient conditions y X unique cid2equivalence 11 logical equivalence general case The following theorem shows SNC WSC characterized notion projection It extends Theorem 2 11 relaxing assumption y Varcid2 y X focus logically strongest resp weakest SNC resp WSC y X wrt cid2 logical equivalence Theorem 10 Let cid2 PROPPS X PS y PS Projcid2 y X logical equivalence logically strongest SNC y X given cid2 Projcid2 y X logical equivalence logically weakest WSC y X given cid2 Proof We prove ﬁrst point second similar duality SNC WSC Let cid3X SNC y X given cid2 By deﬁnition cid2 y cid3X This equivalent cid2 y cid3X equivalent Projcid2 y X cid3X Varcid3X X Hence SNC y X given cid2 logical consequence Projcid2 y X It remains Projcid2 y X NC y X given cid2 easy deﬁnition J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 999 forgetting cid2 y Projcid2 y X X Projcid2 y X independent symbol belong X cid2 From theorem Theorem 8 generalizes Proposition 2 11 providing characterization deﬁnability terms SNC WSC characterization deﬁnitions y X wrt cid2 terms SNC WSC Finally following lemma shows checking X cid18cid2 Y propositional symbol forgotten cid2 deﬁniens X deﬁniendum Y Lemma 11 Let cid2 PROPPS X Y PS X cid18cid2 Y X cid18Projcid2XY Y Proof Let y Y We X cid18cid2 y exists formula cid9 st Varcid9 X cid2 cid9 y Clearly cid9 y independent propositional symbol occur X y Especially cid9 y independent Varcid2 X y Since Projcid2 X y Varcid2 X ycid2 general consequence cid2 independent Varcid2 X y cid2 cid9 y Projcid2 X y cid9 y Hence X cid18Projcid2Xy y This true y Y X cid18Projcid2XY Y As explained Section 31 cid18cid2 monotonic cid2 sense X Y cid2 cid2cid20 X cid18cid2 Y cid2cid20 cid2 X cid18cid2cid20 Y The fact Varcid2 X Y cid2 logical consequence cid2 completes proof cid2 A practical lemma lies fact Projcid2 X Y belong fragment com putationally easier cid2 deﬁnability issues For instance consider cid2 b c d X b c Y d While cid2 belongs NNF fragment DEFINABILITY tractable P NP Theorem 22 Projcid2 X Y acid2 belongs DNNF fragment DEFINABILITY tractable Lemma 27 33 Minimal deﬁnability In AI applications presented Sections 6 7 interested pointing set propositional symbols X terms cid2 deﬁnes symbol given formula cid2 Indeed assign truth values symbols set X determine truth value propositional symbols Thus especially interested minimal sets X Deﬁnition 12 base Let cid2 PROPPS X Y PS X minimal deﬁning family short base Y wrt cid2 X cid18cid2 Y holds proper subset Xcid20 X Xcid20 cid18cid2 Y The set bases Y wrt cid2 denoted BScid2Y Example 3 continued cid2 d400 l d100 d400 l d4 d100 l d4 l d100 d4 d25 d4 d25 base d100 sets d4 d100 d400 d4 d25 d400 bases l cid2 deﬁnes d4 terms l d100 d400 minimally l d100 base d4 base d4 d100 d400 The following results derived easily proofs 1 Y BScid2X Y X fortiori BScid2X cid15 2 BScid2 antimonotonic X Y PS X Y BScid2X cid24 BScid2Y cid24 partial order deﬁned S1 cid24 S2 A S2 B S1 B A 3 BScid2X x X cid2 x cid2 x 4 B BScid2X B Varcid2 X 1000 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 As deﬁning set propositional symbols know deﬁnition X cid18cid2 Y y Y X cid18cid2 y following theorem shows set bases set propositional symbols computed set bases propositional symbols taken individually performing pointwise unions minimizing obtained sets3 Theorem 13 Let cid2 PROPPS Y y1 yp PS BScid2Y min cid5cid6 Bi Bi BScid2 cid3 yi pcid7 i1 cid9 cid8 cid4 Proof Let X PS prove X cid18cid2 Y X1 Xp PS st X X1 Xp Xi cid18cid2 yi 1 p Then theorem follows immediately X cid18cid2 y1 yp means X cid18cid2 yi 1 p Therefore taking Xi X proves result Assume X1 Xp X X1 Xp Xi cid18cid2 yi 1 p Since Xi cid18cid2 yi Xi X X cid18cid2 yi 1 p Therefore X cid18cid2 y1 yp cid2 Consequently compute sets bases single propositional symbols Note similar result hold shortest bases terms cardinality shortest base x y written union shortest base x shortest base y Note case general VarDefVarcid2yl y belongs BScid2y sets deﬁning sets necessarily minimal wrt consider cid2 b y b counterexample This fails hold consider variables cid2 independent replace Var DepVar previous statement counterexample works y VarDefVarcid2yu cid2 cid2 Note ﬁnally guarantee general case number bases y wrt cid2 polynomial cid2 instance following formula cid2 equivalent Horn CNF formula y 2n 1 bases cid5cid5 cid9 cid9 cid2 xi y ncid10 i1 ncid10 xi x cid20 i1 34 Undeﬁnable propositional symbols Because X cid18cid2 X trivially holds instances deﬁnability relation typically little In theory relational databases functional dependencies form X X said trivial In following propositional symbol deﬁnition cid2 trivial way said undeﬁnable Deﬁnition 14 undeﬁnable propositional symbols Let cid2 PROPPS y PS y undeﬁnable cid2 Varcid2 y cid15cid18cid2 y Otherwise y said deﬁnable cid2 We following easy connection undeﬁnable symbols bases Lemma 15 Let cid2 PROPPS y PS y undeﬁnable cid2 BScid2y y Proof 1 2 If y undeﬁnable cid2 Varcid2 y cid15cid18cid2 y As consequence cid15cid18cid2 y Hence y base y wrt cid2 Now let B BScid2y We B Varcid2 y If y B B Varcid2 y contradicts fact Varcid2 y cid15cid18cid2 y Hence y B BScid2y y 3 The operator BScid2 x y BScid2 x BScid2 y called unionist product 23 commutative associative idempotentand consequence makes sense write BScid2 X xXBScid2 x minxXBx Bx BScid2 x J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1001 2 1 If BScid2y y X PS X cid18cid2 y y X concludes proof cid2 35 Necessary relevant propositional symbols Given formula cid2 set Y propositional symbols propositional symbols Varcid2 classiﬁed according usefulness deﬁning Y The resp important ones propositional symbols necessary resp irrelevant deﬁning Y deﬁned symbols belong bases Y resp bases Y Computing necessary propositional symbols preliminary step prove valuable improving computation set bases Y wrt cid2 Deﬁnition 16 necessary relevant propositional symbols Let cid2 PROPPS Y PS x PS x necessary propositional symbol Y wrt cid2 x belongs bases Y wrt cid2 x relevant propositional symbol Y wrt cid2 x belongs base Y wrt cid2 x irrelevant symbol Y wrt cid2 Since Y cid2 ﬁnite set bases Y wrt cid2 Y cid18cid2 Y holds As consequence necessary propositional symbol Y relevant propositional symbol Y Moreover obvious propositional symbol x relevant cid2 cid15 x cid2 cid15 x The following results simple characterizations necessary relevant propositional symbols Lemma 17 Let cid2 PROPPS Y PS x PS 1 x necessary Y wrt cid2 x Y x undeﬁnable cid2 2 x relevant Y wrt cid2 relevant y Y wrt cid2 3 x necessary Y wrt cid2 necessary y Y wrt cid2 Proof 1 Assume x necessary Y wrt cid2 Since Y cid18cid2 Y exists B BScid2Y B Y Therefore x B x Y Now suppose x deﬁnable cid2 means exists Z Varcid2 x Z Z cid18cid2 x Let B BScid2Y Bcid20 B x Z From precedes Bcid20 cid18cid2 Y Bcid20cid20 BScid2Y Bcid20cid20 Bcid20 x belong Bcid20cid20 necessary Y wrt cid2 1 Assume x Y x undeﬁnable cid2 x undeﬁnable cid2 equivalent BScid2x x consequence Theorem 13 fact x Y B BScid2Y contains x means x necessary Y wrt cid2 2 If x relevant Y wrt cid2 B BScid2Y containing x Theorem 13 y Y Bcid20 BScid2y y Bcid20 x relevant y wrt cid2 2 Immediate consequence Theorem 13 3 Comes easily point 1 x necessary Y y1 yp wrt cid2 1 p x yi x undeﬁnable cid2 1 p x yi x undeﬁnable cid2 1 p x necessary yi wrt cid2 cid2 Point 1 expresses propositional symbols necessary Varcid2hence key propositional symbols analogy data bases deﬁned Point 2 expresses consider relation relevant propositional symbols instead sets propositional symbols Point 3 expresses result relation necessary As direct corollary obtain following easy connection necessary symbols undeﬁnable ones Corollary 18 Let cid2 PROPPS y PS y undeﬁnable cid2 y necessary y wrt cid2 1002 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Example 3 continued BScid2Varcid2 d4 d25 d400 l d25 d100 l d4 d25 d25 necessary Varcid2 wrt cid2 furthermore BScid2d25 d25 d25 undeﬁnable cid2 BScid2l d4 d100 d400 d4 d100 d400 d4 d25 d400 l d100 d400 l d4 d25 l d4 d100 propositional symbol necessary l d4 d100 d400 wrt cid2 propositional symbols Varcid2 relevant l d4 d100 d400 wrt cid2 Note relation relevant single propositional symbols symmetric4 For instance let cid2 c b relevant c c relevant c belong base What c useful determining truth value speciﬁc situations b false This calls notion deﬁnability conditional independence 1 36 Unambiguous deﬁnability In beginning section wrote deﬁnability imposes propositional symbols ﬁxed propositional symbols ﬁxed terms value y function values variables X Formally entirely true following example let cid2 b b c X b y c Clearly X cid18cid2 y Is value c unambiguously deﬁned values b No situation cid11x true b false This situation inconsistent cid2 trivially holds cid2 cid11x y cid2 cid11x y situation value y unambiguously deﬁned formally value y function values b However practice makes little difference provided cid2 interpreted hard constraint countermodel cid2 impossible world need considered case safely neglect cid11xworlds inconsistent cid2 possible situation value y function values b Still contexts especially reasoning action changesee Section 6 important know inconsistent Xassignments exist Deﬁnition 19 Let cid2 PROPPS X PS We cid2 strongly Xconsistent cid11x cid8X cid11x cid2 consistent We cid2 unambiguously deﬁnes Y terms X cid2 strongly Xconsistent X cid18cid2 Y Requiring cid2 strongly Xconsistent strong impact characterization explicit deﬁnitions Indeed strong Xconsistency cid2 necessary sufﬁcient condition unicity logical equivalence explicit deﬁnitions X cid2 Theorem 20 Let cid2 PROPPS X PS y PS X cid18cid2 y Then cid2 strongly Xconsistent deﬁnitions ϕ ψ y X cid2 ϕ ψ Proof Assume exist nonequivalent formulas ϕ ψ PROPX cid2 y ϕ b cid2 y ψ b imply c cid2 ϕ ψ Since ϕ ψ logically equivalent exists cid11x cid8X cid11x ϕ ψ c implies cid11x cid2 inconsistent cid2 strongly Xconsistent Assume cid2 strongly Xconsistent Let cid11x cid8X cid11x cid2 inconsistent Let ϕ deﬁnition y X cid2 If cid11x ϕ respectively cid11x ϕ let ψ formula PROPX unique logical equivalence set models exactly models ϕ cid11x respectively models ϕ plus cid11x ψ deﬁnition y X cid2 ψ logically equivalent ϕ cid2 4 The relation necessary single propositional symbols y cid15 x necessary x x necessary x x undeﬁnable J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1003 4 Computational aspects 41 Deﬁnability The following result restriction propositional logic property holds ﬁrstorder logic Padoa 24 It consists entailmentbased characterization implicit deﬁnability useful identifying tractable restrictions deﬁnability propositional case We simple proof holds propositional logic cid2 X PS let renamecid2 X formula obtained replacing cid2 uniform way propositional symbol z Varcid2 X new propositional symbol zcid20 We Theorem 21 Padoas method See 24 If y X X cid18cid2 y cid2 renamecid2 X y ycid20 Proof From Theorem 8 X cid18cid2 y Projcid2 y X Projcid2 y X Equivalently X cid18cid2 y PS Xcid2 y PS Xcid2 y unsatisﬁable Since quantiﬁed variables dummy ones y X PSXcid2 yPSXcid2 y equivalent PSXcid2 yPScid20 Xcid20renamecid2 X ycid20 subset Z PS Zcid20 xcid20 x Z This quantiﬁed Boolean formula equivalent following prenex PS X PScid20 Xcid20cid2 y renamecid2 X ycid20 unsatisﬁable cid2 y renamecid2 X ycid20 unsatisﬁable cid2 renamecid2 X y ycid20 cid2 Accordingly y belong X checking deﬁnability comes standard deduction check Since X cid18cid2 y trivially holds remaining case y X conclude setmembership test plus deduction check sufﬁcient decide deﬁnability We complexity deﬁnability general case restricted cases Theorem 22 DEFINABILITY coNPcomplete restriction cid2 Blake formula Proof Membership Membership DEFINABILITY coNP comes directly Theorem 21 gives polyno mial reduction DEFINABILITY UNSAT coNP coNP wellknown closed reductions cid11 cid11 Hardness As hardness let exhibit polynomial reduction CNFUNSAT restriction DEFIN m ABILITY Blake fragment let ϕ i1 γi CNF formula PROPPS Varϕ x1 xn wlog assume ϕ contain clause implied clause case ﬁrst remove properly implied clause easily achieved polynomial time To ϕ m i1γi new y γi new y new associate polynomial time formula cid2 fresh variable PS Varϕ y We advantage following property results directly correctness resolutionbased prime implicates algorithms like Tisons 18 CNF formula cid2 contains prime implicates clauses resolvent δ exists clause cid13 cid2 st cid13 δ By construction binary resolvent clauses cid2 tautologous implied clause cid2 As consequence cid2 contains prime implicates contain properly implied clauses prime implicates formula Now Theorem 8 X cid18cid2 y Projcid2 y X Projcid2 y X Xcid2 y Xcid2 y satisﬁable With X Varϕ new X cid18cid2 y X m i1γi new y γi cid11 new y y X m i1γi new y γi new y y unsatisﬁable The formula cid11 i1γi new y X equivalent X m m i1γi new y equivalent cid11 cid11 i1γi new X y y Varϕ new But formula equiva m i1γi new lent ϕ compute resolvents new remove implied clauses ϕ Hence ϕ unsatisﬁable X cid18cid2 y completes proof cid2 cid11 cid11 m This theorem generalizes Theorem 22 22 relax useless assumption cid2 CNF formula proving membership coNP constrain cid2 belong Blake fragment hardness 1004 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Interestingly shows constraining cid2 belong propositional fragment tractable SAT case IP necessarily lead tractable restriction DEFINABILITY An easier proof coNPcompleteness cid2 constrained Blake formula obtained observing ϕ ψ PROPPS y PS X X Varϕ Varψ ϕ ψ logically equivalent cid2 y ϕ ψ y deﬁnes y terms X By way shows existence theories cid2 deciding deﬁnability symbol y computationally hard knows symbol deﬁnable cid2 computing explicit deﬁnition easy ϕ deﬁnition We identiﬁed complexity minimal deﬁnability problem Theorem 23 Let cid2 PROPPS X PS y PS Checking X minimal deﬁning family y MINIMAL DEFINING FAMILY wrt cid2 BH2complete Proof Membership X minimal deﬁning family y wrt cid2 X cid18cid2 y Xcid20 X Xcid20 cid15cid18cid2 y Now Xcid20 XXcid20 cid15cid18cid2 y holds x X X x cid15cid18cid2 y Thus MINIMAL DEFINING FAMILY intersection language coNP language NP intersection linear number languages NP NP proves membership BH2 Hardness let ϕ ψ propositional formulas associate polynomial time tuple Lcid16ϕ ψcid17 cid16cid2 X ycid17 cid2 ψ x y ψ x y ϕ y X x x y new propositional symbols appearing ϕ ψ It easy check x cid18cid2 y ψ unsatisﬁable ϕ unsatisﬁable Now cid18cid2 y ϕ unsatisﬁable This means x minimal deﬁning family y wrt cid2 ψ unsatisﬁable ϕ satisﬁable cid16ϕ ψcid17 instance SATUNSAT Thus L polynomial Karp reduction SATUNSAT MINIMAL DEFINING FAMILY cid2 When cid2 deciding X cid18cid2 y holds X PS y PS tractable deciding X minimal deﬁning family y wrt cid2 X PS y PS tractable X minimal deﬁning family y wrt cid2 X cid18cid2 y x X X x cid15cid18cid2 y On hand Theorem 23 suggests X cid18cid2 y known hold deciding X minimal deﬁning family y wrt cid2 remains computationally hard P NP Theorem 24 Let cid2 PROPPS X PS y PS X cid18cid2 y Checking X minimal deﬁning family y wrt cid2 NPcomplete Proof Membership Membership consists checking x X X x cid15cid18cid2 y requires solve CardX independent instances DEFINABILITY Since DEFINABILITY NP case problem consideration cid11 n Hardness By reduction SAT Let ϕ PROPPS Varϕ x1 xn nonempty set To ϕ i1xi xcid20 associate polynomial time cid2 ϕ n fresh atoms PS x1 xn y X x1 xn xcid20 deﬁnition y X cid2 X cid18cid2 y Now ϕ satisﬁable X minimal deﬁning family y wrt cid2 In deed ϕ satisﬁable ϕ depends variables X exist formula ψ ψ ϕ Varψ X Therefore variables X necessary deﬁning y This means exist deﬁnition y proper subset X cid2 X minimal deﬁning family y wrt cid2 If ϕ unsatisﬁable cid2 y cid18cid2 y X minimal deﬁning family y wrt cid2 cid2 y xcid20 1 xcid20 cid11 i1xi xcid20 n By construction ϕ i1xi xcid20 i1xi xcid20 1 xcid20 cid11 n cid11 n n J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1005 Since transformation formula deﬁnability propositional symbol deﬁnability given Lemma 7 achieved polynomial time propositional symbol deﬁnability restriction formula deﬁnability complexity results apply formula deﬁnability Now tractable restrictions DEFINABILITY MINIMAL DEFINING FAMILY easily derived Theorem 21 We ﬁrst need precise conditions restrictions based Deﬁnition 25 stability conditions Let C propositional fragment subset PROPPS C stable expansion partial renaming cid2 C X PS C stable conditioning cid2 C γ satisﬁable conjunction literals cid2 renamecid2 X C conditioning cid2γ cid2 γ belongs C Theorem 26 Let C propositional fragment satisfying stability conditions listed Deﬁnition 25 C tractable SAT restriction DEFINABILITY cid2 belongs C tractable Proof Let ﬁrst C tractable SAT restriction DEFINABILITY tractable The key Theorem 21 cases y X obviously decided polynomial time cid2 deﬁnes y terms X Theorem 21 shows X cid18cid2 y cid2 renamecid2 X y ycid20 This equivalent determine cid2 renamecid2 Xγ inconsistent γ y ycid20 By construction formula cid2 renamecid2 Xγ belongs C cid2 belongs C C stable conditioning expansion partial renaming satisﬁability decided polynomial time Conversely restriction DEFINABILITY cid2 belongs C tractable deciding cid18cid2 new new Ps Varcid2 achieved polynomial time But cid18cid2 new cid2 unsatisﬁable Hence satisﬁability cid2 decided polynomial time cid2 Note stability expansion partial renaming strictly demanding stability bounded junction instance class renamable Horn CNF formulas stable expansion partial renaming stable bounded conjunction Interestingly general propositional fragments satisfy stability conditions given Deﬁnition 25 This case class qHorn formulas includes Krom CNF formulas Horn CNF formulas renamable Horn CNF formulas speciﬁc cases 6 class Decomposable Negation Normal Form DNNF formulas includes important fragments DNF formulas Ordered Binary Decision Diagrams OBDD 79 Lemma 27 The restrictions DEFINABILITY cid2 qHorn CNF formula DNNF formula P Proof It known class qHorn CNF formulas tractable SAT 6 obvious stable conditioning stability expansion partial renaming comes fact V qHorn renaming cid2 set symbols V renamex x V X qHorn renaming cid2 renamecid2 X Finally DNNF class result comes immediately Propositions 41 51 25 cid2 Lemma 27 generalizes Theorem 31 Corollary 32 22 concern Horn CNF formulas Theorem 71 Corollary 72 15 concern qHorn CNF formulas It generalize Theorem 35 Corollary 36 22 resp Theorem 73 Corollary 74 15 showing tractability restrictions DEFINABILITY cid2 equivalent Horn CNF formula resp qHorn CNF formula given disjunctively interpreted Horn resp qHorn envelope Note Theorem 21 prove helpful deciding polynomial time X cid18cid2 y restrictions cid2 outside scope Lemma 27 For instance cid2 ϕ y y ψ ϕ ψ Horn CNF formulas y Varϕ Varψ X cid18cid2 y decided polynomial time amounts determining ϕ ψ holds However cid2 qHorn CNF formula DNNF 1006 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 It interesting observe stability conditions given Deﬁnition 25 satisﬁed propositional fragments tractable SAT instance Blake fragment formulas prime implicates normal form satisfy Now complexity unambiguous deﬁnability Checking cid2 strongly Xconsistent signiﬁcantly harder checking deﬁnability carries unambiguous deﬁnability Theorem 28 Let cid2 PROPPS X PS y PS Deciding cid2 strongly Xconsistent cid12p Deciding cid2 unambiguously deﬁnes y terms X cid12p 2 complete 2 complete Proof Membership easy cases For deciding cid2 strongly Xconsistent hardness comes trivial reduction QBF2 ABcid2 valid instance QBF2 cid2 strongly Aconsistent As deciding cid2 unambiguously deﬁnes y terms X sufﬁces remark cid2 unambiguously deﬁnes X terms X cid2 strongly Xconsistent cid2 Finally knowing cid2 strongly Xconsistent change complexity deﬁnability Theorem 29 Let cid2 PROPPS X PS y PS Given cid2 strongly Xconsistent deciding X cid18cid2 y coNPcomplete Proof Membership obvious Hardness comes following reduction UNSAT let ϕ propositional formula z fresh variable appearing ϕ ϕ UNSAT ϕ z z cid18ϕz z clearly ϕ z strongly consistent ϕ z consistent cid2 42 Undeﬁnability necessity relevance From Theorem 21 easily derive following characterization undeﬁnable propositional symbols surprisingly simple Lemma 30 Let cid2 PROPPS y PS y undeﬁnable cid2 cid2y0 cid2y1 satisﬁable Proof By deﬁnition y undeﬁnable cid2 Varcid2 y cid15cid18cid2 y Since y Varcid2 y Theorem 21 y undeﬁnable cid2 cid2 renamecid2 Varcid2 y cid15 y ycid20 This equivalent state cid2 renamecid2 Varcid2 y y ycid20 satisﬁable This equivalent state conditioning cid2 renamecid2 Varcid2 y satisﬁable conjunction literals y ycid20 satisﬁable Now ycid20 resp y occur cid2 resp renamecid2 Varcid2 y conditioning equivalent cid2y renamecid2 Varcid2 yycid20 Since renamecid2 Varcid2 yycid20 equivalent cid2y y unique symbol renamed obtain y undeﬁnable cid2 cid2y cid2y satisﬁable cid2 Necessary propositional symbols characterized means prime implicants simple elegant way Lemma 31 Let cid2 PROPPS x PS x deﬁnable cid2 prime implicant cid2 contains x x Proof The prime implicants cid2 equivalently x cid2x0 x cid2x1 contain x x prime implicants cid2x0 cid2x1 8 Since formula unsatisﬁable x deﬁnable cid2 cf Lemma 30 prime implicant cid2 contains x x situation x deﬁnable cid2 cid2 We derived following complexity results J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1007 Theorem 32 Let cid2 PROPPS X Y PS x y PS 1 Deciding y undeﬁnable cid2 UNDEFINABILITY NPcomplete 2 Deciding x necessary Y wrt cid2 NECESSITY NPcomplete Hardness holds Y singleton 3 Deciding x relevant Y wrt cid2 RELEVANCE cid2p 2 NPhard coNPhard NP coNP polynomial hierarchy collapses ﬁrst level Hardness holds Y singleton5 Proof 1 Membership corollary Lemma 30 Hardness comes following polynomial reduction SAT propositional formula ϕ let cid2 ϕ y y Varϕ ϕ satisﬁable y undeﬁnable cid2 2 Membership corollary Point 1 Point 2 Lemma 17 Hardness consequence Point 1 equivalence 1 4 Corollary 18 3 Membership easy guess B Varcid2 Y check linear number calls NP oracle B minimal deﬁning family Y wrt cid2 NPhardness comes following polynomial reduction SAT propositional formula ϕ let cid2 ϕ y y Varϕ let Y y ϕ satisﬁable y relevant Y wrt cid2 coNPhardness comes following polynomial reduction UNSAT propositional formula ϕ X x1 xn let cid2 z y z ϕ x y ϕ unsatisﬁable x relevant Y y wrt cid2 x base Y wrt cid2 case ϕ satisﬁable x relevant Y wrt cid2 cid2 deﬁne Y terms X x let cid11x Xmodel ϕ cid11x x cid2 z y showing instantiating z necessary derive truth value y Hence base Y wrt cid2 contain z construction z base Y wrt cid2 conclude z unique base Y wrt cid2 ϕ satisﬁable conclude proof cid2 From deﬁnition undeﬁnable symbols Lemma 17 immediately follows restrictions UNDE FINABILITY NECESSITY cid2 satisﬁes stability conditions listed Deﬁnition 25 P Such restrictions complexity RELEVANCE belonging NP 43 Computing explicit deﬁnitions Theorem 8 corollary ways computing explicit deﬁnitions In particular X cid18cid2 y strongest deﬁnition y X cid2 Projcid2 y X equivalently case y X Projcid2y1 X Such characterization proves particularly helpful cid2 propositional fragment allowing polytime forgetting conditioning 26 As consequence Theorem 8 Lemma 33 Let C propositional fragment stable conditioning enables polytime forgetting exists polytime algorithm deriving formula C equivalent Projcid2 X formula cid2 C set symbols X Then cid2 C X PS y PS X cid18cid2 y explicit deﬁnition cid3X y X cid2 computed time polynomial cid2 X Proof If y X y y explicit deﬁnition y X cid2 Otherwise Theorem 8 Projcid2y1 X explicit deﬁnition y X cid2 Under assumptions lemma propositional formula equivalent Projcid2y1 X computed polynomial time cid2 Among inﬂuential propositional fragments enabling operations polynomial time DNNF 79 prime implicates 26 For instance Projcid2 y X computed efﬁciently selecting 5 We conjecture problem cid2p 2 complete 1008 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 set IPcid2 prime implicates cid2 y belonging PROPX Lemma 8 27 Once formula computed truth value y cid11x cid8X computed linear time truth value Projcid2 y Xy1 It interesting note fragments enable computation deﬁnitions polynomial size cid2 known deﬁne y terms X restrictions DEFINABILITY induce complexity P NP Thus determining X cid18cid2 y tractable cid2 DNNF formula coNPcomplete cid2 prime implicates formula Lemma 27 Theorem 22 The OBDD fragment 2829 famous subset DNNF considered provided variables forgotten variables X ﬁnal variables wrt total strict ordering variables associated fragment 3031 Accordingly previous corollary completes results reported 22 resp 15 showing cid2 Horn CNF formula resp qHorn CNF formula variable y explicit deﬁnition cid2 equivalent positive conjunction literals resp conjunction literals clause polynomial size wrt input While possibility compute explicit deﬁnition cid3X y X cid2 polynomial time restricted cases determine polynomial time deﬁnition exists ensures size deﬁnition polynomially bounded guaranteed general case P NP direct consequence Theorem 22 Actually situation computationally worse general case prove way compute deﬁnitions polynomial space general case usual assumptions complexity theory Theorem 34 Let cid2 formula PROPPS Let X PS let y PS In general case size explicit deﬁnition cid3X y cid2 polynomially bounded cid2 X NP coNP Ppoly Proof We exploit close connection deﬁnability problem interpolation Let ϕ ψ formulas PROPPS A formula α PROPPS interpolant cid16ϕ ψcid17 Varα Varϕ Varψ ϕ α α ψ hold Indeed known general case size interpolant α cid16ϕ ψcid17 polynomially bounded ϕ ψ NP coNP Ppoly 32 To pair cid16ϕ ψcid17 associate polynomial time pair cid16cid2 newcid17 cid2 ψ new new ϕ new PS Varϕ Varψ The point ϕ ψ X cid18cid2 new Moreover interpolant cid16ϕ ψcid17 deﬁnition new Varϕ Varψ wrt cid2 converse holds Indeed Craigs interpola tion theorem propositional logic ϕ ψ holds exists interpolant cid16ϕ ψcid17 Now If way Let cid3X explicit deﬁnition new X Varϕ Varψ wrt cid2 We cid2 new cid3X This equivalent state 1 ψ new new ϕ new cid3X 2 ψ new new ϕ cid3X new 1 equivalent ψ new new ϕ new cid3X unsatisﬁable equivalently new ϕ cid3X unsatisﬁable Since new Varψ Varϕ new X Accordingly 1 equivalent ϕ cid3X unsatisﬁable ϕ cid3X From 2 easy derive similar way cid3X ψ Hence cid3X interpolant cid16ϕ ψcid17 Onlyif way Let αX interpolant cid16ϕ ψcid17 By deﬁnition ϕ αX αX ψ Subsequently cid2 ψ new new ϕ ϕ αX αX ψ We immediately obtain cid2 new αX Thus X cid18cid2 new interpolant cid16ϕ ψcid17 explicit deﬁnition new X Varϕ Varψ wrt cid2 cid2 44 Computing base In section present algorithm generating base X propositional symbol y wrt formula cid2 X required contained ﬁxed set acceptable propositional symbols V We called base V base The role V focus interesting bases instance discriminability problem V set testable propositional symbols In particular wants know y undeﬁnable cid2 V set Varcid2 y This algorithm described function FindABase greedy algorithm considers propositional symbols V order use heuristics determining order reduce J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1009 search time throw away necessary forming base current set acceptable propositional symbols The inputs FindABase V y cid2 output subset V failure This algorithm calls function Defines checks given subset propositional symbols deﬁnes y wrt cid2 How cid2 represented function Defines implemented discussed separately y cid2 DefinesV return failure X V x V DefinesX x y cid2 X X x end end return X end The following easy lemma states algorithm FindABase correct Lemma 35 Provided DefinesX y cid2 returns true X cid18cid2 y FindABase returns V base y wrt cid2 exists base failure Proof Straightforward cid2 This algorithm readily extended algorithm generating base X set Y propositional symbols wrt formula cid2 It sufﬁces replace y Y Defines extend function sets Y obvious given deﬁnition implicit deﬁnability It extended algorithm deriving V bases set Y judicious way search set 2V set enumeration tree algorithm 33 This task clearly computationally expensive computing single base especially number bases exponential explained Theorem 22 suggests computational cost solely number bases Theorem 36 Unless P NP exists polynomial time algorithm computing V base propositional symbol y wrt CNF formula cid2 Proof Let ϕ CNF formula let y Varϕ let V Varϕ y let cid2 ϕ y If ϕ unsatisﬁable resp satisﬁable resp y unique V base y wrt cid2 If polynomial time algorithm computing V base y existed running y cid2 possibilities computed base case ϕ unsatisﬁable y case ϕ satisﬁable But polynomial time algorithm deciding CNF formula ϕ satisﬁable Hence SAT belong P cid2 Since Theorem 36 holds y single V base wrt cid2 strengthens Theorem 31 34 showing exists polynomial total time polynomial size input plus size output computing minimal functional dependencies hold cid2 P NP cid2 CNF formula6 In practice task deriving V bases set Y wrt cid2 improved situations computing ﬁrst set necessary variables set relevant variables Y wrt cid2 irrelevant variables removed V running algorithm subsets 2V contain necessary variables skipped search 6 In paper authors showed cid2 given set models Varcid2 task polynomially equivalent problem dualizing positive theory equivalently computing transversals hypergraph polynomial time algorithm known pseudopolynomial algorithm exists 1010 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Clearly simple algorithm FindABase run polynomial time worst case case function Defines P NP This coheres Theorem 36 showing algorithm exists P NP Now possible ways implement function Defines depending propositional frag ment cid2 belongs If cid2 CNF formula easily implement Defines taking advantage SAT solver solvers impressive performances available nowadays In case syntactic restrictions cid2 makes deﬁnability polynomial search V base polynomial consists V 1 deﬁnability tests Additionally cid2 belongs propositional fragment satisfying conditions listed Deﬁnition 25 X base y wrt cid2 truth value y computed time polynomial cid2 X Xworld cid11x Indeed checking cid2cid11xy satisﬁable polynomial time truth value test gives truth value y 5 Deﬁnability hypothesis discriminability In section investigate notion closely related deﬁnability practical applications ranging fault isolation diagnosis decision partial observability Intuitively given set propositional formulas H h1 hn represent mutually exclusive exhaustive hypotheses wrt cid12 knowledge base cid2 h hcid20 H h cid15 hcid20 cid2 h hcid20 cid2 n i1 hi set X available binary tests encoded propositional symbols X discriminates H wrt cid2 knowledge truth values propositional symbols X helps ﬁnding hi true Deﬁnition 37 discrimination The input discrimination problem triple cid16cid2 X H cid17 consists consistent formula cid2 set test variables X st X Varcid2 set H h1 hn formulas mutually exclusive exhaustive wrt cid2 X discriminates H wrt cid2 cid11x cid8X h H st cid11x cid2 h X discriminates minimally H wrt cid2 X discriminates H wrt cid2 proper subset X There contexts including diagnosis decision uncertainty wishes discrimi nate set hypotheses hi 1 n given set available tests Let illustrate focusing consistencybased diagnosis setting 35 things similar abductive diagnosis setting respect discrimination issue Deﬁnition 38 minimal diagnosis See 35 Let cid16SD COMPS OBScid17 input diagnosis problem SD conjunction propositional formulas representing description COMPS set symbols denoting components OBS conjunction literals representing initial observations A minimal consistencybased diagnosis cid16SD COMPS OBScid17 minimal subset cid11 COMPS SD OBS ABcid11 cid11 ABc ABc propositional symbol consistent ABcid11 formula meaning corresponding component c abnormal work properly ccid11 ABc cCOMPScid11 cid11 Deﬁnition 39 fault isolation Let cid16SD COMPS OBScid17 input diagnosis problem TB t1 tn test base propositional symbols set available measures TB VarSD OBS The fault isolation problem discrimination problem deﬁned cid2 SDOBS TB HYP ABcid11 ABcid11 cid11 minimal consistency cid11 minimal consistencybased diagnosis cid16SD COMPS OBScid17 based diagnosis cid16SD COMPS OBScid17 cid11 cid11 By construction HYP set mutually exclusive exhaustive hypotheses wrt cid2 Interestingly direct link hypothesis discriminability deﬁnability J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1011 Theorem 40 Let cid16cid2 X H h1 hncid17 discrimination problem Let cid2cid20 cid2 hi new 1 n terms X PS Varcid2 H new symbol Then X discriminates H wrt cid2 cid2cid20 deﬁnes Hnew hi new new n i1hi hi cid11 Proof If cid11x cid8X hcid11x H st cid11x cid2 hcid11x cid11x cid8X hcid11x H st cid11x cid2 hcid11x h H hcid11x cid11x cid2 h cid2 hcid11x h h H hcid11x H contains mutually exclusive hypotheses given cid2 Thus cid11x cid8X h H cid11x cid2 h cid11x cid2 h holds Hence cid2cid20 deﬁnes Hnew terms X If cid2cid20 deﬁnes Hnew terms X h H cid11x cid8X cid11x cid2 h cid11x cid2 h holds Equivalently cid11x cid8X h H cid11x cid2 h cid11x cid2 h holds Assume cid11x cid8X h H cid11x cid2 h Since H exhaustive given cid2 possible cid2 unsatisﬁable In case X trivially discriminates H wrt cid2 In remaining case cid11x cid8X h H cid11x cid2 h Hence X trivially discriminates H wrt cid2 cid2 Clearly advantage polynomial reduction results reported previous sec tions compute discriminating sets minimal discriminating sets Thus dealing mutually exclusive exhaustive sets hypotheses bases design minimal test inputs 3637 order isolate faulty compo nents modelbased diagnosis case hypotheses correspond candidate diagnoses testable propositional symbols correspond available measurements Note McIlraiths notions relevant necessary tests 37 counterparts framework instance necessary test corresponds propositional sym bol hypothesis space discriminated Lastly algorithm computing bases described design conditional test policies tests performed sequentially conditioned outcomes previous testssee 38 case mutually exclusive hypotheses Conversely deﬁnability problem reduced hypothesis discriminability problem presence mutually exclusive hypotheses Indeed consistent formula cid2 deﬁnes y terms X X discriminates H y y wrt cid2 Since reductions polytime ones deciding X discriminates H wrt cid2 HYPOTHESIS DISCRIMINABILITY coNPcomplete problem 6 Propositional deﬁnability reasoning action change 61 Determinism executability successor state axioms In section deﬁnability closely related issues pertaining reasoning action change Let F ﬁnite set ﬂuents subset PS Deﬁne Ft ft f F Ft1 ft1 f F sets ﬂuents indexed time points Let cid2α propositional action theory describing action α formula PROPFt Ft1 cid11ft cid11f cid20 t1 cid2α holds cid11f cid20 possible successor state cid11f α The transition function α binary relation Rα cid8F deﬁned Rα cid11f cid11f cid20 iff cid11ft cid11f cid20 t1 cid2α Then α deterministic cid11f cid8F cid11f cid20 cid8F Rα cid11f cid11f cid20 α fully executable cid11f cid8F cid11f cid20 cid8F Rα cid11f cid11f cid20 Now easy check determinism executability expressed simply notions deﬁn ability strong consistency Lemma 41 α deterministic Ft cid18cid2α Ft1 α fully executable cid2α strongly Ft consistent Proof Straightforward cid2 1012 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 Putting points α deterministic fully executable Ft1 unambiguously deﬁned Ft wrt cid2α Furthermore action α fully deterministic deterministic ﬂuents Let α deterministic f cid11f cid8F states cid11f cid20 cid8F Rα cid11f cid11f cid20 1 Rα cid11f cid11f cid20 2 truth value f Clearly deﬁnability allows identifying ﬂuents α deterministic Moreover α deterministic f deﬁnition ft1 Ft cid2α corresponds successor state axiom 39 See ﬁnal example 11 2 cid11f cid20 1 cid11f cid20 1 cid11f cid20 2 Example 42 Let α β γ actions deﬁned following theories cid2α at1 bt1 bt bt1 cid2β at1 bt1 cid2γ at1 bt1 bt bt1 cid4 cid3 bt at1 bt1 cid3 bt bt1 cid4 cid3 bt bt1 cid4 bt cid18cid2α at1 bt1 holds α deterministic cid2α strongly bt consistent α fully executable The successor state axiom b corresponds deﬁnition b unique logical equivalence Theorem 20 bt1 bt cid2β strongly bt consistent bt cid2β inconsistent Therefore β fully executable deterministic There nonequivalent deﬁnitions ﬂuents time t 1 successor state axioms b bt1 bt bt1 bt at1 bt1 hold γ deterministic fully executable However bt cid18cid2γ deterministic bt cid18cid2γ at1 holds Note usually given initially set causal rules completion process 4041 compute successor state axioms ﬁnally cid2α Computing successor state axioms deﬁnitions reverse process completion process action theory compiled propositional form cid2α ﬁnd successor state axioms possibly compact description effects α causal rules Due connections precise Lemma 41 notions results paper apply reasoning action For instance direct consequence Theorem 20 Lemma 41 action fully executable deterministic f exists successor state axiom f logical equivalenceit case α β Example 42 Deﬁnability proves useful characterizing regression Given propositional formula ψ PROPPS ductive regression ψ α formula regψ α unique logical equivalence Modregψ α cid2 α cid11f cid20 The abductive regression ψ α formula Regψ α unique logical equivalence ModRegψ α cid11f Rα cid11f Modψ While Regψ α regψ α general case regψ α Regψ α equivalent α deterministic 41 cid11f cid20ψ R1 For formula ϕ PROPF let note ϕt formula PROPFt obtained substituting uniform way ϕ symbol Theorem 43 Let α deterministic fully executable action For ﬂuent f F formula ψ PROPF regψ αt equivalently Regψ αt equivalent deﬁnition zt1 Ft cid2α ψt1 zt1 z fresh symbol F Proof First observe Theorem 20 Lemma 41 makes sense consider deﬁnition equivalent Now regψ αt Projcid2α ψt1 Ft Proposition 5 41 The formula equivalent Projcid2α ψt1 zt1 zt1 Ft Finally Theorem 8 concludes proof cid2 This result generalized actions fully executable We omit sake brevity applications deﬁnability progression planning J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1013 62 Ramiﬁcation Another role deﬁnability reasoning change handling ramiﬁcation indirect action effects A way address wellknown problem consists ﬁnding ﬂuents derived primitive ones called frame knowledge base apply change reduced world descriptions composed primitive ﬂuents 42 Many formalisms reasoning change adhere approach implemented planning systems early BUILD 43 Let formally role deﬁnability dealing ramiﬁcation problem Let F set ﬂuents cid2 propositional formula expressing constraints values ﬂuents time point Finding partition F set FP primary ﬂuents set FD derived ﬂuents comes ﬁnd base F respect cid2 Clearly choices generally possible BScid2F generally singleton The goal come action descriptions concise possible good heuristics consists choosing base F minimum cardinality 7 Yet application AI Automated reasoning The notion deﬁnability proves valuable automated reasoning tasks For instance identifying func tionally dependent propositional symbols way ﬁnding variable orderings prevent OBDD representation formula exponential size blowup 44 Identifying deﬁnability relations variables prove useful satisﬁability issue 45 shown deﬁnability exploited local search satisﬁability problem The idea concentrate search undeﬁnable variables handle remaining ones exploiting deﬁnability relations They reported empirical results showing algorithm DAGSAT valuable 46 considered role deﬁnability relations called gates reduce search space explored complete DPLLlike algorithms SAT In nutshell idea deﬁnable variable elected branching rule variables base assigned Accordingly undeﬁnable variables input CNF formula cid2 considered ﬁrst Since deciding deﬁnability relations coNPcomplete problem considered relations discovered linear time unit propagation literals relations include equivalent literals considered papers 47 46 explicit deﬁnitions variables discovered form conjunction literals clause depending sign propagated literal interestingly variables occurring explicit deﬁnition y assigned unit propagation cid2 proves y assigned The resulting set functional dependencies induces relevance graph set vertices Varcid2 set arcs contains x z deﬁnitions variable z bears variable x When undeﬁnable variables occur cid2 CNF formulas obtained conditioning simplifying cid2 subsequent steps algorithm corresponding relevance graph contains source node incoming degree 0 polynomial time heuristics approximating minimal cycle cutset graph variables resulting set known strong backdoor assigned ﬁrst This approach exhibited interesting performances benchmarks SAT02 SAT03 competitions appeared best performer hand instances SAT03 competition 48 reported possible advantages drawbacks taking advantage independent undeﬁnable variable selection heuristics 8 Other related work As evoked previously propositional deﬁnability closely related notions strongest necessary weak est sufﬁcient conditions notion functional dependencies propositional logic In section precise main differences contribution present paper closest related ones liter ature Before concluding paper brieﬂy present related work deﬁnability considered complex logical settings classical propositional logic 1014 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 81 Functional dependencies The closest work described papers Ibaraki Kogan Makino 152234 In papers Ibaraki Kogan Makino presented number results related functional dependencies In 1522 reported interesting results issues mainly ignored Among condensation issue basic idea comes observation X cid18cid2 y y X cid2 simpliﬁed removing y forgetting y cid2 keeping track explicit deﬁnition y X cid2 semantical level loss information results process condensing cid2 consists repeating iterative way reaching formula nontrivial functional dependency While result condensing procedure unique general depends functional dependency chosen step Ibaraki Kogan Makino shown unique cid2 Horn CNF formula generally qHorn CNF formula given corresponding envelope condensing process achieved polynomial time case In 34 authors considered problem computing minimal functional dependencies hold cid2 Among things showed exists incrementally polynomial algorithm achieving goal cid2 Horn CNF formula generally qHorn CNF formula problem equivalent problem dualizing positive theory cid2 equivalent Horn CNF formula resp qHorn CNF formula given Horn resp qHorn envelope models A major difference present work Ibaraki Kogan Makino mainly focused Horn qHorn formulas results mainly unconstrained propositional formulas Actually results 152234 related unconstrained propositional formulas exhaustively listed Sections 31 41 43 Some results generalize results Theorem 26 gives tractable classes minimal deﬁnability problem Horn qHorn results complete results presented Section 43about computation explicit deﬁnitionsaddress general case tractable classes issue Horn qHorn 82 Strongest necessary weakest sufﬁcient conditions The work Lin 11 concerned strongest necessary weakest sufﬁcient conditions In Section 32 shown close connections deﬁnability strongest necessary SNCweakest sufﬁcient conditions WSC While Proposition 2 11 characterizes deﬁnability terms WSC SNC shown characterize deﬁnitions y X cid2 terms SNC WSC First Theorem 10 shows SNC WSC characterized notion projection It extends Theorem 2 11 relaxing assumption y Varcid2 y X focus logically strongest resp weakest SNC Projcid2 y X resp WSC Projcid2 y X y X wrt cid2 logical equivalence Then Theorem 8 shows cid3X deﬁnition y X cid2 Projcid2 y X cid3X Projcid2 y X 83 Deﬁnability logical settings Since Padoa Beth considerable work deﬁnability interpolation classes logics A logic said projective Beth deﬁnability property implicit deﬁnability equals explicit deﬁnability As pointed 5 implicit deﬁnability semantical modeltheoretic concept explicit deﬁnability syntactic prooftheoretic concept forms deﬁnability coincide given logic good indication good balance syntax semantics logic There main streams works deﬁnability fragments ﬁrstorder logic deﬁnability propositional modal logics We brieﬂy discuss streams work pointing relevant references A compre hensive review Chapter 2 5 See excellent book 49 connections second order quantiﬁcation propositional logics Deﬁnability predicate logic starts Padoas work later Beths theorem The 4 shows ﬁrstorder logic deﬁnability property The question given fragments ﬁrstorder logic property For instance kvariable fragment ﬁrstorder logic fails satisfy 5051 large number ﬁrstorder modal logics 52 holds intuitionistic predicate logic 5354 Deﬁnability fragments ﬁrstorder logic impact database community 55 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1015 As propositional logics large number thereof satisfy deﬁnability property For instance Kreisel 56 proves case logic classical propositional logic intuitionistic propositional logic A large number works concentrated modal logics 5759 especially AI related description logics 6061 paper focuses computational issues especially bounds size explicit deﬁnitions Our work focusing classical propositional logic nature abovementioned works apart works description logics Our focus computational issues problems related deﬁnability applications artiﬁcial intelligence problems 9 Conclusion This paper centered deﬁnability standard propositional logic reports number results issued computationoriented investigation notion Especially gave characterization results complexity results deﬁnability related notions We presented number applications results AI problems including hypothesis discrimination reasoning actions automated reasoning This work calls number perspectives First alternative way characterizing logical deﬁnability related notions consist expressing epistemic logic remarking propositional formula cid2 PROPPS X PS y PS X cid18cid2 y holds Kcid2 xXKx Kx Ky Ky theorem S5 From derive characterizations notions minimal deﬁning families undeﬁnable variables The results stated paper easily reformulated different terms setting cid11 cid13 Second notion deﬁnability studied paper strong worth relaxing notion deﬁnability Doing easy background knowledge cid2 expressed mere propositional formula instead cid2 probability distribution cid8 expressed succinctly instance Bayesian network N induced probability distribution pN deﬁnability probabilistic decision pN cid11x maxpN ycid11x pN ycid11x δN X y interpreted theoretic notion deﬁning δN X y prior probability guessing right value y observing values variables X probably natural generalization deﬁnability obviously cid2 deﬁnes y terms X usual way δN X y 1 Thus natural decision problem setting given Bayesian network N set X variables variable y α 0 1 determine δN X y cid3 α Another notion probabilistic deﬁnability arises probabilistic background knowledge expressed set constraints probabilistic logic 62in case single probability distribution set probability distributions notion updated accordingly A computational investigation probabilistic notions deﬁnability left research cid11xcid8X Acknowledgements The authors like thank anonymous reviewers helpful comments The second author partly supported IUT Lens Université dArtois Région NordPasdeCalais IRCICA consortium European Community FEDER Program References 1 J Lang P Liberatore P Marquis Conditional independence propositional logic Artiﬁcial Intelligence 141 12 2002 79121 2 J Lang P Liberatore P Marquis Propositional independenceformulavariable independence forgetting Journal Artiﬁcial Intelli gence Research 18 2003 391443 3 W Craig Three uses HerbrandGentzen theorem relating model theory proof theory Journal Symbolic Logic 22 1957 269285 4 E Beth On Padoas method theory deﬁnition Indagationes Mathematicae 15 1953 330339 5 E Hoogland Deﬁnability interpolationmodeltheoretic investigations PhD thesis Institute Logic Language Computation University Amsterdam 2001 6 E Boros Y Crama P Hammer Polynomialtime inference valid implications Horn related formulae Annals Mathematics Artiﬁcial Intelligence 1 1990 2132 7 A Darwiche Compiling devices decomposable negation normal form Proc IJCAI99 1999 pp 284289 1016 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 8 P Marquis Consequence ﬁnding algorithms Handbook Defeasible Reasoning Uncertainty Management Systems 5 Kluwer Aca demic Publisher 2000 pp 41145 Chapter 2 9 A Darwiche Decomposable negation normal form Journal Association Computing Machinery 48 4 2001 608647 10 F Lin R Reiter Forget Proc AAAI Fall Symposium Relevance New Orleans 1994 pp 154159 11 F Lin On strongest necessary weakest sufﬁcient conditions Artiﬁcial Intelligence 128 2001 143159 12 M Krom The decision problem formulas prenex conjunctive normal form binary disjunctions Journal Symbolic Logic 35 1970 210216 13 A Horn On sentences true direct unions algebras Journal Symbolic Logic 16 1951 1421 14 H Lewis Renaming set clauses Horn set Journal Association Computing Machinery 25 1978 134135 15 T Ibaraki A Kogan K Makino On functional dependencies qHorn theories Artiﬁcial Intelligence 131 12 2001 171187 16 A Blake Canonical expressions boolean algebra PhD thesis University Chicago Chicago IL 1937 17 E Boros P Hammer X Sun Recognition qHorn formulae linear time Discrete Applied Mathematics 55 1994 113 18 P Tison Generalization consensus theory application minimization boolean functions IEEE Transactions Electronic Computers EC16 1967 446456 19 CH Papadimitriou Computational Complexity AddisonWesley 1994 20 W Armstrong Dependency structures database relationships Proc IFIP74 1974 pp 580583 21 R Fagin Functional dependencies relational database propositional logic IBM Journal Research Development 21 1977 534544 22 T Ibaraki A Kogan K Makino Functional dependencies Horn theories Artiﬁcial Intelligence 108 12 1999 130 23 T Castell Computation prime implicates prime implicants variant Davis Putnam procedure Proc ICTAI96 IEEE Computer Society Washington DC USA 1996 p 428 24 A Padoa Essai dune théorie algébrique des nombres entiers précédé dune introduction logique à une théorie déductive quelconque Bibliothèque du Congrès International Philosophie Paris 1903 pp 309365 25 A Darwiche P Marquis A knowledge compilation map Journal Artiﬁcial Intelligence Research 17 2002 229264 26 A Darwiche P Marquis A perspective knowledge compilation Proc IJCAI01 2001 pp 175182 27 G Lakemeyer A logical account relevance Proc IJCAI95 1995 pp 853859 28 S Akers Binary decision diagrams IEEE Transactions Computers C27 6 1978 509516 29 R Bryant Graphbased algorithms boolean function manipulation IEEE Transactions Computers C35 8 677692 30 S CosteMarquis D Le Berre F Letombe P Marquis Propositional fragments knowledge compilation quantiﬁed boolean formulae Proc AAAI05 2005 pp 288293 31 H Fargier P Marquis On use partially ordered decision graphs knowledge compilation quantiﬁed boolean formulae Proc AAAI06 2006 pp 4247 32 D Mundici Tautologies unique Craig interpolant uniform vs nonuniform complexity Annals Pure Applied Logic 27 1974 265273 33 R Rymon An SEtreebased prime implicant generation algorithm Annals Mathematics Artiﬁcial Intelligence 11 1994 329349 special issue modelbased diagnosis 34 T Ibaraki A Kogan K Makino Inferring minimal functional dependencies Horn qHorn theories Annals Mathematics Artiﬁcial Intelligence 38 2003 233255 35 R Reiter A theory diagnosis ﬁrst principles Artiﬁcial Intelligence 32 1987 5795 36 P Struss Testing discrimination diagnoses Proc DX94 1994 pp 312320 37 S McIlraith Generating tests abduction Proc KR94 1994 pp 449460 38 J Lang Planning discriminate diagnoses Proc DX97 1997 pp 135139 39 R Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems MIT Press 2001 40 E Giunchiglia V Lifschitz An action language based causal explanation Preliminary report Proc AAAI98 1998 pp 623630 41 J Lang F Lin P Marquis Causal theories action computational core Proc IJCAI03 2003 pp 10731078 42 V Lifschitz Frames space situations research note Artiﬁcial Intelligence 46 1990 365376 43 S Fahlman A planning robot construction tasks Artiﬁcial Intelligence 5 1974 149 44 AJ Hu DL Dill Reducing BDD size exploiting functional dependencies Proc 30th ACMIEEE Design Automation Conference 1993 pp 266271 45 H Kautz D McAllester B Selman Exploiting variable dependency local search abstract Proc IJCAI97 poster session 1997 p 57 46 É Grégoire R Ostrowski B Mazure L Sais Automatic extraction functional dependencies Proc SAT04 Selected Papers Lecture Notes Computer Science vol 3542 Springer 2005 pp 122132 47 D Le Berre Exploiting real power unit propagation lookahead Proc SAT01 Electronic Notes Discrete Mathematics vol 9 Elsevier Science Publishers 2001 48 E Giunchiglia M Maratea A Tacchella Dependent independent variables propositional satisﬁability Proc JELIA02 2002 pp 296307 49 S Ghilardi M Zawadowski Sheaves Games Model Completions Trends LogicStudia Logica Library vol 14 Kluwer Academic Publishers Dordrecht 2002 categorical approach nonclassical propositional logics 50 I Sain Beths Craigs properties epimorphisms amalgamation algebraic logic Algebraic Logic Universal Algebra Computer Science Lecture Notes Computer Science vol 24 Springer 1990 pp 209225 51 I Hodkinson Finite variable logics Bulletin European Association Theoretical Computer Science 51 1993 111140 J Lang P Marquis Artiﬁcial Intelligence 172 2008 9911017 1017 52 K Fine Failure interpolation lemma quantiﬁed modal logic Journal Symbolic Logic 44 2 1979 201206 53 K Schütte Der Interpolationssatz der intuitionistischen Prädikatenlogic Mathematische Annalen 148 1962 192200 54 D Gabbay Semantic proof Craigs interpolation theorem intuitionistic logic extensions Proc Logic Colloquium69 1971 pp 403410 55 L Segouﬁn V Vianu Views queries determinacy rewriting Proc PODS05 2005 pp 4960 56 G Kreisel Explicit deﬁnability intuitionistic logic Journal Symbolic Logic 25 1960 389390 57 L Maksimova An analog Beths theorem normal extensions modal logic K4 Siberian Mathematical Journal 33 6 1993 10521065 58 A Urquhart Beths deﬁnability theorem relevant logics E Orlowska Ed Logic Work Essays Dedicated Memory Helena Rasiowa SpringerVerlag 1999 pp 229234 59 L Maksimova Deﬁnability interpolation nonclassical logics Studia Logica 82 2 2006 271291 60 F Baader W Nutt Basic description logics Description Logic Handbook 2003 pp 4395 61 B Cate W Conradie M Marx Y Venema Deﬁnitorially complete description logics Proc KR06 2006 pp 7989 62 N Nilsson Probabilistic logic Artiﬁcial Intelligence 28 1987 7187