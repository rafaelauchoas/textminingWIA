Artiﬁcial Intelligence 243 2017 2644 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint CCEHC An eﬃcient local search algorithm weighted partial maximum satisﬁability Chuan Luo ab Shaowei Cai c Institute Computing Technology Chinese Academy Sciences Beijing 100190 China b State Key Laboratory Mathematical Engineering Advanced Computing Wuxi 214125 China c State Key Laboratory Computer Science Institute Software Chinese Academy Sciences Beijing 100190 China d College Information Science Technology Jinan University Guangzhou 510632 China e Institute Integrated Intelligent Systems Griﬃth University Brisbane 4111 Australia f Department Material Science Engineering Massachusetts Institute Technology MA 02139 USA Kaile Su Wenxuan Huang f r t c l e n f o b s t r c t Article history Received 13 May 2015 Received revised form 19 October 2016 Accepted 14 November 2016 Available online 17 November 2016 Keywords Local search Weighted partial maximum satisﬁability Emphasis hard clauses 1 Introduction Weighted maximum satisﬁability unweighted partial maximum satisﬁability PMS signiﬁcant generalizations maximum satisﬁability MAXSAT weighted partial maximum satisﬁability WPMS combination important applications practice Recently great breakthroughs stochastic local search SLS weighted MAXSAT PMS resulting stateoftheart SLS algorithms CCLS Dist DistUP However compared great progress SLS weighted MAXSAT PMS performance SLS WPMS lags far In paper present new SLS algorithm named CCEHC WPMS CCEHC employs extended framework CCLS heuristic emphasizing hard clauses called EHC With strong accents hard clauses EHC components variable selection mechanism focusing conﬁguration checking based hard clauses weighting scheme hard clauses biased random walk component Extensive experiments demonstrate CCEHC signiﬁcantly outperforms stateoftheart SLS competitors Further experimental results comparing CCEHC stateoftheart complete solver effectiveness CCEHC number application WPMS instances indicate CCEHC beneﬁcial practice Also empirical analyses conﬁrm effectiveness component underlying EHC heuristic 2016 Elsevier BV All rights reserved The maximum satisﬁability MAXSAT problem optimization version Boolean satisﬁability SAT problem prototypical NPcomplete problem great importance variety ﬁelds science mathe matical logic artiﬁcial intelligence In context SAT MAXSAT problems propositional formula F usually cid3 expressed conjunctive normal form CNF 1 F j lij lij literal Boolean vari able negation A CNF formula expressed set clauses clause disjunction literals CNF formula conjunction clauses cid2 Corresponding author Email addresses chuanluosabergmailcom C Luo shaoweicaicsgmailcom S Cai ksugriﬃtheduau K Su key01027mitedu W Huang httpdxdoiorg101016jartint201611001 00043702 2016 Elsevier BV All rights reserved C Luo et al Artiﬁcial Intelligence 243 2017 2644 27 Given propositional formula conjunctive normal form CNF SAT problem decide assignment exists clauses CNF formula satisﬁed MAXSAT problem seek assignment maximizes number satisﬁed clauses CNF formula weighted MAXSAT problem clause associated positive integer weight ﬁnd assignment maximizes total weight satisﬁed clauses important generalization MAXSAT unweighted partial maximum satisﬁability PMS problem clauses divided hard ones soft ones ﬁnd assignment satisﬁes hard clauses maximizes number satisﬁed soft clauses important generalization MAXSAT The weighted partial maximum satisﬁability WPMS problem combination weighted MAXSAT PMS signiﬁcant generalization MAXSAT Given CNF formula WPMS problem clauses divided hard ones soft ones soft clause associated positive integer weight seek assignment satisﬁes hard clauses maximizes total weight satisﬁed soft clauses In theory MAXSAT generalizations weighted MAXSAT PMS WPMS typically NPhard problems known optimal solutions problems hard approximate 2 Thus interesting explore highperformance heuristic procedures solve hard problems In paper focus WPMS problem In practice combinatorial problems realworld applications usually contain hard soft constraints 3 soft constraints different priorities encoding realworld problems WPMS problem natural direct encoding SAT MAXSAT weighted MAXSAT PMS In fact important realistic problems wide range realworld applications computational protein design 45 set covering 6 coalition structure generation 7 encoded solved WPMS instances There popular categories practical algorithms solving MAXSAT complete algorithms stochastic local search SLS algorithms Complete algorithms able prove optimality solution return goodquality solution largesized instances reasonable time 8 Complete algorithms classiﬁed main classes branch bound MAXSAT algorithms 911 based DPLL procedures 1213 SAT based algorithms 1416 successively eﬃcient CDCL ConﬂictDriven Clause Learning SAT solver 1718 Although SLS algorithms typically incomplete guarantee optimality solutions ﬁnd SLS algorithms able ﬁnd goodquality solutions reasonable time frame 193 SLS algorithms usually evolving GSAT 20 WalkSAT 21 However little work SLS algorithms solving WPMS existing solvers solving WPMS complete ones Recently signiﬁcant breakthroughs achieved SLS algorithms solving weighted MAXSAT PMS sulting stateoftheart SLS algorithms CCLS 22 Dist 3 Dists improvement DistUP 23 The CCLS algorithm makes great progress solving weighted MAXSAT CCLS won categories incomplete solver track MAXSAT Evaluations 2013 2014 thanks conﬁguration checking strategy 24 successfully applied SAT 25 minimum vertex cover 26 The CCLS algorithm solve WPMS translating WPMS weighted MAXSAT translation straightforward setting weight hard clause total weight soft clauses plus 1 However comes WPMS problem CCLS loses power shows ineffec tiveness seen competition results incomplete solver track MAXSAT Evaluation 20141 The Dist algorithm shows great success solving PMS won categories incomplete solver track MAX SAT Evaluation 2014 competes stateoftheart complete algorithms classes PMS application instances advanced encryption standard protein 3 Dist adapted solve WPMS current best SLS algorithm solving WPMS winning random WPMS category crafted WPMS category incomplete solver track MAXSAT Evaluation 2014 Particularly competition results MAXSAT Evaluation 2014 Dist performs better stateoftheart complete algorithms crafted WPMS benchmark The DistUP algorithm improvement Dist unit propagation initialization procedure shows improvement Dist industrial instances However CCLS Dist DistUP dedicated solving WPMS speciﬁcally performance solving WPMS improved Compared great progress SLS algorithms solving weighted MAXSAT PMS performance SLS algorithms solving WPMS lags far This motivates design eﬃcient SLS algorithm solving WPMS Inspired success Dist DistUP ambition solve classes structured problems realworld ones In work present new SLS algorithm named CCEHC Conﬁguration Checking Emphasis Hard Clauses solving WPMS Our CCEHC algorithm employs extended framework CCLS heuristic emphasizing hard clauses called EHC With strong focus hard clauses EHC heuristic components variable selection mechanism focusing forbidding mechanism conﬁguration checking based hard clauses weighting scheme hard clauses approach biased random walk Our main contributions paper summarized follows Firstly identify eﬃcient algorithm framework solving WPMS It surprising algorithm framework based CCLS instead Dist CCLS shows worse performance solving WPMS compared Dist Secondly propose new variable selection mechanism focusing new forbidding mechanism conﬁguration checking This forbidding mechanism similar clause state based conﬁguration checking context SAT 2729 However major distinction conﬁguration checking mechanism emphasizes hard clause conﬁgu 1 http wwwmaxsat udl cat 14 resultsincomplete index html 28 C Luo et al Artiﬁcial Intelligence 243 2017 2644 ration consists states hard clause clauses Also best knowledge ﬁrst time kind clause states based conﬁguration checking applied MAXSAT solving previous conﬁguration checking techniques context MAXSAT based neighboring variables 2230 We remark vari able selection mechanism improve performance CCEHC random WPMS instances makes contributions performance CCEHC number structured realworld application WPMS instances The related experi ments conﬁrms effectiveness variable selection mechanism detailed discussions Section 71 Finally adopting weighting scheme hard clauses ﬁrst exploited Dist adjusting strategy biased random walk partial MAXSAT integrate new conﬁguration checking mechanism subtle way obtain new EHC heuristic The components underlying heuristic EHC accentuates hard clauses ﬁts algorithm framework To evaluate eﬃciency robustness CCEHC algorithm compare CCEHC CCLS Dist DistUP broad range WPMS benchmarks including random crafted industrial benchmarks MAXSAT Evaluation 2014 realworld application benchmarks Experimental results clearly CCEHC generally performs better CCLS Dist DistUP establishes new state art SLS algorithms solving WPMS We conduct experiments study performance variability SLS algorithms selected instances Further conduct empirical evaluations analyze underlying component EHC heuristic related results conﬁrm effectiveness components EHC heuristic Also compare CCEHC algorithm stateoftheart complete algorithm WPM2014 1514 WPMS benchmarks According experi mental results CCEHC performs worse WPM2014 industrial benchmark MAXSAT Evaluation 2014 application benchmark CCEHC able return betterquality solutions WPM2014 important realworld application benchmarks random crafted benchmarks MAXSAT Eval uation 2014 We include related experiments stateoftheart lowerbound based complete solver Eva 16 The experiments indicate number application instances Eva prove optimality CCEHC al gorithm able return goodquality solutions fast indicating CCEHC algorithm beneﬁcial practice Additionally conduct empirical evaluations analyze eﬃciency combination CCEHC unit prop agation initialization 23 utilized DistUP related experiments demonstrate resulting solver CCEHCUP gives performance improvement CCEHC large number WPMS instances indicates CCEHC cooperate unit propagation initialization The remainder paper structured follows In Section 2 provide preliminary deﬁnitions notations Section 3 presents brief review CCLS algorithm In Section 4 propose EHC heuristic introduce components underlying EHC heuristic Section 5 presents CCEHC algorithm describes In Section 6 extensive experiments wide range WPMS benchmarks conducted present eﬃciency CCEHC In Section 7 empirically analyze effectiveness component underlying EHC heuristic list main differences CCHEC CCLS major differences CCEHC Dist evaluate eﬃciency combination CCEHC unit propagation initialization Section 8 concludes paper lists future work 2 Preliminaries Given set n Boolean variables V x1 x2 xn set literals corresponding variables L x1 x1 x2 x2 xn xn clause disjunction literals A formula conjunctive normal form CNF junction clauses described set clauses Given CNF formula F use VF denote set variables F Two different variables neighbors appear clause simultaneously use notation Nx denote set xs neighboring variables A complete assignment mapping assigns Boolean value 0 1 variable formula For SLS algorithms solving WPMS MAXSAT weighted MAXSAT PMS candidate solution complete assignment Given CNF formula F complete assignment α corresponding F clause F assignment α possible states satisﬁed unsatisﬁed clause c F satisﬁed literal c true α c unsatisﬁed A weighted partial CNF formula CNF formula clauses divided hard ones soft ones soft clause c associated positive integer wc weight Given weighted partial CNF formula F weighted partial maximum satisﬁability WPMS problem ﬁnd complete assignment satisﬁes hard clauses F maximizes total weight satisﬁed soft clauses F Given weighted partial CNF formula F WPMS instance complete assignment feasible satisﬁes hard clauses F cost feasible complete assignment α denoted costα total weight unsatisﬁed soft clauses α The optimal assignment feasible complete assignment minimum cost value The basic framework SLS algorithms solving WPMS described follows In initialization SLS algorithm randomly generates assignment mapping Boolean variables SLS algorithm repetitively selects ﬂips Boolean variable timeout number search steps exceeds given limit ﬁnally SLS algorithm reports feasible assignment lowest cost value encountered search process solution In search process SLS algorithms work modes greedy intensiﬁcation mode diversiﬁcation mode In greedy mode SLS algorithms prefer ﬂip variables ﬂips decrease number unsatisﬁed C Luo et al Artiﬁcial Intelligence 243 2017 2644 29 hard clauses total weight unsatisﬁed soft clauses In diversiﬁcation mode SLS algorithms tend diversify search explore search space randomized strategies In SLS algorithms solving WPMS variable x hard score x denoted hmakex number total weight clause weighting scheme unsatisﬁed hard clauses satisﬁed x ﬂipped hard break score x denoted hbreakx number total weight clause weighting scheme satisﬁed hard clauses unsatisﬁed x ﬂipped hard score x denoted hscorex increment number total weight clause weighting scheme satisﬁed hard clauses x ﬂipped understood hscorex hmakex hbreakx 3 soft score x denoted smakex total weight unsatisﬁed soft clauses satisﬁed x ﬂipped soft break score x denoted sbreakx total weight satisﬁed soft clauses unsatisﬁed x ﬂipped soft score x denoted sscorex increment total weight satisﬁed soft clauses x ﬂipped understood sscorex smakex sbreakx 3 Most SLS algorithms separate hard clauses soft clauses use concepts general score break score score properties select variables ﬂipped variable x score x denoted makex calculated makex A hmakex smakex break score x denoted breakx calculated breakx A hbreakx sbreakx score x denoted scorex calculated scorex A hscorex sscorex seen scorex makex breakx A makex breakx scorex positive integer value usually set total weight soft clauses plus 1 In algorithm use scorex adopt deﬁnition setting 3 Reviewing CCLS algorithm In section brieﬂy review CCLS algorithm 22 serves basis proposed algorithm The CCLS algorithm recent breakthrough local search solving MAXSAT shows stateoftheart performance solving weighted MAXSAT We like note CCLS algorithm designed solving weighted MAXSAT Thus CCLS applied solving WPMS ﬁrst translates WPMS instance weighted MAXSAT instance setting weight hard clause total weight soft clauses plus 1 solves translated weighted MAXSAT instance The pseudocode CCLS outlined Algorithm 1 literature 22 Algorithm 1 The CCLS algorithm Input Weighted CNFformula F maxSteps 1 generate random assignment α α α 2 step 1 maxSteps 3 4 5 6 c random unsatisﬁed clause v random variable c time limit exceeded clauses satisﬁed break ﬁxed probability p 7 8 9 10 11 12 CCMPvars v x greatest score CCMPvars breaking ties randomly c random unsatisﬁed clause v random variable c α α v ﬂipped costα costα α α 13 14 15 return α In initializing stage CCLS algorithm ﬁrst generates complete assignment α Boolean variables initial solution line 1 Algorithm 1 Then CCLS algorithm starts search process executing loop search step CCLS selects ﬂips variable During search process better solution CCLS algorithm best solution α updated accordingly line 14 Algorithm 1 In search step CCLS ﬁrst checks number search steps exceeds step limit maxSteps time limit exceeded clauses satisﬁed terminating criterions met search iteration terminates CCLS tries select ﬂipping variable search step With ﬁxed probability p CCLS works diversiﬁcation mode employing standard random walk component lines 56 Algorithm 1 selects unsatisﬁed clause c randomly picks variable c randomly CCLS switches greedy mode activating CCM Conﬁguration Checking Make heuristic lines 812 Algorithm 1 select variables ﬂipped The CCM heuristic employs neighboring variables based conﬁguration checking 24 avoid local optima prefers select CCMP ﬁguration changed positive variable highest score breaking ties randomly search 22 A variable x deﬁned CCMP makex 0 xs ﬂip xs neighboring variables ﬂipped 22 The 30 C Luo et al Artiﬁcial Intelligence 243 2017 2644 notation CCMPvars denote set CCMP variables search After ﬂipping variable selected CCLS algorithm ﬂips selected variable starts search step line 13 Algorithm 1 Finally search process terminates CCLS algorithm reports feasible solution cost value 4 The heuristic emphasis hard clauses As clearly seen Algorithm 1 CCLS algorithm distinguish hard clauses soft clauses In opinion disadvantage CCLS applied solving WPMS hard clause important feature WPMS problem By treating hard clauses soft clauses differently different heuristics better use feature To improve performance CCLS solving WPMS follow direction design sophisticated heuristic called EHC Emphasis Hard Clauses separates hard clauses soft clauses emphasizes hard clauses The EHC heuristic composed components variable selection heuristic conﬁguration checking mechanism based hard clauses weighting scheme hard clauses strategy biased random walk 41 Variable selection hard clauses states based conﬁguration checking Inspired success clause states based conﬁguration checking CSCC strategy 2729 SLS algorithms SAT adapt CSCC strategy solving WPMS In WPMS problem hard clauses important soft clauses hard clauses forced satisﬁed feasible solutions propose new forbidding strategy conﬁg uration checking based states hard clauses named HCSCC Hard Clauses States based Conﬁguration Checking HCSCC concerns hard clauses different original CSCC strategy 29 concerns clauses Because deﬁnition conﬁguration important concept conﬁguration checking strategy 24 formal deﬁnition conﬁguration HCSCC strategy follows Deﬁnition 1 Given weighted partial CNF formula F complete assignment α VF conﬁguration variable x VF HCSCC vector conﬁgurationx consisting states hard clauses x appears assign ment α For variable x change element conﬁgurationx considered change conﬁgurationx vector The HCSCC strategy designed prevent ﬂipping variable x conﬁgurationx changed xs ﬂip Similar approximate implementation CSCC 29 order implement HCSCC eﬃciently employ Boolean array hardConf size equal number variables The array hardConf maintained according following rules In initializing stage variable x hardConf x set 1 Whenever variable x ﬂipped hardConf x set 0 Then hard clause c x appears checked cs state changed satisﬁed unsatisﬁed vice versa If cs state changed variable y y cid5 x c hardConf y set 1 Thus implementation HCSCC strategy variable xs conﬁguration changed xs ﬂip hardConf x 1 Similar notion CCD Conﬁguration Changed Decreasing variables 24 SLS algorithms solving SAT deﬁne notion HCSCCD Hard Clauses States based Conﬁguration Changed Decreasing variables combines HCSCC strategy hscore property The formal deﬁnition HCSCCD variable given follows Deﬁnition 2 Given partial weighted CNF formula F complete assignment α V F variable x V F HCSCCD hardConf x 1 hscorex 0 In work use notation HCSCCDvars denote set HCSCCD variables search In search process CCEHC algorithm prefers select variables ﬂipped HCSCCDvars set Here prove important lemma stating variable x HCSCCD variable x CCMP variable Lemma 1 For given variable x x HCSCCD variable x CCMP variable Proof For variable x x HCSCCD variable meaning hscorex 0 xs ﬂip exists hard clause c x appears cs state changed satisﬁed unsatisﬁed vice versa On hand change cs state exists variable y y cid5 x ﬂipped xs ﬂip As x y appear hard clause c derive y Nx meaning xs ﬂip xs neighboring variables ﬂipped C Luo et al Artiﬁcial Intelligence 243 2017 2644 31 Since hscorex 0 hscore calculated hmakex hbreakx hmakex hbreakx Since hbreakx nonnegative integer according deﬁnition Section 2 hbreakx 0 Therefore easily obtain hmakex 0 Since smakex nonnegative integer according deﬁnition Section 2 smakex 0 As makex A hmakex smakex easily derive makex 0 As makex 0 xs ﬂip xs neighboring variables ﬂipped x CCMP variable cid2 When select HCSCCD variables According Lemma 1 easy derive HCSCCDvars set subset CCMPvars set Inspired success hierarchical combination different candidate variable sets context SAT 31 work adopts hierarchical combination likewise CCEHC algorithm ﬁrst tries select variable HCSCCDvars set higher priority HCSCCDvars set algorithm selects variable CCMPvars set Eﬃcient implementation searching HCSCCD variables When conﬁguration checking local search SAT MAXSAT concept CCD variables 24 important variable x deﬁned CCD scorex 0 xs ﬂip xs neighboring variables ﬂipped 24 The notation CCDvars denotes set CCD variables search In Lemma 2 prove important property variable x HCSCCD variable x CCD variable Thus HCSCCDvars set subset CCDvars set The literature 22 proves CCDvars subset CCMPvars key point eﬃcient implementation searching HCSCCD variables search CCDvars set CCMPvars set Lemma 2 For given variable x x HCSCCD variable x CCD variable Proof For variable x x HCSCCD variable meaning hscorex 0 xs ﬂip exists hard clause c x appears cs state changed satisﬁed unsatisﬁed vice versa On hand change cs state exists variable y y cid5 x ﬂipped xs ﬂip As x y appear hard clause c derive y Nx meaning xs ﬂip xs neighboring variables ﬂipped Since hscorex 0 hscorex nonnegative integer according deﬁnition Section 2 easily obtain hscorex 1 Thus A hscorex A As sscorex smakex sbreakx smakex nonnegative integer according deﬁnition Section 2 easily obtain sscorex sbreakx As scorex A hscorex sscorex scorex A sbreakx According Section 2 A positive integer value equals total weight soft clauses plus 1 value sbreakx larger total weight soft clauses Thus obtain scorex 1 Because scorex 0 xs ﬂip xs neighboring variables ﬂipped x CCD vari able cid2 42 Weighting scheme hard clauses In context SAT clause weighting schemes serve diversiﬁcation mechanisms SLS algorithms prominently successfully SLS algorithms solving SAT 3236 This motivates extend CCLS algorithm framework effective clause weighting scheme In order handle hard clauses higher priority soft clauses clause weighting scheme natural adopt clause weighting scheme works hard clauses In work utilize adopted Dist algorithm 3 adds weights hard clauses As stated literature 3 clause weighting hard clauses helps obtain feasible solutions helps algorithm visit different satisfying assignments hard clauses The hard clause weighting scheme similar PAWS scheme 35 works follows In beginning SLS algorithm hard clause c weight c wc set 1 When hard clause weighting scheme activated probability sp sp real number 0 sp 1 satisﬁed hard clause c wc 1 wc decreased 1 probability 1 sp unsatisﬁed hard clause c wc increased 1 Remark correctness hard clause weighting scheme The correctness comes facts 1 The ﬁnal feasible solution reported CCEHC satisfy hard clauses algorithm veriﬁes solution reporting 2 The hard clause weighting scheme changes weight hard clauses change weight soft clauses inﬂuence total weight unsatisﬁed soft clauses ﬁnal feasible solution When activate hard clause weighting scheme In work CCEHC algorithm activates hard clause weight ing scheme immediately exists HCSCCD variable search We regard phenomenon HCSCCD variable exists evidence CCEHC stagnated If SLS algorithm stagnated important use diversiﬁcation mechanism As clause weighting scheme serves effective diversiﬁcation strategy reasonable activate hard clause weighting scheme HCSCCD variable exists Eﬃcient implementation hard clause weighting scheme According description hard clause weighting scheme consists phases weightincreasing phase weightdecreasing phase The weightdecreasing phase 32 C Luo et al Artiﬁcial Intelligence 243 2017 2644 Algorithm 2 The CCEHC algorithm Input Weighted partial CNFformula F maxSteps 1 generate random assignment α α α 2 step 1 maxSteps 3 4 5 6 7 time limit exceeded hard soft clauses satisﬁed break ﬁxed probability p exists unsatisﬁed hard clause c random unsatisﬁed hard clause c random unsatisﬁed soft clause v variable x greatest sscorex c breaking ties randomly 8 9 10 11 12 13 14 15 16 17 HCSCCDvars v variable randomly selected HCSCCDvars bias ones greatest hscore update hard clause weights CCMPvars v x greatest scorex CCMPvars breaking ties randomly c random unsatisﬁed clause bias unsatisﬁed hard clauses v random variable c α α v ﬂipped costα costα α α 18 19 20 α 21 return No feasible assignment satisﬁes hard clauses return α concentrates hard satisﬁed clauses weights greater 1 For eﬃcient implementation hard clause weighting scheme maintain set hard clauses weights greater 1 When weightdecreasing phase activated algorithm checks clauses set checking clauses saves computation time 43 Biased random walk An important component CCLS algorithm random walk component designed diversiﬁcation mode The random walk component lines 56 Algorithm 1 CCLS standard mechanism designed SAT MAXSAT However standard random walk component suitable SLS algorithms WPMS distinguish hard soft clauses Since hard clauses forced satisﬁed feasible solutions WPMS problem reasonable employ biased random walk component prefers selecting hard clause higher priority choosing soft clause The biased random walk strategy suggested literature 37 described follows When biased random walk component called exist unsatisﬁed hard clauses SLS algorithm ﬁrst tries choose unsatisﬁed hard clause randomly unsatisﬁed soft clause selected randomly Then SLS algorithm employs strategy pick variable chosen hard soft clause In work accomplished selecting variable x greatest sscorex chosen hard soft clause inspired literature 3 How apply biased random walk SLS algorithm In CCEHC algorithm replace standard random walk component lines 56 Algorithm 1 described biased random walk component natural way apply biased random walk component Eﬃcient implementation biased random walk As biased random walk component pick clause randomly set unsatisﬁed hard clauses set unsatisﬁed soft clauses search step key point eﬃciently implement biased random walk maintain clause sets search process set current unsatisﬁed hard clauses set current unsatisﬁed soft clauses 5 The CCEHC algorithm On basis framework CCLS algorithm components underlying EHC heuristic described Section 4 present new SLS algorithm called CCEHC solving WPMS We outline pseudocode CCEHC algorithm Algorithm 2 follows Initially CCEHC algorithm generates assignment α uniformly random initial solution Then CCEHC algorithm starts search process executing loop During search process better solution best solution α updated accordingly line 19 Algorithm 2 In search step CCEHC ﬁrst checks number search steps exceeds search step limit maxSteps time limit exceeded hard soft clauses satisﬁed terminating criterions met CCEHC terminates search iteration CCEHC tries select ﬂipping variable search step With probability p CCEHC calls biased random walk component lines 57 Algorithm 2 exists unsatisﬁed hard clause C Luo et al Artiﬁcial Intelligence 243 2017 2644 33 unsatisﬁed hard clause selected randomly unsatisﬁed soft clause picked randomly CCEHC selects variable x greatest sscorex chosen hard soft clause variable ﬂipped With probability 1 p CCEHC ﬁrst checks HCSCCDvars set HCSCCDvars set CCEHC picks variable randomly selected HCSCCDvars bias ones best hscore inspired literature 3 line 10 Algorithm 2 Otherwise HCSCCDvars set meaning algorithm stagnated CCEHC updates hard clause weights according hard clause weighting scheme presented Section 42 diversiﬁcation line 12 Algorithm 2 selects variable according CCMlike heuristic lines 1317 Algorithm 2 CCMPvars set CCEHC picks variable greatest score CCMPvars breaking ties randomly CCMPvars CCEHC selects unsatisﬁed clause randomly exist unsatisﬁed hard clauses unsatisﬁed hard clause selected randomly unsatisﬁed soft clause selected randomly CCEHC picks variable randomly chosen hard soft clause variable ﬂipped After variable ﬂipped selected CCEHC algorithm ﬂips selected variable starts search step line 18 Algorithm 2 Finally search process terminates CCEHC algorithm checks feasibility best solution α feasible CCEHC outputs No If α feasible satisﬁes hard clauses CCEHC reports α feasible assignment solution α 6 Experimental evaluations In section ﬁrst introduce benchmark instance sets competitors experimental setup experiments Then report experiments conducted broad range WPMS benchmarks evaluate eﬃciency robustness CCEHC algorithm Finally present additional empirical evaluations CCEHC stateoftheart complete solver WPM2014 testing WPMS benchmark Notably experimental results demonstrate effectiveness CCEHC number application instances WPM2014 stateoftheart lowerbound based complete solver Eva return goodquality solutions cutoff time 300 CPU seconds indicating CCEHC genuinely beneﬁcial practice We like note crafted WPMS category incomplete solver track MAXSAT Evaluation 20152 CCEHC returns bestquality solution largest number WPMS instances encouragingly ﬁnds betterquality solution instances eﬃcient complete solver ILP2015in 38 uses outputting format incomplete solvers printing betterquality solution immediately solver ﬁnds competition SLS competitors beaten ILP2015in 61 The benchmarks We evaluate CCEHC algorithm wide range benchmarks including random crafted industrial WPMS bench marks MAXSAT Evaluation 2014 realworld application benchmarks These testing benchmarks described The ﬁrst benchmark MSE2014_WPMS_Random random WPMS benchmark MAXSAT Evaluation 20143 contains random WPMS instances variety clausetovariable ratios The second benchmark MSE2014_WPMS_Crafted crafted WPMS benchmark MAXSAT Evaluation 20144 contains structured instances includes structured types phasetransition ones generated according Model RB proven diﬃcult theory 39 practice 40 Solving instances eﬃciently considered diﬃcult task SLS algorithms The benchmark MSE2014_WPMS_Industrial industrial WPMS benchmark MAXSAT Evaluation 20145 currently remains diﬃcult SLS algorithms On solving industrial WPMS instances SLS algorithms usually poor performance Thus challenge improve performance SLS algorithms benchmark Moreover order CCEHC algorithm beneﬁcial practice consider realworld appli cation benchmarks encoded realworld applications including computational protein design6 45 advanced encryption standard7 AES 41 pedigree problem8 42 cluster expansion9 43 For benchmark computa tional protein design instances encoded Allouche et al 5 Computational protein design tries intelligently guide protein design process producing collection proteins rich functional proteins suc cessfully applied increase protein thermostability solubility 5 For benchmark advanced encryption standard 2 httpwwwmaxsatudlcat15resultsincompleteindexhtmlwpmscrafted 3 http wwwmaxsat udl cat 14 benchmarks wpms _random tgz 4 http wwwmaxsat udl cat 14 benchmarks wpms _crafted tgz 5 http wwwmaxsat udl cat 14 benchmarks wpms _industrial tgz 6 http genoweb toulouse inra fr degivry evalgm CFN ProteinDesign 7 In directory aes http wwwmaxsat udl cat 14 benchmarks pms _industrial tgz 8 http genoweb toulouse inra fr degivry evalgm CFN Pedigree 9 http wwwncic ac cn acg Projects CCEHC cluster _expansion zip 34 C Luo et al Artiﬁcial Intelligence 243 2017 2644 instances benchmark encoded Gwynne et al 41 minimum box translation These WPMS instances translated components AES smallscale variants AES broadly applied ﬁelds se cure communication systems highperformance database severs digital videoaudio recorders RFID tags smart cards 44 FPGAbased designs 4546 For pedigree benchmark instances translated model weighted constraint satisfaction problem encoded Sanchez et al 42 The objective NPcomplete pedigree problem decide Mendelian error exists given pedigree 47 increasingly important problem 42 For benchmark cluster expansion instances translated model pseudoBoolean optimization encoded Huang et al 48 Cluster expansion solve exact ground states generalized Ising model 49 certain periodicity physically related construction ground state phase diagram different alloys 50 battery materials 51 62 The stateoftheart SLS competitors Our CCEHC algorithm compared stateoftheart SLS algorithms CCLS 22 Dist 3 DistUP 23 The CCLS algorithm basic framework CCEHC current best SLS solver weighted MAXSAT instances unweighted MAXSAT instances CCLS won categories incomplete solver tracks MAXSAT Evaluations 2013 2014 As reported literature 22 types MAXSAT instances CCLS signiﬁcantly outperforms eﬃcient SLS solver IRoTS 2 ﬁnds betterquality solution stateoftheart complete solvers akmaxsat_ls 52 New WPM2 14 Also according results MAXSAT Evaluation 2013 CCLS performs better iraNovelty 53 optimaxit SAT4Jmsexti 54 SAT4Jmsinti 54 In experiments use version CCLS submitted MAXSAT Evaluation 2015 The Dist algorithm current best SLS solver PMS instances won categories incomplete solver track MAXSAT Evaluation 2014 Indeed Dist current best SLS solver WPMS won random WPMS category crafted WPMS category incomplete solver track MAXSAT Evaluation 2014 beating SLS solvers outperforming complete solvers participate categories WPM2014 1415 optimax As reported literature 3 Dist shows superiority CCLS eﬃcient SLS solver TWOLEVEL 55 wide range PMS benchmarks competes stateoftheart complete solvers classes PMS application instances In experiments adopt latest version Dist 23 The DistUP algorithm equips Dist unit propagation initialization recent improvement Dist In experiments adopt version DistUP presented literature 23 63 Experimental preliminaries Our CCEHC algorithm implemented programming language C compiled compiler g version 463 option O2 The source codes10 CCEHC detailed experimental results11 CCEHC available online In paper experimental evaluations carried cluster workstations equipped Intel Xeon E78830 213 GHz CPU 24 MB L3 cache 10 TB RAM operating CentOS version 701406 In experiments evaluation methodology adopted incomplete solver track MAXSAT Evaluation 2014 described follows Each solver performs run instance For run record best solution utilize runsolver tool version 334 56 record time ﬁnding best solution For solver instance class benchmark report number instances solver ﬁnds best solution solvers table corresponding related experiment denoted win averaged time winning instances denoted time unit CPU second The number instances instance class benchmark indicated column inst The cutoff time run set 300 CPU seconds suggested rules incomplete solvers track MAXSAT Evaluation 2014 clearly specify cutoff time tables present related experimental results The rules MAXSAT Evaluation 2014 establish winner solver ﬁnds best solution instances competing solvers related experiment breaking ties preferring solver averaged time The results bold font indicate best performance related instance class benchmark related experiment Additionally order study complementarity competing solvers experiment report results Virtual Best Solver VBS perfect selector instance solution VBS best solutions reported competing solvers included experiment solving instance competing solver report bestquality solution computing time VBS instance shortest We like note VBS actual solver gives upper bound performance actual perinstance selector competing solvers experiment 10 http wwwncic ac cn acg Projects CCEHC CCEHC _source _codes zip 11 http wwwncic ac cn acg Projects CCEHC CCEHC _detailed _experimental _results zip C Luo et al Artiﬁcial Intelligence 243 2017 2644 35 Table 1 The parameter settings reported SMAC CCEHC Dist CCLS random WPMS instances crafted WPMS instances industrial application WPMS instances Instance type Random WPMS Crafted WPMS Industrial application WPMS CCEHC p 02 0177 0279 sp 00001 0003 0085 Dist wp 01 01 0038 sp 0001 0001 0002 t 15 15 6 CCLS p 0535 0204 02 64 Parameter tuning It acknowledged parameter settings important empirical behavior highperformance algorithms especially heuristic algorithms solving computationally hard problems 57 At present generalpurpose au tomatic conﬁguration tools 5758 applied tuning parameter settings practical algorithms shown power solving SAT mixed integer programming In work order conduct fair performance comparison utilize powerful automatic conﬁguration tool called SMAC Sequential Modelbased Algorithm Conﬁguration version 21003 58 tune parameter settings SLS algorithm CCEHC SLS competitors The CCEHC algorithm 2 parameters tuned p real number controls balance greedy mode diversiﬁcation mode sp real number controls probability smoothing hard clause weights Dist algorithm 3 parameters tuned wp real number controls probability activating random walk heuristic sp real number controls probability smoothing hard clause weights t integer controls cardinality candidate variable set applied Best Multiple Selections strategy CCLS algorithm 1 parameter tuned p real number controls balance greedy mode diversiﬁcation mode For CCEHC parameter domain real number p 0 05 default value p 02 parameter domain real number sp 0 01 default sp 0001 solving industrial application instances 00001 solving random crafted WPMS instances For Dist parameter domain real number wp 0 1 default value wp 01 parameter domain real number sp 0 1 default value sp 000001 solving industrial application WPMS instances 0001 random crafted WPMS instances parameter domain integer t 1 100 default value t 40 industrial application WPMS instances 15 random crafted WPMS instances For CCLS parameter domain real number p 0 1 default value p 02 In parameter tuning procedure use MSE2014_WPMS_Random benchmark MSE2014_WPMS_ Crafted benchmark MSE2014_WPMS_Industrial benchmark training sets tuning parameter settings solver solving random WPMS instances crafted WPMS instances industrial application WPMS instances respectively The conﬁguration objective SMAC solutionquality minimizing weight unsatisﬁed soft clauses The cutoff time run SMAC 300 CPU seconds time budget runs SMAC 172800 CPU seconds 2 days The parameter settings SMAC CCEHC Dist CCLS summarized Table 1 use parameter settings following experimental evaluations As difference DistUP Dist initialization procedure experiments DistUP uses parameter settings Dist 65 Experimental results SLS competitors In subsection conduct extensive experiments CCEHC algorithm stateoftheart SLS competi tors DistUP Dist CCLS testing benchmarks MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial benchmarks realworld application WPMS benchmarks 651 Experiments MSE2014_WPMS_Random benchmark Table 2 presents comparative results CCEHC algorithm stateoftheart SLS competitors DistUP Dist CCLS MSE2014_WPMS_Random benchmark On benchmark CCEHC provides performance advantage CCLS terms solutionquality On overall performance benchmark CCEHC slower DistUP Dist terms averaged time CCEHC DistUP Dist performance terms solutionquality ﬁnd best solution 279 instances The results VBS random WPMS instances competing SLS solvers complementary terms averaged time indicate promising construct algorithmselector consisting competing SLS solvers 652 Experiments MSE2014_WPMS_Crafted benchmark The comparative results CCEHC stateoftheart SLS competitors DistUP Dist CCLS MSE2014_WPMS_ Crafted benchmark illustrated Table 3 According Table 3 clear CCEHC algorithm stands best solver benchmark From experimental results 310 instances CCEHC ﬁnds best solution 282 36 C Luo et al Artiﬁcial Intelligence 243 2017 2644 Table 2 Experimental results CCEHC DistUP Dist CCLS MSE2014_WPMS_Random benchmark The run time measured CPU second Instance class inst wmax2sat100v wmax2sat120v wmax2sat140v wmax3sathi wpmax2sathi wpmax2satlo wpmax2satme wpmax3sathi 40 40 40 40 30 30 30 30 CCEHC win 40 40 40 40 29 30 30 30 time 005 001 006 034 009 010 013 003 DistUP win 40 40 40 40 29 30 30 30 time 001 001 001 028 001 001 001 001 Dist win time CCLS win 40 40 40 40 29 30 30 30 004 001 001 031 006 002 002 001 40 40 40 40 26 26 29 30 time 001 001 002 001 476 4654 2797 013 VBS win 40 40 40 40 29 30 30 30 Overall 280 279 010 279 004 279 006 271 793 279 time 001 001 001 001 001 001 001 001 001 Table 3 Experimental results CCEHC DistUP Dist CCLS MSE2014_WPMS_Crafted benchmark The run time measured CPU second Instance class inst CCEHC DistUP Dist CCLS VBS win time win time win time win time win time auctionsaucpaths auctionsaucscheduling CSG frb minencplanning minencplanning_old minencwarehouses pseudomiplib ramsey randomnet setcoveringscp4x setcoveringscp5x setcoveringscp6x setcoveringscpn wmaxcutdimacs_mod wmaxcutspinglass 20 20 10 34 30 26 18 12 15 32 10 10 5 20 43 5 20 20 6 34 23 26 15 2 12 32 10 10 5 20 43 4 059 001 7449 670 2078 322 9016 014 613 14625 17342 14142 9166 6895 265 6122 20 20 4 33 29 26 1 3 12 0 0 0 0 0 42 4 118 001 351 2428 640 019 001 339 2060 0 0 0 0 0 001 972 20 20 0 31 29 26 4 4 12 0 0 0 0 0 42 4 082 001 0 911 227 040 2526 6697 2067 0 0 0 0 0 003 960 20 20 0 33 0 7 1 1 14 0 1 0 0 2 42 5 005 001 0 390 0 1009 001 001 3457 0 14249 0 0 6707 001 3420 20 20 10 34 29 26 18 5 15 32 10 10 5 20 43 5 002 001 4610 452 128 003 8074 5557 3616 14625 17342 14142 9166 6895 001 3420 Overall 310 282 4503 194 683 192 537 146 775 302 4226 Table 4 Experimental results CCEHC DistUP Dist CCLS MSE2014_WPMS_Industrial benchmark realworld application WPMS benchmarks The run time measured CPU second Benchmark inst CCEHC DistUP Dist CCLS VBS win time win time win time win time win time MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 410 20 7 20 6 226 11 5 11 6 12443 9485 1108 9485 005 154 2 1 2 6 9653 17488 000 17488 001 90 2 2 2 6 9550 3173 15074 3173 001 35 3 5 3 3 3959 16202 231 16202 001 389 15 7 15 6 12515 9370 4797 9370 001 ﬁgure DistUP Dist CCLS 194 192 146 respectively In 16 instance classes CCEHC gives best performance 12 ﬁgure DistUP Dist CCLS 4 5 4 respectively Dist won crafted WPMS category incomplete solver track MAXSAT Evaluation 2014 DistUP exhibits good performance benchmark challenging improve performance DistUP Dist MSE2014_WPMS_Crafted benchmark The experimental results CCEHC algorithm achieves stateoftheart performance crafted WPM instances Then focus investigation complementarity competing SLS solvers benchmark The results VBS competing SLS solvers complementary 4 instance classes CSG minencwarehouses pseudomiplib ramsey terms solution quality indicate solvers complementary The experimental results indicate promising build algorithmselector consisting competing SLS solvers 4 instance classes 653 Experiments MSE2014_WPMS_Industrial benchmark realworld application WPMS benchmarks The comparative results CCEHC stateoftheart SLS competitors DistUP Dist CCLS MSE2014_WPMS_ Industrial benchmark realworld application WPMS benchmarks summarized Table 4 According em C Luo et al Artiﬁcial Intelligence 243 2017 2644 37 Table 5 Experimental results CCEHC DistUP Dist CCLS 10 runs selected random WPMS instances The run time measured CPU second Instance ﬁle_rwms_wcnf_L3_V70_C1000_0wcnf ﬁle_rwpms_wcnf_L2_V150_C5000_ H150_0wcnf ﬁle_rwpms_wcnf_L3_V100_C800_ H100_0wcnf s2v140c1600_1wcnf CCEHC min max avg 198 198 1980 5362 5362 53620 95 95 950 1143 1143 11430 time cv 010 21984 004 17843 001 30000 001 0 DistUP min max avg 198 198 1980 5362 5362 53620 95 95 950 1143 1143 11430 time cv 001 0 001 0 001 0 001 0 Dist min max avg 198 198 1980 5362 5362 53620 95 95 950 1143 1143 11430 time cv 001 0 001 0 001 0 001 0 CCLS min max avg 198 198 1980 5362 5362 53620 95 95 950 1143 1143 11430 time cv 001 0 153 11558 332 10279 008 9844 VBS min max avg 198 198 1980 5362 5362 53620 95 95 950 1143 1143 11430 time cv 001 0 001 0 001 0 001 0 pirical results presented Table 4 CCEHC performs slightly slower CCLS benchmark advanced encryption standard performs slightly slower DistUP Dist benchmark cluster expansion apparent competing SLS algorithms CCEHC algorithm performs best MSE2014_WPMS_In dustrial benchmark realworld application WPMS benchmarks Computational Protein Design Pedigree Particularly related experimental results indicate CCEHC algorithm able return betterquality solutions compared CCLS Dist DistUP large number realworld application instances In fact SLS algorithms sidered ineffective solving industrial WPMS instances realworld application instances diﬃcult improve performance SLS algorithms benchmarks The results VBS competing SLS solvers complementary 4 benchmarks MSE2014_WPMS_In dustrial Computational Protein Design Advanced Encryption Standard Pedigree terms solution quality indicate complementarity competing solvers This indicates building algorithm selector sisting competing SLS solvers performance advantage 4 benchmarks 654 Experiments evaluating performance variability SLS solvers SLS solvers randomized performance solution quality ﬁxed running time vary substantially multiple independent runs problem instance We conduct empirical evaluations study performance variability SLS solvers We ﬁrst select 4 random WPMS instances 11 crafted WPMS instances 6 industrial application WPMS instances testing instances Then SLS solvers CCEHC CCLS Dist DistUP run 10 times cutoff time run set 300 CPU seconds selected instance The detailed experimental results random instances crafted instances industrial application instances reported Tables 5 6 7 respectively In Tables 5 6 7 SLS solver min max denote minimum maximum weight unsatisﬁed soft clauses 10 runs respectively avg denotes averaged weight unsatisﬁed soft clauses 10 runs time denotes averaged consuming time 10 runs cv denotes coeﬃcient variance standard deviation divided average value terms consuming time 10 runs According Tables 5 6 7 terms minimum unsatisﬁed weight 10 runs CCEHC gives best performance 4 random WPMS instances 11 crafted WPMS instances 5 industrial application instances DistUP 4 6 2 respectively Dist 4 6 1 respectively CCLS 4 5 1 respectively In terms averaged unsatisﬁed weight 10 runs CCEHC gives best performance 4 random WPMS instances 10 crafted WPMS instances 5 industrial application WPMS instances DistUP 4 4 2 respectively Dist 4 4 1 respectively CCLS 4 4 1 respectively The experiments CCEHC stands best solver comparison According experimental results presented Tables 5 6 7 metric coeﬃcient variance terms consuming time denoted notation cv witnesses variability consuming time CCEHC instances signiﬁcant 66 Comparing CCEHC stateoftheart complete solvers In subsection conduct empirical analyses evaluate CCEHC algorithm stateoftheart com plete solver WPM2014 1415 In experiment adopt version WPM2014 uses outputting format incomplete solvers printing betterquality solution immediately solver ﬁnds According competition results MAXSAT Evaluation 2014 version WPM2014 won industrial WPMS category incomplete solver track MAXSAT Evaluation 2014 Additionally report experimental results Eva 16 won industrial WPMS category complete solver track MAXSAT Evaluation 2014 As Eva solver 38 C Luo et al Artiﬁcial Intelligence 243 2017 2644 Table 6 Experimental results CCEHC DistUP Dist CCLS 10 runs selected crafted WPMS instances As CCLS ﬁnd feasible solutions 10 runs solving instance driverlog02bcwcspwcnf mark NA CCLS solving instance driverlog02bcwcspwcnf The run time measured CPU second Instance cat_paths_60_170_ 0000txtwcnf cat_sched_60_200_ 0000txtwcnf driverlog02bc wcspwcnf frb40191wcnf normalizedmps v22010p0033 opbmsatwcnf scp41_weighted wcnf scp51_weighted wcnf scp61_weighted wcnf scpnre1_weighted wcnf scpnrf1_weighted wcnf t6g38888spnwcnf CCEHC min max avg 122170 122170 1221700 242832 242832 2428320 2085 2505 21468 720 720 7200 3089 3089 30890 433 439 4358 265 269 2673 138 141 1385 29 29 290 14 14 140 7844119 7844119 78441190 time cv 1617 8044 001 0 12426 6040 2110 11801 160 9630 14153 5527 17057 4534 10925 5319 1379 14644 304 4306 8952 8571 DistUP min max avg 122170 122170 1221700 242832 242832 2428320 2085 2085 20850 720 721 7204 3089 3089 30890 488 507 4995 336 374 3568 185 197 1910 147 188 1642 54 70 625 7844119 7942134 78771068 time cv 167 10075 001 0 1039 13665 7543 8862 270 19999 16532 4460 10175 6078 14260 5864 13781 4781 14120 6477 17348 4941 Dist min max avg 122170 122170 1221700 242832 242832 2428320 2085 2085 20850 720 721 7206 3089 3089 30890 489 512 5012 341 363 3557 172 205 1934 39 52 458 17 23 186 time cv 179 8580 001 0 321 13098 8217 8015 106 23768 16936 5800 18238 2743 14688 4363 079 038 159 019 CCLS min max avg 122170 122170 1221700 242832 242832 2428320 NA NA NA 720 720 7200 3089 3343 31779 441 484 4667 272 302 2892 143 145 1435 31 35 328 14 15 142 time cv 069 15044 001 0 NA NA 2412 13431 16920 6036 VBS min max avg 122170 122170 1221700 242832 242832 2428320 2085 2085 20850 720 720 7200 3089 3089 30890 19714 4177 433 439 14559 6324 14239 5869 11840 8382 10400 9172 265 269 2673 138 141 1385 29 29 290 14 14 140 7844119 7952319 79085429 12296 6604 7844119 7844119 78441190 1657 12273 7844119 7844119 78441190 time cv 018 18103 001 0 239 17092 980 10400 050 29403 14153 5527 4358 17057 4534 10925 5319 1379 14644 304 4306 1639 12467 performs lower bound based coreguided search ﬁnds feasible solution ﬁnally proves optimality Thus unfair directly compare CCEHC Eva reference report experimental results Eva indicate performance current stateoftheart complete solver Eva benchmarks The related experimental results reported Table 8 According Table 8 CCEHC performs worse WPM2014 MSE2014_WPMS_Industrial benchmark pedigree benchmark CCEHC signiﬁcantly outperforms complete solver WPM2014 MSE2014_WPMS_Random benchmark MSE2014_WPMS_Crafted benchmark realworld application benchmarks Computational Protein Design Advanced Encryption Standard Cluster Expansion The WPM2014 solver SATbased complete MAXSAT solver successively calls eﬃcient SAT solver As SATbased technique eﬃcient solving industrial problems stateoftheart MAXSAT algorithms perform industrial instances based technique 15 surprising WPM2014 performs better CCEHC MSE2014_WPMS_Industrial benchmark pedigree benchmark However results VBS present CCEHC complementary WPM2014 MSE2014_WPMS_In dustrial benchmark pedigree benchmark indicates combination SLS algorithms complete algorithms achieve better performance solving industrial WPMS instances More encouragingly results VBS MSE2014_WPMS_Crafted benchmark MSE2014_WPMS_Industrial benchmark realworld application benchmarks computational protein design advanced encryption standard pedigree CCEHC algorithm complementary WPM2014 indicate promising build algorithmselector consisting CCEHC WPM2014 achieve better performance C Luo et al Artiﬁcial Intelligence 243 2017 2644 39 Table 7 Experimental results CCEHC DistUP Dist CCLS 10 runs selected industrial application WPMS instances As CCLS ﬁnd feasible solutions 10 runs solving instances berrichon1_directwcnf langlade3_directwcnf WCNF_pathways_p05wcnf mark NA CCLS solving instances The run time measured CPU second Instance 507wcsplogwcnf berrichon1_directwcnf langlade3_directwcnf ped2Brecomb10011wcnf randomnet802_network1netwcnf WCNF_pathways_p05wcnf CCEHC min max avg 27391 27392 273913 29 31 298 42 45 443 7 7 70 69537 70510 699989 78 85 829 time cv 10279 9587 14021 5144 13619 4575 2691 264 11273 7140 7036 10228 DistUP min max avg 27396 27398 273969 281 348 3079 63 71 662 7 7 70 74843 76741 756728 75 80 776 time cv 14146 6997 9013 8197 18216 5143 463 3496 12812 6625 4280 8305 Dist min max avg 27396 27397 273965 720 844 7744 72 88 783 71494 7 70 74565 76495 756939 82 132 1037 time cv 6896 8673 24736 1772 19741 3603 1149 16484 4931 13584 7886 CCLS min max avg 27395 27397 273962 NA NA NA NA NA NA 7 7 70 71077 72828 721938 NA NA NA time cv 12370 7585 NA NA NA NA 7830 4707 15108 6054 NA NA VBS min max avg 27391 27392 273913 29 31 298 42 45 443 7 7 70 69537 70510 699989 75 80 776 time cv 10279 9587 14021 5144 13620 4575 463 3496 11273 7140 4113 8594 Table 8 Experimental results CCEHC stateoftheart complete solver WPM2014 testing WPMS benchmarks As reference report number instances Eva proves optimality cutoff time related results summarized column prov Eva The run time measured CPU second Benchmark inst prov Eva MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 1 141 355 0 1 17 0 CCEHC win 279 247 59 14 6 14 6 time 010 2976 3774 13034 1757 6548 005 WPM2014 win 0 170 396 6 1 15 0 time 0 1682 1408 4201 9603 2809 0 VBS win 279 310 410 20 7 20 6 time 010 2516 1602 10384 2878 6465 005 Table 9 MSE2014_WPMS_Random benchmark Experimental results CCEHC MSE2014_WPMS_Crafted benchmark application WPMS benchmarks computational protein design advanced encryption standard cluster expansion As reference report number instances Eva proves optimality cutoff time related results summarized column prov Eva 1800 CPU seconds We note table cutoff time complete solvers WPM2014 Eva enlarged 1800 CPU seconds cutoff time CCEHC 300 CPU seconds The run time measured CPU second stateoftheart complete solver WPM2014 Benchmark inst prov Eva 1800 CPU seconds MSE2014_WPMS_Random MSE2014_WPMS_Crafted Computational protein design Advanced encryption standard Cluster expansion 280 310 20 7 6 1 150 0 1 0 CCEHC 300 CPU seconds time win WPM2014 1800 CPU seconds time win VBS win time 279 245 14 6 6 010 2844 13034 1757 005 4 187 6 1 0 58327 9636 32956 9649 0 279 310 20 7 6 010 3711 19011 2885 005 We observe complete solvers perform worse CCEHC groups application instances including benchmarks computational protein design advanced encryption standard cluster expansion instances MSE2014_WPMS_Random MSE2014_WPMS_Crafted benchmarks To study performance complete solvers longer cutoff time benchmarks test complete solvers WPM2014 Eva application WPMS benchmarks longer cutoff time 1800 CPU seconds The experimental results reported Table 9 demonstrate WPM2014 cutoff time 1800 CPU seconds performs worse CCEHC algorithm 40 C Luo et al Artiﬁcial Intelligence 243 2017 2644 Table 10 Experimental results CCEHC stateoftheart complete solver WPM2014 testing WPMS benchmarks cutoff time 50 CPU seconds As reference report number instances Eva proves optimality cutoff time related results summarized column prov Eva The run time measured CPU second Benchmark inst prov Eva 50 CPU seconds CCEHC 50 CPU seconds win time WPM2014 50 CPU seconds win time MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 0 130 292 0 1 10 0 279 239 55 13 6 15 6 010 676 1637 2772 1603 1466 005 0 162 394 7 1 14 0 0 364 549 614 610 234 0 VBS win 279 310 410 20 7 20 6 time 010 607 609 2017 1461 1041 005 Table 11 Experimental results CCEHC stateoftheart complete solver WPM2014 testing WPMS benchmarks cutoff time 1800 CPU seconds As reference report number instances Eva proves optimality cutoff time related results summarized column prov Eva The run time measured CPU second Benchmark inst prov Eva 1800 CPU seconds MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 1 150 368 0 1 19 0 CCEHC 1800 CPU seconds time win WPM2014 1800 CPU seconds time win VBS win time 279 253 59 14 7 13 6 010 16710 12601 57984 14481 20628 005 4 183 401 6 0 16 0 58327 9846 6931 32956 0 9277 0 279 310 410 20 7 20 6 010 13932 7314 50476 14481 20625 005 Table 12 Experimental results CCEHC stateoftheart complete solver WPM2014 testing WPMS benchmarks cutoff time 5400 CPU seconds As reference report number instances Eva proves optimality cutoff time related results summarized column prov Eva The run time measured CPU second Benchmark inst prov Eva 5400 CPU seconds CCEHC 5400 CPU seconds time win WPM2014 5400 CPU seconds time win VBS win time MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 1 154 368 0 1 19 0 279 257 56 16 7 13 6 010 51545 32712 212105 14412 81900 006 4 184 406 4 0 16 0 59032 19266 17279 48911 0 9047 0 279 310 410 20 7 20 6 010 42803 18416 179466 14412 60264 006 cutoff time 300 CPU seconds This conﬁrms effectiveness CCEHC application WPMS benchmarks MSE2014_WPMS_Random benchmark MSE2014_WPMS_Crafted benchmark Additionally conduct empirical evaluations CCEHC algorithm complete solver WPM2014 testing WPMS benchmarks cutoff time 50 CPU seconds 1800 CPU seconds 5400 CPU seconds order study performance solvers WPMS We report experimental results lower bound based complete solver Eva cutoff time reference The experimental results empirical evaluations cutoff time 50 CPU seconds 1800 CPU seconds 5400 CPU seconds demonstrated Ta bles 10 11 12 respectively Table 10 shows cutoff time 50 CPU seconds CCEHC performs better WPM2014 MSE2014_WPMS_Random benchmark MSE2014_WPMS_Crafted benchmark real world application benchmarks According Tables 11 12 experimental results present cutoff time 1800 CPU seconds 5400 CPU seconds CCEHC outperforms WPM2014 MSE2014_WPMS_Random benchmark MSE2014_WPMS_Crafted benchmark realworld application benchmarks computational protein design ad vanced encryption standard cluster expansion In conclusion empirical results cutoff time conﬁrm effectiveness CCEHC large number WPMS instances indicates CCEHC algorithm genuinely beneﬁcial practice C Luo et al Artiﬁcial Intelligence 243 2017 2644 41 Table 13 The parameter settings reported SMAC CCEHC_alt1 CCEHC_alt2 CCEHC_alt3 ran dom WPMS instances crafted WPMS instances industrial application WPMS instances Instance type CCEHC_alt1 CCEHC_alt2 CCEHC_alt3 p sp Random WPMS Crafted WPMS Industrial application WPMS 02 0354 0045 00001 0035 024 p 02 0514 003 p sp 02 0048 0012 00001 0763 0003 Table 14 Experimental results CCEHC alternative versions testing WPMS benchmarks The run time measured CPU second Benchmark inst CCEHC CCEHC_alt1 CCEHC_alt2 CCEHC_alt3 VBS win time win time win time win time win time MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 279 221 190 8 5 17 6 010 1821 13992 10451 1108 7066 005 279 189 68 9 5 8 6 016 3005 5642 1930 246 5751 013 262 194 102 9 5 9 6 683 4628 5259 5682 912 2852 008 279 164 121 12 6 7 6 031 976 6551 5607 7566 3034 036 279 301 367 15 7 19 6 002 4662 10283 7194 4797 7271 005 7 Discussion In section present detailed discussion CCEHC algorithm First conduct empirical analyses present effectiveness underlying component EHC heuristic Then discuss major differences CCEHC CCLS main differences CCEHC Dist Finally conduct empirical evaluations study performance combination CCEHC algorithm unit propagation initialization 71 Effectiveness EHC components As explained Section 4 components underlying EHC heuristic variable selection mechanism focusing conﬁguration checking based states hard clauses weighting scheme hard clauses biased random walk component Thus order demonstrate effectiveness components EHC heuristic conduct experiments compare CCEHC alternative versions following CCEHC_alt1 This alternative version CCEHC utilize variable selection mechanism focusing conﬁgura tion checking based states hard clauses In word alternative version select variables ﬂipped HCSCCDvars set search process removing lines 910 Algorithm 2 We note CCEHC_alt1 algorithm activate weighting scheme hard clauses works greedy mode CCEHC_alt2 This alternative version CCEHC utilize weighting scheme hard clauses removing line 12 Algorithm 2 CCEHC_alt3 This alternative version CCEHC uses standard random walk component biased random walk component CCLS algorithm replacing biased random walk component lines 57 Algorithm 2 standard random walk component lines 56 Algorithm 1 Before empirical study CCEHC alternative versions utilize automatic conﬁguration tool SMAC tune parameters CCEHCs alternative versions We use parameter settings CCEHC tuned SMAC default values parameters CCEHCs alternative versions For CCEHC_alt1 CCEHC_alt3 parameter domain real number p 0 1 default value p 0279 industrial application WPMS instances 02 random WPMS instances 0177 crafted WPMS instances parameter domain real number sp 0 1 default value sp 0085 industrial application WPMS instances 00001 random WPMS instances 0003 crafted WPMS instances For CCEHC_alt2 parameter domain real number p 0279 industrial application WPMS instances 02 random WPMS instances 0177 crafted WPMS instances CCEHC_alt2 utilize weighting scheme hard clauses omits parameter sp We note conﬁguration protocol SMAC utilized adopted Section 64 The parameter settings SMAC CCEHC_alt1 CCEHC_alt2 CCEHC_alt3 summarized Table 13 use parameter settings following empirical study Empirical results CCEHC alternative versions testing WPMS benchmarks reported Table 14 As seen Table 14 CCEHC performs generally better alternative versions indicates effectiveness components EHC heuristic Particularly MSE2014_WPMS_Crafted benchmark 42 C Luo et al Artiﬁcial Intelligence 243 2017 2644 MSE2014_WPMS_Industrial benchmark realworld application WPMS benchmark Pedigree CCEHC performs better alternative versions terms solutionquality conﬁrms proposed EHC heuristic contributes performance CCEHC number structured WPMS instances realworld application WPMS instances Then investigate complementarity CCEHC alternative versions The results VBS indicate competing solvers complementary MSE2014_WPMS_Crafted benchmark MSE2014_WPMS_Industrial bench mark realworld application benchmarks computational protein design advanced encryption standard pedigree indicates promising build algorithmselector consisting CCEHC alternative versions improve empirical performance 72 Main differences CCEHC CCLS Although CCEHC algorithm conceptually related CCLS algorithm 22 exist major differences CCEHC CCLS In subsection summarize major differences directly list follows How deal input WPMS instance The CCEHC algorithm designed solving WPMS CCEHC able solve input WPMS instance directly CCLS algorithm developed solving weighted MAXSAT CCLS needs translate input WPMS instance weighted MAXSAT solve resulting encoded weighted MAXSAT instance Variable selection mechanism The CCEHC algorithm prefers select variable ﬂipped emphasizing information hard clauses preferring variable greatest hscore CCLS algorithm distinguish hard clauses soft clauses simply uses general score property choose variable ﬂipped Hard clause weighting scheme The CCEHC algorithm employs clause weighting scheme works hard clauses diversify search CCLS algorithm use clause weighting schemes Type random walk component In order higher priority hard clauses CCEHC algorithm applies biased random walk component ﬁrst tries select unsatisﬁed hard clause CCLS algorithm uses standard random walk component designed nonpartial MAXSAT treats hard clauses soft clauses Empirical performance wide range WPMS benchmarks As clearly seen extensive experiments illustrated Tables 2 3 4 5 6 7 Section 6 CCEHC algorithm performs better CCLS algorithm wide range WPMS benchmarks indicating signiﬁcant performance improvements CCEHC CCLS major differences SLS algorithms 73 Main differences CCEHC Dist As Dist algorithm 3 separates hard clauses soft clauses pseudocode Dist literature 3 subsection discuss main differences CCEHC Dist We like note difference Dist DistUP 23 initialization procedure discuss differences CCEHC Dist The main differences CCEHC Dist summarized Basic framework The CCEHC algorithm based CCLS algorithm applied successfully solving weighted MAXSAT Dist algorithm developed following simple GSAT algorithm earliest SLS algorithm solving SAT Variable selection mechanism The CCEHC algorithm utilizes new HCSCC strategy select variables ﬂipped prefers select HCSCCD variable Dist algorithm use HCSCC strategy simply prefers choosing decreasing variable variable x hscorex 0 hscorex 0 sscorex 0 Time activate hard clause weighting scheme The CCEHC algorithm activates hard clause weighting scheme HCSCCD variable Dist decreasing variable exists Time biased random walk The CCEHC algorithm calls biased random walk component ﬁxed probabil ity start search step Dist algorithm calls activating hard clause weighting scheme Empirical performance broad range WPMS benchmarks According experimental results presented Tables 2 3 4 5 6 7 Section 6 clearly observed CCEHC signiﬁcantly outperforms Dist Dists recent improvement DistUP broad range WPMS benchmarks indicates obvious superiority CCEHC Dist DistUP owing main differences 74 Initializing CCEHC unit propagation Inspired success DistUP solver equips Dist unit propagation initialization 23 combine CCEHC unit propagation initialization empirically evaluate resulting hybrid solver testing bench marks By replacing Dist CCEHC DistUP solver obtain new solver CCEHCUP Then conduct C Luo et al Artiﬁcial Intelligence 243 2017 2644 43 Table 15 Experimental results CCEHC CCEHCUP testing WPMS benchmarks The run time measured CPU second Benchmark inst MSE2014_WPMS_Random MSE2014_WPMS_Crafted MSE2014_WPMS_Industrial Computational protein design Advanced encryption standard Pedigree Cluster expansion 280 310 410 20 7 20 6 CCEHC win 279 249 153 10 5 16 6 time 010 3210 11938 13228 1108 8127 005 CCEHCUP win 279 261 269 11 6 15 6 time 006 3755 7841 13779 2423 4319 001 VBS win 279 301 361 15 6 19 6 time 006 4642 9895 15099 2262 6575 001 experiments eﬃciency CCEHCUP The comparative results CCEHCUP CCEHC reported Ta ble 15 According Table 15 CCEHCUP performs better CCEHC testing benchmarks Pedigree The results VBS indicate CCEHCUP complementary CCEHC MSE2014_WPMS_Crafted benchmark MSE2014_WPMS_Industrial benchmark realworld application benchmarks Computational Protein Design Pedigree indicates promising build algorithmselector consisting CCEHC CCEHCUP solving WPMS instances The experimental results CCEHC cooperate unit propagation initializa tion solving WPMS instances 8 Conclusions future work In work design heuristic emphasis hard clauses called EHC SLS algorithms solving WPMS problem By incorporating EHC heuristic CCLS present new SLS algorithm named CCEHC solving WPMS To demonstrate effectiveness robustness CCEHC algorithm evaluate CCEHC broad range WPMS benchmarks including random crafted industrial realworld application instances Our experimental results CCEHC signiﬁcantly outperforms stateoftheart SLS algorithms CCLS Dist DistUP WPMS benchmarks indicating CCEHC establishes new state art SLS algorithms solving WPMS Our experimental results evaluating CCEHC stateoftheart complete solver WPM2014 effectiveness CCEHC random WPMS instances crafted WPMS instances WPMS instances based realworld applications Particularly number important realworld application WPMS instances WPM2014 stateoftheart lowerbound based complete solver Eva return goodquality solutions quickly cutoff time 5400 CPU seconds CCEHC algorithm able produce goodquality solutions fast indicates CCEHC genuinely beneﬁcial practice Further perform empirical evaluations analyze effectiveness EHC heuristic related experiments conﬁrm effectiveness underlying component EHC heuristic demonstrate EHC heuristic contributes performance CCEHC number structured WPMS instances realworld application WPMS instances Also conduct empirical evaluations study combination CCEHC unit propagation initialization related experiments CCEHC able cooperate unit propagation initialization In future work like study ﬂexibility EHC heuristic improve performance CCEHC solving WPMS instances integrating powerful algorithmic techniques Best Multiple Selections strategy 59 We like build algorithmselector consisting CCEHC algorithm solvers achieve better performance solving WPMS instances Acknowledgements This work partially supported National Key Research Development Program China Grant 2016YFB0200803 Grant 2016YFC1401700 partially supported Open Project Program State Key Laboratory Mathematical Engineering Advanced Computing Grant 2016A06 partially supported National Natural Science Foundation China Grant 61502464 Grant 61572234 Grant 61472369 Grant 61370072 partially supported Australian Research Council Grant DP150101618 The authors like thank anonymous reviewers constructive comments References 1 PW Purdom Solving satisﬁability searching IEEE Trans Pattern Anal Mach Intell 6 4 1984 510513 2 K Smyth HH Hoos T Stützle Iterated robust tabu search MAXSAT Proceedings Canadian Conference AI 2003 2003 pp 129144 3 S Cai C Luo J Thornton K Su Tailoring local search partial MaxSAT Proceedings AAAI 2014 2014 pp 26232629 4 D Allouche S Traoré I André S Givry G Katsirelos S Barbe T Schiex Computational protein design cost function network optimization 5 D Allouche I André S Barbe J Davies S Givry G Katsirelos B OSullivan SD Prestwich T Schiex S Traoré Computational protein design problem Proceedings CP 2012 2012 pp 840849 optimization problem Artif Intell 212 2014 5979 44 C Luo et al Artiﬁcial Intelligence 243 2017 2644 6 Z NajiAzimi P Toth L Galli An electromagnetism metaheuristic unicost set covering problem Eur J Oper Res 205 2 2010 290300 7 X Liao M Koshimura H Fujita R Hasegawa Solving coalition structure generation problem MaxSAT Proceedings ICTAI 2012 2012 pp 910915 8 HL Chieu WS Lee Relaxed survey propagation weighted maximum satisﬁability problem J Artif Intell Res 36 2009 229266 9 H Lin K Su Exploiting inference rules compute lower bounds MAXSAT solving Proceedings IJCAI 2007 2007 pp 23342339 10 H Lin K Su CM Li Withinproblem learning eﬃcient lower bound computation MaxSAT solving Proceedings AAAI 2008 2008 pp 351356 11 CM Li F Manyà NO Mohamedou J Planes Exploiting cycle structures MaxSAT Proceedings SAT 2009 2009 pp 467480 12 M Davis H Putnam A computing procedure quantiﬁcation theory J ACM 7 3 1960 201215 13 M Davis G Logemann DW Loveland A machine program theoremproving Commun ACM 5 7 1962 394397 14 C Ansótegui ML Bonet J Gabàs J Levy Improving WPM2 weighted partial MaxSAT Proceedings CP 2013 2013 pp 117132 15 C Ansótegui ML Bonet J Levy SATbased MaxSAT algorithms Artif Intell 196 2013 77105 16 N Narodytska F Bacchus Maximum satisﬁability coreguided MaxSAT resolution Proceedings AAAI 2014 2014 pp 27172723 17 JPM Silva KA Sakallah GRASP new search algorithm satisﬁability Proceedings ICCAD 1996 1996 pp 220227 18 JPM Silva KA Sakallah GRASP search algorithm propositional satisﬁability IEEE Trans Comput 48 5 1999 506521 19 HH Hoos T Stützle Stochastic Local Search Foundations Applications ElsevierMorgan Kaufmann 2004 20 B Selman HJ Levesque DG Mitchell A new method solving hard satisﬁability problems Proceedings AAAI 1992 1992 pp 440446 21 B Selman HA Kautz B Cohen Noise strategies improving local search Proceedings AAAI 1994 1994 pp 337343 22 C Luo S Cai W Wu Z Jie K Su CCLS eﬃcient local search algorithm weighted maximum satisﬁability IEEE Trans Comput 64 7 2015 18301843 23 S Cai C Luo J Lin K Su New local search methods partial MaxSAT Artif Intell 240 2016 118 24 S Cai K Su Local search Boolean satisﬁability conﬁguration checking subscore Artif Intell 204 2013 7598 25 S Cai C Luo K Su Scoring functions based second level score kSAT long clauses J Artif Intell Res 51 2014 413441 26 S Cai K Su C Luo A Sattar NuMVC eﬃcient local search algorithm minimum vertex cover J Artif Intell Res 46 2013 687716 27 C Luo K Su S Cai Improving local search random 3SAT quantitative conﬁguration checking Proceedings ECAI 2012 2012 pp 570575 28 C Luo S Cai W Wu K Su Focused random walk conﬁguration checking break minimum satisﬁability Proceedings CP 2013 2013 pp 481496 29 C Luo S Cai K Su W Wu Clause states based conﬁguration checking local search satisﬁability IEEE Trans Cybern 45 5 2015 10141027 30 S Cai Z Jie K Su An effective variable selection heuristic SLS weighted Max2SAT J Heuristics 21 3 2015 433456 31 C Luo S Cai W Wu K Su Double conﬁguration checking stochastic local search satisﬁability Proceedings AAAI 2014 2014 pp 27032709 2000 2000 pp 310315 32 Z Wu BW Wah An eﬃcient globalsearch strategy discrete lagrangian methods solving hard satisﬁability problems Proceedings AAAI 33 D Schuurmans F Southey RC Holte The exponentiated subgradient algorithm heuristic Boolean programming Proceedings IJCAI 2001 2001 pp 334341 34 F Hutter DAD Tompkins HH Hoos Scaling probabilistic smoothing eﬃcient dynamic local search SAT Proceedings CP 2002 2002 pp 233248 35 J Thornton DN Pham S Bain V Ferreira Jr Additive versus multiplicative clause weighting SAT Proc AAAI 2004 2004 pp 191196 36 A Ishtaiwi J Thornton A Sattar DN Pham Neighbourhood clause weight redistribution local search SAT Proceedings CP 2005 2005 pp 772776 37 Y Jiang H Kautz B Selman Solving problems hard soft constraints stochastic algorithm MAXSAT First International Joint Workshop Artiﬁcial Intelligence Operations Research 1995 38 C Ansótegui J Gabàs Solving weighted partial MaxSAT ILP Proceedings CPAIOR 2013 2013 pp 403409 39 K Xu W Li Many hard examples exact phase transitions Theor Comput Sci 355 3 2006 291302 40 K Xu W Li Exact phase transitions random constraint satisfaction problems J Artif Intell Res 12 2000 93103 41 M Gwynne O Kullmann Towards better understanding SAT translations The Twelfth International Workshop Logic Computational Complexity 2011 13 12 2008 130154 42 M Sánchez S Givry T Schiex Mendelian error detection complex pedigrees weighted constraint satisfaction techniques Constraints 43 JM Sanchez Cluster expansions conﬁgurational energy alloys Phys Rev B 48 18 1993 1401314015 44 B Liu BM Baas Parallel AES encryption engines manycore processor arrays IEEE Trans Comput 62 3 2013 536547 45 S Trimberger Security SRAM FPGAs IEEE Des Test Comput 24 6 2007 581 46 MM Kermani A ReyhaniMasoleh Concurrent structureindependent fault detection schemes advanced encryption standard IEEE Trans Com 59 5 2010 608622 Comput Sci Technol 19 1 2004 4259 47 L Aceto JA Hansen A Ingólfsdóttir J Johnsen J Knudsen The complexity checking consistency pedigree information related problems J 48 W Huang DA Kitchaev S Dacek Z Rong A Urban S Cao C Luo G Ceder Finding proving exact ground state generalized Ising model convex optimization MAXSAT Phys Rev B 94 2016 134424 49 E Ising Beitrag zur theorie des ferromagnetismus Z Phys 31 1 1925 253258 50 A van Walle G Ceder Automating ﬁrstprinciples phase diagram calculations J Phase Equilib 23 4 2002 348359 51 Y Hinuma YS Meng G Ceder Temperatureconcentration phase diagram P 2NaxCoO2 ﬁrstprinciples calculations Phys Rev B 77 2008 224111 52 A Kügel Improved exact solver weighted MaxSAT problem Proceedings Pragmatics SAT 2010 2010 pp 1527 53 A Abramé D Habet Inference rules local search MaxSAT Proceedings ICTAI 2012 2012 pp 207214 54 DL Berre A Parrain The Sat4j library release 22 J Satisf Boolean Model Comput 7 23 2010 5964 55 J Thornton S Bain A Sattar DN Pham A level local search MAXSAT problems hard soft constraints Proceedings Australian Joint Conference AI 2002 2002 pp 603614 56 O Roussel Controlling solver execution runsolver tool J Satisf Boolean Model Comput 7 4 2011 139144 57 F Hutter HH Hoos K LeytonBrown T Stützle ParamILS automatic algorithm conﬁguration framework J Artif Intell Res 36 2009 267306 58 F Hutter HH Hoos K LeytonBrown Sequential modelbased optimization general algorithm conﬁguration Proceedings LION 2011 2011 pp 507523 59 S Cai Balance complexity quality local search minimum vertex cover massive graphs Proceedings IJCAI 2015 2015 pp 747753