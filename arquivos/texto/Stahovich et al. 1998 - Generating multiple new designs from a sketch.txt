Artificial Intelligence 104 19YX 2 I I764 Artificial Intelligence Generating multiple new designs sketch Thomas F Stahovich Randall Davis b Howard Shrobe b Received 13 August 1997 received revised form 2 I May I YY8 Abstract single transforms program We called SKETCHIT device multiple families new designs It represents families BEPModel desired behavior parametric model augmented constraints The program captures mechanical behavior abstracting away implementation The program employs uses paradigm abstraction resynthesis library primitive mechanical Elsevier Science BV All rights reserved ensure device produces space qcspace based qualitative configuration novel representation map qcspace new implementations C 1YYX sketch mechanical initial sketch qcspace interactions abstracts ww Sketch understanding Design generalization Mechanical design Qualitative geometric reasoning 1 Introduction SKETCHIT program capable taking single sketch mechanical device generalizing stylized sketch design description desired behavior generates multiple produce multiple new designs The programs families new designs input The program transforming sketch representation behavior original design abstracting away specific implementation program representation multiple new families implementations uses library primitive mechanical interactions captures The map abstract This representation Corresponding Support author Email stahovandrewcmuedu project provided Advanced Research Projects Agency Department Defense Office Naval Research contract NO00 149 IJ4038 0004370298 PII SOOO4370298000587 matter 0 1998 Elsevier Science BV All rights reserved 712 FIN I A pencil sketch circuit breaker qualitative configuration tasks space key tool allowing SKETCHIT perform ensure geometry produces desired behavior Our program The program represents new families implementations parametric model augmented behavior ensuring parametric model BEPModel constraints takes input single sketch device produces output multiple BEPModels produce desired behavior As illustrate SKETCHITS ability generalize single sketch multiple variety reasons During conceptual design large number alternatives families new designs example high premium SKETCHIT aids case automatically generating large variety designs Later design process SKETCHIT assist designer adapting initial design meet design requirements size performance placed examining useful The section uses design circuit breaker illustrate program Later Section 9 uses design dwell mechanism device meet specific performance illustrate program assists designer requirements input output yoke rotor refining initial design action designing desired behavior We conclude In section SKETCHIT circuit breaker We begin input stylized sketch device state transition diagram program section new designs describing SKETCHIT produces finally maps circuit breakers qcspace geometry circuit breaker In normal use flows lever hook current overload causes bimetallic hook current flow After hook cools Fig 1 shows pencil sketch implementation current heat bend releasing pressing releasing lever interrupting pushrod resets device 2 A parametric model geometric model shapes controlled set parameters Fig 2 Stripping away nonfunctional Fig I actuator _____d pushrod fixed surface lever 16 f2h f3 f4 p t 4 hook bimetallic strip Fig 3 Stylized sketch circuit breaker actually input program Engagement faces bold lines The actuator applied pushrod represents reset motion imparted user For convenience use labels refer engagement pairs fl f6 pushpair f2 f5 canfollower f3 f3 leverstop tf7 fX puahrodtop SKETCHIT concerned functional parts sketch springs actuators kinematic joints faces parts meet force motion transmitted Fig 2 shows left peel away functional parts stylized sketch pencil sketch This sort information SKETCHIT takes input contained Our software currently provides mouse driven sketching sketches Fig 3 shows stylized version circuit breaker interface creating stylized designer 3 Eventually develop pen based sketching sketch directly digitizmg pad stylus The designer draw usual sort sketch like Fig 1 annotate stylus indicate functional designer allowing interfxe 214 ZE Stuhmkh et ul ArtiJicid Intelligence 104 1998 21 i264 leverstop pushrodstop hookcold Hook Heats pushpair pushrodstop 1 2 hookhot Reset 3 Hook Cools pushpair pushrodstop hookcold ii Fig 4 The desired behavior circuit breaker Physical states hook hot cold neutral position interpretation b State transition diagram In creates interface Line segments faces focuses partfaces springs joints actuators SKETCHIT consideration connective geometry surfaces connect complete solids later design process The designer annotates stylized sketch indicate pairs faces intended engage annotations icons functional listed table contained figure functional faces The designer describes desired behavior device transition diagram Each node diagram relaxed s The arcs external springs Fig 4b instance describes circuit breaker behave heating cooling state SKETCHIT list pairs faces engaged drive device face hook pressing reset pushrod inputs SKETCHIT Fig 5 shows portion BEPmodels derives sketch circuit breaker desired behavior The figure shows parameters define sloped face lever f2 sloped face hook f5 The shows constraints overall desired behavior hook lever hook springs rest position As moves past point hook example constraints enforce desired behavior pair faces plays role achieving lever clockwise pushes ninth equation moving ensure 0 R14TANPSI17 H2_12SINPSIl7 constrains This turn ensures increases deflection hook geometry contact point face f2 moves tangent face f5 rotation lever faces engaged clockwise The parameter values shown Fig 5 solutions desired behavior The values BEPModel particular geometry provides computed program called DesignView commercial parametric modeler based equation variational geometry interactively solver capable drawing lines arcs Using DesignView For purposes DesignView simply nonlinear constraints 1 In remainder document use term sketch refer kind stylized sketch shown Fig 3 5 The pairs faces listed node default disengaged springs listed default relaxed I L15 0142 PSI17 134702 Hi11 0 HZ12 0 S13 Hl_11 L15 0 PHI16 90 PHI16 180 PSI17 90 PSI17 180 0 R14TANPSI17 H2_12SINPSI17 R14 SQRTS132 L152 2S13L15COSPHI16 Fig 5 Output program parameter parameters constraints IS current value parameter Bottom faces f2 f5 shown BEPModel Top parametric geometry decimal number constraints parameters For clarity 0 I f6 fl n fa f3 I f5 f4 Fig 6 Another solution BEPModel Fig 5 Shading flesh components This solution shows pair faces end lever f2 f3 pair faces end hook f4 f5 need contiguous indicates faces connected adjust parameter values easily explore family designs defined BEP Model Fig 6 example parameter values satisfy BEPModel desired behavior As example family designs defined BEP Model includes wide range design solutions obtained conventional unusual geometry provides BEPModel Because shows solution approaches illustrates 216 TF Stahovich rt al Artificial Intelligence IO4 1998 211264 Ahwaction QCSpaces BEPmodels BEP11 BEP12 BEP21 BEP22 BEP31 BEP32 Implementans IMP111 IMP112 1 1 IMP311 IMP312 IMP313 decr cmtraint tolution SKETCH Fig 7 Overview SKETCHITS abstraction qcspaces produce BEPmodels solutions set constraints instantiation process The initial sketch abstracted hook Fig 8 A design variant obtained replacing rotating lever translating hook t Fig 9 A design variant obtained different shown pushrod pressed hook verge latching lever implementations engagement faces In position TIT Stahovich rt al Artial Intelligence IO4 1998 211264 217 selecting different types rotation translation selecting different motion Figs 5 6 members families designs circuit breaker SKETCHIT produces families designs produces BEPModels components Fig 7 For example Fig 8 shows design obtained selecting new motion lever original design shows example selecting different In original f2 roughly perpendicular motions parallel Conversely perpendicular program faces type translates Fig 9 faces engagement pair motion face motion face f5 new design Fig 9 motions faces fl f6 originally parallel pairs interacting pairs interacting camfollower new design lever rotates implementations implementations implementation 2 Representation qcspace SKETCHITS task generalize single design multiple new designs The new designs provide behavior original employ new implementations Our approach original design abstracting opportunity task develop representation away particular captures implementation select new implementations behavior providing For class devices SKETCHIT concerned rigid body devices inertia slipping holds For components overall behavior It possible determine determined interactions behavior single component components interacts For example component springs negligible knowing Fig 10 exhibit wide range behaviors depending interacts interacts broom handle stop Fig 1 la behavior friction prevents translating flat face Fig 1 lb provides cam follower behavior classical transistors typically electrical possible kinds behavior given component exhibit For exhaustively enumerate example idealized having distinct operating modes However kinds devices considering afford compactness exhibit large number possible description A given mechanical behaviors possible kinds behavior curved pivoted object Thus instead attempting represent behavior level individual components instead focus directly interactions components near infinite variety components If interacts Fig 11 shows types devices self energizing possible handle component place interact circuits Fig 10 A curved object pivot 218 TF Stohovich et al ArtiJicial Intelligrnce 104 IWK 2l264 Fig 1 I A broom handle holder b A cam translating flatface follower Our search representation began configuration space cspace represent behaviors interested commonly representing implementations implementations We discovered desired effect SKETCHITS configuration space qcspace kind behavior But cspace adequately provide adequate opportunity abstracting cspace qualitative behavioral representation capable abstract away selecting new form produces qualitative This section begins description cspace describes abstract cspace produce qcspace 21 Cspace Consider rotor slider Fig 12 If angle rotor Lk position slider Us shown faces bodies touch These particular values rR Us termed conjiguration bodies faces touch space plane csplane shown represented point plane called configuration Fig 13 If determine configurations bodies faces touch plot points csplane corresponding space curve cscurve The shaded region configurations curve represents free space configurations curve indicates blocked space body penetrate The unshaded region Fig 13 curve called configuration faces touch configurations In general cspace represents device bodies touch free space configurations blocked free space configurations blocked space The axes cspace position parameters bodies dimension cspace number degrees freedom set bodies bodies interpenetrate bodies touch boundary reasoning To simplify geometric cspace assume devices fixedaxis That body translates fixed axis rotates fixed assume axis Hence world cspace pair bodies pairwise cspace twodimensional boundary blocked free space curve cscurve TE Stuhovich et al Artcial Intelligence 104 1998 21 I264 219 Fig 12 A rotor slider The slider translates horizontally The interacting faces shown bold lines I Rotor Angle UR Fig 13 The cspace rotor slider The inset figures configuration corresponding selected points cscurve rotor slider Although pairwise cspace twodimensional topology planar If bodies rotate rotor slider Fig 12 start slider far rotor rotor angle increases device initial configuration bodies rotate revolution translate rotates revolutions revolutions initial configuration revolution happen form cylinder shown Fig 14 right edge csplane wrap connect For left edge torus For example cspace cylinder 220 Fig 14 If rotor turns revolution cspace cylinder SKETCHIT represents nonplanar pairwise cspaces flattening planes Section 431 We use term csplane naturally planar imposing periodic boundary conditions refer pairwise cspaces flattened representations nonplanar cspaces 21 I Representing springs actuators andfixed surjkes The devices SKETCHIT intended interactions fixed surfaces section describes cspace represents addition handle contain springs actuators faces described This moving behavior kinds components device Fig 15 consisting blocks A B interact faces A spring attached block A actuator external block B fixed surface B Consider pair sloped engagement motion source attached collide assume positive direction obtain representation point cscurve techniques previous section faces A B In configuration We start applying interaction touching configuration If A moves small distance positive direction new configuration fashion obtain diagonal cscurve positive slope csplane shows If faces touching A moves fixed faces penetrate Hence space right cscurve blocked space Alternatively faces penetrate Hence space cscurve compute shown faces engagement pair turned The faces engaged Fig 15 positive direction B held B moves negative direction A held fixed blocked space Either way point cscurve Continuing push B small distance blocked space actuator Next consider spring neutral position spring attached block A At position block A np position spring relaxed We implemented procedure handling cylindrical pairwise cspaces toroidal ones However technique5 handling toroidal cspaces direct extension use cylindrical cspace TE Stahovich et al Artcial Intelligence 104 1998 211264 221 Fig 15 A simple mechanical configuration space neutral position depends position A viewed Because csplane vertical line UA np The neutral position spring appears vertical horizontal line SKETCHITS world spring end fixed csplane relaxed state spring depends position body motion In SKETCHITS world actuators apply motion body reaches actuator turns longer applying force motion body Because limit line particular position called position motion similarly appears vertical horizontal Fig 15 limit actuator depends position body motion line csplane horizontal limit actuator When body reaches body Finally consider turns Because interaction fixed surface block B Because actuator pushes B away fixed surface interaction happen fixed actuator line cs surface corresponding plane Because fixed surface limits Bs motion positive direction blocked space cscurve As Fig 15 illustrates interaction depends Bs position csplane contain finite cscurves infinite horizontal cscurve pair faces interaction representing spring neutral positions motion limits actuators interactions fixed surfaces As means differentiation use solid lines finite cscurves dashed lines infinite boundaries For convenience refer finite cscurves infinite boundaries cscurves diagonal cscurve representing infinite boundaries 2 I 2 Computing motion cspace The previous sections described cspace represents behavior different determine kinds parts compose devices world Our concern overall behavior device description behaviors For mechanical devices composed rigid bodies springs time history motion rigid body device overall behavior characterized 222 TF Stuhovich et al Artcial Intelligencr 104 1998 2i264 Fig 16 Force F pushes slider left We compute time history motion applying Newtons cspace particle metaphor We illustrate process device Fig 16 consisting rotor slider To provide point reference compute structure Then motion rotor slider reasoning directly motion directly compute time particle metaphor repeat process cspace description device laws directly Imagine rotor slider initial positions shown Fig 16 force F pushes slider left As moves slider strike rotor rotor slider begin push way Assuming remain contact slider continue slider push rotor far parts disengage Assuming rotor inertiafree push rotor way Eventually motion rotor stop slider continue collision inelastic We motion rotor slider sequence configurations trujecton motion described In initial configuration cspace We sequence trajectory corresponding rotor slider touching initial configuration motion begins slider moves trajectory rotor configuration curve Once engagement vertical cspace Fig 17a shows free space When vertical While slider pushes point cscurve trajectory broken slider moves trajectory follows In physical world forces cause bodies cause configuration configuration Cscurves act like physical surfaces deflect particle change To compute dynamics directly csplane apply forces directly particle cspace view forces cspace treat particle Using particle metaphor compute motion rotor slider structure device Fig 17b directly cspace reference shows particle use represent rotor slider The force applied slider appears csplane force direction sliders cspace vertical Similarly forces applied rotor appear csplane coordinate configuration TF Stahovich ct 01 Artcial lntrllipwcr 104 1998 211264 223 I Rotor Angle U b I I Rotor Angle U cid228 Fig 17 The motion rotor slider represented trajectory configuration shown dot b The motion rotor slider computed treating particle forces applied cspace The initial coctration A 1 Rotor Angie U Rotor Angle U Fig IX The trajectory rotorslider device collisions elastic b The trajectory rotorshder device appreciable inertia direction rotors cspace coordinate rotor slider defines initial location particle The net force particle causes vertically strikes cscurve The cscurve deflects particle continues particle reaches end cscurve moves directly upward horizontal The initial configuration upward Eventually This example compute possible description illustrates general principle motion bodies device directly devices cspace particle metaphor awumptions inertiafree As example motion bodies We assume collisions inelastic explicitly mention Simplifying ing assumptions motion frictionless assumption example elastic rotor bounce slider trajectory Fig 18a If appreciable Fig 17b demonstrated simplify slider rotor cspace look like disen contacts frictionless inertia rotor continue If collision 224 TF Stahovich et al Artcial Intelligence 104 199X 2l264 gaged slider producing trajectory friction device jam rotor slider slider able push rotor like Fig 18b If substantial We assumptions motion bodies cspace simplify overly restrictive Sacks Joskowicz greatly simplify trajectories 39 examined 2500 80 modeled accurately reasoning catalog mechanisms trajectories These assumptions mechanisms assumptions 22 Abstracting qspace Cspace properties require behavioral behavior components represent reason behavior allowing compute cspace description parts SKETCHITS domain overall behavior device directly representation To facilitate synthesizing new designs require behavioral design abstracting representation away essential property implementation behaviors generalize Cspace small degree Any pair faces produces Fig 13 produce original pair faces Fig 12 For example sliders face extended upward Thus cscurve represents family interacting faces produce behavior dynamics behavior cscurve numerical cscurves We identify larger family faces produce behavior obtain qualitative cspace In qualitative cspace abstracting slopes locations qcspace cscurves represented qualitative curves relative By qualitative slope mean obvious notion labeling monotonic curves diagonal positive negative slope vertical horizontal relative location mean relative location curve end points 7 slope captures To qualitative behavior return slider push rotor positive displacement essential rotor slider The essential behavior device slider causes positive displacement rotor negative displacement rotor causes negative displacement cscurve diagonal fashion geometry maps diagonal curve positive slope produce behavior original design slider If motions rotor slider related curve positive slope Conversely representation Their types qualitative cscurves curves correspond stop behavior position Each qcscurve represents family monotonic cscurves qualitative slope qcscurves shown Fig 19 Diagonal pushing behavior vertical horizontal curves correspond extent motion limited In cspace cscurves infinite boundaries absolute locations qcspace locations relative A pair landmark values defines location end point We restrict qcscurves monotonic facilitate qualitative simulation qcspace See Section 5 TIT Stahovich et al Artcial lnrvlligence lo1 19YK 211264 225 GBCD E FGHQ Fig 19 There types qcscurves For oneniee diagonal curves drawn straight represent diagonal monotonic curve lines qcscurve ane landmark value defines axis crossing infinite boundary The ordering landmark values encodes relative locations qcscurves infinite boundies 221 Qcspace design space behavior An important consequence generalizing qualitative cscurve family consisting entirely locations completely slopes relative order dynics device By order dynamics mean monotonic curves dateline dynamic behavior obtained motion assumed inertiafree collisions inelastic frictionless 8 Thus qcspace captures alE relevant assumed It physics overall device serves design space behavior particularly slope properties qualitative relative location important convenient design space constructed feature qcspace Another types qcscurves new implementations small number Fig 19 As consequence precomputed building blocks viz different easily map qcspace implementations building blocks We Section 8 3 System abstraction Fig 20 illustrates SKETCHIT uses resynthesis transform sketch multiple new designs In abstraction phase SKETCHIT reverse engineers generalizes space representation phase SKETCHIT generates multiple impiemetations design working qcspace representation original design producing qualitative configuration resynthesis design created paradigm SKETCHIT uses abstraction simplify enormous geometric irrelevant abstraction process strips away irrelevant expose essential reasoning process sketch contains behavior The Inertiafree refers circumstance terms high friction inertia terms equations motion negligible low mass large applied forces One important called oscillations This set physical assumptions compared property inertiafree motion quasistatics 226 TIT Stuhovich et ul Artijicial Infelligencr 104 199X 21 l264 Fig 20 The problem solving paradigm Fig 21 Overview SKETCHIT syslem Fig 21 illustrates SKETCHITS implementation Reverse engineering generalization generate test The qcspace generator produces candidate sketch passes simulator Each candidate pair provide The representations guess behavior engagement abstraction numerical cspace sketch rest modifications implemented qcspace qcspace candidate The simulator computes compares desired behavior described continues tester finds qcspaces overall behavior candidate tester state transition diagram This process behave desired 9 The synthesis process implemented modules The selects motion type component second selects geometric implementation engagement Section 4 describes range candidates program considers TX Stahovich et al Artijicial lntelligencr IO4 1998 21 l264 221 pair library interactions Each library entry contains pair parameterized constraints assembles Model faces ensure faces implement specific kind behavior SKETCHIT BEP parametric geometry constraints library selections The bulk SKETCHITS effort spent reverse engineering generalizing new designs library interactions computationally inexpensive design Because synthesizes synthesis process straightforward program 4 The qcspace generator The step reverse engineering generalization generation qcspace numerical cspace slope qcscurve abstracting sketch The qcspace generator begins computing sketch abstracts numerical cscurve qualitative numerical cscurve points cscurve matches gets relative numerical cspace diagram numerical computes locations qcscurves directly locations cscurves slope straight line connecting end curves Fig 19 The program qcscurve The generator determines slope corresponding relative candidate qcspace pushpair curve pushrodstop location landmark E abscissa value intersection specific numerical curves qualitative Fig 22 As abstraction process moving curves introduce ambiguities For example ambiguity curve This value ordered respect landmarks B C abscissa values end points leverstop In qcspace E B greater camfollower C B C lo numerical cspace E compared B C When generator encounters possible interpretations Physically passing simulator configuration stop ambiguity landmark E denotes curves hooklever csplane kind ambiguity enumerates lever pushrod pushrod configuration B E C c right hook C E lever left hook E B b contacting particular hook offers means generalizing taking locations directly unambiguous There reasons SKETCHIT computes possible landmarks cspace One reason locations possible working designs enumerating generate wide range design alternatives want generalize cscurve largest possible family monotonic cscurves Ambiguity single curves families curves pay generalizing locations numerical original program order price testing possible relative locations Said differently locations design relative A second interesting locations relative sketch These flaws arise interactions enables reason program enumerates tests possible original flaws correct global compensate individually I WC consider case E B E C 228 TE Stahovich rt al Artijicial Intelligence 104 1998 211264 1 Hook Pushrod osition F ISI 21 LI 2 motion limit 2 1 ___6_______________ c I q oushrodstoo _______r ________1 _____L________ hookhot C D Lever Angle t A E D Lever Anglt circuit breaker Only Fig 22 A candidate qcspace PushrodHook qcsplane provides additional neutral positions hook corresponding pushrodspring motionlimit faces Fig 3 Diagonal monotonic The information The hook cold hook hot curves normal overheated curves neutral positions springs attached temperatures The leverspring lever pushrod The lines drawn straight convenience shape long curve extent reset stroke The remaining curves interactions qcsplanes shown incorrect For example arrangement interaction stop individually left lever remains interactions prevents enumerating possible qcscurves SKETCHIT correct flaw pushrod lever interaction Fig 3 interaction lever hook pushrod correct pushrodstop sketched far left hook global arrangement lever actually locations intersection interacting hook By pushrodstop pushpair relative bodies springs actuators engagement pairs As generator abstracts numerical cspace preserves properties number slopes components locations cscurves cscurves cscurves properties intended meaning sketch properties Consequently constant sketch consists abstraction The simulator ambiguities possible tester identify interpretations inherent produce desired behavior t The set candidate qcspaces program generates generator produces intersections qualitative interpretations alternative holds designs 4 I Preserving intersections 41 I Intersections ofnite qcscurves If finite cscurves intersect cspace want ensure intersect qcscurves qcscurves naturally explicit constraints necessary qcspace If cscurves intersect However cscurves ensure intersection corresponding horizontal vertical diagonal We definition choosing numerical chpace By preserving properties generate narrower range design alternatives vice versa preserve fewer properties TF Stahovich et al Artijicial Intelligence IO4 1998 21 I264 229 4 03 Fig 23 Depending particular ends Q 1 Q2 removed curves intersect common end point shapes qcscurve intersect b When usele5r Consider intersection diagonal qcscurves Ql Q2 shown Fig 23a Ql Q2 shape long monotonic Depending actual Ql curves line shape curves intersect For example Q2 straight curves miss We use trimming operation ensure finite qcscurves curves intersect end curve useless curve simulation curve In example Fig 23a portions curves intersection If discard change behavior point useless portions reach portions However device intersect Fig 23b l2 intersect When lies blocked space qcspace reach curves common end point guaranteed device configuration trajectory 412 Ensuring thatjinite qcscurves intersect qcscurves If finite cscurves intersect cspace want place constraints qcspace Explicit corresponding necessary bounding boxes curves overlap constraints intersection Diagonal curves kinds curves overlapping bounding boxes intersect Hence problem reduces single case diagonal curves overlapping bounding boxes intersect possibility ensure Fig 24 SKETCHIT A B curve Ql We use example constraints End point curve QT SKETCHIT ensure facilitate points established passing vertical intersecting constraints expressed A B B A These constraints added BEPModel box lies left Q2 To A A B B Q2 These line point A B constructs nonintersection Q2 Using line horizontal special points nonintersection SKETCHIT point bounding points lies inside labels I2 In examples tried curves required trimming implement subroutine trim qcscurves However straightforward extension program 230 u 4 Fig 24 Two nonintersecting finite qcccurves intersecting bounding boxes 413 Intersections injinite boundaries intersect If pair infinite boundaries qcspace Hence SKETCHIT intersections abstraction cspace need perform special operations naturally intersect preserve 42 Enumerating possible locutions intersection points Even SKETCHIT preserves intersection points locations intersections curve pushpair curve pushrodstop curve infinite boundary qcspace For example intersect ambiguous Fig 22 guaranteed described location The efficient way handle ambiguous kind ambiguity location intersection bounding box diagonal curve When happens wait simulator needs precise qcspace enters locations intersection point branch simulator enumerate possible consider possibility location trajectory enters bounding box precise location influence overall behavior device It need trajectory If simulator requires information For example trajectory Fig 22 simulator enumerate qcscurve infinite boundary possible branch current candidate qcspace locations reaches possible bounding box pushpair qcscurve locations intersection pushrodstop As described A E B B E C C E D simulator consider In effect simulator specializing new candidates If trajectory reaches bounding box program need branch behavior Hence set new specialized candidates produce case leaving location ambiguous compute specialized qcspaces behavior set unambiguous program single simulation candidate qcspaces set new TE Stahovich et Artcial lntelligencv 104 1998 2i264 231 43 Implementation notes The previous sections described locations intersection points The current version program enumerating possible actually uses simpler techniques inefficient easier implement vertical The program extends horizontal efficient methods preserving intersections lines Fig 24 intersects qcscurve qcscurves The program creates new landmark Similarly boundary diagonal qcscurve program creates new landmark end points diagonal points intersection infinite intersection The coordinates intersection point defined old landmark denotes end point finite qcscurve axis crossing infinite landmark boundary new landmark Thus intersection points particular qcscurve partially ordered points xcoordinate form ordered set ycoordinate form The program enumerates possible relative locations intersections simply enumerating interleaving orderings elements sets course maintaining possible ways partial old landmark old landmark After enumerating possible choices satisfy nonintersection simulates tests remaining program completely unambiguous locations intersection points program filters constraints described The choices Each choices 431 Periodic boundary conditions periodicity cylinder To constructs boundaries As Section 21 described pairwise qcspace wrap bodies rotates revolution During abstraction preserve numerical cscurves The program cylinder unrolls plane Finally program abstracts plane including boundaries intersections generator coincide cuts cylinder boundaries cspace 0 2n computes qcsplane intersections cylinder During simulation trajectory simply moves simulator reaches 2n simulator changes angle 0 vice versa trajectory plane reaches boundaries angle boundary The yoke rotor device discuss Section 9 provides example cspace Fig 36 shows flattened version qcspace SKETCHIT cylinder Curves Al B2 intersect piece curves 0 boundary cylindrical obtains adding boundaries boundaries piece 2rr boundary flattened version unrolling 432 Repuiringjiaws By enumerating sketch repair limited arrangement interactions possible locations intersection range flaws original points current SKETCHIT sketch incorrect global work individually correct We continuing 232 T7E Stahovich et al Artijcial Intelligence 104 1998 2i264 techniques locally globally defective repairing kinds flaws individual interactions Because properties qualitative slopes qcscurves task correct relative locations qualitative slopes qcscurves qcspace matterthe relative locations repair sketch flaws We generate test paradigm described earlier In case possible orderings curve map single change qcspace search space geometry Repairing design search space possible end points possible choices qualitative changes geometry smaller repairing efficient directly repairing space possible modifications slopes Because geometry qcspace locations relative However use debugging ways minimize realistic designs search space far large exhaustive search We example search Thus exploring exploring rules examine particular qcspace fails produce correct behavior based topology The desired behavior mechanical device qcspace The topology qcspace described desired trajectory strong influence desired trajectory easy possible For example topology If diagnose traps device preventing traversing kinds failures able generate new qcspace judicious repair current qcspace contain funnellike desired behavior desired trajectory Another possible way reduce search parts qcspace identifying correct repair effort focused parts parts qcspace transition likely correct parts likely For example simulate arc state transition diagram arcs produce desired transition Conversely qcspace transition likely need repair individually If particular arc produce particular arc produce desired state transition desired state transitions 5 Simulator Qcspace represents devices kinematics determine sequences devices parts occupy We use qualitative simulator positions motions applied inputs specified state transition diagram This section provides brief highlevel overview simulator parts actually exhibit response describes possible positions The simulator operates particle metaphor described net force body In inertiafree world velocity computing direction net force continues event collision nature forces I3 When happens simulator stops recomputes continues simulating Section 212 It begins changes forces I3 With inertia acceleration direction net force velocity need ZE Stahovich et al Artificial Intelligence 104 1998 21 l264 233 Each possible kind event corresponds boundary boundaryeither boundary determine events happen simulator examine qcspace spring neutral position motion representing qcspace reaching leaving trajectory free blocked space qcscurve limit actuator Hence trajectory We number assumptions task inertia inelastic As result event motion body remains strictly positive strictly negative zero reasoning trajectories We assume qcscurves monotonic motion collisions free contacts frictionless occurs Consequently qcspace monotonic given time step greatly simplify devices trajectories We assume devices fixedaxis result examine qcspace examining trajectories multidimensional space qcsplanes We compute events happen plane use constraint propagation predicted individual planes happen trajectory trajectory 2D projections event determining qcsplane continued event occurs determine events Because simulation qualitative ambiguities arise concerning happen possible sequences determining simulator produces envisionment events As mentioned simulator begins step simulation computing program use qualitative resultant forces applied body order determine event Because qcspace qualitative forces The obvious approach significant ambiguity vector Because qualitative vector scalar components sum qualitative vectors ambiguous Hence developed special techniques representing representing force sums component qualitative ambiguity ways force qualitative vector results scalar sum qualitative reasoning forces qualitative representation subject scalars First represent force projection degree freedom body component force introduces inaccuracies The force sums applied Because effect motion body simplification advantage simplification greatly reduces ambiguity projection forces forces engagement example faces apply Second represent engagement type constraint blocks Fig 25 The spring pushes block A right actuator pushes block C left In SKETCIITS world actuators assumed assign position function time Block B block middle experiences engagement forces opposite directions forces A C Because qualitative sum forces ambiguous impose Consider motion sources motion However know B left Why We know force assigned motion We force necessary motion constrained engagement C achieve constrains C applies B kind engagement motion body applied Hookes According springs force A In inertiafree world A transmit law springs deflection determines magnitude spring force B Thus 234 iYl7 Stahovich et ul Artijiciul Intelligencr 104 I 998 2 I l264 actuator positive Fig 25 Three blocks sliding frictionlesq horiLonta1 surface A applies force known magnitude force assigns known motion kind force assigns known magnitude We type force compliant engagement way compliant member spring produces force known magnitude B In contrast motion constrained engagement force known magnitude One basic principles motion constrained engagement compliant engagement Hence B moves left In experience proven useful resolving ambiguities force sums overpowers principle A complete description simulator 43 46 ambiguities including techniques reducing 6 The tester The tester compares simulated behavior candidate qcspaces behavior specified state transition diagram accepting desired behavior candidates desired provide computing possible motions The simulator produces envisionment exhibit response sequence states specified state transition diagram desired behavior On hand branches pass sequence states candidate branches candidate produce behaviors desired behavior I4 The tester accepts candidates behavior device applied inputs If branches pass desired candidate provide desired If produce desired incapable providing desired behavior addition 7 The motion type selector The motion type selectors task select motion type rotation translation bodys device If qcspace coordinate body nonperiodic These device provide desired behavior specific choices masses springs actuators We verify produce desired behavior accept designs use numerical simulation conceptual design progress choices Hence use qualitative precise numerical computationally expensive design details techniques selected An alternative approach construct additional constraints masses springs actuators ensure desirable branches simulation possible These constraints added BEPModels computed qcspace simulation TE Stcrhuvich al Artijicial lntelligencu 104 19981 2i264 235 type translation rotation rotation If bodys qcspace coordinate possible motion type rotation selected body periodic wraps In case body motion rotate revolution form cylinder rotate revolutions This distinction cast physical single direction turns far revolutions started having translating direction motion Hence translating revolutions return reverse place terms If rotates return position direction motion The way replace rotating turns reverses started By selecting new motion types body SKETCHIT generate rich assortment Fig 8 The new designs completely consistent given state sequence engagements produce new designs illustrated desired behavior transition diagram 8 Interaction library The general qcspace translating constructed building blocks I5 task translating cspace 2 However carefully designed tractable qcspace small number basic building blocks qcscurves There 40 intractable geometry geometry qcscurve Because small number basic building blocks able construct To tianslate qcspace geometry library implementations program simply selects library implementation Each library entry contains pair parameterized ensure faces implement monotonic cscurve desired qualitative slope desired choice blocked space Each library entry contains algebraic expressions coordinates cscurve end points faces set constraints For example Fig 26 shows library entry qcscurve F Fig 19 case negative direction causes monotonic q1 rotation q2 translation translation correct slope blocked constraints satisfied Appendix A derivation negative direction For corresponding space correct following rotation qcscurve UI 0 LO hO 1 3 3 The origin 32 seen examining Fig 19 choices qualitative slope slope choices blocked space qcapace axes yt 92 represent qualitative interactions rotating translating bodies rotation translation The remaining 8 building blocks represent stationary bodies These interactions produce horizontal vertical qcscurves infinite versions curves A C E G Fig 19 The number 8 comes fact types infinite qcscurves interacting bodies rotate translate body fixed 236 Tl Stahovich et al Articial Intelligence 104 1998 211264 Fig 26 Library entry F 1 implementation lines The rotating positive counterclockwise curve F cam otfset follower The faces shown face translates horizontally 0 measured face rotates origin translating angle rotor x measured positive left position slider r 2 L2 2sL cosCl 12 rh sh 4 n2 arccos L2 r2 s22Lr arccoshr n2 4671 arcsinhr n2 o The coordinates cscurve end points I6 81 arcsinhr XI r cos61 82 r arcsinhr x2 Y cos81 Fig 27 shows second way generate qcscurve F constraints LO h 0 e Ht xt lower left end curve x measured positive left Fig 26 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Fig 27 Library entry F2 implementation curve F Yam centered follower The faces shown lines The rotating face rotates origin translating face translates htrizonlly 8 measured positive counterclockwise angle rotor x measured positive I position slider 1Q o I x2 Qx 4 n2 CT I s fLZ 22sLcosiy2 shl 0 rtan hz sin The coordinates cscurve end points I7 641 arcsinhzr rj rcos tan 02 arcsinh1 s arccas s2 rz L2sr 2 s cosarcsinh 1 s h 1 tan 18 19 20 121 22 231 24 25 26 27 281 29 The slider Fig 26 pass cough design motion slider approximately second motion slider approximately perpendicular rotor The cam offset follower represent qualitatively follower The designs qcscurve pivot Fig 27 In motion rotor motion cam centered second different implementations parallel I7 fN1 x1 lower left end curve x measured positive ihe fuf Fig 27 To generate BEPModel sketch qcscurve transforms implementation parameters actual components The relative constraints geometry geometry constraints BEPModel program For selection coordinate systems locations qcscurves end points cscurves SKETCHIT assembles produce fragments constraints library selections match selects library creates new instances parametric parametric qcspace turned Our library contains geometries use flat faces begun work faces We library entry 40 kinds circular interactions By selecting different continuing generate new entries library entries given qcscurve SKETCHIT able produce families designs For example Fig 5 shows different different BEPModels BEPModel SKETCHIT generates selecting qcscurve Fig 9 shows solution instead F 1 As examples library entries encompass wide variety design solution library entry F2 camfollower different BEPModel SKETCHIT generates designs generated selecting different illustrate 81 Constructing BEPModel This section describes BEPModel We illustrate BEPModel SKETCHIT uses library process example showing SKETCHIT constructs construct Fig 28 circuit breaker qcspace SKETCHIT construct different BEPModels translation particular qcspace For types hook motion motion type selector chooses example pushrod rotation lever program derive different BEPModels Here constructs geometry Fig 9 corresponding To construct particular BEPModel SKETCHIT uses library entry Fl Fig 26 camfollower implement transformations FSS1 Fig 30 pushrodstop Fig 27 coordinate Appendix 12 pushpair TRS 1 Fig 29 leverstop qcscurve D2 similar To use library entry Fl camfollower SKETCHIT creates new instances shown Fig 31 SKETCHIT creates new instances appending unique integer end parameter For constraints parameters instantiates parameter example 7 new instance parameter L The constraints follower qcscurve Eqs 12 15 These constraints Fig 3 1 assign values end point landmarks cam include pair parameters Ix The neutral positions springs motion limits actuators produce qcscurves implementation faces require geometric interacting I9 Circular faces rotors act stops To rigorous constrain bodies intended revolution implementation actually flattened representation landmarks rotating bodies 0 2n This true rotate actually 0 2rr ensures rotate lea revolution cylinder torus Section 43 I In flattened representation In case devices qspace rotate revolution bodies intended In case constraining landmarks al1 LM 4 Lb LM 4 LM LM I LM I LM I LM I LM T LM A Lever Angle I Hook Fig 28 A circuit breaker qcspace provides desired behavior f2 allow faces attached hook lever arbitrary f1 locations subject course constraints repeats process pushpair SKETCHIT leverstop pushrodstop producing constraints Fig 32 landmarks explicitly constrained SKETCHIT explicitly constrain yoke rotor example boundaries 0 27r For circuit breaker example landmarks lever 0 27r 240 TF Stahovlch et rd Artijicial Intelligrncr 104 1998 2l264 L translaOng face Constraints 4w L R 0 End Points 8 o x R L5 0 0 x2 R L Fig 29 Left library entry TRS1 geometry implement qcscurve C Fig 19 case rotorstop The position rotor measured positive 41 rotation 42 translation face translates horizontally position x Right constraints counterclockwise angle 8 The translating geometry ensure monotonic cscurve correct qualitative slope blocked space correct end points cscurve translating I fixed face translating face Constraints L e 0 Ox Axis Crossing x0 Fig 30 Left library entry FSS1 geometry implement infinite version qcacurve A Fig 19 sliderstop The case 42 translation y1 rotation translation translating ensure monotonic cscurve correct qualitative slope blocked space correct position infinite boundary crosses coordinate axis face translates horizontally position x Right constraints geometry stationary Next SKETCHIT develops expressions landmarks point defined intersection points intersection horizontal qcscurves Consider hookcold intersection constraint determines statement indicating horizontal FOLLOWER Hence compute BEPModel compute line line camfollower curve value landmark Fig 28 The location LME SKETCHIT instantiates LM_E INTERSECT CAM value landmark LME defined intersection cscurve located landmark LMle camfollower evaluates LM_16 HOOK value LME constraint solver program horizontal line cscurve There 5 intersection points Fig 28 shown dots Each produces constraint intersection similar defining LME Fig 33 shows constraints TE Stuhovich et 01 Artid lntrlligencr 104 1998 21 l264 241 R6 H4 offl R6 COS ASIN H4 R6 off2 LM_9 ASIN LM_8 LM_11 180 ASIN H4 R6 off1 LM_lO R6 COS ASIN H4 R6 off2 W8 0 L7 0 H4 0 R6 SQRT S5 2 L7 2 2 S5 L7 COS PHI911 R6 H4 S5 H4 PHI9 90 ACOS H4 R6 ACOSL_7 2 R6 2 S5 2 2 L7 R6 90 PHI9 180 ASIN PSI10 PSI_10 0 H4 R6 90 Fig 3 I The constraints portion BEPModel describing camfollower interaction To complete constraints BEPModel landmark orderings shown Fig 34 SKETCHIT instantiates constraints Figs 262729 geometry Figs 3 l34 constitute shown Fig 35 There coordinate complete set constraints produces contains parametric geometry SKETCHIT geometry library selections BEPModel The model parametric assembling 30 geometry SKETCHIT establish coordinate systems Before assembling frames associates components component fixed body fixed ground The motion type body determines stationary XLG XL Yt frame attached levers pivot YLG frame The frame represents origins frames remain coincident Dimension XL measures levers angle The coordinate systems pushrod hook defined similarly body fixed frames translate rotate lever represents frames For example relative motion lever rotates relative These pairs coordinate initially placed arbitrarily assume positions frames represent plane The constraints BEPModel ensure correct behavior For sake locations components allow device provide The generator assigns total ordering numeric subscript individual diagonal qcscurve instantiates For example camfollower landmarks However causes difficulties constraints later constraint constraints curve landmarks end points axis crossings landmarks Fig 28 It assigns total ordering landmarks alphabetic landmarks intersection points Fig 28 When SKETCHIT subscript imposed redundant constraints totally ordered sets instantiate LM_E LM_11 LM_9 LM_E come intersection points ordering end point constraint LM_9 LM_11 comes form subsumed Fortunately kind redundancy The U subscript stands lever G stands guide We use term guide refer pivot rotating body axi translation translating body pushpair G2 ASIN Hi30 S32 ACOS S32 2 R33 2 L34 2 21 S32 R33 Off3 COS ASIN LM_l S32 LM_4 ASIN H2_31 R33 off3 LM_3 R33 COS ASIN H2_31 HI30 S32 R33 Hl_30 TAN PSI_36 off4 t H2_31 TAN PSI361 off4 L34 0 Hl_30 0 H2_31 0 PSI36 90 PSI36 180 PHI35 180 PHI35 90 R33 SQRT S32 2 L34 2 2 S32 L34 COS PHI_35 S32 Hl_30 0 R33 TAN PSI_36 H2_31 SIN PSI_36 leverstop LM_9 off5 LM_8 R21 LS_19 off6 LM_5 R21 LR_18 6 LS_19 0 LR_18 0 R21 0 pushrodstop LM_12 off7 E3 0 PHI2 0 PHI2 180 Ll_l 0 Fig 32 The constraint tor portions BEPModel describing pushpair leverstop pushrodstop interactions LM_E INTERSECT HOOK LM_16 CAMFOLLOWER LM_B INTERSECT PUSHROD LM_18 PUSHPAIR LM_C INTERSECT LEVER LM_9 PUSHPAIR LM_D INTERSECT LEVER LM_11 PUSHPAIR LM_A INTERSECT PUSHROD LM_12 PUSHPAIR Fig 33 The intersection points circuit breaker qcspace LM_C LM_D artifacts way SKETCHIT computes intersections diagonal qcacurves infinite boundaries Section 43 LM_18 LM_i LM_12 LM_D LM_12 LM_18 LM_11 LM_A LM_B LM_9 LM_2 LM_9 LM_16 LM_lO LM_C LM_18 LM_3 LM_12 LM_4 LM_14 LM_E LM_ll LM_2 LM_B LM_ll LM_4 LM_8 LM_16 LM_D LM_C LM_15 LM_3 LM_A LM_4 LM_9 LM_E LM_9 LM_il LM_lO LM_5 LM_17 LM_8 Fig 34 The landmark ordering circuit breaker qcspace A 233 Y PG _Y YP Pushrod X r X PG Lever X XL X LOG Y LG YL Y HG Yti XH Hook X x cid228 Fig 35 Pairs coordinate frames defining locations components circuit breaker frames positions likely provide presentation Fig 35 shows coordinate correct behavior After establishing satisfy constraints BEPModel coordinate ready fragments parametric geometry library selections This geometry library entry Hence local library coordinate assemble defined respect local coordinate systems contained assemble systems coordinate systems components geometry SKETCHIT transform systems components SKETCHIT 82 Periodic boundary conditions To facilitate simulation SKETCHIT flattens cylindrical qcspaces boundaries cylindrical qcspace flattened representation 0 2n During synthesis SKETCHIT planes effect reconstruct The reconstruction In flattened representation split pieces piece 0 boundary 2 boundary To facilitate synthesis SKETCHIT join pieces process focuses qcscurves boundarycrossing cross boundaries qcscurves 243 LM2F LM12 LMll LMlO LM9 LM6 LM7 LM6 LM5 LM4 LM3 LM2 LMl LMO 2n Boundarv LM13 LM14 LM15 0 Boundary ____ l LM16 Yoke Position Fig 16 The qspace yoke rotor flattened produce plane The labels qcscurves indicate names interacting face A yoke face I rotor Fig Na Because curves Al B2 cross houndaries piece 2 boundary The small black circle wrves 0 boundary piece faces For example curve Al interaction accompanyin coordinate tuples intersection points intersection points labeled Although qcwurves drawn straight lines shape long monotonic SKETCHIT joins pieces split curve subtracting 2n ordinates end points intersection points piece curve near 2n boundary assume ordinate form cylinder For example Fig 36 shows flattened qcspace yoke rotor section Fig 37 shows result joining curves boundarycrossing wraps dimension To construct BEPModel SKETCHIT rejoined boundarycrossing library entries additional effort boundaries flattened representation qcscurves Because selects appropriate remaining library entries qcscurves lie entirely directly select SKETCHIT 9 Using BEPmodel refine concept As noted constraints BEPModel geometric parameters provide represent behavior originally range values specified lYF Stuhovich et cd Artificial Intelligence 104 1998 21 l264 24s I LM2 LMl LM12 2n LMll 277 LMIO 2n 0 Boundary LMH LMll 271 LM13 LM14 LMIS LM16 b Yoke Position boundarycrossing curves near 2n boundary Fig 37 A reconstruction boundarycrossing Fig 36 moved 0 boundary subtracting 2rr ordinates end points intersection points The small black circles accompanyinf coordinate shape long monotonic yoke rotor qcspace The pieces tuples intersection points Although qcscurves drawn straight lines qcscurves Fig 38 The yoke rotor device define entire family solutions designer explore order The constraints adapt initial conceptual design meet design requirements new example concerning We illustrate design yoke rotor device rotation rotor causes yoke shown Fig 38 Continuous oscillate counterclockwise left right brief dwell change direction We device SKETCHIT stylized sketch Fig 39a The desired rotor blades engage yoke faces turn shown behavior Fig 39b From input SKETCHIT generates The designer available large family designs specified BEPModel BEPModel Fig 40 point begin specify additional design requirements Imagine requirement achieve add additional constraints strokes length A simple way yoke BEPModel constrain 246 TlT Stahovich et 1 Artijciul Intrllimce I04 1998 21 I264 4 Fig 39 The stylized sketch yoke rotor device b The desired behavior The letter number rotor node indicate yoke face rotor face engaged external input causes transitions state Turning PSI 0 PSI ASIN H R 90 PHI 180 ACOS H R ACOSL 2 R 2 S 2 2 L R 90 AOFFP 118332 R 3936 AOFFl 238 332 AOFFB 358 332 PHI 90 RH HO LO wo Fig 40 A BEPModel yoke rotor representative shown For simplicity new variable names substituted example rotor blades constrained sets variables constrained equal length R replaces R 1 R2 RX sample parameters constraints equal For rotor symmetric For example constrain rotor blades equal length equal spacing rotor symmetric constraining RlR2R3 AOFFl AOFF 120 TF Srahovich et Artijicial Intrllipvm 104 199X 21 l264 241 AOFF AOFFI 120 Imagine strokes required 1 O cm long We achieve adding additional constraint LM29 LM27 1 O Finally imagine 40 stroke rotor turns 40 yoke remains stationary We achieve adding additional constraint 24 dwell required LMG LM8 40 We invoke DesignView solution set constraints produce basic desired behavior desired refinement augmented design characteristics We able accomplish solution guaranteed performance simply adding additional constraints BEPModel 10 Related work multiple Our task use description desired behavior turn sketch mechanical families working geometries No previous work directly task The work comes closest work design approaches based bond graphs kinematic building work shape design work sketch understanding The areas research device addressed automation blocks subsections section particular specifically The remaining subsections supporting work work qualitative physics simulation task work component connection models geometric work indirectly touches issues involved features 101 Design automation 1011 Bond graph approaches Our techniques viewed natural complement bond graph techniques discussion bond sort developed Ulrich 51 See 28 comprehensive provides specified graphs Our techniques behavior inertiafree employed simulator techniques effectively blind energy flow Bond graph techniques hand explicitly represent energy flow incapable representing geometry computing assumption useful geometry SKETCHIT assigns 23 LM29 LM27 variables names variables graphical browser constrained LMG LM8 variables ending dwells Because constrained duration SKETCHIT assigns extreme positions yoke We obtain inspect SKETCHITS simulation device Because position rotor beginning dwells yoke rotor symmetric yoke rotor symmetric strokes length Prabhu Taylor 1371 Welch Dixon bond graph design allow specification positions orientations components 52 extend approach design shapes interacting parts use library Their techniques synthesize design abstract representation behavior bond map implementation We use similar paradigm graphs library contains includes complete faces theirs interacting components design interacting geometry Like techniques techniques produce design variants lookup IO 12 Kinematic building blocks Our techniques focus geometry devices time varying engagements variable kinematic known design linkage design techniques Although known topology Therefore techniques fixed topology mechanisms techniques complementary gear train Erdman Sandor 9 construct mechanism al 38 demonstrate They knowledgebased mechanisms based cams gears linkages techniques design applicable tools fixed topology devices Rosen et tool capable designing dwell problem recently automating There lot task synthesis device specified output motion Kota Chiou 29 use matrix represent design fixed topology input devices A common motion basic desired motion transformation search compose building blocks Subramanian achieves desired motion transformation The sequence abstract mechanisms task All bond graph based design techniques described applicable approaches capable producing design variants techniques suitable designing variable use matrix decomposition Wang 50 use iteratively deepening topology devices transforms decompose specified 102 Shape design Although work crosses research boundaries closely related work shape design Joskowicz Addanki 24 automated interacting modify shapes adding deleting produce qcspace instance tool shape design They start shapes 2D profiles desired behavior described cspace They line segments arcs shapes desired cspace While desired cspace input compute provide desired behavior Their techniques produce single design family designs SKETCHIT Joskowicz 1231 uses set local global operators cspace device order reduce irrelevant details For example operators divides monotonic pieces replaces pieces straight line segments Another operator eliminates parts cspace reached particular choice external inputs device The closest application operators behavior devices simplified abstracted cspaces devices provide simplify abstract task comparing cspace boundaries cscurves TF Stahovich et al Artificial Intelligence 104 199x1 211264 249 qualitative behavior Our task recognizably produce qualitative behavior recognizing designs behavior different want generate designs provide 2 Joskowicz Sacks 26 Caine designer lookup computationally techniques families designs Finally modify shape modifying geometry map changes map qcspace expensive single design produce interactive design tools allow cspace vice versa While use library techniques use numerical geometry Their produce multiple changes techniques cspace instance techniques interactive automatic mapping tolerance space extension cspace shape behavior examine task shape affects behavior determine shapes parts affect kinematic behavior Their Joskowicz et al 27 use kinematic variations determine specified variation constraints shape sufficient There recent work exploring ensure desired behavior Faltings 13 examines single geometric parameter change topology cspace constraints parameters sufficient held constant changing Their task determine given parameter change altering current behavior determine obtain desired behavior Our task similar Faltings Sun 15 They interactive place vocabulary design modifies user selected geometric parameter change place vocabulary change simulation desired behavior They use techniques change place vocabulary behavior Their uses qualitative new behavior modified geometry matches specified specifying desired behavior 131 determine parameter change order They language determine They modify cspace modifying geometry modify qcspace directly Because changes search space larger Also tool automatic theirs interactive generate design variants map change cspace geometry Gupta Jakiela 1 S novel technique known component carves shape unknown mating component They require interacting shapes known Also require complete description desired motion component 103 Sketch understunding There little previous work sketch understanding25 Narayanan et al 34 use reason behavior use preparsed description diagram device behaviors component reason directly interacting Faltings faces 121 suggests sketch represents family precise models He demonstrates single qualitative model instead taking sketch qualitative geometry 25 See 1491 discussion common sketching techniques engineering 250 ZE Stahovich et al Artijicinl lntdligencr 104 1998 21 i264 topology Kinematic metric diagram line drawing approximate dimensions calls kinematic free space regions devices cspace Kinematic place vocabulary suggest behaviors However methods determining modifications yield behaviors open issue possible compute topology abstraction 111 contains ambiguities These ambiguities geometry device possibly obtained modifying topology 1141 characterizes topology 104 Qualitutive physics Our work builds large growing body research field qualitative provide sampling overview field Here techniques discuss representative physics Weld 53 provides comprehensive background work qualitative physics qualitative simulation De Kleer program 5 describes small signal behavior electric circuits The program computes behavior constraint circuit These propagation techniques 48 We use simplified version propagation work Stallman Sussman techniques related causal explanations produces propagate circuits inputs techniques De Kleer 6 describes qualitative compute simulator based confluences motion bodies device qualitative Kleers world characterized behavior qualitative computes device possible possible transitions state consistent set states operating differential equations The behavior component set qualitative described set confluences The simulator qualitative consistent qualitative states components regions states Hence simulator computes envisionment De Kleers simulator provided enumeration possible qualitative regions component states operating enumerate depends shapes components interacts states component components behavior In domain possible qualitative possible Williams 54 describes simulator reason small signal large signal behavior electric circuit The simulator computes small signal model applies particular operating mode predicts parameters change possibly causing transition uses constraint analysis provides underpinnings similar way simulator computes individual qcsplane events happen transitions actually happens Kuipers kinds techniques This event computes 3 I possible events determine operating mode The simulator determine possible uses constraint propagation mathematical Forbus 171 views world process centered perspective device like boiling centered perspective These techniques suited modeling processes involve fixed collection stuff boiling process evolves water turns steam leaves However behavior kinds mechanical devices conveniently set processes decomposed Tl Stahovich et al Artijcial Intelligence 104 199X 21 l264 251 105 Simulation equations motion device Because use qualitative compute behavior candidate cspace 36 191 47 predict motion numerically represen use qualitative integration simulation SKETCHIT uses dynamic Conventional dynamic simulators integrating tation qcspace use numerical simulator Faltings simulator l l describes qualitative fixedaxis devices The simulator free space regions csplane pair components called place vocabulary qualitative version cspace regions uniform There kinds regions contacts segments cscurves 26 contact contact points exists Place vocabulary cscurves based representation Place vocabulary decomposes contact places twodimensional exists intersections encodes qualitative response applied inputs In case simulator computes possible transitions simulator limited kinematic ability reason forces 27 Our simulator hand dynamic simulator simulator representation transitions actually occur ambiguities arise place places Because motion resulting transitions computes places allowed intended simulator Faltings Forbus et al 16 extend Faltings simulator Their simulator models inertia assume motion inertiafree They represent forces qualitative vectors Our representation ambiguity simulation force vectors reducing branching occurs summing qualitative forces designed eliminate techniques applied forces produce dynamic IO6 Computing numericul Cspuce We obtain candidate qcspace abstracting numerical cspace special purpose information There general purpose sketch Because abstraction process requires partial description numerical compute cspace sketch developed simplified required computing 32 example describes complete numerical algorithm plane rotation Brost l Caine 2 algorithms case rotate translate More suited needs work Joskowicz polygons Sacks 25 They compute csplane pair interacting parts device cspace fixedaxis device computing cspace device LozanoPerez space polygons configuration computing translate techniques techniques 107 Componentconnection models A common abstraction componentconnection model component set ports port associated physical qualitative reasoning systems They use term constraint curve cscurve Kinematics commonly analyze study motion reference forces cause motion Kinematic simulation motion devices motion source applied degree freedom 252 TIT Stuhwich et 01 Articid Inrelliyncr 104 I 99X 21 I264 characterizes parameters particular components ports Components parameter voltage fluid flow rate A set constraints relationships connected ports ports connected interesting behavior occurs inside components parameter values share common parameter All simply propagate connections By contrast devices interested components componentconnection interaction Although SKETCHITS domain describes examples work area structure Doyles 8 task hypothesize interaction interesting behavior occurs pair faces problems section issues Therefore techniques apply directly address relevant achieves set observable events achieves desired behavior He constructs hypotheses primitive mechanisms geometry connecting quantity mechanisms limiting serves primary source constraint work sketch primary source constraint devices similar initial sketch Each primitive mechanisms components type associated cause input effect output Two primitive types This In generation hypotheses limiting search consider compatible quantity connected Falkenhainer Forbus lo program uses library model fragments description structure device construct model suitable answering answer user query device The goal simplest model adequate query Each model fragments describes possible behavior component possible set constraints task determine possible behaviors actually occurs context overall device parameters ports The programs relating Nayak 35 describes similar His task construct model provides causal explanation constraint described thermistor determine devices behavior The expected behavior device provides limiting desired causal path example adequate model The expected behavior temperature search Mashbum Anderson 33 extend methods Falkenhainer angular deflection pointer equations Forbus produce guarantees model complete solve desired quantity Davis 4 describes performs circuit diagnosis His task determine components observed behavior device correct behavior Said differently malfunctioning account discrepancy task model predicts observed behavior correct intended behavior task systems achieving The primary device plays generalization device plays achieving techniques engineeringiresynthesis process SKEKHIT paradigm overall behavior During similar desired overall behavior reverse engineering determine role task determining role Fig 21 Hence reverse extend SKETCHITS domain systems componentconnection TIT Stahovich et al Artcial Intelligence 104 1998 211264 253 108 Reverse engineering Before SKETCHIT synthesize new designs device reverse engineer task reverse engineering work original sketch Shrobe 42 examined kinematics linkages domain linkages He numerically Kramers TLA 30 parses simulation identify set common behaviors dwell frequency doubling These techniques extend SKETCHITS reverse engineeringresynthesis linkage domain paradigm simulates 109 Geometric features In SKETCHITS domain shapes interact However domains features individual consider domains components determine important behavior device determined component geometric design properties Here For example Hirschtick 20 describes knowledge based tool assists design works domain extrusions extrusions The tool rulebased aluminum crosssections geometric corner fillet The program begins identifying extrusion walls corners hollow cavities produce manufacturing built line segments arcs The rules trigger patterns features One rule example states wall wall meet features fillets applies rulebase important advice Dixon et al 7 similar manufacturing based geometric design recognizing aluminum extrusions castings injection molded plastic use feature tool construct geometric model device conventional CAD model device Their domain advisor However features Wolter Chandrasekaran 55 featureoriented design capable wide range functions They represent geometry hierarchy representing structures called geomes A geome collection geometric elements constraints elements combined They label geome function commonly For example geome consisting cylindrical rod inside round hole diameter labeled pivot The designer constructs design assembling geomes provide desired functions They provide abstract geomes geomes designer revoluteconstraint later refine implementations intended geome example abstract geomes allowing implementation function device structure The The designer geometric pivot implementation specific geomes Their functional pin hole rack pinion They handle intermittent contact function lever hook circuit breaker language represent static features slot constant contact require functions IO 10 Representing function There wealth research representing example describes representation capturing reasoning function Hodges 2 I behavior function parts 154 TnE Stuhovich et 1 Artcial lntdligencr 104 199X 211264 mechanical devices This representation useful task originally language record device supposed enabling services determine device Iwasaki et al 22 function parts device Their goal explicitly devices structure like automated design verification work addition representing recording intended During reverse engineering achieving plays description function Hence work complementary reason representation desired overall behavior The program function order perform useful tasks approaches SKETCHIT determines role device effect computing 10 I I Algebraic constraints form BEPModel desired behavior Serrano Gossard SKETCHIT produces output ensure constraints called MATHPAK Similarly Serrano 1411 describes like contained constraints suitable BEPModel solving constraints efficiently solving parametric model 40 BEPModel 28 systems algebraic 11 Future work SKETCHIT currently repair limited Section 4 described continuing kinds flaws develop techniques range flaws original sketch As repairing language specify like verbal language We currently use state transition diagrams desired behavior device like develop behavior terms desired sequence engagements We specification engineers use behavior devices For example like specify desired behavior common engineering state transition diagram terms ratchet direct better language For example engineering translation simply macro state transition diagram terms like ratchet clutch trip mechanism We believe good substrate implement desired sequence engagements language language We working Currently techniques significant portion variable like extend techniques expand restricted class devices fixedaxis devices Although SKETCHIT handle topology devices actual practice 39 handle particular kinds nonfixedaxis constitutes We currently exploring commonly occurring class devices parts degrees freedom These devices switchable degrees freedom degrees freedom degrees freedom active SKETCHIT represent switched given qcspace devices pair tractable different mode operation time kinds devices set 2x DesignView syqtern use solve constraints BEPModel based MATHPAK TF Stahovich et 01 Artificial lntrlligencr 104 1098 21 I264 155 Fig 41 A device switchable degrees freedom The device employ rotors labeled A B Rotor A springloaded B hay spring pushing plunger protruding stop Fig 41 The mode operation corresponding qcspace The plungers degree freedom switched Fig 41 The second mode operation corresponding qspace Rotor Bs degree freedom switched qcsplanes mode operation The simulator select appropriate qcsplane step simulation B spring pushing Fig 41 shows example consisting rotors plunger degrees freedom As rotor A turns clockwise labeled A B Rotor A stop Devices index film advance cameras In mode pushes Bs spring pushes B rotor B degrees freedom plunger depressed rotor B shown Fig 43 In normal use device alternate springloaded plunger protruding similar example operation rotor B shown stop In second mode operation plunger rotor A turns counterclockwise engaging modes Fig 42 Eventually rotors disengage causing Fig 42 shows qcspace mode The qcspace degrees freedom rotors Because plunger zero degrees freedom plane detined 256 1717 Stuhovich et ml Aticial Intelligence 104 1998 21 l264 mode appear qcspace Fig 43 shows qcspace second mode This qcspace plane time defined degrees freedom rotor A plunger At point simulation qcsplanes step active The simulators new task select applicable qcsplane simulation We like relax restriction frictionless approach model friction force dominates negligible Using model simulator additional property computing forces applied body Once SKETCHIT determines engagements provide high friction add appropriate constraints Model force balances friction engagement dominates BEP engagements One simple force balance branch These constraints expressed terms friction cone defines range forces range orientations force surface resist slipping The size friction cone function coefficient friction geometric faces To ensure engagement provides high friction parameters interacting forces SKETCHIT add constraints inside friction cone Conversely program add constraints After making techniques reported 29 forces outside friction cone task determine working examples extensions scale design problems complex BEPModel ensure ensure engagement ensure engagement friction negligible We beginning explore techniques applied BEPModel useful domains For example believe tolerance analysis 3 overview tolerancing Here task determine given set variations desired behavior A possible approach contained simplistic number designs randomly BEPModel shapes locations parts device compromise variations family working designs defined BEPModel For example large selected specified set satisfy constraints implementation use Monte Carlo simulation task determine determine We begun explore design rationale capture We believe constraints serving link geometry desired behavior The constraints example way BEPModel useful prevent subsequent redesign efforts modifying compromises hard won design features original design form design documentation geometry problem kinematic 12 Conclusion We demonstrated SKETCHIT single sketch repair limited generate multiple families designs range flaws initial design 2 We tested program examples tiring mechanism single action revolver circuit breaker yoke rotor examples described TF Stahovich rt al Artificial Intelligence 104 1998 21 l264 257 ensure SKETCHIT represents new families BEPModel parametric geometry desired behavior SKETCHIT constraints selecting creates different families changing new designs different geometries SKETCHIT produces motion types components illustrate include wide range new design alternatives geometry produces faces As examples engagement connection select new implementations shape behavior design mechanical shape attempts complex SKETCHIT able perform tasks qcspace new representation behavior device abstracts away opportunity implementation intimate typically conceived modification shape achieve behavior But change behavior mapping shape mechanical behavior Qcspace captures providing particular Given artifacts changes behavior behavior Our qualitative complete offers far smaller search space It complete change shape produce cspace changes far smaller precisely single change isolates differences changes original geometry map slopes qualitative changes appropriate representation We suggest 2 suggest manipulate relative locations qualitative maps new qcspace differing slopes qcscurves Qcspace level abstraction locations qualitative qcspace Finally matter changes representation behavior relative cspace One reason work important efficient way capture communicate convenient working directly speak engineers natural language sketch SKETCHIT sketches ubiquitous design They information By takes step closer CAD tools design Appendix A Deriving library In appendix interaction library providing library entries We use example library entry implements Fig 19 case q1 rotation q2 translation negative direction causes translation positive direction 3o This implementation uses flat faces parameterization derivation qcscurve H rotation right Our goal derive set monotonic qcscurve Fig 26 x measured positive constraints parameters slope qcscurve H faces implement As Fig 26 shows 7 parameters characterize pair faces count H x geometric qcscurve H identify faces produce monotonic measure positions parameters To obtain constraints ensuring regions 7dimensional position parameters implement faces parameter space regions curve correct slope Finding We focus curve type H types F D circuit breaker example coordinate implementations frames convenient We transform curves type F D implementation result set algebraic constraints expressing Instead look individual regions identify difficult constraints ways program implement design intractable task simple The regions To guide search simple regions inspiration kinds designers commonly use achieve particular kind interaction For curve H geometry Fig 26 face pivot rotating face With inspiration goal cam geometry example common way implement geometry acts like cam offset follower design translating pass set constraints offset follower class solutions corresponding faces exist nonzero length Defining face L length rotating face trivially Our constraint 11 length translating obtain UJ 0 LO A11 A21 To ensure translating face pass pivot hallmark cam andoffsetfollower behavior define follower offset h subject constraint h 0 A3 We define h looks positive saxis left translating face To ensure rotor actually engage slider ensure rotor distance pivot face The longer distances label Y label s larger long reach slider To end construct end rotating constraint expressed Equation r s related length rotating face A7 distance r s2 L 2sL cosCJ5 For rotor long engage slider Y satisfy rh A4 A5 Ifs sufficiently large rotor vertical pointing upward 0 M 7r2 slider face able pass rotor face As result separate ranges angle rotor slider able engage range In case interaction right vertical left vertical geometry rotor slider disjoint cscurves kind valid implementation single curve To ensure curve H TF Stahovich rt al Artijicial lrtelligence 104 199X 211264 39 Fig A 1 The leading edge rotor shorter trailing edge Turning rotor counterclockwise slider right pushes disjointed constraint use simplicity interaction occur constrain length s 3 An overly conservative s h C46 A restrictive equally effective constraint s h w cos constraint ensures higher rotor face For historical conservative constraint rotor vertical 0 n2 reasons n2 This slider face program uses Defining rotation positive counterclockwise refer line labeled r Fig 26 leading edge rotor line labeled s trailing edge end slider face touches If leading edge shorter trailing edge cscurve desired slope Consider configuration shown Fig A 1 If middle rotor face rotor turns counterclockwise leading edge shorter trailing edge radius pivot contact point longer Because radius gets longer rotor push slider right In case cscurve locally slope like qcscurve B Fig 19 leading edge longer like qcscurve H Hence constrain trailing edge We express constraint trailing edge rotor face terms angle 4 4 n2 A7 Consider configuration tip rotor touching slider face shown Fig A2 If rotor face horizontal horizontal figure pair faces act stop slider face able slide freely rotor face rotor prevented rotating clockwise like qcscurve H Hence The corresponding qcscurve locally vertical diagonal configuration j We use disjointed solution know normal operation device range engagement Although assumes configurations explicitly constrain multiple ranges engagement like Fig 27 That implementation curve H uses geometry case necessary place additional constraints design engagement occurs normal operation device These additional constraints described implementation exhibits ensure ranges engagement In desired range 43 possible implementation device curve H 32 We assume 0 6 6 E 260 TE Siahovich et al Artificial Intelligence 104 IWi 211264 h Fig A2 When configuration rotor face horizontal constrain define c angle constraint rotor face horizontal configuration If rotor face vertical Fig A2 appropriate c n2 Our task express c terms parameters faces Fig A2 shows variables use derivation We start triangle efg shown figure Because h angles parameters intermediate considering triangle c complement angle cab Using law cosines obtain arccos L2 r2 s22Lr By inspection figure obtain h h arccoshr Combining previous expressions obtain desired constraint arccos L2 r2 s2Lr f arccoshr n2 A81 Our expression assumes require explicit constraint 0 4 n Eq A7 enforces upper bound lower bound n For qcscurve monotonic slider face This turn requires angle rotor greater n2 constraint tip rotor tangent slider face leading edge If label angle Z shown Fig A3 A9 lYE Stuhovich et al Artcial Intelligence 104 1998 211264 261 Fig A3 The rotor face tangent slider face The worst case rotor angle smallest occurs tip rotor touches lower end slider face shown Fig A3 If define complement angle slider face inspection figure I8 Because complement write TC3 For tip rotor touch slider face BS value 8 arcsinhr Combining previous expressions obtain final form constraint Q arcsinhr n2 AlO If slider face angle equal 0 end slider face touch rotor If 0 rotor touch slider face happen contact allowed outside surface To ensure rotor touch rotor face contact actually face contact contact end face enforce constraint fO Eq Al Eq A1 1 complete Fig 26 implements qcscurve H Now complete set constraints ensure library entry end point coordinates qcscurve One end point Fig A3 This end point upper left end point sufficient geometry derive expressions corresponds curve H Its coordinates configuration 81 arcsinhr A12 All 262 iYE Stuhovich rt al Artijcid lntellimce I04 IYW 21 l264 pair faces implement qcscurve B The rotating position measured positive counterclockwise angle 8 The translating Fig A4 The parameterization origin horizontally sides inside solids containing faces position measured positive right x Shading indicates face rotates face translates sides faces x1 r cosH1 A13 The second end point corresponds x2 XI configuration Fig A2 Its coordinates note 02 n arcsinhr x1 r cos A 14 A15 For example measure qcscurves By appropriate use coordinate left right implementation transformations use pair faces position curve F rotor angle positive curve B If flip geometry left right curve D Thus basic geometry constraints kinds diagonal curves case q1 rotation q2 q2 implement slider positive If flip geometry Fig A4 measuring counterclockwise implementation measure implementation implement translation By obvious coordinate implement kinds diagonal curves case qi translation rotation transformation use geometry slider position positive 3x The coordinate curve end points Eq A 12 affect constraints proper slope Eq A 1 sign changes transformations change expressions coordinates cs ensure curve monotonic TT Stahovich et ul Artijiciul lntelligencr 104 1998 211264 2h3 References l 1 RC Brost Analysis planning planar manipulation tasks Technical Report CMUCS91149 Carnegie Melon University Pittsburgh PA 199 I 2 ME Caine The design shape motion constraints Technical Report 1425 MIT AI Lab Cambridge MA September 1993 3 1 KW Chase AR Parkinson A survey research application tolerance analysis design mechanical assemblies Research Engineering Design 3 1991 2337 141 R Davis Diagnostic 5 J Kleer Causal teleological reasoning based structure behavior Artificial Intelligence 24 1984 347410 reasoning circuit recognition PhD thesis Massachusetts Institute Technology Cambridge MA September 1979 61 J Kleer JS Brown A qualitative physics based confluences Artificial Intelligence 24 1984 783 7 JR Dixon EC Libardi Jr SC Luby M Vaghul Expert systems mechanical design examples symbolic representations design geometries Engineering Computers 2 I 1987 l10 8 RJ Doyle Hypothesizing device mechanisms opening black box Technical Report 1047 MIT Al Lab Cambridge MA 1988 9 AC Erdman GN Sandor Mechanism Design Analysis Synthesis Vol I PrenticeHall Englewood Cliffs NJ 1983 1 IO B Falkenhainer KD Forbus Compositional modeling lindin g right model job Artificial Intelligence 51 1991 95143 1 l B Faltings Qualitative kinematics 121 B Faltings Qualitative models mechanisms Artificial Intelligence 44 1990 891 19 conceptual design case study Reasoning Diagrammatic Representations pp 6974 Papers I992 Spring Symposmm Technical Report SS9202 AAAI Press 1992 131 B Faltings A symbolic approach 141 B Faltings E Baechler J Primus Reasoning kinematic qualitative kinematics Artificial Intelligence 56 1992 139170 topology Proc IJCAIX9 Detroit Ml 1989 pp 13311336 151 B Faltings K Sun Computeraided creative mechanism design Proc IJCAI93 Chambery France 1993 pp 14511457 161 KD Forbus P Nielsen B Faltings Qualitative spatial reasoning clock project Technical Report 9 Northwestern University The Institute Learning Sciences Evanston 1171 KD Forbua Qualitative process theory Artificial Intelligence 24 1984 85168 I IX R Gupta MJ Jakiela Simulation shape synthesis kinematic pairs smallscale IL 199 I interference detection Research Engineering Design 6 1994 103123 IO EJ Haug ComputerAided Kinematics Dynamics Mechanical Systems Volume I Basic Methods Allyn Bacon Boston MA 1989 201 JK Hirschtick Geometric feature extraction production rules Masters thesis Massachusetts Institute rfTechnology Cambridge MA 1986 2 I J Hodges Naive mechanics computational model device use function design improvisation IEEE Expert 7 1 1992 1427 22 Y Iwasaki R Fikes M Vescovi 8 Chandrasekaran How things intended work capturing functional knowledge device design 1231 I Joskowicz Simplification pp 13371342 Proc IJCAI93 Chambery France 1993 pp 15 161522 abstraction kinematic behaviors Proc IJCAI89 Detroit MI 1989 1241 L Joskowicz S Addankt From kinematics shape approach Innovative design Proc AAAIXX St Paul MN 1988 pp 347352 1251 I Joskowicz E Sacks Computational 1261 1 Jojkowicz E Sacks Configuration Automation Conference 1994 kinematics Artificial Intelligence 51 1991 381416 space computation mechanism design Proc IEEE Robotics 1271 I Joskowica E Sacks V Srinivasan Kinematic tolerance analysis 3rd ACM Symposium Solid Modeling Applications 1995 1281 D Kamopp R Rosenberg System Dynamics A Unitied Approach 1291 S Kota SJ Chiou Conceptual design mechanisms based computational John Wiley New York 1975 synthesis simulation hinematic building blocks Research Engineering Design 4 1992 7587 264 TlT Stahovich et al Amid Intelligence 104 1998 211264 30 GA Kramer Solving geometric constraint 1311 BJ Kuipers Qualitative simulation Artificial 1321 T LozanoPerez C32 2 1983 Spatial planning systems Proc AAAI90 Boston MA 1990 pp 7088714 Intelligence 29 1986 2899388 space approach configuration IEEE Transactions Computers 33 TA Mashbum DC Anderson Automatically deriving behavior constraints performance variables mechanical design Research Engineering Design 6 1994 85102 34 NH Narayanan M Suwa H Motoda How things appear work predicting behaviors device diagrams Proc AAAI94 Seattle WA 1994 pp 1161l 167 35 PP Nayak L Joskowicz S Addanki Automated model selection contextdependent behaviors Proc AAAI92 San Jose CA 1992 pp 710716 36 PE Nikravesh ComputerAided Analysis Mechanical Systems PrenticeHall Englewood Cliffs NJ 1988 37 DR Prabhu DL Taylor Synthesis systems form specifications containing orientations Design Automation Vol I ComputerAided positions flow variables associated Computational Design 1989 pp 273279 38 D Rosen D Riley A Erdman A knowledge Mechanical Design 113 199 I 2052 12 Advances based dwell mechanism assistant designer Journal 39 E Sacks L Joskowicz Automated modeling kinematic simulation mechanisms ComputerAided Design 25 2 1993 106l 18 40 D Serrano DC Gossard Combining mathematical models geometric models CAE systems Proc 1986 ASME International Computers Engineering Conference Exhibition 1986 pp 277284 411 D Serrano Constraint management conceptual design PhD thesis Massachusetts Institute Technology Cambridge MA 1987 1421 H Shrobe Understanding 43 TF Stahovich SKETCHIT sketch interpretation linkages Proc AAAI93 Chambery France 1993 pp 62625 tool conceptual mechanical design Technical Report 1573 MIT AI Lab Cambridge MA March 1996 1441 TF Stahovich R Davis H Shrobe Turning sketches ASME Conference Design Theory Methodology working geometry Proc 7th International 1995 45 TF Stahovich R Davis H Shrobe Generating multiple new designs sketch Proc AAAI96 Portland OR 1996 pp 10221029 46 TF Stahovich R Davis H Shrobe Qualitative rigid body mechanics Proc AAAI97 Providence RI 1997 1471 TF Stahovich Computational tools conceptual design Masters thesis Massachusetts Institute Technology Cambridge MA 1990 4X RM Stallman GJ Sussman Forward computeraided 1976 circuit analysis Technical Report Memo 380 MIT AI Lab Cambridge MA September reasoning dependencydirected backtracking 49 RF Steidel Jr JM Henderson The Graphic Languages Engineering 50 D Subramanian CS E Wang Kinematic synthesis configuration John Wiley New York 1983 spaces Proc 7th International Workshop Qualitative Reasoning Physical Systems May 1993 pp 228239 5 I KT Ulrich Computation preparametric design Technical Report 1043 MIT AI Lab Cambridge MA 1988 52 RV Welch JR Dixon Guiding conceptual design behavioral reasoning Research Engineering Design 6 1994 1699188 1531 DS Weld J Kleer Eds Readings Qualitative Reasoning Physical Systems Morgan Kaufmann San Mateo CA 1990 _I BC Williams Qualitative analysis MOS circuits Artificial Intelligence 24 I3 1984 28 l346 55 J Wolter P Chandrasekaran A concept constraintbased representation functional geometric CADCAM Applications design knowledge ACM Press New York 199 I pp 4099418 Proc Symposium Solid Modeling Foundations