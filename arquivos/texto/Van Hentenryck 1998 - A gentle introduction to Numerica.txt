Artificial Intelligence 103 I 998 2099235 Artificial Intelligence A gentle introduction NUMERICA Pascal Van Hentenryck Brown lJniversity Box 1910 Providence RI 02912 USA Abstract NUMERICA modeling express problems possible textbooks scientific papers In addition combines correctness convergence completeness techniques language stating solving global optimization problems It makes notation close way problems stated algorithm NUMERICA intelligence provides guarantees constraintsolving numerical analysis artificial This paper gentle introduction NUMERICA It highlights global optimization methods highlevel way 0 1998 Elsevier Science BV All rights reserved essence constraintsolving It presents illustrates functionality NUMERIC A contrasting main difficulties traditional algorithm NUMERICA novel 1 Introduction Many science engineering applications require user solutions function includes problems electrical robot kinematics modeling applications circuits nuclear solutions chemical reactor design The field constraints real numbers optimize nonlinear constraints This processes design problems study methods systems nonlinear nonlinear subject chemical engineering equilibrium global optimization systems nonlinear constraints global optima optimization problems Nonlinear problems raise issues computation set polynomial constraints solution problem programming problems 20 variables On hand computing real numbers numerical problems finite nature computers lies NP Nonlinear solve raises NPhard In fact Canny 4 Renegar 36 shown hard methods designed PSPACE known problem standpoint On hand deciding problems Email pvhcsbrownedu OOO4370298 matter 0 1998 Elsevier Science BV All rights reserved PII SOOO4370298000538 210 F1 Vun Hrnrrniyk Arrijicial Intvlligence 103 1998 209235 NUMERICA 1391 modeling solve nonlinear problems written form close statements textbooks scientific papers In addition contrary tools NUMERICA provides guarantees results modulo implementation traditionally nonlinear programming errors language global optimization makes possible l Correctness NUMERICA produces wrong solution l Completeness Under reasonable assumptions NUMERICA guaranteed nonlinear equation systems global optima unconstrained isolate solutions constrained optimization problems l Finiteness NUMERICA guaranteed l Certainty NUMERICA prove converge existence solutions absence solutions These functionalities contrasted traditional numerical methods quasi local converge quickly Newton methods Traditional methods inherently close solution local optimum outside scope methods solutions global optima prove existence absence solutions Traditional methods fail converge hard problems The limitations local methods come inability obtain global information functions There nonlinear way collect global probing finitely points In contrast NUMERICA ability evaluate nonlinear functions intervals provides global value function point intervals The global nature information makes possible bound numerical errors automatically consequence nonlinear programming prune away entire regions search space As use intervals makes possible implement global search algorithms function information information relaxation techniques intelligence Of course computations numerical use intervals hardly new Moores thesis 1966 28 active research area 1215 algorithm NUMERICA constraintsolving obtain level NUMERICA discrete problems exactly lo Once integer programming apply natural 25271 originated 182023283237 What distinguishes techniques combination techniques effective pruning viewed mapping continuous problems opposite traditional nonlinear programming techniques consistency applied areas 40 successfully constraintsolving problems viewed discrete problems arc pathconsistency numerical analysis artificial problems At abstract local thousands robustness approach true smallscale highly nonlinear problems chemical electrical engineering traditional methods likely progress methods Local methods extremely effective tools apply probably way approach largescale nonlinear programming problems variables However NUMERICA needed nature application problem simplifies diverge unable requirement chemical engineering applications additional hard local methods simply problems Gehrke Marquardt locate solutions prove need functionalities functionalities aim replacing task This especially absence solutions 111 fact indicate NUMERICA algorithm involving increases I Van Hentenryck ArtiJcial Intelligence 103 I 998 209235 211 The follows Section 2 discusses rest paper programming organized nonlinear problems difficulties Section 3 short tour NUMERICA depicts variety problems contrasts level presentation main constraintsolving concludes NUMERICA 3839 traditional methods Section 4 novel high algorithm NUMERICA Section 5 research More information paper suggests directions nature practical functionality theoretical limitations including 2 The nature nonlinear programming This section discusses properties nonlinear systems limitations traditional methods 21 What possible Todays computers manipulate solution nonlinear problem real number represented finite space displayed screen finite time best hope general point close solution interval enclosing solution store finite information Since preferably guarantee proximity solution Computer methods solving nonlinear problems typically use floatingpoint real numbers Since finitely floatingpoint numbers approximate numbers methods bound numerical errors These errors probably small isolation fundamental considered instance Wilkinsons problem consists results Consider finding solutions equation implications 20 II il x px 0 204 solution Wilkinsons interval When p 223 numerical fundamental require users numerical With mind consider positive values x 1 10 satisfying 941 When p 0 equation obviously 11 solutions small issues software exercise great care interpreting results following combustion problem consists finding results application These numerical error assume implications p output numerical problem clearly equations computation indicates xXXXIO 10P5 X3Xs3105 xtX32X52XsX9Xto5105 x4 2x7 10P5 05140437 lo7 X5 x 01006932 1O6 X6 2x 212 I Van Hentenryck Artijicial Intelligence IO3 19 209235 07816278 01496236 lol5 x7 x2 4 lo x8 x1x3 06194411 1O7 x9 x1x2 02089296 lol4 xl0 xx Using 05 05 starting point default setting wellknown commercial obtain point b prints warning desired accuracy It obvious way produces point In conditions defaults set produces achieve machine precision case interpret highest numerical precision results meaningful commercial sufficient It interesting uniqueness solutions Schnabel existence mention outside scope algorithms For instance Dennis common belief proving excellent text 8 present functions fl x x4 12xX47x260x fx x4 12x 47x2 60x 24 f3x x4 12x3 47x 60x 241 state routine tell 5 real roots fx x 1 f3 x real roots routine It wonder1 generalpurpose The roots fl x x 034 x 2 0888 It unlikely existence uniquenessdoes capabilities expect algorithms In fact readily admit algorithm functions injinitely continuously differentiable algorithm Therefore ull user guaranteed u nonlinear problem answer An approximate No approximate solution problem solution allocated wish perverse solve nonlinear problems exist nonlinear defeat I algorithm applied problem problem solution uniqueure In general questions oj time correct This statement wonderful procedures limits computers NUMERICA fact exist general applies mainly local methods Such imposed finite nature 22 Local versus global optimum Traditional globally local optimum converge isolate local optima minimization function convergent methods applied problem starting points They unable illustrated global optima This limitation minimization 5 xi il cosi 1x P Van Hentenryck Artijicial Intelligence 103 1998 209235 213 1 123expk5klk g3Cx710 g5kxgle33ll_gjkg4kx2Olk4 1 xl23expvJm 2k 37103 410311g401k44 XX3 X2X40 Fig 1 The transistor modeling problem maximization function c5i il cosG 1X1 CScosi 1X2 il 1 minimization function fxl x defined 10sinnyl2 yn 12 Cyi 121 10Sinnyil2 n1 il local minima For instance local These functions local minima FZ 10 single global minimum method converge global minimum external knowledge problems 2 Also local method able prove global minimum function 10 It unlikely harder finding size problems solved globally Of course finding global optima search space explored limits NUMERICA offers possibility finding local optima sacrificing search preserving local optima local optima practice For reason completeness numerical correctness ability prove existence implicitly As consequence 23 Convergence limitations implemented theoretical In addition problems convergence An interesting example Ebers Moll 9 The problem nonlinear equations depicted Fig 1 variables xi values 0 lo constants given local methods suffer practical course context transistor modeling example One main problems solution 0485 0369 0752 1254 0869 0703 0982 1455 52095 100677 229274 202153 233037 101779 111461 191267 285132 1118467 1343884 2114823 Of course exists starting point converge global optimum 214 F Van Hententyck Artd Intelligence 103 1998 209235 Ratschek Rokne 35 summarize attempts local methods states tind solution problem 7 combined local damped NewtonRaphson In 1974 Cutteridge method eigenvalue conjugate gradient method secondorder gradientdescent determination methods applied squares problem Cutteridge emphasized sophisticated combination methods use approaches led positive result sufice mentioned steps constraints external convergence algorithms guaranteed important practical problem fails Another solution satisfy statement Globally convergent local minimum given solution For instance traditional quasiNewton method applied transistor variables modeling problem converges combustion negative values Solution produced problem negative components Morgan undesired convergences solution problem solution undesired included converge starting point fail produce 3 I mentions systems solution commercial typical chemical equilibrium The day electrochemistfriend came office problem He trying work batteryplate manufacturing process He set math model plating determine equations bath 10 unknowns His problem Newtons method kept converging nonphysical solutions This incident repeated guises times present times He ended 10 polynomial amounts metal compounds 24 Practicality The functionalities precludes guarantee computation rich collection nonlinear problems NUMERICA course come price The intractable nature nonlinear programming times interval methods Conventional wisdom claims interval methods slow practical use guarantees ease use come high price The performance NUMERICA indicates reasonable Moreover functionality NUMERICA avoids tedious work necessary starting points As consequence compensate solution linear time number variables traditional benchmark large larger 1 O lo NUMERICA takes essentially isolate zeros Broyden banded function numerical analysis initial range variable price pay needed tune local methods suitable frequently time reduce mention NUMERICAS ease use robustness longer running global methods useful In context actual time obtain In addition NUMERICA compares methods benchmarks This good performance interval analysis methods HansenSenguptas techniques The combination orthogonal frequently outperforms continuation comes novel combination operator constraint satisfaction techniques gives surprisingly good results I Van Hentenryck Artcial Intelligence 103 1998 200235 215 Input real p p Variable x 204941 Body solve prodi 1201 x p xA19 0 Fig2 The Wilkinsonproblemin NUMERICA problems requires research understanding strengths limitations formally Of course point classes problems interval methods interval evaluations lose precision For appropriate instance nonlinear effective solution interval methods aware Interval methods converge course applications compare efficiency local methods leastsquares problems amenable 3 Atourof NUMERICA We illustrate NUMERICA number applications highlight language functionality depicted The Wilkinson problem problem statement p type real variable x ranges statement prod makes possible p 0 NUMERICA returns solutions These exact solutions form Let start Wilkinsons problem The NUMERICA Fig 2 The statement declares input constant 2 0 4 9 4 I The body function Note aggregation operator statement close LaTeX description When exactly requests zeros Wilkinsons represented Solution 1 SAFE x 20 The approximate solution Solution 5 SAFE x 160 0356e14 Ol78e141 intervals NUMERICA returns NUMERICA proven exists solution illustrates indicates inside interval When keyword present simply means NUMERICA able obtain proof existence As consequence greater 1 marked SAFE contain solution When p 223 NUMERICA simply returns solution interval box dimension solutions The keyword SAFE problem enclosing 216 P Vun Hrntrwyck Artcial lnttdligencr 103 1998 209235 Pragma precision le12 Variable xarrayllOl IO ll Body solve x3 2x5 2x8 XL91 xlOl 5e5 x2 2 x6 x9 2x101 1e5 3 xL81 3e5 xl x4 2 x7 05140437e7 Ol006932e6 07816278e15 x5 x112 xL61 2 x22 XL71 412 le5 01496236e6 06194411e7 02089296e14 x81 xllx31 x9 xllx21 xlOl xllx212 Fig 3 The combustion problem NUMERICA The combustion problem Reconsider statement NUMERICA variables pragma specify desired accuracy NUMERICA positive solution problem combustion problem discussed earlier The shown Fig 3 The statement uses array returns unique Solution 1 SAFE xl 000000014709 x2 000000022619636102 x3 0000015128076338 x14 0000000000062 03151616090976e12 031239815e17 05348538119178e121 067358889e171 028151603e15 038648037e151 039268906099084274e12 051871986419385418e121 x5 00000004208884800 x6 0000001016251221 x73 0000004999968 x8 0000014871923661 x9 00000005371172945 xlO 0000003602091950 0670113679e16 0922409855e161 0301906781e15 0740640067315e12 060945464e15 0402067581e151 0803655470521e121 07225471e151 Ol42273089e16 0808352357e15 0563773625e161 0927440531e151 proves existence commercial 01 second Sun Spare 10 Solution b produced mentioned previously close contained output box Dennis Schnabels functions functions Let revisit Dennis Schnabels flX x4 1 2x3 47x 60x fx x4 12x347x260x24 f3x x4 12x3 47x2 60x 241 returns NUMERICA solution f2 shows absence solutions existence fl returns boxes proves existence solution times f3 The computation boxes enclosing solutions proves F Van Hentenryck Artificial Intelligence 103 1998 209235 211 examples negligible More precisely NUMERICA statement I I Variable x Ole81 Body solve xA4 12 x3 47 x2 60 x 24 0 produces following output boxes Solution SAFE x 08883057790717 1 04e13 06e131 solution 2 x 10 SAFEI Ole13 Ole131 This example methods illustrates functionalities NUMERICA compared traditional The Broyden banded numerical analysis traditional collections problems aspects NUMERICA The problem amounts function We consider Broyden Banded function This benchmark illustrate 191 interesting finding zeros n functions traditional benchmark fi Xl XXi253L121_CXklXklin kEJi Ji j 1 max 1 5 j 6 minn n sets share basic definition 1 j Note statement uses Fig 4 depicts NUMERICA statement contains interesting features First illustrates use generic sets instructions Set Ji idx j maxli5 minnil 1 j I obtain close similarity mathematical use generic constraints statement Second illustrates idx 0 xi 2 5 xil2 1 Sumk Ji xk 1 xk state equations Both features simplify performance interesting Also behavior NUMERICA shown Table 1 statement significantly Experimentally observed NUMERICA essentially encloses unique solution 218 I Vun Hentenryck Artijiciul Intelligence 103 I 998 209235 Input int n Number variables q Constant range idx ln set Ji idxl j maxli5 minnill 1 j 1 Variable x Body arrayidx lOe810e8 solve idx 0 xi 2 5 xi2 1 Sumk Jil xkl 1 xkl Fig 4 The Broyden banded function Table 1 Performance results Broydens function n Solving time ms Growth factor 5 IO 20 40 80 100 500 1600 4200 9800 160 30700 500 320 265 233 313 large range This isolated linear time number variables extremely case benchmarks exhibit similar behavior Understanding isolating interesting open theoretical problem class problems statement splitting level constraint The transistor modeling problem transistor problem The NUMERICA pragmas specifies strategy section NUMERICA box O lOI proves 40 minutes Traditional commercial The previous workstations shown propagation explained As example equation solving reconsider Statement 5 Note search problem 35 required 14 months network Sunl tools unable locate solution transistor modeling problem existence absence solutions finds unique solution interval solution 2 largest interval Unconstrained minimization unconstrained minimization use functions real constants pi On optimization problems NUMERICA Statement 6 depicts NUMERICA statement problems discussed previously The statement abbreviations complex expressions trigonometric illustrates functions guaranteed 3 There cubic step end search prove existence solution P Van Hentenryck Artificial Intelligence 103 1998 209235 219 Pragma variablechoice consistency 2 If constant 151 range range real g arrayxryrl xr yr 141 1 0485 0752 0869 0982 1 0369 1254 0703 1455 1 52095 100677 229274 202153 233037 285132 1118467 1343884 2114823 II 101779 111461 191267 I I Variable x arrayl91 y arraylO OOlOOl I100010001 Body solve ylO1 1 XI11 xL21 Yll YLOI xL31 Y21 YFOI xL41 k yrl Yll expxl51 glkl gt3klx7lle3g5klx8lle3 gSkl g4klx21 0 1 k yrl YC21 expx6lglklg2klg3klx7lle3 g4klx9lle3 1 gSklxll g4kl 0 xllx31 x2lx41 0 Fig 5 The transistor modeling problem NUMERICA bound isolates global optima Table 2 gives performance As seen NUMERICA essentially quadratic problem results problem number variables Constrained optimization constrained optimization problem standard collection benchmarks isolate global optima constrained optimization problems section showing statement solving NUMERICA Statement 7 fact depicts problem 95 171 Once NUMERICA guaranteed We conclude 4 The essence NUMERICA The purpose section present main ideas NUMERICAS algorithm implementation describes The main algorithm Throughout The presentation novel aims crystallizing main intuitions It starts review main concepts interval analysis techniques assumptions section equation solving considered cornerstone solved main algorithm pruning remove simplifying reconsidered problem 220 F Van Hentenryck Articiul Intelligence 103 1998 209235 Input int n Number variables Constant range idx lnl Variable x Function arrayidxl lOlOl yi idx 1 025 xil1 Body minimize 10 sinpiyl2 Sumi ln11 yn 12 yi 12 1 10 sinpiyil2 Fig 6 Unconstrained optimization Levy 8 Table 2 Performance results Levy 8 n Solving time s Growth factor 5 10 20 40 80 040 120 430 2710 13660 300 358 630 504 Indeed optimality conditions optimization problems expressed equations optimization problems KuhnTucker conditions 41 Preliminaries Here review basic concepts interval analysis interval arithmetic information 341 Our definitions slightly nonstandard needed paper More places I 1415282932 411 Interval arithmetic We consider RBco R U set real numbers extended infinity symbols extension relation set We consider finite subset numbers F Iwo3 containing implementation 00 0 In practice floatingpoint F corresponds Definition 1 Interval An interval I U 1 u E _F set real numbers r E R Il r 6 u The set intervals denoted 1 ordered set inclusion 4 4 These intervals usually called floatingpoint intervals literature P Van HenterqckArticialIntelligence 1031998 209235 221 Constant real Bl 497 real B2 188 real B3 2908 real B4 7802 Variable x arrayl6 Body minimize 43 xl 318 x2 633 xL31 158 x141 685 x5 47 XL61 subject 161 xi 0 xl 031 x2 0046 x3 c 0068 x4 0042 x5 0028 x6 00134 171 xl 382 x2 2042 x3 2123 xc41 6234 xL51 14955 x6 169 xll xi31 3580 x31 xl51 3810 x4 x5 18500 x41 xL61 24300 x151 xL61 Bl 179 xl 368 x12 1139 x3 1697 x4 3378 x5 13852 x6 139 x11 xL31 2450 x141 x151 16600 x4 x6 17200 x5 x6 B2 273 x2 70 x4 819 x5 26000 x4 x5 B3 1599 xl 311 x2 587 x4 391 x5 2198 x6 14000 xll x161 B4 Fig 7 A constrained optimization problem Numerica Definition 2 Enclosure Let S subset R The enclosure S denoted 3 OS smallest I S C I We write F instead T r E IR interval 1 respectively signature Z 1 letters F G possibly We denote real numbers letters r v b c d Fnumbers letters 1 m u functions subscripted We use strictly rounding greater largest Fnumber r We use I denote box I F denote tuple 1 rn Q set rational numbers N intervals letter I real functions letters functions I greater use rl respectively It set natural numbers We use following notations smallest Fnumber denote smaller rj respectively respectively 1 To capture outward return smallest real number smaller equal largest Fnumber f g interval respectively respectively kftU ul 1 rightl u u centera b la b2 222 P Van Hententyck Artijcial Intelligence 103 IY98 20235 Definition 3 Canonical Z I 1 floatingpoint number interval A canonical interval interval form Z I The fundamental concept interval arithmetic notion interval extension Definition 4 Set extensions Consider set S 2 IP function extension f defined f Rn IR The set fS fF I r E s Definition 5 Interval extension f IR R I extensions An Vrc ff Ff interval function F T Z interval Example 6 The interval function defined lll2b21laa2blb2l interval extension addition real numbers In paper restrict attention monotonic fundamental properties satisfy requirements naturally traditional interval extensions interval extensions primitive operations Definition 7 Monotonic tonic I interval extensions An interval function F 1 Z mono _ VII 12 C lo Ii 5 Z2 FZI C FZ2 3 It important stress real function extended ways For instance interval function precise interval extension addition returns smallest possible accurate interval extensions interval extension defined In addition overload real symbols use interval extensions real results function returning fixed monotonic In following assume primitive operators interval containing instance 412 Constraint representations It known different representations real function produce As numbers way constraints written impact behavior paper considered floatingpoint results evaluated different consequence algorithm For reason constraint function expression written functions remaining arbitrarily constraints respectively sections assume x Similar conventions representations language real variables large set XI constraints Interval variables taken finite arbitrarily symbol In addition abuse notation denoting In taken finite apply interval functions large set X 1 1 X constraints I Van Hentenryck Artijicial Intelligence 103 1998 209235 223 32 Problem description The problem considered section finding solutions equations s I oflXl 1 ofnxl I Of course box T Zp solutions exactly interval methods aim returning solutions Preferably box safe meaning purposes section problem assuming fi canonical 5 boxes It In I 0 satisfying contains solution For following interval extension fi 1 6 6 n interval methods viewed solving small boxes containing monotonic generally impossible OEFlZIZ s 1 OEFnZlZn This course simplification tensions However restricting attention intuition underlying novel pruning methods Section 47 reconsiders interval methods generally use interval ex problem benefits crystallizing simplification Notation Let S constraints form s I OE FlXIXn oEFnXlXn andletfbeaboxZt interval constraints S symbols Z We denote Si SZt In fact r satisfies 0 E Fl It znAAOEFznz Note use S denote systems constraints S denote systems interval constraints 43 The generic branchandprune algorithm The problem description highlights finitely floatingpoint finite nature problem intervals Most interval methods best viewed 5 In practice interested boxes certain width want stop soon safe box obtained It easy generalize results requirements 224 F Van Hententyck Artificial Intelligence 103 1998 209235 function Search S 10 begin PruneS 7 Emptyf return fl Canonical I return f I Splitf return SearchSfj U SearchSi end Fig 8 The branchandpnme algorithm global search algorithms schema underlying iterating algorithms main steps pruning branching The basic Fig 8 schema branchandprune depicted The function Search receives interval constraints S initial box fu set canonical boxes I I 0 satisfying Sl The function Search initial box This pruning step main topic problem If box I returns applies pruning step reduces section If resulting box ris solution canonical returned result Otherwise subboxes t explored recursively algorithm box split dimension A specific interval algorithm obtained specifying techniques Our algorithms use strategy splitting strategy consists splitting intervals strategy 6 The main novelty pruning operators distinct algorithms These define roundrobin techniques produce pruning associated algorithms Pruneu algorithms NUMERICA variables lies pruning Prune2 Prunet 44 BoxOconsistency It traditional branchandprune algorithms easier problem use relaxation problem follows solutions hand If solution weak simple relaxation original problem BoxOconsistency interval systems Given problem finding canonical boxes bo_x I satisfying interval constraints S boxOconsistency consists testing SZ If SZ original problem definition hold obviously solutions interval extensions The pruning operator associated boxOconsistency defined follows PruneuS f VI S7 r 6 This default overwritten pragmas instance transistor modeling statement specifies variable largest interval split f Van HententykArtcial Intelligence 103 1998 209235 22s BoxOconsistency stated existence question fact viewed form projection The original problem 3x1 c II 3x EZSXX boxOconsistency obtain test approximates replacing interval variable interval reduces testing constraint S independently 45 Box 1 consistency This section presents discussion pruning operator algorithm specifies pruning operator presents It starts simple informal implementation 7 451 Informal presentation The fundamental precisely stronger pruning existence problem idea underlying box 1consistency 2 project variables replace variables intervals This produces course higher cost The original boxOconsistency 3X c It 3x E z SXl X approximated 3X c II SX1 12 In A 3x2 c z2 SZ1 x2 In A 3x In S II In_1 X relaxation This independent In addition condition form tested relatively easily Notice conditions 3x1 2 I SXlZ2 In tested considering canonical intervals I It testing SZ 12 I Our implementation method tries effective adaptations interval Newton Separating specification advantage distinguishing implementation There ways implement computed goal focus concepts technical details concepts described compute 38 section 226 f Van Hententyck Artificial Intelligence 103 1998 209235 The second fundamental associated variables Consider idea underlying box Iconsistency relaxation reduce intervals 3x1 c II SX1 I_ f let 1i leftmost interval It satisfying SIl 12 1 1 I rightmost interval It satisfying SI 12 InI It clear X 1 range interval I I kftI rightZ interval left right I violates conditions relaxation The interval associated Xt reduced I This reduction applied variables reduction The resulting box said box Iconsistent detect solution variables smaller Note variable considered reduction process takes place In course process possible original problem exists intervals associated times 452 The pruning operator We formalize informal discussion pruning operator associated box 1consistency Recall definitions assume S defined box 1consistency expresses set variables Xt X The main concept narrowed reduction process described previous subsection present informally Definition 8 Box 1consistency Let S interval constraints Crt I let li leftZi Ui rightZi I respect 1 6 n S boxlconsistent let Ibe box SZt Zlli1IiI In A SIl Iil Ui Ui Zil In li ui SZ1 Iil li li lil In li ui S boxconsistent I boxlconsistent I respect 1 n The pruning operator associated box 1consistency initial interval box lconsistent informally simply returns largest box largest box I Van Hentenryk Artificial Intelligence IO3 1998 209235 227 function Prune begin S I repeat I I n I mrrowlSfi return Ji I end function Narrowj S begin II I Iin I I I 1 I C C kl return 69 canonical Sf __ _I I I 1 If 1 end return minIc Il rnaxltC rightl 1 Fig 9 Implementing boxlconsistency interval initial monotonicity narrowed This box exists interval extensions unique Of course Definition 9 Box 1consistency pruning Let S interval constraints let I box The pruning operator associated box 1 consistency defined PrunelSi I T largest box r S box Iconsistent 453 A simple implementation The pruning operator computed purpose 38 efficient ways Fig 9 presents simple iterative algorithm simple fixpoint algorithm I I The body loop applies narrowing operation variables function produces newbox intersection of11 the_se narrowings The narrowing Narrow1 S I returns respect terminates pruning obtained largest box I I S box 1consistent implementation The algorithm 46 Box2consistency Box consistency shown 38 For difficult applications applications problem chemical engineering obtained stronger Box2consistency consistency notions presented applications local consistency fact approximation 24 effective solving variety nonlinear transistor modeling 1 l better performance condition path consistency box2consistency 27 related 228 P Van Hententyk Artcial Intelligence 103 1998 209235 461 Informal presentation Box2consistency generalizes box Iconsistency projecting variables The original existence problem 3x1 s II 3x c I sxJ X approximated 3x1 5 Zl x2 E 12 SX x213 In A 3x1 czlX3Cz3SX1z2X314 rnA 3X2Cz2JX3Cz3Sz1X2X314 Inr 3Xl EI1XISzlzn2XnlXn Once possible The conditions independent condition form test relaxation easily conceptual standpoint tested considering pairs canonical intervals II 12 Xt X2 As case box Iconsistency box2consistency makes use relaxation prune intervals associated variable Consider condition 3x1 EzIX2CzSXIX2z3zn canonical interval I 2 It If box f s I 12 I S box Iconsistent It pruning available fi obviously x q Ii It possible narrow bounds rule process iterated variables pruning 462 The pruning operator The notion box2consistency defined precisely consistent terms interval constraints box terms boxlconsistency boxl A 2ystem Definition 10 _Boxlsatisjability satisfiable IO denoted BoxSat S IO exists box I C lo S box 1consistent boxl consai interval I S Informally speaking box2consistency reduced pruning says bounds variable box rule described satisfiable implying Definition 11 Box2consistency box II I Ii lj uj 1 S box2consistent Let S interval constraints I I respect P Van Hentenryck Artificial Intelligence 103 1998 209235 229 BoxSat S I1 Iil li I lil 9 In A BOXSUtl S It Zip Ui Ui Zi Iti li ui BoxSutl S 7 The S box2consistent 1 6i n r box2consistent I respect It shown box2consistency implies box 1consistency Proposition consistent I S box Iconsistent I l_2 Let S monosmic interval constraints If S box2 Proof Assume simplicity similar Since S box2consistent respect 1 n Thus I Zr I Ii li ui li Ui The proof I f S box2consistent BotlSilili explicitly 3I 5 Zl 3 3 Ii13 li lttlt lil In S box 1consistent It follows 0 E Fif lilz monotonicity Fi 0 E Fi II Ii1 li 13 Ii1 9 t 1 The proof OE FiZl t Ii1 1 ui Uilt lil In similar The result follows definition box Iconsistency q The pruning operator associated box2consistency simply returns largest box initial interval box2consistent Decnition 13 Box2consistencypruning let I box The pruning operator associated box2consistency Let S interval constraints defined PrunezSi I largest box r S box2consistent 230 P Van Henvyck Artijicial lnrelligence IO IY9H 209235 function Prune2 begin S 7 repeat I f NarrowSi 1 lin I 1 return I end S 11 In 1 function Narrow2 begin C C M return M Ic 2 li fc canonical EmptyPrunel S II li_1 ICIil I end return minrcc leftZ max rightl Fig IO Implementing box2consistency 463 A simple implementation Once implementation pruning operator computed iterative algorithm close actual ways Fig 10 presents simple simple fixpoint algorithm terminates pruning obtained The body loop applies narrowing operation variables produces function new box Narrow2 respect The pruning operator box 1consistency narrowing operator Note easy define level boxconsistency point boxk Iconsistency generic way largest box I S box2consistent compute narrowings The narrowing define boxkconsistency intersection The algorithm returns S 464 Related work earlier work constraint satisfaction It useful relate pruning operators approximations problems community projections consistency weaker box lconsistency 2527 They adapted extensively techniques solve discrete continuous problems 333 CLPBNR like BNRPROLOG decompose constraints Projections artificial intelligence combinatorial 624 inside systems BNRPROLOG systems The techniques systems CLPBNR ternary constraints distinct variables applying They scale difficult problems Boxlconsistency 2 It related idea splitting process The consistency notions 24 weaker effective form boxkconsistency distinct variables constraints ternary constraints resulting 18 uses similar form box 1 consistency obtained decomposing form boxkconsistency techniques presented applying introduced constraints P Van HentenryckArtijcial Intelligence 103 1998 209235 231 47 The brunchandprune algorithm revisited We reconsider assumptions algorithm uses interval extensions interval extension particular natural mean value interval extension reviews extensions reconsiders interval extension distinct interval extensions produce different prunings Section 42 As mentioned natural section interval extension mean value In generally better far solution precise close solution This section overall branchandprune algorithm 471 The natural interval extension The simplest interval extension function natural interval extension Informally consists speaking real variable interval variable real operation fixed interval extension In following replacing number smallest fis natural extension f real function interval enclosing Example 14 Natural xi x x3 interval function Xi X2 X3 interval extension The natural interval extension function The advantage extension users choose constraint problem hand It useful constraints generalize preserves constraints written particularly interval extension representations natural appropriate Definition 15 Natural interval extension Let S constraints The natural extension S denoted set interval constraints s Ofnxt I Oflxln I OXXn 0XX X s The following result easy prove induction Proposition 16 The natural interval extension function constraint qf constraints monotonic 472 The mean value interval extension The second point This extension introduced Moore 28 studied authors important properties interval extension example centered based Taylor expansion interval extensions forms 232 I Van HentenryckArtficial Intelligence 103 1998 209235 function interval extension function The mean value partial variables derivatives Given assumptions apply Taylor expansion function center box bound rest series box function continuous key idea extension intervals It assumes parametrized Definition 17 Mean value interval extension Let I box II In rni f I denoted r f I center Zi The mean value interval extension function interval function Let S constraints s I oflt1z ofntx1xn The mean value interval extension S denoted ts constraints interval I owlAxlm rS I otfnAxl m Note mean value interval extensions defined terms natural interval extensions The proof following proposition 5 Proposition 18 The mean value interval extension function extension monotonic interval related closely It interesting note box consistency Krawczyks operator constraints improvement operators effective interval Jacobian diagonally S For purpose section dominant simply assume operator condS Z use notation rS I denote tcondS conditioning 4 I I See 2021 extensive coverage conditioners 23 Hansen Smith argue 161 suggest conditioning mean value interval extension 15 HansenSengupta operator 473 The branchandprune We position algorithm reconsider branchandprune given Fig 11 differs ways algorithm presented hand algorithm receives input constraints algorithm The new version Section 43 On instead J Van Hentenryck Artificial Intelligence 103 1998 209235 233 function Search S begin r PruneTUsSQIO Emptyj return 0 Canonical return f Splitl fl return SearchSff U SearchS end Fig 11 The branchandprune algorithm revisited interval constraints On hand operation Prune constraints interval extensions original consisting natural interval extension receives interval conditioned mean value 474 Existence proof We algorithm proves existence solution box Let fl 0fObeasystemofequationsovervariablesxxletZZZbe box define intervals I 1 6 6 n follows rni center Zi If ZCZi lin exists zero Z IL A proof result 30 5 Conclusion challenges opportunities language NUMERICA modeling This paper gave gentle introduction solving NUMERICA illustrated algorithm global optimization problems The functionalities contrasted traditional methods The essence constraintsolving NUMERICA presented veryhigh exhaustive A particularly level There possible ways improve global methods nonlinear programming interesting mention research avenue studied F Benhamou D Kapur instance symbolic numerical methods New pruning problem Similarly satisfaction intervals Finally constraint development NUMERICA tiny fraction existing NUMERICA It exciting years combination techniques global view improve pruning far solution information force exploited coming field likely evolve substantially study ways collecting global techniques driving interesting paramount importance research trying 234 t Van Hentenryk Artd Intelligencr I03 1998 209235 Acknowledgement NUMERICA developed jointly Laurent Michel Yves Deville NUMERICA based previous work Newton FrCdCric Benhamou Deepak Kapur David McAllester Thanks invaluable contributions This work supported NSF National Young Investigator Award References I I I G Alefeld J Herzberger 121 F Benhamou D McAllester P Van Hentenryck CLPintervals Introduction Interval Computations Academic Press New York 1983 revisited Proc International Sympo sium Logic Programming ILPS94 Ithaca NY November 1994 pp 1244138 131 E Benhamou W Older Applying 32 1 1997 Logic Programming interval arithmetic l24 real integer Boolean constraints Journal 141 J Canny Some algebraic geometric computations PSPACE Proc 20th ACM Symposium Theory Computing 1988 pp 460467 S 0 Caprani K Madsen Mean value forms interval analysis Computing 25 1980 147154 6 JG Cleary Logical arithmetic Future Generation Computing Systems 2 2 1987 125149 171 OPD Cutteridge Powerful 2part program solution nonlinear simultaneous equations Electronics Letters 10 1971 S JE Dennis RB Schnabel Numerical Methods Unconstrained Optimization Nonlinear Equations Prentice Hall Englewood Cliffs NJ 1983 9 JJ Ebers JL Mall Largescale behaviour junction Integer Programming transistors John Wiley New York 1972 IEE Proc 42 1954 17611772 IO RS Garfinkel GL Nemhauser 1 I I V Gehrke W Marquardt Direct computation singular points chemical engineering models International Conference Interval Methods Computer Aided Proofs Science interval methods Engineering Wtirzburg Germany 1996 121 R Hammer M Hocks M Kulisch D Ratz Numerical Toolbox Verified Computing IBasic Numerical Problems Theory Algorithms PASCALXSC Programs Springer Heidelberg 1993 131 E Hansen Global Optimization Using Interval Analysis Marcel Dekker New York 1992 141 ER Hansen RI Greenberg An interval Newton method Appl Math Comput 12 1983 8998 LlS ER Hansen S Sengupta Bounding solutions systems equations interval analysis BIT 21 1981 2032 1 I 1161 ER Hansen RR Smith Interval arithmetic matrix computation II SIAM Journal Numerical Analysis 4 1967 19 171 W Hock K Schittkowski Test examples nonlinear programming codes Lecture Notes Economics Mathematical Systems Springer 1981 1181 H Hong V Stahl Safe starting regions fixed points tightening Computing 53 34 19J J More B Garbow K Hillstrom Testing unconstrained optimization software ACM Transactions 1994 323335 Mathematical Software 7 I 198 I 174 I 20 RB Kearfott Preconditioners interval GaussSeidel method SIAM Journal Numerical Analysis 27 1990 804822 21 RB Kearfott A review preconditioners interval GaussSeidel method Interval Computations I 1 1991 5985 22 RB Kearfott A review techniques verified solution constrained global optimization problems appear 23 R Krawczyk Newtonalgorithmen zur Bestimmung von Nullstellen mit Fehlerschranken Computing 4 1969 187201 1241 0 Lhomme Consistency numerical techniques Joint Conference Artificial Intelligence constraint IJCAI93 Chambery France August 1993 satisfaction problems Proc 1993 International 251 AK Mackworth Consistency networks relations Artificial Intelligence 8 I I 977 99l 18 I Van Hentenryck Artificial Intelligence 103 1998 209235 235 1261 AK Mackworth EC Freuder The complexity polynomial network consistency algorithms constraint satisfaction problems Artificial Intelligence 25 1985 6574 27 U Montanari Networks constraints Information Science 7 2 1974 95132 fundamental properties applications picture processing 28 RF Moore Interval Analysis PrenticeHall Englewood Cliffs NJ 1966 29 RE Moore Methods Applications Interval Analysis SIAM Philadelphia PA 1979 30 RE Moore ST Jones Safe starting regions iterative methods SIAM Journal Numerical Analysis 141977 10511065 31 AP Morgan Solving Polynomial Systems Using Continuation Scientific Engineering Problems PrenticeHall Englewood Cliffs NJ 1987 1321 A Neumaier Interval Methods Systems Equations PHI Series Computer Science Cambridge University Press Cambridge 1990 33 W Older A Vellino Constraint arithmetic real intervals Constraint Logic Programming Selected Research MIT Press Cambridge MA 1993 34 H Ratschek J Rokne New Computer Methods Global Optimization Ellis Horwood Limited Chichester 1988 1351 H Ratschek J Rokne Experiments interval analysis solving circuit design problem Journal Global Optimization 3 1993 50 l5 18 36 J Renegar A faster PSPACE algorithm existential theory reals Proc 29th IEEE Symp Foundations Computer Science 1988 pp 291295 1371 SM Rump Verification methods dense sparse systems equations J Herzberger Ed Topics Validated Computations Elsevier Amsterdam 1988 pp 2 1723 1 3X 1 Van Hentenryck D McAllister D Kapur Solving polynomial systems branch prune approach SIAM Journal Numerical Analysis 34 2 1997 797827 39 P Van Hentenryck L Michel Y Deville Numerica Modeling Language Global Optimization MIT Press Cambridge MA 1997 1401 P Van Hentenryck V Saraswat Strategic directions constraint programming ACM Computing Surveys 28 4 I 996