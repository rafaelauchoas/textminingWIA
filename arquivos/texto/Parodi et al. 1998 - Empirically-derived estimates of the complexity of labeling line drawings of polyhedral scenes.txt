Artificial Intelligence 105 1998 4775 Artificial Intelligence Empiricallyderived estimates complexity labeling line drawings polyhedral scenes P Parodi R Lancewicki A Vijh JK Tsotsos University Toronto Department Computer Science 6 Kings College Road Room 283 Toronto Ontario Canada MS 3H5 Received 10 September 1996 received revised form 16 December 1997 Abstract Several results obtained past complexity understanding line drawings scenes Kirousis Papadimitriou 1988 shown problem labeling line polyhedral drawings trihedral scenes NPcomplete The human brain grasp glance 3D structure associated line drawing A possible explanation discrepancy offered worstcase complexity reflect real Kirousis Papadimitriou difficulty labeling line drawings far average typical cases However statistical analysis carried test conjecture The core paper algorithm generation random instances polyhedral scenes Random instances line drawings obtained perspective projections scenes input standard labeling algorithms derive experimental estimates complexity algorithms The results indicate mediancase complexity linear number junctions This substantiates instances line drawings easy label help explain ease brain able solve problem 0 1998 Elsevier Science BV All rights reserved conjecture typical Keywords Line drawings Computational complexity Random polyhedral scenes 1 Introduction The problem understanding threedimensional structure object twodimensional concise vision artificial attempts tackle problem description line drawing intrigued intelligence computational early seventies standpoint independently researchers Corresponding author Email parodisissait 0004370298 PII SOOO437029800077O matter 0 1998 Elsevier Science BV All rights reserved 48 I Parodi et al Artial Intelligence 105 1998 4775 represent line drawing forward Huffman condition arrangement polyhedral objects labelability consistent assignment segments line drawing label convexity concavity occlusion The work Huffman Clowes extended directions sufticient condition given labeled line drawing instance Linear Programming lo Clowes 4 They showed important necessary perspective planar projection actual 3D properties 30321 necessary realizability line drawing Sugihara showed 11162934 work Sugihara problem translated realizability describing t algorithm efficient line drawings qualitatively 3D structure scene single More recently efforts concentrated complexity simple case trihedral solid scenes This unexpected issues As brain image efficient reconstructing texture color shading led conclude labeling interprets polynomialtime 131 proved unlikely segments Kirousis Papadimitriou labeling problem realizability problem case showing result Afcomplete order special cases labeling problem stimulated research solvable In paper 131 Kirousis Papadimitriou proved polynomially labeling problem polynomial line drawings Legoland scenes scenes objects 3D edges possible orthogonal 23 location vanishing directions This result extended labeling problem points line drawing trihedral known brain exploit scene line drawing geometrical break It shown 21 information NPcompleteness drastically reduces number legal labelings associated line drawing line drawing Origami scenes information order 3D reconstruction time These results suggests vanishing points sufficient polynomial solid scene complexity regularities labeling solvable discrepancy information NPcompleteness brain uses geometric Thus possible explanation result natural scenes Another possible explanation offered Kirousis Papadimitriou distribution natural scenes averagecase set line drawings extracted real scenes polynomial unlike complexity exists For related visual complexity general visual search visual unbounded 33 proved problem search linear image size target guide matching process The claim brain optimize visual processing known appearance objects set wellknown objects visual processing line drawings A possibility NPcompleteness efficient As known problems instances problem elusive careful characteristic parameters Furthermore heuristics presentedsuch relaxation procedure devised Waltz 34which search methods allegedly provide efficient way deal line drawing SAT 1925 CSP 3935 hard tuning conjunction tree The objective paper provide method line drawings useful distribution complexity understanding generate shed light questions random labeling instances related scenes average images polyhedral I Parodi et al Artcial Intelligence 105 1998 4775 49 techniques treesearch More generally line drawings relaxation performing satisfaction complexity labeling How gain techniques achieve kind available techniques competitive performances general notion Is true case meancase mediancase preprocessing local consistency computational brain And performances assessed precisely images natural scenes perceived glance humans scenes display random character organized line drawings random labeling problem Section 3 addresses scenes line A method drawings obtained projecting image plane These line drawings Section 4 estimate complexity treesearch methods heuristics labeling Section 5 draws conclusions previous works line drawing analysis problem generating instances polyhedral scenes arbitrary line drawings assess efficiency relaxation follows Section 2 provides general work discusses relation paper random introduction generate The paper devised random 2 The labeling problem The mathematical results interpretation line drawings date lo Clowes 4 independently important realizability line drawing 2D projection introduced lubelability works Huffman necessary condition polyhedral Labeling scene line drawing means assigning properties corresponding projection visible convex edge means projection visible concave edge means projection convex edge face right arrow visible 3D edge The label means segment describing segment label example Huffman Clowes focused case trihedral scenes exactly 3 faces meeting shapes Y E L T possible different labels allowed junctions form socalled junction dictionary vertex junctions combinations projection 3D vertices Fig 1 B line drawing Fig legal labelings realizable lA They A line drawing said labelable iff label assigned segment junction labeled according dictionary past labeling Several methods proposed man lo Clowes 4 proposed reduction algorithm reported good average running segments The algorithm achieves local consistency junctions legal labelings junction compatible Repeat procedure progress To label line drawing achieve global consistency tree searching depthfirst backtracking line drawing Huff SAT Waltz 34 devised filtering number time roughly rule labeling neighbor achieve local consistency way given junction linear 50 t Parodi et al Artijicial Intelligence IO5 1998 4775 A Fig 1 A An example trihedral scene B The HuffmanClowes vertices catalogue legal labelings trihedral The work line drawings stimulated CSP Satisfaction Problem analysis general problem Mackworth Freuder 15 Constraint retrospective set variables X1 X assume finite set values set constraints kind value variable Xi compatible value b variable Xj The problem variable complete Labeling problem called framework arc consistency set assignments satisfies constraints This problem shown NP special case CSP Waltz procedure simplify algorithm Waltz takes The reason algorithm performed linear average running time arc time number segments linear 14 case end relaxation procedure labeled trihedral world worst consistency Mackworth segments uniquely cracks shadows studied Waltz Even approach case exponential labeling The CSP approach standard labeling line drawings polyhedral applied Malik 161 Although meaningful constraints efficient sequential parallel algorithms trihedral world In paper use basic piecewise cases constraints approach general worstcase exponential kind allows unique propagation line drawings smooth curved It line objects rules Kirousis 12 introduced Huffman Clowes slight extension realistic makes problem trivial case random line drawings l Parodi et al Artcial Intelligence 105 1998 4775 interpretation Tjunction Fig 2 A The natural vertex polyhedron This interpretation object ASTjunction incident segments This object interpretation includes junctions degree 2 3 C The dictionary legal labelings Both A B labeled according image occlusion actual table Fig 1 B B An trihedral world tribedral scenes incident segments cljunction allowed HuffmarClowes HuffmanClowes catalogue extended It called extended trihedral world include objects solid ii opaque iii planes meet vertex To definition Huffman Clowes world adds planar faces meet vertex This unduly eliminates common objects like depicted Fig 2A depicted Fig 2B The Tjunction Fig 2A projection 3D vertex different planes different planar faces parallel meet The complete dictionary 6degree 5degree junctions junction world given Fig 2C noticed l 11 Also notice AST Kanade Since line drawing extended trihedral scene defined labelable iff possible assign label segment junctions Fig 2C maybe useful point NPcompleteness Papadimitriou 131 applies case labeled according result Kirousis Proposition 1 It NPcomplete determine line drawing labelable according extended HufmanClowes table Fig 2C Proof First notice BTW holds NPcompleteness set possible proof 131 basic trihedral world labelings Tjunction extended 52 P Parodi et al Artial Intelligence 105 1998 4775 extended proof use fact headsegments include labelings permitted components Tjunction labeled arrow leaving MTW modified scheme Secondly notice MTW special case ETW fourdegree junctions sixdegree junctions NPcomplete restriction kind reduction trihedral world ETW This foot T left Let appear Therefore MTW NPcomplete ETW 7 detailed explanation trihedral world problem labeling line drawing according example q 3 Line drawings random instances scenes explore averagecase complexity From theoretical worstcase complexity labeling In previous section discussed line structure labeling problem drawings We going extremely studying standpoint difficult problem It arguably feasible tackle experimentally large samples instances labeling problem performing statistical analysis samples extract useful statistics mean median estimated errors quantities function size line drawing In order need method generate random producing instances line drawings special case planar graphs Random line drawings drawings scenes basic trihedral world Huffman Clowes viewed embeddings nodes incident segments There exist methods generate planar graphs arcs straight random graphs according In case line line segments uniform distribution However method far exhibited probability result special case planar graphs The harder problem generating drawn plane means straight lines scope paper achieves labeling problem arcs graph certain distribution Another possibility labeling A possible way analyze complexity planar graphs interesting essentially combinatorial Proper nonuniform suggested observation labels assigned specific junction constraints satisfied geometry enters picture defining case problems embedding It meaningful kept The problem labeling line ignored combinatorial drawing arcs random graph nodes degree 3degree nodes classified random T Y E random planar graphs specified degree sequence cart It noticed generated uniform distribution fashion generate random graphs having combinatorial properties line drawings extended trihedral scenes nodes degree 234 6 structure replaced problem labeling In completely analyze constraints analogous junction This analysis leads unsatisfactory results line drawings generated pairwise fashion local inconsistencies inconsistent junctions eliminated trivial inconsistencies averagecase consequence t Parodi et al Artcial Intelligence IO5 1998 4775 53 remains complexity increase A detailed discussion experiments 22 roughly constant number junctions line drawings showing results The results complexity labeling random graphs combinatorial insight abstract combinatorial line drawings known scenes These line drawings labelable definition properties line drawings interested labeling problem considered relevant problem labeling polyhedral decision problem anymore search problem actual solution section adopt following approach generation random construct perspective projections scenes obtain instances line drawings instances polyhedral random projection labeling problem In required line drawings scenes secondly construct best cases problem random generate random properties Before describing instances polygons Section 32 prepare scene generator briefly discuss generator possess Section 31 We simpler algorithm generates trihedral scenes extended description algorithm Section 33 devoted trihedral world Section 34 mentions angle length location edges vertices random polyhedral scenes Section 35 describes line drawing obtained projection random scene Section 36 shows examples line drawings constructed method Section 37 shows method modified generate random called Manhattan orthohedral random line drawings scenes facts distribution properties instances Legoland ground scenes 31 Properties good random scenes generator An ideal algorithm A generation random trihedral scenes following properties completeness A possible polyhedron P set polyhedra generated d b uniformity possible polyhedra appear probability c polynomial polynomial complexity number vertices polyhedron cost generating random polyhedron Property minimal requirement procedure aiming generating random scenes It analogous M able generate number require random generator integer numbers 1 range nonzero probability Property integer number 1 M equally b trickier It clear uniformity means generator random occur It generators needs As polyhedra numbers obvious generalize complex objects polyhedra Work random graphs 220 suggests different definitions adequate depending necessary generated think generating clear features supposed limit region space polyhedra limiting size We extract check randomness Some obvious random integer numbers limitations range Secondly likely define uniformity property 54 t Parodi et al Artzcial Intelligence 105 1998 4775 direction planar faces equally requirements likely length edges areas planar faces wide spectrum values merely necessary conditions See Section 34 additional comments sketchy presentation properties random scenes generator It general noted difficulty generating useful random 191 affects problems AI SAT CSP example instances If satisfied TS n time terminates successfully time E given time TS n n aborted successful 1 Tn pn 1 TSn pmin Vn 32 Generating random instances polygons The description algorithm generating prefaced description generating dimensions describes way generating random closed sequence pairwise adjacent straight line segments algorithm solves instances polygons A polygon random random scenes clearer instances polygons This section defined analogous problem There exactly incident segments ii Segments intersect endpoints That cross vertex polygon touch overlap The case segments cross vertices incident segments referred knots For applications useful include polygons polygonal holes definition That easily achieved allowing closed sequence We sequences intersect exists sequence add condition encircles Polygons inside polygonal holes admitted considered polygon enclosed A possible strategy generate random instances polygons size n sets polygons following 1 Choose support S generating 2D plane polygon introduced directions radius M algorittm bound lie So distortions uniformity closed region space support region S circle S x y E R2 1 x2 y2 F Parodi et al Artlcial Intelligence 105 1998 4775 55 Fig 3 A The support region certain number lines drawn random B The graph intersection points falling outside support S removed edges incidents C Filling elementary polygons random cause creation knots D The polygon elimination knot 2 Draw lines random plane Fig 3A choosing points xi yi 1 n inside support region n The angle 0 random choosing uniformly gives orientation line ri respect xaxis Cartesian coordinate arbitrarily chosen It possible write equations lines rz angles 9 E O n 1 3 4 sinxxicosyyiO iln 1 line region possible angles We 8 0 yields horizontal discretize support observe We need choose quantity 61 xi ni61 yi mi81 integers ni mi b quantity 68 ki60 integer ki The value 61 68 smaller smaller n increases prevent different lines meeting point step Compute intersection points ri n rj lines ri rj created step 2 maximum nn 12 The discretization grid tine prevent intersection points coinciding If happen construction The computation intersection points takes 0n2 steps n number lines For line order intersection points belong fixing arbitrary direction line Construct graph nodes intersection points support region number intersection points infinity aborted 22 inside points discarded ii arc nodes iff corresponding intersection points adjacent lines ri Fig 3B This graph planar construction specific embedding nodes occupy location 2D plane intersections points In practice simply means graph collection line segments points inside support region enhanced explicit graph structure The construction graph takes On steps n number lines interested 56 5 6 R Parodi et al Arhjicial Intelligence 105 1998 4775 techniques Find elementary polygons planar graph constructed standard graphs order On2 n number generated outer boundary graph called outerpolygon This step takes time 0n2 n polygons time proportional respects step 4 This number nodes lines Also section random instance polygon set polygons It understood adjacent elementary polygons included polygon resulting construction iff included removed We elementary polygons general presence knots Many strategies simple strategy Fill p l2 generate collections adopted end We chosen polygons following ni 1 Npol probability p chosen b In collection elementary polygons constructed called P happen pairwise collinear segments meet point forming knot example Fig 3C Therefore P detect presence knots vertices P traversed constructed easy propagate filled unfilled polygons Once knots detected eliminated follows Notice knot We unfilled polygons way addition check aborted This happens divides random This cause knots form eliminated However information elementary polygon caused creation knots It necessary structure elimination elementary polygons eliminate unfilled regions meeting likely number generating shown Fig 4 knots knot background lines increases An example situation single knot If possible ascertain procedure If procedure terminates successfully polygon set polygons defined P P U n rr filled knotrejection procedure The fillingin procedure knotrejection An example output given Fig 3D procedure time On2 worstcase complexity CompEexity By summing contributions obtain algorithm described lines On2 time takes generate random polygon abort procedure There instance experimental On2 IZ number generating time generate successful expected steps l6 evidence I This tree knot lie boundary That case simpler general case single unfilled polygon filled remove knot P Parodi et al Arrcial Intelligence IO5 I 998 4775 57 Fig 4 In simple example step 6a knot formed knot removed knot belong background elementary polygons If happen filled unfilled regions meet random polygon Section 33 0n2 detailed discussion point end Is algorithm generating random instances polygons described complete uniform The completeness question easily answered following Proposition 2 The procedure generate random instances ofpolygons described l6 complete steps lines containing simply prove given arbitrary polygon P procedure described generates P output edges target circle n random lines coincide target lines lines coincide target lines Let lines Proof To prove completeness n edges possible We P targetpolygon lines Suppose support region use generating radius M capable containing lines step 2 finite probability Assume elementary polygon tessellation produced generated Once finite probability attempt knotrejection proof See 22 detailed proof including probability reproducing procedure This concludes sketchy target polygon takes account discretization target polygon When generate filling reproduce randomly generated estimation lowerbound random polygons target polygon q The uniformity question far delicate answer We unable prove likely occur In thinkable polygon vertices inside support region equally order able provide appropriate model polygons distributed uniformly Different specifying exactly choices lead different distributions There quantities certainly distributed uniformly maybe appropriate tilt angle edge polygon length edges distributed quantities ll 58 l Pamdi et al Artcial Intelligence 105 1998 4775 number edges function length keeps form different scales alternatively accept world edge lengths distributed exponentially line process 18281 discussion considering Section 34 This case content completeness property polygons good distribution additional properties distributed according number selected quantities reasonable probability distribution angles lengths intersections Poisson distribution requirement 33 Generating random instances polyhedral scenes This section describes way generate random trihedral world defined objects obey requirements Section 2 We recall extended instances scenes extended trihedral world includes solid hanging edges faces ii opaque iii exactly planes meet vertex iv v knots isolated contact edges exactly planar faces meet edge isolated contact points different portions scene The definition includes The algorithm generates possibility having polyhedra polyhedral holes instances polygons The number n related number instances scenes size n similar random generates vertices edges planar faces polyhedral random scene 1 2 3 support S scenes generator closed region 3D polyhedra contained So distortions uniformity directions space support region S Choose space introduced sphere radius M SXYZERsI xyM 3D space random To choose uniformly Pick n planes random n points Pi xi yi zi inside support region b choose uniformly random n unit vectors iii Details generation Pis iiis dealing discretization issues 22 The equations planes 1 pn written precision ni P Pi O 1 n 2 pk created step 2 Discard n random planes On points pi f pj The complexity generating Compute intersection pj support region As 2D case discretization intersection construction The computation intersection points takes 0n3 steps n number planes f pk triplets pkCti pi lie outside prevent happens point aborted fine collapsing points togetherif 2 The maximum number intersection points infinity nn ln 26 P Parodi et al ArtiJcial Intelligence IOS 1998 4775 59 4 Compute intersection step 2 For line rij consider lines rij pi n pj planes pi pj created set intersection points step 3 belong rij order assigning arbitrary direction rij This takes time On3 iz number planes 5 Construct graph nodes intersection points inside support region ii arc nodes iff corresponding intersection points 3D space intersections points pi f3 pj fl pk _ lines pi f pj specific embedding graph 3D space simply means graph collection line segments adjacent We interested nodes occupy location In practice points inside support region enhanced explicit graph structure This graph general planar viewed collection n planar 3D graphs II different planes These planar graphs interconnected space embedding associated specified graphs Gi Gj respectively lying line planes pi pj share intersections pi n pj This structure planar graph useful subsequent The number nodes graph number arcs order On3 II number planes generated graph takes time On3 6 For plane pi independently complicated steps algorithm step 2 Therefore construction points step 4 A subset polygons correspond elementary polygons planar constructing This takes time 0n3 n graph constructed faces polyhedra number planes 7 Find elementary polyhedra graph constructed standard time proportional techniques elementary step 4 This planar number nodes graph Before following polyhedra regions procedure elementary mimicking graphs requires sketching observation Observation Each polygon step 6 boundary different elementary polyhedra lies outer hull containing elementary case belongs single elementary polyhedron We assume polyhedra unit normal vector face polyhedron points inside polyhedron Therefore given polygon ni unit normal vectors Zi iii iii associated correspond different elementary polyhedron The procedure elementary polyhedra follows l We construct graph nodes pairs ri unit vectors iii ni planar face ii arc node nj iij iff exists 3D edge ek ni 60 I Parodi et al Artijicial Intelligence 105 1998 4775 b rotating xi tk according direction ni iii viewed force applied point inside 3 xi planar pulling face met nj 8 outer hull boundary polyhedron ni graph finding iii ai points connected components fact complexity step 2 elementary polyhedra The outer hull corresponds includes nodes component containing connected space The complexity constructing On n IZ number planar faces n number edges Since n ne order ON N number intersection step 0n3 R number planes points generated Every collection elementary polyhedra beginning section random polyhedra included adjacent elementary share removed We elementary polyhedron included suffer general special elementary b knots property polyhedra introduced able generate collections elementary polyhedra knots Xs To end chosen following Fill polyhedron Di 1 random generator completeness Section 31 We need complete procedure presence Xs isolated contact edges faces meeting edge stated planar face isJiZZed iff isolated contact points Also type pairwise collinear planar trihedral scene It understood If polyhedra random respects assumptions resulting construction NpOl probability p chose p collection collection simple strategy l2 polyhedra b The set elementary necessarily undesirable geometrical constructions likely appear planes pairwise coplanar meeting edge Xs polyhedron proper polyhedral isolated contact points knots constructed called P scene Two types Therefore P constructed check irregular constructions This immediately traversing edges check crossing edges X vertices check knots Once Xs knots detected crossing edge divides In case unfilled polyhedra random eliminated follows filled polyhedra unfilled Xs notice polyhedra unfilled polyhedron This cause Xs form eliminated ascertain addition elementary polyhedron caused creation fashion However easy propagate information 3 This ambiguous The elementary polyhedra convex construction points inside ni lie ek P Pamdi et al Artificial Intelligence 105 1998 4775 61 Table 1 The percentage knot Xrejection scenes procedure function number planes For different number planes sample 100 scenes produced aborted Number planes Aborted 10 33 15 23 20 7 25 4 30 0 Xs It necessary single X We proceed analogously knots pick polyhedron ones meet vertex This creates X eliminated explained Notably procedures intertwined X cause appearance knots vice versa If possible aborted polyhedra eliminate knots Xs procedure successfully define new scene check structure elimination random elimination elementary If procedure terminates P P U I7 n filled X knotrejection procedure The fillingin procedure knot Xrejection procedure time 0n3 bounded terminate steps l8 takes number steps abort To 0n3 By summing contributions obtain worstcase complexity 0n3 n number generating procedure Complexity algorithm described planes This successfully instance need probability successful aborted number different number planes Section 31 We estimated frequency abortive instances Observe percentage aborted scenes decreases number planes increases expected exists lower bound probability scenes 10 planes state expected time 0n3 time generate different values n The results reported Table 1 strong experimental 100 33 67 interested procedure zero independent probability measuring Section 32 Therefore expected evidence Analogously 2D case state following Proposition 3 The procedure complete generate random polyhedra described steps l8 Proof The proof proceeds 2D case shown given polyhedron polyhedral steps l8 finite probability scene possible output random generator described q 34 Distribution properties So far proved complete given experimental complexity A good generator uniformity property possible occur As previously polyhedral instances scenes expected polynomial scenes probability generator random evidence 62 l Parodi et al Artificial Intelligence 105 1998 4775 clear uniform means discussed polyhedral scenes Nonetheless geometric elements random generator details analysis limiting set vertices edges planar faces We quoting results referred distribution interesting analyze line drawings theoretically uniform Uniformity lengths edgeswhich directions edges generated 22 details The distribution uniform expected 0 The distribution expected An diameter support regionis analysis data reveals distribution fitted function form eCpa o 56 x 10m4 This consistent distribution edge lengths intersections line process 2D space process formed lines plane gives rise Poisson process randomly drawing line exponential distribution edge lengths Miles 181 Stoyan et al 28 The density vertices close boundary fewer possible terminate linearly distance 85 radius density starts falling steepily uniform lengths edges results density vertices decreases center support region increases support region expected The experimental Poisson l l 0 35 The line drawing For experiments complexity interested line drawings instances scenes scenes This easily achieved In random projecting removing hidden edges render opacity polyhedra procedure scene arbitrary plane perspective projection4 follows obtaining 1 2 f image plane chosen scene described Let 0 X Y Z coordinate according coordinates The The center support region point 0 0 0O support region sphere radius M centered 0 A center projection 0 chosen appropriate distance D center support region A focal In actual experiments D length f The image plane defined equal 2M f 0 0 0 2M equation Z 2M The scene projected image plane regardless visibility questions Every vertex scene V V V V projected 2D junction v coordinates image plane VX VY Vz2MfVz2Mf 4 Most works line drawings deal orthographic projection viewed special case perspective projection Perspective projection results valid orthographic projections polyhedral vice versa correct modelization vision process All complexity scenes valid perspective projections P Pamdi et al Arttzl Intelligence 105 1998 4775 63 3 This ON steps N number vertices scene All hidden edges removed existing techniques puter graphics computational suits case The algorithm complexity 0 N log N geometry We Appels algorithm com 16 The overall complexity algorithm obtaining ON log N N number vertices number n generating planes complexity 0n3 logn N 0n3 line drawings scene scene In terms 36 Examples Examples line drawings generated algorithm described given Figs 5 6 For line drawing legal labeling given Since labeling labels different code generated automatically usual consisting putting label chosen close segment Here segment drawn dashed segment Segments labeled arrow simply drawn arrows drawn dotted segment segment necessary set represent t 37 Generating random instances Legoland scenes scene The generator random instances scenes described output Legoland modified Legoland world trihedral polyhedra planar faces oriented according orthogonal axes It simple world powerful capture widely discussed relevance From theoretical point view represent examples labeling problem Section 3 easily scene scenes 132627 simplicity practical main features simple scenes manmade world Legoland literature general polynomial trihedral 131 To generate random Legoland scene size n choose arbitrary triplet proceeds general 61 n323 Zg orthogonal unit vectors The algorithm Fig 5 An example line drawing random junctions picture Origami object 121 Notice human observer understand takes sort Neckers reversal trihedral scene left legal labeling right The number limited topright line drawing interpreted solid opposed 64 P Parodi et al Artificial Intelligence 105 1998 4775 Fig 6 An example line drawing random junctions 282 The labeling performed labeling rule boundaries trihedral scene left legal labeling right The number Fig 7 An example line drawing random Legoland scene The number junctions 127 trihedral scenes unit vector n planes G I Fig 7 chosen random z3 An example line drawing random Legoland scene shown 4 Experiments complexity labeling In section use line drawings generated explained 35 perform experiments complexity labeling Sections 33 line drawings assess Parodi et al Articial Intelligence 105 1998 4775 65 heuristics Labeling performed standard satisfaction problems The core techniques stage local consistency techniques tree search achieved search informed knowledge blind depthfirst sophisticated kinds tree search search bestfirst 34 We consider efficiency wellknown solving constraint usually preceded relaxation Waltz backtracking structure problem As relaxation Mackworth Freuder stage use simple algorithm 141 referred ACl junctions For pair adjacent labeling operation pairs junctions junctions deleting single labeling 52 compatible vice versa Repeat Jl 52 remove labelings J1 pairs gone adjacent instances labeled This procedure check junctions If line drawing constructed exist Waltz procedure line drawings having approximately junctions set legal labelings implemented described time spent junctions necessary modified Better techniques AC2 complexity On techniques case difference consequence backtracking takes worst case time On2 n number segments advantage fact line drawing referred 14 In depthfirst simpler slower version going The experiments complexity labeling carried producing number line drawings different numbers planes This gives number samples refers fixed number planes It refer fixed number junctions Therefore create transformed useful samples contains number junctions 16 initial planes 1338 steps add number 1338 sample 122 junctions associated number junctions equal 120 actually include instances called pooling Before associating having 115 124 junctions This median accumulation range N AN N AN 11 usually AN 10 AN 5 case intervals type N 3 N 21 After completing set certain range values N accept entries This indeterminacy taken account assessing computed This allows number junctions useful pass number planes variable property line drawing way produce After median number steps interval experiment appear plots Estimates error median quantities mediantime reflect clearly time requirements item unusually hard throw meancase estimate little impact median The error median estimated bootstrap procedure number junctions N require 100 line drawings number junctions complexity typical case A single error statistical quantities meantime compute reliable computational complexity time 5 We consider methods label line drawings analyze performance 66 J Parodi et al Artcial Intelligence IO5 1998 4775 logarithm mediancase Fig 8 The base10 trihedral scenes function number junctions The error bars error median estimated search The plot bootstrap procedure fitted reasonably line logto TN UN b 0089 A 0003 b 06 f 59 x2 112 Px2 112 0082 We plotted values N xaxis systematic independent N gives decisive contribution computation x2statistic performed simple depthfirst standard deviation Labeling line drawings random indeterminacy labeling complexity kl visited Fig 8 shows computational labeling method 1 achieve arcconsistency In experiment going use Simple depthjirst search backtracking relaxation algorithm following 2 perform depthfirst search constraint network Time search ACl stage computed number times depthfirstsearch nodes visited touched explored nodes adjacent updated time employed depthfirst search function number planes Each point plot refers sample 100 line drawings time median number steps sample A look data reported linear dependence loglo TN reveals seemingly N This consistent fact general form worstcase complexity OAN A depthfirst search backtracking applied N constant number junctions related maximum number legal labelings junction algorithm stack containing exponential behavior To test hypothesis functional dependence equation TN B AN N number junctions number steps specifically methods median proceed according described average standard statistical TN We plot Y logroTN aX b The parameters quantity X N fit results line Y minimize line computed m Yi uX b q b c il Parodi et al Artial Intelligence 105 1998 4775 67 successive values N experiment data m number pairs o Xi Yi pairs experimental usually estimated error Yi In present case account error Xi variables neglectable The average error AN Xi estimated oix AN2 interval AN 5 present case n size sample The errors Yi s computed original data 100 times bootstrap procedure specifically resampling sufficient ordinary circumstances median standard deviation set composed set computing resampled medians See 5 details bootstrap procedure sketched A workable errors Xi Yi compute estimate Z Q way combine final values b choose CT Z cix order compute 5 computing estimate minimize b compute A B A lOa B lob X2 point Once obtained values b l Letxab betheminima1valueofabubobeystothesoca11ed distribution expected value equal number u m 2 degrees turn equal number experimental freedom distribution points minus distribution directly compute greater gives probability discarded lit good certain good errors probably overestimated number parameters computed data From x2 probability Px 2 x b x experiment The number Px b PX b certain threshold usually 5 threshold 95 fit toa x2 greater value A hypothesis value In specific case u 0089 f 003 b 06 f 59 For values b 112 means fit good expected value 7 acceptable Px 112 0082 In following omit star simply write b indicate The procedure described uses pooling parameters bestfit line gathering line drawings similar difficult obtain large samples number junctions This annoying indeterminacy sample number junctions line drawings exactly adds source errorthe reflects precise estimation coefficient regression pooling require far larger samples techniques techniques conclusions quantity described specifically preceding reached exact number junctionswhich line An alternative robust regression 817 As result employed median squares LMS provide secondary confirmation analysis LMS consists minimizing MSU b medianiYi aXi b Xi Yi single experimental pair sample 100 elements classical regression analysis discussed The minimum MSu b obtained generating denoted aLMs bLMS gives smallest value MSu 6 5 Trial values generated sampling number 100 case random pairs experimental points Xi Yi Xj Yj trial values b choosing 68 l Parodi et al ArtQicial Intelligence 105 1998 4775 computing coefficients b line passing replacement different pairs experimental points 5 An estimate error ULMs bLMS obtained pairs repeating Xi Yi original data set 5 The method computationally small number bootstrap errors estimated coefficients repetitions method high procedure number times 50 case bootstrapping demanding The regression coefficients obtained LMS performed unpooled data experiment Fig 8 described al 008 f 001 bLMs 09 f 03 These values consistent obtained classical sum squares regression analysis complexity labeling line drawings simple depthfirst search We conclude backtracking median case complexity form worstcase complexity The use sophisticated search methods yields drastically different results N N number junctions exponential In depthfirst search backtracking search method simple BestJirst backtrack junctions chosen blindly deeper deeper layers depthfirst search 24 socalled tree explored A refined search method example bestfirst search exploits label junctions fact convenient search smallest possible set permissible guided priori knowledge structure problem labelings likely refined search uses following heuristic tried Specifically labelings Furthermore certain junctions rules l At given point search nodes subdivided classes unvisited visited explored Unvisited nodes considered search visited nodes visited explored nodes adjacent visited nodes adjacent visited The nodes visited labeled The set nodes adjacent labeled visited nodes set node tentatively chosen Bestfirst search chooses node smallest set legal labelings breaking touched nodes ties arbitrarily l Tjunctions possible labelings Four common trihedral world appear extended basic trihedral world extended appear seldom Therefore labelings successively try labeling middlesegment remaining In addition labeled arrows segments remaining convenient try conventional labelings For Ejunctions labeled convex segment heuristic rules adopt usual relaxation stage starting search Fig 9right shows median computational time versus number junctions bestfirst search method The error bars computed bootstrap procedure Fig 9left shows 50 median 75 90 95 percentiles distribution computational time idea scatter data We clear signs emergence exponential behavior 95 percentile I Parodi et al Artijicial Intelligence 105 1998 4775 69 800 600 v tit Ii5 500 250 Ei 4 200 B j 150 z IOO 100 200 number junctions 300 0 100 200 3o number junctions 50 median 75 90 95 percentiles distribution computational Fig 9 Left Showing time Right Time number steps versus bestfitted line TN UN b 126 zk 001 b 33 f 04 N number junctions Forthesevalues wetindy 221 Px 221046 number junctions search The graph bestfirst appears linear The computational close number junctions complexity median number stepsmeasured number junctions number time search stack precisely line updatedis data TN UN b N number junctions 126 ZZ 001 b 33 f 04 N number junctions The fit good x2 221 Px 221 046 corroborating number steps grows linearly hypothesis number junctions These values regression coefficients compared obtained median squares ULMs 122 f 006 bLMs 70 f 38 n The bestfit Under ordinary conditions labeling rule boundaries field view visible However Adding window objects projected image plane consists finite set polyhedra inside useful rule thumb labeled arrows extensively past works line drawings certainly use case support region polyhedra choose viewing window include use labeling leave background scene viewed certain portion scene field view assume segments lie boundary left This rule It justified fixed known support region random scenes generator introduces Notice simple modification viewing window artificially enables dealif general case generate applied example shown Fig lOright circumstances demand sowith line drawings labeling rule boundaries 70 P Parodi et al Artijicial Intelligence 105 1998 4775 Fig 10 Left An example line drawing random viewing window The labeling line drawing right scene Right The line drawing seen rule boundaries line drawing left trihedral It interesting study effect rule labeling boundaries complexity line drawing Fig 11 shows computational case rule adopted The slope bestfitting labeling number junctions aN n 122 ZY 001 b 39 f 04 slightly smaller rule boundaries For values x2 292 search labeling confidence value Px 292 014 The fit acceptable These values compared obtained median squares ULMs 119 f 005 bLMs 55 f 25 time function line TN bestfirst Observe labeling rule boundaries helps narrow distribution values ratio r optimal number steps number junctions value r 1 inspection 50 median 75 90 95 percentiles distribution computational time shows The role relaxation relaxation determine computational algorithm ACl use preprocessing time linear number junctions In previous preprocessing experiments stage stage crucial labeling search We want finding labeling We perform experiment complexity labeling rule boundaries time switching relaxation bestfirst stage The results shown Fig 12 number steps appears linear bestfitted line TN N b 134 f 002 number junctions b 22 f 06 For values x2 192 corresponding confidence value Px 192 063 These values compared obtained median squares aLMs 128 f 008 bLMs 57 f 56 450 400 350 g 300 Q 250 200 z 150 100 50 0 0 P Parodi et al Artcial Intelligence 105 1998 4775 71 350 300 250 200 6 g 150 2 100 50 100 200 300 number junctions 0 0 100 200 300 number junctions 50 median 75 90 95 percentiles distribution computational Fig Il Left Showing time Right Time number steps versus number junctions rule boundaries b 39 f 04 N number junctions The fit acceptable x2 292 Px2 292 014 bestfirst search labeling applied The data bestfitted line TN aN b 122 f 001 90 IF El 75 median Right Time number steps versus 50 median 75 90 95 percentiles distribution computational Fig 12 Left Showing time applied relaxation performed labeling line TN aN b 134f002 b 22 f06 N number ofjunctions The fit good x2 192 Px2 192 063 number junctions advance The bestfit rule boundaries search bestfirst 72 I Parodi et al Artificial Intelligence IO5 1998 4775 However The slope bestfit line present case different data far spread inspection shows Fig 12left observe irregular high width distribution case relaxation percentiles distribution case possible reaching Relaxation computational indispensable time tame bad minority cases draw 95 percentile immediately control The importance relaxation labelings junction stage evaluated legal discarded possible ptiori relaxation procedure Suppose relaxation performing relaxation procedure junction Ji initial set 110 labelings stage number gone pi A measure gain given ratio R llini ni np The product number labelings junction related complexity ni example algorithm OEni ni N number junctions line drawing E ON worstcase complexity depthfirst backtracking ONni number segments trivial algorithm tries possible combination junction Therefore worstcase trivial algorithm preprocessing algorithm performing legal labelings finds segments uniquely 141 Also Oni ni worstcase complexity labeled time line drawing filtering ratio R measure gain stops processing search Fig 13 shows behavior base10 number junctions Each point corresponds logarithm pruning ratio R function sample 100 line drawings 301 I I 30 I 40 number junctions 50 60 70 logarithm pruning median ratio set 100 line drawings The plot ratio R versus number junctions N For value bestfitted x2 124 f 42 The fit acceptable loglo RN aN b 046 f 001 b 17 Fig 13 The base10 N R computed line Px2 124 013 P Parodi et al ArtiJicial Intelligence 105 1998 4775 73 reports median sample Of course measure methods performs loglo RN UN b 046 001 b 17 x2 124 corresponding acceptable smaller number hard cases distribution independent successive line labeling The bestfit f 42 For values confidence value Px2 124 013 makes far huge accounts relaxation fit The gain worstcase complexity search legal global 5 Discussion averagecase In paper analyzed complexity labeling generate scenes Such method enabled generate random random instances line drawings projection actual scene Afterwards tested The labeling problem To carry analysis devised method polyhedral guaranteed different search methods label line drawings constructed case problem deciding labeling exists finding labeling This problem resembles closely brain solves particular drawing extraction 3D information line drawings The experimental analysis carried paper allowed reach following conclusions 1 The computational complexity labeling number junctions line drawings long appropriate median case linear This probably highly constrained nature labeling problem line drawings containing trihedral scenes Although components difficult label 13 randomization construction scenes makes components unlikely conjecture typical instances problem 131 complexity labeling line drawings polynomial appear This work substantiates mean median case search method possible construct 2 Relaxation plays obvious role line drawing contains local inconsisten relaxation average computational random graphs possible cies case inconsistencies time 22 stage means huge saving analysis labeling problem incon sistencies carried In case line drawings derived projections random scenes definition contain inconsistencies useful different reasons complexity problem indispensable values computational values close mediancase complexity clarified high values pruning narrow distribution strong effect worstcase ratio relaxation strongly affect mediancase time set random instances 51 Relation previous work Our method generating random instances polyhedral scenes inspired Sugiharas work 30321 realizability line drawing checked associating plane polygon line drawing solving linear 74 l Parodi et al Artificial Intelligence 105 1998 4775 equations plane equations work process reversed generate construct scene variables parameters planes In equations planes random linear complexity Our work compared Waltz 34 reported lineartime performances labeling strategy based number examples generated manually In case depended fact examples relaxation usually labeling This depend fact world considered 34 includes shadows cracks far In wider junction dictionary Therefore case linear complexity mediancase depend relaxation stage results immediately unique performances relaxation compared increase Acknowledgements We like thank David Mitchell Michael Molloy Stephen A Cook Hector James McLean Martin Held Thomas Auer helpful discussion The Levesque referees given important advice statistical analysis data We like thank Mario Portoraro Fernando Nuflo Domenico Ma technical help This project partially Toronto Institute Robotics Intelligent Systems Network Centres Excellence Government Canada funded IBM Centre Advanced Studies References l A Appel The notion quantitative invisibility machine rendering solids Proceedings ACM National Conference Thompson Books Washington DC 1967 pp 387393 2 B Bollobas Random Graphs Academic Press London 1985 3 P Cheeseman B Kanefsky WM Taylor Where hard problems J Mylopoulos R Reiter Eds Proceedings IJCAI91 Sydney Australia 1991 pp 331337 4 MB Clowes On seeing things Artificial 5 B Efron RJ Tibshirani An Introduction 6 JD Foley A van Dam SK Feiner JF Hughes Computer Graphics Principles Practice Addison Intelligence 2 1971 79l 16 Bootstrap Chapman Hall London 1993 Wesley Reading MA 1990 7 MR Garey DS Johnson Computers Intractability WH Freeman New York 1979 8 EM Hampel FR Ronchetti PJ Rousseeuw Robust Statistics The Approach Based Influence Functions Wiley 1986 9 T Hogg CP Williams The hardest constraint problems double phase transition Artificial Intelligence 69 1994 359377 lo DA Huffman Impossible objects nonsense sentences B Meltzer D Michie Eds Machine Intelligence 6 Edinburgh University Press Edinburgh 1971 pp 295323 111 T Kanade A theory Origami world Artificial Intelligence 13 1980 2793 11 121 LM Kirousis Fast parallel constraint 13 LM Kirousis CH Papadimitriou System Sciences 37 1988 1438 The complexity recognizing polyhedral satisfaction Artificial Intelligence 64 1993 147160 scenes J Computer 14 AK Mackworth EC Freuder The complexity polynomial network consistency algorithms constraint Intelligence 25 1985 6574 151 AK Mackworth EC Freuder The complexity constraint satisfaction satisfaction problems Artificial revisited Artificial Intelligence 59 1993 5792 P Parodi et al Arcial Intelligence 105 1998 4775 75 16 J Malik Interpreting 17 P Meer D Mintz DY Kim A Rosenfeld Robust line drawings curved objects Intemat J Computer Vision 1 1987 73103 regression methods vision review Intemat J Comput Vision 6 1 1991 5970 I81 RE Miles Random polygons determined random lines plane Proceedings National Academy Science 52 1964 901907 19 DG Mitchell HJ Levesque Some pitfalls experimenters random SAT Artificial Intelligence 81 l2 1996 111125 20 EM Palmer Graphical Evolution Wiley New York 1985 21 P Parodi The complexity understanding origami scenes Intemat J Computer Vision 18 2 1996 139170 22 P Parodi R Lancewicki A Vijh JK Tsotsos Empiricallyderived estimates complexity labelhng line drawings Technical Report RBCVTR9652 Department Computer Science University Toronto Toronto September 1996 23 P Parodr V Tom On complexity labeling line drawings polyhedral scenes Artificial Intelligence 70 1994 239276 24 J Pearl Heuristics AddisonWesley Reading MA 1984 25 B Selman DG Mitchell HJ Levesque Generating hard satisfiability problems Artificial Intelligence 8 I l2 1996 1729 26 M Straforini C Coelho M Campani Extraction vanishing points images indoor outdoor scenes Image Vision Computing 11 2 1993 91100 27 M Stmforini C Coelho M Campani V Torre The recovery understanding line drawing indoor scenes IEEE Trans Pattern Analysis Machine Intelligence 14 2 1992 298303 28 D Stoyan WS Kendall J Mecke Stochastic Geometry Applications Wiley 1996 29 K Sugihara Picture skeletal polyhedra Computer Graphics Image Processing 8 1978 language 382405 30 K Sugihara Mathematical structures line drawings polyhedrons IEEE Trans Pattern Analysis Machine Intelligence 4 5 1982 458469 31 K Sugihara An algebraic approach 32 K Sugihara A necessary sufficient condition shapefromimage problems Artificial Intelligence 23 1984 5995 scene IEEE Trans picrure represent polyhedral Pattern Analysis Machine Intelligence 6 5 1984 578586 33 JK Tsotsos The complexity perceptual search tasks Proceedings International Joint Conference Artificial Intelligence IJCAI89 Detroit MI 1989 pp 15711577 34 D Waltz Understanding linedrawings scenes shadows PH Winston Ed The Psychology Computer Vision McGrawHill New York 1975 pp 1991 35 CP Williams T Hogg Exploiting deep structure constraint problems Artificial Intelligence 70 1994 73l 17