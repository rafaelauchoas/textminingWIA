Artiﬁcial Intelligence 241 2016 191216 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Finding collective set items From proportional multirepresentation group recommendation Piotr Skowron University Oxford Oxford UK b AGH University Science Technology Krakow Poland c Université ParisDauphine Paris France Piotr Faliszewski b Jérôme Lang c r t c l e n f o b s t r c t We consider following problem There set items movies group agents passengers plane agent intrinsic utility items Our goal pick set K items maximize total derived utility agents example pick K movies planes entertainment However actual utility agent derives given item fraction intrinsic fraction depends agent ranks item chosen available ones We provide formal speciﬁcation model provide concrete examples settings applicable We problem hard general number tractability results natural special cases 2016 Elsevier BV All rights reserved Article history Received 29 October 2015 Received revised form 3 June 2016 Accepted 16 September 2016 Available online 22 September 2016 Keywords Proportional representation Ordered weighted average ChamberlinCourant rule Computational complexity Approximation Elections Voting 1 Introduction A number realworld problems consist selecting set items group agents jointly use Examples activities include picking set movies planes entertainment deciding journals university library subscribe deciding common facilities build voting parliament assembly representatives Let consider common features examples First set items1 set agents agent intrinsic utility items utility level appreciation movie average number articles reads given issue journal expected beneﬁt building particular facility feelingmeasured wayof represented particular politician Second typically possible provide items agents pick K planes entertainment ﬁts handful movies library limited budget sites facilities available parliament ﬁxed size Third intrinsic utilities items extend sets items way utility derived agent given item depend rank item agents point view selected ones Extreme The preliminary version paper presented AAAI2015 Corresponding author Email addresses piotrskowroncsoxacuk P Skowron faliszewaghedupl P Faliszewski langlamsadedauphinefr J Lang 1 We use term item neutral possible way Items candidates running election movies possible facilities httpdxdoiorg101016jartint201609003 00043702 2016 Elsevier BV All rights reserved 192 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 examples include case agent derives utility preferred item agent watch favorite movie readuse favorite journalfavorite facility feel represented appropriate politician preferred item agent worries family force watch worst available movie derives 1K utility available items agent chooses itemsay movieat random However practice expect complicated schemes agent watches movie certainly second probably agent interested having T interesting journals library agent feels represented T members parliament The goal paper formally deﬁne model captures abovedescribed scenarios provide set examples model applicable provide initial set computational results terms eﬃcient algorithms exact approximate computational hardness results NPhardness inapproximability results Our work builds generalizes extends number settings studied litera ture We provide deeper overview research Section 8 mention directly related lines work First model agents derive utility preferred item selected ones directly corresponds winner determination ChamberlinCourants voting rule 18507 deeply connected model budgeted social choice 414942 certain formal sense variant facility location problem Second case item agent derives fraction utility essence K winner rangevoting K winner Borda 21 agents enjoy equally items key assumption Santa Claus problem 6 problem designing optimal picking sequences 141035 The paper organized follows First Section 2 discuss important modeling choices provide mal description model Then Section 3 discuss applicability model scenarios Speciﬁcally number examples lead particular parameter values model We overview results Section 4 Sections 5 6 7 present results formally In Section 5 present results complexity computing exact solutions model In sections discuss issue computing approximate solutions First putting restrictions agents utilities Section 6 non ﬁnicky utilities Section 7 Intuitively nonﬁnicky utilities agents required relatively high utility values relatively large fraction items We believe notion nonﬁnicky utilities important contributions paper We discuss related work Section 8 conclude Section 9 2 The model In section formal description model However mathematical details let explain justify highlevel assumptions choices First assume agents separable preferences This means intrinsic utility object depend objects selected This different example case combinatorial auctions However model impact object global utility agent depend rank according agent selected items This distinction intrinsic value item value distorted rank considered research ﬁelds especially decision theory known rankdependent utility theory multicriteria decision making borrow main ingredients approach ordered weighted average OWA operators 58 technical details work Kacprzyk et al 34 OWAs recently social choice contexts 31323 discuss works detain Section 8 Second paper navigate views agents intrinsic utilities 1 Generally assume utilities provided explicitly input numerical values values comparable agents Yet assumptions nature agents utilities need normalized need come particular range values Indeed possible agent strong preferences items modeled high diverse utility values agent care selection process low utility values 2 In parts paper clearly identiﬁed assume utilities heavily constrained derived nonnumerical information approval ballots specifying items agent approves leading approvalbased utilities rankings alternatives utilities derived agentindependent scoring vector typically Bordalike vector Formally view special case believe worthwhile consider separately Indeed multiwinner voting rules ChamberlinCourant 18 rule Proportional Approval Voting rule 37 ﬁt second view far naturally applications view natural Third utilitarian view measure social welfare agents sum perceived utilities One study variants egalitarian variant social welfare measured utility worstoff agent We leave possible future research preliminary attempts indicated egalitarian setting computationally harder utilitarian Very recently Elkind Ismaïli 23 OWA operators deﬁne variants ChamberlinCourant rule lay utilitarian egalitarian variants Amanatidis et al 3 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 193 studied approach family multiwinner voting rules based Hamming distances discuss works Section 8 We believe extending setting utilitarian approach following ideas Elkind Ismaïli 23 Amanatidis et al 3 interesting challenging 21 The formal setting Let N n set n agents let A a1 set m items The goal pick sizeK set W items sense satisfying agents To end 1 agent N item j A 0 agent derives j 2 utility agent derives set K items intrinsic utility uia j ordered weighted average 58 agents intrinsic utilities items A weighted ordered average OWA operator K numbers function deﬁned vector αK cid5α1 αK cid6 cid6 xσ σ permutation 1 K xσ 1 xσ 2 K nonnegative numbers2 follows Let cid7x cid5x1 xK cid6 vector K numbers let cid7x nonincreasing rearrangement cid7x x xσ K Then set cid5x 1 x K OWAαK cid7x Kcid2 i1 αi x To notation lighter write αK x1 xK instead OWAαK x1 xK We provide detailed discussion OWA operators useful context later mention example express arithmetic average sizeK vector 1 K maximum minimum operators vectors 1 0 0 0 0 1 respectively median operator vector zeros single middle position K 1 We formalize problem computing satisfying set K items follows Deﬁnition 1 In OWAWinner problem given set N n agents set A a1 items collection agents utilities uia j ina j A positive integer K K m K number OWA αK The task compute subset W w 1 w K A uαK i1 αK uiw1 uiw K maximal W cid3 n ut Example 1 Consider agents following utilities items set A a1 a2 a3 a4 a5 a6 ua1 ua2 ua3 ua4 ua5 ua6 Agent 1 5 Agent 2 5 Agent 3 5 Agent 4 4 Agent 5 4 Agent 6 0 4 4 4 0 0 3 3 3 3 2 2 2 0 0 0 3 3 4 2 2 2 1 1 5 1 1 1 5 5 1 Note Agents 1 2 3 utilities items The holds Agents 4 5 We want select K 3 items use OWA α 2 1 0 What score a1 a2 a6 The ﬁrst agents utility 2 5 4 14 2 5 4 14 gets 2 3 1 7 So score a1 a2 a6 42 28 7 77 Indeed optimal set best ones a1 a2 a4 a1 a2 a5 a1 a5 a6 score 75 The rule deﬁned OWA αcid10 1 1 1 known 3Borda speciﬁc values agents utilities Example 2 section choose a1 a2 a3 ChamberlinCourants rule terms rule deﬁned OWA operator αcid10cid10 1 0 0 choose a1 a5 a6 For family αK K 1 OWAs write αOWAWinner denote variant problem given solution size K use OWA αK From mention sizes OWA vectors explicitly clear context We implicitly assume OWAs families polynomialtime computable respect K In formal deﬁnition problem different OWAvectors different values parameter K consequently coeﬃcients OWA vectors simply constants functions K For reason need assumption polynomialtime computability 2 The standard deﬁnition OWAs assumes normalization OWA vectors normalized irrelevant notions results paper K i1 αi 1 We assumption sake convenience note cid3 194 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 22 Classes intrinsic utilities While general setting allows agents express arbitrary utilities focus cases provide approvalbased ordinal information Approvalbased information Agents provide approvalbased information specify items like This information mapped approvalbased utilities deﬁned uia j 1 likes j uia j 0 Ordinal information Agents provide ordinal information specify rankings items called preference orders This information mapped utilities scoring vector exactly way positional scoring rules singlewinner voting We focus particular case scoring vector Borda vector rank j ranking k uia j m k We refer setting Bordabased utilities Naturally special cases general setting Yet approvalbased Bordabased utilities convenient general approach Example 2 The utilities agents Example 1 Bordabased expressed following preference orders Agent 1 a1 cid12 a2 cid12 a3 cid12 a5 cid12 a6 cid12 a4 Agent 2 a1 cid12 a2 cid12 a3 cid12 a5 cid12 a6 cid12 a4 Agent 3 a1 cid12 a2 cid12 a3 cid12 a5 cid12 a6 cid12 a4 Agent 4 a6 cid12 a1 cid12 a4 cid12 a3 cid12 a5 cid12 a2 Agent 5 a6 cid12 a1 cid12 a4 cid12 a3 cid12 a5 cid12 a2 Agent 6 a5 cid12 a4 cid12 a2 cid12 a3 cid12 a6 cid12 a1 Both approvalbased utilities Bordabased utilities inspired analogous notions theory voting approval Borda count wellknown singlewinner voting rules brieﬂy rules treat utilities items scores sum scores assigned items voters elect item highest score Further Bordabased utilities original ChamberlinCourants rule works fair division paper Brams King 13 One highlevel messages paper OWAWinner problems tend computationally easier case Bordabased utilities case approvalbased ones typically obtain NPhardness settings ﬁnd good approximation algorithms Bordabased cases approvalbased setting algorithms signiﬁcantly weaker obtain outright inapproximability results This Bordabased utilities agents assign relatively high utility values relatively large fraction items In following deﬁnition try capture property Deﬁnition 2 Consider setting m items let umax denote highest utility agent gives item Let β γ numbers 0 1 We agents β γ nonﬁnicky utilities agent utility βumax γ m items To understand notion better let consider following example Example 3 Let n 3 m 6 The utilities deﬁned ua1 ua2 ua3 ua4 ua5 ua6 Agent 1 10 Agent 2 6 Agent 3 8 10 5 0 9 0 10 8 10 6 5 8 10 0 10 7 The agents 08 05nonﬁnicky utilities Indeed agents utility 8 half items They 06 2 6 nonﬁnicky utilities We use agents items example later presenting algorithms 3 nonﬁnicky utilities 05 5 As expect Bordabased utilities nonﬁnicky natural sense P Skowron et al Artiﬁcial Intelligence 241 2016 191216 195 Observation 1 For x 0 x 1 Bordabased utilities x 1 xnonﬁnicky However natural cases nonﬁnicky utilities For example consider agents approvalbased utilities agent approves γ fraction items These agents 1 γ nonﬁnicky utilities The reader surprised approvalbased utilities nonﬁnicky said obtain inapproximability results Yet contradiction These inapproximability results rely fact agents approve items 23 A dictionary useful OWA families Below catalog OWA families focus paper description K dimension vectors apply given OWA 1 kMedian OWA For k 1 K kmedK OWA deﬁned vector k 1 zeros followed single followed K k zeros It easy kmedK x1 xK kth largest number set x1 xK known kmedian cid7x In particular 1medK cid7x maximum operator K medK cid7x minimum operator K odd K 1 2 medK cid7x median operator 2 kBest OWA For k 1 K kbestK OWA deﬁned vector k ones followed K k zeros That kbestK cid7x sum k values cid7x appropriate scaling means arithmetic average k numbers K best simply sum numbers cid7x scaling arithmetic average 3 Arithmetic progression OWA This OWA deﬁned vector aprogaK cid5a K 1b K 2b acid6 0 b 0 One easily check choice b impact outcome OWAWinner case 4 Geometric progression OWA This OWA deﬁned vector gprogpK cid5p K 1 p K 2 1cid6 p 1 This loss generality multiplying vector constant factor impact outcome OWAWinner choice p matters K K 5 Harmonic OWA This OWA deﬁned vector cid51 1 6 Hurwicz OWA This OWA deﬁned vector λ 0 0 1 λ λ 0 λ 1 parameter 3 1 2 1 cid6 K In section settings particular operators arise naturally For applications easily design sorts operators As natural assumption highly ranked items impact lowerranked objects assumption OWA vectors nonincreasing α1 αK While OWA operators consider paper nonincreasing case kmedians 1median Hurwicz λ 1 3 Applications model We believe model general To substantiate claim section provide different scenarios applicable Generalizing voting rules Our research started attempt generalize rule Chamberlin Courant 18 electing sets representatives For rule voters agents Bordabased utilities set candidates wish elect K member committee parliament voter represented member committee If select K candidates voter represented selected candidate ranks high est chosen ones Thus winner determination ChamberlinCourants voting rule boils solving 1bestOWAWinner case Bordabased utilities On hand solving K bestOWAWinner Bordabased utilities equivalent ﬁnding winners K Borda rule picks K candidates highest Borda scores work Elkind et al 22 classiﬁcation multiwinner voting rules including K Borda Chamberlin Courants rule Our model extends appealing voting rule known Proportional Approval Voting PAV work Kilgour 37 review approvalbased multiwinner rules work Aziz et al 5 Elkind Lackner 24 computational results Winner determination PAV equivalent solving αOWAWinner harmonic OWA case approvalbased utilities More generally model related committee scoring rules recently introduced Elkind et al 22 While technically models comparable work inspired Faliszewski et al 2625 consider class OWAbased committee scoring rules whichin essenceare equivalent family αOWAWinner problems case utilities derived ordinal data singlewinner scoring rules analogously Bordabased utilities One highlevel observations follows works Elkind et al 22 Faliszewski et al 2625 Aziz et al 4 different OWA operators lead multiwinner voting rules different properties 196 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 Malfunctioning items unavailable candidates Consider setting pick items offline online turn unavailable example pick set journals library subscribes agent goes library particular journal borrowed work Lu Boutilier 40 examples social choice possibly unavailable candidates If items unavailable agent chooses use best available Let additional assumptions scenario We assume item available known probability p iid The utility agent gets set selected items W expected value best available object If goal select K items expected utility average agent chosen uniformly random best available item maximized use OWA operator cid5p p1 p p1 p2 cid6 The OWA coeﬃcients probabilities respectively desired item available second mostdesired item available ﬁrst mostdesired item available ﬁrst We note operator equivalent appropriate geometric OWA operator Since probabilities example elements external world natural assume known agents agents simply provide utilities possible bundles K items However large values K require agents provide large possibly exponential information The advantage model provides compact language representing agents utilities general advantage model applies following examples With similar motivations Swamy Shmoys 57 studied facility location problem facilities vulnerable fail ures Their approach corresponds cid7bestOWAWinner constant cid7 model bit different derive utilities distances agents case utilities arbitrary An teresting open problem extend approach Swamy Shmoys types OWA vectors particular geometric progression OWA Uncertainty items user enjoys There uncertainty number items user enjoy plane uncertain movies passenger watch fall asleep watch movies good We possible models choice OWA vectors cases coeﬃcient αi OWA operator proportional probability agent enjoys ith best movie 1 The probability agent enjoys items 0 K uniformly distributed agent enjoy exactly K 1 So agent enjoys ith item enjoys items K 1 use OWA vector deﬁned αi K 1 disregard normalizing ﬁrst items W probability 1 occurs probability K i1 constant arithmetic progression 2 We assume values given user item distributed uniformly iid 0 1 user uses items value θ θ ﬁxed userindependent threshold Therefore user enjoys item W ranked position values items θ occurs probability cid3 cid3 cid5 cid5 cid4 cid4 K ji K 1 θiθ K leading OWA vector deﬁned αi K ji K 1 θiθ K There certain worry address Our model requires use OWA operator agent different agents enjoy different numbers items different probabilities While restriction common OWA operator agents certainly limitation model believe justiﬁed On hand single operator computationally challenging soon hand approaches presented reasonable choices OWA operators apply similar scenarios especially obtaining personalized OWA operators agents challenge In model OWA operators represent typical expected behavior speciﬁc behavior agent This similar positional scoring vectors voting rules express typical relationrather agentspeciﬁc relationsbetween utilities positions preference rankings Naturally satisﬁed OWAs derived theoretically example ﬁnd operators suitable given population agents application hand classical techniques machine learning Ignorance item assigned user We assume matching mechanism selecting K items The matching mechanism speciﬁed randomized If agents complete ignorance mechanism makes sense use known criteria decisionmaking complete uncer tainty opposed previous scenarios coeﬃcients OWA operators appropriate probabilities coeﬃcients agents attitude risk 1 The Wald criterion assumes agents extremely riskaverse corresponds α K medK cid50 0 1cid6 recall deﬁnition kmedian OWA Section 23 The agents consider worst possible items 2 The Hurwicz criterion linear combination worst best outcomes corresponds α λ 0 0 1 λ ﬁxed λ 0 1 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 197 Table 1 Summary results OWA families Section 23 For OWA family provide entries In ﬁrst row given OWA family worst case complexity general case nonﬁnicky utilities case second row list best known necessarily optimal approximation result general case nonﬁnicky utilities case We write K mean cardinality winner set seek In References column point respective result paperliterature For negative results indicate simplest types utilities hold positive results general types utilities hold For approximability results case nonﬁnicky utilities write β cid9approx mean polynomialtime approximation algorithm approximation ratio approaches β size committee increases effect cid9 cid9 0 polynomialtime algorithm achieves β cid9 approximation ratio bruteforce algorithm size committee smaller certain constant For inapproximability results DkSbounded MEBPbounded mean respectively inapproximability results derived DensestkSubgraph problem Maximum Edge Biclique Problem General approval utilities β γ nonﬁnicky Borda utilities References OWA family kmedian k ﬁxed K median 1best kbest k ﬁxed K 1best NPhard DkSbounded NPhard MEBPbounded NPhard approval 1 1 e approx NPhard approval 1 1 e approx NPhard approval PTAS K best P Arithmetic progression Geometric progression Hurwiczλ NPhard 1 1 e approx NPhard 1 1 e approx NPhard approval λ1 1 e approx NPhard Borda β cid9approx PTAS Borda NPhard NPhard Borda β cid9approx PTAS Borda NPhard Borda β cid9approx NPhard Borda PTAS P 1 1 e approx β cid9 λ1 cid9approx cid9 0 Proposition 8 Theorem 15 Corollary 26 Theorem 30 Theorems 6 7 Theorem 19 open problem Literature 5041 Literature 41 Corollary 26 Literature 55 Proposition 8 Theorem 13 Corollary 26 Theorems 6 7 Theorem 23 Folk result Theorem 3 open problem Theorem 13 Theorem 3 open problem Theorem 13 Corollary 31 Corollary 20 open problem Corollary 22 If agents know guaranteed best items Wald Hurwicz criteria lead respectively OWAs α imedK α λ 0 0 1 λ 0 0 1 λ position If agents know mechanism gives items probability use ibest OWA More generally matching mechanism assign items agents probability decreases rank increases Remarks We conclude section comments parts model endogenous exogenous From computational point view exogenous We given OWA operator agents intrinsic utilities value K goal solve OWAWinner instance However situation point view designer mechanism applies model different For example able specify format utilities provided require Bordabased utilities approvalbased utilities forced use particular format approvalbased utilities available He able choose OWA operator designing multiwinner voting rule society trying balance different desiderata OWA operator follow naturally external parameters example malfunctioning items provided explicitly outside example highly riskaverse agents In summary provide language expressing large family problems selection items collective use agents number tools solving problems identifying problems diﬃcult solve 4 Overview results In section provide highlevel overview results It turns computational properties OWA Winner problem varied strongly depend types OWA operators allowed agent utilities We present summary results Table 1 stress technical results listed table following sections Our ﬁrst observation restrictions OWAWinner NPhard This hardly surprising prob lem generalizes NPhard problems natural ask special cases easy Unfortunately Section 5 rare For example restrictions agents utilities OWAWinner solved polynomial time treat K constant use constant OWA vector use K best 198 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 OWA Indeed problem NPhard K 1best OWA This holds agents restricted approvalbased utilities Theorem 6 Bordabased utilities Theorem 7 More generally OWA Winner NPhard family OWA vectors nonconstant nonincreasing Theorem 5 captures signiﬁcant fraction interesting settings After considering worstcase complexity computing exact solutions Section 5 Section 6 focus approximability OWAWinner problem We respect signiﬁcant difference main classes OWA vectors nonincreasing remaining ones We nonincreasing OWA vectors standard greedy algorithm optimizing submodular functions achieves approximation ratio 1 1e irrespective nature agents utilities Lemma 12 Theorem 13 On hand present evidence little hope good approximation algorithms case OWA vectors nonincreasing Example 5 Theorems 15 19 Next Section 7 consider approximation algorithms OWAWinner case agents nonﬁnicky utilities It turns nonﬁnicky utilities obtain better approximability guarantees general setting The key feature nonﬁnicky utilities assumption agent gives suﬃciently high utility values suﬃciently items algorithms ﬂexibility picking items achieve high quality results Speciﬁcally strong approximation algorithm case nonﬁnicky utilities OWA vectors concentrate weight constant number coeﬃcients Theorems 25 29 30 Corollary 31 These results apply example case geometric progression OWAs cid7best OWAs cid7med OWAs ﬁxed values cid7 Further applied case Bordabased utilities argued Section 22 nonﬁnicky strong sense obtain polynomialtime approximation schemes approximation algorithms compute solutions arbitrarily good precision running time depends polynomially size problem necessarily desired approximation ratio 5 Computing exact solutions We start analysis discussing complexity solving OWAWinner problem exactly In general OWAWinner diﬃcult problem sections main negative result That problem NPhard class OWA vectors satisfying certain natural restriction Intuitively restriction says considered family OWAs impact moreliked items total satisfaction agent greater lessliked ones Theorem 3 Fix OWA family α K αK nonincreasing nonconstant3 αOWAWinner NPhard approvalbased utilities For sake readability ﬁrst prove simpler results later use proof Theorem 3 In proofs reductions standard VertexCover problem CubicVertexCover variant restricted cubic graphs Deﬁnition 4 In VertexCover problem given undirected graph G V E V v 1 vm set vertices E e1 en set edges positive integer K We ask set C K vertices edge incident vertex C The CubicVertexCover problem problem restricted graphs vertex degree exactly VertexCover wellknown NPhard 30 NPhardness CubicVertexCover shown Alimonti Kann 1 Theorem 5 Fix OWA family α exists p K p αK NPhard approvalbased utilities p αK p1 αOWAWinner Proof We reduction CubicVertexCover problem Let I instance CubicVertexCover graph G V E V v 1 vm E e1 en positive integer K Wlog assume n 3 We construct instance I set N E agents correspond edges A V b1 b2 b p1 p 1 dummy items items correspond vertices seek collection items size K p 1 Each agent ei ei E utility 1 exactly dummy items vertices ei connects dummy items remaining items ei utility 0 In effect agent utility 1 exactly p 1 items αOWAWinner In I cid10 cid10 3 That K αK cid5αK 1 αK K cid6 OWA operator αK 1 αK K αK 1 αK K P Skowron et al Artiﬁcial Intelligence 241 2016 191216 199 We claim I yesinstance CubicVertexCover exists solution I cid3 cid10 total utility n p i1 αi 3K nαp1 p If vertex cover C size K G selecting items W C b1 b2 b p1 obtain required utility agents Indeed agent ei p items W gives value 1 p 1 dummy items vertex incident ei These items contribute value n i1 αi total agents utility Additionally nondummy item value 1 exactly 3 agents agent p 1 items value 1 exactly 3K n agents exactly p 1 items W values 1 These p 1th additional utility1 items 3k n agents contribute 3K nαp1 total utility Altogether agents utility cid3 n i1 αi 3K nαp1 claimed Let assume set K p 1 items total utility n p 1 items value 1 n agents item value 1 exactly 3 agents Thus sum utilities K p 1 items applying OWA operator p 1n 3K pn 3K n i1 αi 3K nαp1 agent ei Thus total utility agents applying OWA operator n solution contains p items utility 1 Since p 1 dummy items means agent ei vertex v j solution e j incident v j That I yesinstance CubicVertexCover cid2 i1 αi 3K nαp1 In I cid3 cid3 cid3 p p p cid10 Theorem 6 K 1bestOWAWinner NPcomplete approvalbased utilities cid10 Proof Membership NP clear We reduction VertexCover problem Let I instance Vertex Cover graph G V E V v 1 vm E e1 en positive integer K loss generality assume K 3 K m e2 We construct instance I following utilities e1 Let W set K items vertices consider sum utilities derived agents e1 K 1bestOWAWinner following way We let set items A V form 2n agents edge Speciﬁcally ei edge connecting vertices v i1 v i2 introduce agents e1 utility 1 v i1 v i2 utility 0 items e2 opposite utilitiesit utility 0 v i1 v i2 utility 1 remaining ones e2 equal K 1 W K 1bestOWA If v i1 v i2 belong W total utility e1 agent gets utility 0 gets K 1 If items v i1 v i2 belongs equal K agent gets utility 1 gets K 1 W total utility e1 e2 Finally items v i1 v i2 belong W total utility e1 equal K gets utility 2 gets utility K 2 Thus total utility agents equal K n answer instance I yes This shows reduction correct reduction computable polynomial time proof complete cid2 e2 e2 Using proof combines ideas proofs Theorems 5 6 OWAWinner NPhard large class natural OWAs Proof Theorem 3 We reduction CubicVertexCover Let I instance CubicVertexCover graph G V E V v 1 vm E e1 en positive integer K Now let consider α2K Since α2K nonincreasing nonconstant following conditions hold 1 There exists p K α2K 2 There exists p K α2K p α2K p1 p1 p K α2K p α2K p α2K p1 If 1 case use reduction similar proof Theorem 5 The difference apart set D1 p 1 dummy items ranked ﬁrst agents introduce set D2 2K p 1 dummy items 2K p 1 sets N1 N2 N2K p1 consisting 2n dummy agents The dummy items D2 introduced ﬁllup solution 2K members The dummy agents Ni utility 1 items D1 ith item D2 utility 0 items This enforce items D2 selected optimal solution The reduction proof Theorem 5 If 2 case use reduction similar proof Theorem 6 We let set items A V D1 D2 D1 D1 p 1 K D2 D2 2K p 1 sets dummy items need construction Similarly proof Theorem 6 edge ei E introduce agents e1 Here additionally need set F 2n 1 dummy agents Each dummy agent F assigns utility 1 dummy item D2 utility 0 remaining itemsconsequently F 2n dummy item D2 selected optimal solution Further nondummy agent assigns utility 1 dummy agent D 1this way ensure item D1 selected optimal solution Finally utilities nondummy agents nondummy items deﬁned exactly proof Theorem 6 This ensures optimal solution apart D1 D2 contain nondummy items correspond vertices optimal vertex cover cid2 e2 200 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 One wonder justpresented hardness results hold restrictions agents utilities Below variant result Theorem 6 Bordabased utilities It follows application similar idea proof Theorem 6 restriction Bordabased utilities requires technical proof available appendix Theorem 7 K 1bestOWAWinner NPhard Bordabased utilities 51 Inherited hardness results We consider cases kbestOWAWinner kmedOWAWinner k constant By results Procaccia Rosenschein Zohar 50 Lu Boutilier 41 know 1bestOWAWinner problem NPhard approvalbased utilities Bordabased utilities case problem equivalent winner determination appropriate variants ChamberlinCourant voting rule effect results complexity rule applicable variant problem 7555954 A simple reduction shows result carries family kbest OWAs kmed OWAs k ﬁxed positive integer note case approvalbased utilities results follow Theorem 3 Proposition 8 For ﬁxed k kbestOWAWinner kmedOWAWinner NPcomplete utility proﬁles restricted approvalbased Bordabased Proof Let k ﬁxed constant It easy kbestOWAWinner kmedOWAWinner NP To NPhardness reductions 1bestOWAWinner approvalbased utilities Bordabased utilities kbestOWAWinner kmedOWAWinner types utilities cid10 Let I instance 1bestOWAWinner n agents m items seek winner set size K We kbestOWAWinner identical I 1 We add k 1 special items b1 bk1 form instance I approvalbased utilities agent utility 1 item b j 1 j k 1 Bordabased utilities agent utility m j 1 item b j 1 j k 1 2 We set size desired winner set achieves utility x K cid10cid10 b1 bk1 solution W optimal solution I I utility x uses k 1 items b1 bk1 achieves utility x Further set W k1 j1 uib j cid10 K k 1 It easy optimal solution W Analogous argument shows 1bestOWAWinner reduces kmedOWAWinner approvalbased k1 j1 u1b j cid3 n i1 x n I I cid3 cid3 cid10cid10 cid10 cid10 cid10 Bordabased utilities cid2 We leave problem generalizing theorems general classes OWA vectors technical conceptually easy open problem 52 Rare easy cases While OWAWinner problem general NPhard natural easy cases For example problem P provided seek winner set ﬁxed size Naturally practice variant problem ﬁxed K limited applicability Proposition 9 For ﬁxed constant K size winner set OWAWinner P Proof For proﬁle m items O mK sets winners try We try pick yields highest utility cid2 Similarly problem P number available items ﬁxed follows applying proposition number items ﬁxed K Throughout rest paper focus αOWAWinner variant problem K given input α represents family OWAs value K It easy note K best OWA family constant OWAs α 1 1 problem P Proposition 10 K bestOWAWinner P Proof Let I input instance m items n agents seek winner set size K It suﬃces compute item total utility agents derive item included winner set return K items value highest cid2 Indeed agents utilities approvalbased Bordabased K bestOWAWinner boils polynomial time winner determination K best approval rule K Borda rule 21 respectively work Elkind P Skowron et al Artiﬁcial Intelligence 241 2016 191216 201 minimize ncid2 mcid2 Kcid2 i1 j1 k1 αkuia j xi jk subject mcid2 xi K i1 b xi jk x j mcid2 c xi jk 1 j1 Kcid2 k1 mcid2 j1 d e xi jk 1 uia j xi jk mcid2 j1 f xi jk 0 1 g x j 0 1 n j k K n k K n j m uia j xi jk1 n k K 1 n j k K j m Fig 1 Integer linear programming ILP formulation OWAWinner problem et al 22 general discussion multiwinner rules However light fact Theorems 6 7 appear surprising Given results section far conjecture family constant OWAs family K best OWAs natural family αOWAWinner P We leave conjecture natural followup question It tempting conjecture families nonconstant OWAs natural ones problem NPhard This case By following arguments classic theorem Ladner 38 possible exhibit polynomialtime computable family OWAs αOWAWinner NP NPcomplete P P NP Intuitively family consist interspersed long fragments OWAs K best 1best The K best fragments prevent problem NPcomplete 1best fragments prevent P 53 Integer programming In spite hardness results seen far position necessary obtain exact solution given αOWAWinner instance bruteforce algorithm Proposition 9 slow In case possible use integer linear programming ILP formulation problem given We believe ILP formulation interesting right particular interesting future work experimentally assess size instances yields solutions reasonable time Theorem 11 OWAWinner reduces computing solution integer linear program Fig 1 Proof Consider input instance n agents N n m items A a1 seek winner set size K OWA α α1 αK For N j A write uia j denote utility agent derives item j We form instance ILP following variables 1 For N j m k K indicator variable xi jk intuitively interpret xi jk 1 mean agent item j kth preferred selected solution 2 For j m indicator variable x j intuitively interpret x j 1 mean j included solution Given variables assuming enforce intuitive meaning goal ILP maximize function We require variables indicator variables values set 0 1 constraints f g We requite variables form xi jk internally consistent constraint c says agent ranks candidates solution kth best constraint d agent item j views j ranked different positions items solution Then require variables form xi jk consistent form x j constraint b exactly K items selected solution constraint K k1 αkuia j xi jk cid3 n i1 m j1 cid3 cid3 Our ﬁnal constraint constraint e requires variables xi jk agent sort items solution order descending utility values We mention constraint e necessary case OWAs α notnonincreasing For nonincreasing α optimal solution ILP ensures correct sorting goal function maximized cid2 202 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 We note linearprogramming formulations OWAbased optimization problems appeared lit erature far work example paper Ogryczak Sliwinski 48 Yet use OWA operators different way approach different In essence Ogryczak Sliwi nski use OWA operator aggregate number values use simple sum aggregate agents perceived utilities compute perceived utilities applying OWA operator agents individual intrinsic utilities 6 Approximation general utilities approval utilities The OWAWinner problem particularly wellsuited applications involve recommendation systems work Lu Boutilier 41 discussion 1bestOWAWinner context For recommendation systems suﬃces ﬁnd good approximate solutions instead perfect exact ones especially estimates agents utilities It turns quality approximate solutions produce OWAWinner strongly depends properties particular family OWAs nature agents utilities cid7 1 1 approximation e ut recall Deﬁnition 1 submodular First long OWA nonincreasing simple greedy algorithm achieves ratio This result follows showing nonincreasing OWA α function uα nondecreasing applying famous result Nemhauser et al 46 cid6 Recall A set u function u 2 A R 1 u submodular W W W cid10 A A W holds cid10 cid10 W uW uW uW 2 u nondecreasing W A A holds uW uW cid10 uW cid10 Lemma 12 Let I instance OWAWinner nonincreasing OWA α The function uα ut submodular nondecreasing Proof Let I instance OWAWinner agent set N n item set A a1 desired solution size K OWA α cid5α1 αK cid6 For agent N item j A uia j nonnegative utility derives j Since utilities entries OWA vector nonnegative note uα ut nondecreasing To submodularity decompose uα ut follows uα utW K 1cid2 αcid7 αcid71ucid7bestOWA ut W αK u K bestOWA ut W cid71 For W A N cid7 m let TopW cid7 set cid7 items W utility point view agent highest break ties arbitrary way Since nonnegative linear combinations submodular functions submodular suﬃces prove N cid7 m function ucid7 wTopW icid7 uiw submodular W cid3 consider sets W W cid10 W W cid10 A A W cid10 We claim cid10 ucid7 cid10 W W Let u W u W cid10 denote utilities ith agent cid7th best items W W respectively 0 given set fewer cid7 elements Of course u W cid10 u W Let ua denote ith agents utility We consider cases If ua u W sides 1 value 0 Otherwise cid10 1 cid10 To submodularity ucid7 W ucid7 ucid7 W ucid7 cid10 ucid7 ucid7 W W ucid7 ucid7 maxua u W cid10 0 W W ua u W proves 1 completes proof cid2 Based result easily Algorithm 1 polynomial time 1 1eapproximation OWAWinner problem case nonincreasing OWA vectors Theorem 13 Algorithm 1 natural incarnation greedy algorithm Nemhauser et al 46 It starts setting foundsofar solution W Then iteration extends W adding item causes greatest increase utility Example 4 Let items agents Example 3 Let K 3 consider OWA vector α 2 1 0 Throughout K 3 iterations obtain following gain values contents W given beginning iteration explain computation αcid71 ut u W Iter 1 0 Iter 2 a1 48 Iter 3 a1 a4 76 W gaina1 gaina2 gaina3 gaina4 gaina5 gaina6 48 30 15 2 38 21 7 48 28 46 27 8 34 21 5 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 203 Algorithm 1 The greedy algorithm ﬁnding utilitarian set K winners Notation αcid7 input OWA operator α restricted cid7 entries W cid7 1 K gain foreach A W gaina u αcid71 αcid7 ut W u ut W W argmaxa AW gaina W return W At beginning ﬁrst iteration W algorithm simply computes utility item separately α1 OWA operator α1 cid52cid6 For example u ut a1 2 10 6 8 48 In ﬁrst iteration a1 a4 lead highest gain algorithm free pick We assume picks a1 In second iteration W a1 example gain value a4 computed α2 ut a1 a4 u α1 ut a1 2 10 10 8 8 6 6 48 76 48 28 u It highest gain value algorithm includes a4 solution In iteration item a5 highest gain algorithm includes W Finally algorithm outputs W a1 a4 a5 Theorem 13 For nonincreasing OWA α Algorithm 1 polynomial time 1 1eapproximation algorithm problem ﬁnding utilitarian set K winners Proof The thesis follows results Nemhauser et al 46 approximating nondecreasing submodular func tions cid2 Algorithm 1 interesting interpretation context voting systems This greedy algorithm viewed approximation algorithm new iterative voting rule Indeed popular voting rules deﬁned iterative greedy algorithms Such rules polynomially solvable easier understand society Further Caragiannis et al 17 later Elkind et al 22 advocate viewing approximation algorithms computationally hard voting rules new election systems study axiomatic properties showing better original rules Here interesting observation It turns algorithm Theorem 13 applied case approvalbased utilities harmonic OWA simply winner determination procedure Sequential Proportional Approval Voting rule 11 developed Danish astronomer mathematician Thorvald N Thiele short period Sweden early 1900s That Sequential Proportional Approval Voting rule simply approximation PAV rule Proportional Approval Voting rule We believe observation gives evidence approximation algorithms computationally hard voting rules viewed new fullﬂedged voting rules We point readers interested approvalbased multiwinner voting rules overview Kilgour 37 works Aziz et al 54 Elkind Lackner 24 Skowron Faliszewski 54 Is 1 1 e approximation algorithm good result After 1 1 063 algorithm guarantees 63 maximum possible satisfaction agents Irrespective views suﬃcient best possible approximation ratio polynomialtime algorithm unrestricted OWAWinner nonincreasing OWA The reason 1bestOWAWinner approvalbased utilities essence MaxCover problem P cid21 NP 1 1 e approximation upper bound MaxCover 27 We omit exact details connection MaxCover 1bestOWAWinner instead point readers work Skowron Faliszewski 54 discuss point mention refer 1bestOWAWinner winner determination ChamberlinCourants voting rule For OWAs nonincreasing hope 1 1 e approximation algorithm There arguments support belief First OWAs yield utility functions necessarily submodular impossible apply result Nemhauser et al 46 As example 2medOWA yields utility function submodular e Example 5 Let consider single agent sets items W c d W 2medOWA α The utilities agent items b c d equal 10 9 2 1 respectively We cid10 b c d course W W cid10 utW uα uα utW 2 1 1 uα utW cid10 uα utW cid10 9 2 7 That uα b 1 c d 0 ut submodular Indeed example works approvalbased utilities suﬃces set utilities 204 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 Second plausible constantfactor approximation algorithms notnonincreasing OWAs As example let consider case families OWAs following structure ﬁrst entries zeros followed nonzero entry suﬃciently early position If good approximation algorithm winner determination OWAs good approximation algorithm DensestKSubgraph problem unlikely Deﬁnition 14 In DensestkSubgraph problem given undirected graph G V E positive integer K We ask subgraph S K vertices maximal number edges Theorem 15 Fix integer cid7 cid7 2 Let α family OWAs OWA family cid7 numbers 0s positions 1 cid7 1 nonzero value cid7th position If polynomialtime xnapproximation algorithm αOWAWinner polynomialtime xnapproximation algorithm DensestkSubgraph problem We mention Theorem 15 holds somewhat general class OWAs stated explicitly The proof relies fact ﬁrst entry OWA zero ﬁrst nonzero entry OWA K 1 positions K parameter input DensestKSubset instance Proof Theorem 15 Let I instance DensestKSubgraph problem graph G V E positive αOWAWinner set agents N E set items teger K From I construct instance I A V d1 dcid72 V cid7 2 seek winner set size K cid7 2 Agents utilities set follows For agent e item d j 1 j cid7 2 utility e d j 1 If e edge G connects vertices u v agent es utility u v 1 0 remaining items V cid10 cid10 It easy items d1 dcid72 belong optimal solution I It easy optimal solution utility agent e nonzero exactly equal αcid7 cid7th entry OWA α items corresponding vertices connected e included solution Thus total utility optimal solution I equal αcid7 times number edges connect vertices corresponding items solution Let A polynomialtime xnapproximation algorithm αOWAWinner If A returns solution S I nonezero utility items d1 dcid72 belong S Let vertices corresponding items S d1 dcid72 The number edges connecting vertices equal total utility S divided αcid7 Thus xnapproximation solution I extract xnapproximation solution I This completes proof cid2 cid10 cid10 cid10 It DensestkSubgraph easy approximate Khot 36 ruled existence PTAS problem standard complexitytheoretic assumptions Bhaskara et al 9 showed polynomial integrality gap Raghaven dra Steurer 52 Alon et al 2 proved polynomialtime constant approximation nonstandard assumptions Finally best approximation algorithm problem know Bhaskara et al 8 ap proximation ratio O n14cid9 n number vertices input graph As evidence OWAs nonincreasing particularly hard deal point view approximation algorithms extreme example OWA family K med OWAs strong hardnessofapproximation result We start following graph problem Deﬁnition 16 In Maximum Edge Biclique Problem MEBP given balanced bipartite graph U V E U V set vertices cid23U cid23 cid23V cid23 E set edges edges vertices U V We ask biclique subgraph S vertex U S connected vertex V S edges possible cid8 According Feige Kogan 28 exists constant c polynomial 2c algorithm MEBP cid9 3SAT DTIME2n34cid9 3SAT exists For argument convenient deﬁne use following variant MEBP lg nnapproximation Currently unlikely algorithm Deﬁnition 17 In MEBPV given input MEBP positive integer K We ask biclique S cid23S V cid23 K S contains edges possible Lemma 18 There exists constant c polynomialtime 2c cid9 3SAT DTIME2n34cid9 cid8 lg nnapproximation algorithm MEBPV Proof For sake contradiction let assume exists constant c polynomialtime 2c lg nnappro ximation algorithm A MEBPV By running A value K ranging 1 cid23V cid23 obtain polynomialtime lg nnapproximation algorithm MEBP This stays contradiction result Feige Kogan 28 cid2 2c cid8 cid8 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 205 Theorem 19 There exists constant c polynomialtime 2c OWAWinner cid9 3SAT DTIME2n34cid9 cid8 cid8 lg nnapproximation algorithm K med cid10 lg nnapproximation algorithm A K med Proof Let assume constant c polynomialtime 2c OWAWinner We use A solve instances MEBPV approximation ratio By Lemma 18 prove theorem Let I instance MEBPV bipartite graph G U V E positive integer K From I construct K medOWAWinner following way We let set agents N U set items A V instance I seek winner set size K The utility agent u item v equal 1 u v connected G Let S 0 Now note onetoone correspondence solutions I I cid10 solution I x edges S V solution I utility x All agents U nonzero utilities S form biclique K x edges Thus lg nnapproximation solution I This completes 2c proof cid2 utility equal xK Let S solution I lg nnapproximation solution I extract 2c cid8 cid8 cid10 cid10 cid10 As corollary proof HurwiczλOWAWinner NPhard identical proof certain dummy candidate added gets utility 1 size winner set extended 1 Corollary 20 HurwiczλOWAWinner NPhard The reader wonder case Hurwiczλ OWA obtain NPhardness inapproximability The reason added dummy candidate easy ﬁnd winner set nonnegligible utility In fact general property Hurwiczλ OWA approximation algorithm constant approximation ratio This shows OWAs nonincreasing possible ﬁnd positive approximation results later argue approximation fully satisfying Proposition 21 Let A βapproximation algorithm 1bestOWAWinner A λ βapproximation algorithm HurwiczλOWAWinner Proof Let consider instance I H HurwiczλOWAWinner goal pick set K items We construct instance I 1 identical I H 1bestOWA run algorithm A I 1 The algorithm outputs set W w 1 w K βapproximate solution I 1 We claim W λβapproximate solution I H Let W H w H 1 w H ﬁrst note following holds recall cid7x optimal solution I H let W 1 w 1 notation sorted sequences K 1 w 1 K optimal solution I 1 We uHurwiczλ ut W H cid9 ncid2 λu i1 iw H 1 1 λu cid10 ncid2 i1 iw H K u iw H 1 ncid2 i1 u iw 1 1 u1best ut W 1 In effect u1best holds ut W 1 uHurwiczλ ut W H Now easy verify W fact set K items uHurwiczλ ut W ncid2 cid6 i1 λu iw 1 1 λu cid7 iw K λ ncid2 i1 u iw 1 λu1best ut W Finally combining inequalities fact W βapproximate solution 1bestOWAWinner uHurwiczλ W λu1best ut ut This completes proof cid2 W λβu1best ut W 1 λβuHurwiczλ ut W H By Algorithm 1 general case PTAS Skowron et al 55 1bestOWAWinner Bordabased utilities following corollary Corollary 22 1 There algorithm HurwiczλOWAWinner restrictions utility functions achieves ap proximation ratio λ1 1 e 2 For positive cid9 algorithm HurwiczλOWAWinner case Bordabased utilities achieves approximation ration λ1 cid9 206 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 Nonetheless Corollary 22 bittersweet taste In essence says instead Hurwiczλ OWAs use 1best OWAs If wanted use Hurwiczλ OWAs important reason approximation result suﬃcient Yet different perspective interpret Corollary 22 suggesting important reason unlikely exist large values λ Nonetheless idea simpler OWA instead complex lead intriguing results Based approach PTAS OWAWinner family OWAs similar K best OWAs restriction necessary defeat relation MaxCover problem precludes arbitrarily good approximation algorithms Theorem 23 Consider nonincreasing OWA α α cid5α1 αK cid6 Let I instance αOWAWinner seek winner set size K An optimal solution instance K bestOWA K i1 αiK α1approximate solution I cid3 Proof Let I instance αOWAWinner described statement theorem let W optimal solution let W optimal solution instance K bestOWA Note W optimal solution K number constant OWA β cid5α1 α1cid6 We claim following inequalities hold uα ut deﬁned respect instance I u cid3 β ut deﬁned respect instance I β OWA cid3 K i1 αi K α1 The second inequality holds W optimal solution I OWA β To ﬁrst inequalities hold let focus agent The inequality simpler prove ﬁrst K i1 αi K α1 K i1 αi K α1 uα utW β utW uα utW β utW cid3 1 u Let u gets W utility β cid3 k utilities nonincreasing order agent items W α cid3 K i1 α1u Thus utility Since 1 K αi α1 utility α equal K i1 αi u We prove ﬁrst inequality Let u1 u K utilities nonincreasing order agent u u items W Our goal α1u1 αK u K cid3 K i1 αi K α1 α1u1 cid3 K i1 αi K α1 α1u K cid3 K i1 αi K u1 cid3 K i1 αi K u K This inequality equivalent K α1u1 K αK u K Kcid2 i1 αi u1 Kcid2 i1 αi u K equivalent cid3 u1K α1 K i1 αi u K K αK cid3 K i1 αi 0 We rewrite lefthand inequality cid3 cid3 u1 u2K α1 u K 1 u K cid3 K i1 αi u2 u3K α1 K α2 2 cid3 cid3 K 1 i1 αi u K j1 K α j K 1 K K i1 αi cid3 K j1 K α j K K i1 αi We claim summand expression nonnegative Since u1 u K nonincreasing sequence nonnegative utilities j 1 j K 1 u j u j1 nonnegative u K Now ﬁx t 1 t K We cid3 t j1 K α j t cid3 K i1 αi cid3 t j1K tα j t Kcid2 tK tαt t cid3 K it1 αi αi tK tαt tK tαt 0 This completes proof cid2 it1 As consequence theorem immediately following result Theorem 24 Let f N N function computable polynomialtime respect value argument f K oK There PTAS K f K bestOWAWinner P Skowron et al Artiﬁcial Intelligence 241 2016 191216 207 Algorithm 2 An algorithm nonincreasing OWAs ﬁrst cid7 entries nonzero case β γ nonﬁnicky utilities Notation cid10 map giving number free slots agent ﬁrst agent cid10i cid7 rank j cid23b A u jb u jacid23 gives rank item according agent x γ m S 1 K cid23 j cid10 j 0 rank j xcid23 argmaxa AS foreach j j cid10 j 0 rank j x cid10 j cid10 j 1 S S return S Proof Let ﬁx cid9 0 cid9 1 We polynomial time cid9approximation algorithm K f K best OWAWinner Since f K oK value Kcid9 K Kcid9 holds K f K cid9 If input instance ﬁnd winner set size K K Kcid9 simply run polynomialtime algorithm K bestOWA Otherwise seek winner set size Kcid9 try subsets items size K Since case K bounded constant algorithm runs polynomial time cid2 K While Theorem 24 suffers criticism Corollary 22 interesting result especially contrasted Theorem 15 Theorem 24 says PTAS αOWAWinner OWA family cid51 1 0cid6 Theorem 15 suggests unlikely constantfactor approximation algorithm αOWAWinner OWA family cid50 1 1cid6 Even OWA families similar fact nonincreasing makes huge difference terms approximability OWAWinner 7 Approximation nonﬁnicky utilities One greatest sources hardness OWAWinner problem rely proofs agents high utilities small subsets items low utilities remaining ones consider approvalbased utilities agent approves relatively items In cases intuitively ﬁnd perfect solution agents badly On hand Bordabased utilities agent items possible provide agent notmuchworse ones utilities decrease linearly Indeed Skowron et al 55 observation PTAS ChamberlinCourant rule Here strong generalization result applies nonﬁnicky utilities OWA families include ﬁxed k kmedian kbest geometric progression OWAs We focus case OWA vectors constant number cid7 positions nonzero β γ nonﬁnicky utilities β γ 0 1 In case Algorithm 2 generalization algorithm Skowron et al 55 achieves good approximation ratio The idea algorithm follows To pick K items proceeds K itera tions iteration introduces new item winner set For agent considers x γ m items highest utilities given iteration picks item maximizes number agents 1 rank items highest x utilities 2 free slots agent free slot sofarselected winners fewer cid7 utilities x highest ones agent Before prove algorithm works let consider following example Example 6 Let items agents Example 3 Example 4 Algorithm 1 Let K 3 let OWA vector α 2 1 0 We cid7 2 nonzero entries α We treat agents utilities 08 05nonﬁnicky ones Before execute algorithm convenient compute rank function4 a1 a2 a3 a4 a5 a6 rank1 0 rank2 3 rank3 2 0 4 5 2 5 0 3 0 4 4 2 0 5 0 3 Now start execute algorithm We x γ m 3 initially agent free slots In ﬁrst iteration algorithm pick a1 a3 a5 agents rank 4 Note best rank 0 1 rank 1 item common approach This simpliﬁes technical discussion 208 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 3 item agent ranks 3 Let assume algorithm picks a1 table information slots agents iteration In second iteration agents free slots algorithm pick a3 a5 Let assume picks a3 In effect Agents 1 3 longer free slots ﬁnal iteration algorithm picks items Agent 2 assigns rank lower 3 a4 a5 a6 Let assume picks a4 Below contents agents slots executing iteration Agent 1 Agent 2 Agent 3 Slot 1 Slot 2 Slot 1 Slot 2 Slot 1 Slot 2 After iteration 1 a1 After iteration 2 a1 After iteration 3 a1 a3 a3 a4 a1 a1 a1 a3 a3 The algorithm outputs set S a1 a3 a4 It interesting different set returned Algorithm 1 Example 4 returned set W a1 a4 a5 This set slightly better output Algorithm 2 achieves aggregated utility 84 opposed 83 Theorem 25 Fix positive integer cid7 let α nonincreasing OWA ﬁrst cid7 entries nonzero If agents β γ nonﬁnicky utilities γ m cid7 Algorithm 2 polynomialtime β1 exp γ K cid7 approximation algorithm αOWAWinner Proof Consider instance I αOWAWinner n agents m items seek winner set size K Let x γ m We use OWA agents total utility winner set W depends agents utilities cid7 items W We introduce notion agents free slots follows Initially agent cid7 free slots Whenever agent j free slot algorithm selects item agent j item x items highest utilities starts occupying free slot j After item selected j free slot cid5 cid5 1 x cid7m Let F denote set agents free slots iteration There ni Let ni denote total number free slots agents ith iteration algorithm Naturally cid4 Indeed inequality true 0 Let assume true n0 cid7n We induction ni cid7n cid4 ni cid7n 1 x cid7 cid7m agents For j F let S j number js topx items included solution If j F s free slots S j x cid7 s Thus cid7 By pigeonhole principle exists cid7m agents F Thus 1th iteration algorithm item topx items ni x total number free slots 1 x cid7m ni1 ni ni x cid7m S j ni x cid7 ni cid7 1 x cid7m cid7i1 cid7n ni ni x jF cid3 cid7 cid6 cid6 The number free slots iteration nK cid7n cid5 cid4 1 x cid7m cid4 cid5 K cid7n 1 γ cid7 K cid7n exp γ K cid7 cid6 cid7 Thus number occupied slots cid7n cid7n exp γ K agent βumax umax maximal utility agents assigns item cid7 Every item occupies agents slot utility It remains assess OWA coeﬃcients utilities items solution If agent utility uiacid10 uia item uia taken coeﬃcient αp p 1 solution item uiacid10 taken coeﬃcient αp1 So exist 1 cid7 occurrences items utilities taken coeﬃcient α1 By repeating reasoning remaining occurrences items solution α nonincreasing total utility agents βumaxcid7n cid7n exp γ K cid7 i1 αi cid3 βumaxn1 exp γ K cid7 i1 αi approximation ratio cid2 cid7 i1 αi Since solution utility higher numax cid7 cid7n cid7n exp γ K cid7 1 cid7 cid3 cid3 cid10 cid7 As consequence good approximation guarantees case Bordabased utilities Recall W Lamberts W function function x R satisﬁes equation x WxeWx Wx O logx Corollary 26 Fix positive integer cid7 let α nonincreasing OWA ﬁrst cid7 entries nonzero Assume agents cid6 cid4 1 2WK cid7 cid7 Bordabased utilities With x mW K Algorithm 2 approximation algorithm αOWAWinner cid7 cid5 K cid7 K cid7 cid6 cid7 Proof Let note Borda utilities lowing approximation ratio equality follows deﬁnition Wx K cid7 1 WK cid7 WK cid7 K cid7 nonﬁnicky By applying Theorem 25 fol P Skowron et al Artiﬁcial Intelligence 241 2016 191216 209 Fig 2 The approximation ratios Algorithm 2 nonincreasing OWA cid7 coeﬃcients greater zero β γ nonﬁnicky utilities The lines Figures b depict relations parameters β γ given ﬁxed ratio K cid7 lead approximation bound The lines Figures c d depict relations parameter γ ratio K cid7 given ﬁxed value parameter β lead approximation bound approx ratio cid9 cid9 cid9 1 WK cid7 K cid7 1 WK cid7 K cid7 1 WK cid7 K cid7 This completes proof cid2 cid10 cid6 1 exp cid7 K WK cid7 K cid7 cid7 cid10 cid10 cid9 1 exp WK cid7 cid9 1 2WK cid7 1 WK cid7 K cid7 K cid7 cid10 cid10 The corollary follows directly Theorem 25 noting case m items kapproval utilities case agent approves exactly k items 1 k m nonﬁnicky utilities Corollary 27 Fix positive integer cid7 let α nonincreasing OWA ﬁrst cid7 entries nonzero Assume kapproval cid6 1 exp utilities agents Algorithm 2 approximation algorithm αOWAWinner cid7cid7 cid6 kK cid7m Approximation ratio Algorithm 2 particularly good K large compared cid7 This teresting case small K ﬁnd optimal solutions bruteforce search combining approaches leads PTAS Theorem 30 Nevertheless Algorithm 2 gives satisfactory approximation guarantees Fig 2 depicts classes nonﬁnicky utilities ﬁxed ratio K cid7 Algorithm 2 guarantees appropriate approximation ratios Parts b ﬁgure relation β γ satisfy obtain particular approximation ratio given value K cid7 satisﬁed Algorithm 2 achieve particular approximation ratio 1 γ nonﬁnicky utilities d shows relation 08 γ nonﬁnicky utilities cid7 Part c shows relation value γ ratio K Theorem 25 generalized case OWAs nonincreasing achieving slightly weaker approxima tion ratio 210 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 Lemma 28 Consider set N n agents set A m items agents rank items preferred ones preferred ones Let K p t positive integers K m p K t p Let x γ p m There cid7cid7 cid6 cid6 γ K 1 exp agents polynomialtime algorithm ﬁnds collection C K p items n p2 rank member C positions t 1x 1 tx Proof To lemma holds suﬃces analyze proof Theorem 25 1bestOWA 1 γ utilities seeking winner set size K positions 1 x x 1 2x segment x positions agents preference orders cid2 p nonﬁnicky p We note proof works equally irrespectively consider Theorem 29 Fix positive integer cid7 let α family OWAs nonzero entries cid7 positions There polynomialtime β approximation algorithm αOWAWinner case β γ nonﬁnicky utilities 1 cid7 exp cid7cid7 cid6 cid6 γ K cid72 Proof Consider input instance I αOWAWinner set N n agents set A m items seek winner set size K Let α cid5α1 αcid7 0 0cid6 OWA instance We set x γ cid7cid7 cid6 γ K cid72 cid6 1 exp Our algorithm proceeds cid7 iterations We set N0 N n0 n In ith iteration 1 cid7 algorithm operates follows Using algorithm Lemma 28 p cid7 ﬁnd set Ai K cid7 items ni1 agents set Ni1 rank items positions 1x 1 ix preference orders Strictly speaking setting agents preference orders utility values For agent form preference order sorting items decreasing order utilities breaking ties arbitrarily We let Ni set agents set ni cid23Nicid23 Finally set cid7 W i1 Ai return W set winners easy W contains K items K contains fewer K items supplement K cid23W cid23 arbitrarily chosen ones By construction algorithm agents set Ncid7 ranks cid7 items set W positions worse cid7x γ m Thus agent assigns item utility equal βumax Consequently total utility agents set N derive solution W cid15 cid7 m cid16 cid17 cid7cid2 i1 ncid7 αi βumax This 1 cid7 agents set Ncid7 derives utility αiβumax item ranks ith best items W By construction algorithm cid9 cid9 cid9 cid10cid10 cid7 ncid7 n 1 exp n 1 cid7 exp γ K cid72 cid9 γ K cid72 cid10cid10 Thus total utility obtained agents cid9 uα utW n 1 cid7 exp cid9 γ K cid72 cid10cid10 cid16 cid7cid2 cid17 αi βumax i1 Now maximum possible total utility agents upperbounded n algorithm approximation ratio β complete cid2 cid7 i1 αiumax It clear runs polynomial time proof 1 cid7 exp γ K cid72 cid7cid7 cid6 cid6 cid3 Based result obtain PTAS analogous setting Theorem 30 Fix value cid7 let α family OWAs nonzero values cid7 positions There PTAS αOWAWinner case Bordabased utilities ii 1 γ nonﬁnicky utilities assuming γ constant Proof For cid9 polynomialtime algorithm approximation ratio 1 cid9 Consider cid9 0 cid9 1 cid9 For instance I αOWAWinner There exists value Kcid9 K Kcid9 holds cid7 exp seek winner set size Kcid9 run algorithm Theorem 29 For remaining cases winnerset size bounded constant use bruteforce algorithm cid2 cid6 γ K cid72 cid7 We obtain PTAS OWAWinner geometric progression OWAs classes utilities In essence geometric progression suﬃces focus small number entries OWA vector This useful result Some scenarios Section 3 yield OWAs form P Skowron et al Artiﬁcial Intelligence 241 2016 191216 211 Corollary 31 Fix value p 1 There PTAS gprogpOWAWinner case Bordabased utilities ii 1 γ nonﬁnicky utilities assuming γ constant Proof Our goal algorithm given value cid9 cid9 0 polynomial time outputs 1 cid9approximate solution gprogpOWAWinner Let ﬁx value cid9 The idea proof truncate vector describing gprogp OWA consider cid7 nonzero items cid7 depends cid9 run algorithm Theorem 30 For given number t let St sum ﬁrst t coeﬃcients gprogp We St gprogpt gprogpt1 gprogp1 We ﬁx cid7 cid26logp 2 p K t p K t1 p K 1 p K t pt 1 p 1 cid9 cid27 Now consider ratio r Scid7S K p K cid7 pcid7 1 1 1 pcid7 p K p K cid7 pcid7 1 p K 1 r Scid7 S K 1 1 plogp 2 cid9 1 cid9 2 Intuitively inequality says 1 cid9 coeﬃcients 2 fraction total weight gprogp OWA concentrated ﬁrst cid7 Let gprogpcid7 denote OWA obtained gprogp replacing coeﬃcients indices greater cid7 0 Let A 1 cid9 2 approximation algorithm gprogpcid7OWAWinner From Theorem 30 know algo rithm exists It easy A 1 cid9approximation algorithm gprogpOWAWinner Indeed utility gprogpcid7 K element set W close utility W gprogp recall cid7x notation sorted cid3 cid7 j1 gprogp j u sequences inequality second line holds iw j cid6 cid7cid2 iw j ncid2 ncid2 Kcid2 Kcid2 cid3 cid7 gprogp ut u W gprogp j u iw j gprogp ju iw j cid7 g1 gprogpg u iwh cid3 cid7 j1 gprogp ju cid3 cid7 g1 gprogpg cid6 gprogph cid7 gprogp ju iw j 1 cid9 2 i1 ncid2 j1 cid7cid2 gprogp j u iw j i1 cid16 1 cid3 j1 hcid71 gprogph K cid3 cid7 g1 gprogpg cid17 hcid71 ncid2 cid7cid2 i1 j1 cid7 i1 j1 cid6 1 cid9 2 gprogpcid7 ut u W From W gprogpcid7 ut u W 1 cid9 2 u gprogp ut W This completes proof algorithm A returns 1 cid9 1 cid9 2 1 cid9 cid2 2 1 cid9 2 approximate solution gprogpcid7OWAWinner At ﬁrst tempting think results interesting case Bordabased utilities Yet recently Faliszewski et al 26 Theorem 13 shown natural settings approvalbased utilities apply To summarize section shown spite intrinsic hardness OWAWinner problem natural classes utilities OWA vectors problem solved accurately eﬃciently 8 Related work In section detailed overview research lines related work Weighing intrinsic values coeﬃcients function rank list course new Ordered Weighted Average operators extensively multicriteria decision making lesser extent social choice 34 vector values corresponds criteria MCDM agents social choice Also rankdependent expected utility RDEU 51 wellknown research stream decision theory starting point construction models explain Allais paradox given set possible consequences act contribution possible consequence agents RDEU function probability rank list consequences ordered decreasing probability While research streams use ranks modify contribution criterion agent possible consequence setting modify contribution items ﬁnal aim select optimal set items Since select criteria agents possible consequences obvious results apply aforementioned research ﬁelds 212 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 There recent pieces research use OWA operators context voting detailed discussion We chronological order Goldsmith et al 31 deﬁne rankdependent scoring rules Under standard positional scoring rules score candidate sum scores obtains voters score candidate obtains given voter depends rank voters preference order Rankdependent scoring rules generalize idea follows Instead simply summing scores given candidate apply OWA operator list scores got voters Thus rankdependent scoring rule deﬁned scoring vector function mapping ranks scores OWA operator Here OWAs replace sum operator aggregating scores coming different agents setting aggregate scores different objects ﬁxed agent Amanatidis et al 3 deﬁne family committee election rules multiple referenda based following principle Each voter speciﬁes preferred committee voters disutility committee given Hamming distance committee voters preferred Then disutilities voters aggregated OWA operator The committee lowest aggregated disutility wins In particular case sum operator obtained rule Bloc committee election rule case minimum obtained rule Minimax Approval Voting rule work Brams et al 12 deﬁnition works computational discussions 391545 They obtain number hardness approximability results compared work OWAs aggregating scores coming different agents Finally work Elkind Ismaïli 23 probably closest They study multiwinner elections use OWAs deﬁne generalizations ChamberlinCourant rule use OWAs aggregate utilities committee coming different agents The standard utilitarian ChamberlinCourant rule sums scores committee gets different voters egalitarian variant considers minimum score committee receives They generalize idea OWA operator effect obtaining spectrum rules utilitarian egalitarian variants They obtain number complexity results general case speciﬁc cases corresponding domain restrictions For reason preceding paragraphs results incomparable In pieces research discussed OWA operators aggregate scores utilities given candidates committees different agents different use OWAs Nonetheless exists highlevel common point approaches In cases rules corresponding sum scores minimum maximum scores known seen interesting somewhat extreme In cases OWAs rise interpolation extremities leading rules approaches likely interesting practice Let related works related streams research Several known settings recov ered particular cases general model In particular applies case ChamberlinCourant proportional representation rule 18 case Proportional Approval Voting 37 variants budgeted social choice model 414942 Computational complexity ChamberlinCourant rule ﬁrst studied Procaccia et al 50 pa rameterized complexity analyzed Betzler et al 7 complexity restricted domains studied Bet zler et al 7 Skowron et al 56 Yu et al 59 Clearwater et al 20 The ﬁrst approximation algorithm proposed Lu Boutilier 41 The results approximability extended directions Skowron et al 55 54 Proportional Approval Voting studied computationally axiomatically Aziz et al 54 Elkind Lackner 24 Group recommender systems work OConnor et al 47 ﬁrst approaches sur veys Jameson Smyth 33 Masthoff 43 aim recommending sets sequences items set television programs sequence songs group users based preferences group members Two main stream approaches developed survey Jameson Smyth 33 based construction average user preferences built aggregating preferences individuals group based producing individual recommendations aggregating Unlike approach recommends sets sequences proceeds single step enables ﬁnetuning contribution item users utility depending number better items user list The facility location problem ﬂ closely related 1bestOWAWinner In ﬂ goal minimize dissatisfaction agents instead maximizing utility satisfaction Although far exact solutions concerned formulations equivalent signiﬁcant difference quality approximation difference approximation guarantees maximization minimization formulations 1bestOWAWinner Borda utilities described Skowron et al 55 Some works focus general dissatisfaction functions 29 results established dissatisfactions corresponding distances satisfying triangle inequality 32 53 Also ﬂ goal minimize dissatisfaction worstoff agent egalitarian view The utilitarian version problem called kmedian 32 The parameterized complexity problem analyzed Fellows Fernau 29 The approximation algorithms include Chukad Williamson 19 Jain Vazirani 32 Shmoys et al 53 Interestingly localsearch algorithm best knowledge best known approximation algorithm capacitated version ﬂ 19 1 2 approximation algorithm maximizing nondecreasing submodular functions 46 OWAWinner nondecreasing utility functions The problem facility location case facilities vulnerable failures considered Swamy Shmoys 57 studied setting closely resembles applying cid7best OWA operators original facility location P Skowron et al Artiﬁcial Intelligence 241 2016 191216 213 kmedian problems We conclude interesting compare algorithms ﬂ kmedian different algorithms OWAWinner real preference data data PrefLib collected Mattei Walsh 44 9 Summary Our contribution threefold First proposed new model selection collective sets items This model appears general encompasses known frameworks applied domains committee elections group recommendation Second investigated computational feasibility model depending assumptions agents utilities choice OWA vector Table 1 Section 4 gives summary results We note results directly related OWA families appear settings Section 3 motivating force Third deﬁned nonﬁnicky utilities model settings agents relatively easy We believe nonﬁnicky utilities ﬁnd applications far framework Some results look negative especially case nonﬁnicky utilities positive However way results interpreted depends application domain In political elections highstake domains appealing view approximation algorithm new fullﬂedged voting rule enjoy desirable properties point works Caragiannis et al 1617 Skowron et al 55 Elkind et al 22 In particular shown election Sequential Proportional Approval Voting SPAV known long computational complexity theory developed actually greedy approximation algorithm Proportional Approval Voting PAV election rule interesting result se The reader wish consult paper Aziz et al 5 complexity approvalbased multiwinner rules Yet arguably reasonable use approximation algorithm good performance guarantee viewed approximation algorithm rule reasonable use heuristic search algorithm good approximation algorithm implies model political elections feasible number candidates small problematic deﬁne approximation algorithm new voting rule said On hand lowstake application domains include committee elections course group recommender systems perfectly reasonable case NPhardness inapproximability results discourage model For domains negative results tell resort heuristic search algorithms Developing algorithm interesting directions research Our work leads open problems In particular want strengthen approximation algorithms provide algorithms general cases provide inapproximability results Among problems particularly interesting regards approximability OWAWinner arithmetic progression family OWAs For case set results limited In particular provide PTAS arithmeticprogression OWAs nonﬁnicky particular Bordabased utilities Can K 2 median OWAs Can harmonic OWA Proportional Approval Voting 2 best OWAs K Acknowledgements The authors supported NCN grant 201309NST603661 AGH University grant 1111230124 statutory research Piotr Skowron supported ERCStG 639945 Jérôme Lang thanks ANR project CoCoRICoCoDec This work partially supported COST Action IC1205 Computational Social Choice Appendix A Proof Theorem 7 Theorem 7 K 1bestOWAWinner NPhard Bordabased utilities Proof As clear problem NP NPhardness We reduction Ver texCover previous proof exact deﬁnition Let I instance VertexCover problem consists undirected graph G V E V v 1 vm E e1 en positive integer K loss generality assume K 3 K 1bestOWAWinner Bordabased utilities follows We set From I construct instance I x 4nm 2K 4 cid10 let set items A V d1 d2 H H h1 hx d1 d2 sets dummy items need build appropriate structure utility proﬁle To build set agents N set y nx m 22 1 set N N E N1 N y N E e1 contains pairs agents correspond edges n e2 n G N1 N y contain pairs agents needed construction Speciﬁcally set Ni 1 y consists agents f 1 We refer agents set N1 N y dummy agents f 2 1 e1 1 e2 214 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 We agents utilities preference orders The agents set N E following preference orders Let ei E edge graph connects vertices v i1 v i2 Agents e1 e2 preference orders e1 e2 d1 cid12 d2 cid12 V v i1 v i2 cid12 H cid12 v i1 v i2 d1 cid12 d2 cid12 v i1 v i2 cid12 H cid12 V v i1 v i2 When set items preference order means set replaced items arbitrary 1 y ﬁxed preference order easily computable way Each agent f 1 f 1 d1 cid12 v 1 cid12 v 2 cid12 vm cid12 d2 cid12 h1 cid12 hx Similarly agent f 2 1 y preference order d2 cid12 vm cid12 vm1 cid12 v 1 cid12 d1 cid12 h1 cid12 hx f 2 Finally instance I cid10 seek set winners size K 2 This means use K 1bestOWA compute aggregated utility agent derives set winners This concludes description reduction clear polynomialtime computable Before prove We claim W contain correct let observations Let W optimal solution I items H For sake contradiction assume h H belongs W Since d1 d2 ranked ahead h preference order preference orders d1 ﬁrst d2 second utility ignored K 1bestOWA infer d1 d2 belong W obtain higher utility replacing h d1 d2 W Let v item V belong W If replace h v W total utility dummy agents increases 2 y Why Consider pair Ni 1 y dummy agents Item h lowest ranked member W f 1 We consider cases f 2 cid10 cid10 h lowestranked winner agents Ni Replacing h v means member h H W lowest ranked winner f 1 d1 lowest ranked winner f 2 obtain utility higher v item new lowestranked winner Thus total utility yielded agents increases d2 lowest ranked winner f 1 In case f 1 f 2 f 2 h lowestranked winner agent Ni In case agents rank v higher thank h replacing h v change lowestranked winner agents total utility increases Since y pairs agents total utility increases 2 y Since total utility agents N E lower 2nx m 22 2 y change total utility agents increases Thus contradiction conclude W contain agents H Next claim d1 d2 belong W We detailed argument d1 case d2 analogous For sake contradiction assume d1 belong W Let vk item W v j j k v j 1 y vk lowestranked winner W Thus belong W By assumptions agent f 2 replace vk d1 W utility agent f 2 change utility agent f 1 increase Further utility agent N E increase Thus replacing vk d1 increase total utility agents We reach contradiction conclude d1 member W An analogous argument shows d2 belongs W As result reasoning infer set winners consists d1 d2 K items V Whenever d1 d2 included set winners item H total utility dummy agents irrespective items V selected With observations answer input VertexCover instance yes sizeK 2 winner set I agents set N E yields total utility nxK 4 Let assume exists cover C I set C K vertices edge incident vertex C We winner set W C d1 d2 gives total utility agents e1 e2 1 n equal xK 4 Pick arbitrary 1 n let v i1 v i2 vertices connected obtains utility x item v i1 v i2 d1 d2 edge ei If v i1 v i2 belong C e2 obtains utility x item W v i1 v i2 This gives utility utility 4x total On hand e1 K x Altogether agents utility xK 4 If items v i1 v i2 v i1 belongs C obtains utility K 1x obtains utility 3x x item v i1 d1 d2 e1 e2 2x items d1 d2 K 1x K 1 members C e1 ranks positions Again agents utility xK 4 Thus total utility agents N E optimal solution nxK 4 cid10 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 215 cid10 e2 Assume W optimal solution I agents N E yields utility nxK 4 By previous discussion know W contains d1 d2 K members V We set C W d1 d2 Let ﬁx arbitrary 1 n Let v i1 v i2 vertices connected edge ei We observe W total utility x m 2K 4 mK To let z number items v i1 v i2 agents e1 included C note 1 upper bound disregard OWA use 2 x m 2 items upperbound utility derived item x m 2 3 altogether items W ranked K 2 z topm 2 positions e1 upperbound total utility K 2 zx m 2 2 z upperbound total utility 2 zx m 2 4 items W ranked topm 2 positions e2 upperbound total utility zm K z bottomm positions e2 z bottomm positions e1 upperbound total utility K zm When sum upper bounds x m 2K 4 mK However argument need upper bound total utility e1 assumption v i1 v i2 belongs C In case upper bound x m 2K 3 mK We obtain way previous bound note K 1bestOWA utility derived e1 account K 1 agents topm 2 positions preference order e1 Based upper bounds total utility derived W agents N E nxK 4 C correspond cover edges G To end consider situation edge ei vertices connects belongs C By upper bounds case total utility agents N E e2 K 3x m 2 n 1K 4x m 2 nmK x m 2K 3 n 1K 4 nmK x m 2nK 4 1 nmK xnK 4 nm 2K 4 x m 2 nmK xnK 4 025x x m 2 nmK xnK 4 The lines follow directly deﬁnition x So assumption C solution I obtain total utility agents N E lower nxK 4 contradicts assumption Thus C correct solution I I yesinstance VertexCover This completes proof cid2 References 1 P Alimonti V Kann Some APXcompleteness results cubic graphs Theor Comput Sci 237 12 2000 123134 2 N Alon S Arora R Manokaran D Moshkovitz O Weinstein Inapproximability densest ksubgraph average case hardness Technical report 2011 3 G Amanatidis N Barrot J Lang E Markakis B Ries Multiple referenda multiwinner elections hamming distances complexity manip ulability Proceedings AAMAS2015 May 2015 pp 715723 4 H Aziz M Brill V Conitzer E Elkind R Freeman T Walsh Justiﬁed representation approvalbased committee voting Proceedings AAAI2015 2015 pp 784790 AAMAS2015 May 2015 pp 107115 5 H Aziz S Gaspers J Gudmundsson S Mackenzie N Mattei T Walsh Computational aspects multiwinner approval voting Proceedings 6 N Bansal M Sviridenko The Santa Claus problem Proceedings STOC2006 ACM Press July 2006 pp 3140 7 N Betzler A Slinko J Uhlmann On computation fully proportional representation J Artif Intell Res 47 1 May 2013 475519 8 A Bhaskara M Charikar E Chlamtac U Feige A Vijayaraghavan Detecting high logdensities on14 approximation densest ksubgraph Proceedings STOC2010 2010 pp 201210 Proceedings SODA2012 2012 pp 388405 9 A Bhaskara M Charikar A Vijayaraghavan V Guruswami Y Zhou Polynomial integrality gaps strong SDP relaxations densest ksubgraph 10 S Bouveret J Lang A general elicitationfree protocol allocating indivisible goods Proceedings IJCAI2011 2011 pp 7378 11 S Brams M Kilgour Satisfaction approval voting MPRA paper University Library Munich Germany 2010 12 S Brams M Kilgour R Sanver A minimax procedure negotiating multilateral treaties R Avenhaus W Zartman Eds Diplomacy Games Springer 2007 pp 265282 13 S Brams D King Eﬃcient fair division help worst avoid envy Ration Soc 17 4 2005 387421 14 S Brams A Taylor The WinWin Solution Guaranteeing Fair Shares Everybody WW Norton Company 2000 15 J Byrka K Sornat PTAS minimax approval voting Proceedings WINE14 Dec 2014 pp 203217 16 I Caragiannis J Covey M Feldman C Homan C Kaklamanis N Karanikolas A Procaccia J Rosenschein On approximability Dodgson 17 I Caragiannis C Kaklamanis N Karanikolas A Procaccia Socially desirable approximations Dodgsons voting rule ACM Trans Algorithms 10 2014 18 B Chamberlin P Courant Representative deliberations representative decisions proportional representation Borda rule Am Polit Sci Young elections Artif Intell 187 2012 3151 Paper 6 Rev 77 3 1983 718733 19 F Chudak DP Williamson Improved approximation algorithms capacitated facility location problems Math Program 102 2 Mar 2005 207222 20 A Clearwater C Puppe A Slinko Generalizing singlecrossing property lines trees intermediate preferences median graphs Proceedings IJCAI2015 July 2015 pp 3238 21 B Debord An axiomatic characterization Bordas kchoice function Soc Choice Welf 9 4 1992 337343 216 P Skowron et al Artiﬁcial Intelligence 241 2016 191216 22 E Elkind P Faliszewski P Skowron A Slinko Properties multiwinner voting rules Proceedings AAMAS2014 May 2014 pp 5360 23 E Elkind A Ismaïli OWAbased extensions ChamberlinCourant rule Proceedings Fourth International Conference Algorithmic Decision Theory Sept 2015 pp 486502 24 E Elkind M Lackner Structure dichotomous preferences Proceedings IJCAI2015 July 2015 pp 20192025 25 P Faliszewski P Skowron A Slinko N Talmon Committee scoring rules axiomatic classiﬁcation hierarchy Proceedings IJCAI2016 2016 26 P Faliszewski P Skowron A Slinko N Talmon Multiwinner analogues plurality rule axiomatic algorithmic views Proceedings AAAI2016 2016 pp 482488 27 U Feige A threshold ln n approximating set cover J ACM 45 4 1998 634652 28 U Feige S Kogan Hardness approximation balanced complete bipartite subgraph problem Technical report 2004 29 MR Fellows H Fernau Facility location problems parameterized view Discrete Appl Math 159 11 July 2011 11181130 30 M Garey D Johnson Computers Intractability A Guide Theory NPCompleteness WH Freeman Company 1979 31 J Goldsmith J Lang N Mattei P Perny Voting rank dependent scoring rules Proceedings AAAI14 2014 pp 698704 32 K Jain V Vazirani Approximation algorithms metric facility location kmedian problems primaldual schema Lagrangian relax ation J ACM 48 2 Mar 2001 274296 33 A Jameson B Smyth Recommendation groups The Adaptive Web 2007 pp 596627 34 J Kacprzyk H Nurmi S Zadrozny The role OWA operators uniﬁcation tool representation collective choice sets Recent Developments Ordered Weighted Averaging Operators 2011 pp 149166 35 T Kalinowski N Narodytska T Walsh A social welfare optimal sequential allocation procedure Proceedings IJCAI13 2013 pp 227233 36 S Khot Ruling PTAS graph minbisection dense ksubgraph bipartite clique SIAM J Comput 36 2006 10251071 37 M Kilgour Approval balloting multiwinner elections J Laslier R Sanver Eds Handbook Approval Voting Springer 2010 pp 105124 38 R Ladner On structure polynomial time reducibility J ACM 22 1 1975 155171 39 R LeGrand E Markakis A Mehta Some results approximating minimax solution approval voting Proceedings AAMAS2007 May 2007 pp 11931195 40 T Lu C Boutilier The unavailable candidate model decisiontheoretic view social choice Proceedings ACMEC2010 2010 pp 263274 41 T Lu C Boutilier Budgeted social choice consensus personalized decision making Proceedings IJCAI2011 2011 pp 280286 version appeared COMSOC10 Handbook Springer 2010 pp 677702 42 T Lu C Boutilier Valuedirected compression largescale assignment problems Proceedings AAAI2015 2015 pp 11821190 43 J Masthoff Group recommender systems combining individual models F Ricci L Rokach B Shapira P Kantor Eds Recommender Systems 44 N Mattei T Walsh Preﬂib library preferences httpwwwpreﬂiborg ADT Lecture Notes Computer Science vol 8176 Springer 2013 pp 259270 45 N Misra A Nabeel H Singh On parameterized complexity minimax approval voting Proceedings AAMAS2015 May 2015 pp 97105 46 G Nemhauser L Wolsey M Fisher An analysis approximations maximizing submodular set functions Math Program 14 1 December 1978 265294 47 M OConnor D Cosley J Konstan J Riedl Polylens recommender groups user Proceedings ECSCW2010 2001 pp 199218 48 W Ogryczak T Sliwi nski On solving linear programs ordered weighted averaging objective Eur J Oper Res 148 1 2003 8091 49 J Oren B Lucier Online budgeted social choice Proceedings AAAI2014 AAAI Press July 2014 pp 14561462 50 A Procaccia J Rosenschein A Zohar On complexity achieving proportional representation Soc Choice Welf 30 3 April 2008 353362 51 J Quiggin Generalized Expected Utility Theory The RankDependent Model Kluwer Academic Publishers 1993 52 P Raghavendra D Steurer Graph expansion unique games conjecture Proceedings STOC2010 2010 pp 755764 53 D Shmoys É Tardos K Aardal Approximation algorithms facility location problems extended abstract Proceedings STOC1997 1997 54 P Skowron P Faliszewski Approximating MaxCover problem bounded frequencies FPT time Proceedings AAAI2015 Jan 2015 55 P Skowron P Faliszewski A Slinko Achieving fully proportional representation approximability results Artif Intell 222 2015 67103 56 P Skowron L Yu P Faliszewski E Elkind The complexity fully proportional representation singlecrossing electorates Theor Comput Sci 569 57 C Swamy DB Shmoys Faulttolerant facility location ACM Trans Algorithms 4 4 2008 58 R Yager On ordered weighted averaging aggregation operators multicriteria decisionmaking IEEE Trans Syst Man Cybern 18 1 1988 183190 59 L Yu H Chan E Elkind Multiwinner elections preferences singlepeaked tree Proceedings IJCAI2013 Aug 2013 pp 265274 2015 4357 pp 425431