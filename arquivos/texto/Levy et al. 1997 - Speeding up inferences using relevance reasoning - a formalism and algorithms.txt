Artificial Intelligence 97 1997 83136 Artificial Intelligence Speeding inferences relevance reasoning formalism algorithms Alon Y Levy Richard E Fikes bl Yehoshua Sagiv cV2 B ATT Bell Laboratories 180 Park Ave Room A283 Florham Park NJ 07932 USA b KSL Stanford University Stanford CA 94305 USA c Department Computer Science Hebrew University Jerusalem Israel Received September 1995 revised May 1996 Abstract reasoning Irrelevance specific query Aside importance refers process reasons parts knowledge relevant irrelevant speeding inferences large knowledge bases relevance reasoning crucial advanced applications modeling complex physical devices information gathering distributed heterogeneous systems This article presents novel framework studying kinds irrelevance arise inference efficient algorithms relevance reasoning We present prooftheoretic framework analyzing definitions irrelevance The framework makes necessary distinctions different notions irrelevance important speeding inferences We querytree algorithm sound complete efficient algorithm automatically deriving certain kinds irrelevance claims Hornrule knowledge bases extensions Finally experimental results significant speedups orders magnitude obtained employing querytree inference 1997 Elsevier Science BV Keywords Relevance representation reasoning Metalevel reasoning Static analysis Horn rules Constraints Knowledge author Email Corresponding Email fikescsstanfordedu 2 Email sagivcshujiacil levyresearchattcom 00043702971700 PII SOOO43702 1997 Elsevier Science BV All rights reserved 9700049O base formance inference knowledge irrelevant Irrelevant engine query Consequently information 84 AL Levy et alArtiJicial Intelligence 97 1997 83136 1 Introduction Many inability future applications large amounts knowledge essential task In fact major obstacle process base exploiting specific knowledge knowledge Irrelevance domain irrelevant explicit form metalevel Artificial In order perform efficiently Intelligence AI domains having domain given query relevant able determine knowledge current AI systems ignore irrelevant information scaling systems Irrelevance reasoning reasons parts knowledge specific query automatically inspecting refers relevant knowledge reasoning irrelevanceclaims given user Irrelevance reasoning base opposed reasoning 374554 reason knowledge base reason important contexts Speeding inferences large knowledge bases It known AI systems degrades quickly size increases Two major sources inefficiency engines facts knowledge base In search solution knowledge considers facts inference spends significant Irrelevant distinctions representation A knowledge variety tasks Therefore accommodate detailed relations objects As result representation given task inefficient tasks leading reasoning base irrelevant effort pursuing useless solution paths designed domain refined likely complex conceptualization include base l Modeling complex physical devices Tasks diagnosis design simulation require model given physical device model depends heavily task detailed model intractable Therefore important 23246 relevant adequacy directly create model suited given query determine aspects requires given query able automatically reasoning 11221 However l Large scale distributed information systems Current communications enables accessing Internet easy access information At moment body work AI goal designing sources information high 3 133385 1606590 ability given query posed user automatically providing determine A key issue needs technology remote sources information browsing A growing integrating multiple 4 addressed systems architectures level querying sources relevant facilities information sources freeing user need know specific information Irrelevance reasoning plays important 711 belief revision applications relevance reasoning relevance 351 learning speed inferences role nonmonotonic 736 306674 The focus paper large knowledge bases The reasoning reasoning discussed briefly Section 6 AY Levy et al Artcial Intelligence 97 1997 83136 85 In order relevance reasoning viable method controlling inference issues need irrelevant detecting parts knowledge base addressed First develop eficient query The algorithms vary consist certain parts rules facts knowledge base possibly irrelevance claims supplied irrelevant knowledge reasoning questions need formal automatically input knowledge base metaclaims ground user Second tradeoff metalevel understanding relevance baselevel possible meanings irrelevance reasoning addressing domain As basis parts utility removing integrity constraints investigate algorithms claims research contexts The notion irrelevance appeared AI related fields However time researchers use term informally Formal analyses 47 J 1950 irrelevance discussed philosophers 161 1978 Gardenfors Catnap thrust analyses notions irrelevance formal definition Most try capture commonsense work focuses formulating finding properties notion irrelevance work concerned satisfy definitions use irrelevance detecting speeding inference design algorithms properties Consequently early 1921 Keynes 341 The main irrelevance Within AI notion irrelevance investigated 53 212370 control reasoning In context logical knowledge bases Subramanian meyer automatically irrelevance left largely open consequently effective way investigated deriving inference claims utility irrelevance relevance reasoning formal definitions irrelevance However context probabilistic Bayesian belief networks 881 recently Lake issues reasoning applied This article presents framework studied We present efficient algorithms results experiments In particular following contributions definitions irrelevance irrelevance automatically validate utility relevance deriving claims reasoning deriving framework distinctions analyzing necessary l We present definitions irrelevance prooftheoretic irrelevance claims vary space The framework encompasses definitions notion We properties yielding space possible definitions irrelevance sheds new light previous definitions irrelevance We framework makes problem automatically irrelevant facts l We consider problem automatically knowledge bases extensions tree purpose We identify querytree provides sound complete irrelevance claims Strong strongly especially useful irrelevance claims Hornrule present novel tool called query claims inference procedure removing practice First irrelevance claims derived inspecting facts guaranteed slow inference engine important class strongirrelevance claims utility removing The querytree properties claims property significantly address irrelevant speed deriving needed 86 A E Levy et al Artijicial Intelligence 97 1997 83136 irrelevance semantics interpreted predicates appearing deriving facts Second small knowledge base inspecting ground considers order predicates key role applications querytree programs provides predicates l We distinguished sort predicates completeness experimental important rules knowledge base claims querytree knowledge base interpreted predicates play feature querytree The logic previous work area viewed tool partial evaluation constraint 156785 presence recursive rules interpreted Since results significant obtained employing ways First inference The determine facts ir query Based determination create specialized database class facts possibly given class use ground querytree speedups relevant indices inference facts significantly based observation database ders magnitude querytree relevant indices queries Given query fetching ground The second use querytree sequences rule applications query Therefore use querytree follow sequences The experiments querytree ligible compared size knowledge noted thogonal rule subgoal ordering bined tabulation validation presented follow experiments methods savings achieved Furthermore develop optimal strategies achieved employing KB create preprocessing methods base grows savings methods search indicating 42841 prune speeding inference tells exactly yield solutions lookups engine specialized guide inference cost building neg indices savings grow methods scale It space com experimental use runtime bindings querytree searching 8993 Therefore validating Organization paper organized deriving The paper space definitions follows Section 2 describes compares properties definitions Section 3 considers irrelevance prob querytree lem automatically algorithm Section 5 describes querytree speed inferences results Section 6 briefly describes applications framework experimental automatic formation remarks related work Section 8 contains concluding claims Section 4 describes systems Section 7 discusses database query optimization creation abstractions global irrelevance 2 Analyzing irrelevance In section consider means fact irrelevant query We begin introducing terminology paper AYS Levy et alArtcial Intelligence 97 1997 83136 87 2 I Preliminaries In discussion assume theory domain represented formulas formulas inference mechanism firstorder predicate calculus tuples variables inference letters variables bars employs letters predicate names uppercase x We assume knowledge base A facts closed We use lowercase denote set sound closed pi E A cri logical axiom LYE result applying inference elements subgoals ai The set formulas base derivation set connected rules A derivation D closed formula Cc A sequence LYI Y 1 n rule pi The formulas ai air said represents support oi denoted Base 0 The set BaseD base We consider derivations knowledge JJ D subgoals ai appear prior subgoal called relation yj A query represented formula IJ J _ tuple free variables formula free variables query R _ When qR tuple omit 8 denote free variables true derivation eR false free A resulting closed formulas set closed answer When ri contains variables derivable answer The query derivations containing derivation base denote set derivations D A given knowledge set sets derivations A answer By slight abuse set D E D d contains derivation notation denote De A simply constants mentioned A 3 case phrase derivation query A set assignments rl free variables answer answer refers 22 Dening irrelevance Our goal express claims form irrelevant A To essential subject irrelevance fact set facts Other refinements Broadly predicates derive claims irrelevance reason automatically query respect knowledge base claims formal definition 4b called case claim In paper consider 561 irrelevance The In 163447 notion irrelevance formal definition irrelevance objects Section 6 irrelevance subjects discussed briefly possible check relation arguments analyzing approaches approach pursued philosophers try capture commonsense approach consider formal definition definitions Alternative return unknown firsf variable binding Note finite query possible For example 4 w derivable case closedformula query case query free variables return distinctions affect discussion satisfies query However number possible assignments free variables finite set answers 88 AE Levy et al ArtQicial Intelligence 97 I 997 83136 intuitive notion irrelevance In consider natural satisfies properties article pursue second approach arises problem specifically solving interested inference methods irrelevance changes utility removing properties utilize claims automatically properties definitions irrelevance informative irrelevance For example interested focuses analyzing inference irrelevance In approach designing KB derived claims change irrelevant facts The following example illustrates Example 1 Consider courses following knowledge serve teaching assistants base describing students Yi attendClass x Y pass x Y r2 passExam X Y pass X Y t3 pass X Y A tookGrudCourse X canTA X Y r4 passX Y A Y 2 300 tookGrudCourseX gl attendClussFred 101 g passExamFred 101 g3 passExam Fred 20 1 g4 passExam Fred 30 1 Suppose want teaching assistant lOOlevel classes query qY cunTA Fred Y A Y 200 Fred qualified For given ground facts answer answer Y 101 query qY shall use q denote query canTA Fred 101 The query q derived gt g4 rules r1 r3 r4 gz g4 rules r2 r3 r4 Hence ground atoms gi g2 gs irrelevant differences derivation 200 Y 300 added retracted query As gi g2 To summarize answer derived query considered However claims Specifically gs facts form passExam Fred Y answers KB changing query derived remove derivation query facts irrelevant answers derived query derived facts irrelevant query More generally irrelevance facts query derivation answer There variants relevance irrelevance For q ground atom canTA Fred 301 entailed facts relevant consider rules derivation q To query canTA Fred 30 1 The atom passExum Fred 302 derivation KB derivation minimal answer sense g4 rules r2 r3 r4 need use ground atom passExum Fred 302 deemed irrelevant set ground atoms uses KB minimal fact KB Hence type irrelevance query consider AY Levy et alArtificial Intelligence 97 1997 83136 89 Finally rules irrelevant For example add rule passExamXY A Y 2 300 canTAXY irrelevant inference mechanisms considered ference 0 fewer rule applications needed answers derived However case rule speed rule derive answers Clearly approaches described framework provide way notion concept definitions examine mirror analysis irrelevance On hand commonsense ways On hand given formalization irrelevance inference However intended captures evaluated usefulness intuitive notions irrelevance As illustrated example emphasized analyzing analyzing consider irrelevance independent inspired notion speeding approach speeding inference commonsense taken single best definition irrelevance derivation properties definitions space Our space based For example define formula 4 irrelevant q contain 4 alternatively require contains 4 Therefore space possible definitions irrelevance investigate prooftheoretic participate metatheoretic KB possible derivations query Consequently able finer distinctions framework A detailed comparison Subramanians work appears analysis irrelevance derivations account irrelevance Her framework considers formulas investigating query In contrast Subramanian Subramanians ways formulas 88 described Section 7 derivation 15 23 A space dejinitions In section assume given query closed formula Extending definitions section query free variables straightforward Definitions space vary derivation ways defining derivation D query predicate DZ 4 D The following irrelevance CI Derivation axes In axis consider different single binary subject 4 given defining irrelevance irrelevance examples DZ defined l DZl D l DI24D l DIx D l DI44D 4 BaseD d D BaseD BaseD rb CI andseD v4 Definition DI requires DI2 stronger requires requires requires definitions 4 support set derivation D Definition D Definition DZ3 stronger e5 4 logical consequence formulas r logical consequence DZ summarized The relationship follows Buse D DZ4 90 AE Levy et alArtcial Intelligence 97 1997 83136 Proposition 2 D4 D D4 D D4 D D114 D Requiring DIqS D holds possible derivations query restrictive Therefore query require DZ r D possible derivations A consider subset A DA hold Formally given set VA second axis consider different subsets derivations require DZ qb D D A For example require DZqS D derivation As Section 3 consider example consider set derivations bounded resource constraint Dt A hold set minimal derivations definitions minimality hold derivations Given choice DI Vi A definitions irrelevance depending DI required hold derivations A derivation 27 A 4 Formally definition irrelevance space given follows Definition 3 Suppose given 1 A knowledge base A set formulas 2 A closed 3 A closedformula 4 A predicate DZ T D specifying formula 7 irrelevant formula 4 subject irrelevance query derivation D query 5 A subset Dt A set DA possible derivations I A By slight abuse notation usually denote 27A 2A simply DO A DI The formula CJ said weakly query Cc respect irrelevant DO denoted WZ IJ A DI VO DZ CJ D holds D E DoA The formula I said strongly irrelevant query respect A DI DO denoted SI 4 A DI DO DZqb D holds D E DJ A If De A strongly irrelevant derivable A formula 4 weakly In discussion want refer irrelevance set formulas Formally extending set formulas definition irrelevance DI define Definition 4 4i E If CJ set formulas DZ D holds DZ4i D holds The definitions strong weak claims It remain unchanged hold set knowledge bases For example state irrelevance useful context Hornrule knowledge bases want know rule irrelevant respect knowledge bases rules irrelevance 4 We consider ways quantifying set D A requiring DI 4 D holds I A D A In fact different ways quantifying axis space Here consider universal existential quantification percent derivations considered A E Levy et al Artificial Intelligence 97 1997 83136 91 Set derivations consider Minimal derivations support Minimal derivations loops All derivations Not derivation DI1 DI DI D14 Not derivation query Derivationirrelevance wrt single derivation DI Irrelevance I A space definitions Fig irrelevance The second irrelevance differ irrelevance The axis consists different definitions derivation strong considered Weak irrelevance axis consists set derivations way quantify 01 derivations chosen second axis different ground atoms We extend follows definitions sets knowledge bases Definition Cc respect respect Da function The definition 5 Let 2 set knowledge bases We 4 weakly 2 denoted WZ 4 2 DI DO 4 weakly irrelevant I irrelevant KB 2 WZ4 ADlVo holds A E Z note given KB A E 2 returns subset derivations D A strong irrelevance extended likewise The space definitions summarized lOl different kinds irrelevance q canTAFred g2 instead Consequently WZ gl q 012 PA The atom gs strongly Consequently SZgs q DI2 PA irrelevant derivation q use gt claims The atom gr weakly Fig 1 Going Example 1 query uses atom g2 q uses holds Similarly irrelevant q derivations holds strongly consider derivation q consider derivation irrelevance based DI3 q formulas derive q irrelevant The atom q1 cunTAFred 301 irrelevance based DI2 However atom q1 strongly derive 41 Finally suppose irrelevant q1 query If consider atom passExam Fred 302 strongly KB derivation q1 derive tookGradCourse Fred However set derivations 91 query irrelevant consider derivations Buse D minimal 92 A L Levy et al Artificial intelligence 97 I 997 83136 derive query passExam Fred 302 subset Buse 0 derivation q1 strongly irrelevant query 41 24 Properties definitions space When investigating irrelevance claims potential properties actual properties vary bit definition space One key property irrelevance claims derived automatically Sections 3 4 discuss property context definitions irrelevance Below summarize explain significance properties irrelevance claims practical speeding inference The proofs given Appendix A Theorem 6 Properties AOA8 listed hold given following notation l denotes query 4 1 42 denote formulas I 2 denote sets formulas l A denotes knowledge base l 2 21 X2 denote sets knowledge bases l Vo D 272 denote functions given KB A query JI return subset DA l DI DI DI denote definitions derivation irrelevance l Dll 012 DI3 D14 definitions derivation irrelevance beginning Section 23 AO If WI4 A DI1 I A holds formula 4 removed A changing answer That C E A A C denotes set formulas A q5 Al If DI D DI D derivations D E TJJ SI ik 2 DIrVo SIC 2 DIDo WI ik 2 DIDo WI 2 DI Do A2 If Dl A c 272 A knowledge bases A E 2 SICtkZDID2 SIZDIDI WItkZDIIh WtkZDI2 A3 The following true SI_ZDIVo WIqhZDIVo AE Levy er alArtcial Inrelligence 97 1997 83136 93 SIJZDIO WIZ2DIDo SIDIVo WqkDIDo AS If inference rules complete 41 z 42 DI Dt 014 WDIO W42ZDIDol SICIZDIDO W429ZDIo A6 If inference rules complete WIccIZDo wIDbvo sIDbDo W9XDbo A7 If DIl D A DI D 3 DIl u 02 D derivations D E VO SIQicIZDIo WQi2DIDo SIC1 U21cIZDIDo SIIZDIDO W2ZDIo WI U2kDIoj AS If A k r A consistent SIWPVADIA SIAU7DI2VA Property A0 guarantees remove irrelevant fact changing answer claims query Properties AlA4 affected result changing relative strength irrelevance parameters claims In general irrelevance claims commonsense appropriate analyzing subject query knowledge considered natural necessarily inferences Property A5 identifies equivalence claims closed negation Property A6 similar base Although preservation space preserved equivalence purpose speeding cases irrelevance claims preserved irrelevance notion irrelevance irrelevance shows equivalence 341 believe sense determine Property A7 shows irrelevance claims added This property use irrelevance impor tant needs claims certain ones falsify The property hold weak irrelevance knowledge base cause relevant vice versa In particular weak irrel formula irrelevant evance claims change knowledge base In contrast property A8 shows strong irrelevance claims change reason existing knowledge For weak irrelevance right left A8 hold added formulas logical consequences In general adding new formulas implication Utility removing irrelevant facts For definitions space irrelevant fact removed knowledge base affecting answer query property AO However 94 AK Levy et alArtcial Intelligence 97 1997 83136 irrelevant utility removing weakly systems framework considered weakly subject ongoing irrelevant speed inference opposite 69 exactly research 28304468 savings guaranteed fact subtle issue Removing fact add redundant In fact explanation based learning irrelevant The utility adding rules rules irrelevance For strong cases For example claim SZ d DZ2 D holds derivations query considered deriving d costs deriving consider A This property holds set derivations D A inference engine base database facts outset signifi guaranteed sections facts significant savings strongly derivations Z A situations possible finds In subsequent efficiently determine facts yields irrelevant query practice These savings come sources facts prunes branches search space removing l Removing irrelevant l Much cost reasoning large knowledge lookups Removing cantly l If updates reduces large number irrelevant ground cost lookup operation involve irrelevant facts KB answer query need recomputed 25 Encompassing previous defhitions space An important contribution irrelevance comparisons previously discussed We mention space definitions encompasses definitions literature enables comparisons Subramanian investigates definitions irrelevance instances weak irrelevance The main definition In framework 88 investigated definitions following Definition 7 Let 4 fact query A knowledge base The fact 4 said irrelevant exists subset Al A Al CJ Al b tb I denoted WI1 4 A This definition couched framework follows Observation 8 For complete set inference rules S Proof Suppose WZlq5 I A holds Therefore Al k ti Al 4 derivation D Al Clearly BaseD consequently WZ q5 A DZ3 De holds subset Al A 4 Conversely assume WZ qb A DZ3 D holds Consequently derivation D 9 A BaseD subset A entail 4 Consequently WI 4 qb A holds q5 The KB consisting BaseD 0 AY Levy et alArtijcial Intelligence 97 1997 83136 95 A variation definition described space WZ 4 A DI4 D Couching Subramanians shows definitions initions irrelevant ity addingup hold property A7 In particular space facts leads speeding inferences space overcome irrelevance identifies 87 formulated definitions limitations framework def removing forms monotonic definitions An important contribution framework sheds light problem In 63 10261 independent update problem detecting weak query detecting query problem independence formulated cally detecting WZ 5 A DZ1 problem based detecting relationship dence based algorithms details 5 revealed strong led development determining algorithms proposed irrelevance irrelevance However close deletion update equivalently specifi previous work independence framework inspection detecting restricted condition novel algorithms strong weak irrelevance detecting Identifying indepen 63 A definition irrelevance equivalent described Srivastava Ramakrishnan strong irrelevance DZ2 derivation 861 Their irrelevance applied set derivations definition equivalent Sagiv set minimal derivations query resolution 611 couched SZ 414 A DZ2 strategies Finally query discussed Levy framework SI 4 A DI2 D Dn The notion irrelevance definition example refutation strongly shown irrelevant removed Tautologies irrelevant shown 27 removed tautology elimination resolution weakly respect based removing clauses containing clauses For irrelevant pure DZl V respect DZl strategy literals6 391 3 Automatically deriving irrelevance claims A key question address article conditions Specifically interested claims derived automatically irrelevance problems First given knowledge base query specific definition irrelevance want query Second given irrelevance logically pertaining claims problem Later results facts knowledge base irrelevant irrelevance problem solve second claim want derive automatically follow We focus solving We examine edge bases question automatically consist set Horn deriving rules P set ground atomic irrelevance claims Horn knowl facts 5 As shown Section A2 close connection weak irrelevance problem query containment Using updates complete characterization relationship obtain addition independence characterization insertion updates independence deletion 6 A literal pure instance complementary instance literal knowledge base 391 96 AK Levy et alArtijicial Intelligence 97 1997 83136 G We distinguish EDB predicates appear pear consequents predicates P safe tecedent sets predicates derived predicates ground KB base predicates IDB predicates facts G The derived predicates rules For syntactic convenience assume The base predicates called ap base appears rules appear variable consequents appears rules We assume consequent Determining fact irrelevant possible derivations particular expensive goal relevance consider small stable portion knowledge base problem deriving answering irrelevance reasoning In order algorithms query requires query This usually establish properties impractical query defeats original practical claims examining preferably In applications rules KB Therefore address problem irrelevance facts Specifically address involving Hornrule knowledge bases bulk KB consists ground facts prone frequent changes set ground facts following knowledge bases differ ground question Let P set rules let set knowledge bases form P U G G set ground atomic facts base predicates The subjects irrelevance consider rule knowledge base set atomic facts query 14 atom possibly free variables Note ground queries expressed simply conjunctive knowledge base adding The question address set knowledge bases 2 query Cc respect 4 irrelevant queries disjunctions corresponding appropriate conjunctive predicates rules distinguishing rules ground It emphasized base predicates small stable extensions way distinguish example want derived predicates appear decide include treated base predicates The results algorithms straightforwardly facts known unknown parts knowledge base For rules predicates article extend KB _Zp Alternatively rules KBs 2p numerous instead consequents extensions cases include 31 Interpreted predicates A final key point analysis rules knowledge base deduced considering treatment interpreted predicates Many appear order predicates Example 1 g3 deemed strongly viewed ground analysis entails semantics claims base form P U G G set ground irrelevant interpreted facts knowledge base However derive facts predicate The extensions irrelevance interactions semantics interpreted predicates sort predicates For instance considering predicates enforcing hold knowledge satisfies semantics semantics interpreted predicates AZ Levy et alArrcial Intelligence 97 1997 83136 91 sort predicate extension c language L free variables XI subset base predicates formula literals constraint formula involves A V 7 For example Formally distinguish constraints predicate constraint predicates A constraint expressing cal connectives constraint 100 numbers A formula viewed set unary denotes note variables ventions The standard Xl cF P Y IsiGn describing tuples Xi corresponds relation constraint Y denote containing satisfying X note possibly infinite constraints formula form constraint formula formula predicates knowledge base language L logi cl evenX A X X relation R X1 X expressed c For example R 100 To integers greater c variables applies use following ith argument formula c substituting R The expression x Xi We assume following properties constraint predicates formulas cl 2 possible Closure Given express The join R R _ A projection R relation consisting subset arguments effectively construct formulas R7 A selection consisting aij R j columns R relation tuples R columns j equal A selection uicRc column R c constant formulas cl 2 decidable R R language 13 Equivalence Given Satisfiability Given formula c decidable R nonempty Finiteness Let C finite set constants finite set formulas fixed n constants Closure property nonequivalent language C n free variables operators language L let F discussed F create finite number formulas n fewer C Then applications free variables formulas The Closure condition guarantees perform conjunction language The second conditions constraints The Finiteness variables create finite number nonequivalent case Finiteness constraint guarantees given set constraints condition hold The procedures basic manipulations selection identify projection guarantee relations denoted formulas constraint equivalent constants later discuss compute needed given Typically constraints dense domains closure operations equivalence satisfiability procedures efficient For example assumed conjunctive order number variables testing equivalence cubic Note property corresponds closure existential quantification corresponding logical formula x Note formula FALSE language denoting relation Satisfiability property follow Equivalence property 98 AE Levy et alArtcial Intelligence 97 1997 83136 891 integers disjunctive hard 25 discussion issues constraints allowd problem NP The properties require satisfied wide class interpreted predicates For example Order constraints The language consisting predicates Z connectives A V Sort constraints A constraint connectives A V 1 In particular sumption Finite given relation Often given relation best viewed constraint Any given finite relation satisfies require small stable language based finite sort hierarchy 61272 relatively viewed sort language logic decidable description properties sub Hereafter constraint refer constraint formula constraint language 15 32 Decidability irrelevance In analysis consider definitions based DI2 fact derived predicate DZ1 trivially DZ2 equivalent subject irrelevance subject sets possible derivations Recall viewed tree formed subgoal derivations query Dti A consider based following definitions derivation minimality derivation Hornrule KBs DZ claim rule base fact true We consider sequence LYE set relation In addition choices sets derivations l A derivation D minimal Cki ancestor ffj identical facts ai ai l A derivation D minimal support derivation derivation query D BaseD 5 BaseD BaseD antecedents The important observation undecidable Appendix A A summary decidability decidable literals irrelevance Lemma A1 Table 1 The weak shown shown rules contain negated table recursion efficiently forms negation Allowing undecidability tion symbols base predicates constraints However allowing cidable 9 It noted stratified semantics ble shows opposed slight variations strong irrelevance If allow negation strong larger class languages arbitrary function symbols functionfree irrelevance remains decidable stratified negation causes strong rules contain classical defining order semantics minimality BaseD deriving claims irrelevance Horn rules rules contain irrelevance In contrast including strong recursion leads func case allow negation presence unde stratified negation consider ta cause irrelevance derivations 89 Finally recursion Horn rules table considers results pertaining cases 9 Rules said stratified predicates p 4 p appears KB The dependency 891 dependency graph KB node predicate arc 4 involve negations cycles antecedent rule consequent AY Levy et alArtifcial Intelligence 97 1997 83136 99 Table I Decidability Language deriving irrelevance claims Strong irrelevance Weak irrelevance Horn rules recursion constraints Decidable I Follows 48 I Nonrecursive Horn constraints Recursive Horn constraints functionfree Decidable Section 4 Decidable datalog Section 4 1 1611 Decidable Follows 78 1 Decidable Follows 49 1 Undecidable 1 I551 Lemma A1 Functionfree Horn constraints Decidable Undecidable Section 4 1 If511 551 Lemma A 1 Arbitrary Horn rules Undecidable Follows 111 Functionfree Horn Stratified Negation Functionfree Horn negated base predicates Datalog unary base predicates Undecidable Lemma A2 Decidable Section 4 591 551 I551 Lemma A 1 Undecidable 1 Lemma A1 Decidable 591 decidability significantly strong irrelevance respect minimal derivations change In article focus algorithm deciding strong irrelevance In section present deriving strong irrelevance sound complete claims procedure decidable undecidable cases querytree tool automatically efficiently claims variety languages The querytree provide irrelevance inference table provide sound cases denoted deriving procedure inference strong efficient 4 The querytree strong claims Deriving irrelevance requires irrelevance meet challenges First implied definition strong irrel evant query q need establish properties set possible derivations q infinite set Furthermore restricted algorithm look rules consider KB Finally required rules facts semantics interpreted predicates arise set possible ground knowledge base order deem fact f strongly possible derivations algorithm needs enforce 100 A1 Levy et al Artificial Intelligence 97 1997 83136 The knowledge base d consists following rules rl badPoint X A path X Y A goodPoinr Y goodPath X Y r2 linkXY SpathXY rj linkX Z ApazZY pathX Y r4 stepXY t5 bigSrep X Y linkXY link X Y The following constraints given ground facts S 100 X 200 badPoinfX sfepX Y X Y goodPoint X k 150 X 170 bigStepX Y X 100 A Y 200 goodParh X Y I rl lOO XY 17OY 150 badPoint lOO x 170 I parhX Y 100 x Y 17OY 150 L goodPoinr Y 150 Y 170 lOOXY 17OY 150 r2 1 linkXY 100 x z 170 linkX Z ApartzZ loozY7oY 150 Y 04 r4 I srepX Y mpXZ lOOX Z 170 lOOXY 17OY 150 Fig 2 An example querytree Note expanding node link X Y rule r5 result inconsistent label expanded The expanded equivalent node parh Z Y parhXY This section presents novel tool querytree provides set derivations query satisfy compact repre semantics predicates established querytree check certain query See example simply examining Fig 2 Properties set querytree For example fact irrelevant decide strongly sentation precisely interpreted derivations inspecting derivation query Informally querytree symbolic ANDOR tree consisting goal nodes rule nodes The root tree goal node labeled query A goalnode g unifies g actual child child rule consequent rule resulting child ZabeE conjunct unification g A rulenode goalnode finite attaching antecedent The querytree AI Levy et al Artificial Intelligence 97 1997 83136 101 tree expanding node labels The label node contains facts generated rules constraints KB node The label inferred constraint known possible ground goalnode tightest constraint equivalence class needs satisfied literals appearing facts appear We begin Section 41 explaining correspondence derivations complexity encodes set symbolic constructing querytree querytree The querytree querytree symbolic derivations algorithm Section 42 describes building discusses instance general method encoding Intuitively sets derivations encode irrelevance deriving strong encodings possible querytree Section 43 algorithm 551 sets derivations designed In Section 44 briefly mention minimal derivations claims contents node labels querytree changing derivations 4 I Derivations symbolic derivations containing goalnodes rulenodes In context Hornrule knowledge bases derivation ground atom Fig 3 The root query atom If goalnode g derived rule r r child rulenode g children proofs r To simplify arguments ordered antecedent r The leaves derivation facts knowledge base derivation viewed tree consisting tree goalnode instantiation instantiations assume left right ordered ground atomic For reasons interpreted predicates clearer shortly include nodes children rulenode loss generality antecedents tree Since appear Fig 3bc querytree built based rules knowledge base constants replaced variables includes query rules The root symbolic derivation query predicate The child goalnode g rulenode actually encode symbolic derivations A symbolic derivation like derivation constants tree goalnode rule consequent containing conjunct child goalnode goalnode corresponding leaves symbolic derivation rulenode 0 mapping rule ro contents rule g The atoms base predicates A renaming OQ rule ro knowledge base actual unifies goalnode The rulenode antecedent unification r0 The expression er conjunct tree contain r formally variables symbolic denotes A symbolic derivation represents constants variables signing rules satisfied A symbolic derivation variable assignment For example derivation set instances satisfiable c satisfiable symbolic The set derivations query represented Fig 3 b symbolic derivations set derivations literals interpreted predicates obtained tree said satisfiable 102 AI Levy et al Artificial Intelligence 97 1997 83136 goodPath 140160 I goodPathX Y I badPoint 140 A path 140160 goodPoint 160 badPoint X A parhX Y goodPoint Y I r2 I link 140160 I r4 I step 140160 150 Y 170 100x200 X YI I r2 I litX Y I r4 I stepX Y I goodParh X Y I f1 badPoint X goodPoint Y 100 x 200 j2 150 Y 170 I litX Y I r5 X 100A Y 200 bigStefXY c Fig 3 ground derivation b satisfiable symbolic derivation c unsatisfiable symbolic derivation The querytree ANDOR tree encoding set symbolic derivations Its root symbolic derivation tree children containing goalnode atom query In contrast goalnode g OR node rulenode rules consequent When rules contain unifies g recursion infinite number symbolic derivations tree The label describes constraints order encode infinite number derivations finite structure Therefore querytree To decide nodes expand expand goalnodes attach ZubeZs node relation need satisfied instances node The labels induce equivalence nodes equivalence labels gt expanded gt expanded equivalent g2 denoted Eqg As computed labels completely computation tree need bottomup construction expand goalnode class If nodes gt g2 equivalent topdown phase querytree topdown construction precede Based expanded equivalents define querytree encodes symbolic derivation AE Dvy et al Artijicial Intelligence 97 1997 83136 103 Definition 9 A symbolic derivation d encoded querytree T exists mapping Cc nodes d nodes T satisfies following conditions EO If g g children goalnodes rulenode r d gt rG g children er T respectively El For rulenode r E d rule Gr rule r ruler ruZer root querytree E2 The node rootd E3 If r child goalnode g d expanded expanded If g If g T qr T r 1 2 child ccg child expanded equivalent Qg In section construct querytree The main challenge construction tree encode precisely compute labels nodes tree resulting set satisfiable symbolic derivations query 42 Constructing querytree The input l A set rules 7 We assume algorithm following loss generality interpreted position equality predicates All constants rules contain equalities distinct variable arguments literals Note implies unifications trivial literals non argument expressed l Constraints base relations For base relation e given constraint hold facts c TRUE known c arguments e describes conditions e given knowledge base If constraints We assume ce given standard form l A query assume form q X1 X A cy X1 X n distinct variables cq constraint XI X A key difficulty building querytree stems observation single label node built determined known problem order precede construction topdown tree depend descendents topdown construction However beginning single decide expand node The solution topdown construction bottomup phase root This tree label node The querytree algorithm consists steps Bottomup phase adorned predicate p intended tuples satisfying rules predicate greater In step compute set adorned predicates set predicate form pc p rules P An adorned predicate KB c constraint arguments p Intuitively represent constraint original predicates predicate subset extension predicate p includes original replaced adorned predicates Note Pt number rules PI c The adorned rules specializations P adornments number rules P 104 A E Levy et al Artijicial intelligence 97 1997 83136 We begin predicates facts e given eC e base predicate given input We compute new adorned predicates c rules KEI follows Suppose r E P rule form constraint rqXA JGL AC pX predicate cr conjunction computed ccXrA 8 If c satisfiable rule PI adorned interpreted 27 predicate qi 1 6 6 m Let c constraint A cX A err let ch projection c head variables create adorned predicate pc add following r suppose literals r qR A Aqzxnnr Acpx Note rule Y recursive use adornment predicate p order new adornments language guarantees compute new adornment We apply computed Note Finiteness phase terminate rules P property constraint adorned In step construct forest trees Topdown construction querytree rules PI We attach node g forest label denoted Lg We begin inserting node adorned predicate query predicate q P node predicate form 4 qc E PI c A cq satisfiable The label node c A cq We proceed build forest follows A goalnode g predicate pc unified adorned predicate pc form rules consequent r qTx1 A A qz A c px If Lg A c satisfiable g rulenode rule r label child goalnode gr literal predicate The L g based following variables appear create new rulenode gr child g Lgr Lg A c create antecedent r noninterpreted label child goalnode corresponding qfi projection q The termination topdown phase conditions We expand goalnodes base predicates We expand goalnode g resulting label We expand goalnode form pX pP isomorphism LpP UpX details topdown phase given Fig 4 forest isomorphism mapping The rulenode unsatisfiable exists expanded node variables X p Example 10 Consider bottomup phase begins adorned predicates application algorithm example Fig 2 The Note py node forest necessarily ancestor p T AY Levy et alArtijicial Intelligence 97 1997 83136 105 procedure buildfore P q 2 A c4 begin Creating forest trees T adorned nodes g tree Eqg g stated predicate form qc E P c A cq satisfiable rules Pt query qx A cq Let P Yt G II new variables Insert goalnode qc F appear T label c A cy P T repeat Let g p 81 leaf T derived predicate label Lg expanded goalnode gt pc x2 T 4 isomorphism 81 X2 q5 Lg equivalent Lgt Set Qg gl rule r E PI consequent predicate p maps consequent r g dont appear T Let 13 ll variable mapping variables Y new variables satisfiable Oc A Lg Create child rulenode g containing label 0c A Lg literal gi non interpreted predicate rule er antecedent er Create child goalnode gi rulenode Lgi projection 0 c A Lg variables gt changes Remove adornments return T end buildforest T predicates nodes T Fig 4 Topdown creation querytree bigStep 100200 OO g00dPOintt5OXlXII70 xxz step badPintOOll With rule r4 create rule rg create linkcz c2 Xt 100X2 200 adorned predicate link cl Xt X2 Substituting link r2 results pathcl similarly new adornments r3 produce subgoal pathc combinations result cs 100 X1 Xt X2 X2 170 X2 150 Note trying path For example path Finally pathc second results substituting path r1 compute goodpath substitute create label goodpath r1 yield unsatisfiable linkcz pathc2 Rule substituting link path additional adornments goodpath The bottomup phase creates following adorned rules omitting adornments predicates single adornment 106 A E Levy et al Artificial Intelligence 97 1997 83136 t1 badPoint X ApathC X Y A goodPoint Y A X 100 A X Y A Y 170 A Y 150 g00dPuthC3XY ri linKXY A X Y paXY r lidPXY r linkcXZ ri lirPXZ AputhcZY A X 100 A Y 200 pathc2XY AputhcZY A X Z A Z Y puWXY A X 100 A Z 200 A ZC Y path2 x Y rz linPXZ AputhC2ZY A X Z A Z 100 A Y 200 j puthC2 x Y r4 stepXY r5 bigStepXY A X Y linkcXY A X 100 A Y 200 limV2XY The result topdown phase shown Fig 2 Note predicates puthC2 derivations tree The expanded equivalent node puth Z Y puth X Y goodPuthc3 link rule r5 The following strongly irrelevant theorem query shows querytree tells exactly facts Theorem 11 Let P set Horn rules interpreted predicates Closure Equivalence created Finiteness properties Let T querytree rules P query form qX A cq Sutisfiubility satisfy 1 Afuctpul respect holds label Lg g instance qo q 8 A cq claim SZp al qo J5p DI2 D I node g p T al satisfies strongly irrelevance irrelevant 2 A rule r strongly irrelevunt instance qo q8 AC respect r claim SZ r qo Cp D12 IDgo holds irrelevance appear T emphasize It important querytree labels theorem provides sufficient condition necessary Returning appear atomic facts step X Y X 100 Y 3 170 strongly query condition The proof theorem Fig 2 rule rs strongly querytree Using example given irrelevant querytree derive Appendix A goodPath irrelevant tight possible strong irrelevance 43 Complexity The time taken build querytree decide strong irrelevance number rules linear arity predicates To let 1 number nonequivalent adornments predicate bottomup labels KB let e number time units needed check equivalence knowledge base exponential topdown phase generated labels A E Levy et al Artijicial Intelligence 97 I 997 83136 107 literals refined creating number noninterpreted phase algorithm check satisfiability rules maximum number refined rules created antecedent rule R labels The bottomup time proportional If b maximum number rules KES create Rib refined rules Creating refined bottomup rule time build topdown phase 0 ITe ITI number goalnodes class expanded number derived predicates querytree Rb grandchildren tree ZP P internal node expanded R rules querytree However goalnode equivalence ZPRb Therefore rule requires forest ReZb time units The number internal goalnodes KB Consequently number leaves time construct 0 RPeblb resulting querytree phase constraint The value I number different adornments e time check equiv In case constants disjunction conjunction language consideration 1 worst doubly exponential ordering arguments relation KB This label essentially describes alence labels depends constraint order constraints ay predicates constraint rules There exponential number nonequivalent doubly exponential describes set possible orderings The time check equivalence labels worst exponential It important appear number total orderings variables constraint constraints number rules course depend number ground arity predicates This important frame systems employ tend small algorithms scale knowledge bases number pathological theorem shows better querytree Specifically arities predicates linear facts possibly exponential distinction binary predicates labels occurs expect shows detecting arity polynomial emphasize introduce irrelevance strong lower bound problem facts Moreover believe f arity labels allowed complexity cases Furthermore exponential conjunctive rules ground querytree exponential following predicate building Theorem 12 Given set rules P query schema qx A cq rule r E P time rules deciding SZ I q X A cq Zp D12 IY contain hard exponential predicate The proof given Appendix A based reducing acceptance problem strong problem detecting linearspace irrelevance rules alternating Turing machine ATM 44 Extensions querytree The querytree method The querytree general method encoding possibly 55596164 The method algorithm described instance infinite set derivations finite structure infinite number derivations based encoding 108 AZ Levy et alArtijicial Intelligence 97 1997 83136 labeling identifying construction exactly desired set derivations scheme tree based label equivalence guarantees finite set labels terminating querytree encodes In previous section satisfied facts generated needs exactly set satisfiable encode different yield algorithms label node described formula encoded symbolic derivations Several instances method tightest constraint node querytree sets derivations types strongirrelevance claims Table 1 1 Tag labels The label node includes information ancestry node As result 61 query querytree encodes exactly set minimal derivations 2 EDBlabels The label node includes information tree Using appear derivation negative positive labels encode ex literals actly set satisfiable derivations rules include negated base predicates antecedents IClabels The label node straints tion tree Using classes Horn instantiations satisfied deriva schemes decide strong irrelevance includes partial literals clauses negative labeling theories integrity constraints include integrity 641 59 3 language Relaxing finiteness property The stringent constraint finite number projection When hold For example consider labels rules contain function predicates rules Finiteness property requires requirement imposed generate property join symbols recursion selection operations 1 X 0 s2 integerX integer X 1 integerX As shown Fig 5a topdown expansion tree rules result infinite number labels form Zi X integer Therefore construction querytree terminate goalnode To build querytree c18 return member goalnode proceed following cases choose finite set labels C assign querytree When project constraint rulenode father c strategy Given constraint C label cl1 k cl cl C c2 E C c2 k cl cI k CZ The cl viewed best approximation cIB finite number nodes children subset variables X appear describes exact projection constraint constraint labels C Consequently tightest ones possible strong nodes choose finite set labels C allow new terms labels example querytree provides sufficient condition ground atomic fact match irrelevant vice versa One simple method created allow maximum k new terms k fixed For instance allow new terms querytree irrelevance That means tree strongly shown Fig 5 b querytree resulting weaker labels AE Levy et alArtificial Intelligence 97 1997 83136 109 integerX 0 s A I x0 s2 I infeger Y YX 1 SI A 32 I YO I integerZ ZX2 infegerX s A Q x0 inregrY b Fig 5 Querytree function symbols claim claims deriving irrelevance irrelevance irrelevance irrelevance external strong sources As stated earlier given user In 5562 undecidable sound Inferring claims claims derived solely based inspecting inferred shown given querytree Specifically querytree f set facts predicate p satisfy constraint integrity query evant appear 55 irrelevance parts knowledge base follow theories How claims query build f If lc constraint p As result facts parts derivations irrel querytree The details algorithm described irrelevant f f rule build querytree irrelevance functionfree Hornrule f strongly told fact f contain inference procedure f strongly irrelevance c simply contain strongly irrelevant impose claims 5 Using querytree speed inferences indices irrelevant In querytree In section explore ways querytree speed decide ground facts rules inferences given class queries Based determination create strongly specialized database relevant class queries Given query given class use indices speeding inference facts fetching ground tree encodes The second use querytree possible lookups derivations search backward chainer inference based observation database query We use querytree follow sequences sequences rule applications facts possibly significantly result ground guide Although clear theoretical analysis ignoring paths yield speedups factors unclear Such factors include impact savings irrelevant facts solution practice dependence versus indices cost building 110 AZ Levy et al Artijicial Intelligence 97 1997 83136 utilizing savings achieved size knowledge base variations form rules This section presents empirical validation savings achieved querytree empirical analysis significance percent facts deemed factors affecting speedups irrelevant 51 Two uses querytree The use querytree irrelevant query given set queries irrelevant irrelevant strongly tree facts ignored Recall ground ground KB For instance rule 5 ignored Similarly 100 X Y 170 ignored facts satisfy rule Theorem appear based fact tells exactly facts strongly 11 Specifically fact query rules independent Fig 2 repeated satisfy tree A ground label goainode determination facts relation goodh example step unified Consequently answering We use property querytree speed inferences querytree specialized frequently Given occur create specialized set The cost preprocessing cost building build significant drastically retrieved constraint lookups unbound Using fact satisfy guaranteed ately cost useless large label node specialized checking indices oy facts strongly set queries build querytree irrelevant way involves knowledge base cost pass knowledge base indices However payoff removing irrelevant size space inference mechanism reduced Specifically guaranteed fact derivation querytree This query especially unbound variables For instance example lookups form stepa Y constant index facts predicate fact retrieved satisfy 100 Y 170 In contrast constraint generate search subtree useless Note reasoning mechanism constraints retrieved available detects fact irrelevant immedi lookups checking constraints arbitrarily sets queries queries facts search fact significant Y needs time ground satisfies step guarantees retrieving The second use querytree sequences rule applications query We use observation consider following example based observation database tree encodes derivations result control search To illustrate lookups Example 13 Consider following rules Its querytree knowledge shown base defining Fig 6 relation dessertMeal I Moreover note order able detect irrelevant facts immediately reasoning mecha nism propagate constraints fashion creating querytree A E Levy et al ArtiJicial Intelligence 97 1997 83136 III dessertMeal DI WI D2 W2 beefDdessertDz I beef 01 cheapMeal DI WI A expensiveMeal D2 W2 dessert 02 I I beefDlZ 15 dishD1Z A compatible Dl WI A dish D2 ZI dessert 02 ZI 15 compatible D2 W2 1 I A beef DI redWine WI A dessert 02 sweetWine W2 Fig 6 Avoiding search paths querytree r1 cheapMeal D1 WI A meat 01 A expensiveMeal D2 W2 A dessert 02 dessetiMeal DI WI Dz W2 r2 dish X Z A Z 6 15 A compatible X Y cheapMeal X Y r3 dish X Z A Z 15 A compatibZe X Y expensiveMeal X Y r4 beefX A redWine Y cornpatible X Y rg dessertX A sweetWine Y compatibZe X Y The predicates meat beeA dessert sort predicates dessert disjoint wine pairs dessert given compatible dishes wines The relation attention represents pairs consisting pair main dish available dishes prices Consider dish compatible The relation dessertMeal identifies compatible represents fact dishXY relevant respectively satisfy constraint subgoal r2 r3 vice versa rs facts dish constraint subgoal 13 facts satisfy second shows rule r4 applied dessert meal The relation dish facts relation dish Any beefX A Y 15 dessertX A Y 15 satisfies query dessertMeal rules r2 r4 r3 r5 However subgoal r2 need consider needed Moreover querytree opposed To exploit additional control knowledge create specialized index relation leaf querytree inference mechanism follow example create index beef dishes 15 15 To follow querytree search node querytree 4g We start assigning query At step base predicate perform expand g rules KE3 modify In dessert dishes inference attach subgoal g root querytree Otherwise children expanded equivalent 4g paths permitted querytree lookup specialized g database subgoal lookup subgoal index 4g indices 112 Ak Levy et al Artijicial Intelligence 97 1997 83136 node 4g subgoals rulenode paths encoded querytree ground facts derivations We assign querytree As result database current path subgoals g appropriate follows engine retrieves inference lookup 52 Experimental results analysis qz We tested impact savings achieved querytree depth search backward chainer Horn rules l2 Given knowledge base A query schema qx built querytree sets indices ground facts A The set Zi included index relation includes facts deemed strongly ground index relation e 21 al satisfies fact eal I3 The second set constraint indices 12 included index querytree We measured running backward chainer returned included label leaf predicate e querytree leaf base predicate times number nodes expanded versions qX querytree Specifically irrelevant l BCIthe l BC2the backward chainer A backward chainer A answers original indices 11 ignoring indices KB strongly irrel evant facts l BCSA backward allowed querytree chainer uses indices 12 follows paths We tested 20 query schemas 1 A travel domain fragment database real airline data describing taken following domains flight times cities 2 A wine domain consisting US examples 36 tables knowledge base 50 rules describing based 751 wines dishes compatibilities examples 78 3 A studentadvisor graduates including domain knowledge base science PhD advisor school graduation dates examples 9 10 4 The goodPath example The fourth domains usually yield deep recursive rules Example 2 examples search 12 number rules bushy low branching Table 2 presents small The second domain factor search large branching factor student nonrecursive trees In domain advisor solutions KEI In table Filtering Time includes query results experiments X Y goodPath X Y entailed taken case looking querytree time build trees yields shallow trees search chainer Epikit attained removing l2 The speedups backward 76 Quintus Prolog The speedups attained better reported However use tools testing In experiments tested BC3 modify best results consistently rule goal orderings The results shown ordering ratio BCl BC2 tested control backward chainers facts implementation commercial yielded irrelevant MRS versions backward chainer Note original knowledge base index base relation AZ Levy et alArtificial Intelligence 97 1997 83136 113 Table 2 Experimental results finding solutions Ex KB size Filtering time set Percent irrelevant Solution time set Nodes expanded Facts Rules BCI BC2 BClfBC2 BC3 BCiBC3 BCiBC2 BClBC3 1 2 3 4 5 6 7 8 9 10 350 350 200 200 200 200 1300 1300 150 150 6 6 18 18 18 18 47 47 17 17 18 18 65 56 207 147 25 116 08 06 63 63 69 69 64 68 59 60 59 59 2780 618 372 25 3975 1278 8740 50 35 28 182 231 14 55 205 41 8720 42 75 04 15 27 27 45 19 31 1 12 46 16 183 233 86 45 13 11 363 11 75 04 15 21 43 56 306 1190 24 45 46 76 105 25 22 41 17 31 1 12 45 48 105 25 28 6 295 1630 14 28 45 48 create indices knowledge base deemed strongly indices Zt The columns query The respective ratios running expanded BC2 BC3 compared times The columns BCI Zt 12 Percent irrelevant percent ground facts included irrelevant solutions time taken times BCI BC2 BC3 shown ratios number nodes running The results significant speedups BC2 BC3 For BC2 speedups 104 The results average speedup BC2 example 6 The results querytree query building querytree BC3 additional improvements excess 5 ranging 1190 mean excess factor 3 ranging 31 mean usually following The speedups BC3 BCI usually example 6 l4 In terms nodes expanded 41 excluding 10 average speedup clearly looking specialized indices yield significant Table 3 shows similar results obtained BC3 37 excluding solutions answer ground queries thejrst binding solution savings cases use querytree query goodPath X Y query X Y The ground query shows solution queries The column time time solutions solution trying querytree built built query schema free variables goodPath 130160 second columns queries The columns The column compares query It shows number calls looking preprocessing number solutions pays small number solutions querytree query The results indicate cases searching preprocessing time equals answer time ratios number nodes expanded node ratios finding preprocessing beneficial build solutions I4 Example 6 excluded example resulting querytree showing answers query mean speedups yielded exceptionally high In 1 2 3 4 5 6 I 8 9 10 Table 4 Changing Percent irrelevant 114 AI Levy et al Artificial Intelligence 97 1997 83136 Table 3 Experimental results ground queries finding solution Example Ground queries Find solution BClBC2 BCiBC3 BCiBC2 BCiBCS 58 18 33 44 15 33 1 11 13 1 61 18 74 7 290 1550 2 14 13 1 85 45 25 61 31 14 16 123 48 85 45 26 62 1630 25 45 123 48 Solutions needed break Number solutions 1 1 1 6 1 1 115 81 2 1 187 187 49 37 12 0 41000 420 353 0 percent irrelevant facts Example 1 Example 3 Example 9 Solution time Percent irrelevant Solution time Percent irrelevant Solution time BC1iBC2 BCIBC3 BCiBC2 BCIBCS BCIBC2 BCIBCS 45 63 79 92 5 15 101 1250 5 15 101 1240 21 45 69 92 18 45 21 381 31 76 43 447 4 15 59 82 11 13 46 235 11 13 46 235 The experiments showed savings achieved querytree affected factors discuss 521 Percent irrelevant facts The analysis algorithm suggests speedups obtained significantly affected percent facts knowledge base query To test effect ran variants example constants irrelevant percent irrelevant strongly irrelevant speedups greater rules appearing effect varying factor 100 facts The results shown Table 4 speedups grow significantly irrelevant differed percent facts increases For example 90 facts facts For example query schema It important levels generality irrelevant goodPath X Y build goodPath 120 Y Doing result ing additional However indices queries Consequently accurate characterizations note flexibility building querytree different achieve varying percents query schema deem case set querytree usable querytree attempt smaller identify created 100 X 120 frequently occurring instead building stepX Y sets queries querytree irrelevant facts AI Levy et al Artijicial Intelligence 97 1997 83136 115 Table 5 Changing size database Example 1 Example 3 Example 7 KB size Solution time KB size Solution time KB size Solution time BClBC2 BClBC3 BCiBC2 BCiBC3 BCiBCP BClBC3 250 350 550 126 15 20 124 15 20 100 200 300 23 27 35 31 43 58 540 930 1300 13 1 1 113 20 24 522 The number ground facts factor knowledge base affects The second speedups suggested initial Table 5 speedups results facts original knowledge base To test effect ran different number ground facts The increased size databases The growth linear constant percent facts overall number facts greater These results significant methods scale large knowledge bases number ground examples databases containing results shown grew percent irrelevant roughly explained fact cost backward chaining number facts Therefore greater suggest effective number ground cost building effect removing Recall facts facts remained independent querytree 523 Placement interpreted literals rules A final factor affecting speedups achieved querytree interpreted rules defining country subject literals placed existence flight stops rules To illustrate consider following cities time constraints given constants SO ea way set ur pXIEl A SO 6 Sl A eo 3 El S timelyConnectXY u2 XxxE 3 pXISE u3 XZST A T 6 Tl APZETIE pXISE To paths rules written follows ur p X I S1 El timelyConnect X Y u2 PXISE A S 2 A E G eo pXZSE u3 JEXZST A T 6 71 A S SO A T eo APZITIE PXISE The difference sets rules second set crafted exploit Specifically timelyconnect constraints entailed interpreted constraints retrieve flight fact violates begins SO immediately rules compute derivation Consequently backtrack constraints In contrast constraints ends later ea set step irrelevant set rules strongly possible paths check 116 A L Levy et al Artificial Intelligence 97 1997 83136 second set fact root arbitrarily facts tree generated As result greater effect set rules like The experimental observation The example pairs 1 2 3 4 instances rules differing exactly fashion large tree irrelevant results confirm removing strongly Several points noted respect l Although speedups significantly issue bigger pair achieve significant constraints savings control search set rules rules carefully crafted l Writing rules builtin control disadvantages extremely difficult Consequently expect rules usually written crafting practice errorprone write rules 191 It task includes rulenode l Crafting set rules builtin control easily create querytree Specifically set new rule query predicate rules equivalent facts produce However new set tightest constraints enforced bindings immediately querytreewe label node The resulting regardless database ground answer set respect original constraints appear 53 Discussion It clear analysis cases methods identify querytree irrelevant experiments theoretical querytree useful able rules As shown occur predicates play role The experiments frequently Moreover interpreted described classes queries facts described deal knowledge bases large number ground small number linear algorithms scale cases large number rules It noted indices computed query conjunction existing indices computed querytree semantics considerations tailored interpreted selectivity specific class queries consideration facts relatively querytree indices refined Section 4 time number rules indexing methods predicates These In particular build The experiments inference mechanism However described depth search backward chain ing wide range reasoning mechanisms The use tree removal strongly querytree irrelevant integrated nodes order search space associated nodes querytree The particular reasoning mechanism The requirement facts independent easily techniques described scheme Following space searched reasoning applied There possible schemes indices search solution building independent query Second querytree First order minimize construction querytree overhead associated phase building bottomup topdown phase create specialized querytree unimportant integrating AX Levy et alArtcial Intelligence 97 1997 83136 117 referenced search This way relation actually indices index avoid creating Finally emphasized optimizations obtained achieved methods derive optimal query rule goal methods 8993 Whereas 4284 search tree orthogonal orderings prune space solutions independent validation experimental methods obtained querytree use runtime bindings combined tabulation methods look optimal ways search identifies parts space guaranteed contain runtime bindings Therefore querytree follow savings usually results obtained 6 Other applications relevance reasoning So far focussed use relevance speed inferences In section briefly algorithms applications relevance reasoning reasoning reasoning constraint theorem proving set predicates levels abstraction 4073 50771 obtained removing complex domains fields satisfaction representation Automatic creation abstractions Reasoning multiple effective method planning AI 27 An abstraction collapsing arguments relations An abstraction useful particular original Otherwise representations paper consider different relations distinctions automatically automatically union projecting irrelevant backtrack different arguments suited given class queries predicates We use querytree framework discussed claims subjects answer obtained subjects irrelevance removed 56 create abstractions especially denoting generalization abstract theory holds irrelevance deriving query In savings fashion reasoning extremely database systems database systems Relevance bottomup substantial evaluating achieved pruning Query optimization query optimization proceeds Therefore tuples contribute optimization database guaranteed database combined optimization methods algorithms based messagepassing important In database systems query evaluation early possible database solution query The querytree apply filter querytree 89 query step query evaluation Moreover magicsets subqueries It tells irrelevant deductive relational queries query systems relations tuples 911 I5 Theoretically interleave perform worse twice optimal search steps reasoning steps building querytree way 118 AE Levy et al Artificial Intelligence 97 1997 83136 A novel query optimization algorithm described 581 The predicate movearound deals additional functional dependencies I6 algorithm SQL queries predicate movearound based features SQL aggregate negation The predicate existing query optimizers The useful support queries Such queries usually interpreted constraints play major role previous predicate pushdown incorporate especially techniques algorithm generalization queries easy obtained predicate movearound application subqueries area decision querytree extension querytree queries Min Max Avg algorithm optimizing optimizations growing built complex sources multiple heterogeneous integration gathering relevance sources contain data relevant able given query distributed reasoning property data contain environments An information important sources So called mediator systems provide access large number databases knowledge bases text files The mediator sources efficiently decide query Since main cost answering Information application 43 1386090 formation makes use descriptions contents capabilities information constraints answer queries effectively information queries access application 651 TSIMMIS ing combine information provide determine base relations time monetary cost sources possible The 651 In described 901 mediator contains set Horn rules describ sources descriptions relations Given query use querytree query access information setting sources viewed containing sources need accessed In order information cost communication In architecture base relations framework setting relevant algorithms crucial contain information constraints integrity tuples 7 Related work 71 Analysis irrelevance As mentioned earlier 163447 literature notion irrelevance logic community formal logics modify However devising tractable underlying clean inference notion irrelevance studied thrust works analyze philosophy commonsense computational relevance logics 3524 The key idea relevance rules relevant implications largely open logic inference issues uses A related concept discussed field The intuitive In contrast analysis irrelevance logics semantics second providing assumes logic remains unchanged In SQL terminology predicate refers constraint query A1 Levy et al Artificial Intelligence 97 1997 83136 119 Within AI notion irrelevance 411 compositional modeling RLL extensively text irrelevance natural definition based notion conditional carry context logical knowledge bases works 321 Irrelevance investigated context probabilistic 2 12370 However independence informally reasoning lead addition reformulating formulated The work related 87881 Subramanians motivations efficient framework utility enable analyze Our framework considering inference mechanism nian fore ficient distinctions derivations considers defined manian leads computational claims Our class strong irrelevance claims given However computational tecting KBs require answering tension algorithm graph This graph shows simple dependency KB p enable tests irrelevance It noted satisfying instances irrelevance However predicate irrelevance relevance analyzing analysis irrelevance irrelevance given Subrama similar knowledge base create simpler suf inference However framework provide claims possible irrelevance Subra claims exploitation issues deriving viewed refinement form KB consider pursue The specific definitions class computationalirrelevance variations weak irrelevance savings gave straightforward examples prime example computational 871 definition strongirrelevance claims definition necessarily Finally Subramanian algorithms query algorithm She considers focus case propositional algorithms discusses order case concept dejnability instances logic ex p1 depends p2 p2 appears relations predicates rule consequent reachability simple reasoning 72 Static analysis rules Several authors considered static analysis rules different purposes based reasoning explanation 67851 automated graphlike connection graphs graphs learning 29811 partial evaluation logic programs 14521 deductive databases representations rules problem 52 compilation graphs 141 treeautomata 15 86891 Some 291 space graphs 92 rulegoal analysis 891 Others rule foldingunfolding idea evaluate In works common 201 evaluate terminate possible domain application tation domain descriptions graph The querytree criterion based considering rules Moreover querytree rules followed backward exception 861 elements The key issue common rules interpre rules abstract rules domain consisting abstract creation termination gives motivated works terminate novel appear semantics interpreted predicates algorithm combines forward chaining evaluation evaluation refined rules Consequently chaining querytree complete shown 120 AE Levy et aLArtcial Intelligence 97 1997 83136 straightforward completeness derivations cases presence recursion interpreted predicates Re querytree encodes precisely set desired guarantees A completeness result closely related Theorem 11 obtained 861 They algorithm rules Their extend independently uses foldunfold tight constraint applies technique encoding sets rules negated result algorithm rules query rule set languages minimal derivations satisfiable derivations characterize constraint complete Finally generate advantages transformed tree tells facts derivations enabling relevant sequences Example 13 As seen Section 5 speedups This finer level control achieved following interpreted set rules Furthermore Ramakrishnan obtain rewritten relation mentioned predicates Srivastava transformations computed Horn rules derivations base predicates algorithm new set rules While tree querytree Most notably focus search backwardchainer rule applications control rules straightforward leads significant database representation guaranteed lookups Connection graphs 521 developed prover precomputing component clause appears negation query removed However connection clauses Specifically relationship graph Other work However encoded interpreted predicates walks guaranteed 18831 considered possible pairs resolvable clauses Clearly purpose focusing theorem certain component graph connected graphs capture subset possible dependencies clauses connected irrelevant link unifiable KB strongly querytree Work connection graphs considered clauses connected longer paths following certain walks graph paths semantics encode valid derivations identifying 424384 methods The querytree encodes exactly ways First delimiting speeding inference given space search approach searching extend searched search paths eliminated optimal search strategy Second 42 querytree provides principled way unlike basis atoms interpreted representation require graphlike representations inference space derivations finding optimal strategies considered The querytree engine parts space safely ignored Another 841 Greiner possible derivations query The atoms currently Consequently consideration looking methods described Smith actual space needs fully incorporate knowledge techniques treats recursion interpreted complement extending representation The goal Explanation Based Learning 69 speed inferences new rules added single Adding knowledge base compress sequences inference rule The key issue 3068 rules inverse effect slowing inference Etzioni utility added rules approach In EBL AZ Levy et al Artijicial Intelligence 97 1997 83136 121 space graph representation speedups obtained EBL obtained merely 291 shown static analysis rules knowledge base Using treelike rules glean new rules effective EBL techniques The problem knowledge base called Problem Space Graph PSG showed learned standard consider termination renaming ancestors A key difference decision ancestry As result number rules predicates rules It uses simple variable PSG querytree expand node PSG depends node size querytree exponential arity size PSG exponential querytree However semantics interpreted principle literals case recursion node expanded similar condition 8 Conclusions ignore irrelevant key identify information possible The ability relevance knowledge based systems As basis formal scaling knowledge based systems future knowledge based applications This article showed reason effectively principled manner reasoning knowledge relevance prooftheoretic properties different definitions literature Within discussed strong claims claims efficiently derived automatically inference performance irrelevance based analysis notion The framework enabled compare desirable properties impact key questions space definitions identified shed light previous definitions exploring framework class irrelevance reasoning presented guaranteed lead savings significantly irrelevance analyzing irrelevance strong We investigated problem automatically deriving irrelevance deriving reasoning irrelevance changes parts We considered claims considering problem automatically practical derive based rules KB independent Hornrule knowledge bases Our analysis based observation relevance small stable knowledge base assuming irrelevance unexamined claims ground facts As result algorithms efficient irrelevance claims derived independent automatically encodes precisely basis sound complete irrelevance semantics detection additional general tool querytree finite structure tells exactly set derivations query query providing classes strong considers rules enables querytree facts We described novel claims The querytree claims One key aspects querytree derivations procedure compute variants strong rules Furthermore rules ground interpreted facts appear ground appear irrelevance interactions irrelevance technique inference deriving literals strong claims order 122 AI Levy et ul Artijicial Intelligence 97 1997 83136 Finally presented filter irrelevant building results knowledge bases showed querytree experimental facts yields speedups orders magnitude cost results showed querytree negligible Both theoretical analysis experimental methods scale effective larger There ways extend inference A second direction important extension claims stating probability A clear understanding needed algorithms querytree One particular tree rules contain termination important captures irrelevance 137980 helpful condition limited cases recursion claims encountered context incorporate probabilistic fact knowledge base irrelevant work We mention couple One framework query meaning irrelevance irrelevance claims claims automatically deriving methods exploiting future research issue consider terminate consider extensions general querytree construction function symbols Although completeness cases guarantee practice Recent work termination Acknowledgements The authors like thank Ed Feigenbaum Michael Genesereth Matt Ginsberg paper Jim Rice experimental material presented discussions results described Pandu Nayak Special paper possible meaningful thanks Appendix A Proofs A I Properties irrelevance The properties irrelevance given Theorem 6 proved follows Proof AO This immediate corollary definitions 0 Proof Al Suppose SI 142 DIi DO holds let A E 2 Therefore ery derivation D E DCJ A DZi D holds assumption claim DZj D holds Consequently DZj D holds D E DoA SZ 2 DZj DO holds The proof WI similar 0 ev Proof A2 The strong DZ D holds derivations D E 231 A For weak irrelevance property holds derivation derivation D2 A 0 derivations D E D2 A irrelevance follows DZ D holds observation claim follows observation Q A obviously hold AE Levy et al Artijicial Intelligence 97 1997 83136 123 Proof A3 A4 These immediate consequences definitions Cl Proof AS This follows implies BaseD 42 0 observation 41 E 42 BaseD c5t Proof A6 This follows immediately definitions 0 Proof A7 Suppose SZ r tb 2 DZ Do rSZ 2 2 DZ Do holds let A E 2 Du A Since DZ I D DZ 2 D hold D derivation A E 2 DZ I U 2 D holds Because D E DoA similar We simply SZ u 2 2 DZ DO holds The proof second claim consider 0 derivation D DZ 2 D holds DZ p1 U2 D hold holds right A U r left immediate For direction SZ A DZ2 V A holds suppose Proof AS The implication suppose derivation r E D The modification D A appearance r leaf proof tree derivation r A The result derivation 9 A includes 4 Consequently hold 4 E D 4 E We create derivation D replace SZ A DZ2 De A contradiction D 0 A2 Decidability irrelevance The following rules datalog shows weak irrelevance undecidable functionfree Horn Lemma A1 Let P set functionfree Horn rules atomic query Determining WZ 4 2p DZ2 holds c rule ground atomic fact rules interpreted predicates undecidable P facts derivable P An analogous Proof We rule r redundant set ground atomic P r U G Let r E P query We prove ing claim WZ r 2p 012 V r rule holds redundant case fact In proof suppose A E WZ r A DZ2 De holds Therefore use r Consequently ing redundant Conversely derivable holds facts G set ground P U G set derivable lemma r r ground knowledge base derivation P chang r G doesnt contain r Therefore WZ r DZ2D r removed facts means KB A E WZ r J DZ2 CD holds regardless r redundant proof given derivation ground answer However datalog undecidable follows 82 theories 0 determining interpreted predicates Therefore weak irrelevance redundancy undecidable rules 124 AE Levy et al Artificial Intelligence 97 1997 83136 The lemma shows strong undecidable allow rules In discussion assume perfect model semantics irrelevance stratified negation rules cf 8917 Lemma A2 Let P set functionfree Horn rules stratified negation r E P Determining SI r Sp DI2 undecidable P interpreted predicates given set ground atomic Pi P2 respectively A set rules Pi Proof Let PI P2 sets functionfree Horn rules let p1 p2 distin said contain guished query predicates set rules P2 denoted Pi P2 facts G set tuples derived base predicates relation set tuples derived equivalent Pi 2 P2 P2 Pi Testing equivalence rules undecidable problem rule algorithm stratified negation equivalence relation p1 Pt UG contains p2 P2UG The sets rules said sets irrelevance set rules P testing deciding rule r functionfree set rules stratified negation design algorithm sets functionfree equivalence problem 821 We reduce functionfree strongly irrelevant rules Let Pi P2 sets rules querypredicates Pi P2 distinct loss sets derived predicates To test Pt _ P2 P2 Pt Let Q set p1 2 Without generality assume test equivalence rules containing rules Pt P2 rule r PI Xl A 72X qx q q query predicate Q appears Pi P2 Note Q stratified set rules r rule containing negation Clearly r strongly irrelevant fact member p1 set ground 2 In similar fashion create set rules rule r decidable strongly rules stratified negation rules decidable P2 Pi r derivation Pi P2 Consequently facts ground sets functionfree rule irrelevance equivalence irrelevant 0 A3 Proof Theorem 11 In proof assume loss generality 8 tuple distinct variables formula cy simply add rule 4X A cq 4Go query qx If query originally query form qx constraint contained I7 The perfect model set rules computed bottomup fashion stratum stratum AE Levy et al Artificial Intelligence 97 1997 83136 125 We prove theorem considering encoded querytree Every derivation query viewed pair d 0 d symbolic derivation tree represents variables constraints obtained assignment rules interpreted base relations Formally variables d A symbolic derivation literals constraints integrity symbolic derivations 8 assignment derivation following satisfies trees 2 1 includes conjunction Let d symbolic derivation literals interpreted r let ci Ui ri Let Zk leaves d ici integrity constraints relation set derivations obtained formula cd tree d satisfying rulenodes predicates 11X Ii A symbolic derivation assignments following constraint rulenode variables represents rl CdCU A Acii AicX1 AAiCkXk We denote relation represented node g E d formula expressing g We denote Note restriction 8 variables node g d satisfy Lg symbolic derivation formula cd Rd We define label projection Rd variables set given instance d d 0 cd satisfiable l7 label Lg We denote trees qX Our proof based showing II The correspondence II derivations symbolic derivations T encodes precisely shown II querytree encodes exactly symbolic lemma entails derivations query suffices Lemma A3 1 A groundfact pal appear derivation instance query qX Cfrom set ground facts base predicates node g p X1 X symbolic derivation d E IL al satisjies Lg 2 A rule r E P appear derivation instance query qX symbolic derivation d E II includes rulenode containing rule r derivation 1 suppose Proof To prove exists symbolic cd variables XI projection satisfies Lg g Therefore tree d E IT X al goalnode mapping 8 variables d stants 0X ai 1 n applying B d satisfy facts base predicates Go ob constraint 19 d yield derivation tained applying instance ground suppose set ground g node facts Go Conversely d S u satisfy 8 leaves d Applying uses p al pair facts G The derivation represented derivation instance qX uses pal set ground paj d corresponding cd Consider qX Lg 2 follows rules ground derivation observation symbolic derivation exactly instances cid144i 126 AY Levy et al Artijicial Intelligence 97 1997 83136 To T encodes precisely derivations nsa proceed phase fashion given symbolic derivation computed We construction symbolic derivation following procedure pressions cs g cb g cf g denote constraint node g bottomup applied querytree exactly mimics trees Observation A5 Lemma A6 Specifically nodes symbolic derivation followed topdown steps First tree d labels Lg node g d Lemma A4 consider tree d ex formulas variables appearing computation 1 Initialize Compute cog follows cal iciXi fortheleaves g internal goalnode r rulenode ri cor c 2 Bottomup Compute cbg follows ZiX1ZkXk cog TRUE ofd g leaf goalnode d cbg cog r rulenode children gt g cbr COr ACbgl AACbh g internal goalnode child rulenode r cb g Projection cb r variables g 3 Topdown Compute cfg Cbrootd follows cfrootd r rulenode father goalnode g children gl g cfr cfg A Cbr 1 6 m cfgi Projection cf r variables gi Lemma A4 Let d symbolic derivation tree For node g E d cf g Lsg constraint formula c refer relations The formulas cl c2 represented join corresponding formulas constraint constraints tuples satisfying c In proof convenient Proof The relation R representing variable attribute represented conjunction relations denoted R w R Recall Closure property express join relations subset variables cogcbg cfg projection projection R attributes appearing fZ We denote Rfg sentence RogRbg constraint node g respectively We denote relation R subset attributes R RI RI denotes language L satisfies projection relation represented relations Let rl rl topdown ordering rulenodes thattheglobalconstraintondiscdcorlAAcorrAcollAcolk topdown phase computation Recall notation relations Rd Rorl W w Rorl W Roll W W Rolk define sequence relations SO Sl follows d cf labels 11 _ lk leaves d l SO Rbrootd 0 SiSi_l W Rbli A E Levy et al Artcial Intelligence 97 1997 83136 127 We prove following properties hold sequence Dl Sl Rd final relation sequence global constraint d appear Si D2 If _i set variables D21 Sitlz Si D22 1 Rfrj This means sequence attributes change set attributes appears projection subsequent intermediate sequence relation relations The lemma follows properties Dl D2 follows Let _i variables Rf ri SIIz way Lri ri E d It follows D2 Sl Rd Therefore Rfri RdlRi holds rulenode appear Dl defined Proof Dl Note obtained Sl Rbr1 w w Rb rl bottomup phase Therefore w Rb rl To prove rulenode join constraints Rd t1 w r tree goalnode g following hold Rdlr g Rr C Ror Rbg L Rog b r For j 1 j k exists 1 6 1 ri father Zj Rd Ror1 w WI Rorl W RoZl W properties join operation Rbril C Rolj Therefore w Ro Zk gives Sl c Rd From 2 R b Rd Hence Rd leaves d Furthermore Note b hold trivially g father goalnode r second parts b r parts relation variables d induction elements t1 r reverse order bottomup order g projection corresponding follow respective prove claim rulenodes g Therefore relation rule nodes children leaves follows The base case including definitions immediately Assume b hold rule nodes rit q We need holds RbQ holds ri Claim specifically children ri By induction definition Rori Rdlri Therefore bottomup join Rori relations labels children To prove b let gl g assumption Rbgi Rdlg gi Clearly Rbri RoQ w Rt w w g follows Rbri Rdl 0 Proof D2 By induction For base case 0 note Rb root d Moreover projection Rb r1 Rf r1 Rb t1 D22 holds RI simply Rb t1 Therefore variables rootd D21 holds 128 A Z Levy et al Artcial Intelligence 97 1997 83136 We assume D2 holds j prove D22 Let g father rit ri father g assumption 1 r Rf rio Si 1 rO Rf rio Therefore inductive goal node g Sils Rfg Moreover holds 1 We prove io By holds However variables common commute projection rit Si g join Equivalently variables appearing D22 Rfril w RbrilIrl llrr To D21 SJs Sit Is g ones common suffices Si rit Rjril IK Rjg The proof based following property relational algebra If A RI B C A R w B Ix B In case Rbg Rbril lg A11 A2 Clearly Rfr C Rbr Rbr jg C Rbg Rfg Rfr follows lg Rjd C hg Finally recall Rfri Rfg w rit Therefore tails Al observation 0 A3 A4 Eqs A2 A3 A4 en The importance Lemma A4 construction exactly mimics bottomup querytree vation shows predicates compute possible tion trees The observation symbolic derivation tree d phase computation phase constructing labels The following obser adorned labels form cb g symbolic deriva induction nodes querytree follows simple bottomup Observation A5 Let d satisfiable symbolic derivation l For goalnode g E d predicate p c standard form cbg arguments p pc adorned predicate Pl AE Levy et al Arrcial Inrelligence 97 I 997 83136 129 l Suppose r rulenode d containing rule 4X A A qmt A cr PX Suppose rs father g children gl g following rule 73 r I j j A qRnl A qr pCbcgx Note r r difSer predicate names variable pattern Given observation exactly derivations following encodes n Theorem 11 follows lemma Lemma A3 lemma querytree Lemma A6 A node g label Lg appears symbolic derivation tree exists node gl querytree T isomolphism equivalent Variablesgl 4g gl Lg n 4 Variablesg label g T Proof d E II conditions ifl To direction symbolic derivation encoded T encoding mapping addition Definition 9 11 labelpreserving tree l If 8 variable isomorphism g ccg18 Lqg OLg node g E d Let d symbolic derivation tree mimicking mappings nodes execution procedure buildforest We construct tree I7 We d encoded query encoding qc adorned predicates We begin root d child rulenode r Let c cb root d Observa Pl rule r tion A5 entails Q Therefore procedure PI refinement rule r consequent buildforest create node g form Q8 label c expand child goalnodes gl g The label rulenode g rule r1 creating cb r labels gl g respective projections cb r variables gis We define map rootd g map r child g formed expansion rl map children r respective Since L rootd cb rootd rootd label preserving exactly children r way label image similarly Lg c mapping label preserving child rulenode By Lemma A4 follows Cc children er gl g label children T computed d r1 r We Ic encoding mapping We proceed induction topdown ordering rulenodes built labelpreserving r ri_1 children goalnodes Furthermore induction literals rules distinct variables argument position Therefore 0 variables g 15g lg Bg assume induction rulenodes s Recall assumed isomorphism 130 Ak Levy et al Artificial Intelligence 97 1997 83136 states goalnode g adornments removed querytree node predicate end procedure buildforest Note assumption P bR assumption Let g father ri d assume holds base case node predicate pCb Consider g node predicate p By case It expanded querytree assumption inductive g expanded rule tlg r qXl A A 4 Xn A Cb Ti pcbcg X rulenode resulting ri node c bottomup li Denote condition EO Definition 9 Note removing rule li exactly cl rule 14 map satisfying nodes querytree condition El Furthermore 14 labelpreserving L ri children Finally note g child mimics Ti node predicate p g node predicate pCbR required inductive labels children g r refinement querytree r The mapping r subgoals ri subgoals Y ri required condition E3 satisfied As base case L ri ri children computation computation adornments assumption previous case We prove In case refined predicate goalnodes ti g expanded children Y Because L 9 g isomorphic querytree In case r child Eq I g children L Eq g Eq Cc g expanded Yi mapped way definition embeddings symbolic image encoding derivations mapping constructed follows We begin roots forest For goalnode derived predicate expanded embedding choose child rulenodes children expanded rulenode choose children expanded For remain considering querytree T An embedding children Only goalnodes base predicates symbolic derivations Every embedding follows second clause possible possible E3 satisfied embedding proof equivalent Therefore prove claim embedding d T exists encoding symbolic derivation structure d structure rules Following symbolic derivation d E 17 d image labelpreserving mapping d T To holds simply consider d exactly proof ifdirection d encoded querytree image unsatisfiable contain nodes labels d symbolic derivation precisely d Furthermore querytree n 7 A4 Proof Theorem 12 The theorem proved reducing ATM nating Turing machine 171 problem finding irrelevance acceptance problem linearspace alter rules A Y Levy et al Artijicial Intelligence 97 1997 83136 131 state machine similar ATM The execution ids describing contents input chine An ATM gives pair moves ery state state q leads q orstate leads successors successors andstate states Turing machine described sequence instantaneous consecutive descriptions stages execution tape location head state ma function ev id having acceptance If orstates successors orstate state symbol Furthermore If q andstate successors state q leads acceptance sense transition alternate lead input acceptance acceptance The states machine id having andstate orstate combination descriptions alphabet Instantaneous ids represented symbol cell s 6 symbol tape The symbol symbol id cells including tape state cell contain alphabet symbol cell internal state machine The union alphabet symbols composite symbol 6 state machine alphabet composite head placed contains symbol containing s In legal alphabet composite symbols symbol denoted B based representing tape input size ids tuples predicate IZ Each cell id arity id represented size IBI The variable X appears symbol appearing B All columns id 1 BI n The block position cell assume arbitrary ordering arity denote blocks variables variable W Thus contain tuples Xi cell The tuple Ui denotes block variables representing X appears position B positions The reduction linear block variables corresponding elements predicate corresponding cell symbol W emulates accepting Intuitively construct set rules bottomup computation M backward id initial The atom idX rules X describes legal id leads acceptance set rules follows First states For example suppose state states head 1 n input symbol b computation derivable Given ATM M input Xinit construct need rules representing 6 c q dl 1 R d2 2 L q symbol c obtained writing right If q orstate following head tape successor state st moving transition M machine symbol dl tape moving transitions consecutive rules idX1XilUdlUslbXi2Xn idX1XilUcclUbXi2Xn idXl Xi2USbUdXilXn idXl Xi29 ub Ucq Xi1 7 Xn If q andstate theory contains 1 n pair input symbols bt b2 following rule 132 A Y Levy et al Arhjicial Intelligence 97 I 997 83136 idX1 xi23 ubi 9 udlv Uslbz I xi2 3 Xn A idX1Xi2US2blUd2UbZXi2Xn idXl Xi29 ubl Ucq ub2 1 Xi23 Xn 1 To complete set rules rules necessary Denote Xfinal id assume Xinit tuple representing initial id Rl places loss generality initial state tuple representing Ms accepting unique subgoal query RI idXinir pX W R2 R3 lead accepting EDB predicate state EDB node Note e R2 aX W s idXfinal R3 X W A eX W aX W We denote reduction set rules P The following theorem establishes correctness Theorem A7 SZ RI p 2p D12 Dp holds M accept input initial state Xinip include instance ground obtained ground constants X W Furthermore fact rules variables appearing derivation p X W contain constants derivation instance id subgoal unified body derivation rule R3 x head id x X w W ground contain exactly force X W unify l9 Therefore Proof We note This follows rule appear head Therefore assigned constants distinct We refer x w Moreover w distinct rule instance ground This seen considering instance occurrence way transition descriptions node describing possible EDB subgoal accepting execution M accept Xinit rules R2 R3 derivation p p derivation subgoals id node instantaneous derivation id goalnode partial derivation p describes successor states Consequently tree ATM M Therefore position X variable head substituting trace M Therefore id If differs head represent rules written way block initial execution execution X state Conversely suppose M accepts produce symbolicderivation input A simple pX W contain RI trace machines 0 execution ly This assumes block size 3 If hold simply add dummy column block leave unchanged rules implement l15 logic A E Levy et ul Artificial Intelligence 97 1997 83136 133 References I S Abiteboul R Hull Data functions datalog negation Proceedings ACM SIGMOD 1988 International Conference Management Data 1988 2 S Addanki R Cremonini J Penberthy Reasoning assumptions graphs models Proceedings IJCAI89 Detroit Ml 1989 31 AR Anderson 41 Y Arens CA Knoblock ND Belnap Entailment Princeton University Press Princeton NJ 1975 WM Shen Query reformulation dynamic information integration Internat J Intelligent Cooperative information Systems 6 23 1996 99130 51 A Avron Whither 161 F Baader B Hollunder A terminological logic J Philos Logic 21 1992 243281 knowledge representation relevance inference Proceedings Workshop Processing Declarative Knowledge PDK91 Lecture Notes complete algorithm Artificial Intelligence Springer Berlin 1991 6786 7 J E Bacchus AJ Grove JY Halpem D Koller Statistical foundations default reasoning Proceedings IJCAI93 Chambery France 1993 18 1 E Bancilhon D Maier Y Sagiv J Ullman Magic sets strange ways programs Proceedings 5th ACM Symposium Principles Database Systems 1986 9 C Beeri R Ramakrishnan On power magic Proceedings 6th ACM Symposium Principles Database Systems 1987 269283 1 lo JA Blakeley N Cobum PA Larson Updating derived relations Detecting irrelevant autonomously computable updates Trans Database Systems 14 3 1989 369400 II D Bobrow ed Qualitative Reasoning Physical Systems NorthHolland Amsterdam 1 12 1 A Borgida P PatelSchneider A semantics complete algorithm subsumption CLASSIC 1984 description logic J Art Intell Res 1 1994 277308 131 A Brodsky Y Sagiv On termination datalog programs JM Nicolas W Kim S Nishio eds Deductive Objectoriented Databases NorthHolland Amsterdam 1990 4764 141 M Bruynooghe D De Schreye B Krekels Compiling control J Logic Programming 6 1989 135162 15 M Bruynooghe D De Schreye B Martens A general criterion infinite unfolding Proceedings International Symposium Logic Programming avoiding partial deduction logic programs 117131 Paris 1991 1161 R Carnap Logical Foundations Probability University Chicago Press Chicago 1171 A Chandra D Kozen L Stockmeyer Alternation 181 CL Chang Resolution plans theorem proving 1 191 WJ Clancey The advantages abstract control knowledge expert design J ACM 28 1 1981 114133 Proceedings IJCAI79 Tokyo 1979 143148 IL 1950 Proceedings AAAI83 Washington DC Morgan Kaufmann Los Altos CA 1983 7478 1201 P Cousot R Cousot Abstract interpretation application logic programs J Logic Programming 13 23 1992 103179 I21 A Darwiche A logical notion conditional independence Arfcial Intelligence 97 1997 4582 issue 221 R Davis Diagnostic 410 reasoning based structure behavior Artificial Intelligence 24 1984 347 231 DL Draper Relevance measures AAAI Fall Symposium Relevance November 1241 M Dunn Relevance logic entailment localized partial evaluation belief networks 1994 D Gabbay E Guenthner Working Notes eds Handbook Philosophical Logic Vol III Alternatives Classical Logic Reidel Dordrecht The Netherlands 1986 117224 251 C Elkan A decision procedure conjunctive query disjointness Proceedings 8th ACM Symposium Principles Database Systems 1989 26 C Elkan Independence logic database queries updates Proceedings 9th ACM Symposium Principles Database Systems 1990 154 160 symmetry 127 I T Ellman Abstraction approximate Proceedings IJCAI93 Chambery France 1993 916921 128 1 0 Etzioni Why PRODIGYEBL works Proceedings AAAI90 Boston MA 1990 134 A E Levy et al Artificial Intelligence 97 1997 83136 searchcontrol 1291 0 Etzioni Acquiring 30 0 Etzioni S Minton Why EBL produces overlyspecific knowledge static analysis Articial Intelligence 62 1993 knowledge critique PRODIGY approaches Proceedings Machine Learning Conference Aberdeen Scotland interface intemet Comm ACM 37 7 1994 7276 1992 1311 0 Etzioni D Weld A softbotbased 321 B Falkenhainer K Forbus Compositional modeling finding right mode1 job ArtQicial Intelligence 51 1991 95143 33 R Fikes M Cutkosky T Gruber I Van Baalen Knowledge sharing technology project overview Knowledge Systems Laboratory Tech Rept No KSL 9171 Stanford CA 1991 341 P GZirdenfors On logic relevance Sythese 37 1978 351367 1351 P Gtidenfors Knowledge Flux Modeling Dynamics Epistemic Srates MIT Press Cambridge MA 1988 1361 H Geffner J Pearl A framework HE Kyburg R Loui G Carlson eds Knowledge Representation Defeasible Reasoning Academic Press Dordrecht The Netherlands reasoning defaults 1990 37 MR Genesereth An overview metalevel architectures Morgan Kaufmann Los Altos CA 1983 119123 Proceedings AAAI83 Washington DC 38 MR Genesereth An agentbased framework software interoperability Proceedings Software Technology Conference Los Angeles CA 1992 39 MR Genesereth NJ Nilsson Logical Foundations Artificial Infelligence Morgan Kaufmann Los Altos CA 1987 40 E Giunchiglia 411 R Greiner RLL1 representation language 809 Working Paper Stanford CA 1980 T Walsh A theory abstraction Artificial Intelligence 56 3 1992 language Stanford Heuristic Programming Project HPP 142 1 R Greiner Finding optimal derivation 1991 95116 50 I strategies redundant knowledge base Artijicial Intelligence 43 R Greiner Learning efficient query processing strategies Proceedings I1 th ACM SIGACTSIGMOD SIGART Symposium Principles Database Systems San Diego CA 1992 1441 R Greiner I JuriSica A statistical AAAI92 San Jose CA 1992 approach solving EBL utility problem Proceedings 1451 PJ Hayes Computation deduction Proceedings 1973 Mathematical Foundations Computer Science Symposium Czechoslovakian Academy Sciences 1973 461 Y Iwasaki AY Levy Automated mode1 selection simulation Proceedings AAAI94 Seattle WA 1994 1183l 190 47 JM Keynes A Treatise Probability Macmillan London 1921 481 M Kifer On safety domain capturability independence International Conference Data Knowledge Bases Jerusalem 49 A Klug On conjunctive queries containing 501 CA Knoblock Learning abstraction hierarchies inequalities database 1988 J ACM 35 1 1988 146160 queries Proceedings problem solving Proceedings AAAI90 Boston MA Morgan Kaufmann Los Altos CA 1990 5 1 CA Knoblock Gathering Intelligence 1995 AY Levy eds Working Notes AAAI Spring Symposium Information Heterogeneous Distributed Environments American Association Artificial 52 R Kowalski A proof procedure connection graphs J ACM 22 4 531 G Lakemeyer A logical account relevance Proceedings IJCAI95 Montreal Que 1995 853 1975 572595 859 1541 DB Lenat R Davis J Doyle MR Genesereth Reasoning E HayesRoth DA Waterman DB Lenat eds Building Expert Systems Addison Wesley Reading MA 1983 systems PhD Thesis Stanford University 551 AY Levy reasoning knowledge reasoning based Irrelevance Stanford CA 1993 561 AY Levy Creating 1994 588594 abstractions relevance reasoning Proceedings AAAI94 Seattle WA 571 AY Levy RE Fikes Y Sagiv A prooftheoretic irrelevance Working Notes AAAI Fall Symposium Relevance November applications approach foundations 1994 A Z Levy et al Arttficial Intelligence 97 1997 83136 135 158 1 AY Levy I Singh Mumick Y Sagiv Query optimization predicate movearound Proceedings 20th VLDB Conference Santiago Chile 1994 96107 I59 1 AY Levy I Singh Mumick Y Sagiv 0 Shmueli Equivalence queryreachability satisfiabihty datalog extensions Database Systems Washington DC 1993 109122 Proceedings 12th ACM SIGACTSIGMODSIGART Symposium Principles 601 AY Levy A Rajaraman JJ Ordille Query answering algorithms information agents Proceedings AAAI96 Portland OR 1996 4047 611 AY Levy Y Sagiv Constraints redundancy Datalog Proceedings Zlth ACM SIGACT SIGMODSIGART Symposium Principles Database Systems San Diego CA 1992 6780 62 AY Levy Y Sagiv Exploiting IJCAI93 Chambery France 1993 631 AY Levy Y Sagiv Queries irrelevance 138144 reasoning guide problem solving Proceedings independent updates Proceedings 19th VLDB Conference Dublin Ireland 1993 171181 641 AY Levy Y Sagiv Semantic query optimization Proceedings 14th ACM SIGACTSIGMODSIGART Symposium Principles Database Systems San Jose CA 1995 163 173 datalog programs 651 AY Levy D Srivastava T Kirk Data model query evaluation global information systems J Intelligent Information Systems Special 2 1995 Issue Networked Information Discovery Retrieval 5 1661 N Limestone Learning quickly irrelevant attributes abound new linearthreshold algorithm Machine Learning 2 1988 285318 67 JW Lloyd JC Shepherdson Partial evaluation logic programming J Logic Programming 1 I 1991 217242 681 S Minton Quantitative results concerning utility explanation based learning Proceedings AAAI88 St Paul MN 1988 69 1 S Minton J Carbonell C Knoblock D Kuokka 0 Etzioni Y Gil Explanation based learning problem solving perspective Artijicial Intelligence 40 1989 63l 18 701 J Pearl Probabilistic Reasoning Intelligent Systems Networks Plausible Inference Morgan Kaufmann San Mateo CA 1988 7 I J Pearl System Z natural ordering defaults tractable applications reasoning MY Vardi ed Theoretical Aspects Reasoning Knowledge Morgan Kaufmann Los Altos CA 1990 121135 nonmonotic 72 C Petalson The BACK overview 1731 D Plaisted Theorem proving abstraction Artificial Intelligence 16 1981 47108 741 RB Rao R Greiner T Hancock Exploiting Proc SIGART Bull 2 3 absence irrelevant 1991 114119 information dont know help Working Notes AAAI Fall Symposium Relevance November 1994 1751 IS Rombauer 1761 S Russell The complete M RombauerBecker Joy Cooking Merrill New York 1975 guide MRS Tech Rept KSL8512 Knowledge Systems Laboratory Department Computer Science Stanford University CA 1985 77 ED Sacerdoti Planning 781 Y Sagiv M Yannakakis Equivalence 1981 633655 J ACM 27 4 operators hierarchy abstraction spaces Artificial Intelligence 5 1974 115135 relational expressions union difference testing effective 791 Y Sagiv On C Delobel M Kifer Y Masunaga eds Proceedings 2nd International Conference Deductive ObjectOriented Databases Munich Germany SO Y Sagiv A termination V Saraswat K Ueda eds Proceedings 1991 test logic programs magic programs 1991 244262 computability International Symposium Logic Programming MIT Press Cambridge MA 1991 518532 8 I A Segre C Elkan A highperformance explanationbased learning algorithm Artificial Intelligence 69 1994 I50 82 0 Shmueli Equivalence 83 1 S Sickel A search technique datalog queries clause undecidable interconnectivity J Logic Programming 15 1993 231241 1976 graphs IEEE Trans Comput 25 8 823835 84 I D Smith Controlling inference PhD Thesis Stanford University Stanford CA 1986 136 A1 Levy et al Artificial Intelligence 97 1997 83136 1851 DA Smith TJ Hickey Partial evaluation CLP language Proceedings lnternafional Symposium Logic Programming 1990 119 138 861 D Srivastava R Ramakrishnan Pushing constraint selections J Logic Programming 16 34 1993 361414 187 D Submmanian MR Genesereth The relevance irrelevance Proceedings IJCAI87 Milan Italy Morgan Kaufmann Los Altos CA 1987 SS D Subramanian A theory justified reformulations PhD Thesis Stanford University Stanford CA 1989 891 JD Ullman Principles Database Knowledgebase Sysrems Vols I II Computer Science Press Rockville MD 1989 901 JD Ullman Database Theory Information 1997 integration logical views Proceedings Infernational Conference 91 A Van Gelder A message passing framework logical query evaluation Proceedings ACM SIGMOD Internutional Conference Management Data 1986 155165 92 MY Vardi Automata theory ofDatabase Systems PODS database March 1989 8392 theoreticians Proceedings 8th Symposium Principles 1931 L Vieille Recursive query processing power logic Theoret Comput Sci 69 1989 l53