Artiﬁcial Intelligence 162 2005 4988 wwwelseviercomlocateartint Partitionbased logical reasoning ﬁrstorder propositional theories Eyal Amir Sheila McIlraith b Computer Science Department University Illinois UrbanaChampaign Urbana IL 61801 USA b Department Computer Science University Toronto Toronto Ontario M5S 3H5 Canada Received 20 November 2001 accepted 5 November 2004 Available online 15 December 2004 Abstract In paper tree decomposition applied reasoning ﬁrstorder propositional logic theories Our motivation twofold First concerned reason effectively multiple knowledge bases overlap content Second concerned improving efﬁciency reasoning set logical axioms partitioning set respect detectable structure reasoning individual partitions locally distributed fashion To end provide algorithms partitioning reasoning related logical axioms propositional ﬁrstorder logic Many reasoning algorithms present based idea passing messages partitions We present algorithms forward datadriven backward querydriven mes sage passing Different partitions different associated reasoning procedures We character ize class reasoning procedures ensures completeness soundness messagepassing algorithms We provide specialized algorithm propositional satisﬁability checking partitions Craigs interpolation theorem serves key proving soundness completeness algorithms An analysis algorithms emphasizes parameters partitionings inﬂuence efﬁciency computation We provide greedy algorithm automatically composes set logical axioms partitions following analysis 2004 Published Elsevier BV Corresponding author Email addresses eyalcsuiucedu E Amir sheilacstorontoedu S McIlraith 00043702 matter 2004 Published Elsevier BV doi101016jartint200411004 50 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Keywords Reasoning structure Theorem proving Firstorder logic SAT Tree decomposition Graphical models Parallel computation Distributed computation 1 Introduction There growing building large knowledge bases KBs everyday knowl edge world teamed theorem provers reasoners perform inference Three systems Cycorps Cyc High Performance Knowledge Base HPKB systems developed Stanfords Knowledge Systems Lab KSL 51 SRI 24 These KBs comprise tenshundreds thousands logical axioms One ap proach dealing size complexity KBs structure content way multiple domain taskspeciﬁc KBs microtheories In paper investigate reason effectively partitioned sets logical axioms overlap content different reasoning engines More generally investigate problem exploit structure inherent set logical axioms induce partitioning axioms improve efﬁciency reasoning To end propose partitionbased logical reasoning algorithms reasoning logical theories1 decomposed related partitions axioms Our algo rithms exploit idea tree decomposition 7 extending propositional ﬁrstorder logic FOL theorem proving We provide forward datadriven backward querydriven messagepassing algorithms theories partitioned struc ture similar jointree 66 specializing resolution theorem proving We provide algorithm partitionbased propositional satisﬁability SAT Our messagepassing algorithms designed loss generality reasoning partition realized arbitrary consequenceﬁnding engine 67 We characterize class reasoning procedures ensures completeness soundness algorithms We use Craigs interpolation theorem 30 prove soundness com pleteness messagepassing algorithms respect class procedures It prove soundness completeness propositional satisﬁability al gorithm We investigate impact algorithms resolutionbased inference analyze computational complexity partitionbased SAT algorithm A critical aspect partitionbased logical reasoning selection good partition ing theory The computational analysis partitionbased reasoning algorithms suggests parameters partitionings inﬂuence computation algorithms number nonlogical symbols included communication partitions size partition topology partitions graph This observation guides propose generic algorithm decomposing logical theories partitions greedy algorithm tries optimize parameters Surprisingly little work speciﬁc problem exploiting structure FOL theorem proving manner propose We speculate attributed 1 In paper set axioms theory vice versa Also stated theories axioms KBs ﬁrstorder logic E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 51 fact FOL theorem proving traditionally examined mathematics domains necessarily structure supports decomposition Nevertheless tree decom position methods similar apply successfully reasoning Bayes networks 6683 constraint satisfaction problems 37 proposi tional reasoning 3886 originally dynamic programming 12 The common insight knowledge partitioned clusters interact treelike manner reasoning accomplished time exponential graph parameter known treewidth captures size clusters relative original problem graph 7 Where possible adopt common terminology paper relate work previous contributions The rest paper organized follows Section 2 describes messagepassing algorithms sufﬁcient conditions soundness completeness In Section 3 specialize algorithms theorem proving resolution discuss efﬁciency messagepassing Section 4 offers algorithm propositional satisﬁability alyzes computational complexity Section 5 presents algorithm decomposing logical theory Finally Section 6 discusses related work Some results paper appeared previously 578 2 Partitionbased theorem proving In section address problem reason partitioned propositional FOL theory theorem proving In particular propose forward backwards messagepassing algorithms spirit Pearl 83 We identify conditions underwhich partitionspeciﬁc theorem proving results sound complete partitionbased logical reasoning cid1 We deﬁne following terminology Ai icid1n partitioning logical theory A A Ai Each individual Ai called partition LAi signature set nonlogical symbols LAi language set formulae built LAi Each partitioning deﬁnes labeled graph G V E l intersection graph In intersection graph node corresponds individual partition Ai V 1 n nodes j linked edge LAi LAj sym bol common E j LAi LAj cid3 The edges labeled set symbols associated partitions share li j LAi LAj We refer li j communication language partitions Ai Aj We ensure inter section graph connected adding minimal number edges E labels li j We illustrate notion partitioning terms simple propositional theory A depicted left Fig 1 clausal form theory presented material implication Fig 2 These axioms capture functioning aspects espresso machine The ﬁrst axioms denote machine pump OK pump machine water supply Alternately machine ﬁlled manually case machine ﬁlled manually pump The axioms denote steam boiler OK 52 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Fig 1 A partitioning A intersection graph ok_pump on_pump water man_ﬁll on_pump water ok_boiler on_boiler steam water steam ok_boiler steam steam coffee hot_drink steam teabag hot_drink on_boiler steam coffee teabag man_ﬁll water man_ﬁll on_pump Fig 2 Axiomatization simpliﬁed espresso machine supply water The ﬁnal axioms denote coffee tea steam coffee tea result hot drink The righthand Fig 1 depicts decomposition A partitions A1 A2 A3 intersection graph The labels edges 1 2 2 3 water steam respectively 21 Forward message passing In section propose forward messagepassing algorithm reasoning partitions logical axioms Fig 3 describes forward messagepassing algorithm FORWARDMP MP ﬁnding truth value query formula Q LAk k cid1 n given partitioned theory A graph G V E l G intersection graph A To determine direction messages sent graph G step 1 MP computes strict partial order nodes graph partitioning query Q E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 53 PROCEDURE FORWARDMP MPAi icid1n G Q Ai icid1n partitioning theory A G V E l graph describing connections partitions Q query LAk k cid1 n 1 Determine Deﬁnition 21 2 Concurrently Perform consequence ﬁnding partitions Ai cid1 n b For j E j consequence ϕ Aj ϕ Aj ϕ Lli j add ϕ set axioms Ai c If Q proven Ak derive subsuming formula initially add Q Ak derive inconsistency return YES Fig 3 A forward messagepassing algorithm Deﬁnition 21 Given partitioned theory A Ai associated graph G V E l query Q LAk let disti j j V length shortest path nodes j G Then j iff disti k distj k icid1n cid1 This algorithm exploits consequence ﬁnding step 2a perform reasoning individual partitions Consequence ﬁnding deﬁned Lee 67 problem ﬁnding logical consequences theory sentences subsume Recall clausal FOL ϕ subsumes ψ substitution θ ϕθ ψ ϕ strictly subsumes ψ ϕ subsumes ψ ψ subsume ϕ Theorem 24 proves soundness completeness MP algorithm It requires reasoners step 2 sound complete Deﬁnition 22 Completeness consequence ﬁnding Given set formulae A reasoning procedure R R complete consequence ﬁnding iff clause ϕ nontautologous logical consequence A R derives clause ψ A ψ subsumes ϕ Furthermore R complete consequence ﬁnding FOL opposed clausal FOL iff nontautologous logical consequence ϕ A R derives logical consequence ψ A ψ ϕ ψ Lϕ In Section 31 reasoning procedure complete consequence ﬁnding clausal FOL converted reasoning procedure complete consequence ﬁnding FOL In propositional logic conditions identical Consequently use sound complete consequenceﬁnding algorithm reasoning individual partition MP This restricted variants reso lution Nevertheless resolution rule complete clausal consequence ﬁnding 6798 true variants linear resolution ones described Inoue 61 Minicozzi Reiter 80 A weaker version complete 54 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Using FORWARDMP prove hot_drink Partition A1 A1 A1 A2 A2 A2 A3 A3 A3 Resolve 2 4 m1 1 m2 12 cid11 m3 5 m4 13 m5 14 cid11 10 9 m7 11 m8 m6 Generating on_pump water ok_pump water water clause water passed A1 A2 ok_boiler on_boiler steam on_boiler steam steam clause steam passed A2 A3 steam teabag hot_drink steam hot_drink hot_drink m1 m2 m3 m4 m5 m6 m7 m8 m9 Fig 4 A proof hot_drink A Fig 1 asserting ok_pump 12 A1 ok_boiler 13 on_boiler 14 A2 ness consequence ﬁnding true semantic resolution 99 setofsupport resolution We discuss case resolution Section 3 In addition reasoning methods focus given sublanguage discussed 185261 3839647075 An example restricted consequence ﬁnd ers prime implicate generator sublanguage Recall clause ϕ prime implicate theory T T ϕ formula strictly subsumes ϕ entailed T Such consequence ﬁnders commonly prime implicate generation applications diagnosis abduction 77 Consequence ﬁnders focus sublanguage directly MP reasoning partitions Alternatively batch mode generate select consequences sublanguage send messages batch In Fig 4 illustrate execution MP resolution Given partitioning intersection graph forms undirected tree MP al gorithm sound complete proof procedure The completeness relies Craigs interpolation theorem Theorem 23 Craigs interpolation theorem 30 If α cid13 β formula γ involving symbols common α β α cid13 γ γ cid13 β Craigs interpolation theorem true α β inﬁnite sets sentences 98 use resolution theorem proving 6098 equality 3031 proper reformulation theorem Ai partitioned theory Theorem 24 Soundness completeness Let A intersection graph G tree cycles Let k cid1 n ϕ sentence LAk If reasoning procedure partition sound complete consequence ﬁnding FOL deﬁned Deﬁnition 22 A ϕ iff MP outputs YES icid1n cid1 Proof See Appendix A1 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 55 Fig 5 An intersection graph left right applying BREAKCYCLES Note Theorem 24 requires intersection graph A tree If intersec tion graph A tree MP uses input MP fail complete proof procedure Fig 5 illustrates problem The lefthand Fig 5 illustrates intersection graph partitioning A1 A2 A3 A4 theory A If try prove s follows A partitioning graph MP transmitted tween partitions For example send p s A2 A4 graph allows transmission sentences containing s Thus MP lefthand graph fail prove s In case ﬁrst syntactically transform intersection graph tree enlarged labels enlarged communication language apply MP resultant tree In particular like resultant tree proper labeling given partitioning Ai associated Deﬁnition 25 Proper labeling For partitioning A tree G V E l proper labeling j E B1 B2 subtheories A sides edge j G true li j LB1 LB2 icid1n cid1 Note property analogous running intersection property jointree algorithms inference Bayes networks 113396 constraint satisfaction problems 3758 The running intersection property deﬁned respect par titions cluster contents individual logical proposition set logical axioms formed logical propositions In context running intersec tion property requires symbol s appears Ai Aj s appears partitions treepath Ai Aj In contrast proper labeling property deﬁned respect language LAi partition Ai partition set logical axioms As proper labeling condition applied links path partitions The following lemma provides main argument completeness proofs paper Lemma 26 Let A Ai partitioned theory assume associated graph G tree proper labeling partitioning Aiicid1n Also assume icid1n cid1 56 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 PROCEDURE BREAKCYCLESG V E l 1 Find minimallength cycle nodes v1 vc v1 vc G If cycles return G cid2 2 Select index st c lvj vj 1 lva va1 minimal label va va1 adds minimal number symbols rest cycle acid3j c 3 For j c j cid3 set lvj vj 1 lvj vj 1 lva va1 4 Set E E va va1 lva va1 1 Fig 6 An algorithm transform intersection graph G tree reasoning procedures MP complete consequence ﬁnding deﬁned Deﬁnition 22 Let k cid1 n let Q LAk kiE lk sentence If A Q MP outputs YES cid1 Proof See Appendix A1 Observe Theorem 24 overly narrow Even intersection graph tree MP sound complete Algorithm BREAKCYCLES shown Fig 6 performs transformation produces tree proper labeling labeled graph X denotes cardinality set X It particular importance given set KBs merge restructure Note Section 5 gives general algorithm treats case restructuring possible Using BREAKCYCLES transform graph depicted lefthand Fig 5 tree right First identify minimal cycle cid171 3 3 4 4 1cid18 remove 4 1 E add r labels 1 3 3 4 Then ﬁnd minimal cycle cid172 3 3 4 4 2cid18 remove 2 3 E s appears labels 4 2 3 4 Finally identify minimal cycle cid171 3 3 4 4 2 2 1cid18 remove 4 2 add s rest cycle The proof s MP follows sending p s A2 A1 sending q r s A1 A3 sending r s A3 A4 concluding s A4 Notice executing BREAKCYCLES remove edge partici pates minimal cycle case removing edge 4 1 removal inﬂuences labels cycle Theorem 27 Soundness completeness Let A Ai partitioned theory intersection graph G Let k cid1 n ϕ sentence LAk If reasoning pro cedure partition sound complete consequence ﬁnding deﬁned Deﬁnition 22 A ϕ iff applying BREAKCYCLES MP outputs YES icid1n cid1 Proof See Appendix A2 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 57 BREAKCYCLES greedy algorithm worstcase complexity OE2 m m number symbols LA The rationale roughly follows There E cycles broken step 1 takes OE time step 3 takes OE m time step 2 implemented OEm time dynamic programming Other algorithms use context variants cutset method reasoning graphs 910 Darwiche 33 algorithm similar BREAK CYCLES problem creating join tree Our algorithm differs Darwiches treating formed partition creating tree greedy way Darwiches method randomly selects tree Finally Theorems 24 27 observe partitioned theory A Ai tree decomposition deﬁned Arnborg 7 MP sound complete icid1n cid1 22 Backward message passing Our MP algorithm uses query Q induce ordering partitions turn guide selective consequence ﬁnding reasoning forward Many theorem proving strategies exploit query aggressively reasoning backwards query Such strategies proven effective variety reasoning problems planning Indeed theorem provers PTTP 101 built backward reasoners query goal order run One way use MP analogous backward messagepassing scheme assert Q Ak choose partition Aj distant Ak G distance 2 nodes graph G number nodes comprising shortest path nodes try prove Aj MP If wish follow spirit backwardreasoning closely transform G chain similar way transformation G tree BREAKCYCLES The resultant chain graph querydriven backward message passing Ak We present algorithm called BACKWARDMP BMP Fig 7 BMP takes input partitioned theory A graph G0 query Q returns YES prove Q Procedure CHAINIFY outlined Fig 8 It accepts labeled graph returns transformation graph chain changing labels appropriately Alternately create chain directly partitions total order CHAINIFY ensures resulting graph proper labeling BMP sound complete reasoning procedure partition complete consequence ﬁnding Theorem 28 Soundness completeness Let A Ai partitioned theory Let k cid1 n ϕ LAk sentence If reasoning procedure partition sound complete consequence ﬁnding A ϕ iff applying BMP outputs YES icid1n cid1 Proof See Appendix A3 Algorithm BMP presented case subgoaldisjunctive systems proof subgoal yields proof entire query This case resolution 58 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 PROCEDURE BACKWARDMPBMPAiicid1n G0 Q Ai icid1n partitioned theory G0 V E l graph Q query LAk k cid1 n 1 G CHAINIFYG0 k 2 For cid1 n cid3 k set goali Set goalk Q 3 Concurrently FALSE goal Ai prove FALSE For partition Ai cid1 n attempt prove goali b For j E j generate subgoala ϕ Aj ϕ Lli j setb goali c If goali proved Ai return YES goali ϕ In resolution generated clause considered negation subgoal b In resolution refutation goal negated step essentially adds ϕ Ai Fig 7 A backward messagepassing algorithm PROCEDURE CHAINIFYG k G V E l graph describing connections partitions k cid1 V 1 Let disti j j V length shortest path j G Let 0 j iff disti k distj k 0 strict partial order 2 Impose total order V agree 0 0 j j 3 Let vaacid1n V v1 k cid1 n va va1 4 Let Ecid20 va va1in 5 Set lcid20i j j V 6 For j E n cid21 va j va j set lcid20va va1 lcid20va va1 li j 7 Return Gcid20 V Ecid20 lcid20 Fig 8 A procedure transforms graph G chain Gcid20 variants The intuition algorithm partition supplied subgoal sentence ϕ partition ϕ added ORed partitions goal We G chain subgoals split partitions Splitting subgoals requires accounting different preconditions natural deduction wish avoid simplicity inference 23 Queries drawn multiple partitions MP variants require query Q language single partition LAk k cid1 n One way answer query Q comprises symbols drawn multiple partitions add new partition AQ language LAQ LQ language query AQ contain Q axioms Following addition new partition BREAKCYCLES run new intersection graph ensure proper labeling E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 59 G partitioned theory discussed Section 21 To prove Q AQ run MP resulting graph Alternately decompose query appropriate partitions following methods 81 97 Since issue decomposing query simple simple case propositional query leave ﬁrstorder case literals contain symbols multiple partitions future work Ql rl Qi Given propositional query Q transform form Q1 1 j formula language single partition LAkij Ql 1 kij index partition includes vocabulary Qi j For example Q asserting Qi CNF form We check disjunct Qi j 1 Akij j cid1 ri proving FALSE partitions To prove Q check disjunct transformed form It valid consequence A iff disjuncts valid consequences A We discuss special topic assume Q drawn LAk k cid1 n Q1 r1 Qi ri 3 Resolution messagepassing The previous section presented messagepassing algorithms arbitrary sound complete consequence ﬁnder In section specialize messagepassing al gorithms consequence ﬁnders speciﬁcally employ resolution We focus ﬁrstorder case resolution We analyze effect message passing com putational efﬁciency resolutionbased inference The presentation section makes explicit reference forward messagepassing algorithm MP wish stress results section equally applicable messagepassing algorithms introduced previous section For background material resolution reader referred 4554 2272 31 Resolution messagepassing Resolution 88 widely reasoning methods automated deduc tion speciﬁcally consequence ﬁnding As noted Section 2 resolution rule complete clausal consequence ﬁnding It requires input formula clausal form conjunction disjunctions unquantiﬁed literals For general ﬁrst order formulae transformation clausal form 71 includes Skolemization eliminates quantiﬁers possibly introduces new constant symbols new function symbols We present algorithm RESOLUTIONMP RESMP uses resolution reso lution strategies Fig 9 The rest section devoted explaining different implementations subroutine RESSENDϕ j procedure send ap propriate messages partitions ﬁrst implementation clausal propositional theories second clausal FOL theories associated graph G prop erly labeled tree labels include function constant symbols language clausal FOL theories uses unskolemization subse 60 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 PROCEDURE RESOLUTIONMPRESMPAiicid1n G Q Ai icid1n partitioned theory G V E l graph Q query formula language LAk k cid1 n 1 Determine Deﬁnition 21 2 Add clausal form Q Ak 3 Concurrently Perform resolution partitions Ai cid1 n b For j E j partition Aj includes clause ϕ input resolvent predicates ϕ Lli j perform RESSENDϕ j c If Q proven Ak return YES Fig 9 A resolution forward messagepassing algorithm quent Skolemization generate messages passed partitions fourth reﬁnement class theories avoids unskolemization In propositional case subroutine RESSENDϕ j Implementation 1 simply adds ϕ Ai MP MP sound complete In FOL case implementing RESSEND requires care To illustrate consider case resolution generates clause P B x B constant symbol x vari able It implicitly proves b P b x RESMP need send b P b x partition send P B x B communication lan guage partitions ground theories problem 98 In ﬁrstorder case completeness consequence ﬁnding clausal ﬁrstorder logic lan guage Lees result resolution guarantee completeness consequence ﬁnding corresponding FOL language This problem reﬂected slightly different statement Craigs interpolation theorem 30 applies resolution 98 A simple way addressing problem add constant function symbols communication language connected set partitions This advantage preserving soundness completeness simple implement In case subroutine RESSENDϕ j Implementation 2 simply adds ϕ Ai MP In large systems consist partitions addition constant function symbols partitions potential computationally inefﬁcient leading unnecessary irrelevant deduction steps Arguably compelling way addressing problems associated resolution ﬁrstorder ories infer existential formula b P b x P B x send formula proper partition Skolemize For example ϕ P f gB x clause RESSEND gets replacing b P b x eliminates unnecessary work receiving partition The process conservatively replacing function constant symbols existentially quantiﬁed variables called unskolemization reverse Skolemization discussed E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 61 PROCEDURE RESSENDϕ j ϕ formula j cid1 n Implementation 3 1 Unskolemize ϕ set formulae Φ Lli j treating symbol Lϕ li j Skolem symbol 2 Let Φ2 Skolemized version Φ 3 For term t unskolemized step 1 t appeared previ ously sent message ψ s t s Skolemization replace Skolemization t Φ2 s 4 For ϕ2 Φ2 ϕ2 subsumed clause Ai add ϕ2 set axioms Ai Fig 10 Subroutine RESSEND unskolemization 1329 21 Chadha Plaisted 21 present algorithm U complete purposes generalizes simpliﬁes algorithm 29 Theorem 31 21 Let V vocabulary ϕ ψ formulae ψ LV ϕ ψ There exists F LV generated algorithm U F ψ Thus reasoning procedure complete clausal consequence ﬁnd ing unskolemizing ϕ procedure U V li j Skolemizing result gives combined procedure message generation complete FOL conse quence ﬁnding This procedure readily RESMP MP upholding soundness completeness supplied Lemma 26 The subroutine RES SENDϕ j Implementation 3 implements approach presented Fig 10 It replaces ϕ set formulae Lli j follows ϕ It Skolemizes resulting formulae inclusion Ai The procedure makes sure terms func tions appear message replaced Skolem constants functions instances discuss reason end subsection Procedure U generate formula given clause ϕ For example ϕ P x f x u gu li j P generate xyuvP x y u v uvxyP x y u v ϕ entails quantiﬁed formulae quantiﬁed formula entails In case avoid quantiﬁed formulae replacing unskolemize Skolemize process RESSEND Implementation 3 procedure produces set formulae directly Implementation 4 It presented Fig 11 Steps 3 4 procedure RESSENDϕ j Implementation 4 correspond similar steps procedure U presented 21 simplifying appropriate setup Our procedure differs unskolemizing procedures step 5 stops short replacing Skolem functions constants new existentially quantiﬁed variables Instead replaces new functions constant symbols The nondeterminism step 4 add possible combinations uniﬁed terms required ensure completeness 62 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 PROCEDURE RESSENDϕ j ϕ formula j cid1 n Implementation 4 1 T static table keeps value invocations RESSEND initialized RESMP called 2 Set S Lϕ li j S set symbols ϕ send 3 For term instance t f t1 tk ϕ f S t subexpression term t cid20 f cid20t cid20 kcid20 ϕ f cid20 S replace t x t new variable x k 0 t constant symbol 1 t cid20 4 Nondeterministicallya pair marked arguments x α y β ϕ α β uniﬁable unify occurrences x y unify αi βi markings x αi y βi 5 For marked argument x α ϕ Collect marked arguments variable lefthand sign Suppose x α1 x αl b Let y1 yr variables occurring α1 αl For cid1 l replace x αi f y1 yr ϕ function symbol f r 0 f constant symbol If αi appears table T f symbols αi entry T Else f fresh symbol add entry cid17αi f cid18 T 6 Add ϕ Ai subsumed clause Ai Nondeterministically select set pairs unify occurrences x y From forth continue set uniﬁcations The end result set clauses includes possibilities Fig 11 Subroutine RESSEND unskolemization For example ϕ P f gB x li j P RESSEND Implementa tion 4 adds P A x Ai new constant symbol A If ϕ P x f x u gu li j P RESSEND adds P x h1x u h2u Ai new function symbols h1 h2 Finally ϕ P x f x u f gu RESSEND adds P x f x u hu P h1u h2u u h2u Ai h h1 h2 new function symbols icid1n Theorem 32 Soundness completeness RESMP Let A partitioned theory cid1 Ai propositional ﬁrstorder clauses G tree properly labeled respect A Q LAk k cid1 n sentence query A Q iff applying RESMPAiicid1n G Q Implementation 4 RESSEND outputs YES Proof See Appendix A4 In Implementations 3 4 RESSEND carefully chose repeated Skolem constants sent clauses The reason following Craigs interpolation orem guarantees need send single sentence includes symbols link language However guaranteed sentence include clauses E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 63 Skolem constants need apply For example consider partitions A1 A2 A1 P s Qs constant symbol s A2 Qx P x variable x l1 2 P Q In separate messages A1 A2 need send P s Qs If unskolemize Skolemize P s P Skolem1 Qs QSkolem2 able reach clause A2 conclusion follow send P Skolem1 QSkolem1 We suspect procedure outlined Implementation 4 RESSEND deciding symbols repeated signiﬁcantly improved Consider ex ample previous paragraph change A1 P s Qs P r Qr There messages sent A1 A2 fact grounds restrict send messages messages contain s unskolemization Skolemization s Since messages mention r isomorphic messages mention s messages containing r dropped This observation promises cut number constant symbols partition signiﬁcantly efﬁcient optimal application general case raises set graphtheoretical problems outside scope article leave future work 32 Analysis comparison resolutionbased inference In ﬁnal subsection relating resolution analyze effect MP com putational efﬁciency resolutionbased inference identify parameters inﬂuence Current measures comparing automated deduction strategies insufﬁcient purposes Proof length 59105107 survey article 26 marginally relevant More relevant comparing sizes search spaces induced dif ferent strategies resolution propositional Horn clauses 84 contraction rules FOL 15 These measures precisely address needs use leaving development better measures comparison future work In resolution search space node search space includes set clauses properties relevant utilized resolution strategy clause parenthood information Each arc search space resolution step allowed strategy In contrast MP resolution search space nodes include partition membership information Further arc resolution step allowed utilized resolution strategy satisﬁes 1 axioms partition 2 axioms partition Aj second axiom drawn communication language li j querybased ordering allows second axiom sent Ai Aj Legal sequence resolutions correspond paths spaces cid1 Ai partitioned theory Any path MP resolution Proposition 33 Let A search space Aiicid1n path resolution search space unpartitioned theory A icid1n Evaluating MP respect proof length follows longest proof MP long longer longest MP proof Unfortunately shortest MP proof longer shortest possible proof MP This observation quantiﬁed easily simple case partitions A1 A2 The set messages 64 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 need sent A1 A2 prove Q exactly interpolant γ promised Theorem 23 α A1 β A2 Q The MP proof prove α cid13 γ γ cid13 β For propositional case results relating shortest proofs proofs interpolant Carbone 20 showed γ minimal interpolant important cases proof length α cid13 γ proof length γ cid13 β Ok2 sequent calculus cuts cuts case similar resolution bound k k length minimal proof α cid13 β In cases minimal interpolant shown size Oa2 sum lengths α β In general size γ large In fact propositional case open question size smallest interpolant polynomially bounded size formulae α β A positive answer question imply important consequence complexity theory NP coNP Ppoly 17 Nevertheless good upper bound length interpolation formula function length minimal proof 65 If α β share l symbols resolution proof α cid13 β length k interpolant γ length minklO1 2l 86 presented analysis ordered resolution propositional case They concepts induced width treewidth analyze performance algorithm We bring analysis results generalize cid1 Deﬁnition 34 87 A treedecomposition graph GV E pair D S T S Xi I collection subsets vertices G T I F tree node subset S following conditions satisﬁed iI Xi V 2 For edges v w E subset Xi S v w 1 contained Xi 3 For vertex x set nodes x Xi forms subtree T The width treedecomposition Xi I T I F maxiI Xi 1 The treewidth graph G equals minimum width treedecompositions G Every ordering symbols induces tree decomposition present details 63 The width tree decomposition called induced width ordering In context width decomposition A Ai largest number minus 1 nonlogical symbols appearing single partition including symbols links partitions The treewidth smallest width achievable theory best decomposition possible maintaining properlabeling property The results 86 ordered resolution resolve 2kn clause pairs k width decomposition The result shown instantiation MP propositional theories icid1n cid1 icid1n Theorem 35 Let A partitioned propositional theory n let G V E l cid1 Ai tree decomposition width k A Then time taken RESMP sound resolution strategy inpartition computation compute SAT A O2kn The space needed computation O2k E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 65 For ﬁrstorder case results The best known Meyer 79 showed ﬁrstorder predicate calculus equality recursive bound length smallest interpolant function length input axioms However result relating size interpolant length minimal proof resolution proof The results suggest guarantee small interpolant sure communication language minimal Unfortunately control communication language Take example case multiple KBs extensive overlap In cases communication language KBs large possibly resulting large interpolant In Section 5 provide algorithm partition ing theories attempts minimize communication language partitions Finally bring pair results appear 6 completion current ex position These results relate reasoning partitioned theories different ordering strategies resolution look 192238 information strategies Theorem 36 MP simulates orderings The following relationships hold MP algorithm ordering strategies directional resolution Aordering lock reso lution 1 Let A propositional theory cid1A total order n propositional symbols Then partitioning Ai icid1n A graph G partition reasoners based ordered resolution running MP perform resolutions directional resolution alternatively Aordering A order cid1A 2 Let A FOL theory cid1A total order n predicate symbols Then partitioning A Ai icid1n graph G partition reasoners based ordered resolution running MP perform resolutions Aordered resolution A order cid1A 3 Let A FOL theory I indexing literal instances Let n maxlliteral I l Assume I l1 I l2 l1 l2 predicate symbol Then partitioning A Ai partition reasoners generationset complete running MP perform resolutions lock resolution A index I icid1n cid1 Theorem 37 Orders simulate MP The following relationships hold MP algorithm orderingbased resolution strategies directional resolution lock resolution cid1 1 Let A Ai partitioned propositional theory GV E l tree icid1n properly labeled A Then total order cid1A As propositional symbols clause C consequence directional resolution A order cid1A C consequence running MP partitioning unrestricted resolution partition 2 Let A Ai partitioned FOL theory GV E l tree prop cid1 icid1n erly labeled A 66 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 3 Let A cid1 Then total order cid1A As predicate symbols clause C consequence Aordered resolution A order cid1A C consequence running MP partitioning unrestricted resolution partition Ai partitioned propositional theory GV E tree icid1n properly labeled A Then index I As literal instances clause C conse quence lock resolution A index I C consequence running MP partitioning unrestricted resolution partition 4 Partitionbased propositional satisﬁability In section present algorithm partitionbased logical reasoning takes advantage propositional satisﬁability SAT search subroutines DPLL 34 GSAT 92 WALKSAT 91 This algorithm similar algorithm 3637 constraint satisfaction problems contrast MP algorithms We bring correctness proof follows soundness completeness proof MP The algorithm allows examine complexity computation complexity directly related size labels intersection graph width link size graph 41 A partitionbased SAT procedure The algorithm propose presented Fig 12 It uses SAT procedure sub routine backtrackfree We algorithm database notation 106 πp1pk T projection operation relation T It produces relation includes rows T columns named p1 pk suppressing duplicate rows S cid1 R natural join operation relations S R It produces cross prod uct S R selecting entries equal identically named ﬁelds PROCEDURE LINEARPARTSATAiicid1n Ai icid1n partitioning theory A 1 G0 intersection graph Ai icid1n G BREAKCYCLESG0 2 For cid1 n let Li ij E li j 3 For cid1 n truth assignment A Li perform SATsearch cid1 Ai A storing result table Ti A 4 Determine Deﬁnition 21 5 Iterate cid1 n reverse order 1 For j cid1 n satisﬁes j E j perform Ti Ti cid1 πLiTj Join Ti columns Tj correspond Li If Ti return FALSE 6 If FALSE returned return TRUE Fig 12 An algorithm SAT partitioned propositional theory E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 67 checking SA RA discarding columns duplicated RA discarded The proposed algorithm shares intuition primeimplicate generation 6174 Step 1 algorithm converts intersection graph A tree Step 2 computes Li set symbols partition Ai s links union communication languages connected partition Ai Step 3 determines truth values Li satisﬁable akin computing implicates partition lan guage LLi Finally algorithm uses cid1 combine values ﬁnd models A This algorithm resembles ﬁnding models partition joining consistent interpretation fragments models A 37 The iterated join perform takes time proportional size tables involved Furthermore table sizes 2Li keeping consistent truth assignments Li projecting table joining table This similar approach presented 3694 trades space time CSPs Bayes Network The computation search partition yielding method takes time expo nential partition size space exponential separator label size Fig 13a displays result applying LINEARPARTSAT step 3 partitioned theory input Fig 4 Fig 13b 13c progression step 5 LINEARPARTSAT Soundness completeness follow argument similar given MP Theorem 41 Soundness completeness Given sound complete SATsearch procedure LINEARPARTSAT sound complete SAT partitioned propositional theories Fig 13 Iteratively projecting joining tables check satisﬁability 68 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Proof See Appendix A5 42 Analyzing satisﬁability LINEARPARTSAT Let A partitioned propositional theory n partitions Let m LA Li set propositional symbols calculated step 2 LINEARPARTSAT mi LAi Li cid1 n Let A k length axiom Lemma 42 The time taken LINEARPARTSAT compute SAT A cid3 Time n m m1 mn k cid6 cid4 cid4 cid4 cid4Ln cid4 cid4 cid5 O k2 n4 m Li fSAT mi cid4 cid4L1 cid3 ncid7 2 i1 cid8 cid5 fSAT time compute SAT If intersection graph G0 tree second argument summation reduced n4 m n m Proof See Appendix A6 Corollary 43 Let A partitioned propositional theory n partitions m proposi tional symbols intersection graph G V E l Let dv degree node v graph GV E l let d maxvV dv let l maxij cid1n li j Assume P cid3 NP If intersection graph G A tree partitions Ai number propositional symbols time taken LINEARPARTSAT procedure com pute SAT A Timem n l d O cid3 n 2dl fSATmn cid5 The space taken computation O2dl For example partition given theory A partitions n 2 sharing l propositional symbols algorithm time O2l fSAT m2 Assuming P cid3 NP signiﬁcant improvement simple SAT procedure l small l αm2 α cid1 0582 2689 Corollary 44 Let A partitioned propositional theory n partitions m propo sitional symbols intersection graph G V E l width k Then time taken LINEARPARTSAT procedure compute SAT A O2kn Taking ld maxicid1n j cid1n li j space needed computation O2ld cid1 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 69 5 Decomposing logical theory The algorithms presented previous sections assumed given partitioning theory A In section address critical problem automatically decomposing set propo sitional FOL clauses partitioned theory Guided results previous sections propose guidelines achieving good partitioning present greedy algorithm decomposes theory following guidelines 51 What good partitioning The analysis Section 42 assume particular time complexity fSATm aside P cid3 NP corollary If assume fSATm cid92m conclude time reasoning algorithm dominated largest partition including links If largest partition size s s proposi tional symbols language link languages included time algorithm On 2s This analysis exactly CSPs Bayes networks 3738 86 11 utilized algorithms fact use time cid92m problem m variables For satisﬁability situation slightly different There known stochastic algorithms 9192 perform better pessimistic forecast These algorithms complete algorithm willing completeness Efﬁcient complete algorithms typically exhibit better worst case behavior analysis 93 In general FOL case clearcut measure computational complexity results propositional logic suggest similar relationship partitioning computational behavior All suggests emphasizing link sizes partition sizes accurate satisﬁability problem Thus given theory wish ﬁnd partitioning minimizes formula derived Lemma 42 To end assuming P cid3 NP want minimize following parameters roughly following order For cid1 n 1 Lithe total number symbols contained links tofrom node If G0 tree number symbols shared partition Ai rest theory A Ai 2 mi number symbols partition links Ai Li This number inﬂuenced size original partition Ai turn inﬂuenced number partitions A n Having partitions cause mi smaller 3 nthe number partitions Also simple analysis shows given ﬁxed values l d Corollary 43 maximal n maintains l d n cid1 ln 2 α m α 0582 2689 yields optimal bound LINEARPARTSAT In Section 32 saw parameters inﬂuence number derivations perform MP Li inﬂuences interpolant size proof length mi inﬂuences number deductionsresolutions 70 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 form Thus like minimize number symbols shared partitions number symbols partition links The question large n partitions small mi s small par titions small Lis weak interactions practice We believe domains deal engineered physical systems domain axiomatizations structural properties Indeed design engineering artifacts encourages modularization minimal interconnectivity 32469 More generally believe axiomatizers large corpora realworld knowledge tend try provide structured representations following principles Recent experiments HPKB knowledge base SRI Cyc knowledge base support belief experiments reported 52 An approach partitioning logical theories To exploit partitioning guidelines proposed Section 51 represent theory A symbols graph captures features wish minimize G V E symbols graph theory A vertex v V symbol LA edge vertices associated symbols occur axiom A E b α A st b appear α Fig 14 illustrates symbols graph theory A Fig 1 connected symbols graphs individual partitions A1 A2 A3 Notice axiom creates clique constituent symbols To minimize number symbols shared partitions Li ﬁnd partitions symbols minimal ver tex separators symbols graph Fig 14 Decomposing As symbols graph E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 71 Generally speaking decompose theory A ﬁrst creating symbols graph A partition graph partitions similar Fig 1 ﬁnally use partitioning graph deﬁne partitioning axioms The ﬁrst Fig 16 Procedure SplitThy generic algorithm Gstr manipulated subroutine procedure end Gstr tree decomposition Deﬁnition 34 G Section 53 describes complete instantiation algorithm task Examples recursive procedure going use presented Fig 17 The relationship computing minimum vertex separators computing tree decompositions known studied literature time 7 Here present particular greedy algorithm partitioning propositional ﬁrst order logical theories based computation minimum vertex separators In recent work use algorithm algorithms evaluating performance partitionbased logical reasoning work 73 53 Split greedy vertex mincut graph symbols 531 Minimum vertex separators In section brieﬂy notion vertex separator Let G V E undirected graph A set S vertices called bvertexseparator b V S path connecting b G passes vertex contained S Let Na b cardinality bvertexseparator The connectivity graph G minimum Na b b V connected edge An bvertexseparator minimum cardinality said minimum bvertex separator The weaker property vertex separator minimal requires subset bvertexseparator bvertexseparator We brieﬂy review algorithm Even Tarjan ﬁnding minimum vertex separa tors 4849 This algorithm builds 32 It shown Fig 15 The algorithm given vertices b undirected graph G It transforms G directed graph cid24G vertices corresponding input output original vertex G directed edges connecting corresponding input output vertices edges corre sponding G output input vertices It runs maxﬂow algorithm cid24G steps 13 The produced ﬂow f throughput Na b To extract minimum separator produces layered network 48 p 97 cid24G ﬂow f step 5 The layered network includes subset vertices cid24G The set edges set vertices rest cid24G corresponds separator Algorithms ﬁnding maximal ﬂow abundant graph algorithms literature Prominent algorithms maxﬂow include Simplex method Ford Fulkersons 53 pushrelabel method Goldberg Tarjan 57 time bound OV E log V 2E implementations 23 Dinitzs algorithm 44 When Dinitzs algorithm solve network problem Even Tarjans algorithm time complexity OV 12E 48 The unitcapacity networkﬂow algorithm 1 giving Even Tarjans algorithm time complexity OV 12E 72 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 PROCEDURE MINVSEPABG V E b 1 Construct digraph cid24Gcid24V cid24E follows For v V vertices vcid20 vcid20cid20 internal ucid20cid20 vcid20 inputoutput vertices cid24V edge ev vcid20 vcid20cid20 edge For edge e u v G edges ecid20 cid20 cid20cid20 u v e cid24G external edges cid20cid20 2 Deﬁne network digraph cid24G source acid20cid20 sink bcid20 unit capacities edges 3 Compute maximum ﬂow f network 4 Set capacities external edges cid24G inﬁnity 5 Construct layered network Viicid1l cid24G f Let S icid1l Vi 6 Let R v V vcid20 S vcid20cid20 S R minimum b vertexseparator cid1 G Fig 15 An algorithm ﬁnding minimum separator b G Another possibility use FordFulkerson ﬂow algorithm described 53 alternatively 27 computing maximum ﬂow For original graph treewidth2 k involves ﬁnding k augmenting paths capacity 1 Thus combined algorithm FordFulkerson maximum ﬂow algorithm ﬁnds minimum b vertexseparator time OkV E Finally compute vertex connectivity graph minimum separator given pair b check connectivity c vertices c connectivity graph vertices When Dinitzs algorithm procedure takes time Oc V 32 E c cid2 1 connectivity G When use FordFulkersons algorithm graph treewidth k procedure takes time Oc k V V E c cid2 1 connectivity G For cases c 0 1 wellknown linear time algorithms 47 showed way test k connec tivity graph n k2 pairs vertices 532 Procedure Split Procedure SplitThy presented Fig 16 uses procedure Split decompose theory tree partitions It given theory A limitations partition size lower limit M separators partitions upper limit l Split initially considers theory big partition recursive iteration breaks partitions It represents tree structure partitions global variable Gstr This tree structure set partitions Aiicid1p returned result Split Thy An example input output shown Fig 1 Split partitions theory A taking input symbols graph G V E limiting parameters M l nodes b V initially set nil Split updates global variable Gstr represent progressing decomposition In recursive Split ﬁnds minimum vertex separator b G minimumsize set vertices 2 The treewidth graph plus minimum triangulations graph size largest clique triangulation 63 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 73 PROCEDURE SplitThyA M l A theory M limits number symbols partition l limits number symbols shared partitions 1 Let GV E undirected graph V LA E l1 l2 C A l1 l2 LC 2 Let GstrVstr Estr undirected graph Vstr V Estr 3 Run SplitG M l nil nil 4 For v Vstr let Av C A LC v Return AvvVstr Gstr PROCEDURE SplitG M l b G V E undirected graph M l b V nil 1 If V M return V 2 If b nil ﬁnd minimum vertex separator R G b Otherwise b nil ﬁnd minimum vertex separator R G c Otherwise ﬁnd minimum vertex separators Ra G Rb b G Let R smaller Ra Rb 3 If R V R l return V 4 Let G1 G2 subgraphs G separated R R included subgraphs 5 Let Vstr Vstr V V1 V2 Estr Estr V1 V2 Change edges connected V connect V1 V2 cid20 cid20 2 G1 G2 respectively aggregating vertices R 1 G 6 Create G single vertex r removing self edges connecting r edges vertices connected edges vertices R 7 Run Split2Gcid20 1 M l r Split2Gcid20 Vstr members R 2 M l r b Replace r nodes Fig 16 An algorithm generating partitions axioms crosses path b If b nil ﬁnds overall minimum vertex separator vertices nonnil vertex vertices This separator splits G graphs G1 G2 process continues recursively An example progress input graph G shown Fig 17 Different variants algorithm yield different structures intersection graph resulting partitioning As Split returns sets symbols result chain partitions We obtain arbitrary trees change step 3c ﬁnd minimum separator include b required separate b We obtain arbitrary graphs addition aggregate R r step 6 Proposition 51 Procedure Split takes time OV 52 E Proof See Appendix A7 74 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Fig 17 Recursive use Split aggregating minimal separators single nodes Only larger leftover graph shown split E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 75 533 Finetuning Split Since fSATm known time reasoning FOL theories MP bounded clear optimal decomposition Nevertheless analy ses paper suggests minimizing parameters mentioned section If assume fSATm cid92αm problem ﬁnding optimal par tition LINEARPARTSAT equivalent ﬁnding triangulations minimum clique number aka ﬁnding treewidth With assumption M chosen 1 l chosen m algorithm stop recursive decomposition reaching graph clique This justiﬁed observation decomposition decrease size maximum partition including links Thus Assuming fSATm cid92αm decompositions decrease asymptotic time function LINEARPARTSAT For reasoning FOL theories useful choose M limit number symbols partition large sentences aggregated closely topics This useful managing large axiom sets applying specialized reasoning algorithms partition This combined replacing vertex separator algorithm balanced separator algorithm A balanced separator vertex separator separates graph separated subgraphs comparable sizes typically chosen larger constant times size original graph The problem ﬁnding balanced separators NPhard approximations exist 506268 Our time bound Split lower cid92αm l cid1 αm αmi lg nd argmaxj mj In particular l m2 standard deterministic SAT procedure better compared best time bound known SAT procedures 2689 All observations predicated assumption A propositional fSATn O2αn α 0 constant If theory FOL drop assumption fSAT clear good way choose M l In circumstances l M best determined experimentally 534 Other decomposition approaches There possible approaches decomposing set logical axioms One complementary approach brieﬂy experimented normalized cut al gorithm 95 dual graph theory The dual graph represents axiom symbol node graph split The possible advantage approach preserves distinction axiom Also mincut algorithm normalized helps preclude creation small isolated partitions maximizing similarity partitions minimizing similarity partitions A different decomposition conceived semantic approach Our reasoning algo rithms computational analysis suggested syntactic approach decomposition Semantic approaches possible lines similar 100 22 chapter semantic resolution Such decomposition approaches require different reasoning al gorithms computationally useful 76 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 6 Related work The work related vast We divide parts First work automated decomposition second use decompositions propositional reasoning work relates FOL theorem proving 61 Automated decomposition Decomposition techniques CSPs Bayes nets NPhard problems relevant work automated decomposition These typically look separation vertex 35 use heuristics order symbols ordering translates composition graph 373890 use approximations tree decomposition minimum width equivalent ﬁnding triangulations minimum clique number comput ing treewidth ﬁnding optimal clique trees 411638796 The approach applicable setup assume fSATm cid92αm In contrast SPLIT algorithms ﬁnd weak approximations factor Olog OPT optimal polynomial time constantfactor approximations optimal results quasipolynomial time polynomial time assuming treewidth bounded constant exponential time Furthermore work implementing SAT automated deduction strongly suggests assumption fSATm cid92αm overly pes simistic For reason prefer minimize links ﬁrst look minimizing partitions leading proposed algorithm Cutset conditioning 9103583 hypertree decompositions CSPs work 58 methods decompositions fairly different use paper 62 Use decompositions propositional SAT With respect propositional SAT problems relevant previous work Dechter Pearl 37 presented algorithms reasoning decom posed CSPs These SAT given decomposition In comparison algorithm presented partitionbased SAT produce models possible partition proposed 37 Instead ﬁnds truth values propositions links extendible satisfying truth assignment partition This reduces computation time makes dependent links sizes partition sizes Other SAT uses SAT decomposition include 82 proposed decomposition procedure represents theory hypergraph clauses divides proposi tional theory partitions heuristically minimizing number hyperedges It ﬁnds set possible truthvalue assignments propositions associated hyperedges tests recursively partitions Cowen Wyatt 28 devel oped algorithm partitions propositional CNF theory connected components tested satisﬁability individually Their partitioning algorithm adap tation best ﬁrst search ﬁnd components graph strongly connected components digraph The authors tested decomposition algorithm E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 77 SAT solver demonstrating dramatic decrease runtime SAT solver decomposed theories described paper Prior 5 work decompositions automated deduc tion propositional logic manner propose Concurrently work Rish Dechter 86 proposed algorithm similar MP algorithm case proposi tional ordered resolution However work looks limited case ordered resolution propositional logic allow excessive computation performing possible res olutions partition twice Our MP algorithm different reasoning procedures partition maintaining completeness long algorithms sat isfy natural conditions It opportunistic sense wait partition perform possible resolutions In FOL waiting possibil ity Thus Rish Dechters algorithm use exponential amounts space time MP settings Also MP considered generalization theirs propositional case 63 Use decompositions FOL theorem provers Surprisingly little work speciﬁc problem exploiting structure theorem proving manner propose paper We conjecture largely attributed fact theorem proving traditionally examined mathematics mains necessarily structure supports decomposition Nevertheless related work parallel theorem proving community work combining logical systems The majority work parallel theorem proving implementations followed decompo sition search space 15252846102103 allowed messages sent different provers working parallel heuristics decide messages relevant prover 404143 surveys 1442 Both approaches typically look decompositions subproblems typically In addition ﬁrst approach typically requires complete independence subspaces search repeated space reasoners The second approach similar major differences First clear methodology deciding messages sent partition partitions receive messages partitions Second clear criteria decomposing theory subproblems Another related line work focuses combining logical systems including work 8818597104 Here computational focus treating combinations signaturedisjoint theories allowing queries include symbols signatures 8 Recent work introduced sharing function symbols theories 85 algorithm allowed sharing relation symbols All approaches nondeterministically instantiate newly created variables connecting theories 104 restrict theories convex disjunctions intuitionistic infor mation ﬂowing forth theories In contrast focus structure interactions theories signatures share symbols efﬁciency reasoning consequence ﬁnders theorem provers SAT procedures We restrictions language ﬁniteness 78 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 Finally work formalizing reasoning context including work 276 related partitionbased logical reasoning viewing contextual theories interacting sets theories Unfortunately introduce explicit contexts language expressive FOL needed Consequently number researchers focused context propositional logic work reasoning focused proof checking Examples include GETFOL 5556 Automated reasoning suc cesses 16 presents example 7 Conclusions In paper shown decomposing theories partitions reasoning partitions potential computational advantages theorem provers SAT solvers Theorem proving strategies resolution use decompositions constrain search Partitionbased reasoning improve efﬁciency propositional SAT solvers theory decomposable partitions share small numbers symbols We provided sound complete algorithms reasoning partitions related logical axioms propositional logic FOL Different reasoning algo rithms pluggedin different partitions algorithms We gave conditions reasoners ensure combined reasoning procedure sound complete Specialized versions algorithms resolution strategies FOL provided We showed algorithms simulate orderbased resolution strategies orderbased strategies simulate algorithms restricted cases All reasoning algorithms suited parallel distributed processing We examined efﬁciency theoremproving algorithms SAT algorithm Guided analyses suggested guidelines achieving good partitioning proposed algorithm automatic decomposition theories tries minimize identiﬁed parameters Our work motivated problem reasoning large multiple KBs overlap content The results paper address theoretical prin ciples underly partitionbased reasoning More recently integrated partitionbased reasoning algorithms SRIs SNARK theorem prover tested ef fectiveness automated partitioning reasoning algorithms Our experimental results 73 indicate decomposing FOL theories automatically MP resolution answer queries reduces number resolution steps signiﬁcantly orders magnitude Acknowledgements We particularly wish thank Rina Dechter helpful clarifying comments draft paper We wish thank Mike Genesereth John McCarthy Leora Morgenstern Nils Nilsson Mark Stickel comments work inter esting discussions general topics related work Finally thank Rada Chirkova E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 79 Tom Costello Jörg Denzinger comments earlier papers describing work This research supported DARPA grant N6600197C8554P00004 AFOSR grant AF F496209710207 Appendix A Proofs A1 FORWARDMP MP sound complete First notice soundness immediate rules deriving conse quences chosen consequenceﬁnding procedure rules sound In follows assume A ﬁnite The inﬁnite case follows compact ness FOL Lemma A1 Let A A1 A2 partitioned theory Let ϕ LA2 If A cid13 ϕ A2 cid13 ϕ sentence ψ LA1 LA2 A1 cid13 ψ A2 cid13 ψ ϕ Proof Lemma A1 We use Craigs interpolation theorem Theorem 23 taking α A1 β A2 ϕ Since α cid13 β deduction theorem FOL formula ψ Lα Lβ α cid13 ψ ψ cid13 β By deduction theorem FOL A1 cid13 ψ ψ A2 cid13 ϕ Since ψ LA1 LA2 way constructed α β cid2 Deﬁnition A2 Deﬁnition 25 For partitioning A Ai tree G V E l proper labeling j E B1 B2 subtheories A sides edge j G true Lli j LB1 LB2 icid1n cid1 We intersection graphs proper labeling First following lemma provides main argument completeness proofs paper cid1 Lemma A3 Lemma 26 Let A Ai partitioned theory assume graph G tree proper labeling partitioning Ai icid1n Let k cid1 n let Q LAk kiE lk sentence If A Q MP ﬁnd consequence Ak subsumes Q icid1n cid1 Proof Lemma 26 We prove lemma induction number partitions logical theory For V 1 single partition A A1 proof immediate reasoning procedure A1 complete consequence ﬁnding Assume proved lemma V cid1 n 1 prove lemma V n In G k c neighbors i1 ic k i1 separates parts tree G G1 includes i1 G2 includes k Let B1 B2 subtheories A correspond G1 G2 respectively Notice Q LB2 By Lemma A1 B2 cid13 Q ψ LB1 LB2 B1 cid13 ψ B2 cid13 ψ Q If B2 cid13 Q induction hy pothesis applied partitioning Ai V2 V2 includes vertices G2 G2 notice cid20 G2 Q agrees G 80 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 cid1 cid1 Otherwise let ψ sentence i1j Ej cid3k li1 j LB2 Ai1 LB1 Ai1 set edges i1 j separates subgraphs corresponding theories B1 Ai1 B2 Ai1 G proper labeling partitioning Thus ψ LB1 ψ LAi1 i1j Ej cid3k li1 j By induction hypothesis G1 B1 point sentence ψ cid20 subsumes ψ proved Ai1 formulae sent partitions G1 B1 At point algorithm send ψ cid20 Ak ψ cid20 Llk i1 G proper labeling A G Since B2 cid13 ψ cid20 Q induction hypothesis applied G2 B2 ψ cid20 Q LAk kiE lk point sentence subsuming ψ cid20 Q generated Ak message passing Thus point sentence subsuming Q generated Ak cid2 Proof Theorem 24 All left prove intersection graph G proper labeling But G intersection graph partitioning Aiicid1n li j LAi LAj If j E Lli j cid3 LB1 LB2 B1 B2 theories sides j tree G Ax Ay B1 B2 respectively x y E x cid3 y cid3 j Since G connected single tree means cycle G contradicting G tree Thus Lli j LB1 LB2 G proper labeling The proof follows Lemma 26 cid2 A2 FORWARDMP BREAKCYCLES sound complete Soundness immediate argument Theorem 24 For complete ness ﬁrst notice graph output BREAKCYCLES tree BREAKCYCLES terminate cycle G Now need fol lowing lemma Lemma A4 Let Gcid20 V Ecid20 lcid20 tree resulting applying BREAKCYCLES G V E l Aiicid1n Then Gcid20 proper labeling partitioning Proof Lemma A4 Assume symbol p LB1 LB2 li j let Ax Ay partitions sides j include sentences symbol p We prove run BREAKCYCLES algorithm path Gcid20 start Gcid20 G Ax Ay p showing edge labels Call path good path Obviously good path G x y E p lx y cause G intersection graph A1 An Let stop algorithm ﬁrst step Gcid20 good path assuming path oth erwise In step removed arc b good path cause Gcid20 good path Since p la b b cycle cid17b a1 a1 a2 ac bcid18 reason removed b added la b labels rest cycle In particular labels b a1 a1 a2 ac include p Replacing b previous good path sequence ﬁnd path new Gcid20 satisﬁes required property This E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 81 tradiction having assumed path step Thus p mentioned Lli j LB1 LB2 cid2 Proof Theorem 27 The proof Theorem 27 follows immediately Lemmas 26 A4 cid2 A3 BACKWARDMP BMP sound complete Proof Theorem 28 Notice prover goal Qi means needs prove theory Ai Qi inconsistent ϕ subgoal subgoaldisjunctive ϕ Ai cid13 Qi For series subgoals ψ1 ψr partition Ai ψ1 ψr Ai cid13 Qi Also Aj partition Ai sends subgoals Qj goal partition Aj ψ1 ψr point time Let ϕ subgoal Ai This means Ai Qi cid13 ϕ Thus BMP algorithm readily reduces MP ϕ sent Ai Aj MP ϕ disjoined goal Aj BMP need prove inconsistency Aj Qj ϕ Qj goal Aj arrival ϕ From soundness completeness MP graphs trees soundness completeness BMP cid2 A4 Theorem 32 RESOLUTIONMP RESMP sound complete Theorem A5 67 For nontautologous clause D following given clause set A clause C derivable resolution rule D obtained C instantiation addition literals C subsumes D Proof Theorem 32 Soundness completeness algorithm follow MP RESSEND Implementation 4 adds sentences implying completeness Ai implied ϕ sound restricted language Lli j If add sentences ϕ submitted RESSEND Ai translation soundness completeness result MP applies case add constant function symbols li j We use Theorem 31 prove add sentences Ai Let ϕ2 quantiﬁed formula result applying algorithm U ϕ Then ϕ2 results clause C generated step 4 algorithm U respectively step 4 RESSEND In algorithm U variable x markings x αi C converted new variable existentially quantiﬁed immediately right quantiﬁcation variables y1 yr ϕ2 result ordering quantiﬁers consistent manner rule process steps 56 algorithm U Step 5 RESSEND performs kind replacement algorithm U forms uses new function symbols instead new quantiﬁed variables Since new quantiﬁed variable ϕ2 right variables depends new function uses exactly variables arguments step 5 generates clause Ccid20 C entails ϕ2 Thus clauses added Ai RESSEND entail clauses gener 82 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 ated unskolemizing ϕ U From Theorem 31 clauses entail sentences Lli j implied ϕ To result sound notice set clauses add Ai consequences ϕ Lli j add clauses Aj conservative extension Aj cid2 A5 LINEARPARTSAT sound complete Proof Theorem 41 For partition Ai cid1 n lines 13 perform equivalent ﬁnding models Ai storing truth assignments symbols LLi Ti Li speciﬁes columns row corresponds truth assignment This equivalent ﬁnding implicates theory Ai sublanguage LLi Thus Ai DNF set implicates α1pj1 pjli Ti initially includes set models Ai sublanguage LLi AiLLi The natural join operation cid1 creates consistent combinations models AiLLi Aj LLj This set consistent combinations set models Ai Aj Thus Ti cid1 Tj Ai Aj LLiLj αai pj1 pjli Finally projection operation restricts models sublanguage LLi getting rid duplicates sublanguage This equivalent ﬁnding implicates Ai Aj sublanguage LLi Thus πLiTi cid1 Tj ϕ LLi Ai Aj ϕLLi To algorithm sound complete notice analogous operations forward messagepassing algorithm MP Fig 3 We break cycles G0 creating G perform forward reasoning MP set impli cates instead online reasoning partition instruction 2b MP projec tion Ai ϕ ϕ Lli j join add ϕ set axioms Aj Since Ti cid1 Tj Ai Aj LLiLj joining corresponds sending messages Since πLiTi cid1 Tj ϕ LLi Ai Aj ϕLLi projection corre sponds sending sentences allowed labels By Theorem 27 LINEARPARTSAT sound complete satisﬁability A cid2 A6 Time complexity LINEARPARTSAT Proof Lemma 42 Let A partitioned propositional theory n partitions Let m total number propositional symbols A Li set propositional symbols calculated step 4 LINEARPARTSAT mi number propositional symbols mentioned Ai Li cid1 n Let examine procedure LINEARPARTSAT Fig 12 step step computing time needed computation Computing intersection graph takes Oa k2 time k number propo sitional symbol axiom 3SAT 3 check add k2 edges G0 axiom BREAKCYCLES loop starts ﬁnding minimallength cycle takes time On BFS traversal n vertices Finding optimal line 2 takes time Oc m c c length cycle union labels takes Om time Finally tree satisﬁes E V 1 breaking cycles require E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 83 remove E V 1 edges Thus loop run E V 1 times assuming graph G0 connected An upper bound algorithms performance On2 n2 m On4 m c cid1 n E cid1 V 2 n2 Step 2 LINEARPARTSAT takes time On m total n 1 edges graph G G tree n vertices label length m Checking truth assignments step 3 takes time i1 2Li satisﬁability check Ai A 2Li truth assignments cid1 n Since Ai A mi free propositional variables A assignment truth values Li variables Ai A reducible time OA theory smaller size mi proposi tional variables If time needed satisﬁability check theory m variables OfSATm time step 3 cid2 n cid6 O cid8 Li fSATmi 2 cid5 ncid7 cid3 i1 Finding relation takes On easily generated BFS tree Instruction 5 performs projection join takes time O2Li maximal size table Since number iterations cid1 n j child n 1 n 1 edges total time step O cid2 n i1 2Li Summing worstcase time algorithm Time cid3 cid5 n m m1 mn k L1 Ln cid6 O k2 n4 m n m cid6 O k2 n4 m ncid7 cid3 2 i1 ncid7 cid3 2 i1 Li fSATmi cid8 cid5 Li fSATmi cid8 Li 2 cid5 n ncid7 i1 We reduce second argument formula n4 m n m inter section graph G0 tree cid2 A7 Time complexity SPLIT Proof Proposition 51 Finding minimum vertex separator R G takes time Oc V 32 E Finding minimum separator include s equivalent having s source check connectivity Evens algorithm Thus time OV 32 E Finding minimum separator separates s t takes time OV 12 E In worst case time look minimum sseparator t nil small partition large Thus apply procedure OV times Summing time taken application procedure yields OV V 32 E c V 32 E OV 52 E cid2 References 1 RK Ahuja JB Orlin Distance directed augmenting path algorithms maximum ﬂow parametric maximum ﬂow problems Naval Research Logistics Quarterly 38 1991 413430 84 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 2 V Akman M Surav Steps formalizing context AI Magazine 17 3 1996 5572 3 E Amir DeComposition situation calculus theories Proc National Conference Artiﬁcial Intel ligence AAAI 00 Austin TX AAAI PressMIT Press 2000 pp 456463 4 E Amir Efﬁcient approximation triangulation minimum treewidth Proc Seventeenth Conference Uncertainty Artiﬁcial Intelligence UAI 01 Morgan Kaufmann San Mateo CA 2001 pp 715 5 E Amir S McIlraith Partitionbased logical reasoning Proc Seventh International Conference Principles Knowledge Representation Reasoning KR 2000 Morgan Kaufmann San Mateo CA 2000 pp 389400 6 E Amir S McIlraith Strategies focusing structurebased theorem proving Artiﬁcial Intelligence press 7 S Arnborg Efﬁcient algorithms combinatorial problems graphs bounded decomposability survey BIT 25 1985 223 8 F Baader KU Schulz Uniﬁcation union disjoint equational theories combining decision pro cedures Proceedings Eleventh International Conference Automated Deduction Lecture Notes Artiﬁcial Intelligence vol 607 Springer Berlin 1992 pp 5065 9 A Becker R BarYehuda D Geiger Randomized algorithms loop cutset problem J Artiﬁcial Intelligence Res 12 2000 219234 10 A Becker D Geiger Approximate algorithms loop cutset problem Proc Tenth Conference Uncertainty Artiﬁcial Intelligence UAI 94 Morgan Kaufmann San Mateo CA 1994 pp 6068 11 A Becker D Geiger A sufﬁciently fast algorithm ﬁnding close optimal junction trees Proc Twelfth Conference Uncertainty Artiﬁcial Intelligence UAI 96 Morgan Kaufmann San Mateo CA 1996 pp 8189 12 U Bertele F Brioschi Nonserial Dynamic Programming Academic Press New York 1972 13 WW Bledsoe AM Ballantyne Unskolemizing Technical Report Memo ATP41 Mathematics Depart ment University Texas Austin 1978 14 MP Bonacina J Hsiang Parallelization deduction strategies analytical study J Automat Rea son 13 1994 133 15 MP Bonacina J Hsiang On representation dynamic search spaces theorem proving CS Yang Ed Proceedings International Computer Symposium 1996 pp 8594 16 PE Bonzon A reﬂective proof reasoning contexts Proc National Conference Artiﬁcial Intelligence AAAI 97 Providence RI 1997 pp 398403 17 RB Boppana M Sipser The complexity ﬁnite functions J van Leeuwen Ed Handbook Theoretical Computer Science vol 1 Algorithms Complexity ElsevierMIT Press Amster damCambridge MA 1990 pp 757804 18 G Bossu P Siegel Saturation nonmonotonic reasoning closed world assumption Artiﬁcial Intel ligence 25 1 1985 1365 19 RS Boyer Locking restriction resolution PhD thesis Mathematics Department University Texas Austin 1971 20 A Carbone Interpolants cut elimination ﬂow graphs propositional calculus Ann Pure Appl Logic 83 3 1997 249299 21 R Chadha DA Plaisted Finding logical consequences unskolemization Proceedings 7th International Symposium Methodologies Intelligent Systems ISMIS 93 Lecture Notes Artiﬁcial Intelligence vol 689 Springer Berlin 1993 pp 255264 22 CL Chang RCT Lee Symbolic Logic Mechanical Theorem Proving Academic Press New York 1973 23 BV Chekassky AV Goldberg On implementing pushrelabel method maximum ﬂow problem Algorithmica 19 4 1997 390410 24 P Cohen R Schrag E Jones A Pease A Lin B Starr D Gunning M Burke The DARPA high performance knowledge bases project AI Magazine 19 4 1998 2549 25 SE Conry DJ McIntosh RA Meyer DARES distributed automated reasoning Proc National Conference Artiﬁcial Intelligence AAAI 90 Boston MA AAAI PressMIT Press 1990 pp 7885 26 SA Cook DG Mitchell Finding hard instances satisﬁability problem survey DIMACS Series Discrete Mathematics Theoretical Computer Science vol 35 American Mathematical Society Providence RI 1997 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 85 27 TH Cormen CE Leiserson RL Rivest Introduction Algorithms McGraw Hill New York 1989 28 R Cowen K Wyatt BREAKUP preprocessing algorithm satisﬁability testing CNF formulas Notre Dame J Formal Logic 34 4 1993 602606 29 P Cox T Pietrzykowski A complete nonredundant algorithm reversed skolemization Theoret Com Sci 28 1984 239261 30 W Craig Linear reasoning A new form HerbrandGentzen theorem J Symbolic Logic 22 1957 250268 31 W Craig Three uses HerbrandGentzen theorem relating model theory proof theory J Sym bolic Logic 22 1957 269285 32 GB Dantzig DR Fulkerson On maxﬂow mincut theorem networks HW Kuhn AW Tucker Eds Linear Inequalities Related Systems Annals Mathematics Study vol 38 Princeton Univ Press Princeton NJ 1956 pp 215221 33 A Darwiche Utilizing knowledgebased semantics graphbased algorithms Proc National Con ference Artiﬁcial Intelligence AAAI 96 Portland OR Morgan Kaufmann San Mateo CA 1996 pp 607613 34 M Davis G Logemann D Loveland A machine program theorem proving Comm ACM 5 1962 394397 35 R Dechter Enhancement schemes constraint processing backjumping learning cutset decompo sition Artiﬁcial Intelligence 41 3 1990 273312 36 R Dechter Y El Fattah Topological parameters timespace tradeoff Artiﬁcial Intelligence 125 1 2001 93 37 R Dechter J Pearl Tree clustering constraint networks Artiﬁcial Intelligence 38 1989 353366 38 R Dechter I Rish Directional resolution DavisPutnam procedure revisited Proc Fourth In ternational Conference Principles Knowledge Representation Reasoning KR 94 Morgan Kaufmann San Mateo CA 1994 pp 134145 39 A del Val A new method consequence ﬁnding compilation restricted language Proc National Conference Artiﬁcial Intelligence AAAI 99 Orlando FL AAAI PressMIT Press 1999 pp 259264 40 J Denzinger D Fuchs Cooperation heterogeneous provers D Thomas Ed Proc Sixteenth Inter national Joint Conference Artiﬁcial Intelligence IJCAI 99 Stockholm Sweden Morgan Kaufmann San Mateo CA 1999 pp 1015 41 J Denzinger Knowledgebased distributed search teamwork V Lesser Ed Proceedings First International Conference MultiAgent Systems San Francisco CA MIT Press Cambridge MA 1995 pp 8188 42 J Denzinger I Dahn Cooperating theorem provers W Bibel PH Schmitt Eds Automated Deduction A Basis Applications vol 2 Kluwer Dordrecht 1998 pp 383416 43 J Denzinger M Fuchs M Fuchs High performance ATP systems combining AI methods Proc Fifteenth International Joint Conference Artiﬁcial Intelligence IJCAI 97 Nagoya Japan Morgan Kaufmann San Mateo CA 1997 pp 102107 44 EA Dinic Algorithm solution problem maximum ﬂow networks power estimation Soviet Math Dokl 11 1970 12771280 45 N Eisinger HJ Ohlbach Deduction systems based resolution DM Gabbay CJ Hogger JA Robinson Eds Handbook Logic Artiﬁcial Intelligence Logic Programming vol 1 Logical Foundations Oxford University Press Oxford 1993 46 W Ertel ORparallel theorem proving random competition Proc International Conference Logic Programming Automated Reasoning LPAR 92 Lecture Notes Artiﬁcial Intelligence vol 624 1992 pp 226237 47 S Even An algorithm determining connectivity graph k SIAM J Com 4 3 1975 393396 48 S Even Graph Algorithms Computer Science Press 1979 49 S Even R Endre Tarjan Network ﬂow testing graph connectivity SIAM J Comput 4 4 1975 507518 50 U Feige R Krauthgamer A polylogarithmic approximation minimum bisection Proc 41st IEEE Symp Foundations Computer Science FOCS 00 IEEE Press 2000 86 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 51 R Fikes A Farquhar Largescale repositories highly expressive reusable knowledge IEEE Intelligent Systems 14 2 1999 52 JJ Finger MR Genesereth Residue deductive approach design synthesis Technical Report STAN CS851035 Stanford University Computer Science Department Stanford CA 1985 53 LR Ford Jr DR Fulkerson Flows Networks Princeton University Press Princeton NJ 1962 54 MR Genesereth NJ Nilsson Logical Foundations Artiﬁcial Intelligence Morgan Kaufmann San Mateo CA 1987 55 E Giunchiglia P Traverso A multicontext architecture formalizing complex reasoning Internat J Intelligent Systems 10 1995 501539 Also IRST Tech Report 930726 56 F Giunchiglia GETFOL manualGETFOL version 20 Technical Report DISTTR920010 DIST University Genoa 1994 Available httpftpmrgdistunigeitpubmrgftp920010psgz website httpwwwformalstanfordeducltARSEntriesgetfol 57 AV Goldberg RE Tarjan A new approach maximumﬂow problem J ACM 35 4 1988 921 940 58 G Gottlob N Leone F Scarcello A comparison structural CSP decomposition methods Proc Sixteenth International Joint Conference Artiﬁcial Intelligence IJCAI 99 Orlando FL Morgan Kauf mann San Mateo CA 1999 pp 394399 59 A Haken The intractability resolution Theoret Comput Sci 39 1985 297308 60 G Huang Constructing Craig interpolation formulas First Annual International Conference Com puting Combinatorics COCOON 95 1995 pp 181190 61 K Inoue Linear resolution consequence ﬁnding Artiﬁcial Intelligence 56 23 1992 301353 62 P Klein SA Plotkin S Rao Excluded minors network decomposition multicommodity ﬂow Proceedings TwentyFifth Annual ACM Symposium Theory Computing 1993 pp 682 690 63 T Kloks Treewidth Computations Approximations Lecture Notes Computer Science vol 842 Springer Berlin 1994 64 J Kohlas R Haenni S Moral Propositional information systems J Logic Comput 9 5 1999 651681 65 J Krajiˇcek Interpolation theorems lower bounds proof systems independence results bounded arithmetic J Symbolic Logic 62 2 1997 457486 66 SL Lauritzen DJ Spiegelhalter Local computations probabilities graphical structures application expert systems J Roy Statist Soc B 50 2 1988 157224 67 RCT Lee A completeness theorem program ﬁnding theorems derivable given axioms PhD Thesis University California Berkeley 1967 68 T Leighton S Rao An approximate maxﬂow mincut theorem uniform multicommodity ﬂow prob lems applications approximation algorithms Proc 29th IEEE Symp Foundations Com puter Science FOCS88 1988 pp 422431 69 DB Lenat Cyc largescale investment knowledge infrastructure Comm ACM 38 11 1995 3338 70 F Lin On strongest necessary weakest sufﬁcient conditions Proc Seventh International Conference Principles Knowledge Representation Reasoning KR 2000 2000 pp 167175 71 JW Lloyd RW Topor A basis deductive database systems J Logic Programming 2 1985 93109 72 DW Loveland Automated Theorem Proving A Logical Basis Fundamental Studies Computer Science NorthHolland Amsterdam 1978 73 B MacCartney Sh McIlraith E Amir T Uribe Practical partitionbased theorem proving large knowledge bases Proc Eighteenth International Joint Conference Artiﬁcial Intelligence IJCAI 03 Acapulco Mexico Morgan Kaufmann San Mateo CA 2003 pp 8996 74 P Marquis Knowledge compilation theory prime implicates Proc Fourteenth International Joint Conference Artiﬁcial Intelligence IJCAI 95 Montreal Quebec 1995 pp 837843 75 P Marquis Consequence ﬁnding algorithms D Gabbay Ph Smets Eds Handbook Defeasible Reasoning Uncertainty Management Systems vol 5 Algorithms Defeasible Uncertain Rea soning Kluwer Dordrecht 2000 76 J McCarthy S Buvaˇc Formalizing context expanded notes A Aliseda RJ van Glabbeek D West erståhl Eds Computing Natural Language CSLI Lecture Notes vol 81 Center Study Language Information Stanford University Stanford CA 1998 pp 1350 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 87 77 S McIlraith Logicbased abductive inference Technical Report KSL9819 Knowledge Systems Lab Department Computer Science Stanford University 1998 78 S McIlraith E Amir Theorem proving structured theories Proc Seventeenth International Joint Conference Artiﬁcial Intelligence IJCAI 01 Seattle WA Morgan Kaufmann San Mateo CA 2001 pp 624631 79 AR Meyer A note length Craigs interpolants Technical Memo MITLCSTM183 Massa chusetts Institute Technology Laboratory Computer Science 1980 80 E Minicozzi R Reiter A note linear resolution strategies consequenceﬁnding Artiﬁcial Intelli gence 3 1972 175180 81 G Nelson DC Oppen Simpliﬁcation cooperating decision procedures ACM Trans Programming Lang Syst 1 2 1979 245257 82 TJ Park A Van Gelder Partitioning methods satisﬁability testing large formulas Proceedings Thirteenth International Conference Automated Deduction CADE13 Springer Berlin 1996 pp 748762 83 J Pearl Probabilistic Reasoning Intelligent Systems Networks Plausible Inference Morgan Kauf mann San Mateo CA 1988 84 DA Plaisted The search efﬁciency theorem proving strategies Proceedings Twelfth Interna tional Conference Automated Deduction CADE12 1994 pp 5771 85 C Ringeissen Cooperation decision procedures satisﬁability problem F Baader KU Schulz Eds Frontiers Combining Systems Proceedings 1st International Workshop Munich Ger Applied Logic Kluwer Academic Dordrecht 1996 pp 121140 86 I Rish R Dechter Resolution versus search strategies SAT J Automat Reason 24 12 2000 225275 87 N Robertson PD Seymour Graph minors II algorithmic aspects treewidth J Algorithms 7 1986 309322 88 JA Robinson A machineoriented logic based resolution principle J ACM 12 1 1965 2341 89 I Schiermeyer Pure literal look ahead O1 497n 3satisﬁability algorithm extended abstract Tech nical Report University Köln 1996 Workshop Satisﬁability Problem Siena April 29May 3 90 B Selman H Kautz Domainindependent extensions GSAT solving large structured satisﬁability prob lems Proc Eighteenth International Joint Conference Artiﬁcial Intelligence IJCAI 03 Acapulco Mexico 1993 91 B Selman HA Kautz B Cohen Noise strategies local search Proc National Conference Artiﬁcial Intelligence AAAI 94 Seattle WA 1994 pp 337343 92 B Selman HJ Levesque D Mitchell A new method solving hard satisﬁability problems P Rosen bloom P Szolovits Eds Proceedings Tenth National Conference Artiﬁcial Intelligence San Jose CA American Association Artiﬁcial Intelligence AAAI Press Menlo Park CA 1992 pp 440 446 93 B Selman D Mitchell H Levesque Generating hard satisﬁability problems B Selman D Mitchell H Levesque Eds Artiﬁcial Intelligence 1997 pp 1729 94 G Shafer P Shenoy Probability propagation Ann Math Artiﬁcial Intelligence 2 1990 327352 95 J Shi J Malik Normalized cuts image segmentation Proc IEEE Conference Computer Vision Pattern Recognition 1997 pp 731737 96 K Shoikhet D Geiger A practical algorithm ﬁnding optimal triangulations Proc National Con ference Artiﬁcial Intelligence AAAI 97 Providence RI Morgan Kaufmann San Mateo CA 1997 pp 185190 97 RE Shostak Deciding combinations theories J ACM 31 1984 112 98 JR Slagle Interpolation theorems resolution lower predicate calculus J ACM 17 3 1970 535 542 99 JR Slagle CL Chang RCT Lee Completeness theorems semantic resolution consequence ﬁnding Proc First International Joint Conference Artiﬁcial Intelligence IJCAI 69 Washington DC 1969 pp 281285 100 J Slaney TJ Surendonk Combining ﬁnite model generation theorem proving problems prospects F Baader KU Schulz Eds Frontiers Combining Systems Proceedings 1st Inter national Workshop Munich Germany Applied Logic Kluwer Academic Dordrecht 1996 pp 141156 88 E Amir S McIlraith Artiﬁcial Intelligence 162 2005 4988 101 ME Stickel A Prolog technology theorem prover new exposition implementation Prolog Theo ret Comput Sci 104 1992 109128 102 GCJ Sutcliffe A heterogeneous parallel deduction FGCS92 Workshop Automated De duction Logic Programming Parallel Computing Approaches 1992 103 CB Suttner SPTHEO J Automat Reason 18 1997 253258 104 C Tinelli MT Harandi A new correctness proof NelsonOppen combination procedure F Baader KU Schulz Eds Frontiers Combining Systems Proceedings 1st International Work shop Munich Germany Applied Logic Kluwer Academic Dordrecht 1996 pp 103120 105 GS Tseitin On complexity proofs propositional logics Seminars Mathematics 8 1970 106 JD Ullman Principles Database Knowledgebase Systems vol 1 Computer Science Press 1988 107 A Urquhart Hard examples resolution J ACM 34 1 1987 209219