Artiﬁcial Intelligence 297 2021 103486 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint A unifying look sequence submodularity Sara Bernardini Department Computer Science Royal Holloway University London Egham Surrey TW20 0EX UK b Department Mathematical Sciences Politecnico di Torino Torino 10129 Italy c Augmenta Inc Toronto M5A 1E1 Canada Fabio Fagnani b Chiara Piacentini c r t c l e n f o b s t r c t Article history Received 11 September 2020 Received revised form 9 January 2021 Accepted 16 February 2021 Available online 24 February 2021 Keywords Submodularity Sequence submodularity Greedy algorithms Suboptimal algorithms Detection problems Searchandtracking Environmental monitoring Scheduling Recommender systems 1 Introduction Several realworld problems engineering applied science require selection sequences maximize given reward function Optimizing sequences opposed sets requires exploring exponentially larger search space prohibitive cases practical However objective function submodular intuitively exhibits diminishing return property optimization problem manageable Recently increasing sequence submodularity connection applications recommender systems online ad allocation However ad hoc models solutions emerged applicative contexts In consequence ﬁeld appears fragmented lacks coherence In paper offer uniﬁed view sequence submodularity provide generalized greedy algorithm enjoys strong theoretical guarantees We approach naturally captures application domains algorithm encompasses existing methods improving 2021 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 Many realworld applications engineering applied science core selection sequences objects maximize reward In information gathering missions example objects observations goal select sequence maximizes information gain 12 In similar fashion movie recommender aims provide users sequences items maximize relevance 34 The crucial point applications value sequence depends objects belonging relative order This value object changes based position sequence If optimizing sets daunting task optimizing sequences quickly unmanageable problem hand grows However identiﬁcation special properties objective function helps making task approachable Submodularity particular emerged powerful feature leveraged control complexity maximization set sequence functions Submodularity understood intuitively dimin ishing return condition Consider informationgathering mission Each new observation increases information gain smaller extent previous observations gain vanishing inﬁnity In areas variegated optimization machine learning economics medicine sensor networks vast work maximization submodular set functions Section 2 Only recently scientiﬁc commu This paper invited revision paper ﬁrst appeared 2020 International Conference Automated Planning Scheduling ICAPS20 Corresponding author Email address sarabernardinirhulacuk S Bernardini httpsdoiorg101016jartint2021103486 00043702 2021 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 nity started pay closer attention sequence submodularity prompted applications online ad allocation 5 recommendations online shopping 6 entertainment 3 courses 7 However having arisen speciﬁc applica tive contexts proposed models corresponding algorithms lack generality require making restrictive assumptions objective function maintain eﬃciency In paper remedy current ad hoc approach lack coherence ﬁeld offer uniﬁed view sequence submodularity By abstracting away speciﬁc applicative details optimization problem lies applications captured particular type recursive submodular function We study structure based properties propose generalized greedy algorithm theoretical guarantees strong classical counterpart set functions require unrealistic restrictive assumptions Our generalized algorithm encompasses improves speciﬁc algorithms developed practical applications Another property confers ﬂexibility approach easily enforce constraints cardinality elements sequence elements distinct domain description particularly useful applicative problems The paper organized follows After discussing related work Section 2 state problem formally introduce running example Section 3 In Section 4 recall concept submodularity sequence functions general simple generalization classical greedy algorithm sets sequences fails achieve good performance optimization problems practical relevance Subsequently Section 5 propose analyze new greedy algorithm proven achieve performance classical submodular set functions Theorem 1 In Section 6 study result applied general class problems interested solving Theorem 2 Corollary 1 Sections 7 8 present different application domains demonstrate expressiveness generality approach Finally Section 9 provides explicit numerical simulations applicative setups discussed previous sections Sections 10 offers conclusive thoughts 2 Related work Work submodularity spreads multiple ﬁelds including optimization 89 machine learning 1011 economics 1213 medicine 14 sensor networks 1516 This body work focuses set functions problems considered NPcomplete revolves ﬁnding good approximations optimal solution greedy approaches effective nondecreasing submodular functions 9 We review literature set functions focus For comprehensive review topic refer readers literature 17 Only recently work sequence submodularity emerged Streeter Golovin 18 ﬁrst considered problem context online resource allocation applications Shortly Alaei Malekian 5 introduced term sequence submodularity showed submodular function nondecreasing differentiable greedy approach achieves solution 1 1 e optimal maximization problem Zhang et al 15 consider string submodularity weaker concept submodularity holds preﬁx relationship instead type subsequence relationship They improve Alaei Malekians approximation introducing additional constraints degree string submodularity curvature objective function Other authors deﬁned sequence submodularity graphbased setting Tschiatschek et al 4 consider cases dependencies elements sequence captured directed acyclic graphs DAGs present algorithm theoretical guarantees However repetitions sequence allowed DAG submodular functions necessarily string sequence submodular Mitrovic et al 7 extend graphbased framework graphs hypergraphs bounded degrees Finally Qian et al 19 departure greedy approach propose Pareto optimization method se quence selection They class submodular functions previously studied approach reach best known approximation guarantee Mitrovic et al 20 hand consider case value sequence depends items selected order states items initially unknown adaptive submodularity Against backdrop body work aim submodular functions appearing practical ap plications satisfy constraints imposed approaches highlighted However present common structure exploited equip suitably modiﬁed greedy algorithm strong theoretical guarantees 3 Problem statement In section formally introduce optimization problems study paper Let cid2 set Hcid2 language cid2 set sequences elements cid2 length including sequence Let Hdcid2 denote sublanguage consisting sequences Hcid2 distinct elements If S S 1 Sn Hcid2 S element sequence S position denote S n length sequence S Given R S Hcid2 R subsequence S denoted R S R obtained S eliminating elements exists strictly increasing function ρ 1 R 1 S R Sρi 1 R We use following convention indicate speciﬁc type subsequences S S 1 Sn Hcid2 1 b n write Sb Sa Sa1 Sb We Sb b 2 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 In paper focus greedy algorithms maximizing functions deﬁned Hcid2 present following recursive form F gS cid3 gSk ncid2 k1 F Sk 1 F Sk1 1 cid4 1 S S1 Sn Hcid2 In Eq 1 g cid2 R speciﬁc order elements S monotonic submodular formal deﬁnitions given section function F Hcid2 R function independent The problem maximizing functions typically ﬁnite sequences length given value signiﬁcant lies heart practical applications ranging jobs scheduling web recommendation systems follows Note general g functions F g depends speciﬁc order elements sequence consequence classical results submodularity set functions applied 31 Running example We discuss illustrative scenario use paper running example Consider monitoring level river subject ﬂooding In case danger set movable ﬂoodgates protect roads bridges critical points impairment lead catastrophic events Actioning barriers time different points river costly A sensing drone observe speciﬁc point closely establish ﬂoodgate needed consequent reduction cost drone concludes gate unnecessary protect point We interested problem ﬁnding sequence drone observations allows maximum reduction cost We formalize scenario follows Given time horizon 0 T consider monitoring environment subject catastrophic events represented elements set D Each possible events requires safety infrastructure place movable ﬂoodgates example For simplicity given event d D set cost infrastructure prevent d time unit In absence information total cost monitoring event time horizon 0 T T D events total cost monitoring environment amounts T D However time monitoring acquires information rule happening catastrophic events D Speciﬁcally assume perform set cid2 experiments Each σ cid2 associated cost c 0 example cost associated use drone observation σ associated time tσ 0 T representing moment experiment performed Each experiment σ cid2 associated subset events Dσ D following meaning σ gives negative result inferred events Dσ place In consequence stop safety infrastructure meant prevent events Dσ time experiment tσ end horizon consequence reduction T tσ Dσ monitoring cost A positive result experiment σ instead allow rule possible event monitoring process undergo change Over time monitoring performs sequence experiments S S 1 Sn ordered way tS1 tS2 tSn Let calculate total monitoring cost catastrophic event takes place assuming case experiments negative result We ﬁrst deﬁne dS n number events ruled sequence experiments d D The total cost given following expression DS i1 cid5S ncid2 tSk tSk1d dSk1 1 T tSnd dSn 1 cn 2 k1 interpreting tS0 0 The terms Eq 2 following interpretation The expression d dSk1 number events ruled time tSk1 Since needs monitoring events account cost time generate interval tSk1 tSk The ﬁrst term monitoring cost experiment Sn The second term T tSnd dSn 1 remaining cost time horizon T Finally term cn cost performing n experiments 1 Eq 2 rewritten follows cid5S ncid2 k1 T tSkdSk 1 dSk1 1 T d cn If F S dS gσ T tσ cid5S F gS T d cn minimization cost sequences given length equivalent maximization F g S The general minimization problem solved follows min cid5S cid2 min n0 T d cn F gSn Sn maximum F g S sequences length n 3 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 4 Preliminary results sequence submodularity In section formally deﬁne concepts monotonicity sequence submodularity function greedy algorithm maximization sequence submodular functions originally proposed Alaei Malekian 5 We discuss preliminary results concerning functions paper type Eq 1 Alaei Malekians algorithm perform Example 2 In section propose new greedy algorithm overcomes limitations original functions cid8 S cid8 1 S cid8 m elements Hcid2 Consider language Hcid2 set cid2 If S S1 Sn S concatenation deﬁned SS cid8 S1 Sn S cid8 1 S cid8 m For sake notational simplicity concatenations sequences length 1 σ denoted simply Sσ σ S dropping parentheses Deﬁnition 1 A function J Hcid2 R called forwardbackward monotonic respectively J Sσ J S J σ S J S S Hcid2 σ cid2 We use instead term antimonotonic inequalities inverted Deﬁnition 2 A function J Hcid2 R called forwardbackward sequence submodular S R Hcid2 σ cid2 respectively J SRσ J SR J Sσ J S J σ RS J RS J σ S J S For brevity drop sequence concerned functions paper On subset cid2n Hcid2 sequences length exactly n natural action permutation group Pn set bijections 1 n S S1 Sn θ Pn θ S Sθ 1 Sθ n Deﬁnition 3 We deﬁne concept permutation invariance sets functions follows A subset I Hcid2 said permutation invariant S I θ PS holds θ S I A function J Hcid2 R permutation invariant R Hcid2 θ PR holds J θ R J R For permutation invariant functions backward forward notions monotonicity submodularity coin cide case refer monotonic antimonotonic submodular functions Example 1 We illustrate concepts presented section context running example presented Section 31 In case confer right interpretation function F gS sequences S t S monotonically increasing consequence gS T t S monotonically decreasing For sake illustration consider extension F gS entire language Hcid2 More precisely consider special case experiments cid2 σ1 σr labeled information Dσr Given σ cid2 denote kσ 1 r index convey monotonically increasing Dσ1 ordering kσ σkσ σ We dk Dσk k 1 r Given S Hcid2 kS maxkS 1 S notice Dσ2 Scid6 cid5 cid5 cid5 cid5 cid5 cid5 k1 cid5 cid5 cid5 cid5 cid5 cid5 dS Dσk DσkS dkS If S Hcid2 σ cid2 thanks 3 F gSσ F gS gσ dSσ dS cid7 gσ dkσ 0 kS kσ kS kσ Notice kS dS permutation invariant monotonic From expression 4 obtain F g forward monotonic monotonicity kS forward submodular Also note 4 3 4 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 F gσiσ j F gσ j gσidi gσ jd j1i j 1 1i j 1 j 0 The expression shows general F g backward monotonic right hand negative j g gσidi gσ jd j The following result shows function F g behaves respect transposition consecutive elements sequence S Lemma 1 Given permutation invariant submodular function F function g cid2 R consider function F g deﬁned Eq 1 Let S Hcid2 k S gSk gSk1 Let S sequence obtained S swapping Sk Sk1 Then F g S F gS Proof Thanks permutation invariance function F F gS F g S gSkF Sk 1 F Sk1 1 gSkF Sk1 1 F Sk1 gSk1 gSkF Sk1 gSk1F Sk1 Sk1 F Sk 1 F Sk1 1 1 1 1 Sk1 F Sk1 1 F Sk 1 gSk1F Sk1 1 Sk1 F Sk1 1 We conclude proof observing term nonpositive gSk gSk1 F submodular cid2 Remark 1 Notice stronger assumption gSk gSk1 Lemma 1 yields F g S F gS Lemma 1 implies want maximize functions type Eq 1 set sequences I permu tation invariant restrict sequences S I gSk gSk1 k To formalize implies gσ gσ cid8 We fact consider total ordering elements cid2 g nondecreasing σ σ cid8 gordering note gordering unique g noninjective We present number useful concepts related ﬁxed total ordering cid2 We use notation σ cid13 σ cid8 indicate σ cid8 σ σ cid8 σ A sequence S Hcid2 called ordered S1 cid13 cid13 SS A subset I Hcid2 called ordered S I ordered Given subset I Hcid2 indicate ordered subset follows I S I S ordered 5 When I Hcid2 I Hdcid2 use notation Hcid2 Hdcid2 respectively I For sake simplicity subset I Hcid2 ordered respect gordering g function g cid2 R simply called gordered The following direct consequence Lemma 1 Proposition 1 Consider permutation invariant submodular function F function g cid2 R Then given permutation invariant set I Hcid2 T N holds Let gordering max S I S T F gS max S I S T F gS 6 Remark 2 If maximize F gS Hdcid2 sequences maximal length T cid2 sequence S length T belonging Hdcid2 maximum Because Lemma 1 Remark 1 possible maxima obtained S arbitrarily permuting elements subsequence Sh Sh1 Sk gSh gSk In case maximization problem boils sort problem In work interested investigating maximization problem function F gS general case sequences necessarily consist distinct elements maximal length In applications case Let ﬁx value T N consider problem maximizing function J Hcid2 R sequences ﬁxed length T A popular simple suboptimal algorithm maximization problems greedy algorithm Alaei Malekian 5 generalizes classical result Nemhauser Wolsey 9 sequence functions This algorithm produces recursively sequence S S1 S T adding new elements right sequence k 0 T 1 J Sk 1 Sk1 J Sk 1 σ σ cid2 7 5 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Alaei Malekian 5 lower bound performance greedy algorithm presence monotonicity submodularity J In particular ﬁx value T N let S T sequence generated greedy algorithm stopped step T O T Hcid2 maximizing sequence J restricted sequences Hcid2 length T Now assume J backward monotonic forward submodular J S T J O T 8 cid8 cid9 1 1 e Considering function F g simple forward monotonic forward submodular general possess complementary properties Hence result Eq 8 applied In Example 2 classical greedy algorithm perform arbitrarily bad functions Example 2 Considering Example 1 specify values parameters follows We dk 2k1 k 1 n 1 dn 2n We assume gσk 2nk Then value function single elements cid2 given following expression F gσk gσkdσk cid7 2n1 2n k n 1 k n Given assumptions expression reaches maximum k n Consequently greedy solution S length n necessarily S1 σn This implies F gS gσndσn 2n remaining term contribution A direct check shows instead optimum sequences length n reached O σ1 σn We compute follows F gO 2n1d1 ncid10 k2 2nkdk dk1 2n1 n22n 4 2n 3 4 2n n3 4 Therefore F gO F gS n 3 4 Hence bound form Eq 8 possibly hold case 5 A new greedy algorithm fully extendable sets We present new greedy algorithm maximization sequence submodular functions allows new element sequence construction placed position elements This approach differs Alaei Malekians algorithm 5 adds new elements righthand sequence We new algorithm maintains theoretical guarantees original performs functions type Eq 1 Compared previous work optimization approach general allows problems deﬁned Hcid2 elements repeated Hdcid2 elements distinct sets number repetitions element constrained certain value To allow generality Section 51 introduce key concept fully extendable set sequences generalize notions monotonicity submodularity adapting fully extendable sets Our new greedy algorithm described Section 52 exploits notions 51 Monotonic submodular functions fully extendable sets Deﬁnition 4 A subset I Hcid2 called fully extendable following conditions satisﬁed 1 For σ cid2 σ I 2 If R I Q R Q I 3 If Q R I exists U I Q R U U Q R The property says given sequences Q R I exist sequence U I subsequences length sum lengths If Q R element common possibility U obtained intertwining Q R U Q R 6 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 We denote IQ R subset sequences U satisfying property 3 deﬁned Given Q I denote I Q U I Q U U Q 1 In words IQ consists sequences I obtained Q adding element It follows properties 1 3 considerations exist elements cid2 appearing Q surely IQ cid14 We examples fully extendable sets Example 3 Hcid2 fully extendable set Example 4 Consider total ordering set cid2 Then set ordered sequences Hcid2 formally deﬁned Eq 5 fully extendable set Finally construct family fully extendable sets subsumes examples useful applications presented Sections 7 8 Those sets number repetitions element constrained certain value Example 5 We ﬁx total ordering set cid2 Given S Hcid2 denote nσ S number times element σ appears sequence S The following properties direct consequence deﬁnition ordered sequences Given non negative integer numbers nσ σ cid2 exists exactly ordered sequence S nσ S nσ σ cid2 ii Given ordered sequences Q R Q R nσ Q nσ R σ cid2 For σ cid2 ﬁx number nσ 1 2 consider set sequences I S Hcid2 nσ S nσ σ cid2 9 Note Hcid2 Hdcid2 special cases I obtained respectively nσ nσ 1 σ cid2 We following result Proposition 2 The set sequences I deﬁned Eq 9 fully extendable Proof All singleton sequences S σ ordered respect repetition constraint nσ 1 Therefore I property 1 Deﬁnition 4 holds Property 2 holds subsequence Q sequence R I necessarily gordered satisﬁes thanks property ii constraints nσ Q nσ R nσ σ cid2 To check property 3 consider sequences Q R I σ cid2 nσ maxnσ Q nσ R Let U ordered sequence nσ U nσ property Since construction nσ nσ σ cid2 U I Notice Q R subsequences U property ii Finally cid2 U nσ U cid2 nσ Q nσ R Q R σ cid2 σ cid2 That completes proof cid2 It follows Proposition 2 Hcid2 Hdcid2 fully extendable Example 6 If cid2 1 set Hdcid2 fully extendable Indeed let σ1 σ2 cid2 distinct elements consider sequences R σ1 σ2 S σ2 σ1 Any sequence U R S subsequences contains copies σ1 copies σ2 belong Hdcid2 This reveals condition 3 Deﬁnition 4 hold true Let notions monotonicity submodularity change adapted fully extendable sets The novelty deﬁnitions new element σ added sequences appear beginning end standard notions monotonicity submodularity sequences 7 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Deﬁnition 5 Given fully extendable set I Hcid2 function F I R called Imonotonic Q R I σ cid2 Q σ R I holds F Q σ R F Q R 10 Deﬁnition 6 Given fully extendable set I Hcid2 function F I R called Isubmodular Q R S I σ1 σ2 cid2 Q σ1Rσ2S I holds F Q σ1Rσ2S F Q σ1RS F Q Rσ2S F Q RS 11 Relation 11 way express diminishing return property characterizes deﬁnition submodularity Adding extra element σ2 sequence produces smaller impact growth function F calculated sequence elements added preﬁx long constructed sequences remain elements set I Remark 3 If I Hcid2 Imonotonic functions backward forward monotonic Isubmodular functions forward submodular Remark 4 If F Hcid2 R permutation invariant monotonic submodular fully extendable set I Hcid2 restriction F I Imonotonic Isubmodular 52 A new greedy algorithm We introduce generalized greedy algorithm functions Imonotonic Isubmodular new algorithm ensures performance expression 8 In section apply result problems Take function J Hcid2 R fully extendable set I Hcid2 We ﬁx value T N goal maximize J subset I sequences length T Put O T maximizing sequence J We consider variation greedy algorithm approximately solve maximization problem The algorithm produces recursively ordered sequence S T S T 1 S T T I following way S 1 S 1 1 S 1 1 Given Sk Sk argmax σ cid2 J σ k I deﬁne 1 Sk Sk1 argmax U ISk J U 12 In words instead simply augmenting sequence right hand traditional greedy algorithm allow new element placed position elements previous sequence We note argmax expression 12 singleton choice Sk1 arbitrary element The performance algorithm affected choice The following result shows new algorithm satisﬁes performance bound classical expression 8 Theorem 1 Consider function J Hcid2 R fully extendable set I Hcid2 assume J Imonotonic I submodular Let O T maximizing sequence J sequences I length T let S T result previous algorithm Then J S T J O T cid8 cid9 1 1 e Proof For simplicity notation proof O O T Fix k T consider cid7 λ1 λn argmax U ISkO J U We consider partition indices 1 2 n i1 i2 ik j1 j2 jm i1 i2 ik Sk l indices λil l 1 k j1 j2 jm m n k remaining 8 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 We consider 0 t m sequence cid7t obtained cid7 removing elements λ jm λ jm1 λ jt1 Note property 2 fully extendable sets cid7t I t cid7m cid7 cid70 Sk We write J cid7 J Sk mcid2 cid3 cid4 J cid7t J cid7t1 t1 13 Using property Isubmodularity removing elements λ jt1 λ j0 cid7t1 cid7t obtain J cid7t J cid7t1 J U t J Sk 14 U t ISk sequence obtained Sk adding position element λ jt Given deﬁnition extended greedy solution Sk follows J U t J Sk1 This fact expressions 13 14 yields J cid7 J Sk T cid3 cid4 J Sk1 J Sk 15 The assumption Imonotonicity choice cid7 maximize J ISk O ensure J cid7 J O Using fact inside expression 15 gives J Sk1 1 T J O cid9 cid8 1 1 T J Sk k 0 T 1 Applying recursively relation obtain J S T 1 T cid9 cid8 T 1cid2 i0 1 1 T cid11 cid8 J O 1 cid12 cid9 T J O cid9 cid8 1 1 e 1 1 T J O cid2 6 A detailed analysis function F g We original optimization problem functions type Eq 1 study conditions apply theory laid previous section Our aim suitable assumptions function F g satisﬁes conditions Theorem 1 fully extendable gordered sets thanks Proposition 1 allow obtain solution bounded suboptimality maximization problem We start introducing additional notation handy proof main result section cid9F Q σ R F Q σ R F Q R cid92 F Q σ1 R σ2 S cid9F Q σ1R σ2 S cid9F Q R σ2 S 16 F Q σ1Rσ2S F Q σ1RS F Q Rσ2S F Q RS The ﬁrst expression cid9F Q σ R ﬁrst variation F obtained starting sequence Q R adding element σ subsequences Q R The second expression cid92 F Q σ1 R σ2 S instead second variation variation ﬁrst variation goes Q R Q σ1R relative added element σ2 They play analogous role respectively discrete derivative discrete second derivative function analogy apparent discuss example submodular functions obtained convex functions Note Imonotonicity F equivalent requirement cid9F Q σ R 0 choice Q R σ Q σ R I Isubmodularity F equivalent requirement cid92 F Q σ1 Rσ2 S 0 assumption Q σ1Rσ2S I We ready state prove main result section It asserts Imonotonicity I submodularity function F transferred function F g fully extendable set I gordered ordered respect gordering Theorem 2 Let g cid2 R let I Hcid2 gordered fully extendable set Given F I R holds 1 If F Imonotonic F g Imonotonic 2 If F Isubmodular F g Isubmodular Proof Assume F Imonotonic Fix Q R I σ cid2 Q σ R I Put n R From deﬁnition F g obtain 9 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 cid9F gQ σ R F gQ gσ cid9F Q σ ncid2 gRkF Q σ Rk 1 F Q σ Rk1 1 F gQ k1 ncid2 k1 gRkF Q Rk 1 F Q Rk1 1 17 gσ cid9F Q σ ncid2 k1 gRkcid9F Q σ Rk 1 n1cid2 k0 gRk1cid9F Q σ Rk 1 gσ gR1cid9F Q σ gRncid9F Q σ R n1cid2 gRk gRk1cid9F Q σ Rk 1 k1 By assumption I gσ gR1 0 gRn 0 gRk gRk1 0 k 18 On hand Isubmonotonicity F yields ﬁrst variation terms appearing expression nonnegative It follow cid9F g Q σ R 0 This proves F g Imonotonic Assume F Isubmodular Consider Q R S I σ1 σ2 cid2 Q σ1 Rσ2S I Put m S Then expressions 16 17 obtain cid92 F gQ σ1 R σ2 S cid9F gQ σ1R σ2 S cid9F gQ R σ2 S gσ2 gS1 cid9F Q σ1R σ2 cid9F Q R σ2 gSncid9F Q σ1R σ2 S cid9F Q R σ2 S m1cid2 gSk gSk1cid9F Q σ1R σ2 Sk 1 cid9F Q R σ2 Sk 1 19 k1 gσ2 gS1cid92 F Q σ1 R σ2 gSmcid92 F Q σ1 R σ2 S m1cid2 gSk gSk1cid92 F Q σ1 R σ2 Sk 1 k1 From inequalities 18 fact second variation terms cid92 F appearing F Isubmodular nonpositive follows cid92 F gQ σ1 R σ2 S 0 cid2 A direct consequence Theorem 2 following corollary crucial analyze applicative examples section Corollary 1 Consider permutation invariant monotonic submodular function F Hcid2 R function g cid2 R gordered fully extendable set I Hcid2 Then F g Imonotonic Isubmodular Proof It direct consequence Theorem 2 Remark 4 cid2 7 Detection monitoring problems In section present applicative case studies detection monitoring framed theory developed far The case studies revolve problem choosing optimal sequence experiments optimize quantity We start broad formulation problem focusing common characteristics case studies We continue exploring detection problems involve minimizing detection time given event tackle particular instance searchandtracking ST important applicative domain 22122 We conclude section considering environmental monitoring problems goal minimize cost monitoring infrastructure For example formal representation leads maximization function F g fully extendable set I properties Corollary 1 satisﬁed consequence generalized greedy algorithm proﬁtably applied Consider set experiments cid2 Each experiment σ cid2 associated random variable X σ ﬁnite space A expresses outcome experiment σ time stamp tσ indicates time experiment place device perform experiment available time 10 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 We interested scenarios multiple experiments place statistically described follows For se quence S S1 Sn Hcid2 consider sequence random variables X S X1 Xn distributed according law P S An 0 1 P S ω1 ωn probability set experiments S global result ω1 ωn An Note experiment σ repeated sequence S We assumptions concerning experiments speciﬁc order disclosing outcome experiments play role ignoring result subset experiments equivalent having performed Formally 1 Permutation covariance For S S1 Sn Hcid2 length n ω ω1 ωn An permutation θ Pn holds P θ S θω P S ω θ S Sθ1 Sθn θω ωθ1 ωθn 2 Coherence Given R S Hcid2 R S law X R law subsequence random variables X S R obtained X S considering components corresponding positions R inside S In particular ith component X S law X S 1 S Against backdrop framework outlined analyze different problems differ exploit experiments quantity want optimize 71 Detection problems Given space experiment outcomes let consider speciﬁc event E A success event represents desired outcome experiments positive detection event The problem determine experiment sequences given length minimizes expected time obtain success event We formalize problem We ﬁx tordering cid2 σ1 σ2 implies tσ1 tσ2 consider fully extendable set ordered sequences Hcid2 deﬁned Eq 5 For S Hcid2 S n deﬁne ﬁrst detection time random variable τS An R cid13 τS ω tSk T ωk E ω j E j k ω j E j T maxσ cid2 tσ constant playing role penalty fact detection succeeded S The quantity aim minimize EτS expected value τS set Hcid2 We goal involves maximization function type Eq 1 We En ω An st ωi E Given sequence S Hcid2 length S n deﬁne F S P S En probability success event E happened sequence experiments S The expected success time computed follows EτS ncid2 k1 tSkF Sk 1 F Sk1 1 T 1 F S T ncid2 tSk T F Sk 1 F Sk1 1 k1 20 The minimization expected success time equivalent maximization function ncid2 k1 T tSkF Sk 1 F Sk1 1 21 form Eq 1 gσ T tσ We observe optimization problem case deﬁned fully extendable set I Hcid2 We properties needed apply Corollary 1 hold Permutation invariance F follows permutation covariance property family probabilities P S fact success events En permutation invariant Monotonicity F follows following computation cid9F S σ P Sσ En1 P S En P Sσ En1 P Sσ En A P Sσ E c E c E 0 22 denote E c A E 11 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Submodularity F follows following computation cid92 F S σ1 σ2 P Sσ1σ2 E c E c E P Sσ2 E c E c E P Sσ1σ2 E c E c E P Sσ1σ2 E c E c A E P Sσ1σ2 E c E c E E 0 Notice second equalities 22 23 use coherence property By deﬁnition set Hcid2 gordered gσ T tσ 23 An important extension example case multiple detection events E 1 E s A possibly correlated We indicate τ k S ﬁrst detection time event Ek In certain applications natural consider global average completion time Emaxk τ k function minimize happens S partial detection subset events value This new function submodularity properties However applications detection event intrinsic value useful minimize function E This function ﬁts framework Indeed deﬁne F kS P S Ek k τ k S cid10 n F S scid2 k1 F kS obtain computing Eq 20 minimization E expression 21 cid10 k τ k S equivalent maximization function We present speciﬁc instance general detection problem presented corresponds important practical application 72 Searchandtracking As speciﬁc applicative example detection problem presented Section 71 consider searchandtracking ST problem locating moving target given area following destination Following stateof theart ST application area 222 assume target travels large geographical area following road network set paths cid5 observer UAV imperfect sensors When UAV loses track target set candidate ﬂight search patterns cid2 selected Monte Carlo simulation direct search areas probable rediscover target 23 Monte Carlo simulation The UAV resources execute candidates subset patterns needs selected arranged feasible sequence execution Each pattern σ cid2 provides visibility family paths cid5σ cid5 target follows route cid5σ UAV able detect performing pattern σ Each pattern σ cid2 associated time stamp tσ indicating midpoint time window target plausibly area covered σ ii detection probability φσ following meaning assuming target taken route cid5σ UAV performs pattern σ time tσ detection positive probability φσ In cases detection negative We assume apriori uniform probability distribution routes cid5 independence outcomes search experiments conditioned fact target chosen speciﬁed route In Bernardini et al 22 authors study problem selecting sequence S Hcid2 length n minimizes expected detection time deﬁned reference time stamps tσ elements sequence They allow repetitions search patterns correspond UAV repeating search area Below problem ﬁts general detection framework presented section Section 9 provide numerical simulations highlight generalized greedy approach beneﬁts solution problem To search pattern σ cid2 associate binary random variable X σ 0 1 describes outcome search performed σ 1 expresses positive detection event target For sequence S Hcid2 probability distribution P S 0 1n 0 1 outcomes corresponding search experiments constructed basis topology road network detection probability pattern More precisely given S Hcid2 length n consider joint probability distribution P S 0 1n cid5 P S ω1 ωn γ denotes probability target taken road γ outcome performing n search patterns S 1 S2 Sn given results respectively ω1 ω2 ωn The probability P S univocally described assuming marginal cid5 uniform distribution P S ω1 ωn γ cid14 cid14 cid14 1 ωi φS γ cid14 cid5S ωi 1 γ cid5S ωi 1 γ cid5S ωi 0 1 φS 24 The equation summarizes assumptions given target taken route γ outcome experiments S independent outcome The patterns S compatible γ deterministically null 12 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 result positive probability φS null probability 1 φS The probability distribution P S X S X S1 X Sn obtained P S averaging γ cid5 The properties permutation covariance coherence P S follow directly Eq 24 The detection event case En 0 0 1 In Bernardini et al 22 authors propose explicit iterative expression function F S P S En useful computation purposes As general detection problem optimization problem naturally deﬁned set Hcid2 However choices instance use Hdcid2 want enforce search patterns distinct generally use fully extendable sets deﬁned Eq 9 impose speciﬁc restrictions number repetitions Such type restrictions reﬂect time needed UAV perform search pattern number UAVs simultaneously available search 73 Monitoring problems In section present monitoring applications going Example 1 Section 31 framing general richer context Let consider monitors environmental phenomenon Z inﬂuenced set uncertain factors As seen Example 1 phenomenon level river subject ﬂooding determined intensity precipitations factors The phenomenon Z manifests set D events In Example 1 events given river overﬂow established checkpoints course We consider family cid2 Bernoulli experiments formally modeled Section 72 allow observe events D Each experiment σ cid2 associated random variable X σ 0 1 time stamp tσ The output sequence experiments S Hcid2 performed prescribed times X S X S1 X Sl governed distribution laws P S x x 0 1l Such distributions calculated basis historical data phenomenon Z information assume satisfy set assumptions concerning permutation covariance coherence hold true case detection problems Each σ cid2 associated subset Dσ D following meaning If monitoring performs experiment σ associated time observes negative outcome X σ 0 guaranteed events Dσ place Z cid14 E E D E Dσ cid14 In example observe level river checkpoints observation water safety threshold exclude ﬂooding happen point We model cost handling phenomenon Z aid additional experiments cid2 D R C determined assigning nonnegative numbers ci D deﬁning additive function C 2 cid10 given E D CE iE ci This global cost incurs handle possible events E In Example 1 cost arises use moveable ﬂoodgates lifted soon precipitations increase certain threshold On hand experiment cid2 associated cost c In Example 1 cost emerges use drone monitor checkpoints evaluate lifting corresponding ﬂoodgates needed Given sequence S length l binary vector x 0 1l DSx cid6 j x j 0 DS j 25 Let assume monitoring events D experiments given negative outcome Over time horizon 0 T total cost incurs performing sequence experiments S S1 Sn output X X S given following expression cid15 cid15 cid16 cid16 ncid2 cid5S X tSk tSk1C D D Sk1 1 Xk1 1 T tSnC D D nc 1 Xn Sn 1 k1 ncid2 T t Sk k1 cid15 cid15 D C 1 Xk Sk 1 cid16 cid15 C D Sk1 1 Xk1 1 cid16cid16 T CD cn A natural optimal problem minimization average global cost cid5S Ecid5S X If F S ECDS X gσ T tσ cid5S F gS T CD cn Minimizing cid5S sequences experiments given length equivalent maximizing F g S Indicated Sn maximum F gS sequences length n ﬁnally left following problem min cid5S cid2 min n0 T d cn F gSn 13 26 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Note reconstruct special case considered Section 31 choosing C cardinality function assuming deterministically Xi 0 Below assumptions Corollary 1 satisﬁed theory applied ﬁnd approx imate maxima F gS sequences experiments given length It worth noting inherent recursive structure solution obtained greedy algorithm yields simple iterative solution ﬁnal minimization problem 26 We discuss applicability Corollary 1 The set sequences maximization takes place set Hdcid2 tordering set cid2 Concerning properties F reason follows Permutation invariance obtained following computation For ﬁxed S Hcid2 length n permutation θ 1 n 1 n cid2 F Sθ P Sθ xCD Sθ x x01n cid2 x01n P Sθ xθ CD Sθ xθ cid2 x01n P S xCDSx F S second equality follows relabeling running variable x equality assump tion permutation covariance P S deﬁnition DSx Note coherence property P S write S Hcid2 σ cid2 F Sσ F S P Sσ xCDSσ x CD S Sx 1 cid2 x01S1 Since construction D nonnegative This proves F monotonic S Sx 1 DSσ x Eq 25 C additive follows right hand We ﬁx sequences R S Hcid2 σ cid2 n R m S Denoting corresponding running output sequences xR xS xσ coherence property write F RSσ F RS F Sσ F S cid2 cid2 cid2 xR 01n xR 01m xσ 01 P RSσ xR xS xσ CDRSσ xR xS xσ CDRSxR xS CDSσ xS xσ CDSxS Notice CDRSσ xR xS xσ CDRSxR xS cid13 xσ 1 0 CDσ DRSxR xS xσ 0 CDSσ xS xσ CDSxS cid13 xσ 1 0 CDσ DSxS xσ 0 Since construction DSxS DRSxR xS C additive follows comparing 28 29 CDRSσ xR xS xσ CDRSxR xS CDSσ xS xσ CDSxS This implies right hand formula Eq 27 nonpositive F submodular 8 Other applicative domains job scheduling recommender systems In section present additional applicative examples addressed framework 81 Job scheduling 27 28 29 We tackle job scheduling problem ﬁrst studied Stadje 24 Assume cid2 set jobs need processed single machine subject failure modeled stochastically We associate number P σ job σ cid2 represents probability machine fail performing σ We assume machine aging probability failing performing sequence jobs S simply P S j P S j Every job σ associated reward Rσ 0 discount dσ 0 1 typically discount depends atσ The reward performing job σ sequence jobs time tσ needed complete job σ dσ e cid17 S performed given dSRσ dS j dS j The objective function G sequence jobs S cid17 14 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 expected total reward assumption machine keeps processing jobs sequence S fails Formally GS Scid2 k1 P Sk1 1 dSk1 1 RSk 30 convention P d 1 The function G ﬁts class functions Eq 1 formally equivalent function considered ST problem described To DS P SdS note multiplying dividing kth addend Eq 30 1 DSk obtain GS Scid2 DSk1 1 k1 DSk 1 RSk 1 DSk 31 If F S 1 DS gσ Rσ 1Dσ observe G coincides F g deﬁned Eq 1 The main result reported Stadje 24 restricting G sequences distinct jobs ﬁxed length n optimal solution sequence S g decreasing gS1 gS2 gSn This conclusion implied general result expressed Proposition 1 We ﬁx gordering cid2 properties needed apply Corollary 1 hold fully extendable set Hdcid2 DS construction permutation invariant F S 1 DS permutation invariant Note cid9DS σ DSσ DS DSDσ 1 This implies Dσ 1 σ cid9DS σ 0 S σ Hence D antimonotonic consequently F monotonic From equality cid92 DS σ1 σ2 DSσ1σ2 DSσ1 DSσ2 DS DS1 Dσ11 Dσ2 follows cid92 DS σ1 σ2 0 S σ1 σ2 This yields submodularity F By deﬁnition Hdcid2 gordered 82 Recommender systems Finally present extend recommender application presented Ashkan et al 3 Numerical simulations example given Section 9 Assume cid2 set movies function g cid2 0 1 attributes corresponding satisfaction probability default user Movies organized different genres set T genres function t σ cid2 tσ T subset genres covered σ The recommender generates sequence S Hdcid2 The objective function G Hdcid2 R probability user satisfaction assuming following stochastic model choice user chooses genre t T probability rt picks ﬁrst item S given sequence t tS We use notation indicate index Formally mini 1 S t tS The user satisﬁed probability gS We formally compute GS follows Scid2 rt gS cid2 gS rt i1 t iti GS cid2 tT rtP satisﬁed t cid2 tT Deﬁne F Hdcid2 R cid2 F S rt cid22 t tS F S represents probability chosen genre shows sequence S holds cid2 rt F Si 1 F Si1 1 t iti Substituting expression Eq 32 recognize function form Eq 1 15 32 33 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Ashkan et al 3 study case rt equal optimality function F g set sequences distinct items maximal length cid2 discover solution previous example given S g monotonically decreasing In addition note optimal solution S trimmed iteratively discarding 0 In way obtain shortest possible recommended sequence items items S F Si maximizing satisfaction probability 1 F Si1 1 Similarly previous example properties needed apply Corollary 1 hold fully extendable set Hdcid2 ﬁxed gordering The function F S construction permutation invariant It known literature weighted coverage function interpreting rt weight genre t F S represents global weight genres covered sequence movies S Such functions represent known example monotonic submodular functions work Krause Golovin 17 details Finally deﬁnition Hdcid2 gordered In practical applications noted Ashkan et al 3 optimize sequences necessarily maximal length In direction propose generalization model leads function type Eq 1 Instead assuming movie σ cid2 covers set genres tσ associate probability vector pσ T movie σ pσ t indicates extent movie σ covers genre t Hence assume choice mechanism user following genre t selected user pick S 1 probability p S1 t If S1 chosen happen probability 1 p S1 t user pick S2 probability p S2 t If S chosen user satisﬁed probability gS In case GS 1 T cid2 tT P sat t 1 T cid2 Scid2 tT i1 gS iP t P t 1 p S1 t 1 p S i1 tp S t If deﬁne Scid2 F S 1 p S1 t 1 p S i1 tp S t i1 probability items sequence S eventually picked P t F Si 1 F Si1 1 This shows general case function G structure function Eq 1 In regard applicability Corollary 1 note function F S identical success probability deﬁned detection problem permutation invariant monotonic submodular Finally fully extendable set maximization takes place set Hdcid2 introduced gordered deﬁnition 9 Experimental results To potential method provide explicit numerical simulations ST recommender applications described 91 Search tracking We advantage generalized greedy algorithm standard running algorithms randomly generated ST problems To highlight algorithms exhibit different behaviors consider scenarios detection probability pattern depends execution time associated If pat terns associated lower t high detection probability standard generalized greedy search perform similarly They prefer early patterns placing beginning sequence add remaining patterns end sequence Conversely detection probabilities associated patterns greater t high standard greedy immediately places patterns beginning sequence patterns added right sequence exploits early search patterns In way constructs short sequences advantage richness set cid2 Instead generalized greedy free place patterns position manages exploit types patterns We generate 11000 realistic problems instances 20 candidate patterns 40 destinations1 Each pattern σ associated random sample destinations Time stamps generated sequentially taking random sequence 1 See supplementary material available online httpsdoi org 10 5281 zenodo 3695080 16 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Fig 1 Average objective values obtained standard generalized greedy algorithms Table 1 Average running time milliseconds standard generalized greedy algorithms G standard G generalized max repetitions 1 4 1 16 6 max repetitions 3 15 4 67 25 m q m value 1 1 q search patterns S σ1 σn imposing tσi tσi1 r r random number The detection probability linear function indexes sequence search patterns S different angular coeﬃcients φσi constant scenarios A scenario φσi m 1 corresponds case patterns lower time stamp having higher detection probabilities scenario m 1 represents case patterns higher time stamp having higher detection probabilities When m 0 patterns detection probability cid10 For problem run generalized standard greedy algorithms sequences maximal length 10 We consider types sequences ﬁrst establish patterns distinct second instead allow 3 repetitions pattern Fig 1 shows average objective values algorithms different scenarios left plot corresponds case distinct patterns right plot case maximum 3 repetitions pattern The ﬁgure shows cases generalized greedy algorithm dominates standard algorithm As expected difference performance particularly high considering ratio scenarios search patterns associated greater execution time higher detection probability The average running time scenarios algorithms instances reported Table 1 While generalized greedy algorithm slightly time consuming standard algorithm runtime acceptable real ST application optimization objective function typically performed time limit minute 223 92 Recommender systems For recommender systems application analyze performance generalized greedy algorithm case study considered Ashkan et al 3 comparison DUM algorithm proposed The general setting described Section 82 Each movie σ set cid2 equipped satisfaction probability gσ subset genres tσ T For ﬁxed positive integer K Ashkan et al 3 compare sequences movies S length K cid2 based performance indices IntraList Distance metric ILD 25 normalized Discounted Cumulative Gain nDCG 26 ILD measures diversity sequence formally deﬁned sequence S I L DS 1 S2 cid2 jS tS icid9tS j tS icid9tS j indicates symmetric difference subsets tS tS j nDCG discounted accu mulated measure level satisfaction sequence formally deﬁned sequence S nDC GS 1 C Scid2 i1 gS log2i 1 C normalization constant deﬁned ideal gain obtained sequence length maximum satisfaction probability elements The DUM algorithm considered Ashkan et al 3 explained Section 82 consists sorting elements cid2 according satisfaction probability g removing sequence elements increment 17 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Table 2 Comparison Dum Greedy K 5 Dum Greedy ILD 185 220 nDCG 078 083 K 10 ILD 191 212 nDCG 072 082 K 15 ILD 184 201 nDCG 072 082 value function F The sequence obtained way length guaranteed total number genres Since case authors want produce sequence prescribed length K general smaller number genres T 18 considered case study apply modiﬁcation algorithm substituting original function F following F S cid2 tT min cid2 σ cid2 σ t tσ Nt 34 cid10 Nt prescribed number movies genre t forced appear sequence These numbers Nt chosen t Nt K constructed making use users preferences rt genres Speciﬁcally case study considered starts 1M MovieLens dataset2 consisting million movie ratings 6040 unique users users 300 ratings selected This results dataset 955 users 502k ratings 3644 unique movies divided 18 genres For user rated movies split training test set 2 1 ratio The test set forms set cid2 recommendable movies Data training set create users genre proﬁles The users proﬁle generated matrix factorization singular value decomposition 27 provides movie σ cid2 satisfaction probability gσ The genre proﬁle consists empirical distribution rt movie genres T obtained training set rated user cid8 For Dum numbers Nt computed follows 3 ﬁrst empirical distribution r t calculated sampling 10 Nt elements original distribution rt genre set established Nt cid19r 0 Nt Nt set Otherwise D elements t1 t D sampled distribution rt ﬁnally Nt Nt 1 D ti t K cid20 If D K cid10 t cid8 t In approach instead apply original function F deﬁned Eq 33 user original distribution rt genre proﬁle maximizing directly sequences prescribed length K We perform experiments different values K Every experiment repeated 3 times different training test set splits In Table 2 report comparison Dum generalized greedy algorithm maximizes Eq 32 respect ILD nDCG As shown Table 2 approach performs better Dum metrics Our improved performance achieved thanks ﬂexibility algorithm incorporates set genres optimization problem directly opposed Dum samples subset genres construction sequences 10 Conclusions In paper applicative domains problem ﬁnding sequence objects maximizes reward expressed maximization recursive function exhibits structure captured Eq 1 After proving existing greedy algorithms yield strong theoretical guarantees function study properties generalize notions monotonicity submodularity adapting fully extendable sets sequences We introduce eﬃcient generalized greedy approach ensures ﬁnding solutions O 1 1 e optimal Our method general applied domain objective function transformed form Eq 1 To support thesis present evidence technique works applications provide explicit numerical simulations domains ST recommender systems The experiments directly power new algorithm Our work contributes discussion submodularity stepping away speciﬁc details practical applications presenting general properties functions encountered exploited ﬁnd better solutions eﬃciently Declaration competing The authors declare known competing ﬁnancial interests personal relationships appeared inﬂuence work reported paper 2 httpsgrouplens org datasets movielens 1m 18 S Bernardini F Fagnani C Piacentini Artiﬁcial Intelligence 297 2021 103486 Acknowledgements This work supported EPSRC Grant EPS0164731 Leverhulme Trust Grant VP12019037 MIUR Grant Dipartimenti di Eccellenza 20182022 CUP E11G18000350001 We thank anonymous reviewers detailed rigorous reviews Research data paper available httpsdoi org 10 5281 zenodo 3695080 References 1 A Krause C Guestrin Nearoptimal observation selection submodular functions Proceedings 22nd National Conference Artiﬁcial Intelligence Volume 2 AAAI07 AAAI Press 2007 pp 16501654 2 C Piacentini S Bernardini C Beck Autonomous target search multiple coordinated UAVs J Artif Intell Res 65 2019 519568 3 A Ashkan B Kveton S Berkovsky Z Wen Optimal greedy diversity recommendation Proceedings 24th International Conference 4 S Tschiatschek A Singla A Krause Selecting sequences items submodular maximization Proceedings ThirtyFirst AAAI Conference Artiﬁcial Intelligence IJCAI15 AAAI Press 2015 pp 17421748 Artiﬁcial Intelligence AAAI17 AAAI Press 2017 pp 26672673 5 S Alaei A Malekian Maximizing sequencesubmodular functions application online advertising arXiv1009 4153v1 2010 pp 118 6 J McAuley R Pandey J Leskovec Inferring networks substitutable complementary products Proceedings 21th ACM SIGKDD Interna tional Conference Knowledge Discovery Data Mining KDD15 ACM New York NY USA 2015 pp 785794 7 M Mitrovic M Feldman A Krause A Karbasi Submodularity hypergraphs sets sequences Proceedings International Conference Artiﬁcial Intelligence Statistics AISTATS18 PMLR 2018 pp 11771184 8 S Fujishige Submodular Functions Optimization Annals Discrete Mathematics Elsevier 2005 9 GL Nemhauser L Wolsey An analysis approximations maximizing submodular set functions Math Program 14 1978 265294 10 D Golovin A Krause Adaptive submodularity theory applications active learning stochastic optimization J Artif Intell Res 42 1 2011 427486 11 A Krause C Guestrin Nearoptimal nonmyopic value information graphical models Proceedings TwentyFirst Conference Uncer tainty Artiﬁcial Intelligence UAI05 AUAI Press Arlington Virginia United States 2005 pp 324331 12 S Dughmi T Roughgarden M Sundararajan Revenue submodularity Theory Comput 8 2012 95119 13 B Lehmann D Lehmann N Nisan Combinatorial auctions decreasing marginal utilities Games Econ Behav 55 2 2006 270296 14 SCH Hoi R Jin J Zhu MR Lyu Batch mode active learning application medical image classiﬁcation Proceedings 23rd Interna tional Conference Machine Learning ICML06 ACM New York NY USA 2006 pp 417424 15 Z Zhang EKP Chong A Pezeshki W Moran String submodular functions curvature constraints IEEE Trans Autom Control 61 3 2016 16 A Krause A Singh C Guestrin Nearoptimal sensor placements gaussian processes theory eﬃcient algorithms empirical studies J Mach 601616 Learn Res 9 2008 235284 17 A Krause D Golovin Submodular Function Maximization Cambridge University Press 2014 pp 7199 Ch 3 18 M Streeter D Golovin An online algorithm maximizing submodular functions D Koller D Schuurmans Y Bengio L Bottou Eds Advances Neural Information Processing Systems vol 21 Curran Associates Inc 2009 pp 15771584 19 C Qian C Feng K Tang Sequence selection Pareto optimization Proceedings TwentySeventh International Joint Conference Artiﬁcial Intelligence IJCAI18 International Joint Conferences Artiﬁcial Intelligence Organization 2018 pp 14851491 20 M Mitrovic E Kazemi M Feldman A Krause A Karbasi Adaptive sequence submodularity 33rd Conference Neural Information Processing Systems NeurIPS19 2019 pp 53535364 21 S Bernardini M Fox D Long C Piacentini Deterministic vs probabilistic methods searching evasive target Proceedings 31st AAAI Conference Artiﬁcial Intelligence AAAI17 2017 pp 37093715 22 S Bernardini M Fox D Long C Piacentini Leveraging probabilistic reasoning deterministic planning largescale autonomous searchand tracking Proceedings 26th International Conference Automated Planning Scheduling ICAPS16 2016 pp 4755 23 S Bernardini M Fox D Long Combining temporal planning probabilistic reasoning autonomous surveillance missions Auton Robots 41 1 2017 181203 mender Systems 2008 pp 123130 24 W Stadje Selecting jobs scheduling machine subject failure Discrete Appl Math 63 3 1995 257265 25 M Zhang N Hurley Avoiding monotony improving diversity recommendation lists Proceedings 2008 ACM Conference Recom 26 K Järvelin J Kekäläinen Cumulated gainbased evaluation IR techniques ACM Trans Inf Syst 20 4 2002 422446 27 D Scott S Dumais GW Furnas TK Landauer R Harshman Indexing latent semantic analysis J Am Soc Inf Sci Technol 41 6 1990 391407 19