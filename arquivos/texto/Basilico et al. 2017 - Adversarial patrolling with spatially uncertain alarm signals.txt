Artiﬁcial Intelligence 246 2017 220257 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Adversarial patrolling spatially uncertain alarm signals Nicola Basilico Department Computer Science University Milan Milano Italy b Dipartimento di Elettronica Informazione e Bioingegneria Politecnico di Milano Milano Italy Giuseppe De Nittis b Nicola Gatti b r t c l e n f o b s t r c t Article history Received 15 June 2015 Received revised form 6 August 2016 Accepted 26 February 2017 Available online 4 March 2017 Keywords Security games Adversarial patrolling Algorithmic game theory When securing complex infrastructures large environments constant surveillance area affordable To cope issue common countermeasure usage cheap wideranged sensors able detect suspicious events occur large areas supporting patrollers improve effectiveness strategies However sensors commonly affected uncertainty In present paper focus spatially uncertain alarm signals That alarm able detect attack uncertain exact position attack taking place This common area secured wide border patrolling fair site surveillance We propose best knowledge ﬁrst Patrolling Security Game Defender supported spatially uncertain alarm nondeterministically generates signals target attack We ﬁnding optimal strategy FNPhard tree graphs APXhard arbitrary graphs We provide exponential time exact algorithms polynomial time approximation algorithms Finally false positives missed detections best patrolling strategy reduces stay place wait signal respond best This strategy optimal nonnegligible missed detection rates unfortunately affect commercial alarm We evaluate methods simulation assessing quantitative qualitative aspects 2017 Elsevier BV All rights reserved 1 Introduction Security Games model task protecting physical environments noncooperative game Defender Attacker 1 These games usually place Stackelberg aka leaderfollower paradigm 2 Defender leader commits strategy Attacker follower ﬁrst observes commitment best responds As discussed seminal work 3 ﬁnding leaderfollower equilibrium computationally tractable games follower complete information hard Bayesian games different types Attacker The availability computationally tractable aspects Security Games led development algorithms capable scaling large problems making deployable security enforcing systems realworld applications The ﬁrst notable examples deployment police checkpoints Los Angels International Airport 4 scheduling federal air marshals US domestic airline ﬂights 5 More recent case studies include positioning US Coast Guard patrols secure crowded places bridges ferries 6 arrangement city guards stop fare evasion Los Angeles Metro 7 Finally similar approach tested evaluated Uganda Africa Corresponding author Email address nicolabasilicounimiit N Basilico httpdxdoiorg101016jartint201702007 00043702 2017 Elsevier BV All rights reserved N Basilico et al Artiﬁcial Intelligence 246 2017 220257 221 protection wildlife 8 Thus Security Games emerged interesting game theoretical tool showed ontheﬁeld effectiveness number real security scenarios We focus speciﬁc class security games called Patrolling Security Games These games modeled inﬁnite horizon extensiveform games Defender controls patrollers moving environment represented ﬁnite graph The Attacker having knowledge strategy Defender committed observe movements patrollers time use information deciding convenient time target location attack 9 When multiple patrollers available coordinating best general hard task computational aspects account communication issues 10 However patrolling problem tractable multiple patrollers border security line cycle graphs patrollers homogeneous moving sensing capabilities vertices composing border share features 11 Scal ing model involved study compute patrolling strategies scenarios Attacker allowed perform multiple attacks 12 Similarly coordination strategies multiple defenders investigated 13 In 14 authors study case temporal discount targets Extensions discussed 15 coordination strategies defenders explored 16 resource cover multiple targets 17 attacks detected different stages different associated utilities Finally theoretical results properties speciﬁc patrolling settings provided 18 In present paper provide new model Patrolling Security Games Defender supported alarm deployed environment 11 Motivating scenarios Often large environments constant surveillance area affordable focused inspections triggered alarms convenient Realworld applications include UAVs surveillance large infrastructures 19 wildﬁres detection CCD cameras 20 agricultural ﬁelds monitoring 21 surveillance based wireless sensor networks 22 border patrolling 23 Alarm systems practice affected detection uncertainty missed detections false positives localization aka spatial uncertainty alarm uncertain exact target attack We summarily practical security problems ascribed category We report examples presenting features requirements model properly deal In rest paper necessarily general stance encourage reader mind cases reference applications real deployment model 111 Fight illegal poaching Poaching widespread environmental crime causes endangerment wildlife regions world Its devastating impact makes development surveillance techniques contrast kind activities important matters national international debates Poaching typically takes place vast savage areas making costly ineffective solely rely persistent patrol ranger squads To overcome issue recent developments focused providing rangers environmental monitoring systems better plan inspections concentrating areas large likelihood spotting crime Such systems include use UAVs ﬂying area alarmed fences ontheﬁeld sensors trying recognize anomalous activities1 In cases technologies meant work alarm illegal activity recognized signal sent rangers base station response undertaken In great majority cases signal corresponds spatially uncertain localization illegal activity For example cameraequipped UAV spot presence pickup forbidden area derive actual location poachers moving In way alarmed fences sensors transmit location violated entrances forbidden passages In cases signal implies restricted precise localization poaching activity The use Security Games particular domain new example 8 However model allows computation alarm response strategies given alarm deployed ﬁeld This adopting discretization environment target corresponds sector values related expected population animals sector deadlines represent expected completion time illegal hunts parameters derived data discussed 8 112 Safety fair sites Fairs large public events attended thousands visitors problem guaranteeing safety hosting facilities hard For example Expo 2015 recent Universal Exposition hosted Milan Italy saw average 100000 visits day This poses need carefully addressing safety risks derive planned act vandalism terrorist attacks Besides security guards patrols fair sites endowed locally installed monitoring systems Expo 2015 employed 200 baﬄe gates 400 metal detectors entrance site The internal area constantly monitored 4000 surveillance cameras 700 guards Likely devicespersonnel identiﬁed security breach signal sent control room circumscribed request intervention This approach required especially kind environments detecting security breach 1 See example http wildlandsecurityorg 222 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 neutralizing different tasks The particular usually requires greater effort involving special equipment personnel employment demand basis convenient Moreover detecting location threat cases different location neutralized making request intervention spatially uncertain For instance consider security guard surveillance camera detecting visitors reactions shooting rampage performed attacker In examples like restrict area security breach happened precise information location gathered attacker probably moved Our model applied provide policy schedule interventions security breach detected particular section site In case targets correspond buildings installations visitors Values deadlines chosen according importance targets expected crowding required response priority 12 Alarms security games While problem managing sensor network optimally guard securitycritical infrastructures investi gated restricted domains 24 problem integrating alarm signals adversarial patrolling completely unexplored The work classiﬁed scope 25 The paper proposes skeleton model alarm sensors spatial uncertainty detecting attacks single targets The authors analyse sensory information improve effectiveness patrolling strategies adversarial settings They sensors affected false negatives false positives best strategy prescribes patroller responds alarm signal rushing target attack patrolling environment As consequence cases model treatment trivial On hand sensors affected false negatives treatment carried means easy variation algorithm case sensors 9 In case false positives admitted problem computationally intractable To best knowledge previous result dealing spatial uncertain alarm signals adversarial patrolling present literature Effectively exploiting alarm determining good deployment selecting location install sensors complementary radically different problems The results provide work lie scope ﬁrst treatment second left future works In words assume deployed alarm given deal problem strategically exploiting best Any approach search optimal deployment know principle evaluate possible deployments In sense problem needs addressed deal deployment 13 Contributions In paper propose ﬁrst Security Game integrates spatially uncertain alarm gametheoretic settings patrolling2 An alarm signal carries information set targets attack described probability generated target attacked The analysis main results propose work devoted basic game model Defender control single patroller alarm immune false positives false negatives making spatial uncertainty limitation As results assumptions play signiﬁcance arising computational challenges resolution prerequisite complex settings Indeed extensions model generalize multiresource settings 27 consider false negatives 28 built basic result provided work The game consider decomposed ﬁnite number ﬁnitehorizon subgames called Signal Response Game v SRGv capturing situation Defender vertex v Attacker attacked target inﬁnitehorizon game called Patrolling Game PG Defender moves absence alarm signal We SRGv FNPhard treebased topologies arbitrary graphs APXhard We provide exact algorithms The ﬁrst based dynamic programming performs breadthﬁrst search second based branchandbound approach performs depthﬁrst search We use approaches design approximation algorithms Then study PG showing false positives missed detections present optimal Defender strategy stay ﬁxed location wait signal respond best This strategy keeps optimal nonnegligible missed detection rates allowed We experimentally evaluate scalability exact algorithms compare approximation ones terms solution quality compute times investigating hard instances gap hardness results theoretical guarantees approximation algorithms We approximation algorithms provide high quality solutions hard instances Finally provide example resolution realistic instance based Expo 2015 exact algorithms applied kind settings Moreover realistic instance assess optimal patrolling strategy coincides static placement allowing false negative rate equal 30 2 A preliminary short version work available 26 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 223 14 Paper structure Fig 1 Example patrolling setting In Section 2 introduce game model In Section 3 study problem ﬁnding strategy Defender responding alarm signal In Section 4 study patrolling problem In Section 5 experimentally evaluate algorithms In Section 6 brieﬂy discuss main Security Games research directions explored decades Finally Section 7 concludes paper Appendix A includes technical proofs paper Appendix B discusses particular results obtained special classes instances Appendix C reports additional experimental results Appendix D provides table summarizing notation symbols paper 2 Problem statement In section formalize problem study More precisely Section 21 patrolling setting game model Section 22 state computational questions shall address work 21 Game model Initially Section 211 introduce basic patrolling security game model integrating main features models currently studied literature Next Section 212 extend game model introducing alarm signals In Sec tion 213 depict game tree patrolling security game alarm signals decompose notable subgames facilitate study To ease presentation summarized notation symbols Table D3 211 Basic patrolling security game As customary Artiﬁcial Intelligence literature 914 deal discrete terms space time patrolling settings representing approximation continuous environment Speciﬁcally model environment patrolled undirected connected graph G V E vertices represent different areas connected corridorsroads represented edges Time discretized turns Edges assigned weights representing number time steps needed traverse If stated shall assume unitary weights With ω j shall denote shortest time j We deﬁne T V subset sensible vertices called targets protected possible attacks Each target t T characterized value π t 0 1 penetration time dt N measures number turns needed complete attack t Example 1 We report Fig 1 example patrolling setting Here V v 0 v 1 v 2 v 3 v 4 T t1 t2 t3 t4 ti v 1 2 3 4 All targets t present value π t penetration time dt At turn Attacker A Defender D play simultaneously having following available actions A attacked previous turns observe position D graph G 3 decide attack target wait turn The attack instantaneous meaning delay decision attack actual presence threat selected target4 D information actions undertaken A previous turns selects vertex patrol adjacent current movement nonpreemptive traversal single edge v v cid5 E The game conclude correspondence following events The ﬁrst D patrols target t attack A dt turns In case attack prevented A captured The second 3 Partial observability A position D introduced discussed 29 4 This worstcase assumption according A strong possible It relaxed associating execution costs As actions shown 30 224 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig 2 Examples alarm systems target t attacked D patrol t dt turns follow beginning attack In case attack successful A escapes captured When A captured D receives utility 1 A receives utility 0 When attack t success D receives 1 π t A receives π t The game conclude A decides wait observed position D attacking In case D receives 1 A receives 0 Another intuitive way think payoff structure assume D receives initial utility 1 loses π t target t successfully compromised Notice game constant sum equivalent zerosum game positive aﬃne transformation The game model extensive form played sequentially imperfect information D observing actions undertaken A inﬁnite horizon A position wait forever The fact A observe actions undertaken D acting makes leaderfollower equilibrium natural solution concept problem D leader A follower Since focus zerosum games leaders strategy leaderfollower equilibrium maxmin strategy employing linear mathematical programming requires polynomial time number actions available players 31 212 Introducing alarm signals We extend game model described previous section introducing spatial uncertain alarm exploited D The basic idea alarm uses number sensors spread environment gather information possible attacks raises alarm signal time attack occurs The alarm signal provides information location target attack ongoing affected uncertainty In words alarm detects attack uncertain target attack Formally alarm deﬁned pair S p S s1 sm set m 1 signals p S T 0 1 function speciﬁes probability having generating signal s given target t attacked denote probability ps t With slight abuse notation signal s deﬁne T s t T ps t 0 similarly target t St s S ps t 0 In work assume alarm affected false positives signals generated attack occurred Formally ps cid8 0 cid8 indicates targets attack alarm affected false negatives signals generated attack occurred Formally p t 0 indicates signals generated Section 4 optimal strategies compute assumption preserve optimality presence nonnegligible false negatives rates Example 2 We report examples alarm systems patrolling setting depicted Fig 1 The ﬁrst example reported Fig 2a It lowaccuracy alarm generates signal anytime target attack provide information target attack The second example reported Fig 2b It provides accurate information localization attack previous example Here reception signal si implies uniform strategy A high probability attack target ti Namely ti attacked alarm generates si high probability different signal N Basilico et al Artiﬁcial Intelligence 246 2017 220257 225 Given presence alarm deﬁned game mechanism changes following way At turn deciding D observes signal generated alarm makes decision considering information This introduces game node chance implementing nondeterministic selection signals 213 The game tree decomposition Here depict game tree game model decomposing recurrent subgames A portion game depicted Fig 3 Such tree read following steps Root tree A decides wait turn action denoted cid8 indicate target attacked attack target t T action denoted label t attacked target Second level tree N denotes alarm represented naturetype player Its behavior priori speciﬁed conditional probability mass function p determines generated signal given attack performed A In particular useful distinguish cases A attack action cid8 signal generated assumption p cid8 1 b A attacks target t signal s drawn St probability ps t recall p t 0 Third level tree D observes signal generated alarm decides vertex patrol adjacent current current vertex initially chosen D Fourth level tree It useful distinguish cases attack present tree subgame starting tree game position D different initial notice case As decision nodes singleton information set modeling fact A observe Ds position b attack taking place target t D act Such game tree decomposed number ﬁnite recurrent subgames best strategies agents subgame independent subgames This decomposition allows apply divide et impera approach simplifying resolution problem ﬁnding equilibrium More precisely denote cid4 subgames We deﬁne cid4 game subtree extracted tree Fig 3 follows Given Ds current vertex v V select decision node A Then extract subtree rooted discarding branch corresponding action cid5 attack5 Intuitively subgame models players interaction Defender given vertex v Attacker perform attack As consequence cid4 obtained way ﬁnite attack t started maximum length game dt Moreover set different cid4s extract ﬁnite subgame possible current vertex D As consequence extract V different subgames Notice inﬁnite horizon subgame recur inﬁnite number times game tree However repetitions independent game zerosum need solve subgame obtain optimal strategy applied repetitions In words assuming attack performed agents strategies split number independent strategies solely depending current position D The reason discarded branch corresponding action cid5 subgame seek deal complementary case exploiting simple backward induction approach explained later First Signal Response Game v subgame cid4 deﬁned characterized vertex v representing current vertex D brevity shall use SRGv In SRGv goal D ﬁnd best strategy starting vertex v respond alarm signal All SRGvs independent best strategy subgame depend strategies subgames The intuition best strategy SRGv depend vertices visited D attack Given SRGv denote σ D vs strategy D observed signal s σ D strategy A Let notice SRGv given signal s D agent plays sequence moves collapsed single action Thus SRGv essentially twolevel game A decides target attack D decides sequence moves graph strategy proﬁle σ D D σ A σ D vsm σ D vs1 v v v Then according classical backward induction arguments 32 best strategies SRGv substitute subgames agents equilibrium utilities ﬁnd best strategy D patrolling vertices alarm signal raised best strategy attack A We problem Patrolling Game conciseness shall use PG We denote σ D strategies D A respec tively PG σ A 5 Rigorously speaking deﬁnition subgame compliant deﬁnition provided Game Theory 32 requires actions node belong subgame separate action cid5 actions t However slightly change structure game making deﬁnition subgame compliant game theory More precisely suﬃcient split node A nodes ﬁrst A decides attack target wait turn second conditioned fact A decided attack A decides target attack This way subtree root second node A subgame compliant game theory It easily observed change game tree structure affect behavior agents 2 2 6 N B s l c o e t l A r t ﬁ c l I n t e l l g e n c e 2 4 6 2 0 1 7 2 2 0 2 5 7 Fig 3 Game tree v assumed current vertex D r collapsed sequence moves called route D performs graph dashed lines indicate information sets function U Ari t j returns As payoff A attacks target t j D patrols route ri N Basilico et al Artiﬁcial Intelligence 246 2017 220257 227 22 The computational questions pose Our contributions focus design algorithms ﬁnd equilibrium game develop central questions The ﬁrst stems directly problem deﬁnition Question 1 Which best patrolling strategy D maximizing expected utility Clearly problem related called PG game decomposition In order build answer pose questions instead involve subgame called SRGv Question 2 Given starting vertex v signal s strategy allowing D visit targets T s deadline Question 3 Given starting vertex v signal s pure strategy giving D expected utility k Question 4 Given starting vertex v signal s mixed strategy giving D expected utility k These questions independent In particular answering prerequisite solving ﬁrst For reason shall bottomup approach answering questions starting dealing ﬁrst wholegame level Also Questions 3 4 easier Question 2 hardness results extended 3 Signal response game In section start dealing resolution SRGv Speciﬁcally Section 31 prove hardness problem analyzing computational complexity Then Section 32 Section 33 propose algorithms ﬁrst based dynamic programming breadthﬁrst search second adopts branch bound depthﬁrst search paradigm Furthermore provide variation algorithm approximating optimal solution For sake presentation technical proofs reported Appendix A 31 Complexity results The aim section assess computational complexity ﬁnding exact approximate equilibrium game model Furthermore aim identifying source hardness problem eﬃcient algorithm solving Each SRGv characterized T actions available A corresponding target t O V maxt dt decision nodes D The portion game tree played D safely reduced observing D targets shortest path This allows discard tree decision nodes D occupies nontarget vertex Nevertheless reduction keeps size game tree exponential parameters game speciﬁcally O T T 6 Notice exponential size game tree constitute proof ﬁnding equilibrium strategies SRGv requires exponential time parameters game exclude existence compact representation Ds strategies Markovian strategies The ﬁrst result provide implies representation unlikely exist exists unlikely computed polynomial time Call gv expected utility A SRGv 1 g v corresponding utility D We deﬁne following problem Deﬁnition 1 kSRGv The decision problem kSRGv deﬁned INSTANCE instance SRGv QUESTION σ D A plays best response holds g v k Theorem 1 kSRGv NPhard S 1 graph tree7 The result shows wrt tree graphs answering Question 1 FNPhard answering Questions 2 3 4 NPhard 6 A accurate bound O T minT maxt dt 7 Rigorously speaking NPhardness speciﬁc class trees S2LSTARS Details A1 228 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 For sake completeness notice maxmin strategy support upper bounded T number actions available min player A exists 33 Now given established main source hardness problem computing strategy space D focus problem ﬁnding eﬃcient representation We start deﬁnitions Deﬁnition 2 Route Given starting vertex v signal s route r ﬁnite sequence vertices called ri ith vertex r0 v ri T s 0 With slight overload notation T r set targets sequence cid2 We restrict attention special class routes covering For route r 0 deﬁne Arri i1 h0 ω rhrh1 Such value gives time needed D arrive target ri following graph walk shortest paths consecutive vertices sequence r0 r1 ri Deﬁnition 3 Covering route A covering route route r Art dt t T r Covering routes abstractions Ds available pure strategies current vertex v signal s generated If r covering route vertex v signal s T r T s set targets r instantiate r graph walk D sequence moves G guarantees capture A target T r Such walk simply obtained starting r0 v covering shortest path ri ri 1 The total temporal cost walk expressed cr ArrT r We shall informally refer process walking route r Covering routes constitute action space D SRGv game Even considering single signal s number routes O T sT s worst case However covering routes played D following dominance arguments 34 discarding dominated routes crucial design eﬃcient algorithm Deﬁnition 4 Intraset dominance Given starting vertex v signal s different covering routes r r T r T r cid5 r dominates r cid5 cr cr cid5 cid5 Deﬁnition 5 Interset dominance Given starting vertex v signal s different covering routes r r r dominates r cid5 cid5 T r T r cid5 Furthermore convenient introduce concept covering set strictly related concept covering route It deﬁned follows Deﬁnition 6 Covering set Given starting vertex v signal s covering set covset Q subset T s exists covering route r T r Q Let focus Deﬁnition 4 It suggests safely use route covering set Covering sets suﬃce describing outcomes game agents payoffs depend fact A attacks target t T s remarkable reduction search space wrt covered D worst case O 2 O T sT s However algorithm restricting covering sets able determine set targets covering diﬃcult problem Deﬁnition 7 COVSET The decision problem COVSET deﬁned INSTANCE instance SRGv target set T QUESTION T covering set Equivalently T admit covering route r Theorem 2 COVSET NPcomplete Therefore computing covering route given set targets deciding covering route exists doable polynomial time P NP This shows covering sets suﬃce deﬁning payoffs game size payoffs matrix bounded number covering sets practice need covering routes certify given subset targets covering The impossibility conﬁne algorithms space T s However section provide algorithm covering sets suggest complexity worse O 2 T s neglecting polynomial terms enumerate covering sets complexity O 2 associated covering route minimum cost Let focus Deﬁnition 5 InterSet dominance leveraged introduce concept maximal covering sets routes enable reduction set actions available D N Basilico et al Artiﬁcial Intelligence 246 2017 220257 229 Deﬁnition 8 MAXIMALITY Given covering set Q T r r Q r maximal covering route r Q T r cid5 cid5 T s In best case route covering targets number maximal covering sets 1 safely restrict single minimum cost covering route set number covering sets including nonmaximal ones 2 Thus considering maximal covering sets allows exponential reduction payoffs matrix In worst case possible subsets composed T s2 targets maximal covering sets T s1 allowing reduction number maximal covering sets O 2 payoffs matrix factor 2 Furthermore knew priori Q maximal covering set avoid searching covering routes set targets strictly contains Q When designing algorithm solve problem Deﬁnition 5 exploited introduce pruning techniques save average compute time However following result shows deciding covering set maximal hard T s2 number covering sets O 2 Deﬁnition 9 MAXCOVSET The decision problem MAXCOVSET deﬁned cid5 T INSTANCE instance SRGv target set T covering set T QUESTION T maximal cid5 Theorem 3 There polynomialtime algorithm MAXCOVSET P NP Nevertheless exists algorithm computing maximal covering sets route potentially leads exponential reduction time needed solving linear program additional polynomial cost wrt enumeration covering sets Therefore neglecting polynomial terms algorithm complexity O 2 T s Finally focus complexity approximating best solution SRGv When D restricts strategies pure problem clearly approximable polynomial time approximation ratio depends T s The basic intuition game instance admits maximal covering route covers targets value targets 1 maximal covering route played returning utility 1 D route played returning utility 0 polynomialtime algorithm ﬁnd maximal covering route covering targets P NP On hand interesting investigate case restriction pure strategies present We problem keeps hard Theorem 4 The optimization version kSRGv OPTSRGv APXhard restricted case graph metric signal s targets t T s penetration time dt exists maximal covering route covering targets The theorem allows important remarks Remark 1 The result exclude existence constantratio approximation algorithms OPTSRGv We conjecture unlikely OPTSRGv presents similarities metric DEADLINETSP goal ﬁnd longest path vertices traversed deadline The DEADLINETSP admit constantratio approximation algorithm 35 bestknown approximation algorithm logarithmic approximation ratio 36 The following observations produced relationships OPTSRGv DEADLINETSP maximal route covering targets OPTSRGv exists optimal solution OPTSRGv optimal DEADLINETSP applied graph maximal route covering targets OPTSRGv exist optimal solutions problems different restrict purestrategy solutions OPTSRGv approximating optimal solution DEADLINETSP direct technique approximate OPTSRGv enumerate subsets targets subset targets need execute approximation DEADLINETSP require exponential time We notice addition total number sets targets logarithmic size polynomial cid72log2T algorithm enumerating require exponential time optimal solution OPTSRGv randomized examples optimal solutions maximal covering routes played produced showing optimum strictly necessary play maximal covering routes approximations suﬃce Remark 2 If possible map DEADLINETSP instances OPTSRGv instances maximal covering route covering targets exists trivially follow OPTSRGv admit constantapproximation ratio We able ﬁnd mapping conjecture approximationpreserving reduction 230 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 DEADLINETSP OPTSRGv restrict instances The study instances OPTSRGv mixed strategies optimal treatment challenging 32 Dynamicprogramming algorithm We start presenting algorithms The ﬁrst exact second approximation algorithm Both algorithms based dynamic programming approach 321 Exact algorithm In section provide algorithm compute strategies available D v current vertex signal s generated alarm The idea adopt dynamic programming method enumerates covering sets increasing cardinalities Each covering set obtained sequence expansions starting set add target iteration We denote covering set Q k vt k indicates cardinality v t denote starting vertex D target added set respectively The algorithm operates way sequence targets corresponding expansions obtain Q k vt covering route set Informally shall generative route Q k vt denote cQ k vt temporal cost We choose obtain w requiring expansion admissible respect conditions Given set Q k obtained vt new set Q k1 Q k vt vw 1 w covered current covering set w T s Q k vt vt shortest walk t w dw 2 w covered dw extending generative route Q k vt ω tw cQ k 3 t cid5 target visited shortest path t w t cid5 Q k vt covered dt cid5 cQ k vt ω ttcid5 Conditions 1 2 require expansion form new covering set consistent Deﬁnition 6 ensuring algorithms soundness Condition 3 requires Q k vt proper descriptor generative route meaning route walked covers uniquely targets included Q k vt targets outside This requirement operational choice reduce number expansions iteration algorithm Consider instance graph degree bounded 3 Condition 3 allows generate worst case 3 new covering sets expansion round instead T Notice Condition 3 algorithm generate maximal covering set Lemma 5 Any maximal covering set generated set sequence admissible expansions Proof sketch Consider expansion adding target w violates Condition 3 target t split admissible ones The ﬁrst adding t expansions multiple t Such expansion second adding w The rationale works multiple clearly applies maximal covering sets subset covering sets cid2 cid5 cid5 cid5 Condition 3 exploited reduce required compute time rigorously speaking presents drawback To establish target w added set Q k vt algorithm needs check shortest path t w paths worst case exponentially We cope adopting following simpliﬁcation We ﬁx set canonical shortest paths running FloydWarshall algorithm Then given t w fetch canonical shortest path check Condition 3 assuming path unique If condition veriﬁed assumption veriﬁed original deﬁnition If condition veriﬁed algorithm assuming validity Conditions 1 2 obtain covering set Q k1 vw proper meaning cid5 Q k1 vw gets covered Let assume case walking generative route target t invalidating target The algorithms current solution representation set Q k1 wlog t vw inconsistent actual solution generative route By Lemma 5 know algorithm generate set Q k2 cid5 nonproper covering set Q k1 vw removable interset dominance Deﬁnition 5 Obviously workaround comes additional cost algorithm unnecessarily generates set Q k1 vw proper deﬁnition Condition 3 avoided Still solution turned convenient exponential multiplicity shortest paths unlikely graphs representing real environments vw making admissible expansions t vt Since Q k2 w Q k Q k1 vw t vw cid5 cid5 In Algorithm 1 provide technical details Covering sets obtained algorithm grouped collections Ck vt denotes collection covering sets cardinality k expansion added target t After required initialization steps Lines 1 2 generated Q k1 Line 6 apply Line 8 In Step 9 use procedure called SearchQ C Q covering set C collection covering sets The procedure outputs Q Q C We adopted eﬃcient implementation procedure run O T s More precisely represent covering set Q binary vector length vt compute set admissible expansions Q N Basilico et al Artiﬁcial Intelligence 246 2017 220257 231 T s ith component set 1 target ti Q 0 A collection covering sets C represented binary tree depth T s The membership covering set Q collection C represented branch tree way ti Q left edge depth 1 branch We easily determine Q C checking traversing left right edge tree time read 1 0 Q s binary vector reach leaf node depth T s The insertion new covering set collection way traversing existing edges expanding tree necessary If newly generated covering set present collection present higher cost Step 10 collection cost updated Steps 11 12 Algorithm 1 DPComputeCovSetsv s 1 t T s C0 vv 2 c 0 3 k 1 T s t T s 4 Q k1 5 vt 6 7 8 Q w Q vw Q k1 vt Ck1 vt Q k U SearchQ k cU cQ k1 w vw Ck vw vt ω Q k Ck vw cQ k1 t T s k T s vw cQ k Ck vw tw vw vt ω tw 9 10 11 12 13 return Ck vt w T s Conditions 13 satisﬁed After Algorithm 1 completed execution arbitrary T cid5 T easily obtain temporal cost shortest covering route c T cid5 min Q YT cid5 cQ Y T cid5 tT cid5 SearchT Algorithm 1 specify carry subtasks following covering set c vt notice T cid5 cid5 cid5 CT T cid5 For sake simplicity The ﬁrst annotation dominated covering sets Each time Steps 11 12 executed covering set added collection Let Q assume cardinality k Each time new Q included cardinality k mark covering sets cardinality k 1 dominated Q Deﬁnition 5 The number sets dominated worst case Q searched collection Ck1 feasible terminal t vt marked dominated The number terminal targets cardinality Q n described Search procedure takes O T s Therefore dominated covering sets annotated O T s3 extra cost iteration Algorithm 1 We mark delete dominated covering sets generate nondominated ones iteration The second task generation routes To maintain list generating routes iteratively appending terminal vertex w generative route Q k1 w included corresponding collection At end algorithm routes correspond nondominated covering sets returned Maintaining list introduces O 1 cost vt set Q k1 vt T s compute covering sets Theorem 6 Algorithm 1 exact algorithm worstcase complexity O T s22 cardinality T s With annotations dominances routes generation algorithm yields worstcase complexity O T s52 T s Notice algorithm exact based enumeration procedure Example 3 We provide simple example execution Algorithm 1 Consider problem instance single signal arbitrary target values topology penetration times follow 232 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 We report expansions algorithm increasing cardinalities value k following table k 0 c 0 k 1 Q 1 vt3 t3 c 1 k 2 Q 2 vt1 t1 t3 c 2 Q 2 vt2 t2 t3 c 2 Q 2 vt4 t3 t4 c 2 Q 1 vt4 t4 c 1 Q 2 vt3 t3 t4 c 2 vt2 vt4 vt1 k 3 Q 3 Q 3 Q 3 Q 3 Q 3 Q 3 Q 3 Q 3 vt1 vt1 vt4 vt2 vt2 t1 t2 t3 c 3 t1 t3 t4 c 4 t1 t2 t3 c 3 t2 t3 t4 c 4 t1 t3 t4 c 4 cid2 t2 t3 t4 c 4 t1 t3 t4 c 3 cid4 t2 t3 t4 c 3 cid5 Notice Constraint 3 intervenes expanding covering sets k 1 k 2 In table c indicates temporal cost relative covset covset marked cid2 dominates marked covset marked cid4 dominates marked cid5 322 Approximation algorithm The dynamic programming algorithm presented previous section directly adopted approximate maximal covering routes We notice case introduce logarithmic upper bound size covering sets generated Algorithm 1 obtain number routes O 2log2T s exponential Thus goal design polynomialtime algorithm generates polynomial number good covering routes We observe total order vertices work complete graph targets edge corresponds shortest path ﬁnd polynomial time maximal covering routes subject constraint given pair targets t t order We monotonic route satisfying given total order Algorithm 2 returns maximal monotonic covering routes total order lexicographic trivially change order suﬃcient relabel targets route t precedes t route t precede t cid5 cid5 cid5 Algorithm 2 based dynamic programming works follows Rk l matrix storing cell route Lk l matrix storing cell maximum lateness corresponding route meaning k l The maximum lateness route r captures maximum delay targets ﬁrst visit deadline Formally deﬁned maxtT s Art dt The route stored Rk l minimum lateness monotonic ones covering l targets tk ﬁrst visited target Thus basically l 1 Rk l contains route cid17v tkcid18 l 1 Rk l deﬁned appending Rk 1 best terms minimizing maximum cid5 k order satisfy total order The set routes R returned8 lateness route Rk The complexity Algorithm 2 O T s3 time needed ﬁnd shortest paths cid5 l 1 k Algorithm 2 MonotonicLongestRoutev s cid5 Lk k cid5 C R k C L k l 1 cid5 1 2 T s Rk k 1 k k 2 k T s T s 1 1 l 1 2 T s 3 4 5 6 7 8 9 10 cid5 st T s k cid5 cid17Rk 1 Rk cid5 maxLk 1 ω Rk l cid17v tkcid18 Lk l ω k C R k C L k dtk vtk 11 12 13 14 15 return R j arg min j C L j C L j 0 Rk l C R j Lk l C L j cid5 T s k cid5 l 1cid18 vtk ω tk kcid5 ω vkcid5 Lk cid5 l 1 We use different total orders breaking ties randomly set targets collecting routes generated total order increasing order ω increasing order dt rationale targets short deadlines visited targets long deadlines increasing order dt ω vt quantity excess time rationale targets short excess time vt rationale targets close v visited targets far v visited targets long excess time 8 We notice dominance applied discard dominated routes However case improvement negligible total number routes including nondominated ones polynomial N Basilico et al Artiﬁcial Intelligence 246 2017 220257 233 Algorithm 3 BranchandBoundv s ρ 1 C Lmax 2 C Lmin 3 t T s ω 4 vt TreeSearchcid20ρ T scid21 cid17v tcid18 5 6 return C Lmax dt In addition use random restart generating random permutations targets Theorem 7 Algorithm 2 provides approximation ratio cid7 1 T s Proof sketch The worst case approximation ratio algorithm occurs covering route including targets exists covering route returned heuristic algorithm visits target In case optimal expected utility D 1 Our algorithm worst case π t 1 target t returns approximation ratio cid7 T s It straightforward cases approximation ratio larger cid2 1 33 Branchandbound algorithms The dynamic programming algorithm presented previous section essentially implements breadthﬁrst search In speciﬁc situations depthﬁrst search outperform breadthﬁrst search penetration times relaxed good heuristics lead depthﬁrst search ﬁnd brief time maximal covering route avoiding scan expo nential number routes breadthﬁrst search In section adopt branchandbound approach design exact algorithm approximation algorithm In particular Section 331 exact algorithm Section 332 present approximation 331 Exact algorithm Our branchandbound algorithm Algorithm 3 treesearch based algorithm working space covering routes returning set covering routes R It works follows Initial step We exploit global set variables C Lmin C Lmax initially set Steps 12 Algorithm 3 These variables contain closed covering routes covering routes expanded violating penetration time target visit C Lmax contains covering routes returned algorithm C Lmin pruning discussed Given starting vertex v signal s target t T s ω dt generate covering route r cid17v tcid18 r0 v r1 t Steps 5 Algorithm 3 Thus D vt covering route target covered time v Notice t minimal route exist target t covered shortest path starting vertex v guarantee capture This guarantee A attack t probability depending values π A ﬁnd proﬁtable randomize different set targets The meaning parameter ρ Line 5 Algorithm 3 described Route expansions The subsequent steps essentially evolve branch according depthﬁrst search tracking limited ρ The choice ρ directly inﬂuences behavior algorithm consequently complexity Each node search tree represents route r built far starting initial route cid17v tcid18 At iteration route q p route obtained inserting r expanded inserting new target particular position We denote r target q pth target r Notice expansion r preserve relative order targets present r visited The collection feasible expansions r s ones covering routes denoted R ordered according heuristic Algorithm 6 described cid22 depth node tree smaller generate R equal cid20ρ T scid21 backtracking disabled Steps 710 Algorithm 4 depth larger value enabled Steps 56 Algorithm 4 This equivalent ﬁx relative order ﬁrst cid20ρ T scid21 inserted targets current route In case ρ 0 rely heuristics backtracking enabled tree fully expanded returned R complete contains nondominated covering routes Route r repeatedly expanded greedy fashion insertion possible As result Algorithm 4 generates T s covering routes Step 1 Algorithm 4 In open branch R Pruning Algorithm 5 charge updating C Lmin C Lmax time route r expanded conse quently associated branch closed We C Lmin minimal set closed routes This means closed cid5 r Steps 14 Algorithm 5 implement route r belongs C Lmin C Lmin contain r cid5 r removed C Lmin route r inserted C Lmin Routes condition ﬁrst Steps 23 route r C Lmin Algorithm 6 Steps 2 6 pruning search More precisely route r expanded q p This pruning rule safe def cid5 C Lmin r target q position p exists route r cid5 r r obtained expanding inition r This pruning mechanism explains route r closed inserted C Lmin checking r cid5 C Lmin possible expansions r unfeasible r r cid5 r cid5 cid5 cid5 234 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Algorithm 4 TreeSearchk r r1 r2 Expandr Closer k 0 1 R 2 R 3 4 5 6 7 8 9 10 TreeSearch k 1 r1 r R TreeSearch 0 r Closer cid5 r r cid5 C Lmin C Lmin C Lmin r Algorithm 5 Closer 1 r 2 3 4 C Lmin C Lmin r cid5 C Lmax 5 r 6 7 return 8 C Lmax C Lmax r r r cid5 cid5 insertion presence C Lmin route r position closing r having r pruned Algorithm 6 r cid5cid5 r Indeed route r cid5cid5 cid5cid5 included C Lmin We use C Lmax maintain set generated maximal closed routes This means closed route r inserted cid5 r This set keeps track closed routes maximum cid5 r C Lmax contain r number targets Algorithm 5 maintains set inserting closed route r Step 12 route r present C Lmax Once algorithm terminates C Lmax contains ﬁnal solution r cid5 Heuristic function A key component algorithm heuristic function drives search The heuristic cid5 p evaluates cost expanding r inserting function deﬁned hr T s T r 1 T r Z hrt target t pth target r The basic idea inspired 37 adopt conservative approach trying preserve feasibility Given route r let deﬁne possible forward shift r minimum temporal margin r arrival target t dt cid5 P F Sr min tT r dt Art The extra mileage ert cid5 ert p Arrt cid5 p inserting target t rptcid5 ω ω cid5 tcid5rp1 Arrp 1 cid5 position p additional traveling cost paid The advance time insertion gets respect dt cid5 deﬁned cid5 art p dt cid5 Arrp ω rptcid5 Finally hrt cid5 p deﬁned cid5 hrt p minart cid5 p P F Sr ert cid5 p We partition set T s sets Ttight Tlarge t Ttight dt δ ω vt t Tlarge δ R parameter The previous inequality nonbinding choice discriminate targets tight penetration time large Initially insert tight targets subsequently insert nontight targets We use sets according following rules Algorithm 6 insertion target belonging Ttight preferred insertion target belonging Tlarge indepen dently insertion position insertions t Ttight ranked according h considering ﬁrst insertion position target insertions t Tlarge ranked according h considering ﬁrst target insertion position The rationale rule targets tight penetration time inserted ﬁrst best positions On hand targets large penetration time covered later Therefore case important target cover cover Theorem 8 Algorithm 3 ρ 0 exact algorithm exponential computational complexity builds tree covering routes worstcase size O T sT s N Basilico et al Artiﬁcial Intelligence 246 2017 220257 235 Algorithm 6 Expandr 1 Ttight cid2 T r 2 q Ttight T r b q q p 1 q p 2 P q p st 1 b i1 q hr q p hr q p q q p q covering route r cid5 C Lmin r cid22 v qi hr qi1 p Q q1 q2 qc st 1 c hr qi p 1 q1 p 1 q1 q p q 1 qi1 cid5 r 4 R r1 r2 rk r1 r rk r qc p b qc 5 Tlarge cid2 T r 6 u Tlarge T r Q p q p q 1 p q 2 b p st 1 b P p1 p2 pc st 1 c hr q1 p R R rk1 rk2 rK p i1 p p hr q hr q p q p p covering route r cid5 C Lmin r cid5 r q cid22 r q1 hr q1 p 1 p p1 i1 q1 p p q rk1 r rK r q b p pc 3 7 8 9 return R 332 Approximation algorithm Since ρ determines completeness degree generated tree exploit Algorithm 3 tuning ρ obtain approximation algorithm faster wrt exact In fact ρ 1 completeness guaranteed favor computational effort In case guaran tees provided covering route r C Lmax algorithm terminates r r cid5 C Lmax dominates r cid5 C Lmax r r algorithm visits targets T r different order dominates r cid5 dominates r Notice prevent existence route r cid5cid5 returned When ρ chosen size input We state following theorem proof analogous Theorem 7 T s k N parameter complexity generating covering routes polynomial k Theorem 9 Algorithm 4 ρ k hr computed O T s2 T s provides approximation ratio cid7 1 T s runs O T s3 given heuristic 34 Solving SRGv Now formulate problem computing optimal signalresponse strategy D Let denote σ D vsr probability D plays route r signal s R vs set routes available D generated algorithm We introduce function U Ar t representing utility function A deﬁned follows cid7 U Ar t π t 0 t cid22 r The best Ds strategy maxmin strategy solving following linear mathematical programming problem cid2 sSt ps t cid2 rR vs cid2 gv st min σ D vsrU Ar t gv t T σ D vsr 1 s S σ D vsr 0 r R vs s S rR vs The size mathematical program composed T S constraints excluded 0 constraints O V S maxvsR vs variables This shows hardness maxvsR vs turn depends T s We provide following remark Remark 3 We observe discretization environment graph accurate number vertices large corresponding reduce size areas associated vertex reduce temporal interval 236 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 associated turn game Our algorithms increasing accuracy model terms number vertices requires polynomial time 4 Patrolling game In section focus PG Speciﬁcally Section 41 state main result showing patrolling necessary alarm present Section 42 propose algorithm deal PG Section 43 summarize complexity results Questions 14 41 Stand We focus problem ﬁnding best patrolling strategy given know best signalresponse strategy vertex v D place Given current vertex D sequence n vertices visited D n tradeoff effectiveness solution computational effort patrolling strategy usually gv gv value deﬁned randomization adjacent vertices 9 We deﬁne v returned optimization problem described Section 34 vertex guarantees maximum expected utility D SRGvs We maxmin equilibrium strategy PG prescribes D places v waits signal responds arg minvV Theorem 10 Without false positives missed detections t T St 1 patrolling strategy dominated placement v Proof Any patrolling strategy different placement v Since alarm affected missed detections attack raise signal turn raise response yielding utility gx x current position D moment attack Since A observe current position D attacking x arg maxvP gx gv placing v gv P set vertices patrolled D Obviously P v waiting signal best strategy D cid2 necessarily visit vertex v cid5 cid22 v The rationale based fact false positives missed detections signal response strategy solely depends current vertex occupied D generated signal depending previously visited A observe vertices So patrolling strategy D prescribes patrol set vertices V cid5 arg maxvV cid5 gv attack Thus deﬁnition position D best strategy A wait D v gv D leaves v patrol additional vertices expected utility receives larger receives staying v cid5 The validity Theorem 10 goes model studied work Indeed easily shown sults valid having multiple resource controlled D Also deeper analysis Theorem 10 scope include cases missed detections present nonnegligible extent For cases placement based strategies optimal case alarm systems fails detecting attack We encode occurrence robustness property following proposition shall prove series examples Proposition 1 There exist Patrolling Games staying vertex waiting signal responding optimal patrolling strategy D missed detection rate α 05 Proof The expected utility D given placement v 1 α1 gv 1 α probability alarm correctly generates signal attack 1 g v denotes Ds payoff placed v A nonplacementbased patrolling strategy prescribe deﬁnition vertices From simple consideration observe upper bound expected utility nonplacement strategy entailed 2 second best vertex D statically place case D alternately patrols vertices v 2 v Such scenario gives upper bound expected utility nonplacement strategies 1 g v It follows suﬃcient condition placement v optimal given following inequality v 2 1 α1 gv 1 gv 2 1 To prove Proposition 1 suﬃces provide Patrolling Game instance Equation 1 holds non null missed detection rate α In Fig 4a Fig 4b report examples The depicted settings unitary edges explicitly indicated For missed detections best patrolling strategy placement 4 When allowing missed detections Fig 4a holds gv 0 gv 1 Thus v 4 optimal strategy α 025 Under reasoning scheme Fig 4b Equation 1 placement v gv 0 gv 4 optimal α 05 cid2 05 making placement v 075 v 4 v 2 2 2 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 237 Fig 4 Two examples proving Proposition 1 Algorithm 7 BestPlacementG s 1 U v 0 v V 2 v V 3 4 return maxU U v Solve S R Gv It reasonable expect similar result holds case false positives However dealing false positives intricate handling false negatives requires new models For example D respond alarm signal given probability remaining probability stay current vertex For reason leave treatment false positives accurate treatment false negatives future works 42 Computing best placement Under absence false positives missed detections Theorem 10 simpliﬁes computation patrolling strategy reducing problem ﬁnding v To aim solve SRGv possible starting ver tex v select maximum expected utility D Algorithm 7 depicts solving algorithm Function Solve S R Gv returns optimal value 1 g v The complexity linear V g v calculated v Since vertices possible starting points face hard problem Theorem 1 V times comput ing signal covering routes vertices To avoid issue ask exists algorithm worst case allows consider number iterations solving problem given starting vertex v help ﬁnding solution starting vertex v In words considering speciﬁc set targets wonder solution COVSET starting vertex v derive polynomial time solution COV SET starting vertex v This allow solve exponentialtime problem instead solving vertex graph To answer question resort hardness results reoptimization called locally modiﬁed problems 38 We know covering routes starting vertex changed starting vertex selecting adjacent ﬁnding covering routes new starting vertex hard cid5 cid5 Deﬁnition 10 lmCOVROUTE A locally modiﬁed covering route lmCOVROUTE problem deﬁned follows INSTANCE graph G V E set targets T penetration times d starting vertices v 1 v 2 adjacent covering route r1 r10 v 1 T r1 T QUESTION r2 r20 v 2 T r2 T Theorem 11 lmCOVROUTE NPcomplete This shows iteratively applying Algorithm 1 SRGv starting vertex v choosing vertex highest utility best worst case 238 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Table 1 Computational complexity discussed questions Question Question 1 Question 2 Question 3 Question 4 Question 2 Topology Tree FNPhard NPhard NPhard NPhard LM Arbitrary APXhard NPhard NPhard NPhard NPhard 43 Summary results We summarize computational results Questions 14 Table 1 including results resolution PG We use problems remained open paper 5 Experimental evaluation We implemented algorithms MATLAB 233 GHz LINUX machine run experiments For better analysis provide different experimental evaluations In Section 51 apply algorithms worstcase instances order evaluate worstcase performance algorithms investigate experimentally gap APXhardness result theoretical guarantees approximation algorithms In Section 52 apply algorithms speciﬁc realistic instance mentioned Section 1 Expo 2015 51 Worstcase instances analysis We evaluate scalability Algorithm 1 quality solution returned approximation algorithms set instances SRGv We include results evaluation algorithm solve completely PG given trivially requires asymptotically V times effort required resolution single instance SRGv In section experimental setting Section 512 provide quantitative analysis exact algorithms Section 513 evaluate quality approximations 511 Setting We build hard instances problem instances HAMILTONIANPATH HP More precisely worst case instances easily reduced instance HP showing admit covering route targets corresponding instance HP admits Hamiltonian path They deﬁned follows vertices targets edge costs set 1 signal penetration times set T 1 values drawn 0 1 uniform probability targets number edges drawn normal distribution mean cid11 said edge density deﬁned cid11 E T T 1 2 starting vertex v drawn targets T uniform probability We explore parameter dimensions number targets T value edge density cid11 In particular use following values T 6 8 10 12 14 16 20 25 30 35 40 45 50 cid11 005 010 025 050 075 100 For combination values T cid11 randomly generate 100 instances constraint cid11 T 2 2 T introduce additional edges order assure graph connectivity The suitability worstcase analysis corroborated results obtained realistic setting Section 52 present hard subproblems characterized features listed 512 Exact algorithms scalability We report Fig 5 compute time averaged 100 SRGv instances required exact dynamic programming algorithm Algorithm 1 annotation dominated covering sets generation routes T cid11 vary We report Appendix C boxplots showing statistical signiﬁcance results It observed compute times exponential T curves lines semilogarithmic plot value cid11 determines N Basilico et al Artiﬁcial Intelligence 246 2017 220257 239 Fig 5 Compute times seconds exact dynamic programming algorithm Algorithm 1 annotation dominated covering sets generation routes T cid11 vary Fig 6 Ratios evaluating dominances cid11 025 T varies slope line Notice cid11 005 010 025 number edges T 16 constraint connectivity graph leading compute times Beyond 16 targets compute times exact dynamic programming algorithm excessively long cid11 025 compute time T 20 lower 104 seconds Interestingly compute time monotonically decreases cid11 decreases This thanks fact number covering sets generated Algorithm 1 dramatically reduces cid11 reduces We report plot compute times exact branchandbound algorithm requires 104 seconds T 8 cid11 025 resulting nonapplicable practice This branchand bound algorithm complexity O T T dynamic programming algorithm complexity O 2 Fig 6 shows impact discarding dominated actions game cid11 025 It depicts trend performance ratios different metrics We shall G complete game including Ds dominated actions GR reduced game CCS denote version Algorithm 1 LP denote linear program solve SRGv Each instance solved random starting vertex v report average ratios 100 instances n covsets ratio number covering sets GR G As seen nondominated actions constitute small percentage decreasing number targets This result indicates structure problem exhibits nonnegligible degree redundancy LP times iterations report ratio GR G time iterations required solve maxmin linear program A relative gain directly proportional percentage dominated covering sets observable LP variables constraints A similar trend visible considering ratio total time LP CCS Indeed time needed CCS largely exceed LPs removal dominated actions determines polynomial additional cost seen slightly increasing trend curve The relative gap LP CCS compute times assessed looking LPCCS curve targets considered time taken LP negligible wrt CCSs This shows removing dominated actions useful allowing small improvement average case assuring exponential improvement worst case T 240 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig 7 Optimal game values T cid11 vary Table 2 Compute times seconds multisignal instances m 2 3 4 5 5 055 072 T s 10 1783 3300 3535 5243 15 51061 76930 106676 137332 Fig 7 shows game value D 1 g v T cid11 vary averaged 100 instances It observed game value constant T varies cid11 005 010 025 087 This instances similar number edges close minimum number necessary having connected graphs With larger number edges game value increases Interestingly ﬁxed value cid11 threshold T threshold game value increases T increases This suggests minimum game value obtained connected graphs minimum number edges In Table 2 report compute times multiple signals targets covered signal probability target triggers signal randomly chosen according uniform distribution Values averages 100 random instances insights computation effort considered dimensions The results problem computationally challenging small number targets signals 513 Approximation algorithms We evaluate empirical approximation ratios obtained approximation algorithms 1 ˆgv 1 gv gv expected utility A equilibrium considering covering sets ˆgv expected utility A equilibrium covering sets generated heuristic algorithm We execute approximation dynamic programming algorithm different number RandRes randomly generated orders 10 20 30 40 50 addition 3 heuristics discussed Section 322 We executed approximation branch bound algorithm constant values ρ 025 050 075 100 recall ρ 100 backtracking completely disabled Fig 8 Fig 9 report empirical approximation ratios averaged 100 instances obtained approximation algorithms different values T 6 8 10 12 14 16 instances know optimal game value cid11 005 010 025 050 075 100 We remark ratios obtained approximation branchandbound algorithm values ρ omitted This compute time needed algorithm 104 seconds The algorithm terminates deadline ρ 075 100 We focus ratios obtained dynamic programming algorithm Given value cid11 T increases ratio decreases given threshold T constant The threshold increases cid11 decreases constant decreases cid11 decreases The value constant high cid11 larger 08 Although ratios increase RandRes increases worth noting increase signiﬁcant order 005 10 RandRes 50 RandRes We focus ratios obtained branchandbound algorithm Given value cid11 T increases ratio decreases given threshold T increases approaching ratio 1 The threshold increases cid11 decreases minimum ratio decreases cid11 decreases Interestingly ratios ρ 100 close ratios ρ 075 showing performing signiﬁcant backtracking solution ρ 100 lead signiﬁcant improvement solution The solution effectively improved ρ 025 affordable excessive required compute time This shows heuristic performs Comparing ratios algorithms observed approximation dynamic programming N Basilico et al Artiﬁcial Intelligence 246 2017 220257 241 Fig 8 Approximation ratios T varies algorithm performs better approximation branchandbound algorithm turned slightly better limited number cases Fig 10 While dynamic programming provides ratio larger 08 branchandbound provides combinations T cid11 ratios lower 04 Fig 10 reports game values obtained approximation dynamic programming algorithm value RandRes approximation branchandbound algorithm T 20 25 30 35 40 45 50 ρ 100 Indeed ρ 075 compute time excessive shown purely heuristic solution signif icantly improved cid11 075 We report experimental results cid11 005 025 We notice instances optimal game value However optimal game value larger 1 construction instances game value obtained approximation algorithms represents lower bound actual approxi mation ratio It observed given value cid11 ratios obtained dynamic programming algorithm 242 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig 9 Approximation ratios T varies essentially constant T increases constant reduced cid11 reduces Surprisingly certain value T game values obtained branch bound algorithm higher obtained dynamic programming algorithm This ﬁxed value cid11 T increases problem easier heuristic branch bound algorithm performs ﬁnding best covering routes This shows algorithm performing combination parameters T cid11 Furthermore result shows worst cases approximation algorithms cid11 O 1 T corresponding instances number edges vertex constant T It clear experimental analysis increasing T cid11 ν T ν 1 game value approaches 0 strictly positive value However approximation algorithms provide good approximation large number targets small value cid11 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 243 Fig 10 Game values T varies Fig 11 Compute times T varies Fig 11 reports compute times required approximation dynamic programming algorithms As seen required time slightly increases adopting larger number randomly generated orders respect baseline ρ 100 52 Real case study In Section 112 presented motivating scenario describing fair site Expo 2015 We formalize stance problem inspired scenario derive important insights techniques operate real cases Expo 2015 large setting anticipated underwent remarkable deployment security resources 700 guards operating ﬁeld This experiment addresses worstcase scenario stress route generation algorithms assuming guard protect environment The resolution problem necessary admitting multiple defending resources environment partition preassigned 27 detailed discussion Fig 12 shows graph representation Expo 2015 site We manually build discretized version site map exploiting publicly available knowledge event9 We identify 170 sensible locations correspond equal number targets graph More speciﬁcally identify 130 targets located entrances pavilion surroundings areas high number visitors Some targets 35 located main roads critical mainly high crowd Such roads deﬁne set edges resulted density 002 Fig 12 reports graphical representation chosen deadlines d values π respectively To 9 Detailed information http wwwexpo2015 org map experiments viewed https goo gl jXPkky 244 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 e c n t s n 5 1 0 2 o p x E 2 1 g F N Basilico et al Artiﬁcial Intelligence 246 2017 220257 245 Fig 13 Best placement attack locations determine values reasonable way apply number simple rules thumb First ease task discretize spaces possible deadlines values different levels To assign value target estimate terms popularity expected crowd corresponding area fair site The higher higher value actual values reported ﬁgure To assign deadlines estimate time attacker spend escape attacked target malicious activity started example blending crowd leaving trace In particular estimate smaller escape time locations lying near external border fair site locations central estimated larger time The smaller escape time tighter deadline target Actual values extracted normal distribution σ 2 1 μ set according chosen level The maximum distance target locations 15 assume covered 75 minutes imagined crowded scenario Given reference scenario means span 5 minutes tight 75 minutes large To derive alarm model assume number panoramic cameras deployed environment locations manually choose order cover environment guarantee wide area view camera trying general target cameras view To map set cameras alarm model adopt convention group cameras sharing independent partial view target t associated signal s St target t covered k signals signal generated probability 1k t attacked Obviously deeper knowledge security systems deployed site enable speciﬁc methods set parameters model This encourage involving agencies charge security dealing task We ﬁrst qualitative evaluation method Fig 13 depicts best placement Defender circle ﬁgure attacked targets squares ﬁgure actions played Attacker nonnull probability equilibrium As intuition suggest best location signal response start central wrt fair site Our simulations optimal patrolling strategy coincides ﬁxed placement false negatives rates 03 Notice false negatives value considered unrealistically pessimistic alarm systems deployed structured environment like dealing Attacked targets correspond areas exhibit high small escape time Fig 14 reports example signal response strategy given starting vertex small circle ﬁgure given signal covered targets depicted large circle ﬁgure The table lists computed covering sets probabilities Defender plays corresponding covering routes Boxplots Fig 15a provide quantitative insights computational effort measured solving real istic instance Given signal report statistical distribution time required Algorithm 1 compute covering routes possible start vertex In general observe high variance boxplot Indeed ﬁxed signal s realistic instance easy identify starting vertices computing covering routes likely easy instead harder For easy case consider starting vertex lying far away group targets covered s In case Algorithm 1 soon stop iterating covering set cardinalities able generate feasible sets Such feature induced large distance starting vertex targets covered s low edge density spatial locality shared targets covered signal features frequently recur realistic scenarios For harder case consider situation distance starting vertex targets covered s large number covering routes available An example kind inspected Fig 14 Interestingly similar high variance trend observed depicting statistical distribution compute time starting vertex The boxplot Fig 15b shows example distribution compute time given starting vertex sample composed compute 246 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig 14 Example response strategies signal Fig 15 Time boxplots real case study N Basilico et al Artiﬁcial Intelligence 246 2017 220257 247 times associated resolution starting vertex respect signal Such distribution characterized lower variance respect observed Fig 14 suggests starting vertices posing easy resolution similarly posing hard ones 6 Related works In years Security Games received increasing Artiﬁcial Intelligence scientiﬁc community leading exploration large number research directions topic In section brieﬂy discuss deem signiﬁcant ones starting game theoretical foundations models built Computing solution concepts central problem real applicability game theoretical models based A lot works concentrated algorithmic studies topic analysing relationships holding different kinds solution concepts computational complexity In 39 relationship Stackelberg Nash minmax equilibria studied 40 reﬁnements Stackelberg equilibrium proposed Many efforts develop tractable algorithms ﬁnding Stackelberg equilibria Bayesian games 41 Furthermore 42 authors analysed scenarios Defender multiple objectives searching Pareto curve Stackelberg equilibria Besides fundamental works like ones cited recent research line devoted efforts deﬁnition game model reﬁnements attempt overcome ideal assumptions One remarkable issue belonging scope model behavior Attacker In attempt realistic behavior works considered bounded rationality deﬁned algorithms deal In 43 different models Attacker analysed 4445 Attacker allowed different observation planning capabilities Moreover 46 Quantal Best Response model behavior Attacker 47 algorithms scale bounded rational adversaries proposed In paper assume attacker rational Other model reﬁnements focused cases games exhibit speciﬁc structures leveraged design algorithms compute Stackelberg equilibrium For instance study spread contagion net work investigated 48 When scheduling constraints present payoffs exhibit special form computation Stackelberg equilibrium eﬃciently enabling resolution remarkably big scenarios 49 In 50 realistic aspects infrastructures protected taken account 7 Conclusions future research In paper provide ﬁrst Security Game large environments surveillance fair sites protection exploit alarm spatially uncertain signals To monitor protect large infrastructure stations airports cities twolevel paradigm commonly adopted broad area surveillance phase attack detected approximately localized spatially uncertainty alarm triggers local investigation phase guards ﬁnd clear attack Abstracting away technological details propose simple model alarm systems widely adopted speciﬁc technology include stateofart patrolling models obtaining new security game model We problem ﬁnding best patrolling strategy respond given alarm signal FNPhard trees APXhard arbitrary graphs Then provide exponentialtime exact algorithms ﬁnd best patrolling strategy respond given alarm signal The ﬁrst algorithm performs breathﬁrst search exploiting dynamic programming approach second algorithm performs depthﬁrst approach exploiting branchandbound approach We provide variation algorithms ﬁnd approximate solution We experimentally evaluate exact approximation algorithms worstcase instances evaluate empirically gap hardness results theoretical guarantees approximation algorithms realistic instance The limit exact algorithms 16 targets worstcase instances able compute optimal solution realistic instance 170 targets On approximation algorithms provide effective approximation worstcase instances Finally focus problem patrolling environment showing target alarmed false positives missed detections present best patrolling strategy prescribes patroller stays given place waiting alarm signal Furthermore strategy optimal missed detection rates 50 Besides solutions studied number open problems posed future research The main theoretical issue closure approximation gap SRGv We believe investigating relationship model DEADLINETSP help closing gap Another interesting problem study approximation algorithms tree graphs Our NPhardness result exclude existence PTAS polynomial time approximation scheme conjecture existence unlikely A number extensions model worth explored identify prominent ones The ﬁrst enrich model false positives missed detections requiring patrolling absence alarm signals A second extension consider settings multiple patrollers We deem techniques presented work play fundamental role scaling multipatroller settings In 27 preliminary contributions direction discussing different arising subproblems showing properties like given Theorem 10 generalized leveraging algorithms presented resolution multipatroller games different coordination assumptions 248 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig A16 Special 2level star graph Appendix A Proofs A1 Proof Theorem 1 We ﬁrst deﬁne special class trees special 2level stars S2LSTAR See Fig A16 example Deﬁnition 11 S2LSTAR Special 2level star graph instances S2LSTAR V v 0 v 1 v 2 v 2n v 0 starting position T V v 0 vertices v 1 n called inner targets vertices v n 1 2n called outer targets E v 0 v v vni 1 n refer pair edges v 0 v v vni ith branch travel costs cv 0 v cv vni γi 1 n γi N cid7 penetration times 1 n dt π t 1 t T 6H 3γi 10H 2γi t v t vni H Initially property S2LSTAR instances shall use cid2 n i1 γi 2 Lemma 12 If instance S2LSTAR admits maximal covering route r covers targets branches parti tioned sets C1 C2 branches C1 visited branches C2 visited twice cid2 cid2 γi γi H iC1 iC2 Proof Initially observe feasible solution visit branch forms If branch visited D visit inner target time 6H 3γi immediately outer target C1 denotes set N Basilico et al Artiﬁcial Intelligence 246 2017 220257 249 branches visited according form If branch visited twice D visit ﬁrst inner target time 6H 3γi coming v 0 immediately subsequently time 6H 3γi 10H 2γi D visit inner target immediately outer target C2 denotes set branches visited according form All forms visits visits different order visits visits different times useless route branch C1 C2 modiﬁed branches C1 C2 strictly decreasing cost solution follows branch visited visit inner target time 6H 3γi solution feasible branch visited twice ﬁrst visit inner target time 6H 3γi solution feasible branch visited twice second visit inner target time 6H 3γi ﬁrst visit branch visited twice outer target visited ﬁrst visit second visit branch branch omitted saving 2γi omitted saving 2γi branch visited times visits ﬁrst inner target visited ﬁrst outer target visited omitted saving 2γi We assume maximal covering route r covers targets visits C1 C2 1 n branch visited twice discussed We S2LSTAR instances assumption true Since r covers targets following conditions satisﬁed 2 6 cid8 iC2 cid8 iC2 γi 4 γi 4 cid8 iC1 cid8 iC1 γi 6H γi 10H A1 A2 Constraint A1 requires cost visiting entirely branches C1 partially inner target branches C2 larger penetration times inner targets Notice holds inner target ﬁrstvisited branch C1 We assumption veriﬁed Constraint A2 requires cost visiting entirely branches C1 ﬁrst partially subsequently entirely branches C2 larger penetration times outer targets We simplify pair constraints follows cid8 iC2 2 cid9 2 cid8 iC2 γi 2 cid10cid11 4H γi 4 cid9 cid8 γi 2 iC1 cid12 cid8 iC2 γi 4 cid10cid11 8H cid8 iC1 cid8 γi 6H γi 10H iC1 cid12 obtaining cid8 iC1 cid8 iC2 γi H γi H deﬁnition cid2 γi iC1 cid2 iC2 γi 2H follows cid8 iC1 γi cid8 iC2 γi H Therefore r covers targets branches belong C1 C2 r visits outer target exactly penetration time This Constraints A1 A2 hold equalities Thus shown route branch C1 C2 change visits branches C1 C2 strictly reducing total cost It follows route branch C1 C2 total cost equal smaller penetration time outer targets Similarly equality follows solution inner target ﬁrstvisited C2 branch strictly improved 250 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 moving branch C1 route inner target ﬁrstvisited C2 branch total cost equal smaller penetration time outer targets cid2 We prove Theorem 1 Proof We provide reduction PARTITION known weakly NPhard Deﬁnition 12 PARTITION The decision problem PARTITION deﬁned INSTANCE A ﬁnite set I 1 2 l size ai N QUESTION Is subset I cid5 I iII cid5 ai B iI cid5 ai cid2 cid2 I bound B N cid2 iI ai 2B For sake clarity divide proof steps Reduction We map instance PARTITION instance kSRGv S2LSTAR graphs follows S s n l number branches S2LSTAR equals number elements PARTITION γi ai I H B k 0 The rationale feasible solution PARTITION maximal covering route covers targets kSRGv S2LSTAR graph If From Lemma 12 know maximal covering route covers targets kSRGv γi H By construction S2LSTAR graph branches partitioned sets C1 C2 γi ai H B So maximal covering route covers targets kSRGv S2LSTAR graph cid2 γi partition set I subsets I cid2 cid5cid5 C2 iI cid5 ai H B cid5 C1 I γi γi iC1 iC2 cid2 cid2 cid2 cid2 iC2 iC1 iI cid5cid5 ai Only If PARTITION admits feasible solution assigned I cid5 C1 I cid5cid5 C2 straightforward route visits targets penetration times route maximal covering route cid2 As ﬁnal remark let notice result exclude existence FPTAS Fully Polynomial Time Approximation Scheme fact PARTITION admits FPTAS A2 Proof Theorem 2 The theorem immediately follows proof given Theorem 1 reported previous section A3 Proof Theorem 3 cid5 Proof Assume simplicity S s1 T s1 T Initially observe MAXCOVSET coNP Indeed covering route r T r T NO certiﬁcate MAXCOVSET placing coNP Notice trivially covering route length bounded O T 2 notice Theorem 2 having covering set suﬃce given verify polynomial time actually covering P NP Let suppose polynomialtime algorithm MAXCOVSET called A Then P NP coNP polynomial algorithm complement problem deciding covering routes T dominated Let consider following algorithm Given instance COVSET speciﬁed graph G V E set target T penetration times d starting vertex v cid5 1 assign targets T lexicographic order t1 t2 tT 2 t T verify t covering set O T time comparing ω set output NO terminate set ˆT t1 k 2 vt dt covering 3 apply algorithm A following instance graph G V E target set ˆT tk ˆd ˆd d restricted ˆT tk start vertex v covering set ˆT 4 As output YES ˆT maximal set ˆT ˆT tk k k 1 restart step 3 As output NO k T output YES As output NO k T output NO N Basilico et al Artiﬁcial Intelligence 246 2017 220257 251 Thus existence A imply existence polynomial algorithm COVSET P cid22 NP contradict Theorem 2 cid2 A4 Proof Theorem 4 Proof We produce approximationpreserving reduction TSP1 2 known APXhard 51 For sake clarity divide proof steps TSP1 2 instance An instance undirected TSP1 2 deﬁned follows set vertices V T S P set edges composed edge pair vertices symmetric matrix C T S P weights values 1 2 associated edge representing cost shortest path corresponding pair vertices The goal ﬁnd minimum cost tour Let denote O P T S O L T S P O P T T S P optimal solution TSP1 2 cost respectively Furthermore let denote A P X S O L T S P A P X T S P approximate solution TSP1 2 cost respectively It known polynomialtime approximation algorithm A P X T S P O P T A P X α α 1 P NP 51 Reduction We map instance TSP1 2 speciﬁc instance SRGv follows signal s T s V T S P w π t 1 t T s 1 t T s w ttcid5 C T S P t t vt cid5 t t cid7 cid5 T s dt O P T T S P V T S P O P T T S P O P T T S P 1 O P T T S P V T S P t T s In reduction use value O P T T S P polynomialtime algorithm solving exactly TSP1 2 P NP We additional polynomialtime effort deal lack knowledge O P T T S P OPTSRGv optimal solution By construction SRGv instance covering route starting v visiting targets t T s penetration time This route cost exactly dt cid17v t1 tT scid18 cid17t1 tT s t1cid18 corresponds O P T S O L T S P constraint w 2 O P T T S P V T S P essentially transform tour path discarding edges largest cost Therefore optimal solution SRGv O P T S O L S R G prescribes play maximal route probability optimal value O P T S R G 1 tT st1 OPTSRGv approximation Let denote A P X S O L S R G A P X S R G approximate solution OPTSRGv value respectively We assume polynomialtime approximation algorithm A P X S R G O P T S R G β β 0 1 Let notice A P X S O L S R G prescribes play polynomially upper bounded number covering routes strictly positive probability We introduce lemma characterizes covering routes Lemma 13 The longest covering route played strictly positive probability A P X S O L S R G visits βT s targets Proof Assume contradiction longest route visits βT s 1 targets The best case terms maximization value OPTSRGv reasons symmetry targets value set T s covering routes length βT s 1 target visited exactly βT s 1 routes When routes available best strategy randomize uniformly routes The probability target covered β 1 T s This leads contradiction algorithm provide approximation strictly smaller β cid2 T s value A P X S R G β 1 TSP1 2 approximation OPTSRGv approximation We use lemma build 3 2βapproximation TSP1 2 βapproximation OPTSRGv Given A P X S O L S R G extract longest cov ering route played strictly positive probability cid17v t1 tβT scid18 The route cost dt cover βT s targets Any tour cid17t1 tβT s tβT s1 tT s t1cid18 cost larger dt 1 21 βT s O P T T S P 1 21 βV T S P worst case edges cid17tβT s tβT s1 tT s t1cid18 cost 2 Given O P T T S P V T S P tour cost larger O P T T S P 1 21 βV T S P O P T T S P 3 2β Therefore tour 3 2βapproximation TSP1 2 Since TSP1 2 approximable poly 252 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig A17 Example construction proof Theorem 11 Hamiltonian path cid17h1 h2 h3 h4 h5 h6 h7 h8 h9 h10cid18 G H given covering route r1 r10 v 1 T r1 T It observed Hamiltonian path G H cid17h9 h8 h5 h4 h1 h2 h3 h6 h7 h10cid18 allowing covering route r2 r20 v 2 T r2 T Notice remove edge h5 h8 covering route r2 r20 v 2 T r2 T exist nomial time approximation ratio smaller α constraint 3 2β α β 3α 2 Since α 1 3α 2 1 polynomialtime approximation algorithm OPTSRGv β 3α 2 1 P NP O P T T S P oracle In order deal fact know O P T T S P execute approximation algorithm OPTSRGv guess O P T T S P More precisely execute approximation algorithm value V T S P 2V T S P return best approximation TSP1 2 Given O P T T S P V T S P 2V T S P execution approximation algorithm uses correct guess cid2 A5 Proof Theorem 11 Proof We divide proof steps membership hardness Membership Given YES certiﬁcate constitutes route veriﬁcation easy requiring apply route check target visited deadline It requires linear time number targets Hardness Let consider Restricted Hamiltonian Circuit problem RHC known NPcomplete RHC deﬁned follows given graph G H V H E H Hamiltonian path P cid17h1 hncid18 G H hi V H h1 hn E H ﬁnd Hamiltonian cycle G H From instance RHC following approach 38 build following instance lmCOVROUTE V V H v 1 v 2 vt T V H vt E E H hn vt hi v s 1 n dvt n 1 dt n t T t cid22 vt w vvcid5 1 1 1 v hn v v hi v v v 1 v v v 1 v 2 2 v v 1 v 2 v v 1 v v v 2 v 2 v v 2 v 1 2 v v 2 v 2 v v 2 v cid5 vt cid5 h j j 1 n cid5 h1 cid5 hn1 cid5 hi 1 n 2 n cid5 vt cid5 h1 cid5 hn1 cid5 hi 1 n 2 n cid5 vt r1 cid17v 1 h1 hn vtcid18 Basically given G H introduce vertices v 1 v 2 vt v 1 v 2 adjacent starting vertices vt target We know covering routes v 1 aim ﬁnding covering routes v 2 The new starting vertex v 2 closer hn1 previous v 1 1 farther h1 previous v 1 1 There constraint distances starting vertices targets larger equal 2 We report Fig A17 example construction Notice construction maximal covering route r2 r20 v 2 T r2 T exists vt visited target Route r1 covering cid17h1 hncid18 Hamiltonian path G H We need route r2 r20 v 2 T r2 T exists G H admits Hamiltonian cycle It observed r2 exists r2 cid17v 2 hn1 hn vtcid18 cid17hn1 hncid18 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 253 Hamiltonian path G H Since know r1 hn1 hn E H follows cid17hn1 hn hn1cid18 Hamiltonian cycle cid2 Appendix B Additional results special topologies In section special classes graphs polynomialtime algorithm answering Question 2 B1 Line cycle graphs Let ﬁrst concentrate line graphs example depicted Fig B18a Consider modiﬁed version Algorithm 1 deciding admissible expansions add Conditions 13 following cost newly formed covering set smaller equal penetration time target included set Given Q k vw holds Such modiﬁed algorithm runs polynomial time line graph instances To notice covering set enumerated possible expansions compactly represented vertices left right All targets extremes covered covering set This makes number expansions performed algorithm O T s2 vw admissible t T s Q k vw inequality dt cQ k1 vt expansion Q k1 The soundness algorithm simply determined noticing new condition imposed admissible expansions prevents Algorithm 1 generating led covering set including targets This implies answer Question 2 polynomial time class instances Notice results easily extended cycle graphs Fig B18b tree graphs number leaves ﬁxed Assessing computational complexity ﬁnding maxmin equilibrium line graphs problem left open paper While searching route covering targets safely consider covering sets deﬁned extremes longer true searching equilibrium The main reason safely discard routes traversing targets penetration time expired allow provide polynomially bounded representation covering sets We conjecture problem FNPhard To support conjecture provide class instances nondominated covering sets rises exponentially T values T problem solved reasonable time More precisely empirically observed number nondominated covering sets T 23 With T 25 Algorithm 1 requires long time solve problem instances cid72 evaluate number nondominated covering sets formal proof number covering sets exponential straightforward While hardness proof believe evidence report instances useful researcher interested study line graphs The instances deﬁned follow given starting vertex v T 12 targets left v T 12 targets right v The cost edge 1 The value dt square cost shortest path t v In instances nondominated routes continuously oscillating left right starting vertex v vice versa T 1 2 Let consider star graph shown Fig B19 deﬁned follows Fig B18 Special graphs line cycle 254 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Fig B19 Star graph Deﬁnition 13 SIMPLESTAR Simple star graph instances SIMPLESTAR V v 0 v 1 v 2 vn v 0 starting vertex D T V v 0 E v 0 v 1 n travel costs cv 0 v γi γi N penetration times dt values π t We state following theorem proof direct case line cycle graphs details necessary Theorem 14 If maximal covering route r covering targets exists Earliest Due Date algorithm returns r polynomial time applied SIMPLESTAR graph instances Proof The Earliest Due Date 52 EDD algorithm optimal algorithm synchronous release times ape riodic scheduling deadlines It executes preemption tasks ascending order according deadlines requiring polynomial complexity number tasks Any SIMPLESTAR graph instance easily mapped synchronous aperiodic scheduling problem target ti aperiodic task J computation time J equal 2γi deadline task J dti γi It straightforward EDD returns feasible schedule maximal covering route EDD returns nonfeasible schedule maximal covering route cid2 The result shows Question 2 answered polynomial time We focus Question 3 showing question answered polynomial time special instances Theorem 15 Given signal s best pure strategy D SRGv game line graph cycle graph SIMPLESTAR graph instances polynomial time Proof For sake clarity algorithm simpliﬁed case signal s The extension general case straightforward The algorithm works follows 1 apply algorithm searching route covering targets 2 maximal covering route exists return 3 remove target t smallest π t T s 4 Point 1 Essentially algorithm returns subset targets admitting covering route minimizing maximum value noncovered targets cid2 Notice results easily extended tree graphs number leaves ﬁxed N Basilico et al Artiﬁcial Intelligence 246 2017 220257 255 Appendix C Additional experimental results We report Fig C20 boxplots results depicted Fig 5 They variance compute times drastically reduces cid11 increases This number edges increases cid11 increases number covering sets increases approaching 2 On hand small values cid11 number covering sets different instances extremely different T Fig C20 Boxplots compute times required exact dynamic programming algorithm Appendix D Notation We report Table D3 symbols paper 256 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 Table D3 Symbols table Basic model Signals Routes Symbol Meaning A D G V v v E v v ω T t ti π t dt cid5 vvcid5 S s p T s St cid8 Attacker Defender Graph Set vertices Vertex ith vertex Set edges Edge Temporal cost turns shortest path v v Set targets Target ith target Value target t Penetration time target t cid5 Set signals Signal Function specifying probability having generating signal s given target t attacked Targets having positive probability raising s attacked Signals having positive probability raised t attacked No signals generated No targets attack R vs r ri ri U Ari ti σ D σ D v σ D vs σ A σ A v gv Ari T r cr Set routes starting vertex v signal s generated Route ith route ith element visited route r Attackers utility given route r target t Defenders strategy Defenders strategy starting vertex v Defenders strategy starting vertex v signal s generated Attackers strategy Attackers strategy D v Value game utility A Time needed D visit ri starting r0 Set targets covered route r Temporal cost turns associated r References 1 M Jain B An M Tambe An overview recent application trends AAMAS conference security sustainability safety AI Mag 33 3 2012 1428 2006 pp 8290 2 B Von Stengel S Zamir Leadership commitment mixed strategies Tech rep 2004 3 V Conitzer T Sandholm Computing optimal strategy commit Proceedings ACM Conference Electronic Commerce ACM EC 4 J Pita M Jain C Western C Portway M Tambe F Ordóñez S Kraus P Paruchuri Deployed ARMOR protection application gametheoretic model security Los Angeles International Airport Proceedings International Joint Conference Autonomous Agents Multi Agent Systems AAMAS 2008 pp 125132 5 J Tsai S Rathi C Kiekintveld F Ordóñez M Tambe IRIS A tool strategic security allocation transportation networks Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2009 pp 13271334 6 B An E Shieh R Yang M Tambe C Baldwin J DiRenzo B Maule G Meyer Protect A deployed game theoretic strategic security allocation United States coast guard AI Mag 33 4 2014 96110 7 FM Delle Fave AX Jiang Z Yin C Zhang M Tambe S Kraus J Sullivan Gametheoretic security patrolling dynamic execution uncertainty case study real transit J Artif Intell Res 50 2014 321367 8 B Ford D Kar FM Delle Fave R Yang M Tambe PAWS adaptive gametheoretic patrolling wildlife protection Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2014 pp 16411642 9 N Basilico N Gatti F Amigoni Patrolling security games deﬁnition algorithms solving large instances single patroller single intruder Artif Intell 184185 2012 78123 Artiﬁcial Intelligence AAAI 2010 pp 12241229 10 N Basilico N Gatti F Villa Asynchronous multirobot patrolling intrusion arbitrary topologies Proceedings AAAI Conference 11 N Agmon GA Kaminka S Kraus Multirobot adversarial patrolling facing fullknowledge opponent J Artif Intell Res 42 2011 887916 12 E Sless N Agmon S Kraus Multirobot adversarial patrolling facing coordinated attacks Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2014 pp 10931100 13 N Agmon C Fok Y Emaliah P Stone C Julien S Vishwanath On coordination practical multirobot patrol Proceedings IEEE International Conference Robotics Automation ICRA 2012 pp 650656 14 Y Vorobeychik B An M Tambe SP Singh Computing solutions inﬁnitehorizon discounted adversarial patrolling games Proceedings International Conference Automated Planning Scheduling ICAPS 2014 pp 314322 15 EA Shieh M Jain AX Jiang M Tambe Eﬃciently solving joint activity based security games Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI 2013 pp 346352 16 J Gan B An Y Vorobeychik Security games protection externalities Proceedings AAAI Conference Artiﬁcial Intelligence AAAI 2015 N Basilico et al Artiﬁcial Intelligence 246 2017 220257 257 17 N Agmon On events multirobot patrol adversarial environments Proceedings International Joint Conference Autonomous Agents pp 914920 MultiAgent Systems AAMAS 2010 pp 591598 18 S Alpern A Morton K Papadaki Patrolling games Oper Res 59 5 2011 12461257 19 N Basilico S Carpin T Chung Distributed online patrolling multiagent teams sentinels searchers Proceedings International Symposium Distributed Autonomous Robotic Systems DARS 2014 pp 316 20 BC Ko JO Park JY Nam Spatiotemporal bagoffeatures early wildﬁre smoke detection Image Vis Comput 31 10 2013 786795 21 AJ GarciaSanchez F GarciaSanchez J GarciaHaro Wireless sensor network deployment integrating videosurveillance datamonitoring precision agriculture distributed crops Comput Electron Agric 75 2 2011 288303 22 J Yick B Mukherjee D Ghosal Wireless sensor network survey Comput Netw 52 12 2008 22922330 23 Z Sun P Wang MC Vuran MA Alrodhaan AM Aldhelaan IF Akyildiz Bordersense border patrol advanced wireless sensor networks Ad 24 A Krause A Roper D Golovin Randomized sensing adversarial environments Proceedings International Joint Conference Artiﬁcial Hoc Netw 9 3 2011 468477 Intelligence IJCAI 2011 pp 21332139 25 E Munoz Cote R Stranders N Basilico N Gatti N Jennings Introducing alarms adversarial patrolling games Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2013 pp 12751276 26 N Basilico N Gatti Strategic guard placement optimal response alarms security games Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2014 pp 14811482 27 N Basilico G De Nittis N Gatti Multiresource defensive strategies patrolling games alarm systems CoRR arXiv160602221 httparxiv orgabs160602221 28 N Basilico G De Nittis N Gatti A security game combining patrolling alarmtriggered responses spatial detection uncertainties Proceedings AAAI Conference Artiﬁcial Intelligence AAAI 2016 pp 397403 29 N Basilico N Gatti T Rossi S Ceppi F Amigoni Extending algorithms mobile robot patrolling presence adversaries realistic settings Proceedings IEEEWICACM International Conference Intelligent Agent Technology IAT 2009 pp 557564 30 N Basilico N Gatti T Rossi Capturing augmented sensing capabilities intrusion delay patrollingintrusion games Proceedings IEEE Symposium Computational Intelligence Games CIG 2009 pp 186193 31 Y Shoham K LeytonBrown Multiagent Systems Algorithmic GameTheoretic Logical Foundations Cambridge University Press New York NY USA 2008 431444 32 M Maschler S Zamir E Solan Game Theory Cambridge University Press 2013 33 LS Shapley RN Snow Basic solutions discrete games Ann Math Stud 24 1950 2735 34 MJ Osborne An Introduction Game Theory vol 3 Oxford University Press New York 2004 35 HJ Böckenhauer J Hromkovic J Kneis J Kupke The parameterized approximability tsp deadlines Theory Comput Syst 41 3 2007 36 N Bansal A Blum S Chawla A Meyerson Approximation algorithms deadlinetsp vehicle routing timewindows Proceedings Annual ACM Symposium Theory Computing STOC 2004 pp 166174 37 MW Savelsbergh Local search routing problems time windows Ann Oper Res 4 1 1985 285305 38 HJ Böckenhauer L Forlizzi J Hromkoviˇc J Kneis J Kupke G Proietti P Widmayer Reusing optimal tsp solutions locally modiﬁed input instances Proceedings IFIP International Conference Theoretical Computer Science TCS 2006 pp 251270 39 D Korzhyk Z Yin C Kiekintveld V Conitzer M Tambe Stackelberg vs Nash security games extended investigation interchangeability 40 B An M Tambe F Ordóñez EA Shieh C Kiekintveld Reﬁnement strong Stackelberg equilibria security games Proceedings Conference equivalence uniqueness J Artif Intell Res 41 2011 297327 Artiﬁcial Intelligence AAAI 2011 pp 587593 41 M Jain C Kiekintveld M Tambe Qualitybounded solutions ﬁnite Bayesian Stackelberg games scaling Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2011 pp 9971004 42 M Brown B An C Kiekintveld F Ordóñez M Tambe An extended study multiobjective security games Auton Agents MultiAgent Syst 28 1 43 TH Nguyen R Yang A Azaria S Kraus M Tambe Analyzing effectiveness adversary modeling security games Proceedings AAAI Conference Artiﬁcial Intelligence AAAI 2013 pp 718724 44 B An M Brown Y Vorobeychik M Tambe Security games surveillance cost optimal timing attack execution Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2013 pp 223230 45 R Yang B Ford M Tambe A Lemieux Adaptive resource allocation wildlife protection illegal poachers Proceedings International Joint Conference Autonomous Agents Multiagent Systems AAMAS 2014 pp 453460 46 B An F Ordóñez M Tambe E Shieh R Yang C Baldwin J DiRenzo K Moretti B Maule G Meyer A deployed quantal responsebased patrol planning US Coast Guard Interfaces 43 5 2013 400420 47 R Yang AX Jiang M Tambe F Ordóñez Scalingup security games boundedly rational adversaries cuttingplane approach Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI 2013 pp 404410 48 J Tsai TH Nguyen N Weller M Tambe Gametheoretic target selection contagionbased domains Comput J 57 6 2014 893905 49 C Kiekintveld M Jain J Tsai J Pita F Ordóñez M Tambe Computing optimal randomized resource allocations massive security games Proceedings International Joint Conference Autonomous Agents MultiAgent Systems AAMAS 2009 pp 689696 50 A Blum N Haghtalab AD Procaccia Lazy defenders optimal diligent attackers Proceedings AAAI Conference Artiﬁcial Intelligence AAAI 2014 pp 573579 51 CH Papadimitriou M Yannakakis The traveling salesman problem distances Math Oper Res 18 1 1993 111 52 RW Conway WL Maxwell LW Millerr Theory Scheduling Dover Books Mathematics 2003 2014 3171