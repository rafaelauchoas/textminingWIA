Artiﬁcial Intelligence 247 2017 151169 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Representations robot knowledge KnowRob framework Moritz Tenorth Michael Beetz Institute Artiﬁcial Intelligence Universität Bremen Am Fallturm 1 28359 Bremen Germany r t c l e n f o b s t r c t Article history Received revised form 20 May 2015 Accepted 28 May 2015 Available online 3 June 2015 Keywords Knowledge representation Autonomous robots Knowledgeenabled robotics In order robustly perform tasks based abstract instructions robots need sophisticated knowledge processing methods These methods supply difference shallow symbolic information instructions detailed grounded realvalued information needed execution For ﬁlling information gaps robot ﬁrst identify instructions reason suitable information sources combine pieces information different sources different structure coherent knowledge base To end propose KnowRob knowledge processing robots In article discuss requirements robot knowledge processing differ commonly investigated AI research propose reconsider KR semantically annotated view information algorithms available robots control We introduce representational structures common vocabulary representing knowledge robot actions events objects environments robots hardware inference procedures operate common representation The KnowRob released opensource software robots performing complex object manipulation tasks We evaluate prototypical queries demonstrate expressive power impact robots performance 2015 Published Elsevier BV 1 Introduction As robotic agents robot factory workers coworkers home assistant robots scale complex tasks open environments require ﬂexibility plan execution Plans explicitly spell task perform long execution context remains static diﬃcult adapt open dynamic world A promising approach increasing ﬂexibility postpone decisions programming time execution time including essential aspects task plan Humans successfully use technique explaining tasks humans terms vague instructions set table pour water glass Similarly instruction sheets commonly factories chemical laboratories brieﬂy summarize main actions leaving important aspects open The parts spelled usually adapted situation hand While information gaps increase overall ﬂexibility need ﬁlled appropriately plan executed To end robot needs supply delta information abstract symbolic vague instructions speciﬁc explicit realvalued parameters needed action components Corresponding author Email addresses tenorthcsunibremende M Tenorth beetzcsunibremende M Beetz httpdxdoiorg101016jartint201505010 00043702 2015 Published Elsevier BV 152 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 1 Left Example situation classical blocks world environment Using logical inference scene representation determine preconditions fulﬁlled moving block A position A Right Visualization scene model KnowRob robot knowledge base While situation complex eﬃcient algorithms exist computing stability reachability cid3 This means interpret instructions given current execution context background knowledge come suitable values understood motion generation control components This robotics use case requires capabilities knowledge representation reasoning KRR differ commonly investigated AI research Let consider example left Fig 1 shows typical scene blocks world common scenario KR research Researchers knowledge representation model scenario dynamical knowledge base approach control prediction analysis tasks inferring solutions purely based model The knowledge bases based logical 36 STRIPS PDDLbased 2714 probabilistic 18 representations For example logical approach researchers try axiomatize dynamics particular conditions actions successfully performed causal laws relate actions effects solutions control prediction analysis tasks logical consequences respective axiomatization While approaches elegant approach variety control problems uniform framework typically yield number implementation applicability issues Since tasks solved inference search computational costs high predictable When physics domain complicated number axioms grows fast seen axiomatizations famous eggcracking problem 28 Many approaches abstract away geometric physical properties crucial robots determine outcome feasibility action For employed coarsegrained discretizations diﬃcult ﬁnd appropriate level abstraction continuous quantities pervasive robotics applications Once ab stracted information accessed ﬁner level Examples inferences depend continuous quantities reachability objects stability object placements 7 The right Fig 1 visualizes scene blockstacking task realistically look like robot It easily seen signiﬁcantly complex blocks world model making application AI reasoning methods diﬃcult However information present robots internal data structures robots pose movements recognized objects environment structures And inference tasks visibility objects reachability locations eﬃcient wellunderstood algorithms robotics operate data structures Reachability computed inverse kinematics calculations 38 Visibility computed rendering scene given viewpoint 29 These algorithms require abstraction symbolic knowledge base operating original data compute detailed results logical inference In paper argue instead abstracting data purely symbolic knowledge base robots shall original highresolution continuous data compute symbolic view needed This ondemand abstraction provide appropriate level Robotics algorithms operate original data logi cal inferences computed abstract symbolic level Queries combine inferences levels abstraction This approach taken KnowRob knowledge processing present article It consists shallow symbolic knowledge base provides semantic representations robots data structures primar ily serves integration layer inference algorithms The representation shallow compared expressive AI reasoning methods inferences level For example model appearance objects visibility reasoning algorithm read linked 3D model And model physical laws algorithm computing object stability read physical properties CAD model parameterize simulator The role KR shifts world model consistent complete semantic integration layer The correctness inferences determined correctness algorithms M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 153 complete correct axiomatization diﬃcult guarantee information read noisy sensors The remainder paper organized follows We start overview lessons learned investigat ing knowledgeenabled robot control explain ﬁndings implemented KnowRob The following section explains representations objects parts properties locations environment robots selfmodel It followed representations events actions instance class level methods projecting effects actions objects We evaluate approach knowledge content scalability example queries showing inferences enables examples robot experiments adoption opensource research community The paper ﬁnishes comparison related approaches conclusions While parts KnowRob described earlier conference papers article tries set individual aspects relation explain contribute overall representation reasoning capabili ties It accompanied opensource software ontologies knowledge bases1 Several online tutorials simulated real robot data explain works In addition created cloudbased ver sion KnowRob knowledge processing called OPENEASE2 Users create free account try installation sending queries web browser By providing software representations like reader opportunity try assess performance different applications 2 Lessons learned robot knowledge processing In introduction argued important differences knowledge processing methods robots topics commonly investigated KRR research In section like summarize insights lessons learned implementing different versions KnowRob motivate design decisions inﬂuenced 21 No ﬁxed levels abstraction layers black boxes A core observation KRR robots consider continuous subsymbolic data symbolic knowledge support abstraction concretization However choice ﬁxed levels abstraction turned inappropriate use cases needed coarser detailed models Especially concretization abstract information supported approaches treat underlying layers black boxes We chose store information detailed format available abstract appropriate level information needed inferences Besides providing information right level abstraction approach alleviates problem symbolic knowledge deviates continuouslevel data computed query time 22 A knowledge base reuse data structures robots control program The content robot KR continuously updated new perceptual actuation data As formation present robots control consider KR kind parasite existing data structures task sense lift conceptual level As consequence content knowledge base grounded data structures carefully developed robot programmer way grounded outer world instance specialized perception routines If grounded robot able perform tasks This approach differs AI knowledge bases directly refer entities outer world making grounding problem diﬃcult 23 Symbolic knowledge bases useful suﬃcient Symbolic representations undeniably useful structuring knowledge base providing type performing logical qualitative inference However level types information required successfully accomplishing robot tasks exact times 3D geometric information kinematic structures appearance models diﬃcult encode purely symbolic form A proper representation robots complex dynamic surround ings require expressive formalisms fact information obtained partial observations noisy sensors inevitably lead wrong inconsistent information diﬃcult resolve purely logical knowledge base Our knowledge base shallow symbolic representation general concepts information robot environment perceptions merely virtual knowledge base computed runtime data structures robots control program In way approach line Brooks observation world 1 Available download http wwwknowrob org 2 http wwwopenease org 154 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 best model It exactly date It contains known The trick sense appropriately 6 As consequence reasoning symbolic level relaxes requirements correctness completeness consistency knowledge base We guarantee structure knowledge base issue systems 24 Robots need multiple inference methods One query knowledge base require use different inference methods different information sources For example robot ask gripper inside container pickup task order verify pickup action attempted Such query requires temporal reasoning events pickup action ontological reasoning determine objects containers threedimensional spatial reasoning determine inside lation These reasoners need access robots task logs proprioceptive information gripper movements environment model general knowledge types objects We decided use common derlying representation kinds information ensemble expert reasoners operate shared knowledge This approach similar ensembleofexperts architectures IBM Watson 11 demonstrated impressive performance realworld question answering single reasoning method collection specialized ones In contrast classical AI reasoning methods focus temporal qualitative spatial ontological reasoning supporting ones 25 Evaluating robot knowledge base diﬃcult There wide range aspects contribute performance robot knowledge processing including number facts contains coverage relevant knowledge areas range inference methods sup ported run time common queries scalability information stored usefulness computed results robot tasks However aspects easily quantiﬁed runtime answering queries depend factors size knowledge base way query formulated While try evaluate aspects possible exhaustively covering usually scope paper However KnowRob available opensource software consider adoption community novel application areas external developers strong indicator quality In addition developed webbased version knowledge base users try requiring installation evaluate usefulness particular use case 3 The KNOWROB robot knowledge processing The concepts explained previous section implemented current version KnowRob robot knowledge processing In earlier paper 43 introduced KnowRob emphasis systems aspects knowledge storage techniques integrating knowledge base robots data structures percep tion control In article focus representational structures contribute reasoning capabilities Since KnowRob combines information types different sources inference methods integra tion important issue This includes integration representational level ensure modules share common language integration programmatic level ensure right inference methods called processing query We approach representing knowledge respect common ontology The struc tures presented following sections implemented Web Ontology Language OWL 50 standardized language based Description Logics The core knowledge base formed large ontology conceptualizes robotics domain Its upper levels derived OpenCyc 23 widely comprehensive upper ontology Staying compatible OpenCyc allows incorporate extensions researchers example mappings ontologies like WordNet 10 The generalpurpose upper ontology extended microtheories add domainspeciﬁc knowledge specialpurpose inference methods Compared knowledge representation formalisms OWL shallow semantics allows kinds inferences relations classes individuals As OWL inference suﬃcient inference method KnowRob allows complement reasoning algorithms They logical nature employ kind computation long read input data knowledge base produce facts formulated common representation language OWL primarily glue representational level common structured language describing world For integrating different modules programmatic level use logical programming language SWI Pro log 53 The OWL ontologies loaded SWI Prologs Semantic Web library 52 representing triple structure Prolog predicates Since Prolog declarative procedural semantics allows combine logical knowledge base programming Using Prologs Foreign Language Interface integrate external reasoning tools expose Prolog predicates For example create predicate reachableO L R describes M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 155 Fig 2 Excerpt knowledge base describing information actions picking spatula ﬂipping pancake The upper describes OWL model different interacting knowledge domains highlighted different colors The lower lists reasoning methods hooked classes relations OWL model compute For interpretation references color ﬁgure legend reader referred web version article object O reached location L robot R scenes evaluated computing solu tion underlying inverse kinematics problem This common interface allows combine inferences single Prolog query example ask objects type Cup reachable robot PR2 current location L owl_individual_ofObj krCup robot_locPR2 L reachableObj L PR2 computed OWL inference computed querying robots localization computed inverse kinematics calculations Eﬃciency key importance robots results available fast relevant current actions slow task execution To achieve eﬃcient scalable inference employ specialized inference techniques exploit structure problem eﬃcient simply implement inferences pro cedurally diﬃcult intractable pure logical reasoning In cases search trees queries ﬂat lets resemble Datalog programs require deep search solutions answered eﬃciently 31 Example integration inference methods OWL knowledge base Fig 2 illustrates external reasoners integrated OWL model serves conceptual framework storing information produce consume It visualizes small excerpt knowledge base representing sequence actions plan making pancakes The upper ﬁgure describes conceptual model problem OWL model The different colors indicate small example requires combination knowledge different areas The gray arrows ﬁgure visualize subClassOf relations black arrows denote relations like objectActedOn action The ﬁrst action PickingUpAnObject performed object type Spatula stored Drawer31 instance drawer speciﬁed pose position orientation PickingUpAnObject subclass class MovementTranslation specialization ActionOnObject OWL classes inherit properties parents powerful tool representing knowledge generic way The second action FlippingSomething linked ﬁrst nextAction relation allowing inference sequence temporal aspects The Spatula serves toolUsed action graspedAt Handle physicalParts The ﬂipping action performed Pancake located PancakeMaker Before execution checked actions feasibleOnRobot PR2Robot sure required capabilities available While structures deﬁned manually OWL usually populated variety automated reasoners hooked OWL representation compute relations ﬁll conceptual view content In example relations gray circle asserted manually computed query time inference tools 156 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 lower ﬁgure Some reasoners compute relation existing individuals create new individuals example based perception results integrate knowledge base 4 Representation objects spatial information This section introduces representations associated inference methods objects spatial information We start classlevel knowledge objects types continue object instances representation positions orientations computation qualitative spatial relations representation object geometry com position parts The subsection deals special kinds objects parts robot properties 41 Classlevel object knowledge Object type information organized large ontology ranges generic classes SpatialThing spe ciﬁc ones RefrigeratorFreezer In total KnowRob ontology contains 7000 object classes Whereas upper levels manually imported OpenCyc obtain sound basis ontology specialized classes generated automatically existing information For instance explored information online shops particular category structure translated class taxonomy 44 facilitate creation largescale ontologies The classes annotated properties instance Oven HeatingFood primary function Handle properPhysicalPart Properties inherited subclasses inheriting multiple superclasses different facets object described A Refrigerator example subclass BoxContainer Electrical HouseholdAppliance RefrigeratedStorageDevice inherits properties classes This way objects classiﬁed different dimensions shape need electricity temperature rules formulated generic fashion selecting appropriate superclass Compared approaches example 15 KnowRob ontology weakly axiomatized contains fewer class restrictions deﬁne concepts For robots operating open world deﬁnitions A living room room exactly sofa TV turn brittle living room TV sofas cause logical inconsistency Inference fuzzy uncertain relations performed integrated probabilistic reasoners 32 instead description logics The common reasoning tasks object class level selection subclasses generic concept Container objects common OWL inference computation semantic similarity classes In 37 shown similarity computed weighted distance concepts ontology example reason object locations Objects stored places semantically similar objects located The following equation computes WUP similarity 56 depths concepts C1 C2 common superconcept ontology wupSimC1 C2 depthLCSC1 C2 2 depthC1 depthC2 1 42 Object instances environment maps 1 The robots environment represented instances object classes Instead directly representing objects outer world OWL individuals merely considered description Objects referenced properties identity multiple possibly partial descriptions object exist The descriptions called designators 26 redundant object detected different methods incomplete detected type known inconsistent case perception failures This useful distinguish time object created ﬁrst detected maintain belief objects exist unify multiple instances robot ﬁnds refer object real world This supported OWL language Unique Name Assumption provides constructs owlsameAs owldifferentFrom describing identiﬁers refer object Any set object instances associated instance SemanticEnvironmentMap Fig 3 left additionally store maplevel information address space described map 3341 Object instances composed partof hierarchy composition complex objects kinematic structures robot parts kitchen cabinets Fig 3 right Appearance models 3D surface mesh models associated subcomponent Section 45 Since structural difference static objects environment map movable objects detected robots perception parts robot kind object information easily compared M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 157 Fig 3 Examples semantic environment maps Left Map kitchen including trajectories opening different cupboards Right Representation composed objects kinematic structures prismatic rotational joints Fig 4 Ontology mental events Each events result changes robots belief state object poses 43 Representation positions orientations Among important information robot object poses positions orientations changes time In KnowRob pose values stored 4 4 matrix encodes translations rotations respect given coordinate coordinates environment map default While fairly common representing values change time bit diﬃcult On logical level requires ability qualify relation case atLocation property links object instance pose time valid turning binary relation object pose ternary includes time While ternary relations directly supported OWL converted set binary relations introducing ﬁrstclass object binary links entities On semantic level like represent type belief objects position object perceived robot expects ﬁnd We use typed event lead belief object pose reiﬁed relation object For example object perceived robots camera create instance class VisualPerception linked object pose time point This structure visualized left right parts Fig 5 These events subclasses class MentalEvent visualized Fig 4 Multiple events assigned object storing detections time possibly differing poses determined different methods This representation allows reason changes time previous world states reconstructed considering events given time discrepancies desired perceived poses The representation similar ﬂuent calculus 47 ﬂuents data structures represent change values time In case reiﬁed objects changing value provide memory past states source relation type allow reason multiple possible worlds example perceived desired simulated world 44 Reasoning object poses computation qualitative spatial relations Humans usually locations qualitative terms table instead exact coordinates useful robots example formulate generic rules objects table shall 158 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 5 Reasoning KnowRob object representation computing qualitative spatial relations The holds predicate computes on_physical relation retrieving latest detections objects relation given point time Fig 6 Taxonomy qualitative spatial relations including directional topological relations refrigerator In section qualitative relations computed spatiotemporal object pose representation introduced previous section The computation demand inference procedures attached OWL properties compute avoids storage exploding number pairwise relations frame problem determining relations updated object moved The representation object poses MentalEvents provides information evaluating qualitative spatial relations objects time We assume perceived pose object valid time relation evaluated case agents selfmoving objects exist In general relation rel A B true time T expressed KnowRob holdsrelA B Time predicate Fig 5 illustrates implementation box lower center accesses detections objects table_2 icetea_8 shown left right edges The ﬁrst step search perceptions objects valid Time If explicit end time set perception remains valid current time perception object The procedure searches perceptions validity interval contains Time reads poses objects perceived events event_occurs_at predicate By comparing object poses optionally dimensions relations Fig 6 computed For property check z coordinate object larger object compare object dimensions omitted example Since majority queries concerned current world state KnowRob offers simpliﬁed query mechanism uses current time default upper block Fig 5 45 Object geometry functional parts In particular ﬁne manipulation tool usage require detailed geometric information objects involved diﬃcult represent symbolic knowledge base We extend object classes links detailed dimensional CAD models provide detailed geometric description available free databases Web While monolithic CAD models useful visualization grasp planning robots need interact speciﬁc object parts functional meaning action hand For picking items M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 159 Fig 7 Proposed method generating partbased object representation A threedimensional CAD model object segmented parts classiﬁed functional categories based semantic rules knowledge base use handle pouring container need information opening direction volume pouring surface select suitable horizontal surface These inferences require tight integration geometric semantic information implement virtual knowledge base conceptual model attached procedures computing relations 3D models The virtual symbolic view model generated runtime allows answer logical queries geometric model functional components The structure partbased model exactly composed objects cupboards shown Fig 3 right instance subpart Handle Container grounded submesh CAD model Once objects recognized scene objectrelative poses identiﬁed parts translated sceneglobal positions In 46 described model created automatically CAD model linking geomet ric analysis methods knowledgebased deﬁnitions components Fig 7 outlines main processing steps proposed approach The model segmented based surface curvature geometric primitives cones spheres planar surfaces ﬁtted segments After bottomup processing steps apply knowl edge functional parts topdown fashion It uses logical rules deﬁne components terms geometric primitives order identify functional object parts For example handle deﬁned knowledge base cylinder certain dimensions container formed concave cylinder closed planar surface end The rules composable deﬁnitions kinds handles easily included adding appro priate rules The resulting models allow evaluation logical queries geometric object models reason functional parts geometric semantic level 46 Robot components capabilities Besides models outer world robots need representations structure capabilities They allow robot reason components consists properties kinematically connected capabilities enable This instance useful determine robot lacking components required given action While commonly robot description formats URDF3 COLLADA 2 provide information kinematics dynamics 3D surface robot lack semantic information parts For example represent components sensors group components forms gripper In KnowRob robots described Semantic Robot Description Language SRDL originally proposed 21 extends lowlevel robot models semantic representations At lowest level robots hardware like URDF described terms links joints Fig 8 left This representation automatically generated URDF robot model similar models composite objects general Fig 3 At higher level links joints aggregated semantically meaningful components arms hands Fig 8 right Also links correspond sensors actuators annotated properties instance ﬁeld view camera resolution laser scanner On component model SRDL describes abstract capabilities navigation object recognition dependencies components At highest level actions deﬁne dependencies components camera certain properties capabilities recognition textured objects These dependencies 3 http wwwros org wiki urdf 160 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 8 Typical robot descriptions cover kinematic dynamic aspects left surface models robot center A semantic robot description adds information meaning different robot parts right automatically checked robot model infer components required action available In addition component model kinds reasoning example compute camera object based pose ﬁeld view 54 5 Representation events actions In addition models spatial context robots need representations temporal events importantly actions perform In KnowRob instances observed events performed actions form episodic memory robots experiences We introduce representation Sections 51 52 Action models class level abstract plan schemata example generated instructions given humans Gaps descriptions ﬁlled planning techniques In Sections 54 explain action effects represented reasoned KnowRob In end section discuss action models extended models processes triggered sideeffects actions inﬂuence results 51 Events temporal information Temporal information start time event duration action contemporaneity events highly important robots act dynamic environments Similar OpenCyc consider event dynamic situation state world changes4 Events instantaneous moment perception temporally extended execution trajectory reaching object Each event startTime duration ﬁnite endTime Both relations link event TimePoint special case TimeInterval zero duration This event representation visualized Fig 9 serves basis temporal reasoning time interval logics Allens interval algebra 1 Similar methods reasoning qualitative spatial relations introduced Section 44 relations time intervals implemented Prolog predicates read information OWLbased model Actions considered special kind event representations inference methods actions general events 52 Action instances Action instances represent actions performed way robot real world 54 envisioning procedure 42 human demonstrating robot 4 While models contain information example goal action logged robot observed human actions share basic structure visualized Fig 9 This common language makes easy combine compare action information different sources Each action startTime endTime addition information parameters manipulated perceived objects Hierarchical task structures built subAction relation Besides actions task tree asynchronous events sensor readings stored mechanisms related simultaneous actions temporal reasoning methods introduced previous section Again abstract symbolic model complemented continuouslevel information example trajecto ries robot movements visualized Fig 1 right During task execution detailed log ﬁles movements performed robot human recorded highvolume database 54 Based start end times query predicates later read poses body parts semantically described time points end reaching motion time intervals 5 4 Part deﬁnition event OpenCyc http swopencyc org concept Mx4rvViADZwpEbGdrcN5Y29ycA M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 161 Fig 9 Example time line events consisting action instances extended duration instantaneous events Various temporal relations computed based start end times 53 Action classes Similar ontology object types action ontology contains 130 action classes serves providing vocabulary representing tasks In comparison class restrictions actions preconditions effects explained Section 541 We use taxonomic structure generalization inheriting restrictions superclasses Robot plans modeled action recipes abstractly composition tasks subactions types actions relative ordering action parameters object manipulated locations action performed These action models originally developed action recipes RoboEarth language 45 exchange task descriptions robots extended use cases The description concrete task usually derives speciﬁc subclasses general action classes KnowRob ontology annotates taskspeciﬁc information objects tools locations timing These derived action classes arranged partially sequential order The example code excerpt plan setting table Class SetATable Annotations label set table SubClassOf Action EquivalentTo subAction PutPlaceMatInFrontOfChair subAction PutPlateInCenterOfPlaceMat subAction PutKnifeRightOfPlate subAction orderingConstraints value Class PutPlaceMatInFrontOfChair EquivalentTo PuttingSomethingSomewhere objectActedOn value PlaceMat1 toLocation Place1 Naturallanguage label command given human References taskspecific action classes Partial ordering constraints subactions Extension generic class PuttingSomethingSomewhere taskspecific properties objectActedOn toLocation Class Place1 EquivalentTo Action arguments nested class restrictions describing places properties inFrontOfGenerally ChairPieceOfFurniture Individual PlaceMat1 Types PlaceMat Individuals action descriptions skolem constants unified real objects runtime The upper describes task SetATable subclass Action set subActions The lower consists deﬁnitions taskspeciﬁc subclasses generic action classes The class PutPlaceMatInFrontOfChair example deﬁned subclass generic PuttingSomethingSomewhere action KnowRob ontology additional restriction objectActedOn needs PlaceMat toLocation fulﬁll requirements described class Place1 described Place inFrontOfGenerally ChairPieceOfFurniture These structures allow construct task descriptions arbitrary level abstraction speciﬁcity The separation task speciﬁc classes task description generic classes main action ontology allows extract reusable knowledge main knowledge base inherited tasks derived action classes 162 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 10 Hierarchy actionrelated properties The upper lists specializations preActors inputs action situation beginning The postActors outputs postconditions 54 Effects actions objects A robot reason effects actions objects manipulates Pickandplace tasks merely change positions described techniques introduced Section 43 More complex activities like cooking meals involve substantial changes objects Objects created destroyed chopping vegetables substantially change types appearance aggregate states mixing baking cookie dough Robots able represent effects action objects got transformed ones In KnowRob representation action effects consists 1 declarative speciﬁcations inputs outputs action searching actions desired effects 2 projection rules envision world state action performed 541 Declarative models action effects The declarative effect speciﬁcations extend class taxonomy information relation actions objects interact They mainly searching actions desired effects preconditions true Fig 10 lists important properties representing action effects preActors displayed upper ﬁgure action properties supposed hold action takes place They include agent doneBy initial locations states fromLocation fromState thingIncorpo rated merged objectAddedTo The postActors relations outcome action example outputsCreated targetPosture 1 toLocation transport action These properties class restrictions describing inputs outputs pre postconditions action class Using common OWL inference robot ﬁnd actions desired properties generalizing class taxonomy For example robot search Action turns Device DeviceStateOff DeviceStateOn obtain action class TurningOnPoweredDe vice Class TurningOnPoweredDevice SubClassOf ControllingAPhysicalDevice objectOfStateChange PhysicalDevice fromState value DeviceStateOff toState value DeviceStateOn 542 Projecting action effects Complementary declarative effect axioms previous section procedural projection rules computing concrete world state change performing action While declarative axioms deﬁned class level projection rules assert relations concrete set action object instances The consistency representations ensured programmer M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 163 In context KnowRob mainly interested lightweight superﬁcial form envisioning allows spot major gaps task instructions In current implementation rules operate coarse qualitative level predictions exact complete A detailed prediction world state action performed require sophisticated computationally expensive methods example based physical simulation 20 limited level realism achieve The projection rules implemented Prolog predicates establish links action instance objects act inputs outputs newly created destroyed They associated actions level taxonomy example generic rule turning device speciﬁc rule dough starts bake exposed heat Below example projection rule mixing baking mix batter action The predicate ﬁrst checks applicability conditions action given type object speciﬁed projection action far Then creates new object instances asserts relations input objects action generated outputs These relations correspond directly declarative speciﬁcations OWL ontology Mixing baking mix batter project_action_effectsAction owl_individual_ofAction krMixing owl_hasAction kroutputsCreated _ Action proper type No outputsCreated property set owl_hasAction krobjectActedOn Mix owl_individual_ofMix krMixForBakedGoods At objectActedOn type MixForBakedGoods findallObj owl_hasAction krobjectActedOn Obj Objs Batter owl_instance_from_classkrBatter owl_assertAction krobjectAddedTo Batter owl_assertAction kroutputsCreated Batter Read objects related subproperties objectActedOn Create instances batter set objectAddedToand outputsCreated action findallO memberO Objs The arguments mixing actions owl_assertAction krthingIncorporated O_ incorporated batter Initially projection rule applied relation set action generic objectActedOn linked instance MixForBakedGoods Such generic relations obtained instructions The projection rule reﬁned extended description asserting properties objectAddedTo outputsCreated thingIncorporated relations This additional information important reasoning objects transformed task identifying inconsistencies knowledge gaps 6 Evaluation We characterize performance proposed knowledge processing ﬁve dimensions The size ontology runtime performance examples supported queries cover different knowledge areas examples robot experiments KnowRob adoption opensource software library community consider indicator usability ﬁtness applications initially conceived 61 Knowledge content The KnowRob ontology subontologies currently include 8000 classes describing events temporal things actions objects spatial things mathematical concepts metainformation There 130 action classes 7000 object classes 150 robotspeciﬁc concepts described 300 kinds properties The classes cover wide range concepts mobile manipulation robots household chores cooking fetchand carry tasks Extensions thirdparty developers include knowledge industrial assembly tasks search rescue alpine environments underwater robotics 62 Run time scalability Like Prolog program run time query depends factors size knowledge base order predicates conjunction respective branching factors Since KnowRob includes external nonProlog reasoners trigger complex computations runtime affected reasoners considered While general statements runtime eﬃciency diﬃcult performance speciﬁc query predicted tested This aligns KnowRob robots control 164 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 11 Evaluation required CPU time left memory right creating large numbers object perceptions knowledge base program Control decisions formulated queries knowledge base read required parameters While results computed runtime structure queries known plan design time performance tested optimized needed To quantify performance common task simulated creation large number object perceptions described Section 43 complex structures KnowRob For simulated perception event create VisualPerception instance object instance pose matrix 16 elements stored OWL datatype properties The following code create structures N ranging 100 1000000 objects corresponds storing object perception seconds days row The time predicate measures CPU time consumed evaluating predicate After creating N object perceptions measure time querying pose arbitrary object create_objs0 create_objsN create_object_perceptionkrCup 0001 0001 0001 0000 VisualPerception _ N1 N 1 create_objsN1 Create 100 object perceptions timecreate_objs100 Query object pose timeowl_individual_ofObj krCup current_object_poseObj Pose Fig 11 left plots average CPU time needed creating objectperceptionpose structure time querying pose N poses created Both times constant time querying pose value jumps milliseconds resolution time predicate The right dia gram plots number atoms knowledge base memory consumption Prolog UNIX process Both increase linearly number objects Other queries involve interaction external com ponents usually answered 3050 ms queries involve ondemand analysis CAD models example expensive external inference procedure require 560 s depending complexity object mesh 63 Example queries supported KnowRob In section explain different representations contribute overall reasoning capabilities KnowRob In particular emphasize beneﬁt having common representation language supports wide range queries combine different kinds information different sources Reasoning robot capabilities When processing instructions novel task assume required ca pabilities available robot The able decide important components capabilities missing comparing dependencies task description model available capabilities While instructions usually come suitable dependency speciﬁcations inherited par ent classes action ontology actions task derived explained Section 53 The following example queries ask components capabilities required task MakingPancakes The returned depen dencies inherited classes Reaching PickingUpAnObject subactions MakingPancakes task derived The lower queries compare required components capabilities available given robot identify missing ones These examples robot models task descriptions action ontology combined query M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 165 required_comp_for_actionkrMakingPancakes M M srdl2compArmMotionController M srdl2compArmComponent required_cap_for_actionkrMakingPancakes M M srdl2capPickingUpAnObjectCapability M srdl2capArmMotionCapability missing_comp_for_actionkrMakingPancakes pr2PR2Robot1 M false missing_cap_for_actionkrMakingPancakes pr2PR2Robot1 M M srdl2capPickingUpAnObjectCapability Exchanging information robots As long hardware components available robot try launch software components provide missing capabilities Missing software components detailed instructions subtasks environment maps object models downloaded webbased knowledge bases RoboEarth 51 For formulating queries integrating results existing knowledge base important information language The representation language RoboEarth 45 subset representations described paper information described language simply loaded KnowRob The following query downloads environment map object model formulated partof relation building ﬂoor room Section 42 After download automatically downloads models object classes instances appear map available re_request_map_forkrroomNumber 3001 krfloorNumber 3 krstreetNumber 45 rdfslabel Karlstrasse M Parsed mapks_3001 001 sec 211 triples Missing object models Model Cup Parsed cupdarkgray_cupowl 001 sec 12 triples M roboearthmapks_3001 Locating objects environment To ground abstract object descriptions instruction actual objects environment robot needs add actions searching objects retrieving storage locations If objects locations known simply looked environment map Section 42 case Then reason likely locations given available knowledge locations objects properties This example generic rules storage locations 3 based semantic similarity objects environment explained Section 41 If inferred location inside container robot query semantic map articulation model parameterize action opening container The following query example obtain opening trajectory container inferred likely storage location milk result Fig 12 left storagePlaceForStPlace krCowsMilkProduct owl_hasStPlace kropeningTrajectory Traj findallP owl_hasTraj krpointOnTrajectory P Traj Integrating experiences observations human actions Observations human actions memorized experiences provide valuable information objects motions locations action parameters In kinds memories stored instances respective action classes explained Section 52 This way retrieving examples execution action reduces reading instances respective action class An example query motion taking dinner plate cupboard given results visualized Fig 12 right This query combines information action instances action object ontology logged continuous movements owl_individual_ofA krTakingSomething owl_tripleA krobjectActedOn Obj owl_individual_ofObj krDinnerPlate owl_tripleA krtrajectoryArm Tr owl_tripleTr krpointOnArmTrajectory P 166 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 Fig 12 Left Opening trajectory refrigerator result query open likely storage place milk Right Trajectory taking plate cupboard selected observations human performing tablesetting task Selecting functional object parts Using partbased object representation automatically identify locate relevant functional object parts CAD models Once object recognized scene relative locations translated sceneglobal coordinates robot use interacting object Below example queries needed selecting right parts pouring pancake batter pancake maker For picking bottle pancake mix robot query handle bottle instance following query owl_triplemapmix1 krproperPhysicalParts Part annotation_handlePart krHandle Part krCone_wtOvROry For controlling pouring motion bottle needs controlled opening A reasonably general heuristic assume cone generalized cylinder bottle cap This heuristic rule formulated follows based geometric primitives identiﬁed CAD model selecting cones sorting based z coordinate This example shows logical rules formulated knowledge base evaluated object components extracted geometric analysis bottle_capObj Cap findallZP rdf_triplekrproperPhysicalParts Obj P owl_individual_ofP krCone objpart_posP __Z ConePos keysortConePos ConePosAsc lastConePosAsc _Cap bottle_capkrpancakemix1 Cap Cap krCone_vcRxyUbK 64 Example use cases physical robot The KnowRob applied experiments physical robots Fig 13 shows examples tasks different robots The left pictures drink serving task performed PR2 robot left Amigo robot center Both robots execute task description Section 53 parameterize semantic models environment Section 42 drink pack served Section 41 articulated model cabinet describes door opened Section 45 The robots abstract models hardware capabilities Section 46 decide able perform task The right image Fig 13 shows pancake making task realized PR2 robot In task KnowRob representing actions performed environment model objects manipulated Especially actions pouring batter pancake maker ﬂipping pancake include complex motions parameterized partbased object models automatically derived CAD models Section 45 Based models robot determine parts objects needs interact grasp spatulas handles consider position bottle opening pouring M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 167 Fig 13 Example applications KnowRob physical robots The PR2 left Amigo robot center serve drink cupboard different environments based semantic models KnowRob The pancake making task right involved objects modeled KnowRob executed CRAM planbased controllers PR2 robot 65 Opensource release community adoption KnowRob available opensource software years research groups collaborative research projects chosen knowledge base robot applications While classical evaluation measure breadth applications thirdparty researchers use opinion indication usability usefulness For example European research projects use KnowRob representing knowledge exchanged robots RoboEarth5 integrating information Web task demonstrations given humans RoboHow6 elderlycare robots SRS7 assembly tasks industrial applications SMErobotics8 reasoning safe humanrobot cooperation SAPHARI9 multirobot searchandrescue tasks alpine disaster scenarios SHERPA10 Other published applications include underwater robotics multiplayer online games use spatiotemporal object representation virtual scenes To promote use knowledge representation reasoning methods robotics applications cre ated webbased version KnowRob called OpenEASE Its core formed KnowRob knowledge base runs robot users robots access query knowledge base Internet WebSocket interface11 OpenEASE require installation offers rich set browserbased visualizations query results 7 Discussion related work In paper discussed structure knowledge base robots help tasks Our main insight need combination different knowledge areas different knowledge sources different infer ence mechanisms cover breadth depth required knowledge inferences At time components need integrated coherent knowledge base robot combine different knowledge sources infer ence methods single query integrate results We use shared ontology common representation Prolog interlingua integrating inference techniques Finding appropriate representations robots knowledge base research topic decades dating seminal work Shakey robot 31 internal world model based predicate logics Compared Shakey modern robots perception techniques handle complexity real scenes manipulation capabilities allow interact objects Both aspects lead signiﬁcantly complex scene representations massive increase knowledge actions objects required performing actions While methods developed AI community representing reasoning temporal rela tions action effects changing situations focus individual inference problems Allens interval calculus 1 example mainly reasoning temporal intervals Region Connection Calculus 34 extends twodimensional spatial problems The Situation Calculus 2535 related Fluent calculus 47 focus repre sentation reasoning changing domains caused robot actions The Qualitative Process Theory Forbus 13 allows qualitative inference physical chemical processes Planning languages like STRIPS 12 PDDL 16 Hierar 5 http wwwroboearth org 6 http wwwrobohoweu 7 http wwwsrsproject eu 8 http wwwsmerobotics org 9 http saphari eu 10 http sherpaproject eu 11 http wwwopenease org 168 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 chical Task Networks 9 specialize generation plans achieving given goal Other formalized approaches representing robots knowledge 48 allow reasoning robot knows know lack support temporal reasoning detailed spatial representations information object types processes environment Similar reasoning methods knowledge bases partially cover robots needs Generalpurpose knowledge bases like Cyc 23 SUMO 30 provide large breadth encyclopedic knowledge lack depth topis like object manipulation required robots Recent efforts automate construction knowledge bases extracting encyclopedic knowledge sources like Wikipedia 554017 provide knowledge specialized areas directly relevant robotics countries people historic events On end representations developed robotics largely focused modeling reasoning uncer tainty leading development sophisticated specialpurpose probabilistic models 49 However models specialized single modality example perception 19 articulation model learning 39 robot localization 8 usually lack clear semantics Just recently research semantic environment maps started investigate models combine spatial grounded semantic representations 1558 Wyatt et al present integrates geometric conceptual spatial representations planning learning techniques 57 The able reason knowledge gaps tries resolve autonomous learning object manipulation tasks In research try combine parts approaches common provide robots compre hensive knowledge inference capabilities The representation object poses instance similar Fluent calculus 47 stores provenance information robot believes predicts desires object location This allows interpretation information describing different possible world states causing conﬂicts knowledge base important belief results noisy perception The action representation hierarchical partiallyordered plans prerequisites effects temporal information related Hi erarchical Task Networks 9 extended qualitative projection methods processes started sideeffects actions inspired Qualitative Process Theory Forbus 13 Inference temporal relations actions events implemented according Allens interval calculus 1 All inferences combined Prolog queries read required information knowledge stored OWL statements return results terms OWL descriptions The knowledge base populated automatically perception results log data robot actions Procedural attachments allow symbolic inference subsymbolic data computing semantic information demand query time With capabilities KnowRob signiﬁcantly expressive ﬂexible robot knowledge bases purely rely limited OWL inference example ORO 22 OURK 24 Acknowledgements This work supported EU FP7 Projects RoboEarth grant number 248942 RoboHow grant number 288533 ACat grant number 600578 References 1 J Allen Maintaining knowledge temporal intervals Commun ACM 26 11 1983 832843 2 R Arnaud M Barnes COLLADA Sailing Gulf 3D Digital Content Creation AK Peters Ltd 2006 3 M Beetz U Klank I Kresse A Maldonado L Mösenlechner D Pangercic T Rühr M Tenorth Robotic roommates making pancakes 11th IEEERAS International Conference Humanoid Robots Bled Slovenia 2011 4 M Beetz M Tenorth D Jain J Bandouch Towards automated models activities daily life Technol Disabil 22 12 2010 2740 5 M Beetz M Tenorth J Winkler OpenEASE knowledge processing service robots roboticsAI researchers IEEE International Conference Robotics Automation ICRA Seattle Washington USA 2015 accepted publication 6 RA Brooks Elephants dont play chess Robot Auton Syst 6 1990 315 7 E Davis A logical framework solid object physics Technical report 245 1986 8 H DurrantWhyte T Bailey Simultaneous localization mapping 1 IEEE Robot Autom Mag 13 2 June 2006 99110 9 K Erol J Hendler D Nau HTN planning complexity expressivity Proceedings National Conference Artiﬁcial Intelligence John Wiley Sons LTD 1994 pp 11231128 10 C Fellbaum WordNet An Electronic Lexical Database MIT Press USA 1998 11 D Ferrucci E Brown J ChuCarroll J Fan D Gondek AA Kalyanpur A Lally JW Murdock E Nyberg J Prager N Schlaefer C Welty Building Watson overview DeepQA project AI Mag 31 3 2010 5979 12 RO Fikes NJ Nilsson STRIPS new approach application theorem proving problem solving Technical report 43R AI Center SRI Interna 13 K Forbus Qualitative process theory Artif Intell 24 1984 85168 14 M Fox D Long PDDL21 extension PDDL expressing temporal planning domains J Artif Intell Res 20 2003 61124 15 C Galindo JA FernándezMadrigal J González A Saﬃotti Robot task planning semantic maps Robot Auton Syst 56 11 2008 955966 16 M Ghallab A Howe C Knoblock D McDermott A Ram M Veloso D Weld D Wilkins PDDL planning domain deﬁnition language AIPS98 tional 1971 planning committee 1998 17 J Hoffart F Suchanek K Berberich G Weikum Yago2 spatially temporally enhanced knowledge base Wikipedia Artif Intell 194 2013 2861 18 LP Kaelbling ML Littman AR Cassandra Planning acting partially observable stochastic domains Artif Intell 101 12 1998 99134 19 D Kragic M Vincze Vision robotics Found Trends Robot 1 1 2009 178 M Tenorth M Beetz Artiﬁcial Intelligence 247 2017 151169 169 20 L Kunze ME Dolha E Guzman M Beetz Simulationbased temporal projection everyday robot object manipulation Yolum Tumer Stone Sonenberg Eds Proc 10th Int Conf Autonomous Agents Multiagent Systems AAMAS 2011 Taipei Taiwan IFAAMAS 2011 21 L Kunze T Roehm M Beetz Towards semantic robot description languages IEEE International Conference Robotics Automation ICRA Shanghai China 2011 pp 55895595 22 S Lemaignan Grounding interaction knowledge management interactive robots PhD thesis CNRS Laboratoire dAnalyse et dArchitecture des Systèmes Technische Universität München Intelligent Autonomous Systems lab 2012 23 D Lenat CYC largescale investment knowledge infrastructure Commun ACM 38 11 1995 3338 24 GH Lim IH Suh H Suh Ontologybased uniﬁed robot knowledge service robots indoor environments IEEE Trans Syst Man Cybern Part A 25 J McCarthy Situations actions causal laws Technical report Stanford University 1963 reprinted M Minsky Ed Semantic Information Pro Syst Hum 41 3 2011 492509 cessing MIT Press 1968 26 D McDermott Robot planning AI Mag 13 2 1992 5579 27 D McDermott The formal semantics processes PDDL Proceedings ICAPS Workshop PDDL 2003 28 L Morgenstern Midsized axiomatizations commonsense problems case study egg cracking Stud Log 67 3 2001 333384 29 L Mösenlechner M Beetz Parameterizing actions appropriate effects IEEERSJ International Conference Intelligent Robots 30 I Niles A Pease Towards standard upper ontology Proceedings International Conference Formal Ontology Information Systems Systems IROS San Francisco CA USA 2011 vol 2001 ACM 2001 pp 29 31 NJ Nilsson Shakey robot Technical report 323 AI Center SRI International Menlo Park CA USA 1984 32 D Pangercic M Tenorth D Jain M Beetz Combining perception knowledge processing everyday manipulation IEEERSJ International Conference Intelligent Robots Systems IROS Taipei Taiwan 2010 pp 10651071 33 D Pangercic M Tenorth B Pitzer M Beetz Semantic object maps robotic housework representation acquisition use 2012 IEEERSJ International Conference Intelligent Robots Systems IROS Vilamoura Portugal 2012 34 DA Randell Z Cui AG Cohn A spatial logic based regions connection Proceedings 3rd International Conference Knowledge Representation Reasoning 1992 35 R Reiter The frame problem situation calculus simple solution completeness result goal regression Artiﬁcial Intelligence Mathematical Theory Computation Academic Press Professional Inc 1991 pp 359380 36 R Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems MIT Press 2001 37 M Schuster D Jain M Tenorth M Beetz Learning organizational principles human environments IEEE International Conference Robotics Automation ICRA St Paul MN USA 2012 38 B Siciliano O Khatib Eds Springer Handbook Robotics Springer Berlin Heidelberg 2008 39 J Sturm C Stachniss W Burgard Learning kinematic models articulated objects J Artif Intell Res 2011 40 F Suchanek G Kasneci G Weikum Yago core semantic knowledge Proceedings 16th International Conference World Wide Web 41 M Tenorth M Beetz Exchange actionrelated information autonomous robots 12th International Conference Intelligent Autonomous 42 M Tenorth M Beetz A uniﬁed representation reasoning robot actions processes effects objects 2012 IEEERSJ International Conference Intelligent Robots Systems IROS Vilamoura Portugal 2012 43 M Tenorth M Beetz KnowRob knowledge processing infrastructure cognitionenabled robots Int J Robot Res 32 5 2013 566590 44 M Tenorth U Klank D Pangercic M Beetz Webenabled robots robots use Web information resource IEEE Robot Autom Mag ACM 2007 pp 697706 Systems 2012 18 2 2011 5868 45 M Tenorth AC Perzylo R Lafrenz M Beetz Representation exchange knowledge actions objects environments RoboEarth framework IEEE Trans Autom Sci Eng 10 3 2013 643651 best paper award ﬁnalist 46 M Tenorth S Profanter F BalintBenczedi M Beetz Decomposing CAD models objects daily use reasoning functional parts IEEERSJ International Conference Intelligent Robots Systems IROS Tokyo Big Sight Japan 2013 pp 59435949 47 M Thielscher Introduction ﬂuent calculus Electron Trans Artif Intell 2 1998 179192 48 M Thielscher Representing knowledge robot International Conference Principles Knowledge Representation Reasoning Breck enridge CO USA 2000 pp 109120 RECowl2syntax20091027 2009 49 S Thrun W Burgard D Fox Probabilistic Robotics MIT Press Cambridge 2005 50 W3C OWL 2 Web ontology language structural speciﬁcation functionalstyle syntax World Wide Web Consortium httpwwww3orgTR2009 51 M Waibel M Beetz R DAndrea R Janssen M Tenorth J Civera J Elfring D GálvezLópez K Häussermann J Montiel A Perzylo B Schießle O Zweigle R van Molengraft RoboEarth world wide web robots IEEE Robot Autom Mag 18 2 2011 6982 52 J Wielemaker G Schreiber B Wielinga Prologbased infrastructure RDF performance scalability D Fensel K Sycara J Mylopoulos Eds The Semantic Web Proceedings ISWC03 Sanibel Island Florida LNCS vol 2870 Springer Verlag Berlin Germany 2003 pp 644658 53 J Wielemaker T Schrijvers M Triska T Lager SWIProlog Theory Pract Log Program 2012 6796 54 J Winkler M Tenorth AK Bozcuoglu M Beetz CRAMm memories robots performing everyday manipulation activities Adv Cogn Syst 3 2014 4766 55 F Wu DS Weld Autonomously semantifying Wikipedia CIKM 07 Proceedings Sixteenth ACM Conference Conference Information Knowledge Management ACM New York NY USA 2007 pp 4150 56 Z Wu M Palmer Verbs semantics lexical selection Proceedings 32nd Annual Meeting Association Computational Linguistics Association Computational Linguistics Morristown NJ USA 1994 pp 133138 57 JL Wyatt A Aydemir M Brenner M Hanheide N Hawes P Jensfelt M Kristan GJM Kruijff P Lison A Pronobis K Sjöö D Skoˇcaj A Vreˇcko H Zender M Zillich Selfunderstanding selfextension systems representational approach IEEE Trans Auton Ment Dev 2 4 2010 282303 58 H Zender O Martínez Mozos P Jensfelt G Kruijff W Burgard Conceptual spatial representations indoor mobile robots Robot Auton Syst 56 6 2008 493502