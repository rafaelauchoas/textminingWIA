Artiﬁcial Intelligence 259 2018 3251 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Optimal defense election control deleting voter groups Yue Yin Key Lab Intelligent Information Processing ICT CAS University Chinese Academy Sciences Beijing China b Electrical Engineering Computer Science Vanderbilt University Nashville TN United States c School Computer Science Engineering Nanyang Technological University Singapore d Dept Computer Science Ariel University Israel Yevgeniy Vorobeychik b Bo An c Noam Hazon d r t c l e n f o b s t r c t Article history Received 5 June 2017 Received revised form 7 February 2018 Accepted 15 February 2018 Available online 21 February 2018 Keywords Election control Protecting elections Security games Election control encompasses attempts external agent alter structure election order change outcome This problem fundamental theoretical problem social choice major practical concern democratic institutions Consequently issue received considerable attention particularly pertains different voting rules In contrast problem election control prevented deterred largely ignored We introduce problem optimal defense election control including destructive constructive control manipulation allowed granularity groups voters voting locations denial ofservice attack defender allocates limited protection resources prevent control We consider plurality voting computationally hard prevent types control destructive control performed polynomial time For defense destructive control present doubleoracle framework computing optimal prevention strategy We defender attacker best response subproblems NPcomplete develop exact mixedinteger linear programming approaches solving fast heuristic methods We extend general approach develop effective algorithmic solutions defense constructive control Finally generalize model algorithmic approaches consider uncertainty voter preferences Experiments conducted synthetic real data demonstrate proposed computational framework scale realistic problem instances1 2018 Elsevier BV All rights reserved Principle corresponding author Corresponding author Email addresses melody1235813 gmail com Y Yin yevgeniyvorobeychik vanderbilt edu Y Vorobeychik boan ntu edu sg B An noamh ariel ac il N Hazon 1 A preliminary version work appeared Proceedings 25th International Joint Conference Artiﬁcial Intelligence IJCAI16 68 There major advances article Whereas earlier work considered defense destructive control extended model consider defense constructive control ii We analyzed time complexity preventing constructive control proposed heuristic algorithm computes defense strategy prevent constructive control polynomial time certain circumstances iii We proposed mixed integer linear programming approach compute strong Stackelberg equilibrium game defense constructive control scalable approximation algorithm iv We performed detailed experiments evaluate proposed algorithms httpsdoiorg101016jartint201802001 00043702 2018 Elsevier BV All rights reserved Y Yin et al Artiﬁcial Intelligence 259 2018 3251 33 1 Introduction Democratic institutions rely integrity voting process A major threat integrity possibility process subverted malicious parties ends Indeed actual incidents demonstrated real attempts vote manipulation control bear concern For example 2013 election Pakistan marred series electionday bombings shootings resulting 150 people dead injured attempt subvert voting process 57 2010 Sri Lanka election exhibited 84 major 202 minor incidents pollrelated violence 7 With dawn electronic Internet voting additional threat election control manipulation cyber attacks electronic Internet voting systems emerged number documented demonstration attacks 3 62 While recent allegations US deliberate cyber attacks aimed inﬂuencing election outcomes speciﬁcally electronic voting systems 61 collective evidence suggests vulnerable targets near future Consequently cyber security experts repeatedly urged deployment better auditing systems electronic voting systems US elections arguing elections successfully manipulated targeted attacks voting machines polling places example battleground states 56 However auditing systems laborious expensive systematic methods selective auditing deployed date 33 We consider general problem protecting elections malicious subversion example deployment enhanced physical security voting locations strategies choosing electronic voting machines voting districts audit We model attacks elections targeting voter groups voting machines precincts order change identity election winner problem commonly known prior literature election control The study computational complexity election control initiated Bartholdi et al 4 considered problem perspective computational complexity Since received considerable attention prior liter ature Section 2 In literature voting rule viewed resistant control NPhard vulnerable Many voting rules shown resistant types control pluralitywhich widely usedcan controlled voter deletion polynomial time 427 However control usually studied granularity indi vidual voters protection considered designing voting rules NPhard control 1928 While considerations crucial understand vulnerability elections limited respects First incidents control described attest control exercised groups voters single tack denialofservice attack voting station polling center bombing extreme example Second NPhardness control insuﬃcient evidence resistance possible solve large instances NPhard problems practice 64 case SAT Resistance election control broader sense allocation limited protection resources prevent attacks speciﬁc voter groups knowledge modeled investigated date To address limitations consider problem optimally protecting elections control We model control denialofservice deletion attack subset voter groups represent polling places electronic vot ing stations goal preventing original winner winning destructive control making candidate win constructive control We focus plurality voting Erdélyi et al 18 constructive control adding deleting partitioning voters model NPhard recently Maushagen Rothe 45 shown NPcompleteness constructive destructive control partitioning voter groups nontrivial pure scoring rule In contrast destructive control decided polynomial time We consider problem defense types control modeling Stackelberg game outside party deploys limited protection resources protect collection voter groups allowing randomization adversary responds attempting subvert control election Speciﬁcally defense destructive control modeled zerosum game defense constructive control modeled nonzerosum game Protection resources represent actual physical security polling centers voting stations resources devoted auditing speciﬁc electronic voting systems electoral districts We assume defenders goal ensure candidate wins election control attack We problem choosing minimal set resources guarantee election controlled computation ally hard destructive constructive control For general cases defense destructive control propose doubleoracle framework compute optimal protection We prove defender attacker oracles NPcomplete randomized strategies allowed On positive develop novel mixedinteger linear pro gramming formulations oracles enable compute provably optimal solution protecting elections destructive control Moreover develop heuristic defender attacker oracles signiﬁcantly speed computation framework Our experiments demonstrate effectiveness scalability algorithmic approach For defense constructive control ﬁrst introduce heuristic algorithm compute optimal defender strategies polynomial time certain cases We problem modeled nonzerosum game achieve approximately optimal solution solving zerosum games Indeed experiments approach computes optimal solution original nonzerosum game nearly cases In summary following contributions A new model protecting elections grouplevel election control attacks A polynomialtime algorithm grouplevel destructive control 34 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Complexity analysis guaranteeing election controlled including destructive constructive trol A scalable doubleoracle framework choosing optimal allocation protection resources prevent destructive control Heuristic approximate algorithms computing defender strategies prevent constructive control 2 Related work The study computational complexity election control initiated Bartholdi et al 4 analyzed plurality Condorcet voting types control While Bartholdi et al studied constructive variant control problem goal ensure given candidates victory study destructive variant control goal prevent current winner winning The destructive variant control introduced Hemaspaandra et al 27 analyzed approval voting rule The study election control extended number models voting rules 63940215122423029506765452032494441151653866311743252423955 However consider election control problem granularity individual voters Menton 48 considered range voting voter assign certain scores candidate Consequently voter model similar group setting Unlike model work imposes external upper bound range score voter assign candidate Bulteau et al 10 ﬁrst consider grouplevel election control termed combinatorial voter control They consider control bundles voters need added voters grouped according given bundling function allows overlapping groups In setting voters grouped overlap election control deleting groups voters Recently Erdélyi et al 18 studied election control plurality adding deleting groups voters consider constructive control Finally Chen et al 11 studied constructive destructive control adding deleting groups candidates voters We note broader perspective control voting similar notion control related ﬁelds judgment aggregation 5 weighted voting games 6954 fair division 2 Work Elkind Lipmaa 14 closely related spirit endeavor trying induce hardness manipulation voting protocols design However focus manipulation control designing rules NPhard manipulate limited resources reduce likelihood successful subversion election There extensive research modeling physical security problems Stackelberg games 586313 Much prior work focused attackers attack single target 261 Exceptions involved simultaneousmove scenarios 36 heuristic approaches 59 In contrast consider adversaries attacking multiple tar gets deleting subsets voter groups solving problem optimality In addition payoff structure prior work typically tied assumption singletarget attacks payoffs setting depend deleted voter groups affect voting outcomes Doubleoracle methods previously proposed solving large Stackelberg security games 473460 However oracles model dependent special structure problem requires novel scalable algorithms solving oracles 3 Background Stackelberg security games A generic Stackelberg game players leader f ollower The leader plays ﬁrst The follower plays based leaders action 12 The players Stackelberg game need represent individuals groups cooperate execute joint strategy police force terrorist organization Each player set possible pure strategies representing actions execute Payoffs player deﬁned possible joint purestrategy outcomes A mixed strategy probability distribution pure strategies The payoff functions extended mixed strategies taking expectation purestrategy outcomes Playing mixed strategy allows player randomize actions cases increase payoffs By playing later follower knowledge leaders strategy speciﬁcally knowledge distribution pure strategies chosen defender defender plays mixed strategy act accordingly optimize payoffs Stackelberg games model defenderattacker strategic interaction security domains class Stackelberg games certain restrictions payoffs called Stackelberg security games 58 In Stackelberg security game framework defender security force modeled leader attacker adversaries role follower In scenario usually set I n targets A pure strategy defender deﬁned s protect targets pure strategy attacker deﬁned attack targets Given strategy pair s payoff defender represented u D s payoff attacker represented u As Let S A represent strategy space defender attacker respectively Each player payoff matrix based strategies A mixed strategy defender deﬁned x xs s S xs representing probability pure strategy s played For follower Stackelberg game optimal response defenders action pure strategy Y Yin et al Artiﬁcial Intelligence 259 2018 3251 35 cid2 pure strategies attacker considered Given strategy pair x payoff defender sS xsU D s payoff attacker deﬁned u A x deﬁned u D x The Strong Stackelberg Equilibrium SSE usually adopted solution concept Stackelberg security games 1 In concept attacker responds best defenders strategy breaking ties favor defender2 The defender chooses strategy optimize utility given attackers best response Formally Strong Stackelberg Equilibrium deﬁned follows sS xsU Ax cid2 Deﬁnition 1 Let gx x attackers response function A strategy pair x gx forms SSE satisﬁes 1 The defender plays best response u D x 2 The attacker plays best response gx gx f x u D x gx x f x argmaxaA u Ax set attackers best sponses 3 The attacker breaks ties favor defender u D x gx u D x f x Many literature use extension generic Stackelberg games Bayesian Stackelberg games model defenderattacker strategic interaction 3552 Such games allow multiple types attackers Each type attacker strategy space payoff matrix A type prior probability representing likelihood occurrence The defender commits mixed strategy knowing prior distribution exact type attacker faces The Strong Stackelberg Equilibrium Bayesian Stackelberg games similar Deﬁnition 1 leader maximizes expected utility types attackers assuming attacker type chooses best response breaks ties favor defender 4 Model Our model attacks elections based prior literature investigating election control In model control occurs granularity voter groups To begin assume attacker defender know net voting tallies necessarily individual votes voter group We relax assumption Section 7 Formally suppose set I n nonoverlapping groups voters set candidates C voters preferences For group I let tic tally votes candidate c group Let tc tic total vote tally c C Let ω C candidate won original set voters ω arg maxc tc The attacker delete subset k voter groups disenfranchise voters groups example attacking k polling stations cid2 We study destructive control attackers goal prevent original winner winning election constructive control attacker wants let speciﬁc candidate original winner win election Our investigation focused plurality voting single candidate selected voter candidate votes wins assume tiebreaking rule adversarial defender Once group attacked deleted votes members group removed total tally achieved candidate changes correspondingly In case destructive control attackers goal prevent ω winning In constructive control attackers goal candidate choice υ C υ cid7 ω win The defenders goal defend type control ensure original winner wins election despite control Formally problems deﬁned follows Deﬁnition 2 Grouplevel destructive control Given set C candidates set V voters represented preference order set I nonoverlapping groups voters nonnegative integer k Let ω candidate wins plurality rule voters V vote We asked exists set voters groups Sa I Sa k remove V voters Sa plurality winner ω Deﬁnition 3 Grouplevel constructive control Given set C candidates set V voters represented preference order set I nonoverlapping groups voters nonnegative integer k Let c certain candidate win plurality rule voters V vote We asked exists set voters groups Sa I Sa k remove V voters Sa plurality winner c Deﬁnition 4 Defense grouplevel election control Given set C candidates set V voters represented preference order set I nonoverlapping groups voters nonnegative integers k m Let ω candidate wins plurality rule voters V vote We asked exists set voters groups Sd I Sd m selection voters groups Sa I Sa Sd Sa k remove V voters Sa plurality winner ω 2 This guarantees existence equilibrium tiebreaking rules Moreover easy defender ensure small change strategy attacker strictly prefer defenderpreferred target sacriﬁcing minimal utility 36 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Table 1 Table complexity Case Grouplevel destructive control Grouplevel constructive control Preventing destructive control Preventing constructive control Complexity poly time Theorem 1 NPcomplete 18 NPcomplete Theorem 2 coNPhard Theorem 3 We model protection decisions Stackelberg game defender elections acting leader allocates m protection resources voter groups patrols polling stations voting districts audited attacker follower subsequently decides k groups attack Formally let s cid12si 1 ncid13 denote pure strategy defender si 0 1 indicates voter group protected Similarly encode attackers pure strategy vector binary ai indicates group attacked A group deleted attacked ai 1 protected si 0 We use S A represent pure strategy space defender attacker respectively Given pair strategies s let W cs 0 1 indicator denoting candidate c wins election Notice value W cs easy compute given s need count votes remaining groups The defenders utility W ωs utility attacker W ωs destructive control W υ s constructive control attacker wishes candidate υ wins We allow defender commit randomized strategy attacker observes randomization actual realizations voter groups protected This motivated fact attacks typically require signiﬁcant preparation based empirical observations protection decisions reconnaissance activities observing allocation defensive resources audits past elections replicating algorithmic tools defenders compute randomized defense strategies information likely publicly available transparency standards democratic institutions 58 Since attacker chooses best response defenders strategy suﬃces consider pure strategy attacks Let x denote defenders randomized mixed strategy xs probability pure strategy s S Given mixed strategy x defender pure strategy attacker probability particular candidate c wins P cx sS xs W cs Thus expected utility defender P ωx attackers expected utility P ωx destructive control P υ x constructive control In case destructive control players engaged zerosum game Stackelberg equilibrium strategy defender equivalent Nash equilibrium 37 In constructive control game nonzerosum The distinction destructive constructive control signiﬁcant algorithmic ramiﬁcations setting seen cid2 5 Complexity control protection Our ﬁrst task consider computational complexity grouplevel election control partially addressed prior literature complexity protecting elections control Our results summarized Table 1 51 Complexity grouplevel destructive control It known constructive destructive control plurality deleting individual voters computed polynomial time 427 Allowing attacker select speciﬁc groups appear signiﬁcantly complicate problem Indeed Erdélyi et al 18 showed grouplevel constructive control making candidate υ win deleting voter groups NPcomplete plurality Surprisingly destructive variant grouplevel control computed polynomial time signiﬁcantly generalizing previous result Hemaspaandra et al 27 Intuitively control succeeds long exists candidate c C votes ω k groups removed Consequently attacker consider candidate c time checking k groups deleted c higher vote count ω Moreover ﬁx c C easy check possible votes c ω delete k groups ω favored c Formally let tcω cid12tcω Icid13 vector tcω cid2 tic tiω vote advantage c ω group I For vector tcω deﬁne sumtcω Then sumtcω total difference votes c ω For example suppose tcω cid123 2 1cid13 This means ω votes c ﬁrst groups fewer 1 If attacker attack 2 groups succeed attacking ﬁrst leading c 1 vote left ω The following proposition shows fact suﬃcient delete k groups smallest tcω verify possible c larger vote count ω For convenience deﬁne tcω k portion vector tcω remaining k groups smallest tcω deleted tcω Proposition 1 For given candidate c C possible delete k groups ensure tc tω sumtcω k 0 Proof The direction straightforward sumtcω k 0 deﬁnition tcω k accomplished goal tc tω For direction deleting smallest k elements tcω leaves sumtcω k 0 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 37 impossible ﬁnd subset k groups G I delete tc tω chose k groups cid2 tiω tic sumtcω Since remaining tally difference largest tiω tic consequently added largest possible negative possible c votes ω cid2 ω Algorithm 1 Optimal Election Control Group Deletion 1 c C 2 3 4 tcω k Sort tcω ascending order delete ﬁrst k elements tcω sumtcω k 0 return Attack voter groups corresponding deleted elements 5 return No control approach The complete approach computing grouplevel election control given Algorithm 1 For candidate c ω Lines 14 check exists attack c beats ω based Proposition 1 If ω election control possible The complexity Algorithm 1 OCn log n C ω denoted C attack exists candidates C yields following result Theorem 1 Destructive election control deleting k voter groups accomplished OCn log n time 52 Complexity preventing destructive control To complexity preventing destructive control use reduction known NPcomplete problem hitting set problem deﬁned follows Deﬁnition 5 Hitting set problem Given A set G set U consisting subsets ˆG G Question Does exist hitting set G cid17 m ˆG U G cid17 G G cid17 ˆG cid7 Theorem 2 Checking m protection resources suﬃcient prevent destructive control NPcomplete cid17 Proof Based Theorem 1 problem NP To NPhard reduce hitting set problem Speciﬁcally instance hitting set problem construct election n voter groups exists hitting set G possible prevent control m resources attacker ω lose attacking subset n m unprotected groups Given instance hitting set problem construct election follows There n G voter groups U 1 candidates Each G corresponds voter group Each ˆG U considered label speciﬁc candidate ω For candidate c label ˆG voter group ˆG let tcω 1 c 1 fewer vote ω group let tcω 0 c ω tied group Assume k n m groups attacked For example let G 1 2 3 U 1 2 2 3 2 Then vote states candidates shown Table 2 The direction If exists defender strategy protects m voter groups G cid17 m attacker way control election indicates candidate c element ˆG U voter cid17 ˆG cid7 This exists candidate c voter groups group tcω tcω 1 unprotected attacker successfully attack groups c tied ω remaining votes Thus protected voter groups satisfy ˆG U G cid17 ˆG cid7 required hitting set 1 protected G cid17 G G The direction Given hitting set G attacks unprotected voter groups candidate c C strategy control election cid2 cid17 G defender protect voter groups G Thus attacker ω 1 vote fewer ω Therefore attacker cid17 53 Complexity preventing constructive control To complexity preventing constructive control use reduction known NPcomplete problem set cover problem deﬁned follows Table 2 Example votes Candidates Label 1 1 2 2 2 3 Group 1 Group 2 Group 3 0 0 1 1 0 0 3 2 1 0 1 ω 1 1 1 38 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Table 3 Example votes constructed election Candidates Group 1 Group 2 Group 3 Groups 4 5 Groups 69 Group 10 1 0 1 1 1 0 1 2 0 0 1 1 0 0 3 1 1 0 1 0 1 υ 0 0 0 0 1 0 Label 1 2 2 3 Deﬁnition 6 Set cover problem Given A set G set U consisting subsets ˆG G Question Does exist set cover U cid17 r union U cid17 U U G cid17 Theorem 3 Checking m protection resources suﬃcient prevent constructive control coNPhard Proof We prove Theorem 3 showing instance set cover problem construct election set cover m protection resources suﬃcient prevent constructive control Assume G l U n We construct election l 1 candidates n r 2m voter cid17 U Each c G corresponds groups m number protection resources r size set cover U candidate l 1st candidate Elements U correspond ﬁrst n voter groups ˆG U considered label voter group We consider votes group For ﬁrst n groups group labeled ˆG vote group candidate c G ˆG vote candidates For n 1st group n mth group vote candidate G group For remaining r m groups group contains voter votes l 1st candidate The attackers goal l 1st candidate win l 1st candidate υ If υ original winner voting set assume attacker delete k n r groups Otherwise G votes candidates G add extra group ﬁrst choose candidates c tυ tc 1 votes candidates c vote candidate3 In case assume attacker delete k n r 1 groups For example assume G 1 2 3 U 1 2 2 3 r 2 m 2 Then 4 candidates 10 groups The 10th group added candidate beats υ ﬁrst 9 groups Votes candidates voter group shown Table 3 cid17 Next prove theorem directions cid17 The direction If exists r set cover U Indeed exists r set cover U cid17 m resources suﬃcient protect election attacker strategy υ win attack n r groups labeled U U plus extra group added example attacker attack groups 2 10 In remaining 2r 2m groups υ votes candidate This indicates defender wants completely block attacker group labeled U U extra group group protected Thus m groups vote candidate G group j protected In case attacker strategy attacking target j instead let υ win In example completely block attacker defender needs protect group 2 This indicates groups 4 5 protected Thus attacker turn attack unprotected group let υ win Therefore exists r set cover m resources suﬃcient protect election The direction If exist r set cover m resources suﬃcient protect election This defender protect m groups vote candidate G groups 4 5 example The attacker attack groups υ votes attack n r groups labeled U plus extra group added Since exist r set cover remaining r groups labeled U candidate r votes candidate tie υ attacker succeed Therefore exist r set cover m resources suﬃcient protect election Equivalently m resources suﬃcient protect election exists r set cover cid2 cid17 6 Optimal defense election control The results far appear negative defenders perspective grouplevel control computationally hard prevent However worstcase results Next turn pragmatic question developing practi cal algorithmic approaches protection election control We modeling problem Stackelberg security game defender attacker introduced Section 3 In scenario given pair defenders mixed strategy attackers pure strategy x defenders utility u D x P ωx The tackers utility hand depends form control wish exercise In destructive control settings 3 We add vote c extra group avoid tie game This affect following proof Y Yin et al Artiﬁcial Intelligence 259 2018 3251 39 u Ax P ωx constructive control u Ax P υ x We adopt Strong Stackelberg Equilibrium SSE solution concept formally deﬁned Deﬁnition 1 Next consider defending type election control respectively 61 Defense destructive control If attackers goal perform destructive control defender attacker exactly opposing objectives game zerosum Since SSE Nash equilibria equivalent zerosum games 37 use wellknown linear programming formulation solving zerosum normalform games 12 We formulation CoreLP CoreLPS A maxxp cid3 p p sS xs P ωs A 1a 1b As introduced previous sections x xs s S denotes mixed strategy defender xs representing probability strategy s played CoreLP results mixed strategy defender maximizes defender utility given attacker responds best The central challenge approach requires explicitly enumerate pure strategies defender attacker Since case strategy space players exponential nonstarter We develop Double Oracle approach addressing scalability issue The double oracle framework common approach solving zerosum games players exponential strategy spaces 4734 The idea start small set strategies players compute equilibrium restricted game CoreLP check player best response strategy space improves payoff If strategy exists player added CoreLP solved Otherwise proven resulting restricted equilibrium StackelbergNash equilibrium game The DoubleOracle approach algorithm specify compute best response player strategy space Indeed general require enumeration player strategies The key develop effective approaches compute best responsesthat effective oracles playerswhich problem speciﬁc For example prior approaches 34 applicable case modeling differences Our central contributions section 1 novel mixedinteger linear programming MILP formulations oracles 2 heuristic algorithms speed computation oracles Our doubleoracle method shown Algorithm 2 Line 3 computes mixed strategy equilibrium restricted game x y y dual solution CoreLP representing attackers mixed strategy We use types oracles heuristic oracles allow quickly check existence better responses AOBetter DOBetter attacker defender respectively exact oracles AOMILP DOMILP optimal Algorithm 2 Double Oracle Approach 1 Input Scid17 S Acid17 A 2 3 4 5 6 7 8 9 10 11 x y CoreLPScid17 Acid17 AOBetterx AOMILPx s DOBettery s s DOMILPy s Scid17 Acid17 Acid17 Acid17 Scid17 Scid17 s return x Next exact heuristic oracles attacker defender observing process best response problems NPcomplete 611 Attacker oracle Complexity In Theorem 1 shown destructive control model performed polynomial time However result assumed protection deployed equivalently protection deterministic Surpris ingly protection randomized destructive control refer attackers best response oracle NPcomplete following result attests result S cid17 represents support defenders mixed strategy Theorem 4 Let Scid17 matter s Scid17 set defender strategies Checking exist k groups attack control election played defender NPcomplete candidates 40 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Proof Clearly given k groups attacked easy verify defender able prevent control playing s S cid17 problem NP We prove hardness reduction hitting set problem given Deﬁnition 5 Speciﬁcally instance hitting set problem construct election n voter groups 2 candidates set S cid17 exists attacker strategy control election matter defender strategy s S cid17 defender strategies exists hitting set G played Given instance hitting set problem construct election G 1 voter groups candidates ω candidate c assume attacker attack m groups Each G corresponds voter group assume tcω 1 c fewer vote ω voter group In extra voter group j G 1 Thus c 1 vote ω total Each ˆG U correspond element G assume tcω considered label defenders pure strategy voter group j voter groups G ˆG protected For example assume G 1 2 3 U 1 2 3 This indicates 4 voter groups 3 correspond items G extra voter group defender pure strategies support set labeled item U In ﬁrst voter groups c 1 fewer vote ω group c 2 votes ω In defender strategy labeled 1 2 U groups 3 4 protected In defender strategy labeled 3 U groups 1 2 4 protected cid17 j The direction If exists attacker strategy attacks m voter groups G control election matter defender strategy s S cid17 s labeled ˆG U voter group ˆG tcω Otherwise attacker control election s played Therefore G cid17 G G cid17 m played indicates given defender strategy cid17 ˆG cid7 1 attacked Thus ˆG U G required hitting set cid17 Still consider previous example If m 2 attacker attack voter groups G cid17 2 3 control election matter pure strategy defender plays Correspondingly G required hitting set The direction Given hitting set G cid17 G G cid17 m attacker attack voter groups G s Scid17 1 vote c original voting attacker prevent ω winning matter s S cid17 played defender unprotected voter group tcω cid17 Thus matter 1 attacked Since ω played cid2 cid17 Hardness destructive control defender randomizes interesting theoretical implication context traditional approach resistance elections control identiﬁed computational hardness 14 The fact plurality easy control deterministic defense hard protection randomized considered signiﬁcant reduction vulnerability election control Below step Exact solution Although computing attackers best response oracle NPcomplete develop exact com pact mixedinteger linear program MILP term AOMILP Formally attackers best response involves cid2 sScid17 xs W ωx given mixed strategy x sup minimizing probability ω wins solving minaA port set Scid17 Our ﬁrst step formulate attacker oracle mathematical nonlinear program The main technical challenge involved representing W ωs nontrivial function s We implicitly AOMILP auxiliary binary variable zs AOMILP minai zsec cid3 s 01 sScid17 1 zs xs cid3 cid3 ai k cC ω ec cid3 cC ω ec s s zs 1 s Scid17 cid4cid3 cid5 1 1 siai tcω 0 s Scid17 2a 2b 2c 2d cid2 tcω i1 siaitcω Constraint 2b enforces feasibility attackers strategy vector Next explain Constraints 2c2d Given strategy ω vote difference pair s votes group deleted si 0 ai 1 Thus candidate c C cid2 c ω sumtcω k Note zs 1 ω loses given strategy pair s long exists candidate fewer votes left ω given s sumtcω k 0 Variables ec s introduced check exists candidate Constraints 2c 2d objective ensure exists candidate c s candidates cid6cid2 0 associated zs 1 yielding combination set 0 Thus Constraint 2b pure strategy attacker minimizes probability ω wins given x While AOMP includes nonlinear constraint 2d variables involved binary constraint linearized standard way McCormick inequalities 46 yielding MILP computing attackers best response Speciﬁcally introduce new variables wc si We add s following constraints resulted linear program equivalent original program sai constraint 2d linear related wc vc s corresponding ec s set 1 ec cid7 1 1 siai s vc si cC ω ec s tcω zsec wc cid2 wc s wc s zs wc s zs ec s ec s c s 1 c s 3a 3b Y Yin et al Artiﬁcial Intelligence 259 2018 3251 ai c s 1 n s vc si ai 1 c s 1 n vc si vc si s vc wc si wc wc s 0 1 41 3c 3d 3e Heuristic better response The main issue AOMILP poor scalability However need compute better sponse attacker iteration DoubleOracle method progress quickly heuristically considerably speed equilibrium computation As long ultimately fall MILP check optimality guarantee ﬁnal doubleoracle solution SSE We steps ﬁnd better response attacker First look subset S cid17cid17 Scid17 sScid17cid17 xs 1 p p objective value CoreLP restricted small subset attacker strategies Acid17 previous iteration probability ω wins game given current best attacker strategy Second look attacker pure strategy ω lose matter pure strategy s S cid17cid17 played defender W ωs 0 If successfully ﬁnd set S cid17cid17 s Scid17cid17 pure strategy attacker ω lose probability cid2 sScid17cid17 xs win probability p plays pure strategy Thus better strategy cid17 Acid17 The heuristic approach AOBetter shown Algorithm 3 We ﬁrst sort defender strategies S cid17 creasing order xs obtaining sorted vector S sρ ρth largest element Line 3 We look set S cid17cid17 consisting adjacent strategies S Lines 56 For Scid17cid17 check exists candidate c attacker attacks k areas protected strategy s S cid17cid17 c votes remaining ω If exists candidate corresponding attacker strategy leads ω lose matter s S cid17cid17 played defender better Acid17 Lines 811 If better strategy AOBetter returns set cid2 Algorithm 3 Attackers Better Response AOBetter 1 input Scid17 x p 2 S cid12sρ ρ 1 2 3 cid13 sort s Scid17 3 ρ 1 S 4 decreasing xs p cid17 xsρ Scid17cid17 sρ ρcid17 ρ 1 cid17 1 p ρcid17 S p cid17 p p cid17 p c C ω p cid17 xsρcid17 Scid17cid17 Scid17cid17 sρcid17 ρcid17 ρcid17 1 5 6 7 8 9 10 11 tcω k delete k elements tcω smallest tcω sumtcω k 0 return attack k groups corresponding deleted elements si 0 12 return 612 Defender oracle Hardness defender oracle follows Theorem 2 We proceed develop mathematical programming approach solving practice Exact solution The defenders oracle best response maximize probability ω wins given mixed strategy attacker y cid12 ya Acid17cid13 solve maxsS aAcid17 W ωs ya Just attacker oracle formulation proceed develop nonlinear mathematical integer program compute defenders best response cid2 cid3 za ya DOMILP maxsiza01 cid3 cid3 si m tcω za aAcid17 11siai1 0 c C ω Acid17 4a 4b 4c There important difference formulation attacker oracle particular za 1 defender suc cessfully blocks attack strategy Acid17 attacker strategy previous iteration ω fewer votes remaining ω Constraint 4c ensures za 1 DoubleOracle candidates c C cid2 i1 siaitcω tcω c C 0 Constraint 4b enforces feasibility defenders strategy The resulting DOMILP chooses defender strategy maximizes probability ω wins given ﬁxed tacker mixed strategy y We linearize nonlinear constraint 4c McCormick inequalities 46 obtaining MILP formulation defender oracle W ωs 1 Acid17 ω cid2 42 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Heuristic better response We ﬁrst look subset Acid17cid17 Acid17 attacker oracle Then look defender pure strategy s block attacker strategies Acid17cid17 ensuring ω win probability higher p If strategy better response defender Algorithm 4 presents heuristic procedure aAcid17cid17 ya p similar look S cid17cid17 cid2 aAcid17cid17 ya p Algorithm 4 Defender Oracle Better Response 1 s cid12si 0 1 ncid13 cid2 2 Acid17cid17 3 4 5 6 7 res 0 ω c C cid17 cid12tcω t sumt ai 0 Acid17cid17 cid17 0 res m cid17 cid17cid17 tcω t argmini t cid17 tcω cid17 t si 1 res res 1 cid17 0 ω sumt si 1cid13 c C cid17cid17 t t return s 8 9 10 11 return 62 Defense constructive control Having addressed defense destructive control turn issue constructive control 621 Heuristic algorithm Before addressing equilibrium strategies Stackelberg security game ﬁrst introduce heuristic algorithm computes pure strategy prevent constructive control certain cases While strategies generally hard compute investigated Theorem 3 polynomial time important stricted setting Assume attackers goal let candidate υ win game One defender strategy prevent attacker protect m voter groups certain candidate c C votes υ despite unprotected groups deleted We strategy cdominantstrategy A cdominantstrategy makes tacker fail possibly deterred attacking Since computationally hard defender ensure ω wins ﬁnd cdominantstrategy eﬃciently exists Later experiments strategies exist considerable proportion games especially ones higher defense resourcevoter group ratio Now ﬁx c C easy check exists cdominantstrategy protect m groups c favored υ check attacker υ beat c deleting k unprotected groups favor c υ Similar previous deﬁnition tcω let tcυ cid12tcυ tic tiυ vote advantage c υ group I For vector tcυ deﬁne sumtcυ Then sumtcυ total difference votes c υ The following proposition gives condition determining existence cdominantstrategy For convenience let ec set groups corresponding m 1st largest m kth largest tcυ 0 Let tcυ ec portion vector tcυ remaining elements corresponding groups ec deleted For example assume exists candidate c tcυ cid1210 5 5 3cid13 m 1 k 2 ec includes group corresponding 5 group 3rd largest tcυ 0 ec set group m 1st largest tcυ Icid13 vector tcυ tcυ 3 0 tcυ ec cid1210 5 3cid13 tcυ tcυ tcυ cid2 Proposition 2 For candidate c C exists cdominantstrategy sumtcυ ec 0 Proof First given allocation security resources protects set ψ m groups let υ beat c tackers best response attack unprotected groups suppress advantage c υ group argmaxeeIψek sume loss generality sume sumtcυ e e For direction sumtcυ ec 0 cdominant strategy protect m groups m largest tcυ Thus ec attacker strategy let υ beat c e For direction exists cdominantstrategy protects groups ψ sume cdominantstrategy sumtcυ ec 0 cid2 protecting m groups m largest tcυ sumec Thus Based Proposition 2 propose Algorithm 5 returns cdominant strategy polynomial time exists 622 SSE The key new challenge constructive control setting resulting Stackelberg game longer zerosum use doubleoracle approach directly The SSE strategies computed mixed integer linear program We ﬁrst introduce variable qa 0 1a A indicate attacker plays pure strategy Y Yin et al Artiﬁcial Intelligence 259 2018 3251 43 Algorithm 5 Greedy Heuristic Algorithm 1 c C 2 3 4 tcυ ec Delete set groups m 1st largest m kth largest tcυ sumtcυ ec 0 return Protect voter groups corresponding largest m elements tcυ tcυ 0 5 return No cdominantstrategy exits qa 1 qa 0 Let M large number The program formulated shown following SSEMILP Constraint 5b places upper bound u D x p D played attacker strategies Since objective maximizes p D implies defender plays best response Similarly Constraint 5c forces attacker select best response given x The ﬁrst p A u Ax 0 implies p A large maximal payoff playing attacker strategy The second forces p A u Ax 0 played strategies violated attacker play best response Taken program results SSE strategies players SSEMILP p D max xp p D u D x 1 qaM A 0 p A u Ax 1 qaM A 5a 5b 5c 623 Zerosum approximation The MILP requires explicitly enumerate pure strategies solve game makes ineﬃcient solving large games While doubleoracle approach applied compute optimal solution defender game zerosum use obtain approximate solution problem First consider zerosum game defense destructive control We ωzerosum game convenience Let xω aω equilibrium strategies defender attacker zerosum game let pω 0 probability ω wins game given xω aω Note attackers goal let candidate υ win defender plays xω attacker responds optimally choosing strategy aω argmaxa P υ xω probability υ ω wins given xω aω υ indicates attacker deviates optimal strategy zerosum game makes defender better Consequently solution zerosum game provides lower bound defenders optimal utility constructive control 0 This playing aω υ pω gxω aω υ Though solution ωzerosum game guarantees lower bound wish know differs optimal defender strategy This achieved solving zerosum game term υzerosum game This game identical ωzerosum game defenders goal minimize probability υ wins The Stackelberg equilibrium υzerosum game equivalent Nash equilibria computed way ωzerosum game Let xυ aυ equilibrium strategies defender attacker υzerosum game let pυ 0 probability υ wins game given xυ aυ The following proposition shows 1 pυ 0 upper bound defenders SSE utility game defense constructive control Proposition 3 Under SSE strategies x 1 pυ 0 game defense constructive control defender utility u Dx Proof We prove contradiction If u D x higher 1 pυ maximizes probability υ wins indicates x xυ aυ But case xυ aυ equilibrium strategies contradiction cid2 ω succeeds probability leads higher defender utility υzerosum game 0 υ succeeds probability pυ attackers best response x 0 indicates given x 1 pυ 0 Since Given Proposition 3 observe defenders equilibrium strategy xv υzerosum game optimal strategy defend constructive control upper bound defenders utility tight Intuitively exists pair equilibrium strategies xυ aυ υzerosum game υ ω wins υ wins probability pυ 0 ω wins probability 1 pυ 0 xυ optimal defender strategy defend constructive control Formally following theorem Theorem 5 If exists attacker strategy 1 s best response xυ υzerosum game 2 P ωxυ 1 pυ 0 xv pair SSE strategies game defense constructive control 44 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Proof Since attackers goal υzerosum game perform constructive control let υ win attackers best response xv game defense constructive control Therefore based Proposition 3 xv pair SSE strategies game cid2 The process computing approximately optimal strategy defender defend constructive trol proceeds solving zerosum games choosing better defender strategies Algorithm 6 In practice approach nearly ﬁnds optimal solution experiments low argmaxaAυ P ωxυ aυ best mixed strategy attacker Aυ support set 1 0 1 pυ solve υzerosum game u D Algorithm 6 Zerosum Approximation 1 xυ aυ pυ 2 3 u D 1 4 xω aω solve ωzerosum game 5 Acid17 argmaxaA P υ xω 6 7 u D 2 8 u D 0 return xυ 2 return xυ return xω 1 u D set attackers best responses xω perform constructive control argmaxaAcid17 P ωxω 7 Uncertainty voter preferences Our entire treatment problem far assumed complete information voter preferences attacker defender We assumption relatively straightforward relax technical perspective Specif ically retain assumption attacker complete information assume defender uncertain voter preferences Formally let V denote particular voting preference outcome R V defenders prior distri bution V The defenders goal setting minimize expected probability attacker successfully control election We illustrate defense destructive control section defense constructive control extended analogously Since attacker knows V gives rise Bayesian Stackelberg game V attackers type Let W ω V s binary indicator representing ω wins game given voting preferences V strategy pair s The optimal mixed strategy defender computed solving following LP Bayesian extension CoreLP Section 61 BayesianLPS A P V cid3 sS cid3 max x V R V P V xs W ω V s A V 6a 6b Note formulation amenable double oracle framework solve complete formation game The primary difference attacker oracle run V defender oracle requires modiﬁed objective involving expected probability election controlled respect R V In practice space relevant voting preferences V extremely large collection samples distribution solve linear program BayesianLP solely samples obtain approximately optimal defense 8 Evaluation We evaluate proposed algorithms terms solution quality scalability Experiments run Mac book Air 17 GHz Intel Core i5 4 GB memory Linear mixed integer programs solved CPLEX 1261 We evaluated algorithms synthetic real data For synthetic data randomly generate tally candidate group uniformly 0 100 interval Each bar ﬁgures average 101 samples speciﬁed error bars reﬂecting 95 conﬁdence interval We evaluate solution quality function following problem parameters number attack resources number defense sources number voter groups number candidates Our evaluation real data uses datasets First dataset 2002 French presidential election 38 This dataset consists 2597 votes 16 didates voters 6 districts voter groups The second dataset 12 largest districts state Michigan 2016 US presidential election In election candidates received votes meaningfully involved election control consequently constructive destructive control equivalent dataset Y Yin et al Artiﬁcial Intelligence 259 2018 3251 45 Fig 1 Solution quality synthetic data defense destructive control 81 Solution quality Solution quality approach compared baselines The ﬁrst termed Random uniformly random fense defender plays pure strategy probability The second termed Greedy deterministically protects m groups ω greatest advantage best candidate group Solution quality evaluated terms probability defender succeeds More precisely aim maximize probability original winner ω wins game attacker plays best response defenders strat egy Our ﬁrst evaluation context defense destructive control Figs 1a 1b results function number attack defense resources number voter groups ﬁxed 10 number candidates ﬁxed 4 In Fig 1a number defense resources ﬁxed 2 Fig 1b number attack resources ﬁxed 2 Figs 1c 1d results function number voter groups candidates respectively number resources agents ﬁxed 2 Fig 1c number candidates ﬁxed 4 Fig 1d number groups ﬁxed 10 Stackelberg Equi refers Stackelberg equilibrium solution solution CoreLP signiﬁcantly outperforms baselines experiment settings cases dramatically Next perform similar evaluation context defense constructive control For sample randomly choose candidate original winner assume attackers goal candidate win The Stackelberg equilibrium solution solution SSEMILP The settings Figs 2a2d Figs 1a1d We readily observe setting Stackelberg equilibrium solution clearly outperforms baselines test cases Having established effectiveness proposed algorithmic approach synthetic data evaluate real data sets real election data 2002 French presidential election real election data 2016 American presidential election We begin 2002 French presidential election data start defense destructive control Figs 3a 3b results function number attackerdefender resources The improvement achieved proposed algorithms extreme synthetic data We evaluate solution quality French presidential election data defense constructive control Since 16 candidates total assume attacker wants 15 candidates lost actual election win turn We results averaged 15 cases function number attackerdefender resources Figs 4a 4b Given small sample size error bars standard error 95 conﬁdence intervals plots The Stackelberg equilibrium solution signiﬁcantly outperforms baselines 46 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Fig 2 Solution quality synthetic data defense constructive control Fig 3 Solution quality French Presidential Election data defense destructive control Fig 4 Solution quality French Presidential Election data defense constructive control Y Yin et al Artiﬁcial Intelligence 259 2018 3251 47 Fig 5 Solution quality American Presidential Election data defense destructive control Fig 6 Scalability synthetic data Finally evaluate solution quality 2016 American presidential election data Since destructive constructive control equivalent dataset solution quality results destructive control function number attackerdefender resources Figs 5a 5b As experiments previous data sets Stackelberg equilibrium solution signiﬁcantly outperforms baselines 82 Scalability Next compare scalability proposed algorithms For solving games defense destructive control evaluate CoreLP algorithm proposed double oracle approaches 1 MILP oracles DORA 2 heuristic methods DORABE For solving games defense constructive control evaluate SSE MILP heuristic algorithm labeled HeuAproMILP In algorithm ﬁrst run greedy heuristic algorithm If fails return defense strategy prevent constructive control run zerosum approximation If results zerosum approximation optimal checked based Theorem 5 SSEMILP called solve game The results Fig 6 increased problem size terms number voter groups defender resources doubleoracle approaches signiﬁcantly outperform CoreLP We tested effect better oracles Results DORABE usually takes iterations DORA converge runtime iteration DORABE far SSEMILP scalable HeuAproMILP solve large games eﬃciently The runtime HeuApro MILP barely increases number defense resources increases This mainly greedy heuristic algorithm directly return best defense strategy cases especially defense resources As number voter groups increases shows increasing trend similar DORABE We evaluate effect greedy heuristic algorithm zero sum approximation algorithm solving games defense constructive control Fig 7a shows percentage times greedy heuristic algorithm suc ceeds ﬁnding defender strategy prevent constructive control number defense resources increases Naturally resources leads higher percentage succeeds 7 defense resources number groups ﬁxed 20 Fig 7b shows solution zerosum approximation SSE bar group averaged 500 samples Results solution zerosum approximation extremely close SSE solution cases Indeed 1500 samples zerosum approximation failed return SSE solution number groups 15 48 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 Fig 7 Effect heuristics Fig 8 BayesianLP impact number samples solution quality 83 Uncertainty Finally compare solution quality approach extended account defenders uncertainty voter prefer ences baselines The results qualitatively Bayesian Stackelberg game approach signiﬁcantly outperformed alternatives We consider effect number samples entire voter preference outcome space Bayesian Stackelberg game compute approximate defense uncertainty We study cases low uncertainty variance Gaussian noise 10 high uncertainty tallies candidates drawn uniformly 1 400 variance 20 In cases 60 attacker types drawn distribution ground truth In Figs 8a 8b xaxis number samples taken defender solve BayesianLP yaxis indicates optimal expected success probability attackers We observe experiments samples 6 suﬃce achieve nearoptimal solution Next perform robustness experiments considering impact errors problem parameters We ﬁrst consider defenders knowledge votes accurate sample collection tallies ground truth add standard Gaussian noise votes group candidate We assume defender strategies computed based votes noise attackers best response based original votes compute probability defender wins game given computed defender strategies attackers best response original votes Given defender strategies computed proposed algorithms baselines results games addressing destructive control constructive control shown Figs 9a 9b respectively Even errors proposed algorithms signiﬁcantly outperform baselines cases We consider errors defenders knowledge probability distribution types Bayesian games We ﬁrst set distribution ground truth add Gaussian noise μ 0 σ 2 01 probability type appears project new distribution ensure sum 1 Fig 10a shows solution quality proposed algorithms baselines defense destructive control Stackelberg equilibrium clearly outperforms solutions Fig 10b shows difference defenders utilities computes Bayesian Stackelberg equilibrium distribution noise attackers response based original distribution noise Results slight errors signiﬁcantly affect solution quality Y Yin et al Artiﬁcial Intelligence 259 2018 3251 49 Fig 9 Errors defenders knowledge votes Fig 10 Errors defenders knowledge vote preference distribution 9 Conclusion We study problem optimally protecting election groupdeletioncontrol including destructive constructive control We plurality voting vulnerable grouplevel destructive control resistant structive control In addition computationally hard protect election destructive constructive control settings For defense destructive control propose doubleoracle framework computing optimal protec tion strategy develop compact mixed integer linear programs oracles We propose heuristic oracles speed double oracle framework For defense constructive control present mixed integer linear programming approach compute SSE game Because method intractable propose greedy heuristic algorithm zerosum approximation approaches provide upper lower bounds fenders optimal solution Our experiments demonstrate proposed approaches destructive constructive control effective far alternatives Moreover observe approach constructive control relies zerosum approximations actually computes optimal solution defender nearly instance Acknowledgements This research partially supported National Science Foundation CNS1238959 IIS1526860 IIS1649972 Oﬃce Naval Research N000141512621 Army Research Oﬃce W911NF1610069 AFRL FA87501420180 NRF2015NCRNCR003004 Israel Science Foundation grant No 148814 References 1 B An M Brown Y Vorobeychik M Tambe Security games surveillance cost optimal timing attack execution International Conference Autonomous Agents Multiagent Systems 2013 pp 223230 2 H Aziz I Schlotter T Walsh Control fair division Proceedings TwentyFifth International Joint Conference Artiﬁcial Intelligence 2016 pp 6773 3 J Bannet DW Price A Rudys J Singer DS Wallach HackaVote security issues electronic voting systems IEEE Secur Priv 2 2004 3237 4 JJ Bartholdi CA Tovey MA Trick How hard control election Math Comput Model 16 1992 2740 5 D Baumeister G Erdélyi OJ Erdélyi J Rothe Computational aspects manipulation control judgment aggregation The Third International Conference Algorithmic Decision Theory 2013 pp 7185 661670 Agents MultiAgent Systems 2014 pp 6168 Decision Theory 2015 pp 396413 control Math Log Q 55 2009 425443 Agents MultiAgent Systems 2017 pp 11421150 2015 pp 20452051 50 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 6 N Betzler J Uhlmann Parameterized complexity candidate control elections related digraph problems Theor Comput Sci 410 2009 54255442 7 S Bhattacharjya Low turnout invalid votes mark ﬁrst post war general polls 2010 httpwwwsundaytimes lk 100411 News nws _16 html 8 F Brandt M Brill E Hemaspaandra LA Hemaspaandra Bypassing combinatorial protections polynomialtime algorithms singlepeaked elec torates AAAI Conference Artiﬁcial Intelligence 2010 pp 715722 9 F Brandt V Conitzer U Endriss AD Procaccia J Lang Handbook Computational Social Choice Cambridge University Press 2016 10 L Bulteau J Chen P Faliszewski R Niedermeier N Talmon Combinatorial voter control elections Theor Comput Sci 589 2015 99120 11 J Chen P Faliszewski R Niedermeier N Talmon Elections voters candidate control easy AAAI Conference Artiﬁcial Intelligence 12 V Conitzer T Sandholm Computing optimal strategy commit ACM Conference Electronic Commerce 2006 pp 8290 13 Y Desmedt E Elkind Equilibria plurality voting abstentions Proceedings 11th ACM Conference Electronic Commerce 2010 pp 347356 14 E Elkind H Lipmaa Hybrid voting protocols hardness manipulation International Symposium Algorithms Computation 2005 pp 206215 15 G Erdélyi MR Fellows J Rothe L Schend Control complexity Bucklin fallback voting theoretical analysis J Comput Syst Sci 81 2015 632660 16 G Erdélyi MR Fellows J Rothe L Schend Control complexity Bucklin fallback voting experimental analysis J Comput Syst Sci 81 2015 17 G Erdélyi E Hemaspaandra LA Hemaspaandra Bribery voter control votingrule uncertainty International Conference Autonomous 18 G Erdélyi E Hemaspaandra LA Hemaspaandra More natural models electoral control partition International Conference Algorithmic 2017 10551076 pp 712720 Artif Intell 77 2016 191223 Systems 2013 pp 215222 19 G Erdélyi M Nowak J Rothe Sincerestrategy preferencebased approval voting fully resists constructive control broadly resists destructive 20 G Erdélyi C Reger Y Yang The complexity bribery control group identiﬁcation Proceedings 16th Conference Autonomous 21 P Faliszewski E Hemaspaandra LA Hemaspaandra Multimode control attacks elections J Artif Intell Res 40 2011 305351 22 P Faliszewski E Hemaspaandra LA Hemaspaandra Weighted electoral control J Artif Intell Res 52 2015 507542 23 P Faliszewski E Hemaspaandra LA Hemaspaandra J Rothe Llull Copeland voting computationally resist bribery constructive control J Artif 24 P Faliszewski E Hemaspaandra LA Hemaspaandra J Rothe The shield societies singlepeaked preferences open 25 Z Fitzsimmons E Hemaspaandra LA Hemaspaandra Control presence manipulators cooperative competitive cases International Intell Res 35 2009 275341 manipulation control Inf Comput 209 2011 89107 Joint Conference Artiﬁcial Intelligence 2013 pp 113119 26 J Gan B An Y Vorobeychik Security games protection externality AAAI Conference Artiﬁcial Intelligence 2015 pp 914920 27 E Hemaspaandra LA Hemaspaandra J Rothe Anyone complexity precluding alternative Artif Intell 171 2007 255285 28 E Hemaspaandra LA Hemaspaandra J Rothe Hybrid elections broaden complexitytheoretic resistance control Math Log Q 55 2009 397424 29 E Hemaspaandra LA Hemaspaandra J Rothe The complexity controlling candidatesequential elections Theor Comput Sci 678 2017 1421 30 E Hemaspaandra LA Hemaspaandra J Rothe The complexity online voter control sequential elections Auton Agents MultiAgent Syst 31 31 E Hemaspaandra LA Hemaspaandra H Schnoor A control dichotomy pure scoring rules AAAI Conference Artiﬁcial Intelligence 2014 32 LA Hemaspaandra R Lavaee C Menton Schulze rankedpairs voting ﬁxedparameter tractable bribe manipulate control Ann Math 33 A Horn US recounts ﬁnd evidence hacking Trump win reveal vulnerabilities Guardian 2016 httpswwwtheguardian com news 2016 dec 28 election recount hacking voting machines Accessed 19 October 2017 34 M Jain V Conitzer M Tambe Security scheduling realworld networks International Conference Autonomous Agents MultiAgent 35 C Kiekintveld M Jain J Tsai J Pita F Ordóñez M Tambe Computing optimal randomized resource allocations massive security games International Joint Conference Autonomous Agents Multiagent Systems 2009 pp 689696 36 D Korzhyk V Conitzer R Parr Security games multiple attacker resources International Joint Conference Artiﬁcial Intelligence 2011 37 D Korzhyk Z Yin C Kiekintveld V Conitzer M Tambe Stackelberg vs Nash security games extended investigation interchangeability equivalence uniqueness J Artif Intell Res 41 2011 297327 38 JF Laslier K Van der Straeten A live experiment approval voting Exp Econ 11 2008 97105 39 H Liu H Feng D Zhu J Luan Parameterized computational complexity control problems voting systems Theor Comput Sci 410 2009 pp 273279 27462753 40 H Liu D Zhu Parameterized complexity control problems maximin election Inf Process Lett 110 2010 383388 41 A Loreggia N Narodytska F Rossi KB Venable T Walsh Controlling elections replacing candidates votes International Conference Autonomous Agents Multiagent Systems 2015 pp 17371738 42 K Magiera P Faliszewski How hard control singlecrossing elections Auton Agents MultiAgent Syst 31 2017 606627 43 N Mattei N Narodytska T Walsh How hard control election breaking ties Proceedings TwentyFirst European Conference Artiﬁcial Intelligence 2014 pp 10671068 European Conference AI 2016 pp 277285 44 C Maushagen J Rothe Complexity control partitioning veto maximin elections control adding candidates plurality elections 45 C Maushagen J Rothe Complexity control partition voters voter groups veto scoring protocols Proceedings 16th Conference Autonomous Agents MultiAgent Systems 2017 pp 615623 46 GP McCormick Computability global solutions factorable nonconvex programs Iconvex underestimating problems Math Program 10 47 HB Mcmahan GJ Gordon A Blum Planning presence cost functions controlled adversary International Conference Machine 48 C Menton Normalized range voting broadly resists control Theory Comput Syst 53 2013 507531 49 T Miasko P Faliszewski The complexity priced control elections Ann Math Artif Intell 77 2016 225250 50 M Neveling J Rothe Solving seven open problems oﬄine online control Borda elections AAAI Conference Artiﬁcial Intelligence 2017 1976 147175 Learning 2003 pp 536543 pp 30293035 Y Yin et al Artiﬁcial Intelligence 259 2018 3251 51 2012 pp 14291435 51 D Parkes L Xia A complexityofstrategicbehavior comparison Schulzes rule ranked pairs AAAI Conference Artiﬁcial Intelligence 52 P Paruchuri JP Pearce J Marecki M Tambe F Ordonez S Kraus Playing games security eﬃcient exact algorithm solving Bayesian Stackelberg games International Joint Conference Autonomous Agents Multiagent Systems 2008 pp 895902 53 T Put P Faliszewski The complexity voter control shift bribery parliament choosing rules Transactions Computational Collective 54 A Rey J Rothe Structural control weighted voting games 41st International Symposium Mathematical Foundations Computer Science 55 J Rothe L Schend Challenges complexity shields supposed protect elections manipulation control survey Ann Math Intelligence XXIII Springer 2016 pp 2950 MFCS 2016 pp 8018015 Artif Intell 68 2013 161193 56 M Rubinkam F Bajak Analysis recounts US elections vulnerable hacking Chicago Tribune 2016 httpwwwchicagotribune com news nationworld ct election hacking recount 20161226 storyhtml Accessed 19 October 2017 57 Agencies Staff Pakistani elections hit bomb attacks Guardian 2013 httpswwwtheguardian com world 2013 11 pakistani elections bomb blast karachi Accessed 19 October 2017 58 M Tambe Security Game Theory Algorithms Deployed Systems Lessons Learned Cambridge University Press 2011 59 Y Vorobeychik J Letchford Securing interdependent assets Auton Agents MultiAgent Syst 29 2015 305333 60 Z Wang Y Yin B An Computing optimal monitoring strategy detecting terrorist plots AAAI Conference Artiﬁcial Intelligence 2016 pp 637643 russia index html Accessed 19 October 2017 Cryptography Data Security 2012 pp 114128 61 E Watkins Cheney Putin effort interfere US election CNN 2017 httpwwwcnn com 2017 03 27 politics dickcheney 62 S Wolchok E Wustrow D Isabel JA Halderman Attacking Washington DC internet voting International Conference Financial 63 L Xia V Conitzer Stackelberg voting games computational aspects paradoxes AAAI 2010 pp 805810 64 L Xu F Hutter HH Hoos K LeytonBrown SATzilla portfoliobased algorithm selection SAT J Artif Intell Res 32 2008 565606 65 Y Yang On complexity Borda control singlepeaked elections Proceedings 16th Conference Autonomous Agents MultiAgent Systems 2017 pp 11781186 agent Systems 2015 pp 17291730 66 Y Yang J Guo How hard control multipeaked elections parameterized study International Conference Autonomous Agents Multi 67 Y Yang J Wang Anyone complexity challenge resolute election controller Proceedings 16th Conference Autonomous Agents MultiAgent Systems 2017 pp 11331141 68 Y Yin Y Vorobeychik B An N Hazon Optimally protecting elections International Joint Conference Artiﬁcial Intelligence 2016 pp 681687 69 M Zuckerman P Faliszewski Y Bachrach E Elkind Manipulating quota weighted voting games Artif Intell 180181 2012 119