Artiﬁcial Intelligence 172 2008 325349 wwwelseviercomlocateartint Graphically structured valuefunction compilation Ronen I Brafman Carmel Domshlak b Department Computer Science BenGurion University Beer Sheva Israel 84105 b Faculty Industrial Engineering Management TechnionIsrael Institute Technology Haifa Israel 32000 Received 24 January 2007 received revised form 3 June 2007 accepted 11 July 2007 Available online 5 September 2007 Abstract Classical work eliciting representing preferences multiattribute alternatives attempted recognize conditions value functions particularly simple compact form making elicitation easier In paper consider preferences discrete domains certain class simple intuitive qualitative preference statements generate compact value functions consistent statements These value functions maintain independence structure implicit original statements For discrete domains representation theorems general previous results However possible maintain compact structure add explicit ordering constraints available outcomes 2007 Elsevier BV All rights reserved Keywords Reasoning preferences Qualitative decision theory Multiattribute decision making 1 Introduction The spectrum practical problems require reasoning preferences extremely wide In paper consider problem eliciting reasoning users ordinal preferences We motivated needs largescale consumer product catalogs area received growing attention ﬁelds database systems AI 156913262931 Online catalogs products information grow continuously grows number lay users accessing catalogs While keyword search provides users means access catalogs user needs shopping contexts typically complex web search In particular users personal preferences price quality features preferences complex Therefore natural expect systems supporting search process aim allow users state actual preferences reasoning preferences improve understanding user needs Unfortunately appears achieving userfriendly robust preference elicitation efﬁcient reasoning elicited information easy The conﬂict desiderata reﬂected conﬂicting forms user asked provide preferences On hand user provides Corresponding author Email addresses brafmancsbguacil RI Brafman dcarmelietechnionacil C Domshlak 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200707002 326 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 numerical value function space products henceforth referred items ordering catalog respect function easy However eliciting quantitative description preferences users generally long involved timeconsuming process unintuitive users Alternatively consider allowing users express preferences naturallanguage like qualitative statements providing pieces preference information like For family car I prefer white color colors ii This car better car iii This minivan better blue iv I like ecologically friendly cars This form preference elicitation considered natural users 18 dealing form preference information received signiﬁcant attention multidisciplinary preference literature works 813193032 Unfortunately preference expressions reasoned efﬁciently ordering given set items required syntactically homogeneous contain statements certain speciﬁc form 814 For instance best knowledge known general class preference expressions containing statements forms ii above1 reasoned efﬁciently Striving enjoy pros qualitative input quantitative representation user preferences paper consider compiling qualitative preference expressions value functions consistent information carried expressions The main contributions paper follows 1 We provide new representation theory generalized additive value functions 215 specify conditions exists particular factored value function consistent known users preference relation Our representation theorems preference orders induced item space certain sets qualitative statements preference importance consistently captured compact generalized additive value function In particular results extend classical representation theorems additive value functions discrete variables 21 As conditions require weaker required additive representation able capture signiﬁcantly wider spectrum sets natural preference statements representable TCPnet model 1012 2 We representation theory utilized computationally efﬁcient methodology eliciting reasoning ordinal preferences users In methodology user provides set qualitative preference statements statements efﬁciently generate compact value function structure based qualitative information supplied user The key existence compact value function consistency preference statements user efﬁciency generation guaranteed representation theory 3 In applications desirable allow users expressing structured preference information direct rankings pairs concrete items 52026 We consider computational consequences supporting general statements preference pairwise item rankings On positive extension straightforwardly supported methodology preserving soundness efﬁciency On negative formally completeness structured valuefunction compilation extremely sensitive adding itemlevel rankings Speciﬁcally completeness valuefunction compilation guaranteed pairwise item rankings minimal impossibility result holds languages generalizing preference statements The rest paper organized follows In Section 2 provide essential background qualitative preference statements targeted work TCPmodel modeling sets statements value functions Section 3 devoted valuefunction compilation progressively complicated classes TCPnets For clarity presentation longer proofs given Appendix A In Section 4 consider extending structured preference information pairwise comparisons completely speciﬁed alternatives provide impossibil ity theorem valuefunction compilation mixed sets statements generalize result general impossibility theorem We summarize list open problems Section 5 1 Later deﬁne forms statements formal manner RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 327 2 Background notation Let Ω space alternative items item described assignment certain ﬁnite set attributes variables X X1 Xn domains domXi respectively Without loss generality item space Ω considered Ω domXi For instance Ω universe descriptions commercial ﬂights certain time period attributes correspond departure time airline Typically set available items subset Ω described database However user familiar items attributes know priori items appear database In work assume domXi ﬁnite Ω ﬁnite To ﬁx basic notation follows use regular uppercase letters X Y variables regular lowercase letters x y values individual variables calligraphic uppercase letters X Y sets variables bold lowercase letters x y assignments sets variables In rest section deﬁne set qualitative preference statements graphical structure analyze type value functions statements compiled 21 Qualitative preference statements Our primary aim build model ordinal preferences given user Ω Our basic assumption exists relatively compact sufﬁciently accurate representation users preferences terms X In turn actually build effective user model obviously need information users preference relation different assignments X Focusing qualitative preference information begin considering types natural preference statements set preferential independence assumptions implicit users speciﬁcation 1 Conditional preference attribute values For example I prefer British Airways Air France statement unconditional value preference domain airline attribute In turn I prefer British Airways Air France morning ﬂights statement conditional value preference domain airline attribute conditioned value departuretime attribute 2 Conditional relative importance pairs attributes For example Departure time important airline statement unconditional relative importance attributes departuretime airline Departure time important airline Im ﬂying business class conditional relative importance statement value class attribute affects relative importance attributes departuretime airline Each statements taken deﬁning partial order items ceteris paribus semantics 19 That user states prefers Delta United mean given ﬂights identical attribute values airline prefer airline Delta airline United If statement conditioned fact ﬂight overnight interpretation holds applies comparison overnight ﬂights Similarly importance relations I state departure time important airline given ﬂights identical departure time airline I prefer provides favorable departure time A set preference statements corresponds union partial orders2 22 TCPnets The language discussed provides relatively rich set qualitative statements outcomes discrete valued attributes We wish compile language compact value functions In 12 shown set preference statements families organized graphical structure called TCPnet 2 This begs question consistency set touch later See 12 details 328 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 extension CPnets model 8 This graphical structure plays important role analyzing compiling language Here introduce TCPnets depth sufﬁcient purposes refer interested reader 12 detailed systematic formalization model TCPnets annotated graphs types edges The nodes TCPnets correspond problem vari ables X subset X variables addressed user statements The ﬁrst type directed edge captures direct preferential dependencies variables edge X Y implies user different preferences Y values given different values X The second directed edge type captures relative importance relations The existence edge X Y implies important satisfy preferences respect X preferences respect Y denoted X cid2 Y The undirected edge type captures conditional importance relations Such edge nodes X Y exists different ditions certain assignments set variables S lead X cid2 Y Y cid2 X absence relative importance X Y Each node X TCPnet annotated conditional preference table CPT This table associates preference ordering domX possible value assignment parents X denoted UX In addition TCP nets undirected edge annotated conditional importance table CIT The CIT associated edge γ X Y describes relative importance X Y given value conditioning variables Sγ Deﬁnition 1 See 12 A TCPnet N tuple cid3X cp ci cpt citcid4 1 X set nodes corresponding problem variables X1 Xn 2 cp set directed cparcs α1 αk cp stands conditional preference A cparc cid3 Xi Xj cid4 N iff preferences values Xj depend actual value Xi For X X let UX Xcid7 Xcid7 Xcid4 cp cid3 3 set directed iarcs β1 βl stands importance An iarc 4 ci set undirected ciarcs γ1 γm ci stands conditional importance A ciarc γ Xi Xj N iff certain conditions variable important relative importance Xi Xj fully determined value selector set Sγ X Xi Xj 5 cpt associates CPT node X X CPTX mapping domUX assignments Xi Xj N iff Xi cid2 Xj Xs parent nodes strict partial orders domX 6 cit associates ciarc γ Xi Xj possibly partial mapping CITγ domSγ orders set Xi Xj 3 For familiar original CPnet model note CPnet simply TCPnet sets ci cit Fig 1 illustrates example TCPnet selecting business ﬂight Israel conference USA borrowed 12 This network consists ﬁve variables standing parameters ﬂight4 DDeparture day Our busy married user prefers ﬂights leaving day D1d conference ﬂights leaving days D2d conference AAirline Our user prefers British Airways Aba KLM Aklm T Departure time When leaving days conference user prefers later night ﬂight Tn earlier day ﬂight Td When leaving day conference preferences reversed SStopovers On day ﬂights user like smoking break prefers indirect ﬂight S1s direct ﬂight S0s On night ﬂights sleeps prefers shorter direct ﬂight CClass On night ﬂight user prefers cheaper economy Ce seats sleeps anyways wants enjoy business class Cb service day ﬂights CParcs CPTs Fig 1 capture preference statements underlying preferential dependencies Our users relative importance relations follows There iarc T A getting suitable ﬂying time 3 That relative importance relation Xi Xj speciﬁed certain values selector set 4 Variables example binary semantics TCPnets deﬁned respect arbitrary ﬁnite domains RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 329 Fig 1 A TCPnet ﬂight selection domain important getting preferred airline There ciarc S C relative importance S C depends values T A corresponding CIT On KLM day ﬂights intermediate stop Amsterdam important ﬂying business class Our user likes casino Amsterdams airport ii On British Airways day ﬂights business class important stopover Smoking areas Heathrow depressing The semantics TCPnet N deﬁned terms preference rankings consistent constraints imposed cpt cit N strict partial orders consistent partial order induced N The local constraints interpreted ceteris paribus For example fact CPT departure time T Tm cid9 Tn given D D1d implies given ﬂights departing day conference differ departure time user prefers leaving morning leaving night Preference alternative values x1 x2 variable X X given assignment u parents UX denoted N x1 cid9u x2 simply N x1 cid9 x2 assignment parent variables u clear context The fact T important A implies given ﬂights identical value T A user prefers T assigned better value regardless value A Similar semantics given conditional importance relation taking account requirement conditioning variables selector set A TCPnet N consistent iff strict partial order cid9 consistent For o ocid7 Ω o cid9 ocid7 implied TCPnet N denoted N o cid9 ocid7 iff holds strict partial orders consistent N preferential entailment respect consistent TCPnet transitive For formal semantics 12 The structure TCPnet shown useful recognizing inconsistency user preference statements b performing efﬁcient inference In Section 3 exploited identifying compact value functions consistent users preferences We reemphasize graphical structure analysis purpose describing preferences desired Users expected specify explicit graphical model need aware existence They simply need verbalize statements kinds discussed earlier The easily construct corresponding TCPnet automatically Nor users required provide statements specify CPTs completely Bayes nets This property especially important practice users required express nuance preferences 23 Value functions GAdecomposition We wish map set preference statements numeric value function A value function v Ω R real valued function deﬁned space possible assignments X item space Value function v consistent possibly partial preference ordering cid2 user iff vo vocid7 o cid9 ocid7 vo cid3 vocid7 o cid2 ocid7 As size Ω exponential number problem variables compactly representable value functions practically useful 330 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 In work focus family compactly representable value functions generalized additive GA value functions The notion GA value functions closely corresponds notion generalized additive independence cardinal utility functions 215 addresses structural assumptions A value function v variables X GA exists cover X subsets X1 Xk cid2 k vX i1 viXi In follows refer variable subsets X1 Xk factors v Notice value function seen GA k 1 working GA value function practically feasible factors sufﬁciently compact number essential factors k small k size Xi bounded constant In general brings specify notion GAdecomposition preference ordering Deﬁnition 2 Given possibly partial preference ordering cid2 Ω domX cover X1 Xk X cid2 GAdecomposable X1 Xk exists realvalued function vX kcid3 i1 φiXi 1 consistent cid2 In particular TCPnet N X GAdecomposable X1 Xk exists realvalued function v Eq 1 ø ocid7 Ω N o cid9 ocid7 vo vocid7 3 From qualitative preferences GA value functions Value functions provide mathematically general efﬁcient way representing reasoning preference information Given value function quickly sort given database items determine topk items However obtaining value function directly user signiﬁcantly involved obtaining set simple preference statements Therefore propose 1 use TCPnet initially organize qualitative preference statements obtained user 2 compile information value function maintains qualitative structure independence assump tions implicit TCPnet 3 use obtained value function model users ordinal preference 4 new information comes user reﬁne value function maintaining independence assump tions implied original TCPnet possible Note basic idea valuefunction compilation framework new considered literature respect forms qualitative preference information 31727 The precise relation previous works established later Section 5 The main theoretical question face Given TCPnet N input efﬁciently generate value function v consistent N Of course trivial consistent TCPnet exists value function consistent Indeed true partial order However like know ﬁnd structured value function sense compact original TCPnet Speciﬁcally like know exists GA value function deﬁned small factors implied structure network To answer question consider progressively complicated classes TCPnets factors GA value functions representing TCPnets relate graphical structure We prove relation showing TCPnet network classes exists GA value function particular set factors Likewise representation results provide concrete computational mechanism generating GA value functions tractable wide class TCPnets 31 GAdecomposition CPnets First consider CPnets 8 TCPnets cparcs start notation Given CPnet N cid3X cp cpt cid4 variables X let UX YX sets parents immediate children X RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 331 Fig 2 CPfamily extended CPfamily X FY denote extended N respectively Let FX X UX denote CPfamily X EF X FX CPfamily X That set EF X contains X parents children parents children This set known Markov Blanket X illustrated Fig 2 Finally given assignments z zcid7 pair subsets Z Z cid7 X respectively z zcid7 compatible denoted z cid12cid13 zcid7 z zcid7 provide value shared variables Z Z cid7 Y YX cid4 The following CPcondition originally introduced 7 deﬁning realvalued value functions representable UCPnets plays central role discussion To understand condition better understand goal CPnet deﬁne consistent value function sum smaller functions depends single family network That like GA value function factors families CPnet Consider family FX variable X Let φX component GA value function corresponds family Consider assignment u parents X φX u function X We expect provide higher values assignment X user prefers given u However condition sufﬁcient ensure value function consistent stated preferences To suppose N x1 cid9u x2 It possible φXx1 u φXx2 u assignment w rest variables vx1 u w vx2 u w This case context w value child X higher given x1 given x2 Thus x2 contribute directly makes contribution assignment higher For illustration consider CPnet N variable X Y parentless X parent Y Let N x1 cid9 x2 x1 x2 domX From semantics TCPnets N x1y cid9 x2y y domY Now let vX Y φXXφY Y X GA value function structure required φXx1 1 φXx2 0 φY y x1 0 φY y x2 2 While condition φXx1 φXx2 satisﬁed φY y x1 φY y x2 violating consistency v N The CPcondition speciﬁed Deﬁnition 3 rules possibility making sum direct indirect contributions favored value smaller favored value Note direct indirect contributions assignment X depend extended family X parents determine direct contribution childrens parents determine indirect contribution Deﬁnition 3 Given CPnet N set nonnegative realvalued functions Φ φX1 φXn FX1 FXn respectively Φ satisﬁes CPconditions N variable X X u domUX x1 x2 domX N x1 cid9u x2 v domEF X X compatible u YXcid3 φXx1 u φYi vi x1 φXx2 u i1 vi value provided v FYi X YXcid3 i1 φYi vi x2 2 Developed Boutilier et al 7 Lemma 1 exploits CPconditions N provide necessary sufﬁcient condition GA value function factors FX1 FXn consistent N 332 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 Lemma 1 See 7 Given CPnet N function vX ncid3 i1 φXi FXi v consistent N iff φX1 φXn satisfy CPconditions N 3 In fact Lemma 1 provides stronger knowledge GAdecomposability N First reasonably suming preferential dependency X UX redundant expect compact GAdecomposition N Second CPconditions actually provide concrete procedure generating value function v 1 Given CPnet N construct linear inequalities L variables stand entries factors φX1 φXn inequalities correspond required instances Eq 2 Let HL polytope deﬁned L 2 If L satisﬁable HL pick solution L The selection instance solving linear program deﬁned L arbitrary linear objective function bounded HL 4 sampling point HL Step 2 correct solution L constitutes value function v form 3 consistent N The complexity L locally exponential number variables inequalities L Ondλ Ond 2μ respectively d maxXX domX λ maxXX FX μ maxXX EF X Finally linear programming P obtain following corollary practical Corollary 2 If CPnet N GAdecomposable CPfamilies maxXX EF X k cid2 n i1 φXi FXi consistent N constructed time polynomial constant k value function vX size N Corollary 2 presents wide class efﬁciently GAdecomposable CPnets However notice far prevents HL Lemma 1 provides guarantees actual GAdecomposability It possible CPnets value functions form 3 simply exist As like assume users statements provide sufﬁcient information value independence incompleteness clearly problematic Fortunately Theorem 3 shows polytopes HL acyclic CPnets nonempty Theorem 3 Every acyclic CPnet GAdecomposable CPfamilies To relate Theorem 3 classical results multiattribute decision theory consider CPnet edges According Theorem 3 CPnet induces additive value function 1 cid4 cid4 n factor Xi consists exactly variable Xi Indeed variables CPnet mutually preferentially independent necessary sufﬁcient condition additive decomposition Theorem 36 21 Thus representation theorem standard additive value functions discrete variables5 special case Theorem 3 As far know results conditional structures generalized additive decomposability exist cardinal utility functions 2 require complex conditions relate simple manner result Example 1 To illustrate procedure valuefunction generation consider CPnet N depicted Fig 3a This CPnet deﬁned binaryvalued variables X Y Z ternary variable U The linear L encoding CPconditions N follows First parentless variable U N u1 cid9 u3 N u2 cid9 u3 YU X FX U X Given CPconditions U 5 Here note classical results additive decomposition cover continuous variables deal discrete variables RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 333 Fig 3 The CPnet Example 1 b The value function generated CPneteach table associated variable captures subfunction corresponding factor φU u1 φXx1 u1 φU u3 φXx1 u3 φU u1 φXx2 u1 φU u3 φXx2 u3 φU u2 φXx1 u2 φU u3 φXx1 u2 φU u2 φXx2 u2 φU u3 φXx2 u2 4 Similarly parentless variable Z N z1 cid9 z2 children YZ Y set FY Z Y X singleton The CPconditions Z φZz1 φY y1 x1 z1 φZz2 φY y1 x1 z2 φZz1 φY y1 x2 z1 φZz2 φY y1 x2 z2 φZz1 φY y2 x1 z1 φZz2 φY y2 x1 z2 φZz1 φY y2 x2 z1 φZz2 φY y2 x2 z2 5 Next consider variable X UX U Considering domU CPT X N x1 cid9u1 x2 Thus given YX Y FY X Y Z φXx1 u1 φY y1 x1 z1 φXx2 u1 φY y1 x2 z1 φXx1 u1 φY y1 x1 z2 φXx2 u1 φY y1 x2 z2 φXx1 u1 φY y2 x1 z1 φXx2 u1 φY y2 x2 z1 φXx1 u1 φY y2 x1 z2 φXx2 u1 φY y2 x2 z2 6 Finally CPT childless variable Y UY X Z N y1 cid9x1z1 y2 N y2 cid9x2z1 y1 N y2 cid9x2z1 y1 Hence CPconditions Y φY y1 x1 z1 φY y2 x1 z1 φY y2 x2 z1 φY y1 x2 z1 φY y2 x2 z2 φY y1 x2 z2 7 Together Eqs 47 provide 15 linear constraints L 19 variables constraints constitute CPconditions N At second step valuefunction generation procedure pick arbitrary solution L numerous ways For instance solving polynomial time 4 quadratic program aiming resolving L margin cid9 0 keeping vector variables positive quadrant ii minimizing cid102norm vector provides solution value function depicted Fig 3b For readability loss generality subtracted cid9 values variables L 334 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 32 GAdecomposition TCPnets ciarcs Now let consider wider class TCPnets TCPnets ciarcs Here assuming TCPnet remains acyclic GAdecomposability class networks N cid3X cp cpt cid4 affected relative importance statements We need change constraints generate value function We begin formalizing new set conditions essential analysis GAdecomposability class networks Deﬁnition 4 Given TCPnet N ciarcs set nonnegative realvalued functions Φ φX1 φXn X Xcid7 N FX1 FXn respectively Φ satisﬁes Iconditions N iarc u domUX x1 x2 domX N x1 cid9u x2 xcid7 domXcid7 ucid7 domUXcid7 compatible u v domEF X X Xcid7 vcid7 domEF Xcid7 X Xcid7 compatible u ucid7 Xcid7 YXcid3 1 xcid7 YXcid3 Y 2 φXx1 u φXcid7 x cid7 1 ucid7 φYi vi x1 x cid7 1 φY cid7 vcid7 x cid7 1 x1 i1 i1 φXx2 u φXcid7 x cid7 2 ucid7 YXcid3 i1 φYi vi x2 x cid7 2 Y Xcid7 YXcid3 i1 φY cid7 vcid7 x cid7 2 x2 8 vi vcid7 xcid7 values provided v vcid7 FYi X Xcid7 F X Xcid7 respectively Note xcid7 1 Y cid7 2 similarly x1 x2 redundant parameters φYi respectively φY cid7 This condition look complicated intuition simple The idea provide constraints value function ensure X important Xcid7 Recall X important Xcid7 given assignments identical variables X Xcid7 prefer better X value regardless value Xcid7 This requirement translates Icondition Previously CPcondition required x1 preferred x2 given u sum contributions factors correspond extended family X higher x1 x2 given ﬁxed context This context consisted extended family X Now require condition hold change value Xcid7 Thus account direct indirect effects change value Xcid7 These depend extended family Xcid7 Thus inequality Eq 8 sum corresponds extended families X Xcid7 It turns I CPconditions constitute TCPnets ciarcs exactly CP conditions constitute CPnets Lemma 4 Given TCPnet N ciarcs function vX N φX1 φXn satisfy CP Iconditions N cid2 n i1 φXi FXi v consistent Notice similarly case CPnets Lemma 4 provides TCPnets ciarcs procedure generating consistent GA value functions form Eq 3 However immediate concern usefulness At ﬁrst sight decomposition likely functional form Eq 3 based preference dependencies completely ignoring importance relations induced iarcs Theorem 5 shows concerns entirely justiﬁed value decomposition form 3 complete acyclic TCPnets ciarcs Since arcs networks directed corresponding notion acyclicity straightforward Theorem 5 Every acyclic TCPnet ciarcs GAdecomposable CPfamilies Theorem 5 shows additional unconditional relative importance relation affect GAdecomposability network assuming remains acyclic Lemma 4 shows GA value function corresponds solution linear L case CPnets Still locally exponential complexity L affected iarcs L consists instances Eqs 2 8 As result number variables L RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 335 Fig 4 TCPnet ciarcs Example 2 b The value function generated TCPnet Ond λ number equations grows On ld 2μ l number iarcs N Notice order description complexity L remains CPnets Corollary 2 restated TCPnets ciarcs equal Example 2 Consider TCPnet N Fig 4a extends CPnet Example 1 iarc X Z The CPconditions N identical Example 1 given linear constraints Eqs 47 The X Z correspond preference X x1 X x2 Iconditions N iarc given U u1 Thus Iconditions N φXx1 u1 φZz1 φY y1 x1 z1 φXx2 u1 φZz2 φY y1 x2 z2 φXx1 u1 φZz1 φY y2 x1 z1 φXx2 u1 φZz2 φY y2 x2 z2 φXx1 u1 φZz2 φY y1 x1 z2 φXx2 u1 φZz1 φY y1 x2 z1 φXx1 u1 φZz2 φY y2 x1 z2 φXx2 u1 φZz1 φY y2 x2 z1 9 Solving linear L obtained union Eqs 47 Eq 9 quadratic pro gramming approach Example 1 generate value function depicted Fig 4b Note difference value functions Figs 3b 4b φXx1 u1 2 lat ter φXx1 u1 3the relative importance preference X getting captured 33 GAdecomposition TCPnets We consider TCPnets capturing types preference statements consisting directed cp undirected ci arcs Recall selector set ciarc set variables determine end edge important Let SX union selector sets ciarcs involving X cid5 SX Sγ γ XXcid7 Reversely let WX set endpoint variables ciarcs X acts selector WX X cid7 X SXcid7 YX WX set Xs direct dependents Let IXs set variables Xcid7 directly Let Y cid11 X important X given s domSX That Xcid7 IXs iarc Xcid7 X N ciarc Xcid7 X N CIT arc stipulates given s Xcid7 important X FX SX denote TCPfamily X Fig 5 dashed arcs schematically connect Finally let F cid11 X SX X EF cid11 Y denote extended TCPfamily X X F cid11 X F cid11 cid4 Y Y cid11 X 336 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 Fig 5 TCPfamily X TCPnets ciarcs signiﬁcantly richer GAdecomposition Eq 3 expressive cover type networks However exists sufﬁciently expressive compact extended counterpart Eq 3 vX ncid3 i1 φXi F cid11 Xi 10 Deﬁnition 5 Consider TCPnet N set nonnegative realvalued functions Φ φX1 φXn respectively We Φ satisﬁes CIconditions N ciarc X Xcid7 N F cid11 X1 X Xcid7 N x1 x2 domX u domUX s domSX X IXcid7s domXcid7 set pairwise compatible ucid7 domUXcid7 F cid11 Xn similarly iarc N x1 cid9u x2 xcid7 scid7 domSXcid7 v domEF cid11 X 1 xcid7 2 X Xcid7 vcid7 domEF cid11 Xcid7 X Xcid7 φXx1 u s φXcid7 x cid7 1 ucid7 scid7 Y cid11 cid3 X i1 φYi vi x1 x cid7 1 Y cid11 Xcid7 Y cid11 cid3 X i1 φY cid7 vcid7 x cid7 1 x1 φXx2 u s φXcid7 x cid7 2 ucid7 scid7 Y cid11 cid3 X i1 φYi vi x2 x cid7 2 Y cid11 Xcid7 Y cid11 cid3 X i1 φY cid7 vcid7 x cid7 2 x2 11 vi vcid7 1 xcid7 tion 4 xcid7 value provided v vcid7 F cid11 Yi 2 similarly x1 x2 redundant φYi respectively φY cid7 X Xcid7 F cid11 Y cid7 X Xcid7 respectively As Deﬁni The form CIcondition identical Icondition The difference constrained requiring particular assignment appropriate selector sets For GAdecomposition Eq 10 CPconditions work CPnets TCPnets ciarcs work anymore To understand recall original CPconditions ensured total contribution preferred value X larger total contribution preferred value This total contribution included effect assignment X children Now total contribution X depends additional elements First X participate ciarc case value depends selector set edge Moreover X inﬂuence relative importance variables selector sets belongs Here provide modiﬁed set CPconditions compatible value decomposition Eq 10 In fact modiﬁcation brought Deﬁnition 6 schematically simple To ﬁt functional form 10 CPconditions Deﬁnition 3 simply reformulated CP TCPfamilies Deﬁnition 6 Consider TCPnet N set nonnegative realvalued functions Φ φX1 φXn respectively We Φ satisﬁes CPconditions N X X F cid11 X1 F cid11 Xn RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 337 u domUX s domSX x1 x2 domX N x1 cid9u x2 v domEF cid11 X compatible u s X φXx1 u s Y cid11 cid3 X i1 φYi vi x1 φXx2 u s Y cid11 cid3 X i1 φYi vi x2 vi value provided v F cid11 Yi X 12 Lemma 6 shows modiﬁed CPconditions CIconditions necessary sufﬁcient GA decomposability general TCPnets functional form Eq 10 Lemma 6 Given TCPnet N function vX φX1 φXn satisfy CP CIconditions N cid2 n i1 φXi F cid11 Xi v consistent N Again Lemma 6 provides mechanism generating GA value functions consistent TCPnets similar procedures provided Lemmas 1 4 Of course complexity corresponding linear L The number variables inequalities L Ond λcid7 μcid7 maxXX EF cid11 λcid7 maxXX F cid11 Clearly adding ciarcs reduce general compactness GA X X decomposition factoring TCPfamilies instead CPfamilies unavoidable Ond 2μcid7 Corollary 7 If TCPnet N GAdecomposable TCPfamilies maxXX EF cid11 X constant k corresponding value function vX size N k constructed time polynomial cid2 n i1 φXi F cid11 Xi Considering completeness GAdecomposition general TCPnets unlikely consistent TCP net GAdecomposable functional form Eq 10 Yet Theorem 8 decomposability complete acyclic TCPnets Since TCPnets contain directed annotated undi rected arcs corresponding notion acyclicity nonstandard Deﬁnition 7 See 12 The dependency graph N cid11 TCPnet N contains nodes edges N Additionally ciarc Xi Xj N Xk SXi Xj N cid11 contains pair directed edges Xk Xi Xk Xj edges N Fig 6 illustrates notion dependency graph Flight US TCPnet example 12 Deﬁnition 8 A TCPnet N acyclic cycle undirected graph induced dependency graph N cid11 projected N cid11 contains pair directed arcs different directions6 For instance TCPnet N Fig 6a acyclicconsidering cycle TCS undirected graph induced dependency graph N cid11 directed arcs T S T C N cid11 oriented different directions respect cycle property holds cycles undirected graph induced N cid11 Based notion acyclic TCPnets Theorem 8 ﬁnalizes representation theory Theorem 8 Every acyclic TCPnet GAdecomposable TCPfamilies Example 3 Consider TCPnet N Fig 7a extends CPnet Example 1 ciarc γ X Z Sγ U CITγ Fig 7a 6 In particular acyclic CPnets subclass called conditionally acyclic TCPnets today probably widest known subclass consistent TCPnets deﬁned terms structural properties networks 12 338 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 Fig 6 Flight USA TCPnet dependency graph b 12 Fig 7 Acyclic TCPnet ciarc Example 2 b The value function generated TCPnet First note TCPfamilies U X Y identical CPfamilies variables While easy U Y X case selector U X belongs parents UX X From hard verify extended TCPfamilies U X Y identical extended TCPfamilies CPconditions N U X Y given Eqs 4 6 7 respectively The situation variable Z different Z FZ Z SZ U F cid11 Z Z U Hence contrast Example 1 function φZ deﬁned domZ domU CP conditions Z formulated according Deﬁnition 6 These CPconditions given Eq 13 u u1 u2 u3 φZz1 u φY y1 x1 z1 φZz2 φY y1 x1 z2 φZz1 u φY y1 x2 z1 φZz2 φY y1 x2 z2 φZz1 u φY y2 x1 z1 φZz2 φY y2 x1 z2 φZz1 u φY y2 x2 z1 φZz2 φY y2 x2 z2 13 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 339 Next CIconditions N given Eqs 14 15 For domain selector set Sγ U 1 IXu1 2 IXu2 3 IXu3 IZu1 IZu2 Z IZu3 X X important Z given u1 given u2 ciarcγ simply vanishes Z important X given u3 The CIconstraints corresponding case 1 φXx1 u1 φZz1 u1 φY y1 x1 z1 φXx2 u1 φZz2 u1 φY y1 x2 z2 φXx1 u1 φZz1 u1 φY y2 x1 z1 φXx2 u1 φZz2 u1 φY y2 x2 z2 φXx1 u1 φZz2 u1 φY y1 x1 z2 φXx2 u1 φZz1 u1 φY y1 x2 z1 φXx1 u1 φZz2 u1 φY y2 x1 z2 φXx2 u1 φZz1 u1 φY y2 x2 z1 14 Note Eq 14 similar Eq 9 φZz1 φZz2 respectively replaced φZz1 u1 φZz2 u1 identical This similarity incidental given u1 ciarc X Z equivalent iarc X Z Example 2 The CIconstraints corresponding case 3 φZz1 u3 φXx1 u3 φY y1 x1 z1 φZz2 u3 φXx2 u3 φY y1 x2 z2 φZz1 u3 φXx1 u3 φY y2 x1 z1 φZz2 u3 φXx2 u3 φY y2 x2 z2 φZz1 u3 φXx2 u3 φY y1 x2 z1 φZz2 u3 φXx1 u3 φY y1 x1 z2 φZz1 u3 φXx2 u3 φY y2 x2 z1 φZz2 u3 φXx1 u3 φY y2 x1 z2 15 Eq 15 structurally identical Eq 14 roles X Z reversed Solving linear L obtained union Eq 4 Eqs 67 Eqs 1315 sing quadratic programming approach Examples 12 generate value function depicted Fig 7b 4 Reﬁnement itemlevel rankings The goal preference elicitation systems help user recognize preferred item set candidate items The ceteris paribus semantics model natural preference statements intuitive weak This implies typically generalizing preference statements specify partial order items Phrased differently set value functions consistent set statements correspond different orderings Various systems attempt reﬁne users preference information point Here concentrate case user asked rank small set items For instance 11 user presented 10 items according value function asked point preferred This immediately yields 9 pairwise orderings items The question ask section integrate explicit item rankings generalizing preference statements maintaining compact structure derived generalizing preference statements Our results somewhat surprising Obviously users ranking contradict generalizing statements ranks red car identical blue car despite stating blue preferred color cars value function model But happens users rankings consistent generalizing preference statements That exists ordering satisﬁes users generalizing preference statements explicit relative ranking items Clearly information modeled value function What surprising possible model information type compact value functions model generalizing information The proof result unconstructive ﬁnd puzzling obvious rankings violate structural assumptions underlying TCPnet For reasons clear shortly let begin considering preference expressions simplest class provide polynomial time GAdecomposition preference expressions representable acyclic 340 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 CPnets extended CPfamilies variables size bounded constant According Corollary 2 given expression N efﬁciently generate value function v Eq 3 consistent N In addition Theorem 3 shows valuefunction compilation efﬁcient sound complete ability generate v guaranteed Now suppose user provides set m itemlevel rankings R oi i1 The task incorporate R process generating valuefunction cid9 oi i2 m i1 oij Ω Deﬁnition 9 Given set ﬁnitedomain variables X k m N Φk language CPnets maxXX EF X cid4 k Φkm language expressions cid3N Rcid4 consisting CPnet N Φk mcid7 i1 mcid7 cid4 m consistent N In particular Φk0 Φk We set itemlevel rankings R oi i1 use Φk denote restrictions Φk Φkm acyclic CPnets Φkm cid9 oi i2 For CPnet N let LN linear constraints corresponding CPconditions N Deﬁnition 3 Considering GAdecomposition cid3N Rcid4 Φkm CPfamilies X Eq 3 far observe pairwise ranking o1 cid9 o2 R encoded linear constraint cid3 cid3 φXx1 u1 φXx2 u2 16 XX XX x1 u1 respectively x2 u2 values provided o1 respectively o2 variable X parents UX respectively Let LR denote set m constraints corresponding R Let HLNR polytope deﬁned LN LR It easy verify point HLNR provides value function Eq 3 consistent N R Likewise ﬁxed k N N Φk construct value function efﬁciently Hence appears valuefunction compilation scheme Section 31 preserves soundness efﬁciency extended Φk Φkm Corollary 9 Given preference expression cid3N Rcid4 Φkm cid3N Rcid4 GAdecomposable CPfamilies cid2 n i1 φXi FXi consistent N R constructed time polynomial N value function vX k m Having positive result provided Corollary 9 left studied completeness GA decomposition cid3N Rcid4 Φkm CPfamilies N particular completeness procedure acyclic CPnets For cid3N cid4 Φk completeness guaranteed Theorem 3 At ﬁrst view reason hold cid3N Rcid4 Φkm After R consistent N value function consistent N R exists ii assumptions ceteris paribus interpretation preference statements underlying CPnets makes information statements communicate arguably minimal 18 However Theorem 10 shows general extending preference speciﬁcation language Φk Φkm preserve completeness GAdecomposition Eq 3 P NP Even surprisingly shows completeness guaranteed R contains single ranking pair items Theorem 10 Unless P NP k cid3 22 m cid3 1 exists preference expression cid3N Rcid4 Φkm HLNR Proof The proof combines results provided Lemma 1 Corollary 2 results complexity dominance testing CPnets established 8 Given CPnet N pair complete assignments o ocid7 variables N problem testing dominance o ocid7 deciding N o cid9 ocid7 By reduction classical 3SAT problem Theorem 15 8 shows dominance testing acyclic CPnets NPhard For detailed reduction 8 Two points reduction important 1 The 3SAT problem remains NPhard subclass 3SAT formulae propositional variable appears positive negated forms clauses 16 p 259 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 341 2 The reduction satisﬁability class 3SAT formulae problem dominance testing acyclic Thus dominance testing CPnets effectively reduction problem dominance testing CPnets Φ22 CPnets Φ22 NPhard Now assume contrary polytope HLNR cid3N Rcid4 Φ221 consider following procedure dominance testing CPnets Φ22 k cid3 22 m cid3 1 1 Given CPnet N Φ22 cid3N R1cid4 cid3N R2cid4 Φ221 pair complete assignments o ocid7 variables N construct instances R1 o cid9 ocid7 R1 ocid7 cid9 o respectively 2 Create linear programs LP1 LP2 constraints LN LR1 LN LR2 arbitrary linear objective function bounded HLNR1 HLNR2 respectively 3 Solve LP1 LP2 If LP1 feasible LP2 infeasible return true Otherwise return false First Corollary 9 implies time complexity procedure polynomial Second assumption non implies procedure returns true N o cid9 ocid7 emptiness HLNR cid3N Rcid4 Φ221 However P NP contradicts previous result dominance testing CPnets Φ22 NPhard Given correctness Corollary 9 arrive contradiction assumption universal nonemptiness HLNR Φ221 prove theorem cid3 We end section generalizing impossibility result Theorem 10 wide range languages preference speciﬁcation including proposed Theorem 11 Generalized impossibility Given language Φ preference expressions space alternatives Ω let Φcid7 extension Φ include consistent item level rankings cid7 Φ cid6 N R N Φ R o1 cid9 o2 o1 o2 Ω N o1 cid9 o2 cid7 Let V space realvalue functions Ω let ΓΦcid7 Φcid7 cid17 V sound valuefunction compilation scheme maps preference expressions N cid7 Φcid7 value functions consistent ΓΦcid7 N cid7 V fails ΓΦcid7 N cid7 Given following properties holds 1 Dominance testing Φ P 2 ΓΦcid7 NP coNPhard 3 ΓΦcid7 incomplete exists N cid7 Φcid7 ΓΦcid7 N cid7 It hard verify basic idea underlying proof Theorem 10 extends straightforward manner proof Theorem 11 Note generality claim Theorem 11 fact poses syntactical conditions preference language Φ way functions V physically speciﬁed And valuefunction compilation wide theoretical practical dominance testing shown NP coNPhard nontrivial existing qualitative preference speciﬁcation languages 825 relevance Theorem 11 apparent In fact Theorem 11 provides answer open problem liter ature Considering preference speciﬁcation language referred Φcp strictly extends language TCPnets McGeachie Doyle 27 suggest sound complete valuefunction compilation scheme lan guage While compilation schemes suggested 27 shown authors worstcase computationally intractable McGeachie Doyle left necessity intractability open question 27 p 174 Now given dominance testing Φcp known PSPACEcomplete 25 ii Φcid7 cp Φcp pairwise comparisons completely speciﬁed elements Ω simply language Φcp 342 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 Theorem 11 implies sound complete compilation scheme Φcp computationally efﬁcient course PSPACE collapses P 5 Summary related work open problems In work studied representational computational issues compiling set qualitative statements ordinal preference valuefunction consistent statements Speciﬁcally considered partial orders induced certain sets qualitative statements conditional preference conditional relative importance sets statements representable TCPnet model 1012 We presented new representation theory fac tored value functions allow useful preferential independence structures appearing classical textbook results area 21 In particular representation results preference orders induced wide class TCPnets consistently captured compact generalized additive value functions Moreover sets statements corresponding generalized additive value function efﬁciently generated Next considered practically important problem valuefunction compilation mixed set gen eralizing itemlevel preference statements Adding itemlevel preference statements affect complexity soundness compiling set generalizing preference statements However showed completeness compilation affected provide general impossibility theorem matter The idea representing partial preference information constraint space candidate value functions lies foundations measurement multiattribute decision theory 24 Given numerous works area multiattribute decision making consider computational algorithmic issues generating value functions consistent given preference information 22232833 Targeting complexity issues works priori restrict space candidate value functions increasing order generality linear quasi concave monotonic However easy deﬁnition functions capture intuitive preference statements instance statements conditional preference andor importance On hand recent work ﬁeld artiﬁcial intelligence considers valuefunction compilation statements preference 1727 However best knowledge work ﬁrst provide nontrivial preference speciﬁcation language value functions generated efﬁciently sound complete manner Finally work raises numerous open theoretical questions 1 When GAdecomposition complete cyclic TCPnets cyclic CPnets 2 What compact form GAdecomposition complete consistent TCPnets 3 Can characterize representation theorem purely terms conditional independence graph structure explicitly alternatively core properties graph allow compact GA decomposition 4 What concrete limits impossibility theorem preference speciﬁcation languages For instance values m k 22 obtain completeness GAdecomposition Φkm CPfamilies variables We believe addressing questions provide better understanding practical expressiveness limitations reasoning ordinal preference information Appendix A Proofs Theorem 3 Every acyclic CPnet GAdecomposable CPfamilies Proof To prove claim constructively acyclic CPnet N exists function vX cid2 n i1 φXi FXi Φ φX1 φXn satisfy CPconditions N Given acyclic CPnet N variable X N value x domX assignment u domUX deﬁne parameter px u quantify local preference x given u cid7 domX N x cid9u x px u cid7cid8 cid8 cid7 x cid6 x cid8 cid8 cid7 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 343 For instance x preferred value X given u px u 0 x domX px u cid4 domX 1 Recall cid9u partial order domX Next deﬁne weight coefﬁcients wX1 wXn They deﬁned recursively topdown manner follows If X root node N UX wX K arbitrary constant K 0 Now consider variable X assigned weight wX We distribute weight X evenly children This deﬁning following coefﬁcient variable Y YX αXY wX YX domY 17 Since N assumed acyclic prior processing nonroot node Y parameters αXY known X UY assign wY min αXY XUY 18 Having parameters px u wX deﬁne set functions Φ φX1 φXn terms parameters follows For variable X x domX u domUX φXx u wX px u 19 To prove correctness construction sufﬁcient Φ φX1 φXn satisfy CP conditions N Consider variable X pair values x1 x2 domX assignment u domUX N x1 cid9u x2 For v domEF X X compatible u cid9 cid10 φYi vi x2 φYi vi x1 YXcid3 i1 cid4 YXcid3 i1 YXcid3 i1 YXcid3 i1 cid11 cid12 pvi x2 pvi x1 wYi cid12 cid11 pvi x2 pvi x1 αXYi αXYi cid8 cid8 cid8 cid8domYi cid11 cid12 px1 u px2 u cid3 wX wX φXx1 u φXx2 u Lemma 4 Given TCPnet N ciarcs function vX N φX1 φXn satisfy CP Iconditions N cid2 n i1 φXi FXi v consistent Proof By deﬁnition value function v consistent N iff pair complete assignments x1 x2 domX N x1 cid9 x2 vx1 vx2 By semantics TCPnets TCPnets ciarcs reduce test cases x1 x2 rest cases implied transitivity preference relation induced N 1 x1 x2 differ value single variable X N x1 cid9u x2 2 x xcid7 differ values pair variables X Xcid7 iarc X Xcid7 N N x1 cid9u x2 x1 x2 values provided X x1 x2 respectively u assignment provided x1 x2 UX Considering case 1 recall notation Deﬁnition 3 From GAdecomposition v follows vx1 vx2 iff φXx1 u YXcid3 i1 φYi vi x1 φXx2 u YXcid3 i1 φYi vi x2 344 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 subvalue functions v values x1 x2 However N x1 cid9u x2 exactly formulation CPcondition N respect X Considering case 2 recall notation Deﬁnition 4 Let xcid7 1 xcid7 x2 respectively From GAdecomposition v follows vx1 vx2 iff 2 values provided Xcid7 x1 φXx1 u φXcid7 x cid7 1 ucid7 YXcid3 i1 φYi vi x1 x cid7 1 Y Xcid7 YXcid3 i1 φY cid7 vcid7 x cid7 1 x1 φXx2 u φXcid7 x cid7 2 ucid7 YXcid3 i1 φYi vi x2 x cid7 2 Y Xcid7 YXcid3 i1 φY cid7 vcid7 x cid7 2 x2 20 subvalue functions v values x1 x2 Again N x1 cid9u x2 exactly formulation Icondition N respect X Finally suppose Φ satisfy Iconditions N It means exists iarc X Xcid7 N assignment u domUX pair values x1 x2 domX N x1 cid9u x2 exist pair values xcid7 1 xcid7 domXcid7 set compatible ucid7 domUXcid7 v domEF X X Xcid7 vcid7 domEF Xcid7 X Xcid7 2 φXx1 u φXcid7 x cid7 1 ucid7 YXcid3 i1 φYi vi x1 x cid7 1 Y Xcid7 YXcid3 i1 φY cid7 vcid7 x cid7 1 x1 cid4 φXx2 u φXcid7 x cid7 2 ucid7 YXcid3 i1 φYi vi x2 x cid7 2 Y Xcid7 YXcid3 i1 φY cid7 vcid7 x cid7 2 x2 21 Let A X EF X EF Xcid7 Due GAdecomposition v domA Eq 21 implies vx1 vx2 x1 x1xcid7 2uucid7vvcid7a However implies N cid19 x1 cid9 x2 contradicts X Xcid7 Hence accomplished proof Φ φX1 φXn satisfying CPconditions semantics iarc Iconditions N necessary sufﬁcient condition v Lemma 4 consistent N cid3 1uucid7vvcid7a x1 x2xcid7 Theorem 5 Every acyclic TCPnet ciarcs GAdecomposable CPfamilies Proof First extending notation variable X X let IX denote set variables Xcid7 X directly unconditionally important X Xcid7 IX iarc Xcid7 X N The proof Theorem 5 based construction similar proof Theorem 3 Eq 18 min XUY αXY min XIY cid7 wXδ2 22 replaced cid6 wY min δ 1 max XX cid8 cid8 cid8 cid8domX First observe replacing Eq 18 Eq 22 impact satisfying CPconditions wY Eq 22 small comparatively wX X UY Eq 18 Therefore prove X Xcid7 rewrite Φ φX1 φXn constructed way satisfy Iconditions N Consider iarc Eq 8 φXx1 u φXx2 u cid9 φYi vi x2 x cid7 2 φYi vi x1 x cid10 cid7 1 YXcid3 i1 φXcid7 x cid7 2 ucid7 φXcid7 x cid7 1 ucid7 Y Xcid7 YXcid3 i1 cid9 φY cid7 vcid7 x cid7 1 x1 φY cid7 vcid7 x cid10 cid7 2 x2 23 denote left right sides Eq 23 cid11 cid11cid11 respectively RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 345 cid11 wX cid11 cid12 px1 u px2 u cid11 pvi x2 x wYi cid7 2 pvi x1 x cid12 cid7 2 YXcid3 i1 cid11cid8 cid8 cid8domYi cid8 1 cid12 wYi cid11cid8 cid8 cid8domYi cid8 1 cid12 αXYi cid13 wX YX wX YX domYi cid14 1 domYi YXcid3 i1 YXcid3 i1 YXcid3 cid3 wX cid3 wX wX i1 YXcid3 i1 wX YX wX δ cid11cid11 wXcid7cid11 px cid7 2 ucid7 p cid12cid12 cid11 x cid7 1 ucid7 Y Xcid7 cid3 i1 wY cid7 cid11 pvcid7 x cid7 1 x1 pvcid7 x cid4 wXcid7cid11cid8 cid8domX cid12 cid7 cid8 cid8 1 cid4 wXcid7cid11cid8 cid8domX cid12 cid7 cid8 cid8 1 wXcid7cid11cid8 cid8domX cid12 cid7 cid8 cid8 1 Y Xcid7 cid3 i1 Y Xcid7 cid3 i1 Y Xcid7 cid3 cid15 wXcid7 wXcid7cid8 cid7 cid8 cid8domX cid8 cid8 cid8domX cid7 cid8 cid8 1 YXcid7 wY cid7 cid11cid8 cid8domY cid8 cid8 1 cid7 cid12 cid11cid8 cid8domY cid8 cid8 1 cid7 cid12 α Xcid7Y cid7 cid13 cid14 wXcid7 YXcid7 wXcid7 YXcid7 domY cid7 cid16 1 domY cid7 i1 Y Xcid7 cid3 i1 cid12 cid7 2 x1 24 25 From Eqs 24 25 follows Φ φX1 φXn satisfy Iconditions N cid3 wXcid7cid8 cid8domX cid7 cid8 cid8 wX δ ensured new deﬁnition wX Eq 22 cid3 Lemma 6 Given TCPnet N function vX φX1 φXn satisfy CP CIconditions N cid2 n i1 φXi F cid11 Xi v consistent N Proof By deﬁnition value function v consistent N iff pair complete assignments x1 x2 domX N x1 cid9 x2 vx1 vx2 By semantics TCPnets reduce test cases x1 x2 rest cases implied transitivity preference relation induced N 1 x1 x2 differ value single variable X N x1 cid9u x2 2 x xcid7 differ values pair variables X Xcid7 N x1 cid9u x2 iarc X Xcid7 N ciarc X Xcid7 N X important Xcid7 given sγ 346 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 x1 x2 values provided X x1 x2 respectively u sγ assignments provided x1 x2 UX SXXcid7 respectively Analysis cases respect Eqs 12 11 similar analysis corresponding cases proof Lemma 4 Eqs 2 8 respectively cid3 Theorem 8 Every acyclic TCPnet GAdecomposable TCPfamilies Proof Given acyclic TCPnet N deﬁne set functions Φ φX1 φXn F cid11 X1 tively 1 cid4 cid4 n x domXi u domUXi s domSXi F cid11 Xn respec φXi x u s wXi s pXi x u 26 The functions pX deﬁned exactly proof Theorem 3 Let cid12cid13 b denote fact assignments b sets variables compatible agree assignment provided overlapping variables The weight function wX deﬁned cid6 cid7cid7 cid6 cid7 αXcid7X s min Xcid7cid7IXs cid6 βXcid7cid7X s wXs min min Xcid7UXSX Xcid7 UX SX αXcid7X s min scid7domS scid7cid12cid13 s Xcid7cid7 IXs Xcid7 βXcid7cid7X s min scid7cid7domS scid7cid7cid12cid13 s Xcid7cid7 We claim function vX ncid3 i1 φXi F cid11 Xi cid18 cid17 wXcid7 scid7 Xcid7 domX Y cid11 cid17 cid18 wXcid7cid7 scid7cid7 δ2 Φ φX1 φXn constructed according Eq 26 1 satisﬁes CP CIconditions N 2 welldeﬁned weight functions wX1 wXn CIconditions Let rewrite Eq 11 φXx1 u s φXcid7 x2 u s Y cid11 cid3 X i1 cid9 φYi vi x2 x cid7 2 φYi vi x1 x cid10 cid7 1 φXcid7 x cid7 2 ucid7 scid7 φXcid7 x cid7 1 ucid7 scid7 Y cid11 Xcid7 Y cid11 cid3 X cid9 φY cid7 vcid7 x cid7 1 x1 φY cid7 vcid7 x cid10 cid7 2 x2 i1 denote right left sides Eq 30 cid11 cid11cid11 respectively For cid11 cid11 cid11 wXs cid12 px1 u px2 u Y cid11 cid3 X cid9 wYi si x1pyi ui x1 x cid7 1 wYi si x2pyi ui x2 x cid10 cid7 2 i1 yi value provided vi Yi si ui projections vi SYi respectively Note xcid7 Eq 31 Xcid7 2 redundant pvi wYi Now px1 u px2 u Xcid7 UYi 1 xcid7 27 28 29 30 31 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 347 cid11 cid3 wXs cid3 wXs wXs cid3 wXs Y cid11 cid3 X i1 Y cid11 cid3 X i1 Y cid11 cid3 X i1 Y cid11 cid3 X i1 wYi si x2 cid8 cid11cid8 cid8 1 cid8domYi cid12 cid8 cid11cid8 cid8 1 cid8domYi si x2 cid12 αXYi cid17 wXs domYi Y cid11 X cid18 cid11cid8 cid8 cid8domYi cid8 1 cid12 min sdomS scid12cid13 si X cid13 wXs Y cid11 X Y cid11 X wXs domYi cid14 1 domYi Y cid11 cid3 X i1 wXs Y cid11 X wXs δ Writing cid11cid11 similarly cid11 Eq 31 Y cid11 Xcid7 cid3 cid11cid11 wXcid7 scid7 cid11 px cid7 2 ucid7 px cid7 1 ucid7 cid12 cid9 wY cid7 scid7 x cid7 2pucid7 x cid7 2 x2 wY cid7 ycid7 scid7 x 32 cid10 cid7 1 x1 33 cid7 1pycid7 ucid7 x value provided vcid7 ycid7 respectively Again note x1 x2 redundant pvcid7 projections vcid7 wY cid7 ucid7 Y cid7 X U S Y cid7 From Eq 33 Y cid7 X i1 scid7 cid11cid11 cid4 wXcid7 scid7 cid11cid8 cid8domX cid7 cid8 cid8 1 cid12 cid4 wXcid7 scid7 cid11cid8 cid8domX cid7 cid8 cid8 1 cid12 wXcid7 scid7 cid11cid8 cid8domY cid8 cid8 1 cid7 cid12 Y cid11 Xcid7 cid3 i1 Y cid11 Xcid7 cid3 i1 Y cid11 Xcid7 cid3 i1 wY cid7 scid7 x cid7 2 cid11cid8 cid8domY cid12 cid8 cid8 1 cid7 α Xcid7Y cid7 scid7 x cid7 max cid11cid8 cid8domY cid12 cid8 cid8 1 cid7 cid17 wXcid7 s Xcid7 domY cid7 Y cid11 min sdomS Xcid7 scid12cid13 scid7 cid18 cid11cid8 cid8domY cid12 cid8 cid8 1 cid7 cid6 wXcid7 cid7 s min sdomS Xcid7 scid12cid13 scid7 wXcid7 minsdomS Xcid7 scid12cid13 scid7 Xcid7 Y cid11 s Y cid11 Xcid7 cid3 i1 1 domY cid7 wXcid7 scid7 cid11cid8 cid8domY cid8 cid8 1 cid7 cid12 cid8 cid8domX cid7 cid8 cid8 cid4 wXcid7 wXcid7 scid7 scid7 δ 34 From Eqs 32 34 follows set functions Φ φX1 φXn satisﬁes CIconditions N wXs δ cid3 wXcid7 scid7 δ X IXcid7scid7 relation ensured construction wX1 wXn Eqs 27 29 CPconditions Considering Eq 12 let yi value provided vi Yi si ui projections vi SYi UYi respectively Satisfaction Eq 12 shown follows 348 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 YXWXcid3 i1 cid9 cid10 φYi yi x2 ui si φYi yi x1 ui si wYi si x2pyi x2 ui wYi si x1pyi x1 ui αXYi si x2pyi x2 ui zi cid8 cid8 cid8 cid8domYi si x2 αXYi YXWXcid3 i1 YXWXcid3 i1 YXWXcid3 i1 YXWXcid3 cid4 cid4 wXs YX WX i1 wXs cid12 cid11 wXs px1 u px2 u φXx1 u s φXx2 u s 35 Welldeﬁnedness The thing remains shown functions wX1 wXn Eq 27 deﬁned Given variable X X assignment s domSX Eq 27 follows wXs fswXcid7 scid7 Xcid7 UX SX IXs scid7 domSXcid7 compatible s ii wXs fswXcid7 scid7 Since root variables X N function wX explicitly speciﬁed wX K set functions wX1 wXn deﬁned exists sequence variables Xi1 Xik set assignments s1 sk SXi1 SXik cid11 cid12 wXi2 s2 wXi1 s1 fs1 cid11 cid12 wXi3 s3 wXi2 s2 fs2 wXik1 sk1 fsk1 wXik sk fsk cid11 cid12 wXik sk cid12 wXi1 s1 respectively 36 cid11 However assuming sequence exists immediately violate acyclicity N Hence wX1 wXn Eq 27 deﬁned cid3 References 1 R Agrawal EL Wimmers A framework expressing combining preferences Proceedings ACM SIGMOD International Con ference Management Data 2000 pp 297306 2 F Bacchus A Grove Graphical models preference utility Proceedings Eleventh Annual Conference Uncertainty Artiﬁcial Intelligence San Francisco CA Morgan Kaufmann 1995 pp 310 3 F Bacchus A Grove Utility independence qualitative decision theory Proceedings Fifth Conference Knowledge Representa tion KR96 Cambridge Morgan Kauffman 1996 pp 542552 4 D Bertsekas A Nedic A Ozdaglar Convex Analysis Optimization Athena Scientiﬁc 2003 5 J Blythe Visual exploration incremental utility elicitation Proceedings National Conference Artiﬁcial Intelligence AAAI 2002 pp 526532 6 C Boutilier A POMDP formulation preference elicitation problems Proceedings Eighteenth National Conference Artiﬁcial Intelligence AAAI 2002 pp 239246 7 C Boutilier F Bacchus RI Brafman UCPnetworks A directed graphical representation conditional utilities Proceedings Seven teenth Conference Uncertainty Artiﬁcial Intelligence 2001 pp 5664 8 C Boutilier R Brafman C Domshlak H Hoos D Poole CPnets A tool representing reasoning conditional ceteris paribus preference statements Journal Artiﬁcial Intelligence Research 21 2004 135191 RI Brafman C Domshlak Artiﬁcial Intelligence 172 2008 325349 349 9 C Boutilier R Brafman H Hoos D Poole Reasoning conditional ceteris paribus preference statements Proceedings Fifteenth Annual Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann 1999 pp 7180 10 R Brafman C Domshlak Introducing variable importance tradeoffs CPnets Proceedings Eighteenth Annual Conference Uncertainty Artiﬁcial Intelligence Edmonton Canada August 2002 pp 6976 11 R Brafman C Domshlak T Kogan Compact valuefunction representations qualitative preferences Proceedings Twentieth Annual Conference Uncertainty Artiﬁcial Intelligence Banff Canada 2004 pp 5158 12 R Brafman C Domshlak SE Shimony On graphical modeling preference importance Journal Artiﬁcial Intelligence Research 25 2006 389424 13 J Chomicki Preference formulas relational queries ACM Transactions Database Systems 28 4 2003 427466 14 C Domshlak R Brafman CPnetsreasoning consistency testing Proceedings Eighth International Conference Principles Knowledge Representation Reasoning Toulouse France April 2002 pp 121132 15 PC Fishburn The Foundations Expected Utility Reidel Dordrecht 1982 16 MR Garey DS Johnson Computers Intractability A Guide Theory NPCompleteness WH Freeman Company New York 1978 17 V Ha P Haddawy A hybrid approach reasoning partially elicited preference models Proceedings Fifteenth Annual Confer ence Uncertainty Artiﬁcial Intelligence Stockholm Sweden Morgan Kaufmann July 1999 18 SO Hansson Preference logic DM Gabbay F Guenthner Eds Handbook Philosophical Logic vol 4 second ed Kluwer 2001 pp 319394 19 SO Hansson The Structure Values Norms Cambridge University Press 2001 20 T Joachims Optimizing search engines clickthrough data Proceedings ACM Conference Knowledge Discovery Data Mining KDD 2002 pp 154161 21 RL Keeney H Raiffa Decision Multiple Objectives Preferences Value Tradeoffs Wiley 1976 22 M Koksalan P Sagala Interactive approaches discrete alternative multiple criteria decision making monotone utility functions Management Science 41 7 1995 11581171 23 P Korhonen J Wallenius S Zionts Solving discrete multiple criteria problem convex cones Management Science 30 11 1984 13361345 24 DH Krantz RD Luce P Suppes A Tversky Foundations Measurement Academic New York 1971 25 J Lang Logical preference representation combinatorial vote Annals Mathematics Artiﬁcial Intelligence 42 13 2004 3771 26 G Linden S Hanks N Lesh Interactive assessment user preference models The automated travel assistant Proceedings Sixth International Conference User Modeling 1997 pp 6778 27 M McGeachie J Doyle Utility functions ceteris paribus preferences Computational Intelligence 20 2 2004 158217 special issue Preferences AI 28 S Prasad M Karwan S Zionts Use convex cones interactive multiple objective decision making Management Science 43 5 1997 723734 29 P Pu B Faltings Decision tradeoff example critiquing constraint programming Constraints An International Journal 9 4 2004 289310 30 SW Tan J Pearl Qualitative decision theory Proceedings Twelfth National Conference Artiﬁcial Intelligence Seattle AAAI Press 1994 pp 928933 31 M Torrens B Faltings P Pu SmartClients Constraint satisfaction paradigm scaleable intelligent information systems Constraints 7 2002 4969 32 M Wellman J Doyle Preferential semantics goals Proceedings Ninth National Conference Artiﬁcial Intelligence July 1991 pp 698703 33 S Zionts J Wallenius An interactive programming method solving multiple criteria problem Management Science 22 6 1976 633652