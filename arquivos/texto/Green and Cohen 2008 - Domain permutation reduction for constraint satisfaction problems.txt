Artiﬁcial Intelligence 172 2008 10941118 wwwelseviercomlocateartint Domain permutation reduction constraint satisfaction problems Martin J Green David A Cohen Computer Science Department Royal Holloway University London Egham Surrey TW20 0EX UK Received 24 January 2007 received revised form 28 November 2007 accepted 7 December 2007 Available online 15 December 2007 Abstract This paper concerned Constraint Satisfaction Problem CSP It wellknown general CSP NPhard However signiﬁcant success discovering subproblems tractable polynomial time solvable One effective ways obtain tractable subproblem force constraint relations lie tractable language In paper deﬁne new way identifying tractable subproblems CSP Let P arbitrary CSP instance Γ tractable language Suppose exists variable P permutation domain resultant permuted constraint relations P lie Γ The domain permuted instance instance tractable class solved polynomial time algorithm Γ Solutions P obtained inverting domain permutations The question given class instances language Γ set domain permutations efﬁciently key methods tractability One important contributions paper notion lifted constraint instance powerful tool study question We consider open problem discovering domain permutations instances maxclosed We bounded arity instances Boolean domain problem tractable domain size intractable binary instances We simple proof verifying tractability discovering domain permutations instances row convex We refute published result giving simple proof intractability discovering domain permutations instances domain size connected row convex We demonstrate triangulated stable marriage instances reducible domain permutations maxclosed stances This provides simple explanation arc consistency deciding instances We verify simple direct proof tractability identiﬁcation renamable Horn instances intractability ﬁnding largest renamable Horn subset clauses instance SAT We natural tractable classes properly extend maximal relational classes arising tractable constraint languages We believe domain permutation reductions signiﬁcant chance useful practical applications 2008 Elsevier BV All rights reserved Keywords Complexity Constraint satisfaction problem CSP NPcompleteness Renamable Horn Stable marriage Tractability Corresponding author Email address MJGreencsrhulacuk MJ Green 00043702 matter 2008 Elsevier BV All rights reserved doi101016jartint200712001 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1095 1 Introduction The constraint satisfaction paradigm involves modelling realworld problem set variables assign values domain 44 The values assigned limited constraints A constraint consists list variables scope set tuples allowed assignments list variables relation A solution assignment value domain variable constraints satisﬁed Many realworld problems naturally represented instances general constraint satisfaction problem CSP including planning 40 scheduling 48 image processing 44 frequency assignment 21 natural lan guage understanding 1 The CSP NPhard 43 This motivates search polynomial time solvable tractable subproblems The structure CSP instance hypergraph hyperedges scopes abstracted sets distinct variables constraints The set CSP instances structure acyclic form tractable subproblem 4 This structural tractability result extended identifying tractable decompositions hypergraphs cycle cutset 17 hypertree decompositions 30 hinges 2233 treeclustering 18 These decompositions join original constraints sets size k project join form constraints new solution equivalent acyclic CSP instance 15 The value k called width decomposition A decomposition tractable k set instances width k tractably identiﬁed reduced acyclic case It rare realworld example acyclic structure modelled CSP instance However possibil ity widely applicable decompositions reduce instances acyclic case makes structural tractability useful practice A constraint language set allowed constraint relations A relational subproblem CSP consists instances relations lie speciﬁed language A language gives tractable relational subproblem called tractable 3435 Many tractable languages discovered 746 This paper introduces new study reductions domain permutations A domain permutation reduction stance given subproblem CSP independent permutation domain variable transforms instance lie subproblem Some preliminary results appeared conference paper 32 We determining domain permutation reduction exists particular instance rela tional subproblem corresponds exactly solving associated instance CSP subproblem When lifted problem tractable language tractable certain natural assumptions obtain new large tractable subproblem We consider wellknown maxclosed tractable languages 36 In original paper Jeavons Cooper left open question exists efﬁcient algorithm decide given instance domain permutation exists makes instance maxclosed 36 We answer question Section 52 case domain elements intractable analysing appropriate lifted problem However careful analysis lifted problem maxclosed languages able properly extend tractable subproblem bounded arity Boolean maxclosed instances We extend tractable subprob lem binary maxclosed instances shown 36 maximal tractable binary relational subproblem CSP Our theory explains constraint representation Stable Marriage Problem SMP 27 tractably solvable We shown instances natural domain permutation reduction maxclosed sub problem Recently new tractable subproblem binary instances arc consistency decision procedure known triangulated CSP instances 12 described It left open question discover unifying reason exists explains arc consistency decision procedure class In paper provide explanation showing instances natural domain permutation reductions maxclosed subproblem A row convex CSP instance 49 transformed domain permutation particular combinatoric property hold constraint relations A connected row convex CSP instance 20 satisﬁes slightly restrictive combinatoric property ﬁrst applying domain permutation restriction This stronger property preserved projection join It left open question tractably identify instances 1096 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 domain permutations exist transforming connected row convex instances An incorrect answer question unfortunately appeared literature In paper simple correct answer question We natural explanation tractability renamable Horn theories 342 lifted problems easily shown contained tractable majorityclosed relational subclass 38 It shown adhoc methods NPhard ﬁnd largest renamable Horn theory subset given set clauses 19 By analysing lifted language result simple consequence wellknown result theory MAXSAT problem 16 11 Outline paper We necessary basic deﬁnitions Section 2 continue Section 3 discussing tractable constraint languages We introduce new work Section 4 concept domain permutation reduction tractable relational subproblem associated lifted problem We power new theory analysis domain permutation reductions maxclosed constraint language Section 5 We use new theory Section 6 develop new tractable subproblems CSP unify disparate known tractable subproblems main results renamable Horn theory obtained directly We conclude paper Section 7 ﬁnal remarks directions future research 2 Deﬁnitions In section formal deﬁnition constraint satisfaction problem instance associated notions required paper 21 Constraint satisfaction problem instances Deﬁnition 1 An rary relation ρ D subset Dr For t ρ denote ti 1 r value ith coordinate position t t cid4t1 trcid5 Deﬁnition 2 A Constraint Satisfaction Problem instance P triple cid4V D Ccid5 V set variables D set called domain instance C set constraints Each constraint c C pair cid4σ ρcid5 σ list variables V called constraint scope ρ σ ary relation D called constraint relation We σ arity constraint A solution P mapping s V D cid4σ ρcid5 C sσ ρ A CSP instance Boolean domain elements It binary constraints arity There special representation binary relations ﬁnd useful Deﬁnition 3 The matrix representation binary relation ρ domain D 0 1matrix Mρ D rows columns The entry Mρcid4i j cid5 equal 1 exactly cid4i j cid5 ρ MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1097 22 Complexity constraint satisfaction For completeness representation CSP instance Firstly domain size size variable set given integers Then follows list constraints ﬁrst giving scope list variables relation Each constraint relation represented extensionally list tuples domain values In representation size instance cid4V D Ccid5 cid4 cid3 log V ρ logD σ logV logD cid2 cid4σρcid5C For set C CSP instances decision problem C determine instance C solution It clear graph 3colouring 3SAT reduced decision problem appropriate set CSP instances decision problem class CSP instances NPcomplete 43 If solve subproblem CSP tell realworld problem modelled instance subproblem feasible However task usually ﬁnd solution exists For set C CSP instances search problem determine instance C solution ﬁnd solution Deﬁnition 4 We problem P tractable algorithm runs time polynomial size input instance We P intractable NPhard 24 It complexity search problem concerned paper We extend notion tractable set constraint satisfaction problem instances requiring member ship polynomially determined Of course sensible restriction going use tractability results sense algorithm selector The extra requirement identiﬁability usually adopted researchers general satisﬁability 19 researchers structural decompositions 28 unfortunately researchers relational tractability If require polynomial time identiﬁcation instead consider set CSP instances tractable tractable search problem leads absurd notion set unsolvable CSP instances tractable The algorithm solving instances set CSP instances easy determining CSP instance member set NPhard The usefulness notion tractability highly doubtful To overcome limitation deﬁne set C CSP instances identiﬁcation problem C determine CSP instance lies C We class C CSP instances tractable search problem identiﬁcation problem tractable C intractable This notion tractability practical use When given CSP instance ﬁrst determine tractable subclass belongs apply appropriate solution algorithm Even stronger notion tractability tractable sets CSP instances Deﬁnition 5 A hypergraph H pair cid4V Ecid5 V set vertices E collection subsets V called hyperedges H The structure CSP instance P hypergraph σ P vertices variables P hyperedges scopes constraints P abstracted sets distinct variables A class CSP instances called structural precisely instances structure limited particular way A fundamental tractable structural subclass general constraint satisfaction problem instances structure acyclic 4 However subclass extended considering instances structure nearly acyclic sense tractable reduction acyclic instance 29 These reductions rise sets CSP instances cost reduction acyclic subclass bounded polynomial Such subclasses studied use tractable structural subclasses applicable wide variety realworld examples 41 1098 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Deﬁnition 6 A constraint language domain D set relations D The language CSP instance P constraint language deﬁned set relations constraints P The language set CSP instances union languages instances For constraint language Γ refer set CSP instances language contained Γ CSPΓ A class CSP instances called relational precisely CSPΓ language Γ A constraint language called tractable set instances deﬁned language tractable decision problem There known tractable constraint languages 713 We Section 3 It shown decision problem answered polynomially set instances deﬁned given constraint language search problem 11 It follows relational subclass tractable identiﬁcation problem language tractable tractable sense use term paper Previous work considered possibility reductions relational tractability In paper introduce notion domain permutation reduction instance given subproblem CSP independent permutation domain variable transforms instance lie subproblem This natural extension theory tractability yields large new tractable subclasses uniﬁes apparently disparate known tractable classes simpliﬁes proofs intractability Example 7 In example deﬁne new class Boolean CSP instances constraints generalisations Hornclauses A propositional literal propositional variable positive example p negated propositional vari able negative example q A clause disjunction literals example p q Let V p1 p2 V q1 q2 let V V V For clause c variables V positive disjuncts V negative disjuncts V said appropriate negation We c splitHorn disjunct inappropriate negation Order set variables V p1 q1 p2 q2 p3 q3 We represent clause constraint scope ordered list variables occurring clause relation allows truth assignments allowed clause In way represent conjuncts splitHorn clauses CSP instances Boolean domain F T We Boolean CSP instances splitHorn We easily construct splitHorn instances given structure So class splitHorn instances structurally tractable Example 8 Let H hypergraph Without loss generality identify vertex set H subset V For edge e H deﬁne edge clause ce pe p The CSP instance representing conjunct edge clauses structure H splitHorn cid5 There wellknown dichotomy result Boolean constraint languages 47 The language splitHorn instances NPhard However easily tractability splitHorn subclasses Section 65 general tractable class theory reductions tractable constraint languages 3 Tractable constraint languages In section brieﬂy wellknown algebraic approach determining tractability ﬁnite constraint language 1337 Deﬁnition 9 An nary operator φ set D function Dn D We apply φ n tuples t1 tn rary relation ρ D applying pointwise follows cid3 cid4 cid3 t1r tnr t11 tn1 φ φt1 tn cid4cid7 φ cid6 We φ nary polymorphism 37 ρ preserves membership ρ following way t1 tn ρ φt1 tn ρ MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1099 When φ polymorphism ρ ρ φclosed closed φ We φ polymorphism constraint language Γ φ polymorphism relation Γ If case Γ φclosed closed φ Closure certain types polymorphism guarantees tractability That efﬁcient algorithm solving class CSP instances constraint relations closed particular polymorphism In section shall special polymorphisms tractability use examples remainder paper We tool Polyanna 2526 ﬁnd useful polymorphisms given ﬁnite constraint language prove exist 31 Useful polymorphisms Deﬁnition 10 Given ordered domain 1 k deﬁne binary max operator operator returns larger arguments The set maxclosed relations forms tractable constraint language 36 In particular polynomial solution technique establish generalised arc consistency 543 choose largest remaining domain value variable There analogous tractable language minclosed relations closed binary operator min returns smaller arguments Deﬁnition 11 A ternary operator φ domain D called majority operator d e D φd d e φd e d φe d d d The set relations closed given majority operator tractable 38 A polynomial solution technique transform instance equivalent binary instance path consistency decision procedure 32 Polyanna A difﬁcult problem determining given constraint language tractable intractable We know existence useful polymorphism guarantee tractability 3637 Even usually difﬁcult determine tractability small constraint languages However Gault written program Polyanna 2526 determines polymorphisms input straint language It uses optimisation techniques reduce cost searching polymorphisms In addition listing polymorphisms Polyanna classify constraint language tractability classes Using fact constraint language domain D intractable nontrivial polymorphisms arity max3 D 37 Polyanna able demonstrate intractability cases 4 Domain permutation reductions Suppose tractable constraint language Γ P CSP instance domain If ﬁnd permutations domain independently variable transform P instance CSPΓ solve instance P algorithm Γ We ﬁrst permute domains apply algorithm Γ permute domains discovered solution This reduction technique tractable constraint languages focus paper Deﬁnition 12 A permutation set D bijection D D Let cid10π cid4π1 πr cid5 rtuple permutations D We apply cid10π rtuples values D natural way applying πi 1 r ith component We apply cid10π rary relations D applying turn allowed tuples 1100 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Let P cid4V D Ccid5 CSP instance G set permutations D A domain permutation P G mapping Π assigning variable v V permutation G For scope σ cid4v1 vr cid5 deﬁne Πσ cid4Πv1 Πvr cid5 For constraint c cid4σ ρcid5 deﬁne Πc cid4σ Πσ ρcid5 For CSP instance P cid4V D Ccid5 deﬁne ΠP cid4V D Πc c Ccid5 Discovery appropriate domain permutations identiﬁcation procedure new tractable classes It case identiﬁcation problem intractable consider possible permutation domain For reason need reduce set G permutations domain An example Example 41 given Section 61 Example 13 Consider splitHorn class deﬁned Example 7 Both clauses c1 p1 p2 q1 c2 p2 q1 q2 exactly disjunct inappropriate negation instance Psh representing conjunction splitHorn There exactly nontrivial permutation τ domain F T Psh interchanges T F The trivial permutation ι ﬁxes T F Deﬁne domain permutation Π Psh Πv cid8 ι τ v p2 The scope c1 cid4p1 p2 q1cid5 Πcid4p1 p2 q1cid5 cid4τ ι τ cid5 Hence Πc1 constraint representing clause p1 p2 q1 Similarly Πc2 constraint representing clause p2 q1 q2 Whilst clause represented Πc2 appropriate negation represented Πc1 ΠPsh splitHorn Deﬁnition 14 Let Γ constraint language P cid4V D Ccid5 CSP instance G set permutations D If exists domain permutation Π P G ΠP CSPΓ P Greducible Γ For given Γ G problem determining instance Greducible Γ called Greduction problem Γ Example 15 Let Γ constraint language Suppose G set permutations D contains identity permutation ι Let P cid4V D Ccid5 CSP instance CSPΓ Consider constant domain permutation Π Πv ι v V It immediate deﬁnition ΠP P Hence G contains identify permutation instance CSPΓ Greducible Γ For tractable languages Γ looking large sets instances C Greduction problem Γ tractable In case set Greducible instances C tractably solvable set CSP instances The results paper applications following theorem proof straightforward Theorem 16 Let Γ tractable constraint language domain D G set permutations D C set instances tractable Greduction problem Γ The set instances C Greducible Γ tractable search problem We obtain following corollary directly deﬁnition tractability Corollary 17 Let Γ tractable constraint language domain D G set permutations D C tractably identiﬁable set instances tractable Greduction problem Γ The set instances C Greducible Γ tractable MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1101 41 Using lifted relations ﬁnd domain permutations A natural application Theorem 16 case C CSPΔ language Δ Deﬁnition 18 Let Δ constraint language domain D The subproblem Greduction problem Γ instances precisely CSP instances CSPΔ called Greduction problem Δ Γ Example 19 Let Δ language Boolean ternary relations Let Γ language maxclosed Boolean ternary relations Again let τ swap Boolean domain elements let ι leave ﬁxed Let G1 ι G2 τ ι The G1reduction problem Δ Γ asks instances CSPΔ happen instances CSPΓ This identiﬁcation problem Boolean ternary maxclosed instances tractable On hand G2reduction problem Δ Γ asks given Boolean ternary instance independent permutations domain variable instance maxclosed The tractability question obvious Proposition 36 tractable problem For rary relation ρ D rtuples permutations G ρ relation Γ The set rtuples G simply rary relation G Deﬁnition 20 Let Γ constraint language ρ rary relation D G set permutations D We deﬁne Glifted relation ρ Γ ρG cid9 cid4π1 πr cid5 Gr Γ following rary relation G cid10 cid10 cid4π1 πr cid5ρ Γ cid11 ρG Γ Given CSP instance P use lifted relations construct CSP instance domain G solutions precisely domain permutations transform P instance CSPΓ Deﬁnition 21 Let P cid4V D Ccid5 CSP instance G set permutations D Γ constraint language cid5 Γ CSP instance cid4V G Ccid11cid5 Ccid11 cid4σ ρG We deﬁne Glifted instance P Γ P G Γ cid4σ ρcid5 C Example 23 concerning row convex constraints illustrates power technique Deﬁnition 22 A binary relation ρ ordered domain said row convex 49 row column matrix representation entries consecutive Example 23 Whilst row convex constraints form tractable language sense paper Dechter van Beek 49 proved path consistent CSP instance relations row convex globally consistent They described row convex identiﬁcation problem binary CSP instances precisely reduc tion problem row convex constraint language We solve row convex identiﬁcation problem particular CSP instance P cid4V D Ccid5 solving lifted instance Let domain D P 1 2 3 variables V P x y z We use constraint relation ρ convenience matrix form 1 2 3 0 1 1 1 0 1 0 1 1 3 2 1 Here explicitly indexed rows columns array elements domain There constraints P pair variables constrained relation ρ That C cid4cid4x ycid5 ρcid5cid4cid4y zcid5 ρcid5cid4cid4z xcid5 ρcid5 1102 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 To ρ row convex apply permutations possibly trivial domain variable There possible permutations domain 1 2 3 follows ι ﬁxes domain elements For j D πij swaps j ﬁxes domain element π moves 1 2 2 3 3 1 π moves 3 2 2 1 1 3 Let G set permutations Γ set row convex relations domain 1 2 3 The lifted Γ permutes rows matrix Γ consists pairs elements G The ﬁrst component tuple ρG relation ρG representation second permutes columns Let cid4ω1 ω2cid5 ρG Γ The permutation ω1 leave 1 3 adjacent Hence ω1 set Ω1 π12 π π23 π Similarly ω2 leave 1 3 adjacent 1 2 adjacent Hence ω2 set Ω2 π12 π Since permuting rows columns leaves row column contents unchanged permutation ω1 collects ones columns chosen independently permutation ω2 collects ones rows So lifted relation ρG Γ product unary relations ρG Γ Ω1 Ω2 cid4V G Ccid11cid5 variables P The domain set permutations G The lifted instance P G Γ There constraint Ccid11 constraint C In case Ccid11 cid4cid4x ycid5 ρG Γ The solutions P G Γ precisely assignments s V cid13 G v V sv π12 π By construction precisely set domain permutations solve reduction problem P simultaneously permuting domain variable constraint relation row convex cid5cid4cid4y zcid5 ρG Γ cid5cid4cid4z xcid5 ρG Γ cid5 We generalise notions specify new relational problem equivalent G reduction problem language Δ language Γ Deﬁnition 24 For constraint language Δ deﬁne Glifted language Δ Γ ΔG Γ ρG Γ ρ Δ We search problem set instances P G Γ P CSPΔ Glifted problem Δ Γ Proposition 25 The Glifted problem Δ Γ tractable ΔG Γ tractable constraint language Proof The result follows immediately fact instances CSPΔG CSPΔ cid2 Γ precisely lifted instances Proposition 26 The Greduction problem Γ P solution P G Γ solution Proof For CSP instance P solutions instance P G reduce P instance CSPΓ cid2 Γ deﬁned domain permutations G We immediately Greduction problem tractable lifted language tractable We consider cost moving representations In paper use results connecting lifted languages reduction problems The proof propositions straightforward omitted Proposition 27 If exists polynomial time algorithm given P CSPΔ generates P G tractable Greduction problem Δ Γ tractable Γ ΔG Γ Proposition 28 If ﬁnite subset ΔG Γ intractable Greduction problem Δ Γ It follows immediately Corollary 29 If Δ ﬁnite Greduction problem Δ Γ tractable ΔG Γ tractable MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1103 Proof If Δ ﬁnite ΔG table cid2 Γ Since Δ ﬁnite P CSPΔ generate P G Γ lookup Proposition 27 establish tractability novel subclasses general constraint satisfaction problem Proposition 28 useful establishing intractability certain problems We use Corol lary 29 repeatedly remainder paper prove tractability results We ﬁnish section showing new theory simple explanation important theorem existing proof involved Example 30 Recall deﬁnition row convex identiﬁcation problem Example 23 Dechter van Beek 49 proved row convex identiﬁcation problem tractable result graph theory In Example 23 established fact permuting rows columns leaves row column contents changed It follows lifted relation product unary relations lifted language tractable The tractability reduction problem follows immediately Proposition 27 42 The intractability reduction In general lifted problem reduction problem intractable lifting tractable languages More speciﬁcally exist constraint languages relation lifted problem reduction problem tractable language intractable Example 31 Let Γ 0valid language D 0 1 2 That Γ contains relations D allow zeros tupleWe solve instance assigning zero variable Γ tractable The graph 3colourability problem naturally encoded CSP instances domain D binary valued inequality constraints It follows language Δ containing binary threevalued inequality relation intractable Now consider CSP instance P cid4V D Ccid5 CSPΔ Suppose s solution P Let πv permutation D swaps sv 0 ﬁxes domain values The domain permutation Π v V Πv πv solution lifted instance PΓ Conversely let ˆs solution PΓ Deﬁne function scid11 V cid13 D scid11v ˆsv10 By construction scid11 solution P Since Δ ﬁnite follows Corollary 29 reduction problem intractable 5 Lifted relations maxclosure It surprising lifted problem Example 31 intractable exactly hard solving instances trying ﬁnd reductions Jeavons Cooper 36 pose question complexity identifying instances maxclosed applying independent reordering domain variable In section problem tractable class bounded arity Boolean CSP instances intractable larger domains case binary CSP instances The question remains open Boolean CSP instances unbounded arity Schaefer 47 classiﬁed maximal Boolean tractable relational classes CSP instances Our new result bounded arity Boolean instances properly extends maximal Boolean relational class partially solving open question Example 32 A disjunction propositional literals clause negative literal called antiHorn clause Any Boolean relation corresponding antiHorn clause called antiHorn relation Jeavons et al 37 showed antiHorn relations maxclosed For k 2 let Γk class maxclosed relations arity k Jeavons et al 37 showed class CSPΓk maximal tractable relational class That arity k relation ρ ρ Γk CSPΓk ρ intractable 1104 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Consider splitHorn class C Boolean instances deﬁned Example 7 Certainly k C contains instance CSPΓk Despite class C CSPΓk k 2 tractable This extension compatible Schaefers original classiﬁcation 47 identiﬁed precisely maximal inclusion tractable relational classes Given instance P cid4V D Ccid5 ﬁrst check polynomial time CSPΓk Otherwise deﬁne domain permutation Π P Πv permutation swapping T F v V Πv ﬁxes T F Since clause deﬁning P disjunct inappropriate negation follows constraint relation ΠP antiHorn maxclosed We established class instances C CSPΓk k 2 proper tractable extension maximal tractable relational class These new tractable CSP classes obtained domain permutation reduction maxclosed language It determine class arity k instances reducible domain permutations maxclosed language tractable 51 Lifting Boolean CSP instances maxclosure Let Γ set maxclosed relations ordered Boolean domain F T F T There permutations Boolean domain Again denote ι identity permutation τ permutation swaps domain values Let G set ι τ We ﬁnd representation tuple permutations G terms tuple binary operators By considering structure set tuples corresponding lifting maxclosure Boolean CSP instances reduction problem tractable bound imposed arity CSP instances Deﬁnition 33 Suppose l Gr l rtuple permutations Boolean domain F T We deﬁne ml min maxr rtuple binary operators 1 r mli max li ι Let ρ rary relation l Gr We deﬁne application ml t1 t2 ρ denoted mlt1 t2 tuple cid4ml1t11 t21 mlrt1r t2rcid5 We ml ﬁxes ρ t1 t2 ρ mlt1 t2 ρ We require following technical lemma Lemma 34 Let ρ Boolean relation arity r For l Gr ml ﬁxes ρ lρ maxclosed l ρG Γ Proof Let l Gr consider t1 t2 ρ We consider application l ml pair tuples t1 t2 We ﬁrst t1 t2 ρ maxlt1 lt2 lmlt1 t2 Let 1 r If t1i t2i maxlit1i lit2i lit1i limlit1i t2i Alternatively maxlit1i lit2i T limlit1i t2i occurs t1i cid14 t2i We know l ρG Γ t1 t2 ρ maxlt1 lt2 lρ By argument equivalent saying t1 t2 ρ lmlt1 t2 lρ This true t1 t2 ρ mlt1 t2 ρ exactly means ml ﬁxes ρ cid2 Example 35 Let t1 cid4F F T T cid5 t2 cid4T T F F cid5 ρ t1 t2 Since t1 t2 differ coordinate fourtuple Π permutations F T maxΠt1 Πt2 cid4T T T T cid5 It follows lifted relation ρ maxclosed constraint language cid4ι ι τ τ cid5 cid4τ τ ι ιcid5 Let l1 cid4ι ι τ τ cid5 lifted relation By deﬁnition ml1 cid4max max min mincid5 We obtain tuple Now let l2 cid4ι ι ι τ cid5 lifted relation By deﬁnition ml2 cid4max max max mincid5 In case ml2t1 t2 cid4T T T F cid5 ρ ml2 ﬁx ρ ml1t1 t2 t2 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1105 Using Lemma 34 lifted problem set Boolean CSP instances Boolean max closed constraint language tractably solvable We demonstrating lifted relations majority closed form tractable constraint language Proposition 36 The set lifted relations set Boolean relations Boolean maxclosed constraint language majorityclosed Proof Consider Boolean relation ρ lifted relation ρG prove directly ρG Γ majorityclosed Γ maxclosed constraint language We Consider l1 l2 l3 ρG Γ Recall Section 31 unique majority operator Boolean domain Let lmaj result applying majority operator l1 l2 l3 By deﬁnition lmaj mlmaj result applying unique majority operator min max tuples ml1 ml2 ml3 Consider tuples t1 t2 ρ let t3 ml3ml1 t1 t2 ml2 t1 t2 By Lemma 34 ml1 ml2 ml3 ﬁx ρ t3 ρ We t3 mlmaj t1 t2 If ml1 ml2 cid3 cid3 cid4 t3i ml3 t1i t2i ml1 cid3 cid4 t1i t2i ml1 cid4 cid3 t1i t2i mlmaj cid14 ml2 Alternatively ml1 cid3 cid4 cid3 t3i ml3 t1i t2i min cid3 cid4 t1i t2i ml3 cid4 cid3 t1i t2i mlmaj cid3 cid4cid4 t1i t2i ml2 cid3 t1i t2i max cid4cid4 Hence t1 t2 ρ mlmaj t1 t2 t3 ρ mlmaj ﬁxes ρ By Lemma 34 implies lmaj ρG Γ cid2 Proposition 37 The set bounded arity Boolean CSP instances reducible maxclosed constraint language forms tractable subclass Proof The set Boolean relations bounded arity ﬁnite constraint language Corollary 29 reduction problem tractable lifted language tractable cid2 The question maxclosed reduction problem general Boolean instances tractable open In section larger domains identiﬁcation problem intractable 52 Binary valued CSP instances In section consider tractable classes binary instances valued domain The classes consider reducible maxclosed instances The results section obtained Polyanna 2526 discover complexity subsets lifted relations Naturally subset 230 binary valued relations maxclosed tractable The reduction problem trivial There ﬁve nontrivial permutations valued domain By symmetry ﬁve permutations 230 relations maxclosed applying permutation domains These languages maxclosed appropriate choices domain ordering These languages trivial reduction problems solution apply domain permutation variable All maximal tractable languages There binary valued languages lifted language tractable nontrivial The lifted instances solved polynomial time simply choosing permutation variable 1106 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 instance Discovering appropriate domain permutation instance quadratic time cubic time pending lifted language considered The subsets binary valued relations correspond languages tractable However instances solvable lifted instances form tractable class binary valued instances There anomalous binary valued language lifted language tractable gives set reducible instances That language consisting domain permutations valued equals relation These precisely relations domain permutation makes maxclosed As lifted instance solution Whilst reduction problem tractable solution ﬁnd reducible instances class However set lifted relations tractable Proposition 38 The reduction problem binary valued constraint language binary valued maxclosed constraint language intractable Proof Consider binary relations domain 1 2 3 ρ1 cid41 1cid5 cid41 2cid5 cid42 1cid5 ρ2 cid41 2cid5 cid42 3cid5 cid43 1cid5 The lifted language ρ1 ρ2 intractable By Corollary 29 lifted problem reduction problem intractable cid2 Using Polyanna demonstrated tractability large subsets lifted relations shown entire set lifted relations tractable The intractability result fact veriﬁed hand Section 533 Green 31 reduce reliance generated results We largely answered question Jeavons Cooper 36 concerning complexity identifying instances maxclosed applying independent reordering domain variable For language arity r domain size d r cid2 2 identiﬁcation problem tractable d cid3 2 6 Domain permutation reductions tractable languages In section demonstrate new theory tractability certain new subclasses CSP instances tractable relational structural reason We explain tractability published disparate tractable subclasses general constraint satisfaction problem amenable general explanations tractability Finally correct previously published result tractability connected row convex identiﬁcation problem 61 Two permutations binary language Our new theory tractability certain subclasses tractable relational structural reason We set allowed permutations G size 2 Greduction problem Γ tractable entire set binary relations Δ ﬁnite domain D We use result Example 41 construct natural tractable class extends maximal tractable relational classes Lemma 39 Let Γ constraint language ﬁnite domain D G set permutations D Δ set binary relations D The Greduction problem Δ Γ tractable Proof It note Glifted relation Δ Γ binary valued It follows Glifted problem Δ Γ reduced 2SAT tractable Since D ﬁnite know Δ ﬁnite By Corollary 29 deduce Greduction problem Δ Γ tractable cid2 Corollary 40 Let Γ tractable constraint language ﬁnite domain D G set permutations D Δ set binary relations D The set instances CSPΔ Greducible Γ tractable MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1107 Example 41 Let D ordered domain 1 k Let G ι τ ιe e τ e k e 1 By Lemma 39 Greduction problem set binary relations D binary maxclosed constraint language tractable The tractable set instances deﬁned reduction according Corollary 40 certainly includes CSP instances language binary maxclosed In case domain permutation reduction applies permutation ι variable This subclass naturally includes analogous tractable set binary minclosed instances We reduce maxclosed constraint language applying τ variable In fact instances maxclosed minclosed We obtain instances binary maxclosed instance arbitrarily applying τ subset variables Since maxclosed binary relations form maximal tractable binary constraint language Theorem 65 Jeavons Cooper 36 tractable subclass example tractable relational reason Furthermore includes instances arbitrary binary structure structurally tractable subclass Many novel tractable subclasses described Corollary 40 62 The Stable Marriage Problem An instance Stable Marriage Problem SMP 23 consists n men n women married Each man preference list ranks women He prefer marry higher list lower list Similarly woman preference list men The problem ﬁnd stable set marriages A set marriages stable Every person marriage There man m woman w m prefers w wife w prefers m husband It known Stable Marriage Problem polynomially solvable In particular arc consistency decision procedure 27 particular representation problem Informally variable man domain set women Here choosing woman man Arc consistency remove women set allowed partners man A solution man marry preferred remaining partner More formally instance Stable Marriage Problem constraint satisfaction problem instance P cid4V D Ccid5 V 1 n D 1 n For m V πm permutation D w D τw permutation V C cst s t V s t cst cid4cid4s tcid5 ρst cid5 cid4p qcid5 ρst p cid14 q τpt τps πt q πt p τq s τq t πsp πsq We interpret V set men D set women We interpret πmw level preference n preferred 1 preferred man m woman w Similarly τwm deﬁnes level preference given man m woman w We SMP instance reducible maxclosed instance What required domain permutation orders domain man according preferences women This completely ex plains known solution algorithm Since preference orderings known shown set SMP instances example relational reduction described paper Deﬁnition 42 Let P SMP instance Consider pair marriages let p people involved We p happy respect pair marriages prefer partner person gender marriage 1108 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 A pair marriages stable unmarried unhappy man woman Theorem 43 Let P SMP instance deﬁne m V Πm πm Then ΠP maxclosed Proof Consider pair variables s t We require Πcst maxclosed In words ρ cid4πsp πt qcid5 cid4p qcid5 ρst maxclosed Choose b e f D cid4a f cid5 cid4b ecid5 ρst If πsa πsb πt f πt e cid3cid6 cid7 πsa πt f cid6 cid7cid4 πsb πt e cid6 cid7 πsb πt e ρ max Similarly πsb πsa πt e πt f So loss generality assume πsa πsb πt e πt f We need cid4πsb πt f cid5 ρ This equivalent proving cid4b f cid5 ρst To prove b cid14 f unmarried unhappy man woman pair marriages s b t f Assume contradiction b f Then men prefer b potential partner However woman b prefer men It clear marry preferred man This contradicts fact cid4a f cid5 cid4b ecid5 ρst Hence b cid14 f Now assume s unhappy pair marriages s b t f Since s unhappy prefers f b We know πsa πsb transitivity s prefers f Since cid4a f cid5 ρst know pair marriages s t f stable s prefers f f prefers t s Hence f happy So symmetry pair marriages s b t f stable cid2 This result leaves open question Whilst shown reduction SMP maxclosed class exists shown polynomial determine The reduction serve explain arc consistency choosing preferred remaining woman man polynomial solution algorithm However order SMP tractable class identify SMP instances That given binary CSP instance determine domain permutation makes SMP instance We conjecture identiﬁcation problem tractable Conjecture 44 The Stable Marriage Problem tractable subclass general constraint satisfaction problem 63 Triangulated CSP instances Cohen 12 deﬁned triangulated CSP instances arc consistency decision procedure It shown set triangulated CSP instances incomparable known subclass arc sistency decision procedure It left open question triangulated CSP instances reduced tractable relational subclass In section triangulated CSP instances simply subclass general constraint satisfaction problem polynomially reduced maxclosed constraint language In order deﬁne triangulated subclass need notion complement microstructure CSP instance 39 In general hypergraph deﬁned 1239 For purposes deﬁne graph complement microstructure binary CSP instances Deﬁnition 45 The complement microstructure binary CSP instance P cid4V D Ccid5 denoted MP graph cid4W F cid5 deﬁned follows W V D cid9cid9 F cid9cid9 cid4v dcid5 cid4v ecid5 cid4v1 d1cid5 cid4v2 d2cid5 cid11 cid10 cid10 d cid14 e cid11 cid10 cid6 cid10 cid11 cid4v1 v2cid5 ρ cid7 C cid4d1 d2cid5 ρ cid11 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1109 Fig 1 There possible conﬁgurations binary relation impossible cross These prevent relation maxclosed Fig 2 There possible conﬁgurations binary relation impossible cross This ﬁgure shows look like complement microstructure graph assuming relation constraint scope cid4v wcid5 An independent set graph set vertices connected edge We deﬁnition solutions P correspond exactly independent sets MP containing V vertices Deﬁnition 46 Let G cid4V Ecid5 graph A sequence S vertices G path consecutive vertices S adjacent G The path S cycle edge ﬁrst vertex vertex sequence The cycle chordal edge pair nonadjacent vertices S The graph G triangulated cycle chordal A set M vertices G clique pair vertices M edge G A binary CSP instance P triangulated 12 MP triangulated 631 Reduction maxclosed subclass Deﬁnition 47 Let ordering vertices graph G We elimination ordering vertex v G set vertices smaller connected v form clique It wellknown 45 triangulated graph admits elimination ordering In remainder section triangulated CSP instances fact reducible maxclosed constraint language What triangulated CSP instance P necessary domain permutation directly elimination ordering vertices MP Deﬁnition 48 A conﬁguration binary relation ordered Boolean domain 0 1 Let ρ binary relation ordered domain D let a0 a1 b0 b1 D a0 a1 b0 b1 The conﬁguration ρ cid4a0 a1 b0 b1cid5 binary relation Boolean domain 0 1 allows tuple cid4x ycid5 exactly cid4ax bycid5 ρ An impossible cross ρ conﬁguration η ρ cid40 1cid5 cid41 0cid5 η cid41 1cid5 η We need following property maxclosed relations proved Lemma 62 Jeavons Cooper 36 Proposition 49 A binary relation ρ maxclosed conﬁgurations impossible cross We want triangulated CSP instances reducible maxclosed CSP instances domain permutation exists impossible cross There exactly impossible cross conﬁgurations shown1 Fig 1 whilst Fig 2 shows conﬁgurations look like complement microstructure graph The left hand conﬁguration occur constraint relation constraint triangulated CSP instance leads nonchordal cycle vertices complement microstructure graph 1 We represent binary relations diagrammatically connecting pairs domain values corresponding tuple relation 1110 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Theorem 50 Let P cid4V D Ccid5 triangulated CSP instance Then P reducible maxclosed CSP instance domain permutation Proof Let elimination ordering vertices MP For variable v V elimination ordering induces ordering v domain D v This ordering domain values b D v b cid4v acid5 cid4v bcid5 elimination ordering MP We constraint cid4σ ρcid5 C σ cid4v wcid5 ρ maxclosed domain orderings v variable v w variable w We required prove orderings ρ contains impossible cross Consider conﬁguration κ ρ cid4a b e f cid5 v b e w f Assume contradiction κ impossible cross triangulated CSP instance looks like right hand conﬁguration given Fig 2 Since κ symmetrical assume loss generality cid4v bcid5 cid4w f cid5 elimination ordering Now know elimination ordering vertices MP As know cid4w f cid5 connected cid4v bcid5 impossible cross cases cid4v bcid5 cid4w ecid5 cid4w f cid5 form clique edge cid4v bcid5 cid4w ecid5 exist MP This means cid4b ecid5 ρ However contradicts assumption κ impossible cross As conﬁguration ρ impossible cross domain orders v w imposed elimination ordering ρ maxclosed domain orderings cid2 632 Tractability reduction Deﬁnition 51 A maximal cardinality ordering vertices graph G constructed V steps follows At step 1 choose vertex v1 At step V chosen v1 vi1 Now choose vi vertex connected largest set previously numbered vertices We order vi vj j The following wellknown result 45 Lemma 52 A maximal cardinality ordering vertices graph G elimination ordering G triangulated It follows directly triangulated CSP instances tractable subclass general constraint satisfaction problem What following theorem Theorem 3 12 direct consequence reduction demon strated paper Theorem 53 Arc consistency decision procedure triangulated CSP instances The open conjecture proven Arc consistency decision procedure triangulated CSP instances exactly reason decision procedure maxclosed CSP instances 64 Identifying connected row convex instances Recall row convex binary relations Deﬁnition 22 In section consider subset relations socalled connected row convex constraints 20 It known path consistency implies global consistency 20 49 tractably solve path consistent CSP instances know independent domain reordering variable constraint relation connected row convex Deﬁnition 54 The connected row convex identiﬁcation problem binary CSP instances ﬁnd domain permu tation results connected row convex instance The tractability connected row convex identiﬁcation problem left open problem 20 An incorrect answer question unfortunately appeared literature 10 We determine complexity connected row convex identiﬁcation problem establishing com plexity associated lifted language MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1111 Deﬁnition 55 The inverse binary relation ρ relation cid11 cid4i j cid5 cid4j icid5 ρ 1 ρ cid9 The reduced form relation ρ denoted ρ 0 1matrix obtained removing matrix represen tation ρ rows columns contain 0s Let M 0 1matrix For D exists j D Mcid4i j cid5 1 deﬁne image M interval cid9 cid16 min j Mcid4i j cid5 1 cid11 max cid9 j Mcid4i j cid5 1 cid11cid17 A binary relation ρ connected images b acid11 bcid11 consecutive rows ρ cid3 bcid11 1 acid11 cid3 b 1 A relation ρ connected row convex CRC ρ ρ1 row convex connected Deville et al 20 CRC relations closed necessary operations needed path consis tency algorithms path consistency implies global consistency problem instances constraint relations CRC This means CRC relations form tractable constraint language Deﬁnition 56 The median operator ordered domain 1 k ternary operator returns median middle value arguments The median operator majority operator recall Section 31 deﬁnes tractable constraint language It shown 38 connected row convex relations precisely binary relations closed median operator Cohen et al 14 present way viewing connected row convex constraints disjunctions simpler constraints However purposes sufﬁcient consider medianclosed relations By Corollary 29 connected row convex identiﬁcation problem ﬁnite domain equivalent solving lifted problem language medianclosed relations In section determine complexity lifted languages We Polyanna initially determine complexity lifted languages veriﬁed results hand This means proofs section rely solely generated results 641 Reducing lifted languages There possible polymorphisms Polyanna consider For reason vital ﬁrst reduce size relations Polyanna begins The lifted relations case natural simpliﬁcation Let Mρ matrix representation CRC relation ρ Reversing order rows columns Mρ affect CRC property affect rowscolumns consecutive It follows looking pairs permutations binary relation ρ CRC factor half possible permutations instance assuming image 1 image k 642 The valued domain We label permutations 1 2 3 Fig 3 By argument Section 641 need consider permutations G π0 π1 π2 dramatically reduces cost searching polymorphisms lifted relations We program generate lifted language 512 binary relations domain 1 2 3 There 92 relations language Polyanna determined closed majority operator returns ﬁrst distinct values It follows 38 language tractable connected row convex identiﬁcation problem tractable So obtain following results Fig 3 The possible domain orders permutations domain size 1112 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Fig 4 The possible domain orders permutations domain 1 2 3 4 Theorem 57 The connected row convex identiﬁcation problem valued domain tractable Proof The lifted language closed majority operator tractable Since lifted language ﬁnite use Corollary 29 reduction problem tractable cid2 Corollary 58 The set binary valued CSP instances CRC instances permutation domain independently variable tractable 643 The valued domain There 242 65536 binary relations domain 1 2 3 4 The number permutations domain 24 After factoring reﬂections Section 641 12 permutations given Fig 4 domain lifted relations Using dedicated program discovered 14501 lifted relations We intractability reduction problem showing intractability ﬁnite subset lifted language appealing Proposition 28 Consider binary valued relations ρ1 ρ2 shown Fig 5 The lifted relations relations λ1 λ2 respectively given Fig 5 A simpliﬁcation apply note unary polymorphism constraint language applied relations language changing complexity Proposition 59 See 133437 Let Γ constraint language set D let f unary polymorphism Γ CSPΓ polynomialtime equivalent CSPf Γ f Γ f ρ ρ Γ f ρ f t t ρ Polyanna discovered unary polymorphism lifted relations λ1 λ2 Application Proposition 59 means tractability pair domain lifted relations equivalent tractability pair valued relations υλ1 υλ2 shown Fig 5 Polyanna able prove language intractable A relation domain 1 2 3 4 seen relation domain 1 k k 4 allows tuples domain values larger 4 It follows connected row convex identiﬁcation problem domain size reduced connected row convex identiﬁcation problem larger domain intractable problems Theorem 60 The connected row convex identiﬁcation problem intractable domains size 644 Verifying complexity results Since Theorem 60 contradicts result published refereed conference need avoid reliance generated results We generated lifted relations λ1 λ2 hand We checked unary polymorphism υ Lastly needed verify υλ1 υλ2 intractable constraint language One way use combinations υλ1 υλ2 generate known intractable relation inequality relation valued domain This graph 3colouring reduce connected row convex identiﬁcation problem domain size Consider instance Fig 6 It tedious straightforward check implied constraint v1 v2 valued inequality relation valued inequality relation expressed υλ1 υλ2 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1113 Fig 5 Relations ρ1 ρ2 lifted relations λ1 λ2 factoring reﬂections Also equivalent intractable language υλ1 υλ2 formed applying unary polymorphism υ Fig 6 We use pair relations υλ1 υλ2 generate known intractable relation inequality relation valued domain 645 A weakness standardised form CRC relations We shown P NP Instead exposed ﬂaw previously published result 10 Here explicit ﬂaw Chen et al 10 propose polynomial time algorithm identifying connected row convex constraint satisfaction problem instances independent domain ordering variable Their method relies standardised form CRC relations claim recognised polynomial time Our results straightforward hand veriﬁed Deﬁnition 61 See Deﬁnition 9 Chen et al 10 Given connected row convex relation ρ domain size k let Mρ 0 1matrix representation k rows columns Let minρi denote position leftmost 1114 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Fig 7 This table shows combinations permutations relation upper left CRC It straightforward check standardised form row Mρ maxρi position rightmost row Mρ ρ called standard CRC relation minρ1 cid3 minρ2 cid3 cid3 minρk minρi minρi 1 minρi j maxρi cid3 maxρi 1 cid3 cid3 maxρi j 1 cid3 j cid3 k We exist relations CRC standardised Consider relation Fig 7 This binary relation connected row convex remain domain reﬂections It seen Fig 7 combinations domain reﬂections standardise CRC relation It follows algorithm Chen et al 10 fact solve general reduction problem set binary relations CRC constraint language Instead solves subset problem instances standardised CRC Any solution algorithm solution lifted problem instance However solutions lifted problem instance algorithm 65 The renamable Horn subclass Recall deﬁnition clauses literals Example 7 Propositional satisﬁability SAT problem determining given set clauses truth assignment propositional variables satisﬁes clauses There papers published describing socalled renamable Horn class SAT instances 2368942 It shown renamable Horn subclass tractable recognising solving SAT instances renamable Horn performed polynomial time Indeed del Val 19 gives algorithm solves 2SAT renamable Horn instances calls paradigmic examples tractable problems propositional satisﬁability In section deﬁne class renamable Horn SAT instances analogous class renamable Horn CSP instances We tractability classes tractable reduction problem tractable language propositional Horn clauses 47 It shown 6 problem identifying maximal subset clauses instance renamable Horn NPhard A wellknown properties lifted language language Horn clauses shows directly NPhard problem MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1115 Deﬁnition 62 A Horn clause clause positive literal A set clauses renamable Horn replacement literals uniformly clauses negated versions transforms clauses Horn clauses A Boolean CSP instance renamable Horn constraint relations represent clauses exists domain permutation transforms constraint relations Horn clauses 651 The tractability renamable Horn explained Solving renamable Horn instance given appropriate domain permutation easy We apply domain permu tation solve resulting instance unit resolution solution algorithm Horn 47 It discovery appropriate domain permutation tractable Proposition 63 Let c clause Let Sc set variables set F set T makes clause evaluate F Then lifted relation c Horn constraint language consists tuples invert domain set variables ψ symmetric difference ψ Sc size Proof Follows directly deﬁnition Horn clause cid2 Example 64 Consider clause c p q r s The assignment satisfy c p cid13 F q cid13 F r cid13 T s cid13 T That Sc p q There exactly nontrivial permutation τ domain F T interchanges T F The trivial permuta tion ι ﬁxes T F With respect order cid4p q r scid5 tuple permutations negate precisely Sc Π0 cid4τ τ ι ιcid5 The clause Π0c p q r s Horn clause Alternatively negate p q r tuple permutations Π1 cid4τ τ τ ιcid5 In case Π1c p q r s Horn The symmetric difference Sc p q r size Conversely symmetric difference Sc set p r size Let Π2 cid4τ ι τ ιcid5 Π2c p q r s Horn Recall Section 31 set relations closed majority tractable For Boolean domain precisely majority operator denote δ Proposition 65 The lifted language set clauses Horn constraint language majorityclosed Proof Consider clause c Let λc lifted relation Horn constraint language let l1 l2 l3 tuples λc We prove δl1 l2 l3 λc The result trivial tuples identical assume distinct By Proposition 63 variable Sc correspond permutation τ tuples Hence δl1 l2 l3 equal τ precisely variables Sc cid2 Clauses SAT instances represented implicitly disjunct literals By Proposition 63 clear lifted rary relation r 1 tuples So polynomial algorithm generating lifted instances general reduction problem SAT HornSAT Hence Propositions 65 27 provide simple explanation tractability renamable Horn class SAT instances 652 A new tractable class Having explained tractability implicitly expressed renamable Horn class SAT instances tractable class Boolean CSP instances We tractable determine relation instance represents clause Since precisely assignment satisfy clause counting allowed assignments sufﬁcient determine constraint represents clause 1116 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 Proposition 66 The renamable Horn class CSP instances tractably identiﬁable Example 67 Recall splitHorn subclass deﬁned Example 7 We easily tractability class The instances renamable Horn 653 Maxrenamable Horn Consider problem identifying SAT instance maximum number clauses renamable Horn This maxrenamable Horn problem The MAXCSP problem determine given CSP instance maximum number constraints simultaneously satisﬁed Identifying maximum subsets clauses renamable Horn corresponds precisely solving instances MAXCSP problem lifted language Creignou 16 characterised tractability Boolean constraint languages MAXCSP problem There tractable cases We readily determine lifted language contained tractable languages Explicitly lifted relation clause c deﬁned Example 64 languages The intractability max renamable Horn problem follows immediately Proposition 28 7 Conclusion In paper identiﬁed genuinely novel tractable classes CSP instances relational structural classes We constructed tractable class properly extends maximal tractable relational classes We considered feasible identify constraint satisfaction problem instances max closed independent domain reordering variable We shown Boolean case tractable identify instances arity instances bounded We shown larger domain sizes general intractable identify instances Furthermore demonstrated theory serves explain constraint approach Stable Marriage Problem tractably solvable instances reduce maxclosed instances We shown triangulated instances reducible maxclosed constraint language In sense uniﬁed tractable classes CSP instances maxclosed SMP triangulated arc consistency decision procedure It hoped theory explain arc consistency decision procedure tree structured CSP instances Perhaps instances actually reducible maxclosed instances Unfortunately case instance binary valued relations lifted relations maxclosed constraint language Section 52 So need ﬁnd unifying theory CSP instances arc consistency decision procedure For class CSP instances given domain considered complexity ﬁnding domain permutations transform given instance connected row convex instance An incorrect answer tractable domain published refereed conference In paper shown easily veriﬁable results problem tractable precisely domain elements Lastly theory provided simple explanation tractability recognising instances renamable Horn It serves explain ﬁnding maximum subsets clauses renamable Horn NPhard This new method reduction relational tractability surprising extensive applications simplifying theoretical understanding It practical reduction procedure real instances Acknowledgements The authors grateful Marc van Dongen 50 originally derived SMP example reduction maxclosed tractable subclass different context His example application reductions tractable language theory greatly strengthens work We grateful Peter Jeavons alerted connections work renamable Horn theory Finally like thank anonymous reviewer MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 1117 earlier draft work alerting need polynomial conversion reduction problem lifted problem resulting Propositions 27 28 Corollary 29 References 1 J Allen Natural Language Understanding second ed The BenjaminCummings Publishing Company 1995 2 B Aspvall MF Plass RE Tarjan A linear time algorithm testing truth certain quantiﬁed Boolean formulas Information Processing Letters 8 1979 121123 3 B Aspvall Recognizing disguised NR1 instances satisﬁability problem Journal Algorithms 1 1 1980 97103 4 C Beeri R Fagin D Maier M Yannakakis On desirability acyclic database schemes Journal ACM 30 1983 479513 5 C Bessière JC Régin Arc consistency general constraint networks preliminary results Proceedings IJCAI97 Nagoya Japan 1997 pp 398404 6 E Boros Maximum renamable Horn subCNFs Discrete Applied Mathematics 9697 1999 2940 7 A Bulatov P Jeavons A Krokhin Classifying complexity constraints ﬁnite algebras SIAM Journal Computing 34 3 2005 720742 8 V Chandru JN Hooker Extended Horn sets propositional logic Journal ACM 38 1991 205221 9 V Chandru C Coullard P Hammer M Montanez X Sun On Renamable Horn Generalized Horn functions Annals Mathematics Artiﬁcial Intelligence 1 1990 3348 10 E Chen Z Zhang X Wang K Aihara An algorithm fast recognition connected rowconvex constraint networks JFPLC 2001 The Tenth International French Speaking Conference Logic Constraint Programming April 2001 pp 4358 11 D Cohen Tractable decision constraint language implies tractable search Constraints 9 3 2004 219229 12 DA Cohen A new class binary CSPs arcconsistency decision procedure Principles Practice Constraint ProgrammingCP 2003 Lecture Notes Computer Science SpringerVerlag 2003 pp 807811 13 D Cohen P Jeavons The complexity constraint languages F Rossi P van Beek T Walsh Eds Handbook Constraint Program ming Elsevier 2006 Chapter 8 14 D Cohen P Jeavons P Jonsson M Koubarakis Building tractable disjunctive constraints Journal ACM 47 5 2000 826853 15 DA Cohen P Jeavons M Gyssens A uniﬁed theory structural tractability constraint satisfaction spread cut decomposition IJCAI 2005 pp 7277 16 N Creignou A dichotomy theorem maximum generalized satisﬁability problems Journal Computer System Sciences 51 1995 511522 17 R Dechter J Pearl Networkbased heuristics constraint satisfaction problems Artiﬁcial Intelligence 34 1 1988 138 18 R Dechter J Pearl Tree clustering constraint networks Artiﬁcial Intelligence 38 1989 353366 19 A del Val On 2SAT renamable Horn AAAI 17th National Conference Artiﬁcial Intelligence AAAIMIT Press 2000 pp 279 284 20 Y Deville O Barette P van Hentenryck Constraint satisfaction connected row convex constraints Artiﬁcial Intelligence 109 1999 243271 21 NW Dunkin JE Bater PG Jeavons DA Cohen Toward high order constraint representations frequency assignment problem Technical Report CSDTR9805 Department Computer Science Royal Holloway University London Egham Surrey UK 1998 22 R Fagin Degrees acyclicity hypergraphs relational database schemes Journal ACM 30 1983 514550 23 D Gale LS Shapley College admissions stability marriage The American Mathematical Monthly 69 1 1962 915 24 M Garey DS Johnson Computers Intractability A Guide Theory NPCompleteness Freeman San Francisco CA 1979 25 RL Gault Polyanna technical manual version 100 Technical Report RR0120 Computing Laboratory Oxford University 2001 26 RL Gault PG Jeavons Implementing test tractability Constraints 9 2 2004 139160 27 IP Gent R W Irving M F Manlove P Prosser BM Smith A constraint programming approach stable marriage problem Pro ceedings CP 2001 7th International Conference Principles Practice Constraint Programming Lecture Notes Computer Science vol 2239 SpringerVerlag 2001 pp 225239 28 G Gottlob L Leone F Scarcello A comparison structural CSP decomposition methods Artiﬁcial Intelligence 124 2000 243282 29 G Gottlob L Leone F Scarcello Hypertree decompositions A survey Proceedings 26th International Symposium Mathematical Foundations Computer Science MFCS01 Lecture Notes Computer Science vol 2136 SpringerVerlag 2001 pp 3757 30 G Gottlob L Leone F Scarcello Hypertree decomposition tractable queries Journal Computer System Sciences 64 3 2002 579627 31 MJ Green New methods tractability constraint satisfaction problems PhD thesis University London Department Computer Science Royal Holloway Egham Surrey UK June 2005 32 MJ Green DA Cohen Tractability approximating constraint languages Principles Practice Constraint ProgrammingCP 2003 Lecture Notes Computer Science SpringerVerlag 2003 pp 392406 33 M Gyssens PG Jeavons DA Cohen Decomposing constraint satisfaction problems database techniques Artiﬁcial Intelligence 66 1 1994 5789 34 PG Jeavons On algebraic structure combinatorial problems Theoretical Computer Science 200 1998 185204 35 PG Jeavons DA Cohen An algebraic characterization tractable constraints Computing Combinatorics First International Con ference COCOON95 Xian China August 1995 Lecture Notes Computer Science vol 959 SpringerVerlag 1995 pp 633642 36 PG Jeavons MC Cooper Tractable constraints ordered domains Artiﬁcial Intelligence 79 2 1995 327339 1118 MJ Green DA Cohen Artiﬁcial Intelligence 172 2008 10941118 37 PG Jeavons DA Cohen M Gyssens Closure properties constraints Journal ACM 44 1997 527548 38 PG Jeavons DA Cohen MC Cooper Constraints consistency closure Artiﬁcial Intelligence 101 12 1998 251265 39 P Jégou Decomposition domains based microstructure ﬁnite constraintsatisfaction problems AAAI 1993 pp 731736 40 HA Kautz B Selman Planning satisﬁability Proceedings Tenth European Conference Artiﬁcial Intelligence ECAI92 1992 pp 359363 41 J Larrosa E Morancho D Niso On practical use variable elimination constraint optimization problems stilllife case study Journal Artiﬁcial Intelligence Research 23 2005 421440 42 HR Lewis Renaming set clauses Horn set JACM 25 1 1978 134135 43 AK Mackworth Consistency networks relations Artiﬁcial Intelligence 8 1977 99118 44 U Montanari Networks constraints Fundamental properties applications picture processing Information Sciences 7 1974 95132 45 DJ Rose Triangulated graphs elimination process Journal Mathematical Analysis Applications 32 1970 597609 46 F Rossi P van Beek T Walsh Eds The Handbook Constraint Programming Elsevier 2006 Chapter 8 Foundations Artiﬁcial Intelligence 47 TJ Schaefer The complexity satisﬁability problems Proceedings 10th ACM Symposium Theory Computing STOC78 1978 pp 216226 48 P van Beek Reasoning qualitative temporal information Artiﬁcial Intelligence 58 1992 297326 49 P van Beek R Dechter On minimality decomposability rowconvex constraint networks Journal ACM 42 1995 543561 50 MRC van Dongen From local closure properties global closure property Personal communication 2002 The source SMP example