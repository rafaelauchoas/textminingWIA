Artiﬁcial Intelligence 115 1999 65105 Knowledgebased proof planning Erica Melis cid3 Jörg Siekmann 1 Universität des Saarlandes Fachbereich Informatik DFKI D66041 Saarbrücken Germany Received 1 February 1999 Abstract Knowledgebased proof planning new paradigm automated theorem proving ATP swings motivational pendulum AI origins employs develops AI principles techniques hierarchical planning knowledge representation frames controlrules constraint solving tactical metalevel reasoning It differs traditional search based techniques ATP respect level abstraction proof theorem planned abstract level outline proof This outline abstract proof plan recursively expanded construct proof logical calculus The plan operators represent mathematical techniques familiar working mathematician While knowledge domain speciﬁc mathematical ﬁeld representational techniques reasoning procedures generalpurpose The generalpurpose planner makes use mathematical domain knowledge guidance provided declaratively represented control rules correspond mathematical intuition prove theorem particular situation These rules provide basis metalevel reasoning goaldirected behaviour We demonstrate approach mathematical domain limit theorems proposed challenge automated theorem proving late Woody Bledsoe Using proof planner cid127MEGA able solve known challenge theorems including solved existing traditional systems cid211 1999 Elsevier Science BV All rights reserved Keywords Theorem proving Planning Automated proof planning Metalevel reasoning Integrating constraint solvers cid3 Corresponding author Email meliscsunisbde 1 Email siekmanndfkide 0004370299 matter cid211 PII S 0 0 0 4 3 7 0 2 9 9 0 0 0 7 6 4 1999 Elsevier Science BV All rights reserved 66 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Automated theorem proving beautiful process know mathematics This cover eyes blinders hunt cornﬁeld diamondshaped grain corn Mathematicians given great deal direction millennia Let pay attention Woody Bledsoe 1986 1 Introduction Since early days artiﬁcial intelligence AI research schools existed automated theorem proving logicoriented approaches psychologically oriented approaches try simulate people For example Dartmouth Conference 1956 systems wide attention considered classic today Martin Davis decision procedure based Presburgers Arithmetic 30 grand ancestor logicoriented systems seminal Logic Theorist 97 pioneered second category In 1954 Davis ﬁrst prove theorem The sum numbers year later Alan Newell Herb Simon ﬁnished joint later called Logic Theorist succeeded proving theorems Principia Mathematica 106 sparked ﬁeld artiﬁcial intelligence Since Hao Wangs work 121 development resolution principle 1965 104 logicoriented searchbased paradigm large dominated ﬁeld far strongest systems built train thought Other ideas fully absent Woody Bledsoe 5 19103 advocated automated theorem proving based mathematical knowledge practice 13 Bledsoes beautiful quotation shows scepticism purely search based theorem proving fact believed succeed proving difﬁcult theorems mathematically wellunderstood domains He developed vision concepts procedures necessary automated theorem proving thought researchers working resolution type systems switch convinced wrong track 12 Traditional automated theorem proving based generalpurpose machineoriented logical calculi resolution calculus 104 tableaux 114 matrix methods 311 The inference rules calculus span search space thirty years research led battery reﬁnements strategies traverse large billions nodes spaces In spite attempts contrary hyperresolution rule inference steps deﬁned calculi small low level compared proof steps trained mathematician Traditional systems MKRP 33 OTTER 80 SETHEO 72 SPASS 119 essentially black boxes input theorem hopefully exactly axioms necessary proof theorem setting appropriate parameters searches blindly sequence logic rules proves theorem axioms The search supported generalpurpose E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 67 control called strategies reﬁnements 75 purely syntactic nature hardly reﬂects mathematical ways discovering proof Now approach far mathematical practice attack AIoriented community 4546 entirely unreasonable chess program Deep Blue demonstrated derives strength search techniques Recent success blind SATtechniques corroborate advantages blind fast simple mechanisms domaindependent AI techniques Just like automated chess areas traditional ATP systems beneﬁt technological development faster computers larger storagethey store search billions clauses 2 Due improvement technical advances representational techniques indexing 42 systems gained considerable strength prove nontrivial open mathematical problems Robbins Algebra Conjecture 79 proofs unintuitive tricky humans In general proofs genuinely mathematical problems wellunderstood domains capabilities todays systems So years research time ripe ask Woody Bledsoes question wrong track It appears situation unique automated theorem proving Over time trapped shared vision appropriate ways tackle problems trapped funding sources constantly justify making incremental progress Sometimes worthwhile stepping taking entirely new old look problems think solving new ways This takes courage leading different sorts solutions years poorer performance existing solutions With years perseverance able overcome initial problems new approaches eventually leapfrog better performance Or turn totally wrong That courage comes Rodney Brooks AAAI96 11 The psychology mathematical invention Why mathematician cope long complex proofs strategies avoiding promising proof paths Given current state knowledge human formal reasoning capacity know answer However following observations generally 2 The ﬁrst theorem prover implemented second author mid seventies untypical generation search spaces 100000 clauses generate proofs length dozen steps Our MKRP development ﬁfteen years search spaces million clauses end eighties ﬁnd proofs steps Todays systems SPASS OTTER search spaces billions Clauses generated 3000000000 At end search 400000 clauses use This took 314 hours 433 Megabyte RAM I guess successful search search space 14 big Bill McCune OTTERs ﬁgures large search spaces open problem combinatory logic Personal communication 68 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 accepted ﬁrst mathematicians reasoning based vivid concrete representation problem hand 43118 Secondly difﬁcult theorems shown scratch usually known proof technique proof induction pigeon hole principle proof diagonalization In fact good mathematician dozen presumably thousand proof techniques particular ﬁeld disposal Also surely thousands probably million minor tricks trade apply homomorphism differentiate reformulate given problem In hindsight preposterous assume achieved blind search For difﬁcult open mathematical problemsusually open exactly standard attacks yields solutionthere need combine reshufﬂe standard techniques thirdly ﬁnally empirical evidence 66101 suggests mathematicians plan proof levels abstraction proof discovery process The following quotation taken interview German mathematician Faltings proved Mordells Conjecture beautifully illustrates case point 3 When asked proved famous problem said 34 Man hat Erfahrungen dass bestimmte Schlüsse unter bestimmten Voraussetzungen funktionieren Man überlegt sich im Groben Wenn ich das habe könnte ich das zeigen und das nächste Hinterher muss man die Details einfügen und sieht ob man es auch wirklich machen kann To translate freely English We know experience certain inferences usu ally successful certain prerequisites So ﬁrst ponder reasonable way proceed In words roughly plan certain result result follow Afterwards ﬁll details check plan works Proof plans cognitive reality following sections like mention areas research beneﬁt new way seeing things fact deﬁned concrete representational level level logical calculus 12 Proofs analogy Theorem proving analogy small subarea ATP plagued notorious problem ﬁnd proofs analogous hard establish mapping syntactic representation source proof targetand techniques based mappings fail 81 In particular proof idea details source target proof 3 In early 1980s Gerd Faltings solved Mordells Conjecture says Algebraic curves order 2 ﬁnitely rational points Mordells Conjecture considered hard mathematical problem took 60 years solve Last derives signiﬁcance close relative Fermats famous conjecture Faltings received ﬁeld medal work E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 69 differ considerably For instance proof LIM limit sum functions equals sum limits transferred proof LIM limit product functions equals product limits surely theorems similar mapping established Furthermore applying inference rule source target situations necessarily lead subgoals match multiplication function identically mapped procedure decomposing natural number product primes lead different numbers factors source target So ﬁx right level abstraction calculus level Proof plans abstract calculuslevel proofs capture essential idea proof explicitly In 82 shown new representation leads improved analogical transfer derivational analogy introduced Jaime Carbonell 24 Analogydriven proof plan construction 82 ﬁrst implemented proofs mathematical induction 93 later solve open challenge problem Woody Bledsoe 84 13 Proof presentation The output successful run traditional notoriously unreadable let intuitively understandable way mathematicians communicate Take instance following theorem Theorem Let K ordered ﬁeld If 2 K 1 implies 0 acid01 1 vice versa The proof generated prover OTTER looks follows 1 xx 2 xy 0zxzyz 3 xy yzxz 4 xy yx 5 x0 0x0invx 7 factor412 xx 8 0inva inva1 9 01 10 x0xinvx1 1211 1xx 13 1a 19 hyper3913 0a 27 para_into1912511unit_del719 0inva 4847 para_from10111912unit_del7 ainva1 60 hyper21327demod1248 inva1 65 hyper82760 F While textbook proof taken 76 reads 70 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Proof Let 1 According Lemma 110 acid01 0 Therefore acid01 D 1acid01 aacid01 D 1 2 This huge discrepancy annoying technical problem translating machine proof natural language 55 Obviously human readable form proof different level abstraction gives outline details possibly translation calculuslevel proof principle provided experienced mathematician In addition difﬁcult proofs proof mathematics means understand communicate result holds secondly means achieve precision 77 Alan Robinson coined formula 104 Proof D Guarantee C Explanation As guarantee proof logical calculus checked proof checking program logicians folly assume explanation The logical proof provides justiﬁcation explanation Alan Robinson 105 suggests proofasexplanation aspect far important far interesting mere logical guarantee For comprehensible communication explanation abstract level required Such explanation generated directly calculus level proof We shall argue presentation textbook proof based calculuslevel expansion depending intended reader proof plan possible levels abstraction 14 An alternative Proof planning Proof planning originally conceived mere extension tactical theorem proving LCF 41 NuPrl 28 Isabelle 99 tactical theorem proving Tactical theorem proving based notion tactic encapsulates repeatedly occurring sequences inference steps macrosteps These tactics realized programs executing tactic yields sequence calculuslevel proof steps relieves user applying single inference rules row interactive theorem proving The idea proof planning follows The representation proof developed consists sequence complex operators application homomorphism expansion deﬁnition application lemma simpliﬁcation differentiation function Each operators called methods principle expanded sequence inference steps natural deduction ND calculus tactic Now individual tactic kind augmented pre postconditions plan sequence tactics This marriage planning operators tactics Alan Bundys key idea 20 proof planning More recently type methods schematic expansions ﬁned 54 Hence methods necessarily restricted tactical origins deﬁned generally proof planning operators 91 building blocks proof plans recursively expanded calculuslevel proof E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 71 Proof planning searches plan sequence methods preconditions method match postcondition predecessor sequence This wellknown view plan 35 leads naturally new engine automated theorem proving planner plan sequence methods transforms proof assumptions theorem Standard heuristics techniques planning literature employed Moreover proof planning provides means global search control correspond mathematical intuition opposed local syntactic search heuristics commonly search control traditional automated theorem proving 75 The ﬁrst proof planner CLAM21 designed prove theorems mathe matical induction CLAM employs rippling search heuristic difference reduc tion 2256 Rippling based annotated logic calculus handles anno tated terms uses annotated matching More speciﬁcally skeleton annotation dicates commonalities induction hypothesis induction conclu sion skeleton context annotation indicates difference duction hypothesis induction conclusion context rippling es sentially contextreducing rewriting preserves skeleton common alities Such difference reduction works particular equational proofs proofs mathematical induction However theorems dif ﬁcult impossible prove CLAM instance limit theorem LIM cause problems means control insufﬁcient ﬂexible ii domainspeciﬁc methods iii need construct mathematical objects certain theoryspeciﬁc properties supported To extend proof planning article introduces knowledgebased proof planning First shows knowledge available mathematics represented Section describes generalpurpose proof planner makes use mathematical domain knowledge including methods controlrules external reasoners Several techniques restrict search proof planning introduced particular metalevel reasoning Section 32 constraint solving Section 333 In Section 4 proved limit theorems knowledgebased proof planner cid127MEGA 10 knowledgebased proof planning possible principle solve problems solved generalpurpose systems Finally Section 5 argues proof plans provide representational abstraction proof wellsuited communication user cid127MEGA complex theorem proving interactive automated proof development distributed architecture integrates mathematical services proof planner traditional automated theorem provers knowledge base algebra systems proof verbalization component graphical user interface In following shall restrict presentation cid127MEGA aspects directly relevant knowledgebased proof planning cid127MEGA documented inter alia 10110111 72 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 2 Principles proof planning We shall brieﬂy review basic notions ﬁeld planning AI subsequently introduce proof planning terminology Our extensions led knowledgebased proof planning presented Section 3 We use cid27 substitutions abbreviate result applying cid27 F F cid27 21 Basics planning A planning problem consists initial state describing initial situation goals achieved A planning domain deﬁned operators usually represent actions The operators speciﬁcations planning process In STRIPS notation 35 speciﬁcations called preconditions effects Preconditions specify conditions planning state satisﬁed operator applicable effects potential changes planning state caused operator application In STRIPS representation effects represented addlists cid8 deletelists cid9 lists literals added deleted operator application Note preconditions effects usually formulated expressions restricted ﬁrstorder logical objectlevel language A B armholds X However planners Prodigy 96 allow additional preconditions formulated metalevel language restrict instantiation parameters They called application conditions following A partial plan partially ordered set steps partially instantiated operators additional instantiation constraints auxiliary constraints 62 A partial plan seen implicit representation set sequences set potential solutions consistent ordering instantiation auxiliary constraints A solution planning problem complete plan fully instantiated linearization partial plan transforms initial state goal state state goals hold The operation planner repeatedly reﬁnes partial plan adds steps constraints restricts set potential solutions solution picked set potential solutions 61 Table 1 shows simpliﬁed backward planning algorithm handling goal interactions Planning starts partial plan cid250 deﬁned problem solved cid250 consists steps t0 t1 instantiations dummy operators start finish They initial state cid8effects goals preconditions respectively cid250 represents order constraint t0 cid30 t1 The introduction step partial plan removes open goal g goal agenda G introduce new open subgoals constraints This reﬁnement continued open goals left solution operator applicable anymore Search involved planning algorithms process planning consists sequence choices leads complete plan These decisions include choose open goal solve planning operator use order attain goal instantiations choose These decisions inﬂuence way search space traversed restricted Some planners use explicit declarative controlrules guide search E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 73 Table 1 Outline backward planning BackwardsRefinePlancid25 G Termination goal agenda G Solution operator applicable Fail Goal Selection Choose open goal g 2 G Operator Selection cid15 For operator M cid8effect e M let cid27 matcher ecid27 D g applicationconditionsMcid27 D true M applicable cid15 Choose applicable M backtracking point cid0 insert M cid25 cid0 insert constraints cid25 cid0 update G Recursion Call BackwardsRefinePlan reﬁned partial plan cid25 A diversity planning approaches developed kinds hierarchical planning techniques precondition abstraction 107 operator abstraction planning 116 called hierarchical task network HTN planning Precondition abstraction ﬁrst searches abstract space ignoring certain preconditions operators These ignored goals considered later lower hierarchical level planning Operator abstraction employs complex opposed primitive operators represent complex actions A complex operator expanded partial subplan according schema Since primitive actions executed complex operators expanded order obtain executable plan After brief review classical AI planning shall transfers proof planning Search problems proof planning extensions proof planning cope large search space addressed Section 3 22 Proof planning Proof planning considers proof problem planning problem application planning techniques mathematics This domain exhibits seriously complex problems potentially inﬁnitely branching search spaces However notorious problem goal interaction typically present domain The particular planning algorithm actually important general article cid127MEGA experiment different algorithms refer simple proof planner backward forward planning extended hierarchical planning The initial state proof planning collection sequents 4 proof assumptions goal sequent proven A proof planning domain consists methods controlrules theoryspeciﬁc reasoners A partial proof plan partially ordered 4 A sequent object cid1 F set formulae cid1 formula F means F derived cid1 74 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Induction Basecase Symbolic evaluation Simpliﬁcation Tautology checking Stepcase Rewriting Fertilization Fig 1 Proof pattern mathematical induction fertilization application induction hypothesis set instantiated methods complete fully expanded proof plan sequence instantiated primitive methods transfers initial state goal state Thus complete plan solution problem words proof theorem The beauty approach methods represent familiar mathematical proof techniques frequently occurring mathematical formula manipulations In particular methods capture 1 common patterns proofs common structure proofs mathematical induction Fig 1 2 common proof procedures term simpliﬁcations example application Hauptsatz Number Theory natural number uniquely represented product prime numbers Examples methods encode common proof structure Diagonaliza tion 25 Induction 21 theoryspeciﬁc ComplexEstimate 85 estimation method planning limit theorems presented Section 4 Meth ods encode common procedures methods control encoded ComputeIntegral Optimise 110 SimplifyTerm The intuitive mathematical counterpart methods reﬂected good textbooks For instance ﬁrst chapter textbook Elements Theory Computation 73 Lewis Papadimitriou introduces common proof techniques Mathematical Induction Pigeonhole Principle Diagonalization Principle main tools book The textbook Computability Complexity Languages 31 describes following common pattern diagonalization proofs Fig 2 cid15 A certain set E enumerated suitable fashion cid15 It possible help enumeration deﬁne object d different object enumeration cid15 The deﬁnition d d belong E contradicting assertion began enumeration elements E From description planning method diagonalization proofs prove known mathematically difﬁcult theorems diagonalization 25 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 75 Find enumeration E Deﬁne object d d different e E d E Derive contradiction Fig 2 Proof pattern diagonalization proofs Let general ideas concrete The initial state proof planning collection proof assumptions formalized logical sequents objectlevel language 5 goal sequent proven For instance proving theorem LIM goal lim xa f x C gx D L1 C L2 initial state consists proof assumptions 1 lim xa lim xa f x D L1 gx D L2 axioms deﬁnitions theory R real numbers Proof planning starts partial plan cid250 deﬁned proof assumptions theorem proven searches solution problem sequence instantiated methods transforms initial state goal state cid127MEGAs planner searches backward planning goal goaloriented forward planning assumptions cid127MEGA uses hierarchical planning techniques operator abstraction precondi tion abstraction introduced As generalization operator abstraction planning complex methods expanded recursively primitive methods represent infer ence steps calculus level natural deduction calculus Each expansions stored hierarchically organized proof plan data structure PDS 10 shown Fig 3 A PDS represent levels proof abstraction initial PDS consists initial partial plan cid250 cid250 reﬁned planning nodes intro duced PDS The expansion nodes takes method expands subplan lower level abstraction In ﬁgure abstraction levels depicted The left hand Fig 3 sketches correspondence calculuslevel rules composed schemata combined tactics speciﬁed methods The expansion highlevel methods lowerlevel plans ﬁnally level NDcalculus reached indicated right hand A fully expanded plan NDproof checked correctness proof checker end planning process This necessary 5 cid127MEGAs objectlevel language POST based Churchs simply typed cid21calculus 26 76 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Fig 3 Proof plan data structure expansions instantiated method guaranteed correct sense yields correct proof conclusion premises Depending method encodes particular proof structure proof proce dure expansion nonprimitive method realized schematically procedurally A schematic expansion deﬁnes proof tree contain metavariables 6 3 Knowledgebased proof planning Mathematicians accumulated mathematical problem solving knowledge hundreds years mathematician expert highly specialized mathematical ﬁeld universal expert That domainspeciﬁc knowledge key success course general techniques mathematical knowledge important In section shall knowledge available represented architecture makes knowledge accessible proof planning 31 Methods Woody Bledsoe remarks 14 central mathematical knowledge methods procedures tricks trade successfully great mathematicians years diagrams constructions ﬁgures examples They play key role proof discovery Accordingly design methods capture techniques essential successful proof planning 6 Metavariables place holders syntactic objects underlying logical calculus ﬁrstorder formulae E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 77 Now exist theorydependent theoryindependent methods instance decomposition tricks estimations cid14proofs computation integrals considered theoryspeciﬁc real numbers proof induction abstract consistency property presuppose minimal mathematical structure content On hand casesplit theoryindependent corresponds primitive theoryindependent methods usually captured natural deduction calculi 39102 How discover methods One heuristic knowledge acquisition mathematical textbooks following The importance method indicated naming Named mathematical methods instance proof diagonalization induction application important theorem Hauptsatz Linear Algebra ndimensional vector space basis n linearly independent vectors Hauptsatz Number Theory The mathematical monograph Introduction Real Analysis 7 introduces mathematical methods referring example Supremum Property Monotone Convergence Theorem It states didactic help hint reader The results later methods proof p 32 We shall frequent essential use property Supremum Property R p 45 method introduce section associated Monotone Convergence Theorem applies sequences monotone p 88 How methods represented Methods consist declarative speciﬁcations planning process expansion function realizes expansion method partial proof plan We distinguish objectlevel metalevel speciﬁcations The objectlevel speciﬁcations correspond usual preconditions effects planning That specify sequents match open goals satisﬁed method backward planning sequents planning state method applied subgoals produced method backward planning sequents match assumptions planning state produced new assumptions method forward planning The metalevel speciﬁcations capture metalanguage local conditions methods application properties relations hold sequents processed method 7 The metalevel speciﬁcation method expresses legal conditions methods application particular restrictions instantiation methods parameters In cid127MEGA methods represented framelike data structures slots slot names ﬁllers The slot names premises conclusions application conditions proof schema The premises conclusions constitute logical speciﬁcation sense conclusions supposed follow logically premises Their cid8 cid9 annotations indicate objectlevel speciﬁcations semantics cid9conclusion deleted open goal cid8premise added new open goal cid9premise deleted assumption cid8conclusion added assumption methods inserted partial plan These speciﬁcations matched current goals assumptions respectively output methods application computed instantiated speciﬁcations 7 For example subformG A expresses fact G subformula A 78 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Table 2 Method PeanoInduction premises cid8L1 cid8L2 conclusions cid9L3 applcond sortn Nat proof schema L1 L2 L3 P 0 P k P k C 1 8nP n baseCase stepCase IndAxiom L1L2 For example method PeanoInduction Table 2 objectlevel speciﬁca tion cid8L1 cid8L2 cid9L3 L1 abbreviation sequent proof line L1 proof schema The annotations mean sequent L3 deleted goal sequents L1 L2 added new subgoals This representation preconditions effects somewhat involved usual objectlevel preconditions effects forward planning planning new assumptions existing ones backward planning reducing goal subgoals assumptions open goals included planning state potential changes goals assumptions represented The application conditions applcond formulated metalanguage decidable metapredicates They specify local legal conditions methods application For instance PeanoInduction application conditions require n natural number The slot proof schema provides information schematic expansion method captures semantics method schematic expansion introduces partial plan PDS deﬁned proof schema The justiﬁcations line right entries proof lines tactics methods including NDrules external reasoning OPEN For instance line L1 P 0 baseCase PeanoInduction Table 2 linejustiﬁcation tactic baseCase supposed prove P number 0 A line like L2 cid1 jkj 6 M OPEN ComplexEstimate method Table 6 means line L sequent cid1 jkj 6 M open currently justiﬁcation cid1 entails jkj 6 M The line L6 b D k cid3 acid27 C l CASI L5 ComplexEstimate method Table 6 means algebra CAS expected justify formula b D k cid3 acid27 C l line L6 help formula line L5 Similarly automated theorem prover decision procedure speciﬁed E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 79 32 Metalevel reasoning Although methods encapsulate chunk calculuslevel proofs proof plans generally shorter corresponding expansions calculus level proof potential search spaces prohibitively large The reason large number alternative methods usually applicable choice point seriously search space mathematical proofs potentially inﬁnite That ﬁnite number operators inﬁnitely branches choice point example existentially quantiﬁed variables instantiated lemma introduced 8 Hence special techniques reducing guiding search needed proof planning Informed search superior domains control knowledge exists mathemat ics surely ﬁeld knowledge accumulated The good news methods represent mathematically meaningful steps control knowledge express mathematical intuition syntactical information order num ber restriction literals traditional ATP The bad news difﬁcult extract knowledge represent appropriately Our representation control knowledge depends kind knowledge particular expresses legal heuristic local global knowledge As opposed local knowledge deﬁned global means evaluation procedure inspect PDS history failed proof attempts time resources user model global settings theory problem stated typical examples theory While legal local knowledge appropriately encoded application conditions methods heuristic knowledge encoded controlrules They metalevel reasoning known extremely important mathematics 108 We prefer explicit modular representation heuristic control knowledge declarative controlrules previous representation hardwired planner methods This useful method different theory contexts different control Consider method translates goal statement natural numbers goal shown Peano Induction The function determines natural number parameter general translation method In completeness proofs logic calculi natural number excess literal number 1 length clauses number literal occurrences In theories choice number different length derivation complexity formula number grammar rule applications Now method ﬁnds natural number general applicable mathematical domains control knowledge determines possible range parameter function speciﬁc usually different different domains 8 This problem known induction veriﬁcation The ultimate reason inﬁnite branching cut rule rule cid0 B A cid0 B cid0 A applied backward generally avoided mathematics For analysis 67 80 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Other known reasons controlrules Modularly implemented declaratively represented controlrules ease modiﬁcation extension control knowledge For instance new control information required new cases problem solving existing controlrules modiﬁed new controlrules introduced easily opposed reimplementation procedurally implemented control component planner In particular control changed generalized new methods introduced domain reimplementation affected methods necessary Moreover declarative representation control information rules basis automatically learning controlrules realized planning systems 177095 In cid127MEGA control unit evaluates controlrules guides proof planner choice candidates similar expert list candidates rules reduced smaller list Controlrules antecedent consequent The antecedent speciﬁes overall context controlrule applicable evaluation determines controlrule rejected Currently consequent rule encodes advice select speciﬁed subset available candidates reject prefer candidate candidate The ﬁrst types rules prune search space preferrules change default order excluding alternatives Corresponding type choices planner following classes controlrules cid127MEGA cid15 methodchoice choosing methods come binding choices cid15 sequentchoice choosing goals backward planning assumptions forward planning cid15 strategychoice choosing reﬁnement strategy discussed article 88 planning history lastmethod The rules formulated expressive metalanguage The decidable metapredicates antecedents controlrules inspect PDS planning state goal matches constraint state uniquevalue available resources user model theory plan including typical models theoryeg invalidintypical For example following rule caseanalysisintro reconstruction critic CLAM expresses heuristic method Rewrite parameter instantiated rule C R applicable formula C trivially provable CaseSplit method introduced plan controlrule caseanalysisintro kind methodchoice IF lastmethod Rewrite C R AND failurecondition trivial C THEN select CaseSplit C C For instance Rewritecid30 tried planning step instantiation cid30 cid17 x 6D f x cid0 f x cid0 0 D f E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 81 Table 3 Outline controlled backward planning BackwardsRefinePlanCcid25 G Termination goal agenda G Solution operator applicable Fail Goal Selection Evaluating controlrules goals returns G0 G0 cid18 G Choose open goal g 2 G0 Operator Selection cid15 Evaluating controlrules operators returns O0 cid18 O cid15 For operator op 2 O0 cid8effect e op let cid27 matcher ecid27 D g applicationconditionsopcid27 D true op applicable cid15 Choose applicable M backtracking point cid0 insert M cid25 cid0 insert constraints cid25 cid0 update G Recursion Call BackwardsRefinePlanC reﬁned partial plan cid25 failed x 6D hold CaseSplit x 6D _ x D chosen order enable Rewritecid8 casesplit branches The use controlrules gives rise extended planning algorithm shown Table 3 Table 1 comparison 33 Integrating external reasoning systems In mathematical proofs logical steps naturally combined form specialized reasoning effective computation computing integrals solving equations solving inequalities 23 overview This specialized reasoning work traditional ATP systems theoryspeciﬁc systems algorithms perform services efﬁciently represent objects rational real numbers 50 specialized data types efﬁciently handled rely efﬁcient specialpurpose algorithms called background reasoning 23 Proof planning provides natural framework integrating external reasoning systems follows Suppose algorithm computation greatest common divisor GCD computation implicitly uses axioms theorems integers This computation ﬁrst included proof plan wrapping GCDalgorithm method tactic computes output method In case computation trusted 9 case prefer sequence calculus level steps proof computation expanded proof subproof overall calculuslevel proof Therefore cid127MEGA expansion 9 For example computation check divisor zero 82 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 possible principle However generating proof plan systems trace expensive plan generation mode called demand In following shall brieﬂy mention external reasoning systems integrated cid127MEGA concentrate aspects relevant article 331 Traditional automated theorem provers decision procedures The ﬁrst systems integrated cid127MEGA MKRP 33 OTTER 80 Currently provers integrated SPASS 119 PROTEIN 8 Bliksem 98 EQP 78 Waldmeister 47 The ultimate goal integration abstract proof plan gaps overall proof easily solved ATP systems The nontrivial aspects integration spot right gaps secondly translate resulting proof sequence NDrules chosen base calculus cid127MEGA The second problem solved cid127MEGA 53 systems 27494100 ﬁrst problem currently circumvented interactively calling ATPs 332 Computer algebra systems In order execute symbolic computations efﬁciently cid127MEGA integrates algebra systems including cid22CAS 63 experimental CAS simplify algebraic expressions compute terms proof planning process The algebra wrapped method function invoked evaluating methods application conditions The algebra returns simpliﬁed expression newly computed term A node proof plan justiﬁed CAS expanded recursively NDproof proof checked For expansion cid22CAS runs plangeneration mode returns protocol information proof plan justifying computation reconstructed This plan recursively expanded NDproof 63 333 Constraint solvers Many proofs require construction object theoryspeciﬁc properties This usually indicated existentially quantiﬁed variable problem In traditional theorem proving construction carried uniﬁcation algorithm Our solution problem delay instantiation possible integrate external constraint solver incrementally restricts possible object values essentially constraint logic programming CLP 58 This process essential purpose paper shall use constraint solvers differs CAS ATP requires permanent presence planning process collection propagation constraints constraint solver 92 Our external constraint solver uses notation functionalities common CLP These outlined followed description generic interface proof planning The common theory CLP 59 deﬁnes constraint domain D L given signature cid6 includes symbol D cid6structure interpretation cid6 interprets identity L class ﬁrstorder cid6formulae constraints closed variable renaming conjunction existential quantiﬁcation For instance cid6structure R constraint domain arithmetic real numbers E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 83 cid6 D 0 1 C cid3 D 6 C cid3 interpreted usual addition multiplication function 6 interpreted lessthan lessthanorequal relations reals respectively Basic constraints satisﬁability decided directly X Nonbasic constraints incomplete decisions X C Y D Z variable known Conditional constraints form c A1 A2 constraint c 113 Jaffar Maher 59 introduce operational semantics CLP systems state transition systems In order implement abstract operational model following functions realized cid15 Initialization constraint state cid15 Consistency check cid15 Entailment check cid15 Propagation constraints including simpliﬁcation cid15 Reﬂection constraint state cid15 Search instantiation variables The interface functions tell ask pass constraints solver The operation tellc passes constraint c constraint solver propagates constraint case c consistent constraint store In case returns true new constraint state Otherwise returns fail The operation ask passes conditional constraint c A1 A2 constraint solver testing entailment c constraint store It returns A1 c entailed A2 For instance ask 0 6 x tell jxj D x checks 0 6 x entailed constraint store jxj D x told constraint solver The integration constraint solver proof planning serves purposes First process proof planning determine certain method legally applied secondly constraint state reﬂected answer constraint C thirdly constraint solver searches instantiations implicitly existentially quantiﬁed variables Fig 4 summarizes integration constraint solver proof planning Some methods available planner interfaced constraint solver functions tell ask called application conditions evaluated constraint solver compute reﬂection C constraint state When plan completed instantiation function instantiates metavariable C formula C occurrence PDS 86 A method interfacing proof planning constraint solver CS Solveb shown Table 4 The b methods indicate employed backward planning CS parameter determining particular constraint solver CS stands constraint solver instantiated constraint solver linear arithmetic real numbers ﬁnite domains set theory c constraint goal closed Solveb The proof schema Solveb contains metavariable C answer constraint CS The instantiation C relevant line L2 proof schema suggests constraint logically derived unknown answer constraint Hence value C recursive expansion Solve steps The proof schema Solveb contains line line 84 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Fig 4 Integration constraint solver proof planning Table 4 Method SolvebcCS premise conclusions applcond L1 cid9L2 constraintcCS AND IF varinc THEN tellc ELSE ask c true fail proof schema C L1 L2 cid1 C C c HYP solvCS justiﬁcation solvCS names method derives c instantiation metavariable C eliminating conjunctions repeatedly The application conditions Solveb method determine constraint goal handled tell ask The access constraint solver tell chosen constraint hand contains implicitly existentially quantiﬁed variable Otherwise ask chosen The reason new constraint goals contain constants universally quantiﬁed variables introduced constraint store loss generality constraints implicitly existentially quantiﬁed variables 10 The application conditions satisﬁed ask returns true c entailed current constraint store tell returns true constraint store consistent c This gives account constraint solver involved checking legal applicability Solve method The second task constraint solver reﬂecting constraint state answer constraint currently performed ﬁnal constraint state The resulting 10 The introduction constraint assumption constraint store forward planning works differently proof assumptions introduced E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 85 Table 5 Method InitializeCST premises conclusions applcond proof schema cid8 L1 cid9 L4 L1 cid1 C L2 cid1 L3 cid1 T L4 cid1 T thm C thm C thm OPEN IL1 OPEN EL2L3 answer constraint formula C assertion value restrictions implicitly existentially quantiﬁed variables Why necessary introduce C Suppose collect restrictions backward planning condensed answer constraint formula C In formal proof consisting forward inference steps C stated beginning subsequent proof steps refer C hypothesis hypothesis occur goals actually known Hence order obtain correct NDlevel proof recursive expansion metavariable C introduced place holder formula C This realized backward planning InitializeCSTh method Table 5 reduces goal cid1 thm subgoals cid1 C thm cid1 Th C InitializeCS combines NDrules I E 11 Th theory constraint solver C holds place formula C It contributes hierarchization proof planning sinceas form precondition abstractionL3 visible subgoal methods expansion occur premises Only instantiation C C proven proof completed The parameter T InitializeCS stands theory T particular constraint solver CST employed set theory linear arithmetic R 34 Extension mathematical theories In knowledgebased proof planning mathematical domain knowledge consists axioms deﬁnitions theorems methods controlrules domainspeciﬁc external reasoners This knowledge hierarchically organized stored theories cid127MEGAs generalpurpose proof planner access theory base called MBase 37 contains domains Base Set Theory Calculus currently extended mathematical theories 11 Introduction cid1F G cid1F G Elimination cid1F Gcid1F cid1G 86 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 4 A case study Proof planning limit theorems We shall demonstrate knowledgebased proof planning operation limit theorems domain These theorems formulated proved theory R real numbers In remainder cid3 C cid0 jj denote division multiplication addition subtraction absolute value function R respectively Prolog notation constants variables Limit theorems claim limit lim xa continuity Since formal deﬁnition lim xa cid0 f x cid0 0 9cid14 8 0 cid14 8xx 6D jx cid0 aj cid14 x 6D jf x cid0 lj f x function f cid1cid1 2 standard proofs theorems called cid14proofs proofs postulate existence cid14 conjecture form jXj proven assumptions form jY j cid14 The class limit theorems includes theorem LIM states limit sum functions sum limits The following sequent formalizes LIM 12 lim xa f x D l1 lim xa gx D l2 lim xa f x C gx D l1 C l2 expanding deﬁnition lim xa cid0 cid0 cid0 81 82 8 0 1 9cid141 0 cid141 8x1x1 6D jx1 cid0 aj cid141 jf x1 cid0 l1j 1 0 cid142 8x2x2 6D jx2 cid0 aj cid142 jgx2 cid0 l2j 2 0 2 9cid142 cid0 cid0 0 cid14 8xx 6D jx cid0 aj cid14 0 9cid14 cid0 jf x C gx cid0 l1 C l2j cid1cid1 3 cid1cid1 cid1cid1 Similar theorems class LIM LIM difference product limits theorem ContinuousComp states composition continuous functions continuous 13 Continuous states sum continuous functions continuous similarly Continuous Continuous ﬁnally myriad theorems limits polynomial functions like lim xa x2 D a2 In 1990 Woody Bledsoe 15 proposed versions LIM challenge problem automated theorem proving The simplest versions LIM Problems 1 2 15 edge traditional automated theorem provers prove today comparison Section 44 certainly LIM capabilities One reason proofs difﬁcult alternating quantiﬁers require construction cid14 dependent variable certain estimations hold This nontrivial thing difﬁcult student reported 71 12 Alternatively LIM formalized assumptions lim xa lim xa 13 The deﬁnition relation continuousf point builds lim xa f x C gx D l1 C l2 f x f x D l1 lim xa gx D l2 goal E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 87 In textbooks intelligent instantiation cid14 comes blue course puzzling freshman The typical way mathematician goes discover proof theorem incrementally restrict possible values cid14 recorded textbook Bartle Sherbert Introduction Real Analysis 7 The authors recipe proceed incremental restriction natural number k proving theorem products limits sequences xn yn deﬁnition lim n1 0 k 8nn k jxn cid0 xj cid0 0 9k xn D x 8 4 cid1cid1 cid0 The natural number k deﬁnition 4 corresponds real number cid14 deﬁnition 2 limits functions In proof products limits x y sequences xn yn respectively Bartle Sherbert introduce auxiliary variables M1 M K depends According Theorem exists real number M1 0 jxnj 6 M1 n 2 N set M D supfM1 jyjg Hence estimate jxn cid3 yn cid0 x cid3 yj 6 M cid3 jyn cid0 yj C M cid3 jxn cid0 xj From convergence xn yn conclude 0 given exist natural numbers k1 k2 k1 6 n jxn cid0 xj 2M k2 6 n jyn cid0 yj 2M Now let k D supfk1 k2g k 6 n infer jxn cid3 yn cid0 x cid3 yj 6 M cid3 2 cid3 M C M cid3 2 cid3 M D Since arbitrary proves sequence X cid3 Y converges x cid3 y 7 Inspired similar mathematical idea Bledsoe et al implemented limit heuristic specialpurpose theorem prover IMPLY 16 proves formulae form jAj 1 jBj representing B linear combination B D k cid3 A C l proving simpler formulae jkj M jAj 2 cid3 M jlj 2 containing new variable M We shall reconstruct trick methods ComplexEstimate 41 Methods cid14proofs In proving limit theorems frequently magnitude term estimated need estimation methods One ComplexEstimate method estimating magnitude absolute value complex terms f x C gx cid0 l1 C l2 Table 6 frame representation method This method reduces goal difﬁcult estimation simpler estimation goals case assumption matching formula line L1 planning state Each ComplexEstimate step reduces goal matching formula line L17 subgoals instances formulae lines L2 L3 L4 respectively Each application ComplexEstimate suggests existence real number M value restricted inequalities line L2 L3 This M propagate given value restrictions implicitly universally quantiﬁed variables implicitly existentially quantiﬁed variables described Section 43 88 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Table 6 Method ComplexEstimatea b e1 premises L1 cid8L2cid8L3 cid8L4 conclusions cid9 L17 applcond 9cid27 GetSubsta b D cid27 AND 9k l CASsplitacid27 b D k l proof schema L1 cid1 L2 cid1 L3 L4 cid1 L5 L6 L7 L17 cid1 jaj e1 jkj 6 M jacid27 j 2 cid3 M jlj 2 b D b b D k cid3 acid27 C l 0 M jbj OPEN OPEN OPEN Ax CASL5 OPEN ﬁxL6L7L1L2 L3L4 The application condition evaluates true substitution cid27 terms k l b represented linear combination acid27 b D k cid3 acid27 C l term line 0 current planning state In case ComplexEstimate applicable The proof schema contains schematic proof cid1 jbj b D k cid3 acid27 C l 0 M formulae lines L1 L2 L3 L4 respectively The linejustiﬁcation L6 CAS denotes application CAS verify equation b D k cid3 acid27 C l Note line L7 occur cid8premises justiﬁcation OPEN actual justiﬁcation satisfaction postponed In linejustiﬁcation L17 ﬁx abbreviates subproof employs things Triangle Inequality jX C Y j 6 jXj C jY j An explicit proof schema details ﬁx Table 7 triang means application Triangle Inequality trans means application transitivity theorem The planner handles method ComplexEstimate follows cid15 If open goal matches formula L17 assumption matches formula line L1 planning state parameters b e1 ComplexEstimate instantiated matcher cid15 Now application conditions evaluated ﬁrst function GetSubsta b invoked returns successful substitution cid27 In case GetSubst successfully executed function CASsplit calls algebra arguments acid27 b return terms k l b D k cid3 acid27 C l If successful result instantiates variables k l application conditions evaluate true Then method applicable cid15 When applicable planner inserts ComplexEstimate PDS goal L17 deleted planning state new goals corresponding lines L2 L3 L4 added planning state E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 89 Table 7 Detail proof schema ComplexEstimate Line Hyps cid1 cid1 cid1 cid1 L1 L2 L3 L4 L5 L6 L7 L8 L9 L10 cid1 L11 cid1 L12 cid1 L13 cid1 L14 cid1 L15 cid1 L16 cid1 L17 cid1 Formula jaj e1 jkj 6 M jacid27 j 2 cid3 M jlj 2 b D b b D k cid3 acid27 C l 0 M jbj 6 jk cid3 acid27 j C jlj jbj 6 jkj cid3 jacid27 j C jlj jkj cid3 jacid27 j C jlj 6 M cid3 jacid27 j C jlj jbj 6 M cid3 jacid27 j C jlj M cid3 jacid27 j M cid3 2 cid3 M M cid3 jacid27 j C jlj M cid3 2 cid3 M C jlj jbj M cid3 2 cid3 M C jlj Reason assumption OPEN OPENL1 OPEN Ax CAS OPEN triangL6 MvalL8 mult6L2 trans6L9L10 multL3 addL12 transL11L13 M cid3 2 cid3 M C jlj M cid3 2 cid3 M C 2 addL4 jbj M cid3 2 cid3 M C 2 jbj transL14L15 simplL16 cid15 When later method expanded proof schema gets inserted PDS expansion postulates formula 0 M new open subgoal That line L7 open subgoal lower planning level way beneﬁt hierarchical planning process Further recursive expansion line L6 justiﬁcation CAS algebra cid22CAS runs plangeneration mode returns proof plan justiﬁcation line L6 In planning LIM point goal cid1 jf x C gx cid0 l1 C l2j proven assumption cid1 jf X1 cid0 l1j E1 available In sequent cid1 set assumptions X1 E1 implicitly existentially quantiﬁed variables When application conditions evaluated GetSubst returns substitution TxX1U CASsplit returns list 1 gx cid0 l2 parameter instantiated f X1 cid0 l1 parameter b instantiated f x C gx cid0 l1 C l2 Now goal cid1 jf x C gx cid0 l1 C l2j replaced new goals 1 cid1 j1j 6 M 2 cid1 jf X1 cid0 l1j 2 cid3 M 3 cid1 jgx cid0 l2j 2 The attentive reader noticed numerous axioms theorems domain theory Triangle Inequality conspicuously absent 90 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 invisible planning level Only method ComplexEstimate expanded proof schema inserted proof plan appropriate axioms imported theory This natural way prove theorem means avoid common paradoxical situation traditional automated theorem proving exactly axioms deﬁnitions theorems needed particular proof stated know proof It avoids problems plague traditional systems active axioms kept minimum problem certain axioms commutativity associativity seduce senseless behaviour called semantic noise trashing 4109 use axiom goaldirected way special deﬁned purpose While ComplexEstimate proves inequalities decomposition methods Solveb Solvef Section 43 Solve treat inequalities directly Solve method ﬁrst reduces goal t1 t2 help assumption t 0 1 uniﬁable substitution cid27 subgoal t2cid27 0 t2cid27 1 t 0 tries remove t2cid27 0 t2cid27 Solveb method 2 t1 t 0 UnwrapHyp method forward planning highlights subformula assumption Focus method applies methods AndElimination ImpliesElimination order extract highlighted subformula single assumption In words method unwraps subformula original assumption The ultimate goal method proving limit theorems prepare assumption L1 assumption ComplexEstimate The method RemoveFocus removes focus set Focus method Normalize speciﬁes tactic calls submethods ImpliesIntro duction AndIntroduction All dozen methods small mathematical area large correspond student learn order master ﬁeld 42 Controlrules Even appropriate methods imply plan automatically In fact planner ﬁnd plan LIM additional control knowledge For reason manually extracted mathematical problem solving behaviour typically proving limit theorems translated control knowledge explicitly represented controlrules We demonstrate following simple problem solving behaviour More complicated metareasoning necessary ﬁnding proofs contradiction This scope paper cid15 Linear inequalities shown direct estimation decomposition term estimated For proof assumption refered This translated followingverbally expressedcontrol knowledge proof planning cid15 Linear inequality goals removed methods Solveb Solve ComplexEstimate The requires preparation UnwrapHyp extracts subformula s assumption Afterwards ComplexEstima te use assumption s E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 91 In turn knowledge formally encoded controlrule controlrule proveinequalities kind methodchoice IF goalmatches goal x y THEN prefer Solveb goal Solve goal ComplexEstimate goal UnwrapHyp goal This rule following controlrules sufﬁcient successfully plan mentioned limit theorems controlrule CSIntroduction kind methodchoice IF lastmethod Skolemize THEN prefer InitializeCS controlrule Solveffirst kind methodchoice IF inequalityassumption assumption THEN prefer Solvef assumption The ensures inequality assumption passed constraint solver soon possible 43 Computer algebra constraint solving As described algebra computes instantiations certain terms application conditions ComplexEstimate evaluated Any instantiation veriﬁed later node justiﬁed CAS expanded checkable NDproof Our propagationbased constraint solver COSIE works constraint domain R extended interpreted absolute value function cid21x jxj division function cid21xcid21y xy Constraints inequalities formulae form x y x 6 y x D y The constraint store represented sets intervals described sets lower upper bounds A new constraint introduced store simpliﬁed propagated consistent current constraint store The purpose methods Solveb Solvef remove simple inequality goal employ constraint assumption adding constraint store checking entailment See Section 3 Solveb candidate method soon inequality goal It applicable implicitly existentially quantiﬁed variable occurs goal goal entailed current constraint store implicitly existentially quantiﬁed variable occurs 92 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 goal constraint goal consistent constraint store The checked tell All information represented applcond For instance planning LIM Solveb0 cid141 applicable implicitly existentially quantiﬁed variable occurs goal 0 cid141 entailed constraints 0 D D 6 cid141 constraint store Furthermore Solveb applicable subgoal j1j 6 M implicitly existentially quantiﬁed variable M occurs goal j1j 6 M consistent constraint store The method Solvef handles constraint assumptions forward planning For example planning LIM Solvef introduced 0 D constraint store constraint hypothesis To summarize planning proof LIM theorem Solve steps Solveb Solvef tell following sequence constraints constraint solver j1j 6 M 0 D 0 x D X1 E2 6 2 x D X2 D 6 cid142 D 6 cid141 0 E2 0 E1 0 cid141 0 cid142 0 M E1 6 2 cid3 M variables D E1 E2 Eigenvariables cid141 cid142 original planning problem M auxiliary variable introduced ComplexEstimate Now upper bound 2 E1 propagated constraints 1 6 M E1 6 2 cid3 M This leads ﬁnal constraint store shown Table 8 In words lower bound E2 0 upper bound E2 2 lower bound D 0 upper bounds cid141 cid142 attentive reader familiar cid14proofs doubt noticed exactly sequence events good student maths class At end session reﬂection ﬁnal constraint store removes redundant bounds 2 cid3 M The reﬂection favours numeric constants symbolic terms variables answer constraint respect variables E1 E2 D resulting reﬂection CD E1 E2 E1 6 2 E2 6 2 D 6 cid141 D 6 cid142 Table 8 0 0 0 0 0 0 cid141 cid142 E2 D E1 1 6 cid01 M X1 D x D X2 C1 C1 C1 6 2 6 cid142 cid141I 6 2 cid3 M 2 6 2 cid3 E1I C1 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 93 Fig 5 Unexpanded proof plan LIM The planner instantiates metavariable C C Later constraint solver searches terms instantiate D E1 E2 M respectively planner instantiate variables proof plan For LIM instantiation implicitly existentially quantiﬁed variables Dcid14 D mincid141 cid142 E11 D 2 E22 D 2 44 Results We successfully planned challenge problems Woody Bledsoe theorems ContinuousComp Continuous c D c theorems limits lim xa limit Continuous Continuous lim xa theorems LIM LIM LIM x D x2 D a2 polynomial functions like lim xa A highlevel proof plan LIM shown Fig 5 dashed parts represent methodssubplans planned later lower hierarchical level Some subgoals corresponding methods hidden method UnwrapHyp produced subgoals lower level particular inequalities satisﬁed Solveb Solve In end expanded plan 215 nodes Among proven theorems capabilities traditional systems LIM ContIfDeriv One reason LIM complicated prove LIM clear plan Fig 6 The method ComplexEstimate applied plan LIM LIM trick applied times linear decomposition term f x cid3 gx cid0 l1 cid3 l2 yields complicated subgoals decomposition f x C gx cid0 l1 C l2 Fig 6 shows screen dump plan LIM automatically generated cid127MEGA 94 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Fig 6 LIM proof plan presented cid127MEGA interface Table 9 Theorem cid127MEGA matching attempts OTTER generated clausesmode LIM LIM LIM ContIfDeriv 346 346 467 490 3650 spec heuristic LIM auto mode The circles indicate nodes plan containing methods subgoals squares indicate coreferences triangles indicate assumptions hypotheses proof differentiated colors visible black white print icon clicked display formula method stands A comparison search spaces proof planning automated theorem prover OTTER shows interesting characteristics Table 9 For simple version LIM particular strategy OTTER generates search space 3650 clauses keeps 1418 clauses 14 This strategy tailored LIM work LIM limit theorems In auto mode OTTER generates 437 706 898 clauses succeed proving LIM In comparison search space planner 350 matching attempts LIM 15 14 Using Bill McCunes speciﬁc input ﬁle 15 This plan optimized E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 95 Currently looking theorems examples exercises chapters 7 limits sequences functions continuity So far theorems proved methods controlrules decribed theorem says f x converges zero magnitude gx f x D 0 9yjgxj upper bound f x cid3 gx converges zero lim xa f x cid3 gx D 0 Squeeze Theorem sequences xn yn zn y lim xa real numbers xn 6 yn 6 zn n 2 N holds limxn D limzn yn convergent limxn D limyn D limzn Theorem 327 7 For examples need additional facts particular functions involved trigonometric functions need know laws trigonometry Of course order ﬁnd proof plans theorems examples exercises chapters introduce general methods like Indirect methods estimation FactorialEstimate EnvironmentEstimate ComplexEstimate The method needed instance proving theorem LIMdiv theorem uniqueness limit 16 This indicates couple dozen methods control rules capture mathematical knowledge appears necessary master albeit small branch mathematics With new methods control knowledge extended Some examples chapter 7 proof planned automatically current repertoire techniques Theorem 418 Exercise 413 Exercise 4112 The reason need strategy eagerly instantiating variables ﬂexibly controlled In addition progress textbook methods available employ theorems proved For instance application actual limit theorems LIM LIM greatly facilitate solution examples exercises chapters compared cid14proofs This means need plan different sets methods These problems gave rise develop proof planning approach multistrategy planning 8890 Currently planner domain cid22CAS implemented Common LISP CLOS Lovely cid127 User Interface Lcid127UI constraint solver implemented concurrent logic programming language MozartOz 112 5 The use proof plans proof presentation Well known paradigm shifts 68 physics example problems puzzling best outright unsolvable old paradigm suddenly fall place like beautiful jigsaw puzzle In case proof planning apply proof presentation proof analogy The output traditional automated theorem proving systems lists sequence calculuslevel steps resolution paramodulation These proofs hardly readable let intuitively understandable mathematical proof A comprehensible explanation essential interactive semiautomated theorem proving systems possibly provide basis tutor assistant 16 This theorem formalized lim xa f x D l1 lim xa f x D l2 l1 D l2 96 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 This problem recognized long ago inter alia Peter Andrews 2 Frank Pfenning 100 Dale Miller 94 Christoph Lingenfelder 74 Alan Robinson 105 Huang Siekmann 52 attempts produce proof presentations based NDrules In fact proof presentation research topic right 36 More recently presentation proofs traditional automated theorem proving systems natural language realized ILF 29 Theorema 18 PROVERB 51 ILF provides schematic verbalization PROVERB abstracts calculuslevel proof ﬁrst socalled assertion level 17 employs linguistic knowledge order combine single assertion level steps coherent natural language presentation Nevertheless satisfying general approach comprehensible proof presentation far We think fact automated proof presentation based representations proofs traditional theorem proving systems level abstraction low far removed mathematical theory structures proof formulated Even verbalization somewhat abstract assertion level necessarily natural best way communicate proof mathematicians students Verbalized proof steps far abstract assertionlevel steps contain explanations For example proofs limit theorems Bartle Sherberts book 7 contain phrases like We need estimate magnitude explanations certain step chosen proof Now abstraction levels contained proof plans provide basis truly hierarchical presentation design domaindependent independent methods leads naturally design verbalization schemes reﬂect mathematical practice standard Furthermore subproofs contributed domainspeciﬁc reasoners constraint solvers easily isolated represented separately ﬁnal presentation A abstract verbalization LIM plan uses schematic verbalization methods following 18 To f x C gx converges L1 C L2 cid3 Let cid14 smaller cid141 cid14 smaller cid142 1 2 smaller 2 1 We need estimate magnitude cid12 cid12 cid12f x cid0 L1 C gx cid0 L2 cid12 D cid12 cid12f x C gx cid0 L1 C L2 cid12 cid12 2 To use Triangle Inequality obtain cid12 cid12 cid12gx cid0 L2 cid12 C cid12 cid12f x C gx cid0 L1 C L2 cid12 cid12f x cid0 L1 cid12 cid12 6 cid12 cid12 This goal shown steps cid15 There exists M j1j 6 M cid15 jf x cid0 L1j 2 cid3 M 17 An assertion axiom deﬁnition proof refers 18 The occurrence M general presentation needed limit theorems It strictly speaking necessary LIM verbalization The itemization occur textbook correspondence verbalization proof plan E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 97 cid15 jgx cid0 L2j 2 3 For real number 1 6 M 4 hypothesis 2 cid3 M 0 exists cid141 x jx cid0 aj cid141 5 hypothesis 2 0 exists cid142 x jx cid0 aj cid142 jf x cid0 L1j 2 cid3 M jgx cid0 L2j 2 6 From cid3 follows 7 jx cid0 aj D cid12 cid12f x C gx cid0 L1 C L2 cid12 cid12 6 M cid3 jf x cid0 L1j C jgx cid0 L2j M cid3 2 cid3 M C 2 D jf x C gx cid0 L1 C L2j 8 Since 0 arbitrary 9 theorem proven Every item verbalization corresponds directly parts methods Fig 5 Not method verbalized ComplexEstimate verbalization parts In steps 1 2 7 generated verbalization ComplexEstimate steps 3 4 5 verbalize subproofs ComplexEstimates subgoals step cid3 verbalizes InitializeCS answer constraint formula Fig 7 Screen shot cid127MEGA showing proof plan LIM local verbalization 98 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Currently verbalization single methods proof plans automatically generated presented hypertext window cid127MEGAs interface Lcid127UI 8789 shown Fig 7 right window The local hypertext verbalization verbalization method corresponds nodes methods plan clicked Proofs subgoals produced method linked hyperlinks The global verbalization plan improved considerably Linguistic knowledge employed combining verbalization methods nice linear presentation proof plan automatic verbalization assertionlevel proofs 51 discussed 6 Conclusion This article introduces knowledgebased proof planning borrows techniques formalisms branches AI hierarchical planning knowledge representation frames explicitly represented controlrules constraint solving searchbased deduction systems tactical metalevel reasoning We use generalpurpose planner encode mathematical domain knowledge ﬁnd graduate textbook mathematics methods theoryspeciﬁc reasoners controlrules Controlrules control far ﬂexible considerably extend metalevel reasoning facilities proof planning global guidance This declaratively represented control knowledge express conditions decision depends current planning state planning history failed proof attempts current partial proof plan constraint state available resources user model theory plan typical models theory solution difﬁcult problems impossible In contrast conventional planning domains proof planning domain represented mathematical theories group theory calculus contain usual axioms deﬁnitions theorems lemmata operators controlrules domainspeciﬁc external reasoners The operators called methods represent natural mathematical proof steps controlrules encode mathematical knowledge proceed searching proof For known mathematical domain limit theorems example serve need demonstration collected relevant mathematical knowledge represented methods control rules existing representations constraint solver algebra Based knowledge cid127MEGAs generalpurpose proof planner able prove difﬁcult current proof planners traditional theorem proving systems Todays traditional theorem proving systems OTTER SPASS search spaces billion clauses The maximal proof length way resolution paramodulation steps With proof planning potentially ﬁnd plan steps expanded calculus level proof thousand steps Proofs length uncommon difﬁcult mathematical theorems arise industrial applications program veriﬁcation E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 99 tasks For instance VSE veriﬁcation 57 routinely industrial applications German Centre Artiﬁcial Intelligence Research DFKI Saarbrücken interactively synthesized proofs 8000 10000 steps difﬁcult assertions veriﬁcation television radio switching program These proofs represent weeks labor length orders magnitude fully automated methods come range possibilities proof planning paradigm turns successful settings However main right everyday mathematics Sacriﬁcing hope traditional theorem proving engine based search calculuslevel evolve mathematical assistant gives way alternative traditional automated theorem proving small useful subtask Using known albeit exiguous mathematical ﬁeld limit theorems able realistic mathematics carried machine Metaphorically speaking shown atom split gives energybut case generally useful device everyday application test case little representative Therefore PhD students currently extending knowledge needed proof planning ﬁelds linear algebra analysis ﬁnite group theory In particular planning set distinguished international consortium mathematicians scientists interested companies encode signiﬁcantly broad areas mathematics MBase use knowledge proof planning cid127MEGA We believe extraction explicit representation knowledge wide mathematical ﬁelds willjust like motivation CYCultimately useful computersupported mathematics mathematical education systems 61 Related work This work deeply inﬂuenced work Woody Bledsoe The knowledge acquisition design methods limit proof plans similar ideas specialpurpose theorem prover IMPLY 16 Beesons work 9 bias specialpurpose provers Beesons cid14proofs Mathpert Weierstrass systems developed parallel 83 More generally approach use theoryspeciﬁc knowledge common specialpurpose theorem provers monoids 38 geometry set theory 48 Closest work proof planning approach developed Alan Bundy CLAM As opposed domaindependent control knowledge represented controlrules CLAM uses rippling domainindependent difference reduction heuristic encoded preconditions methods LIM proved CLAM colored rippling 117 extension rippling LIM theorems turned difﬁcult CLAM As integration external reasoners automated theorem proving systems attempts recently integrating CASs cf 6274463 attempts integrating constraint solving 115 ATP 100 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 Our work relates research planning Prodigy 96 uses controlrules Weld 122 Veloso et al 120 discuss superiority knowledgebased search production forwardchaining rules implicitly encoded control functional rating Such controlrules ﬁrst explored SOAR 69 Prodigy 96 Gerberding Noltemeier 40 formulate programlike rules strategies theorem proving mathematical induction Very recently related approach presenting proofs verbalizes proofs manually tactical prover Nuprl 49 It verbalizes proofs abstract level Last presented work owes developments cid127MEGA group particular design methods 54 integration algebra systems 63 analogydriven proof plan construction 8293 Acknowledgement This work builds paradigm change work cid127MEGA group Saarbrücken discussion years led gratefully acknowledged Last implementation builds cid127MEGA development supported people 10 Furthermore like thank Bob Boyer help IMPLY prover project started particular Alan Bundy DREAM group Edinburgh discussions inﬂuence We thank Jaime Carbonell Manuela Veloso discussions controlrules Martin Müller help getting started constraint solving Last thank students Carsten Ullrich Jürgen Zimmer implemented knowledgebased proof planning kept abreast changes cid127MEGA work lasted References 1 R Anderson WW Bledsoe A linear proof format resolution merging new technique establishing completeness J ACM 17 3 1970 525534 2 PB Andrews Transforming matings natural deduction proofs Proc 5th International Conference Automated Deduction Springer Berlin 1980 pp 281292 3 PB Andrews Theorem proving general matings J ACM 28 1981 193214 4 F Baader J Siekmann Handbook Logic Artiﬁcial Intelligence Oxford University Press Oxford 1997 Chapter Uniﬁcation Theory 5 AM Ballantyne WW Bledsoe Automatic proofs theorems analysis nonstandard techniques J ACM 24 1977 353374 6 C Ballarin K Homann J Calmet Theorems algorithms An interface Isabelle Maple AHM Levelt Ed Proc International Symposium Symbolic Algebraic Computation ISSAC95 Berkeley CA USA ACM Press New York 1995 pp 150157 7 RG Bartle DR Sherbert Introduction Real Analysis Wiley New York 1982 8 P Baumgartner U Furbach PROTEIN A prover theory extension interface A Bundy Ed Proc 12th International Conference Automated Deduction CADE12 Nancy France Lecture Notes Artiﬁcial Intelligence Vol 814 Springer Berlin 1994 pp 769773 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 101 9 M Beeson Automatic generation epsilondelta proofs continuity J Calment J Plaza Eds Artiﬁcial Intelligence Symbolic Computation Lecture Notes Artiﬁcial Intelligence Vol 1476 Springer Berlin 1998 pp 6783 10 C Benzmueller L Cheikhrouhou D Fehrer A Fiedler X Huang M Kerber M Kohlhase K Konrad A Meier E Melis W Schaarschmidt J Siekmann V Sorge OMEGA Towards mathematical assistant W McCune Ed Proc 14th International Conference Automated Deduction CADE14 Townsville Springer Berlin 1997 pp 252255 11 W Bibel On matrices connections J ACM 28 1981 633645 12 WW Bledsoe Nonresolution theorem proving Artiﬁcial Intelligence 9 1977 135 13 WW Bledsoe Some thoughts proof discovery Proc IEEE Symposium Logic Programming Salt Lake City UT 1986 pp 210 14 WW Bledsoe The use analogy automatic proof discovery Technical Report AI15886 Microelec tronics Computer Technology Corporation Austin TX 1986 15 WW Bledsoe Challenge problems elementary analysis J Automat Reason 6 1990 341359 16 WW Bledsoe RS Boyer WH Henneman Computer proofs limit theorems Artiﬁcial Intelli gence 3 1 1972 2760 17 D Borrajo M Veloso Lazy incremental learning control knowledge efﬁciently obtaining quality plans AI Review J Special Issue Lazy Learning 10 1996 134 18 B Buchberger T Jebelean F Kriftner M Marin E Tomuta D Vasaru An overview theorema project Proc International Symposium Symbolic Algebraic Computation ISSAC97 1997 19 A Bundy Doing arithmetic diagrams Adv Papers IJCAI73 Stanford CA 1973 pp 130138 20 A Bundy The use explicit plans guide inductive proofs E Lusk R Overbeek Eds Proc 9th International Conference Automated Deduction CADE9 Argonne IL Lecture Notes Computer Science Vol 310 Springer Berlin 1988 pp 111120 21 A Bundy F van Harmelen J Hesketh A Smaill Experiments proof plans induction J Automat Reason 7 1991 303324 22 A Bundy F van Harmelen A Ireland A Smaill Extensions ripplingout tactic guiding inductive proofs ME Stickel Ed Proc 10th International Conference Automated Deduction CADE10 Lecture Notes Computer Science Vol 449 Springer Berlin 1990 23 HJ Bürckert A resolution principle constrained logics Artiﬁcial Intelligence 66 2 1994 235271 24 JG Carbonell Derivational analogy A theory reconstructive problem solving expertise acquisition RS Michalsky JG Carbonell TM Mitchell Eds Machine Learning An Artiﬁcial Intelligence Approach Morgan Kaufmann Los Altos CA 1986 pp 371392 25 L Cheikhrouhou J Siekmann Planning diagonalization proofs Proc 8th International Conference Artiﬁcial Intelligence Methodology Systems Applications AIMSA98 Sozopol Bulgaria Lecture Notes Artiﬁcial Intelligence Vol 1480 Springer Berlin 1998 26 A Church A formulation simple theory types J Symbolic Logic 5 1940 5668 27 E Clarke X Zhao AnalyticaA Theorem Prover Mathematica Proc 11th Conference Automated Deduction CADE11 Springer Berlin 1992 pp 761763 28 RL Constable SF Allen HM Bromley WR Cleaveland JF Cremer RW Harper DJ Howe TB Knoblock NP Mendler P Panagaden JT Sasaki SF Smith Implementing Mathematics Nuprl Proof Development System PrenticeHall Englewood Cliffs NJ 1986 29 BI Dahn A Wolf Natural language presentation combination automatically generated proofs Proc FroCos96 Kluwer Dordrecht 1996 pp 175192 30 M Davis A program Presburgers algorithm A Robinson Ed Proving Theorems Man Logician Machine Cornell University Ithaca NY 1957 pp 215233 Summary talks presented 1957 Summer Institute Symbolic Logic 31 MD Davis R Sigal EJ Weyuker Computability Complexity Languages Fundamentals Theoretical Computer Science 2nd ed Academic Press New York 1994 32 W Davis H Porta J Uhl Calculus Mathematica AddisonWesley Reading MA 1994 33 N Eisinger HJ Ohlbach The Markgraf Karl Refutation Procedure MKRP J Siekmann Ed Proc 8th International Conference Automated Deduction CADE8 Lecture Notes Computer Science Vol 230 Springer Berlin 1986 pp 681682 102 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 34 G Faltings U Deker Interview Die Neugier etwas ganz genau wissen zu wollen Bild der Wissenschaft 10 1983 169182 35 RE Fikes NJ Nilsson STRIPS A new approach application theorem proving problem solving Artiﬁcial Intelligence 2 1971 189208 36 First International Workshop Proof Transformation Presentation Dagstuhl 1997 37 A Franke M Kohlhase MBase Representing mathematical knowledge relational database A Armando T Jebelean Eds Calculemus99 1999 pp 135152 38 H Ganzinger U Waldmann Theorem proving cancellative abelian monoids MA McRobbie JK Slaney Eds Proc 13th Conference Automated Deduction CADE13 Lecture Notes Artiﬁcial Intelligence Vol 1104 Springer Berlin 1996 pp 388402 39 G Gentzen Untersuchungen über das logische Schließen I II Math Zeitschrift 39 1935 572595 40 S Gerberding A Noltemeier Incremental proofplanning metarules Proc 10th Florida Interna tional AI Conference FLAIRS97 Dayton Beach FL 1997 41 M Gordon R Milner CP Wadsworth Edinburgh LCF A mechanized logic computation Lecture Notes Computer Science Vol 78 Springer Berlin 1979 42 P Graf Term indexing Lecture Notes Artiﬁcial Intelligence Vol 1053 Springer Berlin 1996 43 J Hadamard The Psychology Invention Mathematical Field Princeton Univ Press Princeton 1945 44 J Harrison L Théry Reasoning reals The marriage HOL Maple A Voronkov Ed Proc 4th International Conference Logic Programming Automated Reasoning LPAR93 St Petersburg Lecture Notes Artiﬁcial Intelligence Vol 698 Springer Berlin 1993 pp 351353 45 P Hayes DB Anderson An arraignment theoremproving logicians folly Memo 54 Department Computational Logic Edinburgh University 1972 46 C Hewitt Description theoretical analysis PLANNER Technical Report 1972 47 T Hillenbrand A Buch Waldmeister Development high performance completionbased theorem prover Seki Report SR9601 Universität Kaiserslautern 1996 48 LM Hines Strvecid26 The strivebased subset prover Proc 10th Conference Automated Deduction CADE10 1990 49 AM HollandMinkley R Barzilay RL Constable Verbalization highlevel formal proofs Proc AAAI99 Orlando FL 1999 50 Ch Holzbaur OFAIclpq r manual Technical Report TR9509 Austrian Institute Artiﬁcial Intelligence Wien 1995 51 X Huang A Fiedler Proof verbalization application nlg Proc AAAI97 Providence RI Morgan Kaufmann CA 1997 pp 965970 52 X Huang JSiekmann Proof Presentation Springer appear 53 X Huang M Kerber M Kohlhase E Melis D Nesmith J Richts J Siekmann OmegaMKRP A proof development environment Proc 12th International Conference Automated Deduction CADE12 Nancy France 1994 54 X Huang M Kerber M Kohlhase J Richts Methodsthe basic units planning verifying proofs Proc Jahrestagung für Künstliche Intelligenz KI94 Saarbrücken Springer Berlin 1994 55 X Huang Human Oriented Proof Presentation A Reconstructive Approach INFIX Publ Comp 1996 56 D Hutter Guiding inductive proofs ME Stickel Ed Proc 10th International Conference Automated Deduction CADE10 Lecture Notes Artiﬁcial Intelligence Vol 449 Springer Berlin 1990 57 D Hutter B Langenstein C Sengler JH Siekmann W Stephan A Wolpers Deduction veriﬁcation support environment VSE MC Gaudel J Woodcock Eds Proc 3rd International Symposium Formal Methods Europe Oxford England 1996 pp 268286 58 J Jaffar JL Lassez Constraint logic programming Proc 14th ACM Symposium Principles Programming Languages 1987 pp 111119 59 J Jaffar MJ Maher Constraint logic programming A survey J Logic Programming 19 20 1994 503581 60 J Jaffar S Michaylow P Stuckey R Yap The CLPR language ACM Trans Programming Languages 14 3 1992 339395 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 103 61 S Kambhampati Reﬁnement planning Status prospectus Proc AAAI96 Portland OR Morgan Kaufmann San Mateo CA 1996 pp 13311336 62 S Kambhampati B Srivastava Universal classical planner An algorithm unifying statespace planspace planning M Ghallab A Milani Eds New Directions AI Planning IOS Press Amsterdam 1996 pp 6178 63 M Kerber M Kohlhase V Sorge Integrating algebra proof planning J Automat Reason appear 64 M Kerber E Melis Using exemplary knowledge justiﬁed analogical reasoning M De Glas Z Pawlak Eds WOCFAI95Proc Second World Conference Fundamentals Artiﬁcial Intelligence Paris France 1995 pp 157168 65 M Kerber E Melis J Siekmann Reasoning assertions examples Proc AAAI Spring Symposium Artiﬁcial Intelligence Creativity 1993 pp 6166 66 KR Koedinger JR Anderson Abstract planning perceptual chunks Elements expertise geometry Cognitive Sci 14 1990 511550 67 G Kreisel Mathematical logic T Saaty Ed Lectures Modern Mathematics Vol 3 Wiley New York 1965 pp 95195 68 TS Kuhn Die Struktur Wissenschaftlicher Revolutionen Suhrkamp German FrankfurtM 1976 69 J Laird A Newell P Rosenbloom SOAR An architecture general intelligence Artiﬁcial Intelli gence 33 1 1987 164 70 C Leckie I Zukerman Inductive learning search control rules planning Artiﬁcial Intelli gence 101 12 1998 6398 71 U Leron Heuristic presentations The role structuring For Learning Mathematics 5 3 1985 713 72 R Letz J Schumann S Bayerl W Bibel SETHEO A high performance theorem prover J Automat Reason 8 2 1992 183212 73 HR Lewis CH Papadimitriou Elements Theory Computation PrenticeHall Englewood Cliffs NJ 1981 74 Ch Lingenfelder Transformation structuring generated proofs PhD Thesis University Kaiserslautern 1990 75 D Loveland Automated Theorem Proving A Logical Basis NorthHolland New York 1978 76 H Lüneburg Vorlesungen über Analysis BI Wissenschaftsverlag 1981 77 S MacLane Mathematics Form Function Springer Berlin 1986 78 W McCune 33 basic test problems A practical evaluation paramodulation strategies R Veroff Ed Automated Reasoning Applications Essays Honor Larry Wos MIT Press Cambridge MA 1997 Chapter 5 pp 71114 79 W McCune Solution Robbins problem J Automat Reason 19 3 1997 263276 80 WW McCune Otter 20 users guide Technical Report ANL909 Argonne National Laboratory Maths CS Division Argonne IL 1990 81 E Melis Analogies proofsA case study SEKIReport SR9312 University Saarbrücken Saarbrücken 1993 82 E Melis A model analogydriven proofplan construction Proc IJCAI95 Montreal Quebec 1995 pp 182189 83 E Melis Progress proof planning Planning limit theorems automatically Technical Report SR9708 Fachbereich Informatik Universität des Saarlandes Saarbrücken 1997 84 E Melis The HeineBorel challenge problem In honor Woody Bledsoe J Automat Reason 20 3 1998 255282 85 E Melis The limit domain R Simmons M Veloso S Smith Eds Proc 4th International Conference Artiﬁcial Intelligence Planning Systems AIPS98 1998 pp 199206 86 E Melis AItechniques proof planning Proc 13th European Conference Artiﬁcial Intelligence ECAI98 Kluwer Dordrecht 1998 pp 494498 87 E Melis Proof presentation based proof plans SEKI Report SR9808 Universität des Saarlandes FB Informatik Saarbrücken 1998 88 E Melis Proof planning multiple strategies CADE15 Workshop Strategies Automated Deduction 1998 104 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 89 E Melis U Leron A proof presentation suitable teaching proofs SP Lajoie M Vivet Eds Proc 9th International Conference Artiﬁcial Intelligence Education IOS Press Amsterdam 1999 pp 483490 90 E Melis A Meier Proof planning multiple strategies II B Gramlich H Kirchner F Pfenning Eds FLoC99 Workshop Strategies Automated Deduction 1999 91 E Melis JH Siekmann Concepts proof planning Intellectics Computational Logic Papers Honor Wolfgang Bibel Kluwer Dordrecht 1999 pp 249264 92 E Melis V Sorge Employing external reasoners proof planning A Armando T Jebelean Eds Calculemus99 1999 pp 123134 93 E Melis J Whittle Analogy inductive theorem proving J Automat Reason 22 2 1999 117147 94 D Miller Proofs higher order logic PhD Thesis Carnegie Mellon University Pittsburgh PA 1983 95 S Minton Explanationbased learning A problem solving perspective Artiﬁcial Intelligence 40 1989 63118 96 S Minton C Knoblock D Koukka Y Gil R Joseph J Carbonell PRODIGY 20 The Manual Tutorial School Computer Science Carnegie Mellon University Pittsburgh PA 1989 CMUCS89 146 97 A Newell JC Shaw HA Simon Empirical exploration logic theory machine Proc Western Joint Computer Conference Vol 15 1957 pp 218239 98 H De Nivelle Bliksem User Manual Delft University Technology 1998 99 LC Paulson Isabelle The 700 theorem provers P Odifreddi Ed Logic Computer Science Academic Press New York 1990 pp 361368 100 F Pfenning Proof transformation higher order logic PhD Thesis Carnegie Mellon University Pittsburgh PA 1987 101 G Polya How Solve Princeton University Press Princeton 1945 102 D Prawitz Natural DeductionA Proof Theoretical Study Almquist Wiksell Stockholm 1965 103 R Reiter A semantically guided deductive automatic theorem proving Proc Third International Joint Conference Artiﬁcial Intelligence IJCAI73 Stanford CA 1973 pp 4146 104 JA Robinson A machineoriented logic based resolution principle J ACM 12 1965 2541 105 JA Robinson Proof Guarantee Explanation Intellectics Computational Logic Papers Honor Wolfgang Bibel Kluwer Dordrecht 1998 106 Russell Whitehead Principia Mathematica 107 ED Sacerdoti Planning hierarchy abstraction spaces Artiﬁcial Intelligence 5 2 1974 115135 108 AH Schoenfeld Mathematical Problem Solving Academic Press New York 1985 109 J Siekmann Uniﬁcation theory A survey Symbolic Computation 34 7 1989 110 JH Siekmann M Kohlhase E Melis Omega Ein mathematisches Assistenzsystem Kognitionswis senschaft 7 3 1998 101105 111 J Siekmann S Hess Ch Benzmüller L Cheikhrouhou A Fiedler H Horacek M Kohlhase K Konrad A Meier E Melis V Sorge Lcid127U I Lovely cid127MEGAuser interface Formal Aspects Computing 3 1999 118 112 G Smolka An Oz Primer Programming System Lab DFKI Saarbrücken 1995 113 G Smolka The Oz programming language J van Leeuwen Ed Computer Science Today Lecture Notes Computer Science Vol 1000 Springer Berlin 1995 pp 324343 114 RM Smullyan FirstOrder Logic Springer Berlin 1968 115 F Stolzenburg Membership constraints complexity logic programming sets F Baader U Schulz Eds Frontiers Combining Systems Kluwer Academic Dordrecht The Netherlands 1996 pp 285302 116 A Tate Generating project networks Proc IJCAI77 Cambridge MA Morgan Kaufmann San Mateo CA 1977 pp 888893 117 Y Tetsuya A Bundy I Green T Walsh D Basin Coloured rippling An extension theorem proving heuristic AG Cohn Ed Proc 11th European Conference Artiﬁcial Intelligence ECAI94 Wiley New York 1994 pp 8589 118 BL van der Waerden Wie der Beweis der Vermutung von Baudet gefunden wurde Abh Math Sem Univ Hamburg 28 1964 E Melis J Siekmann Artiﬁcial Intelligence 115 1999 65105 105 119 Ch Weidenbach Spass Version 049 J Automat Reason Special Issue CADE13 Automated Theorem Proving System Competition 18 2 1997 247252 120 M Veloso J Carbonell MA Pérez D Borrajo E Fink J Blythe Integrating planning learning The PRODIGY architecture J Experiment Theoret Artiﬁcial Intelligence 1995 81120 121 H Wang Toward mechanical mathematics IBM J Res Develop 4 1960 222 122 DS Weld An introduction committment planning AI Magazine 15 4 1994 2761