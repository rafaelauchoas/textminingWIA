Artiﬁcial Intelligence 240 2016 1935 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Hindex manipulation merging articles Models theory experiments René van Bevern abd Manuel Sorge d Toby Walsh def Novosibirsk State University Novosibirsk Russian Federation b Sobolev Institute Mathematics Siberian Branch Russian Academy Sciences Novosibirsk Russian Federation c Institut für Informatik FriedrichSchillerUniversität Jena Germany d Institut für Softwaretechnik und Theoretische Informatik TU Berlin Germany e University New South Wales Sydney Australia f Data61 Sydney Australia Christian Komusiewicz cd Rolf Niedermeier d r t c l e n f o b s t r c t Article history Received 9 March 2016 Received revised form 26 July 2016 Accepted 5 August 2016 Available online 10 August 2016 Keywords Citation index Hirsch index Parameterized complexity Exact algorithms AIs 10 watch 1 Introduction An authors proﬁle Google Scholar consists indexed articles associated data number citations Hindex The author allowed merge articles affect Hindex We analyze parameterized computational complexity maximizing Hindex article merges Herein model realistic manipulation scenarios deﬁne compatibility graph edges correspond plausible merges Moreover consider different measures computing citation count merged article For measure Google Scholar algorithm maximizes Hindex linear time compatibility graph constantsize connected components In contrast allow merge arbitrary articles compatibility graphs cliques increasing Hindex NPhard Experiments Google Scholar proﬁles AI researchers H index manipulated substantially merges articles highly dissimilar titles 2016 Elsevier BV All rights reserved The Hindex widely measure estimating productivity impact researchers journals institu tions Hirsch 22 deﬁned index follows researcher Hindex h h researchers articles h citations articles h citations Several publicly accessible databases AMiner Google Scholar Scopus Web Science compute Hindex researchers Such metrics visible hiring committees funding agencies comparing researchers proposals1 An extended abstract article appeared IJCAI 2015 4 This version provides proof details new kernelization results additional Email addresses rvbnsuru R van Bevern christiankomusiewiczunijenade C Komusiewicz rolfniedermeiertuberlinde R Niedermeier experiments Corresponding author Novosibirsk State University ul Pirogova 2 630090 Novosibirsk Russian Federation manuelsorgetuberlinde M Sorge tobywalshnictacomau T Walsh 1 Our study Hindex manipulation meant endorse discourage use Hindex evaluation tool In regard merely aim raise awareness possibilities manipulation httpdxdoiorg101016jartint201608001 00043702 2016 Elsevier BV All rights reserved 20 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Although Hindex Google Scholar proﬁles computed automatically proﬁle owners affect Hindex merging articles proﬁle The intention providing option merge articles enable researchers identify different versions article For example researcher want merge journal version version arXivorg different articles Googles web crawlers This decrease researchers Hindex articles counted merging increase Hindex merged article citations individual articles Since Google Scholar interface permits merge arbitrary pairs articles leaves Hindex Google Scholar proﬁles vulnerable manipulation insincere authors In extreme cases merging operation yield arbitrarily large Hindex single article cited times If author example h2 articles cited distinct article author Hindex proﬁle 1 Creating h merged articles consisting h original articles gives proﬁle Hindex h This maximum Hindex achievable h2 citations Increasing Hindex small values tempting particular young researchers scrutinized established researchers2 Hirsch 22 estimates ﬁeld physics Hindex successful researcher increases roughly year activity Hence insincere author try save years research work push buttons Hindex manipulation article merging studied Keijzer Apt 9 In model article proﬁle comes number citations Merging articles x y citations replaces articles new article x y citations The obtained article merged articles obtain articles higher citation numbers In model determine polynomial time possible improve Hindex merging maximizing Hindex merging strongly NPhard 9 We extend results Keijzer Apt 9 follows 1 We propose ways measuring number citations merged article One measure Google Scholar 2 We propose model restricting set allowed merge operations Although Google Scholar allows merges tween arbitrary articles restriction motivated An insincere author try merge similar articles order conceal manipulation 3 We consider variant Hindex manipulation limited number merges applied order achieve desired Hindex This motivated fact insincere author try conceal manipulation performing changes proﬁle 4 We analyze problem variant presented framework parameterized computational complexity 8121925 That identify parameters pproperties input measured integersand aim design ﬁxed parameter algorithms running time f p n O 1 computable function f independent input size n In cases allows eﬃcient algorithms realistic problem instances despite NPhardness problems general We parameters presumably lead ﬁxedparameter algorithms showing problem variants W1hard parameters 5 We evaluate theoretical ﬁndings performing experiments realworld data based publication proﬁles AI researchers In particular use proﬁles young upandcoming researchers 2011 2013 editions IEEE AIs 10 watch list 133 Related work Using models introduced Elkind Pavlou 27 recently studied manipulation alternatives Hindex i10index number articles citations gindex 14 largest number g g mostcited articles cited g times average They considered scenario merging articles inﬂuence proﬁles authors In followup work ﬁndings analyzed complex ity unmerging merged articles manipulate Hindex respect citation measures introduced 5 Notably model corresponding Google Scholar complexity lower unmerging merging articles A different way manipulating Hindex strategic selfcitations 1028 Bartneck Kokkelmans 3 consider approaches detect Strategic selfcitations effort irreversible Thus permanently damage authors reputation In comparison article merging easy reversible usually justiﬁed Bodlaender van Kreveld 6 showed previous version Google Scholar interface allowed merges articles displayed page NPhard decide given set articles merged The problem maximizing Hindex model Keijzer Apt 9 essentially special case scheduling problems Bin Covering 27 Machine Covering 2029 A considerable body work manipulation computational social choice literature 1516 If view citations articles voting articles problem consider somewhat analogous strategic candidacy 13 2 In fact senior researchers citations Hindex barely expressive total citation count 32 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 21 Fig 1 Vertices represent articles proﬁle W arrows represent citations numbers citation counts note general articles V W proﬁle displayed The articles gray background merged bd citation counts given according measures sumCite unionCite fusionCite respectively The arrows represent citations counted corresponding measure 11 Our models We propose new models merging articles These models consideration aspects captured model Keijzer Apt 9 1 The number citations article resulting merge necessarily sum citations merged articles This particular case Google Scholar 2 In order hide manipulation desirable merge related articles instead arbitrary ones For example merge articles similar titles To capture second aspect model allows constraints compatibility articles To capture ﬁrst aspect represent citations mere citation counts directed citation graph D V A The vertices D articles authors proﬁle plus articles cite arc u v D article u cites article v To simplify notation assume author wants maximize Hindex merging articles Let W V denote articles proﬁle In following articles called atomic articles aim maximize Hindex merging articles W The result sequence article merges partition P W We P P P 2 merged article Note having merged article P corresponds performing P 1 successive merges articles contained P It convenient alternate partitioning merging interpretations The aim ﬁnd partition P W large Hindex Hindex partition P largest number h h parts P P number μP citations h Herein multiple possibilities deﬁning measure μP citations article P Before describing possibilities introduce notation D v denote outdegree article v citation graph D Moreover let N Let degin use degout denote set articles cite v let N contained W articles N citation measures deﬁning number μP citations P They illustrated Fig 1 The measure D v denote indegree article v citation graph D number citations Analogously D v u u v A DW v u u v A u W denote set articles cite v DW v merged For P P consider following sumCiteP cid2 vP degin D v deﬁnes number citations merged article P sum citations atomic articles contains This measure proposed Keijzer Apt 9 In contrast measure unionCiteP cid3 cid3 cid3 D v N cid3 cid3 cid3 cid4 vP deﬁnes number citations merged article P number distinct atomic articles citing atomic article P We veriﬁed empirically time writing Google Scholar unionCite measure The measure fusionCiteP P cid4 cid3 cid3 cid3 vP cid3 cid3 cid3 DW v N cid2 P cid7PP cid5 1 v P 0 cid7w P v w A opinion natural set merged articles considered article cid7 P P P counted In contrast measures merging articles citation P fusionCite measure lower number citations resulting article articles Note contrast 22 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Table 1 The complexity HIndex Manipulation citation measures sumCite unionCite fusionCite parameters Hindex h achieve size c largest connected component compatibility graph G number k allowed article merges The row shows complexity variant aim improve Hindex compared proﬁle merges sumCite h W1hard Corollary 1 lineartime constant h G clique Corollary 2 unionCite fusionCite Solvable O 3c n m time Theorem 1 NPhard c 2 Theorem 2 c k W1hard Theorem 3 solvable O 9kk k n m time G clique Theorem 4 Improving Hindex NPhard Theorem 3 polynomialtime solvable G clique 9 W1hard G clique Theorem 5 Improving Hindex NPhard G clique Theorem 6 unionCite sumCite number citations article according fusionCiteP depend partition P We omit index P clear context To model constraints permitted article merges consider undirected compatibility graph G V E We articles compatible adjacent G We partition P articles W complies G P P articles P pairwise compatible subgraph GP G induced P clique Thus compatibility graph G clique constraints partitions W comply G case Formally measure μ sumCite unionCite fusionCite interested following problem HIndex Manipulationμ Input A citation graph D V A compatibility graph G V E set W V articles nonnegative integer h Question Is partition W complies G Hindex h respect measure μ Throughout work use n V denote number input articles m E A denote overall number edges arcs input graphs Moreover use GS denote subgraph G induced subset S vertices 12 Our results We study complexity HIndex Manipulation respect structural features input instances In particular consider following parameters The size c largest connected component compatibility graph G We expect size small rea sonable merges allowed merges appear reasonable compatible articles superﬁcially look similar The number k merges An insincere author hide manipulations small number merges The Hindex achieved Although interested maximizing Hindex expect number relatively small experienced researchers seldom Hindex greater 503 Table 1 summarizes theoretical results For example ﬁnd respect unionCite measure Google Scholar easier manipulate Hindex small number articles merged small c The unionCite measure complex increasing Hindex NPhard problem compatibility graph G clique In contrast sumCite measure compatibility graph clique decided polynomial time Hindex increased 9 We implemented manipulation algorithms exploiting small k small c Experimental results sample AI authors increase Hindex merges usually merging articles highly dissimilar titles required obtain substantial improvement 13 Preliminaries We analyze HIndex Manipulation respect classic parameterized complexity The aim parameterized complexity theory analyze problem diﬃculty terms input size respect additional parameter typically integer p 8121925 Thus formally instance parameterized problem pair I p consist ing input I parameter p A parameterized problem parameter p ﬁxedparameter tractable FPT algorithm decides instance I p f p IO 1 time f arbitrary computable function depending p Clearly problem NPhard expect f grow superpolynomially 3 More 9999 authors listed aminerorg accession date 2272016 Hindex 50 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 23 There parameterized problems good evidence ﬁxedparameter tractable Analo gously concept NPhardness concept W1hardness developed It widely assumed W1hard parameterized problem ﬁxedparameter tractable To parameterized problem parameter p W1hard parameterized reduction known W1hard parameterized problem parameter p This reduction runs f p IO 1 time produces instances parameter p upperbounded function gp Determining undirected graph G clique order p known W1hard respect p cid7 cid7 The notion problem kernel tries capture existence eﬃcient provably effective preprocessing rules 21 24 More precisely parameterized problem problem kernel instance reduced poly nomial time equivalent instance size depends parameter The algorithm computing problem kernel called kernelization presented series data reduction rules A data reduction rule transforms cid7 problem data reduction rule correct instance I p parameterized problem instance I cid7 yesinstance I p yesinstance I cid7 p cid7 p 2 Compatibility graphs small connected components In section analyze parameterized complexity HIndex Manipulation parameterized size c largest connected component compatibility graph This parameterization motivated fact merge similar articles usually article similar articles The following theorem shows HIndex Manipulation solvable linear time citation measures sumCite unionCite c constant The algorithm exploits measures merging articles affect articles Thus solve connected component independently Theorem 1 HIndex Manipulationμ solvable O 3c n m time μ sumCite unionCite connected components compatibility graph G size c Proof Clearly articles different connected components G partition complying G Thus independently connected component C G compute partition articles C complies G maximum number parts P μP h We ﬁrst approach correct execute eﬃciently Obviously algorithm creates partition P set W articles complies G h parts P μP h face yesinstance Conversely input yesinstance partition P W complying G having h parts P μP h Consider connected component C G restriction PC P P P V C P C V C vertex set C Note P contained V C disjoint PC partition V C Moreover merging articles connected component affect number citations articles connected components respect sumCite unionCite Thus replace sets PC P partition C maximum number parts P μP h obtain partition Hindex h Thus algorithm ﬁnds partition Hindex h We compute connected component C G partition maximizes number parts h citations In order achieve running time O 3c n m employ dynamic programming First cid7 V C initialize table connected component C G V Q V cid7 GV 1 GV 0 cid7 clique μV cid7 clique μV cid7 h cid7 h A table entry Q V clique V entries Q V cid7 cid7 vertex subsets V cid7 Now vertex subset V parts P μP h partition V cid7 cid7 stores merging V partition complying G Therefore set Q V results article h citations Obviously GV cid7 cid7 case All table cid7 connected components G computed O 2c n m time cid7 V C connected component C deﬁne T V cid7 maximum number complying G Obviously recurrence relation cid5 T V cid7 0 maxV cid7cid7cid2V cid7 T V cid7 V cid7cid7 Q V cid7 V cid7cid7 After computing table Q compute T V C connected component C dynamic programming cid7 V C order increasing cardinality To end subset V cid7 V C compute T V cid7 Thus computation T works O 3cc time 3c partitions iterate subsets V cid7 V cid7 V cid7cid7 V C V C V Herein factor c accounts operations sets cardinality c Thus total running time O 2c n m 3cc O 3c n m cid2 cid7 subset V cid7cid7 V cid7cid7 V V cid7cid7 24 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Fig 2 Construction clause c j xi xk xcid2 Undirected bold edges belong compatibility graph G directed arcs citations citation graph D Only vertices W citations vertices W shown Some arcs dotted picture clean Observe citations point left right form directed acyclic graph We seen HIndex Manipulation solvable linear time citation measures sumCite unionCite compatibility graph constantsize connected components In contrast constantsize components compatibility graph help fusionCite measure This reduction NPhard 3Bounded Positive 1in3SAT problem 11 Theorem 2 HIndex ManipulationfusionCite NPhard following conditions hold largest connected component compatibility graph size ii citation graph acyclic iii input instance Hindex h 1 Regarding ii note citation graphs acyclic practice papers tend cite earlier papers Thus important Theorem 2 require cycles citation graph Proof We prove Theorem 2 polynomialtime manyone reduction NPhard 3Bounded Positive 1in3SAT problem 11 3Bounded Positive 1in3SAT Input A formula φ 3conjunctive normal form containing positive literals literal contained clauses Question Is truth assignment variables φ sets exactly variable clause true Let n number variables φ let m number clauses If m n odd simply duplicate instance If m n2 18 solve φ brute force output corresponding trivial yes noinstance HIndex ManipulationfusionCite Otherwise create instance HIndex Manipulation h m n The construction illustrated Fig 2 For variable xi φ introduce variable gadget consisting articles X 1 edges X 1 arcs X 1 iT X 2 iT X 1 X 1 iT X 2 iT iF X 2 iF iF X 2 iF iT X 1 iT X 1 iF X 2 compatibility graph G iF citation graph D Merging pair X 1 false For clause c j xi xk xcid2 add clause gadget consisting correspond setting xi true merging pair X 1 iT X 2 iT iF X 2 iF correspond setting xi articles C 1 edges C 1 jz C 2 jz z k cid2 jz C 2 jz z k cid2 compatibility graph G R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 25 arcs C 1 ji C 1 jk C 2 ji C 1 jk C 1 ji C 1 jcid2 C 2 ji C 1 jcid2 C 1 jk C 1 jcid2 C 2 jk C 1 jcid2 citation graph D Merging pair C 1 jz C 2 jz z k cid2 correspond setting literal xz c j true jz X 2 jz X 2 jz X 2 jz X 2 zF C 2 yT C 2 y k cid2 z add arcs C 1 To connect clause gadget clause c j xi xk xcid2 corresponding variable gadgets z k cid2 zF C 1 Observe constructed citation graph acyclic variable gadget clause gadget acyclic arcs clause gadgets variable gadgets Moreover variable occurs clauses φ clause variables created article 3 3 2 18 incoming citations Since m n2 h2 18 ﬁnally add created articles distinct set articles D cited exactly h times total single article cited h times pair X 1 iF X 2 iF In particular articles form X 1 jz cited article variable clause gadgets iT cited h 1 times variable xi φ add additional citations X 1 jz cited h 1 times This concludes construction jz pair C 1 C 2 HIndex ManipulationfusionCite instance Note h m n clauses variables created article h 1 citations gives instance Hindex h 1 We prove correctness presented reduction clause c j cited C 1 iT cited X 2 iT C 2 C 1 iT X 2 iT jz C 2 jz jz C 2 jz X 1 yT First assignment φ sets exactly variable clause true merge clauses c j containing xi We pair X 1 h m n articles h citations To converse ﬁrst important observations true variables xi merge pairs C 1 iT X 2 iT ji C 2 ji iT X 2 iT p2 X 1 1 For variable xi φ pairs p1 X 1 2 For clause c j xi xk xcid2 pairs p1 C 1 merged article P fusionCiteP h Observe sum citations pair exactly h However p1 p2 merged article resulting merging p2 h 1 citations gets citation articles p1 counted citation merging p1 p2 C 1 merged article P fusionCiteP h Assume px x 1 2 3 merged article P fusionCiteP h Then pair p y y x merged article p y h 1 citations merged p y gets citation articles px By argument p y y x merged article P fusionCiteP h contradict assumption merging px yields article p3 C 1 iF X 2 iF jk C 2 jk jcid2 C 2 jcid2 ji C 2 ji Since ask merging articles order increase Hindex h m n precisely number variables clauses input formula create article h citations variable gadget clause gadget That achieve Hindex h variable gadget clause gadget exactly pair merged article h citations Moreover clause c j xi xk xcid2 pair C 1 merged article h citations gets merged z k cid2 pair X 1 merged Moreover y k cid2 z citation C 1 zT X 2 zT merged article h citations gets citation C 1 pair X 1 zT X 2 jz It zT follows X 1 zF X 2 zF jz It follows X 1 merged Thus obtain assignment φ sets exactly variable clause true setting variables xi jz C 2 jz C 2 zF X 2 zF jz C 2 jz true pair X 1 iT X 2 iT merged article h citations cid2 3 Merging articles increasing HIndex In section consider variants HIndex Manipulation Cautious HIndex Manipulation allow merge k articles HIndex Improvement ask possible increase Hindex Cautious HIndex Manipulation motivated fact insincere authors try conceal manipulation merging articles Formally problem deﬁned follows μ sumCite unionCite fusionCite Cautious HIndex Manipulationμ Input Question Is partition P W A citation graph D V A compatibility graph G V E set W V articles nonnegative integers h k complies G ii Hindex h respect μ iii number cid10 P P P 1 merges k 26 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 We Cautious HIndex Manipulation parameterized k ﬁxedparameter tractable sumCite mea sure compatibility graph clique Allowing arbitrary compatibility graphs complex measures leads W1hardness respect k The second problem considered section HIndex Improvementμ introduced Keijzer Apt 9 formally deﬁned follows HIndex Improvementμ Input Question A citation graph D V A compatibility graph G V E set W V articles Is partition P W complies G larger Hindex respect μ partition W singletons Theorem 2iii shows HIndex ImprovementfusionCite NPhard compatibility graph nected components size However Keijzer Apt 9 gave polynomialtime algorithm HIndex ImprovementsumCite compatibility graph clique We ﬂesh boundary hardness tractability proving general compatibility graphs lead NPhardness case sumCite clique compatibility graphs lead NPhardness case unionCite fusionCite First consider case general compatibility graphs Here obtain hardness results problem variants reductions Multicolored Clique Multicolored Clique Input Question An cid2partite undirected graph H cid2 partite sets Is clique cid2 vertices contained H Multicolored Clique known NPhard W1hard respect cid2 17 Both hardness results hold sumCite unionCite fusionCite Theorem 3 Parameterized k Cautious HIndex ManipulationsumCite W1hard Moreover HIndex Improvementsum Cite NPhard The theorem directly follows following lemma derive hardness result section Lemma 1 There polynomialtime manyone reduction Multicolored Clique Cautious HIndex Manipulationsum Cite k cid2 1 h cid2 HIndex Improvement Proof The reductions Multicolored Clique problem differ specifying Hindex want achieve upper bound number merges Cautious HIndex Manipulation The reductions work follows We create citation graph D compatibility graph G set articles W instance D G W h cid2 k cid2 1 Cautious HIndex Manipulation instance D G W HIndex Improvement yesinstances H cid2 yesinstance Multicolored Clique Our Cautious HIndex Manipulation HIndex Improvement instances article set W W cid13 W W V H W consists cid2 1 new articles For article w W introduce set cid2 articles contained W cite w article Similarly article w W introduce article W cites w article In way implicitly deﬁned citation graph D Next construct compatibility graph G H adding article W independent vertex This concludes construction Clearly carry polynomial time Note reduction parameterized reduction Multicolored Clique parameterized cid2 Cautious HIndex Manipulation parameterized k k cid2 1 Now prove equivalence instances If Multicolored Clique instance H cid2 yesinstance clique S size cid2 H Merging corresponding articles S W complies compatibility graph yields merged article cid2 citations Together cid2 1 articles W results cid2 articles cid2 citations Hindex cid2 h Furthermore exactly cid2 1 merges performed way implying Cautious HIndex Manipulation instance yesinstance Note Hindex singleton partition W W cid2 1 That Cautious HIndex Manipulation instance asks increase Hindex W Thus clearly Cautious HIndex Manipulation instance yesinstance HIndex Improvement instance Finally assume HIndex Improvement instance yes Then merged article S cid2 citations Since articles W merged S consists cid2 articles Furthermore GS HS clique merging comply G Hence Multicolored Clique instance yes concluding proof instances equivalent cid2 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 27 Now restrict compatibility graph clique meaning arbitrary pairs articles merged Re HIndex ImprovementsumCite polynomialtime solvable case 9 We achieve ﬁxedparameter tractability result Cautious HIndex ManipulationsumCite parameterized number k article merges Theorem 4 If compatibility graph G clique Cautious HIndex ManipulationsumCite solvable O 9kk k n m time k number allowed article merges Proof Assume D G W h k yesinstance let P partition W Hindex h k merges Let M v W v P P P P 2 set articles merged articles ordered let W nonincreasing citation counts We claim assume M v 1 vM Otherwise following cases D v h set articles h citations Let v 1 v 2 articles W cid7 v W degin cid7 Case 1 There article v M h citations That v P P P 2 In case simply split P P v v dropping Hindex P h Case 2 There article v M M That v P P P 2 Then compatibility graph clique replace v P arbitrary article v j M j M clearly exists decreasing Hindex P Since k article merges allowed M 2k Hence solution merged articles v 1 v 2k Thus remove edges compatibility graph G incident articles h citations discard articles v j j 2k In way obtain instance compatibility graph contains 2k vertices We obtain claimed ﬁxedparameter tractability result adapting dynamic programming algorithm Theorem 1 Since nontrivial connected component C compatibility graph preprocessing clique articles creates apply algorithm C Thus auxiliary table Q store merging set V article h citations ignore compatibility graph More formally V cid7 cid7 V C let cid5 Q V cid7 cid7 h 1 μV 0 In order ensure k merges need additional index main table T More precisely set V obtained singleton partition performing k merges Then cid7 k maximum number parts P μP h partition V cid7 V C vertices let T V cid7 T V cid7 k 0 0 max V cid7cid7cid2V cid7T V cid7 V cid7cid7 k V cid7cid7 1 Q V cid7cid7 cid7 V k 0 Since ground set V C articles considered dynamic programming table size 2k algorithm running time O 9kk k n m cid2 For unionCite fusionCite measure obtain hardness results Cautious HIndex Manipulation HIndex Improvement parameterized reductions Independent Set problem Independent Set Input Question An undirected graph H nonnegative integer cid2 Is independent set size cid2 H set cid2 pairwise nonadjacent vertices Independent Set NPhard W1hard respect cid2 12 Theorem 5 For μ unionCite fusionCite Cautious HIndex Manipulationμ W1hard parameterized k compatibility graph clique Proof Let H cid2 instance Independent Set We construct instance D G W h k cid2 1 Cautious HIndex Manipulation yesinstance H cid2 yesinstance Independent Set Clearly parameter ized reduction respect cid2 k Let n V H h cid2n Without loss generality assume n cid2 1 Our Cautious HIndex Manipulation instance article set W W cid13 W W V H W consists h 1 new articles Next article w W introduce h new articles W cite w article The citations articles W 28 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 deﬁned follows For pair adjacent vertices u v V H introduce new article euv contained W cites articles u v W articles Furthermore increase citation counts article W exactly n That article w W introduce new articles contained W cite w w n citations The compatibility graph G clique This concludes construction Clearly construction carried polynomial time Moreover reduction parameterized reduction Independent Set parameterized cid2 Cautious HIndex Manipulation parameterized k k cid2 1 Note article W cites article W P partition W unionCiteP fusionCiteP Let prove correctness reduction Assume ﬁrst H cid2 yesinstance let S independent set size cid2 H Then merging articles S article Cautious HIndex Manipulation instance valid compatibility graph G clique Furthermore yields merged article S unionCiteS h citations Since vertices S independent G article euv citing u v S Cautious HIndex Manipulation instance Thus citations articles S pairwise disjoint Together h 1 atomic articles W Hindex h Conversely assume D G W h cid2 1 yesinstance Since allowed merge cid2 1 times order achieve Hindex h cid2n article W exactly n citations need merge cid2 articles W article That S W solution Cautious HIndex Manipulation unionCiteS h citations This means articles contained S pairwise disjoint sets citations n hcid2 citations Thus S independent set H cid2 The reduction Theorem 5 exploits fact k merges allowed Hence NPhardness HIndex Improvement need different reduction Note NPhardness fusionCite measure general compatibility graphs follows Theorem 2iii We complement result following theorem Theorem 6 HIndex Improvementμ NPhard μ unionCite fusionCite compatibility graph clique Proof We polynomialtime reduction Independent Set Let H cid2 instance Independent Set let q EH Without loss generality assume q cid2 2 We construct instance HIndex Improvement citation graph D set V articles subset W V articles The compatibility graph G clique articles We introduce citations Hindex singleton partition W q 1 goal constructed instance achieve Hindex q The article set W partitioned parts W W cid13 W 1 cid13 W The ﬁrst W consists q cid2 1 articles article w W introduce q articles W cite w article The second W 1 consists cid2 articles article w W 1 introduce q 1 articles W cite w article The W contains vertices Independent Set instance W V H Finally edge u v EH introduce article euv W cites u v This concludes construction citation graph D Note singleton partition W Hindex q 1 Hence created instance D G W HIndex Improvement looking increase Hindex q Clearly carry construction polynomial time Furthermore selfcitations articles W cite subset P W unionCiteP fusionCiteP Let prove equivalence instances Assume H cid2 yesinstance We claim HIndex Improvement instance yesinstance Choose independent set S size cid2 H Take corresponding articles S merge articles W 1 pairing This creates cid2 merged articles q citations Together articles W q 1 articles q citations merged To create article q citations simply merge articles W S article Since S independent set article euv citing W u v S Hence merged article W S q citations Thus D G W yesinstance Now assume D G W yesinstance let H cid2 Take partition P W Hindex q Note subset R W μR q R vertex cover H vertex cover graph subset X vertices edge incident vertex X Hence q 1 parts P P P cid15 W P P P W vertex cover H For sake contradiction assume parts P 1 P 2 P 1 W P 1 W vertex covers H Then P 1 P 2 V H W Furthermore remaining P contains articles W W 1 parts q cid2 1 cid18cid22cid19 q citations However cid2 2 q cid20cid22cid21 1 2 q 1 parts q citations P contradiction Thus exactly P P R P W vertex cover H Take S V H R Note R vertex cover H S independent set H claim S size cid2 Since exactly P contains vertex cover H remaining q citations q 1 This means articles W W 1 merged Hence article W 1 merged article S S contains cid2 articles cid2 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 29 4 Achieving moderately large Hindex We consider Hindex want achieve parameter This parameter large researchers early stage career Hindex 20 Even experienced researchers H index seldom exceeds 50 Hence cases value desired Hindex suﬃciently low serve useful parameter terms gaining eﬃcient ﬁxedparameter algorithms However note Lemma 1 immediately implies HIndex Manipulationμ W1hard respect target Hindex h This hardness transfers unionCite fusionCite measures Corollary 1 HIndex Manipulationμ W1hard respect target Hindex h μ sumCite unionCite fusion Cite In contrast HIndex Manipulationμ ﬁxedparameter tractable citation measure μ sumCite unionCite fusionCite compatibility graph clique To end kernelization algorithm polynomialtime data reduction algorithm produces equivalent instance size upperbounded function parameter h One particular diﬃculty designing data reduction rules fusionCite measure citations DW somewhat fragile destroyed example adjacent vertices W merged Thus following route obtain problem kernel First O n m time use greedy strategy compute maximal matching undirected graph underlying citation graph D If matching size h2 partition achieving Hindex h Otherwise use fact articles participate matching cite design data reduction rules Reduction Rule 1 Let D G W h instance HIndex Manipulationμ μ sumCite unionCite fusionCite G clique Compute maximal matching D iteratively putting arc matching long possible If resulting matching size h2 accept Lemma 2 Reduction Rule 1 correct application performed O n m time cid7 cid7 Proof Let M matching size h2 D Let W denote set h2 vertices heads arcs M cid7 W citations The articles W cited tails respective arcs M Thus assume W cid7 vertices W counted Consider partition P W obtained partitioning W exactly h sets size h merging articles W Since M matching merged article P P article P Thus P Hindex h respect sumCite h independent arcs article V W cid7 unionCite Moreover articles V W merged h distinct unmerged articles cite article P Hence P Hindex h respect fusionCite cid7 To claim running time observe suﬃces iterate edges maintaining label vertex indicates incident edge matching cid2 Now assume computed maximal matching size h2 D O n m time Then vertices incident matching arcs form vertex cover C size 2h2 D It remains upper bound number articles independent set V C To end ﬁrst data reduction rule ensures article C cites articles W C To need following lemma enables assume solution merges articles independent set Lemma 3 Let D G W h yesinstance HIndex Manipulationμ μ sumCite unionCite fusionCite G clique let X W article X cites article X Then partition P W Hindex h respect μ h2 atomic articles X singletons P Proof Consider partition P Hindex h respect μ number atomic articles X singletons P h merged articles merged article P μP h merged articles split atomic articles decreasing Hindex h Thus assume P contains h merged articles P μP h To prove lemma P containing h atomic articles a1 acid2 X cid2 h We lead merged article P existence article P minimum If P contradiction If μ sumCite clear P sumCiteP ai h contradicting choice P replaced articles P ai ai P 1 cid2 For μ unionCite consider articles P j P X a1 j j 1 cid2 If unionCiteP j unionCiteP j1 P h j 1 cid2 1 unionCiteP h h replacing P singletons yields partition singletons X Hindex h contradicting choice P adding articles P P h P 30 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Otherwise j 1 cid2 1 unionCiteP j unionCiteP j1 meaning j1 cited subset atomic articles cite P j Then replacing P yields partition articles P Hindex h singletons X contradicting choice P j1 j1 P cid7 fusionCiteP P fusionCitePh P Similarly μ fusionCite consider series partitions P j j 1 cid2 1 arising replacing P cid2 j 1 merged articles P j j1 acid2 P cid2 1 fusionCitePh P h h remaining merged article P Yet Ph atomic articles X singletons P j 1 cid2 1 fusionCiteP j P j fusionCiteP j1 P j1 consider cases If fusionCiteP j P j fusionCiteP j1 P j1 j 1 cid7 If cid7 Ph P contradicts choice P In ﬁrst case j1 cite article P X Since articles X cite j1 X Therefore fusionCiteP j P j fusionCiteP j1 P j1 implies set follows j1 cite article P merged articles cite j1 subset merged articles cite P j This implies set merged P cid2 articles cite j1 subset merged articles cite P cid2 Thus replacing merged article P j j P obtain partition Hindex h atomic article X articles P singleton This contradicts choice P In second case j1 cites article P X Let c number merged articles outside P j cite j1 articles P j let d number merged articles outside P j cite j1 article P j We c d 1 fusionCiteP j P j fusionCiteP j1 P j1 Since article X cid7 cites j1 P cid2 P j X c number merged articles outside P cid2 cite j1 cid7 articles P cid2 j1 d number merged articles outside P cid2 cite j1 article P cid2 j1 Replacing merged article P cid2 articles P cid2 j j P obtain partition Hindex h atomic article X singleton This contradiction choice P cid7 1 c cid7 d cid2 The idea following data reduction rule article vertex cover C cites articles outside C merged articles remaining articles needed maintain citations merged articles Hence superﬂuous citations removed Reduction Rule 2 Let D G W h instance HIndex Manipulationμ μ sumCite unionCite fusionCite G clique let C vertex cover D If article v C cites 2h2 2h articles W C remove arbitrary citation v w w W C Lemma 4 Reduction Rule 2 correct exhaustively applied O n m time Proof We ﬁrst prove correctness Clearly instance resulting application Reduction Rule 2 yesinstance original instance yesinstance For converse consider partition P Hindex h D G W h Hindex h removing v w D Without loss generality assume merged articles P P μP h unmerging articles increase number citations articles case fusionCite decrease Hindex P Observe deletion citation v w D merged article P P μP h We claim articles cited v atomic article h citations add P P h citations yielding partition Hindex h Let U denote set 2h2 2h articles W C cited v By Lemma 3 assume h2 articles U merged articles Thus P Hindex h article u U singleton P satisﬁes μu h If μ sumCite adding u P yields partition Hindex h u citation v If μ unionCite observe v cite P Hence adding u P yields partition Hindex h v cites P u It remains handle case μ fusionCite Note having fusionCiteP P h deleting v w D means v P Recall Lemma 3 assume h2 articles U merged articles Furthermore h 1 articles U cite P h 1 articles u U fusionCiteP u h Denote remaining articles U u1 ucid2 That ui cited v singleton P cite P fusionCiteP ui h Observe articles ui cite merged article P adding ui P yields partition Hindex h Hence assume article ui 1 cid2 cites merged article Observe furthermore ui cid7 cid15 P cited ui receives h citations u1 ui1 adding ui P yields partition merged article P Hindex h recall ui cite P Call article ui good We claim good cid7 article Assign ui integer ci cid7 cid15 P receives h 1 citations u1 ui1 Observe ui cites merged article P u1 ui1 good Hence ci ci1 ui good Furthermore ci h 1h ui good Thus cid2 h 1h good article Because cid2 U h2 h 1 h 1 U 2h2 2h good article cid7 number citations P P cid7PP minh citesi P cid7 citesi P cid10 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 31 Regarding running time article v V checked O degout D v time rule applicable In time citations exceeding number 2h2 2h deleted Since application reduction rule D v article applicable articles follows exhaustively applied O O n m time cid2 vV degout cid10 Finally need following cleanup rule Reduction Rule 3 Let D G W h instance HIndex Manipulationμ μ sumCite unionCite fusionCite G clique If h articles W h citations accept If article W cited remove article If article V W cites article remove article If article W cited h articles V W remove arbitrary citations Lemma 5 Reduction Rule 3 correct exhaustively applied O n m time Proof It clear Reduction Rule 3 exhaustively applied O n m time For correctness non obvious To correct let v article applied observe merged article v contained h citations applying rule applying rule cid2 Combining data reduction rules promised polynomialsize problem kernel Theorem 7 If compatibility graph clique 4h4 6h3 5h2article problem kernel HIndex Manipulationμ computable O n m time μ sumCite unionCite fusionCite Proof To compute problem kernel apply exhaustively Reduction Rules 1 3 By corresponding lemmas sulting instance yesinstance input instance yesinstance rules carried O n m time To upper bound size let C vertex cover D computed matching Reduction Rule 1 Note C 2h2 We upper bound size W reducedness respect Reduction Rule 3 suﬃces upper bound number articles cite cited articles C We divide articles groups The set W W articles h citations articles V W set W W articles h citations articles V W set V V W C articles cite articles W set V V W C V articles cite articles W article W Clearly V C W W V V To upper bound size V ﬁrst note W h 1 Reduction Rule 3 For W note articles contained C cited article C By reducedness respect Reduction Rule 2 2h2 2h2 2hC 4h4 4h3 2h2 articles W Since article V cites article W C articles receive h 1 citations 2h3 articles V Finally article V cites article W articles receive h citations articles V W Reduction Rule 3 Thus h2 articles V overall C W W V V 2h2 4h4 4h3 2h2 2h3 h2 4h4 6h3 5h2 articles reduced instance cid2 Applying arbitrary algorithm decides HIndex Manipulation instances resulting problem kernel Theorem 7 yields following classiﬁcation result Corollary 2 If compatibility graph clique HIndex Manipulationμ μ sumCite unionCite fusionCite lineartime solvable constant h 5 Experiments In section examine authors increase Hindices allowing merges articles similar titles ﬁxing allowed number merges To end gathered article citation data AI 32 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Table 2 Properties data sets Here p number proﬁles data set W average number atomic articles c average number citations h average Hindex data set ha average unmanipulated HIndex increase year max subscript denotes maximum values AIs 10 To Watch 2011 AIs 10 To Watch 2013 IJCAI 2013 p 5 8 22 W 1702 5825 4591 W max c 234 144 98 16142 5420 2515 cmax 3725 1646 547 h 348 140 1036 hmax 46 26 16 ha 253 277 124 researchers computed compatibility graphs based similarity article titles implemented heuristics exact algo rithms maximizing Hindex Herein focused islands tractability determined theoretical analysis cases small number merges small connected components compatibility graph measures sumCite unionCite These cases practically relevant unionCite measure Google Scholar The implemented algorithms mainly based Theorems 1 4 Data acquisition We crawled Google Scholar data 22 selected authors IJCAI13 Our biased selection based capturing authors early career Hindex manipulation attractive Speciﬁcally selected authors Google Scholar proﬁle Hindex 8 20 100 1000 citations active 5 10 years professor position In addition crawled Google Scholar data AIs 10 Watch list young accomplished researchers AI compiled years IEEE Intelligent Systems The dataset contains ﬁve proﬁles 2011 proﬁles 2013 edition list 133 Some proﬁles omitted diﬃculties crawling process example articles attributed unambiguously respective author nonunique author names Compared IJCAI 2013 author set AIs 10 To Watch 2011 contains researchers experienced AIs 10 To Watch 2013 falls data sets regard Table 2 gives overview properties data sets For author computed upper lower bounds Hindex increase allowing k 1 12 merges arbitrary articles maximum possible Hindex increase merging articles titles similarity certain compatibility threshold t 01 02 09 The compatibility thresholding described Generating compatibility graphs Compatibility graphs constructed following simpliﬁed bag words model Compute article u set words T u title Draw edge articles u v T u T v t T u T v t 0 1 compatibility threshold For t 0 compatibility graph clique For t 1 articles words title adjacent Inspection showed t 03 dissimilar articles considered compatible Implemented algorithms We implemented algorithms parameter maximum connected component size c compatibility graph Theorem 1 parameter k allowed merges Theorem 4 We ran algorithms sumCite unionCite measures Note applied unionCite measure algorithm Theorem 4 necessarily compute maximum possible Hindex increase cf Theorem 5 note yields lower bound Moreover running sumCite yields upper bound maximum achievable HIndex unionCite obtain lower upper bound achievable Hindex respect unionCite k merges The ﬁxedparameter algorithm parameter c size connected components compatibility graph able solve instances In particular fails t 02 runs memory cases We implemented alternative solution strategy based enumeration cliques compatibility graph exploiting fact merged article clique compatibility graph G Thus partition article set W complies G directly corresponds set vertexdisjoint cliques G Starting h 1 following 1 Enumerate minimal sets P P clique compatibility graph μP h Each set P potential merged article merged proﬁle achieves Hindex h clearly restrict attention minimal sets cid7 P cid7 2 Find maximumcardinality set P cid7 potential merged articles P P 3 If P cid7 h Hindex h achieved merging Continue h h 1 Otherwise Hindex cid7 pair P P h achieved return h 1 maximum Hindex achieved merging In implementation Step 1 ﬁrst enumerate maximal cliques compatibility graph check subset maximal clique minimal set μP h In Step 2 size P cid7 computed constructing auxiliary graph vertices potential merged articles edges added R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 33 Fig 3 Box plots data sets achievable Hindex increases number merges restricted arbitrary pairs articles merged compatibility graph clique For number k allowed merges left box shows Hindex increase sumCite right box shows lower bounds possible Hindex increase unionCite The lower edge box 25th percentile upper edge 75th percentile bar median The whiskers box extend maximum minimum observed values potential merged articles nonempty intersection In graph P cid7 compute P cid7 vertex cover size maximumcardinality independent set We computing minimumcardinality vertex cover simple ﬁxedparameter algorithm parameter This algorithm higher worstcase running time ﬁxedparameter algorithm parameter c overall number potential merged articles p exponential c solve Independent Set graph order p Nevertheless works data sets number potential merged articles lower worstcase instance Source code data freely available http fpt akt tuberlin hindex Experimental results We ran algorithms time limit hour 36 GHz Intel Xeon E51620 processor memory limit 64 GB Under limits ﬁxedparameter algorithm parameter k number allowed merges failed solve instances k 11 Thus Fig 3 shows results k 10 The ﬁxedparameter algorithm parameter c size connected components compatibility graph failed solve instances compatibility threshold t 02 Instances k 10 t 03 usually solved seconds 100 MB memory The algorithm based clique enumeration solved instance t 02 minutes None algorithms able solve instances t 01 Thus Fig 4 shows results t 02 Fig 3 shows Hindex increase authors number k 1 10 allowed article merges compatibility graph clique Remarkably merges suﬃcient sample authors increase Hindex Let number perspective shown Table 2 measured manipu lation average Hindex group sample authors grows 124 277 year higher oneperyear increase observed Hirsch 22 physics Thus Fig 3 conclude merges save months work half AIs 10 To Watch 2011 group months work half AIs 10 To Watch 2013 group 19 months work half IJCAI13 group Fig 4 shows Hindex increase authors unionCite compatibility threshold t 02 03 09 Remarkably compatibility threshold t 06 75 sample authors increase Hindex merging compatible articles We conclude increasing Hindex substantially article merges easy discover necessary merge articles highly dissimilar titles manipulation 34 R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 Fig 4 Box plots data sets achievable Hindex increases compatibility articles restricted arbitrary number articles merged For compatibility threshold t left box shows Hindex increase sumCite right box unionCite The lower edge box 25th percentile upper edge 75th percentile bar median The whiskers box extend maximum minimum observed values 6 Outlook Clearly interesting consider merging articles order increase measures Hindex like gindex 1431 windex 30 i10index certain author The i10index number articles citations currently Google Scholar Elkind Pavlou 27 performed study direction results showed gindex i10index somewhat easier manipulate Hindex In addition studied scenario manipulator wants account impact manipulation actions researchers distinguishing friends competitors Moreover merging articles order increase index decrease indices like overall number citations Hence interesting study problem increasing Hindex merging decreasing overall number citations i10index predeﬁned threshold A systematic study computing Pareto optimal solutions interesting The computational problems related optimal merging articles different measures natural ev idenced example relation Bin Covering Machine Covering Thus improvements presented algorithms desirable study parameterizations broad multivariate complexity analy sis 182326 Altogether experiments merging option leaves room manipulation substantial ma nipulation requires merging visibly unrelated articles Hiring committees use Hindex evaluation examine article merges closely rely databases allow article merges Acknowledgements We thank anonymous referees helpful comments particular pointing Theorem 2iii René van Bevern supported German Research Foundation DFG project DAPA NI 36912 TU Berlin Russian Foundation Basic Research RFBR project 163160007 mol_a_dk Novosibirsk State University Christian Komusiewicz supported DFG project MAGZ KO 366941 Manuel Sorge supported DFG project DAPA NI 36912 Toby Walsh supported Alexander von Humboldt Foundation Bonn Germany TU Berlin The main work Toby Walsh aﬃliated University New South Wales Data61 Sydney Australia R van Bevern et al Artiﬁcial Intelligence 240 2016 1935 35 References 1 AIs 10 watch IEEE Intell Syst 26 1 2011 515 httpdxdoiorg101109MIS20117 2 S Assmann D Johnson D Kleitman JT Leung On dual version onedimensional bin packing problem J Algorithms 5 4 1984 502525 httpdxdoiorg101016019667748490004X 3 C Bartneck S Kokkelmans Detecting hindex manipulation selfcitation analysis Scientometrics 87 1 2011 8598 httpdxdoiorg10 1007s1119201003065 4 R van Bevern C Komusiewicz R Niedermeier M Sorge T Walsh Hindex manipulation merging articles models theory experiments Proceedings 24th Conference Artiﬁcial Intelligence IJCAI15 AAAI Press 2015 pp 808814 5 R van Bevern C Komusiewicz H Molter R Niedermeier M Sorge T Walsh Hindex manipulation undoing merges Proceedings 22nd European Conference Artiﬁcial Intelligence ECAI16 Frontiers Artiﬁcial Intelligence Applications IOS Press 2016 press 6 HL Bodlaender M van Kreveld Google scholar makes hardthe complexity organizing ones publications Inf Process Lett 115 12 2015 7 EG Coffman Jr J Csirik G Galambos S Martello D Vigo Bin packing approximation algorithms survey classiﬁcation Handbook Combi 965968 httpdxdoiorg101016jipl201507003 natorial Optimization Springer New York 2013 pp 455531 8 M Cygan FV Fomin L Kowalik D Lokshtanov D Marx M Pilipczuk M Pilipczuk S Saurabh Parameterized Algorithms Springer 2015 9 B Keijzer KR Apt The Hindex easily manipulated Bull EATCS 110 2013 7985 10 E Delgado LópezCózar N RobinsonGarcía D TorresSalinas The Google Scholar experiment index false papers manipulate bibliometric indicators J Assoc Inf Sci Technol 65 3 2014 446454 httpdxdoiorg101002asi23056 11 R Denman S Foster Using clausal graphs determine computational complexity kbounded positive oneinthree SAT Discrete Appl Math 157 7 2009 16551659 httpdxdoiorg101016jdam200809011 12 RG Downey MR Fellows Fundamentals Parameterized Complexity Springer 2013 13 B Dutta MO Jackson ML Breton Strategic candidacy voting procedures Econometrica 69 4 2001 10131037 httpdxdoiorg101111 1468026200228 14 L Egghe Theory practise gindex Scientometrics 69 1 2006 131152 httpdxdoiorg101007s1119200601447 15 P Faliszewski AD Procaccia AIs war manipulation winning AI Mag 31 4 2010 5364 16 P Faliszewski E Hemaspaandra LA Hemaspaandra Using complexity protect elections Commun ACM 53 11 2010 7482 httpdxdoiorg 17 MR Fellows D Hermelin F Rosamond S Vialette On parameterized complexity multipleinterval graph problems Theor Comput Sci 410 1 10114518396761839696 2009 5361 httpdxdoiorg101016jtcs200809065 18 MR Fellows BMP Jansen FA Rosamond Towards fully multivariate algorithmics parameter ecology deconstruction computational com plexity Eur J Comb 34 3 2013 541566 httpdxdoiorg101016jejc201204008 19 J Flum M Grohe Parameterized Complexity Theory Springer 2006 20 DK Friesen BL Deuermeyer Analysis greedy solutions replacement sequencing problem Math Oper Res 6 1 1981 7487 httpdxdoiorg101287moor6174 21 J Guo R Niedermeier Invitation data reduction problem kernelization ACM SIGACT News 38 1 2007 3145 httpdxdoiorg101145 12334811233493 22 JE Hirsch An index quantify individuals scientiﬁc research output Proc Natl Acad Sci USA 102 46 2005 1656916572 httpdxdoi org101073pnas0507655102 23 C Komusiewicz R Niedermeier New races parameterized algorithmics Proceedings 37th International Symposium Mathematical Foundations Computer Science MFCS 12 Lecture Notes Computer Science vol 7464 Springer 2012 pp 1930 24 S Kratsch Recent developments kernelization survey Bull EATCS 113 2014 5897 25 R Niedermeier Invitation FixedParameter Algorithms Oxford Lecture Series Mathematics Its Applications vol 31 Oxford University Press 2006 26 R Niedermeier Reﬂections multivariate algorithmics problem parameterization Proceedings 27th International Symposium The oretical Aspects Computer Science STACS 10 LIPIcs vol 5 Schloss Dagstuhl LeibnizZentrum für Informatik 2010 pp 1732 27 C Pavlou E Elkind Manipulating citation indices social context Proceedings 2016 International Conference Autonomous Agents Multiagent Systems AAMAS16 International Foundation Autonomous Agents Multiagent Systems 2016 pp 3240 28 P Vinkler Would possible increase Hirschindex π index CDSindex increasing number publications citations unity J Informetr 7 1 2013 7283 httpdxdoiorg101016jjoi201208001 29 R Walter M Wirth A Lawrinenko Improved approaches exact solution machine covering problem J Sched 2016 httpdx doiorg101007s109510160477x press 30 GJ Woeginger An axiomatic characterization Hirschindex Math Soc Sci 56 2 2008 224232 httpdxdoiorg101016jmathsocsci2008 03001 31 GJ Woeginger An axiomatic analysis Egghes gindex J Informetr 2 4 2008 364368 httpdxdoiorg101016jjoi200805002 32 A Yong Critique Hirschs citation index combinatorial Fermi problem Not AMS 61 9 2014 10401050 httpdxdoiorg101090noti1164 33 D Zeng AIs 10 watch IEEE Intell Syst 28 3 2013 8696 httpdxdoiorg101109MIS201357