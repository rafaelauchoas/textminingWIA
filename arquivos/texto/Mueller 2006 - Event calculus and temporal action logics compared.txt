Artiﬁcial Intelligence 170 2006 10171029 wwwelseviercomlocateartint Event calculus temporal action logics compared Erik T Mueller IBM Thomas J Watson Research Center PO Box 704 Yorktown Heights NY 10598 USA Received 11 November 2005 received revised form 8 May 2006 accepted 8 May 2006 Available online 12 June 2006 Abstract We compare event calculus temporal action logics TAL formalisms reasoning action change We prove formalisms restricted integer time inertial ﬂuents relational ﬂuents TAL action type speciﬁcations restricted deﬁnite reassignment single ﬂuent formalisms equivalent We argue equivalence restored general TAL action type speciﬁcations We prove formalisms restricted singlestep actions logically equivalent 2006 Elsevier BV All rights reserved Keywords Commonsense reasoning Reasoning action change Event calculus Temporal action logics TAL 1 Introduction Reasoning action change fundamental area research artiﬁcial intelligence This im portant area action change pervasive aspects world intelligent agents operate Over years number formalisms frameworks reasoning action change developed Among situation calculus 2533 event calculus 1936 features ﬂuents 3435 action languages 79 ﬂuent calculus 124142 Although crosspollination formalisms developed relative isolation relationship understood But understanding relationship formalisms important following reasons It helps advance ﬁeld An understanding space possible formalisms formalism situated space essential reﬁnement It enables sharing reasoning tools A number reasoning tools available shown Table 1 If problems formalism translated formalism solved reasoning tools formalism It enables sharing problem libraries developed formalisms reasoning tools It facilitates collaboration Researchers working formalism understand build results researchers formalism Email address etmusibmcom ET Mueller 00043702 matter 2006 Elsevier BV All rights reserved doi101016jartint200605001 1018 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 Table 1 Tools reasoning action change Formalism Situation calculus Event calculus TAL C E Fluent calculus Tool KM 3 httpwwwcsutexaseduusersmfkbkmhtml Event calculus planner 39 httpwwwiiseeicacukmpshaplannershtml Discrete Event Calculus Reasoner 28 httpdecreasonersourceforgenet VITAL 20 httpwwwidaliusejonkvvital CCALC 923 httpwwwcsutexaseduuserstagcc ERES 1415 httpwwwuclacukuczcrsmLanguageE FLUX 43 httpwwwﬂuxagentorg Two major streams research reasoning action change temporal action logics TAL 4621 origins features ﬂuents framework event calculus 2937 TAL event calculus appear similar characterizations classical logic use linear time But exact relationship unclear In paper compare event calculus support events duration 2637 TAL 10 451 We start restricting event calculus TAL 10 integer time inertial ﬂuents relational ﬂuents We restrict TAL 10 action type speciﬁcations deﬁnite reassignment single ﬂuent We prove restricted versions equivalent We equivalence restored general TAL action type speciﬁcations We restrict formalisms singlestep actions prove versions logically equivalent 2 Past work In past approaches compare formalisms reasoning action change 1 Two formalisms proved logically equivalent 2 A syntactic translation deﬁned domain description formalism domain description formalism domain descriptions proved entail results Translations provided directions 3 Semantic model theoretic conditions deﬁned domain description formalism matches domain description formalism matching domain descriptions proved entail results 4 A general formalism deﬁned formalisms shown special cases general formalism In order ease comparison formalisms extended restricted ways The ﬁrst approach Kowalski Sadri 1718 consider version event calculus extended branching time concurrent events continuous change release commonsense law inertia They version event calculus logically equivalent version situation calculus similar Reiter 32 The ﬁrst approach Mueller 27 proves domain timepoint sort restricted integers continuous event calculus logically equivalent discrete version event calculus We use ﬁrst approach paper 1 We use variant TAL 10 actions treated ﬁrstclass citizens 5 pp 1920 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 1019 The second approach number researchers Kartha 16 deﬁnes translation domain descriptions action language A 8 versions situation calculus 13031 He asserts sequence events A domain description situation calculus translations entail truth values ﬂuents Thielscher 40 restricts A single sequence actions restricts ego world semantics 35 inertial ﬂuents relational ﬂuents singlestep actions He deﬁnes translation A domain descriptions ego world semantics domain descriptions deﬁnes translation ego world semantics domain descriptions A domain descrip tions He sketches proofs cases models domain descriptions entail event occurrences ﬂuent truth values Giunchiglia Lifschitz 11 deﬁne translation unrestricted domain descriptions action language C 10 situation calculus deﬁne classical logic translation transition semantics C domain descriptions They prove domain description translations logically equivalent They deﬁne translation restricted C domain descriptions TAL domain descriptions deﬁne classical logic translation transition semantics C domain descriptions They prove domain description ﬁrst translation conservative extension second translation The approach Miller Shanahan 26 consider version E action language 13 version event calculus release commonsense law inertia continuous change state constraints They deﬁne semantic conditions E domain description matches event calculus domain description They prove E domain description matches event calculus domain description domain descriptions entail event occurrences ﬂuent truth values The fourth approach Van Belleghem Denecker De Schreye 44 deﬁne general formalism encompasses situation calculus version event calculus concurrent events continuous change release commonsense law inertia They situation calculus version event calculus obtained restricting general formalism Bennett Galton 2 deﬁne versatile event logic VEL semantics includes number formalisms temporal reasoning present ways describing situation calculus event calculus VEL They consider version event calculus continuous change release commonsense law inertia A related approach Sandewall 35 deﬁnes ontological families intended models main description given family The correctness particular formalism assessed formal speciﬁcations 3 The event calculus TAL How shall proving logical equivalence event calculus events duration TAL 10 As shown Table 2 formalisms support features In addition formalisms address indirect effects nondeterministic effects language features Indirect effects represented event calculus causal constraints effect constraints 38 represented TAL 10 dependency constraints 5 pp 1618 Nondeterministic effects represented event calculus determin ing ﬂuents 37 pp 419420 represented TAL 10 disjunctions reassignment operators 4 pp 3536 At point choices We extend formalisms missing features restrict formalisms common features We choose second approach We disallow causal constraints continuous change continuous time effect constraints event calculus disallow dependency straints disjunctions reassignment operators durational ﬂuents functional ﬂuents TAL 10 In order prove logical equivalence like characterize event calculus TAL 10 classical language TAL 10 domain descriptions written specialized language LND translated classical language LFL The important translation rules provided Appendix A Event calculus domain descriptions expressed classical language But TAL 10 LFL event calculus use different symbol sets TAL 10 LFL uses Holds Occurs Occlude event calculus restricted uses HoldsAt InitiallyP InitiallyN Happens Initiates Terminates Clipped Declipped How shall reconcile languages In TAL 10 effects events speciﬁed LND action type speciﬁcations form τ τ cid2α cid2 β 1020 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 Table 2 Features event calculus TAL 10 Feature Causal constraints Concurrent events Contextsensitive effects Continuous change Continuous time Dependency constraints Disjunctions reassignment operators Durational ﬂuents Effect constraints Events duration Functional ﬂuents Inertial ﬂuents State constraints Event calculus cid2 cid2 cid2 cid2 cid2 cid2 cid2 cid2 cid2 TAL 10 cid2 cid2 cid2 cid2 cid2 cid2 cid2 cid2 cid2 τ τ cid2 timepoints α action β formula speciﬁes preconditions postconditions α Postconditions deﬁned R X I reassignment operators The R operator speciﬁes ﬂuent released commonsense law inertia time interval constrained particular value end interval The I operator speciﬁes ﬂuent released commonsense law inertia time interval constrained particular value interval The X operator speciﬁes ﬂuent released commonsense law inertia time interval Note ﬂuent released commonsense law inertia reassignment operator constrained parts action type speciﬁcation different axioms state constraints The effects actions often2 speciﬁed LND action type speciﬁcations form τ τ cid2α cid2 τ γ Rτ τ cid2β 1 τ τ cid2 timepoints α action γ formula β ﬂuent This represents α occurs τ τ cid2 γ true τ β indeterminate truth value τ 1 τ cid2 1 inclusive true false starting τ cid2 A speciﬁcation form translated LFL formula cid2 Occursτ τ β t τ t t cid3 τ 2 γ cid2 LFL translation τ γ 3 Notice 2 logically equivalent conjunction formulas α γ cid2 Occludet β cid2 Holdsτ cid2 Occursτ τ Occursτ τ cid2 cid2 α γ α γ cid2 Holdsτ cid2 τ t t cid3 τ cid2 β cid2 Occludet β In order reconcile languages assume TAL 10 action type speciﬁcations form 1 Given assumption Sections 4 6 restricted TAL 10 equivalent restricted event calculus We argue Section 7 relax assumption allow general action type speciﬁcations obtain equivalence Given assumption express τ τ cid2α cid2 τ γ Rτ τ cid2β γ cid2 Initiatesα β τ τ τ cid2α cid2 τ γ Rτ τ cid2β γ cid2 Terminatesα β τ event calculus We add following domainindependent axioms TAL Occurst1 t2 e Initiatese f t1 Holdst2 f Occurst1 t2 e Terminatese f t1 Holdst2 f 3 4 2 46 68 unique action type speciﬁcations provided latest release VITAL version 2999910 alpha October 8 2003 form rewritten speciﬁcations form 8 speciﬁcations form τ τ cid2α cid2 τ γ I τ τ cid2β β durational ﬂuent 5 speciﬁcations involve Rτ cid2β 3 speciﬁcations use disjunctions reassignment operators remaining 6 speciﬁcations use combinations reassignment operators Current TAL domains complex added VITAL 3 For example LFL translation τ β1 β2 Holdsτ β1 Holdsτ β2 See Appendix A details ET Mueller Artiﬁcial Intelligence 170 2006 10171029 1021 Initiatese f t1 Terminatese f t1 Occurst1 t2 e t1 t t cid3 t2 Occludet f 5 Furthermore treat TAL 10 LFL predicates Holdst f Occurst1 t2 e Occludet f event calculus predicates InitiallyPf InitiallyNf Clippedt1 f t2 Declippedt1 f t2 abbreviations We use manysorted language equality sorts events ﬂuents timepoints The domain timepoint sort integers The language following predicates HoldsAtf t Fluent f true timepoint t Happens3e t1 t2 Event e occurs timepoint t1 timepoint t2 Initiatese f t1 If event e occurs timepoint t1 timepoint t2 ﬂuent f true t2 Terminatese f t1 If event e occurs timepoint t1 timepoint t2 ﬂuent f false t2 31 TALA axiomatization We use following axiomatization restricted TAL 10 TALA We start deﬁnitions Holds Occurs TALA1 Holdst f TALA2 Occurst1 t2 e def HoldsAtf t def Happens3e t1 t2 1 Note difference ending timepoint t2 Occurs Happens3 TAL uses circumscription 2224 Occlude Occurs predicates 21 p 26 event calculus uses circumscription Initiates Terminates Happens 37 p 417 We continue deﬁnition based circumscription Occlude 5 We compute circumscription Proposition 2 Lifschitz 22 reduces circumscription predicate completion TALA3 Occludet f def e t1 t2 Initiatese f t1 Terminatese f t1 Occurst1 t2 e t1 t t cid3 t2 The TAL 10 nochange axiom Occludet 1 f Holdst 1 f Holdst f 4 p 30 logically equiva lent conjunction axioms TALA4 TALA5 TALA4 Holdst f Occludet 1 f Holdst 1 f TALA5 Holdst f Occludet 1 f Holdst 1 f We continue formulas 3 4 TALA6 Occurst1 t2 e Initiatese f t1 Holdst2 f TALA7 Occurst1 t2 e Terminatese f t1 Holdst2 f We ﬁnish constraint starting ending timepoints event occurrence TALA8 Occurst1 t2 e t1 t2 Let TALA formula generated conjoining axioms TALA4 TALA8 expanding predicates Holds Occurs Occlude deﬁnitions TALA1 TALA3 32 ECA axiomatization There versions event calculus support events duration 2637 Both candidates equivalence TAL 10 We start following axiomatization event calculus It obtained version event calculus Shanahan 37 p 416 eliminating Releases replacing InitiallyP InitiallyN Clipped Declipped deﬁnitions 1022 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 ECA1 InitiallyPf ECA2 InitiallyNf def HoldsAtf 0 def HoldsAtf 0 def e t2 t3 Happens3e t2 t3 t1 t3 t2 t4 Terminatese f t2 def e t2 t3 Happens3e t2 t3 t1 t3 t2 t4 Initiatese f t2 ECA3 Clippedt1 f t4 ECA4 Declippedt1 f t4 ECA5 InitiallyPf Clipped0 f t HoldsAtf t ECA6 InitiallyNf Declipped0 f t HoldsAtf t ECA7 Happens3e t1 t2 Initiatese f t1 t2 t3 Clippedt1 f t3 HoldsAtf t3 ECA8 Happens3e t1 t2 Terminatese f t1 t2 t3 Declippedt1 f t3 HoldsAtf t3 ECA9 Happens3e t1 t2 t1 cid3 t2 Let ECA formula generated conjoining axioms ECA5 ECA9 expanding predicates InitiallyP InitiallyN Clipped Declipped deﬁnitions ECA1 ECA4 We proceed ﬁrst result 4 Lack equivalence TALA ECA In section expose differences TALA ECA The ﬁrst difference involves occurrence event initiates ﬂuent followed occurrence event initiates ﬂuent In TALA ﬂuent indeterminate truth value durations event occurrences ECA indeterminate truth value duration ﬁrst event occurrence Within duration second event occurrence ﬂuent true previously initiated clipped Theorem 1 TALA cid10 ECA Proof Consider following structure S Initiates cid11I F 1cid12 cid11I F 4cid12 Terminates Happens3 cid11I 1 2cid12 cid11I 4 5cid12 HoldsAt cid11F 3cid12 cid11F 4cid12 cid11F 6cid12 cid11F 7cid12 cid11F 8cid12 6 7 8 9 We S TALA S cid10 ECA It straightforward verify S TALA In order S cid10 ECA sufﬁcient S cid10 ECA7 Moreover need S cid10 Happens3I 1 2 InitiatesI F 1 2 5 Clipped1 F 5 HoldsAtF 5 10 From 7 S e t2 t3Happens3e t2 t3 1 t3 t2 5 Terminatese F t2 From deﬁnition ECA3 S Clipped1 F 5 From 8 6 S Happens3I 1 2 InitiatesI F 1 2 5 Clipped1 F 5 But 9 S HoldsAtF 5 Therefore 10 cid3 The second difference TALA ECA involves occurrence event initiates ﬂuent overlaps time occurrence event terminates ﬂuent In TALA ﬂuent true end initiating event occurrence ECA ﬂuent indeterminate truth value end initiating event occurrence Theorem 2 ECA cid10 TALA ET Mueller Artiﬁcial Intelligence 170 2006 10171029 Proof Consider following structure S Initiates cid11I F 1cid12 Terminates cid11T F 2cid12 Happens3 cid11I 1 2cid12 cid11T 2 3cid12 HoldsAt 1023 11 12 13 14 We S ECA S cid10 TALA It straightforward verify S ECA In order S cid10 TALA sufﬁcient S cid10 TALA6 Furthermore need S cid10 Occurs1 3 I InitiatesI F 1 Holds3 F 15 From 13 deﬁnition TALA2 11 Occurs1 3 I InitiatesI F 1 But 14 deﬁnition TALA1 S Holds3 F Therefore 15 cid3 Thus lack equivalence Corollary 3 TALA logically equivalent ECA Proof This follows Theorem 1 Theorem 2 cid3 5 ECB axiomatization A second axiomatization event calculus supports events duration provided Miller Shana han 26 pp 470471 After rewriting style ECA follows def e t2 t3Happens3e t2 t3 t1 cid3 t3 t2 t4 Terminatese f t2 def e t2 t3Happens3e t2 t3 t1 cid3 t3 t2 t4 Initiatese f t2 def e t2 t3Happens3e t2 t3 t1 t3 t2 t4 Terminatese f t2 def e t2 t3Happens3e t2 t3 t1 t3 t2 t4 Initiatese f t2 ECB1 Clippedcid2t1 f t4 ECB2 Declippedcid2t1 f t4 ECB3 Clippedt1 f t4 ECB4 Declippedt1 f t4 ECB5 HoldsAtf t1 t1 t2 Clippedcid2t1 f t2 HoldsAtf t2 ECB6 HoldsAtf t1 t1 t2 Declippedcid2t1 f t2 HoldsAtf t2 ECB7 Happens3e t1 t2 Initiatese f t1 t2 t3 Clippedt1 f t3 HoldsAtf t3 ECB8 Happens3e t1 t2 Terminatese f t1 t2 t3 Declippedt1 f t3 HoldsAtf t3 ECB9 Happens3e t1 t2 t1 cid3 t2 ECB differs ECA following ways It eliminates deﬁnitions InitiallyP InitiallyN It add deﬁnitions Clippedcid2 Declippedcid2 It adds axioms inertia ECB5 ECB6 Let ECB formula generated conjoining axioms ECB5 ECB9 expanding predicates Clippedcid2 Declippedcid2 Clipped Declipped deﬁnitions ECB1 ECB4 We second result 6 Lack equivalence TALA ECB ECB equivalent TALA reasons previously given ECA following reason Consider single occurrence event initiates ﬂuent Within duration event occurrence ﬂuent indeterminate truth value TALA ECB ﬂuent true persists model 1024 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 frame axiom ECB5 That given model ﬂuent true given timepoint event occurrence true remaining timepoints event occurrence Theorem 4 TALA cid10 ECB Proof Consider following structure S 16 17 18 Initiates cid11I F 1cid12 Terminates Happens3 cid11I 1 3cid12 HoldsAt cid11F 2cid12 cid11F 4cid12 cid11F 5cid12 cid11F 6cid12 19 We S TALA S cid10 ECB It straightforward verify S TALA In order S cid10 ECB sufﬁcient S cid10 ECB5 Moreover need S cid10 HoldsAtF 2 2 3 Clippedcid2 2 F 3 HoldsAtF 3 20 From 17 S e t2 t3Happens3e t2 t3 2 cid3 t3 t2 3 Terminatese F t2 From deﬁnition ECB1 S Clippedcid22 F 3 From 19 S HoldsAtF 2 2 3 Clippedcid2 2 F 3 But 19 S HoldsAtF 3 Therefore 20 cid3 Corollary 5 TALA logically equivalent ECB Proof This follows Theorem 4 cid3 7 General action type speciﬁcations We shown TAL action type speciﬁcations form 1 TAL event calculus equivalent What use general form action type speciﬁcation Can restore equivalence event calculus The answer It sufﬁcient difference highlighted proof Theorem 2 erased ECA7 ECB7 identical entails ﬂuent clipped event occurrence initiates ﬂuent ﬂuent true end event occurrence Action type speciﬁcations form 1 entail ﬂuent true end event We like add action type speciﬁcation condition ﬂuent clipped t1 t2I cid2 t3 t4t3 t4T t1 t4 1 t3 t2 Rt2F I T actions F ﬂuent Unfortunately consequent action type speciﬁcation contain action occurrence statements t3 t4T 4 p 28 The underlying difﬁculty TAL notions clipped declipped In order TAL emulate event calculus events duration extended notions 8 Restriction singlestep actions We consider happens restrict TAL event calculus singlestep actions We add TALA9 TALA TALA1 Holdst f TALA2 Occurst1 t2 e def HoldsAtf t def Happens3e t1 t2 1 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 1025 def e t1 t2Initiatese f t1 Terminatese f t1 Occurst1 t2 e t1 t t cid3 t2 TALA3 Occludet f TALA4 Holdst f Occludet 1 f Holdst 1 f TALA5 Holdst f Occludet 1 f Holdst 1 f TALA6 Occurst1 t2 e Initiatese f t1 Holdst2 f TALA7 Occurst1 t2 e Terminatese f t1 Holdst2 f TALA8 Occurst1 t2 e t1 t2 TALA9 Occurst1 t2 e t2 t1 1 Let TALAS formula generated conjoining axioms TALA4 TALA9 expanding predicates Holds Occurs Occlude deﬁnitions TALA1 TALA3 For singlestep actions version event calculus appears similar TAL discrete event calculus DEC 2729 DEC developed improve efﬁciency automated reasoning event calculus It improves efﬁciency limiting time integers eliminating triply quantiﬁed time axioms Mueller 27 proves integer time singlestep events DEC logically equivalent extended version ECB 26 The following axiomatization obtained version DEC eliminating Trajectory AntiTrajectory Releases ReleasedAt def Happens3e t t DECA1 Happense t DECA2 HoldsAtf t eHappense t Terminatese f t HoldsAtf t 1 DECA3 HoldsAtf t eHappense t Initiatese f t HoldsAtf t 1 DECA4 Happense t Initiatese f t HoldsAtf t 1 DECA5 Happense t Terminatese f t HoldsAtf t 1 DECA6 Happens3e t1 t2 t1 t2 Let DECA formula generated conjoining axioms DECA2 DECA6 expanding predicate Happens deﬁnition DECA1 We obtain ﬁnal result 9 Equivalence TALAS DECA We TALAS DECA logically equivalent First prove number lemmas Lemma 6 TALAS DECA2 Proof Suppose TALAS Let f arbitrary ﬂuent t arbitrary timepoint We HoldsAtf t eHappense t Terminatese f t HoldsAtf t 1 Suppose HoldsAtf t eHappense t Terminatese f t 21 22 We consider cases Case 1 eHappense t Initiatese f t From deﬁnition DECA1 TALA2 existential instantiation Occurst t 1 E InitiatesE f t E From TALA6 TALA1 HoldsAtf t 1 required Case 2 eHappense t Initiatese f t From 22 deﬁnition DECA1 TALA2 eInitiatese f t Terminatese f t Occurst t 1 e Therefore t1 t t2 t1 1 Initiatese f t1 Terminatese f t1 Occurst1 t2 e 23 1026 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 From TALA9 contraposition t2 cid10 t1 1 Occurst1 t2 e Hence t2 cid10 t1 1 Initiatese f t1 Terminatese f t1 Occurst1 t2 e From 23 t2 cid10 t1 1 t1 t Initiatese f t1 Terminatese f t1 Occurst1 t2 e We t1 t 1 t 1 cid3 t2 t2 cid10 t1 1 t1 t logically equivalent t1 t 1 t 1 cid3 t2 t2 t1 1 t1 t To suppose t1 t 1 t 1 cid3 t2 t2 t1 1 24 25 26 27 28 From 27 28 t cid3 t1 From 26 t1 t required From 25 24 t1 t 1 t 1 cid3 t2 Initiatese f t1 Terminatese f t1 Occurst1 t2 e 29 From TALA3 Occludet 1 f From 21 TALA1 TALA4 HoldsAtf t 1 required cid3 Lemma 7 TALAS DECA3 Proof The proof identical Lemma 6 HoldsAt substituted HoldsAt Initiates Terminates swapped TALA7 substituted TALA6 TALA5 substituted TALA4 cid3 Lemma 8 TALAS DECA4 Proof Suppose TALAS Let e arbitrary event f arbitrary ﬂuent t arbitrary timepoint We Happense t Initiatese f t HoldsAtf t 1 Suppose Happense t Initiatese f t From Happense t deﬁnition DECA1 TALA2 Occurst t 1 e From Initiatese f t TALA6 TALA1 HoldsAtf t 1 cid3 Lemma 9 TALAS DECA5 Proof The proof identical Lemma 8 HoldsAt substituted HoldsAt Terminates substituted Initiates TALA7 substituted TALA6 cid3 Lemma 10 TALAS DECA6 Proof This follows TALA9 TALA2 cid3 Now consider direction Lemma 11 DECA TALA4 Proof Suppose DECA Let f arbitrary ﬂuent t arbitrary timepoint We Holdst f Occludet 1 f Holdst 1 f Suppose Holdst f Occludet 1 f 30 31 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 1027 From 31 deﬁnition TALA3 e t1 t2Initiatese f t1 Terminatese f t1 Occurst1 t2 e t1 t 1 t 1 cid3 t2 Hence eTerminatese f t Occurst t 1 e From deﬁnition TALA2 DECA1 e Happense t Terminatese f t From 30 deﬁnition TALA1 DECA2 Holdst 1 f required cid3 Lemma 12 DECA TALA5 Proof The proof identical Lemma 11 Holds substituted Holds Initiates Terminates swapped DECA3 substituted DECA2 cid3 Lemma 13 DECA TALA6 Proof Suppose DECA Let e arbitrary event f arbitrary ﬂuent t1 t2 arbitrary timepoints We Occurst1 t2 e Initiatese f t1 Holdst2 f Suppose Occurst1 t2 e Initiatese f t1 From Occurst1 t2 e deﬁnition TALA2 Happens3e t1 t2 1 From DECA6 t2 t1 1 From Happens3e t1 t2 1 DECA1 Happense t1 From Initiatese f t1 DECA4 deﬁnition TALA1 Holdst1 1 f From t2 t1 1 Holdst2 f cid3 Lemma 14 DECA TALA7 Proof The proof identical Lemma 13 Holds substituted Holds Terminates substi tuted Initiates DECA5 substituted DECA4 cid3 Lemma 15 DECA TALA8 Proof This follows deﬁnition TALA2 DECA6 cid3 Lemma 16 DECA TALA9 Proof This follows deﬁnition TALA2 DECA6 cid3 Now proceed equivalence theorem Theorem 17 TALAS logically equivalent DECA Proof We prove directions separately TALAS DECA Suppose TALAS Then DECA2 DECA3 DECA4 DECA5 DECA6 follow Lem mas 6 7 8 9 10 respectively DECA TALAS Suppose DECA Then TALA4 TALA5 TALA6 TALA7 TALA8 TALA9 follow Lemmas 11 12 13 14 15 16 respectively cid3 10 Conclusions We investigated relationship event calculus TAL We started restricting malisms common features resulting versions formalisms equivalent We restricted event calculus TAL singlestep actions proved versions logically equivalent Some areas work following Lesser restrictions restriction singlestep actions explored It possible form equivalence TAL event calculus events duration overlapping events 1028 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 Hybrids event calculus TAL created The relationships pairs formalisms reasoning action change explored Correspondences developed event calculus action language C situa tion calculus temporal action logics Acknowledgements I grateful anonymous referees helpful suggestions Appendix A Translation TAL 10 LND LFL The important translation rules TAL 10 LND LFL follows 5 pp 69 If α action occurrence statement Transα cid2 β Transα Transβ If disjunction β scope R I X reassignment operator circumscription Occlude computed predicate completion 22 If α action Transτ τ cid2α Occursτ τ cid2 α TransRτ τ cid2 α TransXτ τ cid2α τ cid2α TransRτ α TransXτ α τ α TransI τ τ cid2α TransXτ τ cid2α τ τ cid2α TransXτ τ cid2α t τ t t cid3 τ cid2 TransXtα TransXτ α TransXτ α If TransXτ α β TransXτ α TransXτ β If Q TransXτ Qνα QνTransXτ α If α ﬂuent TransXτ α Occludeτ α Transτ α Transτ α If Transτ α β Transτ α Transτ β If Q Transτ Qνα QνTransτ α If α ﬂuent Transτ α Holdsτ α References 1 AB Baker Nonmonotonic reasoning framework situation calculus Artiﬁcial Intelligence 49 13 1991 523 2 B Bennett AP Galton A unifying semantics time events Artiﬁcial Intelligence 153 12 2004 1348 3 P Clark B Porter KMThe Knowledge Machine 140 KMs situation mechanism Department Computer Science University Texas Austin Austin TX 2000 4 P Doherty PMON A ﬂuent logic action change Formal speciﬁcation version 10 Technical Report LiTHIDAR9633 Depart ment Computer Information Science Linköping University Linköping Sweden 1996 5 P Doherty J Gustafsson L Karlsson J Kvarnström TAL Temporal Action Logics language speciﬁcation tutorial Linköping Electronic Articles Computer Information Science 3 015 1998 6 P Doherty W Łukaszewicz Circumscribing features ﬂuents DM Gabbay HJ Ohlbach Eds Temporal Logic Lecture Notes Computer Science vol 827 Springer Berlin 1994 pp 82100 7 RE Fikes NJ Nilsson STRIPS A new approach application theorem proving problem solving Artiﬁcial Intelligence 2 1971 189208 8 M Gelfond V Lifschitz Representing action change logic programs Journal Logic Programming 17 24 1993 301321 9 E Giunchiglia J Lee V Lifschitz NC McCain H Turner Nonmonotonic causal theories Artiﬁcial Intelligence 153 2004 49104 10 E Giunchiglia V Lifschitz An action language based causal explanation Preliminary report Proceedings Fifteenth National Conference Artiﬁcial Intelligence Tenth Conference Innovative Applications Artiﬁcial Intelligence AAAI Press Menlo Park CA 1998 pp 623630 11 E Giunchiglia V Lifschitz Action languages temporal action logics situation calculus Linköping Electronic Articles Computer Information Science 4 040 1999 12 S Hölldobler J Schneeberger A new deductive approach planning New Generation Computing 8 3 1990 225244 13 AC Kakas R Miller A simple declarative language describing narratives actions Journal Logic Programming 31 13 1997 157200 14 AC Kakas R Miller F Toni An argumentation framework reasoning actions change M Gelfond N Leone G Pfeifer Eds Proceedings Fifth International Conference Logic Programming Nonmonotonic Reasoning Lecture Notes Com puter Science vol 1730 Springer Berlin 1999 pp 7891 ET Mueller Artiﬁcial Intelligence 170 2006 10171029 1029 15 AC Kakas R Miller F Toni ERESA reasoning actions events observations Proceedings Eighth Interna tional Workshop NonMonotonic Reasoning 2000 16 G Neelakantan Kartha Soundness completeness theorems formalizations action R Bajcsy Ed Proceedings Thirteenth International Joint Conference Artiﬁcial Intelligence Morgan Kaufmann San Mateo CA 1993 pp 724729 17 RA Kowalski F Sadri The situation calculus event calculus compared M Bruynooghe Ed Logic Programming The 1994 International Symposium MIT Press Cambridge MA 1994 pp 539553 18 RA Kowalski F Sadri Reconciling event calculus situation calculus Journal Logic Programming 31 13 1997 3958 19 RA Kowalski MJ Sergot A logicbased calculus events New Generation Computing 4 1 1986 6795 20 J Kvarnström VITAL Visualization implementation temporal action logic Department Computer Information Science Linköping University Linköping Sweden 2001 21 J Kvarnström TALplanner extensions temporal action logic PhD thesis Department Computer Information Science Linköping University Linköping Sweden 2005 22 V Lifschitz Circumscription DM Gabbay CJ Hogger JA Robinson Eds Handbook Logic Artiﬁcial Intelligence Logic Programming vol 3 Nonmonotonic Reasoning Uncertain Reasoning Oxford University Press Oxford 1994 pp 298352 23 NC McCain Causality commonsense reasoning actions Technical Report CSTR9725 Department Computer Sciences Uni versity Texas Austin Austin TX 1997 24 J McCarthy Circumscriptiona form nonmonotonic reasoning Artiﬁcial Intelligence 13 12 1980 2739 25 J McCarthy PJ Hayes Some philosophical problems standpoint artiﬁcial intelligence B Meltzer D Michie Eds Machine Intelligence 4 Edinburgh University Press Edinburgh 1969 pp 463502 26 R Miller M Shanahan Some alternative formulations event calculus AC Kakas F Sadri Eds Computational Logic Logic Programming Beyond Essays Honour Robert A Kowalski Part II Lecture Notes Computer Science vol 2408 Springer Berlin 2002 pp 452490 27 ET Mueller Event calculus reasoning satisﬁability Journal Logic Computation 14 5 2004 703730 28 ET Mueller A tool satisﬁabilitybased commonsense reasoning event calculus V Barr Z Markov Eds Proceedings Seventeenth International Florida Artiﬁcial Intelligence Research Society Conference AAAI Press Menlo Park CA 2004 pp 147152 29 ET Mueller Commonsense Reasoning Morgan Kaufmann San Francisco CA 2006 30 EPD Pednault ADL Exploring middle ground STRIPS situation calculus RJ Brachman HJ Levesque R Reiter Eds Proceedings First International Conference Principles Knowledge Representation Reasoning Morgan Kaufmann San Mateo CA 1989 pp 324332 31 R Reiter The frame problem situation calculus A simple solution completeness result goal regression V Lifschitz Ed Artiﬁcial Intelligence Mathematical Theory Computation Papers Honor John McCarthy Academic Press San Diego CA 1991 pp 359380 32 R Reiter Proving properties states situation calculus Artiﬁcial Intelligence 64 2 1993 337351 33 R Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems MIT Press Cambridge MA 2001 34 E Sandewall Filter preferential entailment logic action continuous worlds NS Sridharan Ed Proceedings Eleventh International Joint Conference Artiﬁcial Intelligence Morgan Kaufmann San Mateo CA 1989 pp 894899 35 E Sandewall Features Fluents The Representation Knowledge Dynamical Systems vol I Oxford University Press Oxford 1994 36 M Shanahan Solving Frame Problem MIT Press Cambridge MA 1997 37 M Shanahan The event calculus explained MJ Wooldridge MM Veloso Eds Artiﬁcial Intelligence Today Recent Trends Developments Lecture Notes Computer Science vol 1600 Springer Berlin 1999 pp 409430 38 M Shanahan The ramiﬁcation problem event calculus Proceedings Sixteenth International Joint Conference Artiﬁcial Intelligence Morgan Kaufmann San Mateo CA 1999 pp 140146 39 M Shanahan An abductive event calculus planner Journal Logic Programming 44 13 2000 207240 40 M Thielscher An analysis systematic approaches reasoning actions change P Jorrand V Sgurev Eds Proceedings Sixth International Conference Artiﬁcial Intelligence Methodology Systems Applications World Scientiﬁc River Edge NJ 1994 pp 195204 41 M Thielscher From situation calculus ﬂuent calculus State update axioms solution inferential frame problem Artiﬁcial Intelli gence 111 1999 277299 42 M Thielscher The qualiﬁcation problem A solution problem anomalous models Artiﬁcial Intelligence 131 2001 137 43 M Thielscher Reasoning Robots The Art Science Programming Robotic Agents Springer Dordrecht 2005 44 K Van Belleghem M Denecker D De Schreye On relation situation calculus event calculus Journal Logic Program ming 31 13 1997 337