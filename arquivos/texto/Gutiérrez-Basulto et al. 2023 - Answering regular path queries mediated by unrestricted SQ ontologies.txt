Artiﬁcial Intelligence 314 2023 103808 Contents lists available ScienceDirect Artiﬁcial Intelligence journal homepage wwwelseviercomlocateartint Answering regular path queries mediated unrestricted SQ ontologies Víctor GutiérrezBasulto Filip Murlak c School Computer Science Informatics Cardiff University UK b Faculty Mathematics Natural Sciences Economics Computer Science University Hildesheim Germany c Faculty Mathematics Informatics Mechanics University Warsaw Poland Yazmín IbáñezGarcía Jean Christoph Jung b r t c l e n f o b s t r c t Article history Received 22 July 2021 Received revised form 11 October 2022 Accepted 16 October 2022 Available online 21 October 2022 Keywords Ontologymediated query answering Description logic Number restrictions Data complexity A prime application description logics ontologymediated query answering query language reaching far instance queries Here investigate task positive existential twoway regular path queries ontologies formulated expressive description logic SQu SQu denotes extension basic description logic ALC transitive roles S qualiﬁed number restrictions Q unrestrictedly applied nontransitive transitive roles u Notably usually forbidden expressive description logics As main contribution decidability ontologymediated query answering setting establish tight complexity bounds 2ExpTimecompleteness combined complexity coNP completeness data complexity Since lower bounds inherited fragment ALC concentrate providing upper bounds As main technical tools establish treelike countermodel property characterization query satisﬁed treelike interpretation Together results allow use automatabased approach query answering 2022 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 1 Introduction The use ontologies data management gained lot popularity research ﬁelds knowledge representation reasoning databases For instance ontologies successfully integrate access data 12 The main characteristic ontologybased data access OBDA paradigm data queried lens ontology comes beneﬁts On hand ontology enriches data domain knowledge resulting complete answers queries On hand ontology provide convenient vocabulary user formulating queries In context OBDA main reasoning problem ontologymediated query answering deﬁned follows input consists data A query ϕ ontology T task compute answers query data relative ontology In context data A assumed incomplete tuple answer ϕ A relative T ϕa entailed T A Corresponding author JC Jung fmurlakuwedupl F Murlak Email addresses gutierrezbasultovcardiffacuk V GutiérrezBasulto ibanezgarciaycardiffacuk Y IbáñezGarcía jungjunihildesheimde httpsdoiorg101016jartint2022103808 00043702 2022 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Depending application hand options ontology query language formalisms express ontologies queries respectively For typically uses databaseinspired query languages conjunctive navigational queries A popular choice description logics DLs family logic based knowledge representation languages 3 More precisely fragments ﬁrstorder logic restricted unary binary symbols Description logics attractive choice ontology languages offer good balance expressivity complexity Indeed provide logical basis web ontology language OWL 2 4 Ontologymediated query answering extensively investigated different combinations DL query lan guages resulting plethora complexity results algorithms One line research study expressive DLs main objective identify logics including features possible supporting decidable reason ing In particular considerable effort study query answering expressive DLs featuring transitive roles qualiﬁed number restrictions 58 Transitive roles needed model intrinsically transitive relations hasDescendant hasPart Qualiﬁed number restrictions express numerical properties concepts car parts wheels However aforementioned works application number restrictions transitive roles forbidden Remarkably reﬂected fact W3C ontology language OWL 2 forbids interaction 9 As consequence users able properly model knowledge number parts component piece OWL languages As concrete example consider ontology T consisting following statements 1 2 3 4 Heart cid3 1 hasPartMitralValve cid5 1 hasPartMitralValve Heart cid3 1 hasPartLeftAtrium cid5 1 hasPartLeftVentricle LeftVentricle cid5 LeftAtrium cid3 LeftVentricle cid3 1 hasPartMitralValve LeftAtrium cid3 1 hasPartMitralValve 5 Intuitively T models human heart exactly mitral valve 1 left atrium left ventricle 2 By 3 enforced distinct By 4 5 left ventricle left atrium mitral valve Notably axiom 1 applies nontrivial number restriction transitive role hasPart Obviously similar modelling issues arise different application areas instance modelling car wheels human ﬁngers This example demonstrates important application areas like medicine need logics supporting counting transitive relations However existing research shows diﬃcult design logics losing decidability Related Work section Motivated paper investigate ontologymediated query answering case ontology language supports application qualiﬁed number restrictions transitive roles We focus fundamental Boolean complete DL denote SQu letter S denotes extension basic Boolean complete DL ALC transitive roles letter Q indicates availability qualiﬁed number restrictions Throughout paper use subscript u unrestricted avoid confusion traditional DL nomenclature S Q appear DL interaction qualiﬁed number restrictions transitive roles forbidden As query language choose positive existential twoway regular path queries P2RPQs arguably expressive query languages generalizing languages conjunctive queries CQs 10 unions CQs regular path queries RPQs 11 conjunctive twoway regular path queries C2RPQs 12 RPQs C2RPQs P2RPQs instances navigational queries expressive power CQs tarski x returns scientiﬁc descendants express graph reachability For instance query ϕx advisorOf Tarski transitive closure advisorOf relation While unions CQs prime language ontologymediated query answering long time navigational queries recently gained considerable attention 13 16 Indeed motivated applications semantic web latest W3C standard SPARQL 11 includes property paths related regular expressions 11 Contributions structure paper The goal paper pinpoint computational complexity answering P2RPQs mediated SQu ontologies For reason study decision problem associated query answering query entailment takes input Boolean queries queries answer variables decides query entailed data ontology We investigate combined complexity data ontology query form input data complexity query ontology assumed ﬁxed 17 Our main results decidability tight complexity bounds entailment problem In particular entailment P2RPQs mediated SQu ontologies 2ExpTimecomplete combined complexity coNPcomplete data complexity 2 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Since lower bounds follow previous results sublogic ALC SQu 1819 concentrate establish ing upper bounds Our main technical contribution development automatabased approach query entailment roughly consists following steps 1 establish treelike countermodel property query ϕ entailed T A treelike countermodel witnessing 2 construct automaton AT A recognizing treelike models T A 3 construct automaton Aϕ recognizing treelike models ϕ Observe ﬁrst example ontology correctly enforces left atrium left ventricle mitral valve From technical perspective shows SQu enjoy tree model property As consequence Step 1 resort treelike models deﬁned terms tree decompositions The rationale approach query entailment reduces question treelike interpretation accepted AT A Aϕ languages recognized AT A Aϕ nonempty intersection To obtain automatabased decision procedure realize steps Section 2 provides necessary background deﬁnitions In Section 3 address Step 1 More precisely develop notion canonical tree decompositions intuitively tree decompositions tailored handle interaction transitivity number restrictions We novel unravelling operation SQu query entailed witness interpretation canonical tree decomposition bounded degree width In Section 4 develop foundations Step 3 In particular develop characterization query satisﬁed treelike interpretation Since P2RPQs local characterization based careful decomposition input query subqueries The query satisﬁed iff certain annotation treelike interpretation sets subqueries obtained way It worth mentioning characterization depend SQu independent Based results Sections 3 4 provide Section 5 automata constructions Steps 2 3 We work nondeterministic tree automata inﬁnite trees weak acceptance conditions In fact require existence inﬁnite run For automata intersection nonemptiness decided polynomial time 20 Since size automata construct bounded doubly exponentially size input data ontology query 2ExpTime upper bound combined complexity follows Based careful analysis constructed automata obtain coNP upper bound data complexity These bounds tight entailment positive existential queries mediated ALC ontologies 2ExpTimehard combined complexity 19 entailment instance queries mediated ALC ontologies coNPhard data complexity 18 In Section 6 discuss related work Section 7 conclude point directions future work 2 Preliminaries 21 The description logic SQu We consider vocabulary consisting countably inﬁnite disjoint sets concept names NC role names NR individual R transitive role names NI Further assume NR partitioned inﬁnite sets nontransitive role names Nnt names Nt R SQu concepts C D deﬁned grammar C D A C C cid5 D cid2 n r C A NC r NR n nonnegative integer given binary We shall use cid3 n r C abbreviation cid2 n1 r C standard abbreviations cid9 C cid10 D C cid5 D respectively Concepts form cid2 n r C cid3 n r C called atmost restrictions atleast restrictions respectively As usual DLs ontologies described TBoxes data described ABoxes An SQu TBox T ﬁnite set general concept inclusions CIs form C cid3 D C D SQu concepts An ABox A ﬁnite nonempty set concept role assertions form Aa ra b A NC r NR b NI denote indA set individual names occurring A Whenever confusion arise drop speciﬁcation logic SQu talk TBoxes instead SQu TBoxes The semantics SQu deﬁned usual terms interpretations I cid3I I cid3I I cid3I interpretation function maps A NC subset A domain I I cid3I cid3I r NI element I cid3I nonempty set called r NR subset Notice transitive role names required interpreted transitive relations convenient transitive closure I deﬁned setting R We interpretation I transitive working tree decompositions transitive relations We denote I cid3I cid3I I r I I Naturally entailment deﬁned relative transitive interpretations A NC r r Nnt r Nt R r I r I A I A I I 3 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 The interpretation complex concepts deﬁned taking I I DI cid3I D I D C cid5 DI C I cid2 d cid3I e C cid2 n r BI I d e r I n cid3 I M denotes cardinality set M An interpretation I model TBox T written I T C CIs C cid3 D T It model ABox A written I A indA cid3I ra b A A setting unique assumption individual names interpreted freely Aa A The ﬁrst conditions constitute standard assumption results carry iff b b indA setting I indA b r subinterpretation I written Icid14 I cid3Icid14 cid3I r NR For cid4 NC NR I cid4interpretation A restriction I signature cid4 maximal cid4interpretation Icid14 subinterpretation I domain cid3 The union I J I J interpretation cid3IJ cid3I cid3J IJ A A A NC r I A NC cid4 r NR cid4 The Icid14 I The restriction I domain cid3 maximal An interpretation Icid14 A NC r NR I r IJ r Icid14 A Icid14 r I b r I A I r A J J I I I I I D I 22 Normal form Throughout paper use convenient TBox normal form A concept inclusion normal form takes following shapes cid5i Ai cid3 cid10 j B j A cid3 cid2 n r B A cid3 cid3 n r B A Ai NC cid9 B NC B j NC r NR Note cid9 cid10 cid3 n r B treated parts syntax abbreviations A TBox T normal form CIs normal form atmost restrictions involving transitive role names propagated CI form A cid3 cid2 n r B A cid16 cid9 r Nt R T contains CIs A cid3 cid2 0 r A cid14 cid9 cid3 A cid10 A cid14 cid14 Note equivalent requiring T contains A cid3 cid2 0 r A concept A normal form Note A cid9 corresponding CI cid9 cid3 cid2 0 r cid9 tautology explains required normal form Every TBox normalized polynomial time introducing fresh concept names complex concepts axiomatizing accordingly To precise let TBox T cid14 conservative extension TBox T model T cid14 model T transitive model T expanded model T cid14 Proposition 1 For SQu TBox T compute polynomial time SQu TBox T cid14 conservative extension T normal form T cid14 Proof Let introduce fresh concept XC concept C occurs T additionally fresh concept Xcid2n1 r C concept form cid2 n r C occurs T Let T cid14 set following concept inclusions X cid3 cid9 cid3 Xcid9 X A cid3 A A cid3 X A concept names A T XCcid5D cid3 XC XCcid5D cid3 X D XC cid5 X D cid3 XCcid5D C cid5 D occur T XC cid5 XC cid3 cid9 cid3 XC cid10 XC C occur T cid9 cid3 Xcid3n r C cid10 Xcid2n1 r C Xcid3n r C cid3 cid2 n r XC Xcid2n1 r C cid3 cid3 n 1 r XC cid2 n r C occur T Xcid3n r C cid3 cid2 0 r Xcid2n1 r C cid2 n r C r Nt XC cid3 X D C cid3 D T R occur T Observe T cid14 restrictions involving transitive role names propagated Clearly T cid14 It routine verify T cid14 normal form concept inclusions normal form penultimate bullet ensures computed T polynomial time conservative extension T cid2 4 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 23 Ontologymediated query entailment We introduce query language We concentrate Boolean queries queries answer variables The extension queries answer variables standard example 6 A positive existential twoway regular path query P2RPQ ﬁrstorder formula ϕ x ψx ψx constructed atoms form Et t names NI E path expression deﬁned grammar cid14 t t cid14 variables x individual E E cid14 r r A E E E cid14 E E cid14 r NR A NC Thus E essentially regular expression inﬁnite alphabet r r NC The set individual names ϕ denoted indϕ r NR A A The semantics P2RPQs deﬁned matches Let ﬁx P2RPQ ϕ x ψx interpretation I A match ϕ I function π x indϕ cid3I π indϕ I π ψx standard semantics ﬁrstorder logic extended rule atoms form Et t cid14 More formally deﬁne I π ψ1 ψ2 iff I π ψ1 I π ψ2 I π ψ1 ψ2 iff I π ψ1 I π ψ2 E I cid14 iff π t π t I π Et t cid14 E I deﬁned inductively follows r E I e d d e r I E I I AI d d d A I E1 E2I E I 1 E I 2 E1 E2I E I 1 E I 2 We write I ϕ match ϕ I A query ϕ entailed ABox A relative TBox T denoted T A ϕ I ϕ model I T A I I That entailment deﬁned usual relative interpretations respect transitivity role names Now ready deﬁne reasoning problem study paper ontologymediated query entail ment Input ABox A SQu TBox T P2RPQ ϕ Question Is ϕ entailed A relative T We shall assume input TBox normal form This possible replacing TBox conservative extension affect entailment queries original concept role names Complexity bounds af fected normalized conservative extension given SQu TBox computed polynomial time Proposition 1 It standard loss generality assume input queries use individual names 21 In nutshell eliminate individual query replacing uniformly fresh variable xa adding query conjunct Aaxa fresh concept Aa mentioned ABox add assertion Aaa ABox The modiﬁed query entailed modiﬁed ABox original query entailed original ABox 21 We stress spite input query individual names decision procedure manipulate queries individual names intermediate stages We shall explore combined data complexity ontologymediated query entailment problem 17 For complexity measured terms sizes TBox ABox query measured size ABox We assume natural binary encoding input We write cid22Acid22 cid22T cid22 cid22ϕcid22 sizes representations ABox A TBox T query ϕ respectively 5 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 LeftAtrium Heart MitralValve B A LeftVentricle Diamond b 3clique Fig 1 Structures enforced SQu TBoxes Example 1 B B 24 Tree decompositions A tree preﬁxclosed subset T N 0 A node w T child v T v parent w w v N We write childrenv set children v The degree v childrenv We node ε corresponding sequence root T A subset S T connected nodes S connected path nodes S possibly going tree Every nonempty connected subset S T seen tree unique root element S closest root T We use standard notion tree decompositions Observe essential allow interpretations interpret transitive role names transitive relations transitive relations dense sense admit tree decomposition small width transitive relation induced relation small width Formally tree decomposition T interpretation I pair T I T tree I function assigns cid4v interpretation Iv cid3v Iv v T cid4 D1 I D2 d cid3I Iv vT set v T d cid3v connected T We blur distinction node v T associated interpretation Iv term bag The childrenv Because v T d cid3v nonempty connected width T supvT d cid3I unique bag v closest root ε d cid3v We d fresh bag write F v set elements fresh v Note F ε cid3ε cid3v 1 degree T supvT In work additionally assume D3 u v T restrictions Iu Iv domain cid3u cid3v signature cid4u cid4v coincide This loss generality replace Iv restriction I domain cid3v signature cid4v 3 Treelike countermodel property In section treelike countermodel property SQu query entailed ABox A relative TBox T countermodel tree decomposition bounded width degree Let ﬁrst demonstrate SQu enjoy tree model property Example 1 Reconsider TBox T deﬁned introduction The number restrictions ensure model T satisfying Heart contains structure Fig 1a clearly treeshaped In fact SQu enforce clique Consider TBox T cid14 A cid3 cid3 3 r B B cid3 cid3 3 r B cid9 cid3 cid2 3 r B A cid5 B cid3 R transitive role In model T cid14 r Nt element satisfying A root structure depicted Fig 1b elements satisfying B form rclique redges directions elements satisfying B Observe number 3 T cid14 replaced number n large cliques enforced Consequently best hope treelike countermodel property trees tree decompositions Intuitively fragments countermodel unravelled like clique Example 1 constitute bags Note Example 1 shows bags need large exponentially large binary representation numbers For automatabased decision procedure yield optimal upper bounds useful consider canonical decompositions deﬁne 6 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 31 Canonical tree decompositions Processing generic tree decompositions costly For instance verify represented interpretation model ABox automaton needs maintain set assertions witnessed current subtree leads exponential data complexity Similarly verify atmost restriction atleast restriction single element automaton needs scan unbounded fragments tree decomposition relevant neighbours Canonical tree decompositions designed tasks easier I d e r Let ﬁx ABox A SQu TBox T normal form In canonical tree decompositions elements accom directly relevant rsuccessor e B For interpretation I r d relevant rsuccessors d I set contains d Example 1 interpretation I shown I r d d e1 e2 e3 panied certain key neighbours For interpretation I r Nt d cid3I I element d cid3I closed directly relevant rsuccessors For instance TBox T cid14 Fig 1b A The following immediate consequence deﬁnition R e cid3I concept inclusion A cid3 cid2 n r B T d A r Nt I e1 e2 e3 e1 e2 e3 directly relevant rsuccessors d rel I d B R set rel I I Lemma 1 For r Nt R d cid3I I I r e rel e rel r d rel I r d Crucially models T sets relevant rsuccessors bounded size Lemma 2 If I T r Nt R d cid3I r d 2polycid22T cid22 I rel Proof Let arrange elements rel exhaustively Choose leaf e add children elements f rel T This way elements rel given I r d tree T follows Let d root T apply following I r d directly relevant rsuccessors e I r d 2NC I r d ﬁnd place T Now consider labelling cid8 rel cid5 cid8e B A cid3 cid2 n r B T e A cid6 I Let f child e By construction cid8e cid8 f f cid8e cid2 cid8 f f leaf T inner node T Because cid8 uses concept names occurring T depth T bounded linearly cid22T cid22 Because I T number directly relevant rsuccessors given element bounded exponentially cid22T cid22 recall numbers atmost restrictions represented binary Hence branching T exponential cid22T cid22 Overall size T 2polycid22T cid22 cid2 Canonical tree decompositions formalized Deﬁnition 1 Intuitively nonroot bag v keeps track interpretation concept names single role rv Condition C1 ensures ABox assertions witnessed root bag Conditions C2C4 express T respected locally C2 ensures elements satisfy concept inclusions mention role names C3 ensures suitable atmost restrictions locally satisﬁed fresh elements C4 atleast restrictions Conditions C2 C4 imply corre sponding concept inclusions globally satisﬁed represented interpretation For C3 longer true distant bags add successors possibly violating atmost restrictions This remedied condition C5 restricts ways neighbouring bags overlap represent different role names nontransitive role share single element represent transitive role share element accompanied relevant successors Deﬁnition 1 A tree decomposition T T I T Acanonical cid4ε NC NR w T ε exists r w NR cid4w NC r w v T C1 Iε A C2 Iv satisﬁes CIs T forms cid5i Ai cid3 cid10 j B j A cid3 cid2 n r B r Nt R C3 concept inclusion A cid3 cid2 n r B T r Nnt R d F v A cid4 rsuccessors satisfying B Iv wchildrenv Iw C4 concept inclusion A cid3 cid3 n r B T d F v A element d n rsuccessors satisfying B Iv Iw C5 child w v exists d F v Iv element d n Iv exists child w v 7 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 r w Nt r w Nnt R r w cid4v cid3v cid3w rel R r w cid4v cid3v cid3w d Iv r w d rel Iw r w d Because T normal form sets relevant successors faithfully represented bag T Acanonical tree decomposition Lemma 3 Let T T I T Acanonical tree decomposition J Then rel Nt R cid4v Iv J r d v T d cid3v r r d rel Proof As ﬁrst step claim lemma note C5 follows Lemma 1 u v T d cid3u cid3v r Nt R cid4u cid4v 6 rel Iu r d rel Iv r d Next element f cid3J J e f r J f rel directly relevant rsuccessor element e cid3J Iu r e u T e cid3u r cid4u The proof induction length shortest rpath connecting e f J Iu Iv v T r cid4v follows immediately f rel If e f r r e u T e cid3u Suppose claim holds e f connected rpath J length k Take e f connected rpath J length k 1 The ﬁrst element path rsuccessor e e Iv r cid4v By deﬁnition directly connected f path length k Take v T e e J relevant rsuccessors exists concept inclusion A cid3 cid2 n r B T e A Consequently Iv e A cid14 cid14 A e directly relevant rsuccessor e Iv consequently e Consequently f rel Iv Because atmost restrictions involving transitive roles propagated conclude C2 e J By inductive hypothesis f rel I v Hence e f r Iu r e u T e cid3u r cid4u This completes proof claim This means f cid14 f r Iv r e By 6 f rel Iv J r d v T d cid3v r Nt r d rel R Iv J r d rel r d holds Iv restriction J signature cid4v domain cid3v For converse inclusion suﬃces Iv e rel r e By Lemma 1 rel directly relevant rsuccessor e I v follows f f directly relevant rsuccessor e J f rel Iv r d By claim f rel Iv r e By 6 f rel Iv r d cid2 cid4v The inclusion rel Iv r d f cid3J Let rel Iv r e rel cid14 A Iv r e f B cid14 r J J cid14 cid14 Using Lemma 3 easy respecting T locally canonical tree decomposition suﬃcient ensure decomposed interpretation model T Lemma 4 If J T Acanonical tree decomposition J T A Next CI T holds J Proof Let T T I canonical tree decomposition J By C1 Iε A Because Iε J J J A hold Iv v T For atleast restrictions necessary witnesses element d ensured condition C4 applied node v d F v It remains deal atmost restrictions CIs form cid5i Ai cid3 cid10 j B j hold J Take concept inclusion A cid3 cid2 n r B T involving nontransitive role r d F v A bag v It follows C5 rsuccessors d present v child bags Consequently condition C3 J ensures d n rsuccessors J belonging B holds J J Finally concept inclusion A cid3 cid2 n r B T involving transitive role r d cid3v A bag v r cid4v By deﬁnition rsuccessors d J rel Iv r d number bounded n owing C2 cid2 J r d rel belonging B included rel J J J r d By Lemma 3 32 Treelike countermodel property We ready establish treelike countermodel property We employ reﬁned variant unravelling ensure bounded treewidth model canonicity associated treedecomposition instrumental construction automaton verifying ABox TBox Note decomposition represent countermodel interpretation J transitive closure J countermodel This job query automaton harder forcing compute transitive closure ﬂy Example 2 Consider ABox A Aa TBox T A cid3 cid3 1 r B B cid3 cid3 1 r C C cid3 cid3 1 r D cid9 cid3 cid2 1 r D B cid3 cid3 1 s A 8 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 A C A C A C D D D B B B A A R3 B A R2 A R1 B B R3 B D D D D C A C D B A model b An unravelling c A canonical tree decomposition Fig 2 A model TBox Example 2 unravelling canonical decomposition r transitive role s nontransitive role Let I instance shown Fig 2a solid dashed lines represent redges sedges respectively unique element satisfying A individual It straightforward check I T A Observe unique element d satisfying D directly relevant rsuccessor element I e cid3I I r e d e rel Fig 2b shows unravelling J I We shall explain later obtained For note unravelling operation preserve neighbourhoods instance elements satisfying C sneighbours satisfying A Indeed neighbours explicitly required TBox copied Note J transitive transitive role r interpreted transitive relation This unravelling operation constructing directly tree decomposition bounded bag size edges elements falling inside bag included Fig 2c shows canonical tree decomposition J degree 2 width 2 underlying tree binary bags size 3 Bags depicted disjoint elements connected dotted grey line identiﬁed For example root bag shares elements child bag Note elements satisfying A C meet bag explains edges J originals I connected sedge redge Theorem 1 Let A ABox T SQu TBox normal form ϕ P2RPQ T A cid16 ϕ Then exists interpretation J T Acanonical tree decomposition width degree cid22Acid22 2polycid22T cid22 J T A J cid16 ϕ Moreover additionally guarantee nonroot bag tree decomposition size degree bounded 2polycid22T cid22 Proof Let ﬁx interpretation I I T A I cid16 ϕ To build canonical tree decomposition T unravel I We start interpretation ABox relevant successors apply extension rules R1R3 R1 performs unravelling nontransitive role names R2 takes care change roles transitive R3 realizes unravelling transitive role names Each application rule add new bag holding interpretation obtained restricting I replacing elements d fresh copies d In case shall d original d The rules ensure mapping element original gives homomorphism constructed interpretation I We shall illustrate construction ABox A TBox T instance I described Example 2 cid14 cid14 For root bag restriction I domain cid3ε indA cid7 cid7 rNt R aindA rel I r I In example indA rel r d resulting root bag shown Fig 2c note bag unrestricted signature represents roles Then use following rules R1R3 ad inﬁnitum applying rule previously added bag v fresh element d v role r exactly rule ﬁre 9 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 add bag containing rsuccessors d needed satisfy atleast restrictions enforced TBox Fig 2c R1 For r Nnt R d cid14 F v let d cid3I original d cid14 cid14 Iv Pick minimal set W cid3I rsuccessors d I T d A d n different rsuccessors B cid4w NC r domain cid3w d W W 0 d replaced d copy e If Irdcid14 cid3 Iv add Irdcid14 child bag v cid14 cid14 possibly d d let W 0 set originals containing d W 0 A cid3 cid3 n r B I W Let Irdcid14 restriction I signature e W W 0 replaced fresh cid14 R2 For r Nt R cid14 F v let d cid3I I r d A cid3 cid3 n r B T d A cid4v d rel Irdcid14 restriction I signature cid4w NC r domain cid3w I f r e d replaced fresh copy f eW rel Irdcid14 cid3 Iv add Irdcid14 child bag v Pick minimal set W cid3I original d I d n different rsuccessors B cid4 containing I W Let I cid14 r e d replaced d eW rel I r d included Irdcid14 If Because d W copy rel cid4 cid14 cid14 R3 For r Nt R copy f cid14 cid4v proceed R2 taking restriction I replace element f rel cid4 Iv element f I r e rel eW rel I r d fresh copy f cid14 I r d cid14 Clearly T tree decomposition Conditions D1D2 straightforward Condition D3 holds Iv isomorphic restriction I Let T canonical The signatures cid4v clearly satisfy required conditions Condition C1 holds Iε contains restriction I indA Condition C2 holds Iv isomorphic restriction I present v unique child w v d Let check C3 Take concept inclusion A cid3 cid2 n r B T involving nontransitive role r d cid14 Iv bag v Because r nontransitive role rules applied node v r F v A cid14 cid3w r cid4w created rule R1 successors d cid14 Iv Iw Hence work Iv Iw We claim originals different rsuccessors d cid14 cid3w cid14 cid3v e cid14 different Let e cid14 cid3w Then follows claim follows Iv Iw isomorphic restrictions I Assume e R1 e W 0 f d W W 0 Hence e cid16 f e f d But case R1 ensures cid14 cid14 d cid14 f completes proof claim Now Iv Iw isomorphic restrictions I follows e I Iv Iw rsuccessors d belonging B d A By originals rsuccessors d Iv Iw bounded number rsuccessors d belonging claim number rsuccessors d B cid14 cid3v cid3w rsuccessors d n I T cid14 f cid14 cid3v f let e f cid3I originals If e belonging B belonging B cid14 f cid14 f I I cid14 cid14 Condition C4 holds necessary witnesses provided rule R1 involved role nontransitive rules R2 R3 transitive Condition C5 easy verify based R1R3 r d 2polycid22T cid22 r Nt I By Lemma 2 rel R d cid3I It follows cid3ε indA N1 2polycid22T cid22 N1 number transitive role names occur T Examining rules R1R3 w T ε cid3w 1 T N2 2polycid22T cid22 N2 maximal number atleast restrictions T That cid3ε cid22Acid22 2polycid22T cid22 cid3w 2polycid22T cid22 w cid16 ε The bounds hold degrees ε w bag N3 child bags element domain N3 number role names occur T Iv By Lemma 4 J T A The function mapping d cid14 cid3J original d cid3I gives homo Let J cid4 vT morphism J I consequently J I It follows J cid16 ϕ cid2 This concludes technical development section The treelike countermodel property Theorem 1 shows search countermodels restrict attention treelike models T A admit canonical tree decompositions In Section 5 construct tree automaton works appropriately encoded tree decompositions accepts input iff T Acanonical The forthcoming Section 4 lays foundations second ingredient decision procedure checking interpretation represented tree decomposition falsiﬁes query corresponding automaton constructed Section 5 4 Matching queries tree decompositions The goal section characterize query satisﬁed interpretation J given tree decomposition T I way lends tree automata implementation Our approach general works arbitrary tree decompositions particular rely canonicity tree decomposition We believe independent 10 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 More speciﬁcally aim use nondeterministic tree automata inﬁnite trees precise deﬁnition given Section 5 Since automata inherently local face challenge dealing nonlocality P2RPQs Let illustrate simple example Consider query q x y Ax r x y B y J J b B Informally q match interpretation J given tree decomposition T I elements b A rpath b Such path typically use elements different bags T I tree decomposition Moreover b arbitrarily far away tree decomposition These points diﬃcult nondeterministic tree automata check existence paths We resort following strategy treating input query ϕ shall consider splits ϕ pieces Intuitively split query ϕ set queries P ϕ match queries P local match match single bag Thus idea annotate nodes tree decompositions sets queries local matches analyze pieces It case query ϕ entailed T I iff valid annotation contain ϕ Let formalize idea To ease technical development section simplifying assumptions First focus conjunctive twoway regular path queries C2RPQs P2RPQs form x E1t1 t cid14 1 Entn t cid14 n P2RPQs use disjunction In follows denote C2RPQs letters p q Moreover skip existential quantiﬁers view variables C2RPQ q denoted varq implicitly existentially quantiﬁed treat C2RPQ set atoms occur Establishing characterization C2RPQs suﬃcient P2RPQ equivalent disjunction C2RPQs Section 5 Second work representation C2RPQs based nondeterministic ﬁnite automata NFA Under repre cid14 B NFA We assume NFA sentation C2RPQ conjunction atoms form Bt t ﬁnite alphabet cid9 cid9 r r r NR A A NC use single initial state single ﬁnal state Given NFA B states s s NFA obtained B making s initial state s NFAbased representation letting I π Bt t B denote Bsscid14 unique ﬁnal state We adjust deﬁnition match cid14 iff n N exist ν1 νn cid9 a0 cid3I cid14 cid14 a0 π t π t word ν1 νn accepted B 1 n νi A ai1 ai A cid14 I r I νi r ai1 ai r I νi r ai ai1 As C2RPQ p write I p match p I For set P C2RPQs write I P I p p P We formally deﬁne mean split Let ﬁx domain cid3 We C2RPQ p cid3instantiation C2RPQ p obtained p consistently replacing arbitrary number existentially quantiﬁed variables p elements cid3 A cid3subdivision atom Bt t cid14 conjunction form cid14 Bs0s1 t0 t1 Bs1s2 t1 t2 Bsnsn1 tn tn1 n N s0 s1 sn1 states B s0 initial state sn1 ﬁnal state t1 t2 tn cid3 t t0 cid14 tn1 Then p t cid3subdivision p obtained p replacing atoms cid3subdivisions cid14 Deﬁnition 2 Let p C2RPQ let P set C2RPQs obtained partitioning set atoms cid3subdivision cid3instantiation p Then P called cid3split p varp1 varp2 different p1 p2 P p P single ground atom cid3 contains ground atoms cid3 We write clp cid3 union cid3splits p We illustrate notion following example 11 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 0 A 1 B C 2 r 3 I1 A d b B I2 e c C NFA B b Interpretation I I1 I2 Fig 3 The automaton interpretation Example 3 Example 3 Consider NFA B shown Fig 3a C2RPQ q B02x y B11 y x B13 y z C respectively Consequently q Note B02 B11 B13 correspond path expressions A r checks elements x y z satisfying A B C respectively x y lie rcycle z rreachable y The function π mapping x y b z c match q interpretation I shown Fig 3b Let cid3 b d Then queries B r r q1 B02x b B11b x B13b z q2 B02d b B11b d B13b z cid3instantiations q second matched I Moreover query ˆq1 B01x d B12d b B11b x B13b z cid3subdivision q1 obtained replacing atom B02x b subdivision B01x d B12d b B01 B12 correspond path expressions A r B respectively It veriﬁed sets r cid2 cid2 cid3 B01x d B11b x B13b z B12d b cid3 B01x d B11b x B13b z B12d b P cid14 P cid14 partitioned P 1 cid3splits q Note second point Deﬁnition 2 ground atom B12d b occur single atom split ﬁrst point atoms share variable end element split Note I1 P 1 I2 P 2 P 2 P I1 I2 indicated Fig 3b We invite reader look intuition splits provided mind view I1 I2 neighbouring bags tree decomposition Then P match Ii 1 2 induces match q union I1 I2 We Lemma 5 2 possible ﬁnd cid3I1 cid3I2 split query satisﬁed I1 I2 cid3 B01x d B11b x cid3 B13b z B12d b cid2 cid2 In following lemma collect useful properties splits Lemma 5 Let p C2RPQ 1 Let I interpretation I P cid3I 2 Let I1 I2 interpretations I1 I2 p Then exists cid3I1 cid3I2 split P 1 P 2 p I1 P 1 split P p Then I p 3 Each cid3split query clp cid3 subset clp cid3 4 If cid3 ﬁnite p n atoms automaton m states q clp cid3 2n atoms I2 P 2 clp cid3 6 m2 cid32n Let comment claims Lemma 5 proof Item 1 makes precise intuition splits discussed beginning section match split p induces match p correctness characterization relies Item 2 states split matched p way compatible given decomposition interpretation completeness characterization Item 3 states clp cid3 closed taking splits needed completeness proof Finally 4 provides upper bounds 12 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 cardinality clp cid3 sizes queries relevant characterization matter establishing precise complexity upper bounds Section 5 The proof lemma given straightforward The reader prefer skip ﬁrst lemma prove correctness completeness characterization Lemma 6 instantiation p claim follows Proof 1 If p cid3I cid3I subdivision p cid14 cid3I cid14 split p partition cid3I 2 Let π match p I1 I2 Let p cid14 I p cid14cid14 I p cid14 subdivision cid3I instantiation p I p I p By semantics NFAbased C2RPQs p cid14 Finally P partition p cid14cid14 I P I p cid14cid14 Because cid14cid14 cid14 I2 π Bt t instantiation obtained p replacing x varp satisfying π x cid3I1 cid3I2 π x We shall construct cid3I1 cid3I2 subdivision cid8p p cid14 cid8p cid14 cid14 Based cid8p deﬁne desired cid3I1 cid3I2 split P 1 P 2 p letting P contain I1 π Bt t ground atoms cid3I1 cid3I2 satisﬁed Ii conjunction qi remaining atoms satisﬁed Ii match π note varq1 varq2 π x cid3I1 cid3I2 x varq Let construct cid8p Consider atom Bt t initial ﬁnal states respectively B Because cid14 cid14 states s s0 s1 sn s I1 I2 π Bt t automaton B 1 n following conditions hold si1 νi si transition B I1I2 Let b νi A ai1 ai A 0 i0 i1 i2 ik ik1 n cid14 p assume s s cid14 exist ν1 ν2 νn cid9 elements π t a0 a1 π t I1I2 c νi r ai1 ai r atom Bt t I1I2 d νi r ai ai1 r cid14 ai cid3I1 cid3I2 i1 i2 ik ai cid3I1 cid3I2 0 i1 i2 ik n We ensure desired property cid8p replacing Bt t cid14 subdivision Bssi1 t ai1 Bsi1 si2 ai1 ai2 Bsik scid14 aik t cid14 Indeed j 0 1 k ai j 1 ai j 2 ai j11 cid3Icid8 cid3I1 cid3I2 cid8 1 2 Consequently ditions ad hold j j 1 j1 1 I1 I2 replaced Icid8 witnessing jth atom subdivision Bt t cid14 holds Icid8 match π 3 Clearly cid3instantiation cid3instantiation p cid3instantiation p Similarly cid3subdivision cid3 cid14 P subdivision p cid3subdivision p Consequently P cid3split p P cid3split p cid14 clp cid3 claim follows cid9 cid14 P cid3split p P p P p P cid14 cid14 cid9 cid10 cid10 cid14 4 It diﬃcult clp cid3 contained set queries obtained p replacing atom Bt1 t2 following assuming s1 s2 initial ﬁnal states respectively B 2s2 d2 t2 d2 cid3 b c Bs1s cid14 t1 d1 Bs state s 2s2 d2 t2 2 B e Bs cid14 2 B Consequently query q clp cid3 2n atoms clp cid3 d1 d2 cid3 states s 2 2 B cid3 2 B2 cid32n 6 m2 cid32n cid2 t1 d1 d1 cid3 state s d1 d2 d1 d2 cid3 states s cid14 1 B d Bs cid14 2 B f Bs1s cid14 1 s cid14 1 s cid14 1s cid14 2 cid14 1 cid14 1 cid14 cid14 Recall goal characterize C2RPQ q match treelike interpretation represented tree decomposition purpose want annotate nodes tree decomposition relevant queries locally match ask annotation avoids q Here query relevant element split q We formal deﬁnition annotations Since need single C2RPQs unions disjunctions C2RPQs directly sets C2RPQs cid4 Deﬁnition 3 Let Q set C2RPQs let clQ cid3 sition T I mapping cid11 assigns v T set cid11v clQ cid3v v T qQ clq cid3 set cid3 A Q annotation tree decompo cid2 cid3 p clQ cid3v Iv p A1 A2 cid3v split p clQ cid3v subset cid11v p cid11v A3 neighbour child parent w v cid11v cid11w clQ cid3v cid3w cid11v clQ cid3v cid3w Condition A1 states queries satisﬁed bag Iv contained cid11v Condition A2 responsible piecing queries splits cid11v Finally condition A3 synchronizes neighbouring bags intuitively says relevant query match neighbouring bag w fact known bag v vice versa In particular means valid annotation cid11v agree set Boolean queries The main result section Theorem 2 provides announced characterization basis developing tree automata accept tree decomposition iff represented interpretation countermodel queries Q 13 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Theorem 2 Let Q set C2RPQs individual names T I tree decomposition J Then J cid16 T I admits Q annotation cid11 Q cid4 vT cid11v cid11 qQ q iff For proof theorem let ﬁx interpretation J arbitrary necessarily canonical tree composition T I thereof set Q C2RPQs Because mapping cid11v clQ cid3v v T Q annotation T I pointwise intersection arbitrary family Q annotations T I Q annotation T I exists unique pointwise minimal Q annotation cid11Q T I Intuitively minimal annotation cid11Q assigns node v queries clQ cid3v match J Lemma 6 For v T p clQ cid3v J p p cid11Q v Based Lemma 6 fact Q clQ cid3 straightforward prove theorem Suppose ﬁrst T I vT cid11Q v qQ q Conversely suppose admits Q annotation cid11 Q Thus query Q contained cid11Q v v T Lemma 6 implies J cid16 J cid16 vT cid11v Since cid11Q pointwise contained cid11 satisﬁes Q qQ q Lemma 6 yields q cid11Q v q Q v T cid11Q witnesses Q vT cid11Q v cid4 cid11 cid11 cid4 cid4 We conclude section missing proof Lemma 6 Proof Let begin righttoleft implication It straightforward cid11Q obtained limit following process v start cid11Q v repeat following steps ad inﬁnitum p clQ cid3v Iv p cid2 cid3 v neighbour w v p cid11Q w clQ cid3v cid3w add p cid11Q v v p clQ cid3v admits cid3v split queries cid11Q v add p cid11Q v By straightforward induction number steps taken p cid11Q v added cid11Q v J p Lemma 5 1 For converse rely cid11Q Q annotation minimality A support p T I Iu p Because match p relies ﬁnite number nodes edges J connected set V T induces ﬁnite support p T I Hence proceed induction size support p The base case p clQ cid3v Iu p u T By A1 p cid11Q u Because bags containing given uV cid4 set cid3 form connected subtree T A3 p cid11Q v cid4 For inductive step m 1 assume claim holds v queries clQ cid3v admitting support size m 1 Take v T p clQ cid3v support V size m We claim exists node v 1 V p clQ cid3v1 Let assume case proceed Because V connected contains elements neighbour v 2 v 1 belongs V Removing edge v 1 v 2 induces partition V nonempty connected sets V 1 V 2 v V V m 1 2 Let Iu 1 2 Then I1 I2 p Lemma 5 2 yields cid3I1 cid3I2 split P 1 P 2 p Ii P Ii 1 2 It follows V support query P 1 2 Consequently query P 1 P 2 admits support size m 1 Moreover T I tree decomposition cid3I1 cid3I2 cid3v1 means P 1 P 2 cid3v1 split p By Lemma 5 3 follows P 1 P 2 clQ cid3v1 By induction hypothesis P 1 P 2 cid11Q v 1 By A2 p cid11Q v 1 Like base case follows p cid11Q v uV It remains prove claim Because V connected subset tree T tree Let v 1 node V unique simple path v shortest v root V leaves In order p clQ cid3v1 suﬃces indp cid3v1 Let d indp Then d cid3v cid3u u V individual p occur node support p Because connected set nodes containing v u contain v 1 conclude d cid3v1 This completes proof claim lemma cid2 5 Query entailment automata We shall exploit main results previous sections order establish optimal complexity upper bounds To approach let ﬁx ABox A SQu TBox T normal form P2RPQ ϕ By Theorem 1 ϕ entailed A relative T iff exists T Acanonical tree decomposition width degree cid22Acid22 2polycid22T cid22 representing interpretation J J cid16 ϕ We follow automatabased approach sense effectively construct nondeterministic tree automaton recognizing tree decompositions reduce query entailment emptiness tree automata More precisely construct tree automaton A takes input tree decompositions width degree speciﬁed veriﬁes following conditions 14 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 1 tree decomposition input T Acanonical 2 ϕ satisﬁed transitive closure J interpretation J represented tree decomposition input By Theorem 1 case A accepts input iff T A cid16 ϕ provides promised reduction query entailment nonemptiness problem underlying automata model We split construction A steps First Lemma 7 construct automaton recognizing T A canonical tree decompositions recall Lemma 4 transitive closures represented interpretations models T A Then Lemma 8 construct automaton recognizing tree decompositions interpretations transitive closures satisfy ϕ In construction automaton rely characterization query matches tree decompositions established Theorem 2 essentially automaton guess Q annotation states Finally product automata obtain automaton A satisfying items 1 2 In order obtain optimal bounds ensure involved automata right size constructed required time We analyze general algorithm terms combined complexity Theorem 3 terms data complexity Theorem 4 While described approach relatively simple development complicated certain mismatch capabilities tree automata nature tree decompositions On hand input alphabet set allowed node labels tree automaton ﬁnite On hand boundedwidth tree decomposition inﬁnite interpretation inﬁnitely different node labels tree decomposition encompass domain interpretation Hence tree automata run directly tree decompositions This recurring problem working tree automata process tree decompositions standard solution problem instance 22 encode tree decompositions reusing elements according certain policy described We ﬁrst introduce necessary notions tree automata A kary cid9labelled tree pair T τ T tree nodes k successors τ T cid9 assigns letter alphabet cid9 node A non deterministic tree automaton NTA kary trees tuple A Q cid9 I cid13 Q ﬁnite set states cid9 ﬁnite alphabet I Q set initial states cid13 ikQ cid9 Q set transitions A run r kary cid9labelled tree T τ Q labelled tree T r rε I x T successors x1 xm transition rx τ x rx1 rxm cid13 We A recognizes set cid9labelled trees admit run This corresponds weak parity condition states rank 0 For automata language intersection implemented simply product construction emptiness tested polynomial time 20 cid4 We announced encoding tree decompositions bounded width ﬁnite alphabet Intuitively different elements tree decomposition represented element encoding occur bag neighbouring bags Then element different nodes u v encoding represents actual element nodes iff present nodes unique shortest path u v To formalize intuition let N indA bound bag size We shall use ﬁxed domain cid3N cid3N 2N 2 indA cid3N Let cid4C cid4t R cid4nt R sets concept names transitive role names nontransitive R The automatons alphabet set cid9N pairs cid4 J role names T A let cid4R cid4t cid4nt R cid4 cid4C cid4R J cid4interpretation cid3J cid3N Note J ﬁnitely represented cid9N 2polyNcid22T cid22 Let T τ cid9N labelled tree We use cid4v Jv refer components label τ v τ v cid4v Jv Given element d cid3N v w T dconnected iff d cid3Ju u unique shortest path v w In case d cid3Jv use vd denote set w dconnected v We T τ Aconsistent indA cid3Jε An Aconsistent cid9N labelled tree T τ represents tree decomposition T I I assigns node v T cid4v interpretation Iv cid6 d vd d cid3Jv d vd d A Jv cid6 cid5 cid3v Iv A Iv r cid5 cid5 d vd e ve d e r cid6 Jv concept names A role names r occurring T A let IT τ Iw underlying interpretation Modulo harmless bijection assume εa indA Note εa welldeﬁned A consistency Conversely given interpretation I tree decomposition T I I width degree N construct Aconsistent cid9N labelled tree T τ IT τ isomorphic I 22 As encoding decoding preserves degree suﬃces consider Nary trees wT cid4 15 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Lemma 7 Given A T N indA compute nondeterministic tree automaton recognizing set encodings T Acanonical tree decompositions width degree N time O cid9 2polyNcid22T cid22 cid10 Proof Verifying input tree encoding T Acanonical tree decomposition diﬃcult Condition D1 satisﬁed I Condition D2 guaranteed way encode decode tree decompositions The remaining condition D3 conditions T Acanonicity Deﬁnition 1 checked looking labels node neighbours We implement storing label parent guessing labels children checking satisfy necessary conditions verifying guessed correctly That set states cid9N cid9N For set initial states cid12 cid9 cid10 cid4 J0 cid4C cid4R J cid9N cid9N cid13 cid13 cid13 cid13 J A cid3J0 cid3J cid14 interpretation J0 cid3J0 cid3J emulate behaviour interpretation domain appropriate nonexistent parent root condition J A ensures C1 Transitions form cid9 cid10 ω0 ω ω ω ω1 ω ωk cid9N 2 cid9N cid9N 2 cid9N 2 cid18 cid15 cid16cid17 k k N ω label current node ω0 stored label parent ω1 ω2 ωk guessed labels children The transition present cid19 cid20 ω0 ω ω1 ωk cid40 J0 cid4 J cid4C r1 J1 cid4C rk Jk cid9 cid10 cid9 cid10 cid9 cid10 cid9 cid10 r1 r2 rk cid4R cid14 D 3 1 2 k restrictions J Ji signature cid4 cid4i domain cid3J cid3Ji coincide 2 J satisﬁes CIs T forms cid5i Ai cid3 cid10 j B j A cid3 cid2 n r B r cid4t R cid14 3 concept inclusion A cid3 cid2 n r B T r cid4nt Iv cid3J0 J cid14 J R d A cid4 k i1 cid14 Ji element d n rsuccessors B J cid14 cid14 4 concept inclusion A cid3 cid3 n r B T d A Iv cid3J0 exists 1 2 k J Ji element d n rsuccessors B J Ji cid14 5 1 2 k exists d cid3J cid3J0 ri cid4nt J cid4 cid3J cid3Ji rel ri d rel ri cid4t R Ji ri d R cid4t R cid4 cid3J cid3Ji d C C C C Note conditions simply translations conditions D3 C2C5 level tree decompo sitions level encodings It remains argue automaton constructed claimed time Note ﬁrst cid9N 2polyNcid22T cid22 elements cid9N enumerated time 2polyNcid22T cid22 Hence alphabet set states automaton computed time 2polyNcid22T cid22 Conditions D cid14 cid14 cid14 5 tested polynomial time total 3 C 2C size representation ω0 ω ω1 ω2 ωk T Consequently transition relation computed time 2polyNcid22T cid22 iterating possible choices ω0 ω ω1 ω2 ωk ﬁltering ones violate conditions Similarly conditions deﬁning set initial states veriﬁed time polynomial size representation state A Because indA N follows set initial states computed time 2polyNcid22T cid22 Thus automaton constructed time 2polyNcid22T cid22 cid2 cid22ϕcid22cid22ϕcid22cid22ϕcid22 non Lemma 8 Given P2RPQ ϕ individual names positive integer N compute time 2polycid22T cid22N deterministic tree automaton recognizing set encodings tree decompositions width degree N interpretations J J cid16 ϕ Proof In order able evaluate ϕ directly J J r occurrence r ϕ r r affecting semantics ϕ J occurrence r r transitive role r replace This ensures J ϕ iff J ϕ The step NFAbased representation Path expressions ϕ regular expressions alphabet comprising r r A ϕ It wellknown regular expression converted polynomial time equivalent NFA linearly states 23 Without loss generality assume automaton cid14 B NFA equivalent initial ﬁnal state Hence replace atom Et t E viewed regular expression cid14 Bt t 16 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Finally wellknown ϕ rewritten exponential time disjunction cid22ϕcid22cid22ϕcid22 C2RPQs size cid22ϕcid22 Let q1 q2 qcid8 equivalent formulation ϕ let Q q1 q2 qcid8 By Theorem 2 T I tree decomposition J J cid16 ϕ iff cid7 T I admits Q annotation cid11 Q cid11v 7 vT Thus suﬃces construct automaton recognizing encodings tree decompositions T I satisfying 7 Intuitively automaton guess Q annotation encoded tree decomposition verify avoids Q required 7 Recall bags tree decomposition encoded elements ﬁxed ﬁnite domain cid3N elements cid3N reused represent different elements different bags rule d cid3N represents element bags iff d present bag unique simple path bags Consequently suﬃces consider cid3N splits queries Q Because queries use individual names cid3N splits use individual names cid3N In order check correctness guessed annotation automaton needs access domains children current node let automaton guess verify later Thus states automaton pairs cid3 cid11 cid3 cid3N cid11 clQ cid3 Q states initial ﬁnal Transitions form cid9 cid10 cid30 cid110 cid4 J cid31 cid111 cid32 cid112 cid3k cid11k cid30 cid3J cid2 cid110 clQ cid30 cid3 p clQ cid30 J p cid14 1 A cid14 2 cid30split p clQ cid30 subset cid110 p cid110 A cid14 3 1 2 k A cid110 cid110 clQ cid30 cid3i cid11i clQ cid30 cid3i From run input tree T τ extract Q annotation encoded tree decomposition T I node v T second component cid110 clQ cid30 corresponding state cid30 cid110 replace constants cid14 cid14 cid14 cid30 cid3N corresponding constants cid3v Conditions A 3 direct translations A1 2 A 1 A A2 A3 encodings Because neighbouring bags agree encoding shared elements easy extracted labelling T correct Q annotation T I Similarly Q annotation tree decomposition T I turned accepting run encoding T I Recall cid9N 2polyNcid22T cid22 queries Q size cid22ϕcid22 automata represent path expressions queries m O cid22ϕcid22 states Q cid22ϕcid22cid22ϕcid22 Using Lemma 5 4 clQ cid3N Q cid9 6 m2 2N2 cid10cid22ϕcid22 poly cid9 cid22ϕcid22 cid22ϕcid22cid22ϕcid22 N cid10 Consequently number states constructed tree automaton bounded cid10 cid9 cid3N 2 clQ cid3N 2poly 2 cid22ϕcid22cid22ϕcid22cid22ϕcid22 N number transitions bounded cid22 cid9N Ncid21 k0 cid3N 2 2 clQ cid3N cid23 k1 cid9 2poly cid22T cid22N cid22ϕcid22cid22ϕcid22cid22ϕcid22 cid10 k stands possible numbers children current node Condition A polyclQ cid3N N cid22ϕcid22 cid22T cid22 cid14 1 tested time clQ cid30 clQ cid3N cid14 cid14 size domain J linear N size queries clQ cid30 linear cid22ϕcid22 Conditions A 3 2 A tested time polynomial total size representations objects mention It follows cid22ϕcid22cid22ϕcid22cid22ϕcid22 cid2 automaton constructed time 2polycid22T cid22N The main results obtained putting pieces We begin simple argument establishing combined complexity Theorem 3 Entailment P2RPQs relative SQu TBoxes 2ExpTimecomplete 17 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 Proof Let A T ϕ input ABox SQu TBox P2RPQ As explained Section 23 assume T normal form ϕ contains individual names Let N cid22Acid22 2polycid22T cid22 constant bounding width degree tree decompositions guaranteed Theorem 1 easily computed T A We tree composition Nbounded width degree N By Lemma 7 construct time O 2polyNcid22T cid22 automaton AT A recognizing T Acanonical Nbounded tree decompositions By Lemma 8 construct cid22ϕcid22cid22ϕcid22cid22ϕcid22 automaton Aϕ recognizing Nbounded tree decomposition interpretations transi time 2polycid22T cid22N tive closures falsify ϕ The product A automata recognizes T Acanonical Nbounded tree decompositions interpretations transitive closures falsify ϕ From Theorem 1 follows T A ϕ iff A accept We construct product automaton test emptiness time polynomial size AT A Aϕ Overall gives decision procedure combined complexity doubly exponential The matching lower bound inherited positive existential query answering sublogic ALC 19 cid2 The algorithm described proof Theorem 3 explicitly constructs automata exponential size ABox In order establish tight upper bound data complexity avoid constructing automaton combined complexity resulting algorithm doubly exponential Theorem 4 Entailment P2RPQs relative SQu TBoxes coNPcomplete terms data complexity Proof As lower bound carries entailment instance queries ALC 18 need prove upper bound Consider ABox A SQu TBox T normal form P2RPQ ϕ individual names We shall rely additional claim Theorem 1 Let M 2polycid22T cid22 constant bounding size degree nonroot bags Theorem 1 let large ensure size degree root bag N cid22Acid22 M Again M computable T A We shall reuse automata AT A Aϕ constructed Lemmas 7 8 The idea universally guess initial levels input tree corresponding fragment run product automaton AT A Aϕ check completed tree accepted product automaton The check explore limited fragments product automaton computable time independent A Notice child root bag size degree independent A state stores information root bag information forgotten transition taken This guess initial levels v Icid14 cid4cid14 cid3N cid4cid14 product automaton Icid14 We begin guessing tree depth 2 root cid22Acid22 M children M children For guessed node v guess label cid4v Iv cid4v cid4C cid4R Iv cid4v interpretation domain cid3v cid3N Moreover cid3v M nodes v root For guessed node v guess cid10 cid10 v cid4v Iv v interpretation corresponding state cid3v cid11v domain cid3cid14 cid4C cid4R cid11v clcid3v Q Q set C2RPQs obtained rewriting input cid9 cid10 v cid3v cid22ϕcid22 cid22ϕcid22cid22ϕcid22 query ϕ disjunction C2RPQs As seen proof Lemma 8 cid11v clcid3v Q poly query cid11v clcid3v Q size O cid22ϕcid22 Moreover cid22Iv cid22 cid22Icid14 cid22 polyN cid22T cid22 Because consider T ϕ ﬁxed follows store guessed fragment input tree corresponding run space polynomial cid22Acid22 As seen proofs Lemmas 7 8 check polynomial time state root initial transition relation respected It remains check guessed fragments input tree corresponding run extended tree accepting run This equivalent checking grandchild v root product automaton accept state guessed v We claim test performed time independent cid22Acid22 grandchild v root As number nodes v polynomial cid22Acid22 gives coNP decision procedure terms data complexity v cid4cid14 cid9cid9 v v To claim holds let ﬁx grandchild v root Recall need consider tree decompositions size nonroot bags bounded M Whether automaton accepts depends tree decomposition encoding Consequently assume bags subtree rooted v encoded ﬁxed domain M cid3v cid3v T A Av cid3v ϕ automata deﬁned like AT A Aϕ cid10 v Icid14 cid4cid14 v cid4v Iv cid3N replaced cid3v cid3v cid11v respectively These automata cid9 v Icid14 cid4cid14 depend A apart T ϕ depend cid3v cid11v Because cid22 polyM cid22T cid22 product automaton Av cid3v cid3v T A Av ϕ computed tested M emptiness time constant respect cid22Acid22 cid2 M initial states set M cid22Iv cid22 cid22Icid14 cid10 v cid4v Iv cid3N cid3v M 2M Let Av M cid9 v 6 Related work We begin related work fragments FO counting transitivity Then description logics counting transitivity Finally discuss existing work answering navigational queries regular path queries extensions thereof mediated description logic ontologies 18 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 61 Related work fragments FO counting transitivity In general extending expressive decidable fragments FO counting transitivity turned chal lenging combination easily leads undecidability There work extension decidable ﬁrstorder logic fragments guarded fragment transitivity counting 2425 However en sure decidability satisﬁability problem interaction counting transitivity severely restricted 24 In context existential rules efforts recently design languages decidable QA supporting tran sitivity 2628 However extending decidable existential rules languages counting transitive relations easily leads undecidability 29 Similarly extending unary negation fragment FO counting leads undecid ability 3031 In sense positive results important step close distance undecidability frontier In fact extensions based SQu aware expressive decidable logics supporting counting transitivity 62 Related work DLs number restrictions transitive roles The initial investigations SQu extensions thereof concentrated limits decidability satisﬁabil ity problem Decision procedures satisﬁability SQu extension SOQu nominals provided 32 33 respectively cases procedure gives nonelementary upper bound Shortly concept satisﬁ ability SQu restricted single transitive role shown NExpTimecomplete 34 fact result shown graded modal logics transitive frames notational variant The techniques proving NExpTime upper bound adapted prove tight complexity bounds general problem TBox satisﬁability global consequence modal logic parlance presence arbitrary number transitive nontransitive roles presence nominals SQu SOQu TBox satisﬁability NExpTimecomplete 35 Further shown modest extensions SQu role inclusions inverse roles result logics undecidable TBox satisﬁability problem 32 implies query answering undecidable In fact supporting number restrictions transitive roles lightweight DLLite 36 leads undecidability 35 Remark ably observed decidability TBox satisﬁability regained disallowing application atmost restrictions inverse transitive roles allowing application atleast restrictions 3738 Recall SQu enjoy tree model property ramiﬁcations Indeed shown transitive roles interpreted transitive closure successor relation induced tree satisﬁability SQu decidable NExpTime role inclusions allowed 39 This marked contrast mentioned undecidability result SQu role inclusions 32 HN core 63 Related approaches navigational queries Possibly closest approach 8 automatabased approach consisting Steps 13 described Sec tion 11 followed There query automaton Aϕ obtained initial automaton projection subsequent complementation operation This approach constructing Aϕ applicable lead optimal complexity higher treewidth In 14 query rewriting approach followed While prin ciple orthogonal faces challenge nonlocality path queries needs form query decompositions splits Sometimes query rewritten incorporated ontology For example considered DL allows regular role inclusion constructor usually abbreviated R entailment regular path queries reduced entailment conjunctive queries 1340 Finally query decomposition spirit close recently developed extension unary negation fragment ﬁrstorder logic 31 regular path expressions 16 extension captures answering unions C2RPQs mediated S ontologies S denotes extension ALC transitive roles A certain form nonlocality present conjunctive queries transitive atoms Such queries usually considered ontologymediated query answering ontology language subsumes S It known cases entailment CQs transitive relations complex For instance entailment CQs transitive atoms relative SHQ ontologies 2ExpTimecomplete 67 ExpTimecomplete 41 transitive atoms In fact increase complexity witnessed S entailment CQs transitive atoms coNExpTimehard 7 7 Conclusions We studied problem answering positive twoway regular path queries P2RPQs relative SQu unrestricted SQ ontologies Our main results decidability tight complexity bounds data complexity combined complexity These results practical theoretical From practical point view complexity results meet application demands open possibility include proﬁle based SQu OWL 2 Note increase computational complexity comparison SQ counting transitive roles From theoretical 19 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 perspective techniques introduced broader Speciﬁcally annotations query automaton developed independently ontology applied ontology language enjoying treelike countermodel property For instance recently generalized treelike countermodel property extensions SQu nominals SOQu controlled inverses SIQcid4 u atmost restrictions applicable role names inverses 38 For logics recognizing treelike models T A requires different automaton AT A automaton Aϕ constructed Section 5 reused yielding complexity upper bounds There directions future work With respect query language believe techniques lifted nested P2RPQs extend P2RPQs form tests The feature nesting introduced navigational queries context SPARQL 42 studied ontologymediated setting extent 4344 It interesting look restricted query languages For example CQs gap combined complexity 2ExpTime upper bound best known lower bound coNExpTime holds S ontologies 7 Declaration competing The authors declare known competing ﬁnancial interests personal relationships appeared inﬂuence work reported paper Data availability No data research described article Acknowledgements Filip Murlak supported NCN grant 201830EST600042 References 1 M Benedikt BC Grau EV Kostylev Logical foundations information disclosure ontologybased data integration Artif Intell 262 2018 5295 2 G Xiao D Calvanese R Kontchakov D Lembo A Poggi R Rosati M Zakharyaschev Ontologybased data access A survey J Lang Ed Proceedings 27th International Joint Conference Artiﬁcial Intelligence IJCAI ijcaiorg 2018 pp 55115519 3 F Baader I Horrocks C Lutz U Sattler An Introduction Description Logic Cambridge University Press 2017 4 W3C OWL Working Group OWL 2 Web Ontology Language Available httpwwww3 org TR owl2 overview 2009 5 B Glimm I Horrocks U Sattler Unions conjunctive queries SHOQ G Brewka J Lang Eds Proceedings 11th International Conference Principles Knowledge Representation Reasoning KR AAAI Press 2008 pp 252262 6 B Glimm C Lutz I Horrocks U Sattler Conjunctive query answering description logic SHIQ J Artif Intell Res 31 2008 157204 7 T Eiter C Lutz M Ortiz M Simkus Query answering description logics transitive roles C Boutilier Ed Proceedings 21st Interna tional Joint Conference Artiﬁcial Intelligence IJCAI 2009 pp 759764 8 D Calvanese T Eiter M Ortiz Answering regular path queries expressive description logics alternating treeautomata Inf Comput 237 2014 1255 9 W3C OWL Web Ontology Language Use Cases Requirements Available httpswwww3 org TR webont req 2004 10 AK Chandra PM Merlin Optimal implementation conjunctive queries relational data bases JE Hopcroft EP Friedman MA Harrison Eds Proceedings 9th Annual ACM Symposium Theory Computing STOC ACM 1977 pp 7790 11 P Barceló Querying graph databases R Hull W Fan Eds Proceedings 32nd ACM SIGMODSIGACTSIGART Symposium Principles Database Systems PODS ACM 2013 pp 175188 12 D Calvanese GD Giacomo M Lenzerini MY Vardi Containment conjunctive regular path queries inverse AG Cohn F Giunchiglia B Selman Eds Proceedings 7th International Conference Principles Knowledge Representation ReasoningKR Morgan Kaufmann 2000 pp 176185 13 G Stefanoni B Motik M Krötzsch S Rudolph The complexity answering conjunctive navigational queries OWL 2 EL knowledge bases J Artif Intell Res 51 2014 645705 14 M Bienvenu M Ortiz M Simkus Regular path queries lightweight description logics Complexity algorithms J Artif Intell Res 53 2015 315374 15 J Baget M Bienvenu M Mugnier M Thomazo Answering conjunctive regular path queries guarded existential rules C Sierra Ed Proceed ings 26th International Joint Conference Artiﬁcial Intelligence IJCAI ijcaiorg 2017 pp 793799 16 JC Jung C Lutz M Martel T Schneider Querying unary negation fragment regular path expressions B Kimelfeld Y Amsterdamer Eds Proceedings 21st International Conference Database Theory ICDT LIPIcs vol 98 Schloss Dagstuhl LeibnizZentrum für Informatik 2018 pp 1511518 17 MY Vardi The complexity relational query languages extended abstract HR Lewis BB Simons WA Burkhard LH Landweber Eds Pro ceedings 14th Annual ACM Symposium Theory Computing STOC ACM 1982 pp 137146 18 A Schaerf On complexity instance checking problem concept languages existential quantiﬁcation J Intell Inf Syst 2 3 1993 265278 19 M Ortiz M Simkus Revisiting hardness query answering expressive description logics R Kontchakov M Mugnier Eds Proceedings 8th International Conference Web Reasoning Rule Systems RR Lecture Notes Computer Science vol 8741 Springer 2014 pp 216223 20 J Neumann A Szepietowski I Walukiewicz Complexity weak acceptance conditions tree automata Inf Process Lett 84 4 2002 181187 21 S Tessaris Questions answers reasoning querying description logic PhD thesis University Manchester 2001 22 E Grädel I Walukiewicz Guarded ﬁxed point logic Proceedings 14th Annual IEEE Symposium Logic Computer Science LICS IEEE Computer Society 1999 pp 4554 20 V GutiérrezBasulto Y IbáñezGarcía JC Jung et al Artiﬁcial Intelligence 314 2023 103808 23 M Fürer The complexity inequivalence problem regular expressions intersection JW Bakker J van Leeuwen Eds Proceedings 7th Colloquium Automata Languages Programming ICALP Lecture Notes Computer Science vol 85 Springer 1980 pp 234245 24 L Tendera Counting variable guarded logic transitivity V Diekert B Durand Eds Proceedings 22nd Annual Symposium Theoretical Aspects Computer Science STACS Lecture Notes Computer Science vol 3404 Springer 2005 pp 8396 25 I PrattHartmann The twovariable fragment counting equivalence Math Log Q 61 6 2015 474515 26 G Gottlob A Pieris L Tendera Querying guarded fragment transitivity FV Fomin R Freivalds MZ Kwiatkowska D Peleg Eds Proceedings 40th International Colloquium Automata Languages Programming ICALP Lecture Notes Computer Science vol 7966 Springer 2013 pp 287298 27 J Baget M Bienvenu M Mugnier S Rocher Combining existential rules transitivity Next steps Q Yang MJ Wooldridge Eds Proceedings 24th International Joint Conference Artiﬁcial Intelligence IJCAI AAAI Press 2015 pp 27202726 28 A Amarilli M Benedikt P Bourhis M Vanden Boom Query answering transitive linearordered data J Artif Intell Res 63 2018 191264 29 A Calì D Lembo R Rosati On decidability complexity query answering inconsistent incomplete databases F Neven C Beeri T Milo Eds Proceedings 22nd ACM SIGACTSIGMODSIGART Symposium Principles Database Systems PODS ACM 2003 pp 260271 30 D Danielski E Kieronski Finite satisﬁability unary negation fragment transitivity P Rossmanith P Heggernes J Katoen Eds Proceedings 44th International Symposium Mathematical Foundations Computer Science MFCS LIPIcs vol 138 Schloss Dagstuhl LeibnizZentrum für Informatik 2019 pp 1711715 31 L Segouﬁn B Cate Unary negation Log Methods Comput Sci 9 3 2013 32 Y Kazakov U Sattler E Zolin How legs I nonsimple roles number restrictions revisited N Dershowitz A Voronkov Eds Proceedings 14th International Conference Logic Programming AI Reasoning LPAR Lecture Notes Computer Science vol 4790 Springer 2007 pp 303317 33 M Kaminski G Smolka Terminating tableaux SOQ number restrictions transitive roles Proceedings 6th International Conference Theoretical Computer Science IFIP TCS IFIP Advances Information Communication Technology vol 323 Springer 2010 pp 213228 34 Y Kazakov I PrattHartmann A note complexity satisﬁability problem graded modal logics Proceedings 24th Annual IEEE Symposium Logic Computer Science LICS IEEE Computer Society 2009 pp 407416 35 V GutiérrezBasulto YA IbáñezGarcía JC Jung Number restrictions transitive roles description logics nominals SP Singh S Markovitch Eds Proceedings 31st AAAI Conference Artiﬁcial Intelligence AAAI AAAI Press 2017 pp 11211127 36 A Artale D Calvanese R Kontchakov M Zakharyaschev The DLLite family relations J Artif Intell Res 36 2009 169 37 B Bednarczyk E Kieronski P Witkowski Completing picture Complexity graded modal logics converse Theory Pract Log Program 21 4 38 T Gogacz V GutiérrezBasulto Y IbáñezGarcía JC Jung F Murlak On ﬁnite unrestricted query entailment SQ number restrictions transitive roles S Kraus Ed Proceedings 28th International Joint Conference Artiﬁcial Intelligence IJCAI 2019 pp 17191725 39 L Schröder D Pattinson How toes I parthood number restrictions description logics G Brewka J Lang Eds Proceedings 11th International Conference Principles Knowledge Representation Reasoning KR AAAI Press 2008 pp 307317 40 B Bednarczyk S Rudolph Worstcase optimal querying expressive description logics path expressions succinct counting S Kraus Ed Proceedings 28th International Joint Conference Artiﬁcial Intelligence IJCAI ijcaiorg 2019 pp 15301536 41 C Lutz The complexity conjunctive query answering expressive description logics A Armando P Baumgartner G Dowek Eds Proceedings 4th International Joint Conference Automated Reasoning IJCAR Lecture Notes Computer Science vol 5195 Springer 2008 pp 179193 42 J Pérez M Arenas C Gutiérrez nSPARQL A navigational language RDF J Web Semant 8 4 2010 255270 43 M Bienvenu D Calvanese M Ortiz M Simkus Nested regular path queries description logics C Baral GD Giacomo T Eiter Eds Proceedings 14th International Conference Principles Knowledge Representation Reasoning KR AAAI Press 2014 44 P Bourhis M Krötzsch S Rudolph How best nest regular path queries M Bienvenu M Ortiz R Rosati M Simkus Eds Proceedings 27th International Workshop Description Logics CEUR Workshop Proceedings 2014 pp 404415 2021 493520 21