Artiﬁcial Intelligence 224 2015 103118 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Computeraided proof Erd os discrepancy properties Boris Konev Alexei Lisitsa Liverpool University Liverpool UK r t c l e n f o b s t r c t Article history Received 23 May 2014 Received revised form 26 February 2015 Accepted 18 March 2015 Available online 25 March 2015 Keywords Erd os discrepancy problem Computeraided proof Propositional satisﬁability cid2 k In 1930s Paul Erd os conjectured positive integer C inﬁnite 1 sequence xn exists subsequence xd x2d x3d xkd positive integers k d i1 xid C The conjecture referred major open problems combinatorial number theory discrepancy theory For particular case C 1 human proof conjecture exists C 2 bespoke program generated sequences length 1124 discrepancy 2 status conjecture remained open small bound We encoding problem Boolean satisﬁability applying state art SAT solvers obtain discrepancy 2 sequence length 1160 proof Erd os discrepancy conjecture C 2 claiming discrepancy 2 sequence length 1161 exists In similar way obtain precise bound 127 645 maximal lengths multiplicative completely multiplicative sequences discrepancy 3 We demonstrate unrestricted discrepancy 3 sequences longer 130 000 2015 Elsevier BV All rights reserved 1 Introduction The high mental activity mathematical inquiry battleground artiﬁcial intelligence speaking broadly science dawn The rigorous structured nature mathematical reasoning work foundations mathematics formalisation mathematical proof invention digital computers development automated reasoning enabled mechanisation proof search proof checking As result 80 years witnessed realisation dream Leibniz Babbage development tools progress mathematics assisting humans proving new statements formal veriﬁcation existing mathematical knowledge Yet mathematically signiﬁcant open questions status settled interesting math ematical problems human solution solution sketch existed prior applied counted virtually ﬁngers hand Notably success ﬂagship cases combination signiﬁcant computational effort nontrivial human effort form customising ﬁnetuning proof sistants strategies 1 form developing specialised software programs 23 perform computations underpinning proof Mathematicians generally little issues computers discover readable proof large space possibilities For example took weeks ﬁnd solution Robbins problem 1 proof consists dozen steps inspected On hand answer obtained Corresponding author Email addresses konevliverpoolacuk B Konev lisitsaliverpoolacuk A Lisitsa httpdxdoiorg101016jartint201503004 00043702 2015 Elsevier BV All rights reserved 104 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 complicated software going myriads special caseshumans doubts 4 degree trust mathematics depends technology Famously took years accept publication paper proof Keplers conjecture reviewers completely satisﬁed verify entire program ﬁnd answer 5 The paper proof nonexistence ﬁnite projective plane order 10 explicitly analyses probability computational error 6 The original Appel Haken proof 2 Four Colour Theorem involved deep theoretical argument followed vast computational case analysis carried program written assembly language The possibility unaccounted errors software sparked discussion answer accepted 7 led progress clariﬁcation Robertson et al 8 considerably simpliﬁed theoretical programs written highlevel programming language The culmination effort veriﬁcation clariﬁcation Four Colour Theorem achieved recent work computerchecked proof Gonthier Coq proof assistant 9 The Four Colour Theorem story reﬂects general trends mathematics formalise computergenerated proofs formal inference verify trusted program The availability welldeﬁned independently veriﬁable proof makes mathematics palatable mathematicians proof large human inspect 5911 In article attack discrepancy theory question stood open 80 years reduction Boolean satisﬁability We apply general purpose solver fully automated unguided manner To ﬁnd solution solver goes large number possibilities unlike simple computeraided enumeration cases proof exhaustion produces certiﬁcate assuring mistake going possibilities The certiﬁcate reliably independently veriﬁed Coupled fact program generating input solver short clear certiﬁcate constitutes rigorous formal proof statement Discrepancy theory branch mathematics dealing irregularities distributions points space combinatorial measuretheoretic geometric settings 1215 The paradigmatic combinatorial discrepancy theory prob lem described terms hypergraph H U S set U family subsets S 2U Consider colouring c U 1 1 elements U blue 1 red 1 colours Then ask exists colouring elements U colours distributed uniformly element S discrepancy colours inevitable Formally discrepancy deviation uniform distribution hypergraph H deﬁned mincmaxsS es ce Discrepancy theory applications computational complexity 13 complexity communication 16 differential privacy 17 Although forms combinatorial discrepancy example heredi tary multicolour discrepancies deﬁned classical twocoloured discrepancy deﬁned remains focus research mathematical algorithmic viewpoints 18 cid2 One oldest problems combinatorial discrepancy theory discrepancy hypergraphs sets natural numbers subsets hyperedges forming arithmetical progressions sets 19 Roths theorem 20 main results area states hypergraph formed arithmetic progressions 1 n Hn Un Sn Un 1 2 n elements Sn form d c arbitrary d c discrepancy 20 n14 While proving result Roth introduced pioneering proof technique played key role grows 1 development discrepancy theory areas 21 Surprisingly restricted case homogeneous arithmetic progressions form d question discrepancy bounds open eighty years In 1930s Erd os conjectured 22 discrepancy unbounded Independently conjecture ˇCudakov 23 Proving disproving conjecture major open problems combinatorial number theory discrepancy theory It referred Erd os discrepancy problem EDP 121524 The expected value discrepancy random 1 sequences length n grows n12o1 explicit construc tions sequence slowly growing discrepancy rate log3 n demonstrated 2526 By considering cases 1 sequence containing 12 elements discrepancy 2 Erd oss conjec ture holds particular case C 1 implied stronger result Mathias 27 Until February 2014 status conjecture remained unknown values C Although widely believed case possibility inﬁnite sequence discrepancy 2 existed The EDP attracted renewed 20092010 topic ﬁfth Polymath project 28 widely publicised endeavour collective mathematics initiated Gowers 29 As activity attempt attack problem computers discussion 28 A purposely written program successfully 1 sequences length 1124 discrepancy 2 progress leading claim given long ﬁnite sequence unlikely answer question clever search possibilities 28 The status Erd os discrepancy conjecture C 2 settled authors article 3031 encoding problem propositional satisﬁability problem state art SAT solvers prove longest 1 sequence discrepancy 2 contains 1160 elements A 13 900 long 1 sequence discrepancy 3 constructed B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 105 This article revised extended version 31 We use different smaller SAT encoding Erd os discrepancy problem based sequential counter encoding atmost cardinality constraints1 The impact new encoding twofold Firstly allows signiﬁcantly reduce size machinegenerated proof fact sequence longer 1160 discrepancy 3 Secondly combining new encoding additional restrictions sequence multiplicative completely multiplicative2 improve signiﬁcantly lower bound length sequences discrepancy 3 We prove surprising result 127 645 length longest completely multiplicative sequence discrepancy 3 maximal length multiplicative sequence discrepancy 3 case C 1 C 2 The article contains detailed argumentation examples complete proofs The article organised follows In Section 2 introduce main terms deﬁnition In Section 3 new SAT encoding Erd os discrepancy problem Results conclusions discussed Sections 4 5 respectively 2 Preliminaries We divide section parts main deﬁnitions Erd os discrepancy problem background deﬁnitions SAT solving Since number 1 element 1 sequences logical value true avoid confusion follows write 1 refer logical value true 1 refer elements 1 sequences We use following naming convention write x1 xn 1 sequences p1 pn sequences propositions a1 01 sequences 21 Discrepancy 1 sequences A 1 sequence length n function 1 n 1 1 An inﬁnite 1 sequence function N 1 1 N set positive natural numbers We write x1 xn denote ﬁnite 1 sequence length n xn denote inﬁnite sequence We refer ith element sequence x value xi xi A ﬁnite inﬁnite 1 sequence x completely multiplicative 33 xmn xm xn m n N 1 The sequence multiplicative 1 required coprime m n cid3 k i1 pi It easy sequence x completely multiplicative x1 1 canonical representation i1xpi αi This observation leads m computationally friendly deﬁnition completely multiplicative sequences x completely multiplicative αi p1 p2 pk primes αi N xm cid3 k x1 1 composite m xm xi x j j nontrivial divisors m 2 The EDP naturally described terms 1 sequences Erd os introduced 22 Then Erd oss conjecture formulated follows Conjecture Erd os 1930s For C 0 inﬁnite 1 sequence xn exists subsequence xd x2d x3d xkd positive integers k d cid2 k i1 xid C Notice general deﬁnition discrepancy given introduction specialised terms partial sums subsequences 1 sequence To simplify notation introduce auxiliary notion C boundedness We j 1 sequence x1 xl C bounded C 0 i1 xi C j 0 j l Notice 1 sequence length exceed C C bounded cid2 Then discrepancy ﬁnite 1 sequence x1 xn length n minimal C d 1 d cid8 subsequence xd x2d xcid7ndcid8d C bounded For inﬁnite sequence xn discrepancy supremum C1 cid7 n discrepancies initial ﬁnite fragments The Erd os discrepancy conjecture equivalent variant inﬁnite 1 sequence replaced inﬁnite com pletely multiplicative 1 sequence 22 This observation particular explains multiplicativity properties context Example 1 The ﬁnite sequence x1 x5 1 1 1 1 1 discrepancy 3 d 1 j 3 cid2 i1 xi 3 3 readily checked sequences deﬁnition discrep i1 xid ancy 3bounded cid2 3 j 1 We grateful Donald E Knuth pointing direction 2 After article submitted came notice completely multiplicative sequences result independently obtained Le Bras Gomes Selman 32 106 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 The ﬁnite sequence y1 y6 1 1 1 1 1 1 discrepancy 3 value achieved setting d 2 j 3 deﬁnition The inﬁnite sequence xn 1n unbounded discrepancy initial ﬁnite segment x1 xm m 2 cid8 Thus discrepancy initial contains subsequence members 1 x2 x4 xl l 2cid7 m 2 segment x1 xm grows cid7 m cid8 In fact inﬁnite periodic 1 sequence xn unbounded discrepancy Indeed 2 xnp xn values n xp x2p x3p xp x2p x jp j j 0 C sequence xp x2p x jp C bounded j 0 A similar argument applies eventually periodic sequences eventually periodic sequence bounded discrepancy It easy 1 sequence containing 12 elements discrepancy 2 Example 2 For proof contradiction suppose discrepancy 1 sequence x1 x12 1 Assume x1 1 We write 1 _ _ _ _ _ _ _ _ _ _ _ track progress example speciﬁc values 1 1 positions 1 12 indicate decisions xi taken far mark positions xi decision underscore Notice x2 1 x1 x2 2 So progress 1 1 _ _ _ _ _ _ _ _ _ _ Then 4th element sequence 1 d 2 sum xd x2d x2 x4 2 So progress 1 1 _ 1 _ _ _ _ _ _ _ _ Then 3rd element sequence 1 x1 x4 2 come 1 1 1 1 _ _ _ _ _ _ _ _ Repeating reasoning x3 x6 followed x5 x4 x8 followed x7 x5 x10 followed x9 ﬁnally x6 x12 followed x11 progress 1 1 1 1 1 1 1 1 1 1 1 1 3 But d 3 xd x2d x3d x4d x3 x6 x9 x12 2 So derive contradiction It checked similar way possibility x1 1 leads contradiction The ﬁrst elements sequence 3 form discrepancy 1 sequence It multiplicative completely mul tiplicative x9 1 Reasoning similar shows exists unique longest completely multiplicative 1 sequence discrepancy 1 elements 1 1 1 1 1 1 1 1 1 22 Propositional satisﬁability problem We assume standard deﬁnitions propositional logic example 34 Propositional formulae deﬁned Boolean constants true false denoted 1 0 respectively set Boolean variables propositions PV follows Boolean constants 0 1 elements PV formulae cid3 cid4 formulae cid3 cid4 conjunction cid3 cid4 disjunction cid3 cid4 implication cid3 cid4 equivalence cid3 negation We typically use letters p q s denote propositions capital Greek letters cid3 cid4 denote propositional formulae Whenever necessary subscripts superscripts We use varscid3 denote set propositions occurring formula cid3 Every propositional formula reduced conjunctive normal form Propositions negations propositions called literals When negation applied literal double negations implicitly removed l p l p A disjunction literals called clause A clause containing exactly literal called unit clause A conjunction clauses called propositional formula conjunctive normal form CNF formula short A clause represented set literals clause correspond 0 false CNF formula represented set clauses The representations interchangeably We typically use meaningful terms typeset sans serif font example edp cmult highlight fact propositional formula CNF formula For propositional formula cid3 write cid3p1 pn indicate p1 pn varscid3 Propositions p1 pn designated input propositions case intended meaning formula cid3 encodes property p1 pn Then expression cid3q1 qn denotes result simultaneous replacement occurrence pi cid3 qi 1 n B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 107 The semantics propositional formulae given interpretations termed assignments An interpretation I mapping PV 0 1 extended literals clauses CNF formulae propositional formulae general usual way For assignment I formula cid3 I satisﬁes cid3 I model cid3 Icid3 1 A formula cid3 satisﬁable exists assignment satisﬁes unsatisﬁable Despite NPcompleteness satisﬁability problem tremendous progress recent years development SAT solverscomputer programs capable ﬁnd satisfying assignment given propositional formulamade possible solve interesting hard problems ﬁrst expressing propositional formula SAT solver obtaining solution 35 In addition returning satisfying assignment input formula satisﬁable SAT solvers capable return proof certiﬁcate unsatisﬁability Reverse Unit Propagation RUP proofs constitute compact representation resolution refutation given mula 36 following sense Unit propagation CNF formula transformation technique simpliﬁes formula ﬁxing values propositions occurring unit clauses satisfy clauses That unit clause p occurs CNF formula occurrences p replaced 1 unit clause p occurs CNF formula occurrences p replaced 0 Then CNF formula simpliﬁed obvious way A clause C l1 lm RUP inference input CNF formula cid4 adding unit clauses l1 lm cid4 makes formula refutable unit propagation An RUP unsatisﬁability certiﬁcate sequence clauses C1 Cm 1 m clause Ci RUP inference cid4 C1 Ci1 Cm clause Every unsatisﬁable CNF formula RUP unsatisﬁability certiﬁcate 36 Delete Reverse Unit Propagation DRUP proofs extend RUP proofs including extra information proof search process clauses discarded solver Eliminating extra information DRUP proof converts valid RUP proof DRUP proofs somewhat longer signiﬁcantly faster verify RUP proofs 37 3 SAT encoding discrepancy problem In section present SAT encoding EDP We start characterising C boundedness sequence help cardinality constraints We represent constraints propositional formula Section 32 In Sec tion 33 present optimised clausal form encoding In Section 34 discuss SAT encoding multiplicativity Finally Section 35 parts 31 C boundedness expressed cardinality constraints In context propositional satisﬁability cardinality constraints 38 expressions impose restrictions propo sitional interpretations specifying numerical bounds number propositions ﬁxed set propositions assigned value 1 The atmost r constraint set propositions p1 pn written p1 pn r holds interpretation I r propositions p1 pn true I Its counterpart atleast r constraint written p1 pn r holds interpretation I r propositions p1 pn true I A constraint satisﬁable exists assignment constraint holds Cardi nality constraints encoded propositional formulae interpretation satisfying formula satisﬁes cardinality constraint vice versa number encodings literature 38 As 1 sequence length exceed C C bounded follows consider cases l C As ﬁrst step SAT encoding C boundedness switch consideration ﬁnite 1 sequences form x1 xl characteristic representation 01 sequences form a1 al xi 2ai 1 words 1 corresponds 1 1 corresponds 0 We extend deﬁnition C boundedness 01 sequences obvious way 01 sequence a1 a2 al C bounded 1 sequence 2a1 1 2a2 1 2al 1 C bounded Notice i1 xi deﬁnition C boundedness characterised absolute value difference number occurrences 1 x1 x j number occurrences 1 x1 x j Under correspondence number occurrences 1 x1 x j number occurrences 1 a1 j i1 ai As total number elements x1 x j j number occurrences 1 x1 x j number occurrences 0 a1 j j cid2 cid2 cid2 j j j jcid5 cid4 cid4 cid4 cid4 cid4 cid4 cid4 cid4 cid4 xi i1 jcid5 i1 ai i1 ai Then cid7cid4 cid4 cid4 jcid5 j ai cid6 i1 cid4 cid4 cid4 ai j jcid5 cid4 cid4 cid42 i1 Thus a1 al C bounded C 2 jcid5 i1 ai j C j C j l 108 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 equivalent following systems inequalities cid8 cid10 jcid5 i1 jcid5 i1 ai ai cid9 C j 2 j C j l cid11 C j 2 j C j l 4 5 If interpret numerical values 0 1 Boolean constants true false respectively 01 sequence a1 al corresponds evaluation sequence Boolean propositions p1 pl interpretation I C boundedness sequence expressed cardinality constraints natural way Theorem 3 A 1 sequence x1 xl C 0 l C C bounded union atmost cardinality constraints p1 p j j C j l cid9 C j 2 cid8 cid10 cid11 C j 2 atleast cardinality constraints p1 p j satisﬁable j C j l 6 7 Proof The proof consists trivial observation deﬁnition cardinality constraints atmost constraints 6 capture condition 4 atleast constraints 7 capture condition 5 cid2 Theorem 3 immediately yields reduction question existence C bounded sequence propositional satisﬁability problem SAT representation cardinality constraints 38 However blackbox manner constraints 6 7 considered independently j C j l leading proliferation SAT encodings Instead use SAT encoding cardinality constraints based sequential counter circuits allows express C boundedness sequence single propositional formula 32 Sequential counterbased SAT encoding C boundedness A SAT encoding cardinality constraints based sequential counter circuits suggested Sinz 39 This j represent unary counters storing partial sums preﬁxes p1 pl encoding introduces auxiliary propositions sk i1 pi k j l sk cid2 j j 1 We slightly modify encoding 39 follows Let cid3p1 pl conjunction sk j sk j1 sk1 j1 p j sk j j sk 1 k l 1 j l 0 j k l k 0 0 j l 8 9 10 Recall write cid3p1 pl highlight fact p1 pl designated input propositions set propositions cid3p1 pl varscid3p1 pl p1 pl cid12 l j1 The proof fact model I cid3p1 pl Isk i1 Ipi k extracted 39 It based observation sum ﬁrst j elements 01 sequence Ip1 Ipl exceeds k sum ﬁrst j 1 elements exceeds k sum ﬁrst j 1 elements k jth element sequence 1 Formulae 9 10 specify border cases sum ﬁrst j elements sequence exceed j sum initial subsequence 0 sk j j 1 cid12 l k1 cid2 j Notice include formulae 9 10 explicitly encoding directly modify 8 replacing j k 0 0 j l p1 We write 9 10 occurrences sk 1 truth value true Then example k j 1 formula 8 simpliﬁes s1 1 explicitly exposition purposes j 0 j k l 0 truth value false occurrences sk We formal proof following proposition Appendix A completeness presentation B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 109 Proposition 4 Let cid3p1 pl deﬁned Then For assignment I varscid3p1 pl 0 1 I satisﬁes cid3p1 pl 1 j l 1 k l Isk j 1 jcid5 i1 Ipi k ii For 01sequence a1 al 0 1l exists assignment I varscid3p1 pl 0 1 I satisﬁes cid3p1 pl Ipi ai 1 l It follows Proposition 4 formula cid3p1 pl sr1 encodes atmost r cardinality constraint p1 pl r formula cid3p1 pl sr l encodes atleast r cardinality constraint p1 pl r Notice original encoding 39 captures atmost constraint uses polaritybased optimisation based Tseitins 40 renaming techniques yielding O nr clauses require O nr auxiliary propositions l We use Proposition 4 encode C boundedness sequences Let propositional formula cid4 C p1 pl conjunction cid3p1 pl sr1 j j C j l r cid8 cid9 C j 2 sr j j C j l r cid10 cid11 C j 2 11 12 Notice case cid3p1 pl write 11 12 explicitly ease explanation Then following Theorem 5 For C 0 l C assignment I p1 pl 0 1 following holds exists extension I cid14 varscid4 C p1 pl 0 1 model cid4 C p1 pl sequence Ip1 Ipl C bounded I Proof Assume assignment I p1 pl 0 1 sequence Ip1 Ipl C bounded By item ii cid14 cid14 varscid3p1 pl 0 1 I satisﬁes cid3p1 pl Proposition 4 I extended assignment I cid14p1 1 l cid14pi Ipi 1 l As I extension I sequence a1 al ai I I cid14 C bounded conditions 4 5 hold true By item Proposition 4 I 0 j C j l r cid14sr1 cid13 cid14 C j 2 j I cid14sr j 1 j C j l r Thus I cid14 satisﬁes cid4 C p1 pl cid15 cid16 C j 2 Conversely consider assignment I p1 pl 0 1 assume extension I 0 1 model cid4 C p1 pl Since I cid14 satisﬁes cid4 C p1 pl I 0 j C j l r cid14 varscid4 C p1 pl cid14 cid13 C j 2 cid14sr1 j I cid14sr j 1 j C j l r cid2 j item i1 I C bounded cid2 cid14pi cid7 C j 2 cid8 j C j l cid15 cid16 C j 2 As cid3p1 pl conjunct cid4 C p1 pl Proposition 4 cid14pl cid8 j C j l I cid14pi cid7 C j cid14p1 I cid2 j i1 I 2 33 Clausal form Straightforward clausiﬁcation formula cid4 C p1 pl yields O l2 clauses unit propagation 9 10 11 12 8 reduces signiﬁcantly size resulting CNF Example 6 We illustrate effect unit propagation cid4 C p1 pl Fig 1 presenting graphically values sk j k j 0 l case C 2 relatively large l 12 Notice interpretation I satisfying cid4 C p1 pl unit clauses 9 10 11 12 true truth values auxiliary propositions sk j occurring clauses ﬁxed interpretation The dark gray areas Fig 1 correspond sk j values ﬁxed 9 10 boldface zeros ones light gray background 11 12 It hard values ﬁxed 8 light gray cells unshaded region contain 1 light gray cells unshaded region contain 0 Thus values sk j unshaded region uniquely determined interpretation satisfying cid4 3p1 p12 In example 18 indeterminate values sk j 13 13 169 combinations j k The reasoning example applies values C l 110 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 Fig 1 Auxiliary propositions sk j cid4 C p1 pl C 2 l 12 Proposition 7 Let C 0 l C Then sk j 1 k l 2k 1 C j l sk j 1 k l 0 j max2k C 1 l logical consequences cid4 C p1 pl 13 14 Proof Suppose contrary C 0 l C I satisfying cid4 C p1 pl k 1 k l i1 Ipi k Since j 2k 1 C Ip1 Ipl j 2k 1 C j l Isk 01 sequence j 0 Then Proposition 4 cid2 j jcid5 i1 Ipi 2k1Ccid5 i1 Ipi Thus 2k1Ccid5 i1 Ipi k On hand I satisﬁes cid4 C p1 pl sequence Ip1 Ipl C bounded 2k 1 C C 5 2k1Ccid5 i1 Ipi cid10 C 2k 1 C 2 cid11 cid10 cid11 2k 1 2 k So derive contradiction The proof 14 similar use 5 cid2 As 8 logically equivalent set clauses sk j sk j sk j1 sk j1 sk1 j1 p j 15 16 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 sk j1 sk1 j1 sk j p j sk j 111 17 18 1 k l 1 j l seen formula cid4 C p1 pl logically equivalent set clauses S consisting 1518 9 10 13 14 Let CBoundC p1 pl result applying unit propagation S exhaustive manner One set CBoundC p1 pl contains C l auxiliary propositions 4C l clauses Example 8 To save space limit consideration topleft 5 5 region Fig 1 present CBound2p1 p5 clausal representation statement sequence p1 p5 2bounded We demonstrate clauses 9 10 13 14 unit propagate clauses 1518 Notice k 1 instance clause 15 contains literal s0 j1 literal unit clause 10 Thus For k 2 j 2 instance unit clause 9 s2 1 unit propagates 15 resulting 2CNF clause 1 literal unit clause 9 k 2 j 1 instance instance clause 15 k 1 redundant For k 2 j 1 clause 15 contains s2 clause 15 redundant 1 s1 s2 2 For k 2 j 3 15 instantiates s2 3 Finally k 2 4 j 5 clause 15 contains s1 s2 2 s1 2 4 j 5 instances clause 15 redundant j1 literal unit clause 13 Thus k 2 By consideration cases set nonredundant simpliﬁed instance clause 15 1 k 5 1 j 5 consists s2 2 s2 3 s1 1 s2 2 s1 2 s3 4 s3 5 s2 3 s3 4 s2 4 19 Similarly instances clause 16 1 k 5 1 j 5 simpliﬁed help unit clause 9 10 13 14 p1 s1 1 s1 s1 1 2 p3 s1 2 p2 s2 p2 2 s2 s2 3 2 s2 s2 4 3 p5 s2 3 p3 p4 s3 4 s3 5 p4 s3 4 p5 The set nonredundant simpliﬁed instances clause 17 consists s1 1 s1 2 s2 2 s2 3 s2 3 s2 4 s3 4 s3 5 set nonredundant simpliﬁed instances clause 18 consists p1 s1 1 p2 s1 2 s1 p2 s2 2 1 p3 s2 s1 3 2 p4 s2 4 s2 2 s2 3 s2 4 p3 p4 s3 4 p5 s3 5 s3 4 p5 Thus set CBound2p1 p5 consists 26 clauses grouped 1922 34 SAT encoding multiplicativity 20 21 22 Multiplicativity complete multiplicativity 1 sequences encoded SAT straightforward way Assuming Boolean sequence p1 pn encodes 1 sequence x1 xn logical value 1 encodes numerical value 1 logical value 0 encodes numerical value 1 SAT encoding fact x jk x j xk captured following clauses enumerate combinations values x j xk prod jk p j pk p jk p j pk p jk p j pk p jk p j pk p jk 23 Then multiplicativity x1 xn captured instances 23 coprime pairs j 2 complete multi plicativity sequence x1 xn captured instances 23 j k product j k generated 112 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 For complete multiplicativity optimisation possible fact sequence x j2 1 It seen complete multiplicativity condition expressed union sets clauses j N cmulti deﬁned 1 n cmulti pi prod jk prime j2 j 1 cases applies j k nontrivial divisors 35 Putting We ingredients need deﬁne CNF formulae experiments First deﬁne CNF encoding ﬁnite sequences length n having discrepancy bounded C It deﬁned conjunction formulae expressing C boundedness relevant subsequences recall 1 sequence length exceed C C bounded edpC n cid8cid21 cid7 n C1 d1 CBoundC pd p2d pcid7ndcid8d 24 We assume different values d sets CBoundC pd x2d pcid7ndcid8d share input propositions p1 pn use different auxiliary propositions sk j Then following theorem direct consequence Theorem 5 cid14 varsedpC n Theorem 9 For assignment I p1 pn 0 1 following holds exists extension I I 0 1 model edpC n Ip1 Ipn encodes 1 sequence x1 xn length n discrepancy C In experiments use optimisations present form propositions Both reduce signiﬁcantly size unsatisﬁability certiﬁcate noticeable effect running time The ﬁrst optimisation allows remove dont care propositions affect satisﬁability problem The second optimisation breaks symmetry problem Proposition 10 Suppose 1 sequence a1 C bounded n odd C n C odd Then arbitrary value b 1 1 sequence a1 b C bounded cid2 j i1 ai odd j odd Thus conditions proposition Proof It suﬃces notice cid2 j i1 ai C 1 sequence extended arbitrarily cid2 Symmetry breaking 41 wellknown technique reduce search combinatorial problems In context propo sitional satisﬁability solution symmetry 42 deﬁned bijection set assignments truth values set solution variables 4344 As discrepancy 1 sequence x1 xn bounded C discrepancy x1 xn bounded C permutation l cid16 l l literal solution symmetry SAT encoding EDP This symmetry induces equivalence relation set assignments Notice assignments equivalence class generated symmetry equivalence relation satisﬁes formula class contains satis fying assignment A symmetry breaking predicate 41 propositional formula true assignment equivalence class generated symmetry equivalence relation Conjoining symmetry breaking predicate formula ensures SAT solver ﬁnds representative assignment equivalence class It clear pl equivalence breaking predicate encoding EDP l 1 1 n We summarise argument proposition Proposition 11 Symmetry breaking For n 0 C 0 formula edpC n satisﬁable formula edpC n pl satisﬁable arbitrary ﬁxed value l 1 l n Proposition 11 introduces simple form symmetry breaking It interesting problem identify forms symmetry encoding EDP example symmetry solutions 4546 investigate effect performance SAT solvers From propositional satisﬁability point view study multiplicative completely multiplicative sequences bounded discrepancy seen example streamlining 47 tunnelling 48 Notice multiplicative completely multiplicative sequences bounded discrepancy interesting right mentioned B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 113 Section 21 question discrepancy unrestricted 1 sequences unbounded equivalent question discrepancy completely multiplicative 1 sequences unbounded We deﬁne sets clauses edpmC n edpC n cid22 prod jk 1 jkn jk coprime jkn edpcmC n edpC n ncid22 i1 cmulti The following statement direct consequence Theorem 9 cid14 varsedpmC n Theorem 12 For assignment I p1 pn 0 1 following holds exists extension I I cid14 varsedpcmC n 0 1 model edpmC n edpcmC n respectively 0 1 extension I I Ip1 Ipn encodes multiplicative completely multiplicative respectively 1 sequence x1 xn length n discrepancy C The completely multiplicative case optimised based following observation Proposition 13 The discrepancy completely multiplicative 1 sequence x1 xn bounded C C 0 x1 xn C bounded Proof The necessary condition trivial deﬁnition discrepancy For suﬃcient condition C bounded sequence x1 xn d 1 subsequence xd x2d xcid7ndcid8d C bounded Let 1 j cid7ndcid8 Then cid2 cid2 cid2 cid2 j j j j i1 xid i1xi xd xd i1 xi C cid2 i1 xi Finally notice fact x1 xn multiplicative imply x1 xn symmetry breaking described Proposition 11 applicable multiplicative completely multiplicative sequences 4 Results Experimental setting In experiments use Treengeling parallel cubeandconquer ﬂavour Lingeling SAT solver 49 version aqw winner application SATUNSAT category SAT13 competition 50 Glucose solver 51 version 30 winner application certiﬁed UNSAT category SAT13 competition 50 All experiments conducted PCs equipped Intel Core i52500K CPU running 330 GHz 16 GB RAM Both solvers blackbox manner default parameters exception activity heuristics 52 contributes selection variables branching tuned reduce size unsatisﬁability certiﬁcate case C 2 described In ﬁrst series experiments investigate discrepancy unrestricted 1 sequences We encode3 existence 1 discrepancy C sequence length n SAT described Section 3 We deploy optimisations described Proposition 10 Proposition 11 We choose l ﬁx xl 1 colossally abundant number 53 divisors contribute homogeneous sequences Speciﬁcally C 2 choice l 120 beneﬁcial satisﬁable instances l 60 results better reduction size unsatisﬁability proof described For consistency presentation use l 60 experiments C 2 We establish maximal length 1 sequence discrepancy 2 1160 The CNF formula edp2 1160 contains 11 824 propositions 41 884 clauses It takes Treengeling 430 seconds ﬁnd satisfying assign ment hardware conﬁguration One sequences length 1160 discrepancy 2 Appendix B When applied CNF formula edp2 1161 contains 11 847 propositions 41 970 clauses Treengeling reports unsatisﬁability In order corroborate statement use Glucose It takes solver 800 sec onds generate DRUP certiﬁcate unsatisﬁability The correctness generated unsatisﬁability certiﬁcate independently veriﬁed druptrim tool 37 The size certiﬁcate 188 GB An experimental exploration effect different solver options size certiﬁcate revealed setting vardecay option Glucose controls solver activity heuristic 0995 reduces unsatisﬁability certiﬁcate roughly 125 167 GB Interestingly deviating default options 3 The problem generator results http wwwcsc livac uk konev edp 114 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 Table 1 Maximal length 1 sequences bounded discrepancy Discrepancy bound C 1 C 2 C 3 Completely multiplicative 9 246 127 645 Multiplicative Unconstrained 11 344 127 645 11 1160 130 000 unsatisﬁability cases reported detrimental effect solver performance default values experiments The time needed verify certiﬁcate comparable time needed generate The RUP unsatisﬁability certiﬁcate DRUP certiﬁcate information deleted clauses stripped 8502 MB takes drup trim tool ﬁve half hours verify Combined Theorem 9 experiments yield proof following statement Theorem 14 The length maximal 1 sequence discrepancy 2 1160 Thus prove Erd os discrepancy conjecture holds true C 2 When applied edp3 n increasing values n method produce sequences discrepancy 3 length region 14 000 solvers allowed run weeks Since multiplicativity complete multiplicativity restrictions reduce severely search space hope better performance perform second series experiments investigate discrepancy bound multiplicative completely multiplicative sequences Notice optimisation described Proposition 11 applicable case fact x1 xn multiplicative imply x1 xn We saw Example 2 multiplicative sequences discrepancy 1 longer completely multiplicative sequences The longest completely multiplicative sequence discrepancy 2 known contain 246 elements 54 tests edpm longest multiplicative sequence discrepancy 2 344 elements Thus wouldnt unreasonable expect longest multiplicative discrepancy 3 sequence longer longest completely multiplicative probably harder ﬁnd It turns expectation wrong accounts We establish length maximal 1 completely multiplicative discrepancy 3 sequence coincides length maximal 1 multiplicative discrepancy 3 sequence equal 127 645 It takes Treengeling hour ﬁfty minutes ﬁnd satisfying assignment edpcm3 127 645 contains 3 484 084 propositions 13 759 785 clauses hour thirty ﬁve minutes ﬁnd satisfying assignment edpm3 127 645 contains 3 484 084 propositions 14 813 052 clauses It takes Glucose solver hours generate approximately 128 GB DRUP proof unsatisﬁability edpcm3 127 646 contains 3 484 084 propositions 13 759 809 clauses half hours generate approximately 156 GB DRUP proof unsatisﬁability edpm3 127 646 contains number propositions 14 813 076 clauses The optimisation Proposition 13 leads reduction problem size completely multiplicative case 446 753 propositions 1 738 125 clauses length 127 645 446 759 propositions 1 738 149 clauses length 127 646 signiﬁcant reduction Treengeling running time 20 30 minutes respectively size DRUP certiﬁcate 084 Gb So computeraided proof sharp bound sizes maximal sequences bounded discrepancy Theorem 15 The length maximal multiplicative 1 sequence discrepancy 3 equals length maximal completely multi plicative 1 sequence discrepancy 3 127 645 Unrestricted sequences discrepancy 3 longer 127 646 requiring ﬁrst 127 600 elements sequence completely multiplicative generate 130 000 long EDP3 sequence hour ﬁfty min utes establishing slightly better lower bound length 1 sequences discrepancy 3 Theorem 15 The solvers struggle expand Notice optimisation Proposition 13 applicable We summarise known facts discrepancy unrestricted multiplicative completely multiplicative sequences Table 1 We highlight boldface cases lengths maximal sequences different kinds equal 5 Conclusions We demonstrated SATbased methods tackle longstanding mathematical questions related discrepancy 1 sequences To best knowledge ﬁrst use automatically generated unsatisﬁability certiﬁcates formal proofs nontrivial mathematical statements As result able identify exact boundary B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 115 satisﬁability unsatisﬁability encoding EDP C 2 identifying longest sequences discrepancy 2 We established surprising fact lengths longest multiplicative completely multiplicative sequences discrepancy 3 coincide The result helps establish novel lower bound length longest discrepancy 3 sequence The general question existence ﬁnite bound length 1 sequences discrepancy 3 Erd os conjecture C 3 remains open Considering tenfold gap sizes unrestricted discrepancy 3 sequences solvers ﬁnd maximal completely multiplicative discrepancy 3 sequences fresh ideas conjecture unlikely settled bruteforce analysis helped modern SAT solver technology There noticeable asymmetry ﬁndings The fact sequence length 1160 discrepancy 2 relatively easily checked manually It harder impossible verify correctness discrepancy bound 127 645long sequences On hand improvements method shortened Wikipediasize 13 GB proof reported 30 tenfold passing psychological barrier 1 GB probably longest proofs nontrivial mathematical result It equally improbable mathematician verify hand billion half billion automatically generated proof lines Having said reduction proof size useful future analysis attempt identify patterns lemmas produce compact proof amenable human comprehension Until humancomprehensible proof epistemic status results remains peculiar know proof exists handle check thirdparty tool analyse transform understand To extent proof recognised proof subject foundational debate future mathematics goes scope article Acknowledgements The authors like thank Armin Biere Marijn Heule Pascal Fontaine Donald E Knuth Laurent Simon Laurent Théry helpful discussions comments ideas Appendix A Proof Proposition 4 In section proof technical result main text We restate proposition readers convenience Proposition 4 Let cid3p1 pn deﬁned Then For assignment I varscid3p1 pn 0 1 I satisﬁes cid3p1 pn 1 j n 1 k n Isk j 1 jcid5 i1 Ipi k ii For 01sequence a1 0 1n exists assignment I varscid3p1 pn 0 1 Ipi ai cid2 1 n I satisﬁes cid3p1 pn r n j n j i1 ai r Isk j 0 r k n Proof The proof proceeds induction lexicographical partial order pairs nonnegative integers j k j cid14 k cid14 cid14 j j cid14 k k iff j j Consider cases Suppose j k 1 Then formula 8 conjuncts cid3np1 pn instantiates s1 1 cid14 Fix n 1 Therefore assignment I I satisﬁes cid3np1 pn Is1 1 0 0 Is0 satisfying assignment Is1 statement proposition case k j 1 s1 0 0 1 It follows Is1 Suppose j 1 k 1 For satisfying assignment I Isk p1 s1 0 s0 p1 1 Furthermore 0 1 Ip1 equivalent s0 0 1 0 9 conjunct cid3np1 pn cid2 1 i1 Ipi k Thus statement proposition holds true On hand k 1 case Suppose j 1 k 1 For satisfying assignment I Isk satisfaction 8 By induction hypothesis later equivalent Ip j 1 turn equivalent i1 Ipi k cid2 j j 1 Isk j1 i1 Ipi k j1 1 Isk1 p j 1 j1 j1 i1 Ipi k 1 cid2 cid2 ii First notice assignment I p p1 pn 0 1 extended unique way assignment I varscid3p1 pn 0 1 Indeed satisfaction 9 10 deﬁnes uniquely values satisfying assignment j cases 0 j k n k 0 0 j n respectively Further satisfaction condition 8 I sk 116 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 values I remaining variables sk remaining condition r n j n cid2 j 1 k n 1 j n deﬁned uniquely induction The j 0 r k n follows item i1 ai r Isk cid2 j Appendix B A sequence length 1160 discrepancy 2 We graphical representation sequences length 1160 obtained satisfying assignment computed Treengeling solver Here stands 1 1 respectively References 1 W McCune Solution Robbins problem J Autom Reason 19 3 1997 263276 httpdxdoiorg101023A1005843212881 2 K Appel W Haken Every map colourable Bull Am Math Soc 82 1976 711712 3 TC Hales A proof Kepler conjecture Ann Math 162 3 2005 10651185 httpdxdoiorg104007annals20051621065 4 A Bundy Automated theorem provers practical tool working mathematician Ann Math Artif Intell 61 1 2011 314 httpdxdoiorg 101007s1047201192488 5 J Avigad J Harrison Formally veriﬁed mathematics Commun ACM 57 4 2014 6675 httpdxdoiorg1011452591012 6 CWH Lam L Thiel S Swiercz The nonexistence ﬁnite projective planes order 10 Can J Math 41 6 1989 11171123 httpdxdoiorg 104153CJM19890494 7 T Tymoczko The fourcolor problem philosophical signiﬁcance J Philos 6 2 1979 5783 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 117 8 N Robertson D Sanders P Seymour R Thomas The fourcolour theorem J Comb Theory Ser B 70 1 1997 244 9 G Gonthier Formal proofthe fourcolor theorem Not Am Math Soc 55 11 2008 13821393 10 TC Hales J Harrison S McLaughlin T Nipkow S Obua R Zumkeller A revision proof Kepler conjecture Discrete Comput Geom 44 1 2010 134 httpdxdoiorg1010079781461411291_9 11 G Gonthier A Asperti J Avigad Y Bertot C Cohen F Garillot SL Roux A Mahboubi R OConnor SO Biha I Pasca L Rideau A Solovyev E Tassi L Théry A machinechecked proof odd order theorem Proceedings 4th International Conference Interactive Theorem Proving Lecture Notes Computer Science vol 7998 2013 pp 163179 12 J Beck WWL Chen Irregularities Distribution Cambridge University Press Cambridge 1987 13 B Chazelle The Discrepancy Method Randomness Complexity Cambridge University Press New York 2000 14 J Matoušek Geometric Discrepancy An Illustrated Guide Algorithms Combinatorics vol 18 Springer 1999 15 J Beck VT Sós Discrepancy theory RL Graham M Grötschel L Lovász Eds Handbook Combinatorics vol 2 Elsevier Amsterdam 1995 pp 14051446 16 N Alon Transmitting ndimensional cube Discrete Appl Math 3738 1992 911 httpdxdoiorg1010160166218X9290121P 17 S Muthukrishnan A Nikolov Optimal private halfspace counting discrepancy Proceedings 44th Symposium Theory Computing STOC 12 ACM New York NY USA 2012 pp 12851292 18 W Chen A Srivastav G Travaglini A Panorama Discrepancy Theory Lecture Notes Mathematics vol 2107 Springer International Publishing 2014 19 J Matoušek J Spencer Discrepancy arithmetic progressions J Am Math Soc 9 1 1996 195204 httpdxdoiorg101090S0894034796 001750 20 KF Roth Remark concerning integer sequence Acta Arith 9 1964 257260 21 D Bilyk Roths orthogonal function method discrepancy theory new connections W Chen A Srivastav G Travaglini Eds A Panorama Discrepancy Theory Lecture Notes Mathematics vol 2107 Springer 2014 pp 71158 22 P Erd os Some unsolved problems Mich Math J 4 3 1957 291300 23 N ˇCudakov Theory characters number semigroups J Indian Math Soc 20 1956 1115 24 A Nikolov K Talwar On hereditary discrepancy homogeneous arithmetic progressions CoRR arXiv13096034v1 25 T Gowers Erd os arithmetic progressions Erd os Centennial Conference httpwwwrenyihuconferenceserdos100programhtml 2013 accessed April 10 2014 26 P Borwein SKK Choi M Coons Completely multiplicative functions taking values 1 1 Trans Am Math Soc 362 12 2010 62796291 httpdxdoiorg101090S000299472010052353 27 ARD Mathias On conjecture Erd os ˇCudakov B Bollobás A Thomason Eds Combinatorics Geometry Probability Proceedings Conference Dedicated Paul Erd os Occasion His 80th Birthday Cambridge University Press 1993 28 D Polymath Erd os discrepancy problem Polymath wiki httpmichaelnielsenorgpolymath1indexphptitleThe_Erd os_discrepancy_problem 2010 accessed April 10 2014 2009 accessed April 10 2014 29 T Gowers Is massively collaborative mathematics possible httpgowerswordpresscom20090127ismassivelycollaborativemathematicspossible 30 B Konev A Lisitsa A SAT attack Erd os discrepancy conjecture CoRR arXiv14022184 31 B Konev A Lisitsa A SAT attack Erd os discrepancy conjecture C Sinz U Egly Eds Proceedings 17th International Conference Theory Applications Satisﬁability Testing SAT 2014 Lecture Notes Computer Science vol 8561 Springer 2014 pp 219226 32 R Le Bras CP Gomes B Selman On Erd os discrepancy problem Proceeding 20th International Conference Principles Practice Constraint Programming CP 2014 Lecture Notes Computer Science vol 8656 Springer 2014 pp 440448 33 TM Apostol Introduction Analytic Number Theory Undergraduate Texts Mathematics Springer New York NY USA 1976 34 W Rautenberg A Concise Introduction Mathematical Logic 3rd edition Springer New York 2010 35 A Biere M Heule H van Maaren T Walsh Eds Handbook Satisﬁability Frontiers Artiﬁcial Intelligence Applications vol 185 IOS Press 36 EI Goldberg Y Novikov Veriﬁcation proofs unsatisﬁability CNF formulas Proceedings Design Automation Test Europe Conference Exposition DATE 2003 37 March 2003 Munich Germany 2003 pp 1088610891 37 M Heule WA Hunt Jr N Wetzler Trimming checking clausal proofs Proceedings Formal Methods ComputerAided Design FMCAD Amsterdam 2009 2013 IEEE 2013 pp 181188 38 O Roussel VM Manquinho PseudoBoolean cardinality constraints A Biere M Heule H van Maaren T Walsh Eds Handbook Satisﬁa bility Frontiers Artiﬁcial Intelligence Applications vol 185 IOS Press Amsterdam 2009 pp 695733 39 C Sinz Towards optimal CNF encoding Boolean cardinality constraints Principles Practice Constraint Programming Proceedings 11th International Conference CP 2005 Sitges Spain October 15 2005 Lecture Notes Computer Science vol 3709 Springer 2005 pp 827831 40 GS Tseitin On complexity derivation propositional calculus AO Slisenko Ed Studies Constructive Mathematics Mathematical Logic Part 2 Consultants Bureau New York 1970 pp 115125 41 JM Crawford ML Ginsberg EM Luks A Roy Symmetrybreaking predicates search problems Proceedings Fifth International Conference Principles Knowledge Representation Reasoning KR96 Morgan Kaufmann 1996 pp 148159 42 DA Cohen P Jeavons C Jefferson KE Petrie BM Smith Symmetry deﬁnitions constraint satisfaction problems Constraints 11 23 2006 43 R Backofen S Will Excluding symmetries constraintbased search Proceedings 5th International Conference Principles Practice Constraint Programming CP99 Lecture Notes Computer Science vol 1713 Springer 1999 pp 7387 44 IP Gent KE Petrie JF Puget Symmetry constraint programming F Rossi P van Beek T Walsh Eds Handbook Constraint Programming 45 M Heule T Walsh Symmetry solutions Proceedings TwentyFourth AAAI Conference Artiﬁcial Intelligence AAAI 2010 AAAI Press 46 C Hartman M Heule K Kwekkeboom A Noels Symmetry gardens eden Electron J Comb 20 3 2013 P16 47 CP Gomes M Sellmann Streamlined constraint reasoning Proceedings 10th International Conference Principles Practice Constraint Programming CP 2004 Lecture Notes Computer Science vol 3258 Springer 2004 pp 274289 48 M Kouril JV Franco Resolution tunnels improved SAT solver performance Proceedings 8th International Conference Theory Applications Satisﬁability Testing SAT 2005 Lecture Notes Computer Science vol 3569 Springer 2005 pp 143157 49 A Biere Lingeling plingeling treengeling entering SAT competition 2013 Proceedings SAT Competition 2013 University Helsinki 50 A Balint A Belov MJH Heule M Järvisalo Eds Proceedings SAT Competition 2013 University Helsinki 2013 51 G Audemard L Simon Glucose 23 SAT 2013 competition Proceedings SAT Competition 2013 University Helsinki Helsinki 2013 Helsinki 2013 pp 5152 pp 4243 115137 2010 Elsevier 2006 pp 329376 118 B Konev A Lisitsa Artiﬁcial Intelligence 224 2015 103118 52 N Eén N Sörensson An extensible satsolver E Giunchiglia A Tacchella Eds Proceedings 6th International Conference Theory Applications Satisﬁability Testing SAT 2003 Lecture Notes Computer Science vol 2919 Springer 2003 pp 502518 53 L Alaoglu P Erd os On highly composite similar numbers Trans Am Math Soc 56 3 1944 448469 54 D Polymath Human proof completely multiplicative sequences discrepancy greater 2 httpmichaelnielsenorgpolymath1indexphp titleHuman_proof_that_completely_multiplicative_sequences_have_discrepancy_at_least_2 2011 accessed April 10 2014