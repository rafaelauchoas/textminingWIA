Artificial Intelligence 84 1996 113150 Artificial Intelligence Default reasoning classical logic Rachel BenEliyahu ay Rina Dechter bl Matirematics Computer Science Department BenGurion University Negev BeerSheva 84105 Israel b Information Computer Science University Calqornia Irvine CA 92717 USA Received December 1993 revised May 1995 Abstract In paper propositional default theories characterized classical propo sitional theories finite default theory classical propositional theory onetoone correspondence models extensions This means computing extensions answering queries coherence setmembership setentailment reducible propositional satisfiability The general transformation expo superset network default theories nential tractable subset ZDTa default theories Consequently coherence setmembership class 2DT disjunctionfree NPcomplete setentailment coNPcomplete This work paves way application decades research efficient algorithms satisfiability problem default reasoning For example propositional satisfiability regarded constraint satisfaction problem CSP work enables use CSP techniques default reasoning To illustrate point use taxonomy tractable CSPs identify new tractable subsets Reiters default logic Our procedures allow computing stable models extended logic programs 1 Introduction artificial Researchers widely areas including diagnostic intelligence declarative reasoning Reiters default logic 291 2 attractive variety representations problems 301 theory speech acts 281 natural language Most work author graduate student Cognitive Systems Laboratory Computer Science Department University California Los Angeles CA USA Corresponding author Email rachelQcsbguacil Email dechtericsuciedu In paper mention default logic mean Reiters default logic OOO43702961500 1996 Elsevier Science BV All rights reserved SSDIOOO437029500095X I14 R BenEliyuhu R DechterAriijiciul Intelligence 84 1996 Il3150 concept extension shown Recent research default propositional 251 inheritance processing shown default embedded naturally logic programs semantics However knowledge 4161 specified hierarchies exceptions II Most importantly logic programs classical negation negation default logic default logic provides natural way default presented Reiter computes extensions procedure tricky Moreover arbitrary default indicates complexity answering basic queries propositional logic Reiter theory 1734 simple logic high X IIcomplete theories In paper confront problem default NPhard 19331 classical propositional theories class theories effective ways computing setmembership logic default identification theories Our approach setentailment difficulties translating leads identification default extensions testing new tractable subsets functions We introduce logical symbolsand concept nzetainterpretationstruth assign truth val ues clauses properties models enables model given default classical proposi finite propositional tional theory onetoone models clas sical theory extensions default theory Queries coherence entailment logic default logic propositional default define truth function default theory compiled reduces computation queries satisfiability logic reducible theory Studying correspondence The main advantage mapping satisfiability algorithm deterministic significant introduces default computing theory previous algorithms 3 propositional method propositional extension certain subsets default theories Our translation general However 2DT translation theoriesthe rzetwork default class disjunctionfree forbidden embed extended Therefore computing task explored extensively Moreover extensions finite produce exponential theories socalled 1 l theories logic programs answer sets coincide extensions finding extensions default 161 class disjunctionfree logic version inheritance sublanguage 2default tractable The class 2DT formulas disjunction logic programs 2DT applicable techniques developed It shown 11181933 networks theories includes default default As byproduct translation learn coherence problem class 2DT NPcomplete setentailment class 2DT coNPcomplete 4 The translation additional NPcomplete subclasses Note general provides general problem setmembership problem framework problems Xc IIhard identifying 3 Of course exists bruteforce algorithm according clauses extension theory Though finite number subsets 4 See Section 5 I details bruteforce algorithm extremely expensive check subset consider clear sufficient R BenEliyahu R DechterArtiial Intelligence 84 1996 113150 115 Once default theory expressed propositional theory apply existing heuristics algorithms propositional satisfiability In particular topological considerations identify new tractable subsets constraint satisfaction techniques effectively applied tasks default reason ing The rest introduction organized follows following section discuss connections default logic logic programming inheritance networks demonstrate work presented direct influence computational issues fields In Section 12 introductory discussion basic ideas contributions paper explain organization 11 Default logic inheritance networks logic programs 111 Reiters default logic We begin brief introduction Reiters default logic 291 Let C firstorder language countable alphabet A default theory pair A D W D set defaults W set closed wellformed formulas wffs C A default rule form crp1p Y QPI y formulas C 5 1 A default IS written syntax LY pi Y called prerequisite notation pre 6 PI P justifications notation 8 y conclusion notation concl 6 The intuition default stated I believe cy I reason believe pi false I believe y A default Y Py normal y 3 A default seminormal form LY I A yy A default theory closed firstorder formulas D W closed y The set defaults D induces extension W Intuitively extension maximal set formulas deducible W defaults D Let E denote logical closure E C We use following definition extension Definition 11 Extension let D W closed default theory Define 29 Theorem 211 Let E G C set closed wffs 1 Eo W 2 foriOEilEiUyIaplPyEDwhereaEEiandpl Pn El E extension A iff ordering E Uz Ei Note appearance E formula Eil Many tasks default theory A formulated following queries 5 Empty justifications equivalent identically true proposition true 3 11 116 R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 l Coherence Does A extension Setmembership Given set clauses T T contained l Setentailment Given set clauses T T contained In Section 6 consider special case setmembership extension A extension A If clausemembership set T single clause In paper focus propositional default logic It shown Xcomplete theories class remains 17341 Membership entailment restricted class default theories shown T restricted contain single Xcomplete literal 17341 complete In paper tasks easier 6 subclass 2DT default networks logic programs The following theories powerful subsections default problem coherence seminormal normal propositional respectively subclasses It shown embed inheritance elaborate 112 Inheritance networks network default theories An inheritance network knowledge representation allowing scheme knowledge representational hierarchy taxonomic organized share group common properties abstraction properties individuals created individuals Inheritance inherit multiple classes allowed For information subject 11371 called network default subclass default formal semantics notion sound proposed providing abstraction compactness inference theories If Etherington II theories suitable inheritance networks Definition 12 Network default iff satisfies theov following conditions 1 W contains 111 A default theory A network theory literals b disjuncts form LY V cx I literals formulas negations atomic 2 D contains normal seminormal LY p A y1 A A yP Y 3 yi literals defaults form Y 3p Etherington suggests formalizing inheritance relations network default way extension network default coherent conclusions Thus queries defined coherence relevant dealing network default theories draw inheritance network setmembership setentailment theory correspond theories set represents 113 Default theories logic programs Logic programming paradigmatic way representing logic Originally declarative manner symbolic restricted Horn clauses Its expressive power greatly language logic programs improved programs data Assuming polynomial hierarchy collapse level R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 117 introduction negation body rules This negation generally interpreted negation default classical negation resulting grounded predicate considered false iff proved program For overview field 21 One prominent semantics logic programs stable model semunrics 41416 Gelfond Lifschitz 161 shown stable model semantics naturally generalized class extended logic programs types negationclassical negation negation defaultare An extended logic program set rules form Oplpmnotqnotqn 2 r p q literals negation default operator Stable model semantics associates set models unwer sets extended logic program Gelfond Lifschitz established onetoone correspondence extended logic programs disjunctionfree default theories identifying rule form 2 default p1 AApm NqlNq r0 N q literal opposite q P 1P NP P They shown extension default theory corresponds answer set twin logic program A similar idea introduced Bidoit Froidevaux 4 The discussion suggests concluding algorithm computes extensions default theory compute answer sets logic programs stable model semantics Moreover semantics attached default theory provides meaning logic program 12 The main contribution paper The exposition sections paper involves technical issues familiarize reader basic ideas In paper provide way translate finite propositional default theory classical propositional theory queries default theory specifiable queries satisfiability entailment classical propositional logic In order reader feel translation present default theories considered Reiters original paper default logic 29 1 theory provide corresponding propositional theory We explain delving technical details principle mapping Example 13 Consider following default theory 29 Example 231 D w0 This theory extensions C D We result realized translation For literal X IC YD let lx atom 118 R BenEliyahu R DechterArtifcial Intelligence 84 1996 113150 intuitive meaning X extension So example 1o meaning 7D extension Applying vocabulary set constraints extension D W The default rule extension TD extension We write propositional constraint words C D extension C consistent extension logic follows7 imposes CD TlC ID Accordingly extension default rule 1D extension We write propositional constraint imposes DX C D 1c logic 3 4 If TD extension extension rule derive TD activated case C default CD C consistent The applies C Therefore add constraints 5 6 14 1 C IC d If combine M MZ In Ml 1 MI corresponds 36 formulas arrive theory models false false In kt2 I extension C M2 corresponds 7D true Ic extension true 1o Example 14 Consider following default theory 129 Example 221 D w 0 This theory extension TD F We result realized IE I The default translation This time use vocabulary Ic rule ClD constraint imposes Io C ID default rule DlE imposes constraint TIo 1E default rule ETF imposes constraint IYF 7 8 9 Since extensions supposed minimal assert D extension case C rule derive TD activated C consistent Same IE TF Therefore add constraints extension default ClD usual material implication classical logic R BenEliyahu R DechterIArtijicial Intelligence 84 1996 113150 IID iC IYE zd I hE Since default derives X add requirement 119 10 11 12 13 If combine formulas 7 13 arrive theory model true atOm 1D I This model corresponds extension lD yF Example 15 Consider following default theory 29 Example 26 p911 w 0 We translate theory follows The formula constrains default rule satisfied The second conveys claim extension minimal contains YA case TA derived default D TA extension The propositional theory inconsistent default theory consider extension In sequel section formally justify translations illustrated present general algorithms examples The rest paper orga nized follows After introducing preliminary definitions Section 2 provide Section 3 concept model default theory explain theory translation In Sections 4 5 discuss models presented Section 3 treated classical models propositional logic We present algorithms associate finite default theory classical propositional theory characterizes extensions Then Section 6 use constraint satisfaction techniques approach leads discovery new tractable subsets default logic Section 7 contains concluding remarks missing proofs appear Appendix A Before moving like clarify subtle important point Some decision problems discuss proven NEcomplete CONE complete subsets propositional default theories 19331 This means definition actually exists polynomial translation subsets propositional theories queries translated default theories answer able solving satisfiability corresponding classical theories The consequences work presented goes initial observation First direct simple translation translation require encoding Turing 120 R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 theory In words subclasses default logic complexity propositional Second translation NP coNPcomplete lower complexity machines problems shown NP coNPcomplete translation provide problems model classical means extension original default finite propositional theoriesnot tool identifying problem coherence coNP In general subclass membership setentailment complexity translation NP coNP additional subclass restricted means default theory derived translation theory Third translation subclasses default setmembership exponential polynomial problems coherence entailment applies pezct 8 corresponds class theories NP subclassesand implied decision 2 Definitions preliminaries P lowercase symbols uppercase We denote propositional letters P Q R propositional letters p q I formulas Y literals c cl 2 The denoted LL The set resolvents clauses cr c2 closure set clauses T set obtained T fixed resolvents P literals d dl disjunctions clause denoted res ct c2 The resolution repeatedly point resolving pairs clauses T adding conjunctions reached literals clauses A formula conjunctive normal form CNF iff conjunction clauses normal form DNF disjunctive iff disjunction formula equivalent conjunctions CNF DNF The function A formula literals Each CNF equivalent assume formula input formula When convenient refer clause set literals formula formulas9 respectively DNF cu returns formula LY Although formula equivalent CNF DNF formulas DNF set sets literals formulas An T CNF set clauses formula S f S set atoms CNF respectively DNF functions CNF theory T pair set propositional return unique output brief theory A propositional DNF theory interpretation truth assignment f satisfies formulas premises T T means Y In propositional interchangeably S A model T interpretation symbols T T t means LY propositionally T entails model T model provable logic T I iff T k Hence use notations The relation interpretations true subset set symbols defined follows 81 82 iff set 82 assigns set interpretations I iff 0 minimal 61 assigns symbols true An interpretation 9 0 I 8 6 0 We thank Mirek Truszczyfiski y Two formulas 0 equivalent suggesting appropriate term iff p p cy R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 121 logical closure theory T Since logical closure The logical closure theory T denoted T set w T k w How infinite set finite notion prime compute obvious compute implicates presented Reiter Kleer explicitly However theory logical closure compute set represent 321 Definition 21 A prime implicate set T clauses clause c 1 Tbcand 2 proper subset c c T k c The prime implicates theory T denoted PIT As Reiter resolve pairs T delete subsumed clauses lo fixed point 26 improvements example repeatedly method Kleer note bruteforce method computing PIT clauses T add resolvents reached r1 There clear Nevertheless computed general problem special cases size2 clauses NPhard 0n3 time solves satisfiability implicates prime Throughout paper stated assume loss theories CNR W set clauses justification single clause formula formulas use default generality conclusion default default consistent12 3 Propositional semantics default logic general interpretation capture belief set set formulas An extension A single classical formulas interpretation formula negation belongs true believed idea belief set In words set model satisfies belief set The reason classical assigns truth value formula case represent belief set single model identifying agents set beliefs use metainterpretations represent belief sets In metainterpretations We propose truth values assigned assign clause 7P belief set assigned represents belief set This motivates clauses truth value true iff belongs propositional following definition atoms intuition belief set If P false metainterpretation Definition 31 Metainterpretation interpretation 8 L pair S f S set clauses L f classical propositional symbols A meta set symbols Cs Zc c E S I3 That Let L set propositional interpretation lo A clause ct subsumes clause cz iff ct c cs ca called subsumed clause 5 Chapter 51 It clear method generate tautologies exceptions easy detect handle Hence computing prime implicates examples paper omit tautologies l2 Note default inconsistent justification simply ignore t3 We chose notation intuitively lC true means c In belief set 122 K BenEliyahu R DechterArtiJicial Intelligence 84 I 996 I IS150 f function atomic clause ls true false A clause belonging S called We usually interested belief set agent capable making logical classical manageable metainterpretation spirit arbitrary true These metainterpretation inferences Hence order size metainterpretations possible assume clause assigned supersets assigned formula n considered true iff clauses value true true In CNFcu state ideas summarized following definition satisfies formula iff c tautology Definition 32 Satisabifirv A metainterpretation 9 b c atomic clause c C c f ft true A metainterpretation formula cl A cz A A c 0 z cl A c A metainterpretation A c satisfies formula Ly propositional classical propositional 0 S f satisfies clause c logic 8 S f satisjes iff 1 n B c A logic iff satisfies CNF cu Note definition satisfiability desirable property case given formula 0 b Y iff 6 Example 33 Consider metainterpretation M2 Table 1 M2 RP M2 lP theory In analogy In classical propositional logic interpretation set symbols values case define metainterpretation default symbols So symbols set clauses way sure clause metainterpretation theory Metainterpretations question metainterpretations contains prime Hence set clauses given default following definitions assign considered truth values theory assignment truth classical interpretation clauses atomic atomic implicates possible extension extension representable represented theory We suggest Definition 34 Closure Let A D W default theory We set clauses S closure A iff S superset prime implicates possible extension A Definition 35 Interpretation metainterpretation S f S closure A Let A default theory An interpretation A Table I Three metainterpretations Ml M2 M3 IA T F F I A F I T Its T F T 1s T F T I P F F F 17PVE T T T R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 123 It easy closure S given default choose S set clauses closure W union set conclusions closure A theory A D W For example language A resolution D However general defined defaults like size S small We set primeA Definition 36 primeA Given default following sets theory A D W define l Co set conclusions I4 defaults D ffP1Pn C l pA resolution closure CD PIW We define primeA Let A D W default union pA A PI W l5 theory The set primeA Proposition 37 primeA closure A closure Let A default theory primeA Example 38 Consider following default theory A WTPVB PZ W P V B Co e A TA pA PZ W U CD U B A Therefore primeA P V B P A A B As later theory extensions l extension 1 El APB l extension 2 E2 7AP V B primeA superset prime implicates El E2 We want build interpretation S f A For reasons choose s primeA U 7P So IPvB Since ICsj 6 26 different later IA IA 1 fixed S Table 1 lists explained Ip Ip interpretations logic model theory interpretation satisfied model In classical propositional theory The set formulas theory formula spirit want define interpretation Ultimately want satisfies formula entailed default extension default set formulas entailed theory theory true models satisfies set consistent In model theory theory default default reasoning model theory If practice skeptical belongs models I4 Note assumed conclusion default single clause I5 Note definition means A belongs primeA iff belongs PIW 124 R BenEliyahu R DechterArtifrciul Intelligence 84 1996 113150 Since model supposed theory model default c follows Formally closed clause set clauses C c E C I true Z true represent extension required theory property deductively closure A metainterpretation 8 S f deductively Definition 39 Deductive closed iff satisfies 1 For atomic clauses c c c c c f true f I true 2 For atomic clauses c c f I true f I true 13 b rescc A model default theory satisfy clause W default D following sense Definition 310 Satisfying default fault theory A iff theop A metainterpretation 8 satisjies 1 For c E W 0 z c 2 For default D 6 satislies negation justifications preconditions satisfy satisfies conclusion We like clause model default theory satisfies reason true Definition 311 Being based default default following conditions B based theory A iff atomic clause c 0 b c A metainterpretation theory holds clause cl ci c c 0 z cl 1 c tautology 2 There 3 There clauses cl c2 B zclcz 4 c E w 5 There default Y I finc c E rescIc2 D 8 tZ CX 1 n 0 Pi Example 312 Consider following default theory A w Clearly Q closure A metainterpretation 1 interpretation set Q NOT extension A A Note 0 satisfies A based A Indeed B assigns true We define metainterpretation weak model default theories weak model theory A As later acyclic default model R BenEliyahu R DechterArtifcial Intelligence 84 1996 113150 125 Definition 313 Weak model Let A default interpretation 8 A closed 1 8 deductively 2 8 satisfies A 3 8 based A theory A weak model A In general weak models models default satisfy proof proof sequence defaults theory derive clause clause W Definition 314 Proof Let A D W default tation A A proof clause c respect St theory let 13 interpre 0 A sequence defaults S following 1 CE WUconclStconcl6 2 For 1 n pj E Si negation pj satisfied conditions hold 8 3 Forall 1 inpai s WUCOKZGTK_ Example 315 Consider following default theory A Clearly P Q R closure A metainterpretation IQ Ip interpretation Q proofs respect extension A 0 assigns true A Note 0 weak model A P set Q P NOT 19 A Indeed Definition 316 Model A atomic clause Let A default t9 satisfies proof respect theory A model A weak model 8 0 A Our central claim set formulas metainterpretation model satisfies extension A vice versa Formally default theory A Theorem 317 Modelextension A ifs model 8 A E s 1 0 z s Let A default theory A theory E extension This theorem suggests theory set T formulas satisfies T T included queries models follows A extension given default theory A D W translate queries iff model A iff satisfied model A extension extension model iff member Example 318 Consider default theory A Example 38 Recall A extensions 126 K BenEllvtrhu K LkchterArttjicial Intelligence 84 I 996 13150 o extension 1 El l extension 2 E2 APB TA P V B M 1 M2 Table 1 models El The set formulas A M3 based A M3 satisfies Definition 31 1 satisfied P conditions M2 satisfies 1 The set formulas equal equal Ml satisfies E2 M3 model atomic clause P The idea definition proof clause defaults propositional assign atomic clause index nonnegative W clause derivable way ensure require proof lower index Clauses wellfoundedness The following ensure justifications theorem conveys positive satisfied metainterpretation model satisfies inference An alternative integer clauses PIW index 0 way clauses order technique integers induce wellfoundedness idea Elkan supporting lo similar node TMS noncircular Theorem 319 Indexing A u function p 5 conditions hold proofs A weuk model 6 S f A model N atomic clause c following 1 c E w ifspc 0 2 If c W following conditions hold There default 6 cy I pc E D 0 satisjies Y atomic satisjj B cl E CNFa clause cz C cl PO pc b There atomic clauses cl und q c resolvent cl c 19 satises cl cz pc1pc2 pc c There atomic clause c C c B b c p c pc The theorem useful proving acyclic default theories weak model model A Acyclicity defined follows Definition 320 Dependency The dependency follows graph A respect gruph Let 1 default theory S closure A S G JS directed graph defined 1 For c E S node graph 2 There edge node c node c iff c W holds following conditions c C c b There c There clause c t S c t res c c default PI D c E Y c A default theory A acyclic respect closure S iff GJJ acyclic Hence A acyclic respect conditions Theorem 319 So conclude following S order Cdy induces S satisfies R BenEliyahu R DechterArtijicial Intelligence 84 I 996 113150 127 A P B JP A Fig 1 Dependency graph Theorem 321 Models acyclic default theory A 8 model A acyclic theories If 8 S f weak model Example 322 Example 38 continued The dependency 1 A acyclic respect S graph A shown Fig We model default theory minimal weak model For defined wrt subset 8 satisfies We 0 minimal set metainterpretations following partial order 6 8 iff set atomic clauses set atomic clauses metainterpretations I iff 8 8 I 8 6 0 fixed set atomic clauses minimality 0 satisfies Theorem 323 Minimality weak model A models Every model default theory A minimal 4 Expressing acyclic default theory propositional theory theory A viewed classical An interpretation S f default S Treat clause S propositional interpretation symbol value assigned f corresponding task identify classical A We constructing classical Given finite default propositional classical model versa S f section generalize logic symbol truth value clause Our ones models theory models satisfy theories closure A S models model A vice classical model PA In theory PJ characterizes theory S f In section concentrate acyclic default model A Cs f class finite default acyclic respect propositional theory A propositional approach interpretations If Ls f theories sense We demonstrate method example Example 41 Example 38 continued Consider ample 38 default theory A Ex WlPvB Recall A extensions l extension 1 El l extension 2 E2 TATP V B APB 12X R BewEliyhu R DechterArticiul Intelligence 84 1996 113150 Let SlPvBlA A B closure A A acyclic respect S For theory PA following set formulas 1 1P 2 IYPVB 2 3 I_ pB IA A 71P p 71A 14 71A 1 iA 7lA 1A IA IP I A II IB 1 IP A IpvB IB 1 lVB IP A lfVB 2 IB requirement requirements theory PA7 expresses model A The group The classical closed It formulas expresses 7P V B true says B 7P B resolvent 1P V B P B P subsets P V B Similarly true B true Note example formula model A deductively true model The second group formulas expresses fYfr A ipB lyp B belong requirement W formula A For example 1P V B belongs TP v B true default A PP formula true model group says A true model 1P S model satisfy second group says A add second P The group formulas says model group says A true model example way add A extension formula satisfy A formulas W consequences P extension defaults PA includes default A derive 1P formula 1 AA activated combination 1P A based A For A model use default AA The reader verify Ml M2 Table 1 models PAs If Ml equal set formulas M2 satisfies extension El set formulas look Ml A42 metainterpretations satisfies extension E2 equal Before presenting translates default definitions algorithm theory assumptions closure S default theory classical propo needed From A theory A contains clauses sitional assume clauses CNF negation justification We need following notational shortcuts For given A C closure A S define macros cons translate formulas L formulas Cs Intuitively clause c CNFcu atomic clause c c subset c I true ina says cy satisfied interpretation defined follows appear appear I If cy tautology 2 3 If Y atomic clause c tautology If LY nonatomic c clause ina f tautology ina ina true IS atomiccCc ICI Vd Ifaci ina Grinc If CNF ina inCNFa AAc 4 5 The function consp defined function Intuitively negation j3 satisfied interpretation lows cons consp means defined fol R BenEliyahu R DechterArtijcial Intelligence 84 1996 113150 129 consP inlI The algorithm shown closure A S propositional A The appealing features PAJ summarized theory Pbs characterizes following theorems Fig 2 compiles given finite propositional default theory A models Theorem 42 Let A finite acyclic default classical model PAs iff 8 model A theory S closure A 13 Algorithm TRANSLATEl begin Step 1 PA 0 Step 2 s s L c E W Step 3 PAS sinAconsAAcons3 Step 4 PAS PAS I Step 5 PAJ PAJ L A I II L 1 CICZC Step 6 For atomic clause c define 2 Ic2 cl c2 E ST cl c c2 I cr Ic E D E S c3 E resqc2 SC cl 1 cl E S cl c c R cIc I CIQ E SC E resctc2 DwPkh PIcED SUBSETreasonsc V inq Cl ES 1 RESOLUTIONreasonsc incl A idc2 V QXZEL 1 1 DEFAULTreasonsc V 4IE I ina Aconsj31 AbAconsPn Step 7 For atomic clause c W SC U R U D 8 PAJ PAS I false PAs Ps I SUBSETreasonsc V RESOLUTIONreasonsc V DEFAULTreasons c end Fig 2 An algorithm translates acyclic default theory propositional theory 130 K BenEliyuhu K lrchterAniciul hleliigence 84 1996 113150 Proof PA states conditions Definition 313 propositional weak model acyclic default 321 assertion holds mode1 default theory 0 logic theory Theorem Corollary 43 Let A u finite default closure A S Suppose let E c c t S 8 f I Therl theory acyclic respect Ipjs satisjiable 8 S f classical model As I E au extension A 2 E contains prime implicates PIE C E Proof The claim follows Theorems 42 317 To prove second claim implicate E tautology By definition S suppose c prime c t S Then definition PA 8 3 consistent model P case 0 b f So c E E extension 0 5 Translating cyclic default theories So tar shown finite acyclic default propositional theory PAJ theory A closure 0 S f default theory Ihr Ps 0 model theories questions coherence membership cycles This A In section general satisfiability We use Theorem 319 suggests interpretations imply entailment default grounded solving propositional verify 01 I S WC classical model result finite default duct use indices ory When finite default theories consideration requirement index expressed fact atomic clause index atomic clause assigned logic Let c stand lower stand number associated index associated c let cl c 1 number associated 2 We use notations shortcuts formulas Appendix B Using new index variables formulas express conditions Theorem 319 propositional logic express assertions propositional propositional logic The size formulas c enforce indices need Note ine GAJ dependency default prerequisite need clauses solve cyclicity index variables common cycle maxima1 I 1 Gs reside cycles partial order index clauses polynomial cl cz range S We exam graph A respect S cycle default consequent Indices needed range share share cycle number clauses dependency clauses If clause appearing graph Furthermore clauses bounded maximum In fact index variables range bounded length acyclic path strongly connected component R BenEliyahu R DechterArtijcial Intelligence 84 1996 113150 131 The strongly connected components subset C partition directed graph partition set xy E C nodes directed paths x y y x G The strongly connected identified default acyclic need indexing linear theory time 351 Note implied Theorem 321 components We summarize discussions algorithm theory A closure A S In addition finite default algorithm uses twoplace macro c words CY true clause c E cy c c component lower index c graph index c strictly LY c means oneplace macro true independently dependency computing P4s Y c defined follows I6 The function 1 If LY tautology 2 Y c true If LY c c clause component graph c Y c Z If LY c c clause c inac If CY ci A AliGnincic If Y CNF inarc inCNFac component I A c cl A c inac 3 4 5 Except Step 6 algorithm TRANSLATEl dependency dependency graph shown Fig 3 algorithm TRANSLATE2 identical The following theorems summarize properties transformation In theorems PAJ set formulas theory A closure A S algorithm TRANSLATE2 resulting translating finite propositional Fig 3 Theorem 51 Let A default theory Suppose s model PA let E c 1 c atomic 8 Zc Then satisjable 8 classical 1 E extension A 2 E contains prime implicates Proof Part 1 follows conditions 2 Theorem 317 observation Definition 313 Theorem 319 propositional proof 2 Corollary 43 similar P4s expresses logic The proof 0 Theorem 52 For extension E default Ps clause c E iflO b c theory A model 0 Proof Follows Theorem 51 Theorem 0 317 arguments similar proving These theorems suggest necessary sufficient condition coherence finite propositional theory I6 Note ina c undefined c Y contains nonatomic use situation occur clause problematic 132 R BenEliyuhu R DechterArtijicial Intelligence 84 1996 113150 Algorithm TRANSLATE2 Step 6 Step 6 For atomic clause c define S cl ccl E S cl c c R cq 1 cIc2 E S c E rescc2 DcaPr Pi laP PceD SUBSETreasonsc L ircc RESOLUTIONreasons c FxincIc Ainccl I DEFAULTreasons c v PlfAEJL ina c A cons p A A cons I Fig 3 Step 6 algorithm TRANSLATE2 Corollary 53 A default theory A extension iff Ps satisfiable Corollary 54 A set clauses T contained model 0 Ps c E T B b extension defautt theory A iff Corollary 55 A clause c extension default Ps satisfies words iff PA7 k theory A model 0 These theorems suggest translate given finite propositional theory A Ps answer queries follows To test A extension test satisfiability test satisfiability extension test PA entails extension c E T determine T included Pds set T clauses PAS jcET 1 member formula 51 Complexity considerations Clearly transformation presented exponential tractable subsets For example 2DT propositional polynomial 2DT defined Note class superset network default normal default theory 2default transformation theory produced Sections 112 113 logic programs discussed size default polynomial general However theory time size theory The class theories R BenEliyahu R DechterArtijcial Intelligence 84 1996 113150 133 Definition 56 A 2default theory 2DT formulas W 2CNF default Y PI 2CNF 3i 2DNF y clause size 2 propositional default theory A D py A stepbystep analysis complexity algorithm TRANSLATE2 default theory A D W belongs class 2DT shown Let n number letters C language A built let d maximum size default total number characters write set We assume S closure A union primeA clauses appearing A set clauses appear CNF negations justifications l7 Note S computed 0n3 IDd steps I8 We denote 1 length longest acyclic path component Gds d maximal number defaults having conclusion c r maximal number pairs clauses S yield clause resolved Note r n Let p denote maximum number clauses appear prerequisite reside cycle dependency graph note p smaller d smaller equal size component dependency graph P mindn Step 2 Takes On time Produces On formulas size 1 Step 3 The reason require justification 2DNF transfer negation 2CNF representation linear time So Step 3 time OIDJd DI f ormulas size Od generated Steps 45 There On clauses size 2 It takes On time pairs cl c2 cl c c2 way allocate array size 2n store clause common literal bucket produce pairs Therefore Step 4 takes On time produces On formulas size 2 Similarly Step 5 takes On3 time use array Step 4 time different buckets atom negation produces 0n3 formulas size 3 Steps 67 For step build dependency graph A respect S This takes 0 ri JDld time We assume end graphbuilding phase pointer clause component defaults clause conclusion For clause c S size S 6 2 size R Or size D 0 d For clause c computing c c takes 0 E time produces formula size 01 takes 0 1p time produces formula size 01p Therefore clause c computing takes 0 1 time produces formula size 0 E Computing SUBSETreasons DEFAULTreasons takes 0 d d pl time produces formula size Computing RESOLUTIONreasons time produces formula size Or Since On clauses step takes On1 n IDJd prerequisite computing takes On incr c I7 Note justifications 2DNF negation translates easily 2CNE The reader verify set prime implicates set clauses size 2 computed time 0n3 n number letters language translation theories p 1 I The complexity 134 R BenEliyahu R LkchterAnificial lnlelligence 84 1996 I IS150 time produces On formulas size Omaxdd plr Note 1 lnaxddp12r ddnl Proposition 57 For 2DT transformation takes 0 n2 l2 n2 ID d pl time andproduces Omaxn ID formulas ofsize Odd n12 The proposition shows direct connection cyclicity default theory translated complexity acyclic logic satisfiability existence membership logic polynomially default extension propositional 2DT Their results establish coNPhardness transformation existence membership conclude following satisfiability results obtained Kautz Selman 33 deciding subset class 2DT entailment 191 Stillman polynomially reducible problem reducible subset class NPhardness existence membership problems class 2DT The polynomial entailment entailment problem presented NP coNP class 2DT Hence section implies entailment Corollary 58 The coherence problem NPcomplete extension existence class 2DT Corollary 59 Setmembership class 2DT NPcomplete Proof By Corollary 54 order check theory T contained 2DT A check PA U inT inT satisfiable Since A 2DT P AJ inT size A T computed 0 extension c E T time polynomial Corollary 510 Setentailment class 2DT coNPcomplete Proof Follows Corollary 55 i7 6 Tractable subsets default logic Once queries default number techniques default shown reducible theory reduced heuristics propositional answer satisfiability use For instance entailment logic solved complete resolution technique entailment propositional logic Our approach useful especially class 2DT algorithm 2DT polynomial queries knowledge subclass 2DT translates tractable subset default time So 2DT translates represents answered efficiently compiles easy satisfiability problem In words theories satisfiability tractable subclass propositional logic Consequently identify easy default R BenEliyahu R DechterArtijcial Intelligence 84 1996 113150 135 default characteristics 2DT translate tractable propositional analyzing theories We example process showing techniques developed constraintsbased reasoning community identify new tractable subsets Constraintbased set constraints constraints Some finding setting problem terms constraints specified exploit structure satisfy constraints notion constraint graph reasoning entities specifying methods satisfiability formulating paradigm satisfying testing knowledge techniques logic The problem satisfiability propositional theory formulated related problem These include constraint satisfaction problem graph associates node propositional associated shown crucially satisfiability size cyclecutset graph size nonseparable components 7815 worstcase parameters Since processing graph For instance constraint graph tree satisfiability time CSP For propositional CNP theory constraint letter connects nodes letters appear clause Various parameters constraints graph complexity solving CSP solving induced width w called tree width depth depthfirst search spanning tree bounded easily simple ahead time linear parameters bounding It shown answered bounded polynomially complexity deciding consistency complexity In sequel focus specific CSP techniques treeclustering 9 cyclecutset decomposition 71 graph exponentially The treeclustering The complexity constraint complexity database generated treebuilding building resulting details treeclustering Appendix C tree tree manageable scheme treebuilding phase queryprocessing phase dependent size size queries theory expected More default logic preprocessing pay phase Consequently sparseness application computationally reasoning expensive linear One advantages applying treeclustering default reasoning assess cost process examining default theory prior tractability default theories function possible translation topology interaction graph step We characterize The interaction graph default theory A closure A S undirected graph clause default S associated node Arcs added CI IcCnd d CO arcs connecting exist c c res c c clauses c c connected cl c CM ldnl clique CNF ld iff resolved c C c 136 R BenEliyuhu R DechterArtcial Intelligence 84 1996 113150 A chord cycle arc connecting nodes cycle A graph nonadjacent iff cycle length 4 chord The induced width w chordal graph embeds terms algorithm size maximal clique complexity chordal graph G minimum G t9 The induced width w interaction graph summarizes theorem Theorem 61 For 2DT interaction graph induced width w existence clausemembership setentailment 2o decided 0 Y 2w steps CY polynomial size input 2 Note w large size largest default theory 2n2 clauses size 6 2 language w 2n2 We logic knowledge base repetitive believe temporal persistence principle causes structure following example demonstrates especially useful temporal algorithm default reasoning Example 62 Suppose picked husband time t theory I leave son childcare services time tt If time t2 t_l I expect son following default t2 t This formalized D W D defaults form atschool t atschool t I atschool ti I 1 II 1 W formulas form pickedat ti Tatschool t 1 fori2n 1 For notational convenience abbreviate rules follows si Sil Si I The interaction S 1 graph theory closure si lpi n 1 shown Fig 4 n Pi 2 pi V sil The reader verify w 2 particular number time slots n grows setmembership coherence linearly Note theories belongs NPhard according time complexity setentailment Selman Kautzs classification class complexity answering set problems Thus answering queries treeclustering method grows 191 family queries A graph G embeds graph G iff G C G view graphs sets nodes arcs Recall definition decision problems Section I I I The input default theory set clauses test membership entailment R BenEliyahu R DechterArtijicial Intelligence 84 1996 113150 137 Fig 4 Interaction graph Example 62 The cyclecutset algorithm method time variable cyclecutset straint graph The cyclecutset method solved linear nectivity constraint graph The basic constitute removed remaining rest problem cyclecutset exponentially method 71 graph tree apply If solution variables render Clearly bounded size cyclecutset changes exploits instantiation idea instantiate structure based facts treestructured CSPs effective set nodes instantiated solving instantiation tree algorithm try set variables lineartime constraint graph cyclecutset graph cyclefree After cyclecutset complexity For details approach We following complexity bound reasoning tasks 2DT Theorem 63 For 2DT interaction graph cyclecutset cardinal k existence clausemembership setentailment decided 0 zk steps polynomial size input 7 Relation Clarks predicate completion In section discuss relationship 6 attempts work presented logic programs negated atoms rules body normal programs Clarks work program completion Clark meaning He shows normal program COMP n ZZ programmer program evaluated respect program iff COMPl7 b Q theory called completion His idea programmer writes program COMP II So formula Q implied Ii associated firstorder actually mind COMPIT queries For comparison Clarks work consider normal propo sitional programs set rules form Q t PI PnotRt notR 14 Q PI P RI R atoms As discussed Section 113 normal logic programs viewed disjunction free default default theories taking W 0 identifying rule form 14 138 K BenElivuhu K DechterArtijiciul Intelligence 84 I 996 I13I50 P A A P 7R1 TR Q Hence treat normal extensions normal ing default theories logic programs subclass default theories talk logic programs extensions correspond Given propositional logic program Step 1 Replace rule form 14 rule II COMP Z7 obtained steps Q P A A f A R A A TR Step 2 For symbol Q let SupportQ denote set clauses Q head Suppose SupportQ set QBody13 Q Bodyk Replace single sentence Q Body V v Bodyx Note special cases If Q If SupportQ replace 1Q SupportQ simply replace SupportQ Q Example 71 Consider following program 77 P Q 7R Pl R S V The completion 77 following propositional theory PQRvv R S 1 TS Q 15 16 17 18 19 similarities There interesting logic program algorithm TRANSLATE 1 PI following acyclic according If program COMPf7 definitions translation provide previous example translate theory note 77 R BenEliyahu R DechterArtiial Intelligence 84 I 996 113150 Iv IQAIRIP IS 1 IR Iv 3 IP Ip IQ A IR v IV IR 1 IS QL 1 L E e QRSV IL A 1 false 1 L E I Q R S V 139 20 21 22 23 24 25 26 27 sentences Combining 22 25 placing symbol form IL L positive L following equivalent 24 sentences 15 19 compare theory 21 23 PQATRVY R t S v 1s 4 1 L E E Q R St V L A ZL false I L E E Q R V model completion It easy model program model following previous work 31 theorem proved theory independently model completion program extended proof 131 Fages theory The example easily generalized Theorem 72 Let II normal acyclic propositional logic program Then M model COMP Z7 iff Ip 1 P E M model Pn theory obtained Proof Sketch Let 17 acyclic normal Ph P atom projected C equivalent logic program C language 17 occurrence atom Zp L symbol P It easy set models 7 set models COMPlI q Pn replacing Corollary 73 Let II acyclic normal propositional logic program II extension iff COMPl7 iff P MP true consistent Furthermore M model COMPIl extension II 140 R BenEliyuhu R DechterArtijiciul lniellience 84 1996 113150 Proof Follows theorem Theorem 317 0 Corollary 74 Let Il acyclic normal propositional intersection extensions I7 iff COMP I7 b P logic program An atom P Corollary 75 Let II acyclic normal propositional belong extensiorzs II COMP ZT b 7P logic program An atom P class acyclic normal propositional logic semantics skeptical reasoning22 logic pro different Clarks comple The observations identify grams class default equivalent Clarks predicate completion Note r cyclic program translation tion Example 76 Consider following program ZIl P P QP theory COMPfIl Ip 2 Ip A Ip III PI models true PI model entails Q COMPZ7 logical closure Q theory P PP PA P true Q false P R Q IO C 1 Substituting P PII P PQ theory Ip Ip lp P IQ Q P COMPL71 P false Q P false Q true Hence PII entail Q Indeed 171 extension model Another major difference Clarks completion logic subset default propositional programs work handle logic corresponds normal 8 Conclusions related work Reiters default logic useful formalism nonmonotonic bility default conclusions drawing conclusions logic limited lack intuitive logic ratifies high computational reasoning The applica set required semantics complexity In paper addressed problems We shown default logic theories characterized theories wellstudied propositional presented default computes extension theory identified new tractable default finite propositional theories procedure Skeptical answer sets reasoning means program entails atom iff atom belongs programs R BenEliyahu R DechterArtificial Intelligence 84 1996 113150 141 logic default truth values consistent AET assignment usual notions propositional interpretation autoepistemic spirit semantics Moores autoepistemic model The work presented viewed attempt provide default logic 271 theory sense theory AET 27 Section 31 Moore defines propositional semantics The concepts metainterpretation parallel autoepistemic model AET interpretation provided logic formula form LP L belief operator propositional Similarly define metainterpretation clauses AET T autoepistemic b logic correspond extensions shows AET T stable epistemic model T We define model formulas theory symbol theory assignment truth values language theory Moore defines autoepistemic model formulas T true autoepistemic stable Moore true auto theory way theory extension default satisfied certain model default default iff T contains formula formula P LP true iff P T Expansions theory treating logic supposed formulas interpretations interpretation classical Using theory metainterpretations algorithm theo classical theory models coincide extensions propositional theory compiles finite default models default theories reducible propositional explored For instance default theory longer need satisfiability order compute logic default problem entailment queries default ries presented propositional This means problem compute count extensions provability reduced comprehensively extension propositional formula In general translation algorithm embed membership DT expressive leads observation coNPcomplete identified reasoning Related class 2DT Using constraint subclasses tractable solved efficiently results autoepistemic logic reported treeclustering exponential polynomial class 2 inheritance networks logic programs This coherence NPcomplete entailment 2DT We shown problems satisfaction techniques temporal algorithm 24 shown reducible expansion provability Also Elkan question atoms membership propositional theory models logic program classical negation propositional logic In 31 technique models disjunctive relationship predicate completion logic Thus work extends results similar logic programs We shown presented translation 61 A preliminary lo shown stable models power default stable interesting paper called Clarks presented computing version work appears autoepistemic represented 21 There attempts reasoning monotonic 12182023 We believe valuable computational classical knowledge past relate default systems autoepistemic default embedding logic wellunderstood logic logic circumscription logic classical formalism forms non TMS logic supported large body 142 K LIeenEliyhu K LechterArtiul Intelligence 84 1996 l350 Appendix A Proofs A 1 Useful theorem definitions Definition A1 22 If S set clauses RS pairs members S set consisting resolution S denoted members S resolvents Definition A2 1221 If S set clauses denoted RS S n 3 0 follows R S II 0 R S nth resolution delined RRS Theorem A3 22 Given set S clauses sequence S wlhich tuutology c E RS c C c clause c logical n 3 0 exists clause Proposition A4 c E res 1 2 Then following Suppose c 1 c c md ci clauses c cl ci C c2 conditions hold 1 c c c 2 c c c 3 There c C c c E resclcij Proof suppose C qvz c2 ca v P c q v c suppose conditions 1 2 hold Then c cs v P c Ch v P q ci ci subset c subset ci cb subset cd Clearly cg V cj resolvent Theorem AS consistent extension iff W inconsistent 29 Corollary 221 A closed default theory D W A2 Proofs propositions und theorems Proposition 37 primeA closure A closure Let A default theory primeA Proof Suppose E extension A D W Since Pl E C E sufficient c E E clause c primeA c c c If E n E PZ W A E inconsistent Theorem A5 W inconsistent R BenEliyahu R DechterArtificial Intelligence 84 1996 113150 143 ptime A Suppose E consistent By Definition Ei defined primeA minimum 11 ordering E Us Ei We c E E clause c fl E c C_ c The proof induction minc min c c E Ei PZ W c primeA Case min c 0 In fl E Induction step Assume case c E W Our claim true claim true minc n n 0 true n 1 Note c A E consistent Suppose c introduced c 2 c We induction minimum El So c E CD E b c If c E CD clearly assertion holds Assume E k c By Theorem A3 j c E RjE j c E primeA n E c G c For j 0 clear R E 1 j hypothesis n For j 0 let cl c2 clauses induction c ci primeA n E c E res cl 2 By induction ci C cl ci G 2 By Proposition A4 c C c CL 2 c c3 res c c c3 c ptime A n E closed resolution resolvent A cg E E c3 A So cg E primeA n E hypothesis Theorem 317 Modelextension A iff model 19 A E s 1 8 b s Let A default theory A theory E extension Proof Let A D W default set clauses We define B satisfies We A extension23 A theory 0 S f model A Let A 1 EoW 2 0 EL Et U C LY PI A c E A c E D Y E Ei pi 3 EEEi It easy verify A extension A E C A We A 2 E Definition 11 Let c E A By definition c proof respect number defaults shortest proof easily c E E S f A By induction To prove direction suppose E extension A Let S prime A We 0 S f model A f defined forallcES fctrue w CEE It easy verify sets Eo El 0 deductively closed satisfies A By Definition 11 1 EoW 2 0 Eil Ef U c 1 01 Pc A E 3 EUsEi E D LY 6 Ei lpi 23 Without loss generality assume proof extension set clauses formulas A CNF 144 H BenEliycthu Ii LIechterArtificid lntellrgence 84 1996 113150 minimal arbitrary clause c belongs By induction c proof respect proof respect atomic clause By induction minimum c conditions Definition 311 holds c E 0 A So atomic clause 19 satisfies 6 A It left B based A Let c number defaults proof Case 0 It case W b c c extension A Let E extension A Since S includes prime implicates E 0 satisfies c clause c E S c C c 8 satisfies c If c c implicate E clauses cl c2 E Else c prime c E resct c2 1 By definition 8 satisfies CI 2 So item 3 Definition 311 holds c Case 0 So c consequence default S item 5 Definition set clauses C C E 311 holds c c logical consequence case items l3 hold c q Theorem 319 conditions hold function 1 CE w pc 2 Indexing proofs A weak model 0 S f A model iff p S N atomic clause c following o If c W following There default 6 PI conditions hold satisfjt 3 cl E CNF clause c2 C cl pq pc pc E D 8 satisfies atomic b There atomic clauses cl c2 c resolvent cl CZ B satisjiesc andc2 andpclpcz pc c There atomic clause c c c 0 z c pc pc Proof We atomic clause proof respect induction pc 0 A Case pc 0 In case c t W clearly c proof Case pc 0 In case c follows clauses classical logic default rules Those clauses proofs induction hypothesis Hence c proof 0 Theorem 321 acyclic default Models theory A 6 model A acyclic theories If 0 S f weak model Proof If theory complies requirements acyclic dependency stated Theorem 319 q graph induces S ordering Theorem 323 Minimality weak model A models Ever model default theory A minimal Proof Suppose want minimal By definition 8 S f model A Obviously weak model We atomic clause c S proof R BenEliyahu R DechterArtijicial Inielligence 84 1996 113150 145 c respect weak model 8 S f A c A 0 A Assume contradiction 8 minimal So A c c atomic fc true A c 1 c atomic fc true We c proof respect A C_ Aa defaults proof c If n 0 assertion event proof c uses defaults 61 I observe hypothesis 8 satisfy A satisfy concl6 I deductively satisfy W U concfSt I A 13 satisfied 0 contradiction The proof proceed induction n number clear c E W In induction W U concl 61 concl 6 satisfied 8 Therefore satisfies c closed 0 Theorem 63 For 2DT interaction graph cyclecutset canfinality k existence clausemembership setentailment decided Oa 2 steps cy polynomial size input interaction theory time polynomial 53 A coherent time 0 a12 cq polynomial time Ocu02 CEO polynomial theory A closure S isomorphic theory constraint graph cyclecutset cardinality time 0n2k n number letters graph default 71 graph PQ Now let A 2DT closure S Since A 2DT S size 6 2 P 4 computed Proof Satisfiability k solved The constraint clause length A Since constraint graph P AJ cyclecutset size k satisfiability P4s checked size PQ iff P 4s satisfiable Hence coherence A By Corollary checked size input By Corollary 54 check clause c member extension A check S Since A 2DT 0 c12 clauses c c C c c E S clausemembership time Oc22 9 size input By Corollary 55 answer set polynomial clauses T included clause c T model P4s satisfy Hence check c E S subset c E T Since A 2DT c T 0 c12 clauses c c C c c E S setentailment time class 2DT computed size input Take LY maximum Oq2 cq polynomial q 1 iO123 model P4s satisfies subset c belongs extensions A model PAS satisfies class 2DT computed check lc Cl Appendix B Expressing indexes propositional logic Suppose given set symbols L want assign index variable range lm 146 R BenEliyahu R lkchterArtijiciul Intelligence 84 1996 113150 We define new set symbols L e P 1 P 2 m denote propositional P m P E L letters intuition P For P C let P following set formulas P 1 number PIVP2VPm Pl P2A P31Pm P2P3Am7P4AA7Pm Pm 13 TPm simply states p assigned number The set P For P Q C let P number Q denote Q intuitively means number P disjunction following set formulas PIAQ2PlAQ3 PIAQm P2AQ3 P2IQm PmlrQm Thus symbol P want assign index add P theory indexes use notation P Q express order Appendix C Treeclustering default reasoning The treeclustering scheme 9 treebuilding phase The phase treeclustering It uses triangulation adding edges 36 The triangulation nodes Step 1 Select ordering available Fig C1 algorithm transforms graph chordal 24 graph restated propositional phase queryprocessing theories algorithm consists steps heuristics good orderings Step 2 Fill edges recursively nonadjacent nodes nected nodes higher ordering Since costly operation treebuilding Step 4 time space complexity 0 17n21cl submodels clique ICI size largest clique Step 1 jTI size theory n number letters T It induced width shown Cl w 1 As result classes having bounded method chordal constraint graph generated generating tractable algorithm 24 A graph chordal cycle length 4 chord R BenEliyahu R DechterArtificial Intelligence 84 1996 113150 147 IkebuildingZ G Input A propositional Output A tree representation theory T constraint graph G models T Step 1 Step 2 Step 3 Step 4 Step 5 C Ci ancestor Cj j maximal cliques graph Let Cl indexed rank highest nodes Use triangulation algorithm generate chordal constraint graph Identify cliques Connect set letters The resulting graph called join tree Compute Mi T composed letters Ci For Ci Cj adjacent model M model common letters amounts tree tree delete Mi Mj agrees set performing arc consistency join set models Ci satisfy set formulas Ci join largest shares Fig C I Propositional treeclustering treebuilding phase Once tree built allows efficient queryanswering process types queries linear size tree generated phase described m bounds number submodels 9 cost answering The queryprocessing clique Propositional treeclusteringquery processing 1 T satisfiable iff Mi property checked On 2 To respectively letter P true respectively table linear satisfy P This amounts model select clique containing P test m To check set letters satisfies letters scattered cliques temporarily false arbitrarily models satisfies column A satisfied common model test letters belong cluster Ci If SO check A Otherwise disagree A eliminate apply arc consistency A model satisfying A exists iff resulting Mi The complexity step O 1 Alnm log m clique models scanning model Mi We summarize class 2DT25 number submodels extensions theory treeclustering applied n stands number symbols reasoning theory m clique note m bounded number default default 25 The process described applied appropriate 2DTs default theory The complexity analysis issue 148 R BenEliyahu R LkchterArtiJical Intelligence 84 1996 113150 1 2 3 I 1 tree b default theory propositional propositional theory T See Section 51 formulas treebuilding takes O ITI n exp w 1 time ITI size theory theory produced extension If extension exists bounded 0 n steps Translate Build default database method generated Step Answer queries default To answer clique To extension solve arbitrary node C join neighbors Cj model M agrees Mi common combine models continue The set models generated exhausting agree common submodels bounded O n m steps To answer check tree backtrackfree manner Pick tree select model Mi M select letters neighborss neighbors extension model satisfying satisfies clause c size k finding model combinations test letters cl extensions takes 0 k2n2m log m steps To answer c included check solution satisfies bounded 0 knm logm steps Acknowledgements We thank Gerhard Brewka Kurt Konolige version paper Judea Pearl Mirek Truszczynski Vladimir Lifschitz drew attention Michael Gelfond Clarks predicate completion translation useful comments earlier fruitful discussions close connection grants This work supported Air Force Office Scientific Research AFOSR 900136 NSF grants IRI92009 18 IRI9 1573636 Northrop Toshiba MICRO grant 92123 Rockwell MICRO grant 92122 grants America Xerox Palo Alto research center IBM graduate fellowship author References I I I R BenEliyahu Nonmonotonic reasoning classical logic PhD Thesis University California Los Angeles CA 1993 R BenEliyahu R DechterArtijkial Intelligence 84 1996 113150 149 2 R BenEliyahu R Dechter Default logic propositional logic constraints Proceedings AAAI91 Anaheim CA 1991 379385 3 R BenEhyahu R Dechter Propositional semantics disjunctive logic programs Ann Math Artif Intell 12 1994 5387 short version Proceedings 1992 Joint International Conference Symposium Logic Programming 1992 41 N Bidoit C Froidevaux Minimalism subsumes default logic circumscription stratified logic programming Proceedings IEEE Symposium Logic Computer Science Ithaca NY 1987 8997 5 CL Chang RCT Lee Symbolic Logic Mechanical Theorem Proving Academic Press New York 1987 6 KL Clark Negation failure H Gallaire J Minker eds Logic Databases Plenum Press New York 1978 293322 7 R Dechter Enhancement schemes constraint processing backjumping learning cutset decomposition Artif Intell 41 1990 273312 81 R Dechter I Pearl Networkbased heuristics constraint satisfaction problems Artif Intell 34 1988 l38 191 R Dechter J Pearl Tree clustering constraint networks Artif Intell 38 1989 353366 lo C Elkan A rational reconstruction nonmonotonic truth maintenance systems Artif lntell 43 1990 219234 111 DW Etherington Formalizing nonmonotonic reasoning systems Artif Intell 31 1987 4185 121 DW Etherington Relating default logic circumscription Proceedings IJCAI87 Milan Italy 1987 489494 131 F Fages Consistency Clarks completion existence stable models Meth Logic Comput Sci 2 1992 141 K Fine The justification negation failure Logic Meth Philos Sci 8 1989 263301 151 EC Freuder A sufficient condition backtrackbounded search J ACM 32 1985 755761 161 M Gelfond V Lifschitz Classical negation logic programs disjunctive databases New Generation Comput 9 1991 365385 171 G Gottlob Complexity results nonmonotonic logics J Logic Comput 2 1992 397425 181 U Junker K Konolige Computing extensions autoepistemic default logics TMS Proceedings AAAI90 Boston MA 1990 278283 191 HA Kautz B Selman Hard problems simple default logic Artif Intell 49 1991 243279 201 K Konolige On relation default autoepistemic logic Artif Intell 35 1988 343382 21 RA Kowalski CJ Hogger Logic programming SC Shapiro ed Encyclopedia Artificial Intelligence Wiley New York 2nd ed 1992 873891 221 CT Lee A completeness theorem Computer Program finding theorems derivable given axioms PhD Thesis University California Berkeley CA 1967 23 W Marek M Tmszczynski Relating autoepistemic default logic RJ Brachman HJ Levesque R Reiter eds Proceedings First International Conference Principles Knowledge Representation Reasoning Toronto Ont Morgan Kaufmann San Mateo CA 1989 276288 1241 W Marek M Truszczynski Computing intersection autoepistemic expansions Proceedings First International Workshop Logic Programming NonMonotonic Reasoning Washington DC 1991 3750 251 RE Mercer Using default logic derive natural language presupposition R Goebel ed Proceedings Seventh Biennial Conference Canadian Society Computational Studies Intelligence Edmonton Alta Morgan Kaufmann Los Altos CA 1988 1421 261 E Minicozzi R Reiter A note linear resolution strategies consequencefinding Arts Intell 3 1972 175180 27 RC Moore Semantical consideration nonmonotonic logic Artif Intell 25 1985 7594 28 CR Perrault An application default logic speech act theory Tech Rept CSLI8790 SRI International Menlo Park CA 1987 29 R Reiter A logic default reasoning Artif Intell 13 1980 81132 30 R Reiter A theory diagnosis principles Artif Intell 32 1987 5795 3 1 R Reiter Personal communication 1992 150 K BenEliyahu K DechterArticial Intelligence X4 1996 113150 1321 R Reiter J Kleer Foundations assumptionbased truth maintenance systems preliminary Proceedings AAAI87 Seattle WA 1987 I83 188 membership Its default complexity problems restricted propositional Proceedings AAAI90 Boston MA 1990 571578 report I33 1 J Stillman default logics 134 1 I Stillman The complexity propositional default logics Proceedings AAAI92 San Jose CA 1992 794799 35 1 R Tarjan Depthfirst I36 1 RE Tarjan M Yannakakis Simple lineartime algorithms search linear graph algorithms SIAM J Cornput 1 1972 146160 test chordality graphs test acyclicity hypetgraphs I37 1 DS Touretzky selectively Implicit ordering defaults reduce acyclic hypergraphs SIAM J Comput 13 1984 566579 systems Proceedings AAAI84 Austin inheritance TX 1984 322325