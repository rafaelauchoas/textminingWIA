Artiﬁcial Intelligence 171 2007 951984 wwwelseviercomlocateartint Metatheory actions Beyond consistency Andreas Herzig Ivan Varzinczak IRIT Université Paul Sabatier 118 route Narbonne 31062 Toulouse Cedex 9 France Received 25 April 2006 received revised form 15 March 2007 accepted 23 April 2007 Available online 29 April 2007 Abstract Traditionally consistency criterion quality theory logicbased approaches reasoning actions This work goes contributes metatheory actions investigating properties good domain description We state metatheoretical postulates concerning sore spot When postulates satisﬁed action theory modular Besides easier understand elaboration tolerant McCarthys sense modular theories interesting properties We point problems arise postulates modularity violated propose algorithmic checks help designer action theory overcome 2007 Elsevier BV All rights reserved Keywords Reasoning actions Action theory Modularity Ramiﬁcations 1 Introduction In logicbased approaches knowledge representation given domain described set logical formulas T nonlogical theory That case reasoning actions interested theories describing particular actions precisely action types We theories action theories A priori consistency criterion formal logic provides check quality descriptions In present work argue require mere existence model given theory Our starting point fact reasoning actions usually distinguishes kinds logical formulas Among effect axioms precondition axioms boolean axioms In order distinguish non logical axioms logical axioms prefer speak effect laws executability laws static laws respectively Moreover single effect laws effect inexecutability laws Given types laws suppose language powerful state conditional effects actions For example suppose action inexecutable contexts ϕ1 holds executable contexts ϕ2 holds It follows context ϕ1 ϕ2 holds Now ϕ1 ϕ2 static law mention It natural expect ϕ1 ϕ2 follows static laws By means examples Corresponding author Email addresses herzigiritfr A Herzig ivaniritfr I Varzinczak 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200704013 952 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 case unexpected conclusions follow theory T case T logically consistent This motivates postulates requiring different laws action theory arranged modularly separated components way interactions limited controlled In essence argue static laws entail new effects actions inferred effect laws effect laws executability laws entail new static laws follow set static laws We formulate postulates requirements precise It turn existing accounts allow kinds laws 16 consistent action theories written violate postulates In work algorithms allow check action theory satisﬁes postulates With algorithms task correcting ﬂawed action theories easier Although use syntax propositional dynamic logic PDL 7 shall applies ﬁrstorder formalisms particular Situation Calculus 8 All postulates going present stated frameworks particular action languages A AR 911 Situation Calculus based approaches In 12 given Situation Calculus version analysis 13 presented similar notion ontologies Description Logics 14 The present work complete version ﬁrst appeared 15 This text organized follows background deﬁnitions Section 2 state postulates concerning action theories Section 3 In Sections 4 5 study important postulates giving algorithmic methods check action theory satisﬁes We generalize postulates Section 6 discuss possible strengthening Section 7 In Section 8 interesting features modular action theories Before concluding assess related work literature metatheory actions Section 9 2 Preliminaries 21 Dynamic logic Here establish ontology dynamic domains As base formalism use free PDL PDL iteration operator For details PDL 716 Let Act a1 a2 set atomic action constants given domain Our running example terms Walking Turkey Scenario 4 There atomic actions load shoot tease We use variable atomic actions To atomic action associated modal operator Here suppose underlying multimodal logic independently axiomatized logic fusion interaction modal operators 1718 Prop p1 p2 denotes set propositional constants called ﬂuents atoms Examples loaded alive walking We use p variable propositional constants We suppose Act Prop nonempty ﬁnite We use small Greek letters ϕ ψ denote classical formulas called boolean formulas They recursively deﬁned following way ϕ p cid5 ϕ ϕ ϕ ϕ ϕ ϕ ϕ ϕ ϕ Fml set classical formulas Examples classical formulas walking alive bachelor married A classical formula classically consistent valuation classical propositional logic makes true Given ϕ Fml valuationsϕ denotes set valuations ϕ We note CPL logical conse quence classical propositional logic The set literals Lit Prop p p Prop Examples literals alive walking cid4 variable literals If cid4 p identify cid4 p A clause χ disjunction literals We literal cid4 appears clause χ written cid4 χ cid4 disjunct χ We denote complex formulas possibly modal operators capital Greek letters Φ1 Φ2 They recur sively deﬁned following way Φ ϕ aΦ cid11acid12Φ Φ Φ Φ Φ Φ Φ Φ Φ Φ A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 953 Φ denotes complex formula cid11acid12 dual operator deﬁned cid11acid12Φ def aΦ Sequential composition actions deﬁned abbreviation a1 a2Φ def a1a2Φ Examples complex formulas loaded shootalive hasGun cid11load shootcid12alive loaded If T set formulas modal classical atmT returns set atoms occurring T For instance atmp1 ap2 p1 p2 For parsimonys sake confusion identify set formulas conjunction elements The semantics multimodal K 1920 Deﬁnition 1 A PDLmodel tuple M cid11W Rcid12 W set valuations alias possible worlds R Act 2W W function mapping action constants accessibility relations Ra W W As example Act a1 a2 Prop p1 p2 PDLmodel M cid11W Rcid12 W cid2 p1 p2 p1 p2 p1 p2 cid3 cid4 cid2cid6 Ra1 Ra2 p1 p2 p1 p2 p1 p2 p1 p2 p1 p2 p1 p2 p1 p2 p1 p2 cid7cid3 cid6 p1 p2 p1 p2 p1 p2 p1 p2 cid7 cid5 Fig 1 gives graphical representation M Given M cid11W Rcid12 Act w wcid14 W write Ra instead Ra wRawcid14 instead wcid14 Raw Deﬁnition 2 Given PDLmodel M cid11W Rcid12 satisfaction relation deﬁned smallest relation satisfying w p p true world w model M p w M aΦ wcid14 wRawcid14 M M w usual truth conditions connectives wcid14 Φ Deﬁnition 3 A PDLmodel M model Φ noted M Φ w W M set formulas T noted M T M Φ Φ T w Φ M model In model depicted Fig 1 M p1 a2p2 M p1 p2 Deﬁnition 4 A formula Φ consequence set global axioms T class PDLmodels noted T PDL Φ PDLmodel M M T M Φ1 We suppose logic consideration compact 21 Fig 1 Example PDLmodel Act a1 a2 Prop p1 p2 1 Instead global consequence 5 local consequence considered For reason modal operator cid2 introduced giving logic multimodal K plus monomodal S4 cid2 axiom schema cid2Φ aΦ holds 954 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Having established formal substratum presentation rely present section different types formulas use dynamic domains 22 Describing action theories PDL Before elaborating theory need specify formulas talk Following tradition literature identify domain alias scenario actions account ﬂuents change More formally Deﬁnition 5 A domain signature tuple cid11Act Propcid12 An example domain wellknown Yale Shooting Scenario YSS 22 signature comprises actions load wait shoot ﬂuents loaded alive Given domain cid11Act Propcid12 interested theories statements behavior actions Act ﬂuents Prop PDL allows representation statements action laws We distinguish types We effect laws formulas relating action effects Statements conditions action executed called inexecutability laws Executability laws turn stipulate context action guaranteed executable Finally static laws formulas mention actions They express constraints hold possible state These types laws fundamental entities introduce formally sequel 221 Static laws Frameworks allow indirect effects actions use logical formulas state invariant propositions world Such formulas delimit set possible states They refer actions suppose expressed formulas classical propositional logic Deﬁnition 6 A static law formula ϕ Fml In running example static law walking alive says turkey walking alive Another saved mbox1 mbox2 states email message saved mailbox 1 mailbox 2 23 In action languages AR example write statement alive walking Situation Calculus ﬁrstorder formula cid6 s cid7 Holdswalking s Holdsalive s The set static laws given domain denoted S At ﬁrst glance requirement concerning consistency S Of course want S consistent theory inconsistent As going sequel consistency S guarantee consistency theory 222 Effect laws Logical frameworks reasoning actions contain expressions linking actions effects We suppose effects conditional component laws In PDL formula aΦ states formula Φ true possible execution action Deﬁnition 7 An effect law2 action form ϕ aψ ϕ ψ Fml ψ classically consistent The consequent ψ effect obtains action executed state antecedent ϕ holds An example effect law loaded shootalive saying gun loaded shooting 2 Effect laws called action laws prefer use term apply executability laws introduced sequel A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 955 turkey dead Another cid5 teasewalking circumstance result teasing turkey starts walking For parsimonys sake effect law written teasewalking Note consistency requirement ψ makes sense ψ inconsistent inexecutability law consider separate entity introduce formally sequel On hand ϕ inconsistent effect law obviously superﬂuous For ﬁrst example action languages write statement shoot causes alive loaded Situation Calculus formalism write ﬁrstorder formula cid6 cid6 Holdsloaded s Holds s alive doshoot s cid7cid7 223 Inexecutability laws We consider effect laws inconsistent consequents particular kind law inexecutability laws Such laws called qualiﬁcations 24 This allows avoid mixing things conceptually different action effect law mainly associates consequent ψ inexecutability law associates antecedent ϕ viz context precludes execution Deﬁnition 8 An inexecutability law action form ϕ ϕ Fml For example hasGun shoot expresses shoot executed agent gun Another example dead tease dead turkey teased In AR write statement impossible hasGun Situation Calculus example cid6 HoldshasGun s Possshoot s s cid7 224 Executability laws With static effect laws guarantee action shoot executed agent gun We need way state conditions In dynamic logic dual cid11acid12ϕ deﬁned aϕ express executability cid11acid12cid5 reads execution action possible Deﬁnition 9 An executability law action form ϕ cid11acid12cid5 ϕ Fml For instance hasGun cid11shootcid12cid5 says shooting executed agent gun cid5 cid11teasecid12cid5 written cid11teasecid12cid5 establishes turkey teased Some approaches prominently Reiters use biconditionals ϕ cid11acid12cid5 called precondition axioms This equivalent ϕ highlights merge information inexecutability information executability Here consider entities different separate In action languages laws represented implicitly inferred inexecutability statements cf Section 7 In Situation Calculus example stated cid7 cid6 HoldshasGun s Possshoot s s Whereas extant approaches literature allow indirect effects actions contain static effect laws provide way representing inexecutabilities form implicit qualiﬁcations 2425 status executability laws consensual Some authors 342627 tacitly consider executability laws explicit inferred reasoning mechanism Others 1256 executability laws ﬁrst class objects reason It matter debate executabilities In principle strange state information necessary conditions action execution inexecutabilities saying sufﬁcient conditions The justiﬁcation given action possible situations known executable known inexecutable unknown executable This reason think need executability laws Indeed domains wants explicitly state conditions given 956 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 action guaranteed executable robot gets stuck able execute action And plan load shoot load followed shoot know achieves goal alive like sure executable ﬁrst place3 In case allowing executability laws gives ﬂexibility expressive power 225 Action theories Given domain cid11Act Propcid12 action Act deﬁne E set effect laws X set executability laws Ia inexecutability laws Deﬁnition 10 An action theory tuple cid11S E X Iacid12 In running scenario example theory action shoot S walking alive X shoot cid2 hasGun cid11shootcid12cid5 cid3 E shoot cid3 cid2 loaded shootalive I shoot hasGun shoot cid2 cid3 Given dynamic domain deﬁne cid8 cid8 E E X X I aAct aAct cid8 Ia aAct All sets ﬁnite Act ﬁnite E X Ia ﬁnite Deﬁnition 11 An action theory tuple form cid11S E X I cid12 Given action theory cid11S E X I cid12 formula Φ write S E X I PDL Φ instead S E X I PDL Φ When formalizing dynamic domains face frame problem 8 ramiﬁcation problem 28 In follows formally present logical framework action theories henceforth described 23 Dynamic logic frame problem As reader expected logical formalism PDL solve frame problem For instance cid11S E X I cid12 describes shooting domain S E X I cid16PDL hasGun loadhasGun The said ramiﬁcation problem concerns derivation indirect effects properly caused action consideration For example S E X I PDL alive teasealive Thus given action theory cid11S E X I cid12 need consequence relation powerful deal frame ramiﬁcation problems This means deductive power PDL augmented order ensure noneffects actions follow theory relevant The presence static laws makes delicate task starting 23 authors argued notion causality needed In work opt dependencebased approach presented 5 shown 29 subsume Reiters solution frame problem 30 partially accounts ramiﬁcation problem 31 In logical framework developed 5 metalogical information given form dependence relation added PDL Deﬁnition 12 Dependence relation 5 A dependence relation binary relation cid3 Act Lit 3 Of course require solution qualiﬁcation problem 24 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 957 The expression cid3 cid4 denotes execution action literal cid4 true In example cid4 cid3 cid11shoot loadedcid12 cid11shoot alivecid12 cid11shoot walkingcid12 cid11tease walkingcid12 cid5 means action shoot literals loaded alive walking true action tease walking true Semantically dependencebased approach relies explanation closure assumption 26 solution frame problem consists kind negation failure cid11load hasGuncid12 cid3 load cid16cid3 hasGun hasGun caused load Thus context hasGun true execution load hasGun remains true We tease cid16cid3 alive tease cid16cid3 alive The meaning independences frame axioms hasGun loadhasGun alive teasealive alive teasealive hold We assume cid3 ﬁnite A dependence relation cid3 deﬁnes class possible worlds models Deﬁnition 13 A PDLmodel M cid11W Rcid12 cid3model wRawcid14 cid16cid3 p cid16M cid16cid3 p M w p implies cid16M w p implies M wcid14 p wcid14 p Fig 2 depicts dependencebased condition models Given cid3model M Φ T M Φ M T deﬁned Deﬁnition 3 Deﬁnition 14 A formula Φ cid3based consequence set global axioms T class cid3models noted T cid2 Φ cid3model M M T M Φ In example holds S E X I cid2 hasGun loadhasGun S E X I cid2 alive teasealive In way dependencebased approach solves frame problem However entirely solve ramiﬁcation problem indirect effects loaded shootwalking deduced cid2 explicitly stating set effect laws shoot state indirect dependences shoot cid3 walking However according Reiters view counts solution frame problem systematic procedure generating effect laws parsimonious representation frame axioms 32 Fig 2 Dependencebased condition preservation literal p hypothesis cid16cid3 p 958 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Fig 3 A model action theory big model Mbig We comply deﬁne semiautomatic procedure generating dependence relation set effect laws 33 Moreover argued 2331 approach line state art existing solutions frame ramiﬁcation problems handle domains indeterminate indirect effects In section turn metatheoretical analysis action theories step formal criteria theory evaluation Before need deﬁnition Deﬁnition 15 Let cid11S E X Iacid12 action theory cid3 dependence relation Then M cid11W Rcid12 big alias maximalstandard model cid11S E X Iacid12 cid3 M cid3model W valuationsS valuations S Ra w wcid14 ϕ aψ E Ia M w ϕ M wcid14 ψ For example consider action theory components given cid2 cid3 cid2 E S cid2 Ia p2 p1 ap2 cid3 cid3 X cid11acid12cid5 cid3 cid2 cid11a p1cid12 cid11a p2cid12 cid3 Fig 3 depicts models associated big model Big models contain valuations consistent S Clearly big model M M S E Ia Because M maximizes executability X true M In rest paper characterize action theory dependence relation big model 3 The postulates When given action theory model importantly model intended questions naturally arise talk action theories Here claim approaches forward literature liberal sense satisﬁable action theories intuitively incorrect We argue consistency notion required order help answering questions Our central thesis different types laws deﬁned Section 22 neatly separated modules Besides want laws interfere sense static laws action laws consequences follow action laws The way round action laws allow infer new static laws effect laws allow infer inexecutability laws action laws allow infer action laws acid14 This means logical modules designed way specialized little dependent possible A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 959 A ﬁrst step direction proposed division entities sets S E X I In order ac complish goal diminish interaction modules rendering interwoven The rest section contains postulates expressing We state postulates defer explanations discussions Sections 46 PC Logical consistency S E X Ia cid16cid2 The theory given action logically consistent PS No implicit static laws S E X Ia cid2 ϕ S CPL ϕ If classical formula inferred action theory inferable set static laws Note left use cid3based consequence right use consequence classical logic S ϕ classical ϕ inferable S classical logic PI No implicit inexecutability laws S E X Ia cid2 ϕ S Ia PDL ϕ If inexecutability law action inferred action theory inferable PDL static laws inexecutability laws Note PDL instead cid2 suppose frame axioms indirect effects relevant derive inexecutability laws The remark holds postulate follows PX No implicit executability laws S E X Ia cid2 ϕ cid11acid12cid5 S X PDL ϕ cid11acid12cid5 If executability law inferred action theory X sense inferable PDL set static executability laws Postulate PC obvious interested consistent theories It shown PX consequence PS Corollary 41 Thus PC obvious PX ensured PS things obvious Postulates PS PI turns approaches literature easily violated action theories allow express kinds laws We study postulates subsequent sections means examples algorithms decide satisﬁed discuss case answer 4 No implicit static laws While executability laws increase expressive power conﬂict inexecutability laws Consider example following action theory cid4 S 1 walking alive cid2 cid11teasecid12cid5 cid3 cid2 I 1 X 1 E 1 alive tease teasewalking loaded shootalive cid3 cid5 dependence relation cid4 cid3 cid11shoot loadedcid12 cid11shoot alivecid12 cid11shoot walkingcid12 cid11tease walkingcid12 cid5 From description unintuitive inference X tease implicit static law alive follow S I tease 1 1 1 cid11S PDL alive turkey immortal This 1 E tease 1 cid12 violates Postulate PS X tease 1 I tease 1 960 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Implicit static laws drawback underlying logical formalism They appear Situation Calculus based approaches causal laws theories To witness4 suppose Lins framework Holdsp1 s Causedp2 true s Causedp2 false s Then 2 Holdsp2 s conclude Causedp2 true s Finally 1 4 Holdsp1 s 1 2 3 4 implicit static law To implicit static laws McCain Turners causal laws approach 3 let causal law ϕ ψ T ψ Then ϕ implicit static law description How ﬁnd action theory dependence relation cid3 satisﬁes Postulate PS Theorem 16 cid11S E X Iacid12 cid3 satisfy Postulate PS big model cid11S E X Iacid12 cid3 model cid11S E X Iacid12 cid3 Proof Let M cid11W Rcid12 big model cid11S E X Iacid12 cid3 As M big model cid11S E X Iacid12 cid3 M S E Ia It remains M X w ϕi Therefore ϕj Fml S E X Ia cid2 Let ϕi cid11acid12cid5 X let w W M ϕj cid16M w ϕj S E X Ia cid2 ϕi ϕj cid11S E X Iacid12 cid3 satisfy Postulate PS S CPL ϕi ϕj M ϕi ϕj Then construction M wcid14 W w ϕi M cid11acid12cid5 M model cid11S E X Iacid12 cid3 wcid14 ψ ϕ aψ S E Ia cid2 ϕ aψ M w ϕ wRawcid14 Hence M Suppose cid11S E X Iacid12 cid3 satisfy Postulate PS Then ϕ Fml S E X Ia cid2 ϕ S cid16CPL ϕ This means valuation val S falsiﬁes ϕ As val W M contains possible valuations S M model cid11S E X Iacid12 cid3 cid2 We shall algorithm ﬁnd ﬁnite characterization all5 implicit static laws given action theory cid11S E X Iacid12 The idea follows executability law ϕ cid11acid12cid5 theory construct E Ia cid3 set inexecutabilities ϕ1 ϕn potentially conﬂict ϕ cid11acid12cid5 For 1 cid2 cid2 n ϕ ϕi satisﬁable wrt S mark ϕ ϕi implicit static law Incrementally repeat procedure adding implicit ϕ ϕi S implicit static law obtained X tease cid12 cid3 For example execution algorithm consider action theory cid11S 1 cid3 try build For action tease executability cid11teasecid12cid5 Now E tease inexecutability tease We teasewalking compute indirect effects tease wrt S 1 From walking alive alive indirect effect tease giving teasealive But cid11tease alivecid12 cid3 means frame axiom alive teasealive holds Together teasealive gives inexecutability cid5 alive satisﬁable cid5 antecedent executability cid11teasecid12cid5 alive tease As S 1 alive implicit static law alive For example inexecutability tease derived computation stops 1 E tease 1 I tease 1 I tease 1 1 Before presenting pseudocode algorithm need deﬁnitions 4 The examples 34 5 Actually algorithm ﬁnd interpolant implicit static laws theory A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 961 Deﬁnition 17 Let ϕ Fml χ clause χ implicate ϕ ϕ CPL χ In running example walking alive walking alive implicates set formulas walking alive walking Deﬁnition 18 Let ϕ Fml χ clause χ prime implicate ϕ χ implicate ϕ implicate χ cid14 ϕ χ cid14 CPL χ implies χ CPL χ cid14 The set prime implicates formula ϕ denoted PIϕ For example set prime implicates p1 p1 p1 p1 p2 p1 p3 p4 p1 p2 p3 p4 In shooting domain alive prime implicate walking alive walking For prime implicates properties compute 35 Deﬁnition 19 Let ϕ ψ Fml Then NewConsψ ϕ PIϕ ψ PIϕ The function NewConsψ ϕ computes new consequences ϕ wrt ψ set strongest clauses follow ϕ ψ follow ϕ cf 36 It computed subtracting prime implicates ϕ ϕ ψ For example NewConsp1 p2 p1 p3 p4 p1 p2 p3 p4 And scenario NewConswalking walking alive alive walking The algorithm improves 37 integrating solution frame problem dependence relation cid3 For convenience deﬁne Ca E Ia set formulas expressing direct consequences action consistent Algorithm 1 Finding implicit static laws induced input cid11S E X Iacid12 cid3 output Simp set implicit static laws cid11S E X Iacid12 Simp Ca E Ia repeat Simp ϕ cid11acid12cid5 X cid9 ˆCa ˆCa ˆCa cid16 ϕi ϕi aψi ˆCa ϕ ˆCa ψi ϕi aψi ˆCa ψ ˆCa χ NewConsϕ ˆCa S cid9 Simp Simp Simp Simp S Simp ϕ ϕ ˆCa χ cid16CPL cid4i χ cid16cid3 cid4i Simp Simp ϕ ϕ ˆCa χ This key algorithm paper In step algorithm S Simp updated set static laws original ones fed implicit laws caught point At end Simp collects implicit static laws Theorem 20 Algorithm 1 terminates Proof Let Ca E Ia First set candidates implicit static law examined repeatloop cid2 ϕ ϕ ˆCa cid3 χ ˆCa Ca ϕ cid11acid12cid5 X χ χ NewConsϕ ˆCa S 962 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 As E Ia X ﬁnite set ﬁnite In step algorithm stops Simp candidates Simp outermost forloop This terminates X Ca NewCons ﬁnite Such candidate going Simp future steps algorithm added S Simp set laws S Simp subsequent executions outermost forloop falsifying respective iftest candidate Hence repeatloop bounded number candidates Algorithm 1 terminates cid2 While terminating algorithm comes considerable computational costs ﬁrst number formulas ϕ ˆCa ψ ˆCa exponential size Ca second computation NewConsψ ˆCa S result exponential growth While expect Ca reasonably small practice E Ia general small size NewConsψ ˆCa S difﬁcult control Example 21 For cid11S 1 E tease 1 X tease 1 I tease 1 cid12 Algorithm 1 returns Simp alive Theorem 22 Let Simp output Algorithm 1 input cid11S E X Iacid12 cid3 Then cid11S E X Iacid12 cid3 satisﬁes Postulate PS Simp Proof See Appendix A cid2 Theorem 23 Let Simp output Algorithm 1 input cid11S E X Iacid12 cid3 Then 1 cid11S Simp E X Iacid12 cid3 satisﬁes PS implicit static law 2 S E X Ia cid2 cid9 Simp Proof Item 1 straightforward termination Algorithm 1 Theorem 22 Item 2 follows fact iftest Algorithm 1 formulas Simp execution repeatloop exactly implicit static laws current theory original theory cid2 Corollary 24 For ϕ Fml S E X Ia cid2 ϕ S Simp CPL ϕ Proof For lefttoright direction let S E X Ia cid2 ϕ given ϕ Fml Then S Simp E X Ia cid2 ϕ monotonicity By Theorem 231 cid11S Simp E X Iacid12 implicit static law S Simp CPL ϕ The righttoleft direction straightforward Theorem 232 cid2 What shall discovered implicit static law The existence implicit static laws indicate strong executability laws Example 21 wrongly sumed tease executable Thus way repairing theory consider weaker executability alive cid11teasecid12cid5 instead cid11teasecid12cid5 X tease On hand implicit static laws indicate inexecutability laws strong Example 25 Consider S E shoot loaded shootalive X shoot hasGun cid11shootcid12cid5 I shoot shoot dependence relation cid3 cid11shoot alivecid12 cid11shoot walkingcid12 For theory Algorithm 1 turns Simp hasGun In Example 25 discovered agent gun The problem overcome weakening shoot I shoot hasGun shoot6 6 Regarding Examples 21 25 argue practice silly errors Nevertheless examples given simplistic applications real complexity higher simply rely designers knowledge effects stated formulas A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 963 We reasoning argue problem strong set effect laws strong frame axioms weak dependence relation To witness Example 21 replace law teasewalking weaker alive teasewalking resulting action theory satisfy Postulate PS In way stating unintuitive dependence tease cid3 alive means frame axiom alive teasealive longer valid guarantees satisfaction PS Note solution intuitive alive replaced awake To ﬁnish implicit static laws course indicate static laws weak Example 26 Suppose representation line integers strictly positive number pos negative zero pos Let maxInt minInt respectively largest smallest representable integer number Action goLeft action moving biggest integer strictly smaller Consider following action theory scenario ati means number cid2 S ati pos 0 cid2 maxInt ati pos minInt cid2 cid2 0 E cid2 ati goLeftati1 minInt cid3 atminInt goLeftunderﬂow cid2 cid11goLeftcid12cid5 I cid3 X cid3 dependence relation minInt cid2 cid2 maxInt cid11goLeft aticid12 cid11goLeft poscid12 cid11goLeft poscid12 cid11goLeft underﬂowcid12 cid3 cid4 cid5 Applying Algorithm 1 action theory gives implicit static law at1 at2 numbers 1 2 time To summarize order satisfy Postulate PS action theory contain complete set static laws alternatively contain strong action laws Remark 27 S Simp general intuitive Whereas example implicit static laws added S implicit static laws unintuitive inexecutability law strong weakened Of course intuitive modiﬁed action theory depends mainly knowledge engineers choice To sum eliminating implicit static laws require revision S E cid3 completion X Ia Completing Ia topic address section 5 No implicit inexecutability laws Let S 2 S 1 E 2 E 1 X satisfy Postulate PS From teasewalking follows S turkey alive S 2 E tease S 2 2 E tease S 2 2 E tease 2 cid2 alive teasealive From follows cid2 alive tease X tease 2 I tease 2 2 I 2 let cid3 cid11S cid12 cid3 cid12 Note cid11S 2 teasealive situation teasing PDL teasealive Now tease cid16cid3 alive status alive modiﬁed tease 1 I 1 2 I 2 2 X 1 X 1 E 2 E inexecutability law stating dead turkey teased But 2 I tease S 2 cid16PDL alive tease Postulate PI violated Here formula alive tease example implicit inexe cutability law In literature laws known implicit qualiﬁcations 25 supposed tacit way positive feature frameworks leave implicit provide mechanisms inferring 23839 The way round argue implicit qualiﬁcations indicate domain described adequate manner form inexecutability laws simpler effect laws 964 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 reasonably expected easier exhaustively them7 Thus inexecutabilities given action explicitly stated Postulate PI says How check PI violated We conceive algorithm ﬁnd implicit inexecutability laws given action The basic idea follows combination effect laws form ϕ1 ϕn aψ1 ψn ϕi aψi E ϕ1 ϕn consistent wrt S ψ1 ψn inconsistent wrt S S Ia cid16PDL ϕ1 ϕn output ϕ1 ϕn implicit inexecutability law Our algorithm basically takes account dependence information For example execution algorithm cid11S cid12 cid3 given From E tease law cid5 teasewalking antecedent consistent S As long cid2 alive teasealive S walking CPL alive S I tease cid16PDL cid5 alive tease caught implicit inexe cutability As combination effect laws tease end simulation 2 E tease 2 X tease 2 I tease 2 2 2 Below pseudocode algorithm reason X computation clear sequel imp set implicit inexecutability laws Algorithm 2 Finding implicit inexecutability laws input cid11S E X Iacid12 cid3 output Ia Ia imp ˆE E cid9 cid9 ϕi ϕi aψi ˆE ϕ ˆE ψi ϕi aψi ˆE ψ ˆE χ NewConsψ ˆE S cid4i χ cid16cid3 cid4i S Ia cid16PDL ϕ ˆE χ ϕ ˆE Ia Ia imp imp χ Theorem 28 Algorithm 2 terminates Proof Straightforward assumed S E I cid3 ﬁnite NewCons ﬁnite S ψ ˆE ﬁnite cid2 Example 29 Consider S tease 2 E tease 2 X tease 2 I tease 2 cid3 given Then Algorithm 2 returns I tease imp alive Nevertheless applying Algorithm 2 guarantee Postulate PI illustrated following exam ple Example 30 Incompleteness Algorithm 2 PS Let S E p1 ap2 X cid11acid12cid5 Ia p2 cid3 Then S E X Ia cid2 p1 running Algorithm 2 cid11S E X Iacid12 S Ia cid16PDL p1 imp Example 30 shows presence implicit static laws induced executabilities implies existence implicit inexecutabilities caught Algorithm 2 One way getting rid requiring cid11S E X Iacid12 cid3 satisfy Postulate PS prior running Algorithm 2 This gives following result Theorem 31 Let Ia satisﬁes Postulate PS satisﬁes Postulate PI Ia imp output Algorithm 2 input cid11S E X Iacid12 cid3 If cid11S E X Iacid12 cid3 imp 7 Note concerns necessary conditions executability related qualiﬁcation problem basically says difﬁcult state sufﬁcient conditions executability A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 965 Proof See Appendix B cid2 With Algorithm 2 decide Postulate PI satisﬁed information repair action theory The set implicit inexecutabilities obtained provides logical metalogical informa imp added Ia tion concerning correction carried ﬁrst case elements Ia second Ia imp helps properly changing E cid3 For instance correct action theory example knowledge engineer following options 1 Add qualiﬁcation alive tease I tease 2 Add unintuitive dependence cid11tease alivecid12 cid3 3 Weaken effect law teasewalking alive teasewalking E tease 2 2 It easy opts resulting action theory tease satisfy Postulate PI satisfying PS Example 32 Drinking coffee 12 Suppose situation reason effects drinking cup coffee S E drink X drink Idrink cid4 sugar drinkhappy salt drinkhappy cid5 dependence relation cid3 cid3 cid2 cid11drink happycid12 cid11drink happycid12 Observe cid11S E drink X drink Idrinkcid12 cid3 satisﬁes PS Then running Algorithm 2 action theory Idrink imp sugar salt drink Remark 33 Ia Ia imp intuitive Whereas Example 29 got inexecutability safely added I tease Example 32 got inexecutability unintuitive presence sugar salt coffee precludes drinking In case revision parts theory considered order intuitive Anyway problem pointed depicted scenario illustrates intuition syntax The scope work relies syntactical level Only knowledge engineer judge intuitive formula 2 In follows revisit postulates order strengthen case action concern results applied action theories 6 Generalizing postulates We seen importance satisfaction Postulates PC PS PI describing action theory particular action However applications real action involved natural question raised similar metatheoretical results multiple action theories In section generalize set postulates action theories considering actions domain prove interesting results follow As going results straightforward rely additional assumptions order hold A generalization Postulate PC easy need justiﬁcation PC Logical consistency S E X I cid16cid2 The action theory logically consistent Generalizing Postulate PS following PS No implicit static laws S E X I cid2 ϕ S CPL ϕ 966 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 If classical formula inferred action theory inferable set static laws We following results Theorem 34 cid11S E X I cid12 cid3 satisfy PS cid11S E X Iacid12 cid3 satisﬁes PS Act Proof Straightforward Suppose Act cid11S E X Iacid12 satisfy PS Then ϕ Fml S E X Ia cid2 ϕ S cid16CPL ϕ Of course S E X I cid2 ϕ monotonicity S cid16CPL ϕ Hence cid11S E X I cid12 satisfy PS Suppose cid11S E X I cid12 cid3 satisfy PS Then ϕ Fml S E X I cid2 ϕ S cid16CPL ϕ ϕ equivalent ϕ1 ϕn ϕ1 ϕn Fml ϕi S cid16CPL ϕi S CPL ϕ Because logic independently axiomatized Act S E X Ia cid2 ϕi From S cid16CPL ϕi follows cid11S E X Iacid12 cid3 satisfy PS cid2 Corollary 35 cid11S E X I cid12 cid3 satisfy Postulate PS big model cid11S E X I cid12 cid3 model cid11S E X I cid12 Proof The proof follows Theorems 16 34 cid2 Theorem 36 If cid11S E X I cid12 cid3 satisﬁes PS cid11S E X I cid12 cid3 satisﬁes PC cid11S E X Iacid12 cid3 satisfy PC Act Proof Let cid11S E X I cid12 cid3 satisfy PS Suppose cid11S E X Iacid12 cid3 satisfy PC Act Because cid11S E X I cid12 cid3 satisfy PS cid11S E X Iacid12 cid3 satisfy Postulate PS Theorem 34 S CPL From follows cid11S E X I cid12 satisfy Postulate PC Suppose cid11S E X I cid12 cid3 satisfy PC Then S E X I cid2 Because cid11S E X I cid12 cid3 satisﬁes Postulate PS S CPL Since Act cid16 Act S E X Ia cid2 cid2 A general form Postulate PI stated PI No implicit inexecutability laws S E X I cid2 ϕ S I PDL ϕ If inexecutability law inferred action theory inferable PDL static inexecutability laws Note having cid11S E X Iacid12 cid3 satisﬁes PI Act cid11S E X I cid12 cid3 satisfy PI implicit static laws To witness let S E a1 X a1 cid11a1cid12cid5 Ia1 ϕ a1 Let E a2 X a2 Ia2 Observe cid11S E a1 X a1 Ia1 cid12 cid11S E a2 X a2 Ia2 cid12 cid3 satisfy PI S E X I cid2 ϕ a2 S I cid16PDL ϕ a2 Nevertheless PS result follows Theorem 37 Let cid11S E X I cid12 cid3 satisfy PS cid11S E X I cid12 cid3 satisﬁes PI cid11S E X Iacid12 cid3 satisfy PI Act Proof See Appendix C cid2 In section step attempt amending modularity criteria investigating possible extensions set postulates 7 Can ask Can augment set postulates account modules action theories metathe oretical issues reasoning actions That topic discuss follows A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 967 71 Postulates action effects It line postulates require action theories allow deduction new effect laws effect law inferred action theory inexecutability action context derived inferable set static effect laws This means PE No implicit effect laws S E X I cid2 ϕ aψ S E X I cid16cid2 ϕ S E cid2 ϕ aψ But consider following intuitively correct action theory cid5 cid4 S 3 X 3 E 3 cid2 hasGun cid11shootcid12cid5 cid3 loaded shootalive loaded alive shootalive cid2 cid3 I 3 hasGun shoot dependence shoot cid3 alive It satisﬁes Postulates PS PI satisfy PE Indeed S 3 E 3 X 3 I 3 cid2 hasGun loaded shootalive 3 E S 3 X 3 I 3 cid16cid2 hasGun loaded shoot S 3 E 3 cid16cid2 hasGun loaded shootalive So Postulate PE help deliver goods Another possibility improving modularity criteria P No unattainable effects ϕ aψ E S E X I cid16cid2 ϕ This expresses explicitly stated effect law context executability law action context It straightforward design algorithm checks postulate satisﬁed We investigate observe slightly stronger version leads unintuitive consequences P No unattainable effectsstrong version S E cid2 ϕ aψ S E X I cid16cid2 ϕ Indeed action theory E 3 cid2 hasGun loaded shootalive S 3 E 3 X 3 I 3 cid2 hasGun loaded shoot This certainly strong Our example illustrates natural redundancies laps E I Indeed pointed inexecutability laws particular kind effect laws distinction conventional The decision considering strictly different entities depends mainly context At representational level prefer separated Algorithm 1 mixed order compute consequences action In follows address problem completing set executability laws action theory 968 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 72 Maximizing executability As seen implicit static laws executability laws So question naturally raises executability laws consistently added given action theory A hypothesis usually literature maximization executabilities absence proof action inexecutable given context assume executability context Such hypothesis captured following postulate investigate section PX Maximal executability laws S E X Ia cid16cid2 ϕ S X PDL ϕ cid11acid12cid5 Such postulate expresses context ϕ inexecutability inferred respective exe cutability follow PDL executability static laws Postulate PX generally holds nonmonotonic frameworks enforced monotonic approaches maximizing X We like point maximizing executability intuitive To witness suppose know ignition key tank battery tension 10 V car necessarily start Suppose know tension 8 V car start What conclude situations know tension 9 V Maximizing executabilities makes infer start reasoning want like sure possible executions lead goal 8 Exploiting modularity In section present properties related consistency modularity action theories emphasizing main results obtain Postulate PS satisﬁed Theorem 38 If cid11S E X I cid12 cid3 satisﬁes PS S E X I cid2 S CPL This theorem says implicit static laws consistency action theory checked checking consistency S Theorem 39 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ aψ S E Ia cid2 ϕ aψ Proof See Appendix D cid2 This means PS modularity inside E deducing effects need consider action laws actions Versions executability inexecutability stated Theorem 40 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ cid11acid12cid5 S X cid2 ϕ cid11acid12cid5 Proof See Appendix E cid2 Corollary 41 PX consequence PS Proof Straightforward cid2 Theorem 42 If cid11S E X I cid12 cid3 satisfy Postulates PS PI S E X I cid2 ϕ S Ia PDL ϕ A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 969 Proof If S E X I cid2 ϕ PS Theorem 39 S E Ia cid2 ϕ From PI S Ia PDL ϕ Suppose S E X I cid16cid2 ϕ Then cid3model M M S E X I cid16M ϕ Then given M S E X Ia M S Ia Moreover deﬁnition M PDLmodel Hence S Ia cid16PDL ϕ cid2 In Theorems 40 42 modularity guarantees dependence needed derive respectively executabilities inexecutabilities cid10 cid10 cid10 Let E a1an Iai Under Postulate PS deduc tion effect sequence actions a1 prediction needs effect inexecutability laws actions a1 executability laws domain X ai Ia1an E ai X a1an 1cid2icid2n 1cid2icid2n 1cid2icid2n Theorem 43 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ a1 anψ S E a1an Ia1an cid2 ϕ a1 anψ Proof See Appendix F cid2 The result holds testing inexecutability sequence actions Corollary 44 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ a1 S E a1an Ia1an cid2 ϕ a1 Proof Straightforward special case Theorem 43 cid2 The theorem shows notion modularity fruitful plan validation Theorem 45 Let cid11S E X I cid12 cid3 satisfy Postulate PS Then S E X I cid2 ϕ cid11a1 ancid12ψ S E a1an X a1an Ia1an cid2 ϕ cid11a1 ancid12ψ Proof See Appendix G And consequence optimize testing executability plan Corollary 46 Let cid11S E X I cid12 cid3 satisfy Postulate PS Then S E X I cid2 ϕ cid11a1 ancid12cid5 S E a1an X a1an Ia1an cid2 ϕ cid11a1 ancid12cid5 Proof Straightforward special case Theorem 45 Theorems 43 45 Corollaries 44 46 suggest simulate modularization sub domains 40 If cid11a1 Propcid14cid12 subdomain Propcid14 Prop cid11S E a1an X a1an Ia1an cid12 cid3 corresponds module cid11a1 Propcid14cid12 Lifschitz Rens sense section 9 Related work Pirri Reiter investigated metatheory Situation Calculus 41 In spirit similar use executability laws effect laws Contrarily executability laws equivalences time inexecutability laws As restrict domains ramiﬁcations static laws S For setting syntactical condition effect laws guaranteeing interact executability laws sense entail implicit static laws Basically condition says effect laws ϕ1 aψ ϕ2 aψ ϕ1 ϕ2 inconsistent essentially amounts having theories kind implicit static law schema form ϕ1 ϕ2 970 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 This allows theories consistent Moreover simplify entailment problem calculus problems consistency regression modules action theory necessary Amir 42 focuses design maintainability action descriptions applying concepts object oriented paradigm Situation Calculus In work guidelines partitioned representation given theory presented inference task optimized restricted theory relevant given query This observed specially different agents involved design agents theory regard integration multiple agents queries agents beliefs account belief state agents In referred work executabilities 41 condition effect laws assumed syn tactically precludes existence implicit static laws The frame problem solved Reiters solution 32 restricted domains static laws Ramiﬁcations dealt compiling away à la Reiter Lin 43 based method given 44 takes account restricted state constraints In spite objectoriented paradigm tools techniques mention concepts cohesion coupling 4546 closely related modularity 12 In approach presented 42 modules highly cohesive necessarily lowly coupled dependence objects reasoning phase We investigate conjecture reasoning process deﬁned approach avoiding passing module formula type different contains The present work generalizes extends Pirri Reiters result case S cid16 works syntactical restriction effect laws This gives expressive power reason inexecutabilities better modularity sense combine formulas conceptually different viz executabilities inexecutabilities It constitutes better approach domains ramiﬁcations impose restriction domain laws deal Zhang et al 47 proposed assessment good action theory look like They develop ideas framework EPDL 6 extended version PDL allows propositions modalities represent causal connection literals We present details concentrate main metatheoretical results Zhang et al propose normal form describing action theories8 investigate levels consistency Roughly speaking set laws T uniformly consistent globally consistent T cid16EPDL formula Φ T consistent T cid16EPDLΦ T uniformly consistent theory T universally consistent terms logically possible world accessible Furthermore assumptions preclude existence implicit qualiﬁcations Satisfaction assumptions means theory consideration safe uniformly consistent Such normal form justiﬁes assumptions notion good theories relies Given propose algorithms test different versions consistency theory T normal form This test essentially amounts checking T safe T EPDLcid11acid12cid5 action Success check mean theory analysis satisﬁes consistency requirements Although concerned kind problems discussed work overall view subject sense problems dealt This means approach special attention sense given different components theory time wrong taken global problem inherent theory Whereas systemic view action theories necessarily drawback seen strong interaction exists different sets laws composing action theory modular sense allows better identify problematic laws care Moreover advantage allowing ﬁnd set laws modiﬁed order achieve desired consistency evident algorithms proposed results allow decide given theory satisﬁes consistency requirement 8 But expressive think For instance modeling nondeterministic action dropping coin chessboard able state dropblack white Instead write like dropblackblack dropwhitewhite dropblackwhiteblack dropblackwhitewhite dropblack action dropping coin black square analogously drop dropblack dropwhite dropblackwhite nondeterministic composition actions A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 971 Lang et al 48 address consistency action theories version causal laws approach 3 focusing computational aspects To solve frame problem suppose abstract notion completion Given theory T containing logical information direct effects indirect effects follow expressed form causal laws completion T roughly speaking original theory T amended axioms stating sistence nonaffected directly indirectly literals Note notion completion close underlying semantics dependence relation present work essentially amounts explanation closure assumption 26 Their EXECUTABILITY problem check action executable possible initial states Zhang et als safety property This amounts testing possible state w successor wcid14 reachable w wcid14 satisfy completion T For Walking Turkey Scenario formalization action tease causal laws given cid4 cid5 T tease cid5 tease walking alive walking ﬁrst formula conditional effect law tease causal law McCain Turners sense We dive technical details note executability check return example tease executed state satisfying alive In mentioned work authors concerned complexity analysis problem consistency test algorithm performing given Despite fact motivation presented kind yesno tool help metatheoretical analysis given action theory comments concerning Zhang et als approach repeated Another criticism approaches concerns assumption executability rely We ﬁnd strong require actions executable cf Section 7 reject bad action theory admitting situations action executed As example consider simple action theory cid11S E X I cid12 S walking alive E teasewalking X cid11teasecid12cid5 I dependence relation given cid3 cid11tease walkingcid12 Observe approach sufﬁces derive implicit inexecutability law alive tease change I properly run situations alive case On hand consider equivalent representation action theory approach Lang et al computing completion T tease test executability answer reason tease executable possible state alive holds Such answer correct note guideline idea possible modiﬁcation action theory carried order achieve executability tease The observation holds Zhang et als proposal Just things worse let action theory X alive cid11teasecid12cid5 obtained correction algorithms proposed Observe resulting theory satisﬁes postu lates It hard representation action theory frameworks checked respective consistency tests considered problem This problem arises Lang et als proposal allow executability laws distinction X cid11teasecid12cid5 X alive cid11teasecid12cid5 X By turn Zhang et al allows specifying executabilities consistency deﬁnitions distinguish cases alive cid11teasecid12cid5 cid11teasecid12cid5 A concept similar implicit static laws ﬁrstly addressed far concerned realm regulation consistency deontic logic 49 Indeed notions regulation consistency given mentioned work modularity presented 37 reﬁned proved equivalent The main difference mentioned work approach 37 relies fact 49 syntactical restrictions formulas order algorithm work Lifschitz Ren 40 propose action description language derived C 50 domain descriptions decomposed modules Contrarily setting theirs module set formulas given action description subsystem theory module describes set interrelated ﬂuents actions As example module describing Lins suitcase 2 contain causal laws sense C relevant scenario Actions ﬂuents having directly indirectly 972 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 suitcase described different modules This feature makes decomposition somewhat domain dependent proposed typeoriented modularization formulas depend domain In referred work modules deﬁned order specialize modules This making new module inherit specialize modules components This important feature elaborations involved In suitcase example adding new action relevant suitcase description achieved deﬁning new module inheriting properties old containing causal laws needed new action Such ideas interesting standpoint software knowledge engineer reusability intrinsic property framework easy scalability promotes elaboration tolerance Consistency given theory prevent conﬂicts modules independent inherited addressed In work illustrated examples order theory intuitive This involves theory modiﬁcation Action theory change addressed recent literature revision update 5153 In 54 investigated issue shown importance modularity task 10 Conclusion Our contribution twofold general presented postulates apply reasoning actions malisms speciﬁc proposed algorithms dependencebased solution frame problem We deﬁned concept modularity action theory pointed problems arise satisﬁed In particular argued nondynamic action theories inﬂuence inﬂuenced dynamic one9 We forward postulates particular tried demonstrate implicit static inexecutability laws slipped designing action theory question As shown possible solution comes Algorithms 1 2 guidelines correcting action theory needed By means examples seen alternatives correction choosing right module modiﬁed providing intuitive information supplied knowledge engineer Given difﬁculty exhaustively enumerating preconditions given action executable action executed reasonable expect going executability precondition ϕ1 inexecutability precondition ϕ2 lead contradiction forcing implicit static law ϕ1 ϕ2 This reason propose state information executabilities inexecutabilities run algorithms order improve description It argued unintuitive consequences action theories mainly badly written axioms lack modularity True presented case making domain description modular gives tool detect problems correct But note claim correct badly written axioms automatically Besides having separate entities ontology controlling interaction help localize problems crucial real world applications In work illustrated examples order theory intuitive This involves theory modiﬁcation In 31 presented general method changing domain description given formula want contract Their deﬁned semantics theory contraction presented syntactical coun terpart contraction operators Soundness completeness operators respect semantics established In work shown modularity sufﬁcient condition contraction successful This gives evidence notion modularity fruitful Our postulates formulated reasoning actions framework algorithms require decidable logic particular Algorithm 2 PDL candidate seen paper For ﬁrstorderbased frameworks consistency checks Algorithms 1 2 undecidable We rid assuming function symbol language In way result NewCons ﬁnite algorithm terminates 9 It objected experiments learns static laws govern universe But note involves learning hereas reasoning actions ﬁeldthe static laws known forever evolve A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 973 Hence candidate ideas Situation Calculus fragment propositional ﬂuents The present paper step solution problem indirect dependences implicit dependence shoot cid3 walking cid3 running Algorithm 2 indirect inexecutability loaded walking shoot shoot executed loaded walking holds Such unintuitive inexecutability I indicates missing indirect dependence The general case complex indirect dependences computed automatically case indeterminate effects cf example 23 We currently investigating issue The ﬁrst work formalizing modularity logical systems general Garson 55 Modularity ories reasoning actions originally deﬁned 15 Modularization ontologies description logics addressed 56 A different viewpoint work presented 12 modularity action theories assessed software engineering perspective A modularitybased approach narrative rea soning actions given 57 In 13 modularity notion extended ontologies description logic ALC Our postulates account causality statements linking propositions deﬁned 233958 This topic investigation Acknowledgements The authors grateful anonymous referees useful comments earlier version paper Ivan Varzinczak supported fellowship government FEDERATIVE REPUBLIC OF BRAZIL Grant CAPES BEX 1389017 Appendix A Proof Theorem 22 Let Simp output Algorithm 1 input cid11S E X Iacid12 cid3 Then cid11S E X Iacid12 cid3 satisﬁes Postulate PS Simp We recall CPL logical consequence classical propositional logic PIA set prime implicates set A classical formulas Before giving proof theorems recall properties prime implicates 3559 function NewCons 36 Section 4 Let ϕ Fml A Fml ﬁnite identiﬁed conjunction formulas χ clause Then cid9 PIϕ 35 Corollary 32 1 CPL ϕ 2 PIA NewConsϕ A PIA ϕ deﬁnition NewCons 3 CPL A ϕ A NewConsϕ A 1 2 4 If PIϕ CPL χ χ cid14 PIϕ χ cid14 CPL χ 35 Proposition 34 Let cid11S E X Iacid12 cid3 action theory let ϕ cid11acid12cid5 X Ca E Ia ˆCa Ca We deﬁne ϕ ˆCa ψ ˆCa cid11cid2 cid11cid2 cid3 ϕi ϕi aψi ˆCa ψi ϕi aψi ˆCa cid3 Moreover let indepa cid4 cid16cid3 cid4 Lemma 47 Let indepcid14 indepa S ψ ˆCa indepcid14 CPL S NewConsψ ˆCa S indepcid14 CPL Proof S ψ ˆCa indepcid14 CPL 974 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 cid6 S ψ ˆCa cid7 indepcid14 CPL property 1 PI cid7 cid6 S NewConsψ ˆCa S PI indepcid14 CPL property 2 S NewConsψ ˆCa S indepcid14 CPL property 1 cid2 Lemma 48 Let indepcid14 S χ indepcid14 CPL indepa If S NewConsψ ˆCa S indepcid14 CPL exists χ NewConsψ ˆCa S Proof S NewConsψ ˆCa S indepcid14 CPL PIS NewConsψ ˆCa S indepcid14 CPL property 1 cid6 S ψ ˆCa cid7 indepcid14 CPL property 2 PI cid6 S ψ ˆCa cid7 PI CPL cid11 cid4i cid4i indepcid14 cid6 S ψ ˆCa cid7 PI CPL cid12 cid4i cid4i indepcid14 exists χ PIS ψ ˆCa χ CPL cid12 cid4i cid4i indepcid14 property 4 χ indepcid14 CPL S χ indepcid14 CPL cid2 Lemma 49 Let indepcid14 exists χ NewConsψ ˆCa S S χ indepcid14 indepa If S ϕ ϕ ˆCa indepcid14 CPL cid16CPL S NewConsψ ˆCa S indepcid14 CPL Proof By Lemma 48 classical logic cid2 indepa If S ϕ ϕ ˆCa indepcid14 CPL exists χ NewConsψ ˆCa S S ϕ ϕ ˆCa cid16CPL S NewConsψ ˆCa S indepcid14 cid16CPL Lemma 50 Let indepcid14 indepcid14 S χ indepcid14 CPL Proof Trivially Lemma 49 cid2 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 975 Lemma 51 Let indepcid14 indepcid14 CPL S ϕ ϕ ˆCa cid4i CPL indepa If χ NewConsψ ˆCa S S ϕ ϕ ˆCa cid16CPL S χ cid4i cid4i χ cid16cid3 cid4i cid16CPL S χ cid4i cid4i χ cid16cid3 indepcid14 Proof Let S ϕ ϕ ˆCa indepcid14 cid16CPL χ NewConsψ ˆCa S S χ indepcid14 CPL If χ result trivial Otherwise following cases If atmχ cid16 atmindepcid14 If atmχ atmindepcid14 Let atmχ atmindepcid14 S ϕ ϕ ˆCa indepcid14 premise false lemma trivially holds lemma holds Then cid16CPL hypothesis follows S ϕ ϕ ˆCa cid4i cid4i χ cid16cid3 cid4i cid16CPL From S χ indepcid14 CPL hypothesis S indepcid14 cid16CPL follows S χ cid4i cid4i χ cid16cid3 cid4i CPL cid2 Lemma 52 If χ NewConsψ ˆCa S S ϕ ϕ ˆCa χ cid4i cid4i χ cid16cid3 cid4i CPL S ϕ ϕ ˆCa χ cid16CPL cid4i χ cid16cid3 cid4i cid4i cid4i χ cid16cid3 cid4i cid16CPL S Proof From S ϕ ϕ ˆCa cid4i cid4i χ cid16cid3 cid4i cid16CPL conclude S cid4i cid4i χ cid16cid3 cid4i cid16CPL From hypothesis S χ cid4i cid4i χ cid16cid3 cid4i CPL follows S cid4i cid4i χ cid16cid3 cid4i CPL χ If S CPL χ S ψ ˆCa CPL χ χ NewConsψ ˆCa S χ CPL χ contradic tion Hence S χ cid16CPL Suppose literal cid4 χ cid4 cid4i cid4i χ cid16cid3 cid4i Then propositional valuation χcid4true satisﬁes S χ cid4i cid4i χ cid16cid3 cid4i S χ cid4i cid4i χ cid16cid3 cid4i cid16CPL Hence literal cid4i χ cid16cid3 cid4i 976 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Now cid16cid3 cid4i cid4i χ CPL cid9 cid4i cid4i χ cid16cid3 cid4i χ From hypothesis S ϕ ϕ ˆCa cid4i cid4i χ cid16cid3 cid4i cid16CPL follows S ϕ ϕ ˆCa χ cid16CPL cid2 Proof Theorem 22 We prove cid11S E X Iacid12 cid3 satisﬁes Postulate PS Simp Suppose Simp cid16 Then ﬁrst step algorithm ϕ cid11acid12cid5 X ˆCa Ca χ NewConsψ ˆCa S S E X Ia cid2 ϕ ϕ ˆCa χ Hence cid11S E X Iacid12 satisfy Postulate PS χ S cid16CPL ϕ ϕ ˆCa Suppose Simp Therefore ϕcid14 cid11acid12cid5 X subsets ˆCa Ca χ NewConsψ ˆCa S ϕ ˆCa χ cid16CPL S ϕ exists cid4i χ cid3 cid4i cid14 From A1 Lemma 52 χ NewConsψ ˆCa S cid4i cid4i χ cid16cid3 cid4i cid16CPL S ϕ ϕ ˆCa S χ cid4i cid4i χ cid16cid3 cid4i cid16CPL From Lemma 51 follows χ NewConsψ ˆCa S S ϕ S χ indepcid14 cid16CPL cid14 ϕ ˆCa indepcid14 cid16CPL This Lemma 50 S ϕcid14 ϕ ˆCa S NewConsψ ˆCa S indepcid14 indepcid14 cid16CPL cid16CPL From Lemma 47 follows indepcid14 indepcid14 cid16CPL S ψ ˆCa S ϕ ϕ ˆCa cid14 indepa ϕcid14 cid11acid12cid5 X ˆCa Ca indepcid14 cid16CPL A1 A2 Now suppose S cid16CPL ϕ propositional ϕ We build model M M cid3model cid11S E X Iacid12 satisfy ϕ Let M cid11W Racid12 W valuationsS Ra w wcid14 W wRawcid14 M M wcid14 ψi ϕi aψi Ca M wcid14 cid4 cid4 cid16cid3 cid4 M w cid4 w ϕi We M cid3model deﬁnition Ra By deﬁnition W M model S We M model E Ia ϕi aψi Ca world w W M w ϕi deﬁnition wcid14 ψi wcid14 W wRawcid14 Moreover M model X ϕi cid11acid12cid5 X Ra M world w W M w ϕi E aw cid2 ϕi aψi E M w ϕi cid3 indepaw cid2 cid4 cid16cid3 cid4 M w cid3 cid4 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 977 S ϕi ϕE w indepaw cid16CPL ϕE w cid11cid2 cid3 ϕi ϕi aψi E aw From A2 S ψE w indepaw cid16CPL cid11cid2 ψE w cid3 ψi ϕi aψi E aw As W maximal exists wcid14 M Hence exists wcid14 wRawcid14 M w Hence M model cid11S E X Iacid12 cid3 Clearly cid16M ϕ deﬁnition W Hence S E X Ia cid16cid2 wcid14 ψE w indepaw As Ra maximal deﬁnition wRawcid14 cid11acid12cid5 ϕ Therefore cid11S E X Iacid12 cid3 satisﬁes Postulate PS cid2 Appendix B Proof Theorem 31 Let Ia imp output Algorithm 2 input cid11S E X Iacid12 cid3 If cid11S E X Iacid12 cid3 satisﬁes Postu late PS satisﬁes Postulate PI Ia Let cid11S E X Iacid12 action theory dependence relation cid3 For ˆE E deﬁne imp cid11cid2 cid11cid2 ϕ ˆE ψ ˆE cid3 cid3 ϕi ϕi aψi ˆE ψi ϕi aψi ˆE cid4 cid16cid3 cid4 Moreover let indepa indepcid14 Lemma 53 If S Ia cid16PDL ϕ ˆE NewConsψ ˆE S S Ia cid16PDL ϕ ˆE S ψ ˆE χ cid16cid3 cid4i cid4i χ indepcid14 CPL χ This means possible world v W M Then PDLmodel M cid11W Racid12 M S Ia indepcid14 v ϕ ˆE indepcid14 Proof Let S Ia cid16PDL ϕ ˆE cid16M ϕ ˆE cid16M v indepcid14 From M S ϕ ˆE v ϕ ˆE indepcid14 From hypothesis S ψ ˆE cid16CPL indepcid14 S NewConsψ ˆE S indepcid14 indepcid14 follows CPL Lemma 47 CPL Lemma 48 χ NewConsψ ˆE S S χ indepcid14 CPL From B1 B2 classical logic χ NewConsψ ˆE S cid16CPL S χ indepcid14 From Lemma 51 follows χ NewConsψ ˆE S indepcid14 S ϕ ˆE CPL S ϕ ϕ ˆE cid4i cid4i χ cid16cid3 cid4i cid16CPL S χ cid4i cid4i χ cid16cid3 cid4i CPL This Lemma 52 gives cid4i χ cid16cid3 cid4i indepcid14 Now M M v ϕ ˆE χ Because cid16M v v ϕ ˆE S Ia cid16PDL ϕ ˆE S χ indepcid14 χ cid2 M B1 B2 CPL 978 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Proof Theorem 31 We prove cid11S E X Iacid12 cid3 satisﬁes Postulate PS satisﬁes Postulate PI Ia Straightforward time S E X Ia cid2 ϕ S Ia PDL ϕ Ia imp imp changes Suppose Ia imp Therefore subsets ˆE E χ NewConsψ ˆE S S Ia cid16PDL ϕ ˆE exists cid4i χ cid3 cid4i χ From B3 Lemma 53 follows ˆE E S Ia cid16PDL ϕ ˆE S ψ ˆE indepcid14 cid16CPL indepcid14 B3 B4 Suppose S Ia cid16PDL ϕ ϕ Fml Then exists PDLmodel M cid11W Racid12 M S Ia cid16M ϕ This means possible world v W M v ϕ cid16M v We going build cid3model cid11S E X Iacid12 conclude S E X Ia cid16cid2 ϕ For given w W deﬁne cid2 Iaw ϕi Ia M w ϕi cid3 Because cid11S E X Iacid12 cid3 satisﬁes Postulate PS extend M big model Mcid14 cid11W cid14 Rcid14 cid12 W valuationsS Rcid14 deﬁned w wcid14 W cid14 wRcid14 awcid14 wcid14 cid4 cid4 cid16cid3 cid4 Mcid14 wcid14 ψi ϕi aψi E Mcid14 cid4 w Mcid14 Mcid14 Iaw w ϕi By deﬁnition Mcid14 cid3model We Mcid14 S deﬁnition W cid14 Mcid14 model E ϕi aψi E w W cid14 Mcid14 awcid14 Clearly Mcid14 model Ia ϕi Ia w W cid14 Mcid14 aw Mcid14 model X ϕi cid11acid12cid5 X w W cid14 Mcid14 wcid14 ψi wcid14 W cid14 wRcid14 w ϕi Iaw cid16 Rcid14 w ϕi w ϕi Mcid14 E aw cid2 ϕi aψi E M w ϕi cid3 indepaw cid2 cid4 cid16cid3 cid4 M w S Ia cid16PDL ϕE w indepaw cid3 ϕi ϕi aψi E aw ϕE w cid3 cid4 cid11cid2 The justiﬁcation S Ia PDL ϕE w indepaw imply S E X Ia cid2 ϕE w indepaw long ϕi cid11acid12cid5 X S E X Ia cid2 ϕi ϕE w indepaw As hy pothesis cid11S E X Iacid12 satisﬁes PS S CPL ϕi ϕE w indepaw w W cid14 Hence S Ia cid16PDL ϕE w indepaw B4 follows S ψE w indepaw cid16CPL ψE w cid11cid2 cid3 ψi ϕi aψi E aw As W cid14 maximal exists wcid14 Mcid14 wRcid14 wcid14 ψE w indepaw As Rcid14 awcid14 Mcid14 wcid14 cid11acid12cid5 awcid14 Hence exists wcid14 wRcid14 Therefore Mcid14 model cid11S E X Iacid12 cid3 Looking v W cid14 S Ia cid16PDL ϕE v indepav Rav Hence B4 follows S ψE vindepav cid16CPL exists hypothesis cid16M v maximal deﬁnition A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 979 vcid14 vRcid14 cid11S E X Iacid12 cid3 satisfy Postulate PI cid2 avcid14 Mcid14 vcid14 cid11acid12cid5 From follows S E X Ia cid16cid2 ϕ Therefore Appendix C Proof Theorem 37 Let cid11S E X I cid12 cid3 satisfy PS cid11S E X I cid12 cid3 satisﬁes PI cid11S E X Iacid12 cid3 satisfy PI Act Suppose S E X Ia cid2 ϕ By monotonicity S E X I cid2 ϕ Now suppose S Ia cid16PDL ϕ Then exists possible worlds model M cid11W Racid12 M S Ia acid14 possible world v W M Ra Then Mcid14 S I S I cid16PDL ϕ Hence cid11S E X I cid12 cid3 acid14 cid16 Rcid14 satisfy PI Let Mcid14 cid11W cid14 Rcid14cid12 W cid14 W Rcid14 v ϕ cid16M v Suppose cid11S E X I cid12 cid3 satisfy Postulate PI Then exists ϕ Fml S E X I cid2 ϕ S I cid16PDL ϕ Claim S E X Ia cid2 ϕ vcid14 W Rav vcid14 Proof claim Suppose S E X Ia cid16cid2 ϕ Then exists cid3model M cid11W Racid12 M S E X Ia cid16M ϕ This means possible world v W M v ϕ cid16M v We extend M actions cid11S E X I cid12 speaks obtain cid3model cid11S E X I cid12 Given w W ai Act deﬁne cid3 cid2 Iai w X ai w ϕj ai Iai M w ϕj cid2 ϕj cid11aicid12cid5 X ai M w ϕj Let Mcid14 cid11W cid14 Rcid14cid12 W cid14 W Rcid14 Ra cid3 wRacid14wcid14 cid10 acid14cid16a Racid14 acid14 cid16 w wcid14 W cid14 Mcid14 Mcid14 Iacid14 wcid14 cid4 cid4 acid14 cid16cid3 cid4 Mcid14 wcid14 ψi ϕi acid14ψi E acid14 w w cid4 Mcid14 w ϕi By deﬁnition Mcid14 model dependence relation cid3 Because hypothesis cid11S E X I cid12 cid3 satisﬁes PS implicit static law ai Act w W cid14 Iai w cid16 X ai w Then W cid14 valuationsS Mcid14 model S We Mcid14 model E model E given acid14 cid16 w ϕi Mcid14 ϕi acid14ψi E w W cid14 Mcid14 wcid14 ψi wcid14 W cid14 wRacid14wcid14 Clearly Mcid14 model I model Ia given acid14 cid16 ϕi acid14 I w W cid14 Mcid14 w ϕi Iacid14 w cid16 Racid14 w Mcid14 model X model X acid14 cid16 worlds w W cid14 X acid14 w cid16 world accessible Racid14 Racid14w case preclude X acid14 w cid16 w W cid14 impossible long PS satisﬁed Thus Mcid14 S E X I case S E X I cid16cid2 ϕ S E X Ia cid2 ϕ End proof claim From S I cid16PDL ϕ follows S Ia cid16PDL ϕ Putting results cid11S E X Iacid12 cid3 satisfy Postulate PI cid2 Appendix D Proof Theorem 39 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ aψ S E Ia cid2 ϕ aψ 980 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 Let cid11S E X I cid12 cid3 satisfy Postulate PS suppose S E Ia cid16cid2 ϕ aψ Then exists cid3model M cid11W Racid12 M S E Ia cid16M ϕ aψ This means possible world v W M aψ vcid14 W Rav vcid14 cid16M v ϕ cid16M v vcid14 ψ We extend M obtain cid3model cid11S E X I cid12 S E X I cid16cid2 ϕ aψ Given w W ai Act deﬁne cid3 cid2 Iai w X ai w ϕj ai Iai M w ϕj cid2 ϕj cid11aicid12cid5 X ai M w ϕj Let Mcid14 cid11W cid14 Rcid14cid12 W cid14 W Rcid14 Ra cid3 wRacid14wcid14 cid10 acid14cid16a Racid14 acid14 cid16 w wcid14 W cid14 Mcid14 Mcid14 Iacid14 wcid14 cid4 cid4 acid14 cid16cid3 cid4 Mcid14 wcid14 ψi ϕi acid14ψi E acid14 w w cid4 Mcid14 w ϕi By deﬁnition Mcid14 model dependence relation cid3 Because hypothesis cid11S E X I cid12 satisﬁes PS implicit static law ai Act w W cid14 Iai w cid16 X ai w Then W cid14 valuationsS Mcid14 model S We Mcid14 model E model E given acid14 cid16 w ϕi Mcid14 ϕi acid14ψi E w W cid14 Mcid14 wcid14 ψi wcid14 W cid14 wRacid14wcid14 Clearly Mcid14 model I model Ia given acid14 cid16 ϕi acid14 I w W cid14 Mcid14 w ϕi Iacid14 w cid16 Racid14w Mcid14 model X model X acid14 cid16 worlds w W cid14 X acid14 w cid16 world accessible Racid14 Racid14w case preclude X acid14 w cid16 w W cid14 impossible long PS satisﬁed Thus Mcid14 S E X I Because v vcid14 W cid14 Mcid14 Suppose S E X I cid16cid2 ϕ aψ Then cid3model M M S E X I cid16M ϕ aψ Then given M S E X Ia M S E Ia Hence S E Ia cid16cid2 ϕ aψ cid2 vcid14 ψ S E X I cid16cid2 ϕ aψ v ϕ vRavcid14 cid16Mcid14 Appendix E Proof Theorem 40 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ cid11acid12cid5 S X cid2 ϕ cid11acid12cid5 Let cid11S E X I cid12 cid3 satisfy Postulate PS suppose S X cid16PDL ϕ cid11acid12cid5 Then exists PDL model M cid11W Racid12 M S X cid16M ϕ cid11acid12cid5 This means possible world v W M cid11acid12cid5 v ϕ cid16M v We extend M build cid3model cid11S E X I cid12 conclude S E X I cid16cid2 ϕ cid11acid12cid5 Given w W ai Act deﬁne cid3 cid2 Iai w X ai w ϕj ai Iai M w ϕj cid2 ϕj cid11aicid12cid5 X ai M w ϕj Let Mcid14 cid11W cid14 Rcid14cid12 W cid14 W Rcid14 Ra cid3 wRacid14wcid14 cid10 acid14cid16a Racid14 acid14 cid16 w wcid14 W cid14 Mcid14 Mcid14 Iacid14 wcid14 cid4 cid4 acid14 cid16cid3 cid4 Mcid14 wcid14 ψi ϕi acid14ψi E acid14 w w cid4 Mcid14 w ϕi By deﬁnition Mcid14 model dependence relation cid3 Because hypothesis cid11S E X I cid12 satisﬁes PS implicit static law ai Act w W cid14 X ai w cid16 Iai w Then W cid14 valuationsS Mcid14 model S We Mcid14 model E model E given acid14 cid16 w ϕi Mcid14 ϕi acid14ψi E w W cid14 Mcid14 wcid14 ψi wcid14 W cid14 wRacid14wcid14 Clearly Mcid14 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 981 w ϕi w cid16 Racid14 w Mcid14 model X model X acid14 cid16 worlds w cid16 world accessible Racid14 Racid14w case preclude w cid16 w W cid14 impossible long PS satisﬁed Hence Mcid14 S E X I model I model Ia given acid14 cid16 ϕi acid14 I w W cid14 Mcid14 Iacid14 w W cid14 X acid14 X acid14 Because v W cid14 Mcid14 cid11acid12cid5 S E X I cid16cid2 ϕ cid11acid12cid5 Suppose S E X I cid16cid2 ϕ cid11acid12cid5 Then cid3model M M S E X I cid16M ϕ cid11acid12cid5 Then given M S E X Ia M S X Moreover deﬁnition M PDLmodel Hence S X cid16PDL ϕ cid11acid12cid5 cid2 v ϕ cid16Mcid14 v Appendix F Proof Theorem 43 If cid11S E X I cid12 cid3 satisfy Postulate PS S E X I cid2 ϕ a1 anψ S E a1an Ia1an cid2 ϕ a1 anψ Lemma 54 If S E X I cid2 ϕ a1 anψ a1 an1ϕcid14 S E X I cid2 ϕcid14 anψ ϕcid14 Fml S E X I cid2 ϕ Proof Let S E X I cid2 ϕ a1 anψ In case S E X I cid2 ϕ a1 result w ϕ w W M immediately follows Then given model M cid11W Rcid12 cid11S E X I cid12 M w anψ Take wcid14 cid11a1 ancid12cid5 wcid14 n1 let ϕcid14 n1 M wcid14 n1 cid12 w cid14 n1 M cid14 w n1 anψ Then S E X I cid2 ϕ a1 an1ϕcid14 S E X I cid2 ϕcid14 anψ cid2 Proof Theorem 43 The proof induction number action operators Base n 1 As cid11S E X I cid12 satisﬁes Postulate PS result follows Theorem 39 Induction hypothesis k n S E X I cid2 ϕ a1 akψ S E a1ak Ia1ak cid2 ϕ a1 akψ Step let S E X I cid2 ϕ a1 anψ By Lemma 54 classical formula ϕcid14 S E X I cid2 ϕ a1 an1ϕcid14 S E X I cid2 ϕcid14 anψ From induction hypothesis S E a1an1 Ia1an1 cid2 ϕ a1 an1ϕcid14 S E Ian cid2 ϕcid14 anψ Thus S E a1an Ia1an cid2 ϕ a1 anψ Suppose S E X I cid16cid2 ϕ a1 anψ Then cid3model M M S E X I cid16M ϕ a1 anψ Then given a1 M S E a1an X a1an Ia1an M S E a1an Ia1an Hence S E a1an Ia1an cid16cid2 ϕ a1 anψ cid2 Appendix G Proof Theorem 45 Let cid11S E X I cid12 cid3 satisfy Postulate PS Then S E X I cid2 ϕ cid11a1 ancid12ψ S E a1an X a1an Ia1an cid2 ϕ cid11a1 ancid12ψ Lemma 55 Let cid11S E X I cid12 cid3 satisfy Postulate PS If S E X I cid2 ϕ cid11acid12ψ S E X Ia cid2 ϕ cid11acid12ψ Proof Let cid11S E X I cid12 satisfy Postulate PS suppose S E X Ia cid16cid2 ϕ cid11acid12ψ Then exists cid3 model M cid11W Racid12 M S E X Ia cid16M ϕ cid11acid12ψ This means possible world v W M cid11acid12ψ v ϕ cid16M v We extend M build model cid11S E X I cid12 conclude S E X I cid16cid2 ϕ cid11acid12ψ Given w W ai Act deﬁne 982 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 cid2 cid3 Iai w X ai w ϕj ai Iai M w ϕj cid2 ϕj cid11aicid12cid5 X ai M w ϕj cid3 Let Mcid14 cid11W cid14 Rcid14cid12 W cid14 W Rcid14 Ra acid14cid16a Racid14 extend M actions cid11S E X I cid12 speaks acid14 cid16 w wcid14 W cid14 wRacid14wcid14 cid10 Mcid14 Mcid14 Iacid14 wcid14 cid4 cid4 acid14 cid16cid3 cid4 Mcid14 wcid14 ψi ϕi acid14ψi E acid14 w w cid4 Mcid14 w ϕi By deﬁnition Mcid14 model dependence relation cid3 Because hypothesis cid11S E X I cid12 satisﬁes PS implicit static law ai Act w W cid14 X ai w cid16 Iai w Then W cid14 valuationsS Mcid14 model S We Mcid14 model E model E given acid14 cid16 w ϕi Mcid14 ϕi acid14ψi E w W cid14 Mcid14 wcid14 ψi wcid14 W cid14 wRacid14wcid14 Clearly Mcid14 model I model Ia given acid14 cid16 ϕi acid14 I w W cid14 Mcid14 w ϕi Iacid14 w cid16 Racid14 w Mcid14 model X model X acid14 cid16 worlds w W cid14 X acid14 w cid16 world accessible Racid14 Racid14w case preclude X acid14 w cid16 w W cid14 impossible long PS satisﬁed Hence Mcid14 S E X I Because v W cid14 Mcid14 cid11acid12ψ S E X I cid16cid2 ϕ cid11acid12ψ cid2 v ϕ cid16Mcid14 v Lemma 56 If S E X I cid2 ϕ cid11a1 ancid12ψ ϕcid14 Fml S E X I cid2 ϕ cid11a1 an1cid12ϕcid14 S E X I cid2 ϕcid14 cid11ancid12ψ Proof The proof induction number action operators Base n 2 Suppose S E X I cid2 ϕ cid11a1 a2cid12ψ Then S E X I cid2 ϕ cid11a1cid12cid11a2cid12ψ For model wcid14 cid11a2cid12ψ w ϕ wcid14 W wRa1wcid14 M M cid11W Rcid12 cid11S E X I cid12 w W M Let ϕcid14 cid4 cid4 wcid14 result follows Induction hypothesis k n S E X I cid2 ϕ cid11a1 akcid12ψ ϕcid14 Fml cid9 S E X I cid2 ϕ cid11a1 ak1cid12ϕcid14 S E X I cid2 ϕcid14 cid11akcid12ψ Step let S E X I cid2 ϕ cid11a1 ancid12ψ Then S E X I cid2 ϕ cid11a1 an1cid12cid5 By induction hypothesis ϕcid14 Fml S E X I cid2 ϕ cid11a1 an2cid12ϕcid14 S E X I cid2 ϕcid14 cid11an1cid12cid5 Because S E X I cid2 ϕ cid11a1 ancid12ψ given model M cid11W Rcid12 cid11S E X I cid12 w ϕ w W wcid14 cid11an1cid12cid11ancid12ψ Then safely M cid9 ϕcid14 Now S E X I cid2 ϕcid14 cid11an1cid12cid11ancid12ψ By base step ϕcid14cid14 Fml S E X I cid2 ϕcid14 cid11an1cid12ϕcid14cid14 S E X I cid2 ϕcid14cid14 cid11ancid12ψ Putting results S E X I cid2 ϕ cid11a1 an1cid12ϕcid14cid14 S E X I cid2 ϕcid14cid14 cid11ancid12ψ ϕcid14cid14 Fml cid2 W M wcid14 cid4 cid4 wcid14 n2 n2 n2 Proof Theorem 45 The proof induction number action operators Base n 1 As cid11S E X I cid12 satisﬁes Postulate PS result follows Lemma 55 Induction hypothesis k n S E X I cid2 ϕ cid11a1 akcid12ψ S E a1ak X a1ak Ia1ak cid2 ϕ cid11a1 akcid12ψ Step let S E X I cid2 ϕ cid11a1 ancid12ψ By Lemma 56 ϕcid14 Fml S E X I cid2 ϕ cid11a1 an1cid12ϕcid14 S E X I cid2 ϕcid14 cid11ancid12ψ By induction hypothesis S E a1an1 X a1an1 Ia1an1 cid2 ϕ cid11a1 an1cid12ϕcid14 S E X Ian cid2 ϕcid14 cid11ancid12ψ Then gives S E a1an X a1an Ia1an cid2 ϕ cid11a1 ancid12ψ Suppose S E X I cid16cid2 ϕ cid11a1 ancid12ψ Then cid3model M M S E X I cid16M ϕ cid11a1 ancid12ψ Then given a1 M S E a1an X a1an Ia1an S E a1an X a1an Ia1an cid16cid2 ϕ cid11a1 ancid12ψ cid2 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 983 References 1 G De Giacomo M Lenzerini PDLbased framework reasoning actions M Gori G Soda Eds Proc 4th Congress Italian Association Artiﬁcial Intelligence IA AI95 Lecture Notes Artif Intell vol 992 SpringerVerlag 1995 pp 103114 2 F Lin Embracing causality specifying indirect effects actions Mellish 62 pp 19851991 3 N McCain H Turner A causal theory ramiﬁcations qualiﬁcations Mellish 62 pp 19781984 4 M Thielscher Computing ramiﬁcations postprocessing Mellish 62 pp 19942000 5 M Castilho O Gasquet A Herzig Formalizing action change modal logic I The frame problem Journal Logic Computa tion 9 5 1999 701735 6 D Zhang N Foo EPDL A logic causal reasoning B Nebel Ed Proc 17th Intl Joint Conf Artiﬁcial Intelligence IJCAI01 Seattle Morgan Kaufmann Publishers 2001 pp 131138 7 D Harel Dynamic logic D Gabbay F Günthner Eds Handbook Philosophical Logic vol II D Reidel Dordrecht 1984 pp 497 604 8 J McCarthy P Hayes Some philosophical problems standpoint artiﬁcial intelligence B Meltzer D Mitchie Eds Machine Intelligence vol 4 Edinburgh University Press 1969 pp 463502 9 M Gelfond V Lifschitz Representing action change logic programs Journal Logic Programming 17 234 1993 301321 10 N Kartha V Lifschitz Actions indirect effects preliminary report J Doyle E Sandewall P Torasso Eds Proc 4th Intl Conf Knowledge Representation Reasoning KR94 Bonn Morgan Kaufmann Publishers 1994 pp 341350 11 E Giunchiglia G Kartha V Lifschitz Representing action Indeterminacy ramiﬁcations Artiﬁcial Intelligence 95 2 1997 409438 12 A Herzig I Varzinczak Cohesion coupling metatheory actions Kaelbling Safﬁotti 60 pp 442447 13 A Herzig I Varzinczak A modularity approach fragment ALC M Fisher W van der Hoek B Konev A Lisitsa Eds Proc 10th Eur Conf Logics Artiﬁcial Intelligence JELIA2006 Lecture Notes Artif Intell vol 4160 SpringerVerlag 2006 pp 216228 14 F Baader D Calvanese D McGuinness D Nardi P PatelSchneider Eds Description Logic Handbook Cambridge University Press 2003 15 A Herzig I Varzinczak Domain descriptions modular R López Mántaras L Saitta Eds Proc 16th Eur Conf Artiﬁcial Intelligence ECAI04 Valencia IOS Press 2004 pp 348352 16 D Harel J Tiuryn D Kozen Dynamic Logic MIT Press Cambridge MA 2000 17 M Kracht F Wolter Properties independently axiomatizable bimodal logics Journal Symbolic Logic 56 4 1991 14691485 18 M Kracht F Wolter Simulation transfer results modal logic A survey Studia Logica 59 1997 149177 19 S Popkorn First Steps Modal Logic Cambridge University Press 1994 20 P Blackburn M Rijke Y Venema Modal Logic Cambridge Tracts Theoretical Computer Science Cambridge University Press 2001 21 M Fitting Proof Methods Modal Intuitionistic Logics D Reidel Dordrecht 1983 22 S Hanks D McDermott Default reasoning nonmonotonic logics frame problem T Kehler S Rosenschein Eds Proc 5th Natl Conf Artiﬁcial Intelligence AAAI86 Philadelphia Morgan Kaufmann Publishers 1986 pp 328333 23 M Castilho A Herzig I Varzinczak It depends context decidable logic actions plans based ternary dependence relation S Benferhat E Giunchiglia Eds Workshop Nonmonotonic Reasoning NMR02 Toulouse 2002 pp 343348 24 J McCarthy Epistemological problems artiﬁcial intelligence N Sridharan Ed Proc 5th Intl Joint Conf Artiﬁcial Intelligence IJCAI77 Cambridge MA Morgan Kaufmann Publishers 1977 pp 10381044 25 M Ginsberg D Smith Reasoning actions II The qualiﬁcation problem Artiﬁcial Intelligence 35 3 1988 311342 26 L Schubert Monotonic solution frame problem situation calculus An efﬁcient method worlds fully speciﬁed actions H Kyberg R Loui G Carlson Eds Knowledge Representation Defeasible Reasoning Kluwer Academic Publishers 1990 pp 2367 27 P Doherty W Łukaszewicz A Szałas Explaining explanation closure Proc 9th Intl Symposium Methodologies Intelligent Systems Zakopane Poland Lecture Notes Comput Sci vol 1079 SpringerVerlag 1996 28 J Finger Exploiting constraints design synthesis PhD thesis Stanford University Stanford 1987 29 R Demolombe A Herzig I Varzinczak Regression modal logic Journal Applied NonClassical Logics JANCL 13 2 2003 165 185 30 R Reiter The frame problem situation calculus A simple solution completeness result goal regression V Lifschitz Ed Artiﬁcial Intelligence Mathematical Theory Computation Papers Honor John McCarthy Academic Press San Diego 1991 pp 359380 31 I Varzinczak What good domain description Evaluating revising action theories dynamic logic PhD thesis Université Paul Sabatier Toulouse 2006 32 R Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems MIT Press Cambridge MA 2001 33 M Castilho O Gasquet A Herzig A dependencebased framework actions indeterminate indirect effects Tech Rep RT98 04R Institut recherche en informatique Toulouse IRIT Université Paul Sabatier httpwwwiritfrLILaC February 1998 34 C Schwind Causality action theories Linköping Electronic Articles Computer Information Science 4 4 35 P Marquis Consequence ﬁnding algorithms D Gabbay P Smets Eds Algorithms Defensible Uncertain Reasoning S Moral J Kohlas Eds Handbook Defeasible Reasoning Uncertainty Management Systems vol 5 Kluwer Academic Publishers 2000 pp 41145 Chapter 2 36 K Inoue Linear resolution consequence ﬁnding Artiﬁcial Intelligence 56 23 1992 301353 984 A Herzig I Varzinczak Artiﬁcial Intelligence 171 2007 951984 37 A Herzig I Varzinczak On modularity theories R Schmidt I PrattHartmann M Reynolds H Wansing Eds Ad vances Modal Logic vol 5 Kings College Publications 2005 pp 93109 selected papers AiML 2004 available httpwwwaimlnetvolumesvolume5 38 F Lin Embracing causality specifying indeterminate effects actions Shrobe Senator 61 pp 670676 39 M Thielscher Ramiﬁcation causality Artiﬁcial Intelligence 89 12 1997 317364 40 V Lifschitz W Ren Towards modular action description language Proc 21st Natl Conf Artiﬁcial Intelligence AAAI2006 Boston AAAI PressMIT Press 2006 41 F Pirri R Reiter Some contributions metatheory situation calculus Journal ACM 46 3 1999 325361 42 E Amir Decomposition situation calculus theories Proc 17th Natl Conf Artiﬁcial Intelligence AAAI2000 Austin AAAI PressMIT Press 2000 pp 456463 43 F Lin R Reiter State constraints revisited Journal Logic Computation 4 5 1994 655678 44 S McIlraith Integrating actions state constraints A closedform solution ramiﬁcation problem Artiﬁcial Intelli gence 116 12 2000 87121 45 I Sommerville Software Engineering Addison Wesley 1985 46 R Pressman Software Engineering A Practitioners Approach McGrawHill 1992 47 D Zhang S Chopra N Foo Consistency action descriptions M Ishizuka A Sattar Eds Proc 7th Paciﬁc Rim Intl Conf Artiﬁcial Intelligence Trends Artiﬁcial Intelligence Lecture Notes Comput Sci vol 2417 SpringerVerlag 2002 pp 7079 48 J Lang F Lin P Marquis Causal theories actionA computational core V Sorge S Colton M Fisher J Gow Eds Proc 18th Intl Joint Conf Artiﬁcial Intelligence IJCAI03 Acapulco Morgan Kaufmann Publishers 2003 pp 10731078 49 L Cholvy Checking regulation consistency SOLresolution Proc 7th Intl Conf AI Law Oslo 1999 pp 7379 50 E Giunchiglia J Lee V Lifschitz N McCain H Turner Nonmonotonic causal theories Artiﬁcial Intelligence 153 12 2004 49104 51 R Li L Pereira What believed explained Shrobe Senator 61 pp 550555 52 P Liberatore A framework belief update Proc 7th Eur Conf Logics Artiﬁcial Intelligence JELIA2000 2000 pp 361375 53 T Eiter E Erdem M Fink J Senko Updating action domain descriptions Kaelbling Safﬁotti 60 pp 418423 54 A Herzig L Perrussel I Varzinczak Elaborating domain descriptions G Brewka S Coradeschi A Perini P Traverso Eds Proc 17th Eur Conf Artiﬁcial Intelligence ECAI06 Riva del Garda IOS Press 2006 pp 397401 55 J Garson Modularity relevant logic Notre Dame Journal Formal Logic 30 2 1989 207223 56 B Cuenca Grau B Parsia E Sirin A Kalyanpur Modularity web ontologies P Doherty J Mylopoulos C Welty Eds Proc 10th Intl Conf Knowledge Representation Reasoning KR2006 Lake District Morgan Kaufmann Publishers 2006 pp 198208 57 A Kakas L Michael R Miller ModularE An elaboration tolerant approach ramiﬁcation qualiﬁcation problems C Baral G Greco N Leone G Terracina Eds Proc 8th Intl Conf Logic Programming Nonmonotonic Reasoning Diamante SpringerVerlag 2005 pp 211226 58 J Gustafsson P Doherty Embracing occlusion specifying indirect effects actions L Aiello J Doyle S Shapiro Eds Proc 5th Intl Conf Knowledge Representation Reasoning KR96 Cambridge MA Morgan Kaufmann Publishers 1996 pp 8798 59 P Marquis Knowledge compilation theory prime implicates Mellish 62 pp 837843 60 L Kaelbling A Safﬁotti Eds Proc 19th Intl Joint Conf Artiﬁcial Intelligence IJCAI05 Edinburgh Morgan Kaufmann Publishers 2005 61 H Shrobe T Senator Eds Proc 13th Natl Conf Artiﬁcial Intelligence AAAI96 Portland AAAI PressMIT Press 1996 62 C Mellish Ed Proc 14th Intl Joint Conf Artiﬁcial Intelligence IJCAI95 Montreal Morgan Kaufmann Publishers 1995