Artiﬁcial Intelligence 175 2011 264277 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint From answer set logic programming circumscription logic GK Fangzhen Lin Yi Zhou b Department Computer Science Hong Kong University Science Technology Clear Water Bay Kowloon Hong Kong b School Computing Mathematics University Western Sydney Penrith South DC NSW 1797 Australia r t c l e n f o b s t r c t Article history Available online 3 April 2010 Keywords Logic programming Answer set programming Logic GK Circumscription Nonmonotonic reasoning Knowledge representation reasoning We ﬁrst embed Pearces equilibrium logic Ferrariss propositional general logic programs Lin Shohams logic GK nonmonotonic modal logic shown include special cases Reiters default logic propositional case Moores autoepistemic logic From embedding obtain mapping Ferrariss propositional general logic programs circumscription mapping check strong equivalence propositional logic programs classical logic We Ferrariss propositional general logic programs extended ﬁrstorder case mapping Ferrariss propositional general logic programs circumscription extended ﬁrstorder case provide semantics ﬁrstorder general logic programs 2010 Elsevier BV All rights reserved Prologue It gives great pleasure able contribute work special issue Artiﬁcial Intelligence honor John McCarthy Like inﬂuenced greatly McCarthy work long known AI This particular work relates McCarthys circumscription nonmonotonic logics obviously McCarthys pioneering work nonmonotonic reasoning general circumscription particular 1 Introduction Answer Set Programming ASP new paradigm constraintbased programming based logic programming answer set semantics 91317 It started normal logic programs programs negation disjunction Driven need applications extensions proposed These include disjunctive logic programs 56 nested expressions 7 cardinality weight constraints 16 Recently Ferraris 2 proposed view formulas propositional logic logic programs showed include special cases mentioned classes logic programs In particular Ferraris 2 provided stable model semantics formulas transformation similar original GelfondLifschitz transformation showed semantics coincides Pearces equilibrium logic 19 In paper general stable model semantics embedded Lin Shohams logic GK Grounded Knowledge 11 Besides showing generality Lin Shohams logic proposed general logic nonmonotonic reasoning embedding allows obtain way check classical propositional logic given logic programs strongly equivalent way 12 It allows obtain Corresponding author Email address ﬂincsusthk F Lin 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201004001 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 265 mapping general logic programs propositional circumscription way Lin Shoham 11 mapping normal logic programs circumscription As turned mapping extended ﬁrstorder case yields semantics ﬁrstorder general logic programs similar proposed recently Ferraris et al 4 We ﬁrst brieﬂy review Lin Shohams logic GK Ferrariss general logic programs Pearces equilibrium logic 2 Logic GK The language logic GK modal propositional language modal operators K knowledge A assumption Given set Atom atoms called variables primitive propositions formulas logic GK deﬁned inductively BNF notation F p K F AF F F F F F F F p Atom constant standing falsity Formulas modal operators called base formulas The semantics logic GK deﬁned Kripke interpretations A Kripke interpretation M tuple cid8W π R K R A scid9 W nonempty set elements called possible worlds π function maps possible world truth assignment Atom R K R A binary relations W representing accessibility lations K A respectively s W called actual world M The satisfaction relation cid10 Kripke interpretation M cid8W π R K R A scid9 formula F deﬁned inductively follows M cid11cid10 M cid10 p π sp 1 p Atom M cid10 F iff M cid11cid10 F M cid10 F G iff M cid10 F M cid10 G M cid10 F G iff M cid10 F M cid10 G M cid10 F G iff M cid11cid10 F M cid10 G M cid10 K F iff cid8W π R K R A wcid9 cid10 F w W s w R K M cid10 AF iff cid8W π R K R A wcid9 cid10 F w W s w R A We Kripke interpretation M model formula F M satisﬁes F In following given Kripke interpre tation M let cid2 K M AM cid2 F F cid3 cid4 cid3 F base formula M cid10 K F cid3 cid4 cid3 F base formula M cid10 AF Notice K M AM closed classical logical entailment In following set X formulas let Th X logical closure X classical logic Informally GK assumes AM minimizes K M When assumed AM turns minimal K M equilibrium reached assumption said justiﬁed knowledge said grounded Formally GK models deﬁned follows Deﬁnition 21 GK models Given formula F Kripke interpretation M minimal model F M model F exist model M1 F AM1 AM K M1 K M We M GK model1 M minimal model F K M AM Lin Shoham showed logic GK capture Reiters default logic 20 Moores autoepistemic logic 15 As consequence normal logic programs stable model semantics captured logic GK Speciﬁcally showed normal rule r p1 pn q1 qm translated following sentence logic GK Kp1 Kpn Aq1 Aqm Kr 1 They showed translation extends disjunctive logic programs In paper shall general logic programs proposed Ferraris 2 captured logic GK 1 In 11 GK models called preferred models 266 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 3 General logic programs Given set Atom atoms general logic programs 3 formulas deﬁned inductively BNF notation F p F F F F F F p Atom Notice negation language Instead formula F F considered shorthand F A set X Atom atoms considered truth assignment straightforward way X cid11cid10 X cid10 p iff p X usual deﬁnition logical connectives The stable models formula general logic program deﬁned modiﬁed extended GelfondLifschitz transforma tion Given general logic program F set X atoms reduct F X 2 written F X formula obtained F replacing maximal subformula classically satisﬁed X Thus example F X cid5 cid15 X cid10 F Now set X atoms stable model general logic program F X cid10 F X ii proper subset X1 X X1 cid10 F X Example 31 Consider following general logic programs P p q Q p p R p p q satisﬁed p q atoms The maximal subformula P false q p P q Therefore q stable model P On hand P satisﬁed p subset Therefore p stable model P It seen q stable model P Similarly shown Q stable models p R exactly stable model p q 4 Pearces equilibrium logic Pearces equilibrium logic 19 based logic hereandthere nonclassical logic Given set Atom atoms formulas Atom exactly case general logic programs Thus negation equilibrium logic considered shorthand The semantics logic hereandthere deﬁned terms HTinterpretations pairs cid8 X Y cid9 sets atoms X Y The HT satisfaction relation2 cid10 HTinterpretation cid8 X Y cid9 formula F deﬁned recursively follows For p Atom cid8 X Y cid9 cid10 p p X cid8 X Y cid9 cid11cid10 cid8 X Y cid9 cid10 F G cid8 X Y cid9 cid10 F cid8 X Y cid9 cid10 G cid8 X Y cid9 cid10 F G cid8 X Y cid9 cid10 F cid8 X Y cid9 cid10 G cid8 X Y cid9 cid10 F G cid8 X Y cid9 cid11cid10 F cid8 X Y cid9 cid10 G ii Y cid10 F G An HT interpretation cid8 X Y cid9 equilibrium model formula F X Y cid8 X Y cid9 cid10 F proper subset X1 X cid8 X1 Y cid9 cid10 F Ferraris 2 showed stable models formula essentially equilibrium models Theorem 1 Ferraris Let X set atoms F general logic program X stable model F iff cid8 X Xcid9 equilibrium model F 2 We overload cid10 use stand satisfaction relations modal logic classical logic logic hereandthere Which stands clear context F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 267 5 From general logic programs equilibrium logic logic GK In section present translation general logic program formula equilibrium logic formula logic GK translation stable models equilibrium models coincide GK models logic GK Given general logic program F deﬁne formulas F A F GK logic GK follows 1 F A obtained F simultaneously replacing atom p Ap 2 F GK deﬁned inductively follows GK For p Atom pGK Kp F cid17 GGK F GK cid17 G GK cid17 F GGK F GK G GK F G A It shown normal logic program F F GK equivalent translation Lin Shoham 11 given Section 2 cid6 pAtom Kp Ap 2 formula W logic GK M GK model W iff M GK model W 2 This translation similar mapping formulas equilibrium logic quantiﬁed boolean formulas given 18 We shall discuss later section To illustrate consider programs Example 31 P GK cid7 pGK qGK cid8 p q A cid7 cid8 pGK p A Kq p A q A cid7 Kp Ap Kq cid8 Ap Aq 3 Now let M model sentence If p AM 3 holds matter K M minimal model K M Th GK model Now p AM 3 equivalent Kp Kq Aq Thus q AM Thus M minimal model K M Thq And AM K M M GK model What shown GK model M 3 K M AM Thq The existence model apparent It similarly shown Q GK equivalent Ap Kp M GK model Q GK iff K M AM Thp K M AM Thcid15 And RGK equivalent Kp Ap M GK model RGK iff K M AM Thcid15 Thus programs GK models correspond onetoone stable models In general following result Proofs theorems Appendix A Theorem 2 Let X set atoms F general logic program The following statements equivalent 1 X stable model F 2 There GK model M F GK K M AM Th X 6 From general logic programs equilibrium logic circumscription Given mapping 1 normal logic program logic GK Lin Shoham 11 showed stable model semantics normal logic programs captured circumscription 14 follows Given set Atom p q cid18 new set atoms Given normal logic program F let CF conjunction atoms let Atom sentences cid18 p cid18 q p1 pn q cid18 1 cid18 q m r rule r p1 pn q1 qm F Lin Shoham 11 showed X stable model F iff X X cid18 model 268 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 cid6 cid7 cid8 cid18 p p cid7 Circum CF Atom cid8 pAtom CircumW Q circumscription atoms Q W atoms ﬁxed Lin Shoham showed result extended disjunctive logic programs Using idea capture stable model semantics general logic program equilibrium logic circumscription Let Atom set atoms Again let Atom cid18 p X Given general logic program F language Atom let CF result obtained F GK replacing Kp p Ap p cid18 p Atom set new atoms For X Atom let X p Atom cid18 p cid18 p cid18 Theorem 3 For general logic program F language Atom set X Atom following statements equivalent 1 There GK model M F GK K M AM Th X 2 X X cid18 model cid6 cid7 p p cid8 cid18 cid7 Circum CF Atom cid8 4 pAtom Interestingly translation CF embeds general logic programs equilibrium logic circumscription exactly Pearce et al 18 embedding equilibrium logic quantiﬁed boolean formulas They showed cid8 X Xcid9 equilibrium model formula F equilibrium logic iff X model following quantiﬁed boolean formula cid18 F formula obtained F replacing atom p p cid8 cid6 cid8 cid7 cid7 cid6 cid7cid7 Atom Atom cid8 cid18 cid8 CF F cid18 Atom cid18 p p cid18 cid18 p p pAtom pAtom cid18 Atom Atom cid18 stands While propositional circumscription quantiﬁed boolean formula studied formalism There known results circumscription use Mapping logic programs circumscription help better stand formalisms cid9 Notice formula cid10 cid6 cid7 cid11 cid8 cid18 p p pAtom pAtomp p cid7 cid10 cid6 cid11 cid8 cid18 p p pAtom cid18 equivalent Thus 4 equivalent cid11 cid10 cid6 cid7 cid8 p p cid18 pAtom cid10 cid6 cid7 pAtom cid11 cid8 cid18 p p cid7 Circum CF Atom cid8 equivalent cid10 cid6 cid7 cid18 p p pAtom cid11 cid8 cid12 Circum CF cid6 cid7 cid8 cid18 p p cid13 Atom pAtom cid9 atoms predicates minimized occur negatively theory circumscription good simplify CF pAtomp p cid18 Putting formula cid9 pAtomp p cid18 cid9 Proposition 61 If cid6 cid7 pAtomp p cid8 p p cid18 CircumW Atom cid18 cid10 CF W 4 equivalent pAtom Consider programs Example 31 For P CP equivalent p p cid18 q p p cid18 Thus program 4 equivalent cid18 q q p cid18 q equivalent cid7 p p cid8 cid18 cid7 q q cid18 cid8 Circum cid7 p cid18 q p q cid8 equivalent cid7 p p cid8 cid18 cid7 q q cid18 cid8 unique model q q p cid18 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 269 cid7 p cid18 q cid8 For Q p p CQ equivalent p cid18 p Thus program 4 equivalent cid7 cid8 cid18 p p Circum cid7 p cid8 cid18 p p cid18 equivalent p p models p p 7 Firstorder general logic programs circumscription As 11 extend mapping ﬁrstorder case First extend logic programs ﬁrst order case Let L relational ﬁrstorder language equality proper functions By atom mean atomic formula including equality atoms In following let Σuna set unique names assumptions constants c1 cid11 c2 distinct constants c1 c2 A ﬁrstorder general logic program ﬁrstorder sentence following set F A F F F F F F xF xF A atom x variable Again general logic program F F considered shorthand F Now let M ﬁnite model Σuna domain D Let σ mapping constants D M Clearly distinct constants c1 c2 σ c1 cid11 σ c2 We M stable model ﬁrstorder general logic program F T M set ground facts true M T M cid2 P cid23u cid3 cid3 P predicate cid23u P M cid4 stable model general logic program F M grounding F M obtained F M steps 1 First replace constant c F σ c subformula form xW cid14 uD W xu uD W xu W xu result replacing free occurrence x subformula form xW W u The order subformulas replaced matter 2 In expression obtained ﬁrst step replace equality atom u u cid15 u u cid18 distinct u cid9 u cid18 Example 71 Consider following programs cid8 cid7 px q F 1 xpx x cid15cid7 cid8 F 2 xpx xpx cid8 cid7 cid15 xpx F 3 xpx cid7 px q F 4 xpx x q cid16 q cid8 cid16 Now consider structure elements b The grounding programs domain cid8cid8 cid7cid7 cid7 cid7 cid8 cid8 pa pb cid8 pa pb cid8 pa pb cid8 pa pb cid7 cid7 cid7 cid7cid7 pb q pa q cid8 cid8 q pa pb cid8 cid8 cid7 pa pb q pb q pa q cid7 cid8 cid8 cid7 cid7 respectively So domain F 1 F 3 stable models pa pb F 2 F 4 stable models pa q pb q It easy case given domain F 1 F 3 stable models F 2 F 4 stable models We stable models ﬁrstorder general logic programs captured circumscription Let cid5 set predicates language Let cid5cid18 set new predicates P cid5 arity Now given ﬁrstorder general logic program F let CF ﬁrstorder formula deﬁned inductively cid18 denoted P follows C If W atomic formula CW W 270 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 CW 1 cid17 W 2 CW 1 cid17 CW 2 cid17 CxW xCW CxW xCW CW 1 W 2 CW 1 CW 2 W W cid18 1 cid18 2 W cid18 result replacing predicate P W P cid18 The stable models F models circumscription predicates cid5 CF following axiom cid6 cid7 cid23x P cid23x P cid18 cid8 cid23x P cid5 Theorem 4 Let M ﬁnite model Σuna M stable model F iff M cid7 cid8 Circum CF cid5 5 cid18 model 5 6 M cid18 conservative extension M 5 Similar Proposition 61 Proposition 71 If cid9 P cid5 cid23xP cid23x P cid18cid23x cid10 CF W 6 equivalent CircumW cid5 5 Example 72 Consider programs Example 71 cid8 cid7 cid18 p x q cid18x q xpx p cid18 cid8cid16 CF 1 cid15cid7 xpx x px p cid18 x q equivalent xpx xp equivalent xpx cid7cid7 cid18 cid8 x cid8 q xp equivalent xpx q cid18x Therefore 5 CircumCF 1 p q considered ﬁrstorder semantics F 1 If D b exactly models sentence pa pb CF 2 xpx cid7 cid7 x px p cid18 cid8 x cid7 cid8 q cid18 xp x q cid8 cid18 equivalent xpx xpx p cid7 cid7 cid8 cid18 x q xp xpx xp cid18 x q cid8 cid18x Therefore CircumCF 2 p q equivalent 5 equivalent cid8 xpx xpx cid7cid7 cid8 q considered ﬁrstorder semantics F 2 If D b exactly models sentence pa q pb q CF 3 CF 4 xpx cid7 xpx xp cid18 x q cid8 cid7 cid18 xp x q cid8 cid18 equivalent CF 1 5 Thus F 1 F 3 equivalent semantics xpx x cid15cid7 px p cid18 x q cid7 cid8 cid18 p x q cid18 cid8cid16 equivalent CF 2 Thus F 2 F 4 equivalent semantics F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 271 We deﬁned stable model semantics ﬁrstorder logic programs reducing propositional logic programs grounding For work need assume ﬁnite domain ﬁrstorder sentence xpx replaced propositional sentence We need unique names assumption order eliminate equality literals b cid11 b Theorem 4 shows stable model semantics ﬁrstorder logic programs captured simple formula 6 circumscription However stable model semantics makes unique names ﬁnite models assumptions formula 6 completely general makes sense assumptions Thus use formula deﬁne stable model semantics ﬁrstorder logic programs general case As turned yield semantics essentially proposed recently Ferraris et al 4 More precisely given ﬁrstorder sentence F Ferraris et al proposed secondorder sentence stable model semantics showed second order sentence equivalent 6 new predicates existentially quantiﬁed cid23pϕ cid23P cid18cid23p ϕ formula 6 cid23p cid18cid23p result replacing tuple predicate variables predicate P ϕ corresponding variable cid23p P ϕ arity ϕ cid23P cid18 cid18 8 Strong equivalence The notion strong equivalence 8 important logic programming For disjunctive logic programs research Lin Chen 10 Eiter et al 1 interesting programs transformation rules designed based notion According Ferraris Lifschitz 3 general logic programs F G said strongly equivalent formula F 1 contains occurrence F F 1 stable models formula obtained replacing occurrence F G They showed F G strongly equivalent iff F G equivalent logic hereandthere As turns mapping equilibrium logic logic GK embeds logic hereandthere modal logic Thus problem deciding programs strongly equivalent reduced checking certain modal logic formulas valid special format modal formulas turn reduced checking certain propositional formulas tautologies Theorem 5 Let F formula equilibrium logic X Y sets atoms X Y M Kripke interpretation K M Th X AM ThY We cid8 X Y cid9 cid10 F iff M cid10 F GK Theorem 6 Let F G general logic programs The following conditions equivalent cid9 cid9 cid9 cid9 1 F G strongly equivalent 2 3 4 5 pAtomKp Ap cid10 F GGK pAtomKp Ap cid10 F GK G GK pAtomp p pAtomp p cid18 cid10 CF G cid18 cid10 CF CG Corollary 7 The problem deciding general logic programs strongly equivalent coNP complete 9 Conclusion We showed logic GK proposed Lin Shoham ﬂexible handle stable model semantics general logic programs Because stable model semantics general logic programs formulated circumscription propositional ﬁrstorder cases For future work plan use expressive power GK applications Acknowledgements We thank Vladimir Lifschitz stimulating discussions topics related paper helpful comments earlier versions paper This work supported HK RGC grant HKUST617004E China NSFC grants 60703095 90718009 Appendix A Proofs theorems A1 Proof Theorem 2 Lemma 1 Let F general logic program X Y sets atoms X Y M Kripke interpretation K M Th X AM ThY We X cid10 F Y iff M cid10 F GK 272 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 Proof Let F G general logic programs X Y sets atoms As shown 3 F G X equivalent F X G X F G X equivalent F X G X Thus induction structure F easy Y cid10 F iff M cid10 F A M proposition We prove X cid10 F Y iff M cid10 F GK induction structure F If F assertion holds obviously If F atom p pGK Kp X cid10 pY iff p X On hand M cid10 Kp iff p X Therefore X cid10 pY iff If F G H X cid10 G HY iff X cid10 G Y X cid10 H Y By induction hypothesis holds iff M cid10 G GK M cid10 HGK If F G H X cid10 G HY iff X cid10 G Y X cid10 H Y By induction hypothesis holds iff M cid10 G GK M cid10 HGK Finally F G H X cid10 G HY iff Y cid10 G H X cid10 G Y H Y iff Y cid10 G H ii X cid11cid10 G Y X cid10 H Y By induction hypothesis holds iff M cid10 G H A ii M cid11cid10 G GK M cid10 HGK iff M cid10 G HGK M cid10 pGK equivalent M cid10 G HGK equivalent M cid10 G HGK This completes induction proof cid2 Theorem 2 Let X set atoms F general logic program The following statements equivalent 1 X stable model F 2 There GK model M F GK K M AM Th X Proof 1 2 Suppose X stable model F We construct Kripke interpretation M K M AM Th X We prove M GK model F GK Firstly X cid10 F X X stable model F By Lemma 1 M cid10 F GK We need prove M minimal model We prove contradiction Assume M minimal model F GK exists model M1 F GK AM1 AM Th X K M1 K M We construct Kripke interpretation M2 AM2 Th X K M2 Th X1 X1 p M1 cid10 Kp p Atom For general logic program G induction structure G easy M2 model G GK iff M1 model G GK Therefore M2 model F GK By Lemma 1 X1 cid10 F X Moreover X1 X This shows X stable model F contradiction Hence M GK model F GK 1 2 Suppose GK model M F GK K M AM Th X By Lemma 1 X cid10 F X There proper subset X1 X X1 cid10 F X Otherwise construct Kripke interpretation M1 K M1 Th X1 AM1 Th X By Lemma 1 M1 model F GK Moreover K M1 K M AM1 AM This shows M GK model F GK contradiction Hence X stable model F cid2 A2 Proof Theorem 3 Notice CF deﬁned recursively follows C If F atom CF F CF 1 cid17 F 2 CF 1 cid17 CF 2 cid17 CF 1 F 2 CF 1 CF 2 F F cid18 1 cid18 2 F cid18 p cid18 expression obtained F replacing atom p Lemma 2 Let F general logic program X Y sets atoms M Kripke interpretation K M Th X AM ThY We X Y model CF iff M cid10 F GK cid18 Proof We prove induction structure F If F assertion holds obviously If F atom p pGK Kp CF p X Y X Y cid18 cid10 Cp iff M cid10 pGK If F G H X Y cid18 cid10 CG H iff X Y cid18 cid10 CG X Y M cid10 HGK equivalent M cid10 G HGK If F G H X Y cid18 cid10 CG H iff X Y cid18 cid10 CG X Y M cid10 HGK equivalent M cid10 G HGK cid18 cid10 CG H iff X Y Finally F G H X Y CG CH iff X Y cid18 cid10 G Hcid18 ii X Y cid18 cid10 p iff p X On hand M cid10 Kp iff p X Therefore cid18 cid10 CH By induction hypothesis holds iff M cid10 G GK cid18 cid10 CH By induction hypothesis holds iff M cid10 G GK cid18 cid10 CG CH G Hcid18 cid18 cid11cid10 CG X Y iff X Y cid18 cid10 CH Notice X Y cid18 cid10 G Hcid18 X Y cid18 cid10 G Hcid18 cid18 cid10 iff F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 273 cid18 cid10 G Hcid18 Y M cid11cid10 G GK M cid10 HGK iff M cid10 G HGK iff Y cid10 G H iff M cid10 G H A By induction hypothesis X Y cid18 cid10 CF iff M cid10 G H A ii This completes induction proof cid2 Theorem 3 For general logic program F language Atom set X Atom following statements equivalent 1 There GK model M F GK K M AM Th X 2 X X cid18 model cid6 cid7 p p cid8 cid18 cid7 Circum CF Atom cid8 4 pAtom cid18 cid18 cid18 Proof 1 2 Suppose M GK model F GK K M AM Th X Then M cid10 F GK Lemma 2 X X model CF We set atoms X1 X X1 X model CF Suppose X1 X model CF Construct GK interpretation M1 K M1 Th X1 AM1 Th X By Lemma 2 M1 cid10 F GK Its clear K M1 K M AM1 AM This shows M GK model F GK cid18 This contradiction Therefore X X shows statement 1 implies statement 2 model CircumCF Atom Of course X X pAtomp p model cid9 1 2 Suppose X X model CircumCF Atom Thus X X model CF proper subset X1 X X1 X model CF Let M Kripke interpretation K M AM Th X We prove M GK model F GK According Lemma 2 M cid10 F GK We need prove M minimal model We prove contradiction Assume M minimal model F GK Then exists model M1 F GK AM1 AM Th X K M1 K M Construct Kripke interpretation M2 AM2 Th X K M2 Th X1 X1 p M1 cid10 Kp p Atom For general logic program G induction structure cid18 cid10 CF G M2 model G GK iff M1 model G GK Therefore M2 model F GK By Lemma 2 X1 X model CircumCF Atom contradiction Hence M GK model F GK This shows Moreover X1 X X X statement 2 implies statement 1 cid2 cid18 cid18 cid18 cid18 cid18 cid18 A3 Proof Theorem 4 Let L ﬁrst order language equality proper functions Let C set constants L cid5 extension L new predicates cid18 P cid5 set new predicates L cid18 set predicates L Let cid5cid18 P cid5cid18 cid18 cid18 cid18 A ﬁrstorder structure M domain interpret symbols L Suppose M M model Σuna M said conservative extension ﬁrstorder structure M L M M conservative extension M It easy model Σuna sentence F F M F Mcid18 L cid18 cid18 Let F ﬁrst order general logic program L M ﬁnite model Σuna We remark F M deﬁned recursively follows recall σ mapping constants L domain M M M If F b b constants F M cid15 σ σ b F M If F atomic formula P cid23t cid23t vector constants F M P σ cid23t σ cid23t cid8σ t1 σ tncid9 cid23t cid8t1 tncid9 cid14 cid9 G cid17 HM G M cid17 H M cid17 xF M xF M uD F xuM uD F xuM Thus given ﬁrst order general logic program F L F M propositional formula AM set ground atoms M AM cid2 cid3 cid3 P nary predicate cid23u Dn D domain M cid4 P cid23u CF M propositional formula AM AMcid18 Let M ﬁrstorder structure Recall T M set ground atoms true M cid4 cid2 T M P cid23u cid3 cid3 P predicate cid23u P M Lemma 3 Let M ﬁnite model Σuna F ﬁrst order general logic program We M model F iff T M model F M 274 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 Proof We prove induction structure F If F assertion holds obviously If F b b constants F M cid15 b F M b distinct constants On hand M model Σuna M model F iff b Therefore assertion holds If F atomic formula pcid23t cid23t vector constants F M pσ cid23t M model F iff σ cid23t p M iff pσ cid23t T M iff T M model F M If F G H F M G M H M M model F iff M model G H iff M model G F model H iff T M model G M T M model H M iff T M model G M H M iff T M model F M If F G H F M G M H M M model F iff M model G H iff M model G F model H iff T M model G M T M model H M iff T M model G M H M iff T M model F M If F G H F M G M H M M model F iff M model G H iff M model G F model H iff T M model G M T M model H M iff T M model G M H M iff T M model F M If F xG F M exists u D T M model GxuM iff T M model F M uD GxuM M model F iff exists u D M model Gxu iff uD GxuM iff T M model cid14 cid14 If F xG F M uD GxuM M model F iff u D M model Gxu iff u D cid9 cid9 T M model GxuM iff T M model uD GxuM iff T M model F cid2 Lemma 4 Let M ﬁnite model Σuna F ﬁrst order general logic program We CF M equivalent CF M Proof We prove induction structure F If F assertion holds obviously F b b constants If b CF M CF M cid15 F atomic formula pcid23t Then F M pσ cid23t CF M pσ cid23t On hand CF pcid23t CF M pσ cid23t F G H Then CF M equivalent CG M CH M equivalent CGM CHM equivalent CG CHM equivalent CG HM CF M F G H Then CF M equivalent CG M CH M equivalent CGM CHM equivalent CG CHM equivalent CG HM CF M F G H Then CF M CG M H M equivalent CG M CH M G CGM CHM G equivalent CGM CHM G M H M cid18 structure M H cid14 H cid18 cid18 M cid18 M On hand CF M equivalent CG CH G cid18 M equivalent cid18M cid18 M Moreover easy ﬁrst order sentence H cid18 H H H cid18 M cid18 M Hence assertion holds cid14 cid14 If F xG F M hand CF xCG CF M ﬁrst order formula H CHxu equivalent CHxu Hence assertion holds cid9 uD CGxuM equivalent uD CGxuM On uD CGxuM Moreover induction structure easy uD GxuM CF M cid9 cid14 cid9 If F xG F M uD GxuM CF M cid9 hand CF xCG CF M uD CGxuM equivalent uD CGxuM Similarly assertion holds cid2 uD CGxuM On Lemma 5 Let M ﬁnite model Σuna M model CF model CF M iff M cid18 cid18 conservative extension M 5 F ﬁrst order sentence Then T M T Mcid18 Proof Since M cid18 conservative extension M 5 T M cid18 T M T Mcid18 cid18 model CF Mcid18 Lemma 3 model CF cid18 M iff T M iff T M T Mcid18 iff T M T Mcid18 model CF M model CF M Lemma 4 cid2 Let M M ﬁrst order structures L written M cid5 M cid18 cid5 set predicates L We M M cid5 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 275 domain D map constant c C element D cid18 cid5cid18 1 M M 2 M M cid23u p 3 For p 4 For p cid5 cid23u p M 5 There p cid5 cid23u cid23u p M cid23u p M cid18M cid18M iff cid23u p cid23u p M Thus M model CircumF cid5 M model F M F cid5 M M model Lemma 6 Let M ﬁnite model Σuna M cid18 conservative extension M 5 F ﬁrst order sentence S AM We 1 S T M iff M 2 For M M M cid18 cid5 M cid5 M cid18 T M S T Mcid18 S T Mcid18 S T Mcid18 T M model CF M iff M model CF Proof 1 obvious Proof 2 model CF model CF M Lemma 3 M iff T M iff S T Mcid18 iff S T Mcid18 iff S T Mcid18 model CF M model CF M M M domain interpret constants model CF M Lemma 4 cid2 Theorem 4 Let M ﬁnite model Σuna M stable model F iff M cid18 model cid7 cid8 Circum CF cid5 5 6 M cid18 conservative extension M 5 Proof M stable model F iff T M stable model F M deﬁnition iff T M T Mcid18 iff p AMp p model cid9 cid18 CircumCF M AM Theorem 3 T M T Mcid18 T M T Mcid18 S AM S T M S T Mcid18 model model CF M p AMp p cid18 cid9 model CF M iff cid18 cid18 M M ﬁrst order structure M model 5 model CF Lemma 5 M cid5 M cid18 M model CF Lemma 6 cid18 iff M model 6 cid2 A4 Proof Theorems 5 6 Theorem 5 Let F general logic program X Y sets atoms X Y M Kripke interpretation K M Th X AM ThY We cid8 X Y cid9 cid10 F iff M cid10 F GK Proof As stated 2 cid8 X Y cid9 cid10 F iff X cid10 F Y According Lemma 1 X cid10 F Y iff M cid10 F GK assertion holds cid2 Theorem 6 Let F G general logic programs The following statements equivalent 1 F G strongly equivalent F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 276 cid9 cid9 cid9 cid9 2 3 4 5 pAtomKp Ap cid10 F GGK pAtomKp Ap cid10 F GK G GK pAtomp p pAtomp p cid18 cid10 CF G cid18 cid10 CF CG cid9 pAtomKp Ap Construct Kripke interpretation M1 K M1 Th X Proof 1 2 Let M model AM1 ThY X p M cid10 Kp p Atom Y p M cid10 Ap p Atom Its clear M1 cid10 F GGK iff cid9 pAtomKp Ap X Y Therefore cid8 X Y cid9 HTinterpretation Since F G M cid10 F GGK Since M model assumed strongly equivalent equivalent logic hereandthere Thus cid8 X Y cid9 cid10 F G Then Theorem 5 M1 cid10 F GGK Therefore M cid10 F GGK This shows pAtomKp Ap cid10 F GGK 2 3 F GGK F G G F GK equivalent F GGK G F GK equivalent cid9 F GK G GK F A G A G GK F GK G A F A cid9 equivalent F GK G GK F A G A This shows F GGK cid10 F GK G GK Hence assertion holds 3 1 We ﬁrst pAtomKp Ap cid10 F GK G GK F classically equivalent G Suppose loss generality X model F model G By deﬁnition reduction clear X model F X Construct Kripke interpretation M K M AM Th X By Lemma 1 M model F GK Thus M model G GK Again Lemma 1 X model G X Thus X model G contradiction Hence cid9 pAtomKp Ap cid10 F GK G GK Therefore induction structure H easy pAtomKp Ap cid10 F GK G GK F classically equivalent G Therefore F A equivalent G A Suppose H general logic program contains occurrence F H 1 general logic program obtained H replacing occurrence F H G We H set stable models H 1 By 3 cid9 pAtomKp Ap cid10 HGK H1GK Thus HGK H1GK set GK models By Theorem 2 H set stable models H1 2 4 Suppose cid9 pAtomp p model cid18 Therefore X Y Construct Kripke interpretation M K M Th X AM ThY We pAtomKp Ap By 2 model F GGK By Lemma 2 X Y model pAtomp p pAtomKp Ap cid10 F GGK Now suppose X Y sets atoms X Y M model CF G This shows cid18 cid10 CF G 4 5 Similar proof 2 3 CF G cid10 CF CG Hence assertion holds 5 1 Similar proof 3 1 cid2 cid9 cid9 cid9 cid9 cid18 cid18 Let F propositional formula constructed atoms basic connectives Let LengthF total number atoms occurring F Lemma 7 cid7 cid8 CF cid2 cid7 Length LengthF 1 cid8cid7 LengthF 2 cid8 2 2 Proof We prove assertion induction structure F If F LengthF LengthCF 1 This assertion holds If F atom p LengthF LengthCF 1 This assertion holds If F G H G H LengthCF LengthCG LengthCH cid2 LengthG 1LengthG 22 2 LengthH 1LengthH 22 2 cid2 LengthG LengthH 1LengthG LengthH 22 2 equivalent 0 cid2 LengthGLengthH 1 cid2 LengthF 1LengthF 22 2 Finally F G H LengthCF LengthCG LengthCH LengthF cid2 LengthG 1LengthG 22 2 LengthH 1LengthH 22 2 LengthG LengthH cid2 LengthG LengthH 1LengthG LengthH 22 2 equivalent 0 cid2 LengthG 1LengthH 1 cid2 LengthF 1LengthF 22 2 This completes proof cid2 Corollary 7 The problem deciding general logic programs strongly equivalent coNP complete Proof This assertion follows straightforwardly Theorem 6 Lemma 7 cid2 References 1 T Eiter M Fink H Tompits P Traxler S Woltran Replacements nonground answerset programming KR2006 2006 pp 340351 2 P Ferraris Answer sets propositional theories LPNMR 2005 pp 119131 F Lin Y Zhou Artiﬁcial Intelligence 175 2011 264277 277 3 P Ferraris V Lifschitz Mathematical foundations answer set programming We Will Show Them 1 2005 pp 615664 4 P Ferraris J Lee V Lifschitz A new perspective stable models Proceedings IJCAI07 2007 pp 372379 5 M Gelfond V Lifschitz Classical negation logic programs disjunctive databases New Generation Computing 9 1991 365385 6 N Leone G Pfeifer W Faber T Eiter G Gottlob S Perri F Scarcello The DLV knowledge representation reasoning ACM Transactions Computational Logic 7 3 2006 499562 7 V Lifschitz LR Tang H Turner Nested expressions logic programs Annals Mathematics Artiﬁcial Intelligence 25 34 1999 369389 8 V Lifschitz D Pearce A Valverde Strongly equivalent logic programs ACM Transactions Computational Logic 2 4 2001 526541 9 V Lifschitz Action languages answer sets planning KR Apt VW Marek M Truszczynski DS Warren Eds The Logic Programming Paradigm A 25Year Perspective SpringerVerlag 1999 10 F Lin Y Chen Discovering classes strongly equivalent logic programs Proc IJCAI95 2005 pp 516521 11 F Lin Y Shoham A logic knowledge justiﬁed assumptions Artiﬁcial Intelligence 57 1992 271289 12 F Lin Reducing strong equivalence logic programs entailment classical propositional logic Proc KR02 2002 pp 170176 13 VW Marek M Truszczynski Stable logic programming alternative logic programming paradigm KR Apt VW Marek M Truszczynski DS Warren Eds The Logic Programming Paradigm A 25Year Perspective SpringerVerlag 1999 14 J McCarthy Applications circumscription formalizing commonsense knowledge Artiﬁcial Intelligence 28 1986 89118 15 R Moore Semantical considerations nonmonotonic logic Artiﬁcial Intelligence 25 1 1985 7594 16 I Niemelä P Simons Extending smodels cardinality weight constraints Jack Minker Ed LogicBased Artiﬁcial Intelligence Kluwer Academic Publishers 2000 pp 491521 17 I Niemelä Logic programs stable model semantics constraint programming paradigm Annals Mathematics Artiﬁcial Intelligence 25 3 4 1999 241273 18 D Pearce H Tompits S Woltran Encodings equilibrium logic logic programs nested expressions Proc EPIA01 2001 pp 306320 19 D Pearce A new logical characterisation stable models answer sets NonMonotonic Extensions Logic Programming 1997 pp 5770 20 R Reiter A logic default reasoning Artiﬁcial Intelligence 13 1980 81132