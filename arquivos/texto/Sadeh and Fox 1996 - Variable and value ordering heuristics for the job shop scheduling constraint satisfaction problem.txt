ELSEVIER Artificial Intelligence 86 1996 l41 Artificial Intelligence Variable value ordering heuristics job shop scheduling constraint satisfaction problem Norman Sadehav Mark S Fox bl School Computer Science Carnegie Mellon University 5000 Forbes Avenue Pittsburgh PA 152133891 USA Department Industrial Engineering University Toronto 4 Taddle Creek Road Toronto Ont Canada M5S IA4 Received April 1992 revised August 1995 Abstract Practical constraint satisfaction problems CSPs design integrated circuits scheduling generally entail large search spaces hundreds thousands variables hundreds thousands possible values Often tiny fraction possible assignments participates satisfactory solution This article discusses techniques aim reducing effective size search space explored order satisfactory solution judiciously selecting order variables instantiated sequence possible values tried variable In CSP literature techniques commonly referred variable value ordering heuristics Our investigation conducted job shop scheduling domain We contrast problems studied earlier CSP literature generic variable value heuristics perform domain This attributed difficulty heuristics properly account tightness constraints andor connectiviv constraint graphs induced job shop scheduling CSPs A new probabilistic framework introduced better captures key aspects job shop scheduling search space Empirical results variable value ordering heuris tics derived probabilistic framework yield significant improvements search efficiency significant reductions search time required obtain satisfactory solution The research reported article work Keng Yun 1989 use CSP problem solving paradigm solve job shop scheduling problems The suite benchmark problems introduced number This research supported Advanced Research Projects Agency contract F30602 88C0001 Digital Equipment Corporation McDonnell Aircraft Company F3060291F0016 grants Corresponding I Email msfieutorontoca author Email sadehcscmuedu 00043702961500 SSDI0004370295000984 Copyright 1996 Elsevier Science BV All rights reserved 2 N Sudeh MS FhArtijiicial Intelligence 86 I 996 l41 evaluate alternative job shop scheduling CSP The article briefly researchers reviews recent efforts shows variable value ordering heuristics remain competitive techniques 1 Introduction CSPs 103952 Practical constraint satisfaction problems design problems 3 1 491 scheduling problems generally entail large search spaces hundreds thousands variables thousand possible values Often tiny fraction possible assignments amounts search satisfactory solution aim reducing effective selecting possible values tried variables techniques In CSP literature variable variable value ordering heuristics Our investigation job shop scheduling domain solution potentially This article discusses commonly conducted explored judiciously size search space requiring prohibitive sequence instantiated 2 12261 participates techniques order referred Specifically study class job shop scheduling problems operations 11394244 time windows factory scheduling problems We refer satisfaction problem job shop CSP oper scheduling performed nonrelaxable class problems job shop constraint Examples job shop CSPs include ations performed shifts spacecraft mission problems time windows determined astronomical factory rescheduling control rescheduled disturbing job shop CSP objective schedule operation resource adapted reduce relaxable dates events small set operations need problems schedule operations When solving quickly possible feasible schedule performed legal time windows paper sum tardiness inventory costs set jobs processed subject job shop scheduling problems The techniques presented solve justintime oversubscribed objective 39401 The job shop CSP easily shown procedure enforcing mechanisms worstcase complexity nential At time started consistency yield ported different CSPs determine important 69 1113 172329375 increases study CSP techniques NPcomplete solve problem 141 Accordingly expected interleave expo search ordering heuristics number 11 One objectives study variablevalue search efficiency applied similar results obtained largescale tightly connected problems job shop scheduling domain In article review generic variable value ordering heuristics perform classes CSPs We explain heuristics like job shop perform largescale In particular heuristics reported unlikely scheduling tightly connected CSPs fail adequately account N Sadeh MS FoxArtificial Intelligence 86 1996 141 3 operations solving paradigm indicate attempt better account probabilistic defined framework new variable tightness constraints andor induced high connectivity interactions constraint graphs characteristic job shop CSPs 2 The second paper value ordering introduces heuristics interactions Empirical results specialized heuristics 201 Our study suggests ability probabilistic availability reliance operation availability variables measures resource contention unscheduled new heuristics outperform generic CSP heuristics CSPs resource timeconstrained powerful heuristics lies provide estimates reliance variable job shop scheduling measures contention framework remaining recently developed key defining reservation values job shop scheduling allocation incompatible values CSP problem While work shows largescale domains considered scale benchmark complex problems probably earlier CSP studies representative classes complex CSPs We hope research prompt field evaluate revisit earlier studies look challenging techniques job shop CSP suggests problems organized Section 7 Empirical The balance paper follows Section 2 provides formal defi backtrack search procedure nition job shop scheduling CSP Section 3 details Sec study Generic variable value ordering heuristics reviewed tions 4 5 respectively Section 6 describes new variable value ordering heuristics based probabilistic model search space The complexity heuristics new heuristics discussed heuristics discussed article Keng Yun 201 use CSP prob lem solving paradigm solve job shop scheduling problems The suite benchmark problems introduced evaluate alternative views recent efforts shows variable value ordering heuristics Section 9 provides summary paper discusses number researchers job shop scheduling CSl Section 8 briefly Section 8 The work reported paper presented remain competitive results comparing techniques study implications Earlier variations techniques presented paper discussed 1138 3941441 2 The job shop constraint satisfaction problem The job shop CSP requires set jobs I jt j set physical 0 O resources RES RI scheduling R Each job according Of scheduled process routing specifies j consists set operations Constraint graphs graphical representations binary CSPs CSPs binary constraints variable Other graphical represented representations node binary constraints exist nonbinary CSPs represented arcs nodes 4 N Sadeh MS FkrArtciui lntellrpwce 86 I 996 I41 j j 0 0 0 Fig I Examples treelike process routings operations partial ordering shop CSPs treelike process routings A treelike process routing precedence situation especially paper general forms tree Fig 1 This job graph far common factory scheduling Extensions techniques presented types process routings briefly discussed 0 BEFORE 0 This study assumes constraints paper job In job shop CSP studied deadline j release date rdr ddl operations performed date Each operation Of fixed duration duj start time sd value initially constrained selected The domain possible start times operation If necessary release dates job unary constraints set admissible model allows additional defining time windows start times operation In order operation carried specific shift factory scheduling successfully executed operation Of requires P different milling machine set fixtures machinist Rf 1 j p pool physical choose operation belongs restrict resources resources rijl ti J rix l RES I 6 k qi possible milling machines More formally problem defined follows Vuriables A vector variables aggregate variable associated operation 0 1 1 I I nl consists 1 operation start time stf 2 resource requirements Rf 1 6 pi N Sadeh MS FoxArtijicial Intelligence 86 1996 141 5 In search procedure start time resource instantiations resource assignments associated operation reservation referred operation requirements considered simultaneously single aggregate variable instantiated A tuple start time set specific operation Constraints The nonunary 1 Precedence constraints problem types routings constraints defined process equalities type s4 duf 6 st Of BEFORE 0 translate linear 2 Capacity constraints time translate restrict disjunctive use resource operation constraints form VpVq RL R9 V szf du sti V st du s These constraints simply express use different resources operations 0 Of overlap unary constraints restricting include nonrelaxable Additionally variables These constraints dates operations allows times operation As result generally operation start Time assumed discrete set possible values individual release dates deadlines job scheduled The model actually start start times operation time windows start times end times requirement Rfi selected domain possible integer values Finally resource consist noncontiguous type unary constraint set possible operation restricts set resource alternatives ni c RES Objective In job shop CSP studied paper objective solution fast possible Notice objective number search states visited deciding search state explore It accounts Example come feasible simply minimizing different time spent resource requirement single possible value Operation Fig 2 depicts simple job shop scheduling problem jobs J j j2 js jd operation resources RES RI Rz R3 Rd In example start times operations jobs released time 0 None discussed release dates operations different durations requirements physical single variables For sake simplicity duration completed simplifying jobs usually different resource However number heuristics discussed merits paper When appropriate consider slight time 15 minimum makespan problem3 example prove sufficient required techniques alternatives assumed requirements assumptions time units contrast simple 3 The makespan schedule length time interval spans earliest operation start time latest operation end time 21 6 N Strdeh MS FoxArtJmczl lntellipnce 86 I 996 l41 j 1 j 3 j 4 C Pi capacity constraint precedence constraint Fig 2 A simple job shop problem jobs Each node labeled operation resource required operation represents discuss issues immediately visible variations base problem Notice operations duration problem resource R2 expected job Since operations resource R2 required example small bottleneck 3 The search procedure A general paradigm Variables groups variables 3163550 stantiated Each search state created process goes complete reached A deadend violating problem solving CSPs relies use depthfirst backtrack search new group variables new complete partial solution This state state partial solution completed state procedure time new variable corresponds obtained deadend constraints When subproblems successively instantiated deadend solution Informally bottleneck resource group resources utilization expected close larger available capacity N Sadeh MS FoxArtificial Intelligence 86 1996 I41 7 undo assignments known able problem backtracking infeasible It results try alternative ones This process undoing left earlier assignments lower search efficiency undesir In worst case exponential amounts backtracking necessary come feasible solution improved interleaving mechanisms schedule variablevalue enforcing l Consistency ordering heuristics checking techniques These In practice search application average complexity procedure enforcing consistency space eliminating 23 This problem deadend formulation l Variablelvalue local inconsistencies inferring new constraints If process situation identified participate techniques prune search global solution current domain variable adding ordering heuristics These heuristics concerned order variable As discussed paper heuristics great impact search values assigned variables instantiated remainder efficiency In study consider depthfirst search procedure starts state scheduled proceeds scheduling operations new search state created scheduled enforcing procedure updates account schedule operations Fig 3 Each time operation consistency operations operation eration operations successfully detected backtrack search state The results In case If decisions problem reported infeasible needs set possible reservations unscheduled latest assignment Next procedure determines op reservation variable ordering deadend initial undo earlier decisions scheduled inconsistency left undo procedure assign calling procedure terminates study obtained simple chronological systematically reservations goes operation recently If alternative goes recently scheduled operation scheduled op reservation value ordering The procedure goes recursively tracking mechanism eration tries alternative left procedure 1 If operations scheduled 2 Apply 3 If deadend enforcing procedure backtrack consistency detected stop 2 select alternative left 1 stop report problem step 4 infeasible operation 4 Select 5 Select promising 6 Create new search state adding reservation scheduled operation value ordering heuristic new reservation assignment variable ordering heuristic current partial schedule Go 1 Fig 3 Depthfirst backtrack search procedure N Sudeh MS toxArtificiul Intelligence 86 1996 l41 Before propagation Downstream Propagation Upstream Propagation LO81 3111 7151 precedence constraint Fig 4 Consistency respect precedence constraints Consistency I enforcing procedure combines types computations constraints Consistency respect linear constraints maintained longest path procedure operation Essentially PERTCPM search state pair earliestlatest propagated downstream propagated upstream incre possible start times 181 earliest start job latest start Fig 4 The complexity sim In Consistency respect precedence precedence mentally updates unscheduled time constraints time constraints ple propagation mechanism absence capacity constraints require resource posability backtrackfree Forward consistency checks respect capacity constraints Enforcing sistency respect capacity constraints nature constraints Whenever resource time interval forward checking mechanism remaining possible removes proposed operations guarantee decom guarantee difficult disjunctive number precedence problems reservations 2 I Fig 5 operation set resource conflict new assignment search state sufficient applied 391 reservations operations 17291 checks shown procedure allocated constraints requiring search 58 2 N Sadeh MS FoxArtcial Intelligence 86 1996 141 9 Before propagation 7 15 15 After propagation 10 scheduled start time 6 ____ capacity constraint Fig 5 Forward consistency checks respect capacity constraints 3 Additional consistency checks respect capacity constraints Additionally consistency enforcing mechanism checks unscheduled operations intervals An example situation require overlapping resourcetime resource 0 Fig 6 illustrated start Ofi rely availability intervals Whichever requiring time operations overlapping I I I 0versubcribed interval I est 1st estl J 1st eft eft J lftr lft time m m earliest possible reservation latest possible reservation time interval absolutely required operation start time Fig 6 Detecting situations unscheduled operations requiring resource conflict operation 0 require time selected operation operation 0 earliestlatest resource time interval start time window spans Istkeff Similarly latest start require resource latest start time earliest finish time time earliest finish lime interval Iseft Interval LY Lsff J overlap This represents capacity constraint consistency mechanism enforces higher forward checking resulting conflict This additional shown increase search efficiency level arcconsistency minor computational 172429 overheads 391 Because possible efficiently enforce partial consistency respect occur In words scheduling reach search state unscheduled operations left ac possible actually simultaneously reservations insufficient backtracking resource appear capacity constraints procedure competing total capacity available resource commodate respect precedence respect constraint violations constraints constraints operations Notice sufficient precedence backtracking consistency enforcement occur result capacity guarantee decomposability efficiently guarantee backtrackfree impossible Because CSPs variable actual complexity variable specialized heuristics job shop scheduling problems value ordering heuristics generally search procedure The value ordering heuristics developed critical search job shop determining examine popular generic CSPs sections identify key weaknesses heuristics applied 4 A look popular variable ordering heuristics A powerful way reducing average complexity search backtrack ju search generally avoid building par chances help state later This reduces difficult variables deadend variables instantiated The intuition select complete backtrack frequency backtracking order difficult variables able backtracking diciously instantiating tial solutions reduce immediately difficult variables detect This reduces completed One distinguish 1 Fixed variable ordering heuristics A unique variable ordering time wastes attempting detected consistency checking mechanism Instantiating moves constrained deadend states easier broad types variable ordering heuristics complete partial solutions Indeed instantiating determined prior starting search branch search tree 2 Dynamic variable ordering heuristics The ordering search state order account search tree generally entail different variable orderings earlier assignments Different branches dynamically revised N Sadeh MS FoxArtijicial Intelligence 86 1996 141 11 require Clearly computation Nqueens fixed variable orderings moderatesize CSPs dynamic variable ordering heuristics determined On hand dynamic variable ordering heuristics potentially powerful identify difficult variables specific search states overall search tree While number early CSP studies performed suggest simple problems dynamic variable ordering heuristics expensive Purdom showed difficult CSPs expected achieve exponential CSP come solution literature search In search state DSR looks variable rearrangement instantiated smallest number remaining values selects variable worthwhile determine DSR benchmark dynamic variable ordering heuristic experiments belongs justified CSI presented end paper clearly job shop scheduling dynamic variable ordering job shop 37 For difficult classes problems given class problems Not average search required class difficult problems simple heuristic known DSR weak heuristic clearly 3671537 recommends dynamic generally indicate savings DSR The scheduling problem introduced Fig 2 helps understand shortcomings variable ordering heuristic Fig 7 depicts consistency enforcing procedure described Section 3 problem application According left schedule DSR operations appear equally good candidates operations possible values It easy resource R2 operations contention appear resource R2 strongly sched start val critical operations Consider operations 0 0 Both require jobs In words 0 0 start times For like O seven possible start times competes job job js In words resource R3 uled Oi Oi Oi O Oz Oi seven possible times start times ues fact difficult resource R2 required total operations Additionally operations requiring operations time This high contention difficult instance operation operation operation operations expected DSR account values variable fails available start resources likely operations 0 Oz Unfortunately number remaining It simply counts values remain likelihood highly contended resource R2 suggests schedule observations resource Rs operation 0 Additionally operations seven possible operations high contention unavailable times operations operation job jl 0 resource later Clearly easier schedule estimate competing 0 In example bottleneck capacity constraints Therefore variables actually perform better DSR Several variable ordering heuristics fixed variable ordering proposed largest clique identifies difficult constraints resource R corresponds variable ordering heuristic literature These heuristics graph constraint generally nodes incident 12 N Sudeh MS FmArticial Intelligence 86 I 996 l41 j 1 j 2 j 4 G PI capacity constraint precedence constraint Fig 7 The job shop CSP consistency instance represents 0 123456 start 061 times labeling Start time labels represented intervals For time 0 time 6 allowed time granularity added new constraints minimum width MW heuristic problem solved One heuristics 6 131 MW orders variables heuristic selecting stage rlode constraint graph minimal degree 5 graph remaining deleting nodes selected 61 A variation heuristic known minimum degree MD heuristic 61 In simply There example depicted In general scheduling problems MW orderings like MD MW provide simple fixed variable ordering heuristics good advice This best illustrated slightly modifying scheduling problem depicted Fig 2 MD select 0 initial constraint graph starting operation ranks variables according scheduled degree Fig 2 problem introduce fifth resource requiring RI R3 original Suppose instance change Rs Suppose allow operations problem use R5 alternative resource We 0 fin n R R5 12 R3 R5 5 The degree node number constraints incident node N Sadeh MS FoxArtificial Intelligence 86 1996 l41 Cl R capacity constraint preceaence constraint Fig 8 A new resource Rs added problem Rl5 stands RI Rg R35 stands R3 Rg capacity constraints operations belonging capacity constraints constraints Fig 8 Notice 0 O require operations use Rs This constraint operations requires The cliques capacity constraints larger clique capacity constraints 0 job subsumed precedence constraint precede O constraint additional MW orderings MD orderings fact addition R5 significantly new clique schedule actually constraint example variable ordering heuristic Another mux curdinality tightness variable instantiated largest number fixed variation DSR schedule tightness inability difficulty satisfying instantiated variables operations resulting MC easy stage picks corresponding involving RI R3 subsumed operations Oi Oi Of O job This case capacity 0 precede 0 0 subsumed precedence 0 precede 02 Due Rs introduction starting operations In loosened connected capacity constraints participating constraints heuristics operations account specific constraint account easier 11301 constraint search order arbitrarily 6241 This heuristic viewed variable connected selects Failure MW MD identify 14 N Sadeh MS FrxArtijiciul Intelligence 86 1996 l41 Another weakness generic variable ordering heuristics described fact treat problem constraints types constraints effectiveness job shop CSP consistency erature comes practical CSPs different ing This turn impacts instance backtracking Section 3 Consequently difficult constraints This exploited occurs result capacity constraint violations operation reservation criticality operation solely function violate capacity design effective variable ordering heuristics uniformly entail different CSP lit In check different variable ordering heuristics For ensure enforcing explained levels consistency efficiently techniques 20 reflecting reservation assigned authors apparently chance satisfying strength heuristic contention operations DSR operation value capacity constraints variable ordering heuristic Keng Yun takes advantage observation failed observation Keng Yun suggested A specialized developed relate generalization survivability measure allocation resource chance surviving scheduled smallest global survivability The operation possible sum survivabilities determined reservations Experiments end paper heuristic presented performs better generic heuristics described They heuristic expensive In scheduling problems values unscheduled operations possible start times possible resources obtained focusing small number cliques tight capacity constraints cliques A heuristic selecting Keng Yuns based idea described heuristic achieving heuristic cost effective More efficient heuristics operation likely violate constraint higher search efficiency Section 6 runs faster requires operations remaining remaining reservations inspecting 5 A look popular value ordering heuristics Another powerful way reducing selecting search relies average complexity backtrack order possible values tried variable constraining values A overall large number solutions compatible constraining assigns solutions participate values participate search state By trying value expected judiciously A good value ordering heuristic constraining problem better expected current generally maximize number values left variables need instantiated avoid building partial solutions completed b Notice heuristic identify operations remaining possible fact reservations critical operations This case operation 0 possible times caused operation In fact consistency capacity constraint enforcing start example sufficient ensure incident operations contention reservations Fig 2 small number backtracking N Sadeh MS FoxArtcial Intelligence 86 1996 l41 15 given assign Attempting exactly compute number global solutions value participates futile require finding solutions Instead Dechter Pearl developed advised backtracking relies treelike relaxations ABT estimate relaxation CSP constraint graph original CSP It turns value participates variables number solutions problem steps n number variables 0nk2 number possible values variable The idea original CSP good relaxation original CSP One way constraint C good value relaxations associate binary close ment problem value ordering heuristic goodness value A treelike tree spans nodes relaxations efficiently CSP k maximum treelike value obtain original constraint graph weight wC satisfy number value pairs obtained looking network relaxation treelike computed tight equal satisfiability constraint relaxation constraint A tight treelike resulting tree MST spanning minimum Even fixed variable ordering heuristic generally search requires tree This amounts computation typically relaxations elementary computations conditions generally computations Empirical n levels search state This requires 0 n2 elementary fixed variable ordering results presented efficiently necessary fixed MST computations total 0n3 8 indicate shop scheduling problems Under new treelike weights constraint expensive particularly classes CSPs tightly connected CSPs job shop scheduling minimum tree relaxations shop CSPs relaxation example n MST 481 Section solve job identify perform lend spanning Indeed dealing tightly connected CSPs job canJind tight treelike relaxation treelike guide search 7 This illustrated large CSPs More generally ABT reported search state The resulting computations provide sufficiently good advice turn require updating unlikely Consider constraint Pt scheduling problem depicted Fig 7 Pt precedence constraint operation 0 operation 0 The set start time pairs stt sti satisfy constraint Pt 0304 09 14 15 19 69 In order identify cardinality computations weights follows tight treelike relaxation Pt assigned weight w Pt equal set w PI 7 6 5 4 3 2 1 28 Similar weights constraints These compute performed 7 The experiments reported 9 indicate advice provided ABT expensive accurate relaxations relatively high density solutions ended cost effective However opposite In experiments Instead advice provided looser results obtained small problems appeared 16 N Sudeh MS FoxArtcral Intellipxce 86 1996 I41 j 1 j4 091 13121 C p capacity constraint precedence constraint Fig 9 An MST relaxation scheduling problem LVPS 28 0 wP w wP4 0 WPJ wPg 55 0 wC 38 wC2 29 wC1 38 0 wCq 43 wC wc6 38 wc7 Fig 9 shows MST wco 38 29 wcs 56 wc9 scheduling includes initially contained dramatic Only 2 6 constraints R2 preserved This problem obtained relaxation IO 16 constraints present weights It appears MST relaxation cliques capacity original CSI The loss information clique cor constraints responding In general resource required M operations result clique capacity constraints At treelike relaxation M 1 capacity constraints preserved advice provided problem Under ABT job shop CSPs selects 0 Fig 9 instantiated ABT recommend scheduling start time 4 operation A careful examination feasible schedule 0 conditions surprised effective Suppose MST relaxation accident reveals Using instance represented assigning problem It clear good choice operation seven possible start times requires resource Rz main bottleneck problem N Sadeh MS FoxArtificial Intelligence 86 1996 141 17 starting 4 If 0 start time 4 operations R2 scheduled operations duration time units resource time 7 time 15 Given impossible clearly requiring 201 This heuristic ranked according requirements Keng Yun developed specialized value ordering heuristic deal estimates overall resource function time Based estimates operation prevent contention expected effectively cliques capacity constraints contention reservations resource Keng Yuns value ordering heuristic generally outperforms ABT However heuristic attempt job Keng Yuns heuristic accounts operation fails account job Section 8 In words current operations operations reservations room constraining operations Empirical capacity constraints capacity constraints assigned leave incident incident results The section describes counts high connectivity ing constraint ordering heuristics identified comings interactions defined constraint graphs typically probabilistic model search space better ac job shop schedul induced graphs New variable value short framework attempt remedy 6 New variable value ordering heuristics 61 General considerations affect solution search complete conclude heuristics minimize Good variable problem overconstrained current partial value ordering heuristics value ordering heuristics search time spent applying value ordering heuristic variable selected values time exists solution time infeasible If problem try required answer independent heuristic remaining In general variable explored search state time spent applying ordering heuristics precludes interactions time Instead approach expected number search states spent enforcing scheduled specific operations heuristics completed number search states consistency heuristics Variable value expected search time depth search tree function yield affect performance The complexity mainly function number operations average time spent enforcing explored Assuming design heuristics efJicientZy reduce scheduled reduce search time 1 critical variable remaining possible values expected possible values variables Under set simplifying cause backtracking conflict remaining assumptions expected directly minimize effect expected aims developing approach We postulate independence consistency need heuristics 18 N Sudeh MS FoxArnjSciul Intelligence 86 1996 I41 Elliott shown variable ordering heuristic based Haralick criticality measure minimize search tree total number search states need visited come solution 171 9 We postulate solutions compatible current search state good value expected length branches participate expected In subsection introduce probabilistic model search space use compute estimates variable criticality value goodness 62 A probabilistic model search space involved framework A critical variable expected variable values assigned criticality introduce probabilistic given value assigned 2 value chances value contention measures prevented consistency conflicts constraint violations conflict resource prevented consistency critical operation requirements 1 chance conflict To approximate variable accounts reliance variable particular conflict conflicts enforcing procedure capacity likely requirements taking enforcing procedure Given different variables account resource unscheduled operations We consider unscheduled operation Because priori likely probability reservation selected selected Clearly probabilistic model operation Of assigned subjective probability ofp remaining reservationvalue p reason operation allocated believe assigned equal reservation given schedule operation assigned reservation CTp 1 NBRf number remaining NBRf This distribution mirrors intuition heavily bility reservations operations remaining reservations Using subjective reservations rely remaining reservations Of current search state operation possible reservations proba low On hand rely heavily remaining reservations selected reservation distributions estimate reliance operation 0 availability reservation We refer probability allocated resource Rk E RES time r probability resource time individual demand operation Of resource Rk operation require likely equally unavailable Under See 117 pp 3073 I2 1 At end proof variable value smnllest Success pmhabilifv smallest number remaining values The authors exploit search rearrangement simplifying create backtracking minimize heuristic When assumption assumptions earlier length branch equivalently expected assumption variable likely create backtracking assumption variable dynamic variable likely result motivate omitted Haralick Elliotts proof shows proof choosing authors unnecessary search tree N Sadeh MS FoxArtificial Intelligence 86 1996 l41 19 Df Rk 7 Df Rk T simply computed adding reservations p operation Of require resource remaining time r denote probabilities Rk time 7 By adding gp individual Rk aggregate demand profile Ditg unscheduled operations demands unscheduled T obtained operations resource measures contention requiring Equivalently resource Rk function time assume stochastic mechanism randomly rent partial unscheduled probability requires Rk time r Dgp 7 expected number reservations time r expected number operations cur 0 based af distribution Df Rk 7 Rk schedule operation assigns operation Of reservation completes value resource time stochastic mechanism reservation variable solution assigning requiring Similar demand profiles built Keng Yuns heuristics 20 Our variable value ordering heuristics differ Keng Yun way exploit demand profiles build probabilistic The following techniques demand profiles based predejined variable ordering 281 profiles example Smith proposed lo Earlier Muscettola construction introduced illustrates Fig 2 Consider operation 0 operation seven possible sistency probability uisti times azs l10 st 34 l7 12 initial search state depicted Fig 7 After enforcing start times sti 34 9 selected Similarly 0 possible start reservations The individual adding probabilities demand operation 0 possible resource R2 time t obtained reservations starting t t duf DUht c ur t 5 computations individual 0 R2 t l7 individual resource R2 aggregate demand 3 t 4 Di R2 t 217 4 6 demands operations time As expected performed resource R2 Fig 10 shows intervals 0 time demands operations For instance Similar require resource obtained requiring adding operations seven possible start times 0 0 compact 0 individual operations possible Of Notice normalization total like equal duration operation This total operations demand simply spread differently time depending number start times available start times CT p distributions resource demand operation possible operation example individual demands Fig 11 displays aggregate demands pated resource R2 contended resources example As antici lo The work presented performed Keng Yuns interpretation demand profiles probabilistic concurrently Keng Yuns 1141421 Notice 20 N Sadeh MS ForArtijiciul Intellipwce 86 1996 I41 Dz Individual Demand 0 R2 f 0123456789 10 11 12 13 14 15 Dz Individual Demand 0 R time tme Dz Individual Demand 0 R zJ yy 0123456789 IO 11 12 13 14 15 time DT Individual Demand 0 R 0123456789 10 11 12 13 14 15 time Dzyz Aggregate Demand R ii 5h 0123456789 IO 11 12 13 14 75 time Fig IO Building KZS aggregate demand profile initial search state In general building aggregate demand profiles operation Hence requires looking remaining search state complexity reservation unscheduled procedure number remaining remaining reservations Accordingly efficient dynamically reservations sets possible aggregate demand profiles adding Section 8 obtained observation computation updating shrink ONk N number unscheduled reservations unscheduled operation operations change demand profiles potentially individual subtracting demands operations old individual demands procedure new ones Empirical operations In practice k sets search state results presented advantage N Sadeh MS FoxArtcial Intelligence 86 1996 141 21 IIT Aggregate Demand R 1 yh 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 time DT Aggregate Demand R2 0123456789 10 11 12 13 14 15 time DiyQ Aggregate Demand R 0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 14 time DT Aggregate Demand R4 150 125 1 100 075 950 1 zpp 0 12 3 4 5 5 7 9 9 10 11 12 13 14 15 time Fig 11 Aggregate demands initial search state resources 63 A variable ordering heuristic based measures resource contention The aggregate demand resource time interval resourcetime operations unscheduled terval highest demandcontention likely constraints nect operations contributing operation highest contribution considered resourcetime tionvariable likely involved availability demand violated interval measure contention expected specifically interval The resourcetime capacity capacity constraints resourcetime demand critical This interval Accordingly contendedfor opera relies It operation conflict highly contendedfor resourcetime interval 22 N Sad MS FoxArtijicul ntrlligence X6 1996 l41 Several variations variable ordering heuristic The simplest effective inspects resources aggregate demand profile time intervals duration equal average duration operations requiring interval highest demand resource The heuristic interval This operation largest contribution variable ordering heuristic empirical Section 8 We refer ORR operation resourcetime study reported picks resourcetime reliance heuristic implemented resource Fig I I displays demand profiles RI Rz R1 R4 resources time 8 11 This clique tight capacity constraints peak 0 This coincidence precisely operation largest contribution 0 competes example The highest demand peak resource R2 resourcetime interval corresponds identified earlier Fig I2 indicates contended demand start resource belongs times left consistency intervals 7 10 8 1 I Had heuristic chosen 17 101 instead 8 I I I selected 0 operation example seven possible actually scheduled In fact 0 0 appear equally critical demand profile R2 qualify contended checking Notice example group operations The ORR heuristic requires looking successively calendar scheduling order resource time interval requires 0 Hm contended H identify horizon interval resources If rn resources computations elementary 64 A reservation ordering heuristic attempts minimize contention overhead relaxations minimize computational In Section 4 showed associated ABTs prohibitive large job tree relaxations help difficulty treelike cliques capacity constraints We value ordering resource contention relying predetermined attempts relaxations The predetermined job selection minimum spanning shop CSPs unlikely properly account heuristic treelike unscheduled operation operations However simply counting relaxations value ordering heuristic accounts probability relaxation solution estimated resource contention ORR variable ordering heuristic cliques capacity constraints demand profiles scheduled belongs precedence comprised constraints solution relaxations current critical operation survives constructed cliques qf capacib constraints The probability number solutions treelike relaxation operations satisfies satisjes For job shop CSPs treelike process routings constraints value ordering heuristic precedence constraints Each candidate number solutions satisfy capacity constraints treelike comprised unscheduled connected current critical operation precedence reservation critical operation relaxation adopted operations relaxation compatible survive resource contention The reservation ranked according expected compat N Sadeh MS FoxArQ5cial Intelligence 86 1996 I41 23 ia Dy 0 0 1 2 3 4 5 6 7 9 9 IO 11 12 13 15 14 Dz Individual Demand 0 R 1 I y 0 1 2 3 4 5 5 7 9 9 10 11 12 13 15 14 time Dz Individual Demand R DT Individual Demand 0 R jj gEJ My5 012345679 9 10 11 12 13 14 15 tme DT Individual Demand 0 R 1 izj er_7 0 1 2 3 4 5 6 7 9 9 IO 11 12 13 14 15 time Fig 12 ORR heuristic critical operation relies contended sourcetime interval ible largest number schedules heuristic Below approximations compute resource contention reservation probability selected value ordering value ordering heuristic solution relaxation survive 641 Estimating probability reservation survives contention Let Of unscheduled operation reservations We refer probability remaining operation Of conflict resource survivability reservation reservation p Of approximated requirements p Of It denoted p 4 t Rf rflk Rf2 rfzkz reservation p assigning operations surv p The survivability product probability 24 N Sadeh MS FoxArtificial lntelltgence 86 1996 I41 resources independence assumption required reservation available t t dui rurvj p rI E ri riZi12 1 availf rijk t t dui 1 availfrfjk t t duf stands probability resource rfik required operation resource 0 create backtracking t t dui probability assigning Let rilk R E RES The probability avuilf rijk t t dui resource rlk R aggregate demand profile resource R introduced requires keeping required operation value ordering heuristic unscheduled operations R time 7 aggregate demand track nr contributing competing operations t t duf approximated Section 62 Our number number R time 7 denoted Dir 7 At time t r t dui definition z 7 I unscheduled operations competing operation Of resource R The total demand unsched uled operations z 7 1 operations equally contributes operations R time r Dif 7 0 R 7 Assuming requires R time 7 given demand probability Dy7 _ D R7 P l 11 7 1 2 It tempting approximate availfrijk t t dui probability rfjk R Of Of dui time intervals I t dui product probabilities R I t duf In pessimistic approximation available available general 0 duration time interval time interval contiguous calendar resource average duration operations competing 7 I requiring equal It assumes 1 operations time interval operations competing require R r 1 r 2 require R generally obtained subdividing T 1 T Instead operations competing time intervals better approximation buckets duration AVGdu AVGdu rfik R uvailfrfik t t duf approximated time buckets approximated probability Of able secure dufAVGdu requires fit resources calendar Using Eq 2 uvuilf R t t duf AVGDyr7 _ Dc RI7 AVGnrlxdAVGdu AVGn7 1 AVG DT Di R T AVGn7 1 respectively average Ds 7 Df R 7 average H 7 1 time interval t t duf N Sadeh MS FoxArtificial intelligence 86 1996 l41 25 Reservation Survivabilities 0 1 Q 100r Q m 2 t 080 060 040 020 000 0 I 1 2 3 I 4 I 5 6 7 I 8 1 9 10 I I 11 12 start time Reservation Survivabilities 0 100 p P m 080 e 060 I iz 11 1 I 11 0 1 2 3 4 5 6 7 8 9 10 1112 start time Reservation Survivabilities 0 P 100 P D 080 s 060 r s 040 1 020 000 L 0 I 2 1 3 4 5 1 T 6 7 9 9 r IO I1 staff time 12 Fig 13 Survivability measures current critical operation reservations operations job j job 0 belongs selected reservation survivabilities operation operations scheduled job js job initial search state curves easily interpreted looking Figs 7 11 Fig 13 depicts 0 belongs The shape survivability Consider operation 0 Fig 7 indicates resource Rs operation 0 Because operation 0 duration du 3 St 6 operation 0 scheduled s 0 1 2 3 This conflict operation 0 1 For start times s4 45 6 survivability probability 0 competes operation earliest possible start time operation 0 conflicting reservation start times increases indicated assigned equal 0 26 N Sudeh MS FoxArtificiul Intelligence 86 1996 l41 resource R3 operations fairly low conflicts Fig 11 higher aggregate demand times conflict conflict remains small fraction reservations operations conflict start times s 4s 6 remain fairly close 1 smaller survivabilities I Operations reservation operations time 6 9 possible Since probability involve operations curves survivabilities interpreted similar 0 0 compete operations slightly complex arguments smaller The shape survivability 0 Accordingly 642 Estimating probability thut job schedule survives contention A good reservation p critical operation 0 likely locally operations requires resources job job j reservations It leave room ranks number job likely survive resource contention survive contention unscheduled likely survive resource contention Accordingly value ordering heuristic remaining critical operation reservation schedules compatible reservation short expected number survivable job scheduled look relaxation current critical operation reached constraints visiting scheduled comprised unscheduled operations operation precedence looking entire job sufficient schedules When operations estimating The following details way value ordering heuristic approximates number job schedules compatible given reservation expected survive details safely jump resource contention The reader interested Section 7 8 critical operation In order proceed notations need introduced operation selected scheduled relaxation value scheduled constraints visiting unscheduled operations goodness assigning p O expressed expected number reservations 0 precedence Of current critical operation p Ofs remaining RELAX 0 set operations ordering heuristic This set consists 0 reached operation goodp survivable compf p signment p Of sol E compf p solution p p 0 1 sol reservation probability product probabilities solutions set solutions relaxation relaxation relaxation Assuming approximated survives contention assigned solution sol survives operation 0 E RELAX resource contention reservation p 0 1 sol solution sol sol goodness assigning p Of goodfb c n survp0 j sol 4 l compf p 0ERELAXj compatible compatible assignment N Sadeh MS FoxArtificial Intelligence 86 19 I41 21 assumption equivalent constraints jobs Empirical omitting results reported acceptable Thanks interactions induced Section 8 suggest assumption search state generally need computed independence This precedence independence reservation operations Expression operations assumption survivabilities RELAX 2 0 4 rewritten RELAX separate survivability reservation p goofffp survfp x c rI survpo 1 sol solEcompp OERELAxOf This rewritten gop sunp x compsurvfp 9 6 compsurvip Of expected number solutions compatible assignment p survive contention compsuruf 1 p rI sulpO 1 sol sol Ecompfp OERELAXOf Note fact cornpsurvf p function start time sd allocated 0 reservation p written corrzpsuw t times In treelike process routings t Of Olk possible steps VI f nl number operations evaluate compsurvf t possible procedure described adaptation procedure described 0vlk2 0 ilk taking advantage linearity precedence treelike CSPs Here dynamic programming start relaxation RELAX k maximum number possible This technique procedure complexity model allow temporal constraints complexity possible constraints use resulting critical path algorithm 0 vlk2 For nontreelike remove small number precedence constraints reservations operation Appendix A This 91 The complexity Dechters If 11 reduced constraints described process plans precedence treelike process routing transform general relaxation earlier compute goodness measures critical operation 0 Since operation In example discussed compatible solution goodness measures computed 6 Start time s 6 scheduled relaxation heuristic consists operations job js Fig 14 displays solution instance given sg 3 s 0 Therefore 6 On hand good start time s 7 compatible solutions sti 3 se 0 s 4 st 0 sg 4 s 1 The survivability solutions relaxation goodness start time s 0 x survs 3 x survs time obtained adding survivabilities relaxation start 6 su Start solutions time s 12 compatible largest number survivable start time selected value ordering relaxation Hence 28 N Sadeh MS FbxArtiial Intelligence 86 I 996 I41 Reservation Goodness 0 ii 600 600 700 500 400 300 200 lW Ow 0 1 2 3 4 F 5 f 7 6 I 9 6 0 0 I I 10 11 start time 12 Fig 14 Value goodness 0 expressed number compatible job schedules expected survive resource contention heuristic By assigning ordering heuristics described schedule backtracking This problem backtracking Keng Yuns heuristic start time Oi iteratively variable value search procedure easily completes relatively easy solved No heuristic perfect Although value ordering heuristic reveals start time careful analysis st 1 1 actually infeasible Notice scheduler need try second best value recommended value work instance recommends right second best choice heuristic absence backtracking In Appendix B filtering mechanism value ordering heuristic ranking reservations We refer resulting heuristic refine FSS value ordering heuristicFSS stands filtered survivable schedules 7 Overall complexity In search state lookahead complexity worstcase operations left operation Omax Nk Hm N number unscheduled search state k maximum number reservations scheduling horizon m number resources dominant appears search states generated uled overall complexity total number operations sizes suggests approach Clearly backtracking higher case analysis current state H In general 0 Nk number sched scheduled Experimentation problems different procedure occurs results presented factor In absence backtracking absence backtracking equal number operations Section 8 true complexity overall complexity NOP denotes empirical approach ONOpk N Sadeh MS FoxArtificial Intelligence 86 1996 141 29 8 Empirical evaluation reports This section ordering heuristic rearrangement value ordering veloped Keng Yun 201 DSR variable heuristic 91 combination results experimental study comparing FSS value ordering heuristic DSR dynamic ORR variable search 31737 variable value ordering heuristics advised backtracking ABT 81 Design test data A set 60 scheduling jobs operations job linear process routing specifying sequence resources This sequence randomly generated bottleneck order problems randomly generated resources total 50 operations problem Each job visit job resources visited fixed number operations resource contention increase conditions distribution job dates cover different scheduling Two parameters adjusted number major bottleneck rameter RG controlled bottleneck parameter BK controlled groups problems randomly generated considering range parameter different bottleneck parameter referred function order 100 major problem parameters allowed range pa release dates resources Six different values configurations The value slack parameter S adjusted close bottleneck If parameter fixed change large proportion problems trivial infeasible demand resources The parameters set follows parameter l Range parameter RG drawn controlled problem estimated S slack parameter problem Due dates randomly release date date uniform distributions 1 S M U 1 RG 1 U b represents uniform probability distribution 6 M estimate minimum makespan distribution defined function problem BK RG The minimum makespan M n 1 dURbt c21R R n number jobs m number resource resources Rbrk main bottleneck resource Ri This denotes estimate suggested release dates randomly drawn 1 S M U 0 RG Three values uniform distribution range parameter generate problems RG 00 01 02 Due size scheduling problems considered larger values RG moderate quickly produce tend fact generating value slack parameter S RG 341 Similarly form average duration operations infeasible problems increase resource contention This larger detailed requiring l Bottleneck parameter BK BK l half problems half major major bottlenecks bottleneck BK 2 30 N Sudeh MS IoxArtijiciul Intelligence X6 1996 l41 l Slack parameter S bottlenecks problems jobs different release dates dates time span problem inflated 1 S M problems set S 01 x BK 1 RG While ensuring feasible resources major provided problem feasible The slack parameter empirically close 100 utilization bottleneck problems remained remained Finally operation durations randomly drawn operation depending operations durations nonbottleneck tion U3 11 On average operations start times values initial search state operations durations randomly drawn uniform distribution required bottleneck different distributions resource Bottleneck II 8 16 randomly drawn uniform distribu problems slightly 100 possible enforcing procedure left application consistency 82 Comparison heuristics Five combinations l DSR ABT variable value ordering heuristics compared dynamic search rearrangement heuristic 3 combined 9 The version ABT relaxation treelike implemented value ordering heuristic process routing advised backtracking experiments based predetermined FSS This version ABT carefully search state 1 number operations k maximum number remaining checking This procedure similar Notice implementation slow competitive required 0 vtk It required computing number solutions identifying relaxation MST count FSS ABT MST relaxations implemented constraint satisfiabilities search state Additionally time general MST relaxation current operation belonged Ovtk treelike start times operation consistency steps relaxation run l DSR FSS DSR heuristic combined filtered survivable schedules FSS value ordering heuristic J 25 l ORR ABT operation resource reliance ORR variable ordering heuristic ABT value ordering heuristic l ORRd FSS ORR FSS heuristics l SMU variable value ordering heuristics developed Keng Yun Cp 25 advocated paper Southern Methodist University 201 All combinations variable value ordering heuristics run functions shared consistency modular enforcing module functions bypassed possible DSRABT All functions demand profiles common testbed backtracking module unnecessary bypassing construction implemented equal care On problem search stopped The performance compared combination dimensions required 500 search states variable value ordering heuristics N Sadeh MS FoxArtificial Intelligence 86 1996 I41 31 1 2 3 introduced framework interactions necessarily search efficiency scheduled heuristics respect ratio number operations good job focusing 1 While high search efficiency evaluation It tells heuristic In absence backtracking operation search efficiency synonymous search In particular want Section 6 Search eficiency total number search states explored search state generated equal fast procedure important critical variables promising values variables sure probabilistic good job capturing key constraint generic CSP heuristics This metric tell Number experiments solved 500 search states When combi nation variable value ordering heuristics solve given experiment let procedure reach solution At point time continue Average CPU time seconds time successfully schedule problem When solution 500 search states time approximated 500 search states All CPU running Knowledge Craft procedure results required explore 5000200 Allegro Common Lisp Experimentation return solution reasonable average CPU CPU time required times obtained DECstation accounted case indicates platform runs 30 times faster language recent version written thousands search states sense 500 search states Table 1 They typically needs DSR C indicate solve 58 failed job shop scheduling results suggest summarized realistic variable ordering heuristic They far CSP literature shallow problems generally problems Combined ART The sufficient heuristic able solve 29 problems 60 500 search states Even combined FSS value ordering heuristic DSR achieved solve 27 problems 60 search efficiency job shop scheduling 500 search states These requires dynamic indicate variable ordering heuristics proposed job shop scheduling After replacing DSR ORR combination ART search efficiency went 16 11 additional problems solved 500 search states The SMU heuristic achieved higher efficiency 72 solved 43 problems 60 500 states Even heuristic trouble solving ORRABT ORRFSS problems variable value ordering heuristics advocated paper yielded impressive 86 search efficiency solved 52 problems 60 500 search states able solve ORRFSS generated Among 78 search states solve problem This heuristic combination speedups heuristics hardly solve problems took 150 CPU seconds 52 experiments achieved important In fact I In 391 reported experiments number critical operations critical operations heuristic quickly degrades dynamic scheduled comparing variations ORR heuristic dynamic variations ORR differed variable ordering selected These experiments performance 32 Table I Comparison parentheses N Sudeh MS IrrArriciul Intelligence 86 1996 l41 heuristics sets job shop problems standard deviations appear Performance fve heuristics DSRABT DSRFSS ORRABT SMU ORRFSS Search efficiency RG 02 BK I Nb exp solved CPU seconds Search efficiency RG 02 BK2 Nb exp solved CPU seconds Search efficiency RG 01 BK I KG 01 BK RG 00 BK I RG 00 BK2 Overall performance exp Nb CPU seconds solved Search efticiency exp Nb CPU seconds solved Search efficiency cxp Nb CPU seconds solved Search efficiency exp Nb CPU seconds solved Search efficiency exp Nb CPU seconds solved 072 042 8 524 6955 049 040 7 8865 819 060 044 7 4735 4865 022 027 2 925 460 028 038 3 857 411 03 I 033 3 6795 514 044 041 29 7245 5855 0 R2 038 X 380 515 073 043 I 4565 489 0X2 038 X 266 249 046 046 4 483 324 032 038 3 659 379 037 043 3 615 420 058 045 33 4765 4115 096 006 IO 785 105 054 039 6 5665 5915 079 036 9 290 416 03 I 037 4 918 S75 0s3 044 6 X32 817 046 040 5 907 830 060 041 40 598s 6655 I oo 000 IO I88 14 079 038 8 3845 3795 064 046 6 4645 3905 07 I 042 7 355 3OlS 046 046 4 626 3995 07s 041 8 3835 415 072 041 43 400 3565 096 007 IO 885 13 099 002 IO 93 75 078 036 8 3315 5035 087 029 9 I84 281 073 043 7 47s 6405 082 038 8 3005 444 086 031 52 2455 4035 83 Recent developments additional results The benchmark problems study available research ftp account CMU widely community disseminated area A high point history benchmark reached AAAI Spring Symposium held time common set problems large anonymous providing N Sadeh MS FoxArtificial Intelligence 86 1996 I4I 33 200 c II 50 100 200 300 400 Without Rough Demand PrOfibS I With Rough Demand Profiles Fig 15 Scaleup experiments operations scheduled CPU times DECstation 5000200 running C versions rough demand profiles Problem sizes number Stanford able efficiently March 1992 groups researchers simultaneously announced approach developed Johnston et al relies collection context heuristics heuristics violates initialization solve 60 problems different approaches constraints resource approach developed Muscettola context imposed subsets 27 Resource fails feasible If procedure scratch relying stochasticity Monte Carlo contention 1 2 3 solution restarts precedence produce different This approach contending Monte Carlo simulation A bottleneck partitioning HSTS operations approximated solution simulation A trialanderror SPIRE 191 The schedule produced initialization constraints When heuristic solution prespecified initialization The specific 27 reported 60 benchmark solve 60 problems A procedure developed gent backtracking mechanisms minconflict problems This suggests number heuristics initialization mainly attributed 251 If minconflict attempts case passed mmconflict solution rid conflicts repair fails produce feasible schedule repair techniques SPIRE published repair cycles new schedule necessary passed minconflict generated solve 24 ability approach heuristics combines ORRFSS heuristics intelli initialization described heuristics 45461 More recently reimplemented demand profiles simpler rough demand profiles C Most problems 3 4 CPU seconds DECstation 5000200 We able solved speed computation identify areas high contention detailed demand profiles described Section 6 constructed The rough demand profiles obtained evenly earliest start time spreading latest finish time Rough demand profiles easily updated search state significantly detailed demand profiles areas highest contention Using demand unscheduled reduce computation operation time focusing construction 34 N Sudeh MS FoxArtcicll Intelligence 86 1996 I41 CPU time required rough demand profiles fell 15 25 CPU seconds DECstation5000200 heuristics job shop CSP significant larger problems illustrated low backtracking problems comparison recent techniques proposed The speedups obtained rough demand profiles Fig 15 Problems thousand operations solved procedure consistently solve 60 benchmark showing remain competitive 223347 9 Summary concluding remarks events subject problem scheduling problem hard constraints factory scheduling situations needs number rescheduling problems activities need imposed astronomical job shop CSP Examples formulation In paper studied variation job shop scheduling problem time windows We operations performed nonrelaxable job refer domain shop scheduling include operations performed shifts Other examples scheduled spacecraft mission 27 This formulation time windows revise representative imposed operations schedule schedule modify More generally model scheduling problem hard deadlines The job shop CSP rules similar solved traditional integer programming onepass number binary vari techniques far overwhelmed type problems limited account ables required 321 Our work Keng Yun 20 apply paradigm provides promising approaches Our approach enforcing mechanisms probabilistic schedule variable ordering ordering reservation scheduling consistency combines decide operation operation traditional search procedure lookahead analysis combinatorial resource capacities class problems demonstrates relies depthfirst backtrack job shop CSP formulation priority dispatch reservation Traditional mixed CSP problem solving paradigm 122639 scheduling scheduling techniques techniques alternative assign proposed heuristics literature CSP 20 We showed generic heuristics tightness constraints andor In paper reviewed number popular variable value ordering heuristics perform particularly CSPs Keng Yuns reported fail adequately scheduling induced high account connectivity constraint graphs characteristic job shop CSPs In second new probabilistic model search space allows article introduced operation availability value estimate reservation assignment degree contention contention uninstantiated unscheduled heuristics reliance variable variables operations interactions conflicting values See 41 experiments applying priority dispatch rules set 60 benchmark problems N Sadeh MS FoxArtcial Intelligence 86 1996 l41 35 resource allocation new variable value ordering heuristics defined resource time interval Based probabilistic model reliance relies contended ORR variable ordering heuristic selects resourcetime interval schedules expected job schedules FSS value ordering heuristic assigns compatible largest number survive resource expected 2 1 The operation operation filtered survivable operation survivable contention reservation job schedules results pair heuristics Experimental job shop CSPs generic CSP heuristics results indicate search efficiency achieve specialized efficiently cientfy solve number solved prior CSP heuristics heuristics developed Keng Yun The increases ORR FSS heuristics yield significant important reductions search time The estimates resource contention ORR FSS heuristics assumptions More sophisticated independence implemented attempt cies complex analytical models Carlo simulations sophisticated requirements 431 The improvements versions better account 414244 While ORR FSS heuristics developed based versions heuristics different dependen relying Monte achieved search efficiency generally justify heavier computational resource allocation problems For instance work Fundamental described fact CSP disequality assigned contention abilistic measures reliance resource problem allocation constraints problems formulated problem evaluate CSP techniques tion problem variables preventing queenrow learned In fact lessons values CSP constraints chances variable account praised like DSR count disequality ordering heuristics ordering heuristics account structed Variable ordering heuristics incident ordering heuristics The probabilistic model search space sophisticated ing framework defined For value goodness FSS heuristics base count entire cliques capacity constraints cliques like ABT assume decisions job shop CSP prob Nqueens resource alloca resource constraints value formulated task column number values like MW MC count weaknesses solution remain available literature job shop scheduling generic variable l3 CSPs value identified Variable left variable number constraints tightness constraints Value relaxation treelike paper aims provid variable criticality ORR ac relaxations introduced approximations treelike framework measures resource contention CSP admits tight instance 3 Constraints constraints restricting admissible resource assignments 201 representing ability queens attack diagonals represented 36 N Sudeh MS FoxArtijciul Intelligence X6 1996 l41 largescale domains Finally work shows CSP problem solving paradigm scale job shop scheduling CSP suggests complex benchmark problems considered probably classes complex CSPs We hope research prompt problems evaluate field revisit earlier studies look challenging earlier CSP studies representative techniques Appendix A Counting number survivable schedules 0 defined procedure reservation job schedules efficiently relaxation generally dynamic programming This appendix describes compatible assignment counts number survivable Section 64 FSS value ordering heuris reservation p current critical t start time number survivable solutions tic operation Of This number referred allocated similar method developed Dechter Pearl ABT value ordering heuristic Dechter Pearls procedure 9 0 vlk2 complexity laxation FSS value ordering heuristic number procedure described possible takes advantage Ovk V number operations 361 While direct generalization p The procedure presented t k maximum relaxation compsunt linearity operation complexity precedence variation reservations constraints reduce Fig A1 represents prototypical treelike process constraints nized current critical operation precedence critical operation 0 precedence operations precedence constraints constraint operations tree operations grandchildren routing reorga root tree The arrows represent routing The children 0 operations directly connected directly connected process Fig A 1 A treelike process precedence constraints routing organized current critical operation root Arrows represent N Sadeh MS FoxArtificial Intelligence 86 1996 l41 31 All computations presented single checking performed The notations appendix refer search state consistency Section 64 A extra notations need defined suwr Co s t surp G set remaining reservations Of l CY direct children 0 Of process routing l 3 direct children 0 l A time granularity 0 process routing In Section 64 assumed problem A 1 start times end times integers For sake clarity appendix account explicitly formulas presented In treelike process routings operation 0 disjoint sets operations contains exactly child operation 0 defines subproblem correspond unique A link children Each sets interacts subproblems operation 0 Accordingly l For Of E define BEFL j t number survivable solutions subproblem defined operation 0 descendants compatible assignment s t 0 l For 0 E af define AFTf kt number survivable solutions subproblem assignment s t Of defined operation 0 descendants compatible Given operation Of link subproblems defined children compsurvit n BEFjt X n AFTt kEaj formula relies independence solution Notice probability given product probabilities solution BEFijt survives contention obtained adding subproblem relaxation survives contention assumption Section 64 assignments assumed reservation solutions compatible precedence constraint st dufi t BEFjt c wv x n BEFJT x AFTJT rQtdu PEP e Similarly AFTi t 1 AFTt c wv x Ttduj lIEa J We speed computation recurrence partial sums 38 N Sadeh MS FoxArtijicial Intelligence 86 1996 I41 BEFitBEFfit A survit dui x n BEFjJt Ia du x n AFTt du ytn I AFTt AFT t A survitduj x n BEFitduf x AFTUtdu W I I The recurrence initialized BEF es4 A 0 AFTJls A 0 uses convention II 1 0 In order compute compsuw t remaining Oi starts computing tree depicted BEFit level Fig A 1 The procedure BEF t AFTt start times critical operation leaf operations moves tree combining AFTt computed previous level At operation O tree procedure computes A BEF t expressions 0 expressions multiplications O parent operation h AFTt maximum number possible start times operation Each computation involves relaxation FSS value ordering heuristic computing possible 0 vk steps k maximum Hence compsurvf t survL t xpEG survp requires i4 number reservations 0 zqk overall complexity procedure start times operations 1 number operations computations Computing addition Hence 0 vA elementary 01 0 A left operation relaxation Appendix B Value ordering filter The following describes filtering mechanism refine ranking reserva tions FSS value ordering heuristic I4 The real complexity This duration assumed bounded constant actually O vlkdu du 1s duration longest operation relaxation N Sadeh MS FoxArtijcial Intelligence 86 1996 141 39 For reservations influence 6 compared f32 p compsurvf p large p1 following survfp Consider reservations pl compsurvp l p2 compsurvfp2 1000 suwfp 05 200 survfp2 10 recognize reservation pr despite reservation fact according example p2 better Rq 6 goodi pi 500 matter equals 200 1000 case certainly com reported end paper solutions compatible Ideally good value ordering heuristic larger goodfp2 200 Indeed compsurvf p patible schedules reservation problem handled filtering reservation p compsurvf measures p Instead relying Eq 6 value ordering heuristic factor matters survivability following revised formula reservation goodness according number survivable locally In experiments Instead goodf p Sunti p X MZN Pl compsurvi p B1 minimum MN denotes empirically average zq 1 operations survivable adjusted By filter form Wr reservations function I5 parameter heuristic attempts relaxation CD ensure References II 21 31 41 51 I61 171 81 91 1101 Ill JF Allen Maintaining knowledge temporal intervals Commun ACM 26 1983 832843 KR Baker Inrroducfion Sequencing Scheduling Wiley New York 1974 JR Bitner EM Reingold Backtrack programming techniques Commun ACM 18 1975 651655 CC Cheng Scheduling precedence constraints posting PhD Thesis Graduate School Industrial Administration Robotics Institute Carnegie Mellon University Pittsburgh PA 1995 E Davis Constraint propagation interval labels Artif Intell 32 1987 281331 R Dechter I Meiri Experimental evaluation preprocessing techniques constraint satisfaction problems Proceedings IJCAI89 Detroit MI 1989 271277 R Dcchter I Meiri Experimental evaluation preprocessing algorithms constraint satisfaction problems Art Intell 68 1994 21 l241 R Dechter I Meiri J Pearl Temporal constraint networks Proceedings First lnernational Conference Principles Knowledge Representation Reasoning Toronto Ont 1989 R Dcchter J Pearl Networkbased heuristics constraint satisfaction problems Artif Intell 34 1988 138 MS Fox ConstraintDirected Search A Case Study JobShop Schedufing Morgan Kaufmann Los Altos CA 1987 MS Fox N Sadeh C Baykan Constrained heuristic search Proceedings IJCAI89 Detroit MI 1989 309315 l5 A sophisticated way filtering compsup involve filtering number compatible reservations operation relaxation This ensure operations relaxation compatible reservations In general critical operation relaxation reservations survivable single filter operations relaxation sufficient 40 N Sudeh MS FoxArtficicrl Intelligence 86 1996 I41 I2 I S French SequtvwinX New York 1982 ccnd Scheduling An Introdum Mufhemutics JobShop Wiley 13 1 EC Freuder A sufficient condition 1 14 1 MR Garey DS Johnson Computers Freeman San Francisco CA 1979 backtrackfree search J ACM 29 1982 2432 trnd Intructubilitv A Guide Theory cNPConlpleteness I 151 ML Ginsberg M Frank MP Halpin MC Torrance Search Artijicial lessons learned crossword Infelligence 1990 210215 puzzle Proreedings thr Eighth Nationtrl Conjerewu I6 I SW Golomb LD Baumert Backtrack programming 1 171 RM Haralick GL Elliott Artif Intell 14 1980 263313 I8 1 LA Johnson DC Montgomery Increasing 0lnifions J ACM 12 1965 S16S24 tree search efficiency constraint satisfaction problems Keeorclt Production Plowing Scheduling cmd Imvntory Confrol Wiley New York 1974 I I9 I MD Johnston S Minton Analyzing heuristic strategy constraint satisfaction scheduling M Fox M Zweben eds Intelligent Schedulirlq Morgan Kaufmann Los Altos CA 1994 257289 Chapter 9 120 1 N Keng DYY Yun A planningscheduling methodology constrained resource problem Proceedings IJCAI89 Detroit MI 1989 9981003 2 I 1 C Le Pape SF Smith Management temporal constraints factory scheduling Tech Kept The Robotics Institute Carnegie Mellon University Pittsburgh PA 1987 Proceedings Working Corrferencr Tmrporcd Aspects 111 fnformution Systcms Paris NorthHolland Amsterdam 1987 122 I J Liu K Sycara Collective problem solving coordination society reactive agents Tech Rept CMURITR9423 The Robotics Institute Carnegie Mellon University Pittsburgh PA 1994 I23 I AK Mackworth EC Freuder The complexIt 01 polynomial network consistency algorithms constraint satisfaction problems Art Intell 25 1985 6574 j 24 1 JJ McGregor Relational consistency algorithms applications finding subgraph graph isomorphisms Infirrrr Sci 19 1979 229250 1251 S Minton MD Johnston AB Philips P Laird Minimizing conflicts heuristic repair method constraint 1261 TE Morton satisfaction scheduling problems Arhf tall 58 1992 161205 DW Pentico Heuristic Scheduhng Systems Wiley Series Engineering Technology Management Wiley New York 1993 I27 1 N Muscettola HSTS integrating planning scheduling M Fox M Zweben eds intelligent Morgan Kaufmann Los Altos CA 1994 169212 Chapter 6 S Smith A probabilistic framework resourceconstrained multiagent planning Proceedings AAAI87 Seattle WA 1987 IO63 1066 I29 I B Nadel Tree search arc consistency constraint satisfaction algorithms L Kanal V Kumar eds Seclrcll Artickl Intelligerlce Springer Berlin l988 301 BA Nadel Theorybased searchorder selection constraint satisfaction problems Tech Rept DCS TRI 83 Department Computer Science Laboratory Computer Research Rutgers University New Brunswick NJ 1986 131 D Navinchandra Explorrrtion Innowtion LesiqIl Springer Berlin 1990 I32 I33 I 34 13s GL Nemhauser LA Wolsey Integer und Combinatoritrl Optimization Wiley New York 1988 WPM Nuijten Time resource constrained scheduling PhD Thesis Technische Universiteit Eindhoven Eindhoven 1994 1 PS Ow Focused scheduling proportionate Howshops Muncher Sci 31 1985 852869 J Pearl Heuristics Intelligent Secwh Srrcuqies ir Computer Problem Solving AddisonWesley Reading MA 1984 I 36 I J Pearl Probtrbilistk Recuorzing 111 Irztekrnt Swcm Networks Pkusible frrference Morgan Kaufmann Los Altos CA 1988 I37 I FW Purdom Jr Search rearrangement backtracking polynomial average time Artif fnrell 21 1983 117133 I38 I N Sadeh Lookahead techniques activitybased jobshop scheduling Thesis Proposal 1989 I39 1 N Sadeh Lookahead techniques microopportunistic job shop scheduling PhD Thesis School Computer Science Carnegie Mellon University Pittsburgh PA 199 I Scheduliqq j 28 I N Muscettola N Sadeh MS FoxArtijcial Intelligence 86 1996 141 41 401 N Sadeh Microopportunistic scheduling MICROBOSS factory scheduler MS Fox M Zweben eds Intelligent Scheduling Morgan Kaufmann Los Altos CA 1994 99135 Chapter 4 41 N Sadeh MS Fox Preference graphs Tech Rept temporalcapacity Computer Science Department Carnegie Mellon University Pittsburgh PA 1988 propagation constraint CMUCS88193 Robotics Institute Tech Rept CMURITR892 42 N Sadeh MS Fox Focus attention Conference Space Telerobotics 1989 activitybased scheduler Proceedings NASA 43 N Sadeh MS Fox CORTES exploration microopportunistic jobshop scheduling Proceedings IJCAI89 Detroit MI 1989 44 N Sadeh MS Fox Variable value ordering heuristics activitybased jobshop scheduling Proceedings Fourth International Conference Expert Systems Production Operations Management Hilton Head Island SC 1990 134144 45 N Sadeh K Sycara Y Xiong Backtracking CMURITR9206 The Robotics hard scheduling problems Tech Rept Institute Carnegie Mellon University Pittsburgh PA 1992 techniques Artif Infell 76 1995 455480 improved version 46 N Sadeh K Sycara Y Xiong Backtracking satisfaction earlier version paper appeared CMU Tech Rept CMURITR9206 problem Artif Intell 76 1995 455480 techniques job shop scheduling CMU Tech Rept CMURITR9431 constraint 47 SF Smith C Cheng Slackbased AAAI93 Washington DC 1993 heuristics constraint satisfaction scheduling Proceedings 481 RE Tarjan Minimum spanning Conference Series Applied Mathematics trees Data Structures Network Algorithms CBMSNSF Regional 44 SIAM Philadelphia PA 1983 Chapter 6 491 P Van Hentenryck H Simonis M Dincbas Constraint satisfaction constraint logic programming Artif Intell 58 1992 113159 SO RJ Walker An enumerative technique class combinatorial problems R Bellman M Hall eds Combinatorial Analysis Proceedings Symposium Applied Mathematics American Mathematical Society Providence RI 1960 9194 Chapter 7 511 R Zabih D McAllester A rearrangement search strategy determining propositional satisfiability Proceedings AAAI88 St Paul MN 1988 155160 521 M Zweben B Daun E Davis M Deale Scheduling rescheduling iterative repair MS Fox M Zweben eds bzrelligent Scheduling Morgan Kaufmann Los Altos CA 1994 241255 Chapter 8