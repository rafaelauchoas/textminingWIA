Artiﬁcial Intelligence 170 2006 160185 wwwelseviercomlocateartint Loop formulas circumscription Joohyung Lee Fangzhen Lin b Department Computer Science Engineering Arizona State University AZ USA b Department Computer Science Hong Kong University Science Technology Clear Water Bay Kowloon Hong Kong Received 4 April 2005 received revised form 13 September 2005 accepted 14 September 2005 Available online 2 November 2005 Abstract Clarks completion simple nonmonotonic formalism special case non monotonic logics Recently work extending completion loop formulas general cases nonmonotonic logics logic programs answer set seman tics McCainTurner causal logic characterized propositional logic form completion loop formulas In paper idea applicable McCarthys cir cumscription propositional case Lifschitzs pointwise circumscription playing role completion We embed propositional circumscription logic programs causal logic inspired uniform characterization completion loop formulas 2005 Elsevier BV All rights reserved Keywords Nonmonotonic reasoning Commonsense reasoning Knowledge representation Circumscription Clarks completion Loop formulas Logic programming 1 Introduction Clarks predicate completion 5 simple intuitive nonmonotonic formalism Normally applicable knowledge base given set rules works rules yield cycle Corresponding author Email address ﬂincsusthk F Lin 00043702 matter 2005 Elsevier BV All rights reserved doi101016jartint200509003 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 161 Despite limitations surprisingly predicate completion solve problems thought require sophisticated nonmonotonic logics For instance Reiter 34 showed certain reasonable assumptions successor state axioms computed action effect axioms predicate completion solved frame problem state constraints For state constraints Lin 25 argued encoded notion causality encoded way successor state axioms computed predicate completion class causal rules includes benchmark planning domains 2527 For deﬁnite fragment McCainTurner causal logic 1028 problem termining theory consistent reduced satisﬁability problem propositional logic process literal completiona translation similar Clarks completion This idea led creation Causal Calculator CCALC1 representing commonsense knowledge action change After turning deﬁnite causal theory classical propositional theory CCALC ﬁnds models invoking satisﬁability solver CHAFF2 SATO3 RELSAT4 turn correspond models given causal theory CCALC successfully applied challenge problems theory commonsense knowledge 141823 formalization multiagent computational systems 23 In logic programming predicate completion best known commonly ferred program completion semantics relationships semantics espe cially answer set semantics known stable model semantics Gelfond Lifschitz 9 studied extensively First known answer set normal logic program model completion verse generally hold Fages 8 showed certain syntactic condition called tightness sufﬁcient establishing equivalence Er dem Lifschitz 7 generalized Fages theorem extended programs nested expressions sense 17 bodies rules Instead looking conditions guarantee equivalence com pletion semantics answer set semantics Lin Zhao 24 considered strengthen completion equivalent answer set semantics The idea presence cycles causes mismatch models com pletion answer sets program address problem raised directly The completion semantics captures intuition atom true bodies rules atom head true Similarly Lin Zhao associated loop loop formula captures intuition atoms loop true rule head belongs loop body true positive atom loop They showed set atoms answer set nondisjunctive logic program iff model completion loop formulas program This idea allows SAT solvers ﬁnding 1 httpwwwcsutexaseduuserstagccalc 2 httpwwweeprincetoneduchaff 3 httpwwwcsuiowaeduhzhangsatohtml 4 httpwwwalmadenibmcomcspeoplebayardoresourceshtml 162 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 answer sets led creation SATbased answer set solvers ASSAT 24 CMODELS2 11 As turned program completion loop formulas limited nondisjunc tive logic programs Lee Lifschitz 12 extended LinZhao theorem disjunc tive logic programs generally arbitrary programs nested expressions Lee 13 showed similar result obtained McCain Turner causal logic based showed embed logic programs causal logic Given results wonders far idea completion loop formulas Is general capture nonmonotonic logics In paper swer question positively circumscription 2930 propositional case Thus interesting observe apparently different nonmonotonic formalisms uniform view completion loop formulas Using idea embed circumscription logic programs McCainTurner causal logic Hopefully results lead good implementations propositional circumscrip tion SAT solvers andor answer set solvers This signiﬁcant progress nonmonotonic reasoning circumscription applications commonsense rea soning modelbased diagnoses discourse understanding While applications general use ﬁrstorder circumscription solved propositional circumscription domains given ﬁnite This paper organized follows In Section 2 introduce notations use rest paper recast deﬁnition circumscription propo sitional case In Section 3 discuss Clarks completion compare Lifschitzs pointwise circumscription 20 serve completion purpose In Section 4 introduce notion loop notion dependency graph Section 5 contains main technical results paper shows circumscription characterized completion plus loop formulas It discusses related work Based results Section 5 Section 6 shows circumscription embedded logic programs answer set semantics McCainTurner causal logic We conclude Section 7 2 Logical preliminaries A literal propositional atom negation atom A propositional formula formed literals propositional connectives A clause ﬁnite set literals We identify clause C disjunction elements It known formula transformed equivalent set clauses We use variables range 0place connectives cid2 quantify For instance Az p1 pk propositional formula built propo sitional variables z p1 pk write zAz p1 pk denote formula Acid2 p1 pk A p1 pk similarly zAz p1 pk denote mula Acid2 p1 pk A p1 pk In following write formula A AP AP Q tuples P Q atoms This way X tuple variables atoms length P use AX AX Q denote result simultaneously replacing elements J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 163 P A corresponding elements X We identify tuple corresponding set confusion For P p1 pn Q q1 qn P cid1 Q stands P Q stands P Q stands cid1 pi qi 1cid1icid1n cid1 pi qi 1cid1icid1n P cid1 Q P Q Let P Z tuples atoms AP Z formula The circumscription P AP Z XY AP Z atoms Z allowed vary following formula cid2 AX Y X P cid3 1 The formula denoted CIRCAP Z P Z written CIRCAP P Z The second conjunct formula 1 actually propositional formula follow ing example CIRCp q p p q x cid4cid2 p q cid3 cid2 x q x p x cid10 p cid3 cid2 q cid2 p cid2 cid10 p cid2 q p cid10 p cid3cid5 p q p q 2 The models circumscription p q5 There weaker notion circumscription turn important This Lifschitzs pointwise circumscription 20 In propositional case given atom p tuple Z atoms pointwise circumscription p Ap Z Z allowed vary Ap Z xY Ax Y x p cid2 cid3 3 pointwise circumscription tuple P atoms A Z allowed vary conjunction pointwise circumscription p P A Z allowed vary It seen 3 equivalent CIRCA p Z Thus pointwise circumscription tuple P atoms A Z allowed vary pP CIRCA p Z cid6 For interpretations truth assignments I J signature write I cid1P Z J 6 I J agree atoms P Z pi P pi I pi J We write I P Z J I cid1P Z J J cid1P Z I 5 We identify interpretation set atoms true 6 We write I cid1P J Z 164 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 The following proposition Proposition 1 19 provides modeltheoretic account circumscription Proposition 1 An interpretation I model CIRCA P Z iff minimal7 P Z allowed vary I model A model J A J P Z I For example models p q p q model CIRCp q p q p p q 3 Completion pointwise circumscription Clarks completion turns conditions conditions For instance given following rules Wet Raining Wet SprinklerOn Wet Clarks completion applied Wet yields Wet Raining SprinklerOn The underlying assumption called closed world assumption 32 given knowledge base contains complete knowledge Wet true In particular rule proposition p assumed false p In general following deﬁnition Deﬁnition 1 Let A set formulas form G p G formula p atom suppose following implications A consequent q G1 q Gn q Then Clarks completion A q q G1 Gn Notice n 0 q For set P atoms Clarks completion A P conjunction Clarks completions A p p P Logically Clarks completion q equivalent adding A sentence q G1 Gn making weakest sufﬁcient condition q necessary condition Unfortunately Clarks completion ﬁt following reasons One problem deﬁned formulas form G p arbitrary mulas Thus Clarks completion compared circumscription formulas given special form Moreover Clarks completion sensitive syntactic form given knowledge base For instance p q q p logically equivalent Clarks completions p q 7 Recall Footnote 5 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 165 Fortunately notion literature Lifschitzs pointwise circum scription 20 generalizes Clarks completion syntax independent To notice ﬁrst mentioned Clarks completion p essentially turns weakest sufﬁcient condition p necessary condition Formally deﬁne notion weakest sufﬁcient conditions follows 26 Given propositional formula A atom q formula ϕ mention q called weakest sufﬁcient condition q A cid2 ϕ q formula ψ mention q A cid2 ψ q A cid2 ψ ϕ For A q weakest sufﬁcient conditions q exist unique logical equivalence A In following given formula A set P atoms denote result replacing occurrences atoms P A In use AP section P singleton Proposition 2 26 For formula A atom q formula A sufﬁcient condition q q weakest Thus extend Clarks completion arbitrary formulas follows Given formula A set P atoms generalized Clarks completion A P p p P As turned exactly conjunction A formulas p A Lifschitzs pointwise circumscription P A Proposition 3 For formula A atom q CIRCA q equivalent A q A q Proof xAx x q equivalent cid2 A q Acid2 cid2 q cid4cid2 cid3 cid3cid5 equivalent cid4cid2 Acid2 q q equivalent q A cid3 cid3cid5 cid2 A q q cid1 So following shall use term completion pointwise circumscription interchangeably purpose pointwise circumscription P A Z allowed vary completion A P Z allowed vary The following proposition shows completion A equivalent Clarks com pletion B B equivalent A Proposition 4 Let A formula P set atoms There formula B required form deﬁnition Clarks completion A equivalent B completion A P equivalent Clarks completion B P 166 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 Proof Let B0 set nontautological clauses equivalent A Now q P clause contains q G q generate rule G q let B resulting theory Clearly B equivalent B0 A Clarks completion B q P conjunction B q B q P But B equivalent A B q So proposition follows cid1 q equivalent A Lifschitz 20 showed circumscription entails pointwise circumscription completion converse hold general For instance CIRCp q p q yields p q But pointwise circumscription p q p q equivalent p q The reason pointwise circumscription completion like Clarks completion handle loops p q formula p q The main purpose paper formally deﬁne mean loops formula associate constraint loop propositional circumscription equivalent conjunction pointwise circumscription constraints loops We begin deﬁning notion loop Like logic programs appeal notion dependency graph 4 Dependency graphs loops A clause like p q r rewritten r q p r p q So wants count ways atom derived clause needs counted p q In general clause C contains atom p rewritten Cp p8 This motivates following deﬁnition dependency graph set clauses Deﬁnition 2 Let A set clauses P set atoms The positive dependency graph A P directed graph vertices atoms P edge goes vertex p vertex q clause C A p q C A nonempty subset L P called loop A P pair p q atoms L exists path nonzero length p q dependency graph A P vertices path belong L For example consider following set A1 clauses p q p q r s r s p r This theory loops p q r s p q r s shown dependency graph Fig 1 We deﬁnition loop slightly general dropping requirement paths nonzero length That nonempty subset L P called gener alized loop A P pair p q atoms L exists path p q 8 Recall Cp equal convention identifying clause disjunction literals lCp l l denotes literal complementary l according cid6 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 167 Fig 1 The dependency graph A1 p q r s dependency graph A P vertices path belong L In words nonempty subset L P generalized loop A P subgraph dependency graph A P induced L strongly connected Note singleton subset p P loop edge p dependency graph On hand singleton subset atoms generalized loop regard presence edges For instance addition loops A1 generalized loops p q r s p q r s As later notion generalized loop simpliﬁes statements results Theorem 1 It allow view loop formulas generalization completion For arbitrary formula A dependency graph deﬁned considering set B clauses equivalent A Deﬁnition 3 Given formula A B ﬁnite set clauses equivalent A dependency graph B P called dependency graph A P B Similarly loops B P called loops A P B generalized loops B P called generalized loops A P B 5 Computing models propositional circumscription We begin simple case constants atoms allowed vary 51 The basic case Recall formula A set P atoms AP denote result replacing occurrences atoms P A Theorem 1 Let A formula B ﬁnite set clauses equivalent A The following formulas equivalent CIRCA P b The conjunction A cid7 K AK 9 subsets K P cid8 9 When similar applied set K antecedent stands disjunction elements K cid6 168 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 c The conjunction A cid1 L AL 4 generalized loops L A P B In view theorem circumscribing theory regarded adding formulas 4 generalized loops When L loop formula 4 conjunctive loop formula L CIRCA P Notice c viewed conjunction completion A P conjunctive loop formulas Since conditions b c equivalent intermediate condition equivalent ac Corollary 1 The following formulas equivalent formulas ac Theo rem 1 d The conjunction A K AK nonempty subsets K P e The conjunction A cid1 cid7 L AL 5 generalized loops L A P B Note d K nonempty Otherwise formula unsatisﬁable When L loop formula 5 disjunctive loop formula L CIRCA P Note 4 5 L singleton The formulas different L loop Another corollary Theorem 1 theory loops Corollary 2 For formula A equivalent set B clauses loops B P CIRCA P equivalent completion A P Corollary 2 general Proposition 3 P required singleton We compute circumscription completion loops For instance CIRCp q p q equivalent completion p q p q On hand Corollary 2 apply P singleton B loop However loop come tautological clause dropped affecting models After Proposition 3 follows Corollary 2 For example theory loops consider theory A1 tuple P p q r s previous section This theory models p q r s p q r s model CIRCA1 P p q P p q r s Theorem 1 tells models circumscription computing models completion loop formulas As seen pre vious section loops A1 P p q r s Their loop formulas J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 169 p q r r s p respectively Among models completion A1 P p q r s satisfy loop formula p q r r s p model CIRCA1 P The satisfy loop formulas models circumscription The view circumscription terms completion loop formulas helps observe circumscriptions equivalent For instance ex ample restrict atoms circumscribed p q result remains The completion A1 p q subset completion A1 P models A1 satisfy completion A1 p q Set p q r s satisfy loop formula p q r CIRCA1 p q loop formula CIRCA1 P According Theorem 1 compute circumscription P A atoms ﬁxed 1 ﬁrst converts A ﬁnite set B clauses 2 constructs dependency graph B P 3 ﬁnds loops dependency graph 4 computes loop formulas In ﬁrst step formula equivalent different sets clauses turn yield different dependency graphs For instance formulas p q r p q r p q r p q r p r p q equivalent dependency graphs p q r different For purpose equal fewer loops dependency graph better We believe general given formula A computationally hard ﬁnd equivalent set clauses yield smallest number loops But proof remains open question A standard way converting formula A assuming connectives eliminated equivalent set clauses ﬁrst distribute applies atoms distribute applies literals However distributing size formula grow exponentially number atoms A To avoid problem introduce new atoms We Section 52 new atoms treated similarly atoms allowed vary Once converted equivalent set B clauses introducing new atoms dependency graph constructed time polynomial number atoms A However number loops exponential worst case From complexity point view better turned inevitable assuming conjecture theory computational complexity widely believed true Lifschitz Razborov 16 showed equivalent translation logic programs propositional formulas involves signiﬁcant increase size assuming 170 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 conjecture A modiﬁcation theorem holds circumscription Vladimir Lifschitz personal communication One construct dependency graph directly actually generating set clauses Given formula A NNFA denotes negation normal form A formula obtained A distributing applies atoms Every formula A written form C1 Cn n cid3 1 Ci conjunction We Ci conjunctive component A Deﬁnition 4 Let A formula P set atoms The positive dependency graph A P directed graph vertices atoms P edge goes vertex p vertex q subformula F G junctive component NNFA p occurs F q occurs G way Theorem 1 holds replace generalized loops L A P B generalized loops L A P deﬁnition This justiﬁed following lemma10 Lemma 1 Let A formula negation normal form There exists equivalent set B clauses literals l1 l2 belong clause B iff subformula F G A l1 F l2 G way Proof This proved structural induction cid1 When given set clauses arbitrary formula circumscribe Theorem 1 yield shorter reformulation circumscription Corollary 3 For ﬁnite set A clauses CIRCA P equivalent conjunction A cid1 cid7 L CL CA CLcid10 CL generalized loops L A P Proof Note ﬁrst clause C C L CL By Theorem 1 sufﬁcient model A satisfy CL C L cid10 C L equivalent CL For clause C A C L cid10 CL tautology CL unsatisﬁable 10 The lemma Paolo Ferraris J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 171 For clause C A C L C entails CL model A satisﬁes C satisfy CL cid1 52 Varying constants The following proposition 19 Proposition 2 shows eliminate varied constants general Proposition 5 CIRCAP Z P Z equivalent AP Z CIRC cid4 zAP z P cid5 Thus circumscription varied constants reduces basic case Theo rem 1 applies consider dependency graph zAP z Alternatively generalize deﬁnitions dependency graph loop Intu itively paths allowed varied atoms negations intermediate vertices Given set X literals X set literals complementary literals X Deﬁnition 5 Let A set clauses P Z sets atoms The positive depen dency graph A P Z varied directed graph vertices literals P Z Z edge goes vertex l1 vertex l2 clause C A l1 l2 C The deﬁnition generalization Deﬁnition 2 reduces Deﬁnition 2 Z Similarly Deﬁnition 3 extend Deﬁnition 5 arbitrary formula referring equivalent set clauses Let L0 set literals pair l1 l2 literals L0 exists path nonzero length l1 l2 dependency graph A P Z allowed vary vertices path belong L0 A nonempty set L L0Z Z called loop A P Z allowed vary A generalized loop A P Z allowed vary deﬁned similarly case atoms allowed vary dropping requirement paths nonzero length For example A2 set clauses p z z q q p dependency graph p q z allowed vary shown Fig 2 There generalized loops p q p q loop Fig 2 The dependency graph A2 p q z varied 172 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 The deﬁnition loop intuitive deﬁnition economical terms number loops Given set A clauses tuple atoms Z zn z1 Ak 0 cid1 k cid1 n deﬁned follows A0 A Ak Ak1 C1 C2 C1 zk C2 zk Ak1 The Zcollapsed set A obtained An removing clauses C C contains pair complementary literals proper subset Ccid15 C Ccid15 An Let AZ Zcollapsed set A Acid15 Z set clauses AZ mention atoms Z We deﬁne loops generalized loops A P Z allowed vary loops generalized loops Acid15 Z P A loop generalized loop respectively according alternative deﬁnition loop generalized loop respectively according deﬁnition vice versa The following result holds deﬁnition Theorem 2 Let AP Z formula B ﬁnite set clauses equivalent AP Z The following formulas equivalent CIRCAP Z P Z b The conjunction AP Z K zAP zK subsets K P c The conjunction AP Z cid7 cid1 L zAP zL 6 generalized loops L AP Z P B Z varied When L loop formula 6 conjunctive loop formula L CIRCAP Z P Z Theorem 2 follows Theorem 1 Proposition 5 following lemma Lemma 2 Let AP Z ﬁnite set clauses Formula zAP z equivalent set clauses Zcollapsed set A mention atoms Z Similarly Theorem 1 following corollary Theorem 2 Corollary 4 The following formulas equivalent formulas ac Theo rem 2 d The conjunction AP Z cid1 K zAP zK J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 173 nonempty subsets K P e The conjunction AP Z cid7 L zAP zL generalized loops L A P B Z varied When L loop formula 6 disjunctive loop formula L CIRCAP Z P Z We divide c e parts comple tion loop formulas Recall completion formula AP Z P Z allowed vary deﬁned pointwise circumscription P A Z allowed vary equivalent conjunction AP Z formulas p p zAP z atoms p P Similarly Corollary 2 following corollary Theorem 2 Corollary 5 For formula A equivalent set B clauses loops A P B Z varied CIRCA P Z equivalent completion A P Z varied In Section 51 mentioned use new atoms avoid exponential blowup converting formula conjunctive normal form Here standard way CLAUSIFYF Γ F conjunction clauses C1 Ck exit C1 Ck Γ G minimal nonliteral subformula F u new atom F result replacing G F u CLAUSIFYF Γ CLAUSIFYu G CLAUSIFYF returns set clauses equivalent F method described Sec tion 51 Let AP Z formula Acid15P Z S result CLAUSIFYAP Z introduces set S new atoms Then AP Z equivalent sAcid15P Z s According Proposition 5 cid4 AP Z P Z cid5 CIRC cid4 cid15 sA P Z s P Z CIRC cid15 sA cid5 cid4 cid15 zsA cid5 P Z s CIRC So sufﬁcient ﬁnd loops dependency graph zsAcid15P z s By Lemma 2 consider dependency graph Z Scollapsed set Acid15P Z S mention atoms Z S P z s P Similarly Deﬁnition 4 deﬁne dependency graph loop arbitrary formula referring equivalent set clauses 174 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 Deﬁnition 6 Let A formula P Z sets atoms The positive dependency graph A P Z varied directed graph vertices literals P Z Z edge goes vertex l1 vertex l2 subformula F G junctive component NNFA l1 occurs F l2 occurs G way Once deﬁne dependency graph deﬁnition loop Theorem 2 holds replace generalized loops L AP Z P B generalized loops L AP Z P deﬁnition Similarly Corollary 3 given set clauses arbitrary mula circumscribe Theorem 2 yield shorter reformulation circumscription Corollary 6 For ﬁnite set A clauses CIRCA P Z equivalent conjunc tion A cid1 cid7 L z CL CA CL generalized loops L A P Z varied Note unlike Corollary 3 restrict disjunction C L cid10 Indeed statement corollary incorrect Consider set A3 clauses p q q p r s s q Set p q r s models CIRCA3 p q s satisfy modi ﬁed wrong loop formula p q Proof Corollary 6 Note ﬁrst clause C C L CL equivalent CL By Theorem 2 sufﬁcient model A satisfy CL tautology CL C L cid10 clause C A C L cid10 CL unsatisﬁable cid1 53 Relating known results Reiter 33 ﬁrst relationships Clarks predicate com pletion circumscription He proved theory Horn predicate P circumscription P logically entails completion P In propositional case new contributions follows We showed Lifschitzs pointwise circumscription extends Clarks completion arbitrary theories Horn With extension completion gave general syntactic condition guarantees equiv alence circumscription completion Also deﬁned notions loops loop formulas showed circumscription reduced completion loop J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 175 formulas like answer sets logic programming completion deﬁned pointwise circumscription Traditionally computing circumscription means ﬁnding classes ﬁrstorder theories circumscriptions equivalent ﬁrstorder theories 61920 In propositional case circumscription equivalent propositional theory So problem propositional case circumscription reduced propositional logic economically In logic programming positive dependency graph program loops program called tight answer sets tight program exactly models completion Corollaries 2 5 paper address similar syntactic condition circumscription propositional case In following known results circumscription easily explained corollaries We occurrence atom formula positive range number negations negative assuming eliminated favor connectives A formula A positive relative P occur rences P positive negative occurrences P negative We A positive negative relative P equivalent set clauses dependency graph P loops CIRCA P equivalent completion A P The result extended atoms allowed vary The following proposition propositional case Proposition 2a 20 easy prove Proposition 6 For tuple atoms P p1 pn formula A positive relative pi CIRCA P Z equivalent completion A P Z allowed vary Proof This follows fact exists set clauses equivalent A dependency graph A loops cid1 Note Corollary 5 provides general syntactic condition equivalence circumscription pointwise circumscription Proposition 6 For example consider CIRCp q q r q r The formula loops conse quently circumscription equivalent corresponding pointwise circumscription Corollary 5 But conjunction formula divided parts q r positive negative Proposition 6 apply Sometimes easy observe dependency graphs circumscriptions loops For instance observation provides easy proof following proposition 20 Proposition 7 For formula A B B negative relative tuple P atoms CIRCA B P equivalent CIRCA P B Proof There exists set Bcid15 clauses equivalent B negative relative P Notice A Bcid15 A dependency graph P 176 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 loops We loop formulas A Bcid15 P A P equivalent notice Bcid15L loop L entailed Bcid15 cid1 However atoms allowed vary A B loops A A2P z Section 52 B p z example B factored 6 Embedding circumscription nonmonotonic logics As mentioned introduction idea completion loop formulas applied logic programs 1224 McCainTurner causal logic 13 The charac terizations nonmonotonic logics terms propositional logic useful tools comparing formalisms Based idea Lee 13 showed embed logic programs causal logic Inspired similar characterization circumscription embed circumscription logic programs causal logic The propositions proved Ap pendix A turning formalism equivalent propositional formulas translations equivalent propositional logic 61 Embedding circumscription disjunctive logic programs For semantics disjunctive logic programs refer reader Section 51 21 For literal l lnot denote l l positive l Let A ﬁnite set clauses P tuple atoms For clause C A corresponding rule RP C pCP p qCP qnot For example Rpqrp q r s p q r s By σA denote set atoms occur A Proposition 8 For ﬁnite set A clauses set atoms model CIRCA P iff answer set logic program cid9 cid10 RP C C A cid9 σAP cid10 We embed circumscription varied constants logic programs Given ﬁnite set A clauses let AZ Zcollapsed set A Program ΠAP Z consists following rules RP C clauses C AZ mention atoms Z pCpnot clauses C AZ atoms σAP J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 177 Proposition 9 For ﬁnite set A clauses set atoms model CIRCA P Z iff answer set logic program ΠAP Z For example CIRCA1 p q r turned p q q p r s r s p r s s As example translation gives disjunctive programs general Thus implement circumscription logic programming systems like DLV11 GnT12 Propositions 8 913 62 Embedding circumscription causal logic The semantics McCainTurner causal logic given 28 Let A ﬁnite set clauses P tuple atoms For clause C A corresponding causal rule CRP C cid3 cid2 CP P C P P By σA denote set atoms occur A Proposition 10 For ﬁnite set A clauses interpretation model CIRCA P iff model causal theory cid10 cid9 CRP C C A σA σAP signature σA Proposition 10 similar propositional case Proposition 1 22 Extending result circumscription varied constants similar case logic programs Given ﬁnite set A clauses let AZ Zcollapsed set A Causal theory CT AP Z consists following causal rules CRP C clauses C AZ mention atoms Z C clauses C AZ 11 httpwwwdbaituwienacatprojdlv 12 httpwwwtcshutﬁSoftwaregnt 13 Strictly speaking current versions systems allow negation failure head rule handle rule However wellknown technique simulate rules kind additional atoms 178 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 atoms σA atoms σAP Proposition 11 For ﬁnite set A clauses interpretation model CIRCA P Z iff model causal theory CTAP Z signature σA 7 Conclusion To recast following main contributions propositional case Showed pointwise circumscription extension Clarks completion Horn clauses arbitrary formulas Introduced notion dependency graph ﬁnite set clauses based notions loops loop formulas Showed circumscription equivalent completion pointwise circumscription plus loop formulas based result showed embed circumscription nonmonotonic logics similar characterizations These results theoretical practical importance A major obstacle implementing reasoning propositional circumscription checking assignment model circumscription NPhard In comparison checking signment model formula propositional logic answer set nondisjunctive logic program efﬁciently According Theorems 1 2 given formula loops polynomial number loops loops computed polynomial time checking assignment model circumscription polynomial time Hopefully applications circumscription belong class logic programs practical problems tight tight models completion For future work need better understand loops computed More importantly need extend results paper ﬁrstorder case Acknowledgements We grateful Selim Erdogan Paolo Ferraris Hudson Turner anonymous referees reviewed paper short version paper presented AAAI04 useful comments Special thanks Vladimir Lifschitz provided valu able advice pointers earlier work helped improve presentation Joohyung Lee partially supported Texas Higher Education Coordinating Board Grant 00365803222001 Fangzhen Lin partially supported HK RGC CERG HKUST620502E CERG HKUST617004E China NSFC grant 60496322 Most work Joohyung University Texas Austin J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 179 Appendix A Proofs The proof main theorem based following fact main lemma Fact 1 For formula A sets I K atoms I cid2 AK iff I K cid2 A Proof The proof immediate structural induction cid1 Main Lemma Let A formula B ﬁnite set clauses equivalent A I model A P set atoms K nonempty subset P If I satisfy AL generalized loop L A P B L K I satisfy AK The proof given Section A2 A1 Proof Theorem 1 Theorem 1 Let A formula B ﬁnite set clauses equivalent A The following formulas equivalent CIRCA P b The conjunction A subsets K P c The conjunction A cid7 cid1 K AK L AL generalized loops L A P B Proof From b c clear From b Let I model CIRCA P Let K subset P I K cid10 Since I K P I follows I K cid1 A By Fact 1 follows I cid1 AK From c Let I model conjunction A cid1 L AL generalized loops L A P B Let J set atoms J P I We J cid1 A Let K I J For generalized loop L contained K I cid2 gen eralized loop L contained K main lemma follows I cid1 AK equivalent I K cid1 A J cid1 A Fact 1 Therefore I model CIRCA P cid1 Since K nonempty I cid1 AL L I cid1 AL cid6 180 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 A2 Proof Main Lemma Lemma 3 Let A formula B ﬁnite set clauses equivalent A I model A P set atoms K subset P L nonempty subset K Suppose dependency graph B edge atom L atom KL If I cid1 AL I cid1 AK Proof We prove special case A B The general case follows A B equivalent AL set L atoms Fact 1 There exists clause C A I cid1 CL equivalent BL Assume I cid1 AL I L cid1 C For C I cid1 CK follows I cid1 AK Since I cid2 A I cid2 C A1 A2 From A1 A2 follows C contains positive occurrence atom L On hand dependency graph A edge atom L atom KL C contain negative occurrence atoms KL Then follows A1 I K cid1 C equivalent I cid1 CK Fact 1 cid1 Proof Main Lemma In view Lemma 3 sufﬁcient exists generalized loop L K dependency graph B edge atom L atom KL To generalized loop let G subgraph dependency graph A induced K let Gcid15 graph obtained G collapsing strongly connected components G vertices Gcid15 strongly connected components G Gcid15 edge vertex V vertex V cid15 iff G edge atom V atom V cid15 Since K nonempty generalized loop K Consequently vertex Gcid15 From fact vertices Gcid15 strongly connected components G follows terminal vertex Gcid15 Let L vertex It clear edge atom L atom KL dependency graph B cid1 A3 Proof Lemma 2 Lemma 2 Let AP Z ﬁnite set clauses Formula zAP z equivalent set clauses Zcollapsed set A mention atoms Z Proof Since Zcollapsed set A equivalent AZ Section 52 sufﬁcient prove zAP z equivalent set clauses AZ mention atoms Z The proof strong induction length z Assume zk1 z1AP zk zk1 z1 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 181 equivalent set clauses Ak1zk mention atoms zk1 z1 Lets denote set Acid15 k1zk Then zk z1AP zk z1 equivalent Acid15 k1cid2 Acid15 k1 conjunctive normal form obtained distrib uting Lets denote resulting set clauses Bk One check Bk equivalent set clauses Ak mention atoms zk z1 Bk contains clauses Acid15 Every clause Bk entailed clause Acid15 k1zk mention zk k1zk mention zk clauses C1 C2 obtained taking disjunction C1 zk k1cid2 C2 zk Acid15 Acid15 k1 cid1 A4 Proof Theorem 2 Theorem 2 Let AP Z formula B ﬁnite set clauses equivalent AP Z The following formulas equivalent CIRCAP Z P Z b The conjunction AP Z K zAP zK subsets K P c The conjunction AP Z cid7 cid1 L zAP zL generalized loops L AP Z P B Z varied Proof By Proposition 5 CIRCAP Z P Z equivalent cid4 zAP z P AP Z CIRC cid5 A3 Theorem 1b A3 equivalent conjunction AP Z cid7 K zAP zK subsets K P By Theorem 1c A3 equivalent conjunction AP Z cid1 L zAP zL A4 generalized loops L zAP z clausal form zBP z By Lemma 2 zBP z equivalent set clauses Zcollapsed set B mention atoms Z generalized loops A P B Z varied cid1 A5 Proof Proposition 9 Given disjunctive logic program Π classical negation Π K denote program obtained Π replacing occurrences atoms K scope negation failure 182 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 When Π ﬁnite propositional theory T Π conjunction Π cid1 K Π K nonempty sets K atoms occur Π 14 The following proposition Corollary 6 15 Proposition 12 For ﬁnite disjunctive logic program Π classical negation set atoms answer set Π iff model T Π cid1 cid1 Proof Proposition 9 According Corollary 4 CIRCA P Z equivalent conjunction A K zAP zK A5 nonempty subsets K P according Proposition 12 T ΠAP Z equivalent conjunction ΠAP Z K ΠAP ZK A6 nonempty sets K atoms σA We theories equivalent propositional logic First easy check ΠAP Z equivalent A propositional logic One check formula A6 K contains atom σAP tautology presence rules σAP We ΠAP Z A set formulas A5 nonempty subsets K P equivalent set formulas A6 nonempty subsets K P It sufﬁcient assumption zAP zK equivalent nonempty subset K P It follows Lemma 2 zAP zK ΠAP ZK equivalent conjunction RP CK clauses C AZ mention atoms Z rules r RP Cs ΠAP Z easy check r K entailed ΠAP Z zAP zK equivalent ΠAP ZK cid1 A6 Proof Proposition 11 Given formula F consistent set K literals FK denote formula obtained formula F replacing occurrences atoms F K cid2 K Given causal theory CT CT K denote theory obtained CT replacing rules F G CT FK G 14 We identify logic program propositional theory identifying J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 183 When CT ﬁnite propositional theory T CT conjunction CT cid1 K CT K nonempty sets K literals signature CT15 Similarly Proposition 12 following proposition holds 14 Chapter 103 Theo rem 3 Proposition 13 Let CT ﬁnite causal theory signature σ An interpretation σ model CT iff model T CT cid1 cid1 Proof Proposition 11 According Corollary 4 CIRCA P Z equivalent conjunction A K zAP zK A7 nonempty subsets K P according Proposition 13 T CT AP Z equivalent conjunction CT AP Z K CT AP ZK A8 nonempty sets K literals σA We theories equivalent propositional logic First CT AP Z equivalent A propositional logic One check formula A8 K contains negative literal l literal l σAP tautology presence rules l l We CT AP Z A set formulas A7 nonempty subsets K P equivalent set formulas A8 nonempty subsets K P It sufﬁcient assumption zAP zK equivalent CT AP ZK nonempty subset K P It follows Lemma 2 zAP zK equivalent conjunction CRP CK clauses C AZ mention atoms Z causal rules r CRP Cs CT AP Z easy check rK entailed CT AP Z zAP zK equivalent CT AP ZK cid1 References 1 V Akman S Erdogan J Lee V Lifschitz H Turner Representing Zoo World Trafﬁc World language Causal Calculator Artiﬁcial Intelligence 153 12 2004 105140 2 A Artikis M Sergot J Pitt An executable speciﬁcation argumentation protocol Proceedings Conference Artiﬁcial Intelligence Law ICAIL ACM Press New York 2003 pp 111 3 A Artikis M Sergot J Pitt Specifying electronic societies Causal Calculator F Giunchiglia J Odell G Weiss Eds Proceedings Workshop AgentOriented Software Engineering III AOSE Lecture Notes Comput Sci vol 2585 Springer Berlin 2003 15 We identify causal theory propositional theory identifying material implication 184 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 4 J Campbell V Lifschitz Reinforcing claim commonsense reasoning Working Notes AAAI Spring Symposium Logical Formalizations Commonsense Reasoning 2003 httpwwwcsutexas eduusersvlpaperssamsps 5 K Clark Negation failure H Gallaire J Minker Eds Logic Data Bases Plenum Press New York 1978 pp 293322 6 P Doherty W Łukaszewicz A Szałas Computing circumscription revisited A reduction algorithm J Au tomat Reasoning 18 3 1997 297336 7 E Erdem V Lifschitz Tight logic programs Theory Practice Logic Programming 3 2003 499518 8 F Fages Consistency Clarks completion existence stable stable models J Methods Logic Computer Science 1 1994 5160 9 M Gelfond V Lifschitz The stable model semantics logic programming Proc Fifth International Conference Symposium Logic Programming 1988 pp 10701080 10 E Giunchiglia J Lee V Lifschitz N McCain H Turner Nonmonotonic causal theories Artiﬁcial Intelli gence 153 12 2004 49104 11 E Giunchiglia Y Lierler M Maratea SATbased answer set programming Proc AAAI04 San Jose CA 2004 pp 6166 12 J Lee V Lifschitz Loop formulas disjunctive logic programs Proc ICLP03 2003 pp 451465 13 J Lee Nondeﬁnite vs deﬁnite causal theories Proc 7th Internat Conference Logic Programming Nonmonotonic Reasoning 2004 pp 141153 14 J Lee Automated reasoning actions PhD thesis University Texas Austin 2005 15 J Lee A modeltheoretic counterpart loop formulas Proc IJCAI05 Edinburgh UK 2005 pp 503 508 16 V Lifschitz A Razborov Why loop formulas ACM Trans Comput Logic 2005 submitted publication 17 V Lifschitz LR Tang H Turner Nested expressions logic programs Ann Math Artiﬁcial Intelli gence 25 1999 369389 18 V Lifschitz N McCain E Remolina A Tacchella Getting airport The oldest planning problem AI J Minker Ed LogicBased Artiﬁcial Intelligence Kluwer Dordrecht 2000 pp 147165 19 V Lifschitz Computing circumscription Proc IJCAI85 Los Angeles CA 1985 pp 121127 20 V Lifschitz Pointwise circumscription M Ginsberg Ed Readings Nonmonotonic Reasoning Mor gan Kaufmann San Mateo CA 1987 pp 179193 21 V Lifschitz Foundations logic programming G Brewka Ed Principles Knowledge Representa tion CSLI Publications 1996 pp 69128 22 V Lifschitz On logic causal explanation Artiﬁcial Intelligence 96 1997 451465 23 V Lifschitz Missionaries cannibals Causal Calculator Principles Knowledge Representa tion Reasoning Proc Seventh Internat Conf 2000 pp 8596 24 F Lin Y Zhao ASSAT Computing answer sets logic program SAT solvers Proc AAAI02 Edmonton AB 2002 pp 112117 25 F Lin Embracing causality specifying indirect effects actions Proc IJCAI95 Montreal Que bec IJCAI Inc 1995 pp 19851993 Distributed Morgan Kaufmann San Mateo CA 26 F Lin On strongest necessary weakest sufﬁcient conditions Artiﬁcial Intelligence 128 12 2001 143159 27 F Lin Compiling causal theories successor state axioms STRIPSlike systems J Artiﬁcial Intelli gence Res 19 2003 279314 28 N McCain H Turner Causal theories action change Proc AAAI97 Providence RI 1997 pp 460465 29 J McCarthy Circumscriptiona form nonmonotonic reasoning Artiﬁcial Intelligence 13 1980 2739 171172 Reproduced 31 30 J McCarthy Applications circumscription formalizing common sense knowledge Artiﬁcial Intelli gence 26 3 1986 89116 Reproduced 31 31 J McCarthy Formalizing Common Sense Papers John McCarthy Ablex Norwood NJ 1990 32 R Reiter On closed world data bases H Gallaire J Minker Eds Logics Data Bases Plenum Press New York 1978 pp 5576 J Lee F Lin Artiﬁcial Intelligence 170 2006 160185 185 33 R Reiter Circumscription implies predicate completion Proc AAAI82 Pittsburg PA 1982 pp 418420 34 R Reiter The frame problem situation calculus A simple solution completeness result goal regression V Lifschitz Ed Artiﬁcial Intelligence Mathematical Theory Compu tation Papers Honor John McCarthy Academic Press San Diego CA 1991 pp 418420