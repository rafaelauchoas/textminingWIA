Artiﬁcial Intelligence 172 2008 13171359 wwwelseviercomlocateartint Redundancy logic III Nonmonotonic reasoning Paolo Liberatore Università di Roma La Sapienza Dipartimento di Informatica e Sistemistica Via Ariosto 25 I00185 Roma Italy Received 14 October 2005 received revised form 15 February 2008 accepted 18 February 2008 Available online 4 March 2008 Abstract Results redundancy certain versions circumscription default logic presented In particular propositional circumscription variables minimized skeptical default logics considered This restricted version circum scription shown unitary redundancy property CNF formula redundant equivalent proper subsets contains redundant clause equivalent minus clause default logic property general We complexity checking redundancy considered formalisms 2008 Elsevier BV All rights reserved Keywords Logical redundancy Nonmonotonic reasoning Computational complexity Circumscription Default logic 1 Introduction In paper study problem circumscriptive 36 default 44 theory redundant contains unnecessary parts Formally theory redundant equivalent proper subsets redundant theory theory semantically changed removal The problem redundancy settings extensively analyzed literature The complexity establishing CNF 2CNF Horn formula redundant studied author present article 2630 analyzed problems related irredundant equivalent subsets formulae These problems considered settings classical propositional logic The related problem minimizing propositional theory particular Horn form analyzed authors 12223343752 Minimization signiﬁcantly different redundancy formula minimal shorter formula equivalent Minimal formulae irredundant way formula irredundant removed completely different formula shorter equivalent For example b b irredundant clauses removed maintaining equivalence original set minimal equivalent shorter set There motivations studying minimization redundancy Minimization produces shortest possible formula equivalent given obvious advantages making formula irredundant produce formula short minimal ones additional advantage changing structure original formula remove parts Email address paololiberatoreorg 00043702 matter 2008 Elsevier BV All rights reserved doi101016jartint200802003 1318 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 A related problem studying properties formulae known irredundant Büning Zhao 7 studied problems equivalence extensionequivalence irredundant formulae Also related problem minimal unsatisﬁability checking unsatisﬁable formula satisﬁable soon clause removed 51443 Other authors studied redundancy settings different article Ginsberg 18 Schmolze Snyder 48 studied redundancy production rules Gottlob Fermüller 17 studied redundancy literal clause ﬁrstorder logic The settings considered article circumscription default logic stud ied 24610132931363844 forms nonmonotonic reasoning opposite classical logic monotonic A logic monotonic consequences set formulae monotonically nondecrease set In words formulae entailed set entailed superset Circumscription default logic property nonmonotonic For circumscription assume variables minimized rationale restriction ﬁxed varying variables efﬁciently eliminated 89 shows minimized variables core circumscription formalism Other authors considered circumscription restriction 62540 This shows restriction circumscription inter est results redundancy case necessarily extend general case discussed conclusions For default logic semantics choose credulous skeptical approach In article consider skeptical approach original semantics 44 similar ones justiﬁed 33 constrained 1146 rational 39 We consider case assume semantics theory set extensions combining extensions skeptical manner The results obtained case hold credulous approach original semantics stated skeptical approach assumed The properties redundancy credulous approach semantics left open Since redundancy deﬁned terms equivalence equivalence formula proper subset affected kind equivalence In particular equivalence deﬁned ways default logic equality extensions equality consequences This leads different deﬁnitions redundancy default logic Both circumscription default logic differ classical propositional logic This difference affects redundancy If CNF formula contains redundant clause redundant equivalent proper subsets converse true propositional logic logics In particular case formula equivalent proper subsets clauses redundant We situation default logic b equivalent b means b redundant contain single redundant element The property formula redundant contains redundant clause called unitary redundancy Classical logic property logics like default logic We different sufﬁcient conditions property hold logic involves monotonicity involves cumulativity 35 A property entails unitary redundancy monotonic redundancy cid2cid4 cid2cid4cid4 cid2 cid2cid4 cid2 equivalent cid2cid4cid4 cid2 equivalent This property sufﬁcient conditions actually proved unitary redundancy follows Regarding speciﬁc nonmonotonic formalisms considered monotonic redundancy fore unitary redundancy holds circumscription redundancy background theory default logic defaults categorical prerequisitefree normal In general case default logic unitary redundancy property monotonic redundancy property We consid ered redundancy defaults default theory In case monotonic unitary redundancy hold justiﬁed default logic considered semantics Regarding complexity results checking clause redundant formula formula redundant according circumscriptive inference cid2p 2 complete problems For default logic results follows Checking redundancy based extensions clause background theory cid2p 2 complete Reiter justiﬁed default logics cid2p 3 complete constrained rational default logic checking redundancy based skeptical consequences cid2p 3 complete semantics Checking redundancy background theory cid3p 4 complete respectively equivalence based extensions skeptical consequences The proofs results ﬁrst showing problems 3 complete cid3p P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1319 2 complete cid2p cid2p 3 complete respectively showing complexity results raised level polynomial hierarchy This technique allows proof hardness class cid3p 4 involving complicated QBFs W XY ZF Regarding credulous approach prove equality extensions equality credulous consequences coincide Reiter default logic considered semantics Regarding redundancy defaults considered Reiter default logic equivalence based equality extensions proved redundancy default cid2p 2 complete redundancy set defaults cid3p 3 complete case For sake clarity long proofs technical parts appendix 2 Preliminaries If cid2 cid4 sets cid2cid4 denotes set elements cid2 cid4 This operator called set subtraction elements cid4 subtracted cid2 An alternative deﬁnition operator cid2cid4 cid2 cid4 cid4 complement cid4 All formulae considered paper propositional ﬁnite Boolean formulae ﬁnite alphabet We typically use formulae CNF sets clauses refer sets clauses simply formulae Varcid2 set variables mentioned formula cid2 Cncid2 set consequences formulae entailed If S possibly inﬁnite set formulae built variables ﬁnite alphabet S denotes formula models exactly models satisfy formulae S We use notation l γ l literal γ clause indicate l literal clause γ In places use notation γ γ clause denote formula l l γ Note γ clause γ γ formulae sets clauses A clause positive contains positive literals A propositional interpretation assignment set propositional variables set true false We denote model set variables assigns true We use notation Modcid2 denote set models formula cid2 We use models formulae cid2 ω cid2 formula ω model In context formula expected model ω represents formula x x ω x x ω If cid2 formula ωX interpretation set variables X denote cid2ωX formula obtained replacing variable X value assigned ωX cid2 Since model set positive literals M M cid4 holds M assigns false variables M cid4 assigns false All formulae considered article assumed built ﬁnite alphabet variables Sometimes formulae built formulae addition new variables These additions implicitly assume existence countable set new variables new variables symbols appearing original formulae 3 Arbitrary logics In section results redundancy arbitrary logic To aim consider logic characterized entailment relation L equivalence relation L In basic case relations set sets clauses given alphabet write cid2 L cid2cid4 cid2 cid2cid4 sets clauses However analyze question redundancy defaults depends sets defaults D Dcid4 equivalent D L Dcid4 In order obtain truly general results section assumptions basic elements sets assume L L relations sets elements given set article set set clauses default rules given alphabet results section hold arbitrary set We implicitly assume property relations relationship shown entailment equivalence relations consider properties generally expect example deﬁnition equivalence instrumental study default logic transitive Formally mean form logical equivalence fact equivalence relation While term equivalence considered misleading expressive relation Some properties entailment equivalence relations deﬁned follows 1320 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Deﬁnition 1 The following properties deﬁned relations L L cid2 cid2cid4 cid2cid4cid4 sets cid2 L cid2cid4 cid2cid4 L cid2 cid2 L cid2cid4 cid2cid4 L cid2cid4cid4 cid2 L cid2cid4cid4 Reﬂexivity cid2 L cid2 cid2 L cid2 Symmetry Transitivity Right weakening Right conjunction cid2 L cid2cid4 cid2 cid2cid4cid4 cid2cid4cid4 L cid2cid4 Monotonicity cid2 L cid2cid4 cid2 L cid2 cid2cid4 Cumulativity cid2 L cid2cid4 cid2 L cid2cid4 Halfentailment Fullentailment cid2 L cid2cid4 cid2 L cid2cid4 cid2cid4 L cid2 cid2 L cid2cid4 cid2cid4cid4 cid2cid4 cid2 L cid2cid4cid4 cid2 L cid2cid4 cid2 L cid2cid4cid4 cid2 L cid2cid4 cid2cid4cid4 Reﬂexivity symmetry transitivity deﬁned usually binary relations Some ditions deﬁned differently standard way use propositional connectives entailment This intentional lack assumptions elements sets cid2 cid2cid4 necessar ily sets clauses propositional formulae write cid2cid4 cid2cid4cid4 propositional entailment As result write example right weakening usual form cid2 L cid2cid4 cid2cid4 cid2cid4cid4 cid2 L cid2cid4cid4 The deﬁnitions based set operations scenarios propositional connectives entailment deﬁned redundancy defaults D Dcid4 sets defaults D Dcid4 undeﬁned propositional entailment The deﬁnitions equivalent classical ones sets clauses propositional formulae additional assumption L L behave propositionally equivalent formulae cid2 cid2cid4 propositionally equivalent cid2cid4cid4 holds cid2 L cid2cid4cid4 cid2cid4 L cid2cid4cid4 holds In case deﬁnitions coincide classical ones taking sets deductively closed All entailment equivalence relations considered article reﬂexive equivalence relations symmetric However deﬁnition equivalence study default logic shown transitive forms entailment shown enjoy right weakening property Equivalence deﬁned according entailment property entailment relation cases entailment holds deﬁnition An element redundant set removal leads equivalent set Deﬁnition 2 Redundancy element An element γ set cid2 redundant according L cid2 L cid2γ A set redundant equivalent proper subsets Deﬁnition 3 Redundancy set A set cid2 redundant according L exists cid2cid4 cid2 cid2 L cid2cid4 In propositional logic forms redundancy related set clauses redundant contains redundant clause The holds circumscription logics For example hold redundancy clauses background theory default logic Deﬁnition 4 Unitary redundancy Equivalence L unitary redundancy property redundancy set presence redundant element More formally L property cid2 L cid2cid4 cid2cid4 cid2 imply exists γ cid2 cid2 L cid2γ One assume γ cid2cid2cid4 modifying deﬁnition way change results article A property L implies unitary redundancy following limited form monotonicity Deﬁnition 5 Monotonic redundancy Equivalence L monotonic redundancy property sets cid2 cid2cid4 cid2cid4cid4 cid2 L cid2cid4 cid2cid4 cid2cid4cid4 cid2 holds cid2cid4cid4 L cid2 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1321 Monotonic redundancy implies set contained contains equivalent equivalent In deﬁnition cid2cid4cid4 L cid2 general replaced cid2cid4cid4 l cid2cid4 L transitive Monotonic redundancy implies unitary redundancy cid2 equivalent cid2cid4 cid2cid4 cid2 arbitrary γ cid2cid2cid4 holds cid2γ equivalent cid2 Whenever possible monotonic redundancy proved Since counterexamples unitary redundancy property stronger monotonic redundancy ones unitary redun dancy article giving counterexamples While monotonic redundancy entails unitary redundancy converse hold Counterexample 1 There exists logic L reﬂexive L symmetric transitive related fullentailment unitary redundance holds monotonic redundancy The following theorems provide sufﬁcient conditions monotonic redundancy unitary redundancy Theorem 1 If L reﬂexive enjoys right weakening L transitive related fullentailment L monotonic redundancy property Proof Let assume cid2 L cid2cid4 cid2cid4 cid2cid4cid4 cid2 prove cid2 L cid2cid4cid4 Since cid2 L cid2cid4 fullentailment cid2cid4 L cid2 Since cid2cid4cid4 cid2 right weakening holds cid2cid4 L cid2cid4cid4 Since L reﬂexive holds cid2cid4cid4 L cid2cid4cid4 By right weakening cid2cid4cid4 L cid2cid4 Since previously proved cid2cid4 L cid2cid4cid4 fullentailment follows cid2cid4 L cid2cid4cid4 Since cid2 L cid2cid4 symmetry consequence fullentailment transitivity L follows cid2 L cid2cid4cid4 cid2 Theorem 2 If L reﬂexive monotonic related L entailment L monotonic redundancy property Proof Let assume cid2 L cid2cid4 cid2cid4 cid2cid4cid4 cid2 By entailment ﬁrst condition implies cid2cid4 L cid2 Since cid2cid4 cid2cid4cid4 monotonicity cid2cid4cid4 L cid2 By reﬂexivity L cid2cid4cid4 L cid2cid4cid4 cid2cid4cid4 cid2 monotonicity cid2 L cid2cid4cid4 Since proved cid2cid4cid4 L cid2 holds use entailment conclude cid2cid4cid4 L cid2 cid2 Theorem 3 If L enjoys right weakening L symmetric transitive related cumulativity halfentailment L monotonic redundancy property Proof Assume cid2 L cid2cid4 cid2cid4 cid2cid4cid4 cid2 By symmetry halfentailment cid2cid4 L cid2 By right weakening cid2cid4 L cid2cid4cid4cid2cid4 By cumulativity cid2cid4 L cid2cid4cid4cid2cid4 cid2cid4cid4 cid2cid4 L cid2cid4cid4 By transitivity symmetry L cid2 L cid2cid4cid4 cid2 Another general result redundancy element rest set entailing element provided logic properties The existence correspondence suggested referees Theorem 4 If L L halfentailment cumulativity properties L right weakening property element γ redundant set cid2 cid2γ L γ Proof Let assume cid2γ L cid2 γ cid2 By halfentailment cid2γ L cid2 By right weakening cid2γ L γ To prove opposite direction assume cid2γ L γ By cumulativity holds cid2γ L cid2γ γ cid2γ L cid2 cid2 The equivalence proved different conditions 1322 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Theorem 5 If L satisﬁes reﬂexivity right weakening right conjunction related L entailment element γ redundant set cid2 cid2γ L γ Proof If cid2γ L cid2 cid2γ L cid2 entailment cid2γ L γ right weakening If cid2γ L γ apply right conjunction cid2γ L cid2γ holds reﬂexivity obtain cid2γ L cid2 Since cid2 L cid2γ holds reﬂexivity right weakening entailment cid2γ L cid2 cid2 While cid2γ L γ alternative deﬁnition redundancy γ equivalence cid2γ L cid2 hold logic shown following counterexample Counterexample 2 There exists relations L L L reﬂexive L reﬂexive symmetric L L related entailment exists cid2 γ cid2 cid2γ L γ cid2 cid14L cid2γ A natural question deﬁnition redundancy natural logics differ If redundancy taken literal meaning unnecessary clause redundant taken set removal changing meaning set Formally cid2γ L cid2 4 Circumscription Circumscriptive inference based minimal models theory models set variables assigned true minimal wrt set inclusion Formally deﬁne set minimal models follows Deﬁnition 6 The set minimal models propositional formula cid2 denoted CIRCcid2 deﬁned follows CIRCcid2 min cid3 cid2 Modcid2 We deﬁne CIRCcid2 set models instead formula common literature Circumscriptive entailment deﬁned like classical entailment minimal models taken account Deﬁnition 7 The circumscriptive inference M deﬁned formulae cid2 cid4 holds cid2 M cid4 cid4 satisﬁed minimal models cid2 cid2 M cid4 CIRCcid2 Modcid4 We assume alphabet ﬁnite This deﬁnition actually restriction original circumscription 36 ﬁxed varying variables We use version captures core circumscription minimal models shown translations efﬁciently remove ﬁxed 9 varying 8 variables The importance subcase shown attemption given literature 62540 We remark interesting subcase results redundancy given article necessarily extend general case elimination ﬁxed varying predicates modify formula Equivalence propositional logic deﬁned equivalent ways equality models equality sets entailed formulae These deﬁnitions equivalence coincide circumscriptive inference We deﬁne M follows cid2 M cid4 CIRCcid2 CIRCcid4 The theorem gives properties circumscriptive inference equivalence Theorem 6 Relation M properties reﬂexivity right weakening relation M reﬂexive symmetric transitive relations related cumulativity fullentailment Proof Reﬂexivity symmetry transitivity right weakening obvious deﬁnition Cumulativity circum scription wellknown 3547 equivalence deﬁned equality consequences M deﬁnition M M P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1323 We prove M M related fullentailment If cid2 M cid2cid4 minimal models cid2 cid2cid4 Therefore minimal models cid2 models cid2cid4 means cid2 M cid2cid4 For direction let assume cid2 M cid2cid4 cid2cid4 M cid2 prove cid2 M cid2cid4 To contrary assume cid2 minimal model M minimal model cid2cid4 Since M minimal model cid2 cid2 M cid2cid4 follows M model cid2cid4 Since model minimal model exists M cid4 M minimal model cid2cid4 However cid2cid4 M cid2 model M cid4 model cid2 This contradicts assumption M minimal model cid2 In similar way assuming cid2cid4 minimal model minimal model cid2 leads contradiction cid2 Redundancy clause deﬁned follows Deﬁnition 8 A clause γ cid2 CIRCredundant formula cid2 cid2γ M cid2 By Theorem 4 Theorem 6 redundancy clause γ set cid2 deﬁned cid2γ M γ A formula redundant clauses removed changing semantics Deﬁnition 9 A formula CIRCredundant M equivalent proper subsets A formula redundant clauses removed preserving equivalence Monotonic redundancy easily proved hold given properties M M Theorem 7 Circumscription monotonic redundancy property Proof Theorem 6 proves M M properties necessary apply Theorem 1 cid2 As result circumscription unitary redundancy property Corollary 1 Circumscription unitary redundancy property 41 Redundant clauses The following lemma characterizes clauses redundant formula Lemma 1 The following conditions equivalent formula cid2 clause γ cid2 1 γ CIRCredundant cid2 2 M Modcid2γ γ exists M cid4 Modcid2 M cid4 M 3 M Modcid2γ γ exists M cid4 Modcid2γ M cid4 M Proof The models cid2γ models cid2 exactly models cid2γ γ The formulae cid2 cid2γ M equivalent models minimal models contain models cid2 In words γ redundant model cid2γ γ properly contains model cid2 The fact check M cid4 Modcid2γ instead M cid4 Modcid2 follows fact Modcid2γ composed models cid2 models cid2γ γ Consider model M minimal model cid2γ γ The condition M cid4 M implies M cid4 model cid2γ γ model cid2 By transitivity condition exists M cid4 Modcid2 M cid4 M holds models cid2γ γ cid2 Computationally checking second condition lemma checking 2 For positive M exists M cid4 simple condition met As result problem cid2p clauses checking CIRCredundancy easier amounts checking classical redundancy 1324 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Lemma 2 A positive clause CIRCredundant formula classically redundant formula Proof Theorem 4 Theorem 6 prove γ CIRCredundant cid2 cid2γ M γ Bossu Siegel 6 Property 166 proved positive clause subimplied formula classically implied This implies statement lemma subimplication coincides version circumscription propositional case essentially proved Bossu Siegel 6 Property 163 considering models discriminant propositional case cid2 Intuitively positive clause excludes models assign false variables clause Therefore positive clause classically irredundant models excluded CIRCirredundant According argument look like negative clauses CIRCredundant exclude models positive literals models minimal This case model positive literals minimal model formula smaller wrt set inclusion set variables assigned true Consider example following formula cid2 x1 x2 x1 x3 x2 x3 The clause x1 x2 negative CIRCirredundant Indeed cid2x1 x2 x1 x3 x2 x3 formula x1 x2 x3 minimal models The ﬁrst model cid2 clause x1 x2 Therefore x1 x2 CIRCirredundant cid2 Intuitively negative clause excludes possibility setting variables true minimal inference tries set variables false Therefore removing clause generate model variables set true x1 x2 example minimal values variables x3 example Lemma 2 extended clauses containing negative literals addition new clauses new variables Lemma 3 A clause γ classically redundant formula cid2 CIRCredundant cid2 x xcid4 x γ variable xcid4 new variable associated variable x x γ Proof In propositional logic γ redundant cid2 cid2γ entails γ If γ redundant cid2 cid2γ γ cid2 x xcid4 x γ γ γ Since γ redundant cid2 x xcid4 x γ CIRCredundant Let assume γ irredundant cid2 cid2γ γ models Let M model Since model satisﬁes γ assigns false variable x x γ true variable x x γ Extending M assign false variables xcid4 model satisﬁes cid2 x xcid4 x γ γ γ We M contain model cid2x xcid4 x γ Lemma 1 implies γ redundant cid2 x xcid4 x γ This extended model M assigns false x γ false xcid4 x γ On hand γ x xcid4 x γ entails clause xcid4 x γ proved example iteratively resolving literals x x γ As result model cid2 x xcid4 x γ model assign false x γ xcid4 x γ Since instead M follows model cid2 x xcid4 x γ contained M cid2 x x γ cid4 cid4 Note clauses x xcid4 necessarily CIRCirredundant considered formula On hand Lemma 2 applied CIRCredundant classically redundant 42 Complexity CIRCredundancy We ﬁrst complexity checking redundancy single clause Theorem 8 Checking CIRCredundancy clause formula cid2p assumed satisﬁable 2 complete remains hard formula In order characterize complexity problem checking CIRCredundancy formula use fact formula CIRCredundant contains CIRCredundant clause Corollary 1 In particular P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1325 Theorem 8 shows problem checking CIRCredundancy clause γ cid2 cid2p 2 hard In order result proof hardness problem CIRCredundancy formulae need modify formula cid2 way clauses γ CIRCirredundant This corresponding Lemma 4 article redundancy propositional CNF formulae 26 useful allows localize problems redundancy In particular consistent formula arbitrary subset change formula way clauses subset irredundant Deﬁnition 10 For formula cid2 γ1 γm variables X x1 xn cid2cid4 cid2 formula I cid2 cid2cid4 deﬁned follows b s t new variables C ci 1 cid2 cid2 m D di 1 cid2 cid2 m Xcid4 xcid4 1 cid2 cid2 n sets new variables cid4 I cid2 cid2 s t s t b s t ci di 1 cid2 cid2 m s ci 1 cid2 cid2 m t ci γi 1 cid2 cid2 m γi cid2cid2 cid4 s t xi x cid4 s t γi 1 cid2 cid2 m γi cid2 1 cid2 cid2 n cid4 The following lemma shows clauses I cid2 cid2cid4 originate clauses cid2cid4 irredundant clauses originate clauses cid2cid4 maintain redundancy status Lemma 4 For consistent formula cid2 γ1 γm cid2cid4 cid2 CIRCredundant clauses I cid2 cid2cid4 clauses s t γi γi cid2cid4 CIRCredundant cid2 This lemma shows way clauses cid2cid2cid4 necessary contained equivalent subset cid2 This theorem allows characterize complexity formula CIRCredundancy Theorem 9 The problem verifying CIRCredundancy cid2p 2 complete Proof By Corollary 1 cid2 redundant contains redundant clause Therefore solve linear number problems cid2p 2 Since problems solved parallel problem cid2p 2 Hardness proved reduction problem CIRCredundancy single clause By Lemma 4 clause γ CIRCredundant consistent formula cid2 s t γ CIRCredundant I cid2 γ clauses I cid2 γ irredundant Since problem checking redundancy clause formula cid2p 2 hard cid2 2 hard formula satisﬁable Theorem 8 problem formula redundancy cid2p 5 Default logic A default theory pair cid15D W cid16 W formula D set default rules rule form α β γ The formulae α β γ called precondition justiﬁcation consequence default respectively In paper assume W ﬁnite CNF formula ﬁnite set clauses set variables defaults ﬁnite A variant consider set formulae β1 βm place single formula β Given default d αβ γ parts denoted precd α justd β consd γ A default d normal justd consd categorical precd true Defaults normal possibly categorical considered semantical properties ability encode natural domains 441 In particular circumscription variables minimized easily simulated defaults form We use operational semantics default logics 231516 based sequences defaults duplicates If cid2 sequence denote cid2d sequence defaults preceding d cid2 cid2 d x x 1326 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 sequence obtained adding d end cid2 We extend notation defaults sequences preccid2 conjunction preconditions defaults cid2 justcid2 conjunction justiﬁcations conscid2 conjunction consequences Propositional entailment denoted cid17 indicates combined consistency indicates inconsistency For example Acid17B means A B consistent AB means A B inconsistent Default logic deﬁned terms selected processes sequences defaults considered applicable considered semantics 2 These deﬁned combinations conditions Deﬁnition 11 Process A sequence defaults cid2 containing duplicate process W conscid2d precd holds d cid2 Deﬁnition 12 Local global applicability A default d locally applicable sequence defaults cid2 conscid2 W precd conscid2 W cid17justd Global applicability requires conscid2 W cid17justcid2 d The default logic semantics considered article deﬁned concept process In particular semantics deﬁnes processes maximal sequences defaults applied These processes called selected deﬁned follows Deﬁnition 13 Selected process Processes selected Reiter 44 process cid2 selected conscid2 W cid17justd d cid2 default d cid4 cid2 locally applica ble cid2 Justiﬁed 33 process cid2 selected maximal process conscid2 W cid17justd d cid2 Constrained 1146 process cid2 selected maximal process conscid2 W cid17justcid2 Rational 39 process cid2 selected conscid2 W cid17justcid2 default d cid4 cid2 globally applicable cid2 The conditions process selected broken parts success consistency condition closure nonextendibility process For example constrained default logic condition success conscid2 W cid17justcid2 condition closure cid2 d successful process d cid2 For rationale deﬁnitions refer original articles introduced 113339 4446 compared 1029 surveyed 242 Essentially Reiter justiﬁed default logics require justiﬁcation default consistent background theory consequences defaults process Con strained rational default logics instead require union justiﬁcations consistent background theory consequences defaults process This difference gives axis semantics differ The axis partially built process allowed fail 29 condition addition default process contradicts justiﬁcation previously applied default Reiter rational default logic allow process fail extension generated process Justiﬁed constrained default logic disallow failing default added process result failure d2 ac In considered semantics d2 d3 applied derived d1 applied Since conclusion default negates justiﬁcation d2 follow d3 selected process vice versa Of remaining processes d1 d1 d2 d1 d3 semantics behave follows Reiter ﬁrst unclosed second fails selected justiﬁed ﬁrst unclosed second unsuccessful selected constrained ﬁrst process selected successful rational ﬁrst unclosed second fails unsuccessful As example consider default theory cid15d1 d2 d3 cid16 d1 ab bc d3 abc c Remarkably deﬁnitions selected processes mention background theory W conjunction conscid2 W occurs subformulae form W conscid2 The conditions true cid2 process The selected processes default theory determine extensions theory entailment turn deﬁned P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1327 Deﬁnition 14 Extension An extension default theory cid15D W cid16 set CnW conscid2 cid2 selected process theory We denote ExtDW set ﬁnite formulae equivalent extension cid15D W cid16 We remind assumption considered alphabet ﬁnite Including formulae equivalent extensions set allows write E ExtDW denote equivalence E extension cid15D W cid16 In skeptical semantics called cautious default theory entails formula extensions Deﬁnition 15 Skeptical entailment A default theory cid15D W cid16 entails formula W cid4 E W cid4 E ExtDW This condition equivalent ExtDW W cid4 Preliminaries section deﬁnition notation S S inﬁnite set formulae result set consequences default theory equivalent ExtDW Entailment W cid4 theory cid15D W cid16 denoted W D W cid4 This notation emphasizes set defaults D deﬁnes nonmonotonic inference relation D 35 Equivalence default theories deﬁned pairwise propositional equivalence extensions equality consequences In following section provide formal deﬁnitions entailment equivalence default logic Some semantics default logic assign extension theories In paper try derive existence results counterexamples proofs hardness theories having extensions 51 Equivalence default logics The deﬁnition redundancy based equivalence particular equivalence formula proper subsets As explained previous section forms equivalence natural default logic based extensions consequences Remarkably deﬁnitions equivalence related D entailment We deﬁne new form equivalence derived D entailment new forms entailment derived aforementioned deﬁnitions equivalence entailment This leads deﬁnitions entailment equivalence Of deﬁnition entailment equivalence actual deﬁnitions technical tools The ﬁrst form equivalence derived skeptical entailment Deﬁnition 16 Entailment mutual equivalence For given set defaults D formula W entails formula W cid4 denoted W D W cid4 ExtDW W cid4 These formulae mutually equivalent denoted W m D W cid4 W D W cid4 W cid4 D W In classical logic deﬁnition equivalence W W cid4 having set consequences set models In default logic case We deﬁne equivalence based set consequences follows associated deﬁnition entailment deﬁned convenience Deﬁnition 17 Consequenceentailment consequenceequivalence For given set defaults D formula W consequenceentails formula W cid4 denoted W c D W cid4 ExtDW ExtDW cid4 These formulae consequenceequivalent denoted W c D W cid4 ExtDW ExtDW cid4 A stringent condition equivalence defaults theories having extensions Again associated entailment relation deﬁned technical convenience The rationale deﬁnition extensions default theory possible alternative scenarios expressed default theory way faithful representation theory expresses Other authors considered default theories equivalent extensions 102124 Deﬁnition 18 Faithful entailment faithful equivalence For given set defaults D formula W faithfully entails formula W cid4 denoted W e D W cid4 ExtDW ExtDW cid4 These formulae faithfully equivalent denoted W e D W cid4 ExtDW ExtDW cid4 1328 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 In later section form equivalence shown consequenceequivalence credulous consequences considered Reiter semantics It easy W e D W cid4 implies W c amples forms entailment section D W cid4 turn implies W D W cid4 Other results counterex Each equivalence relations related corresponding entailment relation entailment formulae equivalent formula entails Since redundancy deﬁned terms equiv alence especially interested natural equivalence relations c D equality consequences equality extensions Mutual equivalence deﬁned technical reasons D e Redundancy default logic deﬁned follows Deﬁnition 19 Redundancy clause For given set defaults D clause γ redundant formula W according equivalence x D W x D W γ Deﬁnition 20 Redundancy formula For given set defaults D formula W redundant according D W cid4 equivalence x D exists W cid4 W W x In cases comparing equivalence formula subsets In Appendix C study equivalence W cid4 W W cid4 W Equivalence depends semantics Reiter justiﬁed constrained rational try derive results hold semantics The results summarized follows Counterexample 9 There exists set defaults D formulae W W cid4 W cid4 W W cid4 m W cid4 cid14c D W Reiter justiﬁed constrained rational default logic D W Counterexample 10 There exists set defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 cid14e D W Reiter justiﬁed default logic D W Counterexample 11 There exists set defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 cid14e D W constrained rational default logic D W Trivial W cid4 e D W W cid4 c D W Lemma 7 For set defaults D formulae W W cid4 W cid4 c constrained rational default logic D W W cid4 D W Reiter justiﬁed Lemma 8 For set defaults D formulae W W cid4 W cid4 W W cid4 D W W cid4 e Reiter justiﬁed constrained rational default logic D W Corollary 4 For set defaults D formulae W W cid4 W cid4 W Reiter justiﬁed constrained rational default logic following holds W cid4 D W W cid4 c D W W cid4 e D W Theorem 16 For set normal defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 e D W constrained default logic D W implies Theorem 17 If D set normal defaults W W cid4 formulae W cid4 W W cid4 c holds W cid4 e D W holds Reiter justiﬁed constrained rational default logic D W Lemma 9 If D set categorical defaults W W cid4 formulae W cid4 W W cid4 D W W e D W cid4 constrained default logic P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1329 Corollary 5 If D set normal categorical defaults W W cid4 formulae W cid4 W conditions W cid4 m D W equivalent Reiter justiﬁed constrained rational default logic D W W cid4 e D W W cid4 c 52 Redundancy clauses vs theories In section default logic unitary redundancy property general defaults categorical normal Counterexample 3 There exists set normal defaults D formulae W W cid4 W cid4 W W equivalent W cid4 W γ equivalent W γ W mutual faithful consequence equivalence Reiter justiﬁed constrained rational default logic Proof The defaults D background theory W follows W b cid4 W D d1 d2 d3 d1 b b d2 b b b d3 We cid15D W cid16 cid15D cid16 extensions proving equivalence W W cid4 according deﬁnitions We ExtDa ExtDb entail W proving nonequivalence W deﬁnitions The theory cid15D W cid16 single extension Cna b Indeed d1 d2 applicable justiﬁ cations inconsistent W The default applicable consequence b theory The theory cid15D cid16 single extension d3 applicable default leading addition b makes d1 d2 inapplicable Therefore Cna b extension theory Since cid15D W cid16 cid15D cid16 extensions equivalent according deﬁnitions equivalence The theory cid15D acid16 extension b results application d3 blocks application d1 d2 However new extension d1 applicable generates b blocks application d3 This produces extension Cna b Therefore ExtDa equivalent entail W As result equivalent W deﬁnitions equivalence In way cid15D bcid16 extensions Cna b Cna b ExtDb equivalent b entail W cid2 Since unitary redundancy hold monotonic redundancy hold This means precon ditions Theorems 1 2 3 satisﬁed The precondition second theorem satisﬁed considered semantics default logic monotonic cumulative The following theorems preconditions theorem satisﬁed Counterexample 4 Mutual equivalence transitive Reiter justiﬁed constrained rational default logic normal defaults 1330 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Proof We set defaults D m D follows cid5 D cid6 b b b b m D b cid14m D b This set defaults The extensions follows b single extension Cna b second default applicable consequence prevents application ﬁrst extensions Cna b Cna b defaults applicable consequence prevent application Since Cna b entails b entailed considered extensions m D b cid2 b On hand ExtDa entail b As result cid14m D m D Remarkably consequenceequivalence faithful equivalence instead transitive deﬁnition The property hold right weakening corresponding entailment relations Counterexample 5 Consequenceentailment faithful entailment right weakening property Reiter justiﬁed constrained rational default logic normal defaults Proof This shown D D W W c D W On hand extension W cid4 Cna Since set extensions W contained set extensions W cid4 ﬁrst formula faithfully entail second W cid14e D W cid4 For reason consequenceentailment hold cid2 formulae W W cid4 Clearly W e Interestingly counterexample involves theory categorical normal Theorem 1 consequenceentailment faithful entailment meet precondition However monotonic redun dancy proved categorical normal defaults Theorem 10 Mutual equivalence faithful equivalence consequence equivalence monotonic redundancy property defaults categorical normal Reiter justiﬁed constrained rational default logic Proof If defaults categorical normal forms equivalence coincide Since faithful equivalence transitive mutual equivalence transitive case Since D reﬂexive right weakening related mutual equivalence fullentailment Theorem 1 applies mutual equivalence monotonic redun dancy property case As result forms equivalence property defaults categorical normal cid2 Incidentally Corollary 5 states forms equivalence coincide categorical normal faults applies corresponding forms entailment This explains faithful entailment consequenceentailment right weakening property entailment case normal categorical defaults 53 Making clauses irredundant Modifying formula order parts irredundant proved useful classical circumscriptive logics We similar result default logic Such results generally useful build theory having properties redundancy For example reduce problem redundancy clause problem redundancy theory checking γ redundant cid2 checking redundancy γ modiﬁed version cid2 clauses γ irredundant Deﬁnition 21 The Mirredundant version default theory cid15D W cid16 M W γ1 γm following default theory d c1 cm new variables cid4 cid3 cid2 cid15D W cid16 M I cid15D W cid4cid16 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1331 W D cid5 cid4 ci γi 1 cid2 cid2 m cid4 D1 D2 D3 d d c1 cm c1 cm d cid7 cid7 c1 cm α β cid7 cid7 γ cid5 D1 D2 α β γ cid6 cid6 D cid5 D3 ci γi ci d cj 1 cid2 j cid2 m j cid14 ci d cj 1 cid2 j cid2 m j cid14 cid7 cid7 cid7 cid71 cid2 cid2 m γj M cid6 The clauses M irredundant transformation redundancy clauses change Theorem 11 For default theory cid15D W cid16 formulae M W cid4cid4 M W cid15Dcid4 W cid4cid16 I cid15D W cid16 M W cid4cid4 W W cid4 e D W W cid4cid4 contains clauses ci γi γi M This holds Reiter justiﬁed constrained rational default logic consequenceequivalence Dcid4 W cid4cid4 holds γi ci γi W cid4cid4 e Proof The ﬁrst default D1 applied W cid4 leading d makes defaults D3 inapplica ble If W inconsistent default applied Otherwise applicable default second D1 generates c1 cm This formula makes W cid4 equivalent W defaults D2 equivalent D As result I cid15D W cid16 M extension CnE d c1 cm extension E cid15D W cid16 W consistent extension Cnd A subset W cid4 extension cor responding subset W extension modulo new variables This means clause irredundant cid15D W cid16 corresponding clause cid15Dcid4 W cid4cid16 irredundant We prove clauses ci γi γi M irredundant This proved showing clause M corresponding default D3 applied clause background theory effect produce extension generated Every default D3 applicable W ith default applicable precondition ci γi background theory justiﬁcation consistent background theory W cid4 d ci cj equivalent γi d ci cj The application default makes defaults Dcid4 inapplicable This means ith default D3 applicable subset W cid4 contain ci γi clauses W entail clause contains different ci application default blocks Since extension generated applying default inconsistent extensions theory subset W cid4 containing ci γi necessarily different set extensions consequences W cid4 Finally clause γi redundant cid15D W cid16 occur M corresponding clause ci γi affect extensions obtained applying defaults D3 Its removal affect extensions obtained applying defaults D1 D2 application defaults essentially effect application defaults D original theory proves ci γi redundant cid2 54 Complexity redundancy default logics In section summarize results complexity checking redundancy clause background theory default theory checking redundancy background theory The following results redundancy faithful equivalence Theorem 18 Checking W cid4 e cid2p 2 Reiter justiﬁed default logic cid2p D W set defaults D formulae W W cid4 W cid4 W 3 constrained rational default logic 1332 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Theorem 19 Checking W cid4 e 2 hard W W cid4 variable W consistent defaults categorical normal Reiter justiﬁed constrained rational default logic D W D set defaults W W cid4 formulae cid2p Theorem 20 Checking W e constrained rational default logic W W cid4 variable D W cid4 D set defaults W W cid4 formulae cid2p 3 hard As corollary conclude problems redundancy clause redundancy 3 complete 2 complete Reiter justiﬁed default logic cid2p ground theory faithful equivalence cid2p constrained rational default logic We consider problem redundancy clauses consequenceequivalence The difference kinds equivalence sets extensions different disjunctions The necessity calculating disjunction extensions intuitively explains checking redundancy consequenceequivalence harder faithful equivalence Theorem 21 Checking W cid4 c W cid4 W Reiter justiﬁed constrained rational default logic D W D set defaults W W cid4 formulae cid2p 3 Theorem 22 The problem checking W cid4 c cid2p 3 hard W W cid4 variable Reiter justiﬁed rational constrained default logic D W D set default W W cid4 formulae D W D set default W W cid4 formulae 3 complete W cid4 W hardness holds W W cid4 variable This holds Reiter justiﬁed Corollary 6 The problem checking W cid4 c cid2p constrained rational default logic The problem analyze formula redundant ﬁxed set defaults The results proved appendix follows Theorem 23 The problem formula redundancy faithful consequenceequivalence cid3p tively Reiter justiﬁed constrained rational default logic 3 cid3p 4 respec Theorem 24 The problem formula redundancy based faithful equivalence cid3p consistent theories Reiter justiﬁed constrained rational default logic 3 hard remains hard In order prove cid3p 4 hardness problem formula redundancy consequenceequivalence provide reduction QBF validity problem A simpler proof given based following consideration checking clause redundancy proved cid2p 3 hard reductions QBFs results default theories having W background theory As result reductions prove formula redundancy cid2p 3 hard In words reduce validity QBF QBF problems formula redundancy What reductions satisfy assumptions obtain new reductions QBFs having additional existential quantiﬁer The assumptions default theory resulting reduction 2 hard cid2p 2 hard cid2p 1 background theory results reduction classically irredundant 2 matrix QBF occurs justiﬁcation single default affect rest default theory The reductions proving hardness clause redundancy satisfy assumptions In particular XY ZF valid background theory following theory consequenceredundant W D α β γ depend F quantiﬁers QBF W classically irredundant cid5 cid8 D α β F γ cid6 cid9 W P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1333 The fact matrix QBF copied verbatim default theory exploited follows ωw truth evaluation variable w XY ZF ωw valid background theory cid15D αβF ωw W cid16 redundant This default theory modiﬁed way subsets background γ theory correspondence truth evaluations ωw This way resulting theory redundant wXY Z F valid The resulting default theory satisﬁes assumptions background theory use matrix QBF procedure iterated obtain reduction QBF validity problem formula redundancy consequenceequivalence A similar technique faithful equivalence The details technique reported appendix The results obtained way follows Theorem 25 Formula redundancy cid3p Reiter justiﬁed constrained rational default logic 3 hard faithful equivalence cid3p 4 hard consequenceequivalence 55 Credulous default reasoning In credulous approach default logic formula extension theory entailed theory Contrarily skeptical reasoning presence extensions required presence sufﬁces Credulous equivalence deﬁned obvious way theories background theories assumption ﬁxed set defaults considered equivalent credulous consequences If theories faithfully equivalent consequences regardless skeptical credulous approach The converse proved untrue skeptical semantics For credulous semantics things slightly complicated credulous equivalence implies faithful equivalence Reiter default logic considered semantics Theorem 12 If default theories credulous consequences Reiter default logic extensions Proof Let assume contrary E extension T T cid4 T T cid4 credulous consequences Let F ﬁnite formula equivalent E By deﬁnition F entailed T credulous semantics Therefore F entailed T cid4 This means T cid4 extension Ecid4 Ecid4 F implies E Ecid4 Let F cid4 ﬁnite formula equivalent Ecid4 We F cid4 entailed T cid4 entailed T As result T extension Ecid4cid4 Ecid4cid4 F cid4 This implies Ecid4cid4 F Ecid4cid4 E means E Ecid4cid4 Under Reiter semantics extensions theory strictly contained 44 This implies E Ecid4cid4 E Ecid4 Since Ecid4 extension T cid4 contradicts assumption E extension T cid4 cid2 This theorem shows Reiter default logic results redundancy default theories faithful equivalence hold credulous equivalence The proof theorem based impossibility theory extension strictly contained This true QDL background theory support 19 ZDL 27 theorem holds This condition true semantics We counterexample theories different extensions credulous consequences This counterexample involves theory having extension contained Counterexample 6 There exists D W W cid4 W cid15D W cid16 cid15D W cid4cid16 credulous conse quences different sets extensions justiﬁed constrained rational default logic 1334 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Proof The statement holds W W cid4 D deﬁned follows cid5 D cid6 b b b b In considered semantics ﬁrst default applied W W cid4 leading b blocks application second default Both theories extension Cna b The second default applied W W contradicts justiﬁcation On hand applied W cid4 generating b The ﬁrst default applied different reasons constrained rational default logic justiﬁcations defaults contradict justiﬁed default logic ﬁrst default applied lead failure consequence b contradicts justiﬁcation b previously applied second default As result W cid4 additional extension Cnb Since cid15D W cid16 cid15D W cid4cid16 different sets extensions faithfully equivalent On hand exactly credulous consequences Indeed additional extensions second theory Cnb consequences contained consequences common extension Cna b cid2 56 Redundancy defaults For sake simplicity analyze redundancy defaults case faithful equivalence For set clauses W defaults D deﬁne ExtW D set extensions cid15D W cid16 ExtW D ExtDW The deﬁnitions faithful entailment equivalence deﬁned follows Deﬁnition 22 Faithful equivalence sets defaults Given ﬁxed background theory W set defaults D W Dcid4 ExtW D ExtW Dcid4 These sets faithfully faithfully entails set defaults Dcid4 written D e equivalent denoted D e W Dcid4 D e W Dcid4 Dcid4 e W D For ﬁxed background theory deﬁne redundancy default set defaults equivalence set set default removed Deﬁnition 23 Redundancy default A default d redundant D respect background theory W Dd faithfully equivalent D Redundancy sets defaults deﬁned follows Deﬁnition 24 Redundancy theory A set defaults D redundant respect background theory W exists Dcid4 D Dcid4 faithfully equivalent D 561 Making defaults irredundant The following lemma version Theorem 11 case default redundancy clause redundancy It proves defaults irredundant changing redundancy status Such results generally useful build default theories having speciﬁc properties wrt redundancy In particular following lemma later Theorem 14 prove problems redundancy clauses reduced corresponding problems redundancy defaults Lemma 5 For default theory cid15D W cid16 set defaults DI D let p q new variables vi set new variables bijective correspondence defaults DI let D1 D2 D3 deﬁned follows D1 d d d p q p q P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1335 d D2 D3 p q p q cid5 q p α p β p vi p γ q p α β γ α β γ cid7 cid7 cid7 cid7 cid5 DDI cid7 cid7 cid7 cid7 α β γ DI vi variable corresponding cid6 cid6 α β γ cid15D W cid16 extensions W consistent Reiter justiﬁed constrained rational default logics holds 1 processes cid15D1 D2 D3 W cid16 modulo transformation defaults cid15D W cid16 d added number processes composed d sequence containing defaults D2 2 extensions cid15D1 D2 D3 W cid16 cid15D W cid16 p q added plus single extension p q vi 3 subset D1 D2 D3 faithfully equivalent contains D1 D2 set original defaults corresponding D2 D3 faithfully equivalent D 562 Redundancy defaults vs sets defaults While formula classically redundant contains redundant clause happen default redundancy The following counterexamples Reiter constrained rational default logic unitary redundancy property wrt redundancy defaults Counterexample 7 There exists set defaults D according Reiter rational default logic 1 d D theory cid15Dd cid16 extensions Dd cid14e 2 exists Dcid4 D Dcid4 e D D Counterexample 8 There exists set defaults D according constrained default logic 1 d D holds Dd cid14e 2 exists Dcid4 D Dcid4 e D D Justiﬁed default logic unitary redundancy property wrt default redundancy This combination factors ﬁrst justiﬁed default logic failsafe 29 successful process selected adding defaults second extension generated unique set defaults Theorem 13 Faithful equivalence sets defaults justiﬁed default logic monotonic redundancy property We corollary justiﬁed default logic unitary redundancy property redundancy defaults considered Corollary 2 Faithful equivalence sets defaults justiﬁed default logic unitary redundancy property Remarkably monotonic redundancy proved Theorems 1 2 3 Indeed faithful entailment equivalence justiﬁed default logic satisfy preconditions theorems Right weakening hold shown W D Dcid4 D Dcid4cid4 ExtD ExtDcid4 obviously holds D entails Dcid4 Dcid4cid4 Dcid4 set D extension Cna Dcid4cid4 ExtD cid14 ExtDcid4cid4 D entail Dcid4cid4 Monotonicity hold case ExtD ExtDcid4 D Dcid4cid4 ExtDcid4cid4 cid14 ExtDcid4 example W D Dcid4 Dcid4cid4 D b b 563 Complexity redundancy defaults For Reiter default logic upper bound complexity given showing reduction complexity clause formula redundancy corresponding problems defaults This possible thanks following lemma 1336 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Lemma 6 If W γ consistent formula D set defaults cid15D W γ cid16 cid15D cid17 γ Reiter extensions W cid16 Proof We prove selected process ﬁrst theory turned selected process second cid17 theory addition default γ precondition applicable As result cid17 W cid16 In order prove γ selected process observe background theory consequences default process occur deﬁnition selected process As result matter γ background theory consequence default process cid17 γ vice versa Let cid2 selected process cid15D W γ cid16 Since cid2 process cid15D cid17 γ Let assume cid2 selected process second theory Since cid17 γ precondition cid2 process closed Let cid2cid4 process obtained removing cid17 γ cid2 This selected process cid15D W γ cid16 lack clause γ conscid2cid4 compensated presence γ W cid2 If background theory consistent lemma applied clauses leading following charac terization complexity redundancy defaults Theorem 14 The problem redundancy default default theory faithful equivalence Reiter default logic cid2p 2 hard cid3p 3 hard respectively Proof Hardness clause formula redundancy remains formula consistent Theorem 19 Theorem 24 As result Lemma 6 applied clause γ redundant cid15D W cid16 dγ redundant cid15D dγ W γ cid16 Indeed cid15D W cid16 extensions cid15D dγ W γ cid16 removing γ ﬁrst theory removing dγ second theory lead cid15D W γ cid16 The problem formula redundancy reduced default redundancy ﬁrst applying Lemma 6 clauses W making original defaults irredundant transformation Lemma 5 cid2 In order membership problems redundancy prove faithful equivalence sets defaults cid2p 2 Theorem 15 Checking faithful equivalence sets defaults cid2p 2 Reiter default logic Proof The contrary statement amounts checking theories extension The number possible extensions limited fact extension generated set consequences defaults Checking cid15D W cid16 extension cid15Dcid4 W cid4cid16 follows guess subset Dcid4cid4 D let E consDcid4cid4 check E extension cid15D W cid16 extension cid15Dcid4 W cid4cid16 Checking formula E extension default theory logarithmic number satisﬁability tests 2845 As result problem expressed QBF formula QBF In order check exists Dcid4cid4 E consDcid4cid4 condition add existential quantiﬁer formula The problem cid2p 2 cid2 The problem checking redundancy set defaults obviously cid3p 3 solved guessing subsets defaults checking equivalence As result precise complexity characterization problems redundancy Reiter default logics according faithful equivalence Corollary 3 The problem checking redundancy default redundancy set defaults cid2p 2 complete cid3p 3 complete respectively Reiter default logic faithful equivalence P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1337 6 Conclusions In article properties redundancy nonmonotonic logics proved These properties fall categories logics monotonic unitary redundancy property parts theory irredundant results characterizing complexity checking redundancy element set redundancy set The results summarized follows Monotonicunitary redundancy hold circumscription variables minimized redundancy background theory categorical normal default logic redundancy defaults justiﬁed fault logic hold redundancy background theory default logic general redundancy defaults Reiter constrained rational default logic Making parts irredundant considered formalisms able provide transformation makes arbitrary set irredundant changing redundancy status elements set Complexity results complexity results second level polynomial hierarchy provided following list gives results problem checking redundancy element CIRCredundancy variables minimized clause cid2p redundancy clause background theory faithful equivalence cid2p 3 complete constrained rational default logic justiﬁed default logic cid2p 2 complete Reiter redundancy clause background theory skeptical consequenceequivalence cid2p 3 2 complete complete Reiter justiﬁed constrained rational default logic redundancy default faithful equivalence Reiter default logic cid2p The complexity checking redundancy set following list CIRCredundancy variables minimized formula cid2p redundancy background theory cid3p 2 complete 2 complete 3 complete faithful equivalence Reiter justiﬁed strained rational default logic redundancy background theory cid3p justiﬁed constrained rational default logic 4 complete skeptical consequenceequivalence Reiter redundancy set defaults faithful equivalence Reiter default logic cid3p 3 complete In way circumscription variables minimized seen basic form nonmonotonic reason ing However expresses core principle circumscription general circumscription translated 89 Nevertheless results redundancy restriction necessarily extend general case elimination varying ﬁxed variable modify formula minimized The extension results pre sented article general case left open problem Two results proved credulous default reasoning equality credulous consequences coincide faithful equivalence Reiter default logic considered semantics This means results faithful equivalence Reiter default logic extend credulous equivalence The problem hold semantics left open problem While results redundancy set clauses results given redundancy set defaults This scenario interesting redundancy deﬁned propositional formula usual propositional entailment relation connectives For reason section general results considered redundancy arbitrary set elements restricting elements clauses propositional formulae The complexity results problems redundancy clause formula corre sponding problem entailment considered cases While membership class obvious hardness required separate proof Regarding relative complexity clause redundancy formula redundancy observe difference affected unitary redundancy property If unitary redundancy property holds redundancy formula equivalent existence redundant clause means check redundancy formula performing linear number clause redundancy checks parallelized leading complexity On hand unitary redundancy hold redundancy 1338 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 formula requires checking existence equivalent subset formula This corresponds additional existential quantiﬁcation tests expressed QBFs imply jump level polynomial hierarchy An open question extension results presented article strong uniform equivalence As noted study default logic redundancy deﬁned terms equivalence property depends deﬁnition equivalence Two forms equivalence recently deﬁned strong uniform equivalence deﬁned updateresistant equivalence 12325051 A clause strongly CIRCredundant removed formula changing minimal models formula happens formulae obtained adding clauses Acknowledgements The author thanks Jiang Zhengjun comments previous version paper Thanks goes anonymous reviewers particular suggestions relating unitary redundancy cumulativity lead author study redundancy arbitrary logics Appendix A Two counterexamples The following counterexamples redundancy arbitrary logics In section use cid2 cid2cid4 denote sets formulae default processes sake coherence section arbitrary logics The ﬁrst counterexample shows unitary redundancy imply monotonic redundancy converse proved hold Counterexample 1 proof There exists logic L reﬂexive L symmetric transitive related fullentailment unitary redundance holds monotonic redundancy Proof We statement holds e D e D deﬁned following set defaults cid5 D cid6 x y x y y x y x y Monotonic redundancy hold let cid2 x y cid2cid4 cid2cid4cid4 y Both cid2 cid2cid4 Cnx y extension ﬁrst default applied second default applied In theory cid2cid4cid4 ﬁrst second default applied leading extensions Cnx y Cnx y Reﬂexivity symmetry transitivity fullentailment obvious deﬁnition Proving logic unitary redundancy property involved Most theories Cnx y extension The exceptions theories second default applied theories ﬁrst default applied The theories ﬁrst category entail y x theories second category entail x y 1 x y extension Cnx y y extensions Cnx y Cnx y 2 x y x y x y x y x y x y deductive closure extension Each theories set extensions different different set containing Cnx y As result sets cid2 cid2cid4 faithfully equivalent theories Moreover cid2 cid2cid4 classically equivalent faithfully equivalent Cnx y extension Let assume counterexample unitary redundancy exists There exists cid2 cid2cid4 cid2cid4 cid2 cid2cid4 equivalent cid2 γ cid2 holds cid2γ equivalent cid2 Since cid2cid4 equivalent cid2 case cid2cid4 cid2 differ single clause γ cid2cid4 equal cid2γ equivalent cid2 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1339 As result cid2cid4 cid2 differ clauses cid2cid2cid4 contains clauses We sets cid2γ γ cid2cid2cid4 classically equivalent Let assume contrary theories cid2γ classically equivalent Then union classically equivalent faithfully equivalent union cid2 contradict assumption equivalent We following condition clauses γ1 γ2 cid2 theories cid2 cid2γ1 cid2γ2 equivalent Let cid21 cid2γ1 cid22 cid2γ2 We cid2cid4 cid2 equivalent classically equivalent cid21 cid22 classically equivalent Since cid2cid4 cid2 faithfully classically equivalent Cnx y extension possible set extensions generated classically equivalent theories Since cid21 cid22 faithfully equivalent equivalent theories entails y x entails x y If cid21 cid22 entail x y union Therefore cid2 Cnx y extension If theories entail y x equivalent y x y respectively union x y Cnx y extension In possible cases unitary redundancy violated reached contradiction counterexample unitary redundancy exists logic cid2 The second counterexample shows exists logic alternative deﬁnition redundancy terms entailment cid2γ L γ deﬁnition terms equivalence cid2 L cid2γ Counterexample 2 proof There exists relations L L L reﬂexive L reﬂexive symmetric L L related entailment exists cid2 γ cid2 cid2γ L γ cid2 cid14L cid2γ Proof We use faithful entailment e D equivalence e D following set defaults D d1 d2 b b d1 d2 b b In cid15D cid16 applicable default d1 blocks application d2 The extension theory Cna b In cid15D acid16 apply d1 result apply d2 The consequence default blocks application ﬁrst second extension Cna b We ExtD ExtDa e D ExtD As result taking cid2 γ cid2γ e Yet cid14e D D γ cid2γ cid14e D cid2 cid2 ExtDa cid14 Appendix B Complexity CIRCredundancy The following theorem shows complexity problem redundancy single clause Theorem 8 proof Checking CIRCredundancy clause formula cid2p formula assumed satisﬁable 2 complete remains hard Proof Lemma 1 proves redundancy clause formula checked solving QBF M exists M cid4 cid2p 2 Alternatively Theorem 4 Theorem 6 prove clause γ redundant cid2 cid2γ M γ Eiter Gottlob 13 proved problem cid2p 2 We hardness reduction QBF formula XYcid4 problem redundancy We assume cid4 satisﬁable assumption change hardness problem Let X x1 xn Y y1 yn 1340 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 cid4 δ1 δm Let p1 pn new variables We XYcid4 valid γ CIRCredundant cid2 cid2 xi pi 1 cid2 cid2 n yj 1 cid2 j cid2 n δk 1 cid2 k cid2 m γ γ y1 yn This formula cid2 satisﬁable satisﬁed model pi s true false variables xi s yi s values cid4 true assignment exists cid4 assumed satisﬁable By Lemma 1 γ CIRCredundant cid2 minimal model cid2γ γ contains model cid2 The following equivalences holds cid2 xi pi 1 cid2 cid2 n cid4 cid2γ γ xi pi 1 cid2 cid2 n y1 yn The ﬁrst equivalence holds yj 1 cid2 j cid2 n y1 yn equivalent checked resolving yj turn The second equivalence holds γ y1 yn set implies clauses yj δk Formula cid2γ γ minimal model truth evaluation ωX variables xi IωX ωX pi 1 cid2 cid2 n xi ωX yj 1 cid2 j cid2 n We model IωX contains model cid2 cid4ωX satisﬁable By Lemma 1 redundancy γ corresponds condition true possible models cid2γ γ This prove QBF valid γ redundant cid2 Since cid2 xi pi 1 cid2 cid2 n cid4 cid4 model given value ωX cid2 model strictly contained IωX add satisfying assignment cid4 setting pi opposite xi false On converse cid2 model strictly contained IωX model exactly value X P cid2 contains xi pi xi pi false IωX On hand model cid2 set false satisfy cid4 showing exists assignment extending ωX satisfying cid4 cid2 The following lemma making clauses irredundant changing redundancy status ones In words shows way clauses cid2cid2cid4 necessary contained equivalent subsets cid2 Lemma 4 proof For consistent formula cid2 γ1 γm cid2cid4 cid2 CIRCredundant clauses I cid2 cid2cid4 clauses s t γi γi cid2cid4 CIRCredundant cid2 Proof There possible assignment variables s t Since models I cid2 cid2cid4 partitioned models I cid2 cid2cid4 s t I cid2 cid2cid4 s t I cid2 cid2cid4 s t I cid2 cid2cid4 s t minimal models I cid2 cid2cid4 necessarily minimal models formulae In table remains I cid2 cid2cid4s t possible assignment s t removing entailed clauses false literals We minimal models resulting formulae assignment s t s t s t s t subformula b b ci di 1 cid2 cid2 m ci 1 cid2 cid2 m ci γi 1 cid2 cid2 m γi cid2cid2cid4 x xcid4 x Varcid2 ci 1 cid2 cid2 m ci γi 1 cid2 cid2 m γi cid2cid2cid4 cid2cid4 minimal models b s b di t H H C X Xcid4 s t H H CIRCcid2 The subformulae satisﬁable Moreover minimal model contained minimal models values s t b As result minimal models I cid2 cid2cid4s t exactly P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1341 minimal models subformulae The clause s t irredundant addition I cid2 cid2cid4s t deletes minimal model b The minimal models I cid2 cid2cid4 exactly minimal models remaining subformulae We remaining clauses ones derived cid2cid4 irredundant This shown removing clause set showing minimal models subformula removed elements Since minimal models subformulae exactly minimal models cid2 proof clause irredundant 1 The clauses s t b irredundant removal allow b set false minimal models second subformula respectively 2 The clauses s t ci di s ci irredundant removal allow di set false minimal model second subformula 3 The clauses t ci γi s t x xcid4 require longer analysis In assignment I cid2 cid2cid4 cid11 cid4 x Varcid2 F ci γi 1 cid2 cid2 m x x cid10 The clauses x xcid4 positive By Lemma 2 CIRCredundant redundant In turn redundant ci 1 cid2 cid2 m y y X y cid14 x model clauses x xcid4 Since ci occurs positive ci γi Lemma 3 ensures clause CIRCredundant F redundant F x xcid4 x γi This false removal ci γi creates following new model M cj 1 cid2 j cid2 m j cid14 x cid4 x x γi This model M satisﬁes F x xcid4 x γici γi clauses cj γj satisﬁed cj M clauses x xcid4 satisﬁed xcid4 M On hand M satisfy ci γi assigns literals false The clauses redundant corresponding clauses cid2cid4 In particular clauses occur fourth subformula equivalent s tci 1 cid2 cid2 mcid2 A clause s t γi γi cid2cid4 CIRCredundant I cid2 cid2cid4 γi CIRCredundant cid2 cid2 Appendix C Equivalence default logics In section relationship different deﬁnitions equivalence default logic C1 Nonequality equivalence relations In section considered forms equivalence general coincide theory contained Counterexample 9 There exists set defaults D formulae W W cid4 W cid4 W W cid4 m W cid4 cid14c D W Reiter justiﬁed constrained rational default logic D W Proof Let D W W cid4 follows D d1 d2 b b d1 d2 b b W cid4 W 1342 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 The selected process cid15D W cid4cid16 d1 generates extension Cna b This extension entails W entails b The theory cid15D W cid16 process d2 generating extension Cna b These processes concatenated consequence b d1 inconsistent justiﬁcation d2 Since W cid4 W W D W cid4 In example W cid4 D W single extension W cid4 entails W However W cid4 W different set extensions particular ExtDW cid4 b ExtDW cid2 Since W cid4 cid14c D W holds W cid4 cid14e A similar result proved c D e D D W proves mutual faithful equivalence coincide Counterexample 10 There exists set defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 cid14e D W Reiter justiﬁed default logic D W Proof Let D d1 d2 d3 d4 W W cid4 defaults follows d1 b c c b c d2 c d3 b c b c d4 b c b c b In W cid4 d1 d2 applicable The consequence ﬁrst default c consistent justiﬁcation d3 Default d4 applicable justiﬁcation The ﬁrst selected process W cid4 d1 d3 leading extension Cna c The second process W cid4 starts d2 consequence c consistent d1 d3 imply precondition d4 As result d2 second selected process W cid4 leading extension Cna c We ExtDW cid4 c c Let consider extensions W All selected processes W cid4 selected processes W However apply d3 true background theory We obtain b c This conclusion inconsistent justiﬁcation d2 d1 d4 applied The ﬁrst leads extension Cna c extension cid15D W cid4cid16 On hand d3 d4 leads Cna b new extension Nevertheless ExtDW c c b theory cid15D W cid16 extensions Cna b cid15D W cid4cid16 skeptical consequences cid2 In proof defaults applicable W processes cid15D W cid4cid16 Such defaults mutually consistent justiﬁcations applicable process cid15D W cid4cid16 thanks fact extension cid15D W cid16 contains models extensions cid15D W cid4cid16 This condi tion possible constrained rational default logic claim proved different way Counterexample 11 There exists set defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 cid14e D W constrained rational default logic D W Proof D W W cid4 deﬁned follows D d1 d2 d3 d4 W x cid4 W P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1343 x x d1 d2 x b d3 x b b d4 x b b x The justiﬁcations d2 d3 d4 mutually inconsistent The selected processes cid15D W cid16 d1 d2 d2 d1 d1 d3 d3 d1 d4 generating extensions E1 Cnx b E2 Cnx b E3 Cnx Their disjunction ExtDW x Let consider cid15D W cid4cid16 The default applicable W cid4 d1 generates x justiﬁcation As result defaults d2 d3 applicable d4 As result extensions cid15D W cid4cid16 Cnx b Cnx b We W cid4 cid14e D W On hand ExtDW cid4 x equivalent ExtDW As result W cid4 c D W cid2 C2 Equality entailment relations The following chain implications easy prove W cid4 e D W W cid4 c D W W cid4 D W The implication proved following lemma Lemma 7 For set defaults D formulae W W cid4 W cid4 c constrained rational default logic D W W cid4 D W Reiter justiﬁed Proof By assumption ExtDW cid4 ExtDW Since extension cid15D W cid16 entails W ExtDW W As result ExtDW cid4 W deﬁnition W cid4 D W cid2 Redundancy deﬁned terms equivalence formulae contained As result makes sense study conditions equivalence particular case W cid4 W The chain implications wrapped case proving forms entailment coincide The following lemma proved Makinson 35 Observation 9 Reiter default logic Makinson stated W cid4 W W cid4 D W W cid4 c D W holds case This fact generalized justiﬁed constrained rational default logic D W proof statement actually shows W cid4 c D W holds proving W cid4 e Lemma 8 For set defaults D formulae W W cid4 W cid4 W W cid4 D W W cid4 e Reiter justiﬁed constrained rational default logic D W Proof Let cid2 selected process cid15D W cid4cid16 We prove selected process cid15D W cid16 Since W cid4 D W formula W entailed extension ExtDW cid4 In particular W cid4 conscid2 W Therefore W cid4 conscid2 W conscid2 As result conditions success closure W cid4 occurs subformula W cid4 conscid2 changed replacing W cid4 W This particular true considered conditions success closure The condition mentions background theory conjunction conscid2 condition sequence process cid2 process cid15D W cid4cid16 W cid4 conscid2d precd d cid2 The condition true W W cid4 W implies W W cid4 cid2 The following consequence lemmas Corollary 4 For set defaults D formulae W W cid4 W cid4 W Reiter justiﬁed constrained rational default logic following holds D W cid4 D W W D W W cid4 e cid4 c W 1344 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 C3 Equality equivalence relations particular cases While c D e contained D general coincide defaults normal formula Theorem 16 For set normal defaults D formulae W W cid4 W cid4 W W cid4 c W cid4 e D W constrained default logic D W implies Proof Given previous result prove W c cid15D W cid16 extension extension cid15D W cid4cid16 D W cid4 implies ExtDW ExtDW cid4 To contrary assume extension exists Let cid2 process generates extension cid15D W cid16 extension cid15D W cid4cid16 By deﬁnition process conscid2 W justcid2 consistent Therefore model M Since model satisﬁes W conscid2 model extension generated cid2 Since conclusions theories model extension generated cid2 model extensions cid15D W cid4cid16 Let cid2cid4 process cid15D W cid4cid16 generates extension model M We prove defaults cid2 cid2cid4 Since M model extension generated cid2cid4 model conscid2cid4 W cid4 Therefore model conscid2cid4 model justcid2cid4 defaults normal We proved M model conscid2 justcid2 W As result set conscid2 conscid2cid4 W justcid2 justcid2cid4 consistent Therefore add defaults cid2 cid2cid4 contradicting justiﬁcations As result defaults cid2 cid2cid4 preconditions entailed consequences cid2 This impossible cid2 process cid15D W cid16 W precd d ﬁrst default cid2 As result d cid2cid4 cid2cid4 maximal process The consequences d conscid2cid4 W cid4 Repeating argument second default cid2 result We conclude defaults cid2 cid2cid4 cid2 Since Reiter justiﬁed constrained rational default logics coincide normal default theories equality deﬁnitions equivalence holds defaults normal Theorem 17 If D set normal defaults W W cid4 formulae W cid4 W W cid4 c holds W cid4 e D W holds Reiter justiﬁed constrained rational default logic D W The following lemma missing proving considered forms equivalence coincide defaults categorical normal Lemma 9 If D set categorical defaults W W cid4 formulae W cid4 W W cid4 D W W e D W cid4 constrained default logic Proof Let cid2 selected process cid15D W cid16 We prove cid2 selected process cid15D W cid4cid16 generating extension Since cid2 selected process cid15D W cid16 holds W conscid2 justcid2 consistent Since W cid4 W holds W cid4 conscid2 justcid2 consistent Since default preconditions cid2 successful process cid15D W cid4cid16 Since constrained default logic failsafe semantics 29 exists cid2cid4 cid2 cid2cid4 selected process cid15D W cid16 Since extension W cid4 entails W particular true extension generated cid2 cid2cid4 In words W cid4 conscid2 cid2cid4 W As result W cid4 conscid2 cid2cid4 W conscid2 cid2cid4 Since cid2 cid2cid4 process cid15D W cid4cid16 W cid4 conscid2 cid2cid4 justcid2 cid2cid4 consistent equivalent consistency W conscid2 cid2cid4 justcid2 cid2cid4 Therefore cid2 cid2cid4 successful process cid15D W cid16 Since cid2 assumption maximal successful process cid15D W cid16 case cid2cid4 cid2 cid2cid4 cid2 We proved W cid4 conscid2 cid2cid4 W conscid2 cid2cid4 cid2 generates extension W W cid4 cid2 Since constrained Reiter default logics coincide normal default theories following consequence P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1345 Corollary 5 If D set normal categorical defaults W W cid4 formulae W cid4 W conditions W cid4 m D W equivalent Reiter justiﬁed constrained rational default logic D W W cid4 e D W W cid4 c Appendix D Complexity redundancy default logic D1 Complexity clause redundancy In section analyze complexity checking redundancy clause formula Formally problem W γ equivalent W according c D By Corollary 4 forms equivalence related W cid4 c D W W cid4 D W W cid4 W As result checking W cid4 D W allows telling ﬁrst equivalence W cid4 W holds kinds equivalence In words order check W cid4 W equivalent W cid4 W D W cid4 ﬁrst check W cid4 D W condition true proceed checking W c depending equivalence considered D W equivalent W cid4 e D W cid4 W e Lemma 8 tells W cid4 D W implies extensions cid15D W cid4cid16 extensions cid15D W cid16 This condition imply equivalence cid15D W cid16 contain extension default theory cid15D W cid16 D e W D d1 d2 d1 b b d2 b b The theory cid15D W cid16 extensions applying d1 d2 applicable The resulting extensions Cna b Cna b Let W cid4 The default applicable W cid4 d2 leading extension Cna b This extension implies W As result W cid4 D W W cid4 W extensions consequences In particular W extensions W cid4 This case W cid4 D W W W cid4 equivalent In order check equivalence W cid4 W W cid4 W conditions checked 1 W cid4 D W 2 W c D W cid4 W e D W cid4 An upper bound complexity checking redundancy clause given following theorem Theorem 18 Checking W cid4 e cid2p 2 Reiter justiﬁed default logic cid2p D W set defaults D formulae W W cid4 W cid4 W 3 constrained rational default logic 2 The condition checked W e Proof Checking W cid4 D W cid2p D W cid4 The converse condition exists formula E W consD CnE extension cid15D W cid16 extension cid15D W cid4cid16 Since checking formula Reiter justiﬁed default logic cid10p log n 2845 2 problem cid3p 2 The problem redundancy clause solved solving problems cid2p 2 Its converse cid2p 2 parallel The line proof work constrained rational default logic extension checking 2 complete 28 makes clause redundancy cid2p cid3p 3 semantics cid2 Clause redundancy cid2p 2 hard considered semantics shown following theorem 1346 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Theorem 19 Checking W cid4 e 2 hard W W cid4 variable W consistent defaults categorical normal Reiter justiﬁed constrained rational default logic D W D set defaults W W cid4 formulae cid2p Proof The claim proved fact entailment default logic cid2p 2 hard formula entail single positive literal defaults categorical normal 2049 If defaults categorical normal Corollary 5 proves W cid4 m D W equivalent forms equivalence We new reduction QBF The formula XY F valid new variable cid8cid5 redundant theory xi xi F xi xi cid6 cid5 cid6 cid9 The background theory W consistent This theory extension possible truth assignment variables X For extension default applied F consistent given assignment X As result F consistent truth assignment variables X removed background theory changing consequences extensions Otherwise removal cause extensions entail cid2 The following theorem shows problem cid2p 3 complete considered semantics strained rational Theorem 20 Checking W e constrained rational default logic W W cid4 variable D W cid4 D set defaults W W cid4 formulae cid2p 3 hard Proof We reduction QBF problem consideration Given formula XY ZF X x1 xn Y y1 yn corresponding redundancy problem deﬁned W W cid4 D D1 D2 D3 D4 sets defaults deﬁned follows b f new variables C c1 cn E e1 en sets new variables b xi xi cid6 cid7 cid7 cid7 cid71 cid2 cid2 n D1 cid5 cid6 cid5 b xi xi b C d E f D2 D3 D4 D5 cid5 cid5 cid5 cid6 cid7 cid7 cid7 cid71 cid2 cid2 n cid7 cid7 cid7 cid71 cid2 cid2 n cid6 b xi ci d xi C b yi ei f yi b xi ci d xi C b yi ei f yi C E d f F b d f cid6 The defaults D1 D2 b justiﬁcation defaults D3 D4 D5 b As result successful process contains defaults ﬁrst set defaults second set Since defaults ﬁrst set precondition applicable W applicable W cid4 The default D5 default having consequence default b justiﬁcation result derived W cid4 requires application default D5 blocks defaults D1 D2 We conclude selected process cid15D W cid16 defaults D1 D2 defaults D3 D4 D5 selected processes cid15D W cid4cid16 defaults second set We selected process W cid4 selected process W Let cid2 selected process W cid4 Since occurs negated consistency W cid4 conscid2 justcid2 entails W conscid2 justcid2 bx1 c1dx1 applicable W cid4 As condition maximality cid2 contains default D3 D4 D5 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1347 b justiﬁcation As result defaults D1 D2 applied b justiﬁcations Therefore cid2 maximal W The way W W cid4 extensions W extension defaults D1 D2 W cid4 generate extension defaults D3 D4 D5 The extensions W generated extensions D1 D2 bijective correspondence interpretations variables X interpretation ωX extension equivalent C d E f ωX vice versa We W cid4 possibly generate extension defaults D3 D4 D5 The defaults applicable W cid4 D3 Since set justiﬁcations consistent defaults containing opposite values xi applied A maximal process consequences equivalent C d ωX ωX interpretation variables X More precisely interpretation processes vice versa Since consequences process entail C defaults D4 applied Again results process consequences include E f ωY In words pair interpretations ωX ωY X Y respectively processes having consequences equivalent C d ωX E f ωY vice versa The default D5 applied process precisely C E entailed consequence process default applicable d f F entailed Since d f new variables equivalent ωX ωY F F valid value Z interpretation ωX ωY The effect application default d false f true The resulting extension d f C d ωX E f ωY equivalent C d E f ωX This extension generated W defaults D1 D2 W cid4 generates default D5 applied Now assume XY ZF valid This means extension equivalent C d E f ωX W exists interpretation ωY process C d ωX E f ωY consequence extended application default D5 generating extension If instead XY ZF valid exists ωX ωY holds ωX ωY cid14 F In terms extensions considered theories W extension equivalent C d E f ωX However processes W cid4 generate extension ones extend process having C d ωX E f ωY ωY consequence By assumption F entailed ωX ωY default D5 applied process This means sets extensions W W cid4 differ cid2 We consider problem redundancy clauses consequenceequivalence The difference kinds equivalence sets extensions different disjunctions elements The necessity calculating disjunction extensions intuitively explains checking redundancy consequenceequivalence harder faithful equivalence Theorem 21 Checking W cid4 c W cid4 W Reiter justiﬁed constrained rational default logic D W D set defaults W W cid4 formulae cid2p 3 Proof W cid4 W consequenceequivalent W cid4 D W W c 2 We prove D W cid4 holds ExtDW cid14 ExtDW cid4 converse second condition cid3p In terms models ModE E ExtDW cid14 ModE E ExtDW cid4 exists M E M ModE E ExtDW M model extension W cid4 The condition expressed following formula D W cid4 The ﬁrst problem cid2p 3 By deﬁnition W cid14c ME M ModE E ExtDW E cid4 cid4 E ExtDW cid4 M ModE cid4 Since Ecid4 ExtDW cid4 cid10p 2 nal 28 problem checking W c considered semantics cid2 log n Reiter 45 justiﬁed default logic cid2p 2 constrained ratio 3 Therefore problem consequenceequivalence cid2p 3 D W cid4 cid2p We problem hard class 1348 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 D W D set default W W cid4 formulae 3 hard W W cid4 variable Reiter justiﬁed default constrained rational default Theorem 22 The problem checking W cid4 c cid2p logics Proof We prove claim reduction QBF We reduce formula XY ZF problem checking D W cid4 W cid4 W D D1 D2 D3 D4 D5 D6 Let X x1 xn W cid14c Y y1 yn We Di time First generate complete assignment variables X following defaults H h1 hn new variables cid6 cid5 D1 xi xi hi xi xi hi Since defaults preconditions applied regardless W W cid4 background theory They generate process truth assignment ωX variables X The variables hi true variables xi set value The processes W W cid4 far Once hi true apply defaults D2 d1 d2 d3 d4 ones Counterexample 10 theories consequences different extensions b c new variables D2 d1 d2 d3 d4 d1 h1 hn b c c d2 h1 hn b c d3 h1 hn b c d4 h1 hn b c b c c b c b Since defaults H precondition applied truth assignment X generated previous defaults They act proof Counterexample 10 Only d1 d3 d2 processes W cid4 consequences c c The theory W processes d3 d1 d3 d4 generate extensions c b respectively While ﬁrst extension W cid4 second The disjunction extensions equivalent H W W cid4 The idea follows H b ωX obtained W W cid4 generate extension equivalent H b ωX d cid11Y cid11Y assignment false variables Y partial extensions H c ωX H c ωX instead generate arbitrary assignment ωY H b ωX d cid11Y model ωX ωY F satisﬁable This way exists assignment ωX ωY formula ωX ωY F satisﬁable extension W cid4 having model H b d ωX cid11Y Vice versa exists single ωY ωX ωY F unsatisﬁable extension equivalent H c ωX W cid4 generated extension model H b ωX d cid11Y The required defaults following ones First generate considered model process gener ated H b ωX following default d new variable cid6 cid5 D3 b cid17 d y1 yn From H c ωX H c ωX generate arbitrary truth assignment Y Since model H b d ωX cid11Y assigns false variables yi simply add yi conclusion A similar effect achieved following defaults L l1 ln new variables cid5 D4 D5 cid5 c d yi d yi li c d yi d yi li c d yi d yi li c d yi d yi li cid6 cid7 cid7 cid7 cid7 1 cid2 cid2 n cid7 cid6 cid7 cid7 cid7 1 cid2 cid2 n P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1349 The defaults associated yi yi applied time consequence contains negation justiﬁcation Since following defaults applied d l1 ln derived current extensions application equivalent H c ωX d ωY L H c ωX d ωY L ωY arbitrary truth assignment Y These extensions models b ωX d cid11Y The following default removes models extensions ωX ωY F satisﬁable d l1 ln d F d D6 cid6 cid5 This default applicable H b ωX d cid11Y justiﬁcation contains d It applicable processes ith default D4 D5 applied consequences applied defaults D4 D5 consistent d F In words d ωY L d F consistent equivalent consistency ωY F d L mentioned ωY F We conclude 1 truth assignment ωX partial extensions generated W H c ωX H c ωX H b ωX ﬁrst generated W cid4 2 H b ωX extension equivalent H b ωX d cid11Y generated models extension models extension W cid4 equivalence W W cid4 hold 3 H c ωX generate H c ωX d ωY L truth assignment ωY variables Y formula d added F consistent ωX ωY As result models H b ωX d cid11Y models extension W cid4 F ωX satisﬁable truth assignment Y Since nonequivalence checked ωX nonequivalence holds XY Z F A similar proof holds constrained rational default logics replacing default theory Counterexample 10 Counterexample 11 The proof slightly simpliﬁed case defaults D4 D5 modiﬁed justiﬁcations yi yi consequence d li cid2 Since proved problem clause redundancy wrt consequenceequivalence cid2p 3 hard class following result D W D set default W W cid4 formulae 3 complete W cid4 W hardness holds W W cid4 variable This holds Reiter justiﬁed Corollary 6 The problem checking W cid4 c cid2p constrained rational default logic D2 Complexity formula redundancy The problem analyze formula redundant ﬁxed set defaults The complexity formula redundancy wrt faithful consequenceequivalence cid3p 3 cid3p 4 respectively Theorem 23 The problem formula redundancy faithful consequenceequivalence cid3p tively Reiter justiﬁed constrained rational default logic 3 cid3p 4 respec Proof Both problems expressed existence subset W cid4 W W cid4 equivalent W Since verifying equivalence cid2p 3 respectively faithful consequenceequivalence claim follows cid2 2 cid2p Regarding hardness ﬁrst theorem characterizing complexity problem case faithful equivalence We general technique allowing hardness result raised level polynomial hierarchy Theorem 24 The problem formula redundancy based faithful equivalence cid3p consistent theories Reiter justiﬁed constrained rational default logic 3 hard remains hard 1350 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Proof We reduce problem validity XY ZF X x1 xn Y y1 yn Z z1 zn problem redundancy formula The default theory corresponding formula XY ZF theory cid15D W cid16 deﬁned follows s1 sn r1 rn h1 hn p1 pn new variables W si 1 cid2 cid2 n ri 1 cid2 cid2 n D D1 D2 D3 D4 D5 D6 cid7 cid7 cid7 cid7 si ri rj D1 cid5 cid6 1 cid2 cid2 n 1 cid2 j cid2 n cid6 cid6 si ri sj si ri yi yi hi xi pi xi xi ri cid17 W cid7 cid7 cid7 cid7 1 cid2 cid2 n cid7 cid7 cid7 cid7 1 cid2 cid2 n cid7 cid7 cid7 cid7 1 cid2 cid2 n cid7 cid7 cid7 cid7 1 cid2 cid2 n cid6 yi yi hi xi pi xi xi si cid17 W p1 pn h1 hn F W cid6 cid6 cid5 cid5 cid5 cid5 cid5 D2 D3 D4 D5 D6 The background theory W consistent The defaults D1 D2 applied The defaults D3 D4 generate extension possible truth evaluation X Y extension contains variables hi pi Whether default applicable consequence equivalent background theory Let W cid4 W If index si ri W cid4 defaults D1 applicable generating Therefore W cid4 equivalent W If exists index si ri W cid4 ith default D2 applicable generating In order check redundancy consider subsets W cid4 W 1 cid2 cid2 n si W cid4 ri W cid4 Let ωX assignment variables X xi assigned true si W cid4 false ri W cid4 The defaults D3 D4 generate arbitrary truth evaluation vari ables X Y If assignment X equal ωX formula W generated leading extension extension W As result extensions W cid4 match value ωX exten sions W If holds extensions values X match ωX W cid4 equivalent W For given W cid4 consider extensions consistent ωX There exactly extension possible truth evaluation Y If default D6 applied generates W making W cid4 equivalent W In turn default D6 applied truth evaluation Y truth evaluation F satisﬁable As result W cid4 equivalent W possible truth evaluations Y formula F satisﬁable Since exists relevant W cid4 truth evaluation X formula W redundant exists truth evaluation X possible truth evaluations Y formula F satisﬁable cid2 In order prove cid3p 4 hardness problem formula redundancy consequenceequivalence provide reduction QBF validity problem A simpler proof given based following consideration checking clause redundancy proved cid2p 3 hard reductions QBFs results default theories having W background theory As result reductions prove formula redundancy cid2p 3 hard In words reduce validity QBF QBF problems formula redundancy What reductions satisfy assumptions obtain new reductions QBFs having additional existential quantiﬁer The assumptions default theory resulting reduction 2 hard cid2p 2 hard cid2p P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1351 1 background theory results reduction classically irredundant 2 matrix QBF occurs justiﬁcation single default affect rest default theory The reductions proving hardness clause redundancy satisfy assumptions In particular XY ZF valid background theory following theory consequenceredundant D α β γ depend F quantiﬁers QBF W classically irredundant cid5 cid8 D α β F γ cid6 cid9 W The fact matrix QBF copied verbatim default theory exploited follows ωw truth evaluation variable w XY ZF ωw valid background theory cid15D αβF ωw W cid16 redundant This default theory modiﬁed way subsets background γ theory correspondence truth evaluations ωw This way resulting theory redundant wXY Z F valid The resulting default theory satisﬁes assumptions background theory use matrix QBF procedure iterated obtain reduction QBF validity problem formula redundancy consequenceequivalence A similar technique faithful equivalence The details technique following lemmas The ﬁrst shows literal moved justiﬁcation default background theory vice versa certain conditions Lemma 10 Let W propositional formula D d set defaults Assume l literal variable occur W D precd consd words occur justd Then selected processes ﬁrst following theory converted selected process second replacing d d cid4 vice versa This holds Reiter justiﬁed constrained rational default logic cid13 cid12 D d W l cid12 cid4 W D d cid13 d cid4 precd justd l consd Proof The variable l occurs background theory W l justiﬁcation d d cid4 The conditions process ﬁrst theory selected involve W l justd W l formulae containing l W contain variable l As result moving l background theory justiﬁcation d vice versa affect conditions Note processes extensions different l extensions ﬁrst theory second cid2 The second lemma obvious consequence conditions moving literal justiﬁcation default background theory vice versa change redundancy theory Lemma 11 Let W W cid4 propositional formulae W cid4 W D d set defaults l literal variable occur W D precd consd occur justd It holds W cid4 e Dcid4 W W cid4 l e Dcid4cid4 W l Dcid4 Dcid4cid4 follows This holds Reiter justiﬁed constrained rational default logic cid5 cid4 D D cid6 precd justd l consd cid4cid4 D d D 1352 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Proof Obvious consequence lemma cid15Dcid4 W cid4cid16 cid15Dcid4 W cid16 processes cid15Dcid4cid4 W cid4 lcid16 cid15Dcid4cid4 W lcid16 respectively cid2 A consequence lemma W redundant according Dcid4 W l redundant according Dcid4cid4 Indeed l mentioned consequences defaults subset W l equivalent W l contains l The lemma formulated general way necessary proving following lemma The property proved consequenceequivalence moving l justiﬁcation default background theory effect adding l extensions Lemma 12 If D set defaults w variable W classically irredundant formula exists W cid4 W W cid4 w e p α β γ D W w following theory redundant D W w W cid4 w e cid6 cid8 Dw α β γ W w D w cid7 cid7 cid7 cid7 cid5 cid9 cid5 Dw w w p w p w w p new variables This holds Reiter justiﬁed constrained rational default logic w w W p w w p w w p w p cid6 Proof Since w w new variables contained W W classically irredundant W w w classically irredundant We consider processes generated W w w subsets From W w w apply defaults Dw generating w p w p From point exactly processes cid15D W wcid16 cid15D W wcid16 generated extensions differing addition p w w The proper subsets W w w W cid4 w w W cid4 W W cid4 w W cid4 w W cid4 W cid4 W The fourth subset W cid4 equivalent W second default Dw allows derivation p derivable W If W cid4 W W classically irredundant W cid4 w w allows application ﬁrst default Dw deriving p subset equivalent background theory The subsets consider W cid4 w W cid4 w In ﬁrst subset w p generated In second subset w p generated From point exactly processes W cid4 w W cid4 w according D The generated extensions addition p cid2 These lemmas prove reduction QBF formula redundancy raised addition existential quantiﬁer QBF Formally proved assuming existence reduction QBF problem irredundancy default theory given form shown existence reduction QBF additional existential quantiﬁer problem redundancy default theory form We formally deﬁne form follows Deﬁnition 25 Verbatim reduction A reduction validity class QBFs problem formula redundancy default theory verbatim reduction formula QE Q sequence quantiﬁers reduced default theory cid15D W cid16 D D cid4 cid5 cid6 α β E γ W classically irredundant W Dcid4 α β γ depend E Q This deﬁnition instrumental proving reduction QBF formula redundancy added existential quantiﬁer Lemma 13 If exists verbatim polynomial reduction QBF formulae sequence quantiﬁers given set S problem formula redundancy default theory exists verbatim polynomial reduction P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1353 QBF formulae sequence quantiﬁers class T T S problem formula redundancy default theory This holds Reiter justiﬁed constrained rational default logic Proof In order existence reduction let wQF arbitrary QBF formula sequence quantiﬁers T T S By assumption QF wtrue QF wfalse reduced problem formula redundancy ver batim reduction These QBF formulae differ matrices F wtrue F wfalse Therefore resulting default theories cid6 cid5 cid9 cid8 D cid8 D cid5 α β F wtrue γ α β F wfalse γ W cid6 cid9 W Since w occur defaults theories replace F wtrue F wfalse F w F w respectively Indeed justiﬁcations checked consistency formula R containing w consistency R F wtrue consistency R F w consistency R F wfalse consistency R F w cid5 cid5 cid8 D cid8 D cid6 cid9 α β F w γ α β F w γ W cid6 cid9 W By Lemma 11 formula redundancy theories corresponds formula redundancy theories w w moved background theory More precisely redundancy ﬁrst theory correspond existence subset W cid4 W W cid4 w equivalent W w according defaults D αβF The holds second theory α β F γ α β F γ cid8 D cid8 D W w W w cid5 cid6 cid6 cid5 cid9 cid9 γ By Lemma 12 W classically irredundant ﬁrst second theories redundant following theory redundant cid5 cid8 Dw p αcid4 βcid4 γ cid4 αcid4 βcid4 γ cid4 D α β F γ cid7 cid7 cid7 cid7 cid5 cid6cid6 cid9 W w w Dw deﬁned statement Lemma 12 As result formula redundant QF wtrue valid QF wfalse valid wQF valid In order complete lemma reduction arbitrary QBF wQF default theory verbatim reduction Since W classically irredundant assumption w w new variables W w w classically irredundant In theory matrix F QBF affects justiﬁcation default pαβF Therefore reduction verbatim reduction cid2 γ The lemmas valid consequenceequivalence In cases hardness formula redundancy level higher polynomial hierarchy clause redundancy Theorem 25 Formula redundancy cid3p Reiter justiﬁed constrained rational default logic 3 hard faithful equivalence cid3p 4 hard consequenceequivalence Proof The reduction shown Theorem 19 reduction Theorem 22 reductions QBF QBF respectively problem formula redundancy These reductions produce default theory background theory contains single nontautological clause classically irredundant 1354 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 matrix QBF occurs justiﬁcation single default These conditions Lemma 13 As result reduce QBF QBF problem formula redundancy iteratively applying modiﬁcation Lemma 13 variables ﬁrst existential quantiﬁer These reductions polynomial repeated application Lemma 13 increase size involved default theories polynomially application adds literals background theory new defaults size linear size background theory new symbol default cid2 D3 Redundancy defaults The following lemma version Theorem 11 case default redundancy clause redundancy It proves defaults irredundant changing redundancy status Such results generally useful build default theories having speciﬁc properties wrt redundancy In particular following lemma later Theorem 14 prove problems redundancy clauses reduced corresponding problems redundancy defaults Lemma 5 proof For default theory cid15D W cid16 set defaults DI D let p q new variables vi set new variables bijective correspondence defaults DI let D1 D2 D3 deﬁned follows D1 d d d d D2 D3 p q p q p q p q cid5 q p α p β p vi p γ α β q p α β γ γ cid7 cid7 cid7 cid7 cid5 DDI cid7 cid7 cid7 cid7 α β γ DI vi variable corresponding cid6 cid6 α β γ cid15D W cid16 extensions W consistent Reiter justiﬁed constrained rational default logics holds 1 processes cid15D1 D2 D3 W cid16 modulo transformation defaults cid15D W cid16 d added number processes composed d sequence containing defaults D2 2 extensions cid15D1 D2 D3 W cid16 cid15D W cid16 p q added plus single extension p q vi 3 subset D1 D2 D3 faithfully equivalent contains D1 D2 set original defaults corresponding D2 D3 faithfully equivalent D Proof Since defaults D2 D3 q precondition applicable W The defaults applicable W d d mutually exclusive Let consider processes d ﬁrst position Since d generates p defaults D3 applica ble We prove d cid22 successful process cid22 arbitrary sequence containing defaults D2 The preconditions defaults D2 entailed q p The union justiﬁcations consequences defaults process p q p β p vi p γ equivalent p q vi This set consistent background theory contain variables p q vi If subset D1 D2 D3 contain d literal q derived default q conclusion If subset D1 D2 D3 contain default D2 corresponding variable vi extension As result subset D1 D2 D3 equivalent contains d D2 Let consider processes d ﬁrst position Such process contain d Since p q generated defaults D2 D3 simpliﬁed αβ γ removing clauses containing p q literals p q clauses containing As result processes having d ﬁrst position correspond processes original theory P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1355 Provided original theory extensions subset D1 D2 D3 containing d lacks extensions The defaults D3 redundant redundant original theory More precisely subset Dcid4 D1 D2 D3 equivalent D1 D2 D3 Dcid4 contains D1 D2 set original defaults Dcid4cid4 corresponding defaults Dcid4 D2 D3 equivalent D cid2 The following counterexample shows Reiter rational default logic unitary redundancy property wrt redundancy defaults Counterexample 7 proof There exists set defaults D according Reiter rational default logic 1 d D theory cid15Dd cid16 extensions Dd cid14e 2 exists Dcid4 D Dcid4 e D D Proof We use pair defaults lead failure process Removing default theory leads new extension removing lead original set extensions The following defaults realization idea D d1 d2 d3 d4 d1 d2 d3 d4 b b c b b c b c b c b c b c The extensions cid15Dcid4 cid16 Dcid4 D follows Dcid4 D apply d1 d2 leading failure d3 d4 extensions theory Cnb c Cnb c Dcid4 d1 d3 d4 d1 d3 d4 applied time results processes generating extensions Cnb c Cnb c Cnb c Dcid4 d2 d3 d4 similar previous case generated extensions Cnb c Cnb c Dcid4 d1 d2 d3 d1 d2 d3 applied ﬁrst lead failure extension theory Cnb c Cnb c Dcid4 d1 d2 d4 similar case extension Cnb c Dcid4 d3 d4 d3 d4 applied time result generated extensions Cnb c Cnb c As result cid15Dd cid16 extensions d D set extensions different cid15D cid16 On hand cid15D cid16 cid15d3 d4 cid16 extensions cid2 The result holds constrained default logic Counterexample 8 proof There exists set defaults D according constrained default logic 1 d D holds Dd cid14e 2 exists Dcid4 D Dcid4 e D D 1356 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 Proof The defaults following ones D d1 d2 d3 d1 d2 d3 x x b x y b The theory cid15D cid16 selected processes modulo permutation defaults d1 d2 d3 generating extension Cna b Removing d1 d2 causes ﬁrst process d1 d2 creating new extension Cna Cnb respectively On hand removing d1 d2 makes remaining process d3 generates single extension Cna b original theory The default d3 redundant applying transformation Lemma 5 cid2 Justiﬁed default logic unitary redundancy property wrt default redundancy The proof requires lem mas The ﬁrst extendibility processes new defaults added theory Lemma 14 In justiﬁed default logic cid2 selected process default theory cid15Dcid4 W cid16 Dcid4 D exists sequence cid2cid4 defaults DDcid4 cid2 cid2cid4 selected process cid15D W cid16 Proof Let cid2 selected process cid15Dcid4 W cid16 By deﬁnition holds W conscid2d precd W conscid2cid17justd d cid2 As result cid2 successful process cid15D W cid16 Therefore exists cid2cid4 cid2 cid2cid4 selected process cid15D W cid16 justiﬁed default logic failsafe 29 If cid2cid4 contains defaults Dcid4 cid2 closed process cid15Dcid4 W cid16 cid2 In order proving second lemma need intermediate result Lemma 15 In justiﬁed default logic selected processes default theory cid15D W cid16 generating extension E composed exactly defaults following set GENE D cid10 cid11 d D E precd Ecid17justd consd Proof Assume cid2 selected process generating E contain default d GENE D Since E precd Ecid17justd consd E W conscid2 W conscid2 precd W conscid2cid17justd consd As result cid2 d successful process contradicting assumption Let cid2 selected process containing default d GENE D By deﬁnition E cid14 precd Ejustd consd The ﬁrst condition implies W conscid2d cid14 d whichever position d cid2 The second condition implies W conscid2justd consd process cid2 successful contrary sumption cid2 The lemma relates processes theories assumed extension In lemma following theorem process place set defaults expected means set defaults process For example cid2 sequence defaults Dcid4 set defaults cid2 Dcid4 set defaults cid2 D Lemma 16 In justiﬁed default logic W formula D Dcid4 sets default Dcid4 D Dcid4 e W D cid2 selected process cid15D W cid16 exists selected process cid15Dcid4 W cid16 exactly defaults cid2 Dcid4 generating extension generated cid2 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1357 Proof Let E W conscid2 extension generated cid2 By lemma generated defaults GENE D Since E extension cid15Dcid4 W cid16 generated process cid2cid4 exactly defaults GENE Dcid4 GENE D Dcid4 cid2 Dcid4 cid2 The lemmas allows prove justiﬁed default logic monotonic redundancy property wrt sets defaults faithful equivalence Theorem 13 proof Faithful equivalence sets defaults justiﬁed default logic monotonic redundancy property Proof We prove Dcid4 Dcid4cid4 D Dcid4 e extension cid15Dcid4cid4 W cid16 extension cid15D W cid16 converse W D Dcid4cid4 e Let E extension cid15Dcid4cid4 W cid16 Let cid2 generating processes By Lemma 14 exists se quence cid2cid4 defaults DDcid4cid4 cid2 cid2cid4 selected process cid15D W cid16 Let Ecid4 generated extension Since E generated cid2 Ecid4 generated cid2 cid2cid4 Ecid4 E We prove E Ecid4 implies E Ecid4 W D justiﬁed default logic We ﬁrst By Lemma 16 cid2 selected process cid15D W cid16 theory faithfully equivalent cid15Dcid4 W cid16 exists selected process cid2cid4cid4 cid15Dcid4 W cid16 defaults cid2 cid2cid4 Dcid4 generating extension Ecid4 Since cid2cid4 defaults DDcid4cid4 Dcid4 Dcid4cid4 cid2 cid2cid4 Dcid4 cid2 Dcid4 As result cid2cid4cid4 defaults cid2 Dcid4 Since cid2cid4cid4 generates Ecid4 cid2 generates E E Ecid4 We conclude E Ecid4 Let prove converse assume E extension cid15D W cid16 prove extension cid15Dcid4cid4 W cid16 Let cid2 process cid15D W cid16 generates E By deﬁnition following properties true 1 W conscid2 precd d cid2 2 W conscid2justd consd d cid2 By Lemma 16 theory cid15Dcid4 W cid16 selected process cid2cid4 composed exactly defaults cid2 Dcid4 generates extension E Since W conscid2cid4 W conscid2 properties equivalent following ones 1 W conscid2cid4 precd d cid2 2 W conscid2cid4justd consd d cid2 The ﬁrst property implies default d cid2 Dcid4cid4Dcid4 applicable cid2cid4 precondition d entailed W conscid2cid4 process cid2cid4 d successful cid2 contains default cid2cid4 d The second property implies default Dcid4cid4cid2 applicable cid2cid4 As result cid2cid4 sequence composed defaults cid2 Dcid4cid4Dcid4 order form selected process Dcid4cid4 The extension generated process equivalent E process composed superset defaults cid2cid4 subset defaults cid2 processes generate E cid2 References 1 G Ausiello A DAtri D Saccà Minimal representation directed hypergraphs SIAM Journal Computing 15 2 1986 418431 2 G Antoniou A tutorial default logics ACM Computing Surveys 31 4 1999 337359 3 G Antoniou V Sperschneider Operational concepts nonmonotonic logics 1 Default logic Artiﬁcial Intelligence Review 8 1 1994 316 4 P Besnard An Introduction Default Logic Springer Berlin 1989 5 R Bruni Approximating minimal unsatisﬁable subformulae means adaptive core search Discrete Applied Mathematics 130 2 2003 85100 6 P Bossu P Siegel Saturation nonmonotonic reasoning closed world assumption Artiﬁcial Intelligence 25 1985 1663 7 H Büning X Zhao Extension equivalence problems clause minimal formulae Annals Mathematics Artiﬁcial Intelli gence 43 1 2005 295306 1358 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 8 M Cadoli T Eiter G Gottlob Default logic query language IEEE Transactions Knowledge Data Engineering 9 3 1997 448463 9 J Kleer K Konolige Eliminating ﬁxed predicates circumscription Artiﬁcial Intelligence 39 1989 391398 10 J Delgrande T Schaub Expressing default logic variants default logic Journal Logic Computation 15 5 2005 593621 11 JP Delgrande T Schaub WK Jackson Alternative approaches default logic Artiﬁcial Intelligence 70 1994 167237 12 T Eiter M Fink H Tompits S Woltran Strong uniform equivalence answerset programming Characterizations complexity results nonground case Proceedings Twentieth National Conference Artiﬁcial Intelligence AAAI 2005 2005 pp 695 700 13 T Eiter G Gottlob Propositional circumscription extended closed world reasoning cid2p 2 complete Theoretical Computer Science 114 1993 231245 14 H Fleischner O Kullmann S Szeider Polynomialtime recognition minimal unsatisﬁable formulas ﬁxed clausevariable difference Theoretical Computer Science 289 2002 503516 15 C Froidevaux J Mengin A framework default logics European Workshop Logics AI JELIA92 1992 pp 154173 16 C Froidevaux J Mengin Default logics A uniﬁed view Computational Intelligence 10 1994 331369 17 G Gottlob CG Fermüller Removing redundancy clause Artiﬁcial Intelligence 61 1993 263289 18 A Ginsberg Knowledge base reduction A new approach checking knowledge bases inconsistency redundancy Proceedings Seventh National Conference Artiﬁcial Intelligence AAAI88 1988 pp 585589 19 L Giordano A Martelli On cumulative default logics Artiﬁcial Intelligence 66 1994 161179 20 G Gottlob Complexity results nonmonotonic logics Journal Logic Computation 2 1992 397425 21 G Gottlob Translating default logic standard autoepistemic logic Journal ACM 42 1995 711740 22 P Hammer A Kogan Optimal compression propositional Horn knowledge bases Complexity approximation Artiﬁcial Intelli gence 64 1 1993 131145 23 E Hemaspaandra G Wechsung The minimization problem Boolean formulas Proceedings Thirty Eighth Annual Symposium Foundations Computer Science FOCS97 1997 pp 575584 24 T Janhunen Evaluating effect seminormality expressiveness defaults Artiﬁcial Intelligence 144 2003 233250 25 L Kirousis P Kolaitis A dichotomy complexity propositional circumscription Proceedings Nineteenth IEEE Symposium Logic Computer Science LICS 2004 2001 pp 7180 26 P Liberatore Redundancy logic I CNF propositional formulae Artiﬁcial Intelligence 163 2 2005 203232 27 P Liberatore Representability default logic Logic Journal IGPL 13 3 2005 335351 28 P Liberatore On complexity extension checking default logic Information Processing Letters 98 2 2006 6165 29 P Liberatore Where failsafe default logics fail ACM Transactions Computational Logic 8 2 2007 30 P Liberatore Redundancy logic II 2CNF Horn propositional formulae Artiﬁcial Intelligence 172 23 2008 265299 31 J Lang P Marquis In search right extension Proceedings Seventh International Conference Principles Knowledge Representation Reasoning KR 2000 2000 pp 625636 32 V Lifschitz D Pearce A Valverde Strongly equivalent logic programs ACM Transactions Computational Logic 2 4 2001 526541 33 W Lukaszewicz Considerations default logic An alternative approach Computational Intelligence 4 1 1988 116 34 D Maier Minimum covers relational database model Journal ACM 27 4 1980 664674 35 D Makinson General theory cumulative inference Proceedings Second International Workshop NonMonotonic Reasoning Springer 1988 pp 118 36 J McCarthy CircumscriptionA form nonmonotonic reasoning Artiﬁcial Intelligence 13 1980 2739 37 A Meyer L Stockmeyer The equivalence problem regular expressions squaring requires exponential space Proceedings Thirteenth Annual Symposium Switching Automata Theory FOCS72 1972 pp 125129 38 W Marek M Truszczynski NonMonotonic Logics ContextDependent Reasoning Springer Berlin 1993 39 A Mikitiuk M Truszczynski Constrained rational default logics Proceedings Fourteenth International Joint Conference Artiﬁcial Intelligence IJCAI95 1995 pp 15091517 40 G Nordh P Jonsson An algebraic approach complexity propositional circumscription Proceedings Nineteenth IEEE Symposium Logic Computer Science LICS 2004 2004 pp 367376 41 DL Poole A logical framework default reasoning Artiﬁcial Intelligence 36 1988 2747 42 D Poole Default logic Handbook Logic Artiﬁcial Intelligence Logic Programming Volume 3 NonMonotonic Uncertainty Reasoning Oxford University Press Oxford 1994 pp 189215 43 C Papadimitriou D Wolfe The complexity facets resolved Journal Computer System Sciences 37 1988 213 44 R Reiter A logic default reasoning Artiﬁcial Intelligence 13 1980 81132 45 R Rosati Model checking nonmonotonic logics Proceedings Sixteenth International Joint Conference Artiﬁcial Intelligence IJCAI99 1999 pp 7683 46 T Schaub On constrained default theories Proceedings Tenth European Conference Artiﬁcial Intelligence ECAI92 1992 pp 304308 47 P Siegel L Forget A representation theorem preferential logics Proceedings Fifth International Conference Principles Knowledge Representation Reasoning KR96 1996 pp 453460 48 J Schmolze W Snyder Detecting redundant production rules Proceedings Fourteenth National Conference Artiﬁcial Intelligence AAAI97 1997 pp 417423 49 J Stillman The complexity propositional default logics Proceedings Tenth National Conference Artiﬁcial Intelligence AAAI92 1992 pp 794799 P Liberatore Artiﬁcial Intelligence 172 2008 13171359 1359 50 M Truszczynski Strong uniform equivalence nonmonotonic theoriesan algebraic approach Annals Mathematics Artiﬁcial Intelligence 48 34 2006 245265 51 H Turner Strong equivalence logic programs default theories easy Proceedings Sixth International Conference Logic Programming NonMonotonic Reasoning LPNMR01 2001 pp 8192 52 C Umans The minimum equivalent DNF problem shortest implicants Proceedings Thirty Ninth Annual Symposium Foundations Computer Science FOCS98 1998 pp 556563