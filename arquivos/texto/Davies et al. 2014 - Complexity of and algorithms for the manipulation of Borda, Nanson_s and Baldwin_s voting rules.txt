Artiﬁcial Intelligence 217 2014 2042 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Complexity algorithms manipulation Borda Nansons Baldwins voting rules Jessica Davies George Katsirelos b Nina Narodytska Toby Walsh c Lirong Xia d University Toronto Toronto Canada b INRA Toulouse France c NICTA UNSW Sydney Australia d Rensselaer Polytechnic Institute Troy USA r t c l e n f o b s t r c t Article history Received 4 October 2011 Received revised form 12 July 2014 Accepted 13 July 2014 Available online 23 July 2014 Keywords Social choice Voting methods Manipulation Borda voting Nansons voting rule Baldwins voting rule We investigate manipulation Borda voting rule elimination style voting rules Nansons Baldwins voting rules based Borda voting We argue rules number desirable computational properties For unweighted Borda voting prove NPhard coalition manipulators compute manipulation This resolves longstanding open problem computational complexity manipulating common voting rules We prove manipulation Baldwins Nansons rules computationally diﬃcult manipulation Borda NPhard single manipulator compute manipulation In addition Baldwins Nansons rules weighted votes prove NPhard coalition manipulators compute manipulation small number candidates Because NPhardness results compute manipulations heuristic algorithms attempt minimise number manipulators We propose new heuristic methods Experiments methods signiﬁcantly outperform previously best known heuristic method Borda rule Our results suggest whilst computing manipulation Borda rule NPhard computational complexity provide weak barrier manipulation practice In contrast Borda rule experiments Baldwins Nansons rules demonstrate diﬃcult manipulate practice These results suggest elimination style voting rules deserve study Crown Copyright 2014 Published Elsevier BV All rights reserved 1 Introduction Voting simple mechanism combine preferences multiagent systems Results like Gibbard Satterth waite demonstrate pay agents manipulate election misreporting preferences 2434 One appealing escape manipulation computational complexity 3 Whilst manipulation exist computationally diﬃcult ﬁnd With single manipulator small set voting rules known This paper invited revision winner Outstanding Paper award Twentyﬁfth AAAI Conference Artiﬁcial Intelligence AAAI11 Email addresses jdaviescstorontoedu J Davies gkatsigmailcom G Katsirelos ninancstorontoedu N Narodytska tobywalshnictacomau Parts paper appear 14 Corresponding author T Walsh xialcsrpiedu L Xia httpdxdoiorg101016jartint201407005 00043702Crown Copyright 2014 Published Elsevier BV All rights reserved J Davies et al Artiﬁcial Intelligence 217 2014 2042 21 NPhard manipulate unweighted votes second order Copeland rule 133 single transferable vote STV 2 ranked pairs 3540 With manipulators computing manipulation NPhard common voting rules 19402041 One case remains open Borda voting Xia Conitzer Procaccia 41 observe The exact complexity problem computing manipulation unweighted votes known respect prominent voting rules glaring exception Borda Computing manipulation Borda NPhard votes weighted coalition manipulators 12 On hand computing manipulation Borda polynomialtime votes unweighted single manipulator 3 For coalition manipulators unweighted votes conjectured problem NPhard 43 Note exist scoring rules Borda computing manipulation unweighted votes NPhard 41 One important contributions paper close question computational complexity computing coalitional manipulation Borda unweighted votes We prove computing manipulation Borda manipulators NPhard This result proven independently 7 We discuss similarities differences proofs later paper We study voting rules closely related Borda rule Nansons Baldwins rules These elimination style rules use Borda scoring eliminate candidates number rounds The rules real elections University Melbourne 1926 1982 University Adelaide 1968 State Michigan 1920s There reasons consider Nansons Baldwins rules Firstly features appeal opposing camps support Borda Condorcet In particular unlike Borda rule Nansons Baldwins rules Condorcet consistent elect candidate beats pairwise elections Secondly statistical analysis suggests whilst Borda rule vulnerable manipulation 10 Nansons rule particularly resistant 22 We expect Baldwin similarly resistant Thirdly Condorcet consistent rule Nansons Baldwins rules Brandt et al 8 shown types control manipulation problems polynomialtime algorithms votes singlepeaked It interesting question manipulation problems remain polynomial drop domain restriction Nansons Baldwins rules interesting study elimination style rules elimination style rules computationally harder manipulate base rule derived 215 Elkind Lipmaa conjectured computing manipulation closure voting rules successively use rule eliminate candidates NPhard 16 One contributions prove computing manipulation Baldwins rule closure Borda voting NPhard single manipulator We prove manipulation Nansons rule NPhard single manipulator unweighted votes Finally consider problem computing manipulation weighted votes coalition manipulators We Baldwins Nansons rules NPhard manipulate setting candidates respectively Our theoretical results suggest rules computationally diﬃcult manipulate worst case We investigate rules resistant manipulation practice 3739 We propose polynomialtime heuristic algorithms voting rules try minimise number manipulators required ensure partic ular result Our experiments suggest Borda rule easy manipulate practice The heuristics study able ﬁnd optimal manipulation 99 cases Interestingly heuristics signiﬁcantly effective Baldwins Nansons rules These empirical results theoretical results provide evidence recent claim elimination style voting rules tend computationally resistant manipulation 15 The focus paper manipulation problems It interesting future consider control bribery problems 417 Control somewhat different manipulation control problems change structure election number candidates number voters Bribery hand close manipulation change votes Manipulation related possible winner problem 26 dealing uncertainty eliciting aggregating preferences 363233 See 21 longer discussion connections problems The rest paper organised follows In Section 2 provide background Section 3 focuses unweighted manipulation Section 4 weighted case Section 5 presents heuristic algorithms aim ﬁnd minimum number manipulators Section 6 evaluates algorithms experimentally In Section 7 present interesting connections unweighted coalitional manipulation Borda rule problems discrete mathematics We conclude Section 8 2 Background Let C c1 cm set m candidates alternatives A linear order C transitive antisymmetric total relation C The set linear orders C denoted LC An nvoter proﬁle P C consists n linear orders C That P V 1 V n j n V j LC The set nproﬁles denoted Fn A deterministic voting rule r function maps proﬁle C unique winning candidate r F1 F2 C When voters weighted function w associates voter j ﬁxed positive integer w j A voting rule treats weights w j identical copies voter j 22 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Borda rule The Borda rule proposed JeanCharles Borda 1770 positional scoring rule gives score m candidate vote puts candidate ith place The candidate highest total Borda score wins We write sa P total Borda score given candidate proﬁle votes P sa P obvious context A score vector cid7s1 smcid8 indicates ith candidate receives Borda score si The Borda rule parliamentary elections Slovenia modiﬁed form elections Paciﬁc Island states Kiribati Nauru The Borda rule similar scoring rules organisations competitions including Robocup autonomous robot soccer competition XOrg Foundation Eurovision song contest election Most Valuable Player major league baseball The Borda rule good features For instance monotone increasing score candidate helps win It elects Condorcet loser candidate loses pairwise elections However fail elect Condorcet winner candidate beats pairwise elections exists Nansons Baldwins rules These rules derived Borda rule Nansons rule eliminates candidates average Borda score 29 This step repeated reduced set candidates single candidate left A closely related voting rule proposed Baldwin successively eliminates candidates lowest Borda score1 candidate remains 1 The rules closely related Indeed confused literature One appealing properties Nansons Baldwins rules Condorcet consistent elect Condorcet winner exists This follows fact Borda score Condorcet winner average Borda score Both rules satisfy desirable criteria including majority criterion candidate preferred majority voters wins Condorcet loser criterion There properties distinguish For instance Nansons rule satisﬁes reversal symmetry unique winner tie breaking rules voters reverse votes winner changes Baldwins rule Finally desirable properties rule satisﬁes like monotonicity The manipulation problem We formally deﬁne different manipulation problems consider The unweighted coalitional manipulation problem deﬁned follows Deﬁnition 1 rCoalitionalManipulation Given tuple P NM p M P NM nonmanipulators proﬁle p candidate preferred manipulators M set manipulators exist proﬁle P M manipulators rP NM P M p In words exist proﬁle P M manipulators candidate p wins election voting rule r proﬁle P NM P M We drop word coalitional single manipulator The weighted coalitional manipulation deﬁned similarly weights voters nonmanipulators manipulators given inputs Deﬁnition 2 rWeightedCoalitionalManipulation Given tuple P NM p w M P NM nonmanipulators proﬁle p candidate preferred manipulators w weighting function M set manipulators exist proﬁle P M manipulators rw P NM P M p In words exist proﬁle P M manipulators candidate p wins election voting rule r proﬁle P NM P M The corresponding optimisation versions problems seek minimise M number manipulators As common literature break ties favour coalition manipulators This tiebreaking rule originally 3 18 discussion tradition We assume manipulators complete knowledge scores votes nonmanipulators Again tradition literature earliest work The argument forward assumption complete information partial probabilistic information votes nonmanipulators add computational complexity computing manipulation Given set votes n manipulators best manipulators place preferred candidate p ﬁrst Borda rule Hence p Borda score sp nm 1 We deﬁne gap candidate gi sp nm 1 si For p win Borda voting need manipulating votes candidate cid9 p total Borda score equal gi Note gi negative p win Borda voting In proofs paper need refer pairs votes particular form We deﬁne pair votes W uv u cid10 v cid10 Others revOthers cid10 u cid10 v Others total order candidates C u v predeﬁned lexicographic order revOthers reverse 1 If multiple candidates lowest score use tiebreaking mechanism eliminate J Davies et al Artiﬁcial Intelligence 217 2014 2042 23 3 Unweighted coalitional manipulation We start considering computational complexity manipulating Borda Nansons Baldwins rules weighted votes We prove coalitional manipulation problem NPcomplete Borda rule manipulators This settles open problem computational social choice We Baldwins Nansons rules NPcomplete manipulate single manipulator 31 Borda rule In section present main results We prove computing manipulation Borda rule NPhard manipulators Our NPhardness proof uses reduction specialised permutation problem strongly NPcomplete 42 Deﬁnition 3 Permutation Sum Given q integers X1 Xq σ π 1 q σ π Xi cid2 q i1 Xi qq 1 exist permutations We ﬁrst technical lemma shows construct votes nonmanipulators given target sum Lemma 1 Given integers X1 Xm construct time polynomial Borda score candidate ci Xi C 1 m candidate cm1 y C integer C 0 i1 Xi votes m 1 candidates total m cid2 Proof This proof uses construction McGarvey 28 computational social choice literature 416 We increase score candidate 1 candidates candidate score increases 1 For instance suppose wish increase score candidate c1 1 candidates c2 cm 2 candidate cm1 Consider pair votes W c1cm1 deﬁned Section 2 given c1 cid10 cm1 cid10 c2 cid10 cid10 cm1 cid10 cm cm cid10 cm1 cid10 cid10 c2 cid10 c1 cid10 cm1 The score candidate c1 increases m 1 candidates c2 cm m candidate cm1 m 1 By repeated construction votes achieve desired result For example construct Xi copies W ci cm1 1 m As number votes linear m i1 Xi time polynomial sum given integers cid2 cid2 Theorem 1 Unweighted coalitional manipulation Borda rule NPcomplete manipulators Proof The problem clearly NP set manipulator votes preferred candidate win polynomial witness manipulation exists To NPhardness reduce Permutation Sum problem Given instance Permutation Sum q integers X1 Xq assume loss generality 2 Xi 2q 1 q Given instance Permutation Sum create manipulation problem m q 3 candidates p a1 aq2 preferred candidate manipulators p By Lemma 1 construct election nonmanipulators cast votes score vector cid7p a1 aq2cid8 cid3 C 2q 2 X1 C 2q 2 Xq C 2q 2 C y cid4 C 0 y C We manipulators candidate p win election Permutation Sum problem solution Suppose permutations σ π 1 n σ π Xi We construct manipulating votes candidates following scores respectively cid3 q 2 σ 1 σ q 0 q 1 cid3 q 2 π 1 π q 0 q 1 cid4 cid4 Since σ π Xi total score vector cid3 2q 2 C 2q 2 C 2q 2 C 2q 1 y cid4 As y C tiebreak favour manipulators candidate p wins 24 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Suppose successful manipulation To ensure candidate p beats candidate aq1 manipulators candidate p ﬁrst place Similarly manipulators candidate aq1 place candidate aq1 beat preferred candidate Hence ﬁnal score candidate p 2q 2 C The gap ﬁnal score candidate p current score candidate ai 1 q Xi The sum gaps qq 1 Therefore candidate a1 aq gets score q 1 candidate p beaten Hence scores q 1 dangerous candidate candidate aq2 The votes manipulators form cid3 q 2 σ 1 σ q 0 q 1 cid3 q 2 π 1 π q 0 q 1 cid4 cid4 σ π permutations 1 q To ensure candidate p beats candidate j j 1 q 2q 2 X j C σ j π j 2q 2 C Rearranging gives σ j π j X j cid2 q i1 Xi qq 1 Since cid2 q i1 σ σ j π j X j cid2 q i1 π qq1 2 slack inequalities Hence That solution Permutation Sum problem cid2 The result Theorem 1 proved independently Betzler et al 7 different reduction problem Their proof relies basic idea constructing set nonmanipulating votes candidates speciﬁc gaps In contrast proof needs Θm nonmanipulators single dummy candidate construction Lemma 1 Betzler et al use complicated construction introduces Θm dummy candidates needs nonmanipulating votes It follows problem computing manipulation ﬁxed parameter tractable number voters 32 Baldwins rule Our result proved reduction exact 3cover X3C problem Deﬁnition 4 X3C Given sets V v 1 vq q 3r S S1 St t 2 j t S j 3 S j V exist subset S cid15 S element V exactly 3sets S cid15 Theorem 2 Unweighted manipulation Baldwins rule NPcomplete manipulator Proof We reduction X3C Given X3C instance V v 1 vq S S1 St let set candidates C p d b V A p manipulators preferred candidate A a1 d b additional candidates Members A correspond 3sets S Let m C q t 3 The proﬁle P contains parts P 1 control changes score differences candidates set candidates removed P 2 balance score differences candidates We following observations pair votes W c1c2 deﬁned Section 2 First votes following scores candidate sc1 m sc2 m 2 se m 1 e Others Second set candidates Ccid15 C pair candidates e1 e2 C Ccid15 se1 W c1c2CCcid15 se2 W c1c2CCcid15 se1 W c1c2 se2 W c1c2 e1 c2 c1 Ccid15 1 1 e1 c1 c2 Ccid15 0 1 Here W c1c2CCcid15 pair votes obtained W c1c2 removing candidates Ccid15 In words formula states Ccid15 removed score difference e1 e2 increased 1 e1 c2 c1 removed decreased 1 e1 c1 c2 removed cases score difference change Additionally e C c1 c2 sc1 W c1c2 se W c1c2 1 sc2 W c1c2 se W c1c2 1 We use votes form W c1c2 construct ﬁrst proﬁle P 1 We recall m C q t 3 P 1 composed following votes J Davies et al Artiﬁcial Intelligence 217 2014 2042 25 j t v S j 2m copies W v j q m copies W bv mt 6 copies W bp Let avgP 1 average score candidates P 1 That avgP 1 sd P 1 m 16mt mq mt 6 Deﬁne occi number occurrences element v sets S The votes P 1 scores sv P 1 avgP 1 2m occi m sa j P 1 avgP 1 6m sp P 1 sb P 1 sd P 1 avgP 1 mt 6 avgP 1 mq mt 6 avgP 1 It hard verify sb P 1 sp P 1 mq c following votes cid15 V A sc cid15 P 1 sp P 1 2m P 2 composed q sv P 1 sp P 1 m 2m occi mt 4m copies W dv j t sa j P 1 sp P 1 1 mt 1 copies W da j sb P 1 sp P 1 mq 2mt 6 copies W db Let avgP 2 average score candidates P 2 That avgP 2 sp P 2 m 12m tmt 1 2mt 6 The votes P 2 scores cid2 q i1 occi mtq 4mq sv P 2 avgP 2 2m occi mt 4m sa j P 2 avgP 2 mt 1 sp P 2 avgP 2 avgP 2 2mt 6 sb P 2 avgP 2 2m sd P 2 cid2 q i1 occi mtq 4mq tmt 1 2mt 6 Let P P 1 P 2 avgP avgP 1 avgP 2 The combined Borda scores sv P avgP mt 5 sa j P avgP mt 6 1 sp P sb P sd P avgP mt 6 avgP mq mt 6 avgP qmt 5 tmt 6 1 2mt 6 mq We following observations Borda scores candidates P For q sv P sp P m For j t sa j P sp P 1 sb P sp P mq Suppose X3C instance solution S1 Sq3 loss generality rename sub scripts 3sets solution 1 q3 Then let manipulator vote follows p cid10 d cid10 aq31 cid10 cid10 cid10 b cid10 V cid10 aq3 cid10 cid10 a1 In following use Ck denote set candidates eliminated round k The candidates lowest Borda score manipulators vote p followed j s 1 explained With manipulators vote p overtakes j Moreover a1 lowest Borda score means a1 eliminated ﬁrst round We j 1 q3 round 4 j 3 candidate j eliminated round 4 j 2 4 j 1 4 j S j eliminated Suppose holds rounds round 4 j 2 In round 4 j 3 candidate j eliminated By Eq 1 c cid15 C4 j3 S j d p cid9 cid15 cid8 c P C4 j3 cid8 s c sd P C4 j3 sp P C4 j3 sd P C4 j4 sp P C4 j4 mt 1 sp P C4 j3 s sp P C4 j4 P C4 j4 cid9 cid15 v S j sv P C4 j3 sp P C4 j3 sv P C4 j4 sp P C4 j4 2m 26 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Therefore round 4 j 2 difference p candidates S j decreased 2m covers initial difference m difference manipulators vote m 2 Meanwhile d leading large margin Therefore rounds 4 j 2 4 j 1 4 j candidates S j eliminated order elimination matter Eliminating v S j effects score difference p candidates 1 score difference ak v Sk p increased 2m 2 score difference b p decreased m 3 score difference d p decreased number copies W dv P These affect fact candidates S j eliminated rounds 4 j 2 4 j 1 4 j note j k q3 score difference p ak change Therefore round 4 j 1 candidate j 1 eliminated Continuing ﬁrst 4q3 rounds candidates v eliminated decreasing score difference b p m total mq Hence b p tied lowest total Borda score P hard verify ak d higher scores Considering manipulators vote b eliminated This decreases difference d p 3mt 6 cumulative effect set votes P 1 set votes P 2 aq31 aq p mt 6 set votes P 1 It follows t q3 rounds remaining candidates A eliminated Finally p d remain tied P But manipulator prefers p d p winner Suppose manipulator cast vote p winner We ﬁrst note votes P 1 long candidates V A b eliminated difference score d p greater m covered vote manipulator Hence d eliminated candidates round In round b eliminated score b score p We note sb P sp P mq score difference reduced manipulator ranking b p eliminating v 1 vq b However ranking b p reduces score difference m 1 eliminating single candidate V reduces difference m Therefore b drops q candidates V dropped We note v V sv P sp P m manipulators vote cover difference Also way reduce difference eliminating j v S j Therefore v V exists j v S j removed v For j candidate v S j drop j Otherwise difference j p increased 2m reaching 2m 1 Therefore b drops difference covered manipulators vote means p drops j This contradiction assume p drops b On hand candidate ak S j Sk cid9 drop b candidates intersection S j Sk drop difference ak p increased 2m positive Finally note j drops rounds candidates S j drop It follows set candidates A drop candidates V cover corresponds exact cover V After candidates V drop b drops followed rest candidates A d Therefore unweighted manipulation problem Baldwins rule NPcomplete single manipula tor cid2 33 Nansons rule We reduce exact 3cover X3C problem manipulation problem Nansons rule Theorem 3 Unweighted manipulation Nansons rule NPcomplete manipulator Proof The idea proof similar proof Theorem 2 We prove NPcompleteness reduction X3C t 3q loss generality t q add dummy S 1s S Given X3C instance V v 1 vq S S1 St let set alternatives C p d b1 b2 V A p manipulators preferred candidate V v 1 vq A a1 d b1 b2 auxiliary alternatives Without loss generality q t t 3q We use votes W c1c2 deﬁned Section 2 construct proﬁle For Ccid15 cid2 C following observations W c1c2 cid8 c cid15 s W c1c2CCcid15 cid9 C Ccid15 1 cid15 c1 c2 Ccid15 cid15 c2 c1 Ccid15 2 1 c 1 c 0 We note C Ccid15 1 average score alternatives W c1c2CCcid15 Let m q t 4 Again proﬁle parts P 1 control score differences alternatives average score P 2 set initial scores P 1 consists following votes j t 7m2 q3 copies W j b1 J Davies et al Artiﬁcial Intelligence 217 2014 2042 27 v S j m copies W v j q m copies W v p mq copies W pb1 mq t7m2 q3 copies W b1b2 The second proﬁle P 2 consists following votes occv number times v covered 3sets S q m occv copies W dv Let P P 1 P 2 let avgP m 1P 2 We following observations P cid2 q sp P avgP 0 sd P avgP m sb1 P avgP 0 sb2 P avgP mq t7m2 q3 For j t sa j P avgP m2 q3 For q sv P avgP m i1 occv 3mt Suppose X3C instance solution S1 Sq3 loss generality rename subscripts 3sets solution 1 q3 Then let manipulator vote follows p cid10 b1 cid10 b2 cid10 d cid10 aq31 cid10 cid10 cid10 V cid10 aq3 cid10 cid10 a1 The manipulators vote change score candidate respect average m 12 b2 eliminated ﬁrst round The difference score candidate j 1 j q3 average m2 q3 m 12 j 1 Since j q3 seen equal 12 candidates eliminated ﬁrst round No candidates eliminated ﬁrst round candidates V manipulators vote score average candidates receive average manipulator Let C1 C a1 aq3 In second round Eq 2 v V sv P C1 avgP C1 0 The reason v gets mocci 1 points second P 1 S1 Sq3 covers V m points P 1 m occi points P 2 Counting manipulators vote recalling assumed t 2q scores candidates V average score Moreover b2 eliminated ﬁrst round score b1 average Therefore b1 candidates V candidates eliminated second round Let C2 C b1 b2 a1 aq3 V In beginning round b1 b2 candidates V eliminated W c1c2 P c1 c2 eliminated Therefore score remaining candidates average score P C2 Moreover reason later round score remaining candidates average score P restricted remaining candidates Therefore manipulators vote decisive It follows following rounds candidates ranked midposition manipulators votes eliminated The ﬁnal winner manipulators topranked candidate p Next manipulator cast vote p win exists solution X3C instance In ﬁrst round b2 deﬁnitely drops This makes score b1 average score second round mq t7m2 q3 copies W b1b2 P 1 means b1 deﬁnitely drop second round If v candidates remain round score p strictly lower average score m copies W v p P 1 Therefore alternatives V drop ﬁrst second rounds In fact v s drop second round exists j v S j alternative j drops ﬁrst round Moreover q3 alternatives A possibly drop ﬁrst round way drop ranked q3 positions Therefore order p survive round q3 alternatives manipulators vote A correspond exact cover V means X3C instance solution Therefore unweighted manipulation problem Nansons rule NPcomplete manipula tor cid2 Our results complexity manipulating Baldwins Nansons rules signiﬁcantly increase size set voting rules practice known NPhard manipulate single manipulator They contrast Borda computing manipulation single manipulator polynomial time 3 Adding elimination rounds Borda Nansons Baldwins rules increases computational complexity computing manipulation manipulator polynomialtime NPhard 28 J Davies et al Artiﬁcial Intelligence 217 2014 2042 4 Weighted coalitional manipulation In section weighted coalitional manipulation Baldwins Nansons rules NPcomplete It shown weighted coalitional manipulation problem Borda NPhard candidates 12 41 Baldwins rule Similar case Borda prove weighted coalitional manipulation problem Baldwins rule NPhard candidates Our result proved reduction Partition problem Deﬁnition 5 Partition Given set integers A k1 kq numbers sets elements sum K cid2 q i1 ki 2K exist partition A partition witnesses satisﬁability Partition instance called perfect partition Theorem 4 For Baldwins rule weighted votes coalitional manipulation problem NPhard candidates Proof We reduce partition problem We construct coalitional manipulation problem candidates b p manipulators want p win We suppose nonmanipulators voted following table weights 11K 5K 14K 2K 1 5K 5K votes cid10 b cid10 p cid10 p cid10 b b cid10 p cid10 b cid10 cid10 p p cid10 cid10 b p cid10 b cid10 At point scores candidates sa 39K 1 sb 48K 2 sp 39K For integer ki A member manipulating coalition weight 3ki Suppose perfect partition Let manipulators corresponding integers half partition vote cid10 p cid10 b vote p cid10 cid10 b The scores follows sa 48K 1 sb 48K 2 sp 48K Hence b eliminated In round p wins sa 21K 1 sp 27K Thus manipulators p win perfect partition exists Conversely suppose manipulation p wins Suppose eliminated ﬁrst round Then scores second round nonmanipulators sb 27K 1 sp 15K The manipulators prevent b winning Hence b eliminated ﬁrst round If manipulator puts b place b eliminated win Thus votes manipulators cid10 p cid10 b p cid10 cid10 b Consider following partition A constructed successful manipulation In ﬁrst half partition integers associated weighted votes manipulators form cid10 p cid10 b In second half integers associated weighted votes form p cid10 cid10 b Suppose ﬁrst half partition sums K x second half sums K x Then scores sa 48K 1 3x sb 48K 2 sp 48K 3x If x 1 eliminated On hand x 1 p eliminated Hence x 0 perfect partition For candidates add harmless candidates places vote nonmanipulators cid2 Note Coleman Teague Theorem 13 11 provide NPhardness result weighted coalitional manipu lation problem voting rules like Baldwins eliminate candidates Our result Baldwins rule different aspects First Coleman Teague use different tiebreaking rule They break ties manipulator whilst common literature suppose ties broken favour The second difference Coleman Teague specify precise bound number candidates present proof weighted coalitional manipulation Baldwins rule NPhard candidates J Davies et al Artiﬁcial Intelligence 217 2014 2042 29 42 Nansons rule We weighted coalitional manipulation problem Nansons rule NPcomplete candidates However candidates computational complexity computing manipulation Nansons rule polynomialtime Theorem 5 For Nansons rule weighted votes coalitional manipulation problem NPcomplete candidates Proof We reduce partition For partition instance construct coalitional manipulation problem candidates b c p p candidate manipulators wish win We suppose nonmanipulators voted following table weights 22K 1 22K 1 22K 1 22K 1 2K 2 2K 2 1 1 1 2 2 2 votes b cid10 p cid10 c cid10 cid10 c cid10 b cid10 p c cid10 p cid10 b cid10 cid10 b cid10 c cid10 p p cid10 cid10 b cid10 c c cid10 b cid10 p cid10 p cid10 cid10 b cid10 c cid10 b cid10 c cid10 p cid10 b cid10 p cid10 c c cid10 p cid10 cid10 b cid10 c cid10 p cid10 b b cid10 p cid10 cid10 c The total scores nonmanipulators follows sa 28K 38 sb 34K 37 sc 34K 37 sp 24K 38 The average score 30K 375 For integer ki member manipulating coalition weight 2ki Now suppose solution partition instance Let manipulators corresponding integers half partition vote p cid10 cid10 b cid10 c let vote p cid10 cid10 c cid10 b The total scores follows sa 36K 38 sb 36K 37 sc 36K 37 sp 36K 38 The average score 36K 375 The alternatives b c eliminated p wins second round Thus manipulators p win perfect partition exists Conversely suppose successful manipulation Clearly need ensure p eliminated ﬁrst round To ensure manipulators rank p ﬁrst Otherwise score p average score 36K 375 p eliminated Next b c eliminated ﬁrst round p win overall We consider possible sets candidates b c eliminated ﬁrst round There cases 1 eliminated ﬁrst round The scores nonmanipulators second round follows sb 24K 27 sc 24K 27 sp 12K 21 The average score 20K 25 Even maximum possible score 8K manipulators p eliminated This contradicts assumption p wins 2 b eliminated ﬁrst round Note ranked second votes manipulators score average 36K 375 eliminated This contradicts assumption p eliminated ﬁrst round Hence manipulators cast votes rank p ﬁrst second The votes manipulators second round p cid10 cid10 c giving scores sa 22K 23 sc 24K 25 sp 26K 27 The average score 24K 25 Hence eliminated In round p eliminated sp 10K 10 sc 14K 15 average score 12K 125 This contradicts assumption p wins 3 c eliminated ﬁrst round This case symmetric second case 4 b eliminated ﬁrst round In second round scores nonmanipulators sc 14K 15 sp 6K 10 The 4K points manipulators prevent p eliminated This contradicts assumption p wins 5 c eliminated ﬁrst round This symmetric fourth case 6 b c eliminated ﬁrst round This case impossible b c eliminated 8K points manipulators Hence reaches second round Thus way p win b c eliminated ﬁrst round For occur manipulators p ﬁrst place second place If b gets score 2K manipulators ﬁrst round total score greater average 36K 375 eliminated ﬁrst round Similarly 30 J Davies et al Artiﬁcial Intelligence 217 2014 2042 c gets score 2K manipulators eliminated ﬁrst round However ﬁrst second place manipulators votes ﬁxed exactly 4K points divide Hence divide 4K points equally Hence exists solution partition instance For candidates add harmless candidates place vote nonmanipulators cid2 Clearly polynomialtime algorithm compute manipulation Baldwins rule candidates case degenerates majority voting For Nansons rule hand polynomialtime algorithm candidates Theorem 6 For Nansons rule weighted votes coalitional manipulation problem solved polynomial time candidates Proof Consider election candidates b p manipulators want p win We prove successful manipulation manipulators vote p cid10 cid10 b vote p cid10 b cid10 If p win votes p win Therefore simply try votes compute p wins case Suppose manipulators p win We ﬁrst note harm raising p ﬁrst position keeping parts preferences By ensure score p goes scores b The possible change elimination process b drop ﬁrst round p wins Now suppose manipulators rank p positions Let P M denote proﬁle manipulators makes p win Because Nansons rule selects Condorcet loser case majority voters prefer p b p Without loss generality suppose majority voters prefer p We argue manipulators vote p cid10 cid10 b p wins For sake contradiction suppose manipulators vote p cid10 cid10 b p win As manipulators rank p positions score p ﬁrst round P M Therefore p enter lose second round Hence eliminated ﬁrst round second round majority voters prefer b p However having manipulators vote p cid10 cid10 b lowers bs score ﬁrst round compared case vote P M Hence manipulators vote P M b enters second round majority voters prefer b p contradiction Therefore manipulators p win p win voting p cid10 cid10 b voting p cid10 b cid10 cid2 The reason algorithm work manipulating Baldwins rule algorithm requires place p ﬁrst choice manipulating vote However successful manipulation proof Theorem 4 manipulators split p cid10 cid10 b cid10 p cid10 b switching votes group p cid10 cid10 b spoils manipulation The results section suggest Baldwins rule arguably harder manipulate Nansons rule poly nomial manipulate candidates requires candidates NPhard Baldwins NPhard candidates It follows computing manipulation NPhard rules votes weighted number candidates small uncertainty agents voted form probability distribution 12 Note coalitional manipulation problem Borda weighted votes NPhard candidates 12 Thus somewhat surprisingly adding elimination round Borda gives Nan sons rule decreases computational complexity computing manipulation manipulators NPhard polynomialtime 5 Heuristic methods NPhardness characterises worstcase complexity computing manipulation Given manipulators easily candidate win We consider minimising number manipulators required For example Reverse simple heuristic method proposed compute Borda manipulations 43 The method constructs manipu lators vote turn preferred candidate p ﬁrst place remaining candidates reverse order current Borda scores The method continues constructing manipulating votes p wins A long intricate argument shows Reverse constructs manipulation uses manipulator optimal Example 1 Suppose candidates c1 c2 c3 p nonmanipulators cast votes c3 cid10 c1 cid10 c2 cid10 p c2 cid10 c3 cid10 c1 cid10 p Then score vector cid73 4 5 0cid8 We use Reverse construct manipulation makes candidate p win Reverse ﬁrst constructs vote p cid10 c1 cid10 c2 cid10 c3 The score vector cid75 5 5 3cid8 Reverse constructs vote p cid10 c1 cid10 c2 cid10 c3 It matter ties 1 2 3 broken The score vector cid77 6 5 6cid8 Finally Reverse constructs vote p cid10 c3 cid10 c2 cid10 c1 The score vector cid77 7 7 9cid8 Hence Reverse requires manipulating votes candidate p win As later vote optimal solution J Davies et al Artiﬁcial Intelligence 217 2014 2042 31 Following 43 propose new heuristic methods The ﬁrst algorithms work voting rules However algorithms designed speciﬁcally elimination style Baldwins Nansons rules All algorithms attempt construct manipulation speciﬁc number manipulators Hence order ﬁnd best possible number manipulators algorithms run manipulator manipulation We refer manipulation k manipulators kmanipulation 51 Manipulation matrices In section prove auxiliary results needed develop heuristic algorithms We view Reverse greedily constructing manipulation matrix A manipulation matrix n m matrix A n number manipulators m number candidates Ai j k ith manipulator adds score k candidate c j The jth column matrix A j set scores received candidate c j n rows permutation 0 m 1 We require sum jth column equal gc j maximum score candidate c j receive defeating p Reverse constructs matrix row row Our new methods break straightjacket constructing manipulation matrix rowwise order To achieve advantage interesting result relaxes constraint row permutation 0 m 1 This lets construct relaxed manipulation matrix This n m matrix contains n copies 0 m 1 sum jth column equal gc j In relaxed manipulation matrix row repeat integer provided rows compensate having integer Theorem 7 Suppose n m relaxed manipulation matrix A Then n m manipulation matrix B column sums Proof The proof induction n In base case n 1 set B1 j A1 j j 1 m In inductive step assume theorem holds relaxed manipulation matrices n 1 rows Let hi sum ith column A We use perfect matching suitable bipartite graph construct ﬁrst row B appeal induction hypothesis n 1 m relaxed manipulation matrix constructed removing values ﬁrst row A We build bipartite graph follows The ﬁrst half bipartite graph consists m vertices V im1 i0 j1 Each vertex V represents score appear ﬁrst second half graph consists m vertices W jm row B Each vertex W j represents jth column A We add edge V W j bipartite graph 0 m 1 j 1 m k 1 n Ak j An edge V W j means score taken jth column A Note multiple edges pair vertices By construction degree vertex n Suppose U V 0 m 1 Recall ﬁrst Hall condition 25 states perfect matching exists V NV sets vertices V NV neighbourhood V Since degree vertex n nU edges leaving U For reason vertex NU accommodate n incoming edges Therefore nU nNU Hence Hall condition holds perfect matching exists Consider edge V W j perfect matching We construct ﬁrst row B setting B1 j As matching 0 m 1 occurs column exactly time We construct n 1 m matrix A removing element equal B1 j column j By construction value 0 m 1 occurs n 1 times column sums h j B1 j Hence relaxed manipulation matrix We appeal induction hypothesis This gives n m manipulation matrix B column sums A cid2 We extract proof polynomialtime method convert relaxed manipulation matrix manipulation matrix Hence propose new heuristic methods construct relaxed manipulation matrices This advan tageous greedy methods like proposed ﬂexibility placing integers good positions relaxed manipulation matrix 52 Largest Fit Our ﬁrst heuristic method Largest Fit inspired bin packing multiprocessor scheduling Constructing n m relaxed manipulation matrix similar packing nm objects m bins constraint capacity different bins extra constraint number items n placed bin The problem similar scheduling nm unit length jobs different memory requirements n different processors constraint total memory footprint n different jobs running clock tick schedule length ﬁxed m Krause et al 27 proposed simple heuristic problem schedules unassigned job largest memory requirement time step maximum remaining available memory n jobs assigned Largest Fit works similar way construct relaxed manipulation matrix It assigns largest unallocated score largest gap More precisely ﬁrst assigns n instances m 1 column p matrix best 32 J Davies et al Artiﬁcial Intelligence 217 2014 2042 manipulators p ﬁrst place votes It allocates remaining n 1m numbers reverse order columns corresponding candidate currently smallest score received n votes manipulators Unlike Reverse necessarily ﬁll matrix rowwise order Example 2 Consider Example 1 We start score vector cid73 4 5 0cid8 One manipulator increase score candidate p beat c2 c3 Therefore need manipulators Largest Fit ﬁrst puts 3s column 4 relaxed manipulation matrix This gives score vector cid73 4 5 6cid8 The largest score 2 Largest Fit puts column 1 larger gap This gives score vector cid75 4 5 6cid8 The largest score 2 Largest Fit puts column 2 giving score vector cid75 6 5 6cid8 The largest scores 1 Largest Fit puts columns 1 3 giving score vector cid76 6 6 6cid8 Finally remaining scores 0 columns 2 3 columns contain scores This gives relaxed manipulation matrix corresponding manipulating votes p cid10 c2 cid10 c1 cid10 c3 p cid10 c1 cid10 c3 cid10 c2 With votes p wins based tiebreaking rule Unlike Reverse Largest Fit constructs optimal manipulation manipulators As Section 55 Largest Fit Reverse fact incomparable There inﬁnite family problems Largest Fit ﬁnds optimal manipulation Reverse vice versa 53 Average Fit Our second heuristic method Average Fit takes account size gap number scores added column If columns gap want choose column contains fewer scores To achieve look average score required ﬁll gap size gap divided number scores added column Each manipulator gives largest score m 1 preferred candidate p distribute remaining scores candidates Initially manipulator m 1 scores distribute We manipulator scores distributed far unassigned scores At step Average Fit selects column score distribute column First column chosen selecting column size remaining gap divided number scores added column largest We tiebreak choosing column containing fewest scores Then unassigned score chosen distribute column We choose largest unassigned score ﬁt columns gap If unassigned score ﬁt gap largest unassigned score chosen Example 3 Consider Examples 1 2 We start score vector cid73 4 5 0cid8 This method computes identically Largest Fit manipulators needed Like Largest Fit Average Fit ﬁrst puts 3s column 4 relaxed manipulation matrix This gives score vector cid73 4 5 6cid8 The largest score 2 Average Fit puts column 1 largest average 32 This gives score vector cid75 4 5 6cid8 The largest score 2 Average Fit puts column 2 average 22 1 giving score vector cid75 6 5 6cid8 The largest scores 1 Average Fit puts ﬁrst 1 column 1 average 11 1 column 3 average 12 This gives score vector cid76 6 6 6cid8 Finally remaining scores 0 columns 2 3 columns contain scores This identical manipulation computed Largest Fit votes p cid10 c2 cid10 c1 cid10 c3 p cid10 c1 cid10 c3 cid10 c2 For example Average Fit beats Largest Fit Theorem 9 For example Largest Fit beats Average Fit Theorem 10 54 Eliminate Reverse Eliminate Our methods designed account elimination style nature Baldwins Nansons rules The ﬁrst method Eliminate repeatedly constructs votes desired candidate ﬁrst place candidates reverse current elimination order Thus ﬁrst candidate eliminated place second candidate eliminated penultimate place For Nansons rule order candidates eliminated round Borda score round The intuition Eliminate desired candidate elimination order whilst keeping rest order unchanged Our ﬁnal method RevEliminate repeatedly construct votes desired candidate ﬁrst place candidates current elimination order For instance ﬁrst candidate eliminated second place For Nansons rule order candidates eliminated round inverse Borda score round The intuition RevEliminate desired candidate elimination order assign largest Borda scores dangerous candidates It easy methods eventually compute manipulation Nansons Baldwins rule desired candidate wins Example 4 We revisit Examples 13 operation Eliminate Baldwins rule The initial score vector cid73 4 5 0cid8 p eliminated ﬁrst round In second round score vector cid71 2 3cid8 c1 gets eliminated J Davies et al Artiﬁcial Intelligence 217 2014 2042 33 round c3 c2 tie score vector cid71 1cid8 We assume tie broken favour c2 wins election Therefore Eliminate ﬁrst manipulator vote p cid10 c2 cid10 c3 cid10 c1 With manipulator gives score vector cid73 6 6 3cid8 With tie breaking favour p c1 eliminated ﬁrst round score vector second round cid74 3 2cid8 p eliminated second round This means need manipulator By construction Eliminate change step p eliminated The candidates eliminated order Hence vote second manipulator p cid10 c2 cid10 c3 cid10 c1 The initial score vector cid73 8 7 6cid8 The candidate c1 eliminated ﬁrst round In second round score vector cid75 3 4cid8 Therefore c3 eliminated In round c2 p tied score vector cid72 2cid8 Since break ties favour preferred candidate Eliminate computed manipulation manipulators This optimal With RevEliminate ﬁrst manipulator votes p cid10 c1 cid10 c3 cid10 c2 This gives score vector cid75 4 6 3cid8 Hence p eliminated ﬁrst round The score vector second round cid73 2 4cid8 Hence c2 eliminated In round The score vector second round cid71 2cid8 Hence c1 eliminated c3 wins The vote second manipulator p cid10 c2 cid10 c1 cid10 c3 This gives score vector cid76 6 6 6cid8 We suppose tie breaking eliminates c3 The score vector second round cid74 4 4cid8 We suppose tie breaking eliminates c2 The score vector round cid72 2cid8 Since break ties favour p RevEliminate computed optimal manipulation 55 Theoretical properties First Largest Fit incomparable Reverse exists inﬁnite family problems Largest Fit ﬁnds optimal manipulation Reverse vice versa Theorem 8 For Borda voting exists election Largest Fit ﬁnds optimal 2manipulation Reverse produces 3manipulation Proof We suppose nonmanipulators votes σ σ cid15 σ cid71 2 m 1 0cid8 let preferred candidate p cm Let σ cid15 cid10 m 2 1 m 2 2 m 2 m 2 1 1 2 cid11 0 m 2 Then σ σ cid15 cid10cid12 cid13 cid12 1 2 m 2 1 m 2 cid13 cid12 2 m 2 1 m 2 m 2 cid13 cid12 1 m 2 cid13 1 cid12 m 1 m 2 cid13 cid11 0 2 This gives m 2 1 m 1 Before continuing rename candidates scm P 0 sci P m 2 2 words exists score m 2x 1 x m 2 2x 1 1 x m 1 m 2 Recall preferred candidate p cm The ﬁrst vote generated Reverse v 1 p cid10 c1 cid10 c2 cid10 cid10 cm1 sci P v 1 m m 1 candidates ci cid9 cm This larger score distinguished candidate 2 sp P v 1 m 1 Therefore manipulator added Without loss generality suppose vote v 2 cm cid10 m 1 m 1 c1 cid10 c2 cid10 cid10 cm1 The resulting scores competing candidates sci P v 1 v 2 m 2 52m 2 So candidate c1 larger score sp P v 1 v 2 2m 2 Therefore Reverse ﬁnd 2manipulation Note Reverse uses additional manipulator optimal successfully ﬁnd 3manipulation 1 m 1 Largest Fit ﬁrst highest scores m 1 manipulators preferred candidate Then iteration Largest Fit place score multiset S2 0 m 2 cid18 0 m 2 manipulation ma trix B The ﬁrst m 1 iterations Largest Fit place kth largest score S 2 kth column matrix B 1 k m 1 Note kth largest score m 2 cid19k 12cid20 Let Bm1 tentative manipulation matrix point write sumBm1i sum elements ith column Then score candidate ci partial manipulation sumBm1i sci P m 2 cid19i 12cid20 m sumBm1i sci P 2 sumBm1i 1 sci1 P 1 m 2 relative order candidates scores change The 2 The m 1 iterations Largest Fit multiset scores available point S cid15 2 kth column matrix B 1 k m 1 So column receive element place kth largest score S 1 cid21i 12cid22 Let B2m1 matrix loop terminates The score candidate ci manipulation m 2 B2m1 sumB2m1i sci P m 2 cid19i 12cid20 m 1 cid21i 12cid22 2m 1 2 achievable score candidate p 2m 1 Therefore Largest Fit ﬁnds 2manipulation Fig 1 illustrates scores placed matrix B Largest Fit shaded area represents scores sci P cid2 1 cid18 0 m 2 0 m 2 m 2 cid15 2 Unfortunately Largest Fit share guarantee Reverse worst case requires manipu lator optimal In fact number extra manipulators Largest Fit bounded 34 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Fig 1 The 2manipulation generated Largest Fit election Theorem 8 Theorem 9 For Borda voting exists election 4 candidates 2k votes k divisible 36 Reverse Average Fit ﬁnd optimal manipulation Largest Fit requires k9 3 additional manipulators Proof Consider Borda election scores candidates nonmanipulators P vote sc1 P 6k sc2 P 4k sc3 P 2k sp P 0 These scores achieved 2k votes c1 cid10 c2 cid10 c3 cid10 p Reverse use 2k manipulators voting p cid10 c3 cid10 c2 cid10 c1 achieve score 6k candidates This optimal manipulation To Average Fit ﬁnd optimal manipulation note initial gaps 0 2k 4k averages 0 1 2 candidates c1 c2 c3 respectively In ﬁrst step Average Fit assign score 2 candidate c3 continue long average candidate c3 greater candidate c2 To ﬁnd happens let x number iterations solve 4k2x 1 x 2k This means Average Fit 2k scores 2 2kx candidate c3 Similarly scores 1 candidate c2 scores 0 candidate c1 This means manipulators vote p cid10 c3 cid10 c2 cid10 c1 optimal manipulation It remains argue Largest Fit requires 2k k9 4 manipulators We exploit fact Largest Fit monotonic sense ﬁnds successful Borda manipulation given number manipulators succeeds Additional manipulators Largest Fit opportunity increase score preferred candidate candidates Assume contradiction ﬁnd manipulation n 2k k9 4 19k9 4 manipulators We follow execution Largest Fit contradiction obtained By monotonicity Largest Fit use 2k k9 4 fewer manipulators Note given deﬁnition n k divisible 4 9 nk integer Let B denote relaxed manipulation matrix constructed Largest Fit let Bi 1 m denote ith column We write sumBi sum elements Bi First algorithm place k 2s B3 point sumB3 2k 2k 4k s2 P Then begin place 2s columns B2 B3 evenly remaining n k 2s placed B At point B2 contains nk 2s number 2s B3 contains k nk k2 n2 k2 19k9 42 14k9 2 19k9 4 n So point B3 B2 B2 fewer elements B3 Both columns sum 4k 2 nk 2 46k9 4 5k k9 4 6k Therefore algorithm start putting 1s B2 B3 evenly column sums reach 6k B3 gets ﬁlled In fact B3 ﬁlled sum reaches 6k B3 requires nk 2 elements ﬁlled point sumB2 sumB3 46k9 4 nk 51k9 6 5k 2k3 6 6k Now algorithm continue putting k3 6 1s B2 point sumB2 51k9 6 k3 6 6k Then algorithm start putting 1s evenly B1 B2 runs 1s B2 ﬁlled In fact 1s run B2 ﬁlled B2 requires n nk k3 6 2k3 6 elements equal number remaining 1s spread B1 B2 So B2 2k3 62 k3 3 additional 1s total sumB2 4k 2 nk k3 6 k3 3 19k3 3 19k3 12 3n Since sumB2 3n manipulation n 19k9 4 manipulators Therefore Largest Fit requires n 1 2k k9 3 manipulators cid2 2 nk nk 2 2 2 2 2 2 2 Average Fit incomparable Largest Fit Like Reverse Average Fit ﬁnds optimal manipulations elections proof Theorem 9 However exist examples Largest Fit ﬁnds optimal manipulation Average Fit J Davies et al Artiﬁcial Intelligence 217 2014 2042 35 Theorem 10 For Borda voting exist election Largest Fit ﬁnds optimal manipulation Average Fit requires additional vote Proof We failed ﬁnd simple example search randomly generated instances gave following Consider election manipulators wish candidate c8 win 8 nonmanipulators voted follows voters 3 1 1 1 2 vote c1 cid10 c2 cid10 c3 cid10 c4 cid10 c5 cid10 c6 cid10 c7 cid10 c8 c1 cid10 c2 cid10 c3 cid10 c4 cid10 c5 cid10 c7 cid10 c6 cid10 c8 c1 cid10 c2 cid10 c3 cid10 c6 cid10 c5 cid10 c4 cid10 c7 cid10 c8 c7 cid10 c1 cid10 c6 cid10 c5 cid10 c4 cid10 c2 cid10 c3 cid10 c8 c8 cid10 c7 cid10 c6 cid10 c5 cid10 c4 cid10 c3 cid10 c2 cid10 c1 This gives score vector cid7c1 c8cid8 cid741 34 30 27 27 26 25 14cid8 On problem Largest Fit ﬁnds optimal manipulation makes ﬁnal candidate win Average Fit requires additional vote The calculations shown Appendix A cid2 So far instances Reverse performs better Average Fit Finally consider properties heuristic algorithms respect Baldwins Nansons rules It appears harder ﬁnd approximately optimal manipulation rules Borda rule For heuristic methods examples heuristic computes manipulation uses manipulators optimal The interesting result Reverse shown require extra manipulator optimal Borda rule 43 result transfer Baldwins Nansons rules Indeed ﬁxed number candidates Reverse require unbounded number extra manipulators Theorem 11 For Baldwins rule exists election 7 candidates 42n votes n Reverse computes manip ulation 10n votes optimal Proof Consider election candidates b c d e f p p preferred candidate manipulators We deﬁne V uv pair votes u cid10 v cid10 Others cid10 p revOthers cid10 u cid10 v cid10 p Others ﬁxed ordering candidates revOthers reverse Note votes differ pair votes W uv deﬁned Section 2 The nonmanipulators cast following votes 3n copies V ab V bc V cd V V e f In addition 6n copies votes p cid10 cid10 Others revOthers cid10 p cid10 After nonmanipulators voted sa s f 138n sb sc sd se 141n sp 42n If 18n manipulators vote identically p cid10 cid10 cid10 f p wins The following table shows scores candidates 6 rounds sa 228n 189n 150n 111n 72n 30n sb 213n 174n 135n 96n 54n sc 195n 156n 117n 73n sd 177n 138n 96n se s f sp 138n 159n 117n 150n 126n 102n 78n 54n 30n Round 1 Round 2 Round 3 Round 4 Round 5 Round 6 By tiebreaking rule p wins round This manipulation provides upper bound size optimal manipulation Baldwins rule Reverse p ﬁrst place f order remaining candidates Without loss generality suppose Reverse breaks ties constructing vote p cid10 cid10 f cid10 b cid10 c cid10 d cid10 e It alternates vote p cid10 cid10 f cid10 e cid10 d cid10 c cid10 b After n manipulating votes constructed scores candidates f level 142n n2 p 48n From manipulators p ﬁrst place alternate order candidates Without loss generality suppose Reverse breaks ties constructing vote p cid10 cid10 b cid10 c cid10 d cid10 e cid10 f It alternates vote p cid10 f cid10 e cid10 d cid10 c cid10 b cid10 At 28n votes required total p place Hence Reverse requires 10n extra manipulators compared optimum number Baldwins cid2 Theorem 12 For Nansons rule exists election candidates 110n votes Reverse computes manipulation 4n votes optimal 36 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Table 1 Percentage elections drawn impartial culture model heuristic optimal manipulation Borda voting m 4 8 16 32 64 128 Total Inst 2771 5893 5966 5968 5962 5942 32 502 Reverse Largest Fit Average Fit 942 855 768 711 668 653 749 929 877 819 807 800 799 830 1000 993 986 985 984 980 987 Largest Fit beats Average Fit 000 003 005 002 005 003 003 Proof Consider election b c p p preferred candidate manipulators We use votes W uv deﬁned Section 2 Nonmanipulators cast following votes 15n copies W ac W bc W bp 10n copies W ap After nonmanipulators voted sa 190n sb 195n sc 135n sp 140n The average score 165n If 21n manipulators vote identically p cid10 c cid10 cid10 b p wins The following table shows scores candidates rounds average sa Round 1 Round 2 1965n 655n 211n 65n sb 195n sc 177n sp 203n 66n Hence p wins round This manipulation provides upper bound size optimal manipulation Nansons rule Reverse construct vote p cid10 c cid10 cid10 b After 5n manipulating votes scores b level Reverse alternate p cid10 c cid10 b cid10 p cid10 c cid10 cid10 b In total Reverse construct 25n manipulating votes 15n p cid10 c cid10 cid10 b 10n p cid10 c cid10 b cid10 At point p wins Nansons rule demonstrated following table average sa sb sc Round 1 Round 2 2025n 135n 205n 135n 185n 205n 135n sp 215n 135n Note p wins second round tiebreaking assumption Hence Reverse uses 4n extra manipulators compared optimum number Nansons cid2 These results demonstrate Baldwins Nansons rules Reverse approximate optimal number manipulators additive constant Borda 6 Experimental results To test performance heuristic methods practice ran experiments Our experimental setup based 38 We generated votes drawn impartial culture model PolyaEggenberger urn model 5 In urn model votes placed urn drawn random Votes placed urn b votes type This captures varying degrees social homogeneity We set b m approximately 50 chance second vote ﬁrst In models generated 22 27 votes varying m 61 Borda rule First present results Borda rule Manipulation Borda rule easily modelled constraint satisfaction problem We property obtain optimal solutions instances We tested 1000 instances problem size determined returned manipulations optimal modelling problem ﬁnding optimal manipulation constraint satisfaction problem solving solver Gecode 23 The constraint solver optimal manipulation 32 502 32 679 distinct impartial culture elections 1 hour timeout Results shown Table 1 Both Largest Fit Average Fit provide signiﬁcant improve ment Reverse solving 83 99 instances optimality Reverse solves fewer problems optimality J Davies et al Artiﬁcial Intelligence 217 2014 2042 37 Table 2 Percentage elections drawn urn model heuristic optimal manipulation Borda voting m 4 8 16 32 64 128 Total Inst 3929 5501 5502 5532 5494 5571 31 529 Reverse Largest Fit Average Fit 933 856 792 724 676 645 763 663 501 411 363 330 306 417 1000 999 995 995 997 999 997 Largest Fit beats Average Fit 000 000 002 000 000 000 000 Table 3 Average number manipulators required heuristic elections drawn impartial culture model Borda rule n 4 8 16 32 64 128 Opt 930 633 708 786 862 929 Reverse Largest Fit Average Fit 936 648 731 815 895 963 937 645 726 806 882 949 930 634 710 788 863 931 Table 4 Average number manipulators required heuristic elections drawn urn model Borda rule n 4 8 16 32 64 128 Opt 4221 3267 3408 3506 3676 3770 Reverse Largest Fit Average Fit 4228 3282 3429 3534 3709 3806 4294 3378 3568 3697 3892 3998 4221 3267 3409 3507 3677 3771 number candidates increases Average Fit suffer problem Average Fit solved candidate instances 98 128 candidate ones Table 3 shows average number manipulators heuristics compared average optimal number manipulators We note 32 502 instances Reverse k vote manipulation Average Fit Average Fit k 1 vote manipulation Average Fit worse solution Reverse Furthermore Largest Fit manipulators optimum With urn model able ﬁnd optimal manipulation 31 529 31 530 elections 1 hour timeout Tables 2 4 results Reverse solves proportion urn instances impartial culture instances 76 However performance Largest Fit drops signiﬁcantly It worse Reverse solving 42 instances optimality Furthermore contrast impartial culture elections Largest Fit extra manipulators Largest Fit 14 manipulators optimum The reason behaviour nonmanipulators proﬁles urn instances similar proﬁles proof Theorem 9 Largest Fit requires unbounded number additional manipulators The good performance Average Fit maintained It optimal manipulation 99 instances It lost Reverse beaten Largest Fit instance experiments These results suggest Borda manipulation NPhard practice simple heuristic algorithms pro posed compute optimal manipulations vast majority cases Thus appears Borda elections vulnerable manipulation 62 Baldwins Nansons rules It diﬃcult model unweighted coalitional manipulation problem Baldwins Nansons rules constraint satisfaction problem scores candidates vote change round Hence partitioned experiments parts small problems ﬁnd optimum solution bruteforce manner large problems heuristic algorithms scale Our ﬁrst set experiments 3000 elections ﬁve candidates ﬁve nonmanipulating voters This small ﬁnd optimal number manipulators brute force search determine heuristic computes optimal solution We threw 20 instances generated preferred candidate 38 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Table 5 Percentage elections drawn impartial culture model ﬁve candidates heuristic ﬁnds optimal manipulation Rules Baldwin Nanson Borda Reverse 744 746 957 Largest Fit Average Fit Eliminate RevEliminate 744 760 988 758 780 998 622 654 957 752 669 107 Table 6 Percentage elections drawn urn model ﬁve candidates heuristic ﬁnds optimal manipulation Rules Baldwin Nanson Borda Reverse Largest Fit Average Fit Eliminate RevEliminate 751 781 961 754 790 927 773 798 999 689 722 961 834 794 44 Table 7 Average number manipulators required heuristic elections drawn impartial culture model Baldwins rule n 4 8 16 32 64 128 Reverse Largest Fit Average Fit Eliminate RevEliminate 225 299 431 593 856 1213 225 307 441 603 865 1224 225 301 440 614 884 1241 244 335 479 661 954 1337 221 306 467 684 1102 1606 Table 8 Average number manipulators required heuristic elections drawn impartial culture model Nansons rule n 4 8 16 32 64 128 Reverse Largest Fit Average Fit Eliminate RevEliminate 215 291 413 580 851 1207 217 296 427 588 858 1209 215 284 405 581 882 1300 225 305 444 618 899 1260 228 321 499 746 1204 1790 Table 9 Average number manipulators required heuristic elections drawn urn model Baldwins rule n 4 8 16 32 64 128 Reverse Largest Fit Average Fit Eliminate RevEliminate 326 595 1164 2170 4309 8219 323 596 1166 2178 4337 8182 324 599 1187 2235 4424 8362 335 637 1274 2467 4907 9537 314 582 1152 2241 4570 9180 won manipulators vote Results given Tables 56 The tables demonstrate heuristics effective ﬁnding optimal manipulation Borda rule perform Baldwins Nansons rules For example AverageFit ﬁnds optimal manipulation Borda rule ﬁnd optimal solutions quarters time Baldwins Nansons rules Note Eliminate RevEliminate strictly speaking deﬁned Nansons Baldwins rules With Borda rule simply use manipulating votes construct Baldwins rule These preferred candidate ﬁrst place eventually successful constructing successful Borda manipulation In second set experiments eschew computation optimal manipulation order use larger problems This ampliﬁes differences different heuristic methods Similarly Section 61 tested 1000 instances problem size gives 6000 instances total Tables 710 results average number manipulators The results Nansons Baldwins rules Reverse works slightly better overall compared LargestFit AverageFit outperform methods especially problems large number candidates This contrasts results Borda rule previous section LargestFit AverageFit better Reverse In cases AverageFit effective LargestFit urn elections Nansons rule These experimental results suggest Baldwins Nansons rules harder manipulate practice Borda Heuristic methods work Borda rule signiﬁcantly effective rules Overall Reverse Largest Fit AverageFit appear offer best performance heuristic dominates J Davies et al Artiﬁcial Intelligence 217 2014 2042 39 Table 10 Average number manipulators required heuristic elections drawn urn model Nansons rule n 4 8 16 32 64 128 Reverse Largest Fit Average Fit Eliminate RevEliminate 320 593 1162 2236 4456 8718 319 598 1193 2278 4550 8755 320 595 1164 2253 4477 8676 328 613 1216 2400 4881 9702 322 609 1237 2439 4969 9943 Fig 2 Permutation matrix restricted diagonals sums PMRDS 7 Related problems There exists interesting connection problem ﬁnding coalition manipulators Borda voting rule problems discrete mathematics problem ﬁnding permutation matrix restricted diagonals sums PMRDS 9 problem ﬁnding multi Skolem sequences 30 We consider connection reasons First future advances adjacent areas insights new manipulation algorithms complexity manipulation Second connection reveals interesting open case Borda manipulation Nordh conjectured gaps gi candidates distinct manipulation polynomial time 31 A permutation matrix n n Boolean matrix obtained identity matrix permutation columns Hence permutation matrix contains single value 1 row column Consider 2n 1 diagonals matrix numbering right left let di sum elements ith diagonal Finding permutation matrix diagonal sums form given sequence d1 d2n1 permutation matrix restricted diagonals sums problem This problem occurs discrete tomography need construct permutation matrix Xrays row column diagonal The Xray values row column values diagonal represented sequence d1 d2n1 We transform Borda manipulation problem m 1 candidates 2 manipulators i1 gi mm 1 PMRDS problem m m matrix Note use m denote number candidates excluding preferred candidate Note manipulation problem tight gaps matched exactly candidates score manipulation In parallel description transformation illustrate following example ﬁve candidates Our preferred candidate 4 Let cid74 4 6 6 0cid8 score vector preferred candidate 0 score cid74 4 2 2cid8 corresponding gap vector We label rows permutation matrix scores given ﬁrst manipulator columns permutation matrix reverse scores given second manipulator We label element matrix sum row column labels Fig 2a shows labelling example gray cid2 m Note element diagonal labelled value Therefore diagonal labelled value k represents gap size k manipulation problem Hence sum diagonal di labelled k encodes number occurrences gaps size k For example d3 2 ensures gaps size 2 d5 2 ensures gaps size 4 The remaining diagonal sums di 1 2 4 6 7 ﬁxed zero Consider solution PMRDS Fig 2b Suppose cell P x y contains value We conclude ﬁrst manipulator gives score x second gives score m y 1 candidate gap x m y 1 In example cell P 0 1 contains ﬁrst manipulator gives score 0 second gives score m y 1 4 1 1 2 candidate gap 2 By examining cells value obtain complete votes manipulators example 4 cid10 1 cid10 2 cid10 0 cid10 3 ﬁrst manipulator 4 cid10 0 cid10 3 cid10 1 cid10 2 second ﬁll gaps cid74 4 2 2cid8 As number ones diagonal equal number occurrences corresponding gap constructed manipulator votes candidate winner The total scores cid78 8 8 8 8cid8 Finding coalitional manipulation Borda rule manipulators connected problem ﬁnding multi Skolem sequences construction Steiner triple 30 Given multiset positive integers 40 J Davies et al Artiﬁcial Intelligence 217 2014 2042 Table 11 Operation Largest Fit trying ﬁnd manipulation manipulators The ﬁrst seven columns gaps candidates In ﬁnal column use notation x y indicate Largest Fit assigns vote x candidate y The preferred candidate c8 shown table gets 7 manipulators score 42 We omit 0 scores c1 c2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 8 8 8 8 8 8 8 8 8 8 4 4 4 4 4 4 1 1 1 1 1 1 0 0 0 c3 12 12 12 12 12 7 7 7 7 7 7 3 3 3 3 3 3 1 1 1 1 1 1 0 0 c4 15 15 15 15 9 9 9 9 9 5 5 5 5 2 2 2 2 2 0 0 0 0 0 0 0 c5 15 15 15 9 9 9 9 9 4 4 4 4 4 4 4 1 1 1 1 1 1 1 1 1 0 c6 16 16 10 10 10 10 10 5 5 5 5 5 5 5 2 2 2 2 2 0 0 0 0 0 0 c7 17 11 11 11 11 11 6 6 6 6 6 6 2 2 2 2 2 2 2 2 0 0 0 0 0 Vote 67 66 65 64 53 57 56 55 44 42 43 47 34 36 35 32 23 24 26 27 11 12 13 15 cid15 m H h1 hm need decide exists partition P set 1 2m pairs pi p H pi p pi p ulators gaps G g1 gm cid2 cid15 1 m cid15 P There reduction manipulation problem m 1 candidates 2 manip i1 gi mm 1 special case multi Skolem sequences i1 hi m2 similar reduction scheduling problem 302 The multi Skolem sequence instance corre sponds manipulation instance deﬁned H 2m g1 1 2m gm 1 If manipulation given votes σ π partitions 2m σ π 1 satisfy 2m σ π 1 2m gi 1 Conversely suppose ex cid15 cid15 ists partition P set 1 2m pairs pi p P 1 m Then pi p 1 2m 2m gi 1 1 gi votes given σ 2m pi π p cid15 1 m hi pi p cid15 1 satisfy σ π 2m pi p cid2 m cid15 8 Conclusions In paper investigated theoretically empirically computational complexity manipulation problems Borda voting rule extensions Borda voting Baldwins Nansons rules We proved NPhard compute coalitional manipulation Borda rule manipulators This resolves longstanding open question computational complexity unweighted coalitional manipulation common voting rules We showed rules Baldwins Nansons rules derived Borda rule NPhard manipulate weighted unweighted votes Because NPhardness results proposed simple heuristic methods We showed compute optimal manipulations Borda rule randomly generated elections This suggests Borda rule resistant manipulation practice In contrast heuristic algorithms perform Baldwin Nanson elections suggesting elimination style rules resistant manipulation Borda rule Acknowledgements George Katsirelos partially supported ANR UNLOC project ANR 08BLAN028901 Nina Narodytska Toby Walsh supported Australian Department Broadband Communications Digital Economy Australian Research Council Asian Oﬃce Aerospace Research Development AOARD104123 Toby Walsh currently supported German Federal Ministry Education Research Alexander von Humboldt Foundation Lirong Xia acknowledges RPI startup fund NSF Grant 1136996 Computing Research Association CIFellows Project Vincent Conitzers NSF CAREER 0953756 IIS0812113 support 2 The reduction implicitly assumes m i1 hi m2 author conﬁrmed private communication cid2 J Davies et al Artiﬁcial Intelligence 217 2014 2042 41 Table 12 Operation Average Fit trying ﬁnd manipulation manipulators Since algorithm works averages averages fractions convey actual gap remaining number votes c1 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 c2 84 84 84 84 84 84 84 84 84 84 84 84 84 84 53 53 53 53 32 11 c3 124 124 124 124 124 124 124 73 73 73 73 73 73 42 42 11 11 11 11 11 c4 154 154 154 154 93 93 93 93 93 52 52 52 11 11 11 11 11 11 11 11 c5 154 154 154 94 93 93 93 93 42 42 42 42 42 42 42 42 11 11 11 11 c6 164 164 103 103 103 103 52 52 52 52 52 11 11 11 11 11 11 11 11 11 c7 174 113 113 113 113 62 62 62 62 62 21 21 21 21 21 21 21 00 00 00 Vote 67 66 65 64 57 56 53 55 44 47 46 44 33 32 33 35 27 22 22 Appendix A Proof Theorem 10 In Table 11 operation Largest Fit trying ﬁnd manipulation manipulators This eas ily seen optimal maximum score preferred candidate achieved manipulators 35 defeat 1st candidate Based assignments ﬁnd perfect matching manipulation matrix shown described Theorem 7 This gives following votes manipulators cid70 4 2 3 1 5 6 7cid8 cid71 0 4 2 3 6 5 7cid8 cid70 1 5 4 6 3 2 7cid8 cid70 3 1 6 5 2 4 7cid8 In Table 12 operation Average Fit At point algorithm place 2 candidates gap 1 failed ﬁnd manipulation cid2 References 1 J Baldwin The technique Nanson preferential majority election Trans Proc R Soc Vic 39 1926 4252 2 J Bartholdi J Orlin Single transferable vote resists strategic voting Soc Choice Welf 8 4 1991 341354 3 J Bartholdi C Tovey M Trick The computational diﬃculty manipulating election Soc Choice Welf 6 3 1989 227241 4 J Bartholdi C Tovey M Trick How hard control election Math Comput Model 16 89 1992 2740 5 S Berg Paradox voting urn model effect homogeneity Public Choice 47 1985 337387 6 N Betzler B Dorn Towards dichotomy ﬁnding possible winners elections based scoring rules J Comput Syst Sci 76 8 2010 812836 7 N Betzler R Niedermeier G Woeginger Unweighted coalitional manipulation Borda rule NPhard Proceedings 22nd Interna tional Joint Conference Artiﬁcial Intelligence IJCAI11 2011 pp 5560 8 F Brandt M Brill E Hemaspaandra L Hemaspaandra Bypassing combinatorial protections polynomialtime algorithms singlepeaked electorates Proceedings 24th AAAI Conference Artiﬁcial Intelligence AAAI10 2010 pp 715722 9 S Brunetti A Del Lungo P Gritzmann S Vries On reconstruction binary permutation matrices binary tomographic constraints 10 J Chamberlin An investigation relative manipulability voting systems Behav Sci 30 1985 195203 11 T Coleman V Teague On complexity manipulating elections Proceedings 13th Conference Computing The Australasian Theory Theor Comput Sci 406 12 2008 6371 Symposium CATS2007 2007 pp 2533 gan 1951 Computational Social Choice COMSOC10 2010 Artiﬁcial Intelligence AAAI2012 2012 Computation ISAAC 2005 2005 pp 206215 12 V Conitzer T Sandholm J Lang When elections candidates hard manipulate J ACM 54 3 2007 133 13 AH Copeland A reasonable social welfare function Notes seminar applications mathematics social sciences University Michi 14 J Davies G Katsirelos N Narodytska T Walsh An empirical study Borda manipulation Proceedings 3rd International Workshop 15 J Davies N Narodytska T Walsh Eliminating weakest link making manipulation intractable Proceedings 26th AAAI Conference 16 E Elkind H Lipmaa Hybrid voting protocols hardness manipulation Proceedings 16th International Symposium Algorithms 17 P Faliszewski E Hemaspaandra L Hemaspaandra How hard bribery elections J Artif Intell Res 35 1 2009 485532 18 P Faliszewski E Hemaspaandra L Hemaspaandra J Rothe A Richer understanding complexity election systems Fundamental Problems Computing Essays Honor Professor Daniel J Rosenkrantz 2009 pp 375406 42 J Davies et al Artiﬁcial Intelligence 217 2014 2042 19 P Faliszewski E Hemaspaandra H Schnoor Copeland voting ties matter Proceedings 7th International Joint Conference Autonomous 20 P Faliszewski E Hemaspaandra H Schnoor Manipulation Copeland elections Proceedings 9th International Conference Autonomous Agents Multiagent Systems AAMAS08 2008 pp 983990 Agents Multiagent Systems AAMAS10 2010 pp 367374 21 P Faliszewski A Procaccia AIs war manipulation winning AI Mag 31 4 2010 5364 22 P Favardin D Lepelley Some results manipulability social choice rules Soc Choice Welf 26 2006 485509 23 Gecode Team Gecode generic constraint development environment 2006 24 A Gibbard Manipulation voting schemes general result Econometrica 41 4 1973 587601 25 P Hall On representatives subsets J Lond Math Soc 1935 2630 26 K Konczak J Lang Voting procedures incomplete preferences Proceedings IJCAI2005 Workshop Advances Preference Handling 27 KL Krause VY Shen HD Schwetman Analysis taskscheduling algorithms model multiprogramming systems J ACM 2005 22 4 1975 522550 28 D McGarvey A theorem construction voting paradoxes Econometrica 21 4 1953 608610 29 E Nanson Methods election Trans Proc R Soc Vic 19 1882 197240 30 G Nordh A note hardness Skolemtype sequences Discrete Appl Math 158 8 2010 6371 31 G Nordh Personal communication 2011 32 M Pini F Rossi B Venable T Walsh Incompleteness incomparability preference aggregation Proceedings 20th International Joint Conference Artiﬁcial Intelligence IJCAI2007 2007 pp 14641469 33 M Pini F Rossi B Venable T Walsh Incompleteness incomparability preference aggregation Artif Intell 175 78 2011 12721289 34 MA Satterthwaite Strategyproofness Arrows conditions existence correspondence theorems voting procedures social welfare func tions J Econ Theory 10 2 1975 187217 35 TN Tideman Independence clones criterion voting rules Soc Choice Welf 4 1987 185206 36 T Walsh Uncertainty preference elicitation aggregation Proceedings 22nd AAAI Conference Artiﬁcial Intelligence AAAI2007 2007 pp 38 37 T Walsh Where hard manipulation problems The phase transition manipulating veto rule Proceedings 21st Interna tional Joint Conference Artiﬁcial Intelligence IJCAI2009 2009 pp 324329 38 T Walsh An empirical study manipulability single transferable voting Proceedings 19th European Conference Artiﬁcial Intelli gence ECAI2010 2010 pp 257262 39 T Walsh Where hard manipulation problems J Artif Intell Res 42 2011 129 40 L Xia M Zuckerman A Procaccia V Conitzer J Rosenschein Complexity unweighted coalitional manipulation common voting rules Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI2009 2009 pp 348353 41 L Xia V Conitzer A Procaccia A scheduling approach coalitional manipulation Proceedings 11th ACM Conference Electronic Com 42 W Yu H Hoogeveen JK Lenstra Minimizing makespan twomachine ﬂow shop delays unittime operations NPhard J Sched 7 5 merce EC2010 2010 pp 275284 2004 333348 43 M Zuckerman A Procaccia J Rosenschein Algorithms coalitional manipulation problem Artif Intell 173 2 2009 392412