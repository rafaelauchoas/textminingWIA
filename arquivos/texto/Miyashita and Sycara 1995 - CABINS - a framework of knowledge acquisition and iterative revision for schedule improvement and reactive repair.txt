Artificial Intelligence 76 1995 377426 Artificial Intelligence CABINS frarnework knowledge acquisition iterative revision schedule improvement reactive repair Kazuo Miyashita avl Katia Sycara b2 Electrotechnical Laboratory ll4 Umezono Tsukuba Ibaraki 305 Japan h The Robotics Institute Carnegie Mellon University Pittsburgh PA 15213 USA Received 14 June 1993 revised 27 April 1994 Abstract Practical scheduling problems generally require allocation resources presence large diverse typically conflicting set constraints optimization criteria The illstructuredness solution space desired objectives scheduling problems difficult malize This paper describes casebased learning method acquiring contextdependent user optimization preferences tradeoffs incrementally improve schedule quality predictive scheduling reactive schedule management response unexpected execution events The approach implemented CABINS uses acquired user preferences dynamically modify search control guide schedule improvement During iterative repair cases exploited 1 repair action selection 2 evaluation intermediate repair results 3 recovery revision failures The method allows dynamically switch pair heuristic actions operates respect particular local view problem offers selective repair advantages Application repair action tunes search procedure characteristics local repair problem This achieved dynamic modification search control bias There priori characterization modification required repair actions However initial experimental results approach able capture effectively utilize user scheduling preferences present scheduling model b produce schedules high quality unduly sacrificing efficiency predictive schedule generation reactive response unpredictable execution events variety criteria recognized important real operating environments Corresponding author Email miyasitaetLgojp 2 Email katiacscmuedu 00043702950950 1995 Elsevier Science BV All rights reserved SSDIOOO437029400089l 378 K Miyashita K SycaraArticial Intelligence 76 1995 377426 1 Introduction consistent manner limited number resources task described assigning The scheduling activities time associated problem release dates The goal scheduling constraints respect problem constraints mize tardiness jobs minimize workinprocess cycle utilization minimize preferences Scheduling avoid violation constraints activity precedence produce schedules mini resource respect user optimize set objectives inventory resource capacity constraints time The produced WIP maximize schedule reasons following problem hardest subset Computational difficult automate complexity Scheduling 131 interactions Due iii problems scheduling tight objectivespreferences multiple optimization effect local optimization problems minimize weighted For practical objectives inventory maximize scheduling general decision global optimality interactions nonlinear nature scheduling objectives NPcomplete ii Tight constraint constraints way predict simplest objective Illstructured tardi desirable resource utilization ness minimize workinprocess satisfied Moreover optimization objectives interact conflict To optimize objective jeopardize optimality objectives The relationships global objectives extremely high quality difficult balance conflict schedule typically ing objectives user preferences domain constraints cap presence contextdependent user preferences tured scheduling model The value incorporating constraints increasingly recognized model The definitionevaluation fraught difficulties tradeoffs need tradeoffs Such 281 good techniques currently lacking scheduling environments operational reflect environments environment Operational dynamic Unpredictable iv Dynamic factories events machine breakdown operator absence happen schedule execution Therefore schedule static predictive created assuming brittle predictable reactive perform unforeseen events schedule execution effective world scheduling response It clear scheduling schedule systems revision The scheduling problem addressed general In revisionbased scheduling structive 12401 schedule schedules initial schedule heuristic scratch response implications incremental unanticipated incrementally 291 simulated annealing approaches revisionbased scheduling constructed incremental construction 2954624 In constructive types methods approaches merging partial complete suboptimal mmconflict In 361 predictive schedules generated techniques schedule revision repair precomputed events schedule execution The approach analyzes repaired specific schedule features matches behavioral characteristics react reasoning CBR based 42 K Miyashita K SycaraArtifcial Intelligence 76 1995 377426 319 reactive actions appropriate control model These approaches assume tion This assumption contextdependent objective general user preferences function selected according static predetermined existence explicit optimization limiting practice optimization expressed func criteria reflect terms single global repair approach response feasible In paper revisionbased schedule quality based preferences provides unified framework tradeoffs improvement schedule management iterative schedule guaranteed executable schedule repair guaranteed monotonic time allowed repair exhibiting anytime executable behavior This desirable quality especially certain CABINS implemented acquisition user optimization preferences reactive utilize iteration CABINS produces quality increase 111 reactive contexts unforeseen events Unlike systems solution limited time 5429 executability end repair Our approach uses integration casebased 221 fine granu Integrating CBR scheduling scheduling knowledge regularities repair action dynamically domain assume exhibits domain scheduling mechanisms expressing dependencies adapt search procedure differentially stems variety motivations Although schedule repair context suitable case In CABINS case represents application Section CBR allows capture reuse larity constraintdirected constraintbased illstructured captured albeit approximately activity revision action features schedule 41 detailed description case representation dependency future similar situations On hand bias scheduling decisions schedule tightly coupled nature scheduling decisions tech cause constraint parts niques necessary revisions schedule casebased acceptability outcome repair The evaluation criteria judging action multiple criteria associated tradeoffs Therefore tradeoffs trade collectively offs diverse problem tradeoffs case base ways preferences selecting repair action depending features repair context evaluation preferences selection application specific repair action approach capture users schedule evaluation preferences solving circumstances ripple eects spread conflicts repair actions applied specific schedule enable CABINS reflected parts Therefore constraint propagation simple manner The case base incorporates case base Hence user preferences violations determine distribution examples reflect user judgment repair outcome solving practical context dependent A revisionbased implicitly evaluation difficult resulted attractive conflicting revision induce There known efficient search algorithms limited set simple objectives computation construction meet optimization finding solution cheap suboptimal preferable objectives required schedule optimization scheduling problems l makespan generally unpredictable schedule incrementally practice interrupt 131 Therefore repaired 380 K Miyashita K SycaraArttjicial Intelligence 76 I 995 377426 repair process use interim result execution time allowed repair For example dispatch heuristics low computational cost myopic nature tailored particular optimization objectives Hence general address issues balancing tradeoffs respect variety optimization objectives As consequence result suboptimal schedules However efficiency widely practitioners Therefore 5130 combining pointed researchers repair methodology simple gradient search 171 advocated work dispatch driven scheduler creation initial schedule promising realworld scheduling environments Experimental results reported Section 521 indicate CABINS produce substantial schedule improvements starting schedules generated methods number dispatch heuristic constraintbased scheduler 211 neural networks Our approach evaluated extensive controlled experimentation job shop scheduling problems Experimental results reported Section 5 1 approach potentially effective capturing user preferences optimization tradeoffs improves schedule quality irrespective method difficult model 2 initial schedule generation 3 produces high quality schedules lower computational cost compared simulated annealing wellknown iterative repair method 4 suitable reactive scheduling method maintains high schedule quality minimizes disruptions face execution time failures The rest paper organized follows Section 2 gives background job shop scheduling presents constraintbased techniques CABINS Section 3 introduces casebased schedule optimization Section 4 presents case representation indexing retrieval application schedule retrieved revision It presents extensive example Section 5 presents experimental results validate approach Section 6 discusses related work Section 7 conclusions future work 2 Job shop scheduling Job shop scheduling deals allocation limited set resources number activities associated set jobsorders The dominant constraints job shop scheduling temporal activity precedence resource capacity constraints The ac tivity precedence constraints jobs release date date restrict set acceptable start times activity The capacity constraints restrict number activities use resource particular point time create conflicts activities competing use resource overlapping time intervals The goal scheduling produce schedules respect temporal relations resource capacity constraints optimize set objectives In model allow substitutable resources activity job able deal parallel machine job shop scheduling complicated version job shop scheduling problem 311 CABINSs revisionbased approach phases 1 create initial schedule utilizing method dispatching rules 2 improve possibly suboptimal schedule generated step K Miyaslzita K SycaraArtcial Intelligence 76 1995 377426 381 incorporate user preferences tradeoffs In rest section present job shop scheduling problem framework constraint satisfaction present search strategy propagate effects repair actions CABINS 21 Constraints The job shop scheduling problem requires scheduling set jobs J 51 Jn set physical resources RES RI R Each job JI consists set operationsactivities A A AL scheduled according process routing specifies partial ordering activities Af BEFORE Af Each job Jl release date rdr signifies earliest time job started job date ddl job finished Each activity Af fixed duration duf variable start time stf The domain possible start times activity initially constrained release dates job activity belongs In order successfully executed activity Af requires different resources milling machine jig machinist Rt 1 j pf pool physical resources choose r I rijk E RES 1 k 6 qij possible milling Gj Irijl 1 t I14ii machines More formally problem defined follows Variables k vector variables associated activity Ai 1 I n 1 6 nl includes ii resource requirement Rt 1 j activity activity start time stf alternatives ii Constraints The nonunary constraints problem types constraints defined process routings translate linear precedence inequalities type stf duf st Af BEFORE A capacity constraints restrict use resource activity time translate disjunctive constraints form VpVq Rk Riq V stj duf st V st duf stf Constraints simply express use different resources activities A Af overlap 3 Time assumed discrete activity start times end times integer values Each resource requirement RI selected set resource alter natives Gj C RES These constraints include nonrelaxable release dates initially nonrelaxable dates activities job need performed 22 Objectives preferences In practice scheduling objectives numerous complex conflicting mathematics problem extremely difficult simplest ob 3 These constraints generalized dealing resources capacity larger 382 K Miyashita K SycurdArtifcial Intelligence 76 1995 377426 objectives 131 Below define 13 develop jectives literature INS These objectives difficult WEIGHTEDTARDINESS2 evaluation schedules easily represented traditional model precisely For example schedule approaches mathematical simplifications x WIP3 induced CABINS performance common evaluation CAB objectives statedependent optimization criterion user gave consistent ways explored l Waiting time W time elapses completion preceding activity Ai_ l TotuE waiting rdr 1 start processing Af time WI sum waiting time activities belong J Clearly Wl CF W b Completion time Cl equality Cl rdl Cz Wi duf time processing 51 finishes We l Lateness simply LI date JI LI Cl ddl difference completion time l Tardiness 8 l Flowtime TI delay completion JI takes nonzero value Thus Tr maxO 51 FI time Jl spends date ddl Note Fl Cl rdl Fl Cyl Wj duf l Mukespun l Workinprocess C latest completion WIP summation total waiting time entire orders Cm max Ci time WZP inventory c Wi l Weighted tardiness T weighted average tardiness Weight considered penalty cost The quality schedule tardy T Cz wiz function extent necessity having users preferences preferences We illustrate simple example We assume machine factory machine Let assume jobs released time jobs Each job consists single activity simplest achieves users scheduling factory single processed factory floor job B finishes Fig 1 shows schedule results problem Suppose schedulel reduce switch schedule2 Fig 1 WIP job B zero Suppose wishes tardiness job A In simple schedule positions job A job B The schedule generated date job A tardy The WIP job revise possible In schedule A indicated schedule repair switch In schedule2 job tardy WIP schedule2 WIP job B larger schedulel Even extremely simple example higher quality difficult preferences user Simply adding WIP plus weighted sum realistic overall sum reflects depend past shipping factors produces enormous number contexts making users preferences considered consideration taking tardiness minimizing importance objectives tradeoffs client job priori The combination user preferences load factorywarehouse decide schedule capture represent importance user willing These tradeoffs relative resulting records difficult factors K Miyashita K SycaraArtijcial Intelligence 76 1995 377426 383 nfrease aa 4 B Due Date A Due Dae B Schedulel Schedule2 WIP Job A Tardiness Job A WIP Job B Time Horizon Fig I Example conflicting objectives D problem model That reason authors think acquiring preferences adaptively important 23 Constraintbased search procedure The constraintbased search procedure CABINS applying selected repair action Section 44 based 42401 Search interleaved application consistency enforcing mechanisms variablevalue ordering heuristics attempt avoid deadend states A search state associated partial solution Each search state defines new constraint satisfaction problem variables vari ables instantiated constraints initial problem constraints constraints reflecting current assignments A schedule built opportunistically selecting activity scheduled assigning reservation resource start time Each time new activity scheduled new constraints added initial scheduling constraints reflect new activity reservation These new constraints propagated consistency checking If inconsistency constraint violation detected propagation backtracks Other wise scheduler selects new activity schedule reservation activity The process terminates activities scheduled successfully More specifically search proceeds according following steps ii iii iv v vi If operations scheduled stop step 2 Apply consistency enforcing procedure If deadend detected backtrack select alternative reservation left step 1 stop Select operation scheduled variable ordering heuristic Select promising reservation operation value ordering heuristic Create new search state adding new reservation assignment current partial schedule step 1 384 K Miyashita K SycaraArtcial Intelligence 76 1995 377426 The details step follows l Consistency enforcement The consistency enforcing procedure hybrid proce dure differentiates precedence constraints capacity constraints It guarantees deadend states occur result capacity constraint vio lations Essentially consistency respect precedence constraints enforced updating search state pair earliestlatest possible start times unscheduled operation Consistency enforcement respect capacity constraints tends signifi cantly expensive disjunctive nature constraints For capacity constraints forward checking type consistency checking generally carried Whenever resource allocated operation time interval forward checking procedure checks set remaining possible start times operations requiring resource removes start times conflict new assignment l Variable ordering Because scheduling NEhard important focus search ways avoid deadend states This accomplished utilizing good vari able activity value reservation ordering heuristics A variable ordering determines activity going scheduled value dering determines reservation assigned selected activity The variable ordering heuristic utilized called Activity Resource 42 selects critical activity activity Reliance ARR highest probability involved capacity constraint violation particular time intervals For details approach 42 l Value ordering Once activity scheduled selected value ordering heuristic determines reservation assign activity The value ordering heuristics relevant paper l Least constraining value ordering LCV This heuristic selects reservation likely prevent activities scheduled LCV uses unbiased utility function Fig 2 activity preference particular start time activitys available start times l Greedy value ordering GV This heuristic selects reservation based local preferences expressed static piecewise linear biased utility function associated activity Fig 2 This biases value ordering prefer activity start times high utility values For scheduling problems substi tutable resources static utilities express differential resource preferences selection activitys reservation Experiments 42 4 small job shop problems 20 ac indicate ARR variable ordering LCV value ordering produces tivities suboptimal schedules minimal backtracking ARR variable ordering GV value ordering statically predetermined utility functions henceforth referred constraintbased scheduling CBS shown produce high quality schedules compared SMU heuristic 231 4 The experiments run 20 randomly generated scheduling problems K Miyaslzita K SycaraArtifcial Intelligence 76 1995 377426 385 A biasedutilityvalue I unbiasedutilityvalue releasedate allowable latest start date Fig 2 Utility functions In CABINS schedule revision proceeds iteratively activity time The set activities involved constraint violations result repairing activity conjlict set repair The repair process unschedules activities conflict set modifies bias utility functions associated This bias reflects effects learning contextdependent user preferences evaluations repair outcomes stored case base The search procedure modied utility functions ARR variable ordering GV value ordering schedule conflict set activities got unscheduled repair In words time activity repaired CBS reschedule subset activities members conflict set overall schedule utility functions adaptively modied based information case base Section 44 describes repair process 3 Casebased schedule optimization In order optimize schedules users satisfaction need know context dependent user preferences represent scheduling exploited reasoning process Rulebased approaches having potential capture tradeoffs rules require considerable knowledge acquisition effort contextdependent 371 Our approach uses casebased reasoning CBR potential deal ing noisy data 392 acquiring user knowledge complex domains 7281 expending effort knowledge acquisition compared knowledge acquisition rulebased systems 45261 Because characteristics scheduling domain described previous section capturing contextdependent user preferences CBR natural method knowledge acquisition However applying CBR schedule im provement numerical optimization problem challenging In general CBR illstructured symbolic problems planning 141850 legal reasoning 3381 argumentation 491 conceptual design 431 medical diagnosis 201 primary concern plausibility correctness resulting artifact plan argument design computational efficiency process artifact 386 K Miyashita K SycaraArtijicial Intelligence 76 1995 377426 quality The challenges faced decide constitutes case domain schedule optimization case indices The intuitive answer consider schedule case This solution attractive right information transferred scheduling scenario little adaptation new problem solved relative ease However high degree nonlinearity scheduling constraints objectives small difference input problem specification problems case base general result large variations results terms modification needed quality resulting schedule A second difficulty respect having schedule case came form indices choose Indexing case terms goals achieved problems avoided 141 good guideline served CBR systems However domain goals achieved optimization criteria explicitly stated reflect contextdependent user preferences tradeoffs Even optimization objectives explicit nonlinearities problem retrieving schedule achieved objectives desired ones current problem little help adapting retrieved schedule current problem specifications Moreover unpredictable ripple effects constraint propagation tight constraint interactions problems avoided obvious discovered causal model scheduling assumed Since impossible judge priori effects scheduling decision optimization objectives scheduling decision applied schedule outcome evaluated terms resulting effects scheduling objectives Therefore having single scheduling decision case provide advantages terms focus traceability problem solving process Focus traceability mean capture users evaluation results single scheduling decision case result unacceptable apply scheduling decision scheduling entity available scheduling decisions exhausted acceptable result obtained Therefore clear better single activityoperation scheduling job scheduling entity scheduling decision applied Since result scheduling decision needed evaluated regard optimization preferences schedule clear constructive methods incrementally augment partial schedule scheduling decision point unsuitable information provided having purposes Moreover contextual scheduling complete schedule chosen underlying useful applying CBR Therefore scheduling methodology revisionbased Hence CABINS case describes application schedule revision decision single activity job Operationalization means schedule repair action We identified classes schedule repair Section 4 We use constraint actions propagation rest propagate new schedule The search space schedule Each application effects schedule repair results strategy tactic described revision decision schedule repair action K Miyashita K SycaralArtificial Intelligence 76 1995 377426 381 suitable case indexing indices divided predictive case features space complete schedules regularities domain CABINS incorporate acceptable user optimization tradeoffs Hence ones capture good tradeoffs Although schedule optimization illstructured hypothesis captured albeit approximate manner features In CABINS categories The category consists globalfeatures Since results schedule revision associated single activity pertain schedule global features express characteristics schedule relevant operate contextual information second category Since necessitated reasoning lookahead range lookahead analysis Associated time horizon effects repair action bounds repair effects repair action schedule priori intractable confine repair time horizon Section 41 estimate analysis limited local features allow CABINS repair action The local features comprise general constraint selection particular predict repair action possible ripple effects application general unlimited The schedule application repair action evaluated resulting tradeoffs The user predict userdefined schedule correctness quality modification quality introducing evaluation results schedule revisions This evaluation cases repair history The repair history constitutes features Therefore capture constraint violations Nevertheless case base incorporates distribution examples tradeoffs diverse scheduling repair performance effects modification terms actions schedule user perform consistent result worsening case recorded category case collectively circumstances provided CABINS searches applied second space complete schedules Control search provided selection CBR ways First search control evaluation repair action application selected repair action The outcome retrieve case suggests global local features indices repair action applied The features associated repair history retrieve cases suggest evaluations repair outcome For detailed description case representation casebased casebased Section 41 schedule indexing resulted 4 CABINS overview In CABINS general tactics appropriate associated particular high level description types repairs repair strategies repair tuc classes tics A repair strategy schedule defects Each repair strategy variety repair tactics associated defect classes The repair particular local patching model We identified result changing modijcution Local patching resource assign sequence activities factory operations For ments Local patching strategies example costly disruptive tardiness repair goal reduce job selection repair actions allocated general types repair strategies resources rearranging local patching specializations general different specific 388 K Miyashita K SycaraArtijicial Intelligence 76 1995 377426 I Scheduling Problem 1 Scheduler incomplete Domain Knowledge Test Data Suboptimal Schedule l Repair CABINS Retrieve similar case Evaluate result I Contextual Domain Knowledge I L m f Repair Humanexpert sdct rpair actions CaseBase case acquisition m j Feature Values Evaluation Criteria I Repair Tactic Explain Evaluat romu1t fd1UrS I I Improved Schedule Fig 3 CABINS architecture include reduce slack activities tardy job reduce idle time resources needed activities tardy job Model modification reformulates problem changing model parameters number jobs scheduled global constraints changing release dates increasing resource capacity increasing number shifts Model modification strategies facilitate solution problem global constraint relaxations However practice model modification strategies costly implement buy new equipment pay extra shifts factory subcontract jobs outside contractors The default CAB INS strategy local patching computationally challenging task improve schedule relaxing imposed constraints date constraints If local patching unsuccessful fulfilling repair goal repair episode considered failure Our experiments run stringent assumptions Fig 3 depicts overall architecture CABINS CABINS composed modules 1 initial schedule builder 2 interactive schedule repair case acqui sition module 3 automated schedule repair case reuse module CABINS operate following modes exhibit different levels autonomy Knowledge acquisition interactive mode acquire user preferences generate K Miyashita K SycaraArtcial Intelligence 76 1995 377426 389 case base Decisionsupport interactive mode previously acquired case base incorporates user preferences suggests revision actions evaluation outcomes user accept suggestion override new suggestion Automatic mode previously acquired user preferences reused guide scheduling decisions interaction user In experiments reported Section 5 CABINS operated autonomously The repair process autonomous operating mode following basic steps ii iii iv v A job initial suboptimal schedule randomly identified repaired The random job selection necessary CABINS explicit optimization criteria use select jobs repaired informed fashion activity The job current repair consideration called thefocaljob current repair consideration called thefocalactivity Repair performed activity time Activities focaljob repaired forward fashion starting earliest activity job upstream slack This mechanism focuses attention activities slack moved avoiding unnecessary computations b limiting ripple effects schedule disruption caused moving activities tightly scheduled cause constraint violations s A repair strategytactic selected current problem CBR applied Application repair tactic described Section 44 consists parts identifying activities resources time intervals involved repair current conflict set b change utility functions associated activities conflict set c constraintdirected scheduler utilities assigned step b resource reservations activities identified step After repair executed CBR predict evaluate repair outcome context current case base If repair deemed success activity repair repair outcome failure CBR invoked select repair tactic repair current focalactivity 41 Case representation The repair process exploit knowledge relating continuing validity scheduling decisions flexibility current time capacity constraints tradeoffs implied particular repair repair successful unsuccessful according users judgment Fig 4 shows information content case Appendix A shows example case instance CABINS case base 5 In current implementation upstream slack heuristically determined twice tardiness focaljob 390 K Miyushita K SycaraArtifcial Intelligence 76 1995 377426 CASE Global Feature Resource Utilization Deviation Local Feature Waiting Time Value Salience Predictive Shift Gain Value Salience Predictive Alt Shift Gain Salience Value Predictive Swap Gain Value Salience Predictive Alt Swap Gain Salience Value Repair History Tactic Value Outcome Vaue Salience Salience Effect Type Value Salience Xl Fig 4 Case representation application particular repair action activity Because domain case features heuristic approximations revisionbased scheduling For example regularities regularities A case describes illstructuredness reflect useful freedom Global case features High resource utilization presence highly contendedfor reflect flexibility Local features temporal bound In particular horizon The repair end activity preceding focalactivity repair represent repair flexibility moving activity notion new position current schedule Fig 4 reflect potential repair flexibility example flexibility High standard deviation resource utilization schedule indicates tight schedule low repair flexibility temporal bounds indicates revision resources turn indicates schedule CABINS uses time interval called repair time time focaljob end identified interval limited time horizon focalactivity focalactivity Fig 5 The local features K Miyashita K SycaraArtificial Intelligence 76 1995 377426 391 1 Fig 5 Repair time horizon focaLactivity ACT spirit utilized overall gain achieved moving horizon moved left In particular predicts 361 For example predictiveshiftgain current focalactivity repair time horizon likely reduction focalactivitys waiting predicts time time earlier The repair history records sequence applications successive repair actions assigned objectives outcome This judgment acceptable weighted case base An outcome effects reflect tradeoffs different objectives A repair outcome repair effects repair outcome Repair effects impact application tardiness WIP repair action schedule optimization Typically evaluation acceptable unacceptable recorded effects current application repair action case acquisition tactic considered balancing CBR repair repair outcome success cases features retrieves similar past failures tactic successfully eventually similar outcome past current case Therefore potentially set effects repair action takes values set training phase gets set If application repair tradeoffs respect If provided tactic selected activity indices global local case failed tactic indication failed outcome This CBR invocation repaired tactic tactic similar failure favorable unfavorable outcomes optimization objectives tradeoffs involved judged acceptable implies similarity causal structure past failure The assumption failure explanation judged unacceptable deemed unacceptable current problem tactic expresses eventually successful successful successful repair fixing 42 Case acquisition In CABINS session starts case base A set training problems user interacts CABINS tactic deemed presented user selects repair tactic application procedure schedule Section 44 repair schedules hand At uses CABINS tactic current appropriate apply chosen The effects repair calculated An effect describes repair objectives Effects pertain respect job Possible effects pertaining tardiness resource utilization average deviation resource utilization result repair schedule schedule weighted total schedule 392 K Miyaslzita K SycaraArtificial Intelligence 76 1995 377426 job changes preferred machine inventory changes WIP Effects pertain inprocess utilizing effects Due tight constraint shop scheduling repair schedule effects shown An outcome tactic produces result acceptable based Appendix A judged unacceptable feasible schedule optimization resource assignment So example reduce jobs tardiness job changes work tradeoff tardiness reflected job extremely hard When application effects ubiquitous interactions user decide resulting calculated effects An example schedule resulting application users improvement For example lowquality machine improvement respect reduction job tardiness enforces users judgment increased favorable unfavorable explanations repair judged unacceptable The users judgment revision heuristic criteria This happen harmful effects outweighed effected utilization unacceptable low Therefore balancing constitute terms rating end repair judgmentexplanation features current problem recorded acceptable incorporated like tradeoffs current unacceptable tactic salience assigned user recorded user tries utilize repair tactic repair activity total cost repair low user worries quality resulting products objective Fig 4 At effects repair user case If user repair effects outcome effects calculated CABINS importance effect denoted salience applied repair tactic repair outcome recorded effects related particular optimization repair outcome The user supplies explanation If effects acceptable user tries repair activity repair history case Subsequently user repair outcome iteration repair reached failure The process continues effects users judgment acceptable outcome declared available repair When activity declared Failure tactics repair activity user finds repair outcome unacceptable The sequence application successive repair actions case failed application recorded activity tactic application augmented way number cases accumulated cases report current experimental operates different explanation repair history case A new case acquired new repair results new case acquired repair history case In case base In Section 5 Section 53 incurred CABINS experiments acquired Moreover results size case bases repaired unacceptable effects outcome successive tactic application investigate tradeoffs repeatedly repair 43 Case retrieval Once CABINS constructed repair selection repair application selected tactic interaction case base training data perform schedule cases purposes repair tactic case failure retrieval tactic applied evaluation user Retrieved resulting schedule K Miyashita K SycaraArttj5cial Intelligence 76 1995 377426 393 similar fixed previous different tactic global local features current case current focalactivity The process applying repair tactic described In situations CABINS utilizes In order retrieve cases select repair case retrieval Section 44 set indices failure After repair applied result feasible schedule repair evaluation new effect features type value salience performed CBR Using indices CBR invoked returns outcome set acceptable unacceptable repair activity situations described conjunction If outcome current revision indices failed heuristic case global local features Invoking CBR indices decided unacceptable CABINS performs CBR invocation acceptable possibly retrieves cases failed past similar manner current revision This use CBR 4844 space failures problem allows CABINS proceeds acceptable domainindependent solver access past solutions current outcome method failure revision heuristic failure If result applicable recovery For case retrieval Nearest Neighbor method kNearest Neighbor calculation retrieval kNN kNN calculation problem simplest kNN IO case retrieval The space CABINS uses k tactic features A finds knearest neighbors k constant current similarity measures set features corresponding case retrieval space defined values global select repair local situations For example result training data based predetermined form single nearest neighbor We selected kNN instead INN chosen classification following result leftshift applied swap tactic higher confidence reasons 6 In domains clear predictive near neighbors suggesting features lack causal structure If large number near neighbor cases category given different categories deciding swap For example nearest current problem 08 075 If nearest retrieved case tactic In method scheduling matches nearest match potentially contribute accurate classification suggesting classification suggesting repair tactic applied current problem suppose neighbors Three leftshift cases similarity 09 02 01 swap cases similarity use lNN similarity 09 uses leftshift successful occurrence high similarity potentially ignored We use sum similarity neighbors selection criterion knearest neighbors undue result relatively knearest instead frequency appearance class cases swap order avoid situation dissimilar influence classification In previous example different classification selected repair cases suggesting tactic multiple revision leftshift result7 In current 7 This method successfully implementation pronunciation text classification CABINS k set 5 applied 479 domains clear causal structure English word 394 K Miyashita K SycaraArtijicial Intelligence 76 1995 377426 selected repair leftshift tactic CABINS total similarity 155 vs 12 The similarity case current problem computed CABINS follows Distancei Salience x CaseFeature ProblemFeaturej EDevj Similarityi exp Distancei Salience salience jth feature ith case case base CaseFeature jth feature feature value cases case base Distancei dissimilarity ith case current problem Similarityi similarity current problem value jth feature ith case ProbEemFeaturej value standard deviation jth ith case current problem EDevj We utilize normalized Euclidean distance measure dissimilarity case problem This prevents certain features dominating distance calculation merely large numerical values 44 Repair CABINS Repair schedule performed applying repair repair iteration CBR The repair tactics currently available tactics selected CABINS resource left sequence resource left disruptions substitutable resource repair time horizon minimizing possible try focalactivity repair time horizon preserving try focalactivity leftslide timeline activities leftshift try focalactivity timeline possible repair time horizon minimizing leftshiftintoalt left timeline possible disruptions swap swap swapintoalt horizon causes disruptions changing focalactivity giveup repair current focalactivity repair time horizon causes disruptions substitutable resource swap focalactivity activity left focalactivity repair time resource assignment activity left resource In recent work expanded experiments The process applying set tactics 11 currently perform tactic repair ing additional following steps repaired The Determine predictive temporary start time calculated repair tactic desirable start time focalactivity The ripple effects predictive start start time activity time focalactivity K Miyashita K SycaraArcial intelligence 76 1995 377426 395 repair conflict set consists activities scheduled constraint violations arising predictive start time result execution repair For leftshift need focalactivity start time exactly step 5 start time Note predictive start time start time leftshiftintoalt predictive moving minimizes substitutable horizon capacity overallocation result moving focalactivity resource focalactivitys repair time For swap swap_intoalt predictive causes substitutable precedence resource focalactivitys start time start time constraint violations repair time horizon ii Project effects moving focalactivity designated tify capacity constraint violations resource This performing predictive constraint propagation start time iden iii Adjust reservations shifting leftshifting activities conflicts resolved conflict set simple right iv Change bias start time utility function Fig 2 activities step 3 If tactic resource utility resource utility higher resource resource change involves substitutable substitutable set favor start times calculated conflict applied function currently biases selection start times value ordering heuristic favor higher utility values reflecting case base scheduled Changing focalactivity utility functions Section 23 encoded preferences focalactivity opportunistic v Unschedule ordering GV value ordering utility functions defined start time utility function affected activities members conflict set reschedule scheduler ARR variable constraintdirected step 4 reflect bias vi Restore repair iteration The process revision calculated evaluate schedule The effects repair outcome Note activity A moved different results free revised CBR invoked effects relevant conflict indices situations First A moved current moved conflict set focalactivity focalactivity Second In simplified Fig 6 gives detailed example leftshift applied activities Suppose chosen repair activity A Leftshift dictates reflect preference figure Utility new utility given repair function graphically current focalactivity shows local repair action example jobs AZ leftshifr start time activity Ai starting soon possible function associated A adjusted accordingly In figure function Ai adjustment The starting Ai late possible appropriate utility indicated function Ai repair Utility indicated tactic The step revision time horizon Therefore 396 K Miyashita K SycaraArtificial Intelligence 76 I 995 377426 step conflict set consists affected activities moving Ai left The members conflict set shown figure The utility function activity conflict set adjusted reflect changes In figure example adjustment utility activity A After utility functions adjusted focalactivity activities conflict set unscheduled constraintbased scheduler called reschedule The resulting repaired schedule shown Fig 6 45 An example We briefly illustrate repair process simple example schedule repaired shown Fig 7 In gantt chart row shows assignments activities resource timeline white box corresponds assignment activity The number inside white box identifies job activity belongs For example activity resource2 activity Job2 identified text A We write Ri indicate ith resource Jj identify jth job Ai identify kth activity job 12 The example jobs JI Jo job activities linear precedence constraint Af BEFORE A Ai BEFORE A Resources RI Rz R3 R5 substitutable resource R4 bottleneck Suppose current focaljob Js current focalactivity A The indices retrieve similar cases case base calculated follows Global features l Weighted tardiness In particular case weighted tardiness schedule 460 l Resource utilization average This feature calculated ratio overall utilization resources overall availability resources The value feature 0544 Resource utilization deviation The deviation resource utilizations different resources equal 0032 ii Local features l Waiting time This feature defined time elapsing comple tion preceding activity A start present focal activity A In case equal 1180 620 560 l Predictiveshiftgain This feature computed CABINS follows predictive_start_time currentstartfime waitingdime x repairability predictivestartme defined Section 44 currentstarttime waitingtime parameters associated focal activity We heuristically estimate repairability given repair time horizon hyperbolic tangent function For example value predictiveshiftgain Ai 0705 K Miyashita K SycaraArcial Intelligence 76 1995 377426 397 job1 job2 Machine 1 Machine 2 Machine 3 Focal activity u Conflict set TLJYJxJam Utility function I Utility function I After leftshlft I After adjustment h After adjustment Machine 3 IL Time Horizon 5 2 r3 A Fig 6 Example repair tactic application leftshift l Predictive alt shift gain The calculation feature In case required resource activity Ai resources resource R4 substitutable similar predictiveshiftgain bottleneck value predictive_aZtshiftggain 0 K Miyashita K SycaraArtcial Intelligence 76 1995 377426 Fig 7 Original schedule results l Predictive swap gain To calculate predictiveswap_gain CABINS uses cal Section 44 For example predictiveswupgain predictivestarttime formulas predictiveshifkgain culated differently 096 l Predictive alt swap gain The value feature bottleneck resource R4 substitutable 0 Ai requires resources Casebased retrieval performed global local indices It turns Appendix A similar casebased selected swap repair tactic focalactivity At case shown retrieval primary appear better To apply swap CABINS calculates constraint violations From Fig 7 actually activity Ai swapped To activity swapped A result repair horizon These activities Ai AZ A Ai swapped CABINS selects precedence activities swappable Ai Ai A At glance Ai0 A finished early possible However best choice Ai swapped Ai cause lot downstream repair effects localized ripple effects contrary swap possible After calculation Ai Ai Job J4 weight 3 weighted tardiness 3 x 1370 1320 150 R4 Ai The effect applying start time 1090 start time activity Ai prior swap rescheduled Due larger duration activity At ripple effect precedence constraint violation activity Ai successor activity A resource R2 In general activities affected rescheduled Section 44 _ Constraint propagation discovers constraint conflict shifts activity At right resource R resulting repaired schedule shown Fig 8 Then effects repairing Ai calculated CABINS estimates local effects swap tactic Ai Ai unscheduled estimated possible effects CABINS decides intention keeping described focaljob change estimated decrease estimated decrease 150 units increase calculates global effects schedule Machine utilization tardiness 180 time units tardiness WIP 200 units 8 J4 increase WIP 750 units Global weighted weighted tardiness decrease weighted 8 These decreases precisely determined activity Js A repaired K Miyashita K SycaraIArttjkial Intelligence 76 1995 377426 0 399 00 Fig 8 Schedule results repair A 180 150 30 global WIP increase 750 CBR invoked effects applied repair tactic indices determine repair outcome acceptable If success cases failure cases retrieved knearest neighbors considered effects reflect tradeoffs users preferences example little weight WIP outcome considered acceptable If hand failure case retrieved outcome considered unacceptable reflecting user preferences minimization weighted tardiness expense increasing WIP In example CBR invocation effects indices retrieves closest match ing case case shown Appendix B effects match effects associated swap repair tactic Therefore outcome deemed acceptable 5 Evaluation approach We conducted set experiments test following hypotheses Our approach potentially effective capturing user preferences optimiza tion tradeoffs difficult model ii Our approach improves schedule quality irrespective method initial sched ule generation iii Our approach produces high quality schedules lower computational cost compared simulated annealing wellknown iterative repair method iv Our approach suitable reactive scheduling method maintains high schedule quality minimizes disruptions face execution time failures These hypotheses difficult test subjective illdefined nature user preferences obvious correlate scheduling results captured preferences define quality schedule evaluation subjective To address issues devise method test hypotheses consistent manner To necessary know optimization criterion implicit case base experimental results evaluated In experiments reported different explicit criteria weighted tardiness 400 K Miyashita K SycaraArtificial Intelligence 76 1995 377426 RBR reasoner tardiness reflect repair process users optimization RBR constructed goes trialanderror select criteria built rule WIP weighted optimize based repair action schedule Since application selected repair tactic evaluated unacceptable repair actions giving repair Each applications repair action gathered repair history case particular activity repair For repair repair effects calculated basis RBR predefined repair outcome objective rules time generate different consistently Thus RBR different case bases different explicit optimization objective Naturally objective known RBR known CABINS implicitly indirectly reflected RBR reflected baseline evaluate extensional way case base By designing schedules generated CABINS case base got experimental corresponding evaluate objective evaluation instances In particular distribution approach benchmark number bottlenecks cover broad range parallel machine benchmark problems following sequence job visit bottleneck suite job shop scheduling problems We evaluated range dates activity parameters job shop scheduling durations varied problem structure problem jobs activities Each job linear process routing fixed specifying tighter increase resource contention number activities Two parameters cover different scheduling range parameter RG controlled job dates release dates bottleneck parameter BK controlled unintentionally overall problem structure described problem generator instances problem parameters generate parallel groups problems varied static randomly generated considering moderate dynamic 1 2 bottleneck values bottleneck configuration problems The slack adjusted function range bottleneck parameters demand 100 major problem Durations function job shop scheduling controlled ways In particular resources problem conditions solution strategies different values range parameter resources close job randomly generated hardwired knowledge problem number bottleneck resources To ensure neighborhood bottleneck embodied problem scheduling Generating activities instances variation problem parameters knowledgebased methods features problem 2 machines machines problems carries number jobs CBR exploit transfer 4041 The problem bottlenecks structure communities wellaccepted method problem controlled Operations Research performance scheduling shared problem machines 1 substitutable machines exist nonbottleneck randomly generated evaluating instances later problem solving captured regularities It interesting structure note transfer varied Table 5 The benchmark problems benchmark sets different variations problems originally number researchers respects 1401 135271 Our problem allow substitutable resources reported K Miyushita K SycaraArtcial Intelligence 76 1995 377426 401 nonbottleneck resources solving parallel machine simple job shop scheduling problem b dates jobs problems tighter 20 percent original problems A crossvalidation method evaluate capabilities CABINS Each problem set class divided half The overall training sample consisting 30 problems 50 activities repaired RBR gather cases As explained section case acquisition Section 42 case acquired activity current focalactivity irrespective number tactics available number tactics activitys repair Of course activity consequently job repaired overall repair cycle repaired focalactivity activity conflict set focalactivity moved Allowing activity focalactivity problem maximum 30 x 50 1500 cases training sample different experimental optimization objective In practice activities focalactivities repaired upstream slack Section 4 training sample CABINS trained approximately 1100 cases These cases casebased repair validation problems 30 problems We repeated process interchanging training test sets Reported results validation problem sets Since possible theoretically predict bounds repair global optimum experiments CABINS allowed run overall repair cycles 51 Preference acquisition To test hypothesis CABINS acquire user preferences constructed RBR case bases reflect users preference repairs minimize weighted tardiness second reflect complex criterion minimizing combination weighted tardiness WIP The cases constituted source knowledge CABINS In words objective given CABINS explicitly The case bases source suitable repairs source advice repair evaluation Graphs Fig 9 comparison performance CABINS weighted tardiness case base labeled graphs CABINS WT performance CABINS weighted tardiness WIP case base labeled graphs CABINS WT WIP From results observe CABINS gen erated higher quality schedules respect minimizing weighted tardiness CABINS WT WIP problem classes Conversely CABINSWT WIP generated higher quality schedules respect WIP weighted tardiness plus WIP CABINS tries optimize schedule terms weighted tardiness neglects WIP CABINS WT WIP takes account tradeoffs weighted tardiness WIP schedule repair These results indicate CABINS acquire different subjective user preferences tradeoffs diverse objectives scheduling cases Thus approach unlike traditional heuristic scheduling approaches 13311 problem classes In nutshell CABINS 402 K Miyashita K SycaraArtcial Intelligence 76 1995 377426 2500 500 0 1000 800 600 400 z t 2 z P E F s 200 0 2000 1600 400 0 CABINSWTWIP m CABINSW 1 2 3 4 5 6 Problem Set _____________ CABINSWTWIP m CABINS 1 2 3 4 5 6 Problem Set m CABINS 1 2 3 4 5 6 Problem Set Fig 9 Scheduling results different case bases K Miyashita K SycaraArtcial Intelligence 76 1995 377426 403 Table 1 Repair RBR CABINS Repair RBR Repair CABINS WT 3752 4053 WIP 14466 11950 WTwIP 18218 16003 CPU Sec 4986 2965 scheduling objectives represented suit optimization criterion Only In addition unlike dynamic pro approach doesnt require inducing different optimization form users objectives devise particular heuristic function CABINS potential approaches branchandbound searchbased tabu search simulated annealing objective necessary case base changed traditional gramming explicitly complicated cases It true users objectives elicited intensely domain experts represented gather cases RBR modules quisition laborious domain expert sufficient knowledge ule efficiently efficient control model rules form rules 371 2 scheduling problem experiments But 1 cases obtained 191 Nevertheless illstructured making good sched CBRbased methodology CABINS induce insufficient situations interviewing constructing allowing handling exceptional rulebased knowledge applications extremely ac In set experiments objective WIP WT RBR repair 40 quality schedules 12 repair CABINS set test problems Table 1 shows efficient repair RBR repair RBR A potential explanation Section 43 CABINS effectively utilize Refer failure 341 details experimental improves results information results described stored cases 52 Predictive reactive scheduling We evaluated CABINS scheduling methods standard criteria revision quality These criteria appropriate schedule evaluating changes 3654 planning These criteria Attendance quality revision respect disruption revision quick responsive rapidly possible Although subscribe schedule described experiments Schedule quality efficiency revision process schedule execution original reactive schedule management Responsiveness crucial handling schedule execution schedule quickly allow execution executing reactive management preserve continuity important important desired optimization scheduling objectives b Amount criteria c Efficiency In particular revision process proceed schedule sense allowing execution separate subsections 521 522 predictive important schedule failures opportunities schedule generation revision process patch proceed Minimizing schedule Once schedule domain activity schedule disruption starts view schedule generation repair viewed iterative repair process ease readability 404 K Miyashita K SycaraArtcial Intelligence 76 1995 377426 substantial cost having attend discontinuities introduced reactive schedule revision setup costs resource assignments changed These criteria balanced traded The results predictive schedule generation methodology improves quality schedules generated variety scheduling methods gener ates schedules higher quality variety optimization objectives lower processing cost compared simulated annealing wellknown iterative optimization method 1554241 In recovering execution time failures approach 1 attends schedule quality terms optimization objectives disruption 2 responsive allows continuation execution delays response execution failures 521 Predictive schedule repair In predictive schedule repair primary objective experiments optimize schedule quality low computational cost To investigate experimental hypotheses compared CABINS simulated annealing Simulated annealing SA known iterative improvement approach combinatorial optimization problems reported able yield solutions better quality cost larger computational efforts number combinatorial optimization domains computeraided design integrated circuit image processing neural network theory 16151 SA applied job shop scheduling domain makespan objective reported 24 potential finding shorter makespans stateoftheart tailored heuristic shifting bottleneck procedure 11 The details SA implementation given follows Generate initial schedule ii Select activity randomly iii Unless available repair actions tried following Select repair tactic remaining untried repair tactics b Apply chosen repair tactic activity repair c Evaluate resulting repaired schedule respect explicit objective WIPWT d If resulting schedule better schedule repair terms objective revision procedure goes repair randomly chosen activity revision procedure goes repair randomlychosen activity probability exp ATemp A defined difference schedule evaluations repair repair The temperature Temp updated decreased fixed percentage time fixed number currently 250 repair actions applied revision procedure terminated preset maximum computational effort reached We ran experiments 5 times reported best results 5 separate runs SA incorporates probabilistic factor results necessarily different experimental runs In order test generality approach repeated set experiments K Miyashita K SycaraArtcial Intelligence 76 1995 377426 405 Table 2 Repair CABINS SA based different methods initial schedule generation Schedule EDD Repair CABINS Repair SA Schedule WSPT Repair CABINS Repair SA Schedule RM Repair CABINS Repair SA Schedule CBS Repair CABINS Repair SA WT 9560 3495 3405 5840 3210 3285 5560 3053 3301 11730 4053 3955 WIP 12846 13112 13334 12410 12549 13204 12420 12649 12908 14810 11950 12200 WTWIP CPU Sec 22406 16607 16739 18250 15759 16489 17980 15702 16209 26540 16003 16155 01 735 3882 01 721 3983 01 849 4505 174 2965 13800 time initial seed schedule generated set 4 times wellregarded dispatch heuristics constraintbased scheduler CBS The dispatch rules selected generate initial schedule widely practical job shop scheduling problems Earliest Due Date EDD rule Weighted Shortest Processing Time WSPT rule WSPT order time urgency factor RM rule These heuristics reported particularly good reducing tardiness different scheduling conditions 3 I We constrainedbased scheduler CBS uses ARR variable ordering heuristic GV value ordering heuristic predetermined biased start time utility functions Section 23 In experiments users objective function assumed minimizing weighted linear combination workinprocess inventory WIP plus weighted tardi ness This multiobjective function difficult optimize heuristically WIP weighted tardiness compatible There situations WIP reduced weighted tardiness increases Table 2 presents average results 60 problems benchmark Based results variety observations First CABINS improved initial schedule scheduling methods according objectives It noted dispatch heuristics extensively Operations Research experimentation good results 4331 The initial schedules generated dispatch heuristics considered local minima sense easily improved For example initial schedules tight onpurpose machine idleness We conjecture difficult improve initial schedule higher quality For example difficult improve RM generated schedule EDDgenerated The experimental results support conjecture EDDgenerated schedule improved 259 percent RM generated schedule improved 126 percent Second observe better quality initial schedule better quality repaired result Third CABINS generated schedules comparable quality average 45 times efficient simulated annealing It contextual information 406 K Miyaslzita K SycaraArtijkial Intelligence 76 1995 377426 Table 3 Repair CABINS randomly generated initial schedules Initial schedule Repair CABINS Repair SA WT 38750 17400 17238 WIP 14705 14325 14186 WT WIP CPU Sec 53455 31725 31424 01 812 3233 CABINS case base systems use failure information captured repair history making CABINS efficient effectively guide search prune unpromising random search simulated annealing paths resource constraints randomly generated constraints To investigate CABINS behavior vis vis initial schedule generation method training test sets 5 resources 10 jobs problems The initial scratch To took problem schedule date precedence account constraints generation executable qualities initial schedules low compared ones generated dispatch heuristics CBS From Table 3 CABINS performs schedules The behavior CABINS generated regard method initial schedule generation confirms Operations Research community better based methods minconflict consistent behavior repair experiments annealing schedule guaranteed As expected quality initial solution behavior simulated 3 1 higher satisfaction problems heuristics behavior randomly solution This example disregarding repaired intuitions 301 initial constraint results got far ascertain experimental Other interesting Evaluation revision control model learning We conducted set exper learning control model learning obtained application repair improve schedule quality selection repair The results showed repair actions The results iments selecting random casebased activity approximately 90 example problems repair effectiveness casebased tactics likely remain environments real operating reasonably factory configuration relatively Evaluation scalability To test scalability approach generated set 60 problems 20 jobs uses 5 resources additional number Usually long type machines fluctuate varied periods The number jobs customer demands economic experimentation focused varying number jobs number problem generator resources The 20job problems generated function varying controlled ways The knowledge acquisition method lojob RBR acquire training case base 30 problems problems approach The 20 jobs 5 resources We crossvalidation pattern results set 60 problems The results shown factors Based assumptions set IOjob problems parameters Table 4 likely Evaluation knowledge transferability In order test generalization issues K Myuslzita K SycaraArtcial Intelligence 76 1995 377426 407 Table 4 Repair CABINS 5 resources 20 jobs problems Schedule EDD Repair CABINS Schedule WSPT Repair CABINS Schedule RM Repair CABINS Schedule CBS Repair CABINS WT 21068 6485 7184 5612 7095 5486 23965 6922 WIP 54403 55384 53102 53321 52183 52378 62607 62460 WTw1p CPU Sec 75471 61869 60287 58933 59278 57864 86572 69382 03 1710 05 1900 06 1645 2030 8800 Table 5 Repair 5 x 20 problems case base collected 5 x 10 problems Schedule EDD Repair CABINS Schedule WSPT Repair CABINS Schedule RM Repair CABINS Schedule CBS Repair CABINS WT 21068 8245 7184 6337 7095 5982 23965 9242 WIP 54403 54294 53102 53421 52183 52299 62607 62521 WT WIP CPU Sec 75471 62539 60287 59758 59278 58281 86572 71763 03 2342 05 2220 06 1945 2030 9738 learning acquired knowledge performs bigger problems transferability 5 resources 10 jobs benchmark problems 1 collected casebased cases solving Step 1 solve 5 resources RBR 2 case base collected 20 jobs problems The results shown Table 5 We results got based 5 resource 20 jobs case base better reported Table 4 CABINS original 5 resource 10 jobs case base We pattern CABINS behavior initial schedule generation holds acquisition From encouraging They CABINS potential factory environments acquisition scheduling practical point view results operational knowledge quality application transferability alleviate burden affecting overall performance knowledge schedule quality knowledge improving independent results 522 Repair response unpredictable execution events Reactive schedule repair involves 1 recognition conflicts schedule result unexpected uncontrollable environment repair action Before present discuss criteria results present 2 propagation experimental reactive repair steps taken CABINS conflicts 3 selection application hypotheses evaluation introduced execution change 408 K Miyashita K SycaraArtifcial lntelligerzce 76 1995 377426 The step reactive repair recognition conflicts introduced schedule result unexpected events execution environment In general types conflicts recognized l Temporal conjicts These conflicts reflecting inconsistencies sched uled actual start end times activities l Resource conjlicts These conflicts reflecting inconsistencies resource capacity currently available capacity required processing activities In second step effects introduced conflicts propagated downstream forward time point time unexpected event happened right shifting This involves undoing reservations inconsistent result unexpected event propagating effects determine consequences ripple effects unexpected event rest schedule The result step feasible schedule typically worse quality predictive schedule occurrence deleterious unexpected event In step CABINS repair suboptimal schedule resulted second step The mechanisms CABINS uses reactive repair exactly predictive optimization course attempt repair activities executed unexpected event happened If unexpected event loss capacity machine breakdown activity processed resource time breakdown rescheduled We illustrate repair process example Fig 10 shows predictive schedule problems experimentation predictive schedule optimization Section 521 In particular twobottleneck problems static start time jobs In schedule weighted tardiness 240 units After computing predictive schedule machine breakdown created middle schedule The broken machine M busiest nonbottleneck machine The breakdown timed occur 20 total execution time increase deleterious effects rest schedule The estimated duration breakdown 10 times average duration activities problem M assumed available processing end time breakdown The effects breakdown propagated downstream forward time In par ticular activities scheduled broken machine M scheduled reservations overlapped time interval breakdown unscheduled sequence M end time breakdown rescheduled called rightshifting 361 Rightshifting activities M typically results constraint conflicts related activities fixed constraint prop agation mechanisms CABINS feasible worse schedule results Fig 11 shows schedule resulting machine breakdown propagated effects The weighted tardiness schedule 4500 lofold worsening qual ity Delaying schedule execution till M fixed equivalent rightshifting clearly option practice It utmost importance schedule repaired enable execution continuity CABINS applied repair schedule Fig 11 Because big delays arise consequence capacity loss assume optimization weighted tardiness repair objective Fig 12 shows schedule resulting repair CABINS o _ _ _ _ 8 410 K Miyashitu K SycaraArtijiciul Intelligence 76 1995 377426 measure disruption given previous revision existing schedule It repair process achieves efficient execution high quality schedule disruption desirable To date experimental allows continuation schedules schedule disruption increase work A repair strategy incremental argued literature incremental generation minimizing evidence provided rescheduling repair objective We demonstrate CABINS b exhibiting simultaneously reactive capability respect favor incremental incremental repair approach schedule repair opposed performs time failures execution ones typically happen scheduling guard In set experiments performed CABINS repair predictive loss CBS rescheduling Our schedule experimental superior failures desirable evaluation criteria reactive schedule repairs response repair methodology CABINS unexpected capacity incremental results demonstrate rescheduling performing execution response We measured disruption respect criteria Difference start times repaired schedule original predic tive schedule occurrence unexpected capacity loss repaired versus original ii Difference resource assignment activities schedule iii Difference sequencing activities resource repaired versus original schedule These changes routing changes job finish start times cause changes repaired original cause changes expected schedule disruption source setup activities process manufacturing environment product warehousing material preparation resource assignments change product routings change programs material handling need vehicles setups worker assignments continuation changes depends nature manufacturing layout Therefore unified measure disruption schedule schedule qualify measures attendant costs times For example plans product shipment plans change automated guided machine smooth degree severity process factory floor activity sequencing machine cause changes schedule execution factory floor Obviously Such changes cause difficulties factory floor resulting hard formulate equipment changes We compare performance different machine breakdown In experiment activity duration experiment problems machine breakdown duration reactive scenarios repair CBS rescheduling 10 sets problems average 10 times resource problems second simulated twobottleneck similar machine breakdown simulated set onebottleneck Table 6 shows average results experiments The results terms disruption scheduling CBS However CABINS efficiency problems time CBS Problem 1 example CABINS quality CABINS outperformed worse CBS In spends 40 times K Miyushita K SycaraArtcial Intelligence 76 1995 377426 411 Table 6 Reactive repair vs rescheduling Start time disruption Routing disruption Sequencing disruption Repaired wei tar CPU time seconds CABINS reactive repair 6380 9 21 988 1129 CBSGV reschedule 8980 11 27 916 67 result quality However examination result misleading The reason repair behavior CABINS As shown CBS time point CBS rapid Fig 13 example CAB finished From Fig 13 93 seconds CABINS achieved rescheduling method reactive incremental repair schedule produced CABINS executed monotonic INS achieved better rescheduling weighted provide repair results process stopped 93 seconds higher quality time period This behavior consistency tardiness 1430 units compared time period 93 seconds Since schedule incremental contrast feasibility CABINS produced CBS rescheduling 1560 units achieved rescheduling schedule repair iteration exhibited experiments feasible executable System responsiveness reactive contexts great concern To ex In breakdown duration 4 6 8 10 times average activity dura efficient possible This characteristic results Fig13 robust different breakdown periments different variations duration machine breakdown experiment tion Fig 14 shows results The graph shows reactive repair saturates improvement CABINS repair process execution minimal delay rapidly reactive repair allows continuation schedule quality scenarios repeated loss repaired suitable 53 How cases The graphs Fig 15 compare performance CABINS different sized case bases The results obtained based CABINS WT WIP type case bases A case approximately 4500 cases generated RBR This allowing 3 overall repair cycles training set 30 problems 50 activities To case bases different sizes appropriate number cases situation randomly 4500 size case base This new case base random deletion cases bigger case method generating 51 The initial schedule generation base similar ablation study performed interesting question method CBS From viewpoint knowledge acquisition terminated sufficient knowledge knowledge acquisition acquired For case question cases based knowledge enable high quality performance approximately knowledgebased selected deleted acquisition 412 K Miyashita K SycaraArtcial Intelligence 76 1995 377426 1000 1 owo 1ooQoa CPU time msec 1OWWG Fig 13 Repair responsiveness CABINS Problem 1 knowledge capture reuse guaranteeing overall satisfactory performance Unfortunately difficult answer question general ill structuredness scheduling problem approximate nature CBR causal model available We believe exists appropriate size case base relatively satisfactory results terms schedule quality excessive overhead case acquisition case retrieval case K Miyashita K SycaraArcial Intelligence 76 1995 377426 413 c _ m Machine Breakdown 4 average durations Machine Breakdown 6 average durations o e Machine Breakdown 8 average durations Machine Breakdown 10 average durations 0 100 1000 10000 1WJOoO lLnxn3JO CPU time msec Fig 14 Repair ratio results Fig 15 support number cases hypothesis follows Our experimental The larger increase marginal explained partially fact number cases capture characteristics redundant case base size decreases This loo0 cases problem space additional 1000 new cases size case base relatively information When schedule quality However better payoff 414 K Miyashita K SycurdArtificial Intelligence 76 1995 377426 2600 3 2400 I E e2200 tij 2000 0 600 g 1600 1400 1200 1000 600 I CABINSWTWIP CABINSWTWIP CABINSIWTWIPk CABINSWTWIPj 500 cases 1 1000 cases 1500 cases I 2000 cases sooo 1 2 3 4 6 5 Problem Set I 100 I I 0 500 1000 1500 2000 Number Cases CaseBase Fig 15 Effect case base sizes quality efficiency ii time new cases acquired information small different problem space results higher quality In terms efficiency observe graphs case base 1000 cases optimal choice Actually terms CPU outperforms improvement payoff proportional case base 1000 cases obviously terms schedule quality provide case base 500 cases Moreover 1000 cases case base size increase case bases time quality improvement improvement 54 Discussion The experimental results CBRbased repair method po capture different user optimization preferences performs terms scheduling repairbased method CBR schedules high quality compared constructive annealing schedules comparable quality substantial computational repair exhibits desirable anytime characteristics terms mini constructive constraintbased method tential producing methods As compared simulated based repair produces savings outperforms mizing disruption In addition CBRbased maintaining rescheduling high schedule quality answer In section attempt question makes power approach stems following powerful We believe First pointed making available complete assignment partial assignment approach reasons approaches domain provide guide search compared constructive methods revision method captures available Our CBRbased complete schedule revisionbased information 30 K Miyashita K SycaraArtijicial Intelligence 76 1995 377426 415 belongs problems information information contextual domain information job shop schedule optimization global case features exploits repair failed applications regularities failed cases relevant case retrieval Second case features able capture category hard NPcomplete flexibility This complemented important repair case history revisions keeping failures exploited case memory These keeping paths search space future similar situations Third CBR prune unpromising Section 53 support experimental acquired reported experiments cases CABINS solution space fairly evenly distributed repair advantage coverage Since conjecture good search space backtrack search quality solutions evenly distributed good solutions bunched example potentially particular parts search space 30251 dispatch heuristics myopic advantage promising hypothesis cover results discussion presented allowing CBRbased search paths disadvantaged fashion transfer solving satisfiability information cases difficult job shop optimization easy hard problem regularities analysis performed theoretical way In contrast structure experimental solve test problems Moreover answer graphcoloring arises extent information size results training set lojob problems effective training phase information transfer Table 5 indicate The table shows cases test captured problems structure This question albeit great theoretical practical NP 328 structure properties job shop 84 Due known features problem difficult easy similar different It flowtime finds It proposed problem defied solution Finally believe problems captured transferable problem acquired problems 20 jobs The question cases set problems different problem importance complete problems insightful characterize schedule optimization tight constraint constitutes problem solve problem substantially reason onemachine optimal solution particular extensive difficult problem structure help analysis instead aims capturing problems proven currently characterize criteria function problems interdependencies structure minimize WSPT heuristic CABINS explicit objective job shop optimization explicit optimization simple optimization theoretically prove schedule optimality currently open research problem technique experimentation instances similar characterization good approaches job shop optimization understood contextdependent user preferences 14 Most importantly researchers objectives impossible salesman implicitly traveling ipso facto 416 K Miyashifa K SycaraArtQicial Intelligence 76 I995 377426 6 Related work Our work shares motivations goals work 28 interactive user manipulation users manipulation This information motivations monitors revision knowledge The approach promising experimentally rooted concepts mechanisms 124640 schedules schedule presented requesting augmentrefine scheduling long work schedules merging partial schedules That work extensively generated line research In tested In work systems reasons aspects scheduling methodology procedures tradition come view scheduling techniques constraintdirected opportunistic operated static design assumptions deterministic constructing properties sophisticated research Our approach constraintdirected incrementally investigated proposed Although process variable value ordering heuristics model art learning adapting user preferences repair actions application dynamically tradeoffs adapt focusing mechanism repair model according current problem search procedure solving circumstances scheduling repair application level state control 1401 statically determined 36 Our approach advances 53 speed 2930 heuristic constraint lookahead scheduling solving improve perturbations conflict chooses onestep 52 studied performance Nqueens problem similar iterative shown inadequate heuristic shown result analyzed Though 5453296 repair Knowledge resource constraints repair Our approach generates schedules repairbased criteria added basic simulated annealing minconflict number conflicts convergence vs speed convergence terms number violated repair heuristic space complete In 54531 simulated annealing types form constraint framework tradeoff free schedule In respect schedules perform evaluation shown minimizing vs schedule quality measured In minimizes investigated powerful job shop scheduling random This minconflicts CBRbased improve percent schedule modifications process called chronologies incrementally In 511 plausible control payload ground processing PEBL enables concept function systems CABINS doesnt explicit objectives casebased 301 The irrespective initial schedule generation method quality final repaired schedule varies In 6 encoded Small snapshots scheduling gained locate classify resolve bottlenecks learn search PEBL applied tasks NASA Space Shuttle target given examples The cost schedule Unlike optimize applies records types repair CABINS hand shown experimentally resource contention number remaining scheduling process learning distribution conflicts acquire user optimization preferences schedule quality improvement focus search relies good initial assignment rules increase search efficiency chronic minimize 35 initial assignment satisfaction problems explanationbased procedurally scheduling generalize information techniques learning K Miyashita K SycaraAriifcial Intelligence 76 1995 377426 417 users repair decisions optimizes schedules based acquired objectives solution simulator previously casebased incremental The repairbased information systems 501814 plan correctness For example CHEF scheduling methods considered related improving plan quality assumed repairbased systems planning revision efficiency preserving plan cor existence strong 141 evaluate derived plan detect repairs Research causally methods Previous casebased motivated primarily concerns computational rectness domain model sumes existence modelbased failure uses wellstudied plan 18501 based hypothesis teleologically CABINS knowledge causal explanations schedule possess causal domain knowledge The user solid explanation herhis action plan caused tight interactions The users expertise perform consistent program cases problem solving experiences previous casebased require In CBRbased user program assumed selection repair action predict effects selected lies ability domain plan built planner correct use CBR satisfying plan efficiently expert teacher acquire domain knowledge knowledge acquisition 5 These approaches usually results problem histories evaluation CABINS solving impart repair embodied related Protos selecting acquisition evaluation tradeoffs systems rules 7 Conclusions future work repair repair scheduling improving constraintbased knowledge acquisition In paper advocate framework available new optimization tactics operates respect reusing user scheduling preferences user optimization preferences important expressed objectives iterative repair recording predicated existence particular schedule quality judgments The domains unavailable heuristics need developed results capture effectively utilize user scheduling bias schedule optimization The approach utilizes CBRbased mechanisms user preferences tactics explanations application selected repair tactics The approach set schedule local view problem offers selective advantages b capturing capability acquiring strong domain models usually explicitly Even evaluated CABINS provides framework preferences different schedule objectives compared repairbased In addition CABINS schedule results welldefined case base CABINS produces schedules higher quality scheduling methods simulated annealing reflected repair procedure Further experimental indicate case base differentially capture large number cases amortized method generating scheduling model The results quality It problems Our experimental potential approach design maintenance effort expended present seed schedule alleviating sense complicating implemented scheduling regardless objectives improved robust implicitly reflected 418 K Miyashifa K SycaraArtijcial Intelligence 76 1995 377426 improvement cases user interaction future repeated use case base high quality schedules efficiently More process importantly CABINS acquire solution CABINS potential change issue issues automating hierarchical time Future work investigate abstraction repair process dealing complex objectives larger problems imposing undue overhead user We believe acquisition user preferences accommodating Acknowledgments This research partially supported Defense Advance Research Projects This work originated Agency contract F3060291C0016 author visiting Dajun Zeng help experimentation support Matsushita Electric scientist Robotics Institute Carnegie Mellon University Industrial Co We like thank Mr insightful discussions Appendix A Case instance Tcase 1 exp_0_0_8order5llactivity5_2 slots Slot feature value salience 1 Slot feature value salience 1 Slot feature value salience 1 weightedtardiness 470000000 1000000 resource_utilization_average 0789000 1000000 resource_utilization_deviation 00403749 1000000 SI_slots Slot feature value salience waitingtime 580000000 0333 K Miyashita K SycaraArtijicial Intelligence 76 1995 377426 419 Slot c feature predictiveshiftgain value 0806000 salience 0667 3 Slot c feature predictive_alt_shift_wip_gain value 0106000 salience 0333 3 Slot feature predictiveswapgain value 0903000 salience 0667 3 Slot c feature predictive_alt_swap_gain value 0 salience 0333 3 solutions Solution tacticstype SWAP effects Effect effecttype WEIGHTEDTARDINESS salience 0667 domain whole_schedule previous_value 470000000 currentvalue 380000000 gain 90000000 3 Effect C effecttype RESODRCE_UTILIZATION_AVEXLAGE salience 0667 domain whole_schedule previous_value 0789000 currentvalue 0789000 gain 0 3 420 K Miyashita K SycaraIArtificial Intelligence 76 1995 377426 Effect C effecttype RESClURCE_UTILIZATION_DEVIATION salience 0667 domain whole_schedule previous_value 00403749 currentvalue 00403749 gain 0 3 Effect C effecttype INPROCESS_INVENTORY salience 0667 domain whole_schedule previous_value 2240000000 currentvalue 2250000000 gain 10000000 3 Effect effecttype INPROCESS_INVENTORY salience 0333 domain job7 previous_value 290000000 currentvalue 310000000 gain 20000000 3 result ACCEPTABLE 3 3 Appendix B Case evaluation Tcase exp_2_0_4order7llactivity7_2 slots Slot feature weightedtardiness value 670000000 salience 1000000 3 K Miyashita K SycaraArtcial Intelligence 76 199s 377426 421 Slot I feature resource_utilization_average value 0682000 salience 1000000 3 Slot c feature resource_utilization_deviation value 0074000 salience 1000000 1 1 SI_slots Slot feature waitingtime value 280000000 salience 0333 1 Slot feature predictiveshiftgain value 0406000 salience 0667 3 Slot c feature predictive_alt_shift_wip_gain value 0306000 salience 0333 3 Slot c feature predictiveswapgain value 0103000 salience 0667 3 Slot c feature predictive_alt_swap_gain value 0304000 salience 0333 3 solutions Solution C tacticstype LEFTSHIFT effects Effect effecttype WEIGHTED_TARDINESS 422 K Miyashita K SycaraArtial Intelligence 76 1995 377426 salience 0667 domain whole_schedule previous_value 670000000 currentvalue 930000000 gain 260000000 3 Effect effecttype RESOURCE_UTILIZATION_AVERAGE salience 0667 domain whole_schedule previous_value 0682000 currentvalue 0682000 gain 0 1 Effect C effecttype RESOURCE_UTILIZATION_DEVIATION salience 0667 domain whole_schedule previous_value 0074000 currentvalue 0074000 gain 0 3 Effect effecttype INPROCESS_INVENTORY salience 0667 domain whole_schedule previous_value 1940000000 currentvalue 1990000000 gain 50000000 3 result UNACCEPTABLE 3 Solution I tacticstype SWAP effects Effect effecttype WEIGHTEDTARDINESS salience 0667 domain whole_schedule K Miyashita K SycaraArtifcial Intelligence 76 1995 377426 423 previousvalue 670000000 current_value 600000000 gain 70000000 3 Effect effecttype RESOURCE_UTILIZATION_AVERAGE salience 0667 domain whole_schedule previousvalue 0682000 currentvalue 0682000 gain 0 3 Effect C effecttype RESOURCE_UTILIZATION_DEVIATION salience 0667 domain whole_schedule previousvalue 0074000 currentvalue 0074000 gain 0 3 Effect C effecttype INPROCESS_INVENTORY salience 0667 domain whole_schedule previousvalue 2480000000 currentvalue 3180000000 gain 700000000 3 Effect effecttype WEIGHTEDTARDINESS salience 0333 domain job7 previousvalue 790 currentvalue 210 gain 580 3 Effect effecttype INPROCESS_INVENTORY salience 0333 domain job9 424 K Miyashita K SycaraIArttficial Intelligence 76 1995 377426 previous_value 290 currentvalue 410 gain 120 3 result ACCEPTABLE 3 3 References I 1 J J Adams E Balas D Zawack The shifting bottleneck procedure job shop scheduling Manage Sci 34 1988 391401 I21 DW Aha D Kibler MK Albert Instancebased learning algorithms Mach Learn 6 1991 3166 13 I KD Ashley Modeling legal argument reasoning cases hypotheticals PhD thesis University Massachusetts Amherst MA 1987 14 I KR Baker Introduction Sequencing Scheduling Wiley New York 1974 151 R Bareiss ExemplarBased Knowledge Acquisition A Unified Approach Concept Representation Classification Learning Academic Press New York 1989 161 E Biefeld L Cooper Bottleneck identification process chronologies Proceedings IJCAI9I Sydney NSW 1991 218224 I71 AR Chaturvedi Acquiring implicit knowledge complex domain Expert Syst Appl 6 1993 2335 8 I I Cheeseman B Kanefsky W Taylor Where hard problems Proceedings IJCAI 91 Sydney NSW 1991 19 I RH Creecy BM Masand SJ Smith DL Waltz A traiding MIPS memory knowledge engineering Commun ACM 35 8 1992 4864 IO BV Dasarathy ed Nearest Neighbor NN Norms NN Pattern Classtfication Techniques IEEE5 Computer Society Press Los Alamos CA 1990 111 T Dean M Boddy An analysis time dependent planning Proceedings AAAI88 St Paul MN 1988 4954 121 M Fox Constraintdirected search case study jop shop scheduling PhD thesis Department Computer Science CarnegieMellon University Pittsburgh PA 1983 131 S French Sequencing Scheduling An Introduction Mathematics JobShop Ellis Horwood London 1982 14 KJ Hammond CaseBused Planning Viewing Planning Memory Tusk Academic Press New York 1989 151 DS Johnson CR Aragon LA McGeoch C Schevon Optimization simulated annealing An experimental evaluation I graph partioning Oper Res 37 1989 865892 161 DS Johnson CR Aragon LA McGeoch C Schevon Optimization simulated annealing An experimental evaluation II graph coloring number partitioning Oper Res 39 1991 378406 171 MD Johnston SPIKE Al sheduling NASAs Hubble Space Telescope Proceedings Sixth IEEE Conference Artificial Intelligence Applications Santa Barbara CA 1990 184190 18 J S Kambhampati JA Hendler A validationstructurebased theory plan modification reuse Arti Intell 55 1992 193258 191 K Kempf C LePape SF Smith BR Fox Issues design AIbased schedulers workshop report Artif Intell Magazine 11 5 1991 3746 K Miyashita K SycaraArtificiul Intelligence 76 1995 377426 425 201 P Koton Reasoning evidence causal explanations Proceedings DARPA Workshop Case Based Reasoning Clearwater Beach FL 1988 260270 21 JJ Kanet V Sridharan The electronic leitstand new tool shop scheduling Manufacturing Rev 3 1990 161169 22 J Kolodner R Simpson K Sycara A process casebased reasoning problem solving Proceedings IJCAI85 Los Angeles CA 1985 284290 1231 Naiping Keng DYY Yun A planningscheduling methodology constrained resource problem Proceedings IJCAI89 Detroit Ml 1989 9981003 241 PJM Van Laarhoven EHL Aarts JK Lenstn Job shop scheduling simulated annealing Oper Rex 40 1992 113125 125 1 P Langley Systematic nonsystematic search strategies Proceedings AAAI92 San Jose CA 1992 26 1 LM Lewis DV Minior SJ Brown A casebased reasoning solution problem redundant engineering large scale manufacturing Int J Expert Syst 4 1991 189201 271 J Liu K Sycara Distributed constraint satisfaction constraint partition coordinated reaction Proceedings 12th International Workshop Distributed Artificial Intelligence Hidden Valley PA 1993 1281 K Mckay J Buzacott E Safayeni The schedulers knowledge uncertainty missing link Proceedings IFIP Working Conference Knowledge Based Production Management Systems Galway 1988 1291 S Minton MD Johnston AB Philips P Laird Solving largescale constraint satisfaction scheduling problems heuristic repair method Proceedings AAAI90 Boston MA 1990 1724 301 S Minton M Johnston A Philips P Laird Minimizing conflicts heuristic repair method constraint satisfaction scheduling problems Artif Intell 58 1992 161205 3 I TE Morton DW Pentico Heuristic Scheduling Systems With Application Production Systems Product Management Wiley New York 1993 32 R Musick S Russell How long Proceedings AAAI92 San Jose CA 1992 46647 1 33 1 TE Morton RM Rachamadugu A Vepsaleinen Accurate myopic heurisrics tardiness scheduling Technical Report 3608384 Graduate School Industrial Administration CarnegieMellon University Pittsburgh PA 1984 341 K Miyashita K Sycara Learning control knowledge cases schedule optimization problems Proceedings Tenth IEEE Conference Aritijicial Intelligence Applications San Antonio TX 1994 3339 1351 N Muscettola Scheduling iterative partition bottleneck conflicts Proceedings Ninth IEEE Conference Artificial Intelligence Applications Orlando FL 1993 4955 1361 PS Ow SF Smith A Thiriez Reactive plan revision Proceedings AAAI88 St Paul MN 1988 7782 37 DS Prerau Developing Managing Expert Systems Proven Techniques Business Industry AddisonWesley Reading MA 1990 38 EL Rissland KD Ashley Credit assignment problem competing factors casebased reasoning Proceedings DARPA Workshop CaseBased Reasoning Clearwater Beach FL 1988 327344 391 D Ruby D Kibler Learning episodes optimization Proceedings Ninth International Conference Machine Learning Aberdeen 1992 379384 40 N Sadeh Lookahead techniques microopportunistic job shop scheduling PhD thesis School Computer Science CarnegieMellon University Pittsburgh PA 1991 411 SF Smith CC Cheng Slackbased heuristics constraint satisfaction scheduling Proceedings AAAI93IAAI93 Washington DC 1993 42 N Sadeh MS Fox Variable value ordering heuristics activitybased jobshop scheduling Proceedings Fourth International Conference Expert Systems Production Operations Management Hilton Head Island SC 1990 134 144 426 K Miyaslzita K SycaraArtifcial Intelligence 76 1995 377426 43 K Sycara R Guttal J Koning S Narasimhan D Navinchandra CADET A casebased synthesis tool engineering design In J Experf Syst 4 1991 1441 RL Simpson A model casebased reasoning domain dispute mediation PhD thesis School Information Institute Technology Atlanta GA 1985 problem solving investigation Computer Science Georgia 45 E Simoudis JS Miller The application CBR help desk applications Proceedings Case Based Reasoning Workshop 1991 2536 46 SF Smith PS Ow C LePape B McLaren generate perspectives Manufacturing Long Beach CA 1986 1471 C Stanfill D Waltz Toward memorybased 1481 K Sycara Patching old plans production detailed N Muscettola Integrating multiple scheduling plans Proceedings SME Conference AI reasoning Conunun ACM 29 1986 12131228 Proceedings Tenth Annual Conference Cognitive Science Society Montreal Que 1988 149 1 K Sycara Argumentation 50 MM Veloso Learning analogical planning agents plans Proceedings IJCAI89 Detroit MI 1989 thesis School general problem solving PhD reasoning Computer Science CarnegieMellon University Pittsburgh PA 1992 5 I M Zweben E Davis D Brian E Drascher M Deale M Eskey Learning improve constraint based scheduling Art Intell 58 1992 271296 52 M Zweben E Davis B Daun M Deale Rescheduling iterative repair Proceedings AAAI92 Workshop Production Planning Scheduling Control San Jose CA 1992 53 M Zweben E Davis B Daun M Deale Iterative repair scheduling rescheduling IEEE Trans Syst Man Cybern 23 1993 15881596 541 M Zweben M Deale M Gargan Anytime rescheduling Proceedings DARPA Workshop Innovative Approaches Planning Scheduling Control San Diego CA 1990 251259