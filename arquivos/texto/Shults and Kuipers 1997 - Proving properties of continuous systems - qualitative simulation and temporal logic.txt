ELSEVIER Artificial Intelligence 92 1997 91129 Artificial Intelligence Proving properties continuous systems qualitative simulation temporal logic Benjamin Shults Benjamin J Kuipers b B Department Mathematics University Texas Austin Austin TX 78712 USA h Computer Science Department University Texas Austin Taylor Hall Austin 7x 78712 USA Received February 1996 revised September 1996 Abstract temporal We demonstrate automated method solutions proving ordinary differential equations ODES face incomplete specification ODE The method combines implemented onthefly model checking algorithm statements temporal logic CTL output qualitative simulation algorithm QSIM Based QSIM Guaranteed Coverage Theorem prove certain CTL statements true temporal structure produced QSIM corresponding temporal statement di holds solution ODE consistent qualitative differential equation QDE QSIM generate temporal structure 1997 Elsevier Science BV logic statements Keywords Temporal logic Qualitative simulation Model checking Differential equations 1 Introduction The world continuous reliably reason range cases qualitative model check validity statements behaviors continuous We demonstrate dynamic want use discrete symbolic means significant generate finite structure guaranteed simulation method interpreting structure The main theorem paper stated QSIM behavior tree generated qualitative differential follows Suppose A4 equation C If M temporal logic informally This work supported Electric Power Research Corresponding Email bshultsmathutexasedu Institute A preliminary author Email kuiperscsutexasedu National Science Foundation grant IRI9216584 report work appeared 171 00043702971700 WS000437029600050l 1997 Elsevier Science BV All rights reserved 92 B Shuks BJ KuipersArtifrcial Intelligence 92 1997 91129 logic formula C Of course formalize relationships formula describes solution temporal model ODE abstracts carefully paper In applications initial conditions ordinary differential specific relationship equations information pair quantities quantities information completely known In cases constants known lie certain range relationship allows abstracts differential solution reasoning ODE information We abstract ODE qualitative QDE In applications want draw conclusions ODE consistent limited monotonic Qualitative information generate descriptions known known solutions equation number applications inference timeordered Since applications Furthermore profit reliable continuous design cope conditions reasoning temporal semiquantitative connection checking possible behaviors described qualitative valuable Our program TL makes formal model logic model solutions real differential temporal particularly equations reasoning modelbased events set possible behaviors knowledge ability diagnosis control monitoring incomplete A qualitative simulator possible behaviors consistent qualitative differential 13141 This set behaviors QSIM algorithm state input guaranteed represent initial finite structure qualitative ture realvalued abstracts soundness Theorem function QSIM contain QDE circumstances property QSIM constructs treelike structure branches equation expressed struc extended equation described We property content Guaranteed Coverage state descriptions branch describes In case QSIM reasonable solution ordinary differential temporal Since output QSIM algorithm structure paths reasonable temporal questions questions answered This accomplished describes logic model checking A model checking functions like able formulate extendedrealvalued logic formula treelike structure determines temporal model formula Temporal propositional eventually Modal worlds logical sense word logic temporal operators timevarying alternate behaviors paths logic adds operators truth values takes input structure logic augments truth values alternate possible necessarily possibly algorithm We chosen use branching time temporal logic CTL described Emerson Clarke 78 Because QSIM sound CTL statement universal sense Cp modeled structure produced QSIM define theorem holds solution ordinary differential QDE generated temporal logic continuous systems proved qualitative QSIM structure Therefore universals equation consistent statements simulation This corresponding B Slzults BJ KuipersArtcial Intelligence 92 1997 91129 93 allows hybrid reasoning reasoning dynamical prove commonsense systems statements expert We provide limited completeness result QSIM differential universal prove properties extendedrealvalued equations consistent QDE input QSIM CTL formulas reasonable case paths structure output functions solutions The propositional temporal construction conjunction 121 formulas numerical containing extensions order prove numerical properties physical systems QSIMQ2 language numerical includes propositions allow information 161 Q3 2 NSIM This In Section 2 define language CTL present basic definitions theorem The reader familiar CTL want read Section 21 learn notation conventions Section 24 standard results literature facts needed temporal main logic In Section 3 QSIM framework prove Guaranteed Coverage Theorem Even readers familiar QSIM read Section 3 use updated add new terminology formalization Section 4 begins QSIM framework underlying differential equations explain formulas reasonable related theory temporal output QSIM algorithm logic CTL formulas There structure formulas CTL interpreted We CTL realvalued functions In Section 5 introduce hypothesis theorem We prove useful special cases completeness discusses issues concerning implementation main theorem prove main result Section 5 In Section 6 model checking qualitative applications simulation combination temporal logic Sections 24 lay groundwork theorem main statement main increasing degrees formality theorem We develop stating terminology 2 CTL Computational branching summarized Emerson logics 81 We customize CTL slightly time temporal tree logic CTL extension CTL The logic The theory branching time temporal Handbook TheoreticaE Computer Science systems state order allow states successors infinity value variable crosses successor boundary range In section define syntax semantics CTL language Section 24 basic results definitions main presentation notation use We use notation convenience theorems The presentation language 8 implementation CTL differ significantly time reaches continuous 94 B Shults BJ KuipersArtificial Intelligence 92 1997 91129 A model checking algorithm formula determines word formula examines structure temporal model structure temporal logic logical sense Our implementation terminate TL model checking algorithm CTL onthefly 31 Onthe model checker based algorithm Bhat Cleaveland Grumberg fly algorithms advantage common global algorithms able large structure complexity CTL model checking Our implementation systems continuous best known algorithms statements If formula happens onthefly sublanguage CTL CTL result constructing entire exponentially Section 4 expressing customized correct algorithm 21 Terminology notation We interpret CTL formula temporal structure M S X L 0 S set states l X set fullpaths l LSxAPTF proposition 4 E AP assigns Boolean interpretation truth value takes state s E S atomic Here AP set atomic propositions A fullpath terminates state successor path infinite We use notation We let Ax denote totally ordered set Ax mean use totally ordered sets represent paths fullpaths Notice finite fullpath x SO st s2 sh_i SO si 2 denote infinite finite totally ordered set totally ordered set x If x infinite integer Here state nonnegative cardinality finite We path quantifiers basic temporal operators propositions The names use path quantifiers concise names temporal temporal operators equivalent logic research community A z necessarily G z E possibly F eventually X u _ We prefer rough description formal syntax semantics defined state s path x starting s given p formula The Suppose path quantifiers l necessarily p true s p true fullpath starting s l possibly The elementary formulas p true s p true Some fullpath starting s temporal operators p p q p q l p true path x Ax 1 p true path obtained x deleting state l p q state preceding stronguntil true x q true state x p true state q true This operator called weakuntil distinguish defined B Shults BJ KuipersArtifcial Intelligence 92 1997 91129 95 The precise syntax semantics defined following sections We use following abbreviations define operators terms releases p q 5 p q 11 p q s p q strongnextp z notp eventually p true p p eventually p 1 p 3 p weakuntil p q s q q p infinitelyoftenp eventuallyp almosteverywherep z eventually alwaysp The formula releases p q true path q true q true p q true state p true The statement p true state previous path q necessarily path p true state state true true The formula state q true p q true state q weakuntil Because applying CTL structures finite fullpaths temporal operator ambiguous Therefore distinguish true path The statement strongnext path state path second state p true The statement true path path second state p true strongnext state In discussion consider weaknext weaknext p p In following subsections temporal mean weaknext formal definitions operators path quantifiers CTL 22 Syntax A state formula formula interpreted path State formulas interpreted state path formula CTL generated S3 The path formulas semantics releases abbreviations include CTL generated rules B lB3 derived strongnext definitions proofs later formula rules Sl Although definitions easier follow Definition 1 The syntax CTL S 1 atomic proposition S2 ifplp PI defined follows 4 state formula arestateformulasthensoare pl p pp 96 B Shults BJ KuipersArticial Intelligence 92 1997 91129 possibly p necessarily p state S3 Bl B2 B3 p path formula formulas state formula pt p arepathfotmulas p q path formulas p q releases pl path formula thensoare pt P pt p p strongnext p p q We allow standard boolean abbreviation implies 23 Semantics The following notation needed Given path x SO 1 2 nonnegative denote path nonnegative x states Notice Ax Ax si sil si2 integer Ax x finite xi path obtained integer suffix x starting si Thus semantics logic defined Ax let xi x deleting 2 Ax xi defined Now ready semantics respectively M x k mean mula CD true temporal x Each item gives state formula respectively language We write M SO k path path syntax structure M state SO respectively item corresponding interpretation Definition 2 If se state M x SO st nonempty starting inductively define follows fullpath M Sl Msa CJ C atomic proposition S2 M PI p ifandonlyifMsapiforalli M PI pn ifandonlyifMsapiforsomei M SO k p S3 M SO possibly L SO 4 T lin lin case M se p p fullpath y M starting SO M y p M SO k necessarily MY FpP p fullpath y M starting B 1 M x p p state formula 052 Mxi andpI pn ifandonlyifMxkpiforallilin M SO k p M x b pr p M x b pi M x k p case M x k p p q nonnegative B3 M x k 1 n M xi q nonnegative M x k releases M xi k q nonnegative j M xj k q M x k p Ax 1 M x1 k p M x k strongnext p q nonnegative integer Ax integer p Ax 1 Mx p nx integer j M xj p integer nx M xi p B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 97 24 Basic results The proofs main theorems use fact formula written following form Definition 3 Positive normal form A CTL releases formula strongnext formula formula positive normal form temporal operators scope atomic proposition Here require implies rewritten formula positive normal terms mentioned terms Every form temporal nots propagated equivalent CTL formula operators written inward propositions 31 formula A CTL expression said written positive normal form occurrences universal Definition 4 Universal formula path quantifier possibly We path formula pelfect path formula formulas correspond exactly PLTL If 0 formula deleting occurrences propositions CTL formulas Cp denotes contains path quantifiers These propositional linear time logic perfect path formula obtained p 9 path quantifiers For example necessarily p necessarily s p q We J pellfection The following main theorems lemma needed proof Lemma 6 proof Lemma 5 If universal formula x fullpath M x k Sp M M x t The proof complex enlightening Therefore Appendix C Lemma 6 For universal CTL state formula temporal structure M state s M M s k fullpath x M starting s M x k I Proof The proof follows easily induction length Lemma 5 0 3 QSIM In Section 31 briefly QSIM QSIM framework framework We refer 141 Appendix B details reader Kuipers description 98 B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 new definition reasonable Guaranteed Coverage Theorem described present section function Other reformalizations concepts related The QSIM algorithm takes input users qualitative semiquantitative equation related formally tion physical This input called qualitative differential This description output QSIM algorithm variables The main class ODES explain The values stated infor tree mally says solution output QSIM We formal statement Guaranteed Coverage Theorem input QDE theorem section tree nodes states describing Guaranteed Coverage Theorem QDE represented ODE related descrip QDE Sections 31 32 explain basic terminology statement Guaranteed Coverage Theorem These sections explain hypotheses basic ideas easy theorem necessary Those sections designed A casual statement Guaranteed Coverage Theorem reader able understand reading details Sections 31 32 Section 31 things formalizes relationship structures continuous functions represents Section 32 formalizes finite output QSIM generally relationship QDEs ODES infinite structure QSIM fullpaths relationship Now formal statement Guaranteed Coverage Theorem All unfa specification splitting closed abstraction miliar defined terms statement Sections 31 32 Suppose M closed ODE F abstracts U The QSIM algorithm U described rooted fullpath tree generated QDE initial state C I Suppose C structural abstraction F F solution set structure carefully crafted guarantee represented quagtative structure M coverage Under conditions rooted Theorem 7 Guaranteed path x A4 specication x c x x c qualitatively describes splitting ti U Of U The proof given Kuipers algorithm proof exampleis 31 The QSIM framework 13141 Because QSIM frameworkthe scope paper A qualitative derential equation consists finite set variables associated quantity space totally ordered set landmarks set constraints values variables A QDE structural abstraction equations The QDE codifies class ordinary differential knowledge physical QSIM users incomplete Starting QDE C initial simulation QSIM produces finite tree M S R B qualitative states linked QSIM successor state I qualitative B Shults BJ KuipersArtial Intelligence 92 1997 91129 99 produces tree called QSIM behavior relation R The finite tree literature We let M S R B represent tree S set states R successor relation B set fullpaths starting initial state Each behavior initial state totally ordered set beginning state Rsuccessor The set B completely determined terminating relation R initial state I Because significance initial state fullpaths state I rootedfullpaths represented behavior finite qualitative value variable appearing leaf tree B set QSIM behaviors We QSIM behavior initial state A QSZM behavior terminating state describes variable represent state s form qmag qdir qmag describes landmark open interval defined landmarks derivative u By considering QDE QSIM constraints including quiescence behaviors tree generated pair C I QDE tree starting root path behavior M Each QDE model Each function time The qualitative value variable u magnitude u equal qdir sign qualitative values variables state able derive number properties states stability cycles state user produce Rsuccessors A QSIM state called transition fact value variables crosses boundary QDE description QSIM state tree allows user produce tree root tree generated QDE This allows ranges The theorems different models behavior tedious extended transition unenlightening states successors account paper assume relations theorems transition relations transition transition extension different Structural abstraction The class ODES related abstract QDE The concept structural abstraction given QDE class ODES structurally best understood example Example 8 Given ODE F associated set F simultaneous equations example consider equation F We F structural abstraction F For simple harmonic motion derived dX dt x abstract equation broken We structurally u v dxdt set equations equation abstracted abstraction structural book Qualitative Reasoning ODE variables components QSIM constraint This set equations steps First introduce variable let dvdt Finally write x F time At step simple called structural denoted F From harmonic motion create QDE See Section 331 Kuipers including equation 141 details structural original abstraction equation easy abstraction 100 B Shults BJ KuipersArtijcial Intelligence 92 1997 91129 The structural QDE Following abstraction example obtain F following QDE F useful easily abstracted ddt X V ddt V A M X From QDE QSIM produce scribing simple harmonic motion abstracts solutions QSIM The Guaranteed Coverage Theorem ODE described fullpath says temporal structure Since equation QDE like know temporal structure generated A solution U F set functions time simultaneously true Since U set functions need way relating substituted F supposed U variables F equations functions We use symbol represent set variables abstracted set variables variables F U solution C The bijection F Similarly It clear solution transformation bijection M QSIM set functions U tree produced QDE C U names F let M bijection simply F names variables relationship C F converted I direction For example solution solution sine function F sin xcos solution original equation o sin F U simple going sin cos sin conclude harmonic motion The represented QSIM structure Here important betwezn estinction structure M Essentially M infinite corresponding cycle states sensible way strong match criterion QSIM use matching criteria states match However careful finite QSIM obtained tree M M following detects cycles The strong mutch landmark value variable landmarks match requires interval criterion state qualitative derivatives match regardless previously match criterion The weak match criterion values allows match intervals landmarks The QSIM user dictate cycles detected QSIM behaviors cycles QSIM behavior values variables states matched crossedge existing The type cycle detection interpretation chosen makes difference match represents real cycle That theorem point exactly If cycle different path previous continue cycle behavior represents singlefullpath match necessarily continue state uniqueness infinite structure represent precisely tree If strong matching returned differential equations Therefore weak matching state followed B Shults BJ KuipersArrijicial Intelligence 92 1997 91129 101 In case bea onetoone M rooted rooted fullpaths behaviors fullp_aths M In case end infinitely M correspondence We want temporal reasoning paths pass thugh cycle states QSIM structure M S X represented behavior root QSIM sensible way That represented set X rooted fullpaths A rooted fullpath Therefore define M S R B Here X set fullpaths To construct X define cycle states path starting add fullpaths satisfy semantically If restrictions mentioned cycle strong match criterion crossedge cycles allowed passes behavior add single simply add cycle pairs relation R obtain relation R X set rooted fullpaths generated E Finally define X suffix closure x times If kind matchinkwas infinite infinitely type cycle matching tree continuing cycle fullpath behavior follows related tree M 16 useful natural bijection In case strong matching crossedge cycles case behavior associated single rooted Since zo set rooted fullpaths X fullpath define set behaviors B Since X suffix unique zo function z X B rooted fullpath extend Thus x E X z x zox x rooted fullpath x suffix z generally associated QSIM behavior This assignment useful prove properties systems quantitative case fullpath bijection bijection We think z mapping fullpath information Closed trees Ideally given QDE QSIM algorithm terminate runs memory resources When QSIM algorithm terminates finished simulating possible behaviors natural way tree produces terminates state cycle state quiescent state There cases tree regardless long tree returned QSIM behavior In case behavior QSIM return closed closed state transition allowed Guaranteed Coverage Theorem hold If behavior possible fullpath actual behaor structure M run In cases QSIM returns tree closed hypotheses tree M closed represented rooted strong cycle match criterion allow crossedge QSIM behavior Under cycles simulation style creates new landmarks variables identical critical values applies landmark values cycle matches style certain systems damped spring considers represented The normal QSIM simulation 2 Notice case X necessarily fusion closed Rgenerable A set X xlsq x2sy2 E X xsvz E X states XI q path s q Q A set fusion closed X Rgenerable naturally generated relation 8 1 102 B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 close However applying weak cycle match criterion qualitative model finite closed behavior Reasoning 141 envisionment cycle matches simulation style new landmarks tree tree See Chapter 5 Kuipers Qualitative behavior Quantitative When information bounds crossedge state augmented quantitative strong cycle matching initial interval QDE numerical symbolic agates inconsistent information The important quantitative purposes marks case QSIM prop prune branches tree land real values denoted 2121416 behavior prediction information cycles allowed information information QSIM derives quantitative paper information landmarks uses terms In A landmark quantity space QSIM variable QSIM able intended restrict interval This quantitative real possible values extensions extendedreal number The quantitative closed landmark different QSIM behavior Thus simply ask range possible values landmark The user ask range given behavior So case use possible values landmark If weak cycle function matching loses information sense z determine behavior crossedge related numeric cycles detected user information given fullpath illustrate Three billiard balls fact quantitative stored states construct simple example numeric 20 start constant velocities initial shown Fig 1 The QSIM QDE model scenario provides quantity constraints Example 9 In order QSIM behaviors information positions spaces position velocity acceleration constant velocity motion Collisions positions balls simultaneously differences x y x y directions information detected zero information velocity Cxp C constant speeds ballsA B possible behaviors corre 151 unitssecondQSIM 35 C passing ahead B passing B colliding B Fig 1 b takes place t 05 seconds There predicts When partial quantitative 2 unitssecond velocity interval sponding In case C collides B collision possibility C colliding A We chose deal complexity Naturally conditions illustrated user knowledge QDE initial state constructed information point Now consider real number behavior know Cxp equal 2 behavior know Cxp greater 2 know Cxp 2 But Cxp constant value horizontal velocity Cxp C state We know In state In state second In state behavior value behavior constant 15 35 B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 103 2 A 1 t I 0 B f 1 c 2 INF D8 L1 11 0 0 01 tMINF I J b 1 I 1 J t DYBC DYBC b Three balls billiard I Predicting behaviors realtime Fig velocities B B collide B t 05 b Given incomplete knowledge speed ball C QSIM predicts table initial positions C pass ahead vary depends behavior QSIM store quantitative values landmarks state behavior value state behaviors share information We shall return example Section 61 104 B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 32 Qualitative description In section formal meaning QSIM fullpath x describes U solution behavior x set realvalued ODE abstracts following informal phrase functions U This want QDE generate In order partition domain functions corresponds value time variable way partition That called spktting U Second assign specific real numbers landmarks variables relatively functions U At end section detailed example function harmonic motion QDE sine described rooted fullpath generated QSIM given x This called specification x From easy define means fullpath x U states X set showing simple Splittings We given set reasonable functions U ui 1 6 n taking values reals Since thinking U solution ODE assume extended equations derived U shares U described QSIM fullpath need way partitioning functions fullpath domain A interval U consistent values time variable extended set simultaneous functions reals In order domain time We define splitting U follows Let ti strictly increasing sequence 0 A satisfying following conditions M A indexed t critical point nk t E ti ti finite limit point ti converges points 1 2 3 According Appendix B set exists infinite supremum A A open right We pair ti U splitting U Since critical points functions ti splitting ti If set ti finite let tJ choice noncritical points greatest element ti Consequently 1 splitting J 1 cardinality definition reasonable distinguished condition function ti points consecutive order indexes ti U natural partition Dk interval Associated splitting A Each Dk singleton ti open interval containing points ti The indexes sets endpoints A closed left follow partition DO D1 tl If A open left Do D1 D2 tl infimum A If A closed right DJ tJ DzJ tJ A open left To avoid problem ti left endpoint Dk going let dk denote index r left endpoint Dk If A open right said infinitely sets Dk figure ti That trouble When dealing splitting ti U U use following abbreviations B Shults BJ KuipersArtijicial Intelligence 92 1997 91129 IOS That Ul set functions Ull set functions U restricted U restricted domain DI domain UIGkDk Specification fullpath define In order need relate mapping landmarks specication quantitative information information notion splitting described fullpath real numbers We specific extended fullpath landmarks extended landmarks We want real numbers satisfying certain sensible conditions specification preserve order Also assigned fullpath want mapping consistent set R extended Suppose c function domain c inf cc c0 0 The order V partial landmarks come different variables range V c preserves reason The landmarks single variable totally ordered real numbers The function c called specication partially ordered set V landmarks partial order cminf V c landmarks variables Given fullpath x specification partial order determined quantity spaces variables x c specijication associated z x x determined qualitative refer number x c consistent numeric z x landmark Xl determined x x pair information QSIM behavior associated behavior zx extension cXi E ntn2 Recall uniquely quantitative numeric In particular QSIM ntnz range Definition qualitatively describes Now state phrase QSIM fullpath x describes set realvalued functions U formally Given QSIM directed graph M splitting U Us 1 n taking values x c qualitatively describes splitting described partition The intention correspond range time variable element Dk partition correspond state Sk values functions QSIM variables state Sk specification x c fullpath x 1 ti U set reasonable functions extended splitting reals common domain A specification corresponds remainder subsection Dk domain A determined splitting fullpath x way value time variable values uk correspond The function JM referred bijection described Section 31 relates variables M variables U The cardinality ti equal states x alternate qualitatively U Sk corresponds describes uk follows number time point states x Therefore time point states time interval states x c x ti U correspondence 106 B Shults BJ KuipersArtijicial intelligence 92 1997 91129 landmark Xl QSIM variable X JM ui nonnegative Given integer k qualitative value X state Sk Xl uijn cX1 uink 0 qualitative derivative variable M Ui Sk uD 0 std uD 0 dec If fullpath x finite QSIM labeled qualitative derivative variable uMUi Sk qualitative derivative variable qui state x tinf Sk tJm If fullpath x finite QSIM labeled state x tcinf tJ jm Lemma 10 The specijication xh C qualitatively h Ax describes x c x qualitatively describes ti dh Uh nonnegative ti U integer Proof The proof comes straight definition means specification fullpath splitting set functions This definition involves Ax qualitatively correspondence 0 sh D nonnegative integer h definition describes definition QSIM algorithm x c It follows qualitatively functions nonnegative X0 Xl determined splitting ti U set reasonable given pair landmarks X0 Xl QSIM variable X IJM ui integer k qualitative value X state Sk interval state Sk UiDk C cXO cX1 extendedrealvalued It follows QSIM quiescent uD 0 1 6 6 n Example 11 Let consider simple example We Guar anteed Coverage Theorem solution satisfied U sin cos sin structural abstraction equation example Recall d2X dt x u sin We represented output QSIM algorithm describes rooted structure sin x cos fullpath set functions We translated structural abstraction following QDE ddt X V ddt V A M A X If A4 tree produced QSIM input uM sin A uM sin X JM cos V B Shults BJ KuipersArtificial Intelligence 92 1997 91129 107 fi fx 0 f E Wx defineQDE SpringforTL quantityspaces X V A minf minf minf 0 X inf 0 inf 0 inf Position Velocity Acceleration constraints ddt Udt M A X X V V A 0 0 minf inf inf minf defun springenvisionment setq SS makenewstate fromqde sim makesim SpringforTL assertvalues qsim SS qsimdisplay SS nonewlandmarks cycledetection 0 nil X inf V 0 X V A weak nil iI o p 9 I Position Velocity Acceleration Each path behavior state The behaviors shown tree ends cycle state Each cycle state matches distinguished amplitude The second behavior initial Fig 2 QSIM input output undamped spring Given QSIM describing create new landmarks add single additional QSIM generates abstraction simple harmonic motion ODE complete initial state giving input QSIM See Fig 2 In order output interesting landmark X quantity space position variable From instructions tree M shown Fig 2 108 B Slzults BJ KuipersArtcial Intelligence 92 1997 91129 consequence Guaranteed Coverage Theorem _It M specification qualitatively Since weak matching M infinitely specifications qualitatively strong matching infinite sine function k exactly qualitatively specifications describes rooted fullpath splitting sine function splitting sine function rooted fullpaths If rooted fullpaths splitting To demonstrate G_uaranteed Coverage Theorem x E M cycles rooted fullpath 2 infinitely function For specification number 0 1 Lets cX l2 match described x need times We specification second behavior example lets consider Fig x splitting sine illustrated definition qualitative description function c maps X Let select splitting sine function We set ti union following sets ordered f 2kr k positive integer kr 2 k positive integer 1171 6 2kn k positive 1 integer Since lim right allowed infinite set ti splitting sinx exist R domain sine function open Now easy x c qualitatively describes x Consider domain sine determined time variable value X Notice definition qualitatively satisfied ti corresponds landmark X X sin Dz n6 sinrr6 describes It easy check ti U The partition Dk nicely domain In state x X l2 cX required requirements 4 QSIM logic informally follows Suppose The main theorem paper stated state prove QSIM structure generated CTL formula describes solution order means explain temporal logic propositions reverse order helpful CTL formula formally need QDE C If k checked understanding realvalued model ODE abstracts things First need CTL formula C In explain function Second need QSIM structures We In Section 41 details model checking applied structures continuous In Section 42 formalize functions example relationship CTL QSIM formulas B Shults BJ KuiperdArtificial Intelligence 92 1997 91129 109 quiescent quantity std dec This proposition interval defined pair landmarks true state QSIM able determine true exactly qualitative derivative variable u qmag qr Suppose u variable state s qmag landmark space associated true qualitative qval open u qr derivative u s qdir qualitative magnitude u s equal subset qmag status state std tinf state infinite tcinf state finite inrange extended true interval X2 proposition intervals state s nr n2 lie Xl ni n2 contains numbers named Xl X2 lie If value uar s landmark represented landmark subset 111 n2 If value ulr s interval true state QSIM able determine proposition s known u nr nz Suppose u variable true interval QSIM determined time variable time variable number real numbers Fig 3 The propositional level language 41 QSIM structures CTL thing needed temporal structure defined Given structure k Section 21 interpretation The temporal structure 2 propositions S R B obtained Fig 3 s represents Ahe state propositions tree M S X L represented QSIM behavior S X interpretation L propositions given temporal This formulas structure MTL structure Our implementation TL model checking algorithm QSIM structures interpreted interpret CTL cludes propositions practice Since paper adjustments rems need language mentioned add clutter statements operators definitions proofs The propositions tinf tcinf allow user express Fig 3 useful Appendix A explain theo retain definitions theorems order example eventually Alone eventually express eventually time eventually possibly asymptotic sense eventually means eventually finite time use propositions possibly asymptotic difference finite time sense In order For example finite true tinf tinf p p tinf mean The proposition inrange sensible states behavior QDE containing information handled extensions quantitative information QSIM Q2 trees generated Simulation quantitative 161 Q3 2 NSIM I10 B Shults BJ KuipersArtcial Intelligence 92 1997 91129 referred 121 The numbers inf inf quantitative information QDE allows TL prove timerelated expressions real numbers real values The use numeric propositions extended derived QSIM numeric information given properties physical systems The expressiveness application CTL adding language See Appendix A extensions model checking augmenting complexity QSIM easily increased propositional 42 Temporal description Here define means CTL perfect path formula set functions sine function example simple CTL formula describes If c specification landmarks mentioned perfect path formula partition A associated ti Let Cc bijection c specication Let ti U b e splitting set reasonable functions U ui 1 n common domain A Let Dk extendedrealvalued subset T denote formula Cp We recursively define U set variables mentioned ti U th We assume means positive normal form follows c temporally describes splitting form definition according l If proposition correspond splitting according following Q qval cases ui qmag qdir uil cX0 Xl X2 quantity space ui endpoints UiDa C cXlcX2 qmag landmark value X0 ui qmag interval landmark values Ui qdir qdir std qdir dec _ 0 status tinf tcinf inrange uiIcO 0 uD 0 uD 0 Ui nt n21 quiescent uID 0 1 n DO CO element DO real number uiDo c nlnz andpI p pk c temporally describes ti U 1 k m l p1 p 1 k m pk c temporally describes ti U Ic l p l 0 describes temporally describes p c temporally ti U ti p q nonnegative integer h q c temporally ti dh Ulh fl nonnegative integer 1 h p c ti dl UIl l releases p q nonnegative temporally integer 1 h p c temporally describes ti dl Uh ti dr UIl integer h q c nonnegative B Shults BJ KuipersArtcial Intelligence 92 1997 91129 Ill l p A DO p c temporally describes t di UI G l strongnext ti dt iUIt p fi A DO p c temporally describes Example 12 As example let convince formula infinitelyoften qval X 0 dec qval X 0 function describes restricted temporally sine consideration We let set U contain specification sint H X The splitting Let Dk denote c temporally describes case ti U trivial c0 0 We use sine ti iz nonnegative partition 0 oo associated tl We want 0 Let restricted formula sine function The bijection integer convince This amounts proving conditions following sin In 0 cos ID 0 Every positive odd integer satisfies infinitely nonnegative 1 sin ID 0 2 cos n 0 3 integers k satisfying 1 k conditions 5 The main results The main theorem paper state formally says tree generated following Supp_ose M closed QSIM equation C If MrL model universal CTL formula solution U ODE abstracts U specification describes theorem discuss corollaries ti 3 U uM Therefore TL sound c perfection c temporally prove limited completeness result In section prove qualitative differential necessarily C splitting ti I There hypothesis possible needed contains functions contains hypothesis needs present main usually satisfied QSIM structures mentioned theorem This It propositions QSIM determine information use proposition confidence notion relates set Sections 32 42 respectively The remainder section temporal descriptions Section 51 explains theorem defined theorems important qualitative applications 5 I Determined QSIM trees Suppose x fullpath perfect path formula Suppose qualitatively describes ti U vM describes closed QSIM structure IL x x temporally x c specification ti U In section prove c 112 B Shults BJ KuipersArtcial Intelligence 92 1997 91129 prove describes completely information correctly Otherwise need certain QSIM determines induction In order propositions step proof Theorem 14 work Formally need know s state QSIM tree M s b 4 CJ atomic proposition fullpath y starting I c temporally describes I ti s y c qualitatively Lemma 13 In arbitrary QSIM tree ti U JM This conclusion true exceptions common The case arises language body paper occurs tinf determine f f E Mz With initial state xto 0 behavior diverges qmag x inf fx x2 fx X imply transition 0 state state However choices f time time label state impossible QDE x fx tinf monotonically transition For example infinite infinite state undetermined function f0 xt xt time infinite finite qualitative transition terminating increasing consider imply Therefore define QSIM state determined respect propositions tinf tinf QSIM determined tinf propositions defined QSIM define new propositions defines new proposition respect proposition induction Appendix A trees determined However addressed That issue needs needs determined way proof Lemma 13 goes step Theorem 14 This subtle point define means tinf With respect The TL program warn user state determined spect atomic proposition queried state When state determined operation TL program TL reasonable relating longer satisfied operates hypotheses theorems extendedrealvalued functions Lemma 13 Zf s state proposition C GTL s b 4 specification temporally describes t U M QSZM tree M fullpath x x c qualitatively describes determined respect x starting s x c ti U 4 c Fig 3 definition meaning specification formula definition semantics proposition temporally splitting set functions qualitatively hypothesis describing meaning definition splitting set functions proof involving information needed QSIM determine Proof The result follows directly given describing specification Notice propositions proof fails determinedness tinf 0 fullpath tcinf We QSIM structure G determined respect proposition state G Theorem determined respect proposition 14 relates ways describing set reasonable extendedreal valued functions proofs main theorems paper B Shults BJ KuipersIArtijicial Intelligence 92 1997 91129 113 Theorem 14 Suppose respect If specification describes ti 3 U n x fullpath QSIM structure 2 determined propositions Cp pelfect path formula krx x c x qualitatively describes ti U c temporally The proof complex enlightening Therefore There reasons simply Appendix C temporal description First formula describes function want talking formula function intervening QSIM structure Second light tries prove Lemma 13 Theorem 14 missed definition temporally describes given high level See Appendix A example definition determined brought definition subtleties involved theorem 52 Main theorems universal formulas This section contains main results paper As consequence user TL QSIM systems prove temporal statements systems follows First QDE C uses QSIM theorems dynamical generate closed modeled MTL If user proved describes user constructs differential tr_ee M Then solution user use TL check universal equation abstracts C perfection main formula Theorem 15 Let U solution abstracts universal specication splitting c landmarks mentioned ti U U n QDE C Suppose QSIM_generates CTL Zf MEL I k formula structural abstraction ODE closed tree M C I Let necessarily c temporally describes propositions Proof Let universal path formula M closed QSIM behavior determined respect Let U hypotheses_By rooted fullpath yu MTL specification qualitatively M determined respect Theorem 14 conclude ye c 2 yU c ti U U By Lemma 6 MEL yu Since Mryu use ti U rM 0 propositions c temporally describes Guaranteed Coverage Theorem know Suppose MEL I k splitting necessarily tree describes The following corollary follows proof Theorem 15 Corollary 16 Let U solution abstracts universal rooted fullpath x c x consistent information derived QSIM fullpath x c temporally describes splitting structural abstraction ODE C I Let QDE C Suppose QSIM_generates CTL If M r I k closed necessarily x E X specijcation tree M formula rit f4 U JM 114 B Shcdts BJ KuipersArtificial Intelligence 92 1997 91129 We include corollary discussion provides information specification specification specification describes splitting U c landmarks mentioned formula This tells fullpath G qualitatively The conclusion theorem states perfect path formula related formula describes universal far conclusions nested quantifiers QSIM structure dynamical theorems solutions equations Quantifier nesting irrelevant theorem concerned While gaining useful applications Section 62 situations insight rely main point underlying relation QSIM prediction Therefore user TL describes temporally formula form solutions necessarily 53 Numeric queries purpose proving formula enter ODE perfect path formula The previous discussion particularly relevant It mentioned mation landmarks vary behaviors QSIM keeps track numeric respect form Theorem 15 desirable QSIM behaviors respect numeric queries infor involving information QSIM derives information states This fact makes specific numeric To check proposition involving numeric information inrange fullpath state checked know associated particular QSIM behavior retrieved respect function Section 31 z defined QSIM behavior This problem Furthermore M numeric fullpath information solved The following corollary specification simply special case Corollary consistent numeric 16 information specify behavior QSIM tree 17 Let U solution structural abstraction QDE C Suppose QSIM generates Corollary ODE abstracts closed tree M C I srong match crossedge cycle detection Let universal formula CTL If x E Xr speciication MEL Z k x c x consistent information derived QSZM behavior z x C temporally describes splitting rootedfullpath ti I U flo necessarily The proof corollary exactly specified proof Theorem 15 The type cycle detection know z defined use obtain numeric information difference function 54 Completeness results Suppose user generated QSIM ing CTL perfect path formula We know tree M fro_ CI MTL I b necessarily B Shults BJ KuipersArtificial Intelligence 92 1997 91129 115 necessarily solution test formula ODE abstracts pose MLZ k false solution U ODE abstracts user temporal lution U ODE abstracts ous c In section provide user QSIM possibly temporal structure circumstances C fullpath solution know described But sup C user wants C describes U The modeled QSIM spuri ODE abstracts describes fullpath 1 This general conclude structure rooted If formula user draw p perfect positive conclusions path formula formula form possibly Suppose closed QSIM structure generated like know ODE F abstracts We solution QSIM following completeness condition described given perfect path formula tree closed determined respect propositions QDE initial state C I C In order satisfy Definition 18 We closed QSIM behavior fullpath x fi input QDE splitting solution specification x ODE structural abstraction F abstracts tree M complete rooted F qualitatively described rooted fullpath k describes In words closed tree complete C ODE abstracts solution One way check completeness cally numeric corresponding Under simulation fullpath reasonable structure represented tree tree prove mathemati solution extendedrealvalued conditions user able draw sound conclusions solution QDE scenario described ODE abstracts Theorem 19 details result Theorem 19 Suppose perfect path formula complete QSIM behavior determined respect ODE F structural abstraction F solution U abstracts C specijcation CTL Suppose M closed C I initial state temporally describes splitting U tree generated propositions If MTLS possibly QDE lLM Proof Let perfect path formula tree generated QDE initial state C I Suppose respect propositions firs s k possibly solution U abstracts C describes splitting U uM specification We want ODE F structural abstraction F c temporally CTL M closed complete QSIM behavior M determined 116 B Shults BJ KuiperdArtificial Intelligence 92 1997 91129 We know semantics CTL fullpath x 6 GTL x Because M complete know set reasonable extended realvalued structural abstraction splitting U specification c functions U ui 1 6 n ODE abstracts fJ solution C fixed splitting U eU Theo x c qualitatively x c x temporally describes describes Therefore rem 14 q 6 Applications CTL QSIM replaces TL CTL model checker customized experimental 31 Bhat Cleaveland 15171 The underlying model checking algorithm Grumberg prove implementation lications Grumberg complexity algorithm added advantage onthefly possible exponentially Temporal check formulas time QSIM best known global algorithms reasoning useful algorithm use QSIM The current versions described previous pub Bhat Cleaveland algorithm CTL CTL Their entire global halt correct answer constructing large structure CTL required human organs disease abstract real physical QSIM systems simulate controllers electrical circuits population dynamics chemical reactions 141 TL prove QSIM tree closed following query TL R necessarily eventually status status status quiescent cycle transition R root tree See Appendix A explanation quiescent status proposition arguments TL automatically reports atomic proposition checked state proposition determined 6 I Examples use TL ask answer questions First demonstrate undamped models state SS damped oscillator behavior DS oscillator behavior tree Fig 2 rooted tree Fig 4 rooted simple initial state Example 20 Undamped oscillator The simple spring conserves energy behav iors end cycles shown behavior closedness query return T The behaviors differ according amplitude oscillation solution landmark value X The queries shown demonstrate ODE consistent QDE Fig 2 quiescent tree Fig 2 Therefore passes predefined B Shults BJ KuipersArticial intelligence 92 1997 91129 I17 reaches cycle state necessarily infinite sequence events crossing x 0 opposite directions Since variable X qualitative value state formulas equivalent TL SS necessarily T status quiescent TL SS necessarily eventually status cycle T TL SS necessarily infinitelyoften infinitelyoften qval X 0 qval X 0 dec T TL SS necessarily infinitelyoften qval X 0 dec qval X 0 T simple solution temporally Since reasonable formulas spring ODE abstracts described specification tree closed determined shown Fig 2 splitting QDE perfect path formula associated The predicted tree complete possible We branches tree complete Simply produce single behavior Using complete removing rewrite extraneous behaviors QDE landmark different ways X suffice This strong match cycle criterion produce cycle tree case The example produces complete tree followed nodal tree Fig 4 ends cycle representing loses energy The behavior decreasing oscillation The Example 21 Damped oscillator The damped spring behavior partial cycles second convergence quiescent cations qualitatively Since weak match cycles detected infinitely origin nodal comes quiescent TL determines simple spring behavior existential real trajectories nonlinear finite behavior state origin These qualitative behaviors specifi instances QDE tree represents structure fullpath universal questions false damped spring corresponding criticallydamped finite number halfcycles fullpaths oscillating single asked convergence tree statements true rooted rooted TL DS possibly status quiescent T TL DS possibly eventually status cycle T 118 B Shults BJ KuipersArrificiul Intelligence 92 1997 91129 gi fx 0 f g M x1 defineQDE DSpringforTL quantityspaces x v ff fs minf 0 inf minf 0 inf minf 0 inf minf 0 inf minf 0 inf Position Velocity Acceleration Fluid friction Spring force constraints ddt x v ddt v m X fs Cm v ff add fs ff 0 0 0 0 minf inf inf minf minf inf inf minf defun dspringenvisionment setq DS makenewstate fromqde DSpringforTL sim makesim nonewlandmarks x v ff fs ignoreqdirs cycledetection veak statelimit 200 assertvalues x 0 nil v 0 inf nil qsim DS qsimdisplay DS Position Accellsration The behavior second The second behavior tree ends cycle state matches states shown direction root The difference approach quiescence Fig 4 QSIM input output damped spring B Shults BJ KuipersArtifcial Intelligence 92 1997 91129 119 TL DS possibly eventually status quiescent T TL DS possibly infinitelyoften infinitelyoften qval x 0 qval x 0 dec T TL DS possibly infinitelyoften qval x 0 dec qval x 0 T TL DS necessarily possibly eventually status quiescent T TL DS necessarily implies possibly status quiescent status quiescent T followed nodal behavior close The damped spring structure complete nonlinear choices model functions monotonic origin linear course Therefore proved functions solution corresponding temporally described CTL formula spiral origin behavior away If monotonic functions pure nodal pure spiral behavior set QDE given Fig 4 perfect path formula ODE abstracts vM specification formulas possibilities The formulas matter oscillations youve seen far universal Theorem 15 gives information These formulas features QSIM structure M possible quiescent formulas purpose discovering proving properties dynamical behavior oscillating terminate nodal convergence behavior state b forever Since systems Example 22 A quantitative der use quantitative timecritical TL provides given Section 31 example Now reconsider information systems Refer billiards example QSIM QDEs resulting proofs Fig 1 description With qualitative information tree 55 different behaviors closed collide pass positions information directions QSIM predicts single behavior seconds With information specifying identical representing reach balls positions speeds QSIM gives balls different orders infinity With complete quantitative indicated balls B C collide t 05 speeds 2 position units second provided QSIM produces tree behaviors 120 B Shults BJ KuipersArtificial Intelligence 92 1997 91129 The queries given checked tree information described Section 53A constant B velocity interval 35 151 unitssecond 2 unitssecond velocity Cxp C Because answers predicted following queries tree behaviors complete draw conclusions TL SS necessarily implies inrange T TL SS possibly inrange inrange 5 time 5 dxBC 0 0 dyBC 0 0 eventually inrange inrange dxBC 0 0 dyBC 0 0 inrange time 5 5 T TL SS necessarily T inrange inrange dxAC 0 0 dyAC 0 0 The TL query proves solution ODE abstracts happens time 05 The second query proves B C collide 19 solution collide time 05 The query shows A C collide consistent given QDE This B blocks C behavior C hit A ODE consistent given QDE B C ODE QDE Theorem 62 TL debugging tool QSIM models statement real behaviors Therefore general QSIM behavior Because QSIM complete beginning quantifier possibly correspond ments corresponding tool TL paths If QSIM user knows sequence events occur sequence events occurs TL print path occurs Also damped spring example nested quantifiers insight tree contain paths truth certain CTL state truth certain real behavior use TL tree The user spurious behavior gain actual behavior This provides opportunity structures represented QSIM structure paths QSIM behavior information isolate interesting imply The program terminals support graphical user learn carefully display QSIM behavior need know QSIM behavior chosen CTL statements trees In circumstances tree evaluating B Shults BJ KuipersArcial Intelligence 92 1997 91129 121 63 Proving properties controllers controller controller nonlinear local control laws appropriate Kuipers Astriim laws A heterogeneous 151 TL QSIM different possibly overlapping prove properties heteroge created neous control composition operat ing regions Such controller created presence incomplete knowledge regions control structure boundaries operating presence action A heterogeneous equation incomplete knowledge representing set possible behaviors By express qualitative CTL validity guarantee ing desired guarantee 151 automatically demonstrate simple reactor chemical prove certain useful properties highly nonlinear design heterogeneous level controller set possible behaviors Kuipers AstrGm qualitative differential law analyzed tank second checked statement water controllers predict simulation control Gazi Ungar use TL prove properties models chemical reaction controllers 9 lo behavior information There programsQ2 numeric bounds landmark advantage numeric plied bounding applications use propositional include numerical timecritical prove knowledge 161 43 extend QSIM information derive values time points The program TL easily ap 21 NSIM 121 prune spurious behaviors trees output QSIM extensions use quantitative produce quantitative bounds predictions language numeric propositions For information state propositions These propositions properties models face incomplete allow TL 64 TeQSIM temporal constraints simulation In paper use temporal logic formulas check interaction qualitative input TeQSIM simulation pronounced output QSIM Bra model agenda allowing logic formula This makes portion state space simulation teksim pos use It allows results obser temporally tractable inputs discontinuous changes conditions One use temporal focus 461 extend logic statements treat temporal given particular satisfy simulation jnik Clancy checking interleaves model checking QSIMs simulation branches sible ful large complex models exogenous specify user vations guided example constraints lowed unguided rive performance realistic control ment exogenous simulation guarantee Brajnik types boundary planning simulation problem explore critical portions large state space plan variable new constraints fol TeQSIM demonstrate domain water supply manage required incorporating discover succeed model Clancy 56 122 B Shutts BJ KuipersArtijicial Intelligence 92 1997 91129 7 Relation work The results described paper related work fields temporal logic model checking simulation control Probably processes work temporal cations CTL CTL More closely state CTL logic controller grammable process control TL makes continuoustime logic model checking parallel computing appli 8181 related work Moon et al 191 checked statements pro ladder diagrams Their specific application chemical logic CTL possible control systems apply complex systems generated discretetime dynamical transition temporal graphs Alur Henzinger properties discreteevent expressive language express CTL However 11 use logic called metric temporal time systems Metric integrates easy express statements CTL temporal logic systems logic general MTL check strictly speaking level higher MTL difficult information Jahanian realtime II modeled systems Real Time Logic checked Modechart model Real Time Logic undecidable Model checking CTL expressing statements decidable suited systems decidable statements useful general certain classes statements 8 However Real Time Logic especially language Statements CTL Modechart timecritical shown difficult Other systems exist allow temporal logic sentences checked structure continuous representing dynamical discrete event systems TL makes formal connection systems timecritical logic model checking temporal 8 Conclusion TL implements method modal physical prove temporal incomplete formulas logic properties behavior continuous qualitative semiquantitative description terms set qualitative constraints theorems behavior reasonable constraints This applies systems timecritical provides meaningful This link If user physical QSIM TL prove function consistent requirements This interpretation simulationbased phrase proof simulation extendedrealvalued logicbased sound inference methods support value design variety hybrid validation continuous reasoning techniques substantial piecewisecontinuous systems Appendix A Extensions propositional language The implementation TL language appendix In cases includes propositions added propositions useful B Shulrs BJ KuipersArtcial Intelligence 92 1997 91129 123 special language form predicted QSIM structure prove theorems underlying systems Some included proof theorems issues treatment This appendix discusses dynamical inclusion involved require distracting adding new propositions First mention function This returns single argument This mainly state Note talk complexity extensions convenience The proposition mention proposition proposition language The syntax funcall lisp proposition value returned lisp function called state logic It added user considered theorems effects printing soundness main information f funcall f care major illustrates issues involved adding containsrange u ni n2 u variable state s nt n2 extended proposition numeric true current behavior determined range lie contains interval real numbers This number named u n1 n2 subset If theorems paper going applied new proposition specification proof Lemma 13 way induction able include step proof Theorem 14 performed Therefore define temporally splitting set means reasonable state determined respect proposition Once Lemma 13 Theorem 14 proved proposition functions determine required rest theorems follow extendedrealvalued proposition We specification proposition containsrange fiui nl n2 temporally Dk partition domain corresponding ti ui 1 n 19 describes splitting nln2 c ui The reader want try prove Lemma 13 Theorem 14 point determined respect In fact Theorem 14 false definition Since order problem arises Without strict definition means proof state set U functions contains set functions modeled x path formula nl n2 specified proposition fullpath x describes value specific function Ui Ie possible fixed prove subrange path formula containing new proposition set functions containsrange proposition following Consider function realvalued information numeric 0 b minf space fall interval fall interval path Fig A1 time counterexample solutions UX rx2 r E l22 provided user Further suppose variable V QDE constraints V quantity Suppose inf real value named landmark known real value named landmark b known certain t E 0l Fig Al Suppose qval V 0 std 1 time l22 28 behavior t 0 124 B Shults BJ KuipersArtificial Intelligence 92 1997 91129 inf T b 1281 l221 0 1001 minf 2 I T 1 I 0 0 I Fig A I Qualitative behavior quantitative landmark bounds qval V 0 t E I 2 qval V b The following real solutions QDE formulas true fullpath time t 1 qval V t 2 qval time functions V b eventually containsrange strongnext V l2 strongnext i2 containsrange V 8 8 eventually containsrange strongnext V 2 2 strongnext containsrange V 2 2 These path formulas actual solution information spurious containsrange realvalued functions cut ranges QDE In case use nontrivial way range function proposition combine In order Lemma 13 Theorem 14 hold general QSIM state determined respect containsrange range associated landmark variable u state trivial contain single point TL user propositions u nt n2 numeric intersectsrange Other propositions useful required theorems gaining continuous However strict condition intended proving possible values associated landmark containsrange continuous systems equivalent complete information determinedness information systems The exception course programs single QSIM prediction case Q2 able narrow In case theorems real number similar propositions prove Finally mention status proposition inrange proposition cycle The proposition arguments true named property A state state stable equilibrium A transition transition state unstable stable quiescent QSIM determined stable terminal range A cycle property quiescent state path state state matches previously generated value variables crosses boundary state B Shults BJ KuipersArtificial Intelligence 92 1997 91129 125 represented tree Other quiescent stable properties QSIM interface functions described That reason include discussion discussion logic We define QSIM state determined respect propositions status status unstable quiescent determined QSIM incorrect determines quiescent state successors unstable underlying properties stable stable This unstable Additional propositional QSIM states For example order states indefinitely information chattersink chatter sition chattersinkp state chattersink lated domain realvalued draw information newest express succinctly operators added allow user gain release QSIM produces fact certain variables point stop chattering So add propo true state language state In case proposition real meaning trans functions Therefore mainly QSIMs output Appendix B Refined definition reasonable function In appendix use R denote The traditional definition reasonable function reals R denote sine tangent r2 purposes Giving satisfactory definition reasonable let functions hand want simulated QSIM Finding simulate excluding reasonable inclusive ODE abstracts functions cover interesting balance allow functions solution functions simulation investigation including 141 restrictive extended reals current simple We like reasonable On reasonable functions QSIM area open impossible r2 simulates input However want The definition QSIM algorithm The following questions come context Should allow infinite derivatives IX Should allow limits f exist Should allow definition R Is concise way expressing points infinitely critical points gives best worlds The definition offer adequate traditional purposes paper This defini 141 inclusive definitions tion possible inclusive R supremum function A A Definition 23 Suppose A interval A JR reasonable f continuous f continuously f finitely critical points E R lim I ii iii iv differentiable ft b infimum f f b derivative bounded exists lR b E R limb interval Iw n A ft exists 126 B Shults BJ KuipenArtial InteNigence 92 1997 91129 reasonable sine reasonable interval r2 72 0 0 00 00 E IR sin lx According x sin 1 reasonable definition 001 Tangent Appendix C Proofs Proof Lemma 5 We want universal M M x b M x k formula x fullpath Without lemma induction length loss generality assume positive normal form The proof Since atomic propositions perfect Q CD Mx k M x b This justifies base case Suppose universal formula length k makes theorem true CD length k If necessarily p M y p Therefore induction M y k p In particular M x p M x fullpath y starting state X fullpath y starting state X If pl p M x k pi 1 n We need M x b pi This follows induction Thus M x k Cp p M s pi 1 6 n We need This follows induction Therefore M x k Sp atomic proposition positive normal form p 4 p q p q nonnegative integer Mx b q nonnegative smallest Therefore M xi q nonnegative Therefore M x Ax integer j choose Mxj k p integer j M xi k p induction If releases nonnegative integer Ax M xi p q nonnegative integer j M xi b p First suppose nonnegative integer AX M xi k q Then M xi k q nonnegative integer Ax induction Therefore M n b Ax Now suppose M x p q We integer integer Thus nonnegative integer j Mxi p induction nonnegative select smallest nonnegative k p For j Md integer k M xk j q choice For nonnegative M xk q induction Therefore nonnegative M xl k q nonnegative M x releases If Q p Ax 1 M x b p induction j I M xj k p That integer 1 Ax p q integer If Ax 1 M x b p If di strongnext p Ax 1 Mx p induction Cl If pi M x p If p p p If B Shults BJ KuipersArtiJiicial Intelligence 92 1997 91129 127 Proof Theorem 14 Suppose x fullpath termined propositions TL x b If specification 46 c temporally describes x c x qualitatively ti U JM respect QSIM structure 6 J perfect path formula ti U describes Without x fullpath propositions apply This case follows Our induction loss generality assume positive normal form Suppose QSIM structure M determined respect perfect path formula positive normal form r x We induction length k J In base case atomic proposition Lemma 13 hypothesis firs y W W perfect path formula k M determined respect proposition describes splitting pt Yi V p temporally describes If Pc says fullpath y QSIM structure positive normal q form length y c qualitatively describes vta UM j 1 j m Mrx b pi j 1 j m This sho_w temporally pi c ri V M Iti V follows induction hypothesis ti f ti U If CD pt p SLOW pj c temporally describes temporally If If J c temporally p c p q x c qualitatively describes r4 j 1 j 6 m A4 r x pi j 1 j 6 m Again follows induction p ti U JM MEL x k p Since definition positive normal form p follows induction hypothesis Lemma 13 atomic proposition ti U t U M By semantics xh b q iii ti U x c qualitatively ti d UI Lemma 10 Thus q c temporally integer pc temporally know nonnegative nonnegative integer x c q ua I ive y describes 1 h xc qualitatively temporally describes UI M induction For nonnegative ti dl LIIl M induction So c It t 1 d escribes ti dh UIl Lemma 10 Thus I h Mrx k p Since integer h Ax ti dl 6 describes describes describes describes ti 9 U uM p q If releases integer 1 h c temporally nonnegative ti C know nonnegative nonnegative t 41 97 U1 f nonnegative q c temporally describes h iix induction xc qualitatively describes describes integer_h clx M r x1 p First suppose ti U UM Smce r x b MTL xh b 4 MEL xh k q integer h Ax We know x c qualitatively integer h nx describes Lemma 10 Therefore integer ti dh UI II nonnegative x c qualitatively describes ti U Now suppose nonnegative integer h nx h There smallest p For nonnegative describes induction For j MEL xi p ti di 6 u UM induction So nonnegative j h G r xi ti di 6 Uj 4 c_temporally q describes integer ri di Uli JM p c temporally describes nonnegative I c qualitatively p q integer 1 h GijTL x1 krx 128 B Shults BJ KuipersArtificial Intelligence 92 1997 91129 integer h Ax p c temporally describes integer 1 j 4 c temporally describes temporally describes ti U JM rL xh F 4 nonnegative integer j h ti dj Uji M nonnegative ti dr UIl UM Therefore c If p 0 25 p c temporally Ax 1 x1 c qualitatively describes ti di dl 6 UI This follows induction iUIi I If strongnext use Lemma 10 p 0 23 p c temporally ti dl UI I Once follows induction hypothesis ti dl U I UM Ax 1 xl c qualitatively describes ti describes scribes Lemma 10 0 Acknowledgements QSIM TL available edu di These results Qualitative Reasoning Group f tp f tp cs utexas anonymous pubqsim rectory accessible WorldWide Web http www cs utexas eduusersqr Inc grant EPRI Institute IRI9216584 National Science Foundation apparatus method process disclosed University makes warranty This report prepared University Texas Austin account work grant RP803021 Neither EPRI Texas Austin person acting use express implied respect report use apparatus method sponsored Electric Power Research members EPRI behalf information infringe privately owned use damages process disclosed We grateful Rance Cleaveland writing paper qualitative readers Markus Kaltenbach Richard Trefler Dan Clancy Bert Kay Giorgio Brajnik Michael Hofbaur anonymous somewhat disjoint disciplines logic use language comfortable helpful comments temporal fields We grateful resulting report Bhat Grumberg answering questions algorithm A difficult rights b assumes liabilities respect use information excellent article 31 task suggestions Cleaveland audiences intended reviewers reasoning References I R Alur T Henzinger Realtime logics complexity expressiveness Inform Comput 104 1993 3571 121 D Berleant BJ Kuipers Combined qualitative numerical J Struss eds Recenr Advances Qualitafive Physics simulation 43 MIT Press Cambridge MA 1992 9 Faltings 31 G Bhat R Cleaveland 0 Grumberg Efficient onthefly model checking CTL Proceedings Conference Logic Computer Science WCS95 1995 41 G Bmjnik DJ Clancy Guiding refining simulation temponl logic Proceedings Third International Workshop Temporal Representation Reasoning 1996 B Shults BJ KuipersAriificial Intelligence 92 1997 91129 129 15 1 G Brajnik DJ Clancy Temporal constraints trajectories Proceedings Tenth International Workshop Qualitative Reasoning About Physical Systems Fallen Leaf Lake CA 1996 qualitative simulation 16 1 G Brajnik DJ Clancy Temporal constraints trajectories qualitative simulation Proceedings AAAI96 Portland OR 1996 17 I EM Clarke EA Emerson AI Sistla Automatic verification finitestate concurrent systems temporal logic specifications ACM Trans Program Lang Syst 8 1986 244263 8 EA Emerson Temporal modal Amsterdam Science NorthHolland logic J van Leeuwen ed Handbook Theoretical Computer 1990 9951072 9 I E Gazi LH Ungar BJ Kuipers Temporal controller verification R Shoureshi ed Intelligent Control IEEE Press New York summarizing MonteCarlo simulation logic application 1996 1 10 I E Gazi LH Ungar WD Seider BJ Kuipers Automatic analysis MonteCarlo simulations dynamic chemical plants Proceedings European Symposium Computer Aided Process Engineering ESCAPE6 1 I1 1 E Jahanian properties Proceedings Realtime Systems Symposium Huntsville AL 1988 verifying Pergamon Oxford 1996 DA Stewart A method Modechart specifications 12 1 H Kay BJ Kuipers Numerical behavior envelopes qualitative models Proceedings AAAI93 Washington DC 1993 606613 131 BJ Kuipers Qualitative 14 I BJ Kuipers Qualitative Reasoning Modeling Simulafion Incomplete Knowledge MIT Press simulation Artif Intell 29 1986 289338 Cambridge MA 1994 1 I5 BJ Kuipers K Astrom The composition validation heterogeneous control laws Automatica 30 1994 233249 1 161 BJ Kuipers D Berleant Using incomplete quantitative knowledge qualitative reasoning Proceedings AAAI88 St Paul MN 1988 I 17 I BJ Kuipers B Shults Reasoning J Doyle E Sandewall logic continuous P Torasso eds Proceedings Fourth International Conference Principles Knowledge Representation Reasoning Bonn 1994 systems 18 1 0 Lichtenstein specifications Lungunges198497107 A Pnueli Checking linear finite state concurrent Proceedings Twelfth Annual ACM Symposium Principles Programming programs satisfy I 191 1 Moon GJ Powers JR Burch EM Clarke Automatic verification sequential control systems temporal logic AIChE J 38 1992 6775 nonmonotonic I20 I M Rayner On applicability Intell 49 199 1 345360 logic formal reasoning continuous time Artif