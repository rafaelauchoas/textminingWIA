Artiﬁcial Intelligence 133 2001 139188 Reasoning nonlinear identiﬁcation Elizabeth Bradley a1 Matthew Easley b1 Reinhard Stolle c2 Department Computer Science University Colorado Campus Box 430 Boulder CO 803090430 USA b Rockwell Science Center 444 High Street Suite 400 Palo Alto CA 94301 USA c Xerox PARC 3333 Coyote Hill Road Palo Alto CA 94304 USA Received 19 May 2000 received revised form 4 May 2001 Abstract System identiﬁcation process deducing mathematical model internal dynamics observations outputs The program PRET automates process building layer artiﬁcial intelligence AI techniques set traditional formal engineering methods PRET takes generateandtest approach small powerful metadomain theory tailors space candidate models problem hand It tests models known behavior target large set moregeneral mathematical rules The complex interplay heterogeneous reasoning modes involved process orchestrated special ﬁrstorder logic uses static abstraction levels dynamic declarative meta control simple form truth maintenance order test models quickly cheaply Unlike modeling toolsmost use libraries model small wellposed problems limited domains rely users supply detailed descriptions target systemPRET works nonlinear systems multiple domains interacts directly real world sensors actuators This approach met success variety simulated real applications ranging textbook systems realworld engineering problems 2001 Elsevier Science BV All rights reserved Keywords Automated model building System identiﬁcation Qualitative reasoning Qualitative physics Knowledge representation framework Reasoning framework Inputoutput modeling Corresponding author Email addresses lizbcscoloradoedu E Bradley merpalrockwellcom M Easley rstolleparcxeroxcom R Stolle 1 Supported NSF NYI CCR9357740 ONR N000149610720 Packard Fellowship Science Engineering David Lucile Packard Foundation 2 Research performed research assistant University Colorado Boulder postdoctoral fellowship Stanford University funded German Academic Exchange Service DAAD Gemeinsames Hochschulsonderprogramm III von Bund und Ländern 0004370201 matter 2001 Elsevier Science BV All rights reserved PII S 0 0 0 4 3 7 0 2 0 1 0 0 1 4 3 6 140 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 1 Introduction One powerful analysis design tools existenceand difﬁcult createis good model Modeling essential ﬁrst step variety engineering problems Faced task designing controller robot arm instance mechanical engineer performs simple experiments observes resulting behavior makes informed guesses model fragments account behavior combines terms model checks physical This model mathematical core controller Accuracy requirement efﬁciency reasons engineers work hard construct minimal modelsthose ignore unimportant details capture behavior important task hand The subtlety reasoning skills involved process intricacy interplay led practitioners classify modeling intuitive art 69 The program PRET topic paper formalizes intuitions automates coherent useful art PRET automated tool nonlinear identiﬁcation Its inputs set observations outputs target optional hypotheses physics involved set tolerances successful model match observations output ordinary differential equation ODE model internal dynamics See Fig 1 block diagram PRET uses small powerful domain theory build models larger general mathematical theory test It designed work domain admits ODE models adding new domain simply matter coding simple domain rules Its architecture wraps layer artiﬁcial intelligence AI techniques set traditional formal engineering methods This AI layer incorporates variety reasoning modes qualitative reasoning qualitative simulation numerical simulation geometric reasoning constraint propagation resolution reasoning abstraction levels declarative meta control simple form truth maintenance Models represented componentbased modeling framework accommodates different domains adapts smoothly varying amounts domain knowledge allows expert users create modelbuilding frameworks new application domains easily An inputoutput modeling subsystem allows PRET observe target systems actively manipulating actuators reading sensors perform experiments results augment knowledge manner useful modeling problem trying solve The entire reasoning process Fig 1 PRET combines AI formal engineering techniques build ODE models nonlinear dynamical systems It uses domainspeciﬁc knowledge build models encoded ODE theory test interacts directly autonomously target systems sensors actuators E Bradley et al Artiﬁcial Intelligence 133 2001 139188 141 Fig 2 The identiﬁcation SID process Structural identiﬁcation yields general form model parameter estimation values unknown coefﬁcients model determined PRET automates phases process orchestrated special ﬁrstorder logic inference automatically chooses invokes interprets results techniques appropriate point modelbuilding procedure This combination techniques lets PRET shift ﬂuidly forth domainspeciﬁc reasoning general mathematics actual physical experiments order navigate efﬁciently exponential search space possible models In general identiﬁcation proceeds interleaved phases ﬁrst structural identiﬁcation form differential equation determined parameter estimation values coefﬁcients obtained If structural identiﬁcation produces incorrect ODE model coefﬁcient values solutions match sensor data In event structural identiﬁcation process repeatedoften information previous attempt faileduntil process converges solution shown diagrammatically Fig 2 In linear physical systems structural identiﬁcation parameter estimation fairly understood The difﬁcultiesand subtleties employed practitionersarise noisy incomplete data involved efﬁciency issue See 5966 examples In nonlinear systems procedures vastly difﬁcultthe type material covered pages standard textbooks Unlike identiﬁcation software control theory community PRET automated parameter estimator uses sophisticated reasoning techniques automate structural phase model building The basic paradigm generate test PRET ﬁrst uses encoded domain theorythe upper ellipse Fig 1to assemble combinations userspeciﬁed automatically generated ODE fragments candidate model In mechanics problem instance generate phase uses Newtons laws combine force terms electronics uses Kirchhoffs laws sum voltages loop currents cutset In order test candidate model PRET performs series inferences model observations model match This process guided important assumptions abstract reasoning chosen 142 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 lowerlevel techniques model proved wrong right PRETs inference engine uses encoded mathematical theory lower ellipse Fig 1 search contradictions sets facts inferred model observations An ODE linear instance account chaotic behavior model fail test target observed chaotic Furthermore establishing ODE linear matter simple symbolic algebra inference engine resort numerical integration establish contradiction Like domain theory PRETs ODE theory designed easily extended expert user To ideas concrete consider springmass shown right Fig 3 To instruct PRET build model user enter findmodel left ﬁgure PRET GUI leads users interaction subjecting syntax The domain statement instantiates relevant domain theory lines inform PRET Fig 3 Modeling simple springmass In example PRET user ﬁrst sets problem makes ﬁve observations position coordinates q1 q2 hypothesizes different force terms ﬁnally speciﬁes resolution range criteria successful model satisfy Angle brackets time identify state variables special keywords play roles PRETs use domain theory We use teletype font body paper identify terms play roles users interaction PRET E Bradley et al Artiﬁcial Intelligence 133 2001 139188 143 pointcoordinate state variables 3 Observations measured automatically sensors andor interpreted user symbolic numeric variety formats degrees precision For example ﬁrst observation Fig 3 informs PRET modeled autonomous 4 second states state variable q1 oscillates Numeric observations physical measurements directly An optional list hypotheses physics involvedeg set ODE terms model fragments different kinds frictionmay supplied findmodel conﬂict need mutually exclusive observations held true Finally specifications indicate quantities resolutions The ones end Fig 3 instance require successful model match q1 1 microsecond ﬁrst 120 seconds systems evolution It noted springmass example representative PRETs power intended applications Linear systems type easy model 566 engineer use software tool generateandtest guided search easy problem We chose simple presentation brief clear To construct model information findmodel PRET uses mechanics domain rule pointsum force 0 encoded knowledge base combine hypotheses ODE In absence domain knowledge omitted example short clearPRET simply selects ﬁrst hypothesis producing ODE k1q1 0 This candidate model passes test phase comparison observations The model tester implemented custom ﬁrstorder logic inference engine 83 uses set general rules ODE properties draw inferences model observations In case SCHEME 5 function called ODE k1q1 0 establishes fact order q1 0 expresses highest derivative q1 model zero Reasoning fact oscillation q1 observation findmodel PRET uses following rules ODE theory establish contradiction notoscillation var StateVar linearsystem autonomous var StateVar order var StateVar var N var N 2 falsum oscillation var StateVar 1 notoscillation var StateVar 2 Rules represented declaratively logicbased formalism implication generalized Horn clause 9 writtenfollowing SCHEME conventionin preﬁx notation A clause head body usual meaning head implied conjunction 3 As described later paper PRET uses variety techniques infer kind information target example simple bypass facilities giving information 4 That explicitly depend time 5 PRET written SCHEME 75 144 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 formulae body falsum formula represents inconsistency The ﬁrst rule expresses state variable xi linear oscillate order highest derivative appears model physical autonomous second simply states state variable oscillatory nonoscillatory time The way PRET handles ﬁrst candidate model demonstrates power abstractreasoningﬁrst approach steps inexpensive qualitative reasoning sufﬁce let quickly discard model PRET tries combinations force hypotheses single point coordinates models ruled qualitative reasons It proceeds ODE systems consist force balancesone point coordinate One example candidate model type k1q1 m1 q1 0 m2 q2 0 PRET discard model purely qualitative means invokes nonlinear parameter estimation reasoner NPER uses knowledge derived structural identiﬁcation phase guide parameter estimation process choosing good approximate initial values avoiding local minima regression landscapes 16 The NPER ﬁnds appropriate values coefﬁcients k1 m1 m2 solution ODE matches numeric time series candidate model ruled This far expensive proposition simple contradiction proof fact order q1 0roughly ﬁve minutes CPU time compared fraction secondwhich exactly PRETs inference guidance set use NPER resort moreabstract reasoning tools arsenal failed establish contradiction After having discarded variety unsuccessful candidate models similar proce dures PRET eventually tries model k1q1 k2q1 q2 m1 q1 0 k3q2 k2q1 q2 m2 q2 0 Again calls NPER time successfully It substitutes returned parameter values constants k1 k2 k3 m1 m2 integrates resulting ODE fourthorder RungeKutta comparing result numeric timeseries observation The difference integration observation stays speciﬁed resolution numeric comparison yields contradiction candidate model parameter values returned answer 6 If list usersupplied hypotheses exhausted successful model PRET generates hypotheses automatically Taylorseries expansions state variables standard engineering fallback kind situation This simple solution actually far deeper important advantage discussed later paper confers blackbox modeling capabilities PRET 6 If adequate model exists PRET returns ﬁrst encounters E Bradley et al Artiﬁcial Intelligence 133 2001 139188 145 The technical challenge modelbuilding process efﬁciency search space hugeparticularly resorts Taylor expansionsand PRET choose promising model components combine intelligently candidate models identify contradictions quickly simply possible Simple hypothesis enumeration create combinatorial explosion This profoundly inﬂuenced design goals phases modelbuilding process In particular PRETs generate phase exploit available domainspeciﬁc knowledge insofar possible A modeling domain small omit key model overly general domain prohibitively large search space By specifying modeling domain user helps PRET identify possible typical ingredients target systems ODE likely narrowing search space candidate models This greybox modeling approach differs traditional blackbox modeling model inferred external observations target systems behavior PRET actually mentioned previous paragraph It realistic described depth Section 2 engineers PRETs target audience operate complete vacuum ability leverage kinds domain knowledge users typically bring modeling problem lets PRET tailor search space problem hand The key approach classify model behavior highest possible abstraction level As demonstrated example highlevel techniques like symbolic algebra remove large branches search space knowledge target oscillates instance lets PRET quickly rule autonomous linear ODE model order In situations pruning single leaf tree possible models extremely expensive estimating parameter values nonlinear ODE prior ﬁnal corroborative simulationcomparison run Efﬁcient search requires rapid accurate selection appropriate reasoning modea difﬁcult dynamic problem depends PRET knows target given stage modelbuilding process Judicious use domainspeciﬁc knowledge important speeding model testing phase Some analysis methodssuch creep tests viscoelastic systems exampleare extremely powerful apply speciﬁc domains Other methods phaseportrait analysis apply dynamical systems general arguably powerful To effectively build test models nonlinear systems PRET determine methods appropriate given situation invoke coordinate interpret results Orchestrating subtle complex reasoning process difﬁcult problem PRETs solution rests carefully crafted knowledge representation frameworks described following section allow elegant formalization essential building blocks engineers knowledge reasoning powerful automated reasoning machinery described Section 3 uses formalized knowledge reason ﬂexibly variety modeling problems The inputoutput modeling techniques described Section 4also omitted simpliﬁed example Fig 3allow PRET autonomously explore relationship inputs outputs target reason multiple behavioral regimes Working concert methods allow PRET construct accurate parsimonious models internal dynamics nonlinear systems domain admits ODE models ranging toy problems like Fig 3 difﬁcult realworld applications Section 5 covers practical engineering examples 146 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 vehicle suspension water resource parametrically forced pendulum summarizes results applications including radio controlled RC car In cases good models crucial understanding physics process engineering design The core controller designed direct behavior RC car instance ODE model deviceinformation absent Radio Shack spec sheet Similarly decision support water resource systems depends critically knowledge changes rainfall propagate effectively captured ODE model driven pendulum basic mechanical element modern robotics systems As AI tool automates process building models systems like PRET possible implications roles practice science engineering means corroborating andor evaluating existing models designs medium instruct newcomers intelligent assistant aid allows time creative thought devoted demanding tasks In AI literature work automatically ﬁnding model given dynamic falls rubrics reasoning physical systems automated modeling machine learning scientiﬁc discovery The techniques presented paper resemble ideas research areas PRETs representational scheme reasoning candidate models build large body work automated model building reasoning physical systems example 33639739394 In particular emphasis qualitative reasoning qualitative representations integration numerical information techniques falls largely category qualitative physics 92 The project branch literature closely related PRET QRbased viscoelastic modeling tool developed Capelo et al 21 builds ODE models timeseries data PRET general handles linear nonlinear systems variety domains richer set model fragments designed adaptable Indeed PRETs implemented modeling domains viscoelastics allows model problems 21 The problem modeling dynamic systems examined perspec tives machine learning scientiﬁc discovery 5763889197 Target systems automated modeling tools range general natural phenomena systems gravity planetary motion speciﬁc natural systems predatorprey systems en gineered systems radiocontrolled car isolated behavioral episodes engineered systems radiocontrolled cars drive hallway Wednesday Correspond ingly spectrum possible models target systems ranges scientiﬁc ories postulate newly discovered entities natural laws equation systems abstraction level determined taskdriven engineering requirements Scientiﬁc discovery systems implied traditionally emphasized discovery scientiﬁc theories entities Therefore research scientiﬁc discovery address question discovered theory accurately models target nature happens match observations pre sented discovery program Likewise machine learning systems routinely use valida tion techniques crossvalidation order ensure accuracy learned model PRET takes strict engineering approach question accuracy Its goal E Bradley et al Artiﬁcial Intelligence 133 2001 139188 147 ﬁnd ODE serves useful model target context en gineering tasks controller design PRETs notion accuracy relative given observations ﬁnds ODE matches observations userspeciﬁed precision try secondguess speciﬁcations users choice observations It users responsibility ensure set observations presented PRET supplied speciﬁcations reﬂect engineering task hand It course possible use PRET scientiﬁc discovery tool supplying sets observations separate runs unifying results PRET solve kinds crossvalidation problems arise ML literature simply use perform individual validation runs interpret results The project scientiﬁc discoverymachine learning branch literature closely related PRET LAGRANGE 30 builds ODE models completely observed linear systems applying regression techniques timeseries data PRET LAGRANGE model problems similar complexity differ PRET handle nonlinear systems incomplete data LAGRANGE This reﬂected internal complexity Since linear models admit linear regression easier PRETs vastly computationally expensive nonlinear parameter estimation LAGRANGEs model tester simple fast cheap generator afford create larger number models PRETs search space larger expensive navigate varied arsenal techniques described rest paper Because highly interdisciplinary nature contents article important relations ﬁelds disciplines We chosen distribute related work discussion appropriate subsections gather separate section 2 Representations model building A central problem automated modeling task size search space exponential number model fragments severe restrictions placed modelbuilding process Ideally like build blackbox models general reasoning techniques applied require domain knowledge examination The combinatorics generate phase paradigm unrealistic Most AI modeling work taken clearbox modeling approach knows trying model This unrealistic engineering practice A good compromise greybox modeling partial information internals boxeg electronic viscoelasticis prune search space reasonable size The key making greybox modeling nonlinear dynamical systems practical ﬂexible knowledge representation scheme adapts problem hand Domain dependent knowledge drastically reduce searchspace size applicability fundamentally limited The challenge balancing inﬂuences able determine point reasoning procedure knowledge applicable useful 148 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 Table 1 Example component representations Component General Electrical Mechanical Proportional e Bf v Ri v Bf Differentiating f C dt C dv dt f M dv dt Integrating e A df dt v L di dt v K df dt Our solution termed componentbased modeling CBM combines representation allows different levels domain knowledge set reasoning techniques appropriate level control strategy invokes right technique right time In particular combine ideas generalized physical networks 79 metalevel representation idealized twoterminal elements traditional compositional model building 36 qualitative reasoning 92 The intent span spectrum highly speciﬁc frameworks work single limited domain springdashpot vocabulary modeling simple mechanical systems abstract frameworks rely heavily general mathematical formalisms expense huge search space sizes 17 21 The CBM paradigm Representation In late 1950s early 1960s inspired realization principles underlying Newtons law Kirchhoffs current law identical 7 researchers began combining multiport methods number engineering ﬁelds generalized engineering domain prototypical components 74 The basis generalized physical networks GPN paradigm behavior ideal terminal elementa componentmay described mathematical relationship dependent variables generalized ﬂow generalized effort ﬂowt effortt powert This pair variables manifests differently domain ﬂow effort current voltage electrical domain force velocity mechanical domain In bond graphs 60 generalized representation paradigm seen use AI modeling literature velocity ﬂow variable force effort variable The difference GPNs bond graphs frameofreference shift While bond graphs good alternative generalized physical networksespecially causality issues concernconverting ODE models difﬁcult makes useful kinds complex nonlinear modeling tasks address paper The GPN representation important advantages model building Firstly twoport nature makes easy incorporate sensors actuators integral parts model For example current source associated impedance creates loading effect rest circuit With network approach effects naturally model real systems Secondly GPNs bring similarities components properties different domains Electrical resistors 7 Summation forces currents point zero respectively manifestations conservation energy E Bradley et al Artiﬁcial Intelligence 133 2001 139188 149 Fig 4 Two systems described GPN model series RLC circuit b series damperspringmass V voltage source velocity source b v iR mechanical dampers v f B physically analogous dissipate energy manner proportional operative state variable represented single GPN component incorporates proportional relationship ﬂow effort variables Two useful GPN components instantiate integrating differentiating relationships representation allows ﬂow effort source components shown Table 1 See 60 79 additional domains components Thirdly GPN representation makes easy incorporate varying amounts levels information This closely related ability capture behavioral analogs Both networks Fig 4 example modeled series proportionalintegratingdifferentiating GPN knowledge electronic mechanical let reﬁne model accordingly series RLC circuit damper springmass respectively The available domain knowledge viewed lens expands internals GPN components selectively sharpening model appropriate useful ways PRET currently incorporates ﬁve speciﬁc GPNbased modeling domains mechanics viscoelastics linearelectronics linearrotational linear mechanics Domains constructed domain experts stored domaintheory knowledge base instantiated domain line findmodel Each consists set component primitives framework connecting components model The basic linearelectronics domain example built electrical engineer comprises components linearresistor linearcapacitor standard parallel series connectors codiﬁed notions model equivalence Thévenin Speciﬁcation state variables different domainstype frames reference etcis nontrivial design issue In mechanics domain bodycentered inertial reference frame assumed coordinates follow formulation classical mechanics 46 assigns coordinate degree freedom allowing equations written vectors The representation described section designed handle coordinate issues associated remaining domains Finally modeling domains dynamic domain contain successful model automatically expands include additional components connections This procedure described following section If user wants apply PRET fall existing domain build new domain scratcha matter making list components connectorsor use PRETs metadomains general frameworks arrange hypotheses candidate models relying modeling techniques 150 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 transcend individual application domains The xmissionline metadomain instance generalizes notion building models iterative pattern similar standard model transmission line useful modeling distributed parameter systems The linearplus metadomain takes advantage fundamental linearsystems properties allow linear nonlinear components treated separately certain circumstances dramatically reduces model search space Both directly customized speciﬁc application domain demonstrated Section 5 We chose particular pair metadomains good initial set cover wide variety engineering domains We exploring possibilities especially purposes modeling nonlinear networks Choosing modeling domain given problem trivial difﬁcult task practicing engineers PRETs target audience Such user ﬁrst look existing domains matched problem If appropriate choose metadomain based general properties modeling task If close match physical systems components models components lumped parameter linearplus appropriate xmissionline better suited modeling distributed parameter systems There signiﬁcant overlap domains metadomains linear electronic circuit modeled speciﬁc linearelectronics domain xmissionline metadomain linearplus metadomain In cases PRET produce model effort involved different The advantage linearelectronics domain specialized built knowledge linear electrical circuits effect knowledge focus search A capacitor parallel resistors instance equivalent single resistor parallel capacitor The linearelectronics domain knows allowing avoid duplication effort metadomains Perhaps important generality overlap metadomains particularly helpful know exactly kind dealing uncommon situation engineering practice There variety ways use generalized physical networks help automate PRETs structural identiﬁcation phase One create library GPN components test possible combination valid model This method obviously impractical simple enumeration creates exponential search spacea severe problem component library large case attempting model nonlinear systems 8 A moreintelligent method use hierarchy domaindependent independent knowledge direct search described 22 The CBM paradigm Reasoning The GPN representation effective basis dynamic modeling domains complexity naturally rises falls according available information target A general domaineg set dynamical systemshas complex search 8 Nonlinear terms somewhat idiosyncratic supplied separate library entry This issue arisen previous work GPNs applied mainly linear problems E Bradley et al Artiﬁcial Intelligence 133 2001 139188 151 Fig 5 A hierarchy model building domains space speciﬁc domain like set conservative mechanical systems smaller The challenge reasoning GPN models tailor reasoning knowledge level way prune search space minimum Organizing domains hierarchy generalityas shown Fig 5is needed hierarchical set analysis tools means assessing situation choosing tool appropriate Focused appropriate analysis critical efﬁciency automated model building process As demonstrated springmass example Fig 3 invalid models ruled purely qualitative information expensive pointby point numerical comparisons The challenge designing componentbased modeling paradigm come framework supported kind reasoning The key idea different analysis techniques appropriate different domains solution combines structured hierarchy analysis tools shown Table 2 scheme lets GPN component type domain knowledge dictate tools use Cell dynamics geometric reasoning technique classiﬁes phase portrait qualitatively simple discretized heuristics Delaycoordinate embedding lets infer dimension topology internal dynamics time series measured single output sensor Nonlinear timeseries analysis blanket term classiﬁcation follows attractors bifurcations ontology nonlinear dynamics Linear systems analysis refers techniques taught undergraduate engineers pole zero diagrams step response Analysis tools restricted linear systemseg creep testingare highly domainspeciﬁc Tools level table apply lower levels See Section 41 details Reasoning modelbuilding proceeds obvious manner dictated hierarchy domain knowledge target available true black box situation models constructed general reasoning techniques analysis tools apply ODEsthose line Table 2 This highly general approach computationally expensive universally applicable Combined Taylorseries hypothesis generation layer makes PRET capable albeit slow blackbox modeling tool If known linear extensive powerful repertoire linear analysis tools developed decades makes model building testing tasks far imposing Moreover inputs drive terms linear 152 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 Table 2 Component type domain knowledge dictate analysis tools PRET use build test models Tools higher table general results powerful System type Analysis tools Nonlinear Cell dynamics 56 Delaycoordinate embedding 80 Nonlinear time series analysis 1486 Linear Linear analysis 76 Restricted linear Domain dependent 21 systems appear verbatim resulting ODE makes inputoutput analysis easier described Section 5 In morerestricted domains analysis tools speciﬁc powerful In viscoelastics example qualitative properties strain test reduce search space possible models linear 21 Given machinery PRETs generate phase proceeds follows First constructed list hypothesesin form GPN candidate model componentsthat built domain andor supplied user These component hypotheses combined models rules operative domain Newtons Third Law mechanics Kirchhoffs Voltage Law electrical xmissionline Note entails selecting proper connectors model topology highly domainspeciﬁc Special keywords hypotheses force voltage serve links domain rules Equally important keywords declarative nature PRETs overall knowledge representation scheme Section 3 ﬂow reasoning easily understandable application engineers allowing modify augment domain rules The model generator selects hypotheses simple enumeration list builtin usersupplied hypotheses beginning possible oneterm models possible twoterm models If model sequence consistent observations uses variety powerseries expansions automatically generate new ODE terms adds end hypothesis list continues process This model testing process guided hierarchy Fig 5 analysis tools Table 2 If nonlinear example cohort nonlinear tools applied sensor data determine dimension d dynamics fact allows PRET automatically disregard models order d Other nonlinear analysis techniques yield similar searchspace reductions If linear tools apply tools cheaper powerful nonlinear tools CBM framework guides PRET use Knowledge target oscillating example constrains autonomous linear model second order implies constraints coefﬁcients reasoning purely symbolic inexpensive These rules represented declaratively keywords follow language mathematics texts deriv jacobian allows experts customize ODE theory E Bradley et al Artiﬁcial Intelligence 133 2001 139188 153 The generate test phases interleaved shown Fig 2 generate phases ﬁrstcut search space contain model matches observed behavior GPN modeling domain dynamically expands include moreesoteric components As described Section 21 example linearelectronics domain begins components linearresistor linearcapacitor If models search space rejected CBM framework automatically expands domain include component type linearinductor The intuition captured notion layered domains inductors common practical engineering systems capacitors Expanding domains linear components difﬁcult number possible component types increases dramatically ordering scheme necessarily somewhat ad hoc In engineering domains exist welldeﬁned categorization schemes help codify procedure Tribology texts example 9 specify different kinds friction different kinds ball bearings notions common tried ﬁrst rare esoteric 48 The CBM paradigm designed let expert usera domain builderencode kind information quickly easily let PRET leverage knowledge modelbuilding process Because domain expert required detailed understanding internal structure program working knowledge SCHEME CBM provides simple construct specifying structure information natural number prioritizes possible components The metadomain facilities simplify process building customized domain simple adding components metadomain The viscoelastics domain instance instantiation xmissionline metadomain proportional integrating element series See Section 5 examples The primary disadvantage CBM paradigmand energybased modeling approaches generalis assumptions constrain types problems modeled Nonphysical systems like currency exchanges instance necessarily obey conservation energy dynamics described GPNs There recent work extends energybased modeling paradigms problems obey traditional effortﬂow relationships Thermal systems instance direct electrical analogy temperature voltage heat ﬂow current However product temperature heat ﬂow power heat ﬂow power One thermal modeling tool 60 works treating temperature effort variable heat ﬂow ﬂow variable requires ad hoc techniques couple thermal subsystem traditional subsystem electrical mechanical traditional power relationship holds Another interesting approach termed Forrester System Dynamics FSD 4249 met success diverse areas power relationship exists biology epidemiology sociology economics strategic management FSD models consist network components model ﬂow accumulation important conserved quantities pollutants river ecological populations buyers market This natural extension framework currently working incorporate moregeneral notion conservation current implementation greatly expand class applications 9 Tribology science surface contact 154 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 PRET handle This extension fairly straightforward LeFèvre 65 showed FSD models subset bond graphs use capacitance modulated ﬂow sources generalized Kirchhoffs voltage current laws Once GPN network generated ﬁnal step modelbuilding process convert ODE format This conversion step rests powerful network theoretic principles engineering vernacular decades fairly easy automate In particular PRET uses loop node equations convert GPN network unspeciﬁed component values ODE unspeciﬁed component values The mechanical details conversion algorithm described 32 23 Componentbased modeling Summary The componentbased modeling paradigms hierarchy qualitative quantitative reasoning tools relate observed physical behavior model form coupled generalized physical networkbased representation provide ﬂexibility required greybox modeling nonlinear dynamical systems This type reasoning modeling tool partial knowledge internals target accurately reﬂects abstraction levels reasoning processes effectively engineers identiﬁcation procedure The GPN representation powerful wide range systems It naturally captures similarities mechanical damping electronic resistance adapts smoothly different levels domain knowledge GPN model abstract general highly speciﬁc depending knows This reduces PRETs search space allowing work GPN componentsand corresponding abstract qualitative reasoning techniquesas long possible point converts GPN set ODEs Coupled domain metadomain facilities described Section 22 CBM paradigm makes creating domain simple expert need specify prototypical components connections Optionally specify efﬁcient model construction techniques data analysis tools different situations prescribe set rules help identify correct model quickly This layered domainmetadomain structure makes easy apply PRET new problems human ear currently modeling xmissionline metadomain The CBM paradigm helps naïve users allows hypotheses form engineering physical sciences textbooks This makes interacting PRET natural user needs know domain components physics function interaction composition Finally twoport nature GPN representation lets PRET incorporate sensors actuators integral parts modelan essential solution inputoutput modeling problem described Section 4 The novelty utility componentbased modeling lie use metalevel terminal components automated modeling nonlinear systems Previous work AI community metalevel components similar GPNs typically restricted reasoning causality 89 modeling hybrid systems 70 Amsterdams work automated model construction multiple physical domains 4 exception limited linear systems order Capelo et al 21 described E Bradley et al Artiﬁcial Intelligence 133 2001 139188 155 previous section build ODE models linear viscoelastic systems evaluating time series data qualitative reasoning techniques Although goals similar PRETs library possible models restricted involves component types linear springs linear dashpots PRETs CBM framework general use large rich set metalevel components automated model building linear nonlinear systems supports easy user customization components domains 3 Orchestrating reasoning models As described previous section PRET uses componentbased representations user hypotheses domain knowledge generate candidate models given target In section reasoning framework PRET tests model observations target Like human expert PRET makes use variety reasoning techniques abstraction levels course process ranging detailed numerical simulation highlevel symbolic reasoning These modes interactions described Section 31 The challenge designing PRETs model tester work formalism met requirements ﬁrst facilitate easy formulation reasoning techniques second allow PRET reason techniques appropriate situations In particular reasoning physical systems candidate models place abstract level ﬁrst resort moredetailed reasoning later necessary To accomplish PRET judges models according opportunistic paradigm valid proven invalid model bad reason Or conversely reason discard model valid model PRETs central task quickly ﬁnd inconsistencies candidate model target Section 32 describes reasoning control techniques allow 31 Reasoning modes PRETs test phase uses different classes techniques order test candidate model set observations target qualitative reasoning qualitative simulation constraint reasoning geometric reasoning parameter estimation numerical simulation In experience Section 5 set techniques described following ﬁve subsections provides PRET right tools quickly test models given observations Parameter estimation numerical simulation lowlevel computationally expensive methods ensure incorrect model passes test Intelligent use moreabstract techniques list allows PRET avoid costly lowlevel techniques insofar possible candidate models 156 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 discarded purely qualitative techniques seminumerical techniques conjunction constraint reasoning Section 32 describes PRET uses meta control techniques exploit deciding modes appropriate model test phase 311 Qualitative reasoning Reasoning abstract features physical candidate model typically faster reasoning detailed properties Because PRET uses high level ﬁrst strategy tries rule models purely qualitative techniques 283841 92 advancing moreexpensive seminumerical numerical techniques Often steps inexpensive qualitative reasoning QR sufﬁce quickly discard model Some PRETs qualitative rules turn use tools symbolic algebra facilities commercial package MAPLE 23 For example PRETs encoded ODE theory includes qualitative rule nonlinearity necessary condition chaotic behavior falsum linearsystem ode linear chaotic target chaotic 3 This lets linear model discarded performing morecomplex operations 10 example numerical integration ODE PRETs QR facilities important accelerating search inconsistencies physical model allow user express incomplete information 62 For example user know exact value friction coefﬁcient know constant positive This useful isolation conjunction constraint reasoning mode described later section 312 Qualitative simulation After qualitative reasoning facilities fullest possible extent resorting numerical level PRET attempts establish contradictions reasoning states physical 62 It qualitative simulation 61 envisions state space possible combinations qualitative values state variables parameters Speciﬁcally PRETs qualitative envisioning module constrains possible ranges parameters candidate model If constraints inconsistentie range parameter setthe model ruled Currently qualitative states contain sign information 0 For example model ax 0 state x y constrains b possibilities 0 0 This strategy faster qualitative simulation accurate let invalid models pass test models later ruled numeric simulator However models fail qualitative envisioning test test cheaper numeric simulation pointbypoint comparison 10 Determining ODE linear involves calculation Jacobian simple symbolic operation PRET accomplishes single MAPLE shown 4 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 157 313 Constraint reasoning Often information purely qualitative purely numeric levels available If linear oscillates example imaginary parts pair roots models characteristic polynomial nonzero If oscillation damped real parts roots negative Thus model x b x cx 0 match dampedoscillation observation coefﬁcients satisfy inequalities 4ac b2 ba 0 PRET uses expression inference 87 merge simplify constraints 58 However approach works linear quadratic expressions special cases higher order expressions arise model testing far complex For example candidate model x x4 b x2 0 match observation conservative coefﬁcients b values divergence 4a x3 2b x zero certain resolution threshold speciﬁed range x We investigating techniques 37 reasoning moregeneral expressions like 314 Geometric reasoning Other qualitative forms information useful reasoning models geometry topology systems behavior plotted time frequency domain state space A bend certain angle frequency response instance indicates ODE root frequency implies algebraic inequalities coefﬁcients like facts inferred dampedoscillation asymptotes time domain wellknown implications stability statespace trajectories cross imply axis missing space In order incorporate type reasoning PRET processes numeric observationscurve ﬁtting recognition linear regions asymptotes onusing MAPLE functions 23 simple phaseportrait analysis techniques 13 producing type abstract information inference engine leverage avoid expensive numerical checks These methods primarily analysis sensor data 15 described Sections 22 4 PRET currently reason topology investigating best 7778 315 Parameter estimation numerical simulation PRETs ﬁnal check model requires pointbypoint comparison numerical integration ODE numerical observations target In order integrate ODE PRET ﬁrst estimate values unknown coefﬁcients Parameter estimation lower box Fig 2 complex nonlinear global optimization problem 5490 Given ODE unknown coefﬁcients possibly noisy time series observation subset state variables parameter estimator ﬁnd values unknown parameters ODE 11 In linear physical systems procedure fairly understood In nonlinear systems vastly difﬁcult linear signal processing methods apply PRET fall 11 Note simply curveﬁtting problem actually amounts inverting methods like Runge Kutta 158 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 regression nonlinear regression landscapes typically exhibit local extrema trap numerical methods PRETs nonlinear parameter estimation reasoner NPER solves problem new highly effective global optimization method combines qualitative reasoning QR local optimization techniques Space limitations preclude thorough discussion approach follows brief overview Please 16 details The basic idea use QR abstract broadbrush reasoning optimization problem focus moreprecise numerical methods The core NPER ODRPACK 1112 robust nonlinear leastsquares solver Around core built layer QR techniques allow PRET automatically interact exploit ODRPACKs unique powerful features Using qualitative observationsprovided user inferred observations reasoning modes described previous subsectionsthe NPERs QR layer instance intelligently choose starting values unknown coefﬁcients helping ODRPACK avoid local extrema parameter landscape QR determine cutoff frequencies ﬁltering algorithms noise removed disturbing datas structure The NPER uses QR interpret ODRPACKs results abstract levelquickly correctly This demonstrates importance power interaction reasoning modes A qualitative result NPER sign parameter constraint product b2 4ac constraint reasoner vice versa The truth maintenance facilities PRETs logic inference described following section designed facilitate exactly type interaction 32 Control reasoning A model ruled inconsistent mathematical properties conﬂict known observation target The reasoning modes described previous section play different roles search inconsistency PRETs challenge orchestrating properly test models observations cheapest possible reasoning mode time avoid duplication effort In order accomplish inference engineillustrated Fig 6uses following techniques represent reason knowledge target candidate models guide reasoning process choosing invoking appropriate modes interpreting results SLDbased resolution declarative dynamic metalevel control hierarchy abstraction levels simple form truth maintenance 321 SLDbased resolution As common AI programs PRETs knowledge representation reasoning formalism declarative objectlevel metalevel knowledge represented ﬁrstorder logical formulae The language observations ODE theory expressed generalized Horn clause intuitionistic logic GHCIL 68 Roughly GHCIL clauses Horn clauses allow embedded implications bodies E Bradley et al Artiﬁcial Intelligence 133 2001 139188 159 Fig 6 PRETs architecture SLDbased inference engine performs deductions generalized Horn clause logic negation inconsistency operates relative abstraction levels controlled meta theory stores intermediate results relevant formulae interacts model generator Section 2 inputoutput modeling subsystem Section 4 The special atomic formula falsumwhich means inconsistencymay appear head clause Such clauses called integrity constraints express fundamental reasons inconsistencies oscillating non oscillating time cf rule 2 PRETs search inconsistency observations particular candidate model amounts attempt prove falsum A model ruled contradiction exists mathematical property physical oscillation x observation Fig 3 mathematical property model factnooscillation x derived ODE theory rootlocus analysis candidate model Therefore proving falsum critical mechanism model test procedure PRET derive falsum union observations facts candidate model model ruled This concept negation inconsistency 43 form negation paradigm Negation failure standard form negation PROLOG 82 particularly undesirable purposes Since require user supply possible 12 observations absence knowledge generate new knowledge PRETs inference engine SLD resolutionbased theorem prover 67 For candidate model prover combines basic facts target basic facts candidate model basic facts rules ODE theory set clauses 12 Here possible means expressible implemented observation vocabulary 160 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 tries derive falsum set The basic facts observations findmodel The ODE theory comprises dozen rules like rules 1 2 3 The basic facts current model obtained collection SCHEME model observer functions identify mathematical properties model linear order The following model observer function example called candidate model themodel makes MAPLE jacobian function returns fact linearsystem state variable appears resulting matrix define linearsystem themodel statevariables let modeljacobian jacobian themodel anyvariableinmatrix statevariables modeljacobian 4 Together ODE theory model observer functions typically nonlogicbased implement basic operations differential equations text Because inference engine invoke functions directly implementer ODE theory use special logical predicate schemeeval Whenever inference engine attempts prove goal predicate corresponding function invoked automatically The schemeeval predicate provides link modules implement nonlogical reasoning modes constraint reasoner parameter estimator For detailed discussion PRETs logic including examples schemeeval ODE theory 528385 One important advantages declarative reasoning framework modularity extensibility It intentionally designed working require knowledge inner workings program allows mathematics experts easily modify extend PRETs ODE theory Adding reasoning mode PRETs repertoire example amounts writing Horn clauses similar rules 1 2 3 These Horn clauses interpret results reasoning mode specifying conditions results contradict observations target If model observer function evaluates corresponding mathematical property model exist expert write short SCHEMEMAPLE function like linearsystem The existing ODE theory provides ample models kinds functions Declarative formalisms like described section widely AI systems However PRET uses declarative techniques representation knowledge dynamical systems models representation strategies specify conditions inference engine focus attention particular pieces types knowledge This topic subsections 322 Declarative meta level control The control strategy SLDresolution theorem prover deﬁned function selects literal resolved function chooses resolving clause PRET provides metalevel language constructs allow implementer ODE E Bradley et al Artiﬁcial Intelligence 133 2001 139188 161 theory specify control strategy accomplish The notion controlling resolution declarative manner originated late 1970s 264445 More recently implemented logic programming languages 74751 planning systems 622 inﬂuenced ideas The declarative speciﬁcation query optimization techniques relational databases 24 seen form declarative meta control The intuition PRETs declarative control constructs search guided cheap quick proof contradiction As example consider following simpliﬁed schematized excerpt knowledge base stable linear all_roots_in_left_half _plane stable nonlinear stable_in_all_basins hotL linear goalL stable 5 A linear dynamical unique equilibrium point stability point wholecan determined examining systems eigenvalues simple symbolic manipulation coefﬁcients equation Nonlinear systems hand arbitrary numbers equilibrium sets expensive ﬁnd evaluate Thus known linear overall stability easy establish evaluating stability nonlinear far complicated expensive PRETs meta control predicates intended allow crafter knowledge base prioritize checks ways appropriate situations like Besides predicate hot selection literal speciﬁed predicates notready The order clauses resolve chosen literal speciﬁed meta control predicate clauseorder For detailed discussion PRETs meta control constructs 752 323 Reasoning different abstraction levels To rule ODE theory implementer assigns natural number indicating level abstraction lower abstraction level number abstract rule These abstraction levels reﬂect anticipated expense reasoning involved given rule express static control knowledge type In general try build proofs involving qualitative properties building proofs involving numeric properties The meta predicates described Section 322 contrast specify dynamic controlie build particular proof particular situation The implementation scheme straightforward inference engine proceeds higher abstraction level number attempt prove falsum ODE rules lower abstraction level numbers fails This means bad choices abstraction levels affect speed correctness completeness For example schemeeval rule triggers numerical integration higher abstraction level number schemeeval rule calls qualitative simulation This static abstraction level hierarchy facilitates strategies expressed dynamic metalevel predicates dynamic control rules impose order subgoals clauses particular complete proof abstraction levels allow PRET omit lessabstract parts ODE 162 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 theory altogether The omitted parts considered subsequent lessabstract proof attempt moreabstract proof attempt fails Therefore PRET tries build entire proofs moreabstract level considering lessabstract rules Since abstract reasoning usually involves approach leads short quick proofs falsum possible 324 Storing reusing intermediate results In order avoid duplication effort PRET stores formulae expensive derive likely useful later reasoning process Engineering framework lets PRET store right type knowledge surprisingly tricky endeavor On hand remembering formula derived ATMS 27 expensive especially variables range real numbers prohibitively potential instantiations 13 On hand intermediate results expensive derive rederived multiple times stored reuse PRET reuses previously derived knowledge ways First knowledge physical global knowledge candidate model local model Because knowledge independent current candidate model reused run The fact time series measured physical contains limit cycle example reused candidate models fact current candidate model second order thrown new candidate model considered Knowledge reused process reasoning particular model Every time reasoning proceeds lessabstract level PRET needs information derived moreabstract level stores information rederiving PRET currently relies ODE theory implementer help identify kinds information fall category This involves declaring number predicates relevant 8 causes succeeding subgoals predicate stored later reuse 14 Currently PRET recognizes special cases generalizations previously proved formulae maintains contexts labels 27 intermediate results Unfortunately clearcut heuristic predicates declared relevant Ultimately matter experimentation experience Good candidates relevancy formulae expensive derive likely useful multiple reasoning contexts For example formula linearsystem states current candidate model linear ODE established high abstraction level schemeeval goal If abstract proof falsum fails subsequent lessabstract proofs evaluate schemeeval goal PRET stored linearsystem fact reuse It important note inappropriate declarations relevance like badly chosen static abstraction levels lead incorrect reasoningonly slow reasoning Finally reasoning modes described Section 31 use knowledge generated previous inferences turn triggered 13 Everett Forbus 35 shown freeing facts garbage collection solve problem As alternative solution investigating notion sparse truth maintenance 14 The set previously derived relevant formulae currently implemented hash table E Bradley et al Artiﬁcial Intelligence 133 2001 139188 163 reasoning modes As described end Section 315 instance nonlinear parameter estimation reasoner relies heavily qualitative knowledge derived structural identiﬁcation phaseeg constraint 4ac b2 derived symbolic rootlocus analysisin order avoid local extrema regression landscapes To facilitate PRET gives modules access set formulae derived far 33 Reasoning models Summary The declarative framework described Sections 31 32 allows knowledge dynamical systems models represented highly effective manner Since PRET keeps operational semantics equivalent declarative semantics uses simple clear modeling paradigm extremely easyeven nonprogrammersto understand use PRETs control knowledge works declarative knowledge systems models order test quickly cheaply This control knowledge expressed declarative meta theory makes formulation control knowledge convenient understandable extensible This framework maintains correctness completeness guiding model testing process quick cheap contradiction proofs This particular way controlling reasoning instantiation combination tacticsdesigned focused particular problem domainconstitute contributions work described article None reasoning techniques described Section 31 new expert engineers routinely use modeling dynamical systems versions automated modeling tool The set techniques PRETs inference engine multimodal reasoning framework integrates architecture lets PRET decide appropriate situation approach taken novel powerful 4 Inputoutput modeling Dynamical systems engineering applications rarely passive Rather inputs outputs relationship critical feature systems behaviorand important model Moreover dynamical systems multiple behavioral regimes successful model builder able reason property This daunting task human experts selecting exploring appropriate ranges state variables parameter values subtle difﬁcult problem received attention qualitative reasoning community 2139596 Manipulation actuators sensors effect kind exploration difﬁcult problem determining experiments possible given initial condition given actuator conﬁguration controltheoretic problem known controllability reachability For nonlinear systems open problem automatic control community developed partial solutions limited classes systems 81 aware systematic schemes truly automatic experiment planning execution interpretation nonlinear systems Lastly results 164 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 inputoutput analysis consolidated existing knowledge modelbuilding process PRETs inputoutput modeling facilities solve problems new knowl edge representation reasoning framework called qualitative bifurcation analysis QBA This framework designed support reasoning inputoutput ef fects existence multiple behavioral regimes based ideas hybrid systems nonlinear dynamics vision Its representation new struct termed qualitative stateparameter QSP space combines informa tion behavior complex effects control parame ters inputs behavior QBAs reasoning procedures emulate classic tech nique nonlinear dynamics known bifurcation analysis human ex pert changes control parameter classiﬁes resulting behavior determines regime boundaries groups similar behaviors equivalence classes Putting ideas physical practice requires reasoning layer translates abstract concepts experiments measure step response lowlevel com mands manipulate actuators sensors appropriate ways PRET uses knowl edge results QBA procedure generate test phases iter ating analysisknowledge consolidation steps necessary ﬁnds model set models accurately describes target speciﬁed operating regimes 41 The QBA paradigm Representation The modelbuilding procedures described Sections 2 3 purely passive given static set observations single operating regime produce single ODE model accounts behavior In order reason relationships inputs outputs PRET needed combine facilities representation handle multiple sets observations given Our solution termed qualitative stateparameter space speciﬁcally designed classify behavior support reasoning different regimes thereof For linear systems variety wellknown wellunderstood tools step frequency response Almost analytical tools useless nonlinear problems Because nonlinear dynamicists typically reason attractors state space topology attractors changes bifurcates parameters varied This basis QBA framework One goals qualitative reasoning community abstract speciﬁc instances behavior moregeneral descriptions Reasoning timeseries voltage signals slightly different RLC circuits instance requires detailed examination envelopes phase decaying sinusoids The statespace representation suppresses time variable plots voltage versus time derivative brings similarity behaviors clear way damped oscillations linear systems instance manifest statespace plot similar decaying spirals A discretized version statespace representation effectively abstract away lowlevel details dynamics preserving important qualitative invariant properties The cell dynamics formalism E Bradley et al Artiﬁcial Intelligence 133 2001 139188 165 Fig 7 Identifying periodone limit cycle celldynamics method 5556 discretizes set ndimensional state vectors ndimensional mesh uniform boxes cells The circular statespace trajectory Fig 7a examplea sequence twovectors ﬂoatingpoint numberscan represented following cell sequence 0 01 02 03 04 04 14 24 3 Because multiple trajectory points mapped cell discretized representation dynamics signiﬁcantly compact original series ﬂoating point numbers easier work Using representation dynamics trajectory quickly qualitatively classiﬁed simple geometric heuristicsin case limit cycle PRETs intelligent sensor data analysis procedures use type discretized geometric reasoning distill qualitative features given statespace portrait allowing reason features higher cheaper abstraction level These automated phaseportrait analysis techniques combine ideas dynamical systems discrete mathematics AI covered 15 Raising abstraction level analysis individual sensor data sets small power qualitative analysis statespace portraits Dynamical systems extremely complicated Attempting understand analyzing single behavior instanceeg evolution initial condition parameter value like Fig 7ais generally inadequate Rather vary systems inputs study change response Even oneparameter systems procedure difﬁcult parameter varied behavior vary smoothly ranges change abruptly certain critical parameter values A thorough representation behavior requires stack phase portraits interesting andor distinct range parameter values Constructing stack requires automatic recognition regimes cell dynamics representation makes easy Fig 7b example shows periodone limit cycleone different geometry identical topology The key concept set geometrically different qualitatively similar trajectoriesan equivalence class respect important dynamical propertycan classiﬁed single coherent group statespace portraits Consider example driven pendulum described ODE θ t a2 θ t a1 sin θ t d1 sin αt 166 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 Fig 8 The stateparameter SP space portrait driven pendulum parameterized collection phase portraits device drive frequencies Each θ ω slice SPspace portrait standard statespace plot parameter value drive amplitude d1 drive frequency α a1 a2 physical constants representing effects pendulums mass length damping factor gravity state variables θ ω θ In experimental setups drive amplitude andor frequency controllable control parameter inputs The behavior apparently simple device complicated interesting For low drive frequencies single stable ﬁxed point drive frequency raised attractor undergoes series bifurcations chaotic periodic behavior 29 These bifurcations necessarily cause attractor That qualitative behavior changes operating regime state space Traditional bifurcation analysis involve constructing phase portraits like ones shown Fig 7 closely spaced control parameter values interesting range Traditional AIhybrid representations 1871 handle smoothly operating regimes involved distinct If adds axis space problems vanish Fig 8 describes behavior driven pendulum stateparameter space SP space representation Each θ ω slice plot statespace portrait control parameter varies Drive Frequency axis Our ﬁnal step development representation qualitative bifurcation analysis framework combine stateparameter space idea pictured Fig 8 qualitative abstraction cell dynamics Fig 7 producing qualitative stateparameter space QSP space representation A QSPspace portrait driven pendulum shown Fig 9 This representation similar stateparameter space portrait Fig 8 groups qualitatively similar behaviors equivalence classes uses groupings deﬁne boundaries qualitatively distinct regions The QSP space extremely effective way capture information actuator signals E Bradley et al Artiﬁcial Intelligence 133 2001 139188 167 Fig 9 The qualitative stateparameterspace QSPspace portrait driven pendulum In abstraction stateparameter space qualitatively similar behaviors grouped equivalence classes groupings deﬁne boundaries qualitatively distinct regions stateparameter space sensor data different behavioral regions single compact representation It lets model builder leverage knowledge regionseg ﬁve slabs Fig 9 behavior different parameter values This useful reducing complexity model generation test phases The QSP space representation contributes automatic experiment planning execution Among things allows PRET reason effectively test inputs good test input excites behavior useful overwhelming way choosing input nontrivial The following section elaborates ideas 42 The QBA paradigm Reasoning The input PRETs inputoutput reasoning takes place intelligent sensor data analyzer 15 This subsystem ﬁrst reconstructs hidden dynamics sensor data This step necessary fully observable systems systems state variables measured rare normal engineering practice Often state variables physically inaccessible measured available sensors This control theorys observer problem task inferring internal state solely observations outputs There work AIQR community topic 40 Delaycoordinate embedding 180 PRETs solution problem creates mdimensional reconstructionspace vector m timedelayed samples data single sensor The central idea reconstructionspace dynamics true unobserved statespace dynamics topologically identical This provides partial solution observer problem statespace portrait reconstructed single sensor qualitatively identical true multidimensional dynamics Given reconstructed statespace portrait systems dynamics intelligent sensor data analyzers second phase uses geometric reasoning parse trajectories transients attractors distills qualitative properties limitcycle fixedpoint chaotic etcusing cell dynamics method described previous section 168 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 Reasoning actuators takes place PRETs intelligent actuator controller 33 difﬁcult The problem lies inherent difference passive active modeling It easy recognize damped oscillations sensor data knowing sensor actuator requires lot knowledge Different actuators different characteristics range resolution response time consider difference time constants involved turning burner gas versus electric stove happens cook unaware difference The effect actuator depends intimately connected For example DC motor viewed voltagetoRPM converter linear range saturation limit How motor affects driven pendulum depends characteristics linkage devices direct rotary drive conﬁguration versus slotcamfollower setup To execute experiments successfully PRET model kinds properties effects It exploiting twoport nature GPN representation introduced Section 21 effects actuator simply model additional modeling components Note introduction actuator necessarily makes nonautonomous means model include ODE terms explicitly contain variable time Moreover explicit form actuators effect known exactly PRET transmits known sinusoidal voltage particular motor instance motor respond nonlinear manner saturating threshold voltage PRETs framework handles kinds problems automatically difference modeling drive effects modeling internal physics ODE terms functions time state variables Qualitative bifurcation analysis requires interleaved input output reasoning PRET uses sensors actuators probe variety control parameter values ﬁnd interesting behaviors identify boundaries different regimes Currently user specify applicable range parameter form specification The QBA reasoner simply scans ranges turn classifying results described zeroes bifurcations simple bisecting search These bifurcations dividing lines regimes QSPspace portrait qualitative classiﬁcations labels regimes The results QBA process twofold QSPspace representation dynamicslike shown Fig 9and set qualitative observations similar human engineer When control parameter ρ range 12 56 state variable x1 oscillates This qualitative information useful raises abstraction level PRETs reasoning models manner described length Section 3 The information captured QSPspace portrait PRETs generate phase reason candidate models For example model valid regime valid regimes qualitative behavior And qualitative behavior different continuity suggests neighboring regimes model reasonable starting point See Section 5 discussion associated caveats Coupled ideas described Section 2 kind reasoning lets generate phase avoid combinatorial explosions search space E Bradley et al Artiﬁcial Intelligence 133 2001 139188 169 Fig 10 Effective planning execution interpretation experiments require PRET reason ones useful possible Apart identiﬁcation regime boundaries QBA relatively mechanical procedure currently working making intelligent Speciﬁcally useful focus experiments knowledge PRET target candidate model simply simple scan control parameter range This require determining experiments possible useful task hand As shown Fig 10 sets experiments overlap The utility particular experiment depends PRET knows trying establish It useful instance duplicate existing knowledge utilityrelated reasoning simple If PRET trying build fullrange model driven pendulum observations concerned smallangle motions dynamics looks like simple harmonic oscillator useful investigate initial conditions larger angles Experiment utility depends domain Impulse response extremely useful analytic tool known linear conﬁne problem narrower domain available tools powerful described conjunction Table 2 The GPNbased representation described Section 21 play critical role solution problem speciﬁcally designed incorporate exploit different levels knowledge The declarative meta control constructs described Section 32 guide PRETs inputoutput exploration dynamic fashion adapts evolving knowledge cf example 5 Determining experiments possible challenging PRET reason statespace points reachable given initial condition given actuator conﬁgurationwhich requires solving controllabilityreachability problem In pendulum modeling scenario instance extremely useful ﬁnd happens device balanced inverted point getting point signiﬁcant realtime control problem Solving problems like requires reasoning structure function actuators combination given partial information The GPN based representation critical solution allows PRET model actuatorsystem combination explicitly This type reasoningeven involved determining utilitydepends PRET knows domain target 170 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 43 Summary Automating inputoutput modeling The goal inputoutput modeling apply test input analyze results learn useful causeeffect pair Automating process worthwhile variety reasons It makes PRETs expert knowledge useful novices allows corroborate verify experts results represents important step type fully autonomous operation required real world AI applications 5372 Automating inputoutput analysis procedure hard interesting AI engineering standpoints In particular planning executing interpreting experiments requires fairly difﬁcult reasoning experiments useful possible Research general classes reasoning problems ongoing control theoryoperations research AI communities 15 speciﬁc techniques design implementation QBA framework appeared contexts The new idea notion working systematic scheme truly automatic experiment planning execution interpretation purposes modeling nonlinear systems Our solutions problems reasoning sensors actuators use perform experiments useful modeling process embodied PRETs ISAAC intelligent sensor analysis actuator control module ISAAC rests hybrid construct stateparameter SP space combines information behavior complex effects control parameter behavior Via reasoning procedure termed qualitative bifurcation analysis ISAAC uses geometric reasoning decompose SP space discrete regions associated equivalence class dynamical behavior produce qualitative stateparameter space QSP space portrait systems dynamics In representation trajectory effectively equivalent wellknown sense trajectories region allows ISAAC behavior multiregime signiﬁcantly simpler way streamlining analysis easing computational burden Finally ISAAC exploits behavioral similarity captured QSP space continuity parameter axis order assist generate phase 5 Examples The representation reasoning inputoutput techniques described paper enabled PRET build models variety engineering problems ranging simple springmass exercise Fig 3 radiocontrolled car deployed robotics This section presents examples The ﬁrst highlight general execution PRET model generation representations Section 21especially notions modeling domains metadomains The ﬁrst traditional automotive engineering task vehicles suspension The second drawn water resource domain shows pumping water aquifer affects wells attached 15 Under rubrics experimental design reasoning action respectively E Bradley et al Artiﬁcial Intelligence 133 2001 139188 171 Fig 11 A onedegreeoffreedom quartervehicle model includes shock absorbera viscous damping element Bconnected parallel spring K loading effects car M aquifer The example parametrically driven pendulum highlights PRETs reasoning techniques inputoutput modeling facilities 51 Modeling shock absorber Hydraulic shock absorbers common modern commercial vehicles complex nonlinear devices behavior depends amplitude frequency imposed motion Accurate mathematical models behavior key realistic vehicle simulations activesuspension controllers things Shockabsorber models normally come forms standalone devicetypically connected spring damper elementor quartervehicle model loading effects quarter vehicle included Fig 11 The effects different shock absorbers twodegreeoffreedom quartervehicle models 64 Besigner et al 10 summarize behavior ﬁve different damper model variants spring velocitydependent damping linear spring Note similarity componentbased modeling terminology Section 2 This exactly kind expert reasoning motivated PRETs domain knowledge framework kinds similarities easy engineers use PRET real problems To illustrate operation brief narrative description PRETs actions models hydraulic shock absorber As shown findmodel fragment Fig 12 user initializes PRET manner similar springmass example Fig 3 different domain linearmechanics different hypotheses spring force obeys cubic version Hookes law drive term represents constant normal force suspension noisy timeseries measurement deﬂection shown graphically Fig 13 The linearmechanics domain default components linear spring mass damping forces Because components built domain user need enter explicitly findmodel PRETs model generator automatically use hypotheses speciﬁed users hypotheses entry One challenges problem construct minimal model avoids overﬁtting noisy data The speciﬁcation concerning resolution state variable x plays key role allowing user explicitly prescribe closely model match numeric observation PRET uses information set cell size geometric reasoning stage automatically ﬁlters smaller ﬂuctuations In case Fig 13 means small highfrequency oscillation local mean disregarded state 172 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 findmodel domain linearmechanics statevariables x integral v observations numeric time x 0 13 01 12 hypotheses force k cube integral v drive force d specifications x absoluteresolution 12 0 15 Fig 12 A findmodel shock absorber The state variable v velocity v dxdt x x deﬂection equilibrium position The hypothesis represents cubic spring force F kx3 By default linearmechanics domain includes linear spring mass damping components PRETs user need specify explicitly The numeric observation noisy dotted time series shown following ﬁgure Fig 13 Step responses hydraulic shock absorber dotted unsuccessful candidate model linear spring dashed PRETs ﬁnal result incorporates cubic spring solid The deﬂection sensor noisy PRETs task avoid overﬁtting sensor trace variable x judged undergoing damped oscillation ﬁxed point From facts inference engine described Section 3 deduces things order linear model As springmass example Section 1 qualitative information lets PRET immediately rule ﬁrst dozen candidate models Proceeding slightly complex ODEs PRET generates model x b x cx d 0 x x domain hypotheses 16 users drive hypothesis None qualitative rules ODE theory allows model ruled PRET forced use parameter estimator numerical integration pointbypoint comparison modelthe dashed trace Fig 13and noisy numeric observation establish contradiction rule 16 linearmass force deriv v lineardamping force b v linearspring force c integral v E Bradley et al Artiﬁcial Intelligence 133 2001 139188 173 ODE After discarding variety unsuccessful candidate models means PRET eventually generates tests ODE x b x cx kx3 d 0 This model passes qualitative quantitative checks returned PRETs output refutation model const deriv deriv x const b deriv x const c x const k cube x const d 0 1000 b 0500 c 0308 k 00245 d 1304 The crafter PRETs knowledge bases implement linearmechanics domain ways The current instantiation uses linearplus metadomain adds domainspeciﬁc components linearmass lineardamping linearspring These generalized components lineardifferen tiating linearproportional linearintegrating renamed manner makes meaning obvious linear mechanics domain Jargon matching small power domain customization described Section 2 domain knowledge allows PRET selectively sharpen knowledge appropriate ways In example PRET knows linear mechanical general component linear integrating takes morespeciﬁc meaning associated linearspring knowledge mechanical springs appreciable mass internal friction neglected Implementing linearmechanics domain linearplus meta domain important advantage problems like drive terms nonlinear terms linearplus separates components linear nonlinear set shown Fig 14 order exploit fundamental properties linear systems 1 polynomial number unique nthorder linear ODEs 20 2 linear inputs drive terms appear verbatim resulting ODE The ﬁrst properties effectively converts exponential search space polynomial functionally equivalent linear networks reduce Laplace transform transfer function allows PRET identify rule ODEs equivalent models failed test The second property allows metadomain speciﬁc domain constructed handle limited number nonlinear terms 17 treating inputs As long number nonlinear hypotheses remains small search space possible models remains tractable assumption See 31 details PRETs user skip linearmechanics domain use linear plus metadomain directly problem simply specifying extra terms 17 Thus linearplus 174 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 Fig 14 PRETs linearplus metadomain designed systems basically linear incorporate nonlinear terms drive terms Separating linear nonlineardrive parts model reduces exponential search space polynomial streamlines handling drive terms hypotheses line findmodel force c integral v The difference linear plus metadomain extra components increase PRETs run time longer able use domain knowledge streamline generate test phases Indeed omit hypotheses PRET automatically performs power series expansions runs domain user hypotheses increase search space run time This true black box situation The best course action exploit available domain knowledge reduce search space PRETs layered domainmetadomain framework designed easy 52 Modeling wellaquifer Water resource systems streams dams reservoirs wells aquifers In order design build andor manage systems engineers model relationships inputs rainfall state variables reservoir levels outputs ﬂow farmers irrigation ditch To truly accurate fashion requires partial differential equations physics ﬂuids involves multiple independent variablesnot timeand inﬁnite number state variables Partial differential equations PDEs extremely hard work state art water resource engineering ﬁeld falls far short Most existing water resource applications riverdam wellwater management systems use rulebased statistical models ODE models capture dynamics accurately statistical rulebased models difﬁcult handle PDEs good compromise extremes water resource community recently begun approach 1925 In section use PRET duplicate research results model effects sinusoidal pressure ﬂuctuation aquifer level water penetrates aquifer shown Fig 15 This example particularly good demonstration power generalized components shows GPNs allow PRET model variety systems underlying representation This especially useful PRETs existing domains exactly matches users application area The wellaquifer example demonstrates domain knowledge structure inherited metadomain let model generator build interesting systems creating overwhelming number models GPNs let PRET model load effects easily naturally The ﬁrst step describing modeling problem PRET specify domain Because builtin water resource domain user choose E Bradley et al Artiﬁcial Intelligence 133 2001 139188 175 Fig 15 An idealized representation open penetrating artesian aquifer If pressure aquifer ﬂuctuates water level response Fig 16 The xmissionline metadomain allows PRET use lumpedelement GPN components model spatially distributed systems like transmission lines vibrating strings The basic paradigm iterative structure variable number sections topologya series element Ai parallel element Bi The number sections models small piece continuum physics rises precision model customize metadomains For problem choice obvious xmissionline metadomain speciﬁcally designed kind distributed physics turns ﬂuid ﬂows vibrating strings gas acoustics thermal conduction diffusion This metadomain designed serve bridge different paradigms The GPN components Section 21 represent prototypical lumped elements models single physical component like transmission line guitar string thought inﬁnite number small elements Using model requires incremental approach In particular approximate spatiotemporally distributed iterative structure large number identical lumped sections Fig 16 shows diagram generalized iterative twoport network n uniform sections serial Ai parallel Bi element Each elements contain GPN components null essentially short Ai open Bi The motivation xmissionline metadomain basic engineering treatment electrical transmission line typical electrical parameters resistance inductance given perunitlength form Note topology sections ﬁxed metaphor Ai contain network GPN components Bi coefﬁcient values individual elements vary If user knows internal structure elements specify single option Ai Bi hypotheses argument findmodel 176 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 18 search space On n number sections ultimately required build successful model If internal element structure known priori given application area information construct new modeling domain PRETs viscoelastics domain instance instantiation xmissionline metadomain Ai null Bi integrating proportional GPNwhich correspond linear spring linear dashpot respectivelyconnected series The second layer components PRET uses needs expand domain dynamically incorporates dashpots parallel dashpotspring combinations Together layers allow PRET model problems 21 If structure section known user suggest hypotheses xmissionline metadomain try combinations components Ai Bi iterating combination predetermined depth 19 Although exponential search space O2dn d possible components n required sectionsd engineering practice If application demands components best build new applicationspeciﬁc domain based components incorporating knowledge efﬁciently combine described Section 21 As shock absorber example PRETs user customize metadomain wellaquifer problem use directly In case customization consist renaming general components lineardifferentiating integrating proportional match standard domain vocabulary differentiating proportional effects particular simulate radial ﬂow aquifer water mass treated integrating These concepts equivalences routine waterresource practitioners textbook knowledge The metadomain customized based knowledge aquifers forcing function waters velocity changes slowly instance inertial effects normally ignored reduces size search space For purposes demonstrating uses PRET meta domain directly omit customization example findmodel Fig 17 simply instantiates xmissionline metadomain This differs previous examples variety ways This metadomain builtin components provides template iterative network structure PRET rely solely userspeciﬁed hypotheses build models 20 The state variables bear domainindependent names like effort flow domainspeciﬁc ones like voltage force The xmissionline meta domain uses hypotheses constituents serial parallel elements Ai Bi respectively dynamically creating instances kind state variable AiBi segments added model Since numeric observations speciﬁc state variables numerical observation wellflow findmodel 18 Doing requires extended version findmodel syntax covered 34 19 Currently set ﬁve investigating values intelligent adaptation limit 20 In domains PRET uses powerseries expansions runs builtin usersupplied hypotheses Since basic paradigm xmissionline essentially spatial expansion powerseries expansions duplication effort E Bradley et al Artiﬁcial Intelligence 133 2001 139188 177 findmodel domain xmissionline statevariables wellflow flow observations notconstant wellflow notconstant deriv wellflow numeric time wellflow deriv wellflow 0 40 05 01 425 06 hypotheses effort c integral flow effort l deriv flow effort r flow drive effort da sin df time Fig 17 A model fragment wellaquifer example Fig 15 illustrating uses xmissionline metadomain directly Fig 18 PRETs model wellaquifer Fig 15 The drive V da sin df t simulates sinusoidal pressure ﬂuctuation aquifer Note GPN components let load incorporated naturally model Fig 17 identiﬁers prespeciﬁed statevariables line Finally unlike shock absorber springmass systems wellaquifer includes nonautonomous drive term ODE fragment explicit sinusoidal time dependence As PRET automatically searches space possible models xmissionline metadomain template build models qualitative quantitative techniques Section 3 test successful model The ﬁrst series candidate models based network topology Ai Bi contain single integrating component single differentiating component respectively 21 PRET ﬁrst tries onesection network form adds identical sections network ﬁve models passes test In second series candidate models Ai integrating GPNs Bi proportional GPNs All members series fail test After ruling models series parallel elements contain single GPN components PRET moves complicated 21 That ﬁrst second hypotheses All hypotheses expressed respect flow state variables 178 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 topologies The ﬁrst series Ai serial network containing differentiating integrating GPN component Bi single proportional component element series shown Fig 18 passes qualitative quantitative checks In PRETs internal format model expressed follows deriv deriv i1 l1 da sin df time c1 i1 r1 deriv i1 r1 deriv i2 0 deriv deriv i2 l2 r1 deriv i2 r1 deriv i1 c2 i2 r2 deriv i2 r2 deriv iW 0 deriv deriv iW lW r2 deriv iW r2 deriv i2 cW iW rW deriv iW 0 A perfect model spatiotemporally distributed course requires inﬁnite number discrete sections construct approximations sections ﬁdelity match rises number sections This dovetails neatly PRETs specifications prescribe required resolution model The CBM framework simply keeps adding sections model matches observations 22 In case xmissionline sections model aquifer model This automatic incorporation integral modelthe rightmost loop Fig 15is important feature loading effects play critical roles engineering analysis design The behavior audio ampliﬁer example change radically shortcircuits speaker outputs terminal GPN load model factor effects automatically Componentbased modeling facilitates simple natural treatment drive term attached directly iterative network With approach actuator nonlinear nonideal properties represented directly network effects automatically model real systems Finally like linearplus xmissionline metadomain lets PRET avoid duplication effort Connecting arbitrary components parallel series creates exponential number candidate models mathematically equivalent cf Thévenin Norton equivalents network theory The xmissionline metadomain avoids duplication ﬁrst limiting number possible component combinations initial network model incrementing structure limited depth attempting initial network 53 Modeling driven pendulum The driven pendulum introduced Section 4 prototypical example dynamical systems control theory It widely useful mechanical engineering general 22 This exactly notion ODE truncation PDE PRET uses xmissionline meta domain capture E Bradley et al Artiﬁcial Intelligence 133 2001 139188 179 findmodel domain linearrotational hypotheses force sin theta drive force d sin alpha time observations numeric time theta dataacquisition eval acqhandle alpha specifications theta absoluteresolution 00125 controlparameter alpha absoluteresolution 15 60 00 Fig 19 Using PRET model driven pendulum theta bob angle alpha drive frequency control parameter robotics particular variety ﬁelds accurate models dynamics essential applications Our experimental setup consists 15 cm aluminum arm bob rotating ball bearing inﬂuence gravity actuator DC motor impart sinusoidal torque bob sensor optical encoder measures angular position As mentioned behavior device complex interesting low drive frequencies single stable ﬁxed point drive frequency raised attractor undergoes series bifurcations In sensor data manifests interleaved chaotic periodic regimes In section PRET uses noisy incomplete sensor data device build accurate ODE models behavioral regimes uniﬁes models single ODE PRETs linearrotational domainwhich based linearplus metadomainis ideal systems like findmodel Fig 19 begins specifying domain Recognizing domain rotational important forces gravity user offers hypothesis captures notion circular tolinear projection F sin θ Furthermore device driven linear rotational domain include nonautonomous drive terms user suggests parametric forcing term F d sin αt As case shock absorber example PRET automatically use builtin domain hypotheses case include terms like linear friction inertia Unlike findmodel calls examples paper user specify observations directly Rather uses incantation instructs ISAAC 23 gather data directly target actuator controls drive frequency alpha sensor gathers angle theta versus time information In order support reasoning experiments specifications additional roles meanings example simply prescribing accuracy desired model convey physical limitations sensors actuators In case example optical encoder measures 23 The subsystem embodies inputoutput modeling solutions described Section 4 180 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 theta resolution 07 degrees The motor drives pendulum ﬁxed amplitude frequency range resolution 06 radians second 15 radians second respectively This information let PRET execute experiments automatically Every sensor actuator differentwhether digital analog voltage currentactivated involves frequency phase Because kind information impossible deduce automatically PRET requires user minimal description operative sensors actuators form short SCHEME procedure case called acqhandle user deﬁnes environment calls PRET The function gather data target speciﬁc settings parameter alpha passed PRET findmodel keyword eval causes variable acq handle evaluated calling environment In case acqhandle argumentthe control parameter alphaand returns time series theta vs time define acqhandle let length 100 timestep 01 type DCvoltage run 100 seconds alpha sample 10 Hz sensor type lambda alpha let vcontrol alpha runDAQ length timestep type vcontrol The function runDAQ ISAACs knowledge base manages data acquisition DAQ communicates actuator sensor Its ﬁrst arguments specify length sample rate sensor trace 24 sensor type There currently types sensorsACvoltage DCvoltage 4wireresistance 4wiretemperatureand types actuators DC AC voltage current sources runDAQ ﬁrst sends control voltage v control physical device DAQ systems digitaltoanalog converter voltage connected frequencycontrol input motor drives pendulum base As instructed acqhandle runDAQ uses DAQs multimeter board gather 100second long time series voltage bob angle sensor measured tenth second The associated driver function operates calls Standard Instrument Control Library SICL 50 contains highlevel procedures control dataacquisition hardware PRET eventually incorporate variety driver functions useful actuatorsensor combination supported DAQ PRET begins building ODE model ﬁrst time series As model generator proposes simple models ﬁrst morecomplicated ones later model 24 Typically user set timestep sensor trace equal time resolution specifications section findmodel However absolute requirement Whereas timestep determines sample rate data gathered resolution speciﬁes closely ﬁnal ODE model match data E Bradley et al Artiﬁcial Intelligence 133 2001 139188 181 tester checks models individually taking advantage abstractreasoning ﬁrst paradigm discard bad models quickly The qualitative information distilled sensor data QBA procedure plays particularly important role process rest PRET forced rely manipulations lowlevel data order build test models extremely expensive proposition For example ﬁrst step delaycoordinate embedding procedure estimates dimension dynamics symbolic fact allows model tester immediately rule ﬁrstorder models Because formulae encode information returned geometric reasoning processes reside high abstraction levels logic preferentially use kind abstract information establish contradictions model observations quickly cheaply Once PRET accepts model initial time series ISAAC repeats reconstruc tionclassiﬁcation procedure alpha value The acqhandle uses absoluteresolution range step speciﬁcations findmodel increment control parameter alpha If behavior resulting time series qualitatively ISAAC conjectures physical regime qualitative stateparameter space Reasoning conjecture model gener ator proposes model constructed previous alpha value If portrait qualitatively different attractor undergone bifurcation ISAAC sumes previously identiﬁed model hold model search process particular time series begin anew PRET continues looping fashion alpha values investigated If identiﬁes different models adja cent regimes attempts unify pairwise fashionby applying second model ﬁrst models regime vice versa Since coefﬁcient values vary neighboring domains ODE holds generally requires round parameter estimation model Whichever applicable regimes accepted unifying model Such model course exist governed completely different physics different regimes single ODE able account behavior In case different regime models mutually exclusive uniﬁcation process unable create single ODE If happens solution simply return list regimes models transitions exactly form traditional hybrid model 18 multiregime For driven pendulum procedure plays follows ISAAC begins exploration generating time series drive frequency α set 60 radians second sensor analysis tools identify resulting pendulum phase portrait limitcycle response The model generator proposes number ﬁrstorder models model tester eliminates qualitative quantitative means The model generator proposes secondorder model single builtin domain hypothesis represents proportional relationship force angular displacement θ a1θ The model tester accepts model parameter value a1 3599 ISAAC continues exploration control parameter value α 45 identiﬁes time series limitcycle Since neighboring phase portraits qualitatively similar ISAAC reasons adjacent regimes model good starting point signals model generator accordingly In case 182 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 conjecture borne Though phase portraits qualitatively similar arc pendulum arm larger slower drive frequencies This quantitative difference actually necessitates qualitative change ODE model In particular pendulum modeled simple harmonic oscillator angle small θ sin θ At larger angles approximation longer holds simple harmonic oscillator θ a1θ model neighboring regime fails test forcing PRET begin model search anew This example incorrect ODE solutions match observed time series coefﬁcient values PRET continues generating testing eventually ﬁnding nonlinear model θ sin θ 3610 The step reconcile models applying regimes Since θ sin θ subsumes θ a1θ PRET discards ISAAC continues QBA procedure repeating reconstructionclassiﬁca tion procedure α 30 ﬁnds pendulum bifurcated new behavior regime case chaotic 25 restarts model search After generating testing models PRET ﬁnds ODE model θ a2 θ sin θ d sin αt contains builtin linearrotational domain hypothesis relates force angular velocity coefﬁcient values a2 165 2481 d 2072 α 302 This actually globally valid model PRET know treat Note α value model exactly 3000 This comes PRETs parameter estimator adjusts model coefﬁcients optimize ﬁt observed time seriesan intentional design feature lets ignore noise present boundary conditions Lastly PRET notes morecomplex model subsumes neighboring regimes model θ sin θ accepts regimes time performs bisecting search ﬁnd precise α value boundary At alpha value 15 ISAAC identiﬁes phase portrait limit cycle Since behavior observed ISAAC examples work In particular proposes recent model valid limitcycle regimein case globally valid model The model tester quickly accepts θ a2 θ sin θ d sin αt regime coefﬁcient values a2 166 2449 d 20833 α 150 At ﬁnal control parameter value α 00 ISAAC identiﬁes phase portrait dampedoscillation Since PRET modeled behavior ISAAC prior model suggest model generator start anew After rejecting models model tester accepts θ a2 θ sin θ a2 159 2438 A ﬁnal uniﬁcation step accepts globally valid regime 25 This algorithm miss bifurcations altogether occur parameter slices canceling effects It good compromise bifurcations represent deep changes dynamics leaves highly individual signature behaviorsignatures unlikely cancel E Bradley et al Artiﬁcial Intelligence 133 2001 139188 183 Table 3 Models driven pendulum different behavioral regimes Drive Frequency None Low Medium High Very High ODE Description θ t a2 θ t a2 θ t a2 θ t sin θ t θ t sin θ t d1 sin αt θ t sin θ t d1 sin αt θ t sin θ t θ t a1θ t Damped oscillator Complex oscillator Chaotic behavior Sinusoidal oscillator Small angle linear model In absence uniﬁcation PRET return different ODE models listed Table 3 ﬁve different regimes ISAAC identiﬁes Because interleaves uniﬁcation process modelbuilding process PRET able unify models straightforward efﬁcient manner Even important interleaving vastly reduce complexity generate phase One problem pairwise uniﬁcation procedure fail unify set models includes single globally valid For example assume model A discovered ﬁrst followed different model B models uniﬁed If globally unifying model C pairwise procedure correctly unify models A better uniﬁcation procedure solves pairwise deﬁciency apply valid models time series We choose expensiveOn2 n number time seriesand absolutely necessary practicing engineers capable deciding models list subsume PRET misses equivalences 6 Conclusion PRET designed produce type formal engineering models human expert createquickly automatically Unlike existing identiﬁcation tools PRET fancy parameter estimator uses sophisticated knowledge representation reasoning techniques automate structural identiﬁcation phase model building Unlike existing AI tools PRET takes active approach task modeling complex nonlinear systems techniques drawn engineering dynamical systems control theory explore behavior directly sensors actuators Unlike existing software tools PRET works highdimensional nonlinear greybox systems kinds hard problems engineers faced daily basis The challenges involved automating nonlinear identiﬁcation signiﬁcant especially PRET designed easily extensible problem domain admits ordinary differential equations The controltheoretic issues involved reasoning nonlinear dynamical systemsparticularly involving planning execution experimentsroutinely stymie human experts PRETs solution based 184 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 paradigms generateandtest inputoutput modeling The generate phase rests ﬂexible powerful representationthe generalized physical networkand layered hierarchy knowledge representations term domains metadomains This framework lets PRET effectively model systems wide variety application areas adapt smoothly different levels domain knowledge The test phase based ﬁrstorder logic inference uses variety heterogeneous reasoning modes check models observations This inference orchestrates selection invocation interaction reasoning modes declaratively represented knowledge dynamical systems knowledge reason dynamical systems order test candidate models cheaply possible Inputoutput techniquesautomatic planning execution interpretation experimentsmake modeling process interactive This particularly difﬁcult problem In practice rarely measure know state variables usually access imprecise noisy sensors attached subset outputs PRET works imprecision representing reasoning explicitly deals noise QRguided ﬁltering nonlinear parameter estimation reasoner reconstructs unmeasured dynamics delaycoordinate embedding identiﬁes different behavioral regimes connection inputs outputs cell dynamics bifurcation analysis new representation called qualitative stateparameter space Theoretically PRET model admits ODE modeleven severe blackbox situation knows whatsoever 26 Because xmissionline metadomain allows PRET use lumpedelement GPN components model spatially distributed systems model systems technically require PDE models In practice size associated search space available power limit PRETs range The representation reasoning tactics described paper mitigate intelligently streamlining modelbuilding testing processes Thanks tactics PRET able successfully construct models dozen textbook problems Rössler Lorenz simple pendulum pendulum spring 161734 interesting difﬁcult realworld examples shock absorber driven pendulum previous section commercial radiocontrolled car covered 16 These examples representative wide classes dynamical systems linear nonlinear PRETs model radiocontrolled car particularly interesting ﬁt experimental data actually enabled project analysts identify wrong mental models Speciﬁcally PRETs model matched observations intuition disparities led understand dynamics better This anecdote brings important point PRET intended engineers tool goal dictated speciﬁc set design choices From engineering standpoint successful model balances accuracy parsimony Accordingly PRETs goal fer physics user left implicit construct simplest model matches observed behavior predeﬁned specifications Because evaluation 26 This largely Taylorseries modelgeneration facilities lowestlevel layer modeltesting tools Table 2 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 185 criteria domainspeciﬁc believe modeling tools let domain expert users dictate simply build arbitrary set thresholds percent ages The notion minimal model tightly myopically guided users speciﬁcations represents different philosophy traditional AI work area Unlike scientiﬁc discovery systems PRET makes attempt exceed range resolution speciﬁcations prescribed user loose specifica tion particular state variable instance taken explicit statement exact ﬁt state variable important user PRET add terms ODE order model small ﬂuctuations variable Conversely single outofrange data point cause candidate model fail PRETs test These unwelcome effects ﬁnite resolution intentional useful byproducts abstrac tion level modeling process A single outlying data point appear benign reasons variances means engineers care deeply singlepoint failures temperature dependence Oring behavior space shuttle boosters tool designed support reasoning reﬂect constraints Achieving model parsimony accuracy face incomplete heterogeneous knowledge exponential search space nontrivial problem Automatic planning execution interpretation experiments aid solution associated implementation issues nontrivial Manipulating actuators sensors order augment modelbuilders knowledge useful ways difﬁcult controltheoretic issues buried physics metaknowledge constraints inherent problem requirements Corroborating verifying ﬁlling human experts knowledge worthwhile goal conﬂict model minimality Nonetheless automating inputoutput modeling process important step autonomous situations nonexpert users sensible ways conundrum current foci research Acknowledgements Apollo Hogan Brian LaMacchia Abbie OGallagher Janet Rogers Ray Spiteri Tom Wrensch contributed code andor ideas PRET References 1 H Abarbanel Analysis Observed Chaotic Data Springer Berlin 1995 2 H Abelson The bifurcation interpreter A step automatic analysis dynamical systems Internat J Comput Math Appl 20 1990 13 3 S Addanki R Cremonini JS Penberthy Graphs models Artiﬁcial Intelligence 51 1991 145178 4 J Amsterdam Automated qualitative modeling dynamic physical systems PhD Thesis MIT Cambridge MA 1992 5 K Astrom P Eykhoff System identiﬁcationA survey Automatica 7 1971 123167 6 A Barrett D Christianson M Friedman C Kwok K Golden S Penberthy Y Sun D Weld UCPOP Users Manual version 40 Technical Report 930906d Department Computer Science Engineering University Washington Seattle WA 1995 7 C Beckstein R Stolle G Tobermann Metaprogramming generalized Horn clause logic Proc 5th International Workshop Metaprogramming Metareasoning Logic META96 Bonn Germany 1996 pp 2742 186 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 8 C Beckstein G Tobermann Evolutionary logic programming RISC Proc 4th International Workshop Logic Programming Environments Washington DC Technical Report TR 92143 Center Automation Intelligent Systems Research Case Western Reserve University Cleveland OH November 1992 pp 1621 9 C Beckstein G Tobermann Algorithmic debugging hypothetical reasoning J Automat Software Engineering 4 1997 151178 10 F Besinger D Cebon D Cole Damper models heavy vehicle ride dynamics Vehicle System Dynamics 24 1997 3564 11 P Boggs R Byrd J Rogers R Schnabel Users reference guide ODRPACKSoftware weighted orthogonal distance regression Technical Report 4103 National Institute Standards Technology Gaithersburg MD 20899 1991 12 P Boggs R Byrd R Schnabel A stable efﬁcient algorithm nonlinear orthogonal distance regression SIAM J Sci Statist Comput 8 6 1987 10521078 13 E Bradley Autonomous exploration control chaotic systems Cybernetics Systems 26 1995 299319 14 E Bradley Timeseries analysis Introduction Springer Berlin 2000 M Berthold D Hand Eds Intelligent Data Analysis An 15 E Bradley M Easley Reasoning sensor data automated identiﬁcation Intelligent Data Analysis 2 2 1998 123138 16 E Bradley A OGallagher J Rogers Global solutions nonlinear systems qualitative reasoning Ann Math Artiﬁcial Intelligence 23 1998 211228 17 E Bradley R Stolle Automatic construction accurate models physical systems Ann Math Artiﬁcial Intelligence 17 1996 128 18 M Branicky V Borkar S Mitter A uniﬁed framework hybrid control Proc 33rd IEEE Conference Decision Control Lake Buena Vista FL 1994 pp 42284234 19 J Bredehoeft H Cooper I Papadopulos Inertial storage effects wellaquifer systems Water Resource Research 2 4 1966 697707 20 W Brogan Modern Control Theory 3rd edn PrenticeHall Englewood Cliffs NJ 1991 21 A Capelo L Ironi S Tentoni Automated mathematical modeling experimental data An application material science IEEE Trans Systems Man Cybernet 28 1998 356370 22 J Carbonell J Blythe O Etzioni Y Gil R Joseph D Kahn C Knoblock S Minton A Pérez S Reilly M Veloso X Wang PRODIGY 40 The manual tutorial Technical Report CMUCS92150 School Computer Science Carnegie Mellon University Pittsburgh PA 1992 23 BW Char KO Geddes GH Gonnet BL Leong MB Monagan SM Watt Maple V Language Reference Manual Springer Berlin 1991 24 M Cherniack S Zdonik Changing rules Transformations rulebased optimizers Proc ACM SIGMOD International Conference Management Data Seattle WA 1998 25 D Chin WaterResource Engineering Prentice Hall Englewood Cliffs NJ 2000 26 R Davis Metarules Reasoning control Artiﬁcial Intelligence 15 3 1980 179222 27 J Kleer An assumptionbased TMS Artiﬁcial Intelligence 28 2 1986 127162 28 J Kleer BC Williams Eds Artiﬁcial Intelligence Vol 51 Elsevier Science Amsterdam 1991 Special Volume Qualitative Reasoning Physical Systems II 29 D DHumieres M Beasley B Huberman A Libchaber Chaotic states routes chaos forced pendulum Phys Rev A 26 1982 34833496 30 S Džeroski L Todorovski Discovering dynamics From inductive logic programming machine discovery J Intelligent Inform Systems 4 1995 89108 31 M Easley Automating inputoutput modeling dynamic physical systems PhD Thesis University Colorado Boulder 2000 32 M Easley E Bradley Generalized physical networks model building Proc IJCAI99 Stockholm Sweden 1999 pp 10471052 33 M Easley E Bradley Reasoning inputoutput modeling dynamical systems Proc 3rd International Symposium Intelligent Data Analysis IDA99 Amsterdam Springer Berlin 1999 pp 343355 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 187 34 M Easley E Bradley Metadomains automated identiﬁcation CH Dagli M Akay OK Ersoy Ferná A Smith Eds Proc Smart Engineering System Design ANNIE 00 ASME Press Fairﬁeld NJ 2000 pp 165170 35 J Everett K Forbus Scaling logicbased truth maintenance systems fact garbage collection Proc AAAI96 Portland OR 1996 pp 614620 36 B Falkenhainer K Forbus Compositional modeling Finding right model job Artiﬁcial Intelligence 51 1991 95143 37 B Faltings E Gelle Local consistency ternary numeric constraints Proc IJCAI97 Nagoya Japan 1997 pp 392397 38 B Faltings P Struss Eds Recent Advances Qualitative Physics MIT Press Cambridge MA 1992 39 K Forbus Qualitative process theory Artiﬁcial Intelligence 24 1984 85168 40 K Forbus Interpreting observations physical systems IEEE Trans Systems Man Cybernet 17 3 1987 350359 41 K Forbus Qualitative reasoning A Tucker Ed CRC Computer Science Engineering Handbook CRC Press Boca Raton FL 1997 42 J Forrester World Dynamics Wright Allen Press New York 1971 43 DM Gabbay MJ Sergot Negation inconsistency I J Logic Programming 3 1 1986 136 44 H Gallaire C Lasserre Controlling knowledge deduction declarative approach Proc IJCAI79 Tokyo Japan 1979 pp S1S6 45 H Gallaire C Lasserre Metalevel control logic programs KL Clark SA Tärnlund Eds Logic Programming Academic Press London 1982 pp 173185 46 H Goldstein Classical Mechanics Addison Wesley Reading MA 1980 47 B Grosof Courteous logic programs Prioritized conﬂict handling rules Technical Report RC 20836 IBM Research 1997 48 J Halling Ed Principles Tribology MacMillan 1978 49 B Hannon M Ruth Dynamic Modeling Springer New York 1995 50 HewlettPackard Standard Instrument Control Library Reference Manual 1996 51 P Hill J Lloyd The Gödel Programming Language MIT Press Cambridge MA 1994 52 A Hogan R Stolle E Bradley Putting declarative meta control work Technical Report CUCS85698 University Colorado Boulder 1998 53 D Hong S Velinsky X Feng Veriﬁcation wheeled mobile robot dynamic model control ramiﬁcations Dynamic Systems Measurement Control 131 1 1999 5863 54 R Horst P Pardalos N Thoai Introduction Global Optimization Nonconvex Optimization Applications Vol 3 Kluwer Dordrecht 1987 55 C Hsu A theory celltocell mapping dynamical systems J Appl Mech 47 1980 931939 56 C Hsu CelltoCell Mapping Springer New York 1987 57 KM Huang JM Zytkow Discovering empirical equations robotcollected data Z Ras A Skowron Eds Foundations Intelligent Systems Lecture Notes Computer Science Vol 1325 Springer Berlin 1997 pp 287297 Proceedings ISMIS97 Charlotte NC October 1997 58 J Jaffar M Maher Constraint logic programming A survey J Logic Programming 20 1994 503581 59 JN Juang Applied System Identiﬁcation Prentice Hall Englewood Cliffs NJ 1994 60 D Karnopp D Margolis R Rosenberg System Dynamics A Uniﬁed Approach 2nd edn Wiley New York 1990 61 BJ Kuipers Qualitative simulation Artiﬁcial Intelligence 29 3 1986 289338 62 BJ Kuipers Qualitative Reasoning Modeling Simulation Incomplete Knowledge Addison Wesley Reading MA 1992 63 P Langley HA Simon GL Bradshaw JM Zytkow Eds Scientiﬁc Discovery Computational Explorations Creative Process MIT Press Cambridge MA 1987 64 R Langlois R Anderson Preview control algorithms active suspension offroad vehicle Vehicle System Dynamics 24 1997 6597 65 J LeFèvre Reactive dynamics An extension forresters dynamics bond graphlike notations Bond Graph Modeling Simulations ICBGM 97 Conference Proceedings Phoenix AZ 1997 pp 149155 66 L Ljung Ed System Identiﬁcation Theory User PrenticeHall Englewood Cliffs NJ 1987 188 E Bradley et al Artiﬁcial Intelligence 133 2001 139188 67 JW Lloyd Foundations Logic Programming 2nd extended edn Springer Berlin 1987 68 L McCarty Clausal intuitionistic logic I Fixedpoint semantics J Logic Programming 5 1988 131 69 F Morrison The Art Modeling Dynamic Systems Wiley New York 1991 70 P Mosterman G Biswas Formal speciﬁcations hybrid dynamical systems Proc IJCAI97 Nagoya Japan 1997 71 PJ Mosterman G Biswas A formal hybrid modeling scheme handling discontinuities physical models Proc AAAI96 Portland OR 1996 pp 985990 72 N Muscettola P Nayak B Pell B Williams Remote agent To boldly AI gone Artiﬁcial Intelligence 103 1998 548 73 PP Nayak Automated Modeling Physical Systems Lecture Notes Computer Science Vol 1003 Springer Berlin 1995 Revised version PhD Thesis Stanford University 1992 74 H Paynter Analysis Design Engineering Systems MIT Press Cambridge MA 1961 75 J Rees W Clinger The revised3 report algorithmic language Scheme ACM SIGPLAN Notices 21 1986 37 76 J Reid Linear System Fundamentals McGrawHill New York 1983 77 V Robins J Meiss E Bradley Computing connectedness An exercise computational topology Nonlinearity 11 1998 913922 78 V Robins J Meiss E Bradley Computing connectedness Disconnectedness discreteness Physica D 139 2000 276300 79 R Sanford Physical Networks PrenticeHall Englewood Cliffs NJ 1965 80 T Sauer J Yorke M Casdagli Embedology J Statist Phys 65 1991 579616 81 ED Sontag Mathematical Control Theory Springer Berlin 1998 82 L Sterling E Shapiro The Art PROLOG MIT Press Cambridge MA 1986 83 R Stolle Integrated multimodal reasoning modeling physical systems PhD Thesis University Colorado 1998 To appear Lecture Notes Computer Science Springer Berlin 84 R Stolle E Bradley A customized logic paradigm reasoning models Y Iwasaki A Farquhar Eds Proc 10th International Workshop Qualitative Reasoning QR96 Stanford Sierra Camp CA AAAI Technical Report WS9601 1996 85 R Stolle E Bradley Multimodal reasoning automatic model construction Proc AAAI98 Madison WI 1998 pp 181188 86 S Strogatz Nonlinear Dynamics Chaos AddisonWesley Reading MA 1994 87 G Sussman G Steele CONSTRAINTSA language expressing hierarchical descriptions Artiﬁcial Intelligence 14 1980 139 88 L Todorovski S Džeroski Declarative bias equation discovery Proc 14th International Conference Machine Learning ICML97 San Francisco CA Morgan Kaufmann San Mateo CA 1997 pp 376 384 89 J Top H Akkermans Computational physical causality Proc IJACI91 Sydney Australia 1991 90 A Torn A Zilinskas Global Optimization Lecture Notes Computer Science Vol 350 Springer Berlin 1995 91 T Washio H Motoda N Yuji Discovering admissible model equations observed data based scale types identity constraints Proc IJCAI99 Stockholm Sweden 1999 pp 772779 92 D Weld J Kleer Eds Readings Qualitative Reasoning Physical Systems Morgan Kaufmann San Mateo CA 1990 93 DS Weld Reasoning model accuracy Artiﬁcial Intelligence 56 1992 255300 94 BC Williams W Millar Decompositional modelbased learning analogy diagnosis Proc AAAI98 Madison WI 1998 95 K Yip KAM A System Intelligently Guiding Numerical Experimentation Computer Artiﬁcial Intelligence Series MIT Press Cambridge MA 1991 96 F Zhao Computational dynamics Modeling visualizing trajectory ﬂows phase space Ann Math Artiﬁcial Intelligence 8 1993 285300 97 JM Zytkow Model construction Elements computational mechanism Proc Conference Creativity Edinburgh 1999