ELSEVIER Artificial Intelligence 88 1996 3 17347 Artificial Intelligence Using actionbased hierarchies realtime diagnosis David Ash Barbara HayesRoth Knowledge Systems Laboratory Computer Science Department Gates Computer Science Building Stanford University Stanford CA 94305 USA Received February 1996 revised March 1996 Abstract An intelligent agent diagnoses perceived problems respond appropri ately Basically agent performs series tests results discriminate competing hypotheses Given specific diagnosis agent performs associated action Using tra ditional informationtheoretic heuristic order diagnostic tests decision tree agent maximize information obtained successive test minimize average time number tests required complete diagnosis perform appropriate action How realtime domains optimal sequence tests performed time available Nonetheless agent respond For agents operating realtime domains propose alternative actionbased approach node diagnosis tree augmented include ordered set actions positive utility children tree b tree structured maximize expected utility action available node Upon perceiving problem agent works way tree performing tests discriminate successively smaller subsets potential faults When deadline occurs agent performs best available action associated specific node reached far Although actionbased approach minimize time required complete specific diagnosis provides positive utility responses stepwise improvements expected utility diagnosis process We present theoretical empirical results contrasting advantages disadvantages informationtheoretic actionbased approaches Keywords Reactive planning Decision trees Diagnosis Realtime planning Heuristics Corresponding author Present address Brightware Inc 90 Park Avenue Suite 1600 New York NY 10016 USA Email 7036345compuservecom 00043702961500 PIf SOOO437029600024O Copyright 1996 Elsevier Science BV All rights reserved 318 Table I Desiderata parachutist perceiving delay parachute opening Possible situations Conditional probabilities Optimal actions Deadline Good parachute Low speed malfunction High speed malfunction No parachute 1 Introduction 0 I 04 04 0 I Steer normally Now I20 seconds If malfunction deadline Now 45 seconds Release main parachute Activate reserve parachute If malfunction deadline Now S seconds Release main parachute Activate reserve parachute Activate reserve parachute Now 3 seconds As summarized fall parachute taking longer free appropriate different situations parachute lowspeed Consider open fall parachute parachutist In order qualitatively usual malfunctioning highspeed different conditional responses different deadlines parachutist speed high speed b involving test good parachute parachutist perform probabilities given malfunctioning perspective response Two diagnostic look altimeter seconds look main parachute action parachutist discriminate good parachute fall malfunctioning open soon parachute initial observation Table 1 situations different optimal situation low situation parachute parachute Which classify classify tests available From informationtheoretic parachutist look altimeter likely hypotheseslow test distinguish speed versus highspeed malfunctions However tify appropriate response lowspeed malfunction parachute highspeed malfunction parachute activate outcome altimeter performs second outcome test iden If rate fall low good parachute main Should reserve If rate fall main reserve simply activate reserve Regardless choose appropriate action test parachutist test looking parachute The real problem parachute Should steer normally release deadline occurs time perform parachutist parachutist fast activate release If perspective look parachute From utilityoriented If parachute activate results test identify positive utility actions particularly critical contingencies normally parachutist appropriate speed high speed deadline occurs If parachute malfunction parachutist main parachute steer If knowing falling low response need perform reserve main parachute activate parachutist reserve parachutist use parachute malfunction persists deadline good parachute inflate deadline immediately release test parachutist D Ash B HcyesRothArtificial Intelligence RR 1996 317347 319 table assumes competing original opening case subsequent problem The default deadline reserve parachute fault hypotheses case shorter deadlines In case altitude 2500 feet Now 5 seconds higher opening altitudes time second available During test looking altimeter parachutist parachute use main parachute reserve In sum performing test cases time parachutist permits performing altimeter improve choice action subsequently choose appropriate action immediately lowspeed malfunction parachutist test Now 45 seconds start perform If determines parachutist interval deadline extend chance increasing This simple example parachutist illustrates key features realtime diagnosis problems Perceived problems deadline For example parachute require form response uncertain possibly fault immediate dependent response original opening occurred 2500 feet parachute malfunction allows variable problem speed falling altitude requires latency depending perceived test discriminates DifSerent tests discriminate different subsets potential faults For example good parachute low versus parachute highspeed malfunction parachute high subsets faults good parachute malfunctioning altimeter speed malfunction test discriminates speed low speed parachute parachute subsets faults Diferent tests require different amounts time resources For example eyes test primarily accurately parachute altimeter observed period seconds rate fall test require use parachutists altimeter altimeter estimate test takes seconds test parachute longer perform Sometimes sequence tests required specijc diagnosis perceived problem perceives time perform altimeter parachutist tests completed deadline For example problem lower altitude parachute Different ately activating lower utility ment malfunctioning main parachute case good parachute reserve parachute high utility case malfunctioning responses different utilities different faults For example immedi case parachute possible entangle low actually negative utility parachute Specific diagnoses permit optimal available knowledge malfunctioning parachute low speed opposed high speed allows parachutist wait longer main parachute responses For activating reserve parachute diagnoses permit positive utility nonspecijc knows responses For example parachute know low speed high speed release main parachute activate malfunctiong example knowing malfunction inflate releasing Nonspecijc parachutist reserve parachute positive utility case 320 D Ash B HayesRotizArtciul Intelligence RR 1996 317347 The agent sucient advance time knowledge resources prepare decision contextappropriate anticipate analysis described decide performing altimeter parachute test tree diagnosis action For example main parachute open time parachutist kind situations respond test time circumstances warrant performing In paper present actionbased node diagnosis decision positive utility maximize structured problem perceiving discriminate agent performs occurs diagnosis node reached far successively approach diagnosis tree augmented children include ordered set actions tree expected utility action available node Upon tests agent works faults When deadline best available action associated specific tree b tree performing subsets potential way smaller The remainder paper organized follows phases realtime diagnosis In Section 3 actionbased actionbased approach formal analysis In Section 2 formally reactive planning approach Sections abstract experiments particular domain intensive care monitoring Sections 7 8 identify open problems future research characterize requirements reactive plan execution 46 evaluate demonstration summarize conclusions 2 The problem remain At basic level interested problem identifying actually different acting set faults For purposes paper define fault agent interested given domain Thus fault specific diagnosis property domain goals agent For example domain stuck packed The difference parachutist diagnosis debriefing viewed different attempt total malfunctions free fall point view parachutist faced fault At later point parachuting parachute incompetently irrelevant different goal malfunction types total malfunction critical ground parachute type total malfunctionthe prevent reoccurrence container malfunction faults response completely problem For dealing set faults agent available reactive plan tree called actionbased particular type reactive planan reactive plan consists series actions important realize form decision paper analyze Later augmented agent order diagnose particular remedying deployed resources identify useful actions running anytime perform real time desirable completion fault diagnoses Because hierarchybut fault real time actions time flavor 141 allow cases resources permit intended consume minimum computational reactive plan D Ash B HayesRothArtificial Intelligence 88 1996 317347 321 emergency reactive planfor landing engine dealing emergency agent executes reactive plan Consider For purposes paper reactive planner constructs reactive plan example failure The pilot pilot pilots indicates desired properties reactive plan versus reactive planner The real time However reasons noted distinct pilot faced making checklista generally case pilot designed agent execute flying particular differences reactive planner need especially substantial plan generates computationally This distinction guide design reactive plans paper checklist Although likely recommended important time complete plan prior needed type aircraft This distinction situation However efficient computationally checklist plan efficient handle essential possibility possible domains Partial diagnoses reactive plan able ample physician recommend type patient anemic conditioneven type anemic condition necessarily recommendationbut enable agent taking action making partial diagnosis For ex heshe knows patients blood specific type anemia enable optimal save life patient The reactive plan optimal acton time permits necessary reach similar goalsfinding necessary deadline Such recommendation optimal knowing optimalknowing particular transfusion suffering patient domain attached prior probabilities We view partial diagnosis single research represents approximation complete diagnosis probabilities 10 Clearly assert probability topic went route need mechanism probability refined particular fault present We stated view fault set faults 10 00 As reactive plan executed provide sophisticated given situation set faults current fault attached probability usually interesting real situation certainly reasoning uncertainty ruling fault If diagnosis gradually interested recognizes designing solutions reactive plan Because long sequene corrective needs corrected Because agent set corrective actions known responses agent executing reactive executing plan fault However views execution single corrective action solution reactive planner potentially notion value performing corrective action This purely heuristic estimate given directly domain expert wellunderstood computation values corrective action corrective fix brokendown explicitly implicitly domain For moment positivenegative costs actions discussed For combination value tires air actions value faults For example engine reactive planner needs fault The resulting matrix sparse action fault value number assumed representing expected know actually actions filling better 322 D Ash B HavesRntlzArtificial Inrelligence 88 1996 317347 Because sparseness value matrix entire matrix Rather need actions matrix automatically entire matrix need represented reactive planner interesting domain expert expected domain expert values faults rest effect particular large domain filled zeroes Indeed explicitly internally There COSTS associated pairs actions faults Again particular heuristic estimate cost performing particular independent particular action value particular makes general expert simply providing particular undesirable independent perform action Because fault involved faults fault fault applied action This captures cost presence action notion cost performing action cost matrix provided cost performing fault Here expect cases cost performing costs actions noting exceptions difference In practice combine notion value cost single notion total value cost This utility appro utility represents negative The difference value cost appears priate combining cost desirable clearly desirable If took ratio actions little value infinitesimal actions high value moderate costthis situation function The utility agents response declines time For example parachuting utility response parachutist response known result instantaneously time measured sharp decline point essentially useless injury The decline role desigrl reactive plan ground Note decline occur domain gets closer couple reasons reach ground close likely plays major plan planner try sure best possible agent seconds exact time advance time range save parachutists life value utility response reactive designing ground response time invoke reactive plan noticing utility decays The time axis utility graphs plan invoked The agent generally appears parameter value obvious time fault appeared reader ask measure time use knowledge invoking planner knows long agent fault appeared sure plan invoked operating Thus providing utility decay information measure indication fault appeared fault appeared reactive regular plan called range It time reactive planner long agent plan accordingly But dark reactive planner careful time point reactive plan invokedwhich going wrongperhaps particular invocation reactive plan necessarily reactive plan action fault appeared The answer If knows approximately range value construct measured available correspond outside D Ash B HayesRothArtijicial Intelligence 88 I 996 317347 323 set test set possible outcomes subset set Thus test performed available help actual agent knows set faults perform Each If agent information obtained outcome agent diagnose faults In order tests outcome outcome corresponding group tests actual fault falls fSeerential diagnosis probabilities narrowing complete test need disjointsome certain information test outcome affects probability produce new smaller differential tests provide current outcome faults Each fault agent hopes intersection agent differential diagnosis process The fault sets associated outcomes reduce single fault given way outcome test attached information set test attached diagnosis diagnosis Gradually differential fault belongs fault action agent monitoring diagnostic results time available action represents increase action world Both attempt agent gain information A test associated set monitoring actions diagnostic actions rate agent frequency request obtain single value particular types actions types costs associated coststhe takes action come Because realtime nature agent Temporal time taken world parameter values analyzing resources consumed agent A monitoring world Specifically given parameter monitored A diagnostic parameter There temporal performed deadlines costs turn componentsthe obtained parameter values temporal resources types physical costs traded anotherwe perform possible actions great frequency save temporal costs great expense physical costs Similarly save physical costs performing monitoring diagnostic necessary particular outcome test The exact value computational task There physical costs vary depending agent devote diagnosis action time performing computational determine temporal costs resources consumed action temporal costs important absolutely actions In general costs increase Faults associated set prior probabilities Because assume reactive plan sum 10 In event single fault assumption paper sum priors exactly 1 O invoked fault present prior probabilities tests performed basics problem It follows description form anytime algorithm At points results tests result plan executing request differential diagnosis However differential diagnosis corrective action action differential way likely reactive time refinement Ideally way good corrective actions better average differential reactive plan constructed value faults substantial differentials result desirable possible 324 D Ash B HiesRnthArtfi Inreiligence 88 1996 317347 value best corrective action available likely faults The algorithm refined specialized action associated current differential particular faults When deadline improve corrective reached anytime sense differential recommended performed 21 Formal statement problem The previous section gave intuitive statement problem interested In section state problem precisely However problem precise tractable number simplifying adhered remainder paper order assumptions 211 1 2 3 4 5 6 probabilities originally necessarily known precisely given fault constant fault zero The value diagnosis faults differential diagnosis zero Simplifying assumptions There trivial uncertainty handling That times process proportions Deadlines hard The utility given response particular hard deadline hard deadline Temporal costs tests constant The time taken given test come known The agent knows reached hard deadline When hard deadline referred agent know means discussed The single fault assumption invocation reactive planner Tests provide learn additional performing revealed test faults deadlines The agent left faults Exactly fault present given paper act time information information 2 reached test number information advance advance infer 212 The problem The reactive planner given 9tuple construct plan ERDAKTOCS These defined follows l F set faults l P set prior probabilities P function mapping F interval O 11 l D set deadline distributions D function mapping F set functions Df 30 Dr tdt 1 D Ash B HayesRothArtQicial Intelligence 88 1996 317347 325 Here deadline semantics Df fault f lies interval Df tl t2 probability hard J Df tdt 1 11 set outcomes tests 0 function mapping T sets faults For ok set outcomes Oi subset A set actions U matrix utilities U function mapping F x A interval The semantics discussed T set tests 0 example F corresponding C set temporal costs tests This nonnegative S set physical nonnegative It noted possible outcome test 7 notions monitoring function mapping T set function mapping T set costs tests This Or oio2 real numbers real numbers single notion tests A test consists set monitoring actions necessary diagnostic actions analysis results actions diagnostic properties point view monitoring temporal costs physical costs tests goal agent visavis reactive plan The agents goal collapsed diagnostic The interesting actions captured We roughly speaking recommend series tests tests 70 q 72 recommended time invocation times measured come alreadythat tl t2 times tk agent available outcomes All recommendation tests ti C Ti tk The agent recommend action The agent know perform action point continues deadline reaches complete diagnosis assumed reactive plan When making outcomes k tests ri recommend deadline deadline perform diagnosis reaching perform particular case multiple outcomes The action function time t deadline occurs It depends tests fault equally actually function variables t f 0 Thus occurs outcomes including thingsthe noting likely Letting tests action step function utility possible outcomes fault o denote f denote fault u utconrtfo U4tYfYo7f This function single intuitively represents improving utility action obtained date mean outcomes invocation reactive plan By taking 326 I Ash B HaesRotllrArtcicll Intellipnce X8 I 996 317347 test consistent fault reduce U t f step function albeit steps Now reduce value function deadline distribution function fault weighting function variables fault function x Ufardt f DtUtfdt Finally compute sum faults overall performance agent calculating weighted uo c fdr f 1 p f 1 fEF Intuitively overall performance agent reactive plan reactive plans compared computing different values actions values single fault time fault These values plotted graph possible test outcome We determine agent different points time determine average performance integral weighted deadline distribution particular taken different performances This number Utot represents Two different U comparing recommended actions average uncertainty agent fault computing Finally compute average functions weighted probabilities graphically recommended AX Because 25 35 utilities actions relevant interval integral computing faults This fault time action changes illustrated Fig 1 This shows improving performance utility action AO A 1 A2 uniform distribution time points case hard deadline overall performance recommended calculated assumed average performance agent faults taking So far analysis taken account utility performing tests described account compute actions What section The temporal cost time axis graphs tests step function time case invocation single nondecreasing computed cost performing performing tests taken The physical cost performing guaranteed reactive plan follows As values compute particular fault S t f Now compute average test outcomes consistent integral time weighted Sfmdt f 1 I Dfttfdt D Ash B HayesRothArtificial Intelligence 88 1996 317347 327 I oo 015 1 Value best action 050 date 025 Action A0 Action A3 Action A2 Deadline uniformly distributed 25 35 Overall performance 0625 0 I 2 3 4 5 Deadline Fig I Reactive plan performance single fault Finally compute computing weighted average different faults overall average physical cost reactive plan S tot c foutff fEF true performance reactive plan computed determining The utilitycost difference Utot St Our goal paper directly produce reactive plans It produce generate good reactive plans Thus space problem It goal paper propose evaluate E P D A VT 0 C S By computing reactive planners reactive planner problems reactive plans produced different able compare set reactive planners average performance reactive planners criterion 22 Related work The obvious attempted solutions type problem appear liter ature anytime planning work Dean Boddy 141 decisiontheoretic 328 Il Ash B HoyesRotllArticicll Intelligence 8 1996 317347 involves problem analyze general 371 Anytime planning regardless long algorithm theoretical point view However improves time Dean Boddys contribution general propose particular anytime algorithm 27 J concept bounded rationality elucidated Russell analysis Horvitz idea anytime algorithm Wefald runs value returns answer properties answer anytime algorithms paper follow framework present particular anytime algo rithm properties analyzed Horvitz Russell Wefald good job goals analyzing researchers differ somewhat deliberation computational current agent computational results tests deciding test perform We willing potentially smaller time mentioned unable agent deliberation acting In important goal urgent nature domains level Any analyzing incur stage order save The approaches single lost time assume acting time spent deliberating In words devote significant actually expense reactive planning reactive plan resources agent devoted exclusively present research goals assume metareasoning resources deciding metareasoning tradeoff high computational time nontrivial time trivial executing expected operate research Although characterize existing diagnosis cast problem model domain advantage workthe nificant disadvantagemeeting diagnosis agree logic connections work diagnosis problem literature close Classically diagnosis firstorder order diagnosis As Reiter offers significant sig principles diagnosisand impossible Reiter shows madea ability realtime deadline 35 This approach conclusion requires greatly simplified single fault assumption expensive approach computational On subject multiple faults diagnosing multiple seminal paper 16 1 De Kleer Williams computationally suggest beginning number techniques faults reducing conflict sets produce minimal flawed behavior This works diagnosis complexity provide search small potential search For example sets actually conflict sets expanding explain principles hard idea apply problem Our agent starts smaller sets faults large differential gradually works However agree basic observation expect small coping interactions problem diagnosing tractable possible subsets set faults computationally number possible remains manageable diagnosis faults Other researchers Cooper II addressed diagnosis inference complexity Cooper shown attempt n likely diagnoses control search TOP N algorithm In addition lack meeting looking meeting belief networks problem computational realtime deadlines For example NPhard The response 25 generate realtime deadlines D Ash B HayesRothArtificial Intelligence 88 1996 317347 329 approach differs use Bayesian belief net represent uncertainties The current work worthwhile possible extension deal uncertainty attempt attempt Other approaches diagnosis reasoning 81 qualitative cation medical AI literature problem diagnosis adaptation Quinlans decision section include modelbased 223 11 decision reasoning trees 331 411 None approaches attempt real time limited usefulness trees prove central 131 heuristic classifi techniques deal approach Another large body literature relationship time planning Before describing define mean different purposes For reactive planning situations respond definition reactive planning substantial planning arise real time terms different work reactive reul work present paper advance response time run time The work paper fits adequate authors use task planning universal planning 40 advance exactly situations advance Rather enumerate 23 shown general universal planning specific cases We attempt set faults plan response including example hopeless respond example reactive planning enumerate attempts The ultimate reactive planner agent encounter Ginsburg computationally enumerate 121 expect likely respond Schoppers greater chance success situations desirable critical critical tractable possible A triangle extreme example execute series preconditions situation changed unexpectedly planning providing good actions limited perform case set faults We attacking narrower problem agent replan This work represented efforts recognizing plan longer applies opposed tables 211 agent plan step plan knows plan longer applies reactive Brooks subsumption architecture classify work reactive planning The approach task number layers lower layers providing S general body work involves probably simple robots dividing abilities avoiding objects higher layers providing complex abilities identifying objects This allows reactivity lower levels permitting complex operations provided convincing layers Kaelbling robot Although Brooks robot clear scale Rosenschein high level Perhaps Brooks controversial approach works simple need central control authored number papers situated uutomatu agent accurately theory 2830361 track represent provide guaranteed imply This theory based assumption state world real time The basic idea time cycle This approach useful deadlines constant single constant response evidence structure claim 330 D Ash B HayesRorhArtcinl Intelligence 88 1996 317347 level response required constant cycle successful agent behavior mapped case problem deadlines vary cycle time approach difficult Their approach far levels competence multiples constant richer way costs tests correspond exactly fitting problem likely obvious Chrisman problem divided way Simmons analysis reactive planning A robot needs order diagnose determine possible sensing procedures notion sensible planning brings perform state world Chrisman Simmons use probably effective decision theory sensing actions decision theory minima1 expected cost For simple worlds notion meeting approach realtime objectivesthey time It simply 71 introduce simply interested involves realtime planning closest work literature states actions basis value averaged time view decision notion action corresponds states sense policy corresponds taken test similar perform mapping 151 attack problem differential sensing procedure future discounted diagnoses certain best possible A number approaches Of Dean et al present paper They compute policy maximize world state This problem correspond notion test notion action value state However problem differs respects Firstly possible fault set reasonable constant require specific mathematical algorithm distribution means deadline distribution tractable This function unstated number faults domains domains corresponds assumption time situation states world correspond notion compute theirs important set subsets intractable Second state function notion deadline type progress Finally roughly properties value discounting approach works particular main classical planning based flaws MARUTI Dynamic planning nature task Dynamic planning require anticipation Hendler Agrawala 124 J complete plan laid advance unforeseen time devoted unify dynamic plan systems tasks ning realtime operating able react plan varies dynamically signed address assume difficulties advance Hendler criticizes existing planning assume reaction component advance However step assuming ponent complete knowledge replanning replanning planner complete knowledge world He provides reaction com world But provide dynamic agent reactive plans capable dynamic possible systems grounds planner foresee anticipate reactive planning situations arsenal techniques handle reasoning situations D Ash B HayesRothArtcial Intelligence 88 1996 317347 331 3 Actionbased hierarchies In section approach actionbased hierarchies approach simplified version problem section We solve problem outlined illustrative purposes approach applies extend deal complete problem We discuss feasibility approach dimensions First time complexity reactive plan low Second space complexity reactive plan time complexity reactive planner manageable central possibly Finally goals low use approach replanning permit allow dynamic The simplified version problem solve makes following set assumptions I Tests physical costs 2 No test progress time If agent performs test wait outcome test performing reactive plan The simplifying number tests performed taken 3 Deadline absolute better merely observe deadline values reactive plan deadline values plan better limits account As performs reactive plan possible values deadline Otherwise better tends vastly increase performance assumption assumption distributions claims competitors number 4 The reactive plan invoked soon fault appears previous assumption requires assumption 5 The fault sets associated outcomes test disjoint given fault exactly possible outcome test test The basic data structure represent actionbased Actionbased hierarchy An example actionbased hierarchies following properties hierarchy 1 The basic structure actionbased reactive plan hierarchy known Fig 2 shown similar decision tree 2 The leaf nodes hierarchy correspond individual faults unlike classes faults wishes decision diagnose tree correspond 3 Each higherlevel node associated set faults union sets faults associated children 4 The node associated set faults 5 Each node associated utility corrective associated faults action ideally fault set action substantial exists simply substantial idea actionbased agent time action associated set faults related benefit associated action The goal ideally utility likely faults hierarchy partial diagnosis identifying actions able partial diagnosis perform The central sets faults perform derive 332 D Ash B HrryesRotzArtificial Intelligence RR I 996 317347 Faults FlF2F3F4 1 Test TI Faults Fl F2 Action A2 Faults F3F4 Action A3 Faults Fl Faults F2 Action A2 Action A4 Faults F3 Action A3 Fig 2 Sample actionbased hierarchy necessary able provide good response complete diagnosis suboptimal situation complete diagnosis possible As shown Fig 2 associated nonterminal chy test set T defined test r Or node n associated hierarchy corresponding section Suppose node hierar node n associated set outcomes test 7 otoz ok outcome oi Oi n F nonempty We fault set F Then n k children formally define actionbased hierarchy follows 1 The hierarchy consists pair R N R root node hierarchy N set nodes 2 Each node n hierarchy 4tuple L 7 F defined follows 1 L set children nodes node In case terminal node 2 r test associated node set case L happens dealing terminal node 3 action associated node computed explained 4 F set faults associated node If node n Lra F children L nln2 The property given relating node children formally stated ni child follows ok IZ having ok ok n F Q exists exactly child node ni Fn OknFn form Li ri F test r k outcomes oto2 Having defined relationship define conditions node hierarchy associated node hierarchy action set faults extension node children state action node Specifically associate gives best expected utility set faults action utility terms define In formal definition single fault D Ash 6 HayesRothArtificial Intelligence 88 1996 317347 333 UF u 9 Cm PfUf3u c fEF Pf probability fault f Next formally define property Pf best action particular node hierarchy n L 7 F node denotes UFa yiWFa In case write F Having defined specify best action node actionbased hierarchy algorithm constitutes reactive plan agent use Algorithm 1 Reactive plan Step 1 Step 2 Step 3 Step 4 Step 5 root node R hierarchy test associated current best hypothesis Set current best hypothesis Perform If test result come deadline 5 Otherwise modify best hypothesis If current best hypothesis associated node stop Otherwise Step 2 Recommend current best hypothesis corresponding outcome test occurs node terminal recommend action associated current best hypothesis reached Step child current action stop Thus reactive plan completely determined agent knows structure This property reactive plan designed Section 2 computational Given structure resources consumed structure property hierarchy It structured hierarchy meet criterion described executing minimal hierarchy reactive planner needs able following algorithm Algorithm 2 Hierarchy structuring algorithm The reactive planner Step 1 Step 2 Step 3 Step 4 Step 5 Step 6 Step 7 Step 8 hierarchy set faults DFS depthfirst hierarhcy associating expand Associate leaf node search order stop highest expected utility set faults associated Start yettobebuilt node Pick leaf node leaf nodes action node If leaf node expanded Find tests relevant If tests node Determine test Expand come test Step 6 associated Go Step 2 pick children current node heuristic possible fault sets suitably adjusted set faults associated current node current node child corresponding Step 2 pick Step 4 best according Step 2 pick Step 4 leaf node leaf 334 D Ash B HeroesRothArfcicl htelligence 88 1996 317347 The structuring described tree The algorithm heuristic determine structuring heuristics like structuring decision completely specified Step 6the test optimal There possible hierarchy 31 Hierurchy structuring heuristics heuristic structuring A hierarchy tests real numbers function context particular node hierarchy larger result desirable 331 Specifically informationtheoretic let set faults associated current node F compute following function test 7 perform node The simplest heuristic heuristic structuring decision maps trees pwf Pf 0 E 7 f E o information hierarchy Hence content gained moves expected This heuristic maximizes child node minima1 number tests root node terminal node hierarchy However tests utility nodes hierarchy Thus best action available intermediate terms evaluation expect Section criteria proposed factors account 2by betterin structuring heuristic account cost performing parent general Therefore propose actionbased hierarchy structuring heuristic follows UFo tmFo set faults FO gives definition utility set faults 7 F II CoEs Icon FflPo ILET Po It noted heuristic tests physical costs As relies heavily particular assumption structuring account temporal costs takes D Ash B HayesRothArtcial Intelligence 88 I 996 317347 335 sectionthat test allowed beginning time If costs tests taken form section relax account account tests quickly possible assumption test progress progress time physical cost In intrinsic agent advised time physical costs This gives possible heuristics structuring hierarchy 11 One hypothesize behavior agent executing heuristics One expect heuristic informationtheoretic actions higher value heuristic converge higher values deadlines overall performance likely better prove hypotheses actionbased cases experimentally test hypotheses agent shorter values faster heuristic better integrated heuristic As later formally actionbased given reactive plan derived deadline However terminal nodes Another hypothesis values deadline difficult specialized paper reasonable At point word nomenclature appropriate An actionbased hierarchy structure action heuristic Al heuristic hierarchy provide better hierarchy perfor tree There heuristics proposed actionbased heuristic informationtheoretic type decision based hierarchy certainly specifically designed mance decision The hypothesis choices high level hierarchy particularly specific diagnoses fail planner actionbased experimentally heuristic makes greedy help making heuristic general applicability trees hypothesis verified lower level hierarchy informationtheoretic actionbased actionbased hypothesize theoretically andor 32 Multiple tests time node hierarchy wait tests outcome We seek relax second assumptions planner takes physical costs tests account stated beginning section Specifically deciding perform test The idea reactive agent wish perform test advance needed avoid delay acting agent involved reaches particular perform test associated node tests associated children descendants The process known test performed earlier test promotion deadline distribution needed The hierarchy heuristic account deciding promotion greater simple structured distribution essential Then Test necessary fairly involves deciding benefit gained performing early The basic algorithm test promotion process diagnosis process later That involves promoting cost performing test promotion decide test earlier described deadline l 336 D Ash B HayesRothArtcicrl lntellipmce 88 1996 317347 Algorithm 3 Test promotion Step 1 Structure Step 2 Set current node root node hierarchy Step 3 First recursively test promotion executing Steps 24 current algorithm given hierarchy node set children current node Step 4 Then child current node turn determine perfor mance profile improve worse tests child moved current node If profile improve tests A formal description test promotion 1 1 33 Nondisjoint test outcomes The assumption date outcssumption test disjoint alternatively date outcomes partition set faults test exactly possible outcome fault In section examine happens assumption weaker assumption outcomes equally test given test multiple outcomes consistent given fault relaxed likely imposes presence fault node determine possible reactive plan set faults corresponds The primary difference likely winner presidential multiple parents hierarchy agent node parent It necessary track set tests executed executing reaching particular node hierarchy One example happen trying nomination One easy test determine candidate majority delegates The set test fails candidate faults set candidates set candidates However majority agent needs perform test node associated set tests instead single test list previously executed performed Each node number sets children set corresponding hierarchy know check knowing tests performed majority performed Furthermore set possible highest ranking set possible faults remain node againjust reached node faults Structuring created hierarchy proceed similarly The difference child node potentially reactive planner look list existing nodes determine node exists set faults If new child node created pointer created test existing child node The planner determine hierarchy performed If expansion child node necessary algorithm change expansion determine reaching node hierarchy child node consistent trajectory necessary Step 6 hierarchy structuring performed best test D Ash B HayesRofhArtcial Intelligence 88 1996 317347 337 Formally difference 6tuple defines node essentially important One node set children assumption order sets instead reduce possibility combinatorial ities lower nodes outcomes lower nodes probabilities different explosion expanding prior probabil search space This regards hierarchies Because differing numbers competing faults original prior faults given test prior probabilities hierarchy proportion faults However approach assumes structuring trees merely trees new What decision provide meaningful impossible Since heuristics tailored interim complete application It substantially term actionbased hierarchies 34 Related work The idea varying heuristic responses literature prefer different new application decision classification classification previously application different trees decision fairly extensive body literature devoted There tree structuring An informationtheoretic decision 61 Fayyad searchers Cheng et al GID3 341 Breiman introduce Irani measures information different classes This presupposes tree diagnose level individual unclear delineation GID3 GID3 differ ID3 original Quinlan approaches taken literature approach applied class separation et al CART classes approach CSEP 41 Clark Niblett content test degree separates GID3 191 Quinlan exploring different heuristics heuristic C4 91 Fayyad heuristic faults decision CN2 201 goal class individual fault It current problem actionbased heuristic turn require applying approach outcomes test branching Many informationtheoretic A novel approach structuring decision Murthy et al 321 The idea algorithm OCl determines oblique hyperplane design tests predefined given domain This interesting scope current paper trees oblique decision trees introduced optimal split set data points The equivalent problem set tests topic research 4 Formal results Ideally able prove formally represents best possible solution problem given approach presented Section 3 Section 2 If 338 0 Ash B HLlyesRothArtCial lrmlligence 88 1996 317347 immediately turns concluded need experiments paper examples Although forma1 results presented proof The result shows certain defined assumptions matter strong sense hierarchy perform structuring The second small matter value deadline heuristic actionbased result gives similar conclusion best performance hierarchy provides case actionbased section hierarchy 41 Optimal actionbased hierarchies The assumptions required claim actionbased hierarchies provide optimal performance following I All assumptions basic version problem described 2 Section 3 In addition following I The temporal costs tests equal 2 There time wastage deadline conditions hold deadline occur test result comes middle performing test immediately 3 The strong assumption utilities tests fault The utility group tests fault utility group tests sum additive performing group tests Additivity means utilities performing utility best action available group tests versus performing fault test utility improves 42 Very small hierarchies A similar claim madethat possible competitorunder mance small hierarchy actionbased hierarchies provide better perfor following conditions mandate I All assumptions basic version problem described Section 3 2 The temporal costs tests equal tests required 3 At resulting hierarchy depth complete diagnosis process 5 Abstract experiments As saw Section 4 set conditions actionbased provide section shall seek means validating separate approaches described best performance hierarchies formally prove work In fact In section sections limited Thus D Ash B HayesRothArtificial Intelligence 88 1996 317347 339 regard values inputs domly actionbased If performance tistically evidence domains hierarchy structuring algorithm assigned specific domain performance heuristic versus informationtheoretic significant margin favor actionbased heuristic informationtheoretic approach structuring hierarchies ran derived heuristic compared better sta realtime heuristic The validation method described section criticized praised criticism particular domain To answer independent grounds section explore validation approach intensive care unit patient monitoring particular domain Specifically 1 Using section wish evaluate following hypotheses actionbased hierarchy provide substantially better performance decision 2 Using decision tree evaluated described tree provide substantially Section 2 better performance speed reaching leaf node matters 51 Experimental design The problem size prior probabilities test outcomes values actions faults assigned follows Problem size The problem size allowed vary equal number faults actions number faults actions tests kept tests domain That equal number allowed vary Prior probabilities The difficulty randomly n prior probabilities ables uniformly generator sum 1 The following method assigning prior probabilities n faults PI p2 interval distributed assigned assign set p First set n 1 random vari 0 1 assigned random number XIX2I Then numbers permuted nondecreasing order Xi Xi Xi_ whereitiz i_l12 nl finally priors assigned follows PI xilP2Xi XilrtPnl Xi_j Xi_2tpn 1 Xi_ The important property distribution bility generated way distribution prior proba Tests disjoint The number tests 1 For test fault set randomly par offer bias approaches subsets size n2 This appear titioned favor approach Both actionbased tend partitioning proach The partition favor partitions roughly equal split fault set ap given y possible ways fault set way roughly equal advantage informationtheoretic assigned randomly 511 Values actions The value action In performing fault uniformly distributed experiments added hierarchy interval 0 11 informationtheoretic selects test random given node Formally actionbased heuristic structuring heuristics heuristic random set relevant defined basic addition heuristic The random heuristic tests follows performed Rt uniform o 1 0 1 1 I Elo t t il c o i1 F c F 52 Statistical alidation In order claims experiments need means tstatistic sets 100 trials tstatistic performance corresponds standard deviations heuristics computing 261 Under reasonable statistical validity results derived statistical validity The method experiments difference I 75 hierarchy 35 standard deviation assumptions indicates corresponds 53 Experiment results heuristic diagnosis performance time actionbased random heuristics problem difference DT actionbased Fig 3 shows informationtheoretic This shows approaches matter value deadline able maximum values This corresponds equally advantage 8 deadline sponds ABH size 64 faults resources avail nil time zero nil large deadline perform nodes Section 52 corre signifi The advantage 5 standard deviations taken root certain hierarchies deadline values 3 4 values 3 4 noted hierarchies statistically leaf nodes advantage fact varies intermediate speaking appears roughly time D Ash B HayesRothIArtijicial Intelligence 88 1996 317347 331 065 value Best Action To Date o6 075 07 055 L 06 ABH T ____ Random 2 4 Deadline 6 6 10 Fig 3 Hierarchy performance different deadlines heuristics 6 Domain results The experiments described good preliminary realized taking deadline distributions Section 5 successful validation random heuristics informationtheoretic approach provided opposed benefits account As extremely provably optimal However section apply realized significantly extended scope limited required strict assumptions date approach completely realworld problem approach problem The section tensive care unit patient monitoringand problem presented These results suggestive validated significant performance results statistically single generated hierarchy statistically approach domain applicationsurgical applying far went They actionbased increased analysis test promotion theoretical order abstractin similar results 6 I Intensive care unit patient monitoring The domain intensive care unit ICU A patient placed ventilator problems ideas applied monitoring ICU typically multiple organ failure assist breathing Because attractive domain patient arise require fast response 342 D Ash B HccyesRothArtiJciul Intelligence RX 1996 317347 need provide response available differing different sizes specificity different responses undertaken given differential diagnoses life support immediate The areas requiring immediate response broadly categorized algorithm treatment underlying oligemic hypoxia problems generally settings treatment underlying groups require transfusion type oligemic advanced invocation ALCS time anemic hypoxia problems generally hypoxia problems require cardiac available ventilator actions order diagnose therapy definitive particular value action medical domain expert provided heuristic estimate numerical value action fault scale 00 1 O wide range problems represent structuring cause problem Corrective time domain types buy medical practitioner definitive requires particular number tweaking effective necessarily real underlying problem fault Because algorithm requiring cause The tests available domain tended fit large categorieslab require average 2030 minutes checking parametersthese domain limitation particular domain require minimum actionbased come backand completed computational hierarchy approach tests involving monitoring minute The actual analyzed complexity actions tests artifact Many inputs structuring algorithm depend type patient purposes illustration ICU For given domain expert based typical patient Palo Alto Veterans Administration artery bypass graft CABG 67 year old male undergone demonstration values hospitala coronary surgery algorithms VM KARDIO solved typical vehicles 181 similar impossible half problem KARDIO Another In particular 3 precompiles ECG descriptions Various medical domains applying AI ideas based reasoning uses classify arrhythmias run time This represents solutions impossible years For example modelbased paper precompile solution tradeoffs run time cases complete diagnosis This appears present work realtime medical AI handled different manner reasoning deadlines Therefore actionbased handle Specific real time concerned complexity incomplete data notion meeting deadline problem intensive care unit patient monitoring stale time lo able body literature Factor colleagues process consists graph decision processes execute provide parallelism little knowledge major advantage fairly wide 171 developed architecture known problem ICU patient monitoring The process trellis domain experts parallel processing fact processes modeled knowledge parallelism Although Another medical TraumAID data values acquisition ability necessary trellis applied approach ability unable parallel missing hierarchies tradeoffs D Ash B HayesRothArtcial Intelligence 88 1996 317347 343 directly correspond physiologically deadlines Response deadline deadlines necessarily An ICU patient monitoring domain requires component restricts usefulness knows specifically responding specific organ systems strongly decisiontheoretic component 38391 The effectively VentPlan preferences actionbased interesting results better complete It appears plausible incomplete information information trades complexity accuracy This different idea select decisiontheoretic model physician tradeoff hierarchies trade time specificity Still better yields hierarchies perform better cases available conversely VentPlan perform approaches actionbased compare available time short EINTHOVEN 441 ICU monitoring tation ECGs As attacks different subproblem ICU problem discussed SIMON 43 work King colleagues paper Other ICU monitoring systems Vanderbilt 45 devoted chiefly interpre 42 include WEANPRO 62 Results domain The hierarchy theoretic heuristics computationally measure statistically hierarchy complete domain actionbased approximation hierarchy possible structuring algorithm run actionbased information medical problem outlined generate complete hierarchy Section 61 As noted set 58 faults hierarchy results generated tractable expected performance significant Further information computationally analysis tractable possible mean sense solving simplified informationtheoretic real problem complete 11 Of course generation complete fact uncertainty version actual problem heuristics However given simplified analysis value particular The basic assumption moving actual problem algorithm simplified fixed come lab known inputs hierarchy structuring advance For example given test assumed problem known fixed time inputs actual domain time uncertain certain approximate mean Similar comments algorithm hierarchy structuring goal research It remembered compare different possible approaches general problem reacting faced limited resources basic associative knowledge domain Other approaches modelbased principles domain knowledge better belief networks better perform better certain cases especially uncertainty agent greater resources necessary comparison topic research definitely interesting It goal present diagnosis research domain knowledge complete reasoning handling handling Fig 4 shows results performance best action plotted deadlines For short values deadline medical hierarchy value 344 D Ash B HayesRothArtijicial lnfelligence 88 1996 317347 09 06 Value a5 Best Action To Dat 84 03 02 01 0 0 50 100 150 Deadha 200 Mmtes 250 300 350 Fig 4 Hierarchy performance medical problem costs factored ABH DT hierarchies outperformed actionbased larger values deadline noted results noted earlier statistically deadline response better larger values deadline short actionbased expected informationtheoretic informationtheoretic significant hierarchies For hierarchies better These best approach hierarchies provided suggest informationtheoretic 7 Directions future research The work provides important contribution field ways It represents existing diagnosis work work addresses diagnosis 351 161 specific notion meeting realtime deadline approach come response single systems assume deliberation systems having issues improvement point view realtime constraints addresses complexity 111 With regard existing reactive planning takes limitations cycle 28 Existing deciding 371 time As discussed approaches decision interesting realtime problem action approach requires entropythis advantages limitations anytime deliberation interesting approach offer Existing place planning selection tree construction realtime question try better examine attribute address issue fully explored run time 141 interleaved D Ash B HayesRothArtificial Intelligence 88 1996 317347 345 The question arises limitations reasonable seek identify number promising intended description work push limitations This section ideas extension work complete approach means section believe 71 Reasoning uncertainty Perhaps capability need added ability sense handle fault However probability zero proportion beginning important approach reason uncertainty Right limited ability consistent fault existed faults reasoning process progresses The probability execution reactive plan handle arbitrary changes general ability tests outcomes possible faults 72 Deliberation real time The assumption real time advance process pile solutions structuring scarce researchers 31 Widman But reasonable addressed research underlying research reactive problems desirable precom possible sufficiently resources sufficiently complex computational wasted hierarchy assumptionimplicit 441 decision tree structuring algorithm structuring Certainly work Bratko et al assumption assumption This 73 Decay values actions The value action particular fault assumed deadline zero This clearly 381 proposed function time A useful Rutledges ideas work similar models decay value actions topic research incorporate valid general constant hard Indeed Rutledge 8 Conclusions This paper illustrated strengths limitations actionbased actionbased turing approach The greatest strength approach approach problem previously described problem described primary drawback real time making technology simultaneously literature address applied planningrealtime structuring problemdecision tradeoff essential problem addressed research capable providing approach The response treesproves struc competing effective solving approach Many technologies possible literature 346 D Ash B HayesRothArtcial Intelligence 88 19961 317347 effective approach capable number refinements paper described represents In problem domains reasoning uncertainty best known manner providing approach reasoning uncertainty proach combined known cases necessary combination represent improvement state art cases necessary realtime refined response This ap techniques Acknowledgements This research supported ARPA NASA grant NAG258 1 ARPA order 8607 Teknowledge contract 7 17 15 ARPA contract DAAA2192C0028 References 1 I 1 D Ash Diagnosis actionbased hierarchies optimal realtime performance PhD dissertation 121 131 141 151 161 17 18 I9 110 realtime Intelligence resources eds Machine cardiological knowledge 11 Oxford University Press J Friedman R Olshen C Stone Ckssijication Regression Trees Wadsworth response limited synthesis compression Computer Science Department Stanford University Stanford CA 1994 D Ash G Gold A Seiver B HayesRoth Guaranteeing Infell Med 5 1992 4966 I Arf I Bratko 1 MozetiE N LavraE Automatic JE Hayes D Michie J Richards Oxford 1987 435454 L Breiman Brooks Monterey CA 1984 R Brooks A robust 1423 J Cheng U Fayyad K lrani Z Qian Proceedings Fifth InrernntionrrI Conference Machine Learning Ann Arbor Ml 1988 100108 L Chrisman R Simmons Sensible planning Anaheim CA 1991 756761 W Clancey Heuristic classification Artif P Clark T Niblett The CN2 induction algorithm Mach Learn 3 1989 261284 I Clarke M Niv B Webber K Fisherkeller D Southerland managing mobile robot IEEE J Robot Automat focusing perceptual attention lnfell 27 1985 289350 layered control levels resources Improved decision trauma R Ryack TraumAID decision aid Proceedings Thirteenth Annual Sympnsium trees generalized version lD3 Proceedings AAAI91 March 1986 Computer Applications I I I I G Cooper The computational Medical Cure Washington DC 1989 complexity probabilistic inference Bayesian belief networks Art Intell 42 1990 353405 I I2 1 V Dabija Deciding plan react PhD dissertation Computer Science Department Stanford University Stanford CA 1994 13 I R Davis W Hamscher Modelbased reasoning troubleshooting National Conference Artijicial H Shrobe ed Explorinq 1988 Intelligence Artificial 297346 Intelligence Survey Talks I41 T Dean M Boddy An analysis timedependent planning Proceedings AAAIRR St Paul MN 1988 4954 IS I T Dean L Kaelbhng J Kirman A Nicholson Planning deadlines stochastic domains Proceedings AAAI93 Washington DC 1993 S74579 I 161 J Kleer B Williams Diagnosing multiple I 17 I M Factor The process trellis software architecture Yale University New Haven CT 1990 faults Artif Intell 32 1987 97130 parallel realtime monitors PhD dissertation D Ash B HayesRothAriial Intelligence 88 1996 317347 347 I I8 I L Fagan VM representing timedependent relations medical setting PhD dissertation Computer Science Department Stanford University Stanford CA 1980 191 U Fayyad On induction decision trees multiple concept learning PhD dissertation EECS Department University Michigan Ann Arbor MI 199 1 201 U Fayyad K lrani The attribute selection problem decision tree generation Proceedings AAAI92 San Jose CA 1992 104I 10 211 R Fikes P Hart andized 22 K Forbus Qualitative process 23 1 M Ginsburg Universal planning 24 1 J Hendler A Agrawala Mission critical planning AI MARUTI robot plans Artif Intell 3 1972 251288 theory Artif Infell 24 1984 85168 universally bad idea Al Mag 4 1989 4044 realtime operating ed Proceedings Workshop Innovative Approaches Planning Scheduling K Sycara Control 1990 7784 125 I M Henrion Searchbased methods bound diagnostic probabilities large belief nets Proceedings Seventh International Conference Uncertainty AI Los Angeles CA 1991 142150 126 I P Hoel introduction Mathematical Statistics Wiley New York 1947 27 1 E Horvitz Reasoning beliefs actions computational Third Workshop Uncertainty Al Seattle WA 1987 resource constraints Proceedings 28 1 L Kaelbling An architecture intelligent reactive systems M Geotgeff A Lansky eds Reasoning Actions Plans 1987 395410 specifications 29 I L Kaelbling Goals parallel program 1301 L Kaelbling Specifying complex behavior Approaches Planning Scheduling Control 1990 433438 simulation Artif Intell 29 1986 289338 agents 3 I 1 B Kuipers Qualitative I32 I S Murthy S Kasif S Sberg Proceedings AAAI88 St Paul MN 1988 Proceedings Workshop Innovative R Beigel A randomized induction oblique decision trees Proceedings AAAI93 Washington DC 1993 322327 inference 1331 R Quinlan RS Michalski TM Mitchell J Carbonell eds Machine Learning Tioga Palo Alto CA 1983 trees Y Kodratoff R Michalski eds Machine Learning An highperformance construction 341 R Quinlan Probabilistic tool programs Inductive decision Artificial Intelligence Approach 3 Morgan Kaufmann San Mateo CA 1990 35 I R Reiter A theory diagnosis 361 S Rosenschien principles Art Intell 32 1987 5795 environment automata informationtracking Proceedings First International Conference Principles Knowledge Representation Reasoning Toronto Ont 1989 Synthesizing descriptions I37 I S Russell E Wefald Principles metareasoning Artif Intell 49 1991 361395 381 G Rutledge Dynamic selection models time constraints Proceedings Second Annual Conference AI Simulation Planning High Autonomy Systems Cocoa Beach 199 1 6067 39 1 G Rutledge G Thomsen B Fart M Tovar J Polaschek I Beinlich L Sheiner L Fagan The design implementation ventilatormanagement 1401 M Schoppers Universal plans reactive robots 87 Milan 1987 advisor Arttf Intell Med 1993 environments unpredictable Proceedings IJCAI 1411 E Shortliffe MYCIN ComputerBased Consultations Medical Therapeutics Elsevier New York 1976 42 I D Tong Weaning patients mechanical ventilation knowledgebased approach Compuf Meth Programs Biomed 35 1991 267278 1431 S Uckun B Dawant D Lindstrom Modelbased reasoning intensivecare monitoring YAQ approach Arttf Infell Med 1993 approach 1441 L Widman A modelbased l19 1991 diagnosis cardiac arrhythmias Artif Intell Med 4 45 I J Xu S Hyman l King Knowledgebased flash evoked potential recognition Artif Intell Med 4 1992 93109