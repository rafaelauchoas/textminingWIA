Artiﬁcial Intelligence 171 2007 73106 wwwelseviercomlocateartint ANDOR search spaces graphical models Rina Dechter Robert Mateescu Donald Bren School Information Computer Science University California Irvine CA 926973425 USA Received 10 October 2005 received revised form 8 November 2006 accepted 9 November 2006 Available online 17 January 2007 Abstract The paper introduces ANDOR search space perspective graphical models include probabilistic networks directed undirected constraint networks In contrast traditional OR search space view ANDOR search tree displays independencies present graphical model explicitly reduce search space exponentially Indeed algorithmic advances searchbased constraint processing probabilistic inference viewed searching ANDOR search tree graph Familiar parameters depth spanning tree treewidth pathwidth shown play key role characterizing effect ANDOR search graphs vs traditional OR search graphs We compare memory intensive ANDOR graph search inference methods place existing algorithms ANDOR search space 2006 Elsevier BV All rights reserved Keywords Search ANDOR search Decomposition Graphical models Bayesian networks Constraint networks 1 Introduction Bayesian networks constraint networks Markov random ﬁelds inﬂuence diagrams commonly referred graphical models languages knowledge representation use graphs capture conditional independen cies variables These independencies allow concise representation knowledge use efﬁcient graphbased algorithms query processing Algorithms processing graphical models fall gen eral types inferencebased searchbased Inferencebased algorithms Variable Elimination Tree Clustering better exploiting independencies captured underlying graphical model They provide superior worst case time guarantee time exponential treewidth graph Unfortunately method time exponential treewidth space exponential treewidth separator width practical models large treewidth Searchbased algorithms depthﬁrst branchandbound bestﬁrst search traverse models search space path represents partial solution The linear structure search spaces retain inde pendencies represented underlying graphical models searchbased algorithms nearly effective inferencebased algorithms information On hand space requirements searchbased algorithms severe inferencebased algorithms accommo Corresponding author Email addresses dechtericsuciedu R Dechter mateescuicsuciedu R Mateescu 00043702 matter 2006 Elsevier BV All rights reserved doi101016jartint200611003 74 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 date wide spectrum spacebounded algorithms linear space treewidth bounded space In addition search methods require implicit generative speciﬁcation functional relationship given procedural functional form inference schemes rely explicit tabular representation discrete variables For reasons searchbased algorithms choice available models large treewidth implicit representation In paper propose use wellknown idea ANDOR search space originally developed heuristic search 1 generate search procedures advantage information encoded graphical model We demonstrate independencies captured graphical model yield ANDOR search trees exponentially smaller standard search tree thought OR tree Speciﬁcally size ANDOR search tree bounded exponentially depth spanning pseudo tree graphical model Subsequently ANDOR search trees ANDOR search graphs Algorithms explore search graph involve controlled memory management allows improving timeperformance increasing use memory The transition search tree search graph ANDOR representations yields signiﬁcant savings compared transition original OR space In particular size minimal ANDOR graph bounded exponentially treewidth OR graphs bounded exponentially pathwidth Our idea ANDOR search space inspired search advances introduced sporadically past decades constraint satisfaction recently probabilistic inference optimization tasks Specif ically resembles pseudo tree rearrangement 23 brieﬂy introduced decades ago adapted sub sequently distributed constraint satisfaction 45 recently 6 shown related graphbased backjumping 7 This work extended 8 recently applied optimization tasks 9 An version viewed exploring ANDOR graphs presented recently constraint satisfaction 10 optimization 11 Similar principles introduced recently probabilistic inference algorithm Recursive Conditioning 12 Value Elimination 1314 currently provide backbones advanced SAT solvers 15 An important contribution paper showing seemingly different ideas cast simple traversal ANDOR search spaces We elaborate relationship scheme Variable Elimination 16 We discuss relationship Ordered Binary Decision Diagrams OBDD 17 disjunctive Decomposable Negational Normal Forms dDNNF extension arithmetic cir cuits Bayesian networks 1819 recent work 2023 The structure paper follows Section 2 contains preliminary notations deﬁnitions Section 3 scribes graphical models Section 4 introduces ANDOR search tree traversed linear space search algorithm Section 5 presents ANDOR search graph traversed memory intensive search algorithms Section 6 shows use ANDOR graphs solve reasoning problem gives ANDOR search algo rithm counting belief updating Section 7 dedicated detailed comparison ANDOR search new algorithmic advances graphical models compilation schemes Finally Section 8 provides concluding remarks All proofs given appendix end 2 Preliminaries Notations A reasoning problem deﬁned terms set variables taking values ﬁnite domains set functions deﬁned variables We denote variables subsets variables uppercase letters X Y Z S R values variables lower case letters x y z s An assignment X1 x1 Xn xn abbreviated x cid3X1 x1cid4 cid3Xn xncid4 x x1 xn For subset variables Y DY denotes Cartesian product domains variables Y xY xY projection x x1 xn subset Y We denote Y y y short assignment values variables Y respective domains We denote functions letters f g h scope set arguments function f scopef Deﬁnition 1 functional operators Given function h deﬁned subset variables S X S func X h deﬁned U S X follows For U u denoting tions minX h maxX h u x extension tuple u assignment X x minX hu minx hu x maxX hu maxx hu x cid2 cid2 x hu x Given set functions h1 hk deﬁned subsets S1 Sk product func X hu cid2 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 75 cid2 tion Πj hj summation function j hj u j hj uSj cid2 cid2 j hj deﬁned U cid3 j Sj For U u Πj hj u Πj hj uSj Deﬁnition 2 graph concepts A directed graph pair G V E V X1 Xn set vertices E Xi Xj Xi Xj V set edges arcs If Xi Xj E Xi points Xj The degree variable number arcs incident For variable Xi paXi pai set variables pointing Xi G set child vertices Xi denoted chXi comprises variables Xi points The family Xi Fi includes Xi parent variables A directed graph acyclic directed cycles An undirected graph deﬁned similarly directed graph directionality associated edges Deﬁnition 3 induced width An ordered graph pair G d G undirected graph d X1 Xn ordering nodes The width node number nodes neighbors precede ordering The width ordering d maximum width nodes The induced width ordered graph wd width induced ordered graph obtained follows nodes processed ﬁrst node X processed preceding neighbors connected The induced width graph denoted w minimal induced width orderings Deﬁnition 4 hypergraph A hypergraph pair H X S S S1 St set subsets V called hyperedges Deﬁnition 5 tree decomposition A tree decomposition hypergraph H X S tree T V E V set nodes called clusters E set edges labeling function χ associates vertex v V set χv X satisfying 1 For Si S exists vertex v V Si χv 2 running intersection property For Xi X set v V Xi χv induces connected subtree T Deﬁnition 6 treewidth pathwidth The width tree decomposition hypergraph size largest cluster minus 1 maxv χv 1 The treewidth hypergraph minimum width possible tree decomposi tions The pathwidth treewidth restricted class chain decompositions It easy given induced graph set maximal cliques called clusters provide tree decom position graph clusters connected tree structure satisﬁes running intersection property It known induced width graph identical treewidth 24 For relationships graph parameters 2527 21 ANDOR search graphs ANDOR search spaces An ANDOR state space representation problem deﬁned 4tuple cid3S O Sg s0cid4 S set states OR AND states OR states represent alternative ways solving problem AND states represent problem decomposition subproblems need solved O set operators An OR operator transforms OR state state AND operator transforms AND state set states There set goal states Sg S start node s0 S Example problem domains modeled ANDOR graphs twoplayer games parsing sentences Tower Hanoi 1 The ANDOR state space model induces explicit ANDOR search graph Each state node child nodes obtained applicable AND OR operators The search graph includes start node The terminal nodes having child nodes marked Solved S Unsolved U A solution subtree ANDOR search graph G subtree 1 contains start node s0 2 n subtree OR node contains child nodes G n AND node contains children G 3 terminal nodes Solved S ANDOR graphs cost associated arc cost solution subtree function sumcost arcs included solution subtree In case 76 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 seek solution subtree optimal maximum minimum cost Other tasks enumerate solution subtrees counting solutions deﬁned 3 Graphical models Graphical models include constraint networks deﬁned relations allowed tuples directed undirected prob abilistic networks deﬁned conditional probability tables subsets variables cost networks deﬁned cost functions inﬂuence diagrams include probabilistic functions cost functions utilities 28 Each graphical model comes typical queries ﬁnding solution optimal constraint networks ﬁnding probable assignment updating posterior probabilities given evidence posed probabilistic networks ﬁnding optimal solutions cost networks The task inﬂuence diagrams choose sequence actions maximizes expected utility Markov random ﬁelds undirected counterparts probabilistic networks They deﬁned collection probabilistic functions called potentials arbitrary sub sets variables The framework presented paper applicable graphical models discrete variables draw examples constraint networks directed probabilistic networks In general graphical model deﬁned collection functions F set variables X conveying probabilistic deterministic preferential information structure captured graph Deﬁnition 7 graphical models A graphical model R 4tuple R cid3X D F cid4 1 X X1 Xn set variables 2 D D1 Dn set respective ﬁnite domains values 3 F f1 fr set realvalued functions deﬁned subset variables Si X called scope denoted scopefi cid2 cid4 cid5 fi fi fi cid2i fi combination operator1 4 The graphical model represents combination functions cid4 r i1 fi Next introduce notion universal graphical model deﬁned single function Deﬁnition 8 universal equivalent graphical model Given graphical model R cid3X D F cid4 universal equiv alent graphical model R uR cid3X D F cid4 r i1 fi cid4 Two graphical models equivalent universal model Deﬁnition 9 cost partial assignment Given graphical model R cost assignment x x1 xn deﬁned cx f F f xscopef Given subset variables Y X cost partial assignment y combination functions scopes included Y FY evaluated assigned values Namely cy f yscopef cid4 cid4 f FY We restrict graphical model conditioning partial assignment Deﬁnition 10 conditioned graphical model Given graphical model R cid3X D F cid4 given partial assign ment Y y Y X conditioned graphical model Ry cid3X Dy F y cid4 Dy Di D Xi Y F y f Y y f F scopef cid9 Y Consistency For graphical models functions range special value 0 absorbing relative combination operator multiplication Combining 0 yields 0 The 0 value expresses notion inconsistent assignments It primary concept constraint networks deﬁned relative graphical models 0 element 1 The combination operator deﬁned axiomatically 29 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 77 Deﬁnition 11 consistent partial assignment solution Given graphical model having 0 element partial assignment consistent cost nonzero A solution consistent assignment variables Flat functions Each function graphical model having 0 element expresses implicitly constraint The ﬂat constraint function fi constraint Ri scope includes consistent tuples In paper talk constraint network refer ﬂat constraint network extracted general graphical model When assignments consistent graphical model strictly positive Unless noted assume functions expressed tabular explicit form having entry combination values domains variables Therefore speciﬁcation functions exponential scope size base exponent maximum domain size Relations clauses expressed functions associating value 0 1 tuple depending tuple relation satisﬁes clause The combination operator takes set functions generates new function scope union input functions scopes Deﬁnition 12 primal graph The primal graph graphical model undirected graph variables vertices edge connects variables appear scope function Reasoning problems queries There queriestasks posed graphical models We refer reasoning problems In general reasoning problem function graphical model set elements commonly real numbers We need functional operator marginalization express common queries Deﬁnition 13 reasoning problem A reasoning problem graphical model deﬁned marginalization operator set subsets It triplet P cid3R Y Z1 Zt cid4 R cid3X D F cid4 graphical model Z Z1 Zt set subsets variables X If S scope function f Y X Y f max SY f marginalization operator P viewed vector function scopes Z1 Zt The reasoning problem compute PZ1Zt R SY f min cid5 Y f SY f cid2 PZ1Zt R Z1 cid6 rcid7 i1 fi Zt rcid7 i1 cid8 fi We focus primarily reasoning problems deﬁned Z The marginalization operator called elimination operator removes arguments input functions scope Speciﬁcally Y f deﬁned Y It removes variables S Y f s scope S Note relational projection operator unlike rest marginalization operators convention deﬁned set variables eliminated cid5 We elaborate popular graphical models constraint networks belief networks primary focus paper 31 Constraint networks Constraint networks framework formulating real world problems scheduling design planning diagnosis set constraints variables For example approach formulating scheduling problem constraint satisfaction problem CSP create variable resource time slice Values variables tasks need scheduled Assigning task particular variable corresponding resource time slice means resource starts executing given task speciﬁed time Various physical constraints given job takes certain time execute task executed modeled constraints variables The constraint satisfaction task ﬁnd assignment values variables violate constraints conclude problem inconsistent Other tasks ﬁnding solutions counting solutions 78 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Deﬁnition 14 constraint network A constraint network CN deﬁned 4tuple cid3X D C cid2cid4 X set variables X X1 Xn associated set discretevalued domains D D1 Dn set constraints C C1 Cr Each constraint Ci pair Si Ri Ri relation Ri DSi deﬁned subset variables Si X The relation denotes compatible tuples DSi allowed constraint The combination operator cid2 join The primal graph constraint network called constraint graph A solution assignment values variables x x1 xn xi Di Ci C xSi Ri The constraint network represents set solutions cid2i Ci Constraint satisfaction reasoning problem P cid3R Π Z cid4 R cid3X D C cid2cid4 constraint net work marginalization operator projection operator Π Namely constraint satisfaction Z cid2 Y ΠY So task ﬁnd fi corresponds enumerating solutions When combination operator product costbased representation relations marginalization op erator logical summation 1 constraint problem solution 0 For counting marginalization operator summation Z fi ΠX cid4 An immediate extension constraint networks cost networks set functions realvalued cost functions primary task optimization cid4 Deﬁnition 15 cost network combinatorial optimization A cost network deﬁned 4tuple cid3X D C X set variables X X1 Xn associated set discretevalued domains D D1 Dn set cost functions C C1 Cr Each Ci realvalued function deﬁned subset variables Si X The combination operator The reasoning problem ﬁnd minimum maximum cost solution expressed marginalization operator maximization minimization Z cid2 cid2 A task MAXCSP ﬁnding solution satisﬁes maximum number constraints problem inconsistent deﬁned treating relation cost function assigns 0 consistent tuples 1 Then combination operator summation marginalization operator minimization Namely task ﬁnd cid4 cid2 fi minX fi 32 Propositional satisﬁability A special case CSP propositional satisﬁability problem SAT A formula ϕ conjunctive normal form CNF conjunction clauses α1 αt clause disjunction literals propositions negations For example α P Q R clause P Q R propositions P Q R literals The SAT problem requires deciding given CNF theory model truthassignment propositions violate clause Propositional satisﬁability SAT deﬁned CSP propositions correspond variables domains 0 1 constraints represented clauses example clause A B relation function propositional variables allows tuples A B A 1 B 0 33 Belief networks Belief networks 30 provide formalism reasoning partial beliefs conditions uncertainty They deﬁned directed acyclic graph vertices representing random variables temperature device gender patient feature object occurrence event The arcs signify existence direct causal inﬂuences linked variables quantiﬁed conditional probabilities attached cluster parentschild vertices network Deﬁnition 16 belief networks A belief network BN graphical model P cid3X D PG cid4 X X1 Xn set variables multivalued domains D D1 Dn Given directed acyclic graph G X nodes PG Pi Pi P XipaXi conditional probability tables CPTs short sociated Xi paXi parents Xi acyclic graph G A belief network represents cid5 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 79 probability distribution X P x1 xn variables cid5 n i1 P xixpaXi An evidence set e instantiated subset When formulated graphical model functions F denote conditional probability tables scopes functions determined directed acyclic graph G function fi ranges variable Xi parents G The combination operator j The primal graph belief network called moral graph It connects variables appearing CPT cid4 cid5 j Deﬁnition 17 belief updating Given belief network evidence e belief updating task compute posterior marginal probability variable Xi conditioned evidence Namely BelXi xi α cid9 ncid10 P xk expak x1xi1xi1xnEeXi xi k1 α normalization constant In case marginalization operator Y Xi Xi k Pk The query ﬁnding probability evidence deﬁned Z XY Zi Xi Namely k fk cid4 cid2 cid5 XXi Xi xi cid2 Deﬁnition 18 probable explanation The probable explanation MPE task ﬁnd complete assign ment agrees evidence highest probability assignments Namely ﬁnd assignment xo 1 xo n ncid10 P xo 1 xo n max x1xn P xk expak k1 As reasoning problem MPE task ﬁnd max Z cid4 fi maxX cid5 Pi Namely marginalization operator Markov networks graphical models similar belief networks The difference set prob abilistic functions Pi called potentials deﬁned subset variables An important reasoning task Markov networks ﬁnd partition function deﬁned marginalization operator summation Z 4 ANDOR search trees graphical models We present ANDOR search space general graphical model starting example constraint network Example 19 Consider simple tree graphical model primal graph tree Fig 1a domains 1 2 3 represents graphcoloring problem Namely node assigned value adjacent nodes different values Once variable X assigned value 1 search space roots decomposed independent subproblems rooted Y rooted Z need solved independently Indeed given X 1 search subspaces interact The decomposition associated assignments X cid3X 2cid4 cid3X 3cid4 Applying decomposition tree Fig 1a yields ANDOR search tree Fig 1c In ANDOR space assignment variables path subtree For comparison traditional OR search tree depicted Fig 1b Clearly size ANDOR search space smaller regular OR space The OR search space 3 27 nodes ANDOR 3 25 compare 1b 1c If k domain size balanced binary tree n nodes OR search tree size Okn The ANDOR search tree pseudo tree depth Olog2 n size O2klog2 n On klog2 n On1log2 k When k 2 On2 The ANDOR space restricted tree graphical models It guided backbone tree spans original primal graph graphical model particular way We deﬁne ANDOR search space relative depthﬁrst search tree DFS tree primal graph ﬁrst generalize broader class backbone spanning trees subsequently For completeness sake deﬁne DFS spanning tree 80 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Fig 1 OR vs ANDOR search trees note connector AND arcs Deﬁnition 20 DFS spanning tree Given DFS traversal ordering undirected graph G V E d X1 Xn DFS spanning tree T G deﬁned tree rooted ﬁrst node X1 includes traversed arcs G Namely T V Ecid14 Ecid14 Xi Xj Xj traversed Xi We ready deﬁne notion ANDOR search tree graphical model Deﬁnition 21 ANDOR search tree Given graphical model R cid3X D F cid4 primal graph G backbone DFS tree T G associated ANDOR search tree denoted ST R alternating levels AND OR nodes The OR nodes labeled Xi correspond variables The AND nodes labeled cid3Xi xicid4 simply xi correspond value assignments domains variables The structure ANDOR search tree based underlying backbone tree T The root ANDOR search tree OR node labeled root T A path root search tree ST R node n denoted πn If n labeled Xi xi path denoted πnXi πnxi respectively The assignment sequence path πn denoted asgnπn set value assignments associated sequence AND nodes πn cid12 cid11 πnXi cid11 cid12 πnxi cid13 cid14 cid3X1 x1cid4 cid3X2 x2cid4 cid3Xi1 xi1cid4 cid14 cid13 cid3X1 x1cid4 cid3X2 x2cid4 cid3Xi xicid4 asgn asgn The set variables associated OR nodes path πn denoted varπn varπnXi X1 Xi1 varπnxi X1 Xi The exact parentchild relationships nodes search space deﬁned follows 1 An OR node n labeled Xi child AND node m labeled cid3Xi xicid4 iff cid3Xi xicid4 consistent assignment asgnπn Consistency deﬁned relative ﬂat constraints 2 An AND node m labeled cid3Xi xicid4 child OR node r labeled Y iff Y child X backbone tree T Each OR arc emanating OR AND node associated weight deﬁned shortly Deﬁnition 26 Clearly node n labeled Xi OR node xi AND node varπn set variables mentioned path root Xi backbone tree denoted pathT Xi2 2 When ANDOR tree extended dynamic variable orderings set variables different paths vary R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 81 A solution subtree deﬁned usual way Deﬁnition 22 solution subtree A solution subtree ANDOR search tree contains root node For OR nodes contains child nodes AND nodes contains child nodes leaf nodes consistent Example 23 In example Fig 1a T DFS tree tree rooted X accordingly root OR node ANDOR tree 1c X Its child nodes labeled cid3X 1cid4 cid3X 2cid4 cid3X 3cid4 values noted ﬁgure AND nodes From AND nodes emanate OR nodes Y Z child nodes X DFS tree 1a The descendants Y path root cid3X 1cid4 cid3Y 2cid4 cid3Y 3cid4 cid3Y 1cid4 inconsistent cid3X 1cid4 In level node cid3Y ycid4 emanate OR nodes labeled T R cid3Z zcid4 emanate nodes labeled L M dictated DFS tree In 1c solution tree highlighted 41 Weights ORAND arcs The arcs ANDOR trees associated weights w deﬁned based graphical models functions combination operator The simplest case constraint networks Deﬁnition 24 arc weight constraint networks Given ANDOR tree ST R constraint network R terminal node assumed single dummy outgoing arc The outgoing arc terminal AND node weight 1 consistent solved An outgoing arc terminal OR node weight 0 consistent value assignment The weight internal OR AND arc 1 The arcs AND OR nodes weight We deﬁne arc weights graphical model notion buckets functions Deﬁnition 25 buckets relative backbone tree Given graphical model R cid3X D F cid4 backbone tree T bucket Xi relative T denoted BT Xi set functions scopes contain Xi included pathT Xi set variables root Xi T Namely BT Xi cid13 cid14 f F Xi scopef scopef pathT Xi Deﬁnition 26 ORtoAND weights Given ANDOR tree ST R graphical model R weight wnmXi xi arc n m Xi labels n xi labels m combination functions BT Xi cid4 assigned values πm Formally wnmXi xi f BT Xi f asgnπmscopef Deﬁnition 27 weight solution subtree Given weighted ANDOR tree ST R graphical model R given solution subtree t having ORtoAND set arcs arcst weight t deﬁned wt earcst cid4 Example 28 Fig 2 shows belief network DFS tree drives weighted ANDOR search tree portion ANDOR search tree appropriate weights arcs expressed symbolically In case bucket E contains function P EA B bucket C contains functions P CA P DB C Note P DB C belongs bucket B bucket D contained bucket C variable scope instantiated path root tree We weights arcs OR node E AND value assignments include instantiated function P EA B weights arcs connecting C AND child nodes products functions bucket instantiated appropriately Fig 3 shows constraint network relations backbone DFS tree portion ANDOR search tree weights arcs Note complex weights reduce 0 1 case However use convention arcs appear search tree represent consistent extension partial solution arcs having zero weights 82 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Fig 2 Arc weights probabilistic networks 42 Properties ANDOR search tree Fig 3 Arc weights constraint networks Any DFS tree T graph G property arcs G T backarcs Namely connect node ancestors backbone tree This ensures scope function F fully assigned path T property essential validity ANDOR search tree Theorem 29 correctness Given graphical model R having primal graph G DFS spanning tree T G weighted ANDOR search tree ST R sound complete 1 onetoone correspondence solution subtrees ST R solutions R 2 weight solution tree equals cost solution denotes t solution tree ST R denotes solution x x1 xn cx wt The virtue ANDOR search tree representation size far smaller traditional OR search tree The size ANDOR search tree depends depth backbone DFS tree T Therefore DFS trees smaller depth preferred drive ANDOR search tree An ANDOR search tree OR search tree DFS tree chain Theorem 30 size bounds ANDOR search tree Given graphical model R domains size bounded k DFS spanning tree T having depth m l leaves size ANDOR search tree ST R Ol Onkm Obkm b bounds branching degree T n number variables In contrast size OR search tree ordering Okn The bounds tight realizable fully consistent graphical models Namely assignments consistent Table 1 demonstrates size saving ANDOR vs OR search spaces 5 random networks having 20 bivalued variables 18 CPTs 2 parents child 2 root nodes assignments consistent remember case probability distribution strictly positive The size OR space binary tree R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 83 Table 1 OR vs ANDOR search size 20 nodes Treewidth Height 5 4 5 5 6 10 9 10 10 9 OR space Time sec 3154 3135 3124 3125 3124 Nodes 2097151 2097151 2097151 2097151 2097151 ANDOR space Time sec AND nodes OR nodes 003 001 003 002 002 10494 5102 8926 7806 6318 5247 2551 4463 3903 3159 Fig 4 A graph b DFS tree T1 c pseudo tree T2 d chain pseudo tree T3 depth 20 The size ANDOR space varies based backbone DFS tree We better analytic bound search space size spelling depth mi leaf node Li T cid2 Proposition 31 Given graphical model R domains size bounded k backbone spanning tree T having L L1 Ll leaves depth leaf Li mi size ANDOR search tree ST R l k1 kmi Alternatively use exact domain sizes variable yielding accurate O expression O LkL ΠXj Xj pathT LkDXj cid2 43 From DFS trees pseudo trees There larger class trees backbones ANDOR search trees called pseudo trees 2 They mentioned backarc property Deﬁnition 32 pseudo tree extended graph Given undirected graph G V E directed rooted tree T V Ecid14 deﬁned nodes pseudo tree arc G included Ecid14 backarc T connects node T ancestor T The arcs Ecid14 included E Given pseudo tree T G extended graph G relative T deﬁned GT V E Ecid14 Clearly DFS tree chain graph pseudo trees Example 33 Consider graph G displayed Fig 4a Ordering d1 1 2 3 4 7 5 6 DFS ordering DFS tree T1 having smallest DFS tree depth 3 Fig 4b The tree T2 Fig 4c pseudo tree tree depth 2 The treearcs 1 3 1 5 G Tree T3 Fig 4d chain The extended graphs GT1 GT2 GT3 presented Fig 4b c d ignore directionality include dotted arcs It easy weighted ANDOR search tree deﬁned backbone trees pseudo tree Namely properties soundness completeness hold size bounds extendable 84 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Fig 5 ANDOR search tree pseudo trees T1 T2 Theorem 34 properties ANDOR search trees Given graphical model R backbone pseudo tree T weighted ANDOR search tree ST R sound complete size Ol m depth pseudo tree l bounds number leaves k bounds domain size Example 35 Fig 5 shows ANDOR search trees pseudo trees T1 T2 Fig 4 Here domains variables b c constraints universal The ANDOR search tree based T2 smaller T2 smaller depth T1 Finding good pseudo trees Finding pseudo tree DFS tree minimal depth known NPcomplete However greedy heuristics available For example pseudo trees obtained generating heuristi cally good induced graph ordering d traversing induced graph depthﬁrst breaking ties favor earlier variables 8 For information 3132 The deﬁnition buckets relative backbone tree extends pseudo trees allows deﬁnitions weights ANDOR tree based pseudo tree Next deﬁne notion bucket tree corresponds pseudo tree This relationship additional connections graph parameters Deﬁnition 36 bucket tree 33 Given graphical model primal graph G ordering d bucket tree G d deﬁned follows Let G d induced graph G d Each variable X associated bucket denoted BX contains X earlier neighbors induced graph G d similar Deﬁnition 25 The nodes bucket tree n buckets Each node BX points BY BY parent BX Y latest earlier neighbor X G d The following relationship treewidth depth pseudo trees known 826 Given tree decomposition primal graph G having n nodes treewidth w exists pseudo tree T G depth m satisﬁes m cid2 w log n It shown bucket tree 33 yields pseudo tree mindepth bucket tree yields mindepth pseudo trees The depth bucket tree called elimination depth 26 In summary Proposition 37 826 The minimal depth m pseudo trees satisﬁes m cid2 w log n w treewidth primal graph graphical model R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 85 Table 2 Average depth pseudo trees vs DFS trees 100 instances random model Model DAG N 50 P 2 C 48 N 50 P 3 C 47 N 50 P 4 C 46 N 100 P 2 C 98 N 100 P 3 C 97 N 100 P 4 C 96 Width 95 161 209 183 310 403 Pseudo tree depth DFS tree depth 1682 2334 2831 2759 4112 5053 3603 4060 4319 7236 8047 8654 Fig 6 ANDOR search tree backtrackfree tree Therefore Theorem 38 A graphical model treewidth w ANDOR search tree size On kwlog n k bounds domain size n number variables For illustration Table 2 shows effect DFS spanning trees pseudo trees generated brute force heuristics randomly generated graphs N number variables P number variables scope function C number functions 44 Pruning inconsistent subtrees ﬂat constraint networks Most advanced constraint processing algorithms incorporate nogood learning constraint propagation search use variable elimination algorithms adaptiveconsistency directional resolution 34 generating relevant nogoods prior search Such schemes viewed compiling representation yield pruned search tree We deﬁne backtrackfree ANDOR search tree Deﬁnition 39 backtrackfree ANDOR search tree Given ANDOR search tree ST R backtrackfree ANDOR search tree R based T denoted BFT R obtained pruning ST R inconsistent subtrees nodes root consistent partial solution Example 40 Consider 5 variables X Y Z T R domains 2 3 5 constraints X divides Y Z Y divides T R The constraint graph ANDOR search tree relative DFS tree rooted X given Fig 6a In 6b present ST R search space nodes consistency statuses later referred values evaluated having value 1 consistent 0 We highlight 86 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 solution subtrees depicted solid lines dotted lines Part c presents BFT R nodes root consistent solution pruned If traverse backtrackfree ANDOR search tree ﬁnd solution subtree encountering deadends Some constraint networks speciﬁcations yield backtrackfree search space Others backtrackfree massaging representation constraint propagation algorithms search In particular known variable elimination algorithms adaptiveconsistency 35 directional resolution 36 applied reversed order d d DFS order pseudo tree compile constraint speciﬁcation resp Boolean CNF formula backtrackfree search space Assuming reader familiar variable elimination algorithms 16 deﬁne Deﬁnition 41 directional extension 3536 Let R constraint problem let d DFS traversal ordering backbone pseudo tree primal graph We denote Ed R constraint network resp CNF formula compiled adaptiveconsistency resp directional resolution reversed order d Proposition 42 Given Constraint network R ANDOR search tree directional extension Ed R d DFS ordering T identical backtrackfree ANDOR search tree R based T Namely ST Ed R BFT R Example 43 In Example 40 apply adaptiveconsistency reverse order X Y T R Z algorithm remove values 3 5 domains X Z yielding tighter constraint network Rcid14 The ANDOR search tree Fig 6c ST Rcid14 BFT R Proposition 42 emphasizes signiﬁcance nogood learning 37 deciding inconsistency ﬁnding single solution These techniques known clause learning SAT solvers ﬁrst introduced 38 currently advanced solvers 39 Namely apply nogood learning explore search space inconsistent subtrees pruned For counting relevant tasks pruning inconsistent subtrees searching backtrackfree search tree yields partial help elaborate later 5 ANDOR search graphs It case search space tree graph identical nodes merged identical nodes root identical search subspaces correspond identical reasoning subproblems Any nodes root identical weighted subtrees merged reducing size search graph For example Fig 1c search trees appearance cid3Y 2cid4 identical merged Sometimes nodes root identical subtrees root search subspaces correspond equivalent subproblems Nodes root equivalent subproblems having universal model Deﬁnition 8 weighted subtrees identical uniﬁed yielding smaller search graph We formalize notions merging unifying nodes deﬁne minimal ANDOR search graph 51 Minimal ANDOR search graphs An ANDOR search tree viewed data structure deﬁnes universal graphical model Deﬁnition 8 deﬁned weights set solution subtrees Deﬁnition 22 Deﬁnition 44 universal graphical model ANDOR search trees Given weighted ANDOR search tree G set variables X domains D universal graphical model denoted U G deﬁned set solutions follows t solution subtree x asgnt assignment tuple associated t deﬁne ux wt ux 0 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 87 Fig 7 Merge vs unify operators A graphical model R equivalent ANDOR search tree ST R means uR identical U ST R We deﬁne sound merge operations transform ANDOR search trees graphs preserve equivalence Deﬁnition 45 merge Assume given weighted ANDOR search graph Scid14 T R ANDOR search tree ST R assume paths π1 πn1xi π2 πn2xi ending AND nodes level having label xi Nodes n1 n2 merged iff weighted search subgraphs rooted n1 n2 identical The merge operator mergen1 n2 redirects arcs going n2 n1 removes n2 subgraph It transforms Scid14 T smaller graph When merge AND nodes operation ANDmerge The reasoning applied OR nodes operation ORmerge T R Scid14 We deﬁne semantic notion uniﬁable nodes opposed syntactic deﬁnition merge Deﬁnition 46 unify Given weighted ANDOR search graph G graphical model R given paths πn1 πn2 having label nodes n1 n2 n1 n2 uniﬁable iff root equivalent conditioned subproblems Deﬁnition 10 Namely Rasgnπ1 Rasgnπ2 Example 47 Lets follow example Fig 7 clarify difference merge unify We graphical model deﬁned functions cost functions variables The search tree given Fig 7c reduced graph merge different arc weights However OR nodes labeled A root equivalent conditioned subproblems cost individual solution given leaves Therefore nodes labeled A uniﬁed recognized identical merge operator Proposition 48 minimal graph Given weighted ANDOR search graph G based pseudo tree T 1 The merge operator unique ﬁx point called merge minimal ANDOR search graph denoted M merge T G 2 The unify operator unique ﬁx point called unify minimal ANDOR search graph denoted M unify T G 3 Any nodes n1 n2 G merged uniﬁed Deﬁnition 49 minimal ANDOR search graph The unify minimal ANDOR search graph R relative T simply called minimal ANDOR search graph denoted MT R When T chain pseudo tree deﬁnitions applicable traditional OR search tree However able reach compression ANDOR cases linear structure imposed OR search tree 88 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Fig 8 OR search tree tree problem Fig 1a Fig 9 The minimal OR search graph tree graphical model Fig 1a Fig 10 ANDOR search tree tree problem Fig 1a Fig 11 The minimal ANDOR search graph tree graphical model Fig 1a Example 50 The smallest OR search graph graphcoloring problem Fig 1a given Fig 9 DFS order X Y T R Z L M The smallest ANDOR graph problem DFS tree given Fig 11 We variablevalue pairs AND nodes repeated Fig 9 ANDOR case appear In particular subgraph paths cid3X 1cid4 cid3Y 2cid4 cid3X 3cid4 cid3Y 2cid4 OR tree merged cid3Y 2cid4 You compare search space representations Figs 811 Note case constraint networks accommodate general deﬁnition merging AND nodes assigned different values domain OR nodes labeled different variables long root identical subgraphs In case merged node labeled disjunction assignments similar interchangeable values 23 52 Building ANDOR search graphs In subsection discuss practical algorithms generating compact ANDOR search graphs given graphical model In particular identify effective rules recognizing uniﬁable nodes aiming min imal ANDOR search graph computational resources allow The rules allow generating small ANDOR R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 89 graph called context minimal graph creating search tree ST ﬁrst We focus ﬁrst ANDOR search graphs graphical models having cycles called tree models primal graph tree 521 Building ANDOR search graphs tree models tree decompositions Consider graph Fig 1a ANDOR search tree Fig 1c representing constraint network Observe level 3 node cid3Y 1cid4 appears twice cid3Y 2cid4 cid3Y 3cid4 Clearly subtrees rooted AND nodes identical reason merged speciﬁc assignment Y uniquely determines rooted subtree Indeed ANDOR search graph Fig 11 equivalent ANDOR search tree Fig 10 Fig 1c Deﬁnition 51 explicit ANDOR graphs constraints tree models Given tree model constraint network pseudo tree T identical primal graph explicit ANDOR search graph tree model relative T obtained ST merging AND nodes having label cid3X xcid4 Proposition 52 Given rooted tree model T 1 Its explicit ANDOR search graph equivalent ST 2 The size explicit ANDOR search graph Onk 3 For tree models explicit ANDOR search graph minimal The notion explicit ANDOR search graph tree model extendable general graphical models trees The difference arcs weights Thus need merged nodes rule deﬁnition 51 root identical weighted ANDOR trees Proposition 53 Given general graphical model graph tree T explicit ANDOR search graph equivalent ST size Onk Next question identify efﬁciently mergeable nodes general nontree graphical models A guiding idea transform graphical model tree decomposition ﬁrst apply explicit ANDOR graph construction resulting tree decomposition The paragraph sketches intuition A tree decomposition 33 Deﬁnition 5 graphical model partitions functions clusters Each cluster corresponds subproblem set solutions clusters interact treelike manner Once tree decomposition graphical model viewed regular meta tree model cluster node domain cross product domains variables cluster The constraint adjacent nodes tree decomposition equality common variables For details tree decompositions 33 For metatree model explicit ANDOR search graph deﬁned OR nodes scopes clusters tree decomposition AND nodes possible value assignments Since graphical model converted tree explicit ANDOR search graph deﬁned bound size Theorem 54 Given tree decomposition graphical model domain sizes bounded k explicit ANDOR search graph implied tree decomposition size Orkw r number clusters tree decomposition w size largest cluster The tree decomposition guide algorithm generating ANDOR search graph size bounded exponentially induced width refer section context minimal graph While idea explicit ANDOR graph based tree decomposition extended graphical model somewhat cumbersome Instead section propose direct approach generating context minimal graph 522 The context based ANDOR graph We present generative rule merging nodes ANDOR search graph yields size bound suggested We need notion induced width pseudo tree G bounding size ANDOR search graphs We denote dDFST linear DFS ordering tree T Deﬁnition 55 induced width pseudo tree The induced width G relative pseudo tree T wT G induced width dDFST ordering extended graph G relative T denoted GT 90 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Proposition 56 1 The minimal induced width G pseudo trees identical induced width treewidth w G 2 The minimal induced width restricted chain pseudo trees identical pathwidth pw Example 57 In Fig 4b induced graph G relative T1 contains induced arcs 1 3 1 5 induced width 2 GT2 triangulated need add induced arcs induced width 2 GT3 added arc 4 7 ordered additional induced arcs 1 5 1 3 yielding induced width 2 We provide deﬁnitions allow identify nodes merged ANDOR graph The idea ﬁnd minimal set variable assignments current path generate conditioned subproblem regardless assignments included minimal set Since current path OR node Xi AND node cid3Xi xicid4 differ assignment Xi xi Deﬁnition 2 minimal set assignments want identify different Xi cid3Xi xicid4 In following deﬁnitions ancestors descendants respect pseudo tree T connection respect primal graph G Deﬁnition 58 parents Given primal graph G pseudo tree T reasoning problem P parents OR node Xi denoted pai paXi ancestors Xi connections G Xi descendants Xi Deﬁnition 59 parentseparators Given primal graph G pseudo tree T reasoning problem P parent separators Xi cid3Xi xicid4 denoted pasi pasXi formed Xi ancestors connections G descendants Xi It follows deﬁnitions parents Xi pai separate primal graph G extended graph GT induced extended graph GT ancestors T Xi Xi descendants T Similarly parentseparators Xi pasi separate ancestors Xi descendants It easy variable Xi parents pai form clique induced graph GT The following proposition establishes relationship pai pasi Proposition 60 1 If Y single child X T pasX 2 If X children Y1 Yk T pasX paY cid3 k i1 paYi Theorem 61 context based merge Given GT graph ending nodes n1 n2 let πn1 πn2 partial paths ANDOR search 1 If n1 n2 AND nodes annotated cid3Xi xicid4 asgnπn1 pasXi asgnπn2 pasXi 1 ANDOR search subgraphs rooted n1 n2 equivalent n1 n2 merged asgnπni pasXi called AND context ni 2 If n1 n2 OR nodes annotated Xi asgnπn1 paXi asgnπn2 paXi 2 ANDOR search subgraphs rooted n1 n2 equivalent n1 n2 merged asgnπni paXi called OR context ni Example 62 For balanced tree Fig 1 consider chain pseudo tree d X Y T R Z L M Namely chain arcs X Y Y T T R R Z Z L L M extended graph includes arcs Y T Z X M Z The parentseparators T d XY T induced graph arc T X R XR Z Z M M Indeed ﬁrst 3 levels OR search graph Fig 9 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 91 merged nodes In contrast consider ANDOR ordering DFS tree parentseparators node node yielding single appearance AND node having assignment annotation minimal ANDOR graph Deﬁnition 63 context minimal ANDOR search graph The ANDOR search graph R based backbone tree T closed contextbased merge operator called context minimal ANDOR search graph denoted CT R We note general merge nodes based AND OR contexts However Proposition 60 shows renders unnecessary small constant factor In practice recommend OR context based merging slight albeit small constant factor space advantage In examples paper CT R refers ANDOR search graph AND context based OR context based merging performed exhaustively Example 64 Consider example given Fig 12a The OR context node pseudo tree given square brackets The context minimal ANDOR search graph based OR merging given Fig 12b Since number nodes context minimal ANDOR search graph exceed number different contexts bound size context minimal graph Theorem 65 Given graphical model R primal graph G pseudo tree T having induced width w wT G size context minimal ANDOR search graph based T CT R On kw k bounds domain size Note criterion Eqs 1 2 cautious First real number assignments context variables includes consistent assignments Second seen Example 7 exist nodes uniﬁed merged Here example shows contexts identify nodes merged There paths contexts identical root identical subgraphs Example 66 Lets return example Bayesian network given Fig 12a P DB C given table ORcontext node pseudo tree given square brackets Fig 12b shows context Fig 12 Context minimal vs minimal ANDOR graphs 92 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 minimal graph However P D 0B 0 C 0 P D 0B 1 C 0 x P D 1B 0 C 0 P D 1B 1 C 0 y This allows merging corresponding OR nodes labeled D Fig 12c shows merge minimal graph The context based merge offers powerful way bounding search complexity Theorem 67 The context minimal ANDOR search graph CT graphical model having backbone tree bounded treewidth w generated time space Onkw Since unify minimal ANDOR graph M unify subsets CT bounded On kw w wT G Since minT wT G equal treewidth w minT chainswT G equal pathwidth pw Corollary 68 Given graphical model R exists backbone tree T unify minimal merge minimal context minimal ANDOR search graphs R bounded exponentially treewidth primal graph The unify merge context minimal OR search graphs bounded exponentially pathwidth merge minimal ANDOR graph M merge T T 523 More OR vs ANDOR It known 26 graph w cid2 pw cid2 w log n It easy place m minimal depth pseudo trees relation yielding w cid2 pw cid2 m cid2 w log n It possible exist primal graphs upper bound pathwidth attained pw Ow log n Consider complete binary tree depth m In case w 1 m m known 4041 Theorem 69 41 If T binary tree depth m pwT cid3 m 2 Theorem 69 shows graphical models having bounded tree width w minimal ANDOR graph bounded Onkw minimal OR graph bounded Onkwlog n Therefore caching use ANDOR vs OR search space yield substantial saving Remark 70 We seen ANDOR trees characterized depth pseudo trees minimal ANDOR graphs characterized induced width It turns pseudo tree optimal relative w far optimal m vice versa For example primal graph model chain pseudo tree having m1 n w1 1 hand pseudo tree balanced having m2 log n w2 log n There single pseudo tree having w 1 m log n chain Thus plan linear space search pick kind backbone pseudo tree plan search graph cache nodes pseudo tree 53 On canonicity generation minimal ANDOR graph We showed merge minimal ANDOR graph unique given graphical model given backbone pseudo tree Proposition 48 In general subsumes minimal ANDOR graph identical For constraint networks prove signiﬁcant property uniqueness relative equivalent graphical models given backbone tree We prove notion relative backtrackfree search graphs captured notion strongly minimal ANDOR graph Remember graphical model associated ﬂat constraint network Deﬁnition 71 strongly minimal ANDOR graph3 A strongly minimal ANDOR graph R relative pseudo tree T minimal ANDOR graph MT R backtrackfree partial assignment graph leads solution denoted M T R The strongly backtrackfree context minimal graph denoted C T R 3 The minimal graph built lumping uniﬁable nodes root equivalent subproblems Therefore level corresponding variable nodes root inconsistent subproblems uniﬁed If eliminate redundant nodes minimal graph backtrack free R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 93 531 Canonicity strongly minimal ANDOR search graphs We brieﬂy discuss canonicity strongly minimal graph focusing constraint networks Given equivalent constraint networks representing set solutions different constraint graph strongly minimal ANDOR search graphs identical The question deﬁned ANDOR graph R deﬁned respect backbone pseudo tree We equivalent constraint networks having different graphs pseudo tree graph pseudo tree Consider example constraint network having variables X Y Z equality constraints The following networks R1 RXY X Y RY Z Y Z R2 RXZ X Z RY Z Y Z R3 RXY X Y RY Z Y Z RXZ X Z equivalent However T1 X Y Z pseudo tree R1 R2 R3 We ask different question given equivalent constraint networks given backbone tree pseudo tree strongly minimal ANDOR graph relative T unique We answer question positively straightforwardly We ﬁrst equivalent networks share backbone tree identical backtrackfree ANDOR search trees Since backtrackfree search trees uniquely determine strongly minimal graph claim follows Deﬁnition 72 shared pseudo trees Given collection graphs set nodes graphs share tree T T pseudo tree graphs A set graphical models deﬁned set variables share tree T iff respective primal graphs share T Proposition 73 1 If R1 R2 equivalent constraint networks share T BFT R1 BFT R2 Deﬁnition 39 2 If R1 R2 equivalent graphical models necessarily constraint networks share T BFT R1 BFT R2 ANDOR search trees arcs identical weights Theorem 74 If R1 R2 equivalent constraint networks share T M T R1 M T R2 Theorem 74 implies M T canonical representation constraint network R relative T Generating strongly minimal ANDOR graphs From discussion methods generating canonical ANDOR graph given graphical model given ANDOR graph emerge The method focused paper generate context minimal ANDOR graph ﬁrst Then process graph leaves root computing value nodes additional nodes uniﬁed pruned value 0 There approach based processing functions variable elimination style viewing pseudo tree bucket tree cluster tree The original functions expressed ANDOR graphs combined pairwise ANDOR graph generated This phase allows computing value node Section 6 allows uniﬁcation Subsequently forward phase allow generating backtrackfree representation allow computing values associated node The details approach scope current paper For initial work restricted constraint networks 42 54 Merging pruning Orthogonal concepts Notice notion minimality orthogonal pruning inconsistent subtrees yielding backtrack free search space We merge identical subtrees root value 0 common subtree However convention dont inconsistent subtrees completely prune irrespec tive rooting identical nonidentical subtrees Therefore minimal search graph backtrackfree nonminimal search graph tree backtrackfree When search space backtrackfree seek single solution size minimal ANDOR search graph OR vs ANDOR irrelevant It affect traversal algorithm counts solutions computes optimal solution observed 43 For counting optimization tasks 94 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Fig 13 ANDOR trees Fig 14 ANDOR graphs Fig 15 A constraint graph b spanning tree c dynamic ANDOR tree record nogoods cache nodes context impact ANDOR graph search vs OR graph search signiﬁcant Example 75 Consider graph problem Fig 6a add value 4 domains X Z Fig 13a gives ANDOR search tree Fig 13b gives backtrackfree search tree Fig 14a gives context minimal unpruned search graph Fig 14b gives minimal pruned search graph 55 Using dynamic variable ordering The ANDOR search tree deﬁned uses ﬁxed variable ordering It known exploring search space dynamic variable ordering highly beneﬁcial ANDOR search trees graphical models modiﬁed allow dynamic variable ordering A dynamic ANDOR tree allows varied variable ordering satisfy subtree rooted current path π arc primal graph appears crossarc backarc subtree inactive conditioned π Example 76 Consider propositional formula X A C X B C The constraint graph given Fig 15a DFS tree 15b However constraint subproblem conditioned cid3X 0cid4 real constraint R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 95 A B C effective spanning tree cid3X 0cid4 cid3X 0cid4 A cid3X 0cid4 B cid3X 0cid4 C yielding ANDOR search tree Fig 15c Note arc A C constraint graph arc active X assigned value 0 Clearly constraint graph conditioned partial assignment sparser original graph yield smaller ANDOR search tree ﬁxed ordering In practice new value assignment conditional constraint graph assessed follows For constraint current variable X current assignment cid3X xcid4 constraint active corresponding arcs removed graph Then pseudo tree resulting graph generated ﬁrst variable selected search continues A investigation dynamic orderings outside scope current paper 6 Solving reasoning problems 61 Value functions reasoning problems As described earlier variety reasoning problems weighted graphical models For constraint networks popular tasks decide problem consistent ﬁnd single solution count solutions If cost function deﬁned seek optimal solution The primary tasks probabilistic networks belief updating ﬁnding probability evidence ﬁnding likely tuple given evidence Each reasoning problems expressed ﬁnding value nodes weighted ANDOR search space different tasks different value deﬁnitions For example task ﬁnding solution constraint network value node 1 0 The value 1 means subtree rooted node consistent 0 Therefore value root node answers consistency query For solutionscounting value function node number solutions rooted node Deﬁnition 77 value function consistency counting Given weighted ANDOR tree ST R constraint network The value node AND OR deciding consistency 1 roots consistent subproblem 0 The value node AND OR counting solutions number solutions subtree It easy value nodes search graph computed recursively leaves root Proposition 78 recursive value computation 1 For consistency task value AND leaves labels value OR leaves 0 inconsistent An internal OR node labeled 1 successor nodes 1 internal AND node value 1 iff successor OR nodes value 1 2 The counting values leaf AND nodes 1 leaf OR nodes 0 The counting value internal OR node sum counting values child nodes The counting value internal AND node product counting values child nodes We generalize reasoning problem focusing simpliﬁed case Z marginalization applied variables This special case captures tasks We start recursive deﬁnition Deﬁnition 79 recursive deﬁnition values The value function reasoning problem P cid3R Y Zcid4 R cid3X D F cid4 Z deﬁned follows value leaf AND nodes 1 leaf OR nodes 0 The value internal OR node obtained combining value AND child node weight Deﬁnition 26 incoming arc marginalizing AND children The value AND node combination values OR children Formally childrenn denotes children node n ANDOR search graph cid7 vn vn cid14 n cid3Y ycid4 AND node ncid14childrenn vn XY childrenn cid11 wnncid14 vn cid14 cid12 ncid14childrenn n Y OR node 96 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 The following proposition states given reasoning task computing value root node solves given reasoning problem Proposition 80 Let P cid3R Y Zcid4 R cid3X D F cid4 Z let X1 root node ANDOR search graph Scid14 cid4 r i1 fi v deﬁned Deﬁnition 79 T R Then vX1 Search algorithms traverse ANDOR search space compute value root node yielding swer problem The following section discusses algorithms Algorithms traverse weighted ANDOR search tree depthﬁrst manner breadthﬁrst manner guaranteed time bound exponential depth pseudo tree graphical model Depthﬁrst searches accomplished linear space context based caching bounded exponentially treewidth pseudo tree Depthﬁrst search anytime scheme terminated provide approximate solution tasks optimization The subsection presents typical depthﬁrst algorithms search ANDOR trees graphs We use solution counting example constraint query probability evidence example probabilistic reasoning query The algorithms compute value node For application ideas combinatorial optimization tasks MPE 31 62 Algorithm ANDOR tree search graph search Algorithm 1 presents basic depthﬁrst traversal ANDOR search tree graph caching counting number solutions constraint network AOCOUNTING probability evidence belief networks AOBELIEFUPDATING The context based caching based tables We exemplify OR caching For variable Xi table reserved memory possible assignment parent set pai Initially entry predeﬁned value case 1 The fringe search maintained stack called OPEN The current node denoted n parent p current path πn The children current node denoted successorsn The algorithm based mutually recursive steps EXPAND PROPAGATE search terminates Since use OR caching expanding OR node cache table checked line 6 If context encountered retrieved cache successorsn set set trigger PROPAGATE step If node cache expanded usual way depending AND OR node lines 1017 The difference counting belief updating line 12 vs line 13 For counting value consistent AND node initialized 1 line 12 belief updating initialized bucket value current assignment line 13 As long current node deadend unevaluated successors successors chosen node OPEN expansion step repeated The propagation values triggered node set successors note successor evaluated removed set successors line 31 This means children evaluated ﬁnal value computed If current node root search terminates value line 20 If OR node value saved cache propagating line 22 If n OR parent p AND p updates value multiplication value n line 24 If newly updated value p 0 line 25 p deadend successors needs evaluated An AND node n propagates value parent p similar way summation line 30 Finally current node n set parent p line 32 n completely evaluated The search continues propagation step conditions met expansion step 63 General ANDOR searchAOi General ANDOR algorithms evaluating value root node reasoning problem tree graph ANDOR search identical algorithms product replaced combination operator R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 97 Algorithm 1 AOcountingAObeliefupdating summation replaced marginalization operator We view ANDOR tree algorithm denote AOT ANDOR graph algorithm denoted AOG extreme cases parameterized collection algorithms trade space time controlling parameter We denote class algorithms AOi determines size contexts algorithm caches Algorithm AOi records nodes context size smaller test line 22 needs bit elaborate check context size smaller Thus AO0 identical AOT AOw identical AOG w induced width backbone tree For intermediate intermediate level caching space exponential execution time increase decreases 64 Complexity From Theorems 34 38 conclude Theorem 81 For reasoning problem AOT runs linear space time Onkm m depth pseudo tree graphical model k maximum domain size If primal graph tree decomposition treewidth w exists pseudo tree T AOT Onkwlog n 98 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Obviously algorithm constraint satisfaction terminate early ﬁrst solution potentially faster rest AOT algorithms practice Based Theorem 65 complexity bounds graph searching algorithms Theorem 82 For reasoning problem complexity algorithm AOG time space Onkw w induced width pseudo tree k maximum domain size Thus complexity AOG time space exponential treewidth complexity algorithm searching OR space time space exponential pathwidth The space complexity exponential treewidth This similar known space complexity tree decomposition schemes operate space exponential size cluster separators exponential cluster size It similar dead caches concept presented 1232 Intuitively node incoming arc traversed search value need cached For context based caching nodes recognized based parents parent separators sets Deﬁnition 83 dead cache If X parent Y T paX paY paY dead cache Given pseudo tree T induced graph T generate tree decomposition based maximal cliques The maximum separator size tree decomposition separator size T Proposition 84 The space complexity graphcaching algorithms reduced exponential sepa rators size time exponential treewidth dead caches recorded 7 ANDOR search spaces schemes 71 Relationship Variable Elimination A comparison Variable Elimination memory intensive ANDOR search appears 44 That paper shows Variable Elimination understood layer layer traversal context minimal ANDOR search graph If graphical model strictly positive determinism context based ANDOR search Variable Elimination essentially identical When determinism present differ traverse ANDOR graph different directions encounter determinism advantage differently Therefore graphical models determinism principled difference memory intensive ANDOR search ﬁxed variable ordering inference 1 different direction exploring common search space search vs inference 2 different assumption control strategy depthﬁrst search breadthﬁrst inference Another interesting observation known advanced algorithms constraint processing satisﬁability explained traversing ANDOR search tree graph based backjumping 3837 For details refer reader 44 72 Relationship BTD backtracking treedecomposition BTD 10 memory intensive method solving constraint satisfaction problems combines search techniques notion tree decomposition This mixed approach fact viewed searching ANDOR graph backbone pseudo tree deﬁned structured tree decomposition What deﬁned 10 structural goods parts search space visited soon consistency known corresponds precisely decomposition ANDOR space level AND nodes root independent subproblems Not surprisingly time space guarantees BTD ANDOR graph search An optimization version algorithm presented 11 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 99 Fig 16 Dtrees ANDOR pseudotrees 73 Relationship Recursive Conditioning Recursive Conditioning RC 12 based divide conquer paradigm Rather instantiating variables obtain tree structured network like cycle cutset scheme RC instantiates variables purpose breaking network independent subproblems recurse technique The computation driven datastructure called dtree binary tree leaves correspond network CPTs It shown RC explores ANDOR space Lets start example Fig 16 shows belief network b c dtrees corresponding pseudotrees ANDOR search The dtrees variables instantiated internal nodes The pseudotrees generated static ordering RC dictated dtree This ensures RC splits problem independent subproblems happens ANDOR space It shown context nodes RC deﬁned 12 identical ANDOR 74 Relationship Value Elimination Value Elimination 13 recently developed algorithm Bayesian inference It explained 13 static variable ordering strong relation Value Elimination Variable Elimination From paragraph relation ANDOR search Variable Elimination derive connection Value Elimination ANDOR search static orderings But analyze connection directly Given static ordering d Value Elimination actually traverses ANDOR space The pseudotree underlying ANDOR search graph traversal Value Elimination constructed bucket tree reversed d However traversal ANDOR space controlled d advancing frontier hybrid depth breadthﬁrst manner The important analyze management goods When Value Elimination computes factor leaf node backs value deepest node dependency set Dset The Dset identical context ANDOR space For clarity reasons chose ANDOR algorithm value parent pseudotree different deepest variable context We accommodate propagation value like Value Elimination maintain bookkeeping summation set Sset constant factor saving Value Elimination continues unionizing Dsets Ssets values propagated identical computing context corresponding node ANDOR space fact induced ancestor set graphbased backjumping 45 In presence determinism backjumping strategy nogood learning Value Elimination performed ANDOR space Context speciﬁc structure Value Elimination ANDOR Dynamic variable orderings ANDOR spaces paper limit discussion static orderings 100 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 75 Relationship casefactor diagrams CaseFactor Diagrams CFD introduced 20 represent probabilistic formalism subsuming Markov random ﬁelds bounded treewidth probabilistic context free grammars Casefactor diagrams based variant BDDs binary decision diagram 17 zero suppression factor nodes Factor nodes analogous AND nodes ANDOR search space A casefactor diagram viewed ANDOR search space outgoing arc OR node explicitly labeled assignment value variable Zero suppression ﬁx value variables mentioned given solution Zero suppression allows formalism concisely represent probabilistic context free grammars functions variablevalue assignments log probabilities energies 76 ANDORsearch graphs compilation The authors proposed 42 compilation constraint networks ANDOR MultiValued Decision Diagrams AOMDDs This essentially strongly minimal ANDOR graph representation constraint network redundant variables removed conciseness An algorithm achieves structurally similar Variable Elimination It uses traversal bucket tree node APPLY operator combine AOMDDs bucket AOMDD The APPLY similar OBDD apply operator 17 adapted ANDOR structures Essentially AOMDD extends OBDD multivalued decision diagram ANDOR structure 761 Relationship dDNNF An ANDOR structure restricted propositional theories similar dDNNF 18 One oneto linear translation ANDOR bivalued tree propositional CNF theory dDNNF The ANDOR structure restrictive allowing disjunction variables value dDNNF disjunction allowed complex expressions 46 implications distinction The ANDOR search graph built graphical model viewed compiled scheme CNF ANDOR structure Since ANDOR search expressed dDNNF construction pseudo tree yields scheme dDNNF compilation In words given CNF theory algorithm applied pseudo tree yield ANDOR graph transformed linear time space dDNNF Conversely given dDNNF specialized variablebased disjunction OR nodes easy create ANDOR graph tree equivalent having polynomially equivalent size The ANDOR search graph probabilistic networks closely related algebraic circuits probabilistic networks 19 extension dDNNF domain 762 Relationship OBDDs The notion minimal OR search graphs similar known concept Ordered Binary Decision Diagrams OBDD literature hardware software design veriﬁcation The properties OBDDs studied extensively past decades 1747 It known size minimal OBDD bounded exponentially pathwidth CNFs primal graph OBDD unique ﬁxed variable ordering Our notion backtrackfree minimal ANDOR search graphs applied CNFs resembles tree BDDs 48 Minimal ANDOR graphs related Graph driven BDDs called GFBDD 4950 based partial order expressed directed graph Still GFBDD OR structure ordering restricted partial orders ANDOR structure For example OBDD based DFS ordering pseudo tree GFBDD Some relationships graphical model compilation OBDDs studied 18 In summary putting OBDDs terminology OBDD representation CNF formula strongly minimal OR search graph redundant nodes removed 763 Relationship treedriven automata Fargier Vilarem 21 proposed compilation CSPs treedriven automata similarities work 42 In particular compiled treeautomata proposed essentially ANDOR R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 101 multivalued decision diagram Their main focus transition linear automata tree automata similar OR ANDOR possible savings treestructured networks hypertrees constraints decomposition Their compilation approach guided treedecomposition guided variable elimination based algorithms And known Variable Elimination clustertree decomposition principle 24 77 Relationship disjoint support decomposition The work Disjoint Support Decompositions DSD 22 proposed area design automation 51 enhancement BDDs aimed exploiting function decomposition The main common aspect DSD AOMDD 42 approaches structure decomposition exploited BDDlike represen tation DSD focused Boolean functions exploit reﬁned structural information inherent Boolean functions In contrast AOMDDs assume structure conveyed constraint graph broadly applicable constraint expression graphical models general They allow simpler higher level exposition yields graphbased bounds overall size generated AOMDD 771 Relationship semiring BDDs In recent work 23 OBDDs extended semiring BDDs The semiring treatment restricted OR search spaces allows dynamic variable ordering It similar aim scope strongly minimal ANDOR graphs When restricting strongly minimal ANDOR graphs OR graphs closely related express BDDs ShenoyShafer axiomatization centered operation combination marginalization semiring formulation Minimality formulation 23 general allowing merging nodes having different values capture symmetries called interchangeability 8 Conclusions The primary contribution paper viewing search graphical models context ANDOR search spaces OR spaces We introduced ANDOR search tree showed size bounded exponentially depth pseudo tree graphical model This implies exponential savings linear space algorithms traversing ANDOR search tree Speciﬁcally graphical model treewidth w depth pseudo tree Ow log n The ANDOR search tree extended graph merging identical subtrees We showed size minimal ANDOR search graph exponential treewidth size minimal OR search graph exponential pathwidth Since graphs difference treewidth pathwidth substantial balanced pseudo trees ANDOR representation implies substantial time space savings memory tensive algorithms traversing ANDOR graph Searching ANDOR search graph implemented goods caching search nogood recording interpreted pruning portions search space independent tree graph OR ANDOR For ﬁnding single solution pruning search space signiﬁcant action For counting probabilistic inference ANDOR graphs help nogood recording We observe known advanced algorithms constraint processing satisﬁability explained traversing ANDOR search tree backjumping 3837 Also recent algorithms probabilistic reason ing Recursive Conditioning 12 Value Elimination 13 operate linear space viewed searching ANDOR search tree In memory intensive mode algorithms noted search ANDOR graph having similar time space complexities Also noted recent work 10 proposes search guided tree decomposition constraint satisfaction optimization searching ANDOR search graph pseudo tree constructed tree decomposition 102 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Acknowledgements This work supported NSF grant IIS0412854 MURI ONR award N000140010617 Appendix A Proofs Proof Theorem 29 correctness 1 By deﬁnition arcs ST R consistent Therefore solution tree ST R denotes solution R assignments labels AND nodes solution tree Also deﬁnition ANDOR tree solution R corresponds solution subtree ST R 2 By construction arcs solution tree weights function F contributes weight combination operator Since total weight tree derived combination yields cost solution Proof Theorem 30 size bounds ANDOR search tree Let p arbitrary directed path DFS tree T starts root ends leaf This path induces OR search subtree included ANDOR search tree ST size Okm m bounds path length The DFS tree T covered l directed paths lengths bounded m The union individual search trees covers ANDOR search tree ST distinct path ANDOR tree appears exactly size ANDOR search tree bounded Ol Since l cid2 n l cid2 bm concludes proof Proof Proposition 31 The proof similar Theorem 30 node contributes actual domain size maximal path leaf T contributes actual depth maximal Proof Theorem 34 properties ANDOR search trees All arguments proof Theorem 29 carry immediately ANDOR search spaces deﬁned relative pseudo tree Likewise bound size argument proof Theorem 30 holds relative depth general pseudo tree Proof Proposition 42 First note T pseudo tree R d DFS ordering T T pseudo tree Ed R ST Ed R faithful representation Ed R Ed R equivalent R ST Ed R supergraph BFT R We need ST Ed R contain deadends words consistent partial assignment extendable solution R Adaptive consistency makes Ed R strongly directional wd consistent wd induced width R ordering d 35 It follows R inconsistent case proposition trivially satisﬁed trees consistent partial assignment ST Ed R extended variable d deadend encountered Proof Proposition 48 minimal graph 1 All need merge operator dependent order applying operator Mergeable nodes appear level ANDOR graph Looking initial ANDOR graph merge operator applied identify mergeable nodes level We prove proposition showing nodes initially mergeable end merged operator applied exhaustively graph This shown induction level nodes appear Base case If nodes appear leaf level level 0 obvious exhaustive merge merge point Inductive step Suppose claim true nodes level k nodes n1 n2 level k 1 initially identiﬁed mergeable This implies initially corresponding children identiﬁed mergeable These children level k follows inductive hypothesis exhaustive merge merge corresponding children This fact implies nodes n1 n2 root subgraph exhaustive merge ends end merged Since graph smaller merging based process merging stop ﬁx point 2 Analogous 1 3 If nodes merged follows subgraphs identical implies deﬁne conditioned subproblems nodes uniﬁed R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 103 Proof Proposition 52 Parts 1 2 follow deﬁnitions Regarding claim 3 graph coloring problem Fig 1a minimal ANDOR search graph identical explicit ANDOR search graph GT Fig 11 Proof Proposition 53 In tree models functions variables Therefore assignment cid3X xcid4 appropriate weight given arc X cid3X xcid4 variable X ancestors pseudo tree contribute arc weight ANDOR search tree Therefore conditioned subproblems rooted AND node labeled cid3X xcid4 depend assignment X x depend assignment current path follows AND nodes labeled cid3X xcid4 merged Since equivalence ANDOR search spaces preserved merge explicit ANDOR search graph equivalent ST At AND level explicit graph k values size Onk Proof Theorem 54 The size explicit ANDOR graph tree model shown Onk Proposi tion 52 yielding Or kw size explicit ANDOR graph k replaced kw number possible assignments cluster scope size w r replaces n Proof Proposition 56 1 The induced width G relative given pseudo tree greater w deﬁnition w It remains exists pseudo tree T wT G w Consider ordering d gives induced width w The ordering d deﬁnes bucket tree BT Deﬁnition 36 viewed pseudo tree ANDOR search wBT G w 2 Analogous 1 Proof Proposition 60 Both claims follow directly Deﬁnitions 58 59 Proof Theorem 61 context based merge 1 The conditioned graphical models Deﬁnition 10 n1 n2 deﬁned functions scopes fully assigned πn1 πn2 Since n1 n2 labeling cid3Xi xicid4 follows varπn1 varπn2 conditioned subproblems based set functions lets F varπn1 The scopes functions F varπn1 determine connections primal graph ancestors Xi descendants Therefore relevant variables deﬁne restricted subproblems pasi Eq 1 ensures identical assignments It follows conditioned subproblems identical n1 n2 merged 2 Analogous 1 Proof Theorem 65 The number different nodes context minimal ANDOR search graph CT exceed number contexts From Eqs 1 2 variable number contexts bounded number possible instantiations largest context GT bounded Okw For n variables bound On kw follows Proof Theorem 67 We generate CT depthﬁrst breadthﬁrst search caches nodes contexts avoids generating duplicate searches contexts Therefore generation search graph linear size exponential w linear n Proof Proposition 73 Let B1 BFT R1 B2 BFT R2 corresponding backtrackfree ANDOR search trees R1 R2 respectively Namely BFT R1 ST R1 BFT R2 ST R2 Clearly sub trees ANDOR tree We claim path appears B1 iff appears B2 If assume loss generality exists path B1 π exists B2 Since backtrackfree search tree path appears solution solution subtree B1 includes π exist B2 contradicting assumption R1 R2 set solutions The second identical proof based ﬂat functions introduction Section 3 Proof Theorem 74 From Proposition 73 know R1 R2 backtrackfree ANDOR tree Since backtrackfree ANDOR search tree backbone tree T uniquely determines strongly mini mal ANDOR graph theorem follows 104 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 Proof Proposition 78 recursive value computation The proof induction number levels ANDOR graph Basis step If graph levels OR AND claim straightforward AND leaves labeled 1 consistent OR node accumulates 1 sum consistent values 0 consistent value Inductive step Assuming proposition holds k pairs levels AND OR pair proving holds k 1 pairs levels similar basis step labeling AND nodes sum solutions case counting Proof Proposition 80 The proof induction similar proof Proposition 78 For simplicity writing projection operator takes arguments set variables eliminated Basis step If model variable claim obvious Inductive step Let X OR node graph Assume value OR node solution reasoning problem corresponding conditioned subproblem rooted We need prove value X solution reasoning problem conditioned subproblem rooted X Suppose X children Y1 Ym pseudo tree We vYi Yi DescYi f DescYi descendants Yi functions restricted current path Each AND node cid3X xcid4 combine values Because sets Yi DescYi pairwise disjoint marginalization operator commutes combination operator f F πYi cid4 cid12 cid11 cid3X xcid4 v mcid7 i1 Yi DescYi cid7 f F πYi f cid3 m i1Yi DescYi cid7 f f F πx The values vcid3X xcid4 combined values bucket X weights wXcid3Xxcid4 The func tions appear bucket X contribute weights Yi marginalization m i1Yi DescYi commute combination described cid3 wXcid3Xxcid4 v cid12 cid11 cid3X xcid4 cid3 m i1Yi DescYi wXcid3Xxcid4 cid15 cid7 cid16 f f F πx Finally vX X wXcid3Xxcid4 v cid12 cid11 cid3X xcid4 XDescX cid7 f f F πX Proof Proposition 84 A bucket tree built having cluster variable Xi parents pai following structure pseudo tree T Some clusters maximal correspondence variables dead caches The parents pai dead caches correspond separators maximal clusters bucket tree References 1 NJ Nilsson Principles Artiﬁcial Intelligence Tioga Palo Alto CA 1980 2 EC Freuder MJ Quinn Taking advantage stable sets variables constraint satisfaction problems Proceedings Ninth International Joint Conference Artiﬁcial Intelligence IJCAI85 1985 pp 10761078 3 EC Freuder MJ Quinn The use lineal spanning trees represent constraint satisfaction problems Tech Rep 8741 University New Hampshire Durham 1987 4 Z Collin R Dechter S Katz On feasibility distributed constraint satisfaction Proceedings Twelfth International Conference Artiﬁcial Intelligence IJCAI91 1991 pp 318324 5 Z Collin R Dechter S Katz Selfstabilizing distributed constraint satisfaction The Chicago Journal Theoretical Computer Science 3 4 1999 special issue selfstabilization 6 PJ Modi W Shena M Tambea M Yokoo Adopt asynchronous distributed constraint optimization quality guarantees Artiﬁcial Intelligence 161 2005 149180 7 R Dechter Constraint networks Encyclopedia Artiﬁcial Intelligence 1992 pp 276285 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 105 8 R Bayardo D Miranker A complexity analysis spacebound learning algorithms constraint satisfaction problem Proceedings Thirteenth National Conference Artiﬁcial Intelligence AAAI96 1996 pp 298304 9 J Larrosa P Meseguer M Sanchez Pseudotree search soft constraints Proceedings European Conference Artiﬁcial Intelligence ECAI02 2002 pp 131135 10 C Terrioux P Jégou Hybrid backtracking bounded treedecomposition constraint networks Artiﬁcial Intelligence 146 2003 4375 11 C Terrioux P Jégou Bounded backtracking valued constraint satisfaction problems Proceedings Ninth International Con ference Principles Practice Constraint Programming CP03 2003 pp 709723 12 A Darwiche Recursive conditioning Artiﬁcial Intelligence 125 12 2001 541 13 F Bacchus S Dalmao T Pitassi Value elimination Bayesian inference backtracking search Proceedings Nineteenth Conference Uncertainty Artiﬁcial Intelligence UAI03 2003 pp 2028 14 F Bacchus S Dalmao T Pitassi Algorithms complexity results sat bayesian inference Proceedings 44th Annual IEEE Symposium Foundations Computer Science FOCS03 2003 pp 340351 15 T Sang F Bacchus P Beam H Kautz T Pitassi Combining component caching clause learning effective model counting Proceedings Seventh International Conference Theory Applications Satisﬁability Testing SAT04 2004 16 R Dechter Bucket elimination A unifying framework reasoning Artiﬁcial Intelligence 113 1999 4185 17 RE Bryant Graphbased algorithms boolean function manipulation IEEE Transaction Computers 35 1986 677691 18 A Darwiche P Marquis A knowledge compilation map Journal Artiﬁcial Intelligence Research JAIR 17 2002 229264 19 A Darwiche A differential approach inference Bayesian networks Journal ACM 50 3 2003 280305 20 D McAllester M Collins F Pereira Casefactor diagrams structured probabilistic modeling Proceedings Twentieth Conference Uncertainty Artiﬁcial Intelligence UAI04 2004 pp 382391 21 H Fargier M Vilarem Compiling csps treedriven automata interactive solving Constraints 9 4 2004 263287 22 V Bertacco M Damiani The disjunctive decomposition logic functions ICCAD International Conference ComputerAided Design 1997 pp 7882 23 N Wilson Decision diagrams computation semiring valuations Proceedings Nineteenth International Joint Conference Artiﬁcial Intelligence IJCAI05 2005 pp 331336 24 R Dechter J Pearl Tree clustering constraint networks Artiﬁcial Intelligence 38 1989 353366 25 SA Arnborg Efﬁcient algorithms combinatorial problems graphs bounded decomposabilitya survey BIT 25 1985 223 26 HL Bodlaender JR Gilbert Approximating treewidth pathwidth minimum elimination treeheight Tech rep Utrecht University 1991 27 HL Bodlaender Treewidth Algorithmic techniques results The Twenty Second International Symposium Mathematical Founda tions Computer Science MFCS97 1997 pp 1936 28 R Dechter A new perspective algorithms optimizing policies uncertainty International Conference Artiﬁcial Intelligence Planning Systems AIPS2000 2000 pp 7281 29 P Shenoy Valuationbased systems bayesian decision analysis Operations Research 40 1992 463484 30 J Pearl Probabilistic Reasoning Intelligent Systems Morgan Kaufmann 1988 31 R Marinescu R Dechter ANDOR branchandbound graphical models Proceedings Nineteenth International Joint Conference Artiﬁcial Intelligence IJCAI05 2005 pp 224229 32 D Allen A Darwiche New advances inference recursive conditioning Proceedings Nineteenth Conference Uncertainty Artiﬁcial Intelligence UAI03 2003 pp 210 33 K Kask R Dechter J Larrosa A Dechter Unifying clustertree decompositions reasoning graphical models Artiﬁcial Intelli gence 166 12 2005 165193 34 R Dechter Constraint Processing Morgan Kaufmann 2003 35 R Dechter J Pearl Networkbased heuristics constraint satisfaction problems Artiﬁcial Intelligence 34 1987 138 36 I Rish R Dechter Resolution vs search strategies sat Journal Automated Reasoning 24 12 2000 225275 37 R Dechter Enhancement schemes constraint processing Backjumping learning cutset decomposition Artiﬁcial Intelligence 41 1990 273312 38 RJ Bayardo RC Schrag Using csp lookback techniques solve real world sat instances Proceedings Fourteenth National Conference Artiﬁcial Intelligence AAAI97 1997 pp 203208 39 JP MarquesSilva KA Sakalla Grasp A search algorithm propositional satisﬁability IEEE Transaction Computers 48 5 1999 506521 40 N Robertson P Seymour Graph minors excluding forest J Combin Theory Ser B 35 1983 3961 41 D Bienstock N Robertson P Seymour R Thomas Quickly excluding forest J Combin Theory Ser B 52 1991 274283 42 R Mateescu R Dechter Compiling constraint networks ANDOR multivalued decision diagrams AOMDDs Proceedings Twelfth International Conference Principles Practice Constraint Programming CP06 2006 pp 329343 43 DH Frost Algorithms heuristics constraint satisfaction problems Tech rep PhD thesis Information Computer Science University California Irvine 1997 44 R Mateescu R Dechter The relationship ANDOR search variable elimination Proceedings Twenty First Conference Uncertainty Artiﬁcial Intelligence UAI05 2005 pp 380387 45 R Dechter D Frost Backjumpbased backtracking constraint satisfaction problems Artiﬁcial Intelligence 136 2 2002 147188 46 J Huang A Darwiche Dpll trace From sat knowledge compilation Proceedings Nineteenth International Joint Conference Artiﬁcial Intelligence IJCAI05 2005 pp 156162 47 KL McMillan Symbolic Model Checking Kluwer Academic 1993 106 R Dechter R Mateescu Artiﬁcial Intelligence 171 2007 73106 48 KL McMillan Hierarchical representation discrete functions application model checking Computer Aided Veriﬁcation 1994 pp 4154 49 J Gergov C Meinel Efﬁcient boolean manipulation obdds extended fbdds IEEE Trans Computers 43 1994 11971209 50 D Sieling I Wegner Graph driven BDDsa new data structure boolean functions Theoretical Computer Science 141 1994 283310 51 R Brayton C McMullen The decomposition factorization boolean expressions ISCAS Proceedings International Sympo sium Circuits Systems 1982 pp 4954