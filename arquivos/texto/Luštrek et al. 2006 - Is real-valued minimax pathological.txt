Artiﬁcial Intelligence 170 2006 620642 wwwelseviercomlocateartint Is realvalued minimax pathological Mitja Luštrek Matjaž Gams Ivan Bratko b Department Intelligent Systems Jožef Stefan Institute Jamova 39 1000 Ljubljana Slovenia b Faculty Computer Information Science University Ljubljana Tržaška cesta 25 1000 Ljubljana Slovenia Received 4 January 2005 received revised form 9 January 2006 accepted 15 January 2006 Available online 17 February 2006 Abstract Deeper searches gameplaying programs relying minimax principle generally produce better results Theoretical analy ses suggest cases minimaxing ampliﬁes noise introduced heuristic function evaluate leaves game tree leading known pathological behavior deeper searches produce worse results In minimax models analyzed previous research positions true values heuristic values losses wins In contrast model proposed paper uses real numbers true heuristic values This model behave pathologically experiments performed The mechanism causes deeper searches produce better evaluations explained A comparison chess indicating model realistically reﬂects position evaluations chessplaying programs Conditions pathology appear realvalue model examined The essential difference realvalue model common twovalue model causes pathology twovalue model identiﬁed Most previous research reports pathology tends disappear dependences values sibling nodes game tree In paper explanation presented indicates twovalue models error heuristic evaluation modeled realistically 2006 Elsevier BV All rights reserved Keywords Game playing Minimax Pathology Game tree Real value Chess 1 Introduction The minimax principle lies heart gameplaying program Programs typically choose best searching game tree heuristically evaluating leaves propagating values root minimax principle In practice deeper searches generally produce better results However mathematical analysis indicates certain seemingly sensible conditions opposite true minimaxing ampliﬁes error heuristic evaluation 210 This phenomenon called minimax pathology 10 Nau 14 described worse working harder Evidently game trees real games different game trees theoretical analyses way eliminates pathology Several explanations property game trees real games responsible forth similarity positions close 311 presence stabilizing gametree nodes reliable estimates 416 And properties shown eliminate Corresponding author Email addresses mitjalustrekijssi M Luštrek matjazgamsijssi M Gams bratkofriuniljsi I Bratko 00043702 matter 2006 Elsevier BV All rights reserved doi101016jartint200601006 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 621 pathology question extent actually present game trees real games remains Also mechanism achieve goal inadequately explained This paper attempts address problems model game trees way believe reﬂects properties real games explain mechanism eliminates pathology In game trees positions close similar But unlike models previous research positions true values heuristic values losses wins use real numbers true heuristic values This makes possible model similarity positions descendants natural way enables direct comparison gameplaying programs typically use sizable range integer values The model analyzed mathematically explain mechanism makes minimax effective Multiple types error different experimental settings approximation real values limited number discrete values determine exactly pathology present realvalue model Some light shed reasons pathological behavior twovalue models previous research The paper organized follows Section 2 short introduction minimax pathology historical overview Section 3 presents model minimax Section 4 gives mathematical analysis minimax real number values Section 5 compares model chess program Section 6 explains pathology appears realvalue model examines differences realvalue twovalue models Section 7 concludes paper points areas research needed 2 Related work The minimax pathology discovered independently Nau 10 Beal 2 It later thoroughly analyzed authors Bratko Gams 4 notation adopt In section present basic minimax model like Beal A game tree consists nodes representing game positions edges representing moves In basic model positions lost won Negamax notation section nodes marked lost won perspective Two situations possible node lost descendant case node won choose leading descendant lost opponent node won descendants case node lost moves lead positions won opponent This shown Fig 1 losses marked wins Virtually research minimax pathology assumed game trees uniform branching factor b In basic model value leaf independent leaves values Let d depth search ki probability loss ith ply Plies numbered upwards 0 lowest ply search d root Since node lost descendants won relation values k consecutive plies governed Eq 1 ki1 1 kib 1 The goal calculate probability incorrectly evaluating root given probability incorrect evaluation lowest ply search Two types evaluation error possible loss mistaken win false win win loss false loss Let pi qi probabilities respective types error ith ply False wins occur nodes descendants won false loss Therefore pi1 calculated according Eq 2 pi1 1 ki1 1 kib cid1 1 1 qib cid2 1 1 qib 2 False losses occur nodes descendants lost false wins instead won descendants retain true values Therefore qi1 calculated according Eq 3 Fig 1 Types nodes 622 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 qi1 1 1 ki1 bcid3 j 1 cid4 cid5 b j 1 kibj pj kj 1 qibj kipi 1 ki1 qib 1 ki1 qib 1 ki1 3 If games sides equal chance winning root game tree considered kd 05 Eq 1 calculate k plies Values p0 q0 chosen Eqs 2 3 calculate pd qd If error root deﬁned pd kd qd 1 kd 4 12pd qd 16 turns increasing d error converges 05 rendering minimax useless First attempts explain phenomenon Bratko Gams 4 Beal 3 Both came conclusion reason minimax effective real games sibling nodes similar values Bratko Gams argued property causes formation subtrees reliably evaluated roots stabilizing effect They verify case real games Beal showed sufﬁcient number nodes descendants lost won present game tree pathology disappears He successfully veriﬁed claim king pawn versus king chess endgame results conclusive endgame typical chess situation Nau 1113 simple game designed minimax analysis strong dependence node descendants eliminates pathology Pearl 16 suspected real games strong dependence He argued early terminations called blunders carry reliable evaluations main reason elimination pathology Both early terminations subtrees similar node values proposed Bratko Gams 4 result relatively errorfree nodes properties use basically mechanism eliminate pathology Pearls calculations number necessary early terminations game tree b 2 5 attempts Luštrek Gams 9 verify experimentally indicate 20 needed b 2 larger branching factors Schrüfer 19 showed error particularly probability false loss sufﬁciently low certain additional conditions satisﬁed game tree pathological He investigate conditions present real games Althöfer 1 showed trees pathological according Schrüfer pathology persists backup procedure instead minimax Some researchers models multiple heuristic values kept true values restricted losses wins Nau 1113 multiple heuristic values simply natural choice game studied In 12 concerned proving certain circumstances evaluation function limited number possible values branching factor large pathology inevitable Later 13 extended proof multiple true values Pearl 16 considered multiple heuristic values concluded regard pathology behave way values Scheucher Kaindl 18 ﬁrst consider multiple heuristic values crucial elimination pathology They design heuristic evaluation function representative gameplaying programs use According function values leaves game tree independent implied lower plies game tree positions error likely encountered higher plies These characteristics eliminated pathology remained unclear error depend depth search exactly way proposed A model arbitrary number heuristic values number true values studied Bratko Gams 4 They completely independent leaf values model behaved similarly twovalue version Sadikov et al 17 multiple values analysis king rook versus king chess endgame They managed explain pathology backedup position evaluations known conclusion applies cases endgame studied Some preliminary results research fully described paper published Luštrek 8 3 A model realnumber values There games ﬁnal outcome multivalued typically expressed integer Othello bridge In games multivalued position values true heuristic obviously needed In games outcome loss win draw chess checkers multiple values necessary express uncertainty heuristic evaluation function true values However unlimited M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 623 resources determine value position remove uncertainty losing position best fallible fully known opponent evaluate moves terms probability loss particular opponent More importantly winning position multiple values possible maintain direction play gradually moving win maintaining won position achieving ﬁnal goal Multiple values necessary differentiate multiple winning losing available moves Scheucher Kaindl 18 discussed need multiple values concerned heuristic val ues They demonstrated chess twovalued evaluation function performs poorly compared multivalued Given multivalued position values necessary playing natural use multivalued true values These values true sense guide program play optimally In minimax model use real values instead multiple discrete values This facilitates mathematical explanation minimax works The issue granularity distinct values studied separately Section 62 In partic ular Section 62 address question Are desirable properties realvalued model retained real values replaced limited number discrete values 31 Description model In model values sibling nodes distributed value parent The rationale distribution descendants position away unlikely signiﬁcantly different value Dependence values nodes descendants results dependence tween values leaves departure Section 2s assumption independent leaf values Negamax notation longer branching factor constant According model game tree constructed root A socalled auxiliary value 0 assigned root auxiliary values descendants distributed The process repeated recursively descendant maximum depth dmax required given experiment reached It noted auxiliary values generally respect minmax rule They serve establish desired relation values leaves Such model similar Naus incremental 11 Ngames 12 model Scheucher Kaindl 18 earlier analyses alphabeta algorithm 5715 The auxiliary values leaves tree depth d dmax considered true values True values depths d dmax obtained performing minimax starting true values leaves In experiments minimax search depth d static heuristic values obtained corrupting true values depth d error representing fallibility heuristic evaluation function The error lowest ply search depth d called static error Backedup heuristic values obtained performing minimax static heuristic values The procedure illustrated Fig 2 The error normally distributed noise Normal distribution chosen usual practice useful information error available Two types error observed node position error difference true heuristic value node error probability choosing wrong position error nodes descendants The model number parameters bbranching factor type distribution nodes auxiliary values auxiliary value parent σvstandard deviation distribution Fig 2 Construction game trees 624 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 3 Parameters model m mthe interval nodes values lie σestandard deviation static position error Some parameters illustrated Fig 3 curve represents probability density function distribution sibling nodes auxiliary values case normal µ auxiliary value parent 32 Experimental results We investigate behavior minimax randomly generating game trees observing position error The size game tree exceeds bd computations large branching factors depths timeconsuming We conducted experiments b 2 b 5 The results similar cases exception ﬁrst experiment Table 1 Fig 4 results b 2 presented Only depths 10 observations greater depths yield additional insight Only relative values σv m σe important σv ﬁxed 1 In Table 1 Fig 4 results normal distribution nodes values m σe 02 presented The parameters chosen arbitrarily examined later value parameter varied kept unchanged The results averaged 10000 game trees b 2 2500 game trees b 5 For tree 10 repetitions randomly generated noisy values This case experiments paper exception Section 62 Average position error deﬁned sum absolute differences true heuristic value root divided number trees Average error deﬁned number trees nonoptimal chosen root divided number trees Both position error root respect depth search given Table 1 Fig 4 Move error important choice Table 1 Position error initial parameter settings d 0 1 2 3 4 5 6 7 8 9 10 b 2 b 5 Position error Move error Position error Move error 01599 01588 01549 01521 01501 01478 01460 01438 01415 01387 01361 00361 00356 00350 00339 00340 00335 00330 00325 00315 00314 01586 01545 01457 01403 01344 01283 01242 01177 01138 01108 01051 01008 00959 00938 00908 00852 00809 00789 00764 00749 00746 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 625 Fig 4 Position error initial parameter settings Fig 5 Types distribution nodes auxiliary values auxiliary value parent Table 2 Move error different distributions nodes auxiliary values d 1 2 3 4 5 6 7 8 9 10 Normal 00361 00356 00350 00339 00340 00335 00330 00325 00315 00314 Triangular Uniform 00366 00355 00351 00347 00338 00340 00332 00332 00317 00315 00359 00352 00350 00345 00338 00339 00336 00331 00326 00314 purpose minimax Also behavior types error experiments similar error presented rest section As seen Table 1 Fig 4 increased depth search generally beneﬁcial Table 2 Fig 6 choice distribution nodes auxiliary values affects error root respect depth search Normal triangular uniform distributions tested investigate effect varying bias meanthey shown Fig 5 The parameters remain unchanged b 2 m σe 02 As seen Table 2 Fig 6 choice distribution little effect behavior error Apparently matters nodes values similar value parent exact shape similarity 626 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 6 Move error different distributions nodes auxiliary values Table 3 Move error different values m m 1 d 1 2 3 4 5 6 7 8 9 10 02040 01995 01952 01928 01886 01861 01837 01797 01776 01766 m 2 00820 00791 00779 00761 00748 00742 00725 00691 00704 00677 m 3 00500 00482 00478 00472 00458 00462 00436 00437 00440 00430 m 4 00383 00386 00388 00367 00369 00364 00351 00348 00352 00342 m 5 00371 00371 00365 00365 00357 00352 00343 00336 00334 00327 m 00361 00356 00350 00339 00340 00335 00330 00325 00315 00314 Fig 7 Move error different values m The initial setting m means nodes values unconstrained good bad position better worse respectively In real games position values unbounded checkmate chess maximum minimum number pieces Othello In model bound implemented simply setting nodes values fall outside m m interval m m Table 3 Fig 7 interval nodes values lie affects error root respect depth search The M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 627 d Table 4 Move error different values σe σe 1 01682 01619 01532 01455 01373 01308 01224 01172 01095 01019 1 2 3 4 5 6 7 8 9 10 σe 05 00914 00873 00847 00819 00788 00756 00735 00723 00685 00661 σe 02 00361 00356 00350 00339 00340 00335 00330 00325 00315 00314 σe 01 00191 00191 00191 00185 00186 00185 00187 00182 00184 00180 Fig 8 Move error different values σe parameters remain unchanged b 2 distribution nodes values values unconstrained normal σe 02 As seen Table 3 Fig 7 pathology present regardless value m However m affects magnitude error m small error large nodes values relatively closer makes position error likely change order When m increases relatively small value 4 results similar m increases 5 virtually identical Table 4 Fig 8 standard deviation static position error affects error root respect depth search The parameters remain unchanged b 2 distribution nodes values normal m As seen Table 4 Fig 8 increased depth search beneﬁcial σe The beneﬁt pronounced σe small expected game tree search beneﬁcial perfect evaluation function available We conclude model minimax pathological wide range parameter settings 4 Mathematical explanation In section attempt mathematical explanation experimental observations Section 3 For simplicity analysis assume difference true values sibling nodes 1 leads 628 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 9 Model mathematical explanation Fig 10 Probability density functions heuristic values pair sibling nodes ply 0 parent model sketched Fig 9 Hopefully simpliﬁcation affect qualitative conclusions analysis Reasons case discussed later section Also b 2 considered A node ply 1 descendants heuristic values random variables Li lower value Hi higher value means µi L µi H Due normally distributed error static heuristic values sibling nodes distributed normally means µ0L µ0H standard deviation σe Their means nodes true values Their probability density functions given Eqs 4 f0Lx 1 σe 2π xµ0L2 2σ 2 e e f0H x xµ0H 2 2σ 2 e e 1 σe 2π 4 At max ply 1 value node random variable MAXi1 maxLi Hi probability density function calculated according Eq 5 xcid6 xcid6 fi1MAXx fiH xP L x fiLxP H x fiH x fiLl dl fiLx fiH h dh 5 Probability density functions L0 H0 MAX1 shown Fig 10 Unlike L0 H0 MAX1 distributed normally Its probability density function obtained numerical integration M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 629 As seen Fig 10 curve parent narrower curves descendents meaning variance parent smaller Because difference true values sibling nodes constant difference means heuristic values sibling nodes constant Therefore smaller variance means smaller probability lowervalued sibling position error highervalued sibling smaller error If mean parent equal mean higher descendant smaller variance mean smaller position error Since mean parent somewhat larger necessarily case examined later Let ﬁrst explain causes reduction variance If interaction descendants fi1MAX equal fi H Since true cases considered When MAXi1 large MAXi1 µi H likely reason Hi large Hi µi H The likely reason Li large Li µi H This marked Fig 10 When MAXi1 small MAXi1 µi H caused Hi small Hi µi H compensated Li larger Hi Hi Li µi H The corrective effect Li case greater disturbing effect case impact Li likely beneﬁcial harmful At min ply probability density function calculated according Eq 6 fi1MINx fiLxP H x fiH xP L x fiLx fiH h dh fiH x fiLl dl 6 cid6 cid6 x x Probability density functions ply 0 given Eqs 4 probability density function ply calculated repeatedly Eqs 5 6 This shown Fig 11 µi H µi L 1 As seen Fig 11 higher ply narrower curve probability density function nodes heuristic backedup value This means variance heuristic values consequently error decrease depth search True values cases Fig 11 0 seen heuristic values exhibit slight positive bias accrued lowest ply search This consistent observations Sadikov et al 17 Let MEi1 error ply 1 An erroneous ply 1 chosen values pair sibling nodes ply switched Li Hi MEi1 calculated according Eq 7 cid7 cid6 cid6 cid8 MEi1 P Li Hi fiH h fiLl dl dh h 7 Fig 11 Probability density functions values nodes plies 0 10 630 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 12 Move error root function depth search dashed line shows Monte Carlo experimental results Fig 13 Position error root function depth search dashed line shows Monte Carlo experimental results How error changes increasing depth search shown Fig 12 MEd error root depth search d µi H µi L 1 σe 1 The solid line results calculations according Eq 7 The dashed line shows results Monte Carlo experiments model section difference true values sibling nodes 1 They serve verify correspondence mathematical analysis random experiments As seen Fig 12 increased depth search reduces error root Let ti true value node ply fi E probability density function heuristic erroneous value Ei Position error PEi average absolute difference ti Ei calculated according Eq 8 cid6 PEi ti xfiEx dx 8 How position error changes increasing depth search shown Fig 13 PEd position error root depth search d µi H µi L 1 σe 1 The solid line results calculations according Eq 8 The dashed line results Monte Carlo experiments As seen Fig 13 increased depth search reduces position error root accordance experimental results Section 3 This means bias observed Fig 10 Fig 11 large cause position error behave pathologically probably alternating max min plies cause alternating positive negative bias To verify hypothesis behavior position error tree max plies investigated The results shown Fig 14 µi H µi L 1 σe 1 As seen Fig 14 error pathological position error behaves pathologically d 3 This result similar Sadikov et al 17 observed experiments king rook versus king chess endgame trees consisted max min plies The reason discrepancy clear In analysis presented section constant difference true values sibling nodes assumed However game trees real games game trees experiments Section 3 difference true values sibling nodes constant The simpliﬁcation analysis problematic appear This investigate search single game tree different depths M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 631 Fig 14 Move error left position error right root function depth search tree max plies matter difference true values sibling nodes varies tree variation searches depths Hence difference affects error similar fashion searches consequently affect pathology 5 Veriﬁcation chess program Whether results Sections 3 4 bearing real games veriﬁed comparing model proposed Section 3 real games However difﬁcult obtain true values gametree nodes sufﬁciently complex game What use values returned gameplaying program The game chosen chess program Crafty 6 With ELO rating 2616 highestrated opensource chess program according SSDF 20 Being opensource requirement program needed modiﬁed experiment The comparison model Crafty based values leaves Distributions leaf values difﬁcult compare practice comparison performed relations static values nodes descendants Crafty auxiliary values nodes descendants model The values leaves determined relation cases One tenth 45 million positions visited course game played Crafty randomly chosen All positions generated gametree search considered positions actually occurring game The differences static value node static values descendants computed Determining static values involve quiescence search The results discretized number cases interval counted In Fig 15 results shown number cases difference lies interval lower upper 1 cases omitted interesting interval seen clearly extremes 2278 2058 As seen Fig 15 nodes static values lie close static value parent Their distribution resembles normal This relation corresponds reasonably relation auxiliary values nodes model default distribution normal Since Section 3 shows exact type distribution crucial feel results Crafty considered conﬁrmation relevance model presented Section 3 real games 6 When pathology occur If twovalue model pathological shown Section 2 realvalue model exhibit pathology certain conditions They aspire model error behavior minimax gameplaying programs The presence pathology complete absence indication lacks fundamental property In section look apparent contradiction models search conditions pathology appear realvalue model There main differences twovalue model described Section 2 realvalue model described Section 3 632 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 15 Distribution differences static value node parent 1 In twovalue model value leaf game tree independent leaves values realvalue model leaves values independent nodes auxiliary values distributed auxiliary value parent 2 In twovalue model error measured probability mistaking loss win vice versa set value lowest ply search regardless depth search realvalue model error measured position error probability distribution lowest ply search regardless depth search error guaranteed later section 3 And course model uses values real values 61 Independentvalue model If ﬁrst difference removed game tree constructed simply setting leaves values independently instead auxiliary intermediate values rest procedure follows description Section 3 We model independentvalue model opposed dependentvalue model described Section 3 Table 5 Fig 16 position error root respect depth search independentvalue model b 2 distribution leaves values time 0 instead parents auxiliary values normal m σe 02 Table 5 Position error root independent value model d 0 1 2 3 4 5 6 7 8 9 10 Position error Move error 01598 01472 01233 01153 01041 00997 00944 00918 00895 00876 00862 02952 02916 02863 02824 02744 02720 02686 02635 02578 02577 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 633 Fig 16 Position error root independentvalue model As seen Table 5 Fig 16 independentvalue model chosen set parameters pathological Experiments different sets parameters yielded pathology Considering models independent values described Section 2 known pathological result hand somewhat surprising On hand explanation Section 4 applies independentvalue model Apparently twovalue models sufﬁciently different realvalue models pathology imply pathology independentvalued 62 Granularity In models real numbers true heuristic values principle inﬁnite number Since digital computers use real values true mathematical sense simulations real numbers approximated highdensity ﬂoatingpoint numbers But know gameplaying pro grams usually use heuristic values smaller set discrete values represented range integers Therefore real values completely realistic modeling typical game playing programs We investigate difference affects main ﬁndings To issue granularity affects pathology number possible heuristic values grains models restricted The granularity true values set equal granularity heuristic values errors occur best possible evaluation function simply coarse grained differentiate similar true values The effect granularity turned strongly tied branching factor Table 6 Fig 17 number grains needed avoid pathology respect branching factor dependent independentvalue model distribution nodes values dependentvalue model normal independentvalue model uniform dmax 6 m σe 02 As seen Table 6 Fig 17 dependentvalue model robust sense low granularity pathological Evaluation functions modern chess programs ranges thousand values programs likely pathological low granularity The independentvalue model sensitive granularity granularity required avoid pathology gb exponential branching factor Eq 9 gives leastsquareerror approximation experimental data gb 75084 13208b 05169 9 634 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Table 6 Required granularity avoid pathology dependent independentvalue model b 2 3 4 5 6 7 8 9 10 Dependentvalue model Independentvalue model 10 15 19 19 19 19 19 19 19 13 17 22 29 39 52 71 90 121 Fig 17 Required granularity avoid pathology dependent independentvalue model The average branching factor chess estimated 30 40 g30 31670 g40 511706 game chesslike branching factor typical chess program granularity independent leaf values probably pathological This result similar Nau 12 predicted heuristic evaluation function returns minimum maximum values nonzero probability branching factor large pathology ensue With introduction granularity value model returned nonzero probability Scheucher Kaindl 18 investigated issue granularity Their conclusion effect long small evaluation function express knowledge game In experiments case granularity heuristic values equal granularity true values pathology appeared Scheucher Kaindls encounter work based assumption simple chess evaluation function requires 84 distinct values model dependentvalued experiments suggest fewer distinct values required pathology appear 63 Constant static error In experiments point searches different depths performed static position error constant This reasonable assumption position error directly models fallibility heuristic M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 635 Table 7 Static error dependent independentvalue model d 1 2 3 4 5 6 7 8 9 10 Dependentvalue model Independentvalue model 00369 00373 00375 00376 00384 00396 00408 00432 00486 00628 02952 02602 02249 01946 01636 01375 01130 00936 00760 00628 Fig 18 Static error dependent independentvalue model evaluation function generally accepted heuristic evaluation function performs equally plies horizon single search However unreasonable assumption error lowest ply search static error constant Table 7 Fig 18 static error respect depth search dependent independent value model b 2 distribution nodes values normal m σe 02 Perhaps surprisingly seen Table 7 Fig 18 static error constant In dependent value model increases depth search independentvalue model decreases depth search Differences static error searching different depths particularly large independent value model Why static error changes depth search explained observing average difference true values sibling nodes successive plies Table 8 Fig 19 results dependent independentvalue model b 2 distribution nodes values normal m σe 02 dmax 10 As seen Table 8 Fig 19 behavior average difference true values sibling nodes opposite behavior static error shown Table 7 Fig 18 This surprising observed small differences backedup values sibling nodes cause large errors vice versa 636 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Table 8 The average difference true values sibling nodes successive plies game tree dmax 10 dependent independentvalue model Ply 9 8 7 6 5 4 3 2 1 0 Dependentvalue model Independentvalue model 19313 19191 19040 18925 18763 18231 17580 16464 14638 11286 01711 02132 02622 03232 04016 04913 06108 07467 09297 11286 Fig 19 The average difference true values sibling nodes successive plies game tree dmax 10 dependent independentvalue model Why true backedup values sibling nodes dependentvalue model statistically apart higher plies explained analyzing relation auxiliary values pair sibling nodes corresponding true backedup values Consider pair nonleaf sibling nodes dependentvalue game tree Let aL aH auxiliary values sibling nodes aL cid1 aH Let L H corresponding true backedup values random variables acquire values populations possible subtrees rooted sibling nodes The means L H µL µH Both subtrees rooted sibling nodes constructed random mechanism starting root values aL aH µH µL aH aL Consider difference D H L The expected value D µD equal µH µL aH aL This follows fact expected value difference random variables equal difference expected values variables This property demonstrated Eq 10 X Y independent random variables probability density functions fX fY cid6 cid6 µXY x yfXxfY y dx dy M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 637 cid6 cid6 cid6 cid6 xfXxfY y dx dy yfXxfY y dx dy cid6 cid7 cid6 cid8 cid6 cid7 cid6 cid8 xfXx fY y dy dx yfY y fXx dx dy cid6 cid6 xfXx1 dx yfY y1 dy µX µY 10 Regarding probability error parameter matters absolute difference true values sibling nodes D H L The expected value D greater µD easily seen Eq 11 cid6 cid6 µD xfDx dx cid1 xfDx dx µD 11 So auxiliary values pair sibling nodes corresponding true backedup values apart average This illustrated Fig 20 Auxiliary values plies distributed equally average difference auxiliary values pair sibling nodes plies Auxiliary values ply 0 true values backedup true values ply 1 higher apart average true values ply 0 What makes µD larger successive ply enlarging effect cumulative Why true backedup values sibling nodes independentvalue model closer higher plies explained follows The values leaves distributed interval Applying maximum groups results values concentrated smaller interval Applying minimum groups values new interval results values concentrated smaller interval This illustrated Fig 21 The effect average difference values sibling nodes static error compensated adjusting static position error achieve constant static error dependentvalue model increased shallower searches independentvalue model decreased shallower searches Table 9 Fig 22 error root respect depth search dependent independentvalue model constant static error b 2 distribution nodes values normal m As seen Table 9 Fig 22 constant static error strengthens beneﬁts minimax dependentvalue model produces pathology independentvalue model This consistent previous Fig 20 Nodes true backedup values higher tree apart dependentvalue model 638 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Fig 21 Explanation nodes backedup values higher tree closer independentvalue model Table 9 Move error root dependent independentvalue model constant static error d 1 2 3 4 5 6 7 8 9 10 Dependentvalue model Independentvalue model 00628 00614 00605 00599 00557 00523 00494 00476 00418 00314 00628 00734 00914 01069 01303 01501 01756 02064 02317 02577 Fig 22 Move error root dependent independentvalue model constant static error research Beal 3 Bratko Gams 4 Nau 1112 concerned twovalue models But noted twovalue models error deﬁned somewhat differently error realvalue model M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 639 Table 10 Twovalue error root lowest ply search dependent independentvalue model d 0 1 2 3 4 5 6 7 8 9 10 Dependentvalue model Independentvalue model Root 00486 00469 00470 00466 00465 00453 00445 00435 00433 00422 00414 Static 00486 00321 00328 00264 00268 00227 00232 00210 00211 00199 00202 Root 02072 01987 01770 01663 01551 01465 01433 01411 01364 01293 01268 Static 02072 01893 01873 01655 01563 01316 01203 00955 00865 00700 00592 Fig 23 Twovalue error root static twovalue error dependent independentvalue model 64 Conversion values A realvalue model reduced twovalue model converting realnumber values losses wins To threshold established values considered losses values wins If probability loss root 05 threshold median backedup real value root Table 10 Fig 23 twovalue error probability incorrect evaluation position root twovalue error lowest ply search static twovalue error respect depth search dependent independentvalue model b 2 distribution nodes values normal m σe 02 As seen Table 10 Fig 23 dependent independentvalue model pathological terms twovalue error Note error root larger static error models mean models pathological merely means positions higher plies difﬁcult evaluate losses wins lower plies If static error constant increase error minimaxing course lead pathology But observed Table 10 Fig 23 static twovalue error constant means experiment compared results previous research outlined Section 2 In order comparison possible static position error adjusted static twovalue error constant Table 11 Fig 24 twovalue error root respect depth search 640 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 Table 11 Twovalue error root dependent independent value model constant static twovalue error d 0 1 2 3 4 5 6 7 8 9 10 Dependentvalue model Independentvalue model 00202 00306 00277 00354 00349 00391 00390 00436 00402 00438 00414 00592 00624 00609 00688 00687 00818 00851 00991 01069 01212 01268 Fig 24 Twovalue error root dependent independentvalue model constant static twovalue error dependent independentvalue model adjustment b 2 distribution nodes values normal m As seen Table 11 Fig 24 constant static twovalue error produces pathology dependent independentvalue model pathology stronger independentvalue model This result inter preted indication pathology exist dependentvalue model However constant static twovalue error assumption experiment appropriate A constant static twovalue error assumed twovalue model Section 2 model true values real numbers static twovalue error decrease depth The reason lowest ply shallower searches nodes values average closer threshold separating losses wins twovalue error likely occur nodes This illustrated Fig 25 darker area represents higher probability twovalue error Scheucher Kaindl 18 investigated relation nodes heuristic values twovalue error greater One key points paper precisely static twovalue error called simply error consider multiple types error constant If static twovalue error shallower searches larger deeper searches explains basic twovalue model described Section 2 pathological model heuristic error realvalue game appropriately This way modeling error suitable twovalue game values playing real games like chess successfully demonstrated Scheucher Kaindl M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 641 Fig 25 Why static twovalue error constant 7 Conclusion In paper investigated question minimax behaves pathologically game trees true values positions real numbers Our general conclusion agreement practice gameplaying programs different earlier theoretical analyses authors studied game trees true values positions losses wins We constructed minimax model game tree nodes realnumber values nodes values distributed value parent The pathology present conﬁguration parameters tested A mathematical explanation minimax performs better increased depth search game trees ones built according model provided The reason minimummaximum pairs random variables smaller variance variables If random variables represent error reduced minimaxing The means heuristic values slight bias respect true values alternating min max plies bias alternates negative positive preventing heuristic values moving far away true values Extending theoretical analysis trees branching larger general distribution nodes values value parent left work The assumption sibling nodes values normally distributed value parent veriﬁed Crafty chess program Static values sibling nodes program turned close distribution parents value similar normal This considered conﬁrmation model corresponds situation chess playing programs Considering pathology common twovalue models tried ﬁnd conditions appears realvalue models No pathology terms position error By default static position error constant experiments If instead static error set constant model pathological model independent leaves values behave pathologically This shows similarity nodes close game tree eliminate pathology In order better model gameplaying programs limited number discrete values assigned positions instead real values Here existence pathology depends granularity heuristic values branching factor The chances pathology increase branching factor decrease granularity In dependentvalue model 19 values sufﬁcient avoid pathology experiments In experi ments reach branching factors 10 required granularity rise b 4 In dependentvalue model required granularity increases fast branching factor program playing game described model require ﬁnegrained evaluation function If realvalue game trees converted twovalue game trees twovalue error measured Depending assumption static heuristic error dependent independentvalue models pathological nonpathological One assumption static position error noise applied position values independent 642 M Luštrek et al Artiﬁcial Intelligence 170 2006 620642 depth search The assumption static twovalue error probability mistaking lost position won vice versa independent depth search We refer assumptions assumption 1 assumption 2 respectively Both assumptions reasonable generally true real value game tree Assumption 1 produce pathology appropriate realvalue game trees The basic twovalue model Beal 2 makes assumption 2 causes pathology This assumption appropriate realvalue game trees It suitable twovalue game trees playing reallife games twovalue evaluations good idea discussed Scheucher Kaindl 18 Acknowledgement This work supported Slovenian Ministry Science Education We like thank Alek sander Sadikov Mihael Perman Dana S Nau helpful suggestions discussion References 1 I Althöfer Generalized minimax algorithms better error correctors minimax DF Beal Ed Advances Computer Chess vol 5 NorthHolland Amsterdam 1989 pp 265282 2 DF Beal An analysis minimax MRB Clarke Ed Advances Computer Chess vol 2 Edinburgh University Press Edinburgh 1980 pp 103109 3 DF Beal Beneﬁts minimax search MRB Clarke Ed Advances Computer Chess vol 3 Pergamon Press 1982 pp 1724 4 I Bratko M Gams Error analysis minimax principle MRB Clarke Ed Advances Computer Chess vol 3 Pergamon Press 1982 pp 115 5 SH Fuller JG Gaschnig JJ Gillogly An analysis alphabeta pruning algorithm Technical Report Carnegie Mellon University 1973 6 R Hyatt Home page httpwwwcisuabeduinfofacultyhyatthyatthtml 20040421 7 DE Knuth RW Moore An analysis alphabeta pruning Artiﬁcial Intelligence 6 4 1975 293326 8 M Luštrek Minimax pathology realnumber minimax model B Zajc A Trost Eds Proceedings Thirteenth International Electrotechnical Computer Science Conference vol B Portorož Slovenia Slovenian Section IEEE Ljubljana Slovenia 2004 pp 137 140 9 M Luštrek M Gams Minimaks napaka pri ocenjavanju položajev M Bohanec B Filipiˇc M Gams D Trˇcek B Likar Eds Proceedings A 6th International MultiConference Information Society IS 2003 2003 pp 8992 10 DS Nau Quality decision versus depth search game trees PhD thesis Duke University 1979 11 DS Nau An investigation causes pathology games Artiﬁcial Intelligence 19 3 1982 257278 12 DS Nau Decision quality function search depth game trees J Assoc Comput Mach 30 4 1983 607708 13 DS Nau Pathology game trees revisited alternative minimaxing Artiﬁcial Intelligence 21 1 2 1983 221224 14 DS Nau How worse working harder The nature pathology game trees Proceedings 1983 IEEE International Conference Systems Man Cybernetics 1983 15 MM Newborn The efﬁciency alphabeta search trees branchdependent terminal node scores Artiﬁcial Intelligence 8 2 1977 137153 16 J Pearl On nature pathology game searching Artiﬁcial Intelligence 20 4 1983 427453 17 A Sadikov I Bratko I Kononenko Search vs knowledge Empirical study minimax KRK endgame HJ van den Herik H Iida E Heinz Eds Advances Computer Games Many Games Many Challenges Kluwer Academic Dordrecht 2003 pp 3344 18 A Scheucher H Kaindl Beneﬁts multivalued functions minimaxing Artiﬁcial Intelligence 99 2 1998 187208 19 G Schrüfer Presence absence pathology game trees DF Beal Ed Advances Computer Chess vol 4 Pergamon Press 1986 pp 101112 20 B Sjörgen Swedish Chess Computer Association website httpw1859teliacomu85924109ssdf 20040421