Artiﬁcial Intelligence 173 2009 14061423 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Encoding deductive argumentation quantiﬁed Boolean formulae Philippe Besnard Anthony Hunter b Stefan Woltran c IRITCNRS Universitè Paul Sabatier 118 rte Narbonne 31062 Toulouse France b Department Computer Science University College London Gower Street London WC1E 6BT UK c Institute Information Systems 1842 Technische Universität Wien Favoritenstrasse 911 1040 Vienna Austria r t c l e n f o b s t r c t There number frameworks modelling argumentation logic They incorporate formal representation individual arguments techniques comparing conﬂicting arguments A common assumption logicbased argumentation argument pair cid3cid2 αcid4 cid2 minimal subset knowledgebase cid2 consistent cid2 entails claim α Different logics provide different deﬁnitions consistency entailment different options argumentation Classical propositional logic appealing option argumentation computational viability generating argument issue To better explore issue use quantiﬁed Boolean formulae characterise approach argumentation based classical logic 2009 Elsevier BV All rights reserved Article history Received 27 January 2009 Received revised form 12 May 2009 Accepted 25 June 2009 Available online 27 June 2009 Keywords Argument systems Argumentation Classical logic Inconsistency Quantiﬁed Boolean formulae Conﬂicting knowledge 1 Introduction Argumentation vital aspect intelligent behaviour humans Consider diverse professionals politicians journalists clinicians scientists administrators need collate analyse information looking pros cons consequences importance attempting understand problems decisions There range proposals logicbased formalisations argumentation reviews 81331 These proposals allow representation arguments claim counterargument relationships arguments In number key proposals argumentation argument pair ﬁrst item pair consistent set minimal consistent set formulae proves second item formula example 15715 242630 Hence different underlying logics provide different deﬁnitions consistency entailment different options deﬁning notion argument Since classical logic advantages representing reasoning knowledge including syntax proof theory semantics intuitive language incorporating negation conjunction disjunction implication interesting promising choice underlying logic argumentation However computationally challenging generate arguments knowledgebase classical logic If consider problem abduction problem seek existence minimal subset set formulae implies consequent problem second level polynomial hierarchy 23 Furthermore given knowledgebase cid4 formula α shown ascertaining subset cid2 cid4 cid3cid2 αcid4 argument cid2 consistent cid2 entails α subset cid2 entails α cid5 p 2 complete decision problem 29 Corresponding author Email address AHuntercsuclacuk A Hunter 00043702 matter 2009 Elsevier BV All rights reserved doi101016jartint200906006 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1407 Beyond observations remains range important computational complexity questions So better understand use classical logic argumentation particular understand computational properties use quantiﬁed Boolean formulae QBFs characterise approach argumentation based classical logic This characterisation obtain computational complexity results terms upper bounds A reason characterise logicbased argumentation form QBFs harness implementa tions QBF solvers develop prototype implementations logicbased argumentation There numerous QBF solvers available 28 references encodations present paper straightforwardly handled 2 Preliminaries 21 Logical argumentation In section review existing proposal logicbased argumentation 7 We consider classical propositional language We use α β γ denote formulae cid4 cid2 cid8 denote sets formulae Deduction classical propo sitional logic denoted symbol cid5 deductive closure Th Thcid2 α cid2 cid5 α For following deﬁnitions ﬁrst assume knowledgebase cid4 ﬁnite set formulae use cid4 We assume subset cid4 given enumeration cid3α1 αncid4 elements canonical enumeration This demanding constraint In particular constraint satisﬁed impose arbitrary total ordering cid4 Importantly order meaning meant represent respective impor tance formulae cid4 It convenient way indicate order assume formulae subset cid4 conjoined formula logically equivalent subset The paradigm approach large repository information represented cid4 arguments constructed arbitrary claims Apart information understood declarative statements priori restriction contents pieces information repository complex possible Therefore cid4 expected consistent It need case single formula cid4 consistent The framework adopts common intuitive notion argument Essentially argument set relevant formulae classically prove claim claim Each claim represented formula Deﬁnition 1 An argument pair cid3cid2 αcid4 1 cid2 cid4 2 cid2 cid7cid5 3 cid2 cid5 α 4 cid2cid9 cid2 cid2cid9 cid5 α We cid3cid2 αcid4 argument α We α claim consequent argument cid2 support argument cid2 support α Example 1 Let cid4 α α β γ β γ δ δ β α γ Some arguments cid2 cid2 cid2 cid2 cid3 cid3 α α β β α α α β α β γ δ γ cid3 cid3 By monotonicity classical logic following equivalent characterisation easily follows Proposition 1 A pair cid3cid2 αcid4 argument iff satisﬁes 13 Deﬁnition 1 4 cid9 φ cid2 cid2 φ cid7cid5 α Arguments independent In sense encompass possibly form equivalence To clarify requires deﬁnitions follows Deﬁnition 2 An argument cid3cid2 αcid4 conservative argument cid3cid8 βcid4 iff cid2 cid8 β cid5 α Example 2 cid3α α βcid4 conservative cid3α α β βcid4 Deﬁnition 3 An argument cid3cid2 αcid4 strictly conservative argument cid3cid8 βcid4 iff cid2 cid8 β cid5 α cid8 cid7 cid2 α cid7cid5 β Some arguments directly oppose support amounts notion undercut Deﬁnition 4 An undercut argument cid3cid2 αcid4 argument cid3cid8 φ1 φncid4 φ1 φn cid2 1408 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 Example 3 Let cid4 α α β γ γ α Then cid3γ γ α α α βcid4 undercut cid3α α β βcid4 A conservative undercut cid3α α β βcid4 cid3γ γ α αcid4 Deﬁnition 5 cid3cid8 βcid4 maximally conservative undercut cid3cid2 αcid4 iff cid3cid8 βcid4 undercut cid3cid2 αcid4 undercuts cid3cid2 αcid4 strictly conservative cid3cid8 βcid4 The value following deﬁnition canonical undercut need canonical undercuts account This means justiﬁably ignore potentially large number noncanonical undercuts Deﬁnition 6 An argument cid3cid8 φ1 φncid4 canonical undercut cid3cid2 αcid4 iff maximally conservative undercut cid3cid2 αcid4 cid3φ1 φncid4 canonical enumeration cid2 The result central Proposition 2 See Theorem 54 7 A pair cid3cid8 φ1 φncid4 canonical undercut cid3cid2 αcid4 iff undercut cid3cid2 αcid4 cid3φ1 φncid4 canonical enumeration cid2 In words canonical undercuts cid3cid2 αcid4 given arguments form cid3cid8 φ1 φncid4 cid3φ1 φncid4 canonical enumeration cid2 Later need refer possible supports canonical undercuts argument We introduce following concept Deﬁnition 7 For cid3cid2 αcid4 deﬁne UndercutSupportscid3cid2 αcid4 set supports cid4 cid5 cid8 cid3cid8 βcid4 canonical undercut cid3cid2 αcid4 We shall use notation UndercutSupportscid3cid2 αcid4 later deﬁning suitable representations argument trees Using Proposition 2 alternatively characterise set UndercutSupportscid3cid2 αcid4 follows Proposition 3 For cid3cid2 αcid4 cid3φ1 φncid4 canonical enumeration cid2 cid4 cid6 cid7 cid3cid2 αcid4 cid8 cid3 cid2 cid8 φ1 φn UndercutSupports argument cid5 Next recall notion argument tree following 7 introduce succinct notion represent argument trees suitable later purposes An argument tree describes ways argument challenged counterarguments initial argument challenged recursively Deﬁnition 8 An annotated tree tree node pair cid3cid2 βcid4 An argument tree α annotated tree 1 node argument root argument α 2 node cid3cid2 βcid4 ancestor nodes cid3cid21 β1cid4 cid3cid2n βncid4 cid2 subset cid21 cid2n 3 children nodes node N consist canonical undercuts N obey 2 A complete argument tree deﬁned replaced item 3 The deﬁnition argument tree ensures argument branch introduce formula support ancestor arguments This meant avoid making explicit undercuts simply repeat reasoning pattern switching role formulae illustrated Example 5 As notational convenience examples argument trees cid2 symbol denote consequent argument argument canonical undercut ambiguity arises proven 7 Example 4 Given cid4 α α β γ γ α γ α following argument tree cid2 α α β β cid3 cid6 cid2 γ γ α cid7cid3 α α β cid16 cid17 cid6 cid2 γ γ α cid7cid3 α α β Note undercuts equivalent They count arguments based different items database items turn logically equivalent P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1409 Example 5 Let cid4 α α β γ α γ cid3 cid2 α α β β cid2 cid2 cid3 γ γ α cid2 cid3 α γ α cid2 This argument tree undercut undercut actually making exactly point α γ incompatible undercut modus tollens instead modus ponens Example 6 Given cid4 α β α γ β δ α β consider following tree cid2 α β α γ β δ γ δ cid3 cid2 α α β β cid3 cid16 cid17 cid2 β α β α cid3 This argument tree children nodes maximally conservative undercuts The ﬁrst undercut essentially argument second undercut rearranged form relying α β incompatible assume conclude doesnt hold If replace maximally conservative undercut cid3α β cid2cid4 obtain argument tree Notably ﬁnite number argument trees root argument claim α formed cid4 trees ﬁnite branching ﬁnite depth ﬁnite tree property For purposes paper require formal representation argument trees It makes use fact consequences nodes root argument tree determined direct ancestor mentioned introducing cid2 To end node set formulae argument parent function determines structure tree Deﬁnition 9 A parent function p k cid2 1 partial function 1k 1k p j undeﬁned j 1 p j deﬁned p j j 1 j cid3 k p parent function sequence A cid3cid21 cid2kcid4 subsets cid4 p parent function k pi p j implies cid2i cid7 cid2 j 1 j cid3 k A tuple form triple cid3α A pcid4 α formula A sequence subsets cid4 p parent function A Given tuple form cid3α cid3cid21 cid2kcid4 pcid4 deﬁne 1 cid3 cid3 k associated pair Ai follows A1 cid3cid21 αcid4 1 Ai cid3cid2i φ1 φncid4 cid3φ1 φncid4 canonical enumeration cid2pi Tuple forms alternative way denote annotated trees Intuitively A collects supports trees nodes α claim root node parent function p links node parent node determines structure tree This feasible p deﬁned node root links previous element A condition pi p j implies cid2i cid7 cid2 j cid7 j avoids duplicate children nodes The concept tuple forms best illustrated examples Example 7 First consider tree Example 4 That annotated tree represented tuple form cid3β cid3cid21 cid22 cid23cid4 pcid4 cid21 α α β cid22 γ γ α cid23 γ γ α p deﬁned p2 p3 1 An alternative way represent annotated tree exchange sets cid22 cid23 Conversely given tuple form cid3β cid3cid21 cid22 cid23cid4 pcid4 derive annotated tree follows The nodes given A1 A2 A3 deﬁnition p A2 A3 children root node A1 Example 8 As second example consider Example 5 The way achieve tuple form tree cid3β cid3cid21 cid22 cid23cid4 pcid4 cid21 α α β cid22 γ γ α cid23 α γ α p deﬁned p2 1 p3 2 We formally relations Deﬁnition 10 We deﬁne mapping TreeForm tuple forms graphs follows For t cid3α cid3cid21 cid2kcid4 pcid4 nodes TreeFormt given set Ai 1 cid3 cid3 k pair Ai A j edge TreeFormt iff p j 1 j cid3 k 1410 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 Lemma 1 For tuple form t TreeFormt annotated tree Proof TreeFormt tree graph connected ignoring direction edges exactly edge vertices By Deﬁnition 10 Ai A j edge iff p j 1 j cid3 k Ie Ap j A j j 1k exhausts edges Since p parent function TreeFormt k 1 edges There remains TreeFormt connected directions edges ignored This easily follows fact node TreeFormt connected A1 true 1 j cid3 k exists n pn j 1 p parent function In short TreeFormt tree It annotated tree Deﬁnition 10 trivially shows nodes TreeFormt pairs Ai 1k cid3 In view lemma given tuple form t TreeFormt tree associated t As t represents tree TreeFormt We characterise argument trees complete argument trees tuple forms This result valuable later characterising argument trees QBFs We need technical notation Deﬁnition 11 Given tuple form cid3α cid3cid21 cid2kcid4 pcid4 deﬁne 1 cid3 cid3 k p ancestors pni exists m cid2 n cid2 1 pmi 1 cid4 cid5 p set indices cid2i s Lemma 2 A tuple form cid3α cid3cid21 cid2kcid4 pcid4 represents argument tree iff 1 cid3cid21 αcid4 argument 2 1 cid3 k cid2i cid7 3 1 cid3 k cid2i UndercutSupports Api hold jpi cid2 j cid8 complete argument tree iff 13 hold 4 1 cid3 cid3 k cid8 UndercutSupports Ai exists index j 1k cid2 j cid8 p j Proof The ﬁrst statement Lemma 2 means TreeFormt argument tree iff 13 hold Let ﬁrst assume TreeFormt argument tree Then 1 2 easily veriﬁed By item 3 Deﬁnition 8 children node N canonical undercuts N So N cid3cid2 βcid4 child N canonical undercut Ai cid3cid2i φ1 φncid4 N Api Then Deﬁnition 7 directly yields cid2i UndercutSupports Api That 3 holds As direction let assume 13 hold By 3 item 4 Deﬁnition 9 Deﬁnition 7 means Ai argument 1 cid3 k Due 1 follows item 1 Deﬁnition 8 veriﬁed It easy verify 2 implies item 2 Deﬁnition 8 Lastly 3 item 4 Deﬁnition 9 entail cf Deﬁnition 7 1 cid3 k Ai canonical undercut Api Ie item 3 Deﬁnition 8 holds Let assume 14 Let assume TreeFormt complete argument tree In view Deﬁnition 8 happen node N Api lacking canonical undercut child TreeFormt argument tree proved By Deﬁnition 7 exists cid8 UndercutSupports A j j satisfying cid8 cid2i pi j This contradicts 4 So direction proved Proof direction easy omitted cid3 cid8 3 1 2 jp3 cid2 j cid21 cid22 α γ γ α Since cid23 α γ α subset set condition 2 Lemma 2 Example 9 Consider tuple form tree Example 5 given Example 8 We p violated Thus tuple form represent argument tree Lemma 3 Each argument tree represented tuple form Proof Consider argument tree T nodes N1 Nk nodes form Ni cid2i αi 1 cid3 cid3 k N1 root T Consider tT cid3α1 cid3cid21 cid2kcid4 pcid4 p partial function 1k 1k satisfying 1 cid3 j k p j iff N j children node Ni T Since T argument tree p fact parent function k Thus tT tuple form TreeFormt T T holds observation pairs associated tT satisfy Ai Ni 1 cid3 cid3 k cid3 22 Quantiﬁed Boolean formulae Quantiﬁed Boolean formulae QBFs generalize ordinary propositional formulae admission quantiﬁcations propositional variables In particular language QBFs contains atom p unary operators form p p called universal existential quantiﬁers respectively However quantiﬁers range arbitrary domain P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1411 truth assignments Thus QBF form p q F satisﬁable iff truth assignments p truth assignment q F satisﬁable Example 10 An occurrence propositional variable p QBF F free iff appear scope quantiﬁer Qp Q occurrence p bound If F contains free variable occurrences F closed F open Furthermore write F pφ denote result uniformly substituting free occurrence variable p F φ For set P p1 pn propositional variables let P F stand formula p1p2 pn P F formula p1p2 pn By interpretation I mean set atoms Informally atom p true I iff p I In general truth value νI F QBF F interpretation I recursively deﬁned follows 1 F cid21 νI F 1 2 F p atom νI F 1 p I νI F 0 3 F G νI F 1 νI G 4 F F 1 F 2 νI F minνI F 1 νI F 2 5 F p G νI F νI Gpcid21 Gp 6 F p G νI F νI Gpcid21 Gp The truth conditions follow usual way We F true I iff νI F 1 F false I If νI F 1 I model F If F model F said satisﬁable If F true interpretation F valid Observe closed QBF valid unsatisﬁable closed QBFs true interpretation false interpretation Hence closed QBFs need refer particular interpretations Therefore closed QBFs simply true false Two QBFs logically equivalent iff possess models Example 10 Consider QBF F 1 qp q In QBF propositional variable p free q bound To evaluate QBF consider interpretations I1 setting p false I2 p setting p true In general given interpretation I evaluate QBF respect I ways ﬁrst evaluate free variables according I apply semantics closed QBF ii ﬁrst apply semantics quantiﬁers evaluate quantiﬁerfree formula I So example follows For I1 q q qq I2 qcid21 q qq Both closed QBFs false I1 I2 model F 1 Following attempt ii ﬁrst treat universal quantiﬁcation q according semantics p cid21 p equivalent p p Clearly I1 I2 model propositional formula Hence I1 I2 model F 1 Observe state closed QBF pqp q false Now consider QBF F 2 qp q As interpretations I1 I2 According ii F 2 reduces p cid21 p equivalent p p Now I1 I2 models formula F 2 This leads observation closed QBF pqp q true QBFs allow talk semantical concepts propositional logic For instance propositional formula F propositional variables V satisﬁable iff closed QBF V F true Likewise F valid iff closed QBF V F true Consequently given knowledgebase cid4 formula V cid4 cid5 α holds iff QBF V cid9 δcid4 δ α true Example 11 Consider cid4 p p q let α q We V p q consider closed QBF cid6cid6 cid7 p p q cid7 q pq Observe inner QBF propositional formula p p q q valid true assignments Hence QBF true In way satisﬁability problem classical propositional logic prototypical problem NP NPcomplete problem satisﬁability problem QBFs prenex form prototypical problems kth level polynomial hierarchy Proposition 4 See 35 Given propositional formula φ atoms partitioned cid2 1 sets P 1 P deciding Q1 P 1Q2 P 2 Qi P iφ true cid5 p complete Q1 ii cid12p complete Q1 1412 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 In fact hardness results proposition hold QBFs quantiﬁers preﬁx Q1 P 1Q2 P 2 Qi P alternating Q j cid7 Q j1 holds 1 cid3 j We QBFs Q1 iQBFs The complexity landscape extended arbitrary closed QBFs maximal number quantiﬁer alternations path QBFs formula tree taken account In turn arbitrary QBF transformed equivalent QBF prenex form This transformation deterministic crucial performance QBF solvers requiring input formula normal form details 2021 Finally highlight reduction approach Given decision problem D aim ﬁnding translation scheme TD closed QBFs 1 TD faithful TD K true iff K yesinstance D 2 instance K TD K computable polynomial time respect size K 3 determining truth QBFs resulting TD computationally harder means Proposition 4 computational complexity D In addition interested search problem S aim establishing certain onetoone correspondence models QBF encodings solutions S Indeed transformation TD yield open QBFs instead closed QBFs Given models QBF TD K computation solutions K feasible polynomial time 23 Basic concept encodings We sketch basic ideas capturing logicbased argumentation QBFs In following assume knowledgebase cid4 given set atoms V cid4 Moreover α β refer formulae loss generalization assumed given atoms V cid4 In general set cid2 formulae set V cid2 contains atoms occurring cid2 Given ﬁnite knowledgebase cid4 assign element cid4 new atoms generator function The aim function provide new atoms interpretations atoms represent subsets cid4 The formal deﬁnition follows Deﬁnition 12 A generator function g maps δ cid4 new propositional atom gδ V cid4 gδ1 gδ2 implies δ1 δ2 δ1 δ2 cid4 With abuse notation write subset cid2 cid4 gcid2 denote set gδ δ cid2 Moreover different generator functions g1 g2 ensure g1cid4 g2cid4 generator function provides fresh atoms Interpretations usually given arbitrary atoms linked subsets cid4 generator functions follows Deﬁnition 13 Let I interpretation g generator function cid2 cid4 We I represents cid2 g iff I gcid4 gcid2 Moreover sequence A cid3cid21 cid2kcid4 subsets cid4 corresponding sequence G cid3g1 gkcid4 different generator functions interpretation I represents A G iff I gicid4 gicid2i holds 1 cid3 cid3 k A word caution order When I represents cid2 g I need model cid2 The forthcoming Deﬁnition 14 Lemma 4 provide missing link Deﬁnition 14 For cid13 cid4 formula α generator function g deﬁne cid13 g α V cid13α cid10cid10 cid11 cid6 cid12 cid7 cid12 α gδ δ δcid13 Lemma 4 Let cid4 knowledge base I interpretation For cid13 cid4 cid2 cid13 I represents cid2 generator function g α cid13 g α true I iff cid2 cid5 α Proof We cid2 cid5 α iff model atoms V cid2α cid2 model α By semantics QBFs easily veriﬁed holds iff closed QBF cid10cid10 cid11 cid12 cid12 δ α V cid2α δcid2 1 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1413 true Recall closed QBF true interpretation I false interpretation I We increase set quantiﬁed variables 1 V cid2α V cid13α yields cid10cid10 cid11 cid12 cid12 V cid13α δ α 2 δcid2 This QBF closed cid2 cid13 holds 2 true iff 1 true added quantiﬁed variables inﬂuence Next replace δ equivalent formula cid21 δ add trivially true conjuncts form γ yielding1 cid14 cid12cid12 cid12 cid13cid10cid10 cid11 cid10 cid11 V cid13α cid21 δ γ α 3 δcid2 γ cid13cid2 So far shows cid2 cid5 α iff closed QBF 3 true Now let g generator function consider inter pretation I represents cid2 g Hence δ cid2 gδ I γ cid13 cid2 gγ I holds Recall gcid4 V cid4 assumptions gcid4 V cid13α We rewrite 3 cid6 cid13cid10cid10 cid11 cid10 cid11 cid12cid12 cid7 cid12 cid14 cid6 cid7 gδ δ gγ γ α 4 V cid13α δcid2 γ cid13cid2 Observe atoms g free 4 subject interpretations In fact deﬁnition representa tion cf Deﬁnition 13 easy 4 true I represents cid2 g iff 3 true To conclude proof observe 4 equivalent cid13 g α cid3 cid15cid6 Example 12 Let cid4 p p q α q let consider gcid4 g p g pq Hence generator function provides δ cid4 new variable form gδ gδ Then cid4 g α given g pq p q 5 Note cid2 cid4 interpretations representing cid2 g Since gcid4 free variables cid4 g α suﬃcient investigate following interpretations models cid4 g α g p p pq q cid7cid7 cid6 cid16 I1 I2 g p I3 g pq I4 g p g pq Let evaluate 5 interpretation We shall ﬁrst evaluating free variables 5 inspect remaining QBF following method ii sketched Example 10 We start I1 Then 5 reduces closed QBF pq p q p q cid7cid7 cid15cid6 cid6 cid16 equivalent pqq This QBF obviously false I1 model 5 For I2 conjuncts antecedent survives We p q cid21 p pq q cid7cid7 cid15cid6 cid6 cid16 equivalent pqp q Still QBF false I2 model 5 For I3 pq cid15cid6 p cid6 cid21 p q cid7cid7 cid16 q equivalent cid15 p q q cid16 pq 1 This replacement theorem holds QBFs 1414 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 Again QBF false I3 model 5 Finally evaluating 5 I4 yields cid15cid6 cid6 pq cid21 p cid21 p q cid7cid7 cid16 q equivalent cid15cid6 cid7 p p q cid16 q pq This QBF true inner p p q q valid formula propositional logic Therefore I4 model 5 So having I4 model conclude set represents g p p q subset cid2 cid4 cid2 cid5 α holds QBFs abbreviated cid13 g α subformulae complex QBF formulae In sense useful building blocks repeatedly We refer schema like cid13 g α module 3 Characterisations In follows employ basic encoding cid13 g α characterise problems logicbased argumenta tion We start characterising arguments undercuts models certain QBFs Then suitably combine way resulting formulae allow reason argument trees We ﬁrst consider argument trees ﬁxed structure parent function given constructing encodings provide encodings parent function characterised QBF 31 Arguments undercuts Deﬁnition 15 For knowledge base cid4 formula α generator function g deﬁne argg cid4 α cid4 g cid4 g α cid11 cid6 gδ cid6cid6 cid4 δ cid7 cid7cid7 g α δcid4 Note main parts encoding check properties 2 3 respectively 4 cid9 Proposition 1 Theorem 1 For knowledge base cid4 formula α interpretation I cid2 cid4 I represents cid2 generator function g argg cid4 α true I iff cid2 α argument Proof Using Lemma 4 immediately conclude ﬁrst conjuncts argg cid4 α true I iff conditions 2 3 Proposition 1 hold So remains care conjunct argg cid4 α cid11 cid6 gδ cid6cid6 cid4 δ cid7 cid7cid7 g α δcid4 However following ﬁve statements equivalent I cid26 cid11 cid6 gδ cid6cid6 cid7 cid4 δ g α cid7cid7 δcid4 cid11 cid6cid6 cid4 δ cid7 cid7 g α ii I cid26 δcid2 cid6cid6 I cid26 cid7 cid4 δ iii iv I cid26 V cid4δα v I cid26 V cid4δα cid7 g α cid10cid10 cid11 δ cid2 cid6 gσ σ cid12 cid7 cid12 α δ cid2 σ cid4δ cid17cid11cid6 cid7 cid18 α δ cid2 cid2 δ ﬁrst steps correct I represents cid2 g cid9 Since cid2 δ cid4 δ propositional symbols cid2 δ α quantiﬁed V cid4δα Hence cid9 cid2 δ α invalid propositional logic equivalently iff cid2 δ cid7cid5 α In words condition 4 cid9 v holds iff Proposition 1 satisﬁed iff v holds iff holds cid3 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1415 We consider following example order compare functioning condition Deﬁnition 15 simpler alternative whilst plausible behave required In fact consider replaces cid11 cid6 gδ cid6cid6 cid7 cid4 δ g α cid7cid7 argg cid4 α cid6cid6 cid4 δ cid7 cid7 g α δcid4 We observe following problem Example 13 Let cid4 p q let α p let gcid4 g p gq So original version condition Deﬁnition 15 gives following cid6 cid6 cid7cid7 cid6 g p pq gq q p gq pq cid6 g p p p cid7cid7 We evaluate following interpretations getting answers expect QBF case I1 I2 g p I3 gq I4 g p gq QBF true QBF true QBF true QBF false Now consider alternative incorrect version deﬁnition gives following cid6 cid6 cid7cid7 cid6 cid6 pq gq q p pq g p p p cid7cid7 We evaluate following interpretations shows fail answer expect QBF I2 I1 I2 g p I3 gq I4 g p gq QBF true QBF false QBF true QBF false With encoding Deﬁnition 15 hand decide number typical decision problems question given cid3cid2 αcid4 cid3cid2 αcid4 argument A general variant question follows Given cid4 disjoint cid4 exist argument cid3cid2 αcid4 cid4 cid2 cid2 cid4 subsets cid4 cid4 Deﬁnition 16 Let g generator function cid4 cid4 cid4 Then deﬁne abbreviation ﬁxg cid4 cid4 gδ gδ cid11 cid11 δcid4 δcid4 cid4 generator function g formula α exists argument cid3cid2 αcid4 Corollary 1 Given cid4 disjoint sets cid4 cid4 cid2 cid2 cid4 iff cid6 gcid4 ﬁxg cid4 cid4 cid7 argg cid4 α 6 true Obviously setting cid4 cid2 cid4 cid4 cid2 6 answer question given cid3cid2 αcid4 cid3cid2 αcid4 argument In setting shall write ﬁxg cid2 instead ﬁxg cid4 cid4 Another question certain element δ cid4 support α For set cid4 δ cid4 6 Finally drop ﬁxg cid4 cid4 conjunct set cid4 cid4 6 encoding true iff subset cid2 cid4 cid3cid2 αcid4 argument Next use different generator functions g1 g2 characterise subsets cid4 simultaneously fact module allows derive supports undercuts Deﬁnition 17 For knowledge base cid4 generator functions g1 g2 deﬁne cid11 cid12 cid10 cid6 cid7 sucg1 g2 cid4 arg g1 cid4 g2δ δ δcid4 Theorem 2 For knowledge base cid4 interpretation I cid21 cid22 cid4 I represents cid3cid21 cid22cid4 generator functions cid3g1 g2cid4 sucg1 g2 cid4 true I iff cid21 φ1 φn argument cid3φ1 φncid4 canonical enumeration cid22 1416 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 Proof Since I represents cid22 g2 follows I g2δ δ equivalent δ δ cid22 equivalent cid21 δ cid4 cid22 So statements equivalent cid10 I cid26 arg g1 cid4 cid17 ii I cid26 arg g1 cid4 cid12 cid7 cid11 cid6 δcid4 cid11 g2δ δ cid18 cid22 Since I represents cid21 g1 Theorem 1 yields ii holds iff cid3cid21 sucg1 g2 cid4 true I holds iff cid3cid21 cid22cid4 argument cid3 cid9 cid9 cid22cid4 argument Therefore means Corollary 2 For knowledge base cid4 formula α interpretation I cid21 cid22 cid4 I represents cid3cid21 cid22cid4 cid3g1 g2cid4 argg2 cid4 α sucg1 g2 cid4 true I iff cid3cid22 αcid4 argument cid21 UndercutSupportscid3cid22 αcid4 32 Argument trees ﬁxed structure We characterise trees tuple form QBFs We start encodings tree structure ﬁxed given parent function nodes tuple form arbitrarily characterised assignments atoms generator functions In words given parent function p k formula α characterise sequences A cid3cid21 cid2kcid4 cid3α A pcid4 tuple form We reﬁne encodings obtain sequences A tuple form cid3α A pcid4 represents complete argument tree Note forthcoming encodings comes p input The aim forthcoming module ensure p correctly assume p applies sequence A way p lead duplicate children notes required Deﬁnition 9 Deﬁnition 18 For knowledge base cid4 sequence generator functions G cid3g1 gkcid4 parent function p k deﬁne distinctG cid4 p cid11 cid10 cid11 cid12 giδ g jδ j pip jicid7 j δcid4 Lemma 5 For knowledge base cid4 parent function p k interpretation I representing A cid3cid21 cid2kcid4 G cid3g1 gkcid4 distinctG cid4 p true I iff p parent function A Proof Only direction If distinctG cid4 p true I distinct j range 1k pi p j exist δcid9 cid4 giδcid9 g jδcid9 false I So I cid26 giδcid9 g jδcid9 I cid26 giδcid9 g jδcid9 The cases symmetric consider I cid26 giδcid9 g jδcid9 Since giδcid9 g jδcid9 atoms follows giδcid9 I g jδcid9 I Therefore g jδcid9 I g jcid4 giδcid9 I gicid4 giδcid9 gicid4 δcid9 cid4 However I represents A cid3cid21 cid2kcid4 G cid3g1 gkcid4 meaning I gicid4 gicid2i I g jcid4 g jcid2i Deﬁnition 13 Whence giδcid9 gicid2i g jδcid9 g jcid2 j Ie giδcid9 giδ δ cid2i g jδcid9 g jδ δ cid2 j cf Deﬁnition 12 As immediate consequence δcid9 cid2 j On hand giδcid9 giδ δ cid2i implies δcid9 cid2i gi injective according Deﬁnition 12 Now δcid9 cid2 j δcid9 cid2i yields cid2i cid7 cid2 j If direction We distinctG cid4 p true I In fact distinct j range 1k pi p j giδcid9 g jδcid9 false I δcid9 cid4 To start cid2i cid7 cid2 j p parent function A cid3cid21 cid2kcid4 Trivially exists δcid9 cid4 δcid9 cid2i δcid9 cid2 j δcid9 cid2i δcid9 cid2 j The cases symmetric consider From δcid9 cid2 j easily g jδcid9 g jδ δ cid2 j Deﬁnition 12 means g jδcid9 g jcid2 j That g jδcid9 I g jcid4 I represents A cid3cid21 cid2kcid4 G cid3g1 gkcid4 cf Deﬁnition 13 In view g jδcid9 g jcid4 δcid9 cid4 follows g jδcid9 I On hand δcid9 cid2i So giδcid9 giδ δ cid2i gicid2i Then giδcid9 I gicid4 I represents A cid3cid21 cid2kcid4 G cid3g1 gkcid4 cf Deﬁnition 13 So giδcid9 I Combined g jδcid9 I proven yields I cid7cid26 giδcid9 g jδcid9 cid3 Given parent function p know characterise sequences A cid3cid21 cid2kcid4 QBFs p parent function A Thus obtain tuple forms cid3α A pcid4 given p Next add conditions A cid3α A pcid4 represents argument tree Deﬁnition 19 For knowledge base cid4 formula α sequence generator functions G cid3g1 gkcid4 parent function p k deﬁne P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1417 argtreeG α cid4 p argg1 cid4 α kcid11 cid6 cid7 sucgi g pi cid4 i2 kcid11 cid10 cid19 cid11 cid12 g jδ giδ i2 δcid4 jpi Theorem 3 For knowledge base cid4 interpretation I tuple form cid3α A pcid4 I represents A generator functions G QBF distinctG cid4 p argtreeG α cid4 p true I iff cid3α A pcid4 represents argument tree Proof By Lemma 5 fact cid3α A pcid4 tuple form item 3 Deﬁnition 9 distinctG cid4 p true I So need focus argtreeG α cid4 p tree iff Lemma 2 states represent argument cid3α A pcid4 argument ii cid2i UndercutSupports Api 1 cid3 k iii cid2i cid7 cid2pi cid2p2i cid2pni1 1 cid3 k We iiii holds iff corresponding conjunct argtreeG α cid4 p true I By Theorem 1 holds iff argg1 cid4 α ﬁrst conjunct argtreeG α cid4 p true I Let turn ii In fact cid2i UndercutSupports Api cid2picid4 argument iff sucgi g pi cid4 means cid3cid2i second conjunct argtreeG α cid4 p true I Let turn iii Trivially cid2i cid7 cid2pi cid2p2i cid2pni1 means exists δcid9 cid2i δcid9 cid2pi cid2p2i cid2pni1 Since I represents A G cid2pni1 iff δcid9 j 1k Deﬁnition 13 tells g jδcid9 true I iff δcid9 cid2 j Then cid2i cid7 cid2pi cid2p2i giδcid9 true I g piδcid9 g p2iδcid9 g pni1δcid9 false I So cid2i cid7 cid2pi cid2p2i cid2pni1 iff cid2picid4 undercut cid3cid2pi cid4 By Theorem 2 cid3cid2i cid3cid21 αcid4 cid9 cid9 cid10 cid19 cid11 giδ g jδ cid12 δcid4 jpi true I cid3 Our deﬁnition captures condition sequence generator functions G argument represented generator function gi G undercut represented generator function g g G Deﬁnition 20 For knowledge base cid4 parent function p k sequence generator functions G cid3g1 gkcid4 generator function g deﬁne completeG cid4 p cid10 gcid4 sucg gi cid4 kcid11 i1 cid19 cid11 cid6 cid7 gδ g jδ cid12 jp ji δcid4 Theorem 4 For knowledge base cid4 interpretation I tuple form cid3α A pcid4 I represents A generator functions G QBF distinctG cid4 p argtreeG α cid4 p completeG cid4 p true I iff cid3α A pcid4 represents complete argument tree Proof By Theorem 2 sucg gi cid4 true I iff cid3cid8 cid2icid4 argument cid8 taken denote set g represents I equivalently cid3cid8 cid4 undercut cid3cid2i cid4 Since I represents A G Deﬁnition 13 means g jδ true I iff δ cid2 j Therefore gδ g jδ true I iff cid8 cid2 j So completeG cid4 p true I iff 1 cid3 cid3 k cid8 UndercutSupports Ai exists index j 1k cid2 j cid8 p j Then apply Lemma 2 Theorem 3 cid3 cid9 As shown single arguments use ﬁxg cid2 module encode decision problems In ﬁrst example given Corollary 3 ensure argument tree particular argument root tree 1418 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 Corollary 3 For knowledge base cid4 cid8 cid4 interpretation I tuple form cid3α A pcid4 I represents A generator functions G QBF ﬁxg1 cid8 distinctG cid4 p argtreeG α cid4 p true I iff cid3α A pcid4 represents argument tree root cid8 α As example check given tuple form cid3α A pcid4 A cid3cid21 cid2kcid4 QBFs represents argument tree To end let Gcid4 cid8 k i1 gicid4 Corollary 4 A tuple form cid3α cid3cid21 cid2kcid4 pcid4 represent argument tree iff closed QBF cid21 ﬁxgi cid2i distinctG cid4 p argtreeG α cid4 p cid20 kcid11 i1 Gcid4 true Likewise apply corollaries complete argument trees adding conjunct completeG cid4 p accordingly 33 Argument trees arbitrary structure Compared previous characterisation shall compute sequence A tuple form cid3α A pcid4 given p possible parent functions p encodings Hence ﬁrst represent functions p closure p j 1 cid3 j cid3 k Intuitively atom pi j true I I characterise parent function p pi j To ﬁrst need weaker notion parent function We regard parent function k binary relation 1 k satisfying restrictions following deﬁnition Given parent function p k use new atoms P k pi j 1 cid3 j cid3 k P p k Deﬁnition 21 For k 1 let p k 1 let p 2k 1k relation j p implies j We interpretation I represents p P k iff 1 cid3 j cid3 k pi j I iff j p The forthcoming propositional encoding interpretations models represent relations according Deﬁnition 21 satisfying requirement parent functions according Deﬁnition 9 Deﬁnition 22 For k cid2 1 deﬁne preparentP k kcid11 i1cid19 pi j cid20 kcid11 i1cid11 i2 j1 i3 j2 pi j cid21 pil j1cid11 l1 Example 14 Consider k 4 There possible trees realizations parent relation p according Deﬁnition 9 formed 4 nodes These represented following options Option 1 p4 3 Option 2 p4 3 Option 3 p4 1 Option 4 p4 2 Option 5 p4 2 Option 6 p4 1 p3 2 p3 1 p3 2 p3 1 p3 2 p3 1 p2 1 p2 1 p2 1 p2 1 p2 1 p2 1 By Deﬁnition 22 formula preparentP 4 follows p21 p32 p31 p43 p42 p41 p32 p31 p42 p41 p43 p41 p42 Note p43 p41 p42 implies p43 p41 p43 p42 Hence contraposition p41 p43 p42 p43 constraints require relation p form parent function Lemma 6 Let p 2k 1k relation j p implies j I interpretation I represents p atoms P k Then formula preparentP k true I iff p parent function k P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1419 Proof Since p j p implies j lemma holds iff preparentP k expresses p function In view Deﬁnition 21 2k image p expressed I cid26 kcid11 i1cid19 i2 j1 pi j That 2k image p expressed follows j p l cid7 j l p Since l p implies l test necessary 3k observe 2 1 p k 1 j j p holds focus l p possibility Moreover test checked l j Finally suﬃcient j ranges 2 1 In view Deﬁnition 21 amounts I cid26 cid20 kcid11 i1cid11 i3 j2 pi j j1cid11 l1 cid21 pil cid3 Next suitably characterise closure p cf Deﬁnition 11 parent function p Deﬁnition 23 For k cid2 1 deﬁne closureP k P k cid20 kcid11 i1cid11 i2 j1 cid20 j p pi j i1cid19 cid21cid21 pil p l j l j1 Lemma 7 Let p parent function k q 2k 1k relation j q implies j Moreover let I j qi j 2k interpretation representing p P k q P k Then formula closureP k P k true I iff p Proof By Deﬁnition 21 closureP k P cid22 qi j pi j pi l ql j k I equivalent 2k j 1i 1 l j 1 1 virtue p parent function q j q implies j amounts cid22 qi j pi j pi l ql j l 1 k known characterise transitive closure p taken relation provided p ﬁnite domain acyclic points obvious cid3 Example 15 Consider k 4 Example 14 One possible parent function p4 3 p3 2 p2 1 We use atoms P 4 p21 p31 p41 p32 p42 p43 likewise P 4 Any interpretation I assigns true p21 p32 p43 false 4 I In p31 p41 p42 represents parent function p P 4 Let evaluate closureP 4 P fact expect I models closureP 4 P 4 assign true atoms P 4 By deﬁnition I represents p according Deﬁnition 11 P 4 Observe closureP 4 P 4 p cid6 p p cid6 cid6 p p p 21 31 32 41 42 43 p21 cid6 p31 p32 p cid7cid7 21 p32 cid6 p41 p42 p p42 p43 p cid6 p43 cid7cid7 31 21 p43 p 32 cid7cid7 7 8 9 10 11 12 Recall consider I assigning true p21 p32 p43 conjuncts 7 9 12 require p assigned true model I closureP 4 P I Similarly line 10 know p 31 p43 true I conclude p Finally 11 forces p true I 32 p 43 21 p 31 true 21 p32 I Thus line 8 p 41 true I 32 42 true I seen model I p43 p 4 Now p 1420 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 We ready relate interpretations parent functions combination sequences A cid3cid21 cid2kcid4 For guarantee models represent parent functions introduced conjunct preparentP k represented parent function correctly relates represented sequence A avoiding duplicate children way similar Deﬁnition 18 module distinctG cid4 p The task realized second conjunct forthcoming deﬁnition Deﬁnition 24 For knowledge base cid4 sequence generator functions G cid3g1 gkcid4 deﬁne j1cid11 i1cid11 kcid11 cid11 cid10 cid12 parentG cid4 P k preparentP k pil p jl cid6 cid7 giδ g jδ i3 j2 l1 δcid4 Lemma 8 For knowledge base cid4 interpretation I representing A cid3cid21 cid2kcid4 G relation p P k parentG cid4 P k true I iff p parent function A Proof We know Lemma 6 preparentP k true I iff p represented I parent function k We need remaining parentG cid4 P k true I iff p parent function A cid3cid21 cid2kcid4 pi p j implies cid2i cid7 cid2 j 1 j cid3 k fact suﬃcient use 2 j cid3 k root obviously parent node Since I represents A G cid3g1 gkcid4 cid2i cid7 cid2 j iff exists δ cid4 giδ g jδ false I This holds iff δcid4giδ g jδ true I Since perform test pair children Ai A j node Al annotated tree represented I claim follows arguments Lemma 5 cid3 cid9 Deﬁnition 25 For knowledge base cid4 formula α sequence generator functions G cid3g1 gkcid4 deﬁne argtreeG α cid4 P k P k argg1 cid4 α i1cid11 cid6 kcid11 cid7 pi j sucgi g j cid4 i2 kcid11 j1 cid19 cid20 i2 δcid4 giδ i1cid11 cid6 j1 cid7 g jδ j p cid21 Theorem 5 For knowledge base cid4 formula α interpretation I representing sequence A cid3cid21 cid2kcid4 G relation p P k QBF ATG cid4 P k parentG cid4 P k P true I iff cid3α A pcid4 represents argument tree cid6 k closureP k P k argtreeG α cid4 P k P cid7 k Proof We sketch know following properties By Lemma 8 I represents parent function A iff parentG cid4 P k true I By Lemma 7 given interpretation I representing parent function p k P k I represents transitive closure p P k iff closureP k P k true I Formula argtreeG α cid4 P k P k follows structure Deﬁnition 19 instead functions p p k variables Using observation explicitly represent Deﬁnition 25 respective sets P k P k proofs structure proof suitably combining techniques P k P Theorem 3 following relation Given cid4 α interpretation I representing A G parent function p A P k transitive closure p p k cid3α A pcid4 represents argument tree iff argtreeG α cid4 P k P k true I P From observation semantics existential quantiﬁer claim holds Note P k hide variables representing transitive closure parent function user explicit requested problem internal fully determined p cid3 Deﬁnition 26 For knowledge base cid4 sequence generator functions G cid3g1 gkcid4 generator func tion g deﬁne completeG cid4 P k kcid11 i1 cid20 gcid4 sucg gi cid4 cid10 i1cid19 j1 pi j cid11 cid6 δcid4 cid7 gδ g jδ cid12cid21 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1421 Theorem 6 For knowledge base cid4 formula α interpretation I representing sequence A cid3cid21 cid2kcid4 G relation p P k QBF CATG cid4 P k parentG cid4 P k P cid6 k closureP k P k argtreeG α cid4 P k P cid7 k completeG cid4 P k true I iff cid3α A pcid4 represents complete argument tree The proof Theorem 6 similar proof Theorem 4 end Theorem 5 instead Theorem 3 required Again decide different decision problems concepts plus ﬁxing concepts An interesting question follows Given α A exist argument tree complete argument tree sets A In words ﬁnd parent function p cid3α A pcid4 represents argument tree complete argument tree Corollary 5 Given A cid21 cid2k formula α exists parent function p cid3α A pcid4 represents 1 argument tree iff closed QBF cid21 ﬁxgi cid2i ATG cid4 P k 2 complete argument tree iff closed QBF cid20 cid21 ﬁxgi cid2i CATG cid4 P k cid20 kcid11 i1 kcid11 i1 P kGcid4 true P kGcid4 true 34 Remarks We remarks concerning actual size encodings provided previous sections compared size encoded problem First address number additional atoms stemming generator functions g required encodings For encodings given Section 31 note require new atom formula cid4 Hence cardinality cid4 n need n new atoms encodings section exception encodings suc involved generator functions g1 g2 resulting 2n new atoms For encodings Section 32 tuple forms length k represent trees k nodes size tree comes play One check number additional atoms required encodings section bound nk 1 Finally encodings argument trees arbitrary structure Section 33 require higher number additional atoms k atoms Note sets cardinality kk 12 task representing tree structure sets P k P Together atoms stemming generator functions need nk 1 k2 new atoms Concerning size encodings mention size linear size cid4 encodings Section 31 For involved encodings Sections 32 33 size encodings quadratic size cid4 size tree However theoretical point view practical experience tell nesting depth alternating quantiﬁers crucial parameter evaluating QBFs parameters formula size number atoms ignored We recall encodings nesting depth ﬁxed independent size cid4 size considered argument tree In fact check quantiﬁer alternations branch formula tree associated encodings As ﬁnal remark mention number new atoms increased wants employ QBF solvers rely inputs certain normal forms Here transformation normal form introduces new atoms Most current QBF solvers 28 require normal form solvers 21 applied encodings directly modulo transformation steps introduce new atoms 4 Discussion There increasing formalisations argumentation particular computational models argument example 468131731 In paper addressed issue context argumentation classical logic underlying logic providing encodation terms quantiﬁed Boolean formulae This approach beneﬁcial respect aspects 1422 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 First offers possibility implementing decision procedures argumentation based classical logic exist ing QBF solvers Second allows obtain novel complexity results interesting decision problems associated logicbased argu mentation Indeed abstract argumentation comprehensive analysis computational complexity key decision problems particular 16 published results concerning computational complexity logicbased argumentation In 29 instance shown given knowledgebase cid4 formula α ascertaining cid2 cid4 cid3cid2 αcid4 argument cid2 minimal consistent set premises entail ing α cid5 p 2 complete decision problem Our results employed obtain similar results involved decision problems In fact encodings constructible polynomial time respect size problem descrip tion inspecting quantiﬁer structure encodings applying Proposition 4 immediately yields upper complexity bounds encoded problems For instance shows decision problems formulated argumentation trees remain located cid5 p 2 completeness decision problems argumentation trees expected However complete argumentation trees taken ac count encodings indicate leads increasing complexity having problems located cid5 p 3 Establishing exact complexity results numerous decision problems logicbased argumentation ongoing work In approach deductive argumentation Wooldridge et al 34 taking maximal set argu ments set arguments include equivalent arguments treat set arguments abstract argument attack relation holding pair arguments A A A defeater A This means abstract argument evaluated notions acceptability deﬁned Dung 14 This offers different way assembling evaluating arguments considered paper Furthermore provide complexity results concerning identiﬁcation maximal sets arguments 2 Since evaluation single argument hard class cid5 p cid9 cid9 Finally results useful comparing different approaches argumentation In fact increasing algorithms implementations argumentation systems including abstract argumentation systems 2111232 assumptionbased argumentation systems 152527 logicbased argumentation systems based defeasible logic 9102633 logicbased argumentation systems based classical logic 18 Undertaking empirical evaluations compare algorithms diﬃcult diverse approaches taken implementing So undertaking evaluations encodations QBFs offers opportunity level playing ﬁeld comparisons draw strengths weaknesses algorithms underlying reasoning mechanisms In particular comparisons QBF encodings argumentation formulations 22 encodings terms classical logic nonmonotonic formalisms general 319 enabled Acknowledgements This work supported Vienna Science Technology Fund WWTF grant ICT08028 References 1 L Amgoud C Cayrol A model reasoning based production acceptable arguments Annals Mathematics Artiﬁcial Intelligence 34 2002 197216 2 P Baroni M Giacomin Argumentation distributed selfstabilizing approach Journal Experimental Theoretical Artiﬁcial Intelli gence 14 4 2002 273301 3 R BenEliyahu R Dechter Default reasoning classical logic Artiﬁcial Intelligence 84 12 1996 113150 4 T BenchCapon P Dunne Argumentation artiﬁcial intelligence Artiﬁcial Intelligence 171 1015 2007 619641 5 S Benferhat D Dubois H Prade Argumentative inference uncertain inconsistent knowledge bases Proceedings 9th Annual Conference Uncertainty Artiﬁcial Intelligence UAI 1993 Morgan Kaufmann 1993 pp 411419 6 Ph Besnard S Doutre A Hunter Eds Computational Models Argument Proceedings COMMA 2008 IOS Press 2008 7 Ph Besnard A Hunter A logicbased theory deductive arguments Artiﬁcial Intelligence 128 2001 203235 8 Ph Besnard A Hunter Elements Argumentation MIT Press 2008 9 D Bryant P Krause A review current defeasible reasoning implementations Knowledge Engineering Review 23 3 2008 227260 10 D Bryant P Krause G Vreeswijk Argue tuprolog A lightweight argumentation engine agent applications P Dunne T BenchCapon Eds Computational Models Argumentation COMMA 2006 IOS Press 2006 pp 2731 11 C Cayrol S Doutre J Mengin Dialectical proof theories credulous preferred semantics argumentation frameworks Quantitative Qualitative Approaches Reasoning Uncertainty ECSQARU 2001 LNCS vol 2143 Springer 2001 pp 668679 12 C Cayrol S Doutre J Mengin On decision problems related preferred semantics argumentation frameworks Journal Logic Computa tion 13 3 2003 377403 13 C Chesñevar A Maguitman R Loui Logical models argument ACM Computing Surveys 32 2000 337383 14 P Dung On acceptability arguments fundamental role nonmonotonic reasoning logic programming nperson games Artiﬁcial Intelligence 77 2 1995 321358 15 P Dung R Kowalski F Toni Dialectical proof procedures assumptionbased admissible argumentation Artiﬁcial Intelligence 170 2006 114159 16 P Dunne T BenchCapon Coherence ﬁnite argumentation systems Artiﬁcial Intelligence 141 2002 187203 17 P Dunne T BenchCapon Eds Computational Models Argument Proceedings COMMA 2006 IOS Press 2006 18 V Efstathiou A Hunter Algorithms effective argumentation classical propositional logic Proceedings International Symposium Foundations Information Knowledge Systems FOIKS 2008 LNCS vol 4932 Springer 2008 pp 272290 19 U Egly T Eiter H Tompits S Woltran Solving advanced reasoning tasks quantiﬁed boolean formulas Proceedings 17th National Conference Artiﬁcial Intelligence AAAI00 AAAI PressMIT Press 2000 pp 417422 P Besnard et al Artiﬁcial Intelligence 173 2009 14061423 1423 20 U Egly M Seidl H Tompits S Woltran M Zolda Comparing different prenexing strategies quantiﬁed boolean formulas Proceedings 6th International Conference Theory Applications Satisﬁability Testing SAT03 Selected Revised Papers LNCS vol 2919 2004 pp 214228 21 U Egly M Seidl S Woltran A solver QBFs nonprenex form Constraints 14 1 2009 3879 22 U Egly S Woltran Reasoning argumentation frameworks quantiﬁed Boolean formulas Proceedings COMMA06 IOS Press 2006 pp 133 144 23 T Eiter G Gottlob The complexity logicbased abduction Journal ACM 42 1995 342 24 M ElvangGøransson P Krause J Fox Dialectic reasoning classically inconsistent information Proceedings 9th Conference Uncer tainty Artiﬁcial Intelligence UAI 1993 Morgan Kaufmann 1993 pp 114121 25 D Gaertner F Toni Computing arguments attacks assumptionbased argumentation IEEE Intelligent Systems 22 6 2007 2433 special issue argumentation technology 26 A García G Simari Defeasible logic programming An argumentative approach Theory Practice Logic Programming 4 1 2004 95138 27 A Kakas F Toni Computing argumentation logic programming Journal Logic Computation 9 1999 515562 28 M Narizzano L Pulina A Tacchella Report QBF solvers evaluation Journal Satisﬁability Boolean Modeling Computation 2 2006 145164 29 S Parsons M Wooldridge L Amgoud Properties complexity formal interagent dialogues Journal Logic Computation 13 3 2003 347376 30 H Prakken G Sartor Argumentbased extended logic programming defeasible priorities Journal Applied NonClassical Logics 7 1997 2575 31 H Prakken G Vreeswijk Logical systems defeasible argumentation D Gabbay Ed Handbook Philosophical Logic Kluwer 2002 32 M South G Vreeswijk J Fox Dungine A java dung reasoner Computational Models Argumentation COMMA 2008 IOS Press 2008 pp 360 368 33 G Vreeswijk An algorithm compute minimally grounded defence sets argument systems P Dunne T BenchCapon Eds Computational Models Argumentation COMMA 2006 IOS Press 2006 pp 109120 34 M Wooldridge P Dunne S Parsons On complexity linking deductive abstract argument systems Proceedings Twenty First National Conference Artiﬁcial Intelligence AAAI06 MIT Press 2006 pp 299304 35 C Wrathall Complete sets polynomialtime hierarchy Theoretical Computer Science 3 1 1976 2333