Artiﬁcial Intelligence 174 2010 865888 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Property persistence situation calculus Ryan F Kelly Adrian R Pearce Department Computer Science Software Engineering The University Melbourne Victoria 3010 Australia r t c l e n f o b s t r c t Article history Received 25 May 2009 Received revised form 6 May 2010 Accepted 6 May 2010 Available online 8 May 2010 Keywords Situation calculus Automated reasoning Property persistence 1 Introduction We develop new automated reasoning technique situation calculus handle class queries containing universal quantiﬁcation situation terms Although queries arise naturally important reasoning tasks diﬃcult automate situation calculus presence secondorder induction axiom We reduce queries property persistence common type universally quantiﬁed query equivalent form quantify situations amenable existing reasoning techniques Our algorithm replaces induction meta level ﬁxpoint calculation crucially calculation uses ﬁrstorder reasoning limited set axioms The result powerful new tool verifying sophisticated domain properties situation calculus 2010 Elsevier BV All rights reserved The situation calculus popular inﬂuential AI formalisms reasoning action change having application wide variety theoretical practical works 569262730 A major contributor success formalism combines powerful modelling language built ﬁrstorder logic easily implementable techniques effective automated reasoning A key challenge working situation calculus managing balance expressivity effective ness An induction axiom deﬁne structure situation terms answering arbitrary queries requires reasoning secondorder logic While certain special cases known decidable 31 reasoning prohibitively expensive general 24 If queries restricted certain syntactic forms possible obtain effective reasoning procedures example queries restricted existential quantiﬁcation situations answered ﬁrstorder logic 23 queries containing ground situation terms permit specialpurpose techniques regression 26 However important reasoning tasks require universal quantiﬁcation situations situation calculus currently offers effective reasoning tools One simple example problem goal impossibility establishing possible situations fail satisfy goal In paper study subset universallyquantiﬁed queries refer property persistence queries particular situation calculus theory D given formula φ situation σ determine φ hold situations future σ D cid3 s σ cid5 s φs The need secondorder logic traditionally limited automated reasoning queries We introduce new approach property persistence similar spirit standard regression operator deﬁning metalevel Corresponding author Tel 613 8344 1399 fax 613 9348 1184 Email addresses rfkcsseunimelbeduau RF Kelly adrianrpunimelbeduau AR Pearce 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201005003 866 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 operator PD φ persists σ PDφ holds σ We term resulting formula persistence condition φ calculate ﬁxpoint applications operator based regression crucially calculation requires ﬁrstorder logic limited set axioms The persistence condition guaranteed form amenable existing automated reasoning techniques Importantly results require restrictions domain theory D generally applicable ﬁrstorder situation calculus based purely standard ﬁrstorder reasoning techniques The result powerful new technique exploring sophisticated domain properties situation calculus It allows secondorder aspects theory factored handled specialpurpose algorithm The technique sound complete important standard variants situation calculus Perhaps importantly builds integrates standard techniques effective automated reasoning technique directly applicable existing theories systems based situation calculus A preliminary version paper previously appeared 15 revised edition includes extended additional proofs comprehensive discussion termination properties algorithm detailed example persistence condition reason goal impossibility deceptively simple task nonetheless reach existing reasoning techniques The paper proceeds brief review situation calculus formally deﬁning persistence condition establishing effectiveness reasoning tool Readers familiar situation calculus encouraged review background material Sections 2 4 small modiﬁcations standard notation greatly simplify development approach unique names axioms Duna incorporated general background theory Dbg Poss ﬂuent subsumed general class action description predicates deﬁned Dad parameterise future situations predicate s cid2 s use singlestep variant regression operator corresponding deﬁnitions regressable formulae assert intermediate actions satisfy given predicate s α s cid7 cid7 2 The situation calculus The situation calculus powerful formalism describing reasoning dynamic worlds It ﬁrst introduced McCarthy Hayes 22 signiﬁcantly expanded formalised 2326 We use particular variant Reiter et al University Toronto called Toronto school situationsashistories version The formalisation based standard deﬁnitions 162325 simple modiﬁcations The language Lsitcalc situation calculus manysorted language secondorder logic equality containing following disjoint sorts Action terms denote individual instantaneous events cause state world change Situation terms histories actions occurred world initial situation represented S 0 successive situations built function Action Situation Situation Object terms represent object domain Fluents predicates representing properties world change situations situation term ﬁnal argument Predicates functions situation term called rigid We use term primitive ﬂuent ﬂuents directly affected actions deﬁned terms ﬂuents No functions S0 produce values sort Situation For sake clarity consider functional ﬂuents paper common simplifying assumption situation calculus literature result loss generality Lsitcalc contains standard alphabet logical connectives constants cid8 countably inﬁnitely variables sort countably inﬁnitely predicates arity complete deﬁnition consult foundational paper Pirri Reiter 23 We follow standard naming conventions situation calculus uppercase roman names indicate constants lowercase roman names indicate variables Greek characters indicate metavariables formula templates All axioms universally close free variables outermost scope The notation t indicates vector terms context appropriate arity type The connectives taken primitive deﬁned usual manner Complex properties state world represented uniform formulae These basically logical combi nations ﬂuents referring common situation term Deﬁnition 1 Uniform formulae Let σ ﬁxed situation term R arbitrary rigid predicate F arbitrary primitive ﬂuent predicate τi arbitrary term sort Situation xi arbitrary variable sort Situation Then formulae uniform σ smallest set syntacticallyvalid formulae satisfying φ F τi σ R τi τi τ j φi φ j φ xi φ We formula uniform uniform situation The important aspect deﬁnition formula refers situation σ appears ﬁnal argument ﬂuents formula In particular uniform formulae quantify situations compare situation terms contain nonprimitive ﬂuents RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 867 The metavariable φ refer arbitrary uniform formula The notation φs cid7 represents uniform formula particular situation s inserted ﬂuents replacing situation term previously Note simply syntactic shorthand designed presentation clean readable operation logic cid7 The dynamics particular domain captured set sentences called basic action theory Queries behaviour world posed logical entailment queries relative theory Deﬁnition 2 Basic action theory A basic action theory denoted D set situation calculus sentences speciﬁc syntactic form outlined describing particular dynamic world It consists following disjoint sets founda tional axioms situation calculus Σ action description axioms deﬁning aspects action performance preconditions Dad successor state axioms describing primitive ﬂuents change situations Dssa axioms describing value primitive ﬂuents initial situation DS0 axioms describing static background facts domain Dbg D Σ Dad Dssa DS0 Dbg These axioms satisfy simple consistency criteria order constitute valid domain description 23 This straightforward modiﬁcation standard deﬁnition basic action theory intended simplify details forthcoming development The axiom set DS0 collection sentences uniform S0 initial state world set Dbg contains situationindependent facts domain Standard notation includes situationindependent facts DS0 upcoming deﬁnitions require separate Dbg includes standard unique names axioms actions 23 The axiom set Dssa contains successor state axiom primitive ﬂuent domain providing monotonic solution frame problem ﬂuent They following form Φ uniform s cid2 cid3 x doa s F ΦF x s The axiom set Dad deﬁnes ﬂuents aspects performance action action description predicates For predicate ADPx s set Dad contains single axiom following form ΠADP uniform s ADPx s ΠADPx s The canonical example action description predicate precondition predicate Possa s indicates possible perform action given situation In principle number predicates functions deﬁned similar way common example function SR axiomatise sensing actions 29 We henceforth use metapredicate α denote arbitrary action description predicate Note departure standard notion separate axiom speciﬁes preconditions function sort Action 23 The singleaxiom approach embodies domain closure assumption Action sort necessary reasoning formulae universally quantify actions 2834 We write deﬁnition action description predicate terms previouslydeﬁned action description predicates This purely notational convenience deﬁnitions Dad use primitive ﬂuents The foundational axioms Σ ensure situations form branchingtime account world state There distin guished situation term S0 called initial situation situations general form tree structure S 0 root doa s constructing situation results performing action situation s We abbreviate performance successive actions writing cid2 cid2 def cid2 cid3cid3 cid3 a1 s cid7 The relation s cid2 s doa1 s cid7 indicates s future s s cid2 S0 cid2 s cid2 s cid3 cid7 s cid5 s cid7 cid7 Here s cid5 s standard abbreviation s cid2 s This notation future extended consider futures actions satisfy particular action description predicate We include relation α action description predicate α following deﬁnitions cid7 s s cid7 s α S0 cid2 s s α cid3 cid7 s cid2α s cid7 α cid3 cid2 s cid7 868 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 For example stating s Poss s s s action situation arguments action description predicate order simplify presentation future s actions performed actually possible equivalent operator Pirri Reiter 23 Note suppress assert s cid7 cid7 cid7 Finally secondorder induction axiom assert situations constructed performing ﬁnite sequence actions cid4 P P S0 s cid2 P s P cid2 cid3cid3cid5 doa s s P s This axiom secondorder sentence basic action theory vital proper semantics statements universally quantify situation terms 24 3 Property persistence queries With notation hand let formally deﬁne kinds query paper Given uniform formula φ situation σ property persistence query asks φ hold situations future σ D cid3 s σ cid5 s φs More generally wish limit futures consideration brought actions satisfying certain predicate α easily accomplished cid2α relation We following deﬁnition property persistence query Deﬁnition 3 Property persistence query Let φ uniform formula α action description predicate σ situation term Then property persistence query query form D cid3 s σ cid2α s φs If query contains free variables treat universally quantiﬁed outermost scope In words persistence query states φ holds σ assuming subsequent actions satisfy α φ continue hold For succinctness henceforth φ persists α Such queries involved useful reasoning tasks following small selection Goal impossibility Given goal G establish legal situation goal achieved D cid3 s S0 cid2Poss s Gs Goal futility Given goal G situation σ establish goal achieved legal future σ D cid3 s σ cid2Poss s Gs Note differs goal impossibility goal initially achievable subsequent actions rendered goal unachievable Detecting avoiding situations important task Checking state constraints Given state constraint SC constraint holds legal situation D cid3 s S0 cid2Poss s SCs This seen variant goal impossibility showing constraint violated Need cooperation Given agent agt goal G situation σ establish sequence actions performed agent achieve goal Suppose deﬁne MyAction identify agents actions MyActiona s def actora agt Then appropriate query D cid3 s σ cid2MyAction s Gs If case agent need seek cooperation agent order achieve goal RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 869 Knowledge hidden actions Consider agent reasoning knowledge multiagent domain agents perform hidden actions unable observe To reason correctly asynchronous domains agent account arbitrarilylong sequences hidden actions 1432 For example suppose agent observe actions occur room lights cid2 Hiddena s def InSameRoom actora agt s cid3 LightsOns Intuitively establish knows φ agent establish φ false sequence hidden actions D cid3 s σ cid2Hidden s φs Here σ cid2Hidden s denotes sequence possible hidden actions performed agents σ s The gold thief domain As detailed example revisit Section 7 consider domain thief try steal gold safe There light room security camera detect thiefs actions long light The safe open closed gold stolen safe open It possible thief crack safe force open light The actions domain takeGold crackSafe toggleLight primitive ﬂuents SafeOpen LightOn Stolen action description predicates include standard Possa s custom predicate Undeta s indicating action detected security camera The complete axioms Appendix B As owners gold like ensure thief steal Unfortunately possible prevents simply cracking safe taking gold We ensure thief steal gold undetected Formally want establish sequence undetected actions results gold stolen D cid3 s S0 cid2Undet s Stolens 1 Intuitively case long gold stolen light thiefs actions detected safe closed thief switch light crack Dbg DS0 cid3 StolenS0 cid5 cid4 SafeOpenS0 LightOnS0 2 A manual proof 1 iff 2 straightforward reach standard automated reasoning tools situation calculus The diﬃculty shall explore section stems use secondorder induction axiom deﬁne set situations 4 Effective reasoning An important feature situation calculus existence effective reasoning procedures certain types query In general case answering query basic action theory D theoremproving task secondorder logic denoted SOL induction axiom D cid3SOL ψ This clearly problematic effective automated reasoning Fortunately restricting syntactic form queries allow discard axioms D automated reasoning easier A core result Pirri Reiter 23 query performs existential quantiﬁcation situations answered induction axiom denoted I ﬁrstorder logic FOL D cid3SOL s ψs iff D I cid3FOL s ψs While substantial improvement requiring secondorder theorem prover far effective technique Effective reasoning requires set axioms reduced possible In work state constraints Lin Reiter 19 reduce task verifying state constraint reasoning task static domain reasoning background axioms need considered Dbg cid3FOL s φs Since axioms Dbg mention situation terms leading quantiﬁcation queries effect φ hold s holds s This important result usually valid drop 870 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 induction axiom queries universally quantify situations Their work shown circumvented cases Simpler queries uniform initial situation answered ﬁrstorder logic limited set axioms D cid3SOL φS0 iff Dbg cid3FOL φS0 DS0 We reasoning initial situation reasoning Since axioms DS0 Dbg satisfy closedworld assumption provers Prolog employed handle type query effectively While useful queries happen precisely match restricted forms possible answer broad classes query transforming form This insight heart principle tool effective reasoning situation calculus regression 41 Regression The regression metaoperator RD syntactic manipulation encodes preconditions effects actions query meaning fewer axioms needed ﬁnal reasoning task 2326 The idea reduce query future situation query initial situation easier answer There styles regression operator commonly deﬁned literature singlepass operator deﬁned 23 reduces S0 single application singlestep operator deﬁned 29 operates action time We use singlestep variant powerful singlepass operator applied situations rooted S0 singlestep operator handle formulae containing situation variables Regression deﬁned formulae regressable Deﬁnition 4 Regressable formulae Let σi arbitrary situation term xi arbitrary variable sort Situation τi arbitrary term sort Situation ai arbitrary term sort Action R arbitrary rigid predicate F arbitrary primitive ﬂuent predicate αi arbitrary action description predicate Then regressable formulae smallest set syntacticallyvalid formulae satisfying ϕ F τi σi αi τi ai σi R τi τi τ j ϕ ϕi ϕ j xi ϕ Regressable formulae general uniform formulae In particular contain action description predi cates mention different situation terms They quantify situation terms compare situations cid2 predicate Note deﬁnition general 23 singlepass regression operator The regression operator deﬁned series regression rules shown mirroring structure regressable formulae Deﬁnition 5 Regression operator Let R arbitrary rigid predicate αi arbitrary action description predicate axiom αi ν s Πα ν s Dad F arbitrary primitive ﬂuent axiom F ix doa s ΦF x s Dssa τi arbitrary term sort Situation si arbitrary variable sort Situation ai arbitrary term sort Action Then regression φ denoted RDφ deﬁned according following structural rules RDϕi ϕ j def RDϕi RDϕ j RDxi ϕ def xi RDϕ RDϕi def RDϕi cid3 αi τi ai σi RD cid2 cid2 def RD cid3cid3 cid3 Πα τi ai σi def ΦF τi ai σi cid2 cid2 cid2 RD RD RD cid2 F τi doai σi cid3 F τi si def F τi si cid3 def F τi S0 F τi S0 RDτi τ j def τi τ j cid3 def R τi R τi RD cid2 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 871 The key point application RD replaces action description predicates RHS deﬁnitions Dad primitive ﬂuents RHS successor state axioms Dssa unwinding single action doa σ situation term query If situation term constructed left unchanged Let brieﬂy state important properties regression operator First importantly preserves equiv alence formulae Proposition 1 For ϕ regressable formula D cid3 ϕ RDϕ Proof By Pirri Reiter 23 Theorem 2 cid3 Any formula uniform doa s regressable resulting formula uniform s Proposition 2 For φ uniform doa s RDφ uniform s Proof By induction structure regressable formulae cid3 Let R D denote repeated applications RD formula remains unchanged Such applications transform query future situation query initial situation Proposition 3 For φ uniform doa1 S0 R Dφ uniform S0 Proof By Pirri Reiter 23 Theorem 3 1 cid3 This property key effective reasoning situation calculus allows answer projection problem Dφ holds initial To determine φ holds given future situation suﬃces determine R situation Proposition 4 For φ uniform doa1 S0 D cid3 φ iff DS0 Dbg cid3 R Dφ Proof By Pirri Reiter 23 Theorem 3 2 cid3 The regressed form usually easier answer requires initial state axioms background theory The axioms Dad Dssa essentially compiled query R D operator While eﬃciency gain guar anteed regression proven effective technique practice 1723 particularly combined techniques limit resulting increase query size 33 Unfortunately powerful technique applied formulae regressable Its operation depends crucially knowing actions situation term action unwound query turn Queries universally quantify situations property persistence queries paper fall squarely outside reach standard regression techniques 42 Inductive reasoning While rich diverse literature base situation calculus appears little work queries universally quantify situation terms Reiter 24 shown induction axiom general eliminated proving statements demonstrating use axiom manual proofs offering automated procedure Other work universallyquantiﬁed queries focuses highly specialised applications verifying state constraints 119 studying properties ConGolog programs 2412 While works produced useful results typically intended standalone techniques general reasoning tools situation calculus Pirri Reiter 19 shown induction axiom compiled away verifying state constraint means following equivalence1 cid2 cid3 s S0 cid2Poss s φs cid3 φS0 D DS0 iff Dbg cid3 s φs RD cid2 cid3 Possa s RD cid2 cid4 doa s cid5cid3 φ 1 We modiﬁed original equations consistency modiﬁed notation 872 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 Veriﬁcation state constraint reduced comparatively straightforward task static domain reasoning Veriﬁcation state constraints approached Bertossi et al 1 develop automatic constraint veriﬁcation induction theorem prover However issues addressed highly specialised works What interested future arbitrary situation σ S0 What restrict future actions according arbitrary action description predicate Can integrate method handling universallyquantiﬁed queries existing regression techniques Our treatment property persistence provide concrete basis considerations signiﬁcantly general existing work Formulating safety liveness starvation properties ConGolog programs requires universal quantiﬁcation situations De Giacomo et al 4 recast properties ﬁxpoint queries secondorder logic preliminary modelchecker capable verifying described 12 Claßen Lakemeyer 2 developed logic ConGolog programs based iterative ﬁxpoint computation similar propose paper Their technique based modal variant situation calculus known ES designed speciﬁc applications contrast approach aims generalpurpose reasoning tool classical situation calculus If willing restrict attention propositional domains possible use techniques propositional mucalculus answer broad range inductive queries 11 In similar vein Ternovska 31 proven decidability variant situation calculus monadic ﬂuents Our work differs focusing narrower class queries constructing ﬁxpoints metalevel language applicability ﬁrstorder situation calculus Finally let introduce important property situations ﬁrst formally identiﬁed Savelli 28 universal quan tiﬁcation situation terms equivalent kind inﬁnite conjunction levels tree situations D cid3 s ψs iff cid6 D cid3 cid7 nN a1 ψ cid2 cid2 a1 S0 cid3cid3cid8 This direct consequence induction axiom situations restricts situations constructed forming countable number actions initial situation 5 The persistence condition To enable use persistence queries practical systems clearly need effective reasoning technique openended secondorder theorem proving Our approach inspired success Reiters regression technique use metalevel operator transform query easier answer Speciﬁcally technique transforms property persistence query σ evaluation uniform formula σ simpler query approached existing techniques Formally seek method transforming uniform formula φ action description predicate α uniform formula PDφ α true precisely situations φ persists α We formula persistence condition φ α Deﬁnition 6 Persistence condition The persistence condition φ α denoted PDφ α uniform formula D DS0 PDφ αs s In words PDφ α holds s iff φ persists α s s cid2α s cid3 s s cid7 φ cid7 cid4 cid5cid3 cid7 cid2 Deﬁning PD independent initial world state allows calculated regardless known actual state world situated agent know details DS0 want able use technique Provided formula PDφ α given use standard regression reduce reasoning situation invariant properties ﬁrstorder reasoning task follows D cid3 s σ cid2α s φs iff D cid3 PDφ ασ iff Dbg cid3 R D DS0 cid2 cid3 PDφ ασ RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 873 Note generalises work Lin Reiter 19 state constraints queries restricted form s S0 cid2Poss s φs Deﬁnition 6 clearly task answering persistence query easier gives indication persistence condition calculated practice formula actually exists given φ α In order establish results ﬁrst need deﬁne weaker notion formula persisting depth n situation Deﬁnition 7 Persistence depth 1 A uniform formula φ persists depth 1 α situation s formula P 1 Dφ αs holds deﬁned Dφ αs def φs RD P 1 cid2 cid3 αa s RD cid2 cid4 doa s cid5cid3 φ Since α action description predicate φ uniform formula expressions RDαa s RDφdoa s D literal encoding requirement deﬁned resulting formula uniform s Note P 1 φ holds s direct successors Successive applications P 1 D assert persistence greater depths Deﬁnition 8 Persistence depth n For n cid3 0 uniform formula φ persists depth n α situation s formula Pn Dφ αs holds deﬁned Dφ α def φ P 0 Dφ α def P 1 Pn D cid2 Pn1 D φ α α cid3 The following theorem conﬁrms Pn D operates according intuition sequence actions length cid2 n action satisﬁes α executed φ hold performing actions Theorem 1 For n N Pn satisfying α Dφ α holds σ iff φ holds σ successors σ reached performing n actions D cid3 Pn Dφ ασ cid9 icid2n a1 ai cid10 cid9 jcid2i cid2 cid4 j α a1 j1 σ cid3cid5 cid4 cid2 a1 ai σ φ cid11 cid3cid5 Proof sketch By induction natural numbers For n 0 φσ φσ deﬁnition For inductive case expand deﬁnition Pn Pn1 D φ ασ RD Dφ ασ following LHS cid5cid3 cid2 cid2 cid3 αa σ RD cid4 D φ α Pn1 doa σ Substituting Pn1 D inductive hypothesis gives conjunction ranging cid2 n 1 universally quantiﬁed variables a1 ai establish n case Pushing conjunction inside scope quantiﬁer rename a1 a1 a2 required expression For detailed proof Appendix A cid3 The Pn D operator allows express persistence formula given depth simple syntactic translation based regression Intuitively expect PDφ α sort ﬁxpoint P 1 Dφ α PDφ α imply persistence depth Such ﬁxpoint calculated iterative application P 1 D The remainder section devoted verifying intuition We begin straightforward generalisations results situation calculus literature adapting cid2α notation Proposition 5 For action description predicate α foundational axioms situation calculus entail following induction principle W s W s cid4 s cid7 cid5 cid4 s cid7 α s cid2α s cid7 W cid3 cid2 cid7 s W cid2 cid2 s cid7 cid3cid3cid5 cid7 s s cid2α s cid7 W cid3 cid2 cid7 s Proof A trivial adaptation Theorem 32 24 cid3 874 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 Proposition 6 For basic action theory D uniform formula φ action description predicate α D DS0 cid3 s φs cid2 s cid7 s cid2α s cid7 φ cid5cid3 cid4 cid7 s iff Dbg cid3 s φs RD cid2 cid3 αa s RD cid2 cid4 doa s cid5cid3 φ Proof A straightforward generalisation modelconstruction proof Lemma 53 19 utilising Proposition 5 The details proof reproduced Appendix A cid3 Proposition 6 key algorithm calculating persistence condition It allows establish result φ holds s φ persists s static domain reasoning comparatively straightforward reasoning task We formalise basic relationships hypothetical PD operator Pn D Lemma 1 Given basic action theory D uniform formula φ action description predicate α n D DS0 cid3 s cid2 cid7 s s cid2α s cid7 φ cid5cid3 cid4 cid7 s cid2 cid7 s s cid2α s cid7 Pn cid4 Dφ α cid5cid3 cid7 s That φ persists α iff Pn Dφ α persists α Dφ α implies φ deﬁnition direction trivial For onlyif direction proceed induction For base case P 1 D let M model D μ assignment free variables φ Suppose φ persists Proof Since Pn n s P 1 Dφ α M μ cid3 s M μ cid17cid3 s cid7 cid7 s cid2α s s cid2α s cid7 φ s cid7 Pn cid4 Dφ α cid4 cid5 cid7 cid5 cid7 s 3 4 For 4 hold situation element M future μs P 1 Let μ assign situation element fresh variable s Dφ α false M μ cid3 s cid2α s P 1 Expanding deﬁnition P 1 Dφ αs D cid2 M μ cid3 s cid2α s φs αa s φ cid4 doa s cid5cid3 But assumption 3 holds M μ cid3 φs M μ cid3 αa s φ cid5 cid4 doa s 5 It impossible 5 hold contradiction Since choice M μ arbitrary result hold s lemma required For inductive case assume Pn1 DPn1 P 1 D φ α φ repeat base case proof φcid7 Pn1 D φ α persists Pn Dφ α By deﬁnition Pn D φ α place φ obtain contradiction cid3 Dφ α Lemma 2 Given basic action theory D uniform formula φ action description predicate α n cid3 Dφ αs PDφ αs Pn cid3 s cid2 D DS0 Proof PDφ α implies persistence φ deﬁnition If φ persists s Lemma 1 Pn persists s Since persistence Pn desired cid3 Dφ α Dφ α holds s deﬁnition lemma Dφ α s implies Pn We equipped prove major theorem paper Pn Dφ α implies Pn1 D φ α Pn Dφ α equivalent persistence condition φ α 875 6 Theorem 2 Given basic action theory D uniform formula φ action description predicate α n RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 Dbg cid3 s Pn Dφ αs Pn1 D φ αs iff D Ds0 cid3 s Pn Dφ αs PDφ αs In words calculate ﬁxpoint applications P 1 7 Dφ αs ﬁxpoint persistence condition φ α Proof For direction begin expanding Eq 6 deﬁnition P 1 D equivalent form cid2 cid3 Dbg cid3 s Pn Dbg cid3 s Pn Dbg cid3 s Pn Dφ αs P 1 D Dφ αs RD Dφ αs Pn cid3 RD αa s Dφ αs RD Dφ α α s Pn cid2 cid2 cid2 cid3 αa s cid2 P 1 RD cid4 Dφα doa s cid2 P 1 cid4 Dφ α cid5cid3 cid5cid3cid3 doa s By Proposition 6 Eq 6 lets conclude Pn persistence φ α equivalent PDφ α deﬁnition giving Dφ α persists α By Lemma 1 equivalent D Ds0 cid3 s Pn Dφ αs PDφ αs By Lemma 2 equivalence yielding Eq 7 required The onlyif direction straightforward reversal reasoning process PDφ α implies persistence φ implies persistence Pn Dφ α yields Eq 6 Proposition 6 cid3 Since Dbg cid3 Pn1 D operator initial intuition suggested We apply standard results ﬁxpoint theory calculation PDφ α section Dφ α deﬁnition Eq 6 identiﬁes Pn Dφ α ﬁxpoint P 1 D φ α Pn To conclude section establish essentially dual theorem uniform formula satisfying deﬁnition PDφ α ﬁxpoint applications P 1 D 2 Theorem 3 Given basic action theory D uniform formula φ action description predicate α suppose ψ regressable formula s zeroarity term sort situation D DS0 cid3 s ψs s cid7 s cid2α s cid7 φ cid4 cid5 cid7 s ψs identiﬁes precisely situations φ persists α Then situation term σ D cid3 R Dψσ iff cid6 D cid3 nN cid7 cid8 Dφ ασ Pn In words R Dψ uniform formula representing ﬁxpoint applications P 1 Dφ αs Proof sketch The restricted form ψ means situation s successors apply regression transform formula uniform s The theorem straightforward adaptation Lemma 6 28 Savellis technique splitting quantiﬁcation situation terms inﬁnite conjunction For detailed proof Appendix A cid3 6 Calculating PD Since easily calculate Pn Dφ α n straightforward algorithm determining PDφ α search n cid2 Dbg cid3 s Dφ αs Pn1 Pn Dφ α simpler Pn1 Since expect Pn iterative procedure Note calculation P 1 present algorithm cid3 D φ αs D φ α look smallest n Algorithm 1 presents Dφ α straightforward syntactic transformation 2 Previous versions work 1314 incorrectly claimed formula exist Our thanks anonymous reviewer helping clarify point 876 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 Algorithm 1 Calculate PDφ α pn φ pn1 P 1 Dbg cid17cid3 s pns pn1s Dpn α pn pn1 pn1 P 1 Dpn α end return pn 61 Soundness If Algorithm 1 terminates terminates returning value pn Eq 6 holds By Theorem 2 value pn equivalent persistence condition φ α The algorithm correctly calculates persistence condition Dφ α unsatisﬁable situation appears antecedent implication The algorithm correctly returns unsatisﬁable condition equivalent φ persist α In particular note Eq 6 holds Pn 62 Completeness There aspects completeness technique necessary ﬁxpoint exists algorithm calculating terminate ﬁnite number iterations 621 Existence persistence condition By Theorem 3 know persistence condition ﬁxpoint applications P 1 D In words D ﬁnitelyexpressible ﬁxpoint given φ α uniform formula satisfying deﬁnition PDφ α P 1 exist Unfortunately relatively easy construct ﬂuent ﬁrstorder persistence condition exist Consider domain single object sort modelled standard ﬁrstorder axioms natural numbers single ﬂuent F x s single action A makes F x s false F sucx s false cid2 cid3 x A s F F cid2 sucx s cid3 Let attempt calculate persistence condition F 0 s action description predicate α set true The sequence iterations produced Algorithm 1 cid2 cid2 cid3 F 0 s cid3 F 0 s cid2 cid3 F 0 s P 1 D P 2 D Pn D F 0 s F F 0 s F cid2 suc0 s cid2 suc0 s cid3 cid3 cid2 cid2 cid3 suc0 s cid3 suc F cid2 F incid9 i0 cid3 suci0 s It straightforward manually demonstrate F 0 s persist F holds objects built successive applications suc 0 Such condition expressed transitive closure ﬁrstorder formula equivalent persistence condition F 0 s Of course Dbg provides axiomatisation standard greater predicate x y ﬁnitely identify objects persistence condition expressed cid2 cid3 F 0 s PD F 0 s x 0 x F x s However calculating condition reach Algorithm 1 constructed ﬁnitely applications P 1 D algorithm fail terminate Nevertheless Theorem 3 provide important completeness result demonstrates exists tech nique replace reasoning persistence query σ regressionbased reasoning scheme σ equivalent termination algorithm approach In fact suspect stronger result Theorem 3 holds persistence query σ replaced ﬁrstorder formula universally quantify situation terms query welldeﬁned persistence condition Conjecture 1 Given basic action theory D uniform formula φ action description predicate α suppose ψs sentence Lsitcalc prenex normal form contains existential quantiﬁers situations s free variable sort situation RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 877 D DS0 cid3 s ψs s cid7 s cid2α s cid7 φ cid5 cid4 cid7 s Thus ψs identiﬁes precisely situations φ persists α Then uniform formula PDφ α D cid3 s ψs PDφ αs In words domain D permits technique transforming persistence query query doesnt universally quantify situations D amenable technique presented paper The proof Theorem 3 applied conjecture way reduce general ψs uniform formula As ongoing research aim conﬁrm intuition ﬁnd counterexample result shed valuable light study universallyquantiﬁed queries situation calculus 622 Termination As shown previous section persistence condition PDφ α known exist guarantee Algorithm 1 calculate ﬁnite time The algorithm fact fail terminate distinct reasons loop condition satisﬁed ﬁrstorder logical inference loop condition undecidable The later case indicates background theory Dbg undecidable While concern affects algorithm implemented action theory incomplete With respect source incompleteness algorithm incomplete larger reasoning form We concern case To ensure completeness approach restrict domain theory andor form queries posed PDφ α guaranteed exist guaranteed calculable ﬁnite number iterations Some standard results ﬁxpoint theory applied task Deﬁnition 9 Let LDbg LindenbaumTarski algebra background theory formulae uniform s It boolean lattice elements sets uniform formulae grouped equivalence wrt Dbg meet join respectively logical implication wrt Dbg forms partial ordering relation equivalence classes cid8 respectively Theorem 4 For ﬁxed value α P 1 Dφ αs monotone decreasing function LDbg Proof The domain range P 1 P 1 decreasing function required cid3 D case Dbg cid3 P 1 D uniform formulae correspond elements LDbg By deﬁnition D monotone Dφ α φ Since partial ordering relation LDbg P 1 Corollary 1 If LDbg complete lattice given uniform formula φ action description predicate α persistence condi tion PDφ α exists unique equivalence Dbg Proof A standard result ﬁxpoint theory Since P 1 D monotone decreasing function complete lattice structive proof Tarskis ﬁxpoint theorem 3 means unique greatest ﬁxpoint equivalence class φ This ﬁxpoint transﬁnite iteration applications P 1 D equivalent PDφ α Theorem 2 cid3 Corollary 2 If LDbg wellfounded lattice given uniform formula φ action description predicate α persistence condition PDφ α exists calculated ﬁnitely applications P 1 D Proof A standard result ﬁxpoint theory A wellfounded lattice LDbg inﬁnite descending chains elements transﬁnite iteration 3 ﬁnd ﬁxpoint P 1 D Corollary 1 terminate ﬁnitely itera tions cid3 63 Guaranteeing completeness The obvious restriction applied guarantee completeness ensure action object sorts ﬁnite In theories lattice LDbg ﬁnite ﬁnite lattice complete wellfounded These theories advantage static domain reasoning performed Algorithm 1 propositional logic meaning decidable providing strong termination guarantee 878 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 There notable advantages maintaining expressive power ﬁrstorder logic domain propositionalised example use quantiﬁers produce exponentiallyshorter formulae lead shorter proofs applications P 1 An alternate approach restrict form successor state axioms andor queries posed D operate subset LDbg meets requirements set Corollaries 1 2 For example suppose restrict successor state axioms action description predicates following forms yi x Φ F Παi mention terms x s cid2 cid3 x doa s F ncid12 i1 ai yi Φ F ix s F x s ncid12 i1 ai yi Φ F αx s ncid12 i1 ai yi Παix s Such domains ﬁnite number actions capable changing ﬂuents objects given direct arguments For example action ai A change ﬂuent F A s F B s Now suppose quantiﬁer free uniform formula φ When calculating P 1 action terms introduced successor state axioms P 1 mentioning terms φ The range P 1 terminating calculation PDφ α A detailed proof appears Appendix A Theorem 5 Dφ α possible simplify away Dφ α quantiﬁerfree uniform formula D applied φ ﬁnite subset LDbg ensures This restriction similar localeffect theories 2135 additional requirement righthand axiom contain quantiﬁers Whether localeffect theories guarantee termination additional restrictions interesting avenue research As example classic holding predicate expressed form meets restriction cid2 Holding cid2 cid3 obj doa s cid3 Poss cid2 pickupobj s cid3 Poss dropobj s Holdingobj s Holdingobj s pickupobj Holdingobj s cid17 dropobj However multiple agents acting domain possibility predicate pickup longer meet restriction contains quantiﬁer righthand cid2 Poss pickupagt obj s cid3 agt cid7 cid2 Holding agt cid3 cid7 obj s Clearly strong restriction structure theory successor state axioms able contain quantiﬁers It demonstrate certain syntactic restrictions D able guarantee terminating calculation PD It general syntactic wellfoundedness restriction applied axioms successfully formulated stage In similar vein suppose theory action context free 20 In theories successor state axioms following form cid2 cid3 x doa s F Φ F x cid2 F x s Φ cid3 F x The effects action independent situation performed Lin Levesque 18 Lemma 62 contextfree theories ﬁnite number parameterless actions ﬁnite state space suﬃcient ensure termination algorithm Intuitively N distinct states domain situation N actions future state situation N actions future Algorithm 1 terminate N iterations A detailed proof available Appendix A Theorem 6 From slightly different perspective suppose φ persist α PDφ α Further suppose D compactness property standard ﬁrstorder logic Then quantum levels Savelli 28 guarantee ﬁxed ﬁnite number actions φ achieved In case Algorithm 1 determine PDφ α ﬁnitely iterations It interesting determine known variants situation calculus projection problem decidable 10 able guarantee termination ﬁxpoint construction sophis ticated ﬁxpoint algorithms applied instead simple iterative approximation Investigating algorithms promising avenue future research The important point guarantee termination general precisely characterised inductive reasoning necessary answer property persistence queries shown replaced evalu ation uniform formula situation question RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 879 64 Effectiveness Our algorithm replaces single reasoning task based action theory D series reasoning tasks based static background theory Dbg Is worthwhile tradeoff practice The following points weigh strongly favour approach First foremost avoid need secondorder induction axiom All reasoning tasks performed standard ﬁrstorder reasoning highquality automated provers Second calculation PD performs static reasoning discussed Section 2 comparatively straightforward task decidable certain conditions Third PDφ ασ form amenable regression standard tool effective reasoning situation calculus Fourth persistence condition given φ α cached reused series related queries different situations signiﬁcant gain amortised eﬃciency Finally realistic domains expect properties fail persist situations future meaning algorithm require iterations large number cases Of course inherit potential disadvantage regression operator length PDφ α larger length φ Since bound number iterations required Algorithm 1 terminate length PDφ α actually unbounded general case As regression experience rarely problem practice compensated reduced complexity resulting reasoning task 65 Related algorithms As noted Section 2 use ﬁxpoints paper common study properties ConGolog programs 24 In particular algorithm deep similarities CheckEU CheckEG algorithms Claßen Lakemeyer 2 Like work seek ﬁxpoint iterative application metalevel function based regres sion Indeed Algorithm 1 recast special case approach need maintain complex graph structure Claßen Lakemeyer note approach able guarantee completeness general case identify future work discovery general classes theory technique complete Given underlying similarities conﬁdent advances reasoning ConGolog programs advance ability answer persistence queries viceversa We note work state invariants planning formalisms 78 uses ideas broadly similar approach iterative algorithm explores longer longer sequences actions stable state reached In formalisms domain typically ﬁniteness restriction guarantees eventual termination algorithm 7 Examples To demonstrate applicability technique consider example persistence queries given Section 3 The persistence condition readily applicable example transformed queries answered standard regression Goal impossibility Given goal G establish legal situation goal satisﬁed D cid3 PDG PossS0 The persistence condition G respect action legality allows goal impossibility checked easily Goal futility Given goal G situation σ establish goal satisﬁed legal future situation σ D cid3 PDG Possσ Precisely formula required checking goal impossibility goal futility This highlights advantage persistence condition multiple situations Our approach makes feasible agent check goal futility time considers performing action avoid situations goals unachievable Checking state constraints Given state constraint SC constraint holds legal situation D cid3 PDSC PossS0 However want state constraint persist satisfy following equivalence Dbg cid3 φ PDφ Poss If equivalence hold PDφ Poss indicates additional conditions necessary ensure φ persists useful adjusting action theory enforce constraint This particular application strong parallels approach state constraints developed Lin Reiter 19 880 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 Need cooperation Given agent agt goal G situation σ establish sequence actions performed agent achieve goal D cid3 PDG MyActionσ Knowledge hidden actions In recent work developed regression rule knowledge uses persis tence condition account arbitrarilylong sequences hidden actions 14 While details formulation outside scope current paper general form regression rule cid2 RD cid2 cid3cid3 Knows φ doa s def Knows cid2 cid2 cid4 PDφ Hidden RD cid5cid3 cid3 doa s s The key point deﬁnition agent know φ knows φ persist sequence hidden actions This highlights important beneﬁt approach integrates existing reasoning techniques If willing assume PDφ α exist factor inductive reasoning produce regression rule formulae universally quantify situations The gold thief domain As detailed example technique action consider gold thief domain described Section 3 axiomatised Appendix B We want establish D cid3 s S0 cid2Undet s Stolens By deﬁnition persistence condition equivalent D cid3 PDStolen Undetσ To answer query employ Algorithm 1 calculating Pn D successively larger values n series converges ﬁxpoint Full details calculation Appendix C present major results The case n 0 trivial P 0 DStolen Undets Stolens The n 1 case given Deﬁnition 7 P 1 D s Stolens RD cid2 cid3 Undeta s cid2 RD Stolen cid2 cid3cid3 doa s Expanding quantiﬁer actions domain obtain P 1 D s Stolens RD RD cid2 cid2 cid3 UndettakeGold s cid2 cid3 UndetcrackSafe s RD cid3 UndettoggleLight s RD RD cid2 Stolen cid2 Stolen cid2 cid2 Stolen cid2 cid3cid3 dotakeGold s cid3cid3 docrackSafe s cid2 cid3cid3 dotoggleLight s RD Applying regression simplifying produces ﬁnal result cid5 cid4 SafeOpens LightOns D s Stolens P 1 Intuitively indicates gold stolen single undetected action safe open ﬁrst cracked light action detected Since clearly entailed P 0 D case continue n 2 case Again applying Deﬁnition 7 expanding individual action P 2 D s Stolens cid5 cid4 SafeOpens LightOns cid3 UndettakeGold s cid2 cid2 RD cid4 SafeOpen cid2 RD cid3 dotakeGold s cid2 cid3 UndetcrackSafe s RD cid4 SafeOpen cid2 RD cid3 docrackSafe s cid2 RD cid4 SafeOpen cid3 UndettoggleLight s cid2 cid3 toggleLights cid2 Stolen cid2 LightOn cid2 Stolen cid2 cid2 cid3 dotakeGold s cid3cid5cid3 dotakeGold s cid2 cid3 docrackSafe s cid3cid5cid3 LightOn RDStolen cid2 LightOn docrackSafe s cid2 cid3 dotoggleLight s cid3cid5cid3 dotoggleLight s RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 881 Performing regression simplifying eventually obtain P 2 D s Stolens cid5 cid4 SafeOpens LightOns We clearly satisﬁed termination condition Algorithm 1 P 1 D P 2 D successfully calcu lated persistence condition PDStolen Undet Stolen SafeOpen LightOn Checking gold safe simple matter reasoning initial situation D cid3 StolenS0 cid5 cid4 SafeOpenS0 LightOnS0 With PDStolen Undet hand perform sophisticated reasoning safety gold example check proposed action jeopardise safety gold refuse perform action 8 Conclusions In paper developed algorithm transforms property persistence queries general useful class situation calculus query form amenable standard techniques effective reasoning situation calculus The algorithm replaces secondorder induction axiom metalevel ﬁxpoint calculation based iterative application standard regression operator It shown sound complete interesting cases Our approach generalises previous work universallyquantiﬁed queries important ways It consider sequences actions satisfying range conditions standard ordering action possibility enabling treat problems need cooperation knowledge hidden actions It establish properties persist future arbitrary situation necessarily initial situation enabling answer question goal futility The results calculating persistence condition cached allowing example goal futility question eﬃciently posed large number situations persistence condition calculated Perhaps importantly wider situation calculus community factored inductive reasoning quired answer queries Work increasing effectiveness inductive reasoning guaranteeing terminating calculation stronger classes action theory proceed independently development formalisms utilise persistence queries This opens possibility wider application property persistence approach sub sequent applications use PD operator kind black box dealing persistence queries example formulate regression rules work knowledge 14 This paper signiﬁcantly increased scope queries posed automated reasoning systems built situation calculus Appendix A Detailed proofs Theorem 1 For n N Pn satisfying α Dφ α holds σ iff φ holds σ successors σ reached performing n actions D cid3 Pn cid9 Dφ ασ cid10 cid9 a1 ai icid2n jcid2i cid2 cid4 j α a1 j1 σ cid3cid5 cid2 cid4 φ a1 ai σ cid11 cid3cid5 Proof By induction natural numbers For n 0 φσ φσ deﬁnition For inductive case expand deﬁnition Pn Pn1 D φ ασ RD Dφ ασ following LHS cid2 cid2 cid5cid3 cid3 αa σ RD cid4 D φ α Pn1 doa σ By inductive hypothesis equate Pn1 D φ ασ LHS n clause RHS junction suppress sides If drop regression operators left following establish D cid3 αa σ Pn1 cid5 doa σ cid4 D φ α cid2 cid4 j cid3cid5 cid2 cid4 φ a1 σ cid11 cid3cid5 a1 a1 j1 σ cid10 cid9 α jcid2n 882 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 We use inductive hypothesis Pn1 D LHS equivalence If distribute αa σ implication outermost conjunction collect quantiﬁers obtain following LHS cid9 icid2n1 cid10 a1 ai αa σ cid2 cid4 j α cid9 jcid2i a1 j1 σ cid3cid5 cid2 cid4 φ a1 ai σ cid11 cid3cid5 Renaming a1 a1 a2 ai ai1 n 1 clauses LHS equivalent n clauses suppressed RHS The remaining n 1 clause equivalent required RHS cid10cid9 a1 cid2 cid4 j α a1 j1 σ cid3cid5 cid2 cid4 φ a1 σ cid11 cid3cid5 jcid2n We desired equivalence cid3 Lemma 3 For basic action theory D uniform formula φ action description predicate α Σ Dbg Dssa Dad Dbg cid3 s φs RD cid7 cid8 φS0 cid3 s S0 cid2α s φs cid2 cid3 αa s RD cid2 cid4 doa s cid5cid3 φ Proof This straightforward generalisation proof Lemma 53 19 modiﬁed notation We repeat details proof convenience Begin assuming antecedent Σ Dbg Dssa Dad cid7 cid8 φS0 cid3 s S0 cid2α s φs A1 Let M model Dbg Suppose μs μa variable assignments situation action variables respectively M μs μa cid3 φs RD cid2 cid3 αa s We M μs μa cid3 RDφdoa s Following construction 23 construct model Mcid7 following properties M share domains sorts Action Object interprets rigid predicate function M 1 Mcid7 2 Mcid7 3 Mcid7 cid3 Σ Dssa Dad 4 For variable assignment object variables μo ﬂuent F x s Mcid7 μo cid3 F x S0 iff M μs μo cid3 F x s Since M μs μa cid3 RDαa s Mcid7 cid3 Dad Mcid7 μa cid3 αa S0 Since M μs μa cid3 φs property 4 Mcid7 ensures Mcid7 μa cid3 φS0 By assumption A1 Mcid7 μa cid3 φdoa S0 Since Mcid7 satisﬁes Dssa regression operator employed yield Mcid7 μa cid3 RD Finally property 4 Mcid7 φ cid2 cid4 doa S0 cid5cid3 Mcid7 μa cid3 RD cid2 φ cid4 doa S0 gives cid5cid3 iff M μs μa cid3 RD cid2 cid4 doa s cid5cid3 φ Since LHS equivalence construction conclude RHS This suﬃces establish lemma cid3 Proposition 6 For basic action theory D uniform formula φ action description predicate α RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 883 cid3 s φs cid2 cid7 s s cid2α s cid7 φ cid5cid3 cid4 cid7 s D DS0 iff Dbg cid3 s φs RD cid2 cid3 αa s RD cid2 cid4 doa s cid5cid3 φ Proof The direction straightforward induction axiom Proposition 5 For onlyif direction S0 case LHS obtain D DS0 cid3 φS0 cid2 cid3 s S0 cid2α s φs Lifting φS0 axioms precisely matches form Lemma 3 theorem desired cid3 Theorem 3 Given basic action theory D uniform formula φ action description predicate α suppose ψ regressable formula s zeroarity term sort situation D DS0 cid3 s ψs s cid7 s cid2α s cid7 φ cid5 cid4 cid7 s ψs identiﬁes precisely situations φ persists α Then situation term σ D cid3 R Dψσ iff cid6 D cid3 nN cid7 cid8 Dφ ασ Pn In words R Dψ uniform formula representing ﬁxpoint applications P 1 Dφ αs Proof The restrictions ψ mean regressable formula containing situations form s doa1 ai s R Dψ unwind action terms produce equivalent formula uniform s Let M model D DS0 μ assignment free variables φ Adopting technique Savelli kind inﬁnite conjunction levels tree cid7 28 Lemma 6 split quantiﬁcation s situations M μ cid3 s cid7 s cid2α s cid7 φ cid5 cid4 cid7 s iff M μ cid3 cid13 cid6 nN a1 ncid9 i1 cid2 cid2 ai α a1 ai1 s cid3cid3 cid2 cid4 φ a1 s cid14 cid3cid5 A2 Note element set A2 statement situations n actions future s Moreover element regressed formula uniform s Now ﬁnite subset A2 n natural number m Clearly subset written ﬁnite cid13 cid6 a1 cid2 cid2 ai α a1 ai1 s cid3cid3 cid2 cid4 φ a1 s cid14 cid3cid5 ncid9 i1 a1 ncid9 i1 cid2 cid2 ai α a1 ai1 s cid3cid3 cid2 cid4 φ a1 s cid3cid5 A3 Eq A3 precisely matches form RHS equivalence Theorem 1 substitute LHS cid2 cid2 ai α a1 ai1 s cid3cid3 cid2 cid4 φ a1 s cid14 cid3cid5 M μ cid3 cid13 cid6 ncid2m a1 ncid9 i1 iff M μ cid3 Pm Dφ αs conjunction M μ cid3 iff M μ cid3 ncid2m cid9 ncid2m 884 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 By deﬁnition Pm Dφ α implies Pn cid13 M μ cid3 a1 Dφ α n m cid2 a1 ai1 s cid3cid3 cid2 cid4 φ a1 s cid14 cid3cid5 cid2 ai cid6 ncid2m ncid9 α i1 iff M μ cid3 cid6 cid7 cid8 Dφ αs Pn ncid2m Noting construction works M μ m N gives theorem required cid3 Theorem 5 Let D successor state axioms action description predicates following restricted forms yi x Φ Παi mention terms x s F cid2 cid3 x doa s F ncid12 i1 ai yi Φ F ix s F x s ncid12 i1 ai yi Φ F αx s ncid12 i1 ai yi Παi x s Then quantiﬁerfree uniform formula φ α persistence condition PDφ α exists calculated ﬁnitely iterations Proof We treat case φ F x s general case follows induction structure φ Calculating P 1 DF x s α gives cid2 P 1 D F x s α cid3 F x s cid15 ncid12 j1 j y j Φ F ix s F x s cid16 ai yi Παix s cid15 ncid12 i1 cid16 ncid12 j1 j y j Φ F If idisjunction outside implication conjunction action types cid2 P 1 D F x s α cid3 F x s ncid9 cid15 ai yi Παix s i1 ncid12 i1 ai yi Φ F ix s F x s cid16 ncid12 i1 ai yi Φ F This allows remove quantiﬁcation eliminate explicit references ai produce cid2 P 1 D F x sα cid3 F x s ncid9 cid2 i1 Παix s Φ F ix s F x s Φ F cid3 Let termsφ denote set terms mentioned φ cid2 cid3 F τ σ terms def τ σ termsτi τ j def τi τ j termsφi φ j def termsφi termsφ j termsφ def termsφ F Recall Φ Παi mention terms x s cid3cid3 cid3 F x s F x s α terms P 1 D cid2 cid2 cid2 terms RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 885 And induction n cid2 cid3 F x s terms terms cid2 cid2 Pn D F x s α cid3cid3 Since termsF x s ﬁnite follows applications P 1 D F x s generate ﬁnitely nonequiv D operates ﬁnite subset LDbg suﬃces ensure terminating calculation alent formulae P 1 PDF x s α cid3 Theorem 6 Let D contextfree domain ﬁnitely parameterless actions φ α persistence condition PDφ α exists calculated ﬁnitely iterations Proof Following notation 18 situations state satisfy precisely ﬂuents cid2 SameState s s ncid9 cid2 cid3 cid7 def i1 xi F ixi s F cid3cid3 cid2 cid7 xi s Observe situations satisfy uniform formulae D cid3 SameState cid2 s s cid2 cid3 cid7 φs φ cid5cid3 cid4 cid7 s Let cid20doξ S0cid20 set situations state doξ S0 given sequence actions ξ By 18 Lemma 61 N distinct sets cid20doξ S0cid20 natural number N We Algorithm 1 terminates N iterations Suppose suppose model M D variable assignment μ Dφ αs M μ cid3 P N M μ cid3 P N1 D φ αs Then exist sequence actions A1 A N1 M μ cid3 φ cid2 cid4 A1 A N1 s cid3cid5 A4 A5 We sequence exist First assume cid20do A1 Ai scid20 distinct cid2 N Since N distinct states domain cid20do A1 A N1cid20 cid20do A1 Ai scid20 By A4 φdo A1 Ai s cid2 N A5 hold Alternately assume j cid2 N cid3cid3 cid2 cid3 cid2 M μ cid3 SameState A1 Ai s A1 A j s cid2 Then remove redundant actions j M μ cid3 SameState cid2 cid2 A1 Ai A j1 A N1 s cid3 cid2 A1 A N1 s cid3cid3 By A4 know φ holds A1 Ai A j1 A N1 A5 hold desired contradic tion There model M persistence depth N suﬃces establish persistence depth cid3 Appendix B Axioms gold thief domain This section gives axioms gold thief example domain Sections 3 7 In domain thief try steal gold safe There light room security camera detect thiefs actions long light The safe open closed gold stolen safe open It possible thief crack safe force open light The actions domain takeGold crackSafe toggleLight primitive ﬂuents SafeOpen LightOn Stolen action description predicates include standard Possa s custom predicate Undeta s indicating action detected security camera The successor state axioms Dssa consist following sentences cid2 Stolen SafeOpen cid2 LightOn cid3 doa s cid2 cid3 doa s cid3 doa s takeGold Stolens crackSafe SafeOpens toggleLight LightOns LightOns cid17 toggleLight 886 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 The action description predicates Dad deﬁned following Possa s toggleLight takeGold SafeOpens crackSafe LightOns Undeta s Possa s cid17 toggleLight LightOns The background theory Dbg contains standard unique names assumptions actions initial situation axioms DS0 speciﬁed discussion Appendix C Complete calculation gold thief domain This section presents complete details calculation PD gold thief example outlined Section 7 We need calculate PDStolen Undetσ To calculate persistence condition follow Algorithm 1 calculating Pn D successively larger values n series converges ﬁxpoint The case n 0 trivial P 0 DStolen Undets Stolens The n 1 case given Deﬁnition 7 P 1 D s Stolens RD cid2 cid3 Undeta s cid2 RD Stolen cid2 cid3cid3 doa s Some straightforward simpliﬁcations applied stage First ﬁnitely actions domain quantiﬁcation replaced ﬁnite conjunction P 1 D s Stolens cid2 cid2 cid2 RD RD RD cid3 UndettakeGold s cid2 RD cid3 UndetcrackSafe s RD cid3 UndettoggleLight s RD cid2 cid3cid3 Stolen cid2 Stolen cid2 dotakeGold s cid2 cid3cid3 docrackSafe s cid2 Stolen dotoggleLight s cid3cid3 From domain axioms know crackSafe toggleLight affect gold stolen takeGold Stolen true Performing regression Stolen obtain following result P 1 D s Stolens RD RD cid2 cid2 cid3 UndettakeGold s cid3 UndetcrackSafe s Stolens cid3 Stolens UndettoggleCam s cid2 cid8 RD Since conjunction contains Stolens unconditionally simplify away ﬁnal cases We obtain P 1 D s Stolens RD cid2 cid3 UndettakeGold s Performing remaining regression obtain ﬁnal result P 1 D P 1 D s Stolens cid5 cid4 SafeOpens LightOns Since clearly entailed P 0 expanding individual action D case continue n 2 case Again applying Deﬁnition 7 P 2 D s Stolens cid2 cid5 cid4 SafeOpens LightOns cid3 UndettakeGold s cid2 RD cid4 SafeOpen cid2 RD cid3 dotakeGold s Stolen cid2 cid2 cid3 UndetcrackSafe s RD cid4 SafeOpen cid2 RD cid3 docrackSafe s cid2 RD cid4 SafeOpen cid3 UndettoggleLight s cid2 cid3 toggleLights cid2 LightOn RDStolen cid2 LightOn Stolen cid2 LightOn cid2 cid2 cid3 dotakeGold s cid3cid5cid3 dotakeGold s cid2 cid3 docrackSafe s cid3cid5cid3 docrackSafe s cid2 cid3 dotoggleLight s cid3cid5cid3 dotoggleLight s RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 887 Applying similar simpliﬁcations P 1 D case obtain P 2 D s Stolens RD RD RD Further simplifying cid5 cid4 SafeOpens LightOns cid3 UndettakeGold s cid8 cid3 UndetcrackSafe s Stolens cid3 UndettoggleLight s Stolens cid2 cid2 cid2 cid5 cid4 SafeOpens LightOns cid5 cid4 cid8 LightOns cid4 cid5 SafeOpens LightOns P 2 D s Stolens cid4 RD cid2 cid5 cid4 SafeOpens LightOns RD cid2 cid3 UndettakeGold s cid3 UndettoggleLight s cid5 SafeOpens LightOns Now performing second regression P 2 D s Stolens cid5 cid4 SafeOpens LightOns cid5 cid4 SafeOpens LightOns Further simpliﬁcation gives P 2 D s Stolens cid5 cid4 SafeOpens LightOns cid5 cid4 SafeOpens LightOns We clearly satisﬁed termination condition Algorithm 1 P 1 D P 2 D We successfully calculated persistence condition PDStolen Undet Stolen SafeOpen LightOn References 1 Leopoldo E Bertossi Javier Pinto Pablo Saez Deepak Kapur Mahadevan Subramaniam Automating proofs integrity constraints situation calculus Proceedings 9th International Symposium Methodologies Intelligent Systems Lecture Notes Artiﬁcial Intelligence Springer 1996 pp 212222 2 Jens Claßen Gerhard Lakemeyer A logic nonterminating Golog programs Proceedings 11th International Conference Principles Knowledge Representation Reasoning KR08 2008 pp 589599 3 Patrick Cousot Radhia Cousot Constructive versions Tarskis ﬁxed point theorems Paciﬁc Journal Mathematics 82 1 1979 4357 4 Giuseppe De Giacomo Evgenia Ternovska Ray Reiter Nonterminating processes situation calculus Proceedings AAAI97 Workshop Robots Softbots Immobots Theories Action Planning Control 1997 5 Alessandro Farinelli Alberto Finzi Thomas Lukasiewicz Team programming Golog partial observability Proceedings 20th Interna tional Joint Conference Artiﬁcial Intelligence IJCAI07 2007 pp 20972012 6 A Ferrein Ch Fritz G Lakemeyer Using Golog deliberation team coordination robotic soccer Kunstliche Intelligenz I 2005 2443 7 Maria Fox Derek Long The automatic inference state invariants TIM Journal Artiﬁcial Intelligence Research 9 1998 367421 8 Alfonso Gerevini Lenhart K Schubert Discovering state constraints DISCOPLAN Some new results Proceedings Seventeenth National Conference Artiﬁcial Intelligence AAAI 2000 pp 761767 9 Hojjat Ghaderi Hector Levesque Yves Lespérance A logical theory coordination joint ability Proceedings 22nd AAAI Conference Artiﬁcial Intelligence AAAI07 2007 pp 421426 10 Yilian Gu Mikhail Soutchanski Decidable reasoning modiﬁed situation calculus Proceedings 20th International Joint Conference Artiﬁcial Intelligence IJCAI07 2007 pp 18911897 11 Mayu Ishida Reasoning actions A modeltheoretic approach Masters thesis science School Computing Science Simon Fraser University 2002 12 L Kalantari E Ternovska A model checker verifying ConGolog programs Proceedings 18th AAAI Conference Artiﬁcial Intelligence AAAI02 2002 13 Ryan Kelly Asynchronous multiagent reasoning situation calculus PhD thesis Department Computer Science Software Engineering The University Melbourne Melbourne Victoria Australia 2008 14 Ryan F Kelly Adrian R Pearce Knowledge observations situation calculus Proceedings 6th International Joint Conference Autonomous Agents MultiAgent Systems AAMAS07 2007 pp 841843 15 Ryan F Kelly Adrian R Pearce Property persistence situation calculus Proceedings 20th International Joint Conference Artiﬁcial Intelligence IJCAI07 2007 pp 19481953 16 H Levesque F Pirri R Reiter Foundations situation calculus Electronic Transactions Artiﬁcial Intelligence 2 34 1998 159178 17 Hector J Levesque Ray Reiter Yves Lespérance Lin Fangzhen Richard B Scherl GOLOG A logic programming language dynamic domains Journal Logic Programming 31 13 1997 5983 18 F Lin H Levesque What robots Robot programs effective achievability Artiﬁcial Intelligence 101 1998 201226 19 Lin Fangzhen Ray Reiter State constraints revisited Journal Logic Computation 4 5 1994 655678 20 Lin Fangzhen Ray Reiter How progress database Artiﬁcial Intelligence 92 1997 131167 21 Yongmei Liu Gerhard Lakemeyer On ﬁrstorder deﬁnability computability progression localeffect actions Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI09 2009 pp 860866 22 John McCarthy Patrick J Hayes Some philosophical problems standpoint artiﬁcial intelligence B Meltzer D Michie Eds Machine Intelligence vol 4 Edinburgh University Press 1969 pp 463502 23 Fiora Pirri Ray Reiter Some contributions metatheory situation calculus Journal ACM 46 3 1999 325361 24 Ray Reiter Proving properties states situation calculus Artiﬁcial Intelligence 64 1993 337351 888 RF Kelly AR Pearce Artiﬁcial Intelligence 174 2010 865888 25 Ray Reiter Knowledge Action Logical Foundations Specifying Implementing Dynamical Systems The MIT Press 2001 26 Ray Reiter The frame problem situation calculus A simple solution completeness result goal regression Vladimir Lifschitz Ed Artiﬁcial Intelligence Mathematical Theory Computation Papers Honor John McCarthy Academic Press Professional Inc 1991 pp 359380 27 Sebastian Sardina Giuseppe De Giacomo Yves Lespénce Hector Levesque On semantics deliberation IndiGolog theory implemen tation Annals Mathematics Artiﬁcial Intelligence 41 24 August 2004 259299 28 Francesco Savelli Existential assertions quantum levels tree situation calculus Artiﬁcial Intelligence 170 6 2006 643652 29 Richard Scherl Hector Levesque Knowledge action frame problem Artiﬁcial Intelligence 144 2003 139 30 Steven Shapiro Yves Lespérance Hector J Levesque The cognitive agents speciﬁcation language veriﬁcation environment multiagent systems Proceedings 1st International Joint Conference Autonomous Agents MultiAgent Systems AAMAS02 2002 pp 1926 31 E Ternovska Automata theory reasoning actions Proceedings 16th International Joint Conference Artiﬁcial Intelligence IJCAI99 1999 pp 153158 32 Johan van Benthem Eric Pacuit The tree knowledge action Towards common perspective Advances Modal Logic 6 2006 87106 33 Hans van Ditmarsch Andreas Herzig Tiago Lima Optimal regression reasoning knowledge actions Proceedings Twenty Second AAAI Conference Artiﬁcial Intelligence 2007 pp 10701075 34 Stavros Vassos Hector Levesque On progression situation calculus basic action theories Resolving 10yearold conjecture Proceedings 23rd AAAI Conference Artiﬁcial Intelligence AAAI08 2008 pp 10041009 35 Stavros Vassos Gerhard Lakemeyer Hector J Levesque Firstorder strong progression localeffect basic action theories Proceedings 11th International Conference Principles Knowledge Representation Reasoning KR08 2008 pp 662671