Artiﬁcial Intelligence 257 2018 123 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Constants ﬁnite unary relations qualitative constraint reasoning Peter Jonsson Department Computer Information Science Linköping University SE581 83 Linköping Sweden r t c l e n f o b s t r c t Article history Received 30 May 2017 Received revised form 1 December 2017 Accepted 13 December 2017 Available online 20 December 2017 Keywords Constraint satisfaction Qualitative reasoning Computational complexity Extending qualitative CSPs ability restricting selected variables ﬁnite sets possible values proposed interesting research direction important applications cf Qualitative constraint satisfaction problems extended framework landmarks Li Liu Wang 2013 48 Previously presented complexity results kind extended formalisms typically focused concrete examples general principles We propose general methods The ﬁrst methods based analysing given CSP modeltheoretical perspective method based directly analysing growth representation solutions We exemplify methods temporal spatial formalisms including Allens algebra RCC5 2017 Elsevier BV All rights reserved 1 Introduction This introductory section divided parts ﬁrst discuss background article results 11 Background Qualitative reasoning long history artiﬁcial intelligence combination qualitative reasoning straint reasoning productive ﬁeld A large number constraintbased formalisms qualitative reasoning invented notably temporal spatial reasoning investigated dif ferent angles It noted particular extension qualitative CSPs highly relevant Cohn Renz 25 p 578 observe following One problem constraintbased approach spatial entities treated variables instantiated values inﬁnite domain How integrate settings spatial entities known small domain unknown main future challenges constraintbased spatial reasoning Li Liu Wang 48 p 33 write Email address peterjonssonliuse httpsdoiorg101016jartint201712003 00043702 2017 Elsevier BV All rights reserved 2 P Jonsson Artiﬁcial Intelligence 257 2018 123 There growing consensus breakthroughs necessary bring spatialtemporal reasoning theory closer practical applications One reason current qualitative reasoning scheme uses stricted constraint language constraints qualitative CSP taken calculus relate variables inﬁnite domain This highly undesirable constraints involving restricted variables andor multiple aspects information frequently appear practical tasks urban planning spatial query processing That regard question extend constraint formalisms constants unary relations1 important observation wider context Kreutzmann Wolter 44 An interesting recent example extensions qualitative formalisms necessary article spatial query processing Nikolaou Koubarakis 56 cid3 D D Given ﬁnite inﬁnite set values D let Dc d d D set constant relations D ﬁnite set ﬁnite unary relations D Let consider ﬁnitedomain CSPs moment D f D For ﬁnite constraint language cid2 D computational complexity CSPcid2 D f known results Bulatov 17 This important complexity result ﬁnitedomain constraint satisfaction reproven times different methods 218 Very recently complexity CSPcid2 Dc CSPcid2 determined 19 63 cid3 The situation radically different considering inﬁnitedomain CSPs similar powerful results known This partly attributed fact inﬁnitedomain CSPs constitute richer class problems ﬁnitedomain CSPs computational problem X inﬁnitedomain constraint language cid2 X X CSPcid2 X polynomialtime Turing equivalent 9 Finite domain CSPs hand members NP Hence majority computational problems captured ﬁnitedomain CSPs Nevertheless exist concrete examples interesting qualitative andor inﬁnitedomain CSPs ex tended ﬁnite unary relations andor constant relations A early example article Jonsson Bäck ström 38 Koubarakis 43 temporal formalisms including point algebra Allens algebra extended unary relations relations A recent example article Li et al 48 point algebra Allens algebra considered Li et al study formalisms including cardinal relation algebra RCC5 RCC8 twodimensional regions constants assumed polyg onal regions The results temporal formalisms Jonsson Bäckström completely comparable results Li et al Jonsson Bäckströms approach based linear programming Li et al use methods based enforcing consistency computational geometry Consistencyenforcing methods certain advantages lower time complexity easier integration existing constraint solving methods At time linear programming method allows expressive extensions retained tractability Both consistencybased LPbased methods attracted attention lately cf Giannakopoulou et al 30 Kreutzmann Wolter 44 respectively generalisations basic concepts proposed analysed Leng Heintz 26 We line research large extent based analysing concrete examples The approach article different instead studying concrete examples study basic principles aim providing methods applicable different constraint formalisms 12 Our results We present different methods The ﬁrst methods based analysing given CSP model theoretical perspective The method toolbox proving size solutions number bits needed representing solution grows controlled way problems consequently NP We methods slightly Method I The ﬁrst method based exploiting ωcategoricity This modeltheoretical property constraint languages mathematical structures gained lot attention literature Brieﬂy speaking constraint language cid2 ωcategorical cid2 unique countable model isomorphism set ﬁrstorder sentences true cid2 One interesting aspects ωcategorical constraint languages respects resemble constraint languages ﬁnite domains expressed famous result proved Engeler RyllNardzewski Svenonius Theorem 11 From modeltheoretical point view ωcategoricity strong assumption Nevertheless interesting CSP problems formulated ωcategorical constraint languages examples include point algebra RCC5 RCC8 Allens algebra Among ωcategorical constraint languages modelcomplete cores particularly interesting Such constraint languages allow deﬁne gadgets simulating constants This method applicable wide selection CSPcid2 problems cid2 ωcategorical The drawback method diﬃcult compute gadgets simulating constants Given cid2 ωcategorical modelcomplete core gadgets computed eﬃciently verify based results Bodirsky 5 CSPcid2 polynomialtime equivalent CSPcid2 Dc To demonstrate strength method apply extended version Allens algebra 1 Finite unary relations referred landmarks AI literature We use standard mathematical term article P Jonsson Artiﬁcial Intelligence 257 2018 123 3 This exercise shows example relations higher arity pose particular problem This important observation previous work Li et al 48 focused binary relations Method II The second method based homogeneity This property relational structures studied long time mathematics logic Some machinery needed formal deﬁnition refrain giving However note homogeneous relational structures interesting properties instance allow quantiﬁer elimination ωcategorical structure contains ﬁnite number relation symbols domain countably inﬁnite Even homogeneity strong property relational structures wellknown examples AI science An early example provided Hirsch 33 proved Allens algebra standard intervalbased representation homogeneous Given cid2 homogeneous satisﬁes certain additional restrictions CSPcid2 polynomialtime equivalent CSPcid2 Dc The additional restrictions bit technical brief cid2 needs based partition scheme sense Ligozat Renz 51 This method advantages disadvantages compared method I The main advantage compute gadgets needed applying method I main disadvantage restricted particular kind constraint languages Nevertheless interesting examples restricted class problems Method III Even qualitative CSPs ωcategorical method I andor II applicable case One alternative approach analyse growth CSPcid2 Dc solutions measured function instance size If growth polynomially bounded follows immediately CSPcid2 Dc member NP One disadvantage method obtain polynomialtime equivalences CSPcid2 CSPcid2 Dc Another disadvantage diﬃcult obtain bounds In certain cases inductively compute bounds fairly straightforward analysis problem instances We demonstrate analysing variant RCC5 based ﬁnite sets integers instead closed sets topological spaces We illustrate methods temporal spatial formalisms including pointbased temporal constraints Allens algebra RCC5 We want stress representation domains relations important In fact RCC5 represented different ways denote RCC5set RCC5ωcat rise exactly computational problem Proposition 13 However Sections 5 62 exists RCC5 constraint language R RCC5setR c NPcomplete RCC5ωcatR X polynomialtime solvable c particular constant relation X arbitrary ﬁnite set constants Thus adding constant relations constraint languages computationally equivalent represented differently lead problems different computational complexity The reader ﬁnd strange consider extensions constant relations The explanation close connection problems extended constants ﬁnite unary relations NP NP Lemma 3 Most problems consideration NPhard adding unary relations containing elements example constraint language contains disequality relation cid6 NPhardness follows straightforward reduction 3Colourability However NPcompleteness inevitable add constants languagea concrete example phenomenon given earlier context RCC5 Thus extract information considering constants instead ﬁnite unary relations The viewpoint taken instance Li et al 48 This article following structure We introduce basic concepts CSPs logic infor mation homomorphisms Section 2 Temporal constraints Allens algebra RCC5 introduced Section 3 The different methods outlined presented Sections 4 5 6 respectively We conclude article brief discussion Section 7 This article revised extended version conference paper 37 2 Preliminaries This section divided parts provide basic information concerning constraint satisfaction logic automorphisms relational structures respectively 21 Constraint satisfaction problems We begin presenting CSPs terms homomorphisms This view widely literature ﬁnitedomain CSP provide certain advantages properties consider later inherently based homomorphisms One note fundamental difference common AI viewpoint constraint satisfaction assigning values variables way satisfy certain constraints In fact convenient use viewpoints sequel A relational signature τ consists relation symbols R associated arities ki N A relational structure cid2 relational Dki cid2 relation symbol R arity ki We use shortened notation x signature τ called τ structure set Dcid2 domain relation Rcid2 If reference structure cid2 clear omit superscript Rcid2 vector x1 xn length 4 P Jonsson Artiﬁcial Intelligence 257 2018 123 Let cid2 cid5 τ structures A homomorphism cid2 cid5 function f Dcid2 Dcid5 nary relation symbol R τ ntuple a1 Rcid2 f a1 f Rcid5 Let cid2 structure relational signature τ Then constraint satisfaction problem CSP cid2 following computational problem CSPcid2 Instance A τ structure cid5 Question Is homomorphism cid5 cid2 Example 1 For k 1 kColourability problem computational problem deciding given ﬁnite graph G vertices coloured k colours adjacent vertices different colours It wellknown kcolouring problem NPhard k 3 tractable k 2 For k 1 let Kk denote complete loopfree graph k vertices We view undirected graphs τ structures τ contains single binary relation symbol E denotes symmetric antireﬂexive relation Then kColourability problem viewed CSPKk Example 2 Consider problem CSPQ binary order relation set Q rational numbers Let G V A directed graph It easy homomorphism G Q G contains directed cycle Thus CSPQ solvable polynomial time cycle detection directed graphs carried polynomial time A homomorphism given τ structure cid5 cid2 called solution cid5 CSPcid2 In homomorphism perspective CSPs structure cid2 typically called template constraint satisfaction problem CSPcid2 The reader aware different names literature constraint language probably common AI Clearly equivalently deﬁne instances CSPcid2 problem tuple V C V set variables C set constraints form Rxi1 xik R relation cid2 k arity R xi1 xik V In case solution function V domain cid2 satisfying f xi1 f xik R Rxi1 xik C To represent input structure cid5 CSPcid2 need ﬁx suitable representation relation symbols signature τ We forthcoming sections choice representation important Given particular representation relation symbols let cid5 denote size input structure cid5 It general clear represent solutions CSPcid2 compact way object size polynomially bounded input size When domains ﬁxed ﬁnite size possible simply writing variable assignment When domains inﬁnite size possible Note deﬁnition problem CSPcid2 need explicitly represent solutions decide existence solutions cid3 D D Let D domain particular representation let d denote size representation d D We let ﬁnite Given representation elements D represent Dc d d D D f D members D f sets elements D assume size D f linear sizes elements Other ways representing D f possible solution sets equations outside scope article If cid2 constraint language domain D CSPcid2 Dc problem CSPcid2 extended constants CSPcid2 D f problem CSPcid2 extended ﬁnite unary relations The lemma strengthens Proposition 1iii Li et al 48 extending arbitrary constraint languages cid3 Lemma 3 Let cid2 denote constraint language CSPcid2 Dc NP CSPcid2 D f NP Proof Assume CSPcid2 D f NP Then CSPcid2 Dc NP Dc D f Assume instead CSPcid2 Dc NP Let consider arbitrary instance I V C CSPcid2 D f Assume I solution s V D We replace instance CSPcid2 Dc constraint U x C U D f constraint svv The resulting instance I satisﬁable I veriﬁed polynomial time certiﬁcate X A polynomialtime veriﬁable certiﬁcate I tuple I cid3 I The problem CSPcid2 Dc NP satisﬁability I cid3 cid3 X cid2 cid3 Lemma 3 allows example concentrate CSPcid2 Dc instead CSPcid2 D f proving membership NP 22 Logic Firstorder formulas ϕ signature τ short τ formulas usual inductively deﬁned logical symbols universal existential quantiﬁcation disjunction conjunction negation equality bracketing variable symbols symbols τ The semantics ﬁrstorder formula τ structure deﬁned ordinary Tarskian style A τ formula free variables called τ sentence We write cid2 ϕ τ structure cid2 model τ sentence ϕ satisﬁes ϕ This notation lifted sets sentences viewed conjunctions usual way P Jonsson Artiﬁcial Intelligence 257 2018 123 5 221 Logical deﬁnitions One use ﬁrstorder formulas signature τ deﬁne relations given τ structure cid2 formula ϕx1 xk x1 xk free variables ϕ corresponding relation R set ktuples t1 tk Dk cid2 ϕt1 tk true cid2 In case R ﬁrstorder deﬁnable cid2 We extend deﬁnability structures natural way structure cid7 ﬁrstorder deﬁnable cid2 relation cid7 ﬁrstorder deﬁnable cid2 Note deﬁnitions parameterfree allow use domain elements Quantiﬁerfree formulas certain following We τ structure cid2 admits quantiﬁer elimination relation ﬁrstorder deﬁnition cid2 quantiﬁerfree deﬁnition cid2 We set formulas T admits quantiﬁer elimination φ T logically equivalent quantiﬁerfree formula We consider quantiﬁerfree formulas conjunctive normal form CNF Such formula conjunction clauses clause disjunction literals negated unnegated atomic formulas A ﬁrstorder τ formula φx1 xn called positive contain negation symbol We note quantiﬁerfree positive formula rewritten logically equivalent positive formula conjunctive normal form A ﬁrstorder τ formula φx1 xn called existential form xn1 xmψ ψ quantiﬁerfree ﬁrstorder formula A subset positive existential formulas particular ﬁrstorder τ formula φx1 xn called primitive positive form xn1 xmψ1 ψl ψ1 ψl atomic τ formulas formulas form 1 R y1 yk R τ yi x1 xm cid3 x1 xm 2 y y y y cid3 Primitive positive formulas called ppformulas short In ppformula equality relations moved identifying variables This true general formulas instance formulas x y If relation R primitive positive deﬁnition cid2 R ppdeﬁnable cid2 deﬁne cid12cid2cid13 set relations ppdeﬁnable cid2 Jeavons 36 proved following result Theorem 4 If cid2 structure relation R ppdeﬁnable cid2 polynomialtime reduction CSPcid2 R CSPcid2 This explains ppdeﬁnability important studying complexity CSP problems To exemplify pp deﬁnitions Theorem 4 consider structure cid2 N 1 2 3 4 cid6 We binary relation K 4 x y 1 2 3 42 x cid6 y Example 1 ppdeﬁnable cid2 K4x y 1 2 3 4x 1 2 3 4 y x cid6 y follows CSPcid2 NPhard It worth mentioning operations encountered relation algebra viewed ppdeﬁnitions Let R S denote binary relations Then converse Rcid10 ppdeﬁnition Rcid10x y R y x intersection R S ppdeﬁnition R Sx y Rx y Sx y composition R S ppdeﬁnition R Sx y zRx z Sz y We ﬁnally discuss certain families binary relations Partition schemes introduced Ligozat Renz 51 highly inﬂuential CSP research Let D nonempty domain Given ﬁnite family B B 1 Bk B D2 B pairwise disjoint PD B B j binary relations D B jointly exhaustive JE 1 cid6 j k If B simultaneously JE PD denote JEPD B forms partition set D2 cid2 Deﬁnition 5 Let D nonempty domain let B B 1 Bk ﬁnite set binary relations D We B partition scheme following holds 1 B JEPD 2 equality relation EQD x x D2 B 3 B B converse relation Bcid10 B It important note B partition scheme domain D arbitrary d d cid3 D exists exactly cid3 B Given ﬁnite set binary relations B R1 Rk follow notational conventions B B d d 2440 deﬁne B viewed disjunction B1x y B2x y Bkx y B1 Bk B We abuse notation write B1 Bk denote relation B1 Bk The set B natural set unions relations B Equivalently relation B problem CSPcid2 cid2 B 6 P Jonsson Artiﬁcial Intelligence 257 2018 123 objects studied connection partition schemes If B partition scheme relation B quantiﬁerfree positive deﬁnable B necessarily ppdeﬁnable B disjunctions allowed pp deﬁnitions 222 Membership NP When constraint language cid2 logically deﬁned constraint language cid7 cid2 inherits useful properties cid7 We encountered Theorem 4 example We present results connect logical deﬁnability membership NP These results helpful forthcoming Sections 5 6 Lemma 6 Let B denote partition scheme domain D let cid2 denote ﬁnite constraint language quantiﬁerfree deﬁnable B If CSPB Dc NP CSPcid2 Dc NP Proof We assume B B1 Bk cid2 R1 Rm relation R 1 m deﬁned quantiﬁer free formula φi Without loss generality assume φi written conjunctive normal form We ﬁrst demonstrate clause φi rewritten disjunction relations B If φi contain negative literals φi property Otherwise consider negation B x y Since B partition scheme following equivalence B ix y cid3 BBB Bx y We assume loss generality φi contain negated literals Let I V C denote arbitrary instance CSPcid2 Dc solution s V D Pick arbitrary constraint R ix1 xn C R cid2 We consider deﬁning formula φi σ1 σp From clause σi 1 p choose literal satisﬁed solution s Add literals set C Repeat process constraints C Finally add constraints U x C U Dc C Note following cid3 cid3 cid3 instance CSPB Dc 1 V C 2 size V C 3 V C 4 exists polynomialtime veriﬁable certiﬁcate satisﬁability V C cid3 satisﬁable witnessed function s cid3 polynomially bounded size V C cid3 CSPB Dc NP Hence polynomialtime veriﬁable certiﬁcate satisﬁability V C concatenate instance V C polynomialtime veriﬁable certiﬁcate satisﬁability V C cid3 This implies CSPcid2 Dc NP cid2 cid3 Lemma 7 Let cid7 denote constraint language domain D let cid2 denote ﬁnite constraint language quantiﬁerfree positive deﬁnable cid7 If CSPcid7 Dc NP CSPcid2 Dc NP Proof The proof virtually proof Lemma 6 We merely observe following quantiﬁerfree positive formula converted conjunctive normal form resulting formula positive contains negation symbols Thus need rewrite negated literals disjunctions required cid7 partition scheme cid2 Results like Lemma 6 7 impression strong connection complexity CSPcid2 CSPcid2 Dc Unfortunately true general To begin arbitrarily choosing complexity class C admits complete problems polynomialtime reductions PSPACE EXPTIME Let cid2 R 1 R2 constraint language domain N CSPcid2 Ccomplete polynomialtime reductions Results Bodirsky Grohe 9 Theorem 1 provide systematic way obtaining cid2 However note possible simpler obtain cid2 ad hoc constructions Let 0k denote allzero vector k elements Given relation R cid2 arity k deﬁne R cid3 a1 1 ak 1 a1 ak R 0k cid3 cid3 R cid2 S let cid2cid3 R cid3 1 n N2 n 1 02 S The problem CSPcid2cid3 trivially P instance V C satisﬁed assigning value 0 variable We problem CSPcid2cid3 Nc hand Chard We ﬁnd examples cid2cid3 CSPcid2cid3 CSPcid2cid3 Nc arbitrarily far separated P Jonsson Artiﬁcial Intelligence 257 2018 123 7 To verify CSPcid2cid3 Nc Chard present polynomialtime reduction CSPcid2 CSPcid2cid3 1 Let V C cid3 C cid3 V cid3 V y denote arbitrary instance CSPcid2 Introduce fresh variable y deﬁne V cid3 R C cid3 ix R ix C S cid3 y x x V 1 y If V C solution f V N obvious function f cid3 V cid3 N deﬁned f cid3 y 1 f cid3x f x 1 x V solution V cid3 V cid3 solution f If V cid3 C cid3 cid3 C cid3 N note variable assigned value 0 Thus easy verify function f V N deﬁned f x f cid3x 1 solution V C 23 Automorphisms Keeping homomorphism deﬁnition CSPs mind helpful rest section Let cid2 cid5 denote relational τ structures domain D We function f D D preserves R cid2 a1 ak R tuple f a1 f ak R A bijective homomorphism f cid2 cid5 called isomorphism inverse f homomorphism cid5 cid2 If cid2 cid5 isomorphic clear CSPcid2 CSPcid5 computational problem An injective homomorphism additionally preserves complement relation called embedding complement kary relation R cid2 relation Dk R Homomorphisms cid2 cid2 called endomorphisms cid2 An automorphism cid2 bijective endomorphism inverse endomorphism In words automorphisms bijective embeddings cid2 cid2 isomorphisms cid2 cid2 The set containing endomorphisms cid2 denoted Endcid2 set automorphisms denoted Autcid2 Example 8 Let R x y z Z3 x y z For arbitrary Z let ea Z Z deﬁned ean n Let e Z Z arbitrary endomorphism Z R e homomorphism ex e y ez R x y z R generally e i1 exi x1 xk Z Arbitrarily choose n Z note i1 xi cid4 k cid4 k en e1 1 cid8 cid5 cid6cid7 n e1 n times It follows EndZ R ea Z Note ea inverse 1 1 Thus AutZ R ea 1 1 A useful observation V C instance CSPcid2 solution s V D s cid3 V D deﬁned cid3x αsx solution V C α Autcid2 Endcid2 If function s V D solution V C s cid3 s cid3x αsx solution α Autcid2 s solution α Endcid2 Autcid2 In following let G set permutations set X We G permutation group identity permuta 1x G In words G closed tion G arbitrary g f G functions x cid18 g f x x cid18 g function composition inversion If cid2 τ structure Autcid2 permutation group set Dcid2 For n 1 orbit ntuple t1 tn Xn G set αt1 αtn α G Clearly orbits ntuples G partition set Xn t1 tn Xn lies precisely orbit G Example 9 Consider structure Z R Example 8 It obvious e1 e1 forms group function composition If Z orbit equals Z R admits inﬁnite number different orbits automorphism group We introduce central concept ωcategoricity It observed ωcategoricity plays important role context qualitative reasoning We details interested reader refer instance Huang 35 Westphal et al 62 Bodirsky Dalmau 8 Bodirsky Jonsson 11 A ﬁrstorder theory set ﬁrstorder sentences When ﬁrstorder sentences signature τ T τ theory The theory τ structure cid5 denoted Thcid5 set τ sentences φ cid5 φ A model τ theory T τ structure cid5 cid5 satisﬁes sentences T Theories model called satisﬁable Since models structures notion isomorphism structures immediately carries models A satisﬁable ﬁrstorder theory T ωcategorical countable models T isomorphic structure ωcategorical ﬁrstorder theory ωcategorical All ωcategorical structures appear article countably inﬁnite convention ωcategorical structures countably inﬁnite Note ﬁrstorder theory ﬁnite structure inﬁnite models ﬁnite structures ωcategorical One ﬁrst inﬁnite structures ωcategorical Cantor 22 linear order rational numbers Q There characterisations ωcategoricity important terms automorphism group Deﬁnition 10 A permutation group G countably inﬁnite set X oligomorphic G ﬁnitely orbits ntuples n 1 8 P Jonsson Artiﬁcial Intelligence 257 2018 123 Basic relation I precedes J J preceded I I meets J J met I I overlaps J J overlapped I I J J includes I I starts J J started I I ﬁnishes J J ﬁnished I I equals J cid2 cid2 cid2 p p m m o o d d s cid2 s f cid2 f cid2 Illustration III Endpoints J I JJJ JJJJ IIII IIII JJJJ II JJJJJJ III JJJJJJ III JJJJJJ IIII JJJJ J I J J J J J J J J J J I I I I I I I I I I I An accessible proof following theorem Hodges book 34 Fig 1 The deﬁnitions basic relations Allens algebra Theorem 11 Engeler RyllNardzewski Svenonius Let cid2 countably inﬁnite structure countable signature Then cid2 ωcategorical Autcid2 oligomorphic Example 9 immediately implies Z R ωcategorical structure Consider structure Z One verify AutZ x cid18 x Z Hence Z ωcategorical despite fact Q ωcategorical orbits 0 0 0 1 0 2 distinct We conclude section presenting result connects ﬁrstorder deﬁnability ωcategoricity Theorem 12 Thm 738 Hodges 34 If cid2 ωcategorical structure cid5 ﬁrstorder deﬁnable cid2 cid5 ωcategorical 3 CSP examples We brief introduction qualitative formalisms temporal constraints including point algebra Allens algebra RCC5 These formalisms illustrating examples course article We begin structure Q rational numbers usual linear ordering relation Constraint languages ﬁrstorder deﬁnable Q wellstudied literature called temporal constraint languages We noticed Q ωcategorical implies temporal constraint lan guages ωcategorical Theorem 12 Furthermore computational complexity CSPcid2 known ﬁnite temporal constraint language cid2 13 In particular CSPcid2 P NPcomplete problem The point algebra PA constraint language CSPPA probably wellknown example polynomialtime solvable temporal constraint language We continue introducing Allens algebra 1 It introduced reason intervals qualitative relation ships intervals The variable domain I x Q x b b Q b consists closed intervals b rational numbers If I b I write I b The basic relations 13 relations deﬁned Fig 1 We let A denote set Allen basic relations Clearly A partition scheme 8192 relations Allens algebra contents set A known ωcategorical 32 Observe A temporal constraint language domain Q The structure A I For subset cid2 A later A relation R A J complexity CSPcid2 known 45 Unlike temporal constraint languages complexity ﬁnite ﬁrstorder deﬁnable constraint languages known We encounter ORDHorn subclass 55 H A R member H following hold I Q cid6 φI clause contains relation form x y x y The constraint language H wellstudied literature temporal constraints We merely note CSPH polynomialtime solvable CSPH R NPhard R A H A H evaluates true φ positive CNF formula φx J y y J J x I I We ﬁnally turn attention RCC5 The RCC formalisms 58 designed reasoning spatial regions basis large work qualitative spatial reasoning QSR There variants RCC23 RCC8 RCC5 We henceforth concentrate simplest formalism RCC5 RCC5 based ﬁve basic relations PP PPcid2 inverse PP PO DR EQ form partition scheme Here PP stands proper PO stands partial overlap DR stands disconnected regions EQ stands equality We consider different variants RCC5 based different choices variable domains P Jonsson Artiﬁcial Intelligence 257 2018 123 9 PPx y PPcid2x y DRx y POx y EQx y iff iff iff iff iff x int y intx y intx int y intx int y cid6 x cid3 y y cid3 x x y Fig 2 Basic relations RCC5reg int denotes interior operator PPx y PPcid2x y DRx y POx y EQx y iff iff iff iff iff x y x y x y b c x y b x b y c x c y x y Fig 3 Basic relations RCC5set The ﬁrst variant based standard representation spatial calculus RCC8 reader referred Renz Nebel 60 Sec 31 details concerning RCC8 able distinguish regions topological closure disconnectedness relations DC EC replaced DR tangential nontangential proper relations TPP NTPP replaced PP relation PPcid2 introduced analogously Here domain consists nonempty regular closed subsets regular connected topological space A subset topological space called regular closed equal closure interior Note sets required connected The basic relations RCC5 choice variable domain given Fig 2 We henceforth algebra RCC5reg We continue providing variant RCC5 Here consider arbitrary nonempty subsets inﬁnite set N We deﬁne relations PP PPcid2 DR PO EQ Fig 3 denote resulting structure RCC5set RCC5set ωcategorical unknown topological space properties described deﬁne RCC5reg resulting structure ωcategorical However ways deﬁning RCC5 resulting structure ωcategorical described literature For instance Bodirsky Chen 7 presents structure based Fraïssé amalgamation We let RCC5ωcat denote constructions The following result consequence Proposition 15 Bodirsky Jonsson 11 combined Section 6 Bodirsky Chen 7 Proposition 13 Let V C instance RCC5 The following statements equivalent 1 V C satisﬁable relations interpreted RCC5reg 2 V C satisﬁable relations interpreted RCC5set 3 V C satisﬁable relations interpreted RCC5ωcat In words RCC5 representations RCC5reg RCC5set RCC5ωcat indistinguishable computational perspective The RCC5 representation Li et al 48 restricted regions plane The exact computational properties representation known worth noting Proposition 13 extended RCC5 based nonempty open disks plane 11 Sec 252 Further discussions concerning different interpretations RCC5 spatial formalisms 72749 4 Method I ωcategoricity modelcomplete cores Our ﬁrst method based analysing given constraint language cid2 respect automorphisms central notions ωcategoricity modelcomplete cores We present method Section 41 example apply extended version Allens algebra Section 42 41 Constants modelcomplete cores cid3 R cid3 1 R cid3 2 Given instance V C CSPcid2 let V C We ﬁrst introduce concept homomorphically equivalent CSPs Let cid2 cid5 denote relational τ structures If cid2 cid5 isomorphic clear CSPcid2 CSPcid5 correspond computational problem However cid2 cid5 nonisomorphic correspond computational problem Assume cid2 D R 1 R2 cid3 denote instance CSPcid5 relation cid5 D cid3 We cid2 cid5 CSP following holds instances R appearing C replaced R cid3 satisﬁable This example case simulta V C CSPcid2 V C satisﬁable V C neously exists homomorphism cid2 cid5 homomorphism cid5 cid2 In case cid2 cid5 homomorphically equivalent deﬁnes equivalence relation structures We note structures CSP homomorphically equivalent Consider example structures Z Q They CSP homomorphism Z Q homomorphism Q Z 10 P Jonsson Artiﬁcial Intelligence 257 2018 123 For ωcategorical structures cid2 equivalence classes interesting properties homomorphic equivalence class cid2 contains distinguished member cid5 isomorphism uniquely given properties cid5 core cid5 modelcomplete A relational structure cid2 core endomorphisms cid2 embeddings Cores important studying complexity ﬁnitedomain CSPs refer textbook Hell Nešetˇril 31 extensively covers cores context graph homomorphisms Bulatov et al 20 covers cores general ﬁnitedomain CSPs It known domain relational structure inﬁnite reasonable ways deﬁning cores instance Bauslaugh 4 Bodirsky 6 Sec 363 The reason choosing deﬁnition simple deﬁnition Bodirsky 5 proof forthcoming Theorem 14 Model completeness central concept model theory Let T ﬁrstorder theory We formulas φ ψ equivalent modulo T T φ ψ A structure cid2 modelcomplete formula Thcid2 equivalent existential formula modulo T This viewed limited notion quantiﬁer elimination Consider relation rationals Q The structure Q admits quantiﬁer elimination 46 formula ThQ equivalent quantiﬁerfree formula naturally existential formula It follows Q modelcomplete cid2 ﬁrstorder deﬁnable Q modelcomplete The structure Q core Let e Q Q endomorphism Q b ea eb Clearly e injective preserves relation negation b ea eb b ea eb However relations R ﬁrstorder deﬁnable Q Q R core One trivial example equality relation The function x cid18 1 obviously endomorphism injective embedding We following important result Theorem 14 Theorem 16 Bodirsky 5 Every ωcategorical structure cid5 homomorphically equivalent modelcomplete core structure cid2 unique isomorphism Moreover cid2 ωcategorical orbits ntuples Dcid2 ppdeﬁnable cid2 n 1 Since homomorphically equivalent structures CSP focus ωcategorical structures properties The fact ppdeﬁne orbits ntuples highly important Theorem 15 Let cid2 constraint language domain D Assume following 1 cid2 modelcomplete ωcategorical core 2 domain elements represented way given vector d d1 dn Dn ppdeﬁnition cid2 orbit d generated polynomial time size representation d1 dn Then CSPcid2 CSPcid2 Dc polynomialtime equivalent cid3 cid3 C cid3 instance CSPcid2cid3 Assume loss generality dix C Proof Let cid2cid3 cid2 Dc The reduction CSPcid2 CSPcid2cid3 trivial concentrate direction Let cid3 V variable I constraint di y removed variable y replaced x Normalising y cid6 x di y C instance way easily polynomialtime We assume loss generality constraints C cid3 relations Dc d1x1 dmxm This achieved polynomial time renaming variables Compute polynomial time formula F x1 xm orbit d1 dm Deﬁne I V C constraint set C equals C expanded existentially quantiﬁed variables F x1 xm Note I constructed polynomial time instance CSPcid2 extended F x1 xm constant relations removed Let V denote V If instance I solution follows immediately I cid3 solutionone view I formula F x1 xm particular satisﬁable x1 d1 xm dm If instance I cid3 D I Since F describes orbit d1 dm cid3x restricted set V cid3xi di 1 m This implies αs relaxation I solution s V D claim solution s automorphism α cid2 αs solution I cid2 cid3 V cid3 cid3 cid3 cid3 cid3 For familiar algebraic approach ﬁnitedomain CSPs illuminating compare proof Theorem 15 proof Theorem 47 Bulatov et al 20 We concretise method presenting example based temporal constraint languages constraint languages ﬁrstorder deﬁnable structure Q We observed Section 3 temporal constraint languages ωcategorical It additionally known Junker Ziegler 41 Cameron 21 ﬁve possible choices Autcid2 We concentrate purposes interesting case cid12cid2cid13 Autcid2 AutQ Arbitrarily choose language cid2 assume loss generality Theorem 4 cid2 We know cid2 modelcomplete discussion preceding Theorem 14 assume cid2 core For instance cid2 point algebra We represent members Q natural way ab b integers written binary b cid6 0 P Jonsson Artiﬁcial Intelligence 257 2018 123 11 The automorphisms Q bijective functions f Q Q monotonically increasing The orbit 1tuples equals Q orbit 2tuple b b equals x y Q2 x y More generally orbit ktuple a1 ak a1 a2 ak equals x1 xk Qk x1 x2 xk orbitdeﬁning formulas generated polynomial time Theorem 15 applicable CSPcid2 Qc polynomialtime equivalent CSPcid2 In particular CSPcid2 Qc P CSPcid2 P CSPcid2 Qc NP CSPcid2 NP This example shows ωcategoricity indispensable Theorem 15 combined tractability CSPQ cid6 implies CSPcid2Q P cid2Q denotes Q cid6 extended constant relations Qc Recall Z Z cid6 ωcategorical deﬁne cid2Z expanding Z cid6 Zc The problem CSPcid2Z NPhard relation 0 1 2 ppdeﬁned 0 1 2x y z1 y 3z y x x z problem CSPZ 0 1 2 cid6 NPhard obvious polynomialtime reduction 3Colourability A similar example phenomenon based RCC5 instead Q presented Section 62 By Theorem 14 know orbitdeﬁning formulas ppdeﬁned cid2 given assumptions Whether generated polynomial time completely different question Bodirsky 5 Sec 7 notes set possible constants ﬁnite orbitdeﬁning formula constants computed offline subsequently additional cost This gives following result Corollary 16 Let cid2 constraint language domain D let D ωcategorical core CSPcid2 CSPcid2 D cid3 c polynomialtime equivalent problems cid3 c ﬁnite subset Dc If cid2 modelcomplete Assuming set constant relations ﬁnite sensible applications geographical information systems geographical maps contain comparatively small number features tend evolve slowly 42 An example based Allens algebra We illustrate results presented Section 41 aid slightly involved example There reasons First want results studying nonbinary constraint languages One argue constraint formalisms studied AI binary studying higherarity formalisms minor importance However interesting formalisms based relations higher arity We refer reader survey Dylla et al 28 contains examples higherarity formalisms thorough discussion concerning properties Another reason reader familiarity use results Theorem 15 Even abstract ﬁrst sight powerful fairly easy use concrete applications Our departure following dichotomy result Theorem 17 Theorem 5523 Bodirsky 6 Let cid2 ﬁnite set relations ﬁrstorder deﬁnable A m cid2 m Allen relation satisfying I J m I Then CSPcid2 polynomialtime solvable NPcomplete J The reader puzzled restriction constraint languages containing relation m Intuitively m allows deﬁne certain relations endpoints identical relations basis dichotomy result construction beginning Lemma 22 Before continuing want point switching A relations ﬁrstorder deﬁnable A gives new possibilities poses new problems Consider example following ternary Allen relation cid9 R I J K I3 cid10 cid10 cid10 cid10 s s s s cid2 I J s s cid2 J K sK I sK J cid2 I K cid11 This relation expresses I J K starting point ending point K ending points I J Note disjunction sK I sK J expressible relations A Relations ﬁrstorder deﬁnable A inherently different relations A We exemplify ORDHorn class H described Section 3 Nebel Bürckert 55 proved ORDHorn class H following uniqueness property A X A CSP X P X H Such unique class relations exist consider relations ﬁrstorder deﬁnable A exist incomparable classes relations X1 X2 ﬁrstorder deﬁnable A ORDHorn class strict subset CSP Xi 1 2 P This straightfor ward consequence results proved Bodirsky Kára 14 details Bodirsky 6 Chapter 10 One 12 P Jonsson Artiﬁcial Intelligence 257 2018 123 extension H studying relation R rewritten relation deﬁnable Q splitting intervals variables range Q polynomialtime solvable First R CSPH R R I I J J K K Q6 J Every relation H rewritten similar way let Hcid3 J cid10 cid10 cid10 cid10 cid10 cid10 cid10 cid10 I I K K J I I K J K K denote resulting constraint language Now constraint language Hcid3 R tractable This kind transformations constraint languages important ingredient proofs forthcoming results subset tractable dualll class 14 conclude CSPH R Bodirskys proof Theorem 17 based following fundamental result Theorem 18 Bodirsky Kára 13 Let cid2 ﬁnite set relations ﬁrstorder deﬁnable Q Then CSPcid2 polynomialtime solvable NPcomplete The problem applying Theorem 18 directly Allen relations stems different domains theorem concerned domain Q Allen relations deﬁned interval domain I We generalise dichotomy result ﬁrstorder extension Allens algebra Theorem 17 follows adding constants constraint language change complexity corresponding constraint satisfaction problem Theorem 19 Let cid2 ﬁnite set relations ﬁrstorder deﬁnable A m cid2 Then problems CSPcid2 CSPcid2 Ic polynomialtime equivalent Additionally problems exhibit dichotomy polynomialtime solvable NP complete depending choice cid2 Theorem 19 proved different ways Our proof use complex formal machinery emphasises connections results Section 41 The proof Section 421 discuss aspects result Section 422 Special cases Theorem 19 related results studied literature We mentioned Li et al 48 showed CSPA Ic NP Their approach diﬃcult generalise handling relations arbitrarily high arity Another example Jonsson Bäckström 38 proved CSPH Ic P Their approach easily generalise larger classes relations In fact proving CSPH R Ic Pa result easily inferred Theorem 19 421 Dichotomy result We begin proving Allen relations admit quantiﬁer elimination The exact deﬁnition homogeneity proof important point come Section 5 Lemma 20 Structure A admits quantiﬁer elimination Proof By Statement 222 Cameron 21 know ωcategorical structure admits quantiﬁer elimination homogeneous Corollary 59 Hirsch 33 shows A homogeneous Every homogeneous structure contains ﬁnite number relations inﬁnite countable domain ωcategorical cf Lemma 3210 Bodirsky 6 We conclude A admits quantiﬁer elimination This immediately implies A admits quantiﬁer elimination relation A rewritten disjunction relations A introducing quantiﬁers cid2 Let R Ik denote kary relation ﬁrstorder deﬁnable A Assume loss generality Lemma 20 I1 Ik R φR I1 Ik holds φR quantiﬁerfree formula Deﬁne formula XφR formula φcid3 φcid3cid3 k x 1 x 1 x k 2k free variables x 1 φcid3 x 1 x 1 2 φcid3cid3 x k x k variables x n x m x m x n φ atomic formula aIm In A replaced corresponding deﬁnition Fig 1 Note formula Xφ quantiﬁerfree ﬁrstorder deﬁnable Q We adapt X handling relations natural way relation R arity let ˆXR x Qa XφR x x 1 x 1 x x 1 x 1 x R Finally extend ˆX If relations R constraint languages ˆXcid2 ˆXR R cid2 By deﬁnition ˆX straightforward verify CSPcid2 introduced earlier R ˆXR 13 x P Jonsson Artiﬁcial Intelligence 257 2018 123 polynomialtime reducible CSP ˆXcid2 The basic step replace interval variable I point variables x x interpreted starting point I x reduction direction needs work Showing polynomialtime ending point x Lemma 21 The relations s s cid2 f f cid2 ppdeﬁnable m Proof Note cid2 s s I J K mK I mK J cid2 ppdeﬁned analogously cid2 f f Lemma 22 Let cid2 ﬁnite set relations ﬁrstorder deﬁnable A m cid2 Then CSP ˆXcid2 polynomialtime reducible CSPcid2 Proof Assume loss generality Lemma 21 Theorem 4 s s cid2 f f cid2 cid2 Arbitrarily choose instance V C CSP ˆXcid2 We variables x y V pair x appears position k k odd constraint C y appears constraint position k 1 Note x y pair solution assign strictly higher value y x Based V C deﬁne instance V cid3 C cid3 CSPcid2 follows 1 For pair variables x y V introduce interval variable I x y V 2 For variables I x y I xz V 3 For variables I yx I zx V 4 For variables I yx I xz V 5 For variables I x y I zx V 6 For constraint Sx1 x2 x2m1 x2m C add constraint RI x1x2 I x2m1x2m C add constraint s s add constraint f f add constraint mI yx I xz C add constraint mI zx I x y C cid2 I x y I xz C cid3 cid2 I x y I xz C cid3 cid3 cid3 cid3 cid3 cid3 cid3 cid3 S ˆXR cid3 R cid2 satisﬁes cid3 cid3 C cid3 satisﬁable V C satisﬁable We claim V Assume V C satisﬁable solution f V Q Deﬁne function f f x f y The variables x y pair appear constraint requires f x f y Thus f I If interval variables I x y I xz V V satisﬁes constraint f C veriﬁed constraints introduced steps 35 satisﬁed f satisﬁed f Assume V deﬁnition ˆX cid3 C cid3 satisﬁable solution f know constraint s s cid3I x y function cid2 I x y I xz cid3I xz f x f z It analogously Finally constraints introduced steps 6 cid3I x y f x f y f The function f f cid3 V cid3 cid3 cid3 cid3 cid3 cid3 cid3 cid3 I For variable x V x V gx I x y variable I x y I yx V gx I yx y V gx V y V Arbitrarily choose function g V V cid3 Deﬁne function f V Q follows cid3 cid3 1 2 f x gx I x y f f x b gx I yx f cid3I x y b cid3I yx b Note exact choice function g deﬁning f x irrelevant interval variables I x y cid3I xz c constraints introduced steps 25 reduction Thus cid3I x y b f I xz f exists exactly function f corresponding given solution f cid3 cid3I x1x2 f We conclude proof proving f solution V C Arbitrarily choose constraint Sx1 x2 x2m1 x2m C Assume ﬁrst variables distinct We need verify f x1 f x2 f x2m1 f x2m S We know cid3I x2m1x2m R construction f combined deﬁnition ˆX implies f holds Assume instead variables distinct We exemplify 4ary constraint Sx y x z This corresponds constraint RI x y I xz C cid3 cid3 C step 2 reduction It guaranteed intervals f cid3I xz R This implies f x f y f x f z S deﬁnition solution know f ˆX It hard generalise reasoning constraints higher arity cid2 additionally constraint s s cid3I x y f cid3I xz start point Since V cid2 I x y I xz C cid3I x y f cid3 cid3 We ready prove Theorem 19 Proof We prove result giving polynomialtime reductions 1 CSPcid2 Ic CSP ˆXcid2 Qc We earlier discussed fact straightforward reduction CSPcid2 CSP ˆXcid2 Assume unary relation constrains interval variable I value b In ranging Q It easy replace reduction I associated variables x x bx constraint bI b Ic constraints ax b Qc 14 P Jonsson Artiﬁcial Intelligence 257 2018 123 2 CSP ˆXcid2 Qc CSP ˆXcid2 We merely note relation ppdeﬁnable ˆXcid2 x y z w ˆXmx z w y reduction exists discussion Theorem 15 3 CSP ˆXcid2 CSPcid2 This reduction exists Lemma 22 4 CSPcid2 CSPcid2 Ic Trivial For arbitrary constraint language cid7 ﬁrstorder deﬁnable Q know CSPcid7 P NPcomplete problem Theorem 18 Since ˆXcid2 ﬁrstorder deﬁnable Q reduction shows CSPcid2 CSPcid2 Ic CSP ˆXcid2 CSP ˆXcid2 Qc P NPcomplete problems cid2 Theorem 19 gives complexity CSPcid2 Ic CSPcid2 I f However conclude Lemma 3 CSPcid2 I f NP Recall complexity CSPcid2 CSPcid2 Ic polynomialtime reductions m cid2 This hold CSPcid2 I f Let cid7 m cid6 cid6 BA B CSPcid7 P cid7 subset ORDHorn class H The problem CSPcid7 I f NPcomplete This proved reduction cid3 3Colourability Let G V E undirected graph For v V introduce variable v constraint cid3 It easy resulting cid3 For edge v w E introduce constraint cid6 v 0 1 1 2 2 3v instance satisﬁable G 3colourable implies CSPcid2 I f NPcomplete cid3 w cid2 422 Discussion It suitable discuss aspects dichotomy result presented previous section One obvious question happens consider languages contain relation m Unfortunately proof breaks Let cid2 R1 Rn ﬁrstorder deﬁnable A m cid2 R 1 n deﬁned quantiﬁerfree formula φi The reductions proof Theorem 19 shows problems CSPcid2 CSPcid7 complexity polynomialtime reductions relations cid7 deﬁned Xφ1 Xφn We demonstrate true general case access relation m cid2 BA B Let Just previous section let cid6 denote equal relation relation cid6 φR I J X Y denote formula mI J cid6X Y φS X A B C formula X A X B X C Deﬁne relations R S I4 follows R I J X Y I4 φR I J X Y S X A B C I4 φS X A B C Let cid2cid3 R S Clearly m cid2cid3 ﬁrstorder deﬁnable A deﬁnition Observe problem CSPcid2cid3 P V C instance CSPcid2cid3 constant function f v 0 1 solution V C Now cid7cid3 R relations cid2cid3 cid3 cid3 S cid3 x1 x8 Q8 XφR x1 x8 R cid3 x1 x8 Q8 XφS x1 x8 S We problem CSPR undirected graph Introduce colour variables c cid3 NPhard reduction 3Colourability Let V E denote arbitrary 3 auxiliary variables a1 a2 a3 impose constraints 2 c 3 c 2 c 1 c 1 c cid3 S 1 R 2 R 3 R cid3a1 a2 a2 a3 c cid3a1 a2 a2 a3 c cid3a1 a2 a2 a3 c 1 c 1 c 2 c 1 c 1 c 2 c 2 c 3 c 3 c 2 3 3 We ﬁrst note constraints simultaneously satisﬁable instance function f a1 a2 a3 c 1 3 Q c f c 1 f c f a1 f a2 f a3 1 f c solution By inspecting deﬁnition R Given follows arbitrary 1 cid6 j 3 f c 2 f c f c cid6 f c 3 distinct intervals 2 f c 3 f c 2 f c 1 f c 2 f c 3 f c 1 f c 3 cid3 evident solution f satisfy f a1 f a2 f a3 cid6 f c j We conclude j f c For vertex v V introduce variables v v constraint P Jonsson Artiﬁcial Intelligence 257 2018 123 15 cid3 S c v v 1 c 2 c f v f c This constraint implies f v sible values constraints 13 This value correspond colour given vertex v 1 3 Thus f v 3 3 c f v f c 2 c 1 c pos Finally edge v w E introduce constraint cid3 R v a1 a2 a2 a3 v w adjacent vertices assigned different colours It This constraint ensures f v hard verify resulting instance satisﬁable V E 3colourable This shows complexities CSPcid2 CSPcid7 match m cid2 cid6 f w w f v f w Another interesting question concerns complexity metaproblem given constraint language cid2 m cid2 cid2 ﬁrstorder deﬁnable A complexity CSPcid2 Preferably want problems kind decidable Let ﬁrst consider structure Q Let cid7 ﬁnite set relations ﬁrstorder deﬁnable Q Bodirsky Kára 13 showed different cases CSPcid7 polynomialtime solvable algebraically characterised classes A similar algebraic classiﬁcation possible CSPcid2 consequently CSPcid2 Ic Theorem 19the complexity CSP determined corresponding set relations ﬁrst order deﬁnable Q In practice following result useful Theorem 23 Bodirsky Kára 13 Bodirsky et al 15 Let cid2 R1 Rn ﬁnite set relations ﬁrstorder deﬁnable Q let φ1 φn denote quantiﬁerfree ﬁrstorder deﬁnitions There algorithm given φ1 φn decides CSPcid2 polynomialtime solvable NPcomplete As far know specialised algorithms performing quantiﬁer elimination Allens algebra described literature There general algorithms purpose Proposition 24 Proposition 3122 Marker 54 Suppose T decidable theory quantiﬁer elimination Then algorithm given formula φ input output quantiﬁerfree formula ψ T x1 xnφx ψx The theory Allen relations ﬁrstorder axiomatisable follows fact theory dense linear order property cf Section 12 Marker 54 combined deﬁnitions basic relations A By choosing T theory Allen relations follows Proposition 24 exists suitable quantiﬁer elimination algorithm Theorem 25 Let cid2 R1 Rn ﬁnite set relations ﬁrstorder deﬁnable A contains relation m let φ1 φn denote ﬁrstorder deﬁnitions There algorithm given φ1 φn decides CSPcid2 polynomialtime solvable NPcomplete Proof The ﬁrstorder formulas φ1 φn algorithmically converted logically equivalent quantiﬁerfree formulas φcid3 1 φcid3 n exploiting deﬁnitions Fig 1 We note following n easily compute quantiﬁerfree formulas Xφcid3 n described Given φcid3 1 Xφcid3 1 φcid3 CSPcid2 polynomialtime equivalent CSP ˆXcid2 Lemma 22 computational complexity CSP ˆXcid2 decidable Theorem 23 access formulas Xφcid3 1 Xφcid3 n deﬁne relations ˆXcid2 Combining facts concludes proof cid2 The result holds CSPcid2 Ic Theorem 19 Even metaproblem decidable evident method outlined timeconsuming We want stress exist eﬃcient methods encouraging example conservative constraints ﬁnite domains They admit polynomialtime algorithm metaproblem straightforward algorithm superexponential 23 5 Method II homogeneous structures Our second method based analysing given constraint language cid2 respect automorphisms method I However central notion method II homogeneity instead ωcategoricity In context homogeneous structures typically ωcategorical method I principle applicable The main advantage working homoge neous structures need method computing orbitdeﬁning formulas This advantage comes price method restricted constraint languages based partition schemes 16 P Jonsson Artiﬁcial Intelligence 257 2018 123 Homogeneous2 structures intensively studied mathematics logics instance connection combinatorics model theory group theory highly relevant study CSPs Homogeneous structures useful properties admitting quantiﬁer elimination ωcategorical struc ture contains ﬁnite number relations domain countably inﬁnite Theoretically interesting examples include Q N random Rado graph There examples obviously relevant AI science One earliest studies homogeneous structures AI performed Hirsch 33 He proved things Allens algebra interval representation homogeneous Another early example homogeneous representation RCC5 proposed Bodirsky Chen 7 ωcategorical representation brieﬂy discussed Section 3 Other examples include RCC8 16 phylogeny constraints 12 temporal constraints partiallyordered time 42 We need machinery providing formal deﬁnition homogeneity Let D domain relational τ structure cid2 arbitrarily choose S D Then substructure induced S cid2 τ structure cid5 domain S Rcid5 Rcid2 Sn nary R τ write cid2S cid5 The structure cid2 called homogeneous isomorphism f D1 D2 ﬁnite induced substructures cid2 extended automorphism cid2 exists automorphism α f x αx x D1 The survey Macpherson 53 good introduction homogeneous structures We simple example illustrate idea homogeneity Example 26 We revisit Example 1 Assume k 1 ﬁxed let D 1 k let Kk denote binary relation x y D2 x cid6 y One easily verify AutKk equals symmetric group set D group permutations D Arbitrarily choose D1 D2 D isomorphism f D1 D2 KkD1 KkD2 Note D D1 D D2 let g D D1 D D2 arbitrary bijection If deﬁne α D D αd f d d D1 αd gd α extension f α permutation D implies α AutKk Since D1 D2 f arbitrarily chosen conclude structure D Kk homogeneous Many additional examples instance article Hirsch 33 Homogeneity fragile concept ωcategoricity For instance cid2 homogeneous cid5 ﬁrstorder deﬁnable cid2 necessarily imply cid5 homogeneous In following concentrate partition schemes deﬁned Section 22 Theorem 27 Let B B1 Bk partition scheme domain D let B cid2 B Assume following 1 cid2 homogeneous 2 domain elements represented way given elements b D possible ﬁnd algorithm A unique B 1 k b B polynomial time measured size representations b Then CSPcid2 CSPcid2 Dc polynomialtime equivalent Proof Let cid2cid3 cid2 Dc The reduction CSPcid2 CSPcid2cid3 trivial concentrate direction Let cid3 instance CSPcid2cid3 We assume loss generality proof Theorem 15 cid3 V I constraints C relations Dc d1x1 dmxm cid3 C cid3 Construct instance I V C CSPcid2 follows let cid3 V V cid19C Bxi x j 1 cid6 j m B Adi d j C C cid3 cid19C d1x1 dmxm The instance I V C obviously generated polynomial time If instance I solution follows immediately I solutionthe constraints cid19C satisﬁable cid3 assignment x1 d1 xm dm If instance I solution s V D claim solution s Let S sx1 sxm T d1 dm The set T contains m elements initial assumptions set S contains m elements constraints cid19C variables x1 xm assigned distinct values constraints cid19C allows equality fact B partition scheme d1 dm distinct values Thus f S T welldeﬁned bijective function let f sxi di 1 m We continue proving following claim cid3 V D I cid3 2 The term ultrahomogeneous literature P Jonsson Artiﬁcial Intelligence 257 2018 123 17 homomorphism BS BT B B Arbitrarily choose tuple b BS By choice S Claim f know sxi b sx j distinct 1 j m We f f b f sxi f sx j di d j We know di d j T remains di d j B If Adi d j B If Adi d j B B This contradicts sxi b sx j b B B B cid3xi x j cid19C C sxi sx j B cid3 cid3 cid3 cid6 B We f isomorphism cid2S cid2T We veriﬁed f bijective function Hence 1 homomorphism homomorphism cid2S cid2T inverse function f need f cid2T cid2S We begin showing f homomorphism cid2S cid2T Arbitrarily choose relation R cid2 R B1 B p B B 1 p Arbitrarily choose b RS The tuple b member relation B B1 B p By Claim f f b B iT f f b RT B R It follows f homomorphism RS RT b arbitrarily chosen RS This turn implies f homomorphism cid2S cid2T R arbitrarily chosen B Next f 1 homomorphism cid2T cid2S Arbitrarily choose relation R cid2 R B1 B p B B 1 p Arbitrarily choose di d j RT The tuple di d j member relation 1d j Bm B1 B p Now consider tuple f sxi sx j If sxi sx j Bm Assume contrary sxi sx j Bn n cid6 m By Claim f sxi f sx j Bn f sxi f sx j di d j This leads contradiction di d j simulta neously member Bn Bm fact B partition scheme 1d j By deﬁnition f f 1di f 1di f Since cid2 homogeneous structure function f extended automorphism α cid2 It follows function s cid3 V D deﬁned s cid3x αsx solution I cid3 merely note s cid3xi di 1 m cid2 The major advantage working homogeneous structures instead method I need eﬃcient algorithm computing orbit formulas Presumably computations required condition 2 Theorem 27 easier carry computing orbit formulas given domain elements represented suitable way In fact constants represent objects real world know relations priori need algorithm computing We exemplify result taking look Allens algebra domain I Hirsch 33 shown A ho mogeneous structure second precondition Theorem 27 clearly satisﬁed given representation We conclude CSPA Ic NPcomplete problem CSPA NPcomplete By Lemma 3 follows directly CSPA I f NPcomplete problem One note CSPH Ic P H ORDHorn subclass 55 H contains 13 basic relations RCC8 serve example We ﬁrst recall result RCC8 presented Li et al 48 They use repre sentation RCC8 objects regions plane RCC8 extended polygonal constants rise NPcomplete problem Unfortunately representation RCC8 known homogeneous method II applicable case There representations homogeneous example presented Bodirsky Wölﬂ 16 In case explicit method analysing relationships tween domain elements Thus construct method restrict oneself objects known cid3 relationships In particular restrict oneself ﬁnite sets constant relations If D c ﬁnite set constant cid3 c ﬁnite lations relations corresponding domain elements computed advance Since D information stored ﬁnite table eﬃciently accessed This gives result analogous Corollary 16 Corollary 28 Let B B1 Bk partition scheme domain D let B cid2 B Dc If cid2 homogeneous CSPcid2 CSPcid2 D cid3 c polynomialtime equivalent Let D cid3 c denote ﬁnite subset One additionally note Corollary 28 applicable RCC5ωcat representation known homo geneous 7 Theorem 27 utilised ways One example following result lifts Theorem 27 ﬁrstorder deﬁnable relations Note result useful proving membership NP Corollary 29 Let B B1 Bk partition scheme let B cid2 B Assume following 1 cid2 homogeneous 2 B satisﬁes precondition 2 Theorem 27 3 CSPB NP For ﬁnite set cid7 R1 Rk relations ﬁrstorder deﬁnable cid2 CSPcid7 Dc CSPcid7 D f NP 18 P Jonsson Artiﬁcial Intelligence 257 2018 123 Proof Arbitrarily choose cid7 R1 Rk satisﬁes preconditions Note CSPcid2 NP CSPB NP cid2 B easily proved lines Lemma 6 By Theorem 27 CSPcid2 Dc NP CSPcid2 NP This implies CSPB Dc NP B cid2 By arguing proof Lemma 20 assume R 1 k quantiﬁerfree deﬁnition B It follows Lemma 6 CSPcid7 Dc NP By Lemma 3 additionally holds CSPcid7 D f NP cid2 6 Method III small solutions The methods Sections 4 5 provide polynomialtime equivalences CSPcid2 CSPcid2 Dc certain conditions In section instead analyse constraint language cid2 Dc directly The main result weaker previous sections able prove membership NP On hand approach applicable ωcategoricity 61 The small solution property Let cid2 arbitrary constraint language domain D assume relations cid2 elements D represented ﬁxed way We cid2 small solution property exists polynomial p depends choice cid2 satisﬁable instance I V C CSPcid2 exists solution s V D sv pI v V Lemma 30 Let cid2 denote constraint language domain D Assume 1 cid2 small solution property 2 exists algorithm A polynomial q arbitrary kary R cid2 d1 dk D algorithm A verify d1 dk R time O qR cid4 k i1 di Then CSPcid2 NP Proof Let V C denote arbitrary instance CSPcid2 To I V C satisﬁable nondeterministically guess solution s V D sv pI v V p denotes ﬁxed polynomial Such solution exists cid2 small solution property size s consequently polynomially bounded I The solution s veriﬁed polynomial time aid algorithm A cid2 Many wellknown structures possess small solution property One example temporal constraint problem introduced Sec 3 V C instance problem solution s V Q exists solution t V 1 V solution represented approximately V log2 V bits The existence t shown following lines let S sv v V a1 ap a1 a2 ap deﬁne tv sv ai It easy verify t solution V C This idea instance verifying Allens algebra small solution property Another example relations R deﬁned linear expressions R deﬁned x1 xk R x1 xk R kcid20 i1 kcid20 i1 ci xi c0 ci xi c0 coeﬃcients Z variables range instance Q Z Given constraint language cid2 containing relations small solution property Q follows fact linear programming solved concrete solution written polynomial time property Z proven Papadimitriou 57 This example interesting respects First constants Qc course linear Furthermore know Example 8 language cid2 x y z Z3 x y z ωcategorical proved domain Q Thus methods Section 4 5 applicable case An important observation suﬃcient verify cid2 small solution propertyone needs verify cid2 Dc small solution property wants use Lemma 30 connection constants We exemplify relation R x y N2 x 2 y1 The constraint language R small solution property P Jonsson Artiﬁcial Intelligence 257 2018 123 19 instance solution assigns 1 variable However CSPR 2 small solutions assume integers written binary Consider instance V C V x0 xn C 2x0 Rx1 x0 Rx2 x1 Rxn xn1 It easy verify V C solvable solution s V N satisfy sxn Towern Tower rapidly increasing function Towern 222 cid5cid6cid7cid8 n times The small solution property particularly useful connection relations constructed logical deﬁnitions Corollary 31 Let cid2 set relations domain D precondition 2 Lemma 30 satisﬁed cid2 Dc small solution property 1 If cid2 partition scheme cid7 ﬁnite set relations quantiﬁerfree deﬁnable cid2 CSPcid7 Dc CSPcid7 D f NP 2 If cid7 ﬁnite set relations quantiﬁerfree positive deﬁnable cid2 CSPcid7 Dc CSPcid7 D f NP Proof We begin proving case 1 Hence assume cid2 partition scheme We know cid2 Dc small solution property CSPcid2 Dc NP Lemma 30 Lemma 6 implies CSPcid7 Dc NP consequently CSPcid7 D f NP Lemma 3 We continue proving case 2 We know cid7 quantiﬁerfree positive deﬁnition cid2 This fact CSPcid2 Dc NP allow apply Lemma 7 conclude CSPcid7 Dc NP CSPcid7 D f NP Lemma 3 cid2 We exemplify Corollary 31 point algebra PA Z recall Sec 23 Z ωcategorical methods I II applicable Let cid2 denote basic relations domain Z By idea proving temporal constraints small solution property follows instance V C CSPcid2 solution solution s V 1 V cid2 small solution property Let consider constraint language cid2 Zc We assume usual constants Zc represented c written binary Let V C denote arbitrary instance CSPcid2 Zc deﬁne S d dx C Building proof idea easily verify V C solution solution s V min S V max S V cid3 cid25log2 max S 1cid27 bits needed represent numbers min S Now r cid25log2 min S 1cid27 r smaller V C We max S respectively This implies cid2 Zc small solution property r r cid2 partition scheme cid2 Zc satisﬁes precondition 2 Lemma 30 We conclude CSPcid7 Zc CSPcid7 Z f members NP cid7 quantiﬁerfree ﬁrstorder deﬁnable cid2 cid3 62 An example based RCC5set We illustrate small solution property RCC5set Henceforth let R denote RCC5 basic relations interpreted RCC5set relations Fig 3 Section 3 It known RCC5set ωcategorical methods Sections 4 5 applicable As warmup simple way proving assumption P cid6 NP Let cid2 R cid6 cid6 equals BREQ B It known CSPcid2 P 3959 We extend cid2 constant cid2cid3 cid2 0 1 2 Consider constraints PP y z 0 1 2z It clear s solution cid2 s y 0 1 2 0 1 0 2 1 2 6 distinct possible choices variable y This implies straightforward polynomialtime reduction 6Colourability CSPcid2cid3 relation cid6 cid2cid3 consequently CSPcid2cid3 NPcomplete If Theorem 15 Theorem 27 applicable CSPcid2cid3 polynomialtime solvable Proving particular constraint language small solution property nontrivial task instance think previously mentioned results concerning linear integer programming When studying qualitative constraint languages encounters relations relates smaller objects larger objects obvious exam ples include lessthan relation subset relation Such relations occasionally useful inductively proving small solution property This idea illustrated lemma Lemma 32 Let D 2 N The constraint language R Dc small solution property 20 P Jonsson Artiﬁcial Intelligence 257 2018 123 Proof Let I V C satisﬁable instance CSPR Dc solution s V 2 cid3 V I cid3 follows cid3 C N Construct new instance Step 1 Remove EQx y constraint collapsing variables x y leave obvious details step reader Step 2 Replace PPcid2x y constraint PP y x Step 3 Remove POx y constraint replacing DRz1 z2 DRz2 z3 DRz3 z1 DRz1 y PPz1 x PPz2 y PPz2 x PPz3 y DRz3 x z1 z2 z3 fresh variables Note following cid3 satisﬁable instance CSPR Dc 1 I 2 nonunary relations appear I DR PP 3 size V cid3 upper bounded polynomial q depend V C Fact 3 established follows fresh variables introduced Step 3 PO constraints removed O V 2 constraints PO binary relation cid3 We variables u v I PPconnected exists sequence variables w 1 w p 1 w 1 u 2 w p v 3 PPw w i1 C cid3 1 p Note u v PPconnected solution s cid3 cid3 I s cid3u s cid3v PP Given constant relation U a1 ak Dc let szU k Now let T maxszU U x C cid3 U Dc If u PPconnected variable v U v C know s cid3 cid3u T solution s cid3 I cid3 We prove V cid3 cid3 T different elements needed representing solution induction number This implies result reasoning follows loss generality assume set variables V cid3 T bits view value possible values 2 bit vector ith component equals 1 member set Hence CSPR Dc small solution property V cid3T To represent value set need V cid3 qV qI T I qI 1V Basis step If V unary relation set cardinality T suﬃcient cid3 1 V cid3 v singleton set suﬃcient value v v constrained Induction hypothesis Assume claim holds V cid3 p cid3 cid3 cid3 C cid3 p 1 If variables v v cid3 Induction step We claim V v PPconnected v cid3 solution leads contradiction Thus choose variable PPconnected v V v cid3 v V v maximal respect PPconnectedness v PPconnected variable Let I restricted variable set V v By induction hypothesis need pT values instance instance I cid3cid3 If exists U v C need T values v gives pT T p 1T values I total If U v C need additional value v need pT 1 p 1T values total To v worst case PPconnected variable v induction hypothesis contain pT different values However strict superset variables accomplished adding fresh element cid2 cid3 V cid3cid3 cid3 Theorem 33 Let cid2 ﬁnite set relations quantiﬁerfree deﬁnable R Then CSPcid2 Dc CSPcid2 D f NP Proof Combine Lemma 32 Corollary 31 cid2 P Jonsson Artiﬁcial Intelligence 257 2018 123 21 63 Discussion The idea Lemma 32 readily extended classes relations related RCC5 certain variants set relations cf Bodirsky Hils 10 references article generalised directions An interesting observation NP membership results RCC5 RCC8 plane Li et al 48 implicitly based small solution property There representational size regions analysed bounded exploiting particular parameter related embeddings planar graphs plane Another interesting observation Li 47 uses concepts similar PPconnectedness constructing different realisations RCC8 formalism This indicate approach taken proof Lemma 32 easily adapted spatial formalisms We conclude section observations concerning small solution property First important realise converse Lemma 30 necessarily hold Clearly function logTowern grows faster polynomial n Now consider constraint language cid2 U 1 U 2 U x N x Toweri Checking instance CSPcid2 satisﬁable trivially solved polynomial time U 1 U 2 represented reasonable wayfor instance U represented number written binary Thus CSPcid2 NP It obvious cid2 small solution property represent natural numbers binary Finally want emphasise choice exact interpretation representation relations main elements extremely important Recall ωcategorical homogeneous representation RCC5 denoted RCC5ωcat In case adding constants preserves computational complexity polynomialtime reductions The orem 27 given relations domain elements represented suitable way Recall adding ﬁnite number constant relations preserve complexity Corollary 28 We know earlier example adding single constant preserve complexity RCC5set At time know Proposition 13 CSPs RCC5set RCC5ωcat computational problem 7 Conclusions We presented different methods analysing complexity qualitative CSPs extended ﬁnite unary relations Assume constraint language cid2 domain D want analyse complexity CSPcid2 Dc CSPcid2 D f Which method use If cid2 ωcategorical methods I modelcomplete cores II homogeneity considered ﬁrst If way eﬃciently computing orbitdeﬁning formulas method I typically easiest method use gives polynomialtime equivalence CSPcid2 CSPcid2 Dc However B cid2 cid2 quantiﬁerfree deﬁnable B partition scheme B check cid2 homogeneous If apply method II circumvent need computing orbitdeﬁning formulas Note polynomialtime equivalence CSPcid2 CSPcid2 Dc case If cid2 ωcategorical problems applying method I andor II resort method III small solutions We exemplify approach taking closer look cardinal relation algebra CRA 2950 Here domain elements points plane basic relations N NE E SE S SW W NW equality relation EQ cid3 holds x x cid3 SW y y cid3 Let B denote set cardinal directions For instance x x y y relations set Q2 Li et al 48 shown B extended constants andor ﬁnite unary relations rise NPcomplete constraint satisfaction problem We ﬁnegrained analysis case add constants constraint languages Hirsch 32 Corollary 8 shown CRA ωcategorical method I principle applicable However given constraint language cid2 B know right away modelcomplete core know compute orbitdeﬁning formulas This probably worked easily CRA closely related point algebra PA A simpler way note Hirsch 32 Theorem 1 proved CRA homogeneous If combine fact CRA partition scheme easily apply method II conclude following B cid2 B CSPcid2 CSPcid2 Q2c polynomialtime equivalent problems Methods I II based exploiting modeltheoretical properties underlying constraint languages While methods based model theory universal algebra common studying CSPs viewpoint theoretical science 31320 methods popular AI community notable exceptions Hirsch 32 Huang 35 Thus opportunity discuss methods slightly cid3 Method I The main obstacle applying method I need computing orbitdeﬁning formulas eﬃciently In fact known problem decidable general case Studying problem important future research direction In cases know eﬃciently generate orbitdeﬁning formulas possible workarounds We encountered ﬁrst workaround Corollary 16 restriction ﬁnite sets constant relations Another workaround sacriﬁce polynomialtime equivalence allow time computing orbitdeﬁning formula If problem hand NPhard preferably mildly exponential algorithm acceptable In cases algorithmic methods generating orbitdeﬁning formulas helpful We note positive related deﬁnability problems recently successfully addressed cf Bodirsky et al 15 22 P Jonsson Artiﬁcial Intelligence 257 2018 123 Their methods interesting combine methods taken universal algebra Ramsey theory topological dynamics Method II Given structure cid2 diﬃcult verify homogeneous Here note cid2 contains ﬁnite number relations domain cid2 countably inﬁnite cid2 homogeneous cid2 ωcategorical cf Macpherson 53 This explains check ωcategoricity ﬁrst accom plished Theorem 11 If cid2 ωcategorical cid2 homogeneous formula Thcid2 equivalent quantiﬁerfree formula instance Macpherson 53 This gives alternative way proving homogeneity automorphismbased deﬁnition directly This clariﬁes connections method I method II recall cid2 modelcomplete formula Thcid2 equivalent existential formula Another approach homogeneity construct suitable homogeneous structures scratch The main tool Fraïssé amalgamation The details outside scope article Macpherson 53 outlines approach concrete constructions RCC5 RCC8 Bodirsky Chen 7 Bodirsky Wölﬂ 16 respectively One note amalgamation common literature CSPs related problems referred patchwork property 355261 Acknowledgements We thank Meysam Aghighi Manuel Bodirsky Fredrik Heintz Johan Thapper anonymous reviewers providing valuable input article This research receive speciﬁc grant funding agencies public commer cial notforproﬁt sectors References 1 James F Allen Maintaining knowledge temporal intervals Commun ACM 26 11 1983 832843 2 Libor Barto The dichotomy conservative constraint satisfaction problems revisited Proc 26th Annual IEEE Symposium Logic Computer Science LICS2011 2011 pp 301310 3 Libor Barto Marcin Kozik Constraint satisfaction problems solvable local consistency methods J ACM 61 1 2014 3 4 Bruce L Bauslaugh Corelike properties inﬁnite graphs structures Discrete Math 138 13 1995 101111 5 Manuel Bodirsky Cores countably categorical structures Log Methods Comput Sci 3 1 2007 116 6 Manuel Bodirsky Complexity classiﬁcation inﬁnitedomain constraint satisfaction Mémoire dhabilitation à diriger des recherches Université Diderot Paris 7 Available arXiv12010856 2012 7 Manuel Bodirsky Hubie Chen Qualitative temporal spatial reasoning revisited J Log Comput 19 6 2009 13591383 8 Manuel Bodirsky Víctor Dalmau Datalog constraint satisfaction inﬁnite templates J Comput Syst Sci 79 1 2013 79100 9 Manuel Bodirsky Martin Grohe Nondichotomies constraint satisfaction complexity Proc 35th International Colloquium Automata Languages Programming ICALP2008 2008 pp 184196 10 Manuel Bodirsky Martin Hils Tractable set constraints J Artif Intell Res 45 2012 731759 11 Manuel Bodirsky Peter Jonsson A modeltheoretic view qualitative constraint reasoning J Artif Intell Res 58 2017 339385 12 Manuel Bodirsky Peter Jonsson Trung Van Pham The reducts homogeneous binary branching Crelation J Symb Log 81 4 2016 12551297 13 Manuel Bodirsky Jan Kára The complexity temporal constraint satisfaction problems J ACM 57 2 2010 14 Manuel Bodirsky Jan Kára A fast algorithm datalog inexpressibility temporal reasoning ACM Trans Comput Log 11 3 2010 15 15 Manuel Bodirsky Michael Pinsker Todor Tsankov Decidability deﬁnability J Symb Log 78 4 2013 10361054 16 Manuel Bodirsky Stefan Wölﬂ RCC8 polynomial networks bounded treewidth Proc 22nd International Joint Conference Artiﬁcial Intelligence IJCAI2011 2011 pp 756761 2003 2003 pp 321330 17 Andrei Bulatov Tractable conservative constraint satisfaction problems Proc 18th Annual IEEE Symposium Logic Computer Science LICS 18 Andrei Bulatov Conservative constraint satisfaction rerevisited J Comput Syst Sci 82 2 2016 347356 19 Andrei Bulatov A dichotomy theorem nonuniform CSPs Proc 58th IEEE Annual Symposium Foundations Computer Science FOCS2017 20 Andrei Bulatov Peter Jeavons Andrei Krokhin Classifying computational complexity constraints ﬁnite algebras SIAM J Comput 34 3 2017 pp 319330 2005 720742 21 Peter J Cameron Oligomorphic Permutation Groups Cambridge University Press Cambridge 1990 22 Georg Cantor Über unendliche lineare Punktmannigfaltigkeiten Math Ann 23 1884 453488 23 Clément Carbonnel The dichotomy conservative constraint satisfaction polynomially decidable Proc 22nd International Conference Prin ciples Practice Constraint Programming CP2016 2016 pp 130146 24 David Cohen Peter Jeavons Peter Jonsson Manolis Koubarakis Building tractable disjunctive constraints J ACM 47 5 2000 826853 25 Anthony G Cohn Jochen Renz Qualitative spatial representation reasoning Handbook Knowledge Representation Elsevier 2008 pp 551596 26 Daniel Leng Fredrik Heintz Qualitative spatiotemporal stream reasoning unobservable intertemporal spatial relations landmarks Proc 30th AAAI Conference Artiﬁcial Intelligence AAAI2016 2016 pp 957963 27 Ivo Düntsch Hui Wang Stephen McCloskey A relationalgebraic approach region connection calculus Theor Comput Sci 255 12 2001 6383 28 Frank Dylla Jae Hee Lee Till Mossakowski Thomas Schneider André van Delden Jasper van Ven Diedrich Wolter A survey qualitative spatial temporal calculi algebraic computational properties ACM Comput Surv 50 1 2017 7 29 Andrew U Frank Qualitative spatial reasoning cardinal directions Proc 7th Austrian Conference Artiﬁcial Intelligence ÖGAI91 1991 pp 157167 30 Stella Giannakopoulou Charalampos Nikolaou Manolis Koubarakis A reasoner RCC5 RCC8 calculi extended constants Proc 28th AAAI Conference Artiﬁcial Intelligence AAAI2014 2014 pp 26592665 31 Pavol Hell Jaroslav Nešetˇril Graphs Homomorphisms Oxford University Press Oxford 2004 32 Robin Hirsch Relation algebras intervals Artif Intell 83 2 1996 267295 P Jonsson Artiﬁcial Intelligence 257 2018 123 23 2016 pp 3745 33 Robin Hirsch Expressive power complexity algebraic logic J Log Comput 7 3 1997 309351 34 Wilfrid Hodges Model Theory Cambridge University Press 1993 35 Jinbo Huang Compactness implications qualitative spatial temporal reasoning Proc 13th International Conference Knowledge Representation Reasoning KR2012 2012 36 Peter Jeavons On algebraic structure combinatorial problems Theor Comput Sci 200 12 1998 185204 37 Peter Jonsson Finite unary relations qualitative constraint satisfaction Proc 22nd European Conference Artiﬁcial Intelligence ECAI2016 38 Peter Jonsson Christer Bäckström A unifying approach temporal constraint reasoning Artif Intell 102 1 1998 143155 39 Peter Jonsson Thomas Drakengren A complete classiﬁcation tractability RCC5 J Artif Intell Res 6 1997 211221 40 Peter Jonsson Victor Lagerkvist Upper lower bounds time complexity inﬁnitedomain CSPs Proc 21st International Conference Principles Practice Constraint Programming CP2015 2015 pp 183199 41 Markus Junker Martin Ziegler The 116 reducts Q J Symb Log 73 3 2008 861884 42 Michael Kompatscher Trung Van Pham A complexity dichotomy poset constraint satisfaction Proc 34th Symposium Theoretical Aspects Computer Science STACS2017 2017 47 43 Manolis Koubarakis Tractable disjunctions linear constraints basic results applications temporal reasoning Theor Comput Sci 266 12 2001 311339 2003 591640 2013 3258 227259 1995 4366 44 Arne Kreutzmann Diedrich Wolter Qualitative spatial temporal reasoning ANDOR linear programming Proc 21st European Conference Artiﬁcial Intelligence ECAI2014 2014 pp 495500 45 Andrei Krokhin Peter Jeavons Peter Jonsson Reasoning temporal relations tractable subclasses Allens interval algebra J ACM 50 5 46 C Langford Some theorems deducibility Ann Math 28 1927 1640 47 Sanjiang Li On topological consistency realization Constraints 11 1 2006 3151 48 Sanjiang Li Weiming Liu Shengsheng Wang Qualitative constraint satisfaction problems extended framework landmarks Artif Intell 201 49 Sanjiang Li Mingsheng Ying Extensionality RCC8 composition table Fundam Inform 55 34 2003 363385 50 Gérard Ligozat Reasoning cardinal directions J Vis Lang Comput 9 1 1998 2344 51 Gérard Ligozat Jochen Renz What qualitative calculus A general framework Proc 8th Paciﬁc Rim International Conference Artiﬁcial Intelligence PRICAI2004 2004 pp 5364 52 Carsten Lutz Maja Milicic A tableau algorithm description logics concrete domains general Tboxes J Autom Reason 38 13 2007 53 Dugald Macpherson A survey homogeneous structures Discrete Math 311 15 2011 15991634 54 David Marker Model Theory An Introduction Springer 2002 55 Bernhard Nebel HansJürgen Bürckert Reasoning temporal relations maximal tractable subclass Allens interval algebra J ACM 42 1 56 Charalampos Nikolaou Manolis Koubarakis Querying incomplete information RDF SPARQL Artif Intell 237 2016 138171 57 Christos Papadimitriou On complexity integer programming J ACM 28 4 1981 765768 58 David A Randell Zhan Cui Anthony G Cohn A spatial logic based regions connection Proc 3rd International Conference Principles Knowledge Representation Reasoning KR1992 1992 pp 165176 59 Jochen Renz Bernhard Nebel On complexity qualitative spatial reasoning maximal tractable fragment region connection calculus Artif Intell 108 12 1999 69123 Handbook Spatial Logics Springer 2007 pp 161215 60 Jochen Renz Bernhard Nebel Qualitative spatial reasoning constraint calculi Marco Aiello Ian PrattHartmann Johan van Benthem Eds 61 Michael Sioutis Manolis Koubarakis Consistency chordal RCC8 networks Proc 24th International Conference Tools Artiﬁcial Intelligence 62 Matthias Westphal Julien Hué Stefan Wölﬂ On scope qualitative constraint calculi Proc 37th Annual German Conference AI KI2014 63 Dmitriy Zhuk A proof CSP dichotomy conjecture Proc 58th IEEE Annual Symposium Foundations Computer Science FOCS2017 2017 ICTAI2012 2012 pp 436443 2014 pp 207218 pp 331342