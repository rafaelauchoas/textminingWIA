Artiﬁcial Intelligence 172 2008 265299 wwwelseviercomlocateartint Redundancy logic II 2CNF Horn propositional formulae Paolo Liberatore Dipartimento di Informatica e Sistemistica Università di Roma La Sapienza Via Ariosto 25 00185 Roma Italy Received 9 August 2006 received revised form 4 June 2007 accepted 15 June 2007 Available online 27 June 2007 Abstract We report results redundancy formulae 2CNF form In particular slight improvement trivial redundancy algorithm complexity results problems related ﬁnding Irredundant Equivalent Subsets IES 2CNF formulae The problems checking 2CNF formula unique IES checking clause IESs polynomial Checking 2CNF formula IES given size checking clause IESs 2CNF formula polynomial NPcomplete depending formula cyclic Some results Horn formulae reported 2007 Elsevier BV All rights reserved Keywords Propositional logic Computational complexity Redundancy 1 Introduction Problems related redundancy logic similar ﬁelds investigated number authors Ginsberg 9 Schmolze Snyder 25 studied problem redundancy production rules Several authors investi gated problem minimizing formula particular emphasis Horn formulae 11112192028 Gottlob Fermüller 10 gave results redundancy literal ﬁrstorder clause Liberatore 1718 provided complexity results CNF case nonclassical logics Büning Zhao 3 studied problems equivalence extensionequivalence irredundant formulae Various authors studied problem minimal unsatisﬁability 2721 In article report complexity problems related redundancy formulae 2CNF Horn form In particular considered problems checking formula redundant establishing minimal size Irredundant Equivalent Subset IES formula checking clause IESs formula The ﬁrst problem polynomial polynomiality consistency checking 2CNF Horn formulae slight improvement trivial algorithm exists For problems complexity shown polynomial NPcomplete depending structure formula There reasons checking redundancy formula ﬁnding irredundant equivalent subset Most reasons apply kind formulae regardless general propositional Email address paololiberatoreorg 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200706003 266 P Liberatore Artiﬁcial Intelligence 172 2008 265299 formulae 2CNF Horn formulae nonclassical logics Some peculiar tractable restrictions 2CNF Horn Generally logic formula come user directly encoding domain automated translation formal language In ﬁrst case presence redundant formula indicate aspects domain particular importance sufﬁciently understood Intentional redundancy information particular domain indicate need sure domain correctly encoded On hand unintentional redundancy indicate undetected problems encoding multiple people names expressing different concepts Simplifying formula removing redundancy shows parts needed result error detection redundancy unintentional conﬁrmation correctness intentional If formula results translation redundancy indications information language originally expressed However highlight problems introduced translation As example set formulae correct merging result incon sistent formula different meaning variables different formulae 16 The problem generate redundancy Depending particular scenario redundancy results sources providing information Either way detecting redundancy tells signiﬁcant On technical redundancy intentionally added formulae speedup consistency entailment solving Removing redundancy way formulae easier understand humans On hand increasing size formulae generally makes solving harder This particular important cases consistency entailment polynomial problems 2CNF Horn If set clauses originally contains large number redundant clauses removing redundant ones provide speedup reduction size original formula This gain useful formula example checked consistency entailment different formulae cost redundancy removal amortized consistency entailment tests The results presented paper differ previous work settings speciﬁc analyzed problems Related work different settings Ginsberg 9 Schmolze Snyder 25 production rules propositional formulae Gottlob Fermüller 10 worked different logic ﬁrstorder studied different problem redundancy single clause redundancy clause set clauses Liberatore 18 investigated redundancy nonclassical logics Related work propositional logic roughly divided classes First investiga tions making propositional formula small possible preserving equivalence This problem originates article polynomial hierarchy introduced 20 subject number studies 111121928 emphasis Horn formulae These results differ ones present article different problem Minimizing formula means producing equivalent formula minimal size formula syntactically different original point sharing recognizable Minimization redundancy elimination different tasks serve dif ferent purposes minimization produces formulae strictly minimal size redundancy elimination required reduce size possible preserves structure original formula adding new The classes related work problems irredundancy restriction allowed data subproblems irredundancy In ﬁrst class falls work Büning Zhao 3 studied problems restriction involved formulae irredundant In second class problem minimal unsatisﬁability 2721 problem considered subcase irredundancy considered formula assumed unsatisﬁable In article work settings showing results 2CNF unsatisﬁable formulae Liberatore 17 provided complexity results CNF case The present article contains similar study 2CNF Horn case These special cases generally considered importance consistency entailment polynomial NPcomplete While Horn case generally considered important subcases attention 2CNF case given shown number recent articles subject 4513262729 The rest paper organized follows In section technical overview presented results We general theorems proving results In following sections P Liberatore Artiﬁcial Intelligence 172 2008 265299 267 results shown problems redundancy checking Irredundant Equivalent Subsets IES In partic ular Section 4 contains result redundancy checking Section 5 contains easiest results IESs Section 6 size IESs Section 7 problem checking clause IESs given formula Section 8 contains results Horn formulae Technical lemmas proofs moved appendix ease reading 2 Overview results The ﬁrst problem consider checking redundancy 2CNF formula Since formula redundant equivalent subsets checking equivalence 2CNF formulae polynomial problem polynomial We slightly improve trivial algorithm showing redundancy checked time Onm n number variables m number clauses formula The problems consider irredundant equivalent subsets IES formula In particular following problems easily shown polynomial formulae 2CNF check formula IES check clause IESs formula check formula unique IES The problems polynomial thanks following results 17 clause γ IESs formula Π Πγ γ formula Π unique IES γ Π Πγ cid3 γ Π Combined fact inference polynomial 2CNF formulae results imply checking presence clause IES checking uniqueness IESs polynomial problems Two problems IESs require complicated complexity analysis checking clause IES formula checking formula IES size bounded integer k The complexity problems largely depend presence cycles clauses formula Namely formula contains cycle clauses deﬁned sequence clauses l1 l2 l2 l3 ln l1 problems typically NPcomplete polynomial formula contain cycles The complexity analysis 2CNF form carried separately different cases As explained Section 34 equivalence 2CNF formulae different features depending formula 1 inconsistent 2 consistent implying literals 3 consistent implying literal We prove clauses containing implied literals clauses containing implied literals consid ered separately More precisely problem redundancy solved steps 1 check redundancy Π clauses l lcid5 Π l 2 remove Π clauses l lcid5 Π l check redundancy A similar procedure problems IESs prove IES consistent formula composed parts second IES formula composed clauses containing implied literal An IES formula ﬁrst ﬁnding IES reduced formula checking clauses added allow derivation literals implied original formula While conditions inconsistent formulae formulae implying literals formulae implying literals require different analysis complexity usually cases Namely complexity checking redundancy Onm regardless conditions complexity problems pres ence IES uniqueness IESs depend presence cycles formula consistency presence implied literals 3 Preliminaries In paper study CNF formulae 2CNF Horn form Given set propositional variables literal variable negated variable A clause disjunction literals particular unarybinary clause clause composed literals A Horn clause clause containing positive literal 268 P Liberatore Artiﬁcial Intelligence 172 2008 265299 A set clauses containing unary binary clauses 2CNF formula A set clauses composed Horn clauses Horn formula Redundancy clauses formulae deﬁned follows Deﬁnition 1 A clause γ redundant CNF formula Π Πγ γ This deﬁnition allows clause γ Π classiﬁed redundant Π However typically interested redundancy clauses γ Π Obviously γ Π irredundant Π irredundant Π cid5 Π Deﬁnition 2 A CNF formula redundant contains redundant clause In paper study problem checking redundancy 2CNF Horn formulae problems related making formula irredundant eliminating redundant clauses What results process formalized following deﬁnition Deﬁnition 3 See 17 An Irredundant Equivalent Subset IES CNF formula Π formula Π cid5 Π cid5 Π Π cid5 Π Π cid5 irredundant Every formula IES An irredundant formula single IES formula A redundant formula number IESs ranging exponentially 17 The following properties proved previous article Property 1 See 17 A clause γ IESs formula Π γ irredundant Π Property 2 See 17 A formula Π single IES γ Π Πγ cid3 γ Π For reasons explained shortly set literals entailed formula technically important studying redundancy The following notation literals entailed formula Notation Π l Π l The following notation clauses containing literal set Notation Πl1 lm γ li γ γ Π We use Πl Πl l literal 31 Unit propagation The proofs complexity redundancy 2CNF formulae unit propagation The following lemmas proofs appendix entailment related unit propagation We denote R derivation resolution UP derivation unit propagation In follows Π denotes 2CNF formula set clauses composed literals We assume Π contain clause By resolution trees mean regular resolution trees root labeled clause necessarily The following property immediately follows resolution complete inference method prime implicates 22 Property 3 For set clauses Π clause γ holds Π γ exists γ cid5 γ Π R γ cid5 When applied binary clauses property reformulated P Liberatore Artiﬁcial Intelligence 172 2008 265299 269 Π l1 l2 following conditions hold Π R Π R l1 Π R l2 Π R l1 l2 Each cases inconsistency entailment literal entailment clause corre sponds property unit resolution following lemmas proved appendix Lemma 1 For 2CNF formula Π literals l1 l2 Π R l1 l2 Π l1 UP l2 Lemma 2 For 2CNF formula Π literal l Π R l Π l UP Lemma 3 A 2CNF formula Π inconsistent exists variable x Π x UP Π x UP These lemmas following easy consequence Lemma 4 For 2CNF formula Π literals l1 l2 Π l1 l2 Π inconsistent Π l1 UP Π l2 UP Π l1 UP l2 32 Unit clauses If Π contains binary clauses unary clause Π l UP lcid5 means lcid5 obtained propagating l Π l unit clause Π l If case Π l UP lcid5 equivalent reachability lcid5 l graph Π induced l We generally assume Π composed binary clauses In particular start formula binary clauses applying Corollary 1 Lemma 3 leads formulae containing unit clauses On hand unit clause l replaced logically equivalent pair l x l x x new variable occurring rest formula Since l l x l x redundancy l equivalent redundancy pair l x l x properties related IESs unaffected replacement The property changed replacing l l x l x size IESs formula replacing single clause pair clauses This problem taken care counting pair single clause algorithms checking size minimal IES formula In rest paper check Π l1 UP l2 Π l1 UP assume transformation preliminary Π Π contains binary clauses This way checking unit propagation looking graph Π induced l1 In particular Π l1 UP l2 means graph Π induced l1 path l1 l2 By deﬁnition Π l1 UP means unit propagation l allows reaching pair opposite literals l2 l2 Graphically exists path l1 l2 path l1 l2 graph Π induced l1 Let l3 common literal paths Graphically condition represented Fig 1 Since l2 reached l3 l3 reached l2 As result exists path l1 l3 l3 l2 l2 l3 In words Fig 1 Two ways viewing contradiction entailed literal 270 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Π l1 UP implies exists single path starting l1 includes pair opposite literals In sequel clauses path l1 mean single path starting l1 ending ﬁrst literal opposite literal path 33 Cyclicity induced graphs The presence cycles clauses formula determines complexity problems related IESs Formally cycles deﬁned follows Deﬁnition 4 Simple cycle binary clauses A cycle binary clauses sequence clauses l1 l2 l2 l3 ln l1 literal li occurs clauses variable occurs This deﬁnition covers simple cycles clauses allowed cross literal twice Deﬁning nonsimple cycle clauses possible necessary paper classify formulae depending cycles The graph 2CNF formula induced literal roughly speaking graph literals derived given unit propagation Deﬁnition 5 The graph induced literal l 2CNF formula Π minimal containment sets nodes edges graph N E 1 l N 2 lcid5 N lcid5 lcid5cid5 Π lcid5cid5 N lcid5 lcid5cid5 E A property acyclic formulae induced subgraphs acyclic vice versa Property 4 A 2CNF formula Π contains simple cycles induced graphs contain cycles Formulae containing cycles interesting properties First consistent acyclic 2CNF formulae entailing literal single IES makes problems related IESs computationally simpler The second result acyclic formulae literals l1 l2 entailed formula choice minimal subset clauses entailing l1 independent choice l2 These results proved later sections The following lemma shows chain clauses prove Π l UP share clauses formula acyclic Lemma 5 In acyclic 2CNF formula chains clauses l lcid5 lcid5 lcid5 share clauses Proof If chains contain clause lcid5cid5 lcid5cid5cid5 formula cyclic chains cross literal lcid5cid5 twice If ﬁrst chain contains lcid5cid5 lcid5cid5cid5 second lcid5cid5cid5 lcid5cid5 cycle clauses lcid5cid5cid5 lcid5cid5 chain lcid5cid5 lcid5 reverse chain lcid5cid5cid5 lcid5cid5 cid2 34 Analysis cases separately As mentioned analysis problem redundancy checking problems IESs separately cases 1 formula inconsistent 2 formula consistent implies literals 3 formula consistent imply literals P Liberatore Artiﬁcial Intelligence 172 2008 265299 271 Fig 2 An IES consistent formula Fig 3 An IES consistent formula entailing literal Fig 4 An IES inconsistent formula We explain cases require different analysis Let consider ﬁrst case formula implying literal By Lemma 4 clause entailed formula literals derived unit propagation negation If γ Π Π cid5 IES Π Π cid5 γ As result problem redundancy problems IESs reformulated terms formulae induced graphs reachability relation graphs original formula Fig 2 exempliﬁes idea This requirement restrictive considering literals implied formula For example l2 reachable l1 original formula l1 entailed formula reachability condition necessarily true IESs formula Indeed needed unit propagation l1 allows reaching contradiction condition l2 reachable l1 necessarily true IESs formula Such condition shown Fig 3 Finally formula inconsistent IESs required inconsistent Not IESs reachability relation different original formula omit mention literals Indeed subset inconsistent formula inconsistent mention literals original formula Fig 4 shows example IES mention variables l1 l2 original formula consistency guaranteed variable x Summarizing cases studied separately different requirements equivalent subsets ﬁrst case reachability unit propagation IESs formula second case reachability negation implied literals case reachability arbitrary pair opposite literals 35 Inconsistent 2CNF formulae In section present results irredundant inconsistent 2CNF formulae The ﬁrst result formula acyclic contains unary clauses binary ones Theorem 1 Every inconsistent set binary clauses cyclic In general 2CNF contain unary clauses cyclic inconsistent time As example x x y x y inconsistent acyclic If 2CNF formula includes unary clauses generally turn clauses equivalent binary clauses x example replaced x z x z z new 272 P Liberatore Artiﬁcial Intelligence 172 2008 265299 variable This transformation create cycles proved lemma happens formula inconsistent Lemma 6 Every 2CNF formula Π containing unit clauses l equivalent Πl l y l y y new variable second formula cyclic Π cyclic inconsistent An acyclic 2CNF inconsistent contains unary clauses Since IESs inconsistent contain unary clause On hand irredundant acyclic 2CNF formula contains unary clauses This proved following lemma Lemma 7 Every resolution tree rooted 2CNF formula unary clauses leaves This lemma proves inconsistency 2CNF formula proved resolution tree having unary clauses leaves Since set leaves tree sufﬁcient prove inconsistency unary clauses sufﬁcient prove inconsistency Lemma 8 Every irredundant inconsistent 2CNF formula contains unary clauses The following theorem shows binary clauses 2CNF formula consistent formula inconsistent inconsistency proved unit propagation Lemma 9 If Π irredundant inconsistent 2CNF Π cid5 Π cid5cid5 set unary binary clauses respec tively Π cid5cid5 consistent Π cid5 Π cid5cid5 UP These lemmas Lemma 5 prove considered problems IESs polynomial 2CNF formulae inconsistent irredundant This test propagation unit clause time checking minimal number clauses needed reach unit propagation pair opposite literals negation unit clause 36 Formulae implying literals A consistent 2CNF formula Π imply literals We long redundancy IESs concerned treat clauses containing implied literal containing separately A ﬁrst obvious property replace clauses containing entailed literal literal Π l add l Π remove clauses form l lcid5 Lemma 10 If Π CNF formula Π l Π ΠΠl l equivalent Replacing clauses containing entailed literal literal preserve equivalence redundancy clauses containing entailed literal Lemma 11 Let Π formula implying literal l If clause γ Π contain l γ redundant Π redundant ΠΠl l This lemma shows clauses containing literals entailed formula checked redundancy clauses containing entailed literals replaced entailed literals The following corollary obvious consequence lemma Corollary 1 If Π consistent 2CNF Π l Π contains redundant clause containing l ΠΠl l redundant P Liberatore Artiﬁcial Intelligence 172 2008 265299 273 This corollary shows determined clauses containing literal l Π l irredundant replace clauses l Repeating procedure literals implied formula obtain formula disjoint unit binary clauses This Π l clause l lcid5 replaced l clause l lcid5 replaced lcid5 Π lcid5 As result binary clause contains variable unit clause resulting formula A similar result holds IESs replacing clauses containing entailed literals literals formula IESs generates formula IESs Lemma 12 Let Π consistent 2CNF Π l If Π cid5 IES Π Π2 Π cid5Πl l IES ΠΠl l The converse lemma hold Even Π2 IES ΠΠl l necessarily true IES Π obtained simply adding clauses Πl Actually adding clauses Πl necessarily lead formula equivalent Π following example shows Π x x1 x x2 x1 y x2 y x y l x ΠΠl l x1 y x2 y x y x Π2 x2 y x y x Π2l Πl x2 y x y x x1 x x2 It holds Π x proved adding x Π unit propagation x1 x2 derived leading y y respectively It easy prove Π2 equivalent ΠΠl l x y x entail y clause x1 y entailed Π2 The irredundancy Π2 easy prove removing single clause x y x2 derived longer Adding clauses Πl Π2 allow derive x longer Indeed Π2l Πl model x x1 x2 y true assigns false x An analysis counterexample shows converse Lemma 12 false The problem clause x y makes y true original formula This clause allows remove x1 y necessary Π entail x Without clause x y converse Lemma 12 hold Π l x In appendix counterexample invalidates candidate proof converse Lemma 12 The following easy lemma corollary separation variables clauses Lemma 13 Every clause 2CNF formula Π ΠΠ contain literals Π negation Corollary 2 For 2CNF formula Π holds ΠΠΠ Π share variables This corollary base result Indeed shows ΠΠΠ Π composed parts ΠΠΠ Π sharing variables The result holds referred arbitrary subset Π particular holds IESs The following lemma proves replacing clauses ΠΠ Π converse Lemma 12 holds Lemma 14 Let Π consistent 2CNF formula If Π2 IES ΠΠΠ Π Π2Π ΠΠ equivalent Π Proof sketch Since Π ΠΠΠ Π equivalent Π2 IES ΠΠΠ Π Π2 Π equivalent The claim proved showing Π2Π ΠΠ entails Π This prove Π2Π ΠΠ equivalent Π2Π ΠΠ Π superset Π2 equivalent Π Intuitively proof follows l Π proof l Π This proof involves clauses ΠΠ clauses ΠΠΠ On hand entailed Π entailed 274 P Liberatore Artiﬁcial Intelligence 172 2008 265299 equivalent formula Π2ΠΠ Π Since Π2ΠΠ Π built disjoint literals clause Π containing literals entailed Π derivable Π2ΠΠ cid2 This lemma proves Π2Π ΠΠ equivalent Π prove IES Π In general true However IES obtained set removing clauses ΠΠ Lemma 15 Let Π consistent 2CNF formula If Π2 IES ΠΠΠ Π exists Π1 ΠΠ Π1 Π2Π IES Π Proof sketch Lemma 14 shows adding ΠΠ Π2Π results set equivalent Π The statement present lemma false IES obtained removing clause Π2Π This equivalent redundancy clause Π2Π ΠΠ This turn proved false showing simple manipulation formulae equivalent redundancy Π2 cid2 The converse lemma immediate consequence repeated application Lemma 12 We conclude following corollary Corollary 3 Π2 IES ΠΠΠ Π exists Π1 ΠΠ Π1 Π2Π IES Π We lemma clauses containing literal entailed formula Lemma 16 Every consistent 2CNF formula Π implying literal l containing clauses containing l contains redundant clause containing l Proof sketch If l Π clause containing l redundant If l Π proof based fact Π l UP Π consistent In turn equivalent l implying opposite literals unit propagation requires possibly disjoint chains clauses The ﬁrst clauses chains clauses containing l necessary entail l clauses containing l entailed l redundant cid2 An obvious consequence lemma consistent irredundant 2CNF formula implying literal contains clauses containing literal 37 Acyclic consistent 2CNF formulae implying literals single IES We acyclic consistent 2CNF formula implying literal single IES If Π consistent Π cid3 l literal l Π l lcid5 holds Π l UP lcid5 The holds subsets Π particular IESs Lemma 17 If Π consistent acyclic 2CNF Π l UP lcid5 Π cid5 l UP lcid5 holds IES Π cid5 Π Proof sketch Both antecedent consequent statement equivalent entailment l lcid5 formula IESs equivalent imply clauses cid2 Every literal l partitions Π set clauses involved ﬁrst step unit propagation l ones DΠ l γ Π γ l l RΠ l ΠDΠ l cid5 P Liberatore Artiﬁcial Intelligence 172 2008 265299 275 Fig 5 The graph induced literal l 2CNF formula Fig 6 RΠ l MΠ l The clauses DΠ l ﬁrst step unit propagation l The following set CΠ l set literals result propagation CΠ l l cid5 l l cid5 Π cid5 l l cid2 l cid3 cid5 DΠ l Since clauses l lcid5 DΠ l Π entailed IES Π cid5 Π Since Π consistent CNF subsets Π cid5 particular Since Π cid5 entails l lcid5 Π cid5 consistent entailing literals lcid5 reachable l graph induced l Π cid5 In turn given lcid5 CΠ l reachable l l lcid5 Π cid5 literal lcid5cid5 l lcid5cid5 Π cid5 lcid5 reachable lcid5cid5 edges corresponding clauses RΠ l Fig 5 shows example graph induced literal l 2CNF formula In example l l4 removed Π clause allowing l4 reached l The holds l l1 The clauses l l2 l l3 instead redundant l2 l3 reached l following edge corresponding clause l l1 following edges corresponding clauses RΠ l This example shows irredundant clauses containing literals CΠ l reached literals CΠ l Such literals necessarily exist formula induced graphs acyclic ﬁnite MΠ l l cid5cid5 CΠ l RΠ l l cid5 CΠ l cid3 l cid5cid5 UP l cid5 Formally MΠ l set literals reached literals CΠ l unit propagation clauses RΠ l In example RΠ l MΠ l shown Fig 6 The nodes reached nodes l1 l4 Therefore MΠ l l1 l4 The following corollary states MΠ l characterizes irredundant clauses containing l Its ancillary lemmas proofs appendix Corollary 4 A clause l l1 IES consistent acyclic 2CNF formula Π l1 MΠ l Since statement corollary form l1 l2 proved IES l2 MΠ l1 need check l1 MΠ l2 The holds l1 l2 proved IES way This result tells 2CNF consistent acyclic formula imply literals single IES 276 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Theorem 2 Every consistent acyclic 2CNF formula Π implying literals single IES Proof For clause l1 l2 check l2 MΠ l1 If true l1 l2 IESs IES Therefore set composed clauses l1 l2 l2 MΠ l1 single IES Π cid2 38 Implied literals cycle consistent 2CNF formula In section consider redundancy clauses containing literal entailed consistent formula cycle clauses We lcid5 lcid5cid5 literals independently choose clauses containing lcid5 clauses containing lcid5cid5 form IES In words IES obtained choosing subset clauses containing lcid5 subset clauses containing lcid5cid5 choices independent By Lemma 2 Π consistent Π l holds Π l UP Using transformation Section 32 assume Π contain unary clauses Therefore Π l UP means reach pair opposite literals propagating l Π The following notations introduced previous section DΠ l γ Π γ l l RΠ l ΠDΠ l cid5 l l CΠ l l cid5 Π cid5 Since Π l equivalent subset Π allows reaching pair opposite literals l This possible following conditions true 1 l l1 Π Π l1 UP 2 l l2 Π Π l2 UP l equivalent l l2 Π Π l2 UP l3 l3 l Π If Π cid5 IES Π conditions hold Π hold Π cid5 In addition Π contain cycle including l holds Π cid5 As result unit propagation l1 l2 l3 include l l cycle Consider formula graphically represented Fig 7 All paths l1 l2 l3 entirely contained RΠ l l cycle As result derivations possible IES Π cid5 Π possible clauses RΠ l possible Π cid5 RΠ l In words Π cid5 l1 UP Π cid5 RΠ l l1 UP derivation l3 l2 As result Π cid5 RΠ l entails l addition l l1 pair l l2 l l3 Let formally denote sets literals like l1 pairs literals like l2 l3 Fig 7 An example formula P Liberatore Artiﬁcial Intelligence 172 2008 265299 277 SΠ l PΠ l cid2 l1 CΠ l RΠ l l1 UP cid2 l2 l3 CΠ l RΠ l l2 UP l3 cid3 cid3 SΠ l In words SΠ l set literals reach contradiction unit propagation RΠ l PΠ l composed pairs literals negation reachable RΠ l The reasoning formalized lemma formally proved appendix Lemma 18 If Π cid5 IES consistent acyclic 2CNF formula Π Π l l cycle clauses Π following IESs Π 1 Π cid5 RΠ l l l1 l1 SΠ l 2 Π cid5 RΠ l l l2 l l3 l2 l3 PΠ l This lemma shows simple way determining IES acyclic consistent formula literal l Π l choose clause l l1 l1 SΠ l pair clauses l l2 l l3 l2 l3 PΠ l By lemma choice clauses containing literal entailed formula 4 Redundancy checking In section consider problem checking 2CNF formula redundant If m number clauses 2CNF formula size formula m 2m Checking consistency set binary clauses linear time time Om The trivial algorithm checking Πγ γ γ Π requires Om clause Om2 total time We improve result showing algorithms solve problem time Onm n number variables formula possible cases inconsistent formulae formulae implying literals Cyclicity affect problem checking redundancy Here summary results cases The formula inconsistent If set inconsistent irredundant number clauses times number variables Therefore number clauses greater set redundant If lower check redundancy running time Omm trivial algorithm Onm The formula consistent For literal l proceed differently depending Π l holds The formula implies literal If Π l Π inconsistent Π R l Since Π assumption consistent Π R l By Lemma 2 Π l UP We consider cases separately l clauses Formula Π redundant Lemma 16 l clauses By assumption Π l UP In order check redundancy remove clauses containing l check UP leads l Two UP derivations linear number clauses needed literal l The formula imply literal Since Π cid3 l Πl lcid5 l lcid5 Πl lcid5 l UP lcid5 Therefore consider graph induced unit propagation l Π check lcid5 reachable l edge corresponding l lcid5 This test linear time modiﬁed algorithm graph reachability The description algorithms proofs correctness given following sections 41 Redundancy checking inconsistent 2CNF formulae Lemma 3 shows inconsistent 2CNF formula contains clauses allowing x x derive unit propagation In turn implies existence acyclic chains clauses allow derivation opposite literals x x respectively 278 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Lemma 19 A 2CNF formula Π inconsistent irredundant composed simple chains clauses like following ones x l1 l1 l2 x p1 p1 p2 lm y y s1 sm y pm z z q1 qm z This lemma shows inconsistent irredundant set clauses composed exactly chains clauses containing literal twice The length chain number literals number clauses formula times number literals Therefore inconsistent 2CNF formula contains number clauses greater times number variables redundant If contains clauses Onm Omm Therefore checking consistency Πγ γ Π complexity Onm 42 Redundancy checking Consistent 2CNF formulae implying literals When formula consistent implies literals redundancy clauses l lcid5 Π l checked linear time time Om required literal l implied Π The redundancy clauses checked verifying redundancy ΠΠl l Lemma 1 Performing step literal entailed Π produces formula ΠΠΠ Π The parts ΠΠΠ Π formula share variables Lemma 2 ﬁrst entail literal The redundancy ﬁrst checked algorithm section Let l literal Π l By Lemma 2 Π l UP means unit propagation l derives literal negation In words exists variable x Π l UP x Π l UP x By deﬁnition acyclic paths graph Π induced l l x l x The ﬁrst clause paths clauses necessary derive x x l Regardless clauses clauses containing l necessary prove Π l UP As result l contained clauses Π formula redundant In order check redundancy clauses l lcid5 Π l ﬁrst check number clauses greater If case set redundant Otherwise check redundancy clauses l lcid5 simply performing lineartime entailment check Πl lcid5 l lcid5 clauses l lcid5 Since clauses test requires linear time This test repeated literals l Π l total running time Onm 43 Redundancy checking Consistent 2CNF formulae implying literals We redundancy 2CNF consistent formulae implying literals checked time Onm n number variables m number clauses formula Let Π consistent 2CNF formula implying literal let l lcid5 clauses Lemma 4 simpliﬁed thanks assumption literal implied Πl lcid5 l lcid5 holds Πl lcid5 l UP lcid5 Indeed l lcid5 implied Π implied Πl lcid5 We check Πl lcid5 l UP lcid5 checking graph induced l Π contains path l lcid5 contain edge corresponding clause l lcid5 We check clauses containing l time Om We recall deﬁnition CΠ l CΠ l l cid5 l l cid5 Π Redundancy clause l lcid5 equivalent existence path graph Π induced l literal CΠ l lcid5 In general path containing l node CΠ l node CΠ l formula redundant Consider example following graph induced l formula This formula redundant delete edge l lcid5cid5 lcid5cid5 reachable l shown Fig 8 P Liberatore Artiﬁcial Intelligence 172 2008 265299 279 Fig 8 Clause l lcid5cid5 redundant Fig 9 Reachability node CΠ l prove redundancy The ﬁrst step algorithm remove l incident edges graph The second step checking existence path CΠ l CΠ l resulting graph Note pair opposite literals reached l Π entail l A variant algorithm node reachability check visiting graph The original algorithm reachability follows 1 starting node marked 0 nodes marked 2 step set NH nodes marked highest integer let integer n NH consider successors m b mark m minimum 1 previous marker 3 label changed Step 2 stop The idea label node distance starting node By visiting graph widthﬁrst considering edge process This algorithm linear This algorithm applied problem redundancy graph acyclic start nodes CΠ l instead single node visit graph node CΠ l reached In words reach situation successor m node n NH CΠ l set clauses redundant The algorithm work cyclic graphs formula redundant node CΠ l reached node CΠ l On contrary node CΠ l reached formula necessarily redundant cycle kind prove redundancy Fig 9 shows node CΠ l reachable node CΠ l reachable node CΠ l set redundant The algorithm modiﬁed way checks node CΠ l reached node CΠ l This marking node visit distance CΠ l nodes CΠ l reachable This variant node reachability algorithm linear set nodes CΠ l node reachable grow contain nodes However node reachable different nodes CΠ l care node started longer Indeed node lcid5 reachable different nodes l1 l2 CΠ l node l3 CΠ l reachable lcid5 l1 l2 different l3 As result graph contains path l1 l3 l2 l3 l1 l2 different l3 As result node l known reachable different nodes CΠ l need check node CΠ l reached l The algorithm follows In ﬁrst phase labels nodes n n CΠ l integer special mark 1 node n CΠ l marked 0 n N0 CΠ l set 0 2 set Ni1 3 let m Ni let n marker successors t 280 P Liberatore Artiﬁcial Intelligence 172 2008 265299 t marked mark 1 n t Ni1 b t marked j n j cid2 change marker c t marked j s n cid3 s mark d t marked change mark 4 Ni1 stop set 1 step 2 This usual visit graph widthﬁrst The point mark nodes distance CΠ l node reached Whenever node reachable nodes CΠ l mark continue search If node m CΠ l successor node marked n n cid3 m graph redundant Note algorithm linear edge traversed We visit successors nodes marked check node CΠ l reached This original reachability algorithm linear time This algorithm determines redundancy clauses containing literal time Om Therefore clauses checked time Onm 5 Irredundant equivalent subsets IESs The following problems IESs polynomial 2CNF formulae polynomiality entail ment restriction check formula IES formula Check containment irredundancy check clause IESs A clause γ IESs CNF formula Π Πγ cid3 γ 17 uniqueness A CNF formula Π unique IES γ Π Πγ cid3 γ Π 17 Two problems require detailed analysis size IES checking formula IES size bounded number k presence clause IES checking given clause present IES given formula As clear tables complexity cases successfully classiﬁed depend formula consistent implies literals However proofs different cases In tables single indicates formulae implying single literal nonsingle indicates formulae implying literal Size IES inconsistent acyclic cyclic P single P NPhard nonsingle P NPhard Presence IES inconsistent P NPhard single P NPhard nonsingle P NPhard acyclic cyclic We use following order cases ﬁrst acyclic cases cyclic cases case ﬁrst consider inconsistent formulae consistent formulae implying literals consistent formulae implying literals In rest section prove results easily follow previous ones The problems inconsistent acyclic 2CNF formulae easily proved polynomial Acyclicity implies set binary clauses consistent Theorem 1 Therefore Lemma 8 Lemma 9 apply IES P Liberatore Artiﬁcial Intelligence 172 2008 265299 281 contains unary clauses IES proved inconsistent applying unit propagation unary clauses This leads following algorithm building IES minimal size pair literals calculate minimal number binary clauses necessary derive second literal ﬁrst unit propagation This algorithm similar algorithm minimal distance graph Given distances compute unit clause l literals lcid5 lcid5 minimal number clauses needed derive lcid5 l lcid5 lcid5 These chains contain clause Lemma 5 minimal number clauses needed derive inconsistency unit propagation l In similar way compute minimal number clauses reach negation unit clause unit clause As presence clause IES proceed follows unit clause pair opposite literals check exists path comprises clause goes unit clause pair opposite literals In way checks exists path unit clause negation unit clause The following results consistent acyclic 2CNF formulae proved Acyclic consistent formulae implying single literals unique IES Building IES acyclic consistent formula implying literals l1 l2 ln choosing independently clauses containing l1 clauses containing l2 These facts allow proving acyclic consistent 2CNF formulae determine presence size IESs polynomial time Theorem 3 The unique IES consistent acyclic 2CNF formula implying literals quadratic time Proof Let Π consistent acyclic 2CNF formula Since single IES clause IES IESs Since checking presence IESs checking Πγ γ inference lineartime 2CNF formulae conclude checking presence clause unique IES formula linear time cid2 The proof theorem shows quadratic algorithm generating single IES Π based uniqueness IES However Lemma 4 allows slightly better algorithm l check clauses l l1 visiting graph RΠ l Since construction visit RΠ l takes linear time overall running time Onm n number variables m number clauses formula Theorem 4 The problems presence clause IES existence IES given size polynomial time acyclic consistent 2CNF formulae Proof By Lemma 18 presence clause l lcid5 Π l IES depends lcid5 SΠ l exists lcid5cid5 lcid5 lcid5cid5 PΠ l Since SΠ l PΠ l checked polynomial time deﬁnition checking presence clause l lcid5 IES polynomialtime problem Π l All clauses checked polynomial time thanks Corollary 3 Theorem 3 One smallest IESs acyclic formula built similar way choosing l clause l lcid5 lcid5 SΠ l possible pair clauses l lcid5 l lcid5cid5 lcid5 lcid5cid5 PΠ l To account pair clauses l lcid5 l lcid5 replace unit clause l transformation Section 32 count pair single clause cid2 6 Size IES In section consider problem checking formula IES size bounded given integer k This problem proved polynomial inconsistent consistent acyclic 2CNF formulae In section prove results consistent cyclic formulae case inconsistent cyclic formula open 282 P Liberatore Artiﬁcial Intelligence 172 2008 265299 61 Size IES Cyclic consistent 2CNF formulae implying literals We Lemma 18 hold literal l consideration cycle clauses Consider following formula Π l cid5 l l l cid5 l l cid5cid5 l cid5 x l cid5 x l cid5cid5 y l cid5cid5 y The graph Π induced l shown Fig 10 clearly shows simple cycle literals l lcid5 For formula SΠ l lcid5 lcid5cid5 PΠ l According Lemma 18 Π cid5 IES Π replace Π cid5 DΠ l single clause containing literal SΠ l results IES Π We counterexample The formula Π equivalent l lcid5 lcid5cid5 The following IES Π cid5 l cid5 l l l cid5cid5 l cid5cid5 y l cid5cid5 y Π Π cid5 represented graph Fig 11 This subset equivalent Π entails literals l lcid5 lcid5cid5 Indeed lcid5cid5 entailed clauses lcid5cid5 y lcid5cid5 y l lcid5 entailed lcid5 l l lcid5cid5 lcid5cid5 reachable unit propagation l lcid5 According Lemma 18 able obtain IES Π cid5 replacing clauses DΠ l l lcid5 lcid5 SΠ l Let Π cid5cid5 Π cid5DΠ l lcid5 l lcid5cid5 y lcid5cid5 y If Lemma 18 true cyclic formulae hold Π cid5cid5 l lcid5 IES Π This false set imply l lcid5 Graphically Π cid5cid5 l lcid5 represented Fig 12 This formula entails lcid5cid5 longer entails l lcid5 These literals involved cycle formula Intuitively Lemma 18 hold cyclic formulae Π cid5 lcid5 UP holds IES Π cid5 Π lcid5 SΠ l unit derivation lcid5 involve literal l Therefore choice clauses containing l independently choices clauses We problem checking existence IES formula NPcomplete remains NPhard formula entails literal variables The following lemma needed preliminary result obtained applying result Fortune et al 8 Lemma 20 Deciding graph contains simple cycle including given nodes NPcomplete Fig 10 The graph Π induced l Fig 11 An IES formula Fig 10 Fig 12 The graph Π cid5cid5 induced l shows Π cid5cid5 IES Π P Liberatore Artiﬁcial Intelligence 172 2008 265299 283 Proof Membership obvious guess set edges check simple cycle including nodes Hardness holds presence cycle equivalent homomorphism graph G cid15a b b b acid16 subset graph This problem NPhard G contain node head edges node tail edges 8 cid2 This theorem shows problem checking set clauses implying single literal containing cycles graph induced negation literal NPcomplete Theorem 5 Deciding consistent 2CNF formula IES size k NPcomplete remains NPhard formula implies literal variable Proof Hardness proved reduction problem checking existence simple cycle graph containing given nodes x y We assume y reachable x vice versa nodes reached reach x y If conditions met problem trivial graph purged nodes The reduction follows node graph variable Another variable z For edge b graph clause b We add clauses x z y z x y nodes checked simple cycle This set clauses satisfy condition theorem z z reachable positive literal Let k number nodes graph plus Let assume graph contains simple cycle including x y In case IES size k composed following clauses x z y z clauses corresponding edges cycle clause node obtained recursively adding clause connecting node cycle This IES size k contains clause associated outgoing edge node node original graph exception x y IES contains clauses x z y z Let assume graph contain simple cycles including x y Since removing x z y z makes formula imply literals longer IES formula contains clauses precisely z z reachable positive literal IES formula As result x reachable y vice versa However graph contain simple cycle node w outgoing edges paths Since positive literal z associated outgoing edge IES formula total number edges needed form IES k 1 cid2 62 Size IES Cyclic consistent formulae implying literals The problem determining formula IES size k NPcomplete formula consistent cyclic This particular true formula entail literal Theorem 6 Deciding 2CNF formula IES size bounded k NPcomplete remains NPhard formula implies variables equivalent imply single literal Proof The problem ﬁnding minimum equivalent subgraph NPcomplete In particular remains complete graph strongly connected 1424 This problem ﬁnding minimum number edges graph makes resulting graph strongly connected We reduction problem checking exists IES 2CNF formula Π size bounded k Let G N E graph The set variables Π set nodes N For edge j set Π contains clause j For nodes j node j reachable Π UP j In order complete proof Π cid3 l literal l true reachability onetoone correspondence entailment showing equivalence graphs implies equivalence corresponding formulae vice versa Since clause contains positive negative literal satisﬁed model setting variables true model setting variables false These models Π However satisﬁes literal l Therefore literal l implied Π cid2 284 P Liberatore Artiﬁcial Intelligence 172 2008 265299 7 Presence IES In section study problem checking clause contained IESs given 2CNF formula For acyclic sets problem proved polynomial This result holds cycles present include clause check case consistent formulae formal proof statement given Appendix A8 We prove problem NPcomplete cyclic formulae regardless formula consistent implies literals 71 Presence IES Cyclic inconsistent 2CNF formulae The problem deciding presence clause IES inconsistent 2CNF formula NPhard formula contains cycles We use simple preliminary lemma Lemma 21 The problem checking graph existence simple path node x node y including given edge NPcomplete We prove problem presence clause IES NPcomplete formula inconsistent cyclic Theorem 7 Deciding cyclic inconsistent 2CNF formula IES contains given clause NP complete Proof Membership obvious problem solved guessing subset formula checking IES contains given clause Hardness proved reduction problem checking graph contains simple path node includes given edge Given instance original problem G x y b want determine exists simple path x y including edge b build formula Π follows node graph variable edge n m graph clause n m ﬁnally add following clauses z w new variables y z y z x w x w Graphically Π represented Fig 13 Removing single clause containing z w makes formula satisﬁable Therefore clauses IESs formula Since 2CNF formula unsatisﬁable Π w UP Π w UP variable w clauses necessarily included paths w w clauses redundant As result Π cid5 IES Π exists literal l y reachable l x reachable l The second condition equivalent l reachable x conditions equivalent existence path x y As result Π cid5 IES Π contains clauses containing z w path x y If path x y subset formula cyclic formula irredundant clauses cycle removed preserving reachability y x preserving unsatisﬁability As result IESs formula bijection simple paths x y Such formula contains b exists simple path x y including edge b cid2 Fig 13 Graphical representation Π P Liberatore Artiﬁcial Intelligence 172 2008 265299 285 72 Presence IES Cyclic consistent 2CNF formulae implying literals In section consider problem presence clause IES cyclic consistent 2CNF formula implying literals The case cycle includes clause check proved polynomial Appendix A8 We general problem NPcomplete Theorem 8 The problem checking presence clause IESs consistent 2CNF formula Π NPcomplete remains hard Π l positive literal l Proof The proof reduction problem deciding existence vertexdisjoint paths directed graph NPcomplete 68 corresponding problem undirected graphs polynomial 23 This problem establishing graph G contains path node s1 node t1 path node s2 node t2 paths share nodes We assume node graph t1 t2 reachable nodes satisfying condition removed graph polynomial time The formula consider corresponding graph Fig 14 This formula implies negation positive literals x pair nodes x x reached node graph The property true IESs formula Since x x form pair opposite literals graph property holds l3 l4 reachable node x x graph corresponding IES If G pair vertexdisjoint paths s1 t1 s2 t2 respectively exists IES containing clause l1 l2 Let consider subformula Π cid5 built follows First Π cid5 contains clauses corresponding edges subgraph Fig 15 Second Π cid5 contains number clauses corresponding edges making t1 t2 reachable node G having property adding clause s t t1 t2 reachable t Fig 14 The graph formula proof Fig 15 The ﬁrst Π cid5 286 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Fig 16 The edges necessarily contained IES Π Fig 17 s2 connected t2 t1 s The addition clauses t2 reachable s1 t1 s2 clause s t added edge outgoing s IES The subformula Π cid5 makes l3 l4 reachable l1 l1 reachable node graph As result Π cid5 Π Since l4 reachable l1 edge l1 l2 corresponding clause irredundant Π cid5 Since l1 l2 irredundant Π cid5 IES Π cid5 contains clause Property 1 Since Π cid5 Π IES Π cid5 IES Π Therefore l1 l2 contained IESs original formula Let assume G contains vertexdisjoint paths s1 t1 s2 t2 respectively We prove l1 l2 redundant IES formula Since x variable occurs direct negated graph IES Π l3 l4 reachable variable x x Fig 16 shows edges necessarily contained IES Π outgoing edges node edges incoming l3 l4 Since s2 connected nodes outside G l3 l4 connected t1 t2 If t1 reachable s2 l3 l4 reachable l1 clause l1 l2 redundant We assume s2 connected t2 t1 shown Fig 17 By assumption t1 reachable s2 edges inside G The node s1 connected l4 path starting t2 However path l1 l2 ﬁnally s1 By assumption path s1 t1 shares node path s2 t2 makes t1 reachable s2 contradicting assumption cid2 73 Presence IES Cyclic consistent 2CNF formulae implying literals The problem checking presence clause IES 2CNF formula polynomial formula acyclic consistent entail single literal We problem NPcomplete formula consistent cyclic First formula consistent entail literals clause l1 l2 irredundant following lemma P Liberatore Artiﬁcial Intelligence 172 2008 265299 287 Lemma 22 If Π entail l1 l2 contains clauses l1 w w l2 w variable appearing clauses Π equivalent Π l1 l2 clauses l1 w w l2 irredundant Π Proof Equivalence fact l1 l2 obtained l1 w w l2 resolution Irredundancy fact Π l1 UP w Π Π consistent entail literals Since l1 w clause containing w positively clause necessary For reason w l2 irredundant cid2 If clause necessary formula contained IESs Whenever formula Π consistent entail literals want clause l1 l2 contained IESs replace l1 w w l2 The original clause implied new ones resolution new clauses irredundant In order proofs simple use following notation Notation l1 l2 means l1 w w l2 w new variable We use notation clauses l1 w w l2 actually represent single clause l1 l2 w The circle symbol reminds clauses removed formula changing semantics We prove deciding presence clause IES formula NPcomplete Theorem 9 Deciding clause IES cyclic consistent 2CNF formula Π NPhard single literal implied Π Π makes literals equivalent Proof We proof hardness 3sat The set clauses generated particular reduction clauses form l lcid5 Such formulae represented induced graphs In proof use l lcid5 denote reachability lcid5 l l lcid5 denote mutual reachability l lcid5 reached Given set clauses Γ γ1 γm generate formula Π clauses l1 l2 way l1 l2 IESs Π Γ satisﬁable The graph corresponding Π strongly connected In particular truth assignments Γ correspond subsets Π l2 n l1 node n Therefore graph strongly connected l1 l2 The truth assignment satisﬁes Γ l1 l2 hold corresponding subformula making clause l1 l2 necessary From consider Π graph The graph corresponding Γ follows variable xi x For clause γj node cj The clauses Π following ones nodes xi x 1 The clause checked presence IES l1 l2 2 Nodes forming strongly connected component containing l1 3 Nodes forming strongly connected component containing l2 xi l1 xi x b xi x c x l1 l1 x l2 x x l2 cj xi γj b x cj xi γj c x d γj l2 This graph strongly connected This true graph representing IES Π As example clause γ1 x1 x2 represented Fig 18 example uses binary clause clauses literals converted similar way The nodes l1 l2 omitted ﬁgure simple node missing left arrow l1 right l2 Arrows marked circle removed correspond irredundant clauses 288 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Fig 18 The subgraph corresponding γ1 x1 x2 A binary clause ﬁgure simpler clauses literals converted similar way Fig 19 Dotted lines clauses removed M assigns true x1 x2 Every truth assignment Γ associated set clauses remove Π aim obtaining IES In particular Π satisﬁable remove clauses way l2 n l1 holds node n l1 l2 This way l1 l2 necessary graph strongly connected equivalent original Let assume Γ satisﬁable let M models We build subset Π removing following clauses 1 xi positive M remove clause xi x 2 xi negative M way clauses x node cj Fig 19 shows clauses removed formula M assigns true x1 x2 In subgraph l2 n l1 holds nodes For nodes x edges l2 x l1 The cycle l1 xi x causes nodes xi strongly replacing x connected component l1 xi negative M A node cj strongly connected component l2 thanks cycle l2 x cj cj l2 xi positive M cj similar cycle literal cj true M negative l1 cycle x x Since l2 n l1 holds nodes addition clause l1 l2 makes nodes reachable making formula equivalent original On hand l1 l2 true graph paths l1 xi xi x clause x cj removed holds similar paths containing x cj cj l2 broken clause xi x place x x P Liberatore Artiﬁcial Intelligence 172 2008 265299 289 Let assume Π IES Π cid5 containing clause l1 l2 truth assignment satisfying clauses Γ Since graph Π strongly connected holds Π cid5 Since removing l1 l2 makes graph Π cid5 strongly connected 1 l2 reachable l1 graph corresponding Π cid5l1 l2 2 node reachable l1 l2 reaches l1 l2 graph corresponding Π cid5l1 l2 addition l1 l2 graph strongly connected Since xi reachable l1 reach l1 l2 reach l2 Π cid5 In words clauses l1 l2 As result xi xi x Π cid5 xi As result following partial model consistent set literals Π cid5 xi xi x M xi xi x xi x Π cid5 We clauses Γ satisﬁed M Let γj clause Since clause cj l2 removable l1 cj hold l2 reachable l1 As result l2 cj hold This implies cj Π cid5 In ﬁrst case exists index xi γj x Π cid5 clause create path l1 l2 This implies xi set true M Since xi x xi γj clause γj satisﬁed M The case xi γj x cj Π cid5 xi γj x cj Π cid5 similar cid2 8 Horn formulae When considering complexity redundancy Horn formulae following problems clearly polynomial 1 checking redundancy 2 set IES 3 clause IESs 4 uniqueness The problem size easily proved NPcomplete corresponding proof case consistent acyclic 2CNF formulae implying single literals uses clauses corresponding edges graph nodes positive literals These clauses form x y binary Horn clauses We problem size NPcomplete inconsistent Horn formulae Theorem 10 Deciding Horn formula Π equivalent subset size k NPcomplete Proof Membership obvious Hardness proved reduction vertex cover Let G graph We build following set Horn clauses node unit clause xi edge z j clauses xi az xj az ﬁnally clause a1 Inconsistent subsets formula composed a1 plus pair xi xi az edge z This means exactly clause xi az edge graph Moreover edge include unit clause corresponding incident nodes Therefore minimal inconsistent subsets onetoone correspondence vertex covers original graph Namely G vertex cover k nodes formula inconsistent subset m 1 k clauses m number edges G cid2 9 Conclusions The analysis problems redundancy presented paper shows interesting pattern complexity problems related cyclicity problems polynomial acyclic problems NPcomplete cyclic ones Interestingly complexity instead depends considered formula consistent Quantitatively shown checking redundancy algorithm slightly efﬁcient trivial In particular checking redundancy possible clause requires time Om2 m total size set clauses algorithm running time Omn exists n number 290 P Liberatore Artiﬁcial Intelligence 172 2008 265299 variables This running time asymptotically different total size set clauses m quadratically larger number variables n A number problems NPhard general case turned polynomial 2CNF case In particular case problem checking redundancy checking set IES checking clause IESs given formula checking formula unique IES In particular problems polynomial thanks previous results IESs clause IESs redundant formula unique IES set irredundant clauses equivalent 17 The problems IES size presence clause IES required technical analysis This required separate study restrictions formulae inconsistent consistent implying literals consistent implying literals Surprisingly restrictions inﬂuenced ﬁnal results problems polynomial NPcomplete depending formula acyclic cyclic aforementioned restriction One problem left open checking size IES cyclic inconsistent formulae Based results logical assume problem NPcomplete However considering case required separate analysis possible case different turns polynomial instead Appendix A Proofs A1 Unit propagation Lemma 1 For 2CNF formula Π literals l1 l2 Π R l1 l2 Π l1 UP l2 Proof Since Π R l1 l2 exists resolution tree rooted l1 l2 We prove claim induction height tree The base case recursion tree leaf In case l1 l2 Π implies Π l1 UP l2 Let assume claim holds binary clause proved tree height k prove clauses requiring trees height k 1 Let consider tree height k 1 l1 l2 root Its subtrees height equal k roots labeled l1 l3 l3 l2 literal l3 note resolution allow derive l1 l2 l1 l2 Fig A1 shows tree Since resolution trees l1 l3 l3 l2 height equal k induction hypothesis Π l1 UP l3 Π l3 UP l2 hold As result Π l1 UP l2 cid2 Lemma 2 For 2CNF formula Π literal l Π R l Π l UP Proof The claim proved induction height resolution tree rooted l In base case tree leaf l Π holds The claim Π l UP holds We assume claim true literal derivable Π resolution tree height equal k prove holds height k 1 Let l root resolution tree height k 1 The root tree l children binary unary clause resolved binary clause Let consider case depicted Fig A2 ﬁrst By induction Π l1 UP subtree rooted l1 height equal k By Lemma 1 l implies l1 unit propagation As result Π l UP Let consider situation children l binary clauses Let l1 literal resolved clauses l l1 l l1 Such tree depicted Fig A3 Fig A1 A resolution tree rooted l1 l2 P Liberatore Artiﬁcial Intelligence 172 2008 265299 291 Fig A2 A resolution tree child root unary Fig A3 A resolution tree children root binary Since l l1 root resolution tree leaves clauses Π follows Π R l l1 By Lemma 1 Π l UP l1 Π l UP l1 Since l allows deriving pair contradictory literals unit propagation Π l UP cid2 Lemma 3 A 2CNF formula Π inconsistent exists variable x Π x UP Π x UP Proof The direction obvious thanks soundness unit propagation Let consider minimal regular resolution tree Π Its root marked children marked x x variable x Therefore Π R x Π R x By Lemma 2 claim proved cid2 Lemma 4 For 2CNF formula Π literals l1 l2 Π l1 l2 Π inconsistent Π l1 UP Π l2 UP Π l1 UP l2 Proof The direction fact unit propagation sound complete entailment method Π UP γ Π γ The direction proved applying Property 3 Indeed Π γ implies Π inconsistent implies l1 l2 l1 l2 resolution In turns Π R l1 implies Π l1 UP similarly Π R l2 thanks Lemma 2 Moreover Π R l1 l2 implies Π l1 UP l2 thanks Lemma 1 cid2 A2 Inconsistent 2CNF formulae Theorem 1 Every inconsistent set binary clauses cyclic Proof Let Π set binary clauses By Lemma 3 Π inconsistent exists variable x Π x UP Π x UP Since Π contains binary clauses assumption conditions equivalent existence paths clauses x variable y x y x variable z x z The second fourth paths reversed leading path y x z x respectively These paths ﬁrst original ones form cycle x y x z x cid2 Lemma 6 Every 2CNF formula Π containing unit clauses l equivalent Πl l y l y y new variable second formula cyclic Π cyclic inconsistent Proof Equivalence obvious Let assume Π acyclic Π cid5 Πl l y l y prove Π inconsistent Since Π acyclic Π cid5 cycle Π cid5 contains l y l y Let assume cycle contains l y Since y new variable possible clause cycle y l This means rest cycle composed clauses l z w l This means l obtained applying unit propagation l clauses Πl Since Π contains l inconsistent cid2 Lemma 7 Every resolution tree rooted 2CNF formula unary clauses leaves 292 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Proof We prove subtree root contains unary clause leaves Since root labeled subtrees rooted x x We prove claim ﬁrst subtree proof second similar If subtree composed x claim proved Otherwise x children unary Since binary clause obtained resolving binary clauses descendants binary clauses As result binary clauses children x binary clauses descendants If x unary child argument subtree rooted child children unary descendants binary clauses children labeled binary clauses As result subtree unary leaf The argument applies subtree tree unary clauses leaves cid2 Lemma 8 Every irredundant inconsistent 2CNF formula contains unary clauses Proof Let Π irredundant inconsistent 2CNF formula Consider resolution proofs inconsistency By Lemma 7 tree contains unary clauses leaves As result Π contained unary clauses ones leaves tree redundant cid2 Lemma 9 If Π irredundant inconsistent 2CNF Π cid5 Π cid5cid5 set unary binary clauses respec tively Π cid5cid5 consistent Π cid5 Π cid5cid5 UP Proof Since Π cid5cid5 consistent Π cid5 By Lemma 8 Π cid5 contains unary clauses Let ﬁrst assume Π cid5 l Since Π cid5 l Π cid5 l Since Π cid5 cid3R Property 3 Π cid5 R l By Lemma 2 Π cid5 l UP Let assume Π cid5 l lcid5 Since Π cid5 l lcid5 Π cid5 l lcid5 Since Π irredundant holds Π cid5 R l Π cid5 R lcid5 As result Π cid5 l UP lcid5 Lemma 4 equivalent Π cid5 l lcid5 UP cid2 A3 Formulae implying literals Lemma 10 If Π CNF formula Π l Π ΠΠl l equivalent Proof Let M model Π By deﬁnition M satisﬁes clauses Π Since Π l model assigns true l Since ΠΠl l contains clauses Π l satisﬁed M Vice versa let M model ΠΠl l This model assigns true l Moreover satisﬁes clauses Π containing l It satisﬁes clauses Π containing l sets l true satisﬁes clauses Π cid2 Lemma 11 Let Π formula implying literal l If clause γ Π contain l γ redundant Π redundant ΠΠl l Proof Since γ contain l Π ΠΠl l We prove entailed Πγ entailed ΠΠl lγ We prove formulae equivalent Since γ clause Πl ΠΠl lγ Πγ Πl l By Lemma 10 formula equivalent Πγ cid2 Lemma 12 Let Π consistent 2CNF Π l If Π cid5 IES Π Π2 Π cid5Πl l IES ΠΠl l Proof Since Π cid5 IES Π Π cid5 Π As result Π cid5Πl l ΠΠl l Containment ﬁrst condition formula IES formula We equivalence irredundancy Since Π cid5 equivalent Π Π cid5 l By Lemma 10 Π cid5 equivalent Π cid5Πl l Π2 As result Π2 equivalent Π cid5 equivalent Π equivalent ΠΠl l Lemma 10 P Liberatore Artiﬁcial Intelligence 172 2008 265299 293 Let assume Π cid5Πl l redundant The clause l redundant clause mentioning literal l Therefore exists clause γ containing l γ redundant Π cid5Πl l By Lemma 11 γ redundant Π cid5 contradicting assumption Π cid5 IES cid2 The converse lemma hold shown following example Π x x1 x x2 x1 y x2 y x y l x ΠΠl l x1 y x2 y x y x Π2 x2 y x y x Π2l Πl x2 y x y x x1 x x2 A possible incorrect proof converse Lemma 12 considering x1 x2 entail y y respectively IES Π IES ΠΠl l formula equivalent Π What makes proof fail counterexample x1 y holds x x y proof relies x removed coming Π2 Πl Πl The problem proof clause x1 y proof x necessary derived l x ΠΠl l On hand l derive clauses form l y y consequence l In words makes proof fail possible entailment clauses containing literals derivable l On hand Π l Π y The counterexample relies presence ΠΠl l clauses containing literals entailed Π Replacing clauses literal invalidate counterexample Since Π set literals entailed Π set ΠΠ contains clauses Π containing literal entailed Π Lemma 13 Every clause 2CNF formula Π ΠΠ contain literals Π negation Proof Let l Π All clauses containing l ΠΠ deﬁnition On hand clauses containing negation l form l lcid5 Since Π l Π lcid5 Therefore l lcid5 ΠΠ cid2 Lemma 14 Let Π consistent 2CNF formula If Π2 IES ΠΠΠ Π Π2Π ΠΠ equivalent Π Proof Since Π ΠΠΠ Π equivalent Π2 IES ΠΠΠ Π Π2 Π equivalent The claim proved showing Π2Π ΠΠ entails Π This prove Π2Π ΠΠ equivalent Π2Π ΠΠ Π superset Π2 equivalent Π Intuitively proof follows l Π proof l Π This proof involves clauses ΠΠ clauses ΠΠΠ On hand entailed Π entailed equivalent formula Π2ΠΠ Π Since Π2ΠΠ Π built disjoint literals clause Π containing literals entailed Π derivable Π2ΠΠ Let formally prove claim Let l Π Π l We Π2Π ΠΠ l Since Π l situations possible l Π l Π In ﬁrst case l ΠΠ claim true l Π2Π ΠΠ Let consider case l Π Since Π l Π consistent Π l allows deriving pair opposite literals unit propagation Let following chains clauses unit propagation l pairs opposite literals p1 p2 p2 p3 n1 n2 n2 n3 l p1 n1 pn1 pn nm1 nm pn nm 294 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Consider clause li li1 chains By Lemma 13 clause ΠΠ share variables Π In ﬁrst case li li1 Π2Π ΠΠ We Π2Π ΠΠ li li1 holds second case Since li li1 Π holds Π2 li li1 On hand Π2 Π2Π Π2 Π These parts Π2 contain disjoint literals Corollary 2 Since Π2 li li1 li li1 negations Π Π2Π li li1 Π2 contains literals mentioned Π2Π li li1 Of clauses chains clause li li1 ΠΠ entailed Π2Π As result Π2Π ΠΠ entails clauses unit propagation l formula leads pair opposite literals cid2 Lemma 15 Let Π consistent 2CNF formula If Π2 IES ΠΠΠ Π exists Π1 ΠΠ Π1 Π2Π IES Π Proof Lemma 14 shows adding ΠΠ Π2Π results set equivalent Π We trying prove IES Π obtained Π2Π ΠΠ removing clause Π2Π What actually prove clause Π2Π redundant Π2Π ΠΠ proving IESs Π2Π ΠΠ contain clauses Π2Π Property 1 Let γ Π2Π Assume γ redundant Π2Π ΠΠ cid4 cid5 Π2Π ΠΠ γ γ Since clauses ΠΠ contain literal Π deﬁnition Π ΠΠ As result Π logically stronger ΠΠ formula implies Π2Π Πγ γ This Π2γ γ contradicting assumption Π2 irredundant cid2 Lemma 16 Every consistent 2CNF formula Π implying literal l containing clauses containing l contains redundant clause containing l Proof If l Π clause containing l redundant Let assume l Π Since Π consistent Π l equivalent Π l UP By deﬁnition formula true l allows deriving pair complementary literals x x unit propagation Let ﬁrst assume l x x Consider sequences clauses derivation x x l Without loss generality assume l contained ﬁrst clauses sequences Removing clauses containing l ﬁrst clause sequences obtain formula entails l allows deriving clauses removed contradicting assumption Π irredundant A similar proof case l x l x In case ﬁrst clause sequence clauses derivation l l allows deriving clauses containing l cid2 A4 Acyclic consistent 2CNF formulae implying literals single IES Lemma 17 If Π consistent acyclic 2CNF Π l UP lcid5 Π cid5 l UP lcid5 holds IES Π cid5 Π Proof Since Π l UP lcid5 holds Π l lcid5 holds Π cid5 formula equivalent Π On hand Π cid5 consistent entail literals equivalent Π As result Π cid5 l lcid5 equivalent Π cid5 l UP lcid5 cid2 The lemmas prove Corollary 4 P Liberatore Artiﬁcial Intelligence 172 2008 265299 295 Lemma 23 If Π consistent acyclic 2CNF formula implying literals l1 MΠ l IES Π contains l l1 Proof Let assume Π cid5 IES Π Since Π l UP l1 Π cid5 l UP l1 holds Lemma 17 Let assume l l1 Π cid5 Then path clauses l l1 clause l l2 l2 cid3 l1 followed path l2 l1 This path include l Π cyclic Therefore path l2 l1 contained RΠ l This contradiction l1 MΠ l cid2 The second lemma converse previous stating IES contains clause literal CΠ l l Lemma 24 If l1 CΠ lMΠ l IES consistent acyclic 2CNF formula Π contains l l1 Proof By deﬁnition MΠ l literal l1 CΠ l MΠ l literal lcid5 MΠ l RΠ l contains path lcid5 l1 Let Π cid5 IES Π Since l1 reachable lcid5 holds Π lcid5 UP l1 Π cid5 lcid5 UP l1 By previous lemma Π cid5 contains l lcid5 As result Π cid5 l UP lcid5 Since Π cid5 lcid5 UP l1 l1 reached l ﬁrst clause l lcid5 Since formula acyclic clauses derivation Π cid5 lcid5 UP l1 contain l As result unit propagation allows reach l1 l clause l l1 In words Π cid5l l1 l UP l1 proving l l1 redundant Π cid5 contradicting assumption Π cid5 IES cid2 We conclude MΠ l exactly identiﬁes clauses DΠ l IES Π stated Corollary 4 A5 Implied literals cycle consistent 2CNF formula Lemma 18 If Π cid5 IES consistent acyclic 2CNF formula Π Π l l cycle clauses Π following IESs Π 1 Π cid5 RΠ l l l1 l1 SΠ l 2 Π cid5 RΠ l l l2 l l3 l2 l3 PΠ l Proof Π cid5 RΠ l contains clauses Π cid5 containing l As result prove formulae entail l prove equivalent Π cid5 Let consider Π cid5 RΠ l l l1 ﬁrst Since l1 SΠ l Π l1 UP Since l cycle derivations l1 entirely contained RΠ l Since Π cid5 equivalent Π holds Π cid5 l1 Π cid5 subset Π derivations l1 use clauses RΠ l As result Π cid5 RΠ l l1 implies Π cid5 RΠ l l l1 l Since Π cid5 irredundant Π cid5 RΠ l irredundant In order prove Π cid5 RΠ l l l1 irredundant observe l l1 redundant Π cid5 RΠ l contain clauses containing l entail l Regarding clauses Π cid5 RΠ l contain l deﬁnition Lemma 11 applies redundant Π cid5 RΠ l l l1 redundant Π cid5 RΠ l impossible Π cid5 irredundant The proof Π cid5 RΠ l l l2 l l3 l2 l3 PΠ l similar This formula implies l l3 reachable l2 paths l2 l3 RΠ l Since Π cid5 equivalent Π contains path entirely contained Π cid5 RΠ l As result addition clauses l l2 l l3 allows entailment l The proof irredundancy Π cid5 RΠ l l l2 l l3 similar previous However proof work need fact l2 l3 SΠ l sufﬁcient entailing l cid2 296 P Liberatore Artiﬁcial Intelligence 172 2008 265299 A6 Redundancy checking Inconsistent 2CNF formulae Lemma 19 A 2CNF formula Π inconsistent irredundant composed simple chains clauses like following ones x l1 l1 l2 x p1 p1 p2 lm y y s1 sm y pm z z q1 qm z Proof If Π inconsistent Lemma 3 exists variable x Π x UP Π x UP In turn Π x UP implies existence chain allowing derivation y y x unit propagation explained Section 32 The holds Π x UP The clauses chains imply inconsistency Therefore Π contains clauses redundant cid2 A7 Presence IES Cyclic inconsistent 2CNF formulae Lemma 21 The problem checking graph existence simple path node x node y including given edge NPcomplete Proof Membership obvious Hardness proved reduction problem path node given graph G nodes x y m decide exists simple path x y including node m This problem NPcomplete 15 The reduction follows replace node m nodes b joined edge Replace edge n m n edge m n b n shown Fig A4 By construction simple path containing node m original graph contains edge incoming m outgoing m This possible new graph simple path including edge m1 m2 cid2 A8 Presence IES Clause cycle It proved problem presence clause IES acyclic consistent 2CNF formulae polynomial In section extend result case cycles allowed include clause check Acyclic consistent 2CNF formulae implying single literals unique IES determined polynomial time result implies checking presence clause IES easy We extend result case formula contains cycles include clause consideration Fig A5 explains idea proof box literals equivalent l1 literals equivalent l2 l1 l2 IES paths l1 box l2 box contain nodes boxes In case removing edges l1 box l2 box clause l1 l2 makes l2 reachable l1 This clause necessary On hand path l1 l2 includes node l boxes IES includes path l1 box l l l2 box paths exist original formula As result l1 l2 redundant Fig A4 Replacement node nodes edge P Liberatore Artiﬁcial Intelligence 172 2008 265299 297 Fig A5 The presence edges joining l makes clause l1 l2 redundant Theorem 11 If Π cid3 l1 l2 l1 l2 IES Π paths l1 l2 contain literals Π makes equivalent l1 l2 Proof Let assume paths l1 l2 contains literals equivalent l1 l2 Since l1 l2 equivalent path written l1 l3 l4 l2 Π makes literals l1 l3 equivalent literals l4 l2 equivalent Let remove clause l3 l4 By assumption l4 reached l3 ﬁrst going l1 l2 l4 Iterating process paths l1 l2 end set clauses path l1 l2 single clause l1 l2 This clause irredundant removing redundant clauses obtain IES containing l1 l2 Let assume converse path l1 l2 contains literals equivalent l1 l2 Such path written l1 l3 l4 l5 l6 l2 l1 l3 equivalent l6 l2 literals equivalent literal l4 l5 We prove IES contains clause l1 l2 Let Π cid5 equivalent subset Π Being equivalent Π contain number cycles literals l1 l3 equivalent literals l6 l2 equivalent Note l1 l2 cycles Π l1 l2 Since Π l1 l4 Π l4 l2 set Π cid5 contain path l1 l4 path l4 l2 If ﬁrst path includes l1 l2 path l2 l4 Since Π contains path l4 l2 l4 l2 equivalent For reason path l4 l2 contain clause l1 l2 We proved Π cid5 includes sets clauses containing l1 l2 allow conclude l1 l3 equivalent l6 l2 equivalent l1 implies l4 l4 implies l2 The clause l1 l2 redundant cid2 This theorem implies checking l1 l2 IES easy l1 equivalent l2 Indeed set nodes paths l1 l2 intersecting sets nodes reached l1 ones l2 reachable The clause l1 l2 redundant intersection contains literal equivalent l1 l2 We consider case literal clause checked presence IES entailed formula The IESs consistent acyclic 2CNF formula compactly expressed number independent choices This makes problem checking presence clause IES polynomial We extend result case literal clause check implied formula clause contained cycle clauses The problem proved NPcomplete clause contained cycle Theorem 12 The problem deciding l1 l2 IES consistent 2CNF formula Π polynomial Π l1 l1 l2 cycle clauses 298 P Liberatore Artiﬁcial Intelligence 172 2008 265299 Proof The proof similar Lemma 18 CCΠ l1 place l1 The set CCΠ l1 literals cycle l1 determined polynomial time The clause l1 l2 IES Π Π l2 UP Π l2 UP l3 l3 CCΠ l This algorithm correct path l2 l1 Therefore path l2 node CCΠ l As result unit propagation l2 l3 generate literal CCΠ l1 Let Π cid5 IES Π The derivations l2 l3 hold Π cid5 involve literals CCΠ l1 If derivable l2 obtain IES removing clauses l lcid5 l CCΠ l1 adding l1 l2 minimal number clauses l2 reachable literal CCΠ l1 This addition makes negation literals CCΠ l1 entailed This IES Π clauses removed contain negation literal CCΠ l1 A similar proof given case Π l2 UP l3 cid2 Appendix B Notation cid5 cid5 Π cid5 l l CΠ l l DΠ l γ Π γ l l RΠ l ΠDΠ l MΠ l l SΠ l l PΠ l l1 l2 l1 l2 CΠ l RΠ l l1 UP l2SΠ l CCΠ l l cid5 CΠ l cid3 l cid5 CΠ l RΠ l l cid5cid5 CΠ l RΠ l l cid5 l lcid5 cycle cid5 UP cid5cid5 UP l cid5 References 1 G Ausiello A DAtri D Saccà Minimal representation directed hypergraphs SIAM Journal Computing 15 2 1986 418431 2 R Bruni Approximating minimal unsatisﬁable subformulae means adaptive core search Discrete Applied Mathematics 130 2 2003 85100 3 H Büning X Zhao Extension equivalence problems clause minimal formulae Annals Mathematics Artiﬁcial Intelli gence 43 1 2005 295306 4 J BureshOppenheim D Mitchell Minimum witnesses unsatisﬁable 2CNFs Proceedings Ninth International Conference Theory Applications Satisﬁability Testing SAT 2006 2006 pp 4247 5 A del Val On 2SAT renamable Horn Proceedings Seventeenth National Conference Artiﬁcial Intelligence AAAI 2000 2000 pp 279284 6 S Even A Itai A Shamir On complexity timetable multicommodity ﬂow problems SIAM Journal Computing 5 4 1976 691703 7 H Fleischner O Kullmann S Szeider Polynomialtime recognition minimal unsatisﬁable formulas ﬁxed clausevariable difference Theoretical Computer Science 289 2002 503516 8 S Fortune J Hopcroft J Wyllie The directed subgraph homeomorphism problem Theoretical Computer Science 10 2 1980 111121 9 A Ginsberg Knowledge base reduction A new approach checking knowledge bases inconsistency redundancy Proceedings Seventh National Conference Artiﬁcial Intelligence AAAI88 1988 pp 585589 10 G Gottlob CG Fermüller Removing redundancy clause Artiﬁcial Intelligence 61 1993 263289 11 P Hammer A Kogan Optimal compression propositional Horn knowledge bases Complexity approximation Artiﬁcial Intelli gence 64 1 1993 131145 12 E Hemaspaandra G Wechsung The minimization problem Boolean formulas Proceedings Thirtyeighth Annual Symposium Foundations Computer Science FOCS97 1997 pp 575584 13 D Kavvadias M Sideri E Stavropoulos Generating maximal models Boolean expression Information Processing Letters 74 2000 157162 14 S Khuller B Raghavachari M Fellows Approximating minimum equivalent digraph SIAM Journal Computing 24 4 1995 859 872 15 A LaPaugh C Papadimitriou The evenpath problem graphs digraphs Networks 14 1984 507513 16 P Liberatore Merging locally correct knowledge bases A preliminary report Tech Rep csAI0212053 Computing Research Repository CoRR 2002 17 P Liberatore Redundancy logic I CNF propositional formulae Artiﬁcial Intelligence 163 2 2005 203232 18 P Liberatore Redundancy logic III Nonmonotonic reasoning Tech Rep csLO0507048 Computing Research Repository CoRR 2005 19 D Maier Minimum covers relational database model Journal ACM 27 4 1980 664674 P Liberatore Artiﬁcial Intelligence 172 2008 265299 299 20 A Meyer L Stockmeyer The equivalence problem regular expressions squaring requires exponential space Proceedings Thirteenth Annual Symposium Switching Automata Theory FOCS72 1972 pp 125129 21 C Papadimitriou D Wolfe The complexity facets resolved Journal Computer System Sciences 37 1988 213 22 WV Quine On cores prime implicants truth functions American Mathematical Monthly 66 1959 755760 23 N Robertson P Seymour Graph minors XX Wagners conjecture Journal Combinatorial Theory Series B 92 2004 325357 24 S Sahni Computationally related problems SIAM Journal Computing 3 4 1974 262279 25 J Schmolze W Snyder Detecting redundant production rules Proceedings Fourteenth National Conference Artiﬁcial Intelligence AAAI97 1997 pp 417423 26 H Shen H Zhang Improving exact algorithms MAX2SAT Annals Mathematics Artiﬁcial Intelligence 44 4 2005 419436 27 P Stuckey L Zheng Improving GSAT 2SAT Proceedings Eighth International Conference Principles Practice Constraint Programming CP 2002 2002 pp 691695 28 C Umans The minimum equivalent DNF problem shortest implicants Proceedings ThirtyNinth Annual Symposium Foundations Computer Science FOCS98 1998 pp 556563 29 X Zhao D Ding Complexity results 2cnf default theories Fundamenta Informaticae 45 4 2001 393404