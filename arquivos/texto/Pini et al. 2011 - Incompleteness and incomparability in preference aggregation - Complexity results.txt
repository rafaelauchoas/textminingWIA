Artiﬁcial Intelligence 175 2011 12721289 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Incompleteness incomparability preference aggregation Complexity results MS Pini F Rossi KB Venable T Walsh b Department Pure Applied Mathematics University Padova Italy b NICTA UNSW Sydney Australia r t c l e n f o b s t r c t Article history Received 27 February 2009 Received revised form 1 July 2010 Accepted 1 July 2010 Available online 1 December 2010 Keywords Preference multiagent systems Preference aggregation Computational complexity Uncertainty Elicitation We consider combine preferences multiple agents despite presence incompleteness incomparability preference relations possible candidates The set preference relations agent incomplete example ongoing preference elicitation process There incomparability useful example multicriteria scenarios We focus problem computing possible necessary winners candidates preferred agents Possible necessary winners useful scenarios including preference elicitation First testing possible necessary winners general computationally intractable problem STV unweighted votes cup rule weighted votes providing good approximation sets Then identify general properties preference aggregation function independence irrelevant alternatives suﬃcient sets computed polynomial time Finally possible necessary winners focus preference elicitation We computationally intractable cup rule weighted votes worstcase decide terminate elicitation However identify property preference aggregation function allows decide terminate elicitation polynomial time focusing possible necessary winners 2011 Elsevier BV All rights reserved 1 Introduction We consider multiagent setting agent speciﬁes preferences means set preference relations possible candidates A pair candidates ordered incomparable tie relationship speciﬁed Incomparability incompleteness represent different concepts Candidates incomparable agent wish dissimilar candidates compared For example want compare biography novel criteria judge different Candidates incomparable agent multiple criteria optimize For example wish compare faster expensive laptop slower cheaper Incompleteness hand represents simply absence knowledge relationship certain pairs candidates Incompleteness arises fully elicited agents preferences agents privacy concerns prevent revealing preferences Corresponding author Email addresses mpinimathunipdit MS Pini frossimathunipdit F Rossi kvenablemathunipdit KB Venable TobyWalshnictacomau T Walsh 00043702 matter 2011 Elsevier BV All rights reserved doi101016jartint201011009 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1273 Since wish aggregate agents preferences single preference ordering modify preference aggregation functions deal incompleteness One possibility consider possible ways incomplete preference orders consistently completed In possible completion preference aggregation different optimal elements winners This leads idea possible winners candidates winners possible completion necessary winners candidates winners possible completions 14 While voting theory mainly interested fairness social choice social welfare functions recent computational properties preference aggregation 19151410 It noted computational complexity manipulating election closely related computing possible winners 149 In paper start considering computational complexity testing given candidate necessary possible win ner STV cup rule We consider different dimensions weightedunweighted agents boundedunbounded number candidates Weights useful multiagent systems different types agents agent importance agent process taking decision We provide computational com plexity computing necessary possible winners considered scenarios worst case Moreover intractable obtain good approximation sets unweighted agents bounded number candidates Then identify suﬃcient conditions assure tractability Such conditions concern properties preference aggregation function monotonicity independence irrelevant alternatives IIA 2 Notice IIA strong assumption However useful intractability case computing possiblenecessary winners general case We stress worstcase complexity results like start understanding complexity com puting possible necessary winners The complexity problems practice easy For example number recent theoretical results suggest closely related problem manipulating election NPhard worst case computationally easy practice 11 Possible necessary winners useful scenarios including preference elicitation 6 In fact elicitation terminated set possible winners coincides necessary winners 10 We deciding terminate elicitation process cup rule weighted votes computationally intractable problem However preference aggregation function IIA preference elicitation stopped polynomial time This focusing incompleteness concerning candidates possible necessary winners allowing ignore candidates The paper revised extended version 181722 2 Basic notions We introduce basic notions work based First deﬁnitions preference relations incomplete proﬁles We consider notions preference aggregation functions possible necessary winners represent compactly set results preference aggregation function We conclude motivating usefulness weighted votes terms realworld setting 21 Preferences incomplete proﬁles We assume agents preferences agents vote speciﬁed partially speciﬁed preorder set possible candidates denote Ω 1 A partially speciﬁed preorder preorder PO reﬂexive antisymmetric transitive relation plus additional set pairs represent unspeciﬁed preferences More precisely given candidates A B agent specify following A B B preferred A A B A preferred B A B A B equally preferred A cid4cid5 B A B incomparable A B B A A B AB relation A B unknown means element cid4cid5 Example 1 Given candidates A B C agent state preferences A B B cid4cid5 C A C A B B cid4cid5 C corresponds preferences A B B cid4cid5 C AC However agent state preferences A B B C C A A B B C A cid4cid5 C dont satisfy transitivity POs Deﬁnition 1 Proﬁle A proﬁle sequence n preorders p1 pn candidates agent 1 n describing preferences agents The preorder single agent called vote 1 We believe assumption agents expressing preferences preorders reasonable context paper known preferences human beings transitive 1274 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 When preorders partially speciﬁed incomplete proﬁle Deﬁnition 2 Incomplete proﬁle An incomplete proﬁle sequence n partially speciﬁed preorders ip1 ipn candidates agent 1 n Example 2 Given agents candidates A B C possible incomplete proﬁle A B C 2 A C A B BC C A AB BC Deﬁnition 3 Completions proﬁle Given proﬁle p completion p proﬁle obtained p replacing element cid4cid5 Since completions proﬁles replacement element cid4cid5 way respect transitivity 22 Social welfare preference aggregation Social welfare functions 2 functions proﬁles preorders Social choice functions known voting rules 5 f p preorder obtained functions proﬁles candidates Given proﬁle p social welfare function f applying f p We denote f p A B restriction preorder f P A B When p obvious context simply write f A B In follows consider social welfare functions social choice functions polynomial time apply This assumption allows obtain stronger intractability results Example 3 An example social welfare function Pareto rule 2 The Pareto social welfare function f works follows given proﬁle p candidates A B agents A B A B says A B p A B f p agents A B p A B f p A cid4cid5 B f p Example 4 An example social choice function plurality rule 2 given totally ordered proﬁle candidate voted ﬁrst agents wins Clearly candidates win tiebreaking rules select single winner If candidates plurality called majority rule Another wellknown social choice rule Borda given m candidates agents preferences rank 1st gets m 1 points 2nd gets m 2 points gets 0 points candidate points wins Given social welfare function deﬁne corresponding preference aggregation function follows Deﬁnition 4 Preference aggregation function Given social welfare function f corresponding preference aggregation function written pa f function incomplete proﬁles sets preorders maps incomplete proﬁle ip ip1 ipn set pa f ip f p1 f pk called set results f proﬁle ip The set results obtained applying f completions ip p1 pk Example 5 Consider Pareto social welfare function f described Example 3 In Fig 1 corresponding preference aggregation function works Assume agents candidates A B C agents express preferences incomplete proﬁle ip ip1 ip2 ip3 shown upper Fig 1 We consider completions ip obtain proﬁles p1 p2 Note proﬁles completions ip In fact completion A C resp A C ip1 consistent known ip1 transitivity A C B resp B A C C B resp B C B cid4cid5 C Finally applied p1 p2 obtaining set result pa f ip f p1 f p2 The notion combined result deﬁned later paper f The literature social welfare considered desired properties social welfare social choice functions Such properties derive crucial impossibility results Arrows theorem 31 Gibbard Satterthwaites theorem 1220 interesting insights fairness manipulability functions In particular Arrows theorem shows impossible time certain reasonable properties nondictatorship unanimity GibbardSatterthwaites theorem shows function dictatorial manipulable candidates win In paper consider desirable properties assume prove results The ﬁrst desirable property consider anonymity 2 2 In rest paper use shortenings A B C A B B C A C MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1275 Fig 1 An incomplete proﬁle ip completions p1 p2 results f p1 f p2 combined result cr f ip Deﬁnition 5 Anonymity A social welfare function f order votes proﬁle said anonymous result depend We assume social welfare functions anonymous The second desired property consider independence irrelevant alternatives IIA 2 Deﬁnition 6 IIA A social welfare function f B f A B depends relation A B preference orderings p said IIA proﬁle p pair candidates A Many preference aggregation functions IIA Pareto rule shown Example 3 property related notion fairness voting theory 2 Another desired property social choice function satisfy monotonicity Deﬁnition 7 Monotonicity A social welfare function f monotonic proﬁles p p A B passing p p B improves respect A preference ordering agent p j p candidates cid7 j cid7 B improves respect A A candidate B improves respect candidate A relationship A B left following sequence cid4cid5 3 j cid8 passing f p f p cid7 cid7 In words B preferable A result proﬁle B worsened wrt A B preferable A new result Example 6 The Pareto rule shown Example 3 IIA monotonic 23 Necessary possible winners We extend notions possible necessary winners presented 14 total orders case preorders A necessary winner winner matter incompleteness resolved incomplete proﬁle possible winner winner possible completion incomplete proﬁle Deﬁnition 8 Necessary winner Given social welfare function f incomplete proﬁle ip necessary winner given ip candidate maximal element POs contained pa f ip4 f Deﬁnition 9 Possible winner Given social welfare function f incomplete proﬁle ip possible winner candidate maximal element POs contained pa f ip We write NW f ip PW f ip set necessary possible winners f proﬁle ip We times omit f andor ip write NW PW parameters obvious irrelevant Example 7 In Example 5 candidates A B necessary winners maximal elements POs f pi 1 2 Candidate C possible winner wins f p2 However C necessary winner win f p1 3 For example B improves respect A passes A cid4cid5 B A B remains 4 In preorder candidate C maximal element candidate C C cid7 C cid7 1276 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 24 Combined result The set results preference aggregation function exponentially large We consider compact representation polynomial size This throw away information compacting results single combined result Deﬁnition 10 Combined result Given social welfare function f incomplete proﬁle ip combined result f ip denoted cr f ip graph nodes candidates arcs labeled nonempty subsets cid4cid5 Label l arc candidates A B exists PO pa f ip A B related l If arc labeled set cid4cid5 fully incomplete Otherwise partially incomplete The set labels arc A B called rel A B Example 8 Consider preference aggregation function proﬁle presented Example 5 The corresponding com bined result shown right Fig 1 In combined result arc fully incomplete 25 Weighted votes As 9 consider weighted unweighted agents An agent weight integer k viewed k agents vote identically Although human elections unweighted addition weights makes voting schemes general Weighted voting systems number realworld settings like shareholder meetings elected assemblies Weights useful multiagent systems different types agents Weights interesting computational perspective First weights increase computational complexity Second weighted case informs unweighted case probabilistic information votes For instance NPhard compute election manipulated weighted votes NPhard compute probability candidate winning uncertainty unweighted votes cast 9 To reduce impact ties assume sum weights odd 3 Complexity winner determination We worstcase complexity results computing testing possible necessary winners ﬁnding good approximation set winners 31 Unweighted votes We ﬁrst assume unweighted agents In context analyze complexity computing testing possible necessary winners ﬁnding good approximations bounded number candidates unbounded number candidates 311 Bounded number candidates If bounded number candidates unweighted votes possible necessary winners computed polynomial time Given incomplete unweighted proﬁle bounded number candidates voting rule r candidate A UnweightedBoundedPossibleWinnerr holds iff A possible winner election UnweightedBoundedNecessaryWinnerr holds iff A necessary winner election Theorem 1 Given voting rule r UnweightedBoundedPossibleWinnerr UnweightedBoundedNecessaryWinnerr polynomial Proof By assumption underlying social welfare function anonymous If n agents m candidates n 1m upper bound number completions consider m possible votes chosen k possible agents k 0 n As m bounded enumerate completions apply social welfare function polynomial time Hence computing exactly sets possible necessary winners polynomial5 cid2 5 A similar argument 98 manipulation election coalition agents polynomial number candidates bounded MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1277 312 Unbounded number candidates Suppose number candidates bounded In context testing necessary possible winners NPhard restrict partially speciﬁed total orders We consider following known voting rule Deﬁnition 11 Single Transferable Vote Single Transferable Vote winner STV 4 voting rule proﬁle consists set total orders candidates quota election minimum number votes necessary elected cid9n2cid10 1 n number agents Initially agents vote allocated preferred candidate If candidate exceeds quota candidate fewest votes eliminated procedure repeated new proﬁle candidate reaches quota6 Example 9 Consider proﬁle p A B C B A C C A B B A C A C B We STV rule works p The minimum number votes elected quota 3 In ﬁrst round A B receive 2 points C receives 1 point Hence agent reaches quota Then C removed procedure repeated In second round A reaches quota elected In follows consider STV elections total orders provided agents partially speciﬁed In general given incomplete unweighted proﬁle unbounded number candidates voting rule r candidate A UnweightedUnboundedPossibleWinnerr holds iff A possible winner election We deﬁne Effective Preferencer problem determining particular candidate win election unknown vote Theorem 2 UnweightedUnboundedPossibleWinnerSTV NPcomplete Proof Membership NP follows giving completion proﬁle candidate A wins NPcompleteness follows result Effective PreferenceSTV NPcomplete 4 In fact election unknown vote speciﬁc incomplete proﬁle Thus reduce polynomially taking proﬁle Effective PreferenceSTV candidate A UnweightedUnboundedPossibleWinnerSTV cid2 Given incomplete unweighted proﬁle unbounded number candidates voting rule r candidate A UnweightedUnboundedNecessaryWinnerr holds iff A necessary winner election Theorem 3 UnweightedUnboundedNecessaryWinnerSTV coNPcomplete Proof Let assume considering candidate A necessary winner The complement problem NP membership giving completion proﬁle B different A wins To completeness complement problem reduction Effective PreferenceSTV B appears ﬁrst place vote This restricted form Effective PreferenceSTV NPcomplete 4 Consider incomplete proﬁle p n 1 votes cast B ﬁrst place vote vote remains unknown wish decide B win We construct new election p n new additional votes new candidate A We A new votes rank candidates order n votes We place A place original n 1 votes vote B ﬁrst place assumption vote exist place A second place shift candidates We observe A survive till round A n votes candidate votes till round We observe B remains election score given candidate STV remains original election candidates eliminated order till point B eliminated If B eliminated round second choice vote A transferred Since A n 1 votes A unbeatable win election If B survives hand round assume A ranked unknown vote All candidates B A eliminated B n 1 votes unbeatable Hence A necessary winner new election B possible winner Effective Preference election Thus determining A necessary winner new election hard determining B possible winner Effective Preference election known NPcomplete cid2 Given results wonder easy compute reasonable approximation sets possible necessary winners worstcase Unfortunately case The reduction described proof Theorem 3 shows easily approximate set possible winners factor In fact easily approximate set possible winners constant factor 6 STV requires tiebreaking rule different stages execution protocol This rule usually left undeﬁned The results article depend tiebreaking rules 1278 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 Theorem 4 Given STV rule incomplete unweighted proﬁle unbounded number candidates NPhard return superset possible winners PW kPW given positive integer k guarantee PW Proof We reduction Effective PreferenceSTV A appears ﬁrst place vote Consider incomplete proﬁle p n 1 votes cast A ﬁrst place vote vote remains unknown wish decide A win We construct new election p We k copies p In ith copy cpi subscript candidate integer We add n new additional votes new candidate B We B new votes rank candidates Ai order n votes The ranking candidates Ai left unknown beneath B In cpi place B place vote Ai ﬁrst place assumption vote exist place B second place shift candidates Finally candidate cp j cpi A j rank order votes cpi The ranking candidates Ai left unknown beneath B We observe B survive till candidate eliminated cpi We observe Ai remains election score given candidate STV remains original election candidates cpi eliminated order till point Ai eliminated Suppose A win original election Then Ai eliminated ﬁnal round The second choice vote B transferred Since B n 1 votes B unbeatable win election Suppose hand A win original election Then Ai survive remaining candidate cpi We assume B ranked unknown votes candidates index candidates index j different Thus Ai n 1 votes If corresponding ranking unknown votes A j j cid8 survive Since B n votes B eliminated It possible candidates Ai 1 cid2 cid2 k win depending exactly Ai ranked different votes Thus set possible winners ai 1 cid2 cid2 k plus B A necessary winner original election Hence A possible winner original election size set possible winners k guarantees greater equal k whilst set size 1 If know PW PW 1 B necessary winner A possible winner original election cid2 kPW PW Similarly approximate eﬃciently set necessary winners ﬁxed ratio Theorem 5 Given STV rule incomplete unweighted proﬁle unbounded number candidates NPhard return NW NW 0 given positive integer k subset necessary winners NW guarantee NW 1 k Proof In reduction proof Theorem 4 NW 1 A possible winner original election 0 1 Suppose A possible winner Then new election NW 1 As NW Thus size NW determine A possible winner cid2 NW follows NW 1 k 32 Weighted votes We weighted votes certain number candidates intractable worstcase compute possible necessary winners unbounded number candidates bounded number candidates 321 Bounded number candidates When weighted agents bounded number candidates computing possible necessary winners computationally intractable worst case To consider voting rule cup known knockout sequential majority voting rule Deﬁnition 12 Cup rule The cup rule 16 maps proﬁles single candidate called winner The winner result series pairwise majority elections candidates The cup rule deﬁned binary tree called agenda leaves number candidates leaf labeled candidate Each nonleaf assigned winner majority election candidates labeling children The candidate labeling root overall winner In proofs use balanced binary tree necessary results Example 10 Assume candidates A B C cup rule voting rule Consider agenda A ﬁrst play B winner called w 1 play C The winner called w 2 overall winner If proﬁle p A B C A C B C A B w 1 A w 2 A overall winner cup rule A MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1279 Given incomplete weighted proﬁle bounded number candidates voting rule r candidate A WeightedBoundedPossibleWinnerr holds iff A possible winner election Theorem 6 WeightedBoundedPossibleWinnerC NPcomplete 3 candidates Proof Let consider candidate A Membership NP follows giving completion proﬁle A wins We reduction number partitioning problem Consider cup A plays B winner plays C We bag integers ki sum 2k wish decide partitioned bags sum k We build election complete incomplete weighted proﬁle C wins C possible winner iff partition exists We suppose following votes given 1 vote C B A weight 1 1 vote C A B weight 2k 1 1 vote B C A weight 2k 1 Hence C ahead A 4k 1 votes C ahead B 1 vote B ahead A 1 vote For ki bag integers incomplete vote weight 2ki A C ﬁxed rest vote incomplete We sure A beats C ﬁnal result 1 vote completion takes place We incomplete weighted proﬁle completed B beats A C beats B C possible winner iff partition size k Assume partition exists votes partition A C B votes B A C Thus B beats A overall C beats B Thus C winner On hand suppose way complete preferences C wins This happen B beats A C beats B In fact A beats B ﬁrst round A beat C second round shown A beats C overall A ﬁnal winner For C beat B half weight incomplete votes rank C B Similarly B beat A half weight incomplete votes rank B A Since votes rank A C B A C Thus precisely half weight incomplete votes ranks B A half ranks C B Hence partition equal weight Therefore complete incomplete proﬁle C wins iff partition size k cid2 Given incomplete weighted proﬁle bounded number candidates voting rule r candidate A WeightedBoundedNecessaryWinnerr holds iff A necessary winner election Theorem 69 7 shows constructive manipulation manipulation somebody win coali tion agents weighted votes polynomial Thus follows immediately partial weighted proﬁle polynomial determine A necessary winner It fact suﬃcient test manipulation candidate successful This polynomial assuming bounded number candidates However restricted case incompleteness occurs speciﬁc form The following theorem shows general WeightedBoundedNecessaryWinnerr computationally intractable problem Theorem 7 WeightedBoundedNecessaryWinnerC coNPcomplete 4 candidates Proof Assume considering candidate A The complement problem NP membership giving completion proﬁle A win To 4 candidates NPhard reduction number partitioning problem We bag positive integers ki sum 2k wish decide partitioned bags sum k We build incomplete proﬁle A necessary winner partition We consider cup D plays C winner plays B The winner match goes forward ﬁnal match A We construct incomplete proﬁle following votes given 1 vote B A C D weight 1 1 vote B A D C weight 2k 1 1 vote A C B D weight 2k 1 For ﬁrst number k1 bag integers vote A C D B weight 2k1 For number ki 1 incomplete vote weight 2ki D B ﬁxed rest vote incomplete We sure D beats B ﬁnal result 1 vote completion takes place Similarly sure A beats D A beats C Thus winners considered cup A B If complete preferences incomplete votes A B A win overall We completion makes B win iff partition equal weight Suppose partition complete votes partition C D B complete votes D C B Thus C beats D overall B beats C We suppose incomplete votes completed B A B beat A Thus B overall winner On hand suppose way complete preferences B wins This happen C beats D B beats C B ﬁnally beats A If D beats C ﬁrst round D beat B second round A For B beat C half weight incomplete votes rank B C Similarly C beat D half weight incomplete votes rank C D Since votes rank D B C D B Thus precisely half weight incomplete votes ranks C D half ranks B C Hence partition equal weight Therefore B win iff partition equal weight Thus A necessary winner iff partition size k cid2 1280 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 Table 1 Complexity results computingtesting possible necessary winners ﬁnding upper approximation possible winners lower approxi mation necessary winners WeightedBounded UnweightedBounded WeightedUnbounded UnweightedUnbounded PW NW PW NW NPcomplete Cup Th 6 coNPcomplete Cup Th 7 P Th 1 P Th 1 P Th 1 P Th 1 NPcomplete Cup Cor 71 coNPcomplete Cup Cor 72 NPhard STV Cor 73 NPhard STV Cor 74 NPcomplete STV Th 2 coNPcomplete STV Th 3 NPhard STV Th 4 NPhard STV Th 5 It interesting open question determine WeightedBoundedNecessaryWinnerC polynomial 3 fewer candidates 322 Unbounded number candidates Theorems 6 7 testing possible necessary winners NPhard bounded number candidates These worstcase complexity results continue hold unbounded number candidates Given incomplete weighted proﬁle unbounded number candidates voting rule r candidate A WeightedUnboundedPossibleWinnerr holds iff A possible winner election Corollary 71 WeightedUnboundedPossibleWinnerC NPcomplete 3 candidates Proof A witness checked polynomial time completion proﬁle candidate A wins NPhardness holds argument Theorem 6 cid2 Given incomplete weighted proﬁle unbounded number candidates voting rule r candidate A WeightedUnboundedNecessaryWinnerr holds iff A necessary winner election Corollary 72 WeightedUnboundedNecessaryWinnerC coNPcomplete 4 candidates Proof A witness complement problem checked polynomial time completion proﬁle candidate A win NPhardness holds argument Theorem 7 cid2 If weighted votes case unweighted votes approximate eﬃciently set possible necessary winners ﬁxed ratio Corollary 73 Given STV rule incomplete weighted proﬁle unbounded number candidates NPhard return superset possible winners PW kPW given positive integer k guarantee PW Proof It follows Theorem 4 If NPhard ﬁnd certain approximation possible winners unweighted votes NPhard ﬁnd approximation weighted votes To use proof prove Theorem 4 assuming weights equal cid2 Corollary 74 Given STV rule incomplete weighted proﬁle unbounded number candidates NPhard return NW NW 0 given positive integer k subset necessary winners NW guarantee NW 1 k Proof It follows Theorem 5 reasoning performed proof Corollary 73 NPhard ﬁnd certain approximation necessary winners unweighted votes NPhard ﬁnd approximation weighted votes To use proof prove Theorem 5 assuming weights equal cid2 33 Summary complexity results All complexity results summarized Table 1 It possible case computationally easy worstcase ﬁnd possible necessary winners unweighted votes bounded number candidates Such case social choice 2 human elections analyzed agents importance agents unweighted vote bounded number candidates Being able ﬁnd easily set possible necessary winners useful example decide terminate preference elicitation process 6 In fact set possible winners coincides set necessary winners elicitation stopped avoiding posing useless questions agents MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1281 If instead relax conditions allow weighted agents allow unbounded number candidates complexity testing candidate possible necessary winner tractable problem worstcase Weights typical Artiﬁcial Intelligence AI applications For example useful multiagent systems different types agents Moreover AI differently human elections common unbounded number alternatives consider making decision The hardness results shown settings useful barrier manipulation GibbardSatterthwaites theorem 1321 states reasonable conditions exist circumstances possible manipulate election possible agent reveals insincerely preferences obtain better result Our complexity results manipulation computationally intractable worstcase In fact intractable know candidate pos sible winner coalition agents little incentive complete votes insincerely win Moreover intractable ﬁnd candidate necessary winner coalition agents little incentive complete votes insincerely lose In cases considered unbounded number candidates weighted unweighted agents shown intractable worstcase test candidate possible necessary winner ﬁnd good approximations sets winners In particular shown computing upper approximation possible winners lower approximation necessary winners intractable problem worst case We conjecture computation easy consider bounded number candidates weighted votes We plan investigate scenario future 4 Tractable cases We determine suﬃcient conditions preference aggregation function polynomial compute sets possible necessary winners We recall computation polynomial votes unweighted bounded number candidates cases intractable worstcase We cases require social welfare function associated preference aggregation function IIA monotonic polynomial compute possible necessary winners 41 Unweighted votes When unweighted votes testing possible necessary winner ﬁnding good approximations sets intractable worstcase unbounded number candidates We case preference aggregation function IIA monotonic possible necessary winners computed polynomial time starting approximation combined result computed polynomial time When instead bounded number candidates shown previous section polynomial compute possible necessary winners general Thus trivially continues remain polynomial require preference aggregation function satisﬁes properties 411 Unbounded number candidates The problem computing combined result general computationally intractable worstcase However identify restrictions allow compute useful approximation combined result polynomial time Theorem 8 Given incomplete proﬁle determining label arc combined result NPhard STV Proof The necessary winner problem reduced problem Cook reduction In particular check candidate necessary winner suﬃcient check combined result arc connecting candidate candidate relation smaller equal By Theorem 3 testing candidate necessary winner NPhard STV Thus determining label arc combined result NPhard cid2 We identify properties preference aggregation functions allow compute upper approximation A B superset set labels arc cr We recall set labels arc A combined result polynomial time An upper approximation combined result cr graph cr arcs nodes cr set labels arc pair candidates A B cr rel B combined result called rel A B First compute rel A B superset rel A B cr A B preference aggregation function IIA monotonic Then upper approximation cr rel Algorithm 1 takes input candidates A B preference aggregation function f incomplete proﬁle IIA compute set ip returns rel A B need ask agent preference pair A B use f compute possible rel results A B Since f monotonic dont need consider possible completions agents incompleteness A B completions completion called S 1 AB replaced A B set labels arc A B cr Since f 1282 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 Algorithm 1 Computing rel A B Input A B candidates ip incomplete proﬁle A B sets orderings operators Output rel Sip A B AxB ip x cid4cid5 S 1 S replaced S 2 S replaced A rel1 B f S 1 A rel2 B f S 2 rel return rel A B A B operators rel1 rel2 included total preorder cid4cid5 Algorithm 2 Computing NW PW f ip f IIA monotonic preference aggregation function ip incomplete proﬁle Input cr Output P N sets candidates P Ω N Ω foreach A Ω C Ω rel N N A A C C Ω rel A C P P A return P N A B completion called S2 AB replaced A B Notice f IIA dont need consider complete proﬁles proﬁle concerning A B This means transitivity issues arise Function f applied S1 resp S2 returns result A rel1 B resp A rel2 B rel1 rel2 set cid4cid5 Since f monotonic results completions ip necessarily rel1 rel2 included ordering cid4cid5 By taking relations obtain rel A B We cr approximation combined result polynomial compute Theorem 9 Given incomplete proﬁle ip social welfare function f IIA monotonic possible compute poly A B rel A B Moreover nomial time approximation cr f ip cr A B cid4cid5 rel rel f ip given candidates A B rel A B rel A B rel A B rel A B cid4cid5 A B returned Algorithm 52 superset rel A B In fact monotonicity Proof If f IIA monotonic set rel f assures consider proﬁles A B certain result considering proﬁles A better position wrt B A B A B A cid4cid5 B equal better situation A result f ip upper approximation combined result Moreover rel A B cid4cid5 Thus cr completion result completion replace AB A B completion result completion replace AB A B Hence labels added rel A B rel A B elements cid4cid5 cid2 Example 11 Consider Lex rule agents totally ordered given candidates A B relation A B result relation given ﬁrst agent order declare tie A B It easy rule IIA monotonic Consider following incomplete proﬁle A C B C AB A B C Then rel A B cid4cid5 rel A B cid4cid5 We determine possible necessary winners given cr f ip Consider arc f ip Then arc label A C A necessary winner candidate A candidate C cr candidate C better A result If arc label A C A possible winner A C results Moreover consider arcs A candidate C Then arc label includes A C A necessary winner Notice general arcs connecting A candidate C unique label A C A possible winner A better candidates completion completion better We case f We deﬁne Algorithm 2 given cr f ip computes NW PW polynomial time IIA monotonic Theorem 10 Given preference aggregation function f IIA monotonic incomplete unweighted proﬁle ip f ip Algorithm 2 terminates O m2 time unbounded number m Ω candidates approximate combined result cr returning N NW P PW Proof Algorithm 2 considers worst case arc exactly runs O m2 time MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1283 f ip rel N NW By construction cr A C iff rel A C By Algorithm 2 A N iff C rel A C implies result exists candidate C beats A Thus A NW On contrary A NW iff A cid8 C C Ω results A N A C rel A C If C Ω rel A C cid4cid5 rel P PW A candidate A PW candidate beats results Thus exist A C Thus PW P To candidate C label rel A C construction rel inclusion consider A P construct completion ip A wins result First let point candidate A A P iff cid2C Ω rel A C A beaten candidate C A NW PW Secondly let consider case A rel A C let denote X set candidates Then candidate C X choose available cid4cid5 This corresponds replacing AC A C incomplete proﬁle Such choice AC arcs cause transitivity inconsistency completed result A C If A winner Finally let consider case C rel cid7 contains exactly label set cid4cid5 safely set AC A C candidate C sure result labeling Moreover result A winner Assume instead cid7 1 This means agent declared preference candidate C cid7 pair A C A C proﬁle perform transitive closure modiﬁed partially speciﬁed POs apply f We prove transitive closure force label pair A C After procedure monotonicity rel A C let cid7 C start forced rel A C However consider relC cid7 C cid4cid5 cid8 additional labels possible A P This allows conclude rel A C C force A C It noticed available choice C C safely fact function IIA transitive closure proﬁles ruled inconsistent choices By iterating procedure incomplete proﬁle replaced construct result function A winner cid2 cid7 contain exactly label set cid4cid5 Let assume procedure A C cid7 preference deduced transitivity closure We replace AC force A C Clearly A C cid7 C Had rel labeling C rel C A cid4cid5 C A C C cid7 cid7 cid7 cid7 cid7 cid7 cid7 cid7 cid7 42 Bounded number candidates In previous section shown unbounded number candidates unweighted votes polynomial compute possible necessary winners require preference aggregation function IIA monotonic We directly derive assumptions voting rule polynomial bounded number candidates Corollary 101 If preference aggregation function r IIA monotonic UnweightedBoundedPossibleWinnerr UnweightedBoundedNecessaryWinnerr polynomial Proof It follows directly Theorem 1 cid2 43 Weighted votes In presence weighted agents assume social welfare function IIA monotonic use procedure shown ﬁnd approximate combined result Algorithm 11 ﬁnd possible necessary winners depend fact agents weighted IIA monotonicity 431 Unbounded number candidates Theorem 10 states social welfare function IIA monotonic computing possible necessary win ners unweighted agents unbounded number candidates polynomial The holds weighted agents unbounded number candidates Corollary 102 Given preference aggregation function f IIA monotonic incomplete weighted proﬁle ip f ip polynomial compute set possible unbounded number candidates approximate combined result cr necessary winners Proof It follows procedure compute cr Theorem 10 depends cr f ip cid2 f ip holds weighted agents 432 Bounded number candidates Corollary 102 implies presence weighted agents computing possible necessary winners continues polynomial bounded number candidates 1284 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 Table 2 Complexity results computing possible necessary winners given IIA monotonic preference aggregation function f IIA mon WeightedBounded UnweightedBounded WeightedUnbounded UnweightedUnbounded PW NW P Cor 103 P Cor 103 P Cor 101 P Cor 101 P Cor 102 P Cor 102 P Th 10 P Th 10 Corollary 103 Given preference aggregation function f IIA monotonic incomplete weighted proﬁle ip f ip polynomial compute set possible bounded number candidates approximate combined result cr necessary winners Proof It follows immediately Corollary 102 If computing possible necessary winners polynomial unbounded number candidates continues polynomial bounded number candidates cid2 44 Summary Table 2 summarizes complexity results section In particular require preference aggregation function IIA monotonic computation possible necessary winners polynomial 5 Elicitation One use necessary possible winners eliciting preferences 6 Preference elicitation process asking queries agents order determine preferences candidates Eliciting preferences takes time effort We want stop elicitation soon candidate support win regardless miss ing preferences Preference elicitation stopped NW PW information declare winners At beginning NW PW contains candidates As preferences declared NW grows PW shrinks At step candidate PW pass NW loser When PW larger NW use sets guide preference elicitation avoid useless work In section deciding stop eliciting preferences general computationally intractable worstcase polynomial unweighted agents require IIA preference aggregation function 51 Complexity terminating elicitation We consider decision problems Given voting rule r elicit complete votes agent How rank candidates CoarseElicitationOverr true iff winners determined irrespective remaining agents vote On hand elicit individual preferences Do prefer Bush Gore FineElicitationOverr true iff winners determined irrespective undeclared preferences revealed Note cases missing preferences assumed transitive Deﬁnition 13 CoarseElicitationOverr Input partial proﬁle Output true iff set winners remaining agents vote Deﬁnition 14 FineElicitationOverr Input incomplete proﬁle Output true iff set winners incomplete proﬁle completed CoarseElicitationOverr FineElicitationOverr coNP polynomial witness elicitation completions proﬁle different sets candidates win Since CoarseElicitation Overr special case FineElicitationOverr easy FineElicitationOverr polynomial CoarseElicitationOverr Similarly CoarseElicitationOverr coNPcomplete FineElicitationOverr However later implications necessarily reverse For example voting rules CoarseElicitationOverr polynomial FineElicitationOverr coNPcomplete Our analysis complexity terminating preference elicitation considers previous sections different dimensions weighted unweighted agents bounded unbounded number candidates 511 Unweighted agents We unweighted agents computing CoarseElicitationOverr FineElicitationOverr polynomial Given incomplete proﬁle bounded number candidates voting rule r UnweightedBounded CoarseElicitationOverr holds iff CoarseElicitationOverr holds election UnweightedBoundedFineElicita tionOverr holds iff FineElicitationOverr holds election MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1285 Corollary 104 UnweightedBoundedFineElicitationOverr UnweightedBoundedFineElicitationOverr polynomial Proof As noticed proof Theorem 1 number candidates bounded polynomial number different completions We enumerate evaluate completions polynomial time Hence computing CoarseElicitationOverr FineElicitationOverr polynomial cid2 512 Weighted votes We voting rules CoarseElicitationOverr polynomial FineElicitationOverr intractable Given incomplete weighted proﬁle bounded number candidates WeightedBoundedCoarse ElicitationOverr holds iff CoarseElicitationOverr holds election WeightedBoundedFineElicitationOverr holds iff FineElicitationOverr holds election Theorem 11 WeightedBoundedFineElicitationOverC coNPcomplete 4 candidates whilst WeightedBoundedCoarseElicitationOverC polynomial irrespective number candidates Proof Theorem 69 7 gives polynomial algorithm coalition agents weighted votes manipulate cup rule constructively We use algorithm determine coalition agents voted manipulate election candidate turn win Coarse elicitation iff winner Hence CoarseElicitationOverC polynomial To FineElicitationOverC coNPhard 4 candidates use reasoning similar proof Theorem 7 deciding FineElicitationOverC coincides problem determining necessary winner For clarity formal proof To FineElicitationOverC NPhard 4 candidates consider cup A plays B winner plays C winner match goes forward ﬁnal match D We reduce number partitioning deciding elicitation cup rule given particular incomplete proﬁle Suppose bag integers ki sum 2k wish decide partitioned bags sum k We construct incomplete proﬁle following weighted votes completely ﬁxed 1 vote C D B A weight 1 1 vote C D A B weight 2k 1 1 vote D B C A weight 2k 1 For ﬁrst number k1 bag integers ﬁxed vote D B A C weight 2k1 For number ki 1 incomplete vote weight 2ki A C ﬁxed rest vote unspeciﬁed We sure A beats C ﬁnal result 1 vote happens Similarly sure D beats A D beats B Thus winners cup rule D C If incomplete votes D C D win overall We C win iff partition equal weight Suppose partition incomplete votes corresponding partition B A C whilst incomplete votes corresponding partition A B C Thus B beats A overall C beats B We suppose incomplete votes C D C beat D Hence C winner cup rule D win On hand suppose C wins This happen B beats A C beats B C ﬁnally beats D If A beats B ﬁrst round A beat C second round D For C beat B half weight incomplete votes rank C B Similarly B beat A half weight incomplete votes rank B A Since votes rank A C B A C Thus precisely half weight incomplete votes ranks B A half ranks C B Hence partition equal weight Therefore C D win iff partition equal weight That elicitation iff partition equal weight cid2 Since weighted votes FineElicitationOverC coNPcomplete 4 candidates general voting rule weighted votes 4 candidates deciding terminate elicitation coNPcomplete The result shown Theorem 11 suggests preferences combined cup rule prefer eliciting votes agents opposed individual preferences easily decide stop Computational complexity motivate choice elicitation strategy Note cup rule 3 fewer candidates polynomial decide elicitation Theorem 12 Both WeightedBoundedFineElicitationOverC WeightedBoundedCoarseElicitationOverC poly nomial 3 fewer candidates Proof For 2 candidates cup rule degenerates majority rule FineElicitationOverC degenerates CoarseElicitationOverC In case elicitation terminated iff majority weight votes prefer didate For 3 candidates loss generality consider cup A plays B winner plays C Suppose incomplete proﬁle candidates For A win beat B C pairwise elections We care ordering B C A wins B C meet Thus complete 1286 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 proﬁle placing A B C possible ordering B C wish To B win complete proﬁle analogous fashion Finally C win beat winner A B We consider completions proﬁle C placed A A B possible second C placed B B A possible In total completions consider These tested polynomial time Eliciting preferences terminated iff candidate wins case Given partial vote complete proﬁle similar way test CoarseElicitationOverC cid2 513 Uncertainty votes Many results far considered weighted votes One reason consider weighted votes inform unweighted votes uncertainty votes cast Given voting rule r probability distribution votes number s 0 1 candidate Evaluationr problem deciding probability candidate loosing strictly greater s Note 9 deﬁnes Evaluationr deciding probability winning greater given value The problems closely related use makes arguments simpler As 7 assume probability distribution votes speciﬁed means limited form language If permitted arbitrary distributions problem specifying probability exponential number different proﬁles This impractical general We suppose language requires polynomial space specify probability distribution unweighted proﬁles nonzero probability given proﬁle equivalent completion given incomplete weighted proﬁle zero probability proﬁle For instance possible speciﬁcation simply incomplete weighted proﬁle We assume weights given binary takes polynomial time voting rule compute winner given complete weighted proﬁle Theorem 13 Given voting rule r FineElicitationOverr NPhard k candidates weighted votes implies Evaluationr NPhard k candidates unweighted votes Proof We reduce FineElicitationOverr Evaluationr Consider incomplete proﬁle weighted votes We compute possible completion proﬁle compute wins Let candidate A This takes polynomial time We construct probability distribution unweighted votes completion weighted proﬁle drawn nonzero frequency We set s 0 For probability distribution Evaluationr candidate A loses probability greater 0 decides FineElicitationOverr original weighted proﬁle Note need change number candidates reduction cid2 In similar fashion CoarseElicitationOverr weighted votes NPhard Evaluationr However weaker result speciﬁc hypothesis There voting rules like cup rule CoarseElicitationOverr polynomial FineElicitationOverr NPhard A simple corollary theorem conclude EvaluationC NPhard Corollary 131 EvaluationC 4 candidates NPhard Proof It follows Theorem 11 Theorem 13 cid2 52 A tractable case We identify property preference aggregation function allows terminate elicitation process polynomial time We focus general elicitation problem FineElicitationOverr problem given voting rule r deciding terminate elicitation process elicit parts agents preferences We focus unweighted votes Moreover consider unbounded number candidates know unweighted votes bounded number candidates problem terminating elicitation polyno mial In context preference aggregation function IIA compute polynomial time set winners elicitation process Theorem 14 If f IIA determining set winners f preference elicitation polynomial number agents candidates Proof We recall preference elicitation stopped NW PW information declare winners At beginning NW PW contains candidates As preferences declared NW grows PW shrinks At step candidate PW pass NW loser When PW larger NW use sets guide preference elicitation If preference aggregation function IIA determine candidate A PW NW loser necessary winner ask agents declare preferences pairs involving A candidate B PW Moreover IIA allows consider proﬁle computing relations A B result guarantees result precise relation cid4cid5 To Algorithm 3 Winner determination MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1287 Input PW NW sets candidates f preference aggregation function Output W set candidates wins bool PW cid8 NW choose A PW NW wins true P A PW A repeat choose B P A agent AB ask A B compute f A B f A B A B PW PW B f A B A B PW PW A wins false P A P A B f A B A B P A wins true NW NW A return NW determine winners need know relations A B A PW NW B PW There examples pairs considered Algorithm 3 O PW2 steps eliminates incompleteness determine winners At step algorithm asks agent express preferences pair candidates procedure ask A B aggregates preferences function f We assume effort required agents answering ask A B polynomial Since assume social welfare functions consider polynomially computable follows computation polynomial number agents candidates cid2 Example 12 Consider incomplete proﬁle shown Example 2 ip A B C A C A B BC C A AB BC Pareto social welfare function f deﬁned Example 3 Algorithm 3 starts taking PW A B C NW Since PW cid8 NW algorithms selects element PW NW Suppose selects A Also Boolean variable wins set true set P A set possible winners different A B C Then element P A example B chosen agent says AB algorithm asks agent reveal preference pair A B computes f A B Assume A B agent Since f A B A B B loser B removed PW obtaining PW A C B removed P A P A C Since P A body repeat loop performed The candidate C P A chosen Since agent states AC algorithm simply computes f A C A cid4cid5 C C removed P A Since P A algorithm exits repeat loop candidate C added NW At point PW A C NW A Since PW cid8 NW algorithm performs loop chooses C PW NW P C contains A computes f C A A cid4cid5 C P C C added NW Since PW NW A C algorithm terminates returning winners A C Notice Algorithm 3 able determine winners starting incomplete proﬁle ip asking incomplete proﬁle If use results previous sections IIA monotonicity know compute eﬃciently necessary winners possible winners Thus output Algorithm 2 given input Algorithm 3 instead starting PW containing candidates NW 6 Related work In 14 preference aggregation functions combining incomplete total orders considered Compared work permit incompleteness incomparability allow incompleteness Second consider social choice functions return nonempty set winners Instead consider social welfare functions return partial order Social welfare functions ﬁner grained view result Third consider speciﬁc voting rules like Borda procedure plurality rule nonpositional rule like Condorcet polynomial compute possible necessary winners whilst focused general properties ensure tractability The problem characterizing complexity possible necessary winner problems investigated 23 dont consider STV voting rule cup rule They proﬁles partially ordered votes unweighted possible winner problem positional scoring rules Copeland maximin Bucklin ranked pairs NPcomplete necessary winner problem coNPcomplete Copeland ranked 1288 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 pairs rules Moreover polynomialtime algorithms necessary winner problem scoring rules maximin Bucklin We shown weighted votes unbounded number candidates testing possible winners STV NPhard However noticed rules practice including positional scoring rules deciding candidate possible winner polynomial 14 The complexity computing possible winners related complexity manipulating election 14 For instance NPcomplete determine Borda Copeland Maximin STV rules coalition cast weighted votes ensure given winner 9 It follows weighted votes deciding candidate possible winner NPhard rules Conitzer Sandholm prove CoarseElicitationOverSTV FineElicitationOverSTV coNPcomplete votes unweighted number candidates unbounded 10 On hand CoarseElicitationOverr FineElicitationOverr r pluralit y Borda veto Copeland number candidates 10 With weighted votes deciding elicitation intractable number candidates small For example Conitzer Sandholm prove CoarseElicitationOverSTV FineElicitationOverSTV coNPcomplete votes weighted 4 candidates 10 However CoarseElicitationOverr FineElicitationOverr polynomial r pluralit y Borda veto Copeland weighted votes number candidates 10 We shown weighted votes bounded number candidates voting rules CoarseElicitationOverr polynomial FineElicitationOverr intractable 7 Conclusions future work We considered aggregation preferences multiple agents despite presence incompleteness comparability agents preferences In particular focused problem determining candidate possible winner winner possible completion agents preferences necessary winner winner completions agents preferences We analyzed computational complexity problems considering weightedunweighted agents boundedunbounded number candidates We shown case unweighted agents bounded number candidates problems tractable cases intractable We shown unbounded number candidates diﬃcult ﬁnd good approximation sets possible necessary winners On positive proved preference aggregation function IIA monotonic ﬁnding possible necessary winners tractable We investigated knowledge possible necessary winners exploited context preference elicitation preference elicitation stopped set possible winners coincides set necessary winners We shown general deciding terminate preference elicitation intractable However polynomial preference aggregation function IIA suﬃcient elicit preferences regard candidates possible winners Some results use IIA strong assumption However use intractability evitable incomplete proﬁles We plan ﬁnd cases IIA relaxed We plan consider addition constraints agents preferences This means preference aggregation account feasibility candidates Thus possible necessary winners feasible It important consider compact knowl edge representation formalisms express agents preferences CPnets soft constraints Possible necessary winners deﬁned directly compact representations preference elicitation concern statements allowed representation language Finally possibility probability distribution completions incomplete preference relation provide additional information computing possible necessary winners References 1 K Arrow Social Choice Individual Values John Wiley Sons 1951 2 KJ Arrow AK Sen K Suzumara Handbook Social Choice Welfare NorthHolland Elsevier 2002 3 KJ Arrow A diﬃculty concept social welfare Journal Political Economy 58 4 1950 328346 4 JJ Bartholdi JB Orlin Single transferable vote resists strategic voting Social Choice Welfare 8 4 1991 341354 5 S Brams P Fishburn Voting procedures Handbook Social Choice Welfare Elsevier 2002 6 L Chen P Pu Survey preference elicitation methods Technical Report IC200467 Swiss Federal Institute Technology Lausanne EPFL 2004 7 V Conitzer Computational aspects preference aggregation PhD Thesis Computer Science Department Carnagie Mellon University 2006 8 V Conitzer J Lang T Sandholm How candidates required election hard manipulate Proceedings TARK03 2003 pp 201214 9 V Conitzer T Sandholm Complexity manipulating election candidates Proceedings AAAI02 2002 pp 314319 10 V Conitzer T Sandholm Vote elicitation complexity strategyproofness Proceedings AAAI02 2002 pp 392397 11 V Conitzer T Sandholm Nonexistence voting rules usually hard manipulate AAAI06 AAAI Press 2006 pp 627634 12 A Gibbard Manipulation voting schemes A general result Econometrica 41 1973 587601 13 A Gibbard Manipulation voting schemes A general result Econometrica 41 3 1973 587601 14 K Konczak J Lang Voting procedures incomplete preferences Proc IJCAI05 Multidisciplinary Workshop Advances Preference Handling 2005 15 J Lang Logical preference representation combinatorial vote Annals Mathematics Artiﬁcial Intelligence 42 1 2004 3771 MS Pini et al Artiﬁcial Intelligence 175 2011 12721289 1289 16 JF Laslier Tournament Solutions Majority Voting Springer 1997 17 MS Pini F Rossi KB Venable T Walsh Incompleteness incomparability preference aggregation IJCAI 2007 Proceedings 20th International Joint Conference Artiﬁcial Intelligence AAAI Press 2007 pp 14641469 18 MS Pini F Rossi K Brent Venable T Walsh Computing possible necessary winners incomplete partiallyordered preferences Proceedings ECAI06 pp 767768 19 F Rossi KB Venable T Walsh mCP nets representing reasoning preferences multiple agents Proceedings AAAI2004 2004 pp 322327 20 MA Satterthwaite Strategyproofness arrows conditions Existence correspondence theorems voting procedures social welfare func tions Journal Economic Theory 10 1975 187217 21 MA Satterthwaite Strategyproofness Arrows conditions Existence correspondence theorems voting procedures social welfare func tion Economic Theory 10 1975 187217 22 T Walsh Complexity terminating preference elicitation Proceedings AAMAS08 2008 pp 967974 23 L Xia V Conitzer Determining possible necessary winners common voting rules given partial orders Proceedings AAAI08 AAAI Press 2008 pp 196201