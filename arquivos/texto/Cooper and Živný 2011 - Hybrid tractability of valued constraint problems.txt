Artiﬁcial Intelligence 175 2011 15551569 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Hybrid tractability valued constraint problems Martin C Cooper Stanislav Živný bc IRIT University Toulouse III 31062 Toulouse France b University College University Oxford Oxford OX1 4BH UK c Computing Laboratory University Oxford Oxford OX1 3QD UK r t c l e n f o b s t r c t Article history Received 24 August 2010 Received revised form 6 December 2010 Accepted 19 February 2011 Available online 24 February 2011 Keywords Constraint optimisation Computational complexity Tractability Soft constraints Valued constraint satisfaction problems Graphical models Forbidden substructures The constraint satisfaction problem CSP central generic problem science artiﬁcial intelligence provides common framework theoretical problems reallife applications Valued constraint problems generalisation CSP allow user model optimisation problems Considerable effort identifying properties ensure tractability problems In work initiate study hybrid tractability valued constraint problems properties guarantee tractability given valued constraint problem depend underlying structure instance treestructured types valued constraints instance submodularity We present novel hybrid classes valued constraint problems unary constraints allowed include machine scheduling problem constraint problems arbitrary arities overlapping nogoods SoftAllDiff constraint arbitrary unary valued constraints An important tool investigation notion forbidden substructures 2011 Elsevier BV All rights reserved 1 Introduction An instance constraint satisfaction problem CSP consists collection variables assigned values subject speciﬁed constraints Each CSP instance underlying hypergraph known constraint hypergraph vertices variables instance hyperedges scopes constraints Such hypergraph known structure instance An important line research CSP identify tractable cases recognisable polynomial time Most work focused general approaches identifying forms constraint suﬃciently restrictive ensure tractability matter combined 12 identifying structural properties constraint networks ensure tractability matter forms constraint imposed 3 The ﬁrst approach led identifying certain algebraic properties known polymorphisms 4 necessary set constraint types ensure tractability A set constraint types ensures tractability called tractable constraint language The second approach characterise tractable cases boundedarity CSPs binary CSPs class structures ensures tractability subject certain complexity theory assumptions essentially structures bounded treewidth 56 A preliminary version work appeared Proceedings 16th International Conference Principles Practice Constraint Programming CP LNCS vol 6308 2010 pp 152166 This work supported EPSRC grant EPF01161X1 Stanislav Živný supported Junior Research Fellowship University College Oxford Corresponding author Computing Laboratory University Oxford Wolfson Building Parks Road Oxford OX1 3QD UK Tel 44 01865 273884 Email addresses cooperiritfr MC Cooper standazivnycomlaboxacuk S Živný 00043702 matter 2011 Elsevier BV All rights reserved doi101016jartint201102003 1556 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 In practice constraint satisfaction problems usually possess suﬃciently restricted structure use suﬃciently restricted constraint language fall tractable classes Nevertheless properties ensure solved eﬃciently properties concern structure form constraints Such properties called hybrid reasons tractability 711 Since practice constraint satisfaction problems overconstrained solution constrained solutions soft constraint satisfaction problems studied 7 Several general soft CSP frameworks proposed literature 1213 In paper focus general frameworks valued constraint satisfaction problem VCSP 12 In instance valued CSP constraint associated cost function relation CSP allows user express preferences different partial assignments goal ﬁnd optimal assignment assignment smallest total cost Similarly CSP important line research VCSP identify tractable cases recognisable polynomial time It known structural reasons tractability generalise VCSP 7 In case language restrictions conditions known guarantee tractability given set valued constraints 141622 Up results hybrid tractability VCSP tractability subproblems VCSP deﬁned properties exclusively languagebased structurebased For instance Kumar deﬁnes interesting framework hybrid tractability Boolean weighted CSP 10 However best knowledge framework far provided new hybrid classes In fact tractable classes presented 10 hybrid known Contributions The main contribution paper study hybrid tractability VCSPs introduction novel hybrid tractable classes VCSPs As ﬁrst step start binary VCSPs We introduce class deﬁned jointwinner property JWP This class generalises SoftAllDiff constraint arbitrary unary valued constraints Moreover generalise class larger class nonbinary VCSPs including CSP MAXCSP instances overlapping nogoods The rest paper organised follows In Section 2 deﬁne binary constraint satisfaction problems CSPs valued constraint satisfaction problems VCSPs necessary deﬁnitions needed paper In Section 3 study binary VCSPs soft constraints unary A connection VCSPs maximum weight independent set problem certain graph classes leads straightforward manner corresponding hybrid tractable classes VCSPs In Section 4 deﬁne jointwinner property examples studied problems satisfy jointwinner property In Section 5 study important properties VCSP instances satisfying jointwinner property allow Section 6 present polynomialtime algorithm solving binary VCSPs satisfying jointwinner property In Section 7 prove new tractable class maximal In Section 8 extend class tractable VCSPs deﬁned jointwinner property Finally Section 9 summarise work ﬁnish open problems We remark results formulated valued constraint satisfaction problems clear results apply optimisation frameworks equivalent valued constraint problems Gibbs energy minimisation Markov Random Fields graphical models 1718 2 Preliminaries In paper ﬁrstly focus binary valued constraint satisfaction problems generalising problems cost functions arbitrary arity We denote Q set nonnegative rational numbers We denote Q Q standard addition operation extended Q Members Q called costs A unary cost function domain D mapping ci D Q A binary cost function domains D D j mapping ci j D D j Q If range ci ci j respectively lies entirely Q ci ci j respectively called ﬁnitevalued cost function If range ci ci j respectively α α Q ci ci j respectively called crisp cost function Note crisp cost functions relations subsets D unary case D D j binary case corresponding set ﬁnitecost tuples If ci ci j respectively crisp cost function called soft A binary VCSP instance 12 consists set variables denoted v 1 n variable v domain D containing possible values variable v set valued constraints Each valued constraint form cid7v cicid8 v variable ci unary cost function constraints form called unary constraints form cid7cid7v v jcid8 ci jcid8 v v j variables j pair cid7v v jcid8 called scope constraint ci j binary cost function constraints form called binary constraints A constraint called crisp associated cost function crisp similarly constraint called soft associated cost function soft For notational convenience paper assume unique valued constraint given scope In particular absence explicit constraint variables v v j j assume corresponding cost function constant function ci j 0 A solution VCSP instance assignment values domains variables minimum total cost given ncid2 i1 civ cid2 1cid2i jcid2n ci jv v j MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1557 A VCSP instance crisp constraints called CSP instance In CSP task ﬁnding optimal assignment amounts deciding consistent assignment constraints satisﬁed assignment ﬁnite cost Hence CSP instance equivalent normalised version ﬁnite costs replaced 0 The microstructure binary CSP instance P graph set vertices corresponds set possible assignments values variables vertex cid7v acid8 represents assignment value variable v 19 The edges microstructure connect pairs variablevalue assignments cid7v acid8 cid7v j bcid8 j ci ja b The micro structure binary VCSP instance deﬁned similarly In weighted microstructure binary VCSP instance edges vertices assigned corresponding binary unary costs For CSPs VCSPs microstructure complement complement microstructure edges represent pairs variablevalue assignments incompatible according constraints The microstructure complement contains edges cid7v acid8 cid7v j bcid8 j ci ja b variable v edges form cid7v acid8 cid7v bcid8 cid9 b D variable assigned value A clique graph set vertices pairwise adjacent An independent set graph set vertices pairwise nonadjacent It known solving nvariable CSP instance P equivalent ﬁnding clique size n microstructure P ﬁnding independent set size n microstructure complement P 19 Therefore tractability results maximum independent set problem classes graphs straightforwardly obtain tractable CSP classes 820 Given graph G denote V G set vertices G EG set edges G A coloured graph G cid7G cG cid8 graph G colouring cG V G 1 n vertices G The coloured microstructure complement nvariable binary CSP VCSP instance P G cid7G cG cid8 G microstructure complement P cG colouring cG V G 1 n vertices G colour vertex cid7v acid8 Unlike microstructure coloured microstructure contains information necessary reconstruct CSP instance P Similarly weighted version coloured microstructure VCSP instance edges vertices assigned costs contains information reconstruct VCSP instance A graph H induced subgraph G injective mapping f V H V G u v EH f u f v EG We extend notion induced subgraphs induced forbidden substructures coloured microstructure coloured microstructure complement Let G cid7G cG cid8 coloured microstructure coloured microstructure complement CSP instance P Now let H cid7H c H cid8 coloured graph We H induced substructure G H induced subgraph G vertices colour mapped vertices colour injective mapping f V H V G 1 u v EH f u f v EG 2 c H u c H v cG f u cG f v In paper present classes VCSPs deﬁned forbidding certain substructure called pattern coloured microstructure coloured microstructure complement VCSP instance In ﬁgures draw ovals vertices assigned colour corresponding assignments variable 3 Conservative VCSPs crisp binary constraints In section restrict attention binary VCSP instances crisp binary constraints There restrictions unary constraints crisp soft unary constraints allowed Deﬁnition 1 A class VCSP instances conservative closed addition arbitrary unary valued constraints It follows result Takhanov 21 PNPhard dichotomy conservative binary VCSPs binary constraints crisp belong particular language Furthermore follows recent result Kolmogorov Živný 22 PNPhard dichotomy conservative binary VCSPs binary necessarily crisp constraints belong particular language1 It open question similar dichotomy exists hybrid classes 31 Maximum weight independent set We tractability results maximum weight independent set perfect forkfree applefree graphs obtain hybrid tractable classes conservative VCSPs cid3 Let G graph G cid7V Ecid8 weights w V Q vertices G The weight independent set S G denoted wS sum weights vertices S wS vS wv It easy given binary VCSP instance P unary constraints soft P solved ﬁnding maximum weight independent set microstructure complement P weights given wcid7v acid8 Mn cia M strictly greater maximum ﬁnite unary cost cia Indeed independent sets weight strictly greater Mnn 1 onetoone correspondence consistent assignments n variables P 0 cid2 cia M implies weight 1 We remark dichotomy results 2122 hold nonbinary VCSPs restricted binary VCSPs 1558 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 Fig 1 Forbidden pattern deﬁning brokentriangle property independent set size n strictly greater nMn M Mnn 1 weight independent set size n 1 Mnn 1 Several wellstudied classes graphs admit polynomialtime algorithm maximum weight independent set problem MWIS For example known MWIS perfect graphs solvable polynomial time 23 Moreover perfect graphs recognised polynomial time 24 Similar results hold forkfree 25 applefree graphs 26 The combination results gives Theorem 2 The class VCSP instances crisp binary arbitrary unary constraints microstructure complement perfect forkfree applefree tractable The tractability VCSPs perfect microstructure soft unary constraints independently pointed Takhanov 21 Jebara 27 It possible express properties VCSP CSP instances uniquely terms properties microstructure microstructure graph contain important information telling vertices correspond assignments variables This information contained coloured microstructure This rest paper consider properties weighted coloured microstructure order deﬁne novel tractable hybrid classes 32 Brokentriangle property We seen forbidding certain patterns microstructure guarantees tractability certain classes VCSPs The recently discovered brokentriangle property BTP 11 equivalent forbidding pattern coloured microstructure CSP guarantees feasible solution polynomial time In section hybrid tractable class CSPs deﬁned brokentriangle property extendible VCSPs arbitrary soft unary constraints A binary CSP instance P satisﬁes brokentriangle property respect vari able ordering triples variables v v j vk j k ci ju v ciku c jkv b ciku b c jkv In words broken triangle u v b closed This equivalent forbidding pattern Fig 1 induced substructure coloured microstructure P Theorem 3 Assuming P cid9 N P tractable conservative class VCSP instances includes CSP instances satisfying brokentriangle property Proof Let cid7G kcid8 instance decision version maximum independent set problem consists deciding independent set size k graph G This problem known NPcomplete 28 We transform instance binary VCSP instance soft unary constraints satisﬁes brokentriangle property Every vertex G represented Boolean variable v D 0 1 We impose constraint cid7cid7v v jcid8 cid70 0cid8 cid70 1cid8 cid71 0cid8cid8 vertices corresponding v v j adjacent G Now assignments satisfying constraints onetoone correspondence independent sets I G vertex I v 1 We impose soft unary constraints cid7v cicid8 cix 1 x x 0 1 The unary constraints ensure goal minimise number variables assigned value 0 maximising number variables assigned value 1 Therefore constructed VCSP instance equivalent given maximum independent set problem It remains resulting VCSP instance satisﬁes brokentriangle property respect ordering In fact satisﬁed respect ordering Take variables v v j vk j k If pairs variables cid7v vkcid8 cid7v j vkcid8 constrained brokentriangle property trivially satisﬁed Assume constraints present The situation illustrated Fig 2 It easily checked brokentriangle property satisﬁed constraint cid7v v jcid8 cid70 0cid8 cid70 1cid8 cid71 0cid8 shown Fig 2 complete constraint cid2 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1559 Fig 2 VCSP encoding maximum independent set Fig 3 The jointwinner property ci ja b cid3 mincika c c jkb c Fig 4 The crisp variant jointwinner property Example 5 4 Jointwinner property In section deﬁne jointwinner property Fig 3 key concept paper We present examples known tractable problems generalised jointwinner property In Section 5 study basic properties VCSPs satisfying jointwinner property important designing polynomialtime algorithm Section 6 Recall assume binary VCSP unique cost function unordered pairs distinct variables v v j For simplicity presentation write ci ja b order j unknown represent unique binary cost assigning b v v j Deﬁnition 4 Jointwinner property A triple variables cid7v v j vkcid8 satisﬁes jointwinner property JWP ci ja b cid3 mincika c c jkb c domain values D b D j c Dk A binary VCSP instance satisﬁes jointwinner property triple distinct variables instance satisﬁes jointwinner property Note jointwinner property places restrictions unary constraints ci conservative Example 5 The jointwinner property normalised binary CSP instance amounts forbidding multiset binary costs 0 triangle formed assignments distinct variables Recall normalised CSP VCSP zero inﬁnite costs Equivalently given cost 0 corresponds compatible assignments non edges microstructure complement CSP instance P satisﬁes jointwinner property coloured microstructure complement P forbids structure Fig 4 induced substructure Since combination occur triples variables cid7v v j vkcid8 constrained binary constraints v cid9 v j cid9 vk cid9 v class CSPs satisfying jointwinner property generalises AllDifferent constraint arbitrary unary valued constraints This generalisation equivalent allowing assignment set disjoint sets variablevalue assignments 1560 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 Example 6 Consider unweighted MAX2SAT problem repeated clauses wellknown NPcomplete problem 2829 An instance φ MAX2SAT φ 2CNF formula seen Boolean binary 0 1valued VCSP instance The jointwinner property equivalent following condition φ l l1 φ l l2 φ l1 l2 φ l l1 l2 literals distinct variables It known set VCSP instances comprising single SoftAllDiff constraint arbitrary unary valued constraints tractable Furthermore class instances hybrid tractability follow uniquely language cost functions uniquely structure instance As example shows class satisﬁes JWP showing JWP deﬁnes hybrid tractable class tractability JWP shown later Section 6 Example 7 One commonly global constraints AllDifferent constraint 30 Petit et al introduced soft version AllDifferent constraint SoftAllDiff 31 They proposed types costs minimised graph variablebased costs The counts number equalities whilst counts minimum number variables need change value order satisfy AllDifferent constraint The algorithms ﬁltering constraints introduced paper improved van Hoeve et al 32 It easy check graphbased variant SoftAllDiff constraint satisﬁes jointwinner property In case j cost function ci j deﬁned ci ja b 1 b ci ja b 0 Take variables v v j vk D b D j c Dk If ci ja b c jkb c cika c means domain values b c equal different jointwinner property satisﬁed trivially If costs 1 jointwinner property satisﬁed Observe transitivity equality happen costs 0 In order code variablebased SoftAllDiff constraint binary VCSP P create n variables v cid12 domains 1 means v ﬁrst variable original VCSP assigned value D 1 2 The assignment v cid12 2 means v assigned ﬁrst variable In P crisp constraint v cid12 1 value D D j pair variables j soft unary constraint v disallows v cia k k 1 k 1 2 1 n Hence variable ﬁrst assigned assignment value variable apart ﬁrst incurs cost 1 Again transitivity equality happen binary costs shown triangle Fig 3 zero follows immediately jointwinner property satisﬁed P cid12 j cid12 We remark class deﬁned JWP strictly bigger SoftAllDiff generic algorithm eﬃcient tailormade algorithms SoftAllDiff 3233 Several generalisations AllDifferent constraints studied 3435 satisfy JWP property Example 8 Suppose n jobs assigned d machines Let lim length time required machine m complete job If machine m perform job lim We use variable v represent machine job assigned The set jobs denote Sm assigned machine m performed series increasing order length lim The aim minimise T sum jobs time completion If jobs j assigned machine lim l jm job j wait execution job contributing time lim sum T This means T dcid2 cid4 cid2 m1 iSm lim cid2 jSm j cid5 cid6 lim l jm min cid7 In words optimal assignments jobs machines given solutions binary VCSP unary constraints cim lim representing execution times jobs binary constraints cid8 cid6 cid5 m m cid12 ci j minlim l jm 0 cid12 m m representing waiting times jobs The jointwinner property ci ja b cid3 mincika c c jkb c trivially satisﬁed VCSP instance b c equal case cika c c jkb c zero It satisﬁed b c m minlim l jm cid3 minminlim lkm minl jm lkm This problem shown solvable polynomial time 3637 5 Structure problems satisfying JWP The lemma explains reason jointwinner property triangle unique smallest cost MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1561 Lemma 9 A binary VCSP instance satisﬁes jointwinner property triples distinct variables cid7v v j vkcid8 D b D j c Dk costs ci ja b cika c c jkb c equal equal Proof Assume jointwinner property satisﬁed triples variables cid7v v j vkcid8 cid7v j vk v icid8 cid7vk v v jcid8 write α ci ja b β cika c γ c jkb c Without loss generality let α minα β γ From α cid3 minβ γ deduce α minβ γ α β γ equal equal On hand α β γ equal equal minβ γ minα β γ cid2 α JWP satisﬁed cid2 We binary constraint variables v v j Zconﬁguration subdomains b D c d D j minci ja c ci jb c ci jb d ci ja d Since JWP imposes condition exactly variables imposes condition individual binary constraints In particular Zconﬁgurations occur However Z conﬁgurations eliminated simple preprocessing step This greatly simplify structure instance allowing apply mincost maxﬂow algorithm solve JWP instances We pair subdomains S S j S D S j D j independent variables b S c d S j k j e Dk cika e cikb e c jkc e c jkd e Lemma 10 If binary VCSP instance satisfying JWP Zconﬁguration subdomains b D c d D j b c d independent variables Proof Without loss generality presence Zconﬁguration means minci ja c ci jb c ci jb d β ci ja d β Consider k j e Dk By JWP triple assignments cid7v acid8 cid7v j dcid8 cid7vk ecid8 1 cika e cid2 β 2 c jkd e cid2 β In case 1 repeated application JWP triples assign ments cid7v acid8 cid7v j ccid8 cid7vk ecid8 cid7v bcid8 cid7v j ccid8 cid7vk ecid8 cid7v bcid8 cid7v j dcid8 cid7vk ecid8 deduce cika e c jkc e cikb e c jkd e In case 2 applying JWP triples reverse order allows deduce cika e c jkc e cikb e c jkd e cid2 Lemma 11 In binary VCSP instance satisfying JWP S S j S D S j D j independent variables f D S c d S j ci j f c cid9 ci j f d S f S j independent variables Proof Consider variable k j e Dk Since S S j independent variables c jkc e c jkd e By applying JWP triples assignments cid7v f cid8 cid7v j ccid8 cid7vk ecid8 cid7v f cid8 cid7v j dcid8 cid7vk ecid8 deduce cik f e equal c jkc e c jkd e cik f e equal ci j f c ci j f d impossible ci j f c cid9 ci j f d This shows S f S j independent variables cid2 We S S j independent domainvalues c d S j f D S ci j f c ci j f d b S g D j S j ci ja g ci jb g Given Zconﬁguration b D c d D j JWP assumption use simple algorithm build maximal pair subdomains S S j independent variables b S c d S j From Lemma 10 initialise S S j b c d Then Lemma 11 simply adding f D S cid12 S j ci j f c cid12 S j cid12 d S c cid12 g When process converges S S j independent variables cid12 g cid9 ci jb ci ja independent domainvalues cid12 symmetry adding g D j S j S j cid12 cid9 ci j f d cid12 b Now let p0 S minimise cia S Similarly let q0 S j minimise c ja S j Furthermore let p1 S q1 S j pair minimises cia c jb ci ja b S b S j We replace subdomains S S j single domain values p q cip cip0 c jq c jq0 ci jp q ci jp1 q1 cip1 cip0 c jq1 c jq0 cip ci jp q c jq ci jp1 q1 cip1 c jq1 For f D S set ci j f q ci j f q0 g D j S j set ci jp g ci jp0 g Also k j u Dk cikp u cikp0 u cikp1 u c jkq u c jkq0 u c jkq1 u The pair domain values p q simulate p0 q0 values p q simulates p1 q1 values We observe substitution preserves JWP property This trivially true triangles involving assignments p q binary costs identical p0 q0 Since S S j independent variables triangle costs involving assignments p1 q1 isosceles In particular u Dk k cid9 k cid9 j cikp1 u c jkq1 u α ci jp1 q1 cid3 α JWP Since cikp u cikp1 u c jkq1 u c jkq u ci jp q cid3 ci jp1 q1 JWP property preserved This substitution operation guaranteed preserve optimal solution This choice p0 q0 p1 q1 1 assignment x n variables xi S x j S j replacing xi p0 p equivalent increase cost 2 assignment x xi S x j S j replacing x j q0 q increase cost 3 assignment x xi S x j S j simultaneously replacing xi p1 x j q1 replacing xi p x j q increase cost 1562 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 We VCSP instance satisfying JWP Zfree contains Zconﬁgurations We know VCSP satisfying JWP Zfree applying preprocessing step eliminate Zconﬁgurations This preprocessing takes polynomial time A naive algorithm requires O n2d4 time detect Zconﬁgurations For given pair S S j new domain value g added S j test f D S c S j ci j f c cid9 ci j f g This O d2 operation By simple counting argument total number times domain value added set S total number variablevalue assignments eliminated substitution operation described turn bounded nd Thus total complexity preprocessing operation O n2d4 nd3 O n2d4 The assignment graph binary VCSP instance P graph cid7V P EP cid8 vertices V P cid7v acid8 1 cid2 cid2 n D edges EP cid7v acid8 cid7v j bcid8 cid9 j The complete assignment graph simply complete graph vertices V P Deﬁnition 12 Let P binary VCSP instance A subgraph C cid7V C E C cid8 assignment graph P assignment clique C forms clique complete assignment graph P edges assignments variable added E C cid7V C E C S C cid8 clique S C cid7v acid8 cid7v bcid8 cid7v acid8 cid7v bcid8 V C cid9 b Lemma 13 Let P Zfree binary VCSP instance satisfying JWP Then ﬁxed α edges assignment graph P corresponding binary costs α corresponding vertices form nonintersecting assignmentcliques Proof We ﬁrst P Zfree single binary valued constraint connected set E edges assignment graph P corresponding binary costs α form assignmentclique This follows simple inductive argument number mi assignments v v v j variables scope constraint It trivially true mi 1 Let A j denote assignments variable v j covered E Consider happens cid12 new edge added E corresponding new assignment v produce new connected set edges E covering mi 1 cid3 2 assignments v Since E assignment cid7v j ccid8 A j By inductive hypothesis assignments cid7v j dcid8 A j including cid7v j ccid8 connected edges E E assignments cid7v j dcid8 cid9 cid7v j ccid8 A j assignments cid7v bcid8 b cid9 Since P Zfree implies cid7v acid8 connected E connected new assignment cid7v acid8 connected edge E For contradiction let assume edges assignment graph P corresponding binary costs α form nonintersecting assignmentcliques Hence vertices cid7v acid8 cid7v j bcid8 cid7vk ccid8 j k distinct assignment graph ci ja b cid3 α cika c cid3 α c jkb c α But contradiction Lemma 9 cid2 cid12 cid12 cid12 cid12 In rest paper refer assignmentclique Cα assignment graph corresponding binary costs α implicitly assume Cα maximal Since assignmentclique Cα uniquely deﬁned set vertices identify Cα set vertices Lemma 14 Let P Zfree binary VCSP instance satisfying JWP Let Cα assignmentclique assignment graph P corresponding binary costs α Cβ assignmentclique assignment graph P corresponding binary costs β If Cα intersects Cβ α cid2 β Cα Cβ Proof Suppose Cα Cβ intersect α cid2 β If α β claim satisﬁed trivially Lemma 13 suppose α β For contradiction assume Cα cid2 Cβ By assumptions cid7v acid8 Cα Cβ cid7v j bcid8 Cβ Cα Since Cβ assignmentclique ci ja b cid3 β α Thus Lemma 13 edge cid7v j bcid8 cid7v acid8 cid12 cid12 α intersect cid7v acid8 α edges cost α Cα cid7v j bcid8 Cα But Cα C assignmentclique C contradicts Lemma 13 cid2 6 Algorithm JWP In section present polynomialtime algorithm solving Zfree binary VCSPs satisfying jointwinner prop erty The algorithm extension reduction standard maxﬂowmincut problem ﬂowbased soft global constraints 383239 First review basics ﬂows graphs We refer reader standard textbook 40 details Here present notions results needed purposes In particular deal integral ﬂows We denote N set positive integers zero Let G V A directed graph vertex set V arc set A To arc A assign demandcapacity function da ca weight function wa da ca N wa Q Let s t V A function f A N called s t ﬂow ﬂow v V s t cid2 cid2 f auv A avu A f ﬂow conservation MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1563 Fig 5 Microstructure P described Example 15 For interpretation references colour ﬁgure reader referred web version article cid3 We ﬂow feasible da cid2 f cid2 ca A We deﬁne value ﬂow f val f cid3 asv A f avs A f We deﬁne cost ﬂow f A wa f A minimumcost ﬂow feasible ﬂow minimum cost Algorithms ﬁnding minimumcost ﬂow given value known 4140 Given network G integer demand capacity functions successive shortest path algorithm 41 ﬁnd feasible s t ﬂow value α N ﬂow exists minimum cost time O α SPn m SPn m time compute shortest directed path G n vertices m edges If feasible ﬂow value α successive shortest path algorithm outputs ﬂow time O α SPn m Given Zfree binary VCSP instance P satisfying JWP construct directed graph GP minimumcost ﬂows value n onetoone correspondence solutions P Apart source node s GP types node cid3 1 A variable node v 1 n variable P 2 An assignment node cid7v acid8 D 1 n possible variablevalue assignment P 3 An assignmentclique node Cα maximal assignmentclique edges assignment graph P correspond ing binary costs α The subscript α equal minimum cost edges assignmentclique cid12 α denote distinct nonintersecting assignmentcliques corresponding necessary use Cα C value α In GP arc s v variable v P For variables v D arc v cid7v acid8 arc cid7v acid8 assignmentclique Cα containing cid7v acid8 α maximal Cα unique Lemma 14 We assignmentclique Cβ father assignmentclique Cα minimal assignmentclique properly contains Cα Cα Cβ α β cid3Cγ Cα Cγ Cβ Cβ unique Lemma 14 In GP assignmentclique Cα father Cβ bundle arcs Cα Cβ consisting r arcs ei 1 r r number vertices assignmentclique Cα The weight arc ei Cα Cβ wei 1α β We use convention 0 0 α single arc weight 0 arcs weight simply omitted We identify sink node t assignmentclique C0 consisting edges assignment graph binary costs 0 Each arc demand 0 capacity 1 arcs s v demand 1 capacity 1 forces ﬂow exactly 1 variable node v Weights arcs 0 arcs going assignmentclique node father assignmentclique node described arcs variable node v assignment node cid7v acid8 weight cia We ﬂows constructed network onetoone correspondence assignments P ﬁrst example Example 15 We general construction simple example Let P VCSP instance variables v 1 v 2 v 3 D1 D2 b D3 The weighted coloured microstructure P illustrated Fig 5 Missing edges cost 0 There assignmentcliques corresponding cost 1 C1 cid7v 1 acid8 cid7v 2 acid8 cid7v 3 acid8 solid red cid7v 1 bcid8 cid7v 2 bcid8 dotted blue Fig 5 assignmentclique corresponding cost 2 Fig 5 C C2 cid7v 1 acid8 cid7v 2 acid8 dashed green Fig 5 The network corresponding instance P shown Fig 6 demands capacities square brackets weights arcs numbers 0 The bold red edges represent ﬂow f corresponding assignment v 1 v 2 v 3 total cost 4 cost f cid12 1 We prove ﬂows f GP onetoone correspondence assignments VCSP P furthermore cost f equal cost P corresponding assignment All feasible ﬂows value n n arcs s v leaving source demand capacity equal 1 Flows GP necessarily correspond assignment unique value ai variable v ﬂow 1 node v traverse node cid7v aicid8 unique ai D It remains assignment cid7a1 ancid8 1564 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 Fig 6 Network GP corresponding VCSP P Example 15 For interpretation references colour ﬁgure reader referred web version article cid7v 1 vncid8 feasible cost P ﬁnite corresponding minimumcost feasible ﬂow f cost cid3 cid3 ciai j ci jai j For arc incoming outgoing cid7v ucid8 GP let f 1 u ai 0 We denote number assignments cid7v aicid8 assignmentclique Cα NCα cid7v aicid8 Cα 1 cid2 cid2 n By construction assignmentclique node Cα GP outgoing arcs father assignmentclique For outgoing arc weight Cα father assignmentclique let f 1 NCα 0 This simply means outgoing arcs capacity 1 Cα increasing order weight assignment cid7v aicid8 Cα This clearly minimumcost ﬂow corresponding assignment cid7a1 ancid8 GP Let c f Cα denote cost β father assignmentclique Cβ Cα The cost ﬂow f given ncid2 i1 ciai cid2 NCα cid2 Cα i1 cid5 1 cid6 α c f Cα ncid2 i1 ncid2 i1 ciai ciai cid2 NCα 1cid2 cid5 cid6 α c f Cα i1 NCα 1NCα 2 cid5 cid6 α c f Cα Cα cid2 Cα This corresponds precisely cost assignment cid7a1 ancid8 P assignmentclique Cα father assignmentclique Cβ NCα 1NCα2 binary constraints contributes cost α β cost β edges Cβ For rest section let d max1cid2icid2n D size largest domain Given VCSP instance satisfying jointwinner property clearly D D j different costs cost function ci j Hence total O n2d2 different maximal assignmentcliques Cα We improve upper bound O nd Lemma 16 A Zfree binary VCSP instance P satisfying jointwinner property 2nd 1 different maximal assignment cliques Cα Proof Consider Zfree binary VCSP instances P satisfying jointwinner property assignment graph N nd vertices Let A N maximum number assignmentcliques Cα instances P We prove induction A N cid2 2N 1 Clearly A1 1 Consider assignment graph N vertices Consider assignmentclique Cα P include variablevalue assignments P maximal sense assignmentclique Cβ Cα Let r Cα By Lemma 14 maximality Cα assignmentclique Cβ intersect Cα complement assignmentclique containing vertices assignment graph P Hence partition set variablevalue assignments P creating VCSP instances assignment graphs r N r vertices obtain following recurrence A N cid2 1 Ar A Nr From inductive hypothesis Ar cid2 2r 1 A Nr cid2 2N r 1 Since 1 2r 1 2N r 1 2N 1 follows A N cid2 2N 1 cid2 We nvariable instances satisfying jointwinner property recognised solved time cubic n Theorem 17 A binary VCSP satisfying jointwinner property solvable O n2d3n d time Proof From Deﬁnition 4 recognition achieved O n3d3 time We seen VCSP satisfying JWP Zfree O n2d4 time MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1565 To solve Zfree VCSP instance satisfying JWP create vertex assignmentcliques corresponding binary costs α By Lemma 16 O nd different assignmentcliques So network cid12 O n2d2 edges The network built O n3d3 time O nd cid12 O nd nd n 2 O nd vertices m n times invoking depthﬁrst search assignment graph instance size O n2d2 cid12 cid12 vertices m cid12 The successive shortest path algorithm ﬁnd feasible ﬂow value n minimum cost network cid12 time compute shortest directed path n cid12 O nn2d2 nd lognd network n O n3d2 Hence complexity solve Zfree JWP instance O n3d3 The total complexity including preprocessing O n2d3n d cid2 cid12 SPn edges 4140 Using Fibonacci heaps O nm edges time O nSPn vertices m cid12 n cid12 m cid12 m log n cid12 cid12 7 Maximality JWP Tractable classes deﬁned structural language restrictions shown maximal That extension class NPhard We consider hybrid tractable class deﬁned set S possible combinations k costs subproblem kmaximal extending S include single combination costs renders problem NPhard In particular tractable class JWP deﬁned rule costs 3variable subproblem 3maximal extending include single combination costs 3 variables renders problem NPhard The main result section jointwinner property deﬁnes 3maximal tractable class bound number possible distinct cost values This result holds domain size d cid3 2 But JWP deﬁnes 3maximal tractable class cases impose bound number possible distinct cost values corresponds interesting subproblems VCSP CSP MAXCSP We ﬁrst consider special case costs belong α β ﬁxed distinct costs α β If β corresponds CSP β corresponds MAXCSP When costs belong α β jointwinner property deﬁnes maximal tractable class case domain size 2 costs belong α α This case wellknown tractable class Boolean binary CSPs 42 Theorem 18 If costs belong α β ﬁxed distinct costs α β jointwinner property deﬁnes maximal tractable class provided d 2 d cid3 2 β d maximum domain size Proof To prove maximality NPhardness set instances deﬁned fact triangle triple costs satisﬁes jointwinner property ﬁxed combination Since costs belong α β α β Deﬁnition 4 situation forbidden JWP 3 variables v v j vk domain values D b D j c Dk ci ja b α cika c c jkb c β Hence extending JWP means allowing combinations costs α β triangles If β allowing combinations costs means instance allows binary relations corresponding set ﬁnitecost tuples encode binary CSP This NPcomplete d 2 29 If β allowing combinations costs α β equivalent set instances binary MAXCSP constraints scope The NPhardness problem d cid3 2 follows following reduction binary MAXCSP wellknown NPcomplete problem 2829 A polynomialtime reduction cid12 instance I binary MAXCSP equivalent instance I constraints scope j constrained clique equality achieved replacing variable v constraints M greater total number constraints I If jth constraint I scope cid7v v jcid8 j 1 M cid8 In optimal solution I replaced I necessarily assigned value cost M incurred cid2 constraint scope cid7v j 1 M I I M variables v variables v j v j j cid12 cid12 cid12 j We prove main theorem concerning 3maximality jointwinner property general case costs restricted values α β The essential differences compared proof Theorem 18 1 prove maximality relative addition combination costs involving distinct values α β γ 2 α β γ 2 JWP allows triangles involving distinct costs Theorem 19 The jointwinner property deﬁnes 3maximal tractable class domain size d cid3 2 Proof Let α β cid2 γ combination costs satisfy JWP To prove 3maximality NPhardness set instances deﬁned fact triangle triple costs satisﬁes jointwinner property α β γ We ﬁrstly consider case γ It known MAXCSP NPhard 29 Firstly binary MAXCSP coded binary VCSP 0 1valued cost functions NPhard bipartite graphs This follows fact easily convert instance binary MAXCSP instance binary MAXCSP bipartite graph follows For ci ja b 1 introduce extra Boolean variable w jab replace cost 1 b ci j costs 1 xi w jab 0 1566 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 w jab x j 1 b costs 0 In resulting problem obvious partition original xi variables new w jab variables Since 0 cid2 α β 0 1valued VCSP instance equivalent α βvalued instance obtained applying following operation cost functions multiply β α add α Now given instance binary MAXCSP bipartite graph form α βvalued binary VCSP add constant cost function ci jx y γ x y pair variables changing problem This adds constant cost solutions In resulting VCSP triangles costs γ γ γ α α γ β β γ α β γ Thus satisfy JWP α β γ This polynomial reduction binary MAXCSP bipartite graphs demonstrates NPhardness case α β We consider case α β γ We demonstrate NPhardness set VCSP instances triangle triple costs satisﬁes JWP α β A VCSP remains invariant addition constant ﬁnite cost scaling nonzero ﬁnite constant factor Thus α β VCSP triangle triple costs satisﬁes JWP α β equivalent VCSP triangle triple costs satisﬁes JWP 0 1 We demonstrate NPhardness VCSPs following polynomial time reduction MAX2SAT Let I instance MAX2SAT variables v 1 n let mi number clauses variable v occurs We construct VCSP instance P containing mi copies v j 0 mi 1 j 0 mi 1 joined cycle 0 valued variable v For 1 n mi variables v crisp constraints coding inequalities v addition superscript modulo mi Since crisp vmi 1 constraints form cycle equivalent v 0 It easy verify cycle crisp constraints satisﬁes JWP triangle binary costs contains inﬁnite costs j1 cid2 v The 2SAT clauses I replaced corresponding 0 1valued constraints P jth occurrence v I P By construction triangle variables P involves 0 1valued constraint replaced v corresponding clause I It follows triple costs 0 1 1 occur triangle P Since inﬁnite cost occur nonintersecting cycles crisp constraints triples costs 0 1 occur triangle P Thus triangle P triple costs satisﬁes JWP 0 1 Since P equivalent I reduction clearly polynomial completes proof NPhardness j j j j It remains consider case α β γ Analogously case α β γ suﬃces polynomial time reduction MAX2SAT set VCSP instances costs triangle satisfy JWP 0 Let I instance MAX2SAT We build VCSP instance P I adding new variables xi j yi j clause l1 l2 I l1 l2 literals The clause l1 l2 I replaced P 0 1valued constraint variables xi j yi j encoding clause xi j yi j crisp 0 valued constraints encoding clauses l1 xi j yi j l2 It easy verify P equivalent I costs triangle P satisfy JWP 0 This polynomial reduction MAX2SAT completes proof NPhardness ﬁnal case α β γ cid2 8 Nonoverlapping convexity property Having studied jointwinner property triangles binary costs natural question generalised variables By analysing algorithm Zfree binary VCSPs satisfying jointwinner property Section 6 extend class problems solvable polynomial time approach This generalisation longer restricted binary VCSPs In VCSP constraints arbitrary arity objective function minimised sum cost functions arguments subsets arbitrary size variables v 1 vn For notational convenience section interpret solution x assignment variables v 1 vn set variablevalue assignments v xi 1 n For following deﬁnition require notion nondecreasing derivative discrete function The derivative function f 0 s Q nondecreasing f m 2 f m 1 cid3 f m 1 f m m 0 s 2 subtraction extended Q deﬁning α α Q Two sets S T said nonoverlapping disjoint subset S T S T T S Deﬁnition 20 Let P VCSP instance Let C1 Cr sets variablevalue assignments P j Ci C j nonoverlapping Instance P satisﬁes nonoverlapping convexity property objective function P written f 1Nx C1 frNx Cr f 0 si Q 1 r nondecreasing function nondecreasing derivative Nx Ci x Ci number variablevalue assignments solution x lie Ci si number distinct variables occurring set variablevalue assignments Ci Observe deﬁnition allows unary valued constraints variablevalue assignment v j add singleton Ci v j necessarily disjoint subset set Ck furthermore corresponding function f 0 1 Q trivially nondecreasing nondecreasing derivative MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1567 Remark 21 To express binary Zfree VCSP satisfying JWP general form given Deﬁnition 20 add set variablevalue assignments Ci corresponding assignmentclique Cα assignment graph f im cid5 cid6 α β m cid3 0 Cβ father assignmentclique Cα It easy check f nondecreasing m 2 nondecreasing derivative To solve VCSP instance satisfying nonoverlapping convexity property build network described proof Theorem 22 weight mth arc leaving Ci node cid6 cid6 f im f im 1 Since α β m 1α β means case binary VCSP satisfying α β JWP build network described Section 6 cid5 m1 2 cid5 m 2 Note case avoid counting binary costs functions f proportional marginal costs α β When solving VCSP instance satisfying nonoverlapping convexity property functions f given input management marginal costs required Theorem 22 Any VCSP instance P satisfying nonoverlapping convexity property solved polynomial time Proof We consider set variablevalue assignments Ci assignmentclique Ci subset vertices assignment graph P need add edges vertices cid7v j acid8 cid7vk bcid8 Ci representing assignments distinct variables j cid9 k cid12 We build network described Section 6 adjust weights edges assignment cliques Ci Recall si represents number distinct variables Ci Without loss generality assume cid12 cid12 f i0 0 If case replace f f m f im f i0 produce equivalent problem f nondecreasing nondecreasing derivative Let cid6im f im f im 1 f m 1 si Since f 1 r nondecreasing functions nondecreasing derivative cid6i nonnegative k 1 si Ci unique father assignmentclique The nondecreasing In network si arcs ek weight cost arc ek cid6ik cid12 0 0 f Similarly construction Section 6 arcs weight omitted The argument calculation Section 6 proves algorithm correct In particular need given feasible assignment x ﬁnite cost VCSP instance P satisﬁes nonoverlapping convexity property corresponding minimum GP cost f 1Nx C1 frNx Cr The construction f Section 6 gives cost feasible ﬂow f ﬂow f following cost cid2 NCi cid2 m1 cid2 cid9 cid6im cid5 cid6 f i2 f i1 cid5 f NCi 1 cid6cid6cid10 f i1 cid5 cid6 NCi cid6 NCi cid5 f f cid5 cid2 cid5 cid5 f NCi 1 cid6 cid5 f NCi 2 cid6cid6 corresponds precisely cost f 1Nx C1 frNx Cr assignment x To ﬂow minimum cost ﬂows corresponding assignment x observe choices concern arcs k 1 v ek Since weights cid6ik arcs nondecreasing ﬂow value v takes ﬁrst v arcs ek necessarily minimum cost cid2 Example 23 An example nonoverlapping convexity property set nonbinary arbitrary ﬁxed maxi mum arity MAXCSP instances overlapping nogoods A CSP traditionally deﬁned set constraints given form scope relation containing set possible assignments variables scope constraint Another way specifying CSP instance listing nogoods nogood set variablevalue assignments simultaneously The nogoods easily obtained complement constraint relation A MAXCSP instance overlapping nogoods nogoods Ni N j corresponding CSP instance Ni N j Ni N j N j Ni To MAXCSP instance I nonoverlapping nogoods N1 Nr satisﬁes nonoverlapping convexity property 1 r deﬁne f f iNi 1 f im 0 m Ni Clearly f nondecreasing function nondecreasing derivative MAXCSP instance I equivalent VCSP instance objective function f 1x N1 frx Nr Example 24 By entirely similar argument follows example nonoverlapping convexity property set nonbinary CSP instances nonoverlapping nogoods N1 Nr It suﬃces deﬁne f f iNi f im 0 m Ni 1 r This class extended include CSP instances set nogoods Sk1 N1 Skr Nr Ski Ni set cardinalityki subsets Ni sets variablevalue assignments Ni 1 r pairwise nonoverlapping Each ki integer 1 Ni To express CSP instance VCSP instance satisfying nonoverlapping convexity property suﬃces deﬁne f f im m cid3 ki f im 0 m ki 1 r 1568 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 Clearly f nondecreasing function nondecreasing derivative CSP instance I equivalent VCSP instance objective function f 1x N1 frx Nr Example 25 An example optimisation problem satisfying nonoverlapping convexity property following oﬃce assignment problem Each n staff members represented n variables assigned oﬃce There m oﬃces At u j people assigned oﬃce j Unary cost functions express personal preferences staff member oﬃce There nonoverlapping groups people G 1 G g prefer assign different oﬃces married couples example For oﬃce set variablevalue assignments C j consisting possible assignments value j variable For group G oﬃce j set assignments Ci j C j members group oﬃce j Clearly sets assignments C j j 1 m Ci j 1 g j 1 m nonoverlapping The function f j imposes capacity constraint oﬃce j given f jk k u j f jk 0 nondecreasing nondecreasing derivative A cost function f j f jt t 1 nondecreasing nondecreasing derivative code fact prefer staff members group G share oﬃce Example 26 A commonly occurring problem academia allocation courses teachers subject timetabling constraints personal preferences teachers criterion avoid allocating hours teachers In simple version problem weekly timetable divided nonintersecting timeslots course involves giving lecture week onehour timeslots allocated course The courses numbered 1 n correspond variables problem assigned m teachers For teacher j 1 m let C j represent assignments teacher j course For timeslot s 1 t teacher j 1 m let C js represent set assignments teacher j courses allocated time slot s Clearly sets assignments C j j 1 m C js j 1 m s 1 t nonoverlapping For teacher j function f j corresponding set assignments C j given f jk max0 p jk u j u j teacher j earns hour overtime represents total cost overtime payments teacher j The function f js codes incompatibility allocating teacher j different courses timeslot s given f sj0 f sj1 0 f jsk k 1 The functions f j f j nondecreasing nondecreasing derivative Thus simple courseallocation problem expressed VCSP nonoverlapping convexity property maximum number courses teacher j paid overtime p j 9 Conclusions We studied hybrid tractability valued CSPs In particular studied tractability sets instances deﬁned properties subproblems size k For k 2 properties deﬁne language classes We shown paper possible deﬁne nontrivial tractable hybrid class property subproblems size k 3 We studied tractable class VCSPs deﬁned property known jointwinner property JWP necessary ﬁrst step general theory tractability optimisation problems eventually cover structural language hybrid reasons tractability Moreover presented novel hybrid tractable classes VCSPs The JWP interesting right proper extension known tractable classes VCSPs sisting arbitrary unary constraints nonintersecting SoftAllDiff constraints arbitrary arity machine scheduling problem We demonstrated 3maximality tractable class deﬁned JWP However existence larger tractable class subsuming JWP deﬁned rule kvariable subproblems k 3 interesting open ques tion Indeed introduced generalisation JWP solved similar algorithm allows soft constraints arbitrary arity The interesting open question brought work tractable hybrid classes deﬁned properties kvariable subproblems k cid3 3 References 1 A Bulatov A Krokhin P Jeavons Classifying complexity constraints ﬁnite algebras SIAM Journal Computing 34 3 2005 720742 doi101137S0097539700376676 2 T Feder M Vardi The computational structure monotone monadic SNP constraint satisfaction A study datalog group theory SIAM Journal Computing 28 1 1998 57104 doi101137S0097539794266766 3 R Dechter J Pearl Networkbased heuristics constraint satisfaction problems Artiﬁcial Intelligence 34 1 1988 138 doi1010160004 370287900026 4 P Jeavons On algebraic structure combinatorial problems Theoretical Computer Science 200 12 1998 185204 doi101016S0304 397597002302 5 V Dalmau PG Kolaitis MY Vardi Constraint satisfaction bounded treewidth ﬁnitevariable logics Proceedings 8th International Conference Principles Practice Constraint Programming CP02 Lecture Notes Computer Science vol 2470 Springer 2002 pp 310 326 MC Cooper S Živný Artiﬁcial Intelligence 175 2011 15551569 1569 6 M Grohe The complexity homomorphism constraint satisfaction problems seen Journal ACM 54 1 2007 124 doi10114512060351206036 7 R Dechter Constraint Processing Morgan Kaufmann 2003 8 DA Cohen A new class binary CSPs arcconstistency decision procedure Proceedings 9th International Conference Principles Practice Constraint Programming CP03 Lecture Notes Computer Science vol 2833 Springer 2003 pp 807811 9 D Cohen P Jeavons The complexity constraint languages F Rossi P van Beek T Walshi Eds The Handbook Constraint Programming Elsevier 2006 10 TKS Kumar A framework hybrid tractability results boolean weighted constraint satisfaction problems Proceedings 14th International Conference Principles Practice Constraint Programming CP08 Lecture Notes Computer Science vol 5202 Springer 2008 pp 282 297 11 MC Cooper PG Jeavons AZ Salamon Generalizing constraint satisfaction trees Hybrid tractability variable elimination Artiﬁcial Intelli gence 174 910 2010 570584 doi101016jartint201003002 12 T Schiex H Fargier G Verfaillie Valued constraint satisfaction problems Hard easy problems Proceedings 14th International Joint Conference Artiﬁcial Intelligence IJCAI95 1995 Available httpdliiiitacinijcaiIJCAI95VOL1pdf083pdf 13 S Bistarelli U Montanari F Rossi Semiringbased constraint satisfaction optimisation Journal ACM 44 2 1997 201236 doi101145256303256306 14 DA Cohen MC Cooper PG Jeavons AA Krokhin The complexity soft constraint satisfaction Artiﬁcial Intelligence 170 11 2006 9831016 doi101016jartint200604002 15 DA Cohen MC Cooper PG Jeavons Generalising submodularity Horn clauses Tractable optimization problems deﬁned tournament pair multimorphisms Theoretical Computer Science 401 13 2008 3651 doi101016jtcs200803015 16 V Kolmogorov S Živný Generalising tractable VCSPs deﬁned symmetric tournament pair multimorphisms Tech rep arXiv10083104 August 2010 Available httparxivorgabs10083104 17 SL Lauritzen Graphical Models Oxford University Press 1996 18 MJ Wainwright MI Jordan Graphical models exponential families variational inference Foundations Trends Machine Learning 1 12 2008 1305 doi1015612200000001 19 P Jégou Decomposition domains based microstructure ﬁnite constraintsatisfaction problems Proceedings 11th National Conference Artiﬁcial Intelligence AAAI93 1993 pp 731736 Available httpwwwaaaiorgPapersAAAI1993AAAI93109pdf 20 AZ Salamon PG Jeavons Perfect constraints tractable Proceedings 14th International Conference Principles Practice Constraint Programming CP08 Lecture Notes Computer Science vol 5202 Springer 2008 pp 524528 21 R Takhanov A dichotomy theorem general minimum cost homomorphism problem Proceedings 27th International Symposium Theoretical Aspects Computer Science STACS10 2010 pp 657668 22 V Kolmogorov S Živný The complexity conservative valued CSPs 2011 submitted publication 23 M Grötschel L Lovasz A Schrijver The ellipsoid method consequences combinatorial optimization Combinatorica 1 2 1981 169198 doi101007BF02579273 24 M Chudnovsky G Cornuéjols X Liu PD Seymour K Vuškovi c Recognizing Berge graphs Combinatorica 25 2 2005 143186 doi101007s00493 00500128 25 VV Lozin M Milaniˇc A polynomial algorithm ﬁnd independent set maximum weight forkfree graph Journal Discrete Algorithms 6 4 2008 595604 doi101016jjda200804001 26 A Brandstädt VV Lozin R Mosca Independent sets maximum weight applefree graphs SIAM Journal Discrete Mathematics 24 1 2010 239254 doi101137090750822 27 T Jebara MAP Estimation Message passing perfect graphs Proceedings TwentyFifth International Conference Uncertainty Artiﬁcial Intelligence UAI 2009 pp 258267 Available httpwwwcsmcgillcauai2009papersUAI2009_0098_c9e0cfea5b7aad26ceef02e3cef 44909pdf 28 M Garey D Johnson Computers Intractability A Guide Theory NPCompleteness WH Freeman 1979 29 C Papadimitriou Computational Complexity AddisonWesley 1994 30 JC Régin A ﬁltering algorithm constraints difference CSPs Proceedings 12th National Conference AI AAAI94 vol 1 1994 pp 362367 Available httpwwwaaaiorgPapersAAAI1994AAAI94055pdf 31 T Petit JC Régin C Bessière Speciﬁc ﬁltering algorithms overconstrained problems Principles Practice Constraint Programming CP01 Lecture Notes Computer Science vol 2239 Springer 2001 pp 451463 32 WJ van Hoeve G Pesant LM Rousseau On global warming Flowbased soft global constraints Journal Heuristics 12 45 2006 347373 doi101007s1073200665504 33 JP Métivier P Boizumault S Loudni All different Softening AllDifferent weighted CSPs Proceedings 19th IEEE International Conference Tools Artiﬁcial Intelligence ICTAI07 IEEE Computer Society 2007 pp 223230 34 Y Richter A Freund Y Naveh Generalizing AllDifferent The SomeDifferent constraint Proceedings 12th International Conference Princi ples Practice Constraint Programming CP06 2006 pp 468483 35 C Jefferson S Kadioglu KE Petrie M Sellmann S Živný Samerelation constraints Proceedings 15th International Conference Principles Practice Constraint Programming CP09 Lecture Notes Computer Science vol 5732 Springer 2009 pp 470485 36 W Horn Minimizing average ﬂow time parallel machines Operations Research 21 3 1973 846847 Available httpwwwjstororg stable169392 37 JL Bruno EG Coffman Jr R Sethi Scheduling independent tasks reduce mean ﬁnishing time Communications ACM 17 7 1974 382387 doi101145361011361064 38 JC Régin Costbased arc consistency global cardinality constraints Constraints 7 34 2002 387405 doi101023A1020506526052 39 JHM Lee KL Leung Towards eﬃcient consistency enforcement global constraints weighted constraint satisfaction Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI09 2009 pp 559565 Available httpijcaiorgpapers09PapersIJCAI09099pdf 40 R Ahuja T Magnanti J Orlin Network Flows Theory Algorithms Applications Prentice HallPearson 2005 41 A Schrijver Combinatorial Optimization Polyhedra Eﬃciency Algorithms Combinatorics vol 24 Springer 2003 42 T Schaefer The complexity satisﬁability problems Proceedings 10th Annual ACM Symposium Theory Computing STOC78 1978 pp 216226