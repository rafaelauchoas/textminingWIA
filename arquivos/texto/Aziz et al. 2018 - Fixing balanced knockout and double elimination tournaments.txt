Artiﬁcial Intelligence 262 2018 114 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Fixing balanced knockout double elimination tournaments Haris Aziz Paul Stursberg d Toby Walsh Data61 CSIRO UNSW Sydney Australia b Carnegie Mellon University USA c IBM Research USA d Technische Universität München Germany Serge Gaspers Simon Mackenzie b Nicholas Mattei c r t c l e n f o b s t r c t Article history Received 9 February 2017 Received revised form 24 April 2018 Accepted 19 May 2018 Available online 25 May 2018 Keywords Knockout tournaments Seedings tournament Computational complexity Balanced knockout tournaments common formats sports competi tions elections decisionmaking We consider computational problem ﬁnding optimal draw particular player tournament The problem generated considerable research AI recent years We prove checking exists draw player wins NPcomplete settling outstanding open problem Our main result number interesting implications related counting approximation problems We present memoization based algorithm problem faster previous approaches Moreover highlight natural cases solved polynomial time All results hold general problem counting number draws given player winner Finally main NPcompleteness result extends variant balanced knockout tournaments called doubleelimination tournaments 2018 Elsevier BV All rights reserved 1 Introduction Balanced knockout tournaments widelyused formats sports competitions 71013 A prominent example Wimbledon Mens Singles tennis tournament 128 players enter tournament player wins seven consecutive matches right ﬁrst round ﬁnal wins tournament The format certain elimination style election decision making schemes received considerable ﬁeld artiﬁcial intelligence 12161723343637271 social sciences 521222533 Knockout tournaments balanced particular considered fair 20 allow large number matches played parallel Consider setting set players N n use notation n 1 n n 2c integer c1 Given N ordered balanced knockout tournament TN π deﬁned balanced binary tree n This revised expanded version Aziz et al 3 additional proof details new results tournaments kings double elimination tournaments Corresponding author NMatteiibmcom N Mattei paulstursbergmatumde P Stursberg tobywalshdata61csiroau T Walsh 1 The setting general cover case players byes ﬁrst round In case consider dummy player loses player gets bye Email addresses harisazizunsweduau H Aziz sergegaspersdata61csiroau S Gaspers simonmandrewcmuedu S Mackenzie httpsdoiorg101016jartint201805002 00043702 2018 Elsevier BV All rights reserved 2 H Aziz et al Artiﬁcial Intelligence 262 2018 114 leaf nodes seeding π speciﬁes labeling leaf nodes respect N All ordered balanced knockout tournaments isomorphic respect labeling leaf nodes said draw They represented single unordered balanced knockout tournament BKT TN σ σ denotes draw The set draws denoted cid4 Whereas total number seedings n number draws n 2n1 pairwise matchups leaf nodes adjacent elements seeding swapped grows rapidly For tournament like Wimbledon n 128 number distinct draws 22665 10177 This signiﬁcantly number atoms universe googol A BKT TN σ conducted following fashion Players correspond sibling leaf nodes play match The winner match proceeds tree round The winner TN σ player reaches root node We given pairwise comparison matrix P P j 0 1 denotes probability player beating player j pairwise elimination match 0 P j 1 P ji 1 We P deterministic P j 0 1 players j N In case player beats player j P j 1 Given N P draw σ player N certain probability wpi N P σ winner TN σ This probability computed time O n2 recursive formulation 36 We denote mwpi N P maxσ cid4wpi N P σ maximum possible winning probability TN σ taken draws σ cid4 We deﬁne Probabilistic Tournament Fixing Problem PTFP probability player beating player known goal ﬁnd draw maximizes probability certain player winning BKT Probabilistic Tournament Fixing Problem PTFP Instance Player set N pairwise comparison matrix P distinguished player Question Does exist draw σ player set N probability N target probability q 0 1 winning TN σ q PTFP proposed Vu et al 36 studied numerous papers 2931 It wellmotivated problem sports analytics 28 PTFP shown NPhard restrictions including case entries P restricted 0 1 2 1 36 case matrix P deterministic certain matches allowed 34 Nevertheless computational complexity particularly natural interesting special case Tournament Fixing Problem TFP remained major open question In TFP matrix P deterministic matches allowed The winner match deterministically known question exists draw given player wins corresponding BKT Tournament Fixing Problem TFP Instance Player set N deterministic pairwise comparison matrix P distinguished player winner TN σ Question Does exist draw σ player set N N TFP equivalent checking exists seeding π winner TN π We note TFP special case problem deﬁned Vassilevska Williams 34 additional constraints certain matches disallowed TFP special case TFP problem counting number draws given player winner This count compute probability player winning draw chosen uniformly random It interpreted relative strength player Contributions We ﬁrst settle computational complexity TFP showing NPcomplete The question explicitly stated open problem number times 121935262931343637 As corollary P NP exists polynomialtime approximation algorithm computing maximal winning probability player This inapproximability result provides additional motivation line work heuristic algorithms proposed PTFP 37 Another corollary exists fully polynomial time randomized approximation scheme FPRAS counting number draws player winner In view intractability results identify natural cases TFP TFP solved polynomial time In ﬁrst case players divided constant number player types This setting appeals scenario players divided groups based similar intrinsic ability In second case linear ordering ability players constant number exceptions player lower ability beats player higher ability2 Finally provide exact memoizationbased algorithm solve TFP faster known exact approaches solve problem runs time O 28285n uses space O 17548n If polynomial space available running time 4non range possible timespace tradeoffs Finally consider doubleelimination tournaments variant knockout tournaments losers second chance win overall tournament We TFP NPcomplete problem answering open problem 32 2 The condition natural competitions clearcut ranking players according skills pairs players weaker player beat stronger player For example 15012014 Nikolay Davydenko tennis player mens 64 winning headtohead record Rafael Nadal Russell van Beek 26 Mattei Walsh 24 provide extended discussion empirical data phenomena H Aziz et al Artiﬁcial Intelligence 262 2018 114 3 Related work After work Vu et al 36 PTFP TFP studied number research papers Vassilevska Williams 34 identiﬁed suﬃcient conditions player winner BKT king beats half players In followup paper Stanton Vassilevska Williams 31 focused weak players possibly win BKT The authors paper proved Theorem 1 conference paper 3 provided additional tractable cases exponentialtime algorithm Subsequently Kim Vassilevska Williams 17 showed TFP remains NPhard distinguished player king beats n4 players They prove TFP remains NPhard 3kings beat n2 players These structural results kings enclosed general theorem Kim et al 16 Furthermore Kim Vassilevska Williams 17 present algorithm improves exponential running time Aziz et al 3 albeit expense requiring exponential space Stanton Vassilevska Williams 2930 identiﬁed conditions probabilistic model tournament organizer ﬁx tournament high probability In Vu Shoham 38 problem designing fair draws considered Lang et al 20 Lang et al 19 examined winner determination voting trees need balanced In recent work Chatterjee et al 6 examine robustness winning probability respect small errors pairwise winning probabilities TFP considered problem checking player possible winner deterministic BKT Com puting possible winners voting rules information preferences complete studied extensively 240 Another related problem checking sports team win roundrobin competition matches completed 1115 2 TFP NPcomplete In section settle complexity TFP For convenience represent pairwise comparison matrix P directed graph edge j exists iff beats j Theorem 1 TFP NPcomplete Proof We reduce NPhard variant 3SAT problem literal appears twice 4 Given 3SAT instance F X C X x1 x X set variables C set clauses build instance TFP distinguished player win tournament draw F satisﬁable The TFP instance consists set players N 1 n n smallest power 2 greater equal 32 X The resulting knockout tournament consist R logn cid6log32 Xcid7 5 rounds ﬁrst lowest rounds store gadgets later rounds enforce certain outcomes gadgets In following use notation A B union sets A B disjoint A B We decompose set players N follows N M S G X G CG G F 1 players G X choice gadgets model variable assignment players G CG clausegarbage gadgets model behavior clauses players G F ﬁller gadgets balance BKT Players S special players ensure connection choice clause gadgets 16 gadgets associated players set M m1 m2 mk The player m1 distinguished player We m1 win BKT players M proceed ﬁfth round The structure gadgets sure happen 3SAT instance F satisﬁable There total k n More precisely use X choice gadgets numbered 1 X X clausegarbage gadgets model clauses numbered X 1 2 X k 2 X ﬁller gadgets numbered 2 X 1 k As literal appear twice note number clauses bounded C 4 X 2 X X clausegarbage gadgets provide space model clauses C 3 Using numbering partition sets follows G X X cid2 j1 G j G CG 2 X cid2 j X1 G j G F k cid2 G j j2 X1 2 Note sets G j 10 13 15 elements depending subset G X G CG G F respectively Set M spawning process The relation elements set winners M recursively deﬁned linear ordering players follows We start player m1 At iteration player spawns new player placed directly right In pairwise comparison graph player beats players left construction spawned This recursive construction repeated total k players present We denote Mcid5 4 H Aziz et al Artiﬁcial Intelligence 262 2018 114 Fig 1 The spawning process case k 8 lower node shows corresponding value l j By draw shown M3 leftmost player win BKT Fig 2 Global structure case k 8 All arrows shown ﬁgure run downwards horizontal arcs run right left Vertices grouped component relation vertices outside component speciﬁed The relation components connected starred edge exceptions discussed individual gadgets Every element mi beats exactly elements G G contain elements beat elements S p set 2cid5 players M present cid5th iteration spawning process Furthermore j k let cid5 j smallest cid5 m j Mcid5 Fig 1 Lemma 1 There draw σ m1 wins BKT T M σ Proof Seeding players M left right according spawning process makes m1 win tournament Fig 1 Whenever players meet left player match spawned right player left player wins As leftmost player m1 wins tournament cid2 We later way m1 win tournament In words m1 win tournament players M reach ﬁfth round simultaneously Global structure We sets 1 2 relate In general true players S beat players players G X G CG G F beat players M There exceptions rule detailed In places use rightleftrule elements sets higher index beat elements sets lower index For instance j j cid12 k j j cid12 elements G j cid12 G jcid12 beats cid12 j S x j S x j The set S partitioned subsets S j corresponding variable SAT instance j X 3 We deﬁne set particles choice S x j The members S p follow rightleftrule j X follow rightleftrule beaten members S j beats members S p S j The s S j S x j clausegarbage gadgets S p cid3 j j For j X s structure visualized Fig 2 elements S x j S x j beat elements S x j cid12 The players s cid12 S x j j XS x j S x j j j cid12 The relation members M given spawning process Fig 1 The exceptions general rule S beating players G X G CG G F beating players M listed detailed description individual gadgets Some sets G contain elements beat elements S p Every element mi beats exactly elements G H Aziz et al Artiﬁcial Intelligence 262 2018 114 5 Fig 3 Pairwise comparisons jth choice gadget All arrows shown ﬁgure run downwards horizontal arcs run right left Vertices grouped component relation vertices outside component Lemma 2 For m1 win tournament players m j M reach ﬁfth round Proof We use induction set M The induction proceed left right according order speciﬁed description spawning process First recall cid5 j denotes smallest cid5 m j present cid5th iteration spawning process Further note j k player m j beats exactly R 4 cid5 j log k cid5 j players M right The induction hypothesis follows In order m1 win tournament following hold j k If m j spawned player m j m j needs play m j round R 1 cid5 j j j For base case consider m1 Player m1 spawned player We player m j M induction hypothesis holds provided holds players m jcid12 M j induction hypothesis holds cid12 j Denote m j player spawned m j note j cid12 j First note m j beats players m jcid12 j spawned However induction hypothesis play lose player spawned play m j lose Thus players m j allowed beat players G j players mr He beats exactly players G j R 4 cid5 j including m j M right By induction M r j hypothesis m j needs reach round R 1 cid5 j play players including m j This proves m j play player spawned To happen round R 1 cid5 j note left m j R 4 cid5 j players 4 Thus m j face m j spawned m j Denote m j round 5 6 R cid5 j players need play m j rounds proceed round R 1 cid5 j note R 1 cid5 j m j R4cid5 j m j 2 1 The original claim follows induction hypothesis cid5 j log2k log2 n 16 log2n 4 R 4 R 1 cid5 j R 1 R 4 5 cid2 We design gadgets These allow conclude players M reach ﬁfth round 3SAT instance F satisﬁable Note choice gadgets consist 18 players m j G j S j clausegarbage gadgets consist 14 players m j G j ﬁller gadgets consist 16 players m j G j In ﬁrst rounds BKT players choice gadgets compete subtournament players clausegarbage gadgets The exact way possible making sure m1 wins tournament encode 3SAT instance Choice gadget For j X jth choice gadget consists player m j elements G j S j Note elements S j appear clausegarbage gadgets The pairwise comparison graph elements ﬁxed j shown Fig 3 The choice gadget structured way possible m j win subtournament composed elements gadget elements S x j S x j illustrated Fig 6 We way m j reach ﬁfth round tournament won m1 Clausegarbage gadget We internal structure clausegarbage gadgets For j X 1 X 2 2 X jth gadget consists m j 13 elements G j denoted cg The pairwise comparison 6 H Aziz et al Artiﬁcial Intelligence 262 2018 114 Fig 4 Pairwise comparison graph clausegarbage gadget All arrows shown ﬁgure run downwards horizontal arcs run right left Fig 5 Pairwise comparison graph ﬁller gadget All arrows shown ﬁgure run downwards horizontal arcs run right left graph players shown Fig 4 For clause ci C players denoted cg associated clause ci remaining players cg garbage players All players shown ﬁgure beaten players S following exceptions garbage players beat players S p ii players associated clause ci beat players set S x j S x j x j x j occurs clause ci respectively The clause gadget structured way possible m j win subtournament composed elements gadget addition compatible element S p cgplayers included We want m1 win tournament way m j reach ﬁfth round Filler gadget Finally j 2 X 1 2 X 2 k jth ﬁller gadget consists m j 15 players set G j The pairwise comparison graph relating shown Fig 5 structure players M We note j k player m j beats exactly players outside set M This allows prove following lemma Lemma 3 For j k following hold If players M reach ﬁfth round 16player subtournament taking m j ﬁfth round consists exactly removed jth gadget choice gadget m j G j b jth gadget clausegarbage gadget m j G j cg players G j additional element S p S j elements S x j S x j s s j j beat c jth gadget ﬁller gadget m j G j ii If 16player subtournament ﬁrst rounds m j placed consists exactly ia ib ic respective type jth gadget draw subtournament exists m j reaches ﬁfth round Proof We prove lemma induction j Assume statement holds j takes care case j 1 assume Note induction players G j seeded ith subtournament longer available jth subtournament Also player M seeded subtournament m j players M reach ﬁfth round In analysis consider positions subtournament We player longer available order m j advance need placed positions considered We ﬁrst consider case jth gadget choice gadget In order proceed ﬁfth round player m j matched players G j beat In Fig 3 players d j c j x j x j Of players d j beats player available Therefore d j proceed second round face m j ﬁrst round It longer available In rounds m j matched c j x j x j Of c j beats player available e j proceed second round By argument m j matched c j second round c j e j longer available consideration later positions For fourth round match m j ﬁrst x j x j way players capable reaching fourth round Since x j x j beat exactly available players u j x j x j player matched m j fourth round beat u j This match happen ﬁrst round u j beats available players No matter match m j x j x j ﬁrst x j beat a1 j Depending j whilst x j beat b1 j b2 j a2 H Aziz et al Artiﬁcial Intelligence 262 2018 114 7 Fig 6 The subtournament choice gadget j In case x j true selected j a2 j beat members S x j This means select a1 j lose second round b1 j b2 option chose a1 ﬁrst j beat members S x j b1 second round vice versa Note players available a1 b2 j reach second round ﬁrst secondround matches players S x j members S x j lose a1 j a2 j a2 j ﬁrst second round On hand a1 j ﬁrst second round play member S x j removed subtournament The holds b1 j b2 j S x j respectively This situation shown Fig 6 This proves ii easily veriﬁed observes players S j j second round matched s j player S j a2 j a2 p p j j Now let consider case jth gadget clause gadget argument similar Again player m j matched players G j beat In Fig 4 players j b j d j m Of players j beats player available Therefore j proceed second round face m j ﬁrst round This makes j unavailable positions In rounds m j matched cid12 b j d j m j Of b j beats player available c j proceed second round The argument forces m j matched b j second round removing b j c j cid12 availability Player m j beats d j m j available players Player d j beats players m j beat round Player d j beats e j cg player Player e j beats available players d j beat ﬁrst round This makes e j unavailable The cg player beats compatible players S p second round available Player m j left player beat cid12 ﬁfth round m j reach fourth round structured exactly way described Therefore m j ﬁfth round add subtournament consisting m j G j compatible beatable player S p cg player proves ii cid12 j needs reach fourth round The subtournament enabling m cid12 j Player m cid12 j The ﬁller gadget built spawning process If jth gadget ﬁller gadget guarantees m j beats players beats gadget m j needs beat second round player longer available The spawning process guarantees second player beats available player gadget second round m j beat second round We continue argument ﬁfth round m j ﬁfth round players G j placed subtournament proves ii cid2 Note light Lemma 2 follows induction Lemma 3 m1 win tournament composition 16player subtournaments covering ﬁrst rounds exactly prescribed We ﬁnally prove following lemma Lemma 4 Let F X C 3SAT instance literal appears twice There exists set players N pairwise comparison matrix P distinguished player m1 N F satisﬁable ﬁnd draw σ m1 wins tournament TN σ Proof Let N m1 P speciﬁed First note Lemma 1 Lemma 2 m1 win tournament players set M reach ﬁfth round This possible player m j M win 16player subtournament consists exactly players stated Lemma 3 We draw player m j M wins 16player subtournament exactly players stated Lemma 3 exists 3SAT instance satisﬁable Let formula F satisﬁed truth assignment A We construct BKT N m1 wins For j S j exception players jth gadget choice gadget place players m j G j S x j Ax j true S x j Ax j false subtournament ﬁrst rounds These exactly 16 players Lemma 3ii choose draw way m j wins subtournament Note choice gadgets use players S players set S x j S x j x j x j literal evaluates true In words literal evaluates true players remain beaten player associated clause literal players appear 8 H Aziz et al Artiﬁcial Intelligence 262 2018 114 Fig 7 Pairwise comparison members set N Lemma 5 For clausegarbage gadgets use Lemma 3b need cg player additional player beats If cg associated clause ci C pick literals ci evaluates true x j assign players S x j mentioned cg player Note players required literal literal appears twice To garbage players assign arbitrary remaining player set S Note composing subtournaments choice gadgets 2 X players set S left As 2 X cg players assign player S For j jth gadget clausegarbage gadget place players m j G j subtournament ﬁrst rounds players assigned cg players G j By Lemma 3ii choose draw m j wins subtournament For j jth gadget ﬁller gadget place players m j G j tournament Lemma 3ii ﬁnd draw m j wins Let draw given players M win 16player subtournament consisting exactly players stated Lemma 3 First note player s j placed jth choice gadget contradiction Lemma 3 player placed players M reach ﬁfth round The following truth assignment welldeﬁned Ax j true m j s subtournament includes players S j players S x j Ax j false m j s subtournament includes players S j players S x j We A satisﬁes clauses Let ci C clause cg player associated corresponding clause gadget Let j index gadget By assumption m j wins corresponding subtournament Lemma 3 implies contains player cg beats player set S x j S x j x j x j occurs clause Ci By deﬁnition A player subtournament corresponding literal evaluates true player m j s subtournament cid2 This concludes proof Theorem 1 cid2 The following Lemma required Theorem 6 We prove remains computationally hard decide particular player win BKT know player particularly strong player A player called king player b beat exists player c beats c c beats b Using lemma TFP remains NPhard restricted instances m1 king A related theorem previously proved Kim Vassilevska Williams 17 Theorem 1 The result 17 slightly general requires m1 particularly strong king directly beats 1 4 players Leaving additional requirement simpler argument require instance half size Lemma 5 Let k N N cid12 set players N cid12 2k distinguished player m1 N cid12 Let Z disjoint player set Z N cid12 z1 Z player Z Let P pairwise comparison matrix cid12 Z N N z1 beats z z Z z1 z beats p pair z p Z N m1 beats z1 Fig 7 Then draw σ N m1 wins tournament TN σ draw σ cid12 tournament TN cid12 z1 m1 cid12 σ cid12 cid12 N m1 wins ii Let P pairwise comparison matrix N There exists set players Z pairwise comparison matrix P N cid12 cid12 cid12 Z satisfying conditions P coincides P cid12 N cid12 H Aziz et al Artiﬁcial Intelligence 262 2018 114 9 Proof For prove directions separately m1 wins tournament TN Assume exists draw σ cid12 cid12 σ cid12 Construct σ way ﬁnal match winners subtournaments A B A players N seeded according σ cid12 B players Z seeded arbitrary way The subtournament B won z1 beats players compete B subtournament A won m1 Lemma 4 A exactly tournament TN σ cid12 In ﬁnal m1 wins z1 m1 wins tournament TN σ Assume draw σ cid12 cid12 σ cid12 Again let σ draw N ﬁnal match winners subtournaments A B assume wlog m1 seeded A We differentiate cases m1 wins tournament TN cid12 If z1 seeded A player Z z1 seeded B N cid12 Z players compete A Hence player z Z z1 win subtournament B m1 wins A beaten z ﬁnal ii If z1 seeded A players Z win tournament A m1 win iii If player Z seeded A assumption draw m1 win sub tournament A Hence draw σ m1 wins tournament TN σ m1 win tournament players N cid12 For ii Lemma 5 suitable instance easily constructed assumptions structure P restricted N cid12 cid2 Theorem 2 TFP NPcomplete distinguished player king Proof First note instance satisfying conditions Lemma 5 m1 king beating z1 turn beats player Let F X C 3SAT instance literal appears twice By Lemma 4 ﬁnd player set N distinguished player m1 F satisﬁable draw σ cid12 cid12 pairwise comparison matrix P m1 win T N cid12 σ By Lemma 5ii obtain suitable instance m1 king statement follows Lemma 5i cid2 21 Implications Theorem 1 Theorem 1 simultaneously implies number results literature particular Theorem 1 2 3 Vu et al 36 Theorem 1 Vassilevska Williams 34 It yields corollaries For PTFP α 1 algorithm called αapproximation algorithm maximum winning probability ﬁnd draw winning probability given player mwpi N P α Corollary 1 Unless P NP exists deterministic polynomialtime algorithm PTFP approximates maximum winning probability player given positive factor Proof The approximation algorithm check polynomial time maximum winning probability zero nonzero If algorithm deterministic solve TFP polynomial time cid2 It immediately follows Theorem 1 TFP NPhard We highlight randomization helpful TFP Let cid7 ﬁnite alphabet agree problem instances solutions A fully polynomial time randomized approximation scheme FPRAS function f cid7 Q algorithm takes input x cid7 4 number f x1 cid8 1 cid8 f x Moreover parameter cid8 Q0 returns probability 3 FPRAS runs time polynomial size x 1 cid8 RP complexity class consisting problems solved randomized polynomial time The statement follows Proposition 8 Welsh Merino 39 Theorem 1 Corollary 2 Unless NP RP FPRAS TFP Proof The statement follows Theorem 1 wellknown fact Proposition 8 39 f cid7 N deciding f nonzero NPhard FPRAS f NP RP cid2 Hence NP RP exist FPRAS computing probability player winning BKT draw chosen uniformly random 10 H Aziz et al Artiﬁcial Intelligence 262 2018 114 3 Tractable cases We ﬁrst examine natural case players divided player types outcome match determined type respective players In words given types j case players win players j way round This interesting case sports tournaments players similar quality type The result matches players type irrelevant care player type wins In variant TFPtypes objective count number draws player given type wins We ﬁrst adapt concept pairwise comparison matrix For player types j deﬁne P j 1 iplayer wins match j P j 0 Note deﬁnition chosen P ii 1 player types Theorem 3 TFPtypes polynomialtime solvable constant number player types Proof We use dynamic programming scheme All vectorial inequalities assume equal dimensions meant componentwise Let k number different player types We denote number players type ηi Let Nx η η1 ηk 0 η1 ηk 2x denote TFPi x η Nx number draws xround tournament involving η j players type j j k player type wins tournament We assume problems potentially players type distinguishable For ﬁxed x need considered This positive integers p q weak compositions p q parts distinct ways write sum q nonnegative integers evaluates p The number TFPi x η computed following recursion cid4 k2x1 k1 cid5 pq1 q1 pq1 q1 cid5 cid4 cid5 cid4 TFP j x 1 η ηcid12 3 cid8 cid7 TFPi x η cid6 ηcid12Nx1 ηcid12η TFPi x 1 ηcid12 cid6 jk P j 1 ηcid12 j η j The recursion considers possible opponents player type round x possibilities x 1round seedings subtournaments players type j need win order reach ﬁnal round The base cases given cid9 TFPi 0 η 1 ηi 1 j cid17 η j 0 0 4 k Eq 3 uses values TFP j y ηcid12 y x problem needs solved For cid4 k2x1 O nk Thus O lognn2k constant k solving problem requires O nk operations constant k holds k1 operations necessary compute TFPi logn n1 nk cid2 cid5 The second tractable case identify case players linearly ordered strength This common rule thumb guessing win tournament supported empirical results literature 26 Theorem 4 TFP polynomialtime solvable linear ordering strengths players constant number pairwise relations ﬂipped N Proof Let b number backwards arcs respect linear ordering We induction problem reduced TFPtypes 4b 3 player types For b 0 simply divide players set players beat 3 types N cid12 b To holds b backwards arcs select respectively By induction assume statement holds b arbitrary backwards arc u v reverse group players 4b 1 3 player types We partition players type new types u players beat u beaten u We v reverse arc originally Thus 4b 1 3 4 player types instance Since number player types constant theorem follows Theorem 3 cid2 beaten N N 4 An exponential time algorithm TFP TFP trivially solved time 2O n log n bruteforce enumeration possible draws In exponential time al gorithmics 9 aim design algorithms solving problem exactly worstcase running times outperforming bruteforce solution In section algorithm TFP running time O 28285n space O 17548n If H Aziz et al Artiﬁcial Intelligence 262 2018 114 11 Table 1 Running times space requirements algorithm Theorem 5 timespace tradeoffs y 2 3 4 log n Time T n O 28285n O 33636n O 36681n 4non Space Sn O 17548n O 14576n O 12634n polyn polynomial space available running time 4non range possible timespace tradeoffs After publication conference paper Kim Vassilevska Williams 17 improved running time O 2npolyn O 2npolyn space However algorithm works space available The algorithm based recur sion formula 3 memoization levels recursion We use polyn stand polynomial function n Theorem 5 For y 2 y log n algorithm solving TFP time T n polyn Sn polyn 2 yn2 y cid11 2 y 2 y 1 cid12 nn2 y cid10 y1 p0 n 2p 2n2p space Proof We start polynomial space algorithm The algorithm recursively evaluates formula 3 special case player type consists player We player corresponds player type ηi The evaluation Nx recursive calls solving topdown evaluate TFPi x η algorithm performs O Nx 2 ηcid12 Nx1 ηcid12 η subinstance TFPi x 1 ηcid12 subinstances TFP j x 1 η ηcid12 j n P j 1 η j ηcid12 1 The base cases proof Theorem 3 algorithm returns TFPi log n 1 1 2 evaluates 2p 2n2p 4non The running time T n algorithm polynomial factor n number For n players number recursive calls algorithm upper bounded Rn n 2n R n n j Rn cid10log n p0 recursive calls cid12 η x Using memoization avoid repeating calculations expense exponential space usage The algorithm uses table indexed players level player type vector We use memoization level x evaluating cid12 x algorithms ﬁrst checks table recursive evaluated TFP j x Only value computed computes result recursively stores table Then returns cid12 x use table computes result stored table To evaluate TFP j x recursively polynomial space algorithm cid12 η x At level log n evaluation At level log n 1 O n2n evaluations evaluated Therefore use memoization level log n y y varies 2 log n The number table entries memoization upper bounded n times number subsets size n2 y Using Stirlings approximation factorials binary representation integers 0 n O n log n bits 18 space usage algorithm upper bounded Sn polyn 2 yn2 y The running time y1 algorithm time recursion memoization polyn plus time p0 memoization upper bounded Sn n 2n4 O 20868n Sn O 17548n entries computed computation retrieves O n 2n4 table values Thus y 2 y log n obtain algorithm running time T n polyn space Sn polyn 2 yn2 y 2 y 2 y 1 2p 2n2p nn2 y nn2 y cid10 cid10 cid2 cid11 cid12 cid12 cid11 n y1 p0 n 2p 2n2p 2 y 2 y 1 Various time space requirements algorithm reported Table 1 Using rule thumb current computing architectures space requirements algorithm bottleneck exceed square root time requirements analyses y 2 y 3 currently relevant 5 Doubleelimination tournaments In doubleelimination tournaments brackets winners bracket competition proceeds exactly BKT losers bracket losers BKT mapped new knockout tournament After concurrently conclusion winners bracket losers bracket tournament run The champion losers bracket plays possibly champion winners bracket BKT winner deterministic setting winner ﬁnal match winner overall tournament Just like BKTs deﬁne TFP doubleelimination tournaments Stanton Vassilevska Williams 32 state complexity TFP doubleelimination tournaments open problem We problem NPcomplete Double elimination tournaments 814 present sports decades mathematically deﬁned Stanton Vassilevska Williams 32 In deﬁnition Stanton Vassilevska Williams 32 double elimination 12 H Aziz et al Artiﬁcial Intelligence 262 2018 114 Fig 8 Example winners bracket losers bracket left hand player wins round respective m z maximal subtournaments The champion losers bracket plays champion winners bracket ﬁnal match tournament deﬁned shape losers bracket link function maps losers BKT losers bracket This function maps matches BKT leaves losers bracket Stanton Vassilevska Williams 32 develop desiderata losers bracket evaluated including balance losers bracket balanced tournament roundfairness losers compete losers lost nearly round repeatavoidance link functions minimize possibility teams meeting winners losers bracket Consider 16 entrant example winners bracket implicit link function corresponding losers bracket illus trated Fig 8 Our winners bracket consists maximal subtournaments starting circled m1 node circled z1 node N Z following convention Lemma 5 The depicted losers bracket roundfair balanced according deﬁnitions given Stanton Vassilevska Williams 32 Imagine tournament graph players m1 m8 z1 z8 generated pairwise relation Lemma 5 additional constraint lower number elements Z defeat higher number elements Z Hence winners bracket left hand player leaf pairing advance illustrated Fig 8 To construct losers bracket use fair balanced bracket described Stanton Vassilevska Williams 32 cid12 We extend construction depicted Fig 8 BKTs number players Note use conceivable loser bracket setup link function particular following theorem holds double elimination tournaments balanced losers brackets roundfair link functions Theorem 6 The tournament ﬁxing problem NPcomplete double elimination tournaments regardless restrictions losers bracket setup link function cid12 cid12 cid12 cid12 corresponds Proof In Lemma 5 deﬁne conditions subtournaments equal size N TFP instance By Lemma 5 Z bracket z1 beats Z beats N exception m1 defeats z1 We m1 win double elimination tournament ﬁnd solution TFP instance deﬁned N Z N m1 win TN pairwise comparison matrix P Formally let F X C 3SAT instance literal appears twice By Lemma 4 ﬁnd player distinguished player m1 F satisﬁable draw set N cid12 Z σ cid12 pairwise comparison matrix P satisﬁes properties deﬁned Lemma 5 By Lemma 5i F satisﬁable draw σ m1 win TN σ It remains draw σ m1 win TN σ draw σ cid12 σ cid12 Using Lemma 5ii extend instance set players N N m1 wins double elimination tournament We m1 wins TN σ wins double elimination tournament draw σ σ By Lemma 5 winners bracket won m1 This means point player z1 eliminated winners bracket enters losers bracket As z1 beats players m1 particular players cid12 cid12 H Aziz et al Artiﬁcial Intelligence 262 2018 114 13 losers bracket z1 wins losers bracket faces m1 ﬁnal loses m1 wins double elimination tournament Suppose m1 wins double elimination tournament draw σ winners bracket BKT N wins TN σ If m1 proceeds ﬁnal winner Suppose draw σ player m1 point eliminated winners bracket This means winners bracket won player Z We m1 win double elimination tournament case If m1 win winners bracket z1 win winners bracket m1 win tournament m1 beaten players Z Therefore z1 enter losers bracket This means player Z z1 win losers bracket player Z z1 beats players N including m1 enter losers bracket point Hence m1 win losers bracket win tournament This proves m1 win double elimination tournament winner losers bracket Therefore m1 advancing winners bracket This win double elimination tournament resulting draw σ means wins TN σ concludes onlyif proof cid2 cid12 As noted Lemma 5 similar argument constructed result 17 It follows Theorem 6 probabilistic generalization problem NPhard Similarly similar corollaries Corollaries 1 2 double elimination tournaments 6 Conclusions In paper considered problems related tournament ﬁxing Although able change draws realistic computational problems considered analyzed post analysis tournament draws shed light relative strengths players Our main result TFP NPcomplete We discussed number implications result We complement computational hardness result paper presenting algorithms TFP general case restricted cases A possible future direction propose parameterized algorithms TFP Acknowledgements Haris Aziz supported CSIRO Julius Career Award Serge Gaspers recipient Australian Research Council ARC Future Fellowship FT140100048 acknowledges support ARCs Discovery Projects funding scheme DP150101134 References 1 L Aronshtam H Cohen T Shrot Tennis manipulation help Serena Williams win tournament Ann Math Artif Intell 80 2 2017 153169 2 H Aziz M Brill F Fischer P Harrenstein J Lang HG Seedig Possible necessary winners partial tournaments Proceedings 11th International Conference Autonomous Agents Multiagent Systems AAMAS IFAAMAS 2012 pp 585592 3 H Aziz S Gaspers S Mackenzie N Mattei P Stursberg T Walsh Fixing balanced knockout tournament Proceedings 28th AAAI Conference Artiﬁcial Intelligence AAAI 2014 pp 552558 4 P Berman M Karpinski AD Scott Approximation hardness short symmetric instances MAX3SAT Electron Colloq Comput Complex 049 2003 5 J Brown DB Minor Selecting best Spillover shadows elimination tournaments Manag Sci 2014 30873102 6 K Chatterjee R IbsenJensen J Tkadlec Robust draws balanced knockout tournaments Proceedings 24th International Joint Conference Artiﬁcial Intelligence IJCAI AAAI Press 2016 pp 172179 7 RA Connolly RJ Rendleman Tournament Qualiﬁcation Seeding Selection Eﬃciency Tech Rep 201196 Tuck School Business 2011 8 CT Edwards Doubleelimination tournaments counting calculating Am Stat 50 1 1996 2733 9 FV Fomin D Kratsch Exact Exponential Algorithms Springer 2010 10 C Groh B Moldovanu A Sela U Sunde Optimal seedings elimination tournaments Econ Theory 49 1 2012 5980 11 D Gusﬁeld C Martel The structure complexity sports elimination numbers Algorithmica 32 1 2002 7386 12 N Hazon Y Aumann S Kraus M Wooldridge Evaluation election outcomes uncertainty Proceedings 7th International Conference Autonomous Agents Multiagent Systems AAMAS 2008 pp 959966 13 J Horen R Riezman Comparing draws single elimination tournaments Oper Res 33 2 1985 249262 14 L Huang Prize incentives doubleelimination tournaments Econ Lett 147 2016 116120 15 W Kern D Paulusma The computational complexity elimination problem generalized sports competitions Discrete Optim 1 2 2004 16 MP Kim W Suksompong V Vassilevska Williams Who win singleelimination tournament Proceedings 30th AAAI Conference 17 MP Kim V Vassilevska Williams Fixing tournaments kings chokers Proceedings 24th International Joint Conference 18 DE Knuth Fascicle 1 bitwise tricks techniques binary decision diagrams The Art Computer Programming vol 4 AddisonWesley Profes Artiﬁcial Intelligence AAAI 2016 pp 516522 Artiﬁcial Intelligence IJCAI 2015 pp 561567 205214 sional 2009 19 J Lang MS Pini F Rossi D Salvagnin KB Venable T Walsh Winner determination voting trees incomplete preferences weighted votes 20 J Lang MS Pini F Rossi KB Venable T Walsh Winner determination sequential majority voting Proceedings 20th International Joint Auton Agents MultiAgent Syst 25 1 2012 130157 Conference Artiﬁcial Intelligence IJCAI 2007 pp 13721377 14 H Aziz et al Artiﬁcial Intelligence 262 2018 114 21 JF Laslier Tournament Solutions Majority Voting SpringerVerlag 1997 22 E Marchand On comparison standard random knockout tournaments J R Stat Soc 51 2 2002 169178 23 N Mattei J Goldsmith A Klapper M Mundhenk On complexity bribery manipulation tournaments uncertain information J Appl Log 13 4 2015 557581 24 N Mattei T Walsh Empirical evaluation real world tournaments CoRR arXiv1608 01039 httparxivorg abs 1608 01039 2016 25 S Rosen Prizes incentives elimination tournaments Am Econ Rev 76 4 1986 701715 26 T Russell P van Beek An empirical study seeding manipulations prevention Proceedings 22nd International Joint Conference Artiﬁcial Intelligence IJCAI 2011 pp 350356 Decision Theory 2009 pp 2637 27 T Russell T Walsh Manipulating tournaments cup round robin competitions Proceedings 1st International Conference Algorithmic 28 N Silver When 15th better 8th math shows bracket backward On FiveThirtyEight Blog httpﬁvethirtyeight blogs nytimes com 2011 03 15 15th betterthan 8th math shows bracket backward Accessed February 2014 29 I Stanton V Vassilevska Williams Manipulating singleelimination tournaments BravermanMossel model IJCAI Workshop Social Choice Artiﬁcial Intelligence 2011 30 I Stanton V Vassilevska Williams Manipulating stochastically generated singleelimination tournaments nearly players Proceedings 7th International Workshop Internet Network Economics WINE 2011 pp 326337 31 I Stanton V Vassilevska Williams Rigging tournament brackets weaker players Proceedings 22nd International Joint Conference Artiﬁcial Intelligence IJCAI 2011 pp 357364 32 I Stanton V Vassilevska Williams The structure eﬃcacy manipulation doubleelimination tournaments J Quant Anal Sports 9 4 2013 319335 33 G Tullock Toward Theory RentSeeking Society Texas AM University Press 1980 34 V Vassilevska Williams Fixing tournament Proceedings 24th AAAI Conference Artiﬁcial Intelligence AAAI AAAI Press 2010 pp 895900 Springer 2013 pp 319322 Ch 61 35 V Vassilevska Williams Fixing tournaments RJ Lipton KW Regan Eds People Problems Proofs Essays From Gödels Lost Letter 2010 36 T Vu A Altman Y Shoham On complexity schedule control problems knockout tournaments Proceedings 8th International Conference Autonomous Agents Multiagent Systems AAMAS 2009 pp 225232 37 T Vu N Hazon A Altman S Kraus Y Shoham M Wooldridge On Complexity Schedule Control Problems KnockOut Tournaments Working 38 T Vu Y Shoham Fair seeding knockout tournaments ACM Trans Intell Syst Technol 3 1 2011 117 39 DJA Welsh C Merino The Potts model Tutte polynomial J Math Phys 41 3 2000 11271152 40 L Xia V Conitzer Determining possible necessary winners common voting rules given partial orders J Artif Intell Res 41 2 2011 paper 2013 2567