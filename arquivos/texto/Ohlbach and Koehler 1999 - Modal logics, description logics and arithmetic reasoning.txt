Artiﬁcial Intelligence 109 1999 131 Modal logics description logics arithmetic reasoning I Hans Jürgen Ohlbach acid3 Jana Koehler b1 Department Computer Science Kings College London Strand London WC2R 2LS UK b Institut für Informatik AlbertLudwigsUniversität Am Flughafen 17 79110 Freiburg Germany Received 8 October 1996 received revised form 18 January 1999 Abstract We introduce mathematical programming atomic decomposition basic modal TBox inference techniques large class modal description logics The class description logics suitable proposed methods strong arithmetical In particular complex arithmetical conditions sets accessible worlds role ﬁllers The atomic decomposition technique deal set constructors modal parameters role terms parameter role hierarchies speciﬁed propositional logic Besides standard modal operators number constructors added relatively straightforward way Examples graded modalities qualiﬁed number restrictions generalized quantiﬁers like n cid211 1999 Elsevier Science BV All rights reserved Keywords Modal logic Description logic Combination inference systems Mathematical programming 1 Introduction overview Classical propositional logic reasoning truth values It set description language Predicate symbols mapped sets Boolean connectives conjunction _ disjunction negation implication mapped set functions intersection union complement subset relationship Both modal logics description logics set theoretic interpretation introducing new operators syntactic new structures semantic I This work supported EPSRC Research Grant GRL91818 data driven logic algorithms cid3 Corresponding author Email ohlbachdcskclacuk 1 Email koehlerinformatikunifreiburgde 0004370299 matter cid211 PII S 0 0 0 4 3 7 0 2 9 9 0 0 0 1 1 9 1999 Elsevier Science BV All rights reserved 2 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 The extra features semantic binary relations called accessibility relations modal logics roles description logics The extra features syntactic quantiﬁers modal operators quantify accessible worlds role ﬁllers Although modal logics description logics syntactic variants otherthe description logic ALC example corresponds exactly multimodal logic Km 23their origin completely different Modal logics introduced distinguish formulae true chance formulae necessarily true Therefore modal 2operator called necessitation operator 12 13 Description logics hand late descendants Minskis frames 19 Brachmans KLONE 7 They come variety different versions ALC 25 CLASSIC 6 KRIS 2 LOOM 18 classbased object oriented formalisms 11 Common separation description logic database socalled T Box terminological box socalled ABox assertional box The TBox contains speciﬁcations concepts roles For example TBox formula parent defD person jhaschildj 1 1 speciﬁes concept parent set persons child The multimodal logic notation formula parent person hhaschildi stands truth hhaschildi parameterized diamond operator The parameter haschild modal operator denotes accessibility relation role description logic jargon The ABox description logic database hand contains information instances TBox concepts For example ABox entries Henry V person Henry V haschild Mary conclude Henry instance concept parent From modal logic point view ABox instances names worlds An ABox consistent TBox describes partial model formulae TBox On TBox level major reasoning problems First wants know newly introduced concept deﬁnition consistent previously introduced ones For example TBox contains deﬁnitions male defD person jhasychromosomej 1 female defD person jhasychromosomej D 0 2 3 males persons ychromosome females persons ychromosome add new deﬁnition hermaphrodite defD male female nonempty extension hermaphrodite usually indicates errors misconceptions axiomatization given domain HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 3 The second inference problem subsumption implication 2 If 1 database add grandparent defD person atleast 1 haschildparent 4 grandparents persons child parent course conclude grandparents parents grandparent parent Subsumption relations useful structuring knowledge base Finding subsumption relations concepts called classiﬁcation basic operation TBoxes If description logic language classical negation subsumption problem 1 2 reduced consistency problem 1 2 In paper investigate problems discussed description logic context modal logic context Therefore prefer description logic notions Table 1 compares different notions modal logic community corresponding notions description logic community The standard semantics modal description logics allows translate TBox ABox information ﬁrstorder predicate logic FOL Therefore description logics modal logic essentially fragments FOL Since decidable represent proper fragments FOL usually expressive propositional logic Much effort invested recent years explore borderline propositional logic FOL investigating versions description logics 15 good summary recent results Most methods checking consistency concept formulae subsumption concept formulae tableau algorithms Starting tableau entry V object element set described tableau rules applied information explicit implicitly contained input formulae Conjunctive rules extend list derived information disjunctive rules start case analysis splitting tableau different branches If consistency problem logic decidable tableau algorithm designed application tableau rules eventually terminates obvious contradictions open branches representing model initial formula The method suited languages containing mainly logical operators As soon arithmetics comes play tableau approaches difﬁcult use For example concept deﬁnition parentsofmanyboys D parent jhassonj 2jhasdaughterj parentsofmanyboys parents having twice sons daughters consistency problem amounts checking x 2y nonnegative integer valued solution This trivial check integer programming algorithms impossible tableau method Therefore arithmetic modal description logics weak They usually allow number restrictions 2 In Description Logic literature usually ﬁnds subsumption deﬁned converse implication This contradicts common understanding subsumes deﬁnition classical logic Therefore prefer right meaning subsumption implication 4 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 Table 1 Corresponding notions description logics modal logics Description logic ALC Concept formula Concept deﬁnition Concept Concept Role Role Role term Role ﬁllers TBox ABox entry ABox Domain Object Modal logic Multimodal logic Km Modal formula Modal formula kind conceptname formula Predicate symbol Extension predicate symbol Parameter parameterized modal operator Accessibility relation Complex parameter modal operator Set accessible worlds Set concept deﬁnitions Name world Description partial Kripke structure Set worlds World Consistency concept formula Satisﬁability modal formula Subsumption concept formula Entailment modal formulae Existential quantiﬁer 9 r Universal quantiﬁer 8 r Number restriction jrj n Diamond operator hri Box operator TrU Simple graded modal operator hrin restriction number accessible worlds Qualiﬁed number restriction atmost r n Graded modal operator hrin Arithmetic constraint role ﬁllers Not investigated kind jrj n jrj 6 n n number Qualiﬁed number restrictions atmost n r set objects n rrole ﬁllers atleast n r set objects n rrole ﬁllers In paper propose arithmetic equation solving instead tableau systems basic inference algorithm It purpose paper investigate arithmetic equation solving assume suitable algorithms available actually downloaded internet Therefore specify particular arithmetic language The language depends available arithmetic equation solver Most solve systems linear equations inequations In case addition subtraction multiplication numbers allowed More advanced systems allow certain nonlinear terms The general nonlinear Diophantine equation problem undecidable Hilberts 10th problem 14 Therefore arithmetic language expressive HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 5 There requirements arithmetic important purposes paper cid15 In basic mode arithmetic accept conjunctions equations inequations check solution The solutions needed cid15 For subsumption test arithmetic check solutions given inequation E1 solutions E2 If arithmetic deal disequations problem reduced consistency problem E1 E2 cid15 If description logic allows disjunctions concept deﬁnitions arithmetic able deal disjunctions equations equations 11 Atomic decomposition In main paper consistency subsumption problem concept formulae mapped equation solving problems The atomic decomposition technique 22 plays key role process Since technique widely known brief overview Atomic decomposition exploits possibility decompose ﬁnite sets sets mutually disjoint atomic components These atoms Boolean algebra consisting closure sets union intersection complement To illustrate idea suppose roles hasson hasdaughter speciﬁed subroles haschild From jhassonj 2 jhasdaughterj 3 5 deduce jhaschildj 5 For object domain role ﬁllers hasson hasdaughter haschild form sets overlap general way depicted Fig 1 There seven different areas complement hatched areas fact 23 D 8 different areas named c s d cs cd sd csd The informal meaning c D children sons daughters s D sons children daughters d D daughters children sons cs D children sons daughters cd D children daughters sons sd D sons daughters children csd D children sons daughters The original sets obtained atomic components haschild D c cs cd csd hasson D s cs sd csd hasdaughter D d cd sd csd 6 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 Fig 1 A general set structure Moreover decomposition mutually disjoint exhaustive cardinalities sets add jhaschildj D jcj C jcsj C jcdj C jcsdj jhassonj D jsj C jcsj C jsdj C jcsdj jhasdaughterj D jdj C jcdj C jsdj C jcsdj The relationships haschild hasson hasdaughter actually speciﬁed propositional logic hasson haschild hasdaughter haschild hasson hasdaughter haschild hasson _ hasdaughter sons children daughters children hermaphrodites 6 children consist sons daughters These formulae propositional models haschild hasson hasdaughter haschild hasdaughter hasson haschild hasson hasdaughter They correspond nonempty sets cs cd Fig 2 surrounding area The fact models means jcj D 0 jsj D 0 jdj D 0 jsdj D 0 jcdj D 0 jcsdj D 0 The problem determining 5 children reformulated jcsj 2 jcdj 3 jcsj C jcdj 5 7 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 7 Fig 2 Since sets mutually disjoint internal structure cardinality terms like jcsj longer relevant jcsj replaced nonnegative integervalued variable xcs We obtain xcs 2 xcd 3 xcs C xcd 5 trivial check 8 In 22 idea developed general methodology augmenting formal systems Boolean algebra component The general methodology works formal systems language notion existentially quantiﬁed variables A typical example mathematical programming solving equations inequations On syntactic formal extended set terms embedded bridging functions variable positions The bridging functions map objects logic objects logic For example basic allows equations like 2 cid1 x C 3 cid1 y D 5 extended allow equations like 2 cid1 jsons friendsj C 3 cid1 maxagefriends n sons D 5 sons friends friends n sons Boolean set terms The cardinality function j j maxage function bridging functions Both map sets numbers multiplication 2 3 deﬁned In general setting bridging functions map sets objects basic sense The relationships sets axiomatized propositional logic Relation ships 6 example propositional axiomatization It exploits fact elements connectives Boolean algebras interpreted sets corresponding set operations Stones representation theorem 26 With elementary Boolean algebra theory models propositional axiomatization correspond atoms Boolean algebra generated closure sets union intersection complement 3 3 A Boolean algebra nonempty set equipped functions u meet t join inverse smallest element largest element A 6relation deﬁnable x 6 y iff x u y D x Set algebras u complement 6 subset relation particular kind Boolean algebra intersection t union Every Boolean algebra equivalent set algebra A Boolean algebra complete iff ﬁnite inﬁnite joins belong It atomic iff element obtained join set smallest elements atoms The atoms set algebras singleton sets Finite Boolean algebras complete atomic cf textbook Boolean algebras 0 0 8 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 This correspondence turned algorithm eliminating Boolean terms bridging functions In ﬁrst step compute syntactic representation models propositional axiomatization AR The Boolean terms t decomposed atomic components fm1 mng defD fm j m model AR m satisﬁes tg This way Boolean terms t embedded bridging function f t rewritten f fm1 mng 4 In step decomposition method use extra assumption bridging functions They additive This means sets x y disjoint possible compute f x y ﬁrst computing f x f y joining results combination function Examples fulﬁlled x y D jx yj D jxj C jyj x y D maxagex y D max x y D averageagex y D cid1 cid0 maxagex maxagey jxjaverageagex C jyjaverageagey jxj C jyj The additivity bridging functions fact atoms mi denote disjoint sets allows rewrite terms f fm1 mng gf m1 f mn g composition function In step replace terms f mi new variables xf mi basic 7 8 replacement The transformations sound complete This means original problem mixed language solution transformed problem solution basic 12 Atomic decomposition role terms The atomic decomposition method applied role description logics On semantic level sets decomposed sets role ﬁllers given object On syntactic start combinations arithmetic formulae set terms specify constraints role ﬁllers Examples youngfamily defD averageagehaschild 6 10 haschild role averageage bridging function poorfamily defD maxincomemember 6 100 member role maxincome bridging function doglovers defD jhasdogj 2 cid1 jhaschildj Dog lovers twice dogs children Relationships different role terms expressed propositional axioms With atomic decomposition technique reduce consistency subsumption problems arithmetic equation solving problems 4 The mi conjunctions meets positive negative Boolean variables But purposes sufﬁcient mi names models HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 9 13 Predicate symbols The language constraints role ﬁllers general expressive Therefore investigate logical constructs ﬁt framework extra mechanisms needed obtain sound complete decision procedure consistency subsumption problem In description logic context predicate symbols called concept names names sets objects In deﬁnition parent defD person jhaschildj 1 example predicate symbol person undeﬁned symbol In case particular assumptions set persons If deﬁned term person replaced deﬁnition consistency subsumption test tried Predicate symbols interact arithmetic expressions Therefore arithmetic algorithms algorithms predicate symbols usually kind propositional reasoning independent 14 Universal quantiﬁcation In description logic context quantiﬁcation means quantiﬁcation role ﬁllers For example woodentoy defD toy 8 haspartwooden deﬁnes wooden toy toy parts role ﬁllers haspart relation wooden 8 haspartwooden denotes set objects parts set wooden objects The modal logic version deﬁnition woodentoy cid0 cid1 toy ThaspartUwooden The universal quantiﬁers role terms set constructors role names related role names propositional axioms decomposed atomic components For example haschild decomposed hasson hasdaughter 8 haschild decomposed 8 hasson 8 hasdaughter Decomposed quantiﬁcations roles comprised single quantiﬁcation 8 r 8 r 8 r This way interactions different universal quantiﬁcations eliminated Universal quantiﬁcation role ﬁllers interact relatively simple way arithmetic expressions role terms If inconsistent 8 r represent nonempty set rrole ﬁllers Thus 8 r jrj D 0 The consistency check ﬁrst checks arguments universal quantiﬁers adds jrj D 0 necessary As example consider 8 haschildteacher 8 hasdaughterteacher 10 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 The decomposition yields 8 hassonteacher 8 hasdaughterteacher 8 hasdaughterteacher comprised 8 hassonteacher teacher 8 hasdaughterteacher simpliﬁed jhassonj D 0 8 hasdaughterteacher 15 Existential quantiﬁcation It turns existential quantiﬁer role ﬁllers deﬁnable language providing role hierarchies restrictions number role ﬁllers universal quantiﬁer 9 r D 9r 0 cid0 r 0 r cid1 jr 0j 1 8 r 0 That means occurrence 9 r existential quantiﬁer introduce new Skolemized role r 0 relates subset r role ﬁllers lying add axiom r 0 r role hierarchy The actual occurrence 9 r replaced jr 0j 1 8 r 0 16 Disjunction negation The algorithms presented organized way disjunctions treated putting concept formulae disjunctive normal form treating disjunct separately In presence conjunction disjunction quantiﬁers negation moved propositional level negation normal form Therefore special treatment necessary general negation concept formulae 17 Deﬁned operators The arithmetic language role hierarchies standard connectives quantiﬁers expressive deﬁne useful operators 171 Qualiﬁed number restrictions atleast n r set objects n role ﬁllers atmost n r set objects n role ﬁllers qualiﬁed number restrictions In treated deﬁned operators atleast n r 9r 0 atmost n r 9r 0 cid0 r 0 r cid0 r 0 r cid1 cid1 cid12 cid12r 0 cid12 cid12r 0 cid12 cid12 n 8 r 0 cid12 cid12 6 n 8 r 0 8 cid0 r n r 0 cid1 Again new Skolemized role names r 0 subrole deﬁnition r 0 r added role hierarchy The occurrences atleast atmost formulae replaced numeric constraints universal quantiﬁcations HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 11 172 Percentage operators Operators like n r set objects n r role ﬁllers deﬁnable 0 n r 9r cid0 0 r r cid1 cid12 cid12r 0 cid12 cid12 njrj 8 r 0 100 In way deﬁne 6 n operator n operator r operator 50 173 The operator r s denotes set objects r role ﬁllers s role ﬁllers For example hasdaughter blonde hasson brown denotes set objects blonde daughters brown sons A deﬁnition operator cid0 cid1 cid0 r 0 r 8 r 0 8 s0 8 r s 9r 0 s0 s0 s cid0 s n s0 In example r 0 blonde daughters s0 brown sons jr 0j jrj requires blonde daughters brown sons cid12 cid12r 0 cid1 cid12 cid12 cid12 cid12 cid12 cid12s0 cid1 174 The operator The meaning operator example haschildteacher set objects children teacher clear If child certainly 100 If children mean small fraction Our language expressive need assume ﬁxed meaning leave user deﬁne version A possible deﬁnition r 9r 0 cid1 cid0 r 0 r 8 r 0 cid12 cid12 cid12 D jrj cid12r 0 cid12 cid12 cid12 09jrj cid12r 0 cid12 cid12 cid12 05jrj cid12r 0 cid12 cid12 cid12 90 cid12r 0 jrj 6 2 3 6 jrj 6 10 11 6 jrj 6 100 101 6 jrj 18 Other operators There number operators discussed description logic literature We investigated ﬁt framework For example role composition operator extends Boolean language role terms language relation algebras Since approach relies decomposition method relies Stones representation theorem Boolean algebras extension decomposition method relation algebras means straightforward In following sections work technical details method prove soundness completeness algorithms 12 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 2 Atomic decomposition We list basic deﬁnitions results The details 22 The presentation method independent particular application description logics 21 Syntax languages involved We need components syntax The ﬁrst component syntax language LE basic E want augment Boolean component In case E systems arithmetical equations inequations E suitable formal The second component Boolean algebra component Boolean terms LB R set terms set R Boolean variables constructed usual set connectives union intersection 0 complement n set difference In description logic case R set role names As bridge languages LE LB R need distinguished set B bridging functions different symbols involved A typical example bridging function cardinality function mapping sets integers A bridging function symbol ﬁnite arity Each argument position Boolean term argument LE term For convenience assume bridging function arity n C k reserves ﬁrst n arguments Boolean terms remaining k arguments LEterms The combined language deﬁned follows Deﬁnition 1 The combined language LBER B If sTxU 2 LE x term occurring positions s f 2 B arity n C k t1 tn 2 LB R s1 sk 2 LBER B sTxf t1 tn s1 skU 2 LBER B No terms LBER B LBER B essentially like LE LE term positions occupied LB R terms embedded bridging function The combined language Boolean parts LE parts separated functions B Example 2 E D arithmetic B D fjj f cg informal meaning jj set cardinality function f means combined fortune means average income binary function c means consumption Well formed LBER B axioms jsons friendsj 5 There 5 sons friends f children 100000 The combined fortune children exceeds 100000 adaughters D 10000 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 13 The average income daughters 10000 cchildren friends cigarettes D 0 The children friends smoke cigarettes 22 Semantics languages involved The language LE comes natural semantics The feature need interpretation E E maps free variables constant symbols elements Es domain interprets function symbols functions usual way In arithmetical language E example represent solution equation The language LB R interpreted complete atomic Boolean algebra usually necessarily set algebra The interpretation homomorphism B LBR 7 A A complete atomic Boolean algebra 5 Since language LB R LE share symbols deﬁne combined interpretation BE union interpretations B E The interpretation bridging function symbols BE The interpretation bridging function symbols B need ﬁxed It satisfy additivity axioms Deﬁnition 3 type conform That means bridging function symbol f n Boolean arguments m LE arguments combined interpretation BEf map tuples consisting n elements Boolean algebra m elements Es domain element Es domain Deﬁnition 3 Additivity axioms The additivity axioms bridging function f 2 F arity n C k x y D f ticid01 x y tiC1 cid1 cid0 f ticid01 x tiC1 f ticid01 y tiC1 D gi 2 f1 ng Boolean argument positions gi x y term LE Deﬁnition 4 Problem speciﬁcation A problem speciﬁcation AR AB consists parts 1 set AR propositional axioms Boolean symbols R 2 bridging function additivity axioms AB Deﬁnition 3 3 LBER B formula The satisﬁability problem ﬁnd speciﬁcation consistent interpretation satisfying parts The propositional axioms AR ordinary propositional interpretation Boolean variables R mapped binary truth values 5 In practical applications A ﬁnite We investigated case A complete atomic 14 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 general Boolean algebra interpretation Boolean variables R mapped elements Boolean algebra In description logic case desired interpretation set theoretic Boolean variables R mapped sets role ﬁllers To explain exact correlation different kinds interpretations basic Boolean algebra theory ultraﬁlters necessary One prove kind atomic Boolean algebra interpretation AR onetoone correspondence propositional models m AR m jD AR atoms Boolean algebra That means syntactic representation syntactic atoms ARs models represent atoms Boolean algebra Therefore Boolean term t set theoretic interpretation D m 9 mjDAR m means set theoretic interpretation atom corresponding propositional model m This basis sequence transformations eliminate Boolean terms bridging functions problem speciﬁcation AR AB reduce satisﬁability problem problem basic language LE Deﬁnition 5 Atomic decomposition Given problem speciﬁcation AR AB deﬁne following sequence transformations 1 Atomic decomposition Boolean terms cid11AR p D fm1 mng p Boolean variable mi jD p AR cid11AR x y defD cid11AR x cid11AR y cid11AR x y defD cid11AR x cid11AR y cid11AR x 0 defD cid11AR n cid11AR x cid11AR set models AR Notice set connectives lefthand term building functions righthand real set operations meant For LBER Bformula let cid11AR result applying decomposition function cid11AR Boolean terms occurring 2 Elimination additivity axioms For decomposed LBER Bformula cid11AR let cid11AB cid11AR result exhaustive left right application equations AB cid11AR taking sets fm1 mkg union terms m1 cid1 cid1 cid1 mk 3 Elimination bridging functions Finally deﬁne replacement operation cid11AB cid11AR replaces bridging function symbols f n Boolean k LE arguments corresponding LE terms cid12 introduces term f m1 mn new LEfunction constant symbol f 0 m1mn replaces terms f m1 mn s1 sk f 0 s1 sk m1mn Let cid11ARAB result replacement cid11AB cid11AR HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 15 Theorem 6 Soundness completeness A problem speciﬁcation AR AB satisﬁable falsiﬁable AR satisﬁable ii transformed formula cid11ARAB satisﬁable falsiﬁable basic LE The inference procedure derived theorem comprises following steps order check satisﬁability combined speciﬁcation AR AB ﬁrst compute syntactic atoms derived propositional models AR If models speciﬁcation unsatisﬁable If models decompose Boolean terms occurring sets syntactic atoms Use additivity axioms AB push bridging functions level single atoms Then replace resulting bridging terms variables composed LE terms check result Esatisﬁability checker If satisﬁability E decidable decision procedure combination Boolean language Satisﬁability combination decidable 23 Optimizations A formula l Boolean variables worst case 2l models For generate syntactic atoms This makes approach questionable Fortunately optimizations reduce number syntactic atoms considerably 231 Relevancy principle A Boolean variable p occurring Boolean axioms AR problem speciﬁcation AR AB contribute problem solution Boolean variables implicitly existentially quantiﬁed That means AR fact short 9p AR p occur AR conjunction propositional formulae existentially quantiﬁed p eliminated quantiﬁer elimination 0 equivalent 9p AR procedure 16 The result formula AR contain p In propositional case elimination existentially quantiﬁed p amounts generating resolvents p clause form AR The resolvents represent consequences p p longer necessary 1 This way large databases Boolean axioms actual problem hand atomic decomposition takes account relevant Boolean variables 232 Factoring principle A Boolean axiomatization AR split separate parts AR1 ARr parts mutually share Boolean variables simpliﬁes atomic decomposition The set propositional models AR factored product M1 cid2 cid1 cid1 cid1 cid2 Mr set models ARi This means algebra A image set theoretic interpretation AR factored product A1 cid2 cid1 cid1 cid1 cid2 Ar algebras The atoms product form icid01 ai iC1 ai atom Ai components elements algebras 16 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 If information intersections unions Boolean terms different factors product exploited representation syntactic atoms They form mi mi syntactic atom component Mi A simpliﬁcation possible storing mi labelling information belongs Mi This reduces overall number syntactic atoms jM1j cid1 cid1 cid1 jMr j jM1j C cid1 cid1 cid1 C jMr j exponential improvement The meaning simpliﬁcation makes sense application point view As illustration consider AR axiomatizing family relationships addition relationships makes cars If axioms saying intersection people cars factoring operation implicitly imposes object time person car Therefore Boolean algebra split sets people sets cars People cars represented tuples product algebra On calculus syntactic atoms represent people cars intersection 3 Arithmetic constraints role ﬁllers We deﬁne different Description Logic languages starting purely arithmetical including operators With deﬁne concepts c defD c concept concept formula corresponding language cf 1 2 3 One important restriction concept deﬁnitions equations c defD rewrite rules left right rewriting operation terminates The rewritten concept deﬁnitions expanded normal form For example expanded normal form concept deﬁnitions parent defD person jhaschildj 1 grandparent defD parent 9 haschildparent defD person jhaschildj 1 parent grandparent defD person jhaschildj 1 9 haschild cid0 person jhaschildj 1 cid1 Truly recursive concept deﬁnitions rewriting terminate possible require different approach presented paper 2124 Therefore assume concept formulae expanded normal form Since expanded normal form exponential clever implementation needs avoid expansion HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 17 The atomic decomposition technique framework ﬁrst version description logic The basis arithmetic equation solving mathematical programming This combined Boolean role terms Let DLar Description Logic arithmetics role terms Deﬁnition 7 DLarsyntax The language primitives consist set R role names set C concept names set B bridging functions B contains set cardinality function j j A DLarbasis AR AB consists 1 ﬁnite set AR propositional axioms role names R 6 2 ﬁnite set AB additivity axioms bridging functions B 7 DLarformulae LBER Bformulae The DLarsemantics interprets role terms binary relations concept formulae sets objects domain Deﬁnition 8 DLarsemantics We assume interpretation nonempty domain D DLarbasis interpret arithmetic parts language natural way Section 22 interpret bridging functions natural way bridging axioms satisﬁed The deﬁnitions speciﬁc DLar cid15 r cid18 D cid2 D role r 2 R cid15 r x defD fy j x y 2 r g x 2 D r 2 R cid15 f bridging function arity n C k r1 rn role terms cid1x defD f A concept formula consistent satisﬁable 6D interpretation cid0 f r1 rn s1 sk cid0 x 1 r x r 1 s n s cid1 k A concept formula 1 subsumes entails concept formula 2 iff 1 cid18 2 interpretations Remark The element Boolean role terms denotes universal relation With universal relation syntax express cardinality restrictions domain For example jrj D 5 jr 0j D 6 enforces domain exactly 11 elements The universal relation relation successors domain elements domain This requires extra mechanisms algorithms addressed paper Therefore shall assume explicit implicit reference universal relation arithmetic parts quantiﬁcation parts language DLarc8 This means particular algorithms suitable modal S5type inference problems 6 AR speciﬁes set theoretic relationships roles usually necessarily subset hierarchy role hierarchy 7 It necessary include axioms AB For example correlation cardinality function bridging function averageincome 8x jxj D 0 averageincomex D 0 It straightforward translate axioms like language underlying arithmetic 18 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 The problem checking consistency concept formula solved checking problem speciﬁcation AR AB Deﬁnition 4 consistency atomic decomposition method The problem checking subsumption 1 2 solved checking problem speciﬁcation AR AB 1 2 consistency We assume underlying arithmetic algorithms deal negated formulae Atomic decomposition previously develop inference algorithms description logics example 910 In approach concepts decomposed roles Since technique applied different logic inverse roles arbitrary terminological axioms compare approaches directly 4 Concept formulae concept names The ﬁrst extension language DLar DLarc allow propositional formulae concept names occur concept terms Deﬁnition 9 The language DLarc The language DLarc like DLar concept formulae form c arithmetical concept term language DLar c propositional formula concept names The DLar semantics works DLarc concept names mapped subsets domain c set theoretic interpretation c An example busyacademic defD jhascoursesj C jhasprojectsj 2 staff member _ researcher jhascoursesj C jhasprojectsj 2 arithmetic staff member _ researcher purely propositional c Since arithmetic concept share symbols consistency subsumption checked separately Proposition 10 Consistency subsumption check DLarc A DLarcconcept formu la c consistent iff consistent checked DLar consistency check c consistent checked propositional satisﬁability checker A DLarcconcept formula c subsumes concept formula c iff subsumes checked DLarsubsumption algorithm c entails c propositional formulae checked propositional satisﬁability checker Since c share nonlogical symbols proofs straightforward HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 19 5 Concept formulae universal quantiﬁers Universal quantiﬁcation 8 r expresses properties role ﬁllers r role ﬁllers given object x lie concept Deﬁnition 11 The language DLarc8 The language DLarc8 like language DLarc concept formulae kind c 8 c DLarcconcept formulae 8 conjunction quantiﬁcations 8 r r role term DLarc8concept formula The semantics 8 r 8 r defD cid8 x 2 D j 8y r x y y 2 cid9 8 r denotes set objects r role ﬁllers Notice consists conjunctions expressions form jrj n jrj 6 n n integer c conjunction concept names role terms consist role names role hierarchy AR language logic T F 1520 If atomic decomposition role term r fa1 ang 8 r 8 a1 cid1 cid1 cid1 8 10 Therefore 8part DLarc8concept formula normalized 8 D 8 a11 cid1 cid1 cid1 8 ann ai symbolic atoms For example 8 haschildteacher 8 hassonmale normalized 8 steacher male 8 dteacher haschild decomposed fs dg Concept formulae denote domain interpretations D interpretations useless tautologies eliminated We necessary sufﬁcient criterion recognizing Theorem 12 Tautology A DLarc8concept formula D c 8 arithmetic c propositional 8 universal quantiﬁcations tautology DLarc8basis AR AB written jD 8 iff cid11ARAB tautology basic LE possible assignments variables solutions ii c propositional tautology iii 8 r 8 tautology 8 We use symbol jD binary relation jD interpretation satisﬁes predicate jD true models 20 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 Proof If conditions satisﬁed certainly tautology We satisﬁed interpreted proper subset domain interpretation If cid11ARAB tautology falsifying model cid11ARAB By Theorem 6 falsifying interpretation 0 0 maps symbolic atoms m subsets domain We construct interpretation D D fxg m0 m2cid11AR arbitrary element x atoms m m defD fx b j b 2 m0 g This means msuccessors x elements assigned m 0 This way interpretation role ﬁllers x falsify Thus tautology If c propositional tautology certainly ﬁnd interpretation proper subset domain If 8 r 8 tautology interpretation domain element b 2 In way ﬁrst case construct interpretation 0 b rsuccessor new element x Then case rsuccessors x holds means tautology 2 Deﬁnition 13 Decomposition universal quantiﬁcations If D concept formula DLarbasis AR AB R set role terms deﬁne 8 r r r2R V cid11AR defD 8 mcid11AR m S r2R cid11AR r m2 cid11AR m defD r r2R m2cid11AR r Lemma 14 The decomposition universal quantiﬁcations Deﬁnition 13 equiva lence preserving That means D cid11AR interpretations satisfying AR AB Proof The lemma consequence 9 10 8 r 8 r 8 r First universal quantiﬁcations D 8 r1 1 cid1 cid1 cid1 8 rn n decomposed atomic parts 8 mr11 1 cid1 cid1 cid1 8 mr1k1 1 cid1 cid1 cid1 8 mrn1 n cid1 cid1 cid1 8 mrnkn n mri 1 mri ki atomic components ri 1 6 6 n This equivalence preserving transformation 10 Then quantiﬁcations 8 m role m collected single quantiﬁcation conjunction relevant This equivalence preserving transformation And result normal form 2 Universal quantiﬁcation set tautology 8 r satisﬁable inconsistent Consequently inconsistent set rrole ﬁllers HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 21 jrj D 0 added case These observations lead following normal form DLarc8concept formulae Deﬁnition 15 DLarc8normal form Let D c 8 DLarc8concept formula DLarc8basis AR ABwhere arithmetic c concept 8 universal quantiﬁcations parts The normal form NFarc8 8 ARAB 8 c cid110 cid110 cid110 NFarc8 defD AR 8 ARAB c consistent ARAB 8 defD cid11ARAB cid110 0 AR 8 defD cid11 8 m 0 2cid11AR 8mNFarc8 0D xm D 0 8 m 8 m 0 2cid11AR 8m DNFarc8 06Dcid110 ARAB 6jDxmD06jD cid110 ARAB 8 normal form NFarc8 arithmetic It consists original decomposed arithmetic cid11ARAB Deﬁnition 53 role terms replaced corresponding arithmetic terms plus equations xm D 0 xm variable introduced jmj These equations come quantiﬁcations 8 inconsistent msuccessors cid110 AR 8 decomposed reduced quantiﬁcation quantiﬁcations atomic role components tautologies eliminated Theorem 16 Soundness NFarc8normal form If normal form NFarc8 D DLarc8concept formula D c 8 DLarbasis AR AB inconsistent Proof By induction number nested universal quantiﬁcations base case D c cid110 ARAB inconsistent c inconsistent In ﬁrst case inconsistent Theorem 6 second case inconsistent Induction step If c inconsistent If cid11ARAB inconsistent inconsistent Theorem 6 If cid11ARAB consistent xm D 0 cid11ARAB 8 m 0 2cid11AR 8mNFarc8 0D inconsistent cid11ARAB forces existence mrole ﬁller corresponding NFarc8 0 D induction hypothesis inconsistent Thus ﬁnd 8 m decomposition 8 nonempty mrole ﬁllers This makes 8 inconsistent 2 22 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 Theorem 17 Completeness NFarc8normal form If normal form NFarc8 6D DLarc8concept formula D c 8 DLarbasis AR AB nonempty set D interpretation D D means particular consistent Proof By induction number nested universal quantiﬁcations technical reasons assume propositional c levels formula form p 0 c p single unique concept occurring This change consistency inconsistency The base case induction D c Since cid11ARAB consistent interpretation 0 Theorem 6 We deﬁne interpretation atoms m atomic decomposition interpreted binary relations m role ﬁllers elements D m0 c deﬁne p defD D concept q c q 0 D 1 let p defD D q 0 D 0 let p defD This guarantees c D D Induction step Since NFarc8 6D cid110 ARAB 8 c consistent In For x 2 D let mx defD m0 For p 0 way base case construct interpretation 1 8 m 0 2cid11AR 8mNFarc8 0D 1 xm D 0 D D Because Lemma 14 sufﬁcient 1 extended interpretation k 8 m 0k D D 8 m 0 If m1x D x 2 D x 2 8 m 01 quantiﬁcations cid11AR 8 sets true S If m1x 6D x 2 D NFarc8 0 6D 8 m 0 2 cid11AR 8 m xm D 0 arithmetic By induction hypothesis interpretations x 0x D m1x We deﬁne joint interpretation 2 requiring m2 D m1 x q1 qx concept q occurring c x mx atom m q 2 D m1 m2 contribute different levels binary relation associated m 1 c D D similar statement c p occur 2 c D Since c D p 0 true propositional parts Repeating process 8 m 0 end interpretation k S k D D 2 51 The subsumption test Testing subsumption means ﬁguring 1 2 holds concept formulae 1 2 interpretations In case use normal form concept formulae arithmetic information comprised arithmetic constraint quantiﬁcations decomposed atomic components The structure normalized D c 8 decomposed arithmetic c propositional formula 8 contains decomposed reduced universal quantiﬁcations cid18 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 23 In order verify 1 subsumes 2 prove conjunctive 2 1 The normal form allows separate problem The arithmetical 2a follow arithmetical 1a This assume checked corresponding arithmetic algorithm The propositional 2c follow propositional 1c tested propositional satisﬁability checker Finally atomic components 8 m 2 2 follow corresponding 8 m 1 components 18 1 subsumes 2 Here algorithm recursive There possibility 8 m 2 consequence 1 a1 forces xm D 0 Then msuccessors 8 m 2 vacuously true Theorem 18 DLarc8subsumption test For D 1 2 let D ia ic i8 consistent ic 0 concept formulae normal forms 0 ia i8 1 subsumes 2 1a entails 0 0 ii 1c entails 2c propositional logic iii 8 m 2 0 28 2a basic arithmetic 0 1a entails xm D 0 b 8 m 1 0 18 1 subsumes 2 Proof The onlyif soundness obvious For completeness induction number nested universal quantiﬁcations 2 ii iii violated interpretation 1 6cid18 2 This means 1 cid18 2 interpretations ii iii true check subsumption testing ii iii In base case induction 2 consists arithmetical propositional independent If decomposed formula 0 1a entail 0 2a consistent Theorem 6 similar construction Theorem 17 means interpretation 1a 2a 6D Thus 1 subsume 2 2a 0 0 1a If propositional 1c entail 2c obviously 1 subsume 2 Induction step The arguments arithmetical propositional parts base case For quantiﬁcation investigate case iii violated suppose 8 m 2 0 1a entail xm D 0 interpretation mrole ﬁller o0 domain object o 28 0 corresponding 8 m 1 0 b 8 m 1 0 In ﬁrst case restriction mrole ﬁller o0 Since tautologies 1 o0 18 1 subsume 2 28 interpretation places o 18 eliminated 0 complement 2 o 2 2 Case b consequence induction hypothesis 2 Example 19 Let illustrate subsumption checking procedure example taken 20 p 80 The task concept 9 9 The notation adapted ﬁt framework 24 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 defD jrj 3 2 subsumed concept defD 8 r pS 8 r qS jr pj 2 jr qj 2 1 First need compute normal forms 1 2 We begin decomposition role set R D fr p qg according Deﬁnition 5 We obtain cid11AR r D fr rp rq rpqg cid11AR p D fp rp pq rpqg cid11AR q D fq rq pq rpqg Now able decompose universal quantiﬁers 1 following Deﬁnition 13 8 rpS 8 rpqS S 8 rqS Since S S inconsistent obtain cid11AR 18 D 8 rpS 8 rqS ﬁrst equation cid110 normal form ARAB 1a 18 xrpq D 0 Using equation simplify xrp C xrpq 2 xrq C xrpq 2 jr pj 2 jr qj 2 obtain inequations cid110 ARAB 8 D xrp 2 xrq 2 xrpq D 0 Normalizing 2 leads single inequation NFarc82 D cid110 ARAB 2a 28 D xr C xrp C xrq C xrpq 3 Since 2c 28 remains prove xrp 2 xrq 2 xr C xrp C xrq C xrpq 3 valid obvious The constraints number role ﬁllers expressible DLarc8 relate role ﬁllers different levels quantiﬁcation For example representation set people grandchildren children requires expression like jhaschildI haschildj 6 jhaschildj kind aggregation functions lead undecidability 5 6 Concept formulae existential quantiﬁers The existential quantiﬁer 9 r postulates existence r role ﬁller concept As mentioned quantiﬁer deﬁnable language 9 r D 9r 0 cid0 r 0 r cid1 cid12 cid12r 0 cid12 cid12 1 8 r 0 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 25 Therefore language DLarc89 existential quantiﬁcation convenient theoretically necessary For occurrence 9 r existential quantiﬁer introduces new Skolem ized role r 0 relates subset r roleﬁllers lying adds axiom r 0 r role hierarchy The actual occurrence 9 r replaced jr 0j 1 8 r 0 It noted extension role hierarchy local nesting universal quantiﬁers For 8 s containing existential quantiﬁer level local extension role hierarchy This way exponentially atoms atomic decomposition role terms avoided The assumption optimization role ﬁllers different quantiﬁcations common Example 20 From information D 9 haschildmale teacher 9 haschildmale teacher jhaschildj 6 2 conclude D 8 haschildteacher fact exactly children male female child teachers The existential quantiﬁers eliminated introducing new roles c1 haschild c2 haschild 9 haschildmale teacher jc1j 1 8 c1male teacher 9 haschildmale teacher jc2j 1 8 c2male teacher Since male teacher male teacher inconsistent intersection c1 c2 DLarc8normal form computation Deﬁnition 15 Taking hierarchy axioms account decomposition haschild yields fc1 c2 rg r stands rest The DLarc8normal form 0 D xc1 1 xc2 1 xc1 C xc2 C xr 6 2 8 c1male teacher 8 c2male teacher obviously implies xr D 0 The DLarc8normal form ﬁrst second formula 8 haschildteacher 8 c1teacher 8 c2teacher 8 rteacher In order check subsumes prove recursively quantiﬁcation 0 corresponding quantiﬁcation 0 trivial ﬁrst ones check 0 implies role ﬁllers true quantiﬁcation 0 xr D 0 consequence 0 26 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 7 Concept formulae disjunction negation A straightforward way handle disjunctions generate disjunctive normal form treat disjuncts actually DLarc89formulae DLarc89 algorithms concept formula consistent iff disjunct disjunctive normal form consistent A concept formula 1 subsumes concept formula 2 iff disjunct disjunctive normal form 2 subsumed disjuncts disjunctive normal form 1 If conjunction disjunction quantiﬁers negation arithmetic expressions negation concept names available negation treated putting concept formula negation normal form negation symbols concept names disequations This way consistency test negation reduced consistency test language DLarc89 disjunction Moreover subsumption test 1 2 reduced consistency test 1 2 8 Other operators language Quite number operators added language changing algorithms 81 Numbervalued functional roles features These functions mapping objects numbers They appear arithmetic language treated ordinary arithmetical variables An example numbervalued functional role cubiccapacity deﬁnition 500er defD car cubiccapacity D 500 cid1 jhascylinderj 11 500er set cars cubic capacity 500 cc cylinder If numeric features occur arithmetic DLarc89 like Baader Hanschkes ALCD ALC concrete domain D real numbers 3 The difference treatment existential quantiﬁer introduces numeric constraint role ﬁllers Therefore consistency subsumption checking algorithms different Baader Sattler investigated extension language auxiliary variables link different features different levels quantiﬁcations For example x 2x D age 8 haschildx D age speciﬁes set objects twice old children x serves auxiliary variable links agefeature object agefeature objects children We investigated language extension ﬁts approach It certainly straightforward consistency undecidable language 4 82 Other functional roles Functional roles exactly role ﬁller deﬁned arithmetic constraints universal quantiﬁer HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 27 jhasnamej D 1 8 hasnamename speciﬁes functional role hasname mapping objects objects set Thus functional roles treated mechanisms available universal quantiﬁers arithmetics In special cases efﬁcient treat functional roles special way 83 Qualiﬁed number restrictions Qualiﬁed number restrictions introduced deﬁned operators cid12 cid12r cid12 cid12r 0 0 r atleast n r 9r atmost n r 9r 0 r 0 r cid12 cid12 n 8 r cid12 cid12 6 n 8 r 0 8 cid0 r n r 0 cid1 r 0 0 0 The new roles Skolemized hierarchy information r 0 r added role hierarchy way existential quantiﬁer Example 21 Let 1 atleast 20 p 2 atleast 20 q 3 jj 6 30 4 atmost 9 p q 9 A D 8 8 An intuitive interpretation example atleast 20 horses white colour p atleast 20 horses black colour q atmost 30 horses Therefore atleast 10 zebras p q The statement negation theorem denotes universal relation The elimination number restriction operators yields 0 D A 0 jRj 20 8 Rp 0 jSj 20 8 Sq 0 jj 6 30 0 jT j 6 9 8 T p q 8 n T p q 1 2 3 4 9 The decomposition R S T generates 8 atoms r s t rs rt st rst c c stands complement R S T We use names generated nonnegative integer variables From 10 obtain 00 D r C rs C rt C rst 20 8 fr rs rt rstgp 1 From 20 obtain 00 D s C rs C st C rst 20 8 fs rs st rstgq 2 28 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 From 30 obtain 00 D r C s C t C rs C rt C st C rst C c 6 30 3 From 40 obtain 00 4 D t C rt C st C rst 6 9 8 ft rt st rstgp q 8 fr s rs cgp q The rspart universal quantiﬁcations 100 200 400 contradictory Therefore rs D 0 hold Using simpliﬁed inequation r C rt C rst 20 s C st C rst 20 r C s C t C rt C st C rst C c 6 30 t C rt C st C rst 6 9 inconsistent 84 Generalized quantiﬁers Of form nr nr 6 nr n number 0 100 deﬁned cid12 cid12 cid12r 0 cid12 D njrj 8 r 0 8 nr D 9r 0 r 0 r 100 cid12 cid12 cid12 njrj 8 r 0 cid12r 0 nr D 9r 0 r 0 r 100 cid12 cid12 cid12 6 njrj 8 r cid12r 0 0 r 100 0 6 nr D 9r r 0 8 cid0 r 0 n r cid1 cid1 cid0 r 0 n r r meaning 50 special case percentage operator As seen introduction operators like r deﬁnable standard way 9 Problematic features description logics A number operators features modal description logics literature integration framework difﬁcult goes scope paper Role conjunction role inverse require role terms longer Boolean To deal kind operators atomic decomposition technique extended expressive algebras Boolean algebras Roles special properties reﬂexivity symmetry transitivity great description logics The haspart relation example useful technical domains transitive 17 The algorithms presented depend fact quantiﬁers 8 r 9 r ordinary role terms special properties deﬁne levels role ﬁllers correspond syntactic structure nested role terms If roles special properties levels mixed Transitivity particular reduces levels HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 29 There straightforward way extend algorithms deal cases impossible 10 Summary We presented method developing modal description logics TBox consistency subsumption algorithms basic inference engine arithmetic equation solving mathematical programming The key technique allows reduce consistency subsumption problem arithmetic equation solving atomic decomposition Boolean role terms embedded bridging functions map role ﬁllers numbers Therefore basic language approach deal role hierarchies speciﬁed propositional logic role terms set constructors arithmetic constraints numeric features role ﬁllers With extra mechanisms integrate standard operators description logics particular quantiﬁcation role ﬁllers disjunction negation The extended features expressive treat number operators deﬁned operators particular qualiﬁed number restrictions generalized quantiﬁers like nr The decision problem languages operators reduced decision problem linear Diophantine equation inequation systems decidable The complexity algorithms depends expressiveness basic arithmetic language undecidable structure atomic decompo sition exponential There optimizations algo rithms reduce complexity enormously For example role hierarchy atomic decomposition trivial Each role mapped On hand axioms restrict role hierarchy models atoms generated More information yields complexity case Given basic idea atomic decomposition reduce consistency subsumption tests arithmetic problems straightforward adapt main algorithms standard operators description logics It clear extend method operators particular complex role constructors Many interesting problems framework need solved Acknowledgement We like thank anonymous referee herhis valuable suggestions In particular thanks suggestions treatment existential quantiﬁer simpler original version References 1 W Ackermann Untersuchung über das Eliminationsproblem der mathematischen Logik Mathematische Annalen 110 1935 390413 30 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 2 F Baader B Hollunder KRIS Knowledge representation inference SIGART Bull 2 2 1991 815 3 F Baader P Hanschke A scheme integrating concrete domains concept languages J My lopolous R Reiter Eds Proc IJCAI91 Sydney Australia 1991 Morgan Kaufmann San Mateo CA 1991 pp 452457 4 F Baader U Sattler Description logics symbolic number restrictions W Wahlster Ed Proc ECAI96 Wiley New York 1996 pp 283287 extended version appeared Technical Report LTCS9603 5 F Baader U Sattler Description logics concrete domains aggregation H Prade Ed Proc ECAI98 Wiley New York 1998 pp 336340 6 A Borgida P PatelSchneider A semantics complete algorithm subsumption CLASSIC description logic J Artiﬁcial Intelligence Research 1 1994 277308 7 RJ Brachman J Schmolze An overview KLONE knowledge representation Cognitive Sci 9 2 1985 171216 8 RJ Brachman DL McGuinness PF PatelSchneider LA Resnick A Borgida Living CLASSIC When use KLONElike language J Sowa Ed Principles Semantic Networks Morgan Kaufmann San Mateo CA 1991 pp 401456 9 D Calvanese Finite model reasoning description logics Proc Internat Conference Principles Knowledge Representation Reasoning KR96 Morgan Kaufmann San Mateo CA 1996 pp 292 303 10 D Calvanese M Lenzerini Making objectoriented schemas expressive Proc PODC94 ACM PressAddisonWesley Reading MA 1994 pp 243254 11 D Calvanese M Lenzerini D Nardi A uniﬁed framework class based representation formalisms J Doyle E Sandewall P Torasso Eds Proc Fourth Internat Conference Principles Knowledge Representation Reasoning KR94 Bonn Germany Morgan Kaufmann San Mateo CA 1994 pp 109120 12 BF Chellas Modal Logic An Introduction Cambridge Univ Press Cambridge 1980 13 A Chargov M Zakharayaschev Modal Logic Oxford Logic Guides Vol 35 Oxford Univ Press Oxford 1997 14 M Davis Hilberts tenth problem undecidable Amer Math Monthly 80 1973 233269 15 F Donini M Lenzerini D Nardi W Nutt The complexity concept languages Research Report DFKI RR9507 DFKI 1995 16 DM Gabbay HJ Ohlbach Quantiﬁer elimination secondorder predicate logic B Nebel C Rich W Swartout Eds Proc Third Internat Conference Principles Knowledge Representation Reasoning KR92 Cambridge MA Morgan Kaufmann San Mateo CA 1992 pp 425435 17 I Horrocks U Sattler A description logic transitive converse roles role hierarchies Proc International Workshop Description Logics IRST PovoTrento Italy 1998 18 R MacGregor A description classiﬁer predicate calculus Proc AAAI94 Seattle WA 1994 Morgan Kaufmann San Francisco CA 1994 pp 213220 19 M Minsky A framework representing knowledge Reprinted RJ Brachman HJ Levesque Eds Readings Knowledge Representation Morgan Kaufmann San Francisco CA 1990 pp 245262 20 B Nebel Reasoning Revision Hybrid Representation Systems Lecture Notes Artiﬁcial Intelligence Vol 422 Springer Berlin 1990 21 B Nebel Terminological cycles Semantics computational properties JF Sowa Ed Principles Semantic Networks Morgan Kaufmann San Mateo CA 1991 pp 331361 22 HJ Ohlbach J Koehler How extend formal Boolean algebra component PH Schmidt W Bibel Eds Automated Deduction A Basis Applications Vol III Kluwer Academic Dordrecht 1998 pp 5775 23 K Schild A correspondence theory terminological logics Preliminary report Proc IJCAI91 Sydney Australia 1991 Morgan Kaufmann San Mateo CA 1991 pp 466471 24 K Schild Terminological cycles propositional cid22calculus Proc Fourth Internat Conference Principles Knowledge Representation Reasoning KR94 Bonn Germany Morgan Kaufmann San Mateo CA 1994 pp 509520 HJ Ohlbach J Koehler Artiﬁcial Intelligence 109 1999 131 31 25 M SchmidtSchauß G Smolka Attributive concept descriptions complements Artiﬁcial Intelligence 48 1991 126 26 MH Stone The theory representations Boolean algebras Trans Amer Math Soc 40 1936 37111