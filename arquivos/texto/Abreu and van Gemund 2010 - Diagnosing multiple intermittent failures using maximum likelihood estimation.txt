artiﬁcial intelligence 174 2010 14811497 content list available sciencedirect artiﬁcial intelligence wwwelseviercomlocateartint diagnosing multiple intermittent failure maximum likelihood estimation rui abreu arjan jc van gemund b department informatics engineering faculty engineering university porto portugal b embedded software group delft university technology faculty electrical eng math c netherlands r t c l e n f o b s t r c t article history received 14 september 2009 received revised form 8 september 2010 accepted 8 september 2010 available online 25 september 2010 keywords fault diagnosis bayesian reasoning maximum likelihood estimation fault diagnosis intermittent failure model important tool adequately deal realistic failure behavior current modelbased diagnosis approach account fact component c j fail intermittently introducing parameter g j express probability component exhibit correct behavior component parameter g j conjunction priori fault probability bayesian framework compute posterior fault candidate probability usually information g j known priori proper estimation g j critical diagnostic accuracy present approximation proposed present novel framework coined barinel computes estimation g j integral posterior candidate probability computation maximum likelihood estimation approach barinels diagnostic performance evaluated synthetic system siemens software diagnosis benchmark realworld program result approach superior reasoning approach based classical persistent failure model previously proposed intermittent failure model 2010 elsevier bv right reserved 1 introduction modelbased fault diagnosis mbd fault typically assumed persistent practical situation fault exhibit intermittent failure behavior copier sheet blank worn roller slip cause paper jam 12 intermittent failure relevant software fault diagnosis primary context paper software supposed inherently deterministic intermittent failure model essential nondeterminism race condition caused design fault related properly dealing concurrency compelling reason modeling abstraction applied reasoning software component reasoning approach input output value abstracted binary correctness value consider integer division x10 10 fault 15 consider input value x 15 x 20 respectively ﬁrst case component produce correct output second case component fails input modeled correct produced nominal component division com ponent exhibit intermittent failure behavior weak fault model stipulate particular fault behavior admits output behavior modeling inconsistently failing software component merely term weak model result degraded diagnostic performance 4 work carried trader project responsibility embedded system institute project partially supported netherlands ministry economic affair bsik03021 program corresponding author email address ruicomputerorg r abreu ajcvangemungtudelftnl ajc van gemund 00043702 matter 2010 elsevier bv right reserved doi101016jartint201009003 1482 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 model intermittent failure behavior 9 introduced extension gde framework 1113 essentially prior probability p j component c j fault parameter g j express probability faulty component exhibit correct good g behavior g j 0 persistently failing g j 1 effectively ok 0 g j 1 intermittently failing model incorporated standard bayesian framework computes posterior probability diagnosis candidate based observation 813 intermittent failure model shown yield signiﬁcantly better result diagnosis replanning paper sheet path copier intermittent component failure 23 software fault diagnosis 4 compared approach based classical persistent failure model important problem intermittent failure model estimation g j calibration data correct incorrect component behavior typically available estimating g j component c j straightforward suﬃcient observation available single intermittently failing component involved 9 multiplefault context usually observation available multiple faulty component involved consequently isolating extent individual component contributes observed intermittent failure behavior trivial inﬂuence g j computation posterior probability diagnostic candidate signiﬁcant exact knowledge g j critical overall diagnostic accuracy 12 45 strategy proposed estimate g j multiplefault context approach essentially based approximation paper present novel approach compute g j conjunction new approach computation posterior candidate probability intermittent failure model generalizes classical persistent mbd approach approach represents departure current bayesian framework current diagnosis approach 4 12 sense 1 resulting g j maximum likelihood estimator instead approximation 2 computation posterior candidate probability integral product g j estimation procedure apart diagnosis accuracy paper address diagnosis eﬃciency weak intermittent modeling approach combination large system consider order ten thousand component lead huge diagnostic candidate space paper present minimal hitting set algorithm feature novel diagnosis speciﬁc heuristic directs search generate candidate order decreasing posterior probability equalcardinality group feature allows candidate generation process truncated limited number candidate merely 100 experiment effectively capturing posterior probability mass tailored algorithm enables apply diagnosis technique large system paper make following contribution present new approach candidate probability computation feature maximum likelihood estima tion algorithm compute g j component involved diagnosis approach coined barinel1 software implementation method present new algorithm compute minimal hitting set set conﬂicts called staccato2 derive time space complexity compare accuracy complexity barinel including staccato current approach 4 12 synthetically generated observation series based injected fault known g j setpoints application approach software multiplefault diagnosis evaluate diagnostic perfor mance wellknown siemens suite benchmark program extended multiple fault realworld program space sed gzip result synthetic experiment application real software system conﬁrm new approach superior diagnostic performance bayesian approach intermittently failing system known date limited computation cost paper organized follows section current bayesian approach persistent intermittent failure model section 3 4 new approach candidate generation posterior probability computation respectively section 5 6 present experimental result synthetic observation real program code respectively section 7 describes related work section 8 concludes paper 2 preliminary section stateoftheart mbd involving intermittent failure 1 barinel stand bayesian approach diagnose intermittent fault barinel type caravel portuguese sailor discovery 2 staccato acronym statisticsdirected minimal hiting set algorithm r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1483 21 basic deﬁnitions deﬁnition diagnostic d deﬁned triple d cid3sd comp obscid4 sd propositional theory scribing behavior comp c1 cm set component sd ob set observable variable sd component c j comp associate health variable h j denotes component health health state component healthy h j true faulty h j false deﬁnition hliteral h j h j c j comp deﬁnition hclause disjunction hliterals containing complementary pair hliterals deﬁnition conﬂict sd comp ob hclause negative hliterals entailed sd ob deﬁnition let s n s p disjoint set component index faulty healthy respectively comp c j j s n s p s n s p deﬁne d n s p conjunction h j h j cid2 cid2 j n j p diagnosis candidate sentence describing possible state state assignment status healthy healthy component deﬁnition diagnosis candidate d n s p d given observation ob variable ob sd ob d n s p cid2 remainder refer d n s p simply d identify set s n index negative literal minimal diagnosis diagnosis subsumed lower fault cardinality number negative hliterals c d minimal diagnosis minimal hitting set conﬂicts deﬁnition minimal hitting set collection s set d si s si d cid12 cid3d cid13 d si d cid13 cid12 d contains element subset set s proper subset d hitting set minimal hitting set s constitutes collection minimal hitting set deﬁnition diagnostic report d cid3d1 dk dk cid4 ordered set k minimal diagnosis candidate sd ob dk cid2 diagnostic accuracy diagnostic report d depends ranking actual system fault state d diagnostician traverse d diagnostic approach produce d d accuracy generates testing effort approach rank d evaluation section later assuming ranked higher lower detail discussed experimental bayesian approach serf foundation derivation diagnostic candidate 1 deducing candidate diagnosis dk consistent observation 2 posterior probability prdk candidate actual diagnosis respect 1 computing prdk possible candidate ﬁnd prdk 0 search algorithm typically instead cda 32 safari 15 minimal hitting set mhs algorithm conﬂict set available 13 bayesian probability framework remains basis section brieﬂy contemporary approach derivation candidate posterior probability 22 candidate generation consider particular process involving set component yield nominal result failure instance logic circuit process subcircuit cone activity result particular primary output copier process propagation sheet paper software process sequence software component activity statement result particular return value result process nominal pas error fail explained earlier sequel assume weak component fault model h cid3nominal behaviorcid4 compatible notion intermittency allows faulty component intermittently exhibit correct behavior 1484 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 n set m component a11 a12 a1m a21 a22 a2m an1 an2 m conﬂict e1 e2 en fig 1 input diagnostic process deﬁnition let s f c j c j involved failing process let s p c j c j involved passing process denote fail set pas set respectively approach fault diagnosis assume persistent weak failure model generate candidate based fail set aka conﬂict set essentially mhs algorithm derive minimal candidate wellknown example gde 13 fail set derived detecting inconsistency given certain input output observation recent approach allow intermittency account pas set consistent behavior example use pas set fail set include logic circuit intermittently failing gate copier software system mentioned earlier software pas fail set originate dynamically proﬁling software component statement module program run formally component associated weak model h cid16 okinp cid16 okout okinp okout denote binary correctness component input output correctness program run modeled chain component model deﬁnition okinp ﬁrst component chain true okout component reﬂects run pass fails case pas set recorded case fail set essentially conﬂict set recorded software pas fail set commonly referred hit spectrum 320 note quality pas fail set profound effect diagnostic quality possibly intermittencyposterior candidate probability computation scheme addressing paper paper address pas fail set generation assume number pas fail set collected static modelbased technique logic circuit mentioned earlier spectrumbased technique software fail set indicts component increase posterior fault probability pas set exonerates component decrease posterior fault probability extent indictment exoneration computed bayes rule deﬁnition let n denote number passing failing process let n f n p n f n p n denote number fail pas set spectrum respectively let denote n m activity matrix ai j denotes component j involved process ai j 1 ai j 0 let e denote error vector ei signiﬁes process passed ei 0 failed ei 1 conﬂict observation e input diagnosis process fig 1 barinel approach compute candidate fail set staccato mhs algorithm section 3 23 candidate probability computation given multitude candidate typically generated candidate ranking induced posterior probability computation critical diagnostic accuracy let pr j p j denote prior probability component c j fault assuming component fail independently prior probability candidate dk given cid11cid11 cid9 cid9 cid11 cid10 prdk cid10 pr j cid10 1 pr j j n j p observation obsi ai ei posterior probability updated according bayes rule naive bayes classifying prdkobsi probsidk probsi prdk 1 denominator probsi normalizing term identical dk need computed directly probsidk deﬁned probsidk 0 obsi dk inconsistent 1 obsi unique dk ε 2 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1485 mentioned earlier updating candidate candidate derived diagnostic search algorithm updated implying 0clause need considered large majority case εclause applies policy exist ε 8 policy distinguished ﬁrst policy denoted ε0 equal classical mbd policy persistent weak failure deﬁned follows cid15 ε0 e p e p e f e f e p e f ei 0 ei 1 3 dk 1 2mdk e p 2m e f 2 number passed failed observation explained diagnosis dk respectively disadvantage classical policy pas set apart making single fault probable multiple fault help pinpointing fault particular weak fault model rule candidate 2m term eq 3 addition way distinguish diagnosis cardinality term merely function cardinality diagnosis candidate policy consider component intermittent failure behavior accounting fact component involved pas set extent exonerated following distinguish policy ε1 9 ε2 4 deﬁned cid16 cid16 ε1 ε2 gdk 1 gdk ei 0 ei 1 ei 0 gdkm 1 gdkm ei 1 cid17 jdk m ai j 1 number faulty component according dk involved process i3 note term gdk real individual component intermittency parameter g j mentioned earlier fact obtaining g j pas fail set multiple intermittent failure involved far trivial instead effective intermittency parameter gdk estimated multiplefault candidate dk counting time component dk involved pas fail set policy gdk approximated gdk n10dk n10dk n11dk n10dk n11dk cid19cid20 cid21 cid18 i1n cid18 jdk cid19cid20 cid21 i1n jdk cid22 ai j 1 ei 0 cid22 cid23 cid23 ai j 1 ei 1 policy ε2 variant ε1 approximates probability g j m component dk exhibit good behavior gdkm assuming component dk equal g value take account fact failure probability increase number fault involved diagnosis probable true fault explanation jdk cid24 24 example illustrate current bayesian approach work consider diagnosis candidate dk table 1 obtained 2 faulty gzip software program component 2553 2763 faulty m 5680 component n 210 test case n f 12 failed simplicity refrain reporting activity matrix summarizing term n11dk n10dk 3 iversons operator true 1 false 0 1486 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 table 1 candidate obtained gzip dk 1347 2553 2763 2682 2745 2110 2745 n11 12 12 12 12 n10 189 16 2 2 table 2 diagnostic report ε0 1347 2682 2745 2110 2745 2553 2763 1 011 10 011 10 011 10 3 3 3 011 10 3 011 10 n01 0 0 0 0 ε1 2110 2745 2682 2745 2553 2763 1347 n00 9 182 196 196 gdk 094 057 014 014 3 3 010 10 011 10 9 017 10 19 061 10 involved simultaneously involved simultaneously involved 2 passed 8 failed process ε2 2682 2745 2110 2745 2553 2763 1347 3 5 012 10 073 10 9 19 019 10 069 10 n01dk n00dk instead4 term n01dk n00dk deﬁned follows cid22 cid26 cid18 cid25cid20 cid21 n01dk n00dk i1n cid18 jdk cid25cid20 cid21 i1n jdk ai j 0 ei 1 cid22 cid26 ai j 0 ei 0 snippet diagnostic report obtained different policy given table 2 common traditional policy ε0 distinguish candidate cardinality ranking order diagnosis candidate cardinality diagnostic report yielded ε2 differs ε1 ε2 take account number faulty component involved process rationale faulty component involved likely run fail essentially ranking position true fault ε2 requires developer inspect code policy section 4 knowledge individual g j yield far better result gdk estima tions 3 candidate generation staccato mentioned earlier derive diagnosis candidate activity matrix comprising pas fail set fail set represent conﬂicts apply minimal hitting set algorithm compute diagnosis candidate typically large number hitting set search heuristic focus search solution potentially min imal hitting set yield signiﬁcant eﬃciency gain computed minimal hitting set potentially little value low posterior probability solution need ordered term relevance possibly aborting search particular number minimal hitting set boosting eﬃciency mhs algorithm typically generate candidate term increasing cardinality implying cardinality highest po terior probability generated ﬁrst change order cardinality class aka ambiguity group 4 interested reader activity matrix downloaded httpwwwstewitudelftnlabreuaij r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1487 greatly affect diagnostic accuracy section present approximate statisticsdirected minimal hitting set algorithm coined staccato aimed increase search eﬃciency similar contemporary mhs algorithm 131016 algorithm combine component starting cardinality c 1 combination cover conﬂicts principle algorithm executes depthﬁrst order minimal hitting set initially component c j ordered heuristic function h j r search algorithm selects component order generally accepted heuristic 13 assume component member fail set compo nents likely minimal hitting set trivial case component involved set constitute minimal hitting set cardinality 1 heuristic given h j ncid18 i1 ai j 4 despite generally good performance heuristic particularly tailored diagnostic domain given set conﬂicts mhs solution ideally ordered term eq 1 circular dependency ﬁrst need mhs algorithm able solve eq 1 defeat costeffective approach lowcost heuristic provides good prediction eq 1 critical success factor lowcost statisticsbased technique known good predictor ranking software component order likelihood fault spectrumbased fault localization sfl 3 sfl take spectral input e produce ranking component order fault likelihood component ranking computed similarity coeﬃcient measure statistical correlation component involvement erroneousnominal behavior similarity coeﬃcients exist sfl best currently ochiai coeﬃcient known molecular biology introduced sfl 3 deﬁned follows cid15 s j den j 0 n11 j n11 jn01 jn11 jn10 j den j cid12 0 5 similarity coeﬃcient indicts component n11 j exonerates component n10 j n01 j 3 shown similarity coeﬃcients provide ordering component yield good diagnostic accuracy component rank highest usually faulty diagnostic performance combined low complexity s j key motivation use ochiai coeﬃcient s j h e contains conﬂicts cid3ei 0 ranking returned heuristic function reduces produced simple equation 4 classic mhs problem adequately handled mbdspeciﬁc heuristic staccato us sfl heuristic equation 5 focus search minimal hitting set computation algorithm 1 algorithm 1 staccato input matrix e number component m stop criterion λ l cid2 collection conﬂict set cid2 rank according heuristic h end n11 j t f pushd j strip_component j r r j seen seen 1 m output minimal hitting set d 1 t f aiei 1 2 r rankh e 3 d 4 seen 0 5 j 1m 6 7 8 9 10 11 12 end 13 r cid12 seen cid2 λ d cid2 l 14 15 16 17 18 19 20 21 22 23 24 25 end 26 return d j popr seen seen 1 m cid13 e cid13 staccato d cid13 cid12 d cid13 popd cid13 j cid13 cid13 j j j is_not_subsumedd j cid13 cid13 strip e j end end pushd j cid13 e cid13 cid13 m jn11 j t f 1 λ l 1488 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 staccato algorithm recursively applied substructure e generating minimal hitting set algorithm feature phase ﬁrst phase process component level recursion minimal hitting set line 512 component stored second phase algorithm compo nents possibly joined form minimal hitting set e second phase process component hitting set involved subset fail set component component searched form hitting set achieved recursively calling staccato substructure e component removed fail set covered component line 16 17 respectively mhs ﬁnally checked subsumption respect mhs earlier line 21 new mhs subsumed earlier mhs d new mhs discarded conversely earlier mhs d subsumed new mhs earlier mhs removed d illustrate staccato work consider following e comprising fail set pas set c1 1 0 0 1 0 0 0 c2 0 1 0 0 0 0 0 c3 0 1 1 0 1 1 1 c4 1 0 0 0 1 1 1 c5 1 1 1 1 1 1 1 ei 1 1 1 1 0 0 0 conﬂict conﬂict conﬂict conﬂict nominal nominal nominal e follows h1 07 h2 05 h3 04 h4 03 h5 08 yielding following rank ing cid35 1 2 3 4cid4 component c5 involved failed set added d removed strip_component function avoiding solution subsumed 5 considered line 512 phase e follows c1 1 0 0 1 0 0 0 c2 0 1 0 0 0 0 0 c3 0 1 1 0 1 1 1 c4 1 0 0 0 1 1 1 ei 1 1 1 1 0 0 0 component checked c1 involved failed set order prepare staccato ﬁnd component form new hitting set rationale ﬁnd component involved fail set current component involved column component fail set involved removed e strip function yielding following c2 1 0 0 0 0 c3 1 1 1 1 1 c4 0 0 1 1 1 ei 1 1 0 0 0 running staccato newly generated e yield following ranking cid32 3cid4 line 17 c2 involved failed set prepare staccato ﬁnd component form new hitting set column component fail set involved removed e strip function yielding following c3 1 1 1 1 c4 0 1 1 1 ei 1 0 0 0 running staccato newly generated e yield ranking component 3 mhs current e mhs d returned invocation staccato union d c1 c2 checked 1 2 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1489 set involved failed set subsumed candidate d added list solution d line 1824 point d 5 1 2 3 combination c2 checked staccato considers component ranking cid32 3cid4 c3 involved failed set staccato check c3 c1 1 3 subsumes subsumed candidate d line 21 1 2 3 subsumed 1 3 1 2 3 removed d 1 3 added step d 5 1 3 subsequent iteration staccato algorithm following set considered 2 1 3 3 1 4 1 3 subsumed 1 3 line 21 discarded staccato eventually return d 5 1 3 example parameter set λ 1 relative search depth l maximum number solution returned result search staccato complete practice exploit staccatos focusing property 1 decreasing λ fraction λ component ranking actually selected recursion 2 aborting search l solution returned experiment synthetic problem shown λ 01 hardly sacriﬁces completeness important mhs solution missed virtually entire probability mass returned ﬁrst l 100 solution 1 result staccato allows diagnostic approach applied large system term algorithm staccato comprises following step initialization phase ranking component heuristic function borrowed sfl computed line 14 algorithm 1 component involved failed set added d line 512 d l ﬁrst λ component ranking including one added d line 1325 following 1 remove component j ai ei 1 ai j 1 hold e line 17 2 run staccato new e 3 combine solution returned component verify minimal hitting set line 1724 conclude section complexity analysis staccato ﬁnd minimal hitting set cardinality c staccato recursively invoked c time time staccato 1 update counter component o n m 2 rank component fault likelihood o m log m 3 traverse λ component ranking o m 4 check set subsumed subsumes set d o d overall time complexity staccato o d m n log mc practice search focusing heuristic time complexity merely o c d c m n log m respect space complexity invocation staccato algorithm store counter component create sflbased ranking n11 n10 n01 n00 recursion depth c ﬁnd solution cardinality staccato space complexity o c m 1 veriﬁed staccato generates solution high search eﬃciency ordered posterior probability mass concentrated ﬁrst l solution experiment involving activity matrix size 30 300 diagnostic accuracy optimal low l cid2 100 performance beneﬁts approach exempliﬁed fact matrix m 1 000 000 n 1000 c 1000 processed average solution rate 886 m 23 ghz intel pentium6 pc 4 gb memory 4 candidate probability computation barinel section present approach compute g j associated posterior candidate probability prdk given observation e approach 1 determine real g j instead gdk 2 apply g j improved epsilon policy compute probsdk key idea underlying approach candidate dk compute g j candidate faulty com ponents maximizes probability predk observation e occurring conditioned candidate dk maximum likelihood estimation naive bayes classiﬁer dk approximate strategy proposed previous work assume intermittent failure distribution mild relatively small observation n allow proper estimation g j note unlike prior p assume prior knowledge g j wild distribution happen g 099 n 1000 run spot failure consequently approach yield g 1 instead g 099 mild distribution assumption acceptable software regression test suite test data based contain large number passing failing run measured activity matrix section 5 6 given process term g j epsilon policy possibly intermittently failing component given cid15 cid24 ε jdkai j 1 g j cid24 1 jdkai j 1 g j ei 0 ei 1 6 eq 6 reﬂects fact probability process failure minus probability candidate component induce failure g j component product come failure independence assumption common assumption diagnosis community 1490 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 algorithm 2 diagnostic algorithm barinel input activity matrix error vector e number component m output diagnostic report d 1 γ cid5 2 d staccato e m 1 100 expr generatepr e dk 0 prdki 0 jdk g j 05 repeat compute mhs 3 dk d 4 5 6 7 8 9 10 11 12 13 14 15 end 16 return sortd pr 1 j dk g j g j γ exprg j end prdki evaluateexpr jdk g j prdki1 prdki cid2 ξ approach g j solved maximizing predk epsilon policy according arg max g predk g g j j dk note particular candidate dk optimum g j value differ candidate d cid13 k component approach implementation coined barinel described algorithm 2 comprises main phase ﬁrst phase line 2 list candidate d computed e staccato return list probable diagnosis candidate experiment l 100 candidate second phase prdk e computed dk d line 3 15 generatepr derives candi date dk probability predk current set observation e example suppose following measurement c1 c2 fault ignoring healthy component c1 1 1 0 1 c2 0 1 1 0 e 1 1 0 0 prei1 2 1 g1 1 g1 g2 g2 g1 observation independent probability obtaining e given dk 1 2 equal eq 6 predk g1 g2 1 g1 1 g1 g2 subsequently g j computed maximize predk solve maximization problem apply simple gradient ascent procedure 6 bounded domain 0 g j 1 motivation choice simple linearly converging optimization procedure quadratically convergent complex procedure focus demonstrating added diagnostic accuracy maximum likelihood estimation approach minimize computation cost simple optimization scheme test program processed barinel order second ﬁnal phase diagnosis ranked according prdk e computed evaluate accord ing usual posterior update eq 1 cid17 singlefault candidate maximum likelihood estimator g1 equal intermittency rate ein intuitive way determine g1 single fault consider following e showing c1 column row c1 hit e probability occurring pr c1 1 1 1 1 e 0 0 1 0 preidk g1 g1 1 g1 g1 pre1 given pre1 g3 1 differentiating expression determining zero root e ﬁnd intermittency rate g1 3 1 g1 value g1 maximizes pre1 3 4 easily 4 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1491 averaging e offer lowcost analytic solution computing g j approach work single fault motivating numeric gradient ascent alternative multiplefault case contrast approximate averaging technique ε12 published thusfar finally illustrate beneﬁts approach consider example presented section 24 mentioned previous section ε0 distinguish candidate cardinality candidate rank probability ii true fault cardinality 2 candidate cardinality 1 2 inspected ε12 distinguish candidate cardinality 2110 2745 2682 2748 outrank true fault 2553 2763 barinel yield better result better estimation individual g j ranking true fault 2553 2763 diagnosis candidate considered dk 2553 2763 2110 2745 2682 2745 1347 g j g2553 094 g2110 026 g2682 026 g2746 0001 g2745 095 g2745 015 g1347 094 prdk 78 10 36 10 90 10 58 10 4 5 5 20 g j expression need maximized simple bounded 0 1 domain timespace complex ity approach identical reasoning policy presented section 2 modulo small nearconstant factor account gradient ascent procedure exhibit rapid convergence m c section 6 5 theoretical evaluation order ass performance improvement framework generate synthetic observation based sample e generated value n m number injected fault c cardinality motivation synthetic data realworld data ability study effect parameter controlled setting real program represent parameter setting multidimensional parameter space component activity ai j sampled bernoulli distribution parameter r probability component involved row equal r c faulty component c j loss generality select ﬁrst c component set g j probability component involved generating failure equal r 1 g row generates error ei 1 1 c component generates failure measurement speciﬁc n m c r g scenario averaged 1000 sample matrix yielding coeﬃcient variance approximately 002 compare accuracy approach previous work term diagnostic performance metric w denotes excess diagnostic work spent ﬁnding actual component fault metric improvement metric typically software debugging domain measure debugging effort associated partic ular diagnostic method 330 instance consider m 5 component program following diagnostic report d cid34 5 4 3 1 2cid4 c1 c2 actually faulty ﬁrst diagnosis candidate lead developer inspect c4 5 new information g4 g5 10 prob c5 component healthy w increased 2 ability remaining candidate updated leading pr4 3 0 c4 longer multiple fault consequently candidate 4 3 discarded avoiding wasting additional debugging effort component inspected c1 c2 faulty effort wasted consequently w 2 5 graph fig 2 plot w versus n m 20 r 06 trend m r value essentially r 06 typical real software siemens suite different value c g plot w n 1 similar r corresponds fact average m c r component inspected vain suﬃciently large n policy produce optimal diagnosis probability healthy diagnosis candidate hitting set approach zero small g j w converges quickly large g j computation involving faulty component prone failure large g j faulty component behave nominally requiring observation larger n rank higher increasing c observation required n faulty component isolated fact failure behavior caused component reducing correlation failure particular component involvement plot conﬁrm ε0 worst performing policy mainly fact distinguish diagnosis fault cardinality c 1 ε2 ε1 policy equal performance barinel trivial case approximation g j equal c 5 plot conﬁrm barinel superior perfor mance demonstrating correct computation g j relevant particular approach deteriorate increasing c 6 empirical evaluation section evaluate diagnostic capability eﬃciency diagnosis technique real program 1492 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 fig 2 wasted effort w v n setting c g 61 experimental setup evaluating performance approach use wellknown siemens benchmark set 14 larger program space gzip sed obtained sir 14 siemens suite composed seven program single program correct version set faulty version program fault span multiple statement andor function faulty version contains exactly fault program set input provided created intention test coverage space package provides 1000 test suite consist random selection average 150 test case guarantee branch program exercised 30 test case experiment test suite randomly chosen 1000 suite provided r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1493 table 3 subject program program print_tokens print_tokens2 replace schedule schedule2 tcas tot_info space gzip13 sed415 faulty version 7 10 32 9 10 41 23 38 7 6 m 539 489 507 397 299 174 398 9564 5680 14 427 n 4130 4115 5542 2650 2710 1608 1052 13 585 210 370 description lexical analyzer lexical analyzer pattern recognition priority scheduler priority scheduler altitude separation information measure adl interpreter data compression textual manipulator table 3 provides information program experiment m corresponds number line code component context experiment extended subject program program version activate arbitrary combination multiple fault purpose limit selection 143 183 fault based criterion fault attributable single line code enable unambiguous evaluation activity matrix obtained zoltar toolset 21 program suite includes correct version use output correct version reference characterize run failed output differs corresponding output correct version passed 62 performance result section evaluate diagnostic capability barinel compare bayesian policy similar section 5 aimed c 5 multiple faultcases print_tokens insuﬃcient fault available measurement fourfault version print_tokens average 100 version maximum number combination available veriﬁed fault active failed run table 4 present summary diagnostic quality different approach expressed term wasted debug ging effort w section 5 agreement previous section result software system conﬁrm average barinel outperforms approach especially considering fact variance w considerably higher coeﬃcient variance 05 schedule2 synthetic case 1000 sample matrix versus 100 matrix experiment real software program 4 30 case barinel apart obvious sampling noise variance particular property program paired twotailed student ttest veriﬁed difference mean w signiﬁcant case barinel clearly outperform approach noise cause small difference term w example print_tokens2 c 2 difference mean signiﬁcant case schedule c 1 tcas c 2 c 5 ε2 marginally outperforms barinel 05 caused fact program branchfree small m 174 combined large sampling noise σw μw 5 tcas ii failing run involve faulty component highly correlated occurrence schedule2 c 2 c 5 ε0 better fact failing run involve faulty component highly correlated occurrence program effectively single fault spreading multiple line favor ε0 rank candidate cardinality ﬁrst 63 timespace complexity section report timespace complexity barinel measure time eﬃciency conducting experiment 23 ghz intel pentium6 pc 4 gb memory table 5 summarizes timing result column program average cpu time second barinel ε0 ε1 ε2 needed compute diagnostic report d given e case use staccato generate candidate expected barinel expensive previous approximate bayesian approach example barinel requires 42 second average space ε012 need 1 second reason numeric gradient ascent procedure effect gradient ascent cost clearly noticeable ﬁrst program space somewhat lower convergence speed result fact h j close 1 note implementation optimized procedure quadratic convergence performance penalty largely disappear 100 iteration instead 10 000 gaining order magnitude speedup linear convergence following interpret cost measurement complexity point view technique update d candidate probability d determined staccato complexity staccato estimated o n m constant matrix density r 1 measurement constant d 100 suﬃces unrealistic assume large system d scale m yielding o n m probability update table 4 wasted effort w combination c 15 fault subject program print_tokens print_tokens2 replace schedule schedule2 c version ε0 ε1 ε2 barinel c version ε0 ε1 ε2 barinel 1 4 137 12 112 12 tcas 1 30 280 167 167 167 2 6 182 24 24 24 2 100 269 242 241 245 4 1 228 50 48 44 5 100 287 305 305 307 1 10 216 42 51 19 2 43 261 76 89 34 5 100 308 145 155 66 1 23 162 30 30 30 2 100 251 52 52 50 5 100 338 125 124 119 1 7 172 08 08 08 tot_info 1 19 140 51 61 50 2 100 182 87 117 85 5 100 215 174 209 158 space 1 28 195 22 22 17 2 100 252 36 37 30 5 100 343 95 99 74 gzip 1 7 26 13 13 10 2 20 235 16 15 15 2 21 55 27 27 19 5 11 286 30 31 30 5 21 102 78 67 43 1 9 293 228 215 215 sed 1 5 41 07 07 03 2 35 266 314 294 281 2 10 63 06 06 04 5 91 289 383 356 349 5 1 93 18 14 14 1 4 9 4 r b r e u j c v n g e m u n d r t ﬁ c l n t e l l g e n c e 1 7 4 2 0 1 0 1 4 8 1 1 4 9 7 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1495 table 5 diagnosis cost time second program print_tokens print_tokens2 replace schedule schedule2 tcas tot_info space gzip sed barinel ε012 453 247 96 41 29 15 15 414 281 92 42 47 62 25 25 14 12 09 82 67 barinel complexity maximization procedure appears independent size expression m c reducing term constant report ordered time complexity equal o n m m log m result table 5 follow trend predicted complexity analysis respect space complexity previous bayesian approach need store counter n11 n10 n01 n00 probability update candidate assuming d scale m approach o m space complexity barinel slightly expensive given diagnosis dk store number time combination faulty dk 1 barinels space complexity component dk observed passed run 2 estimated o 2c m slightly complex previous approximate bayesian approach practice memory consumption reasonable 53 mb sed largest program experiment dk 1 failed run 2 7 related work mentioned earlier modelbased diagnosis approach gde 13 gde 31 cda 32 safari 15 failure assumed persistent consequently work optimally component fail intermittently recently model intermittent behavior introduced extension gde framework 9 later extended 45 shown result approach improves approximation work providing better result paper extends earlier work 2 including description mhs algorithm staccato ii including large realworld program experimental evaluation space sed gzip approach diagnosing multiple intermittently failing defect developed applied software fault diagnosis context modelbased reasoning approach automatic software debugging model typically generated source code 25 evaluation model model generated mean static analysis technique extremely complex detailed level intermittency issue level associated diagnostic complexity prohibits application program larger line code indication largest program 25 tcas 172 line code contrast lowcost algorithm scale hundred thousand line code reasoning approach based model checker include explain 19 cid8 slicing 19 compare execution trace correct failed run contrast approach fully automatic analysis need annotated pre postconditions facilitate generation model addition scale judging fact author evaluated approach small program 174 line code dynamic approach determining component involvement failure e inspired statistical approach automatic software debugging known spectrumbased fault localization row spectrum wellknown example include tarantula tool 22 nearest neighbor technique 30 ochiai coeﬃcient 3 approach rank component term statistical similarity component involvement observed program failure behavior attractive complexitypoint view approach consider multiple fault furthermore similarity metric little value ranking contrast probability metric mhs computation reiter 29 showed diagnosis mhss conﬂict set exhaustive mhs algorithm presented mbd context 18132933 hitting set problem solved socalled hitset tree 16 mhs problem mapped 10integer programming problem contrary work consider information conﬂict set claimed integer programming approach potential solve problem thousand variable complexity result presented contrast lowcost approach easily handle larger problem 34 method setenumeration tree derive minimal conﬂict set context modelbased diagnosis presented author merely conclude method exponential time complexity number element set component quinemccluskey algorithm 2826 originating logic optimization method deriving prime implicants monotone boolean function dual problem mhs problem algorithm limited use exponential complexity prompted development heuristic espresso discussed later heuristic approach proposed render mhs computation amenable large system 24 approximate method compute mhss genetic algorithm described ﬁtness function aim ﬁnding 1496 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 solution minimal cardinality suﬃcient mbd solution similar cardinality dif ferent posterior probability paper present time complexity analysis suspect costcompleteness tradeoff worse staccato stochastic algorithm discussed framework constraint satisfaction 17 propositional satisﬁability 27 example domain independent approach compute mhs stochastic algorithm eﬃcient exhaustive method espresso algorithm 7 primarily minimize logic circuit us heuristic guide circuit minimization inspired domain eﬃciency algorithm form basis logic synthesis tool dual mhs problem prime implicants costcompleteness data available allow comparison staccato knowledge statisticsbased heuristic guide search computing mhs solution presented compared approach unique feature heuristic given sfl origin speciﬁcally tailored modelbased diagnosis 8 conclusion future work intermittent failure model crucial modeling complex system estimating probability faulty component exhibit correct behavior important step logic reasoning approach properly handle intermittent failure contrast previous work merely approximates probability particular diagnosis candidate paper present novel maximum likelihood estimation approach barinel compute exact probability component complexity constant factor greater previous approach use heuristic minimal hitting set algorithm staccato underlying candidate generation process compared diagnostic performance barinel classical bayesian reasoning approach reasoning approach consider intermittent component failure behavior synthetic experiment conﬁrmed approach consistently outperforms previous approach demonstrating signiﬁcance maximum likelihood estimation approximation application siemens benchmark gzip sed space suggest barinels superiority 26 win 30 trial exception caused component clustering combination sampling noise future work includes extending activity matrix binary integer exploit component involvement frequency data program loop reducing cost gradient ascent introducing quadratic convergence technique acknowledgement extend gratitude johan kleer peter zoeteweij discussion inﬂuenced reasoning approach furthermore gratefully acknowledge collaboration trader project partner sincerely thank reviewer invaluable feedback reference 1 r abreu ajc van gemund lowcost approximate minimal hitting set algorithm application modelbased diagnosis proceeding symposium abstraction reformulation approximation sara09 aaai press 2009 2 r abreu p zoeteweij aj van gemund new bayesian approach multiple intermittent fault diagnosis proceeding international joint conference artiﬁcial intelligence ijcai09 aaai press 2009 3 r abreu p zoeteweij ajc van gemund accuracy spectrumbased fault localization proceeding testing academic industrial conference practice research technique taic part07 ieee c 2007 4 r abreu p zoeteweij ajc van gemund dynamic modeling approach software multiplefault localization proceeding international workshop principle diagnosis dx08 2008 5 r abreu p zoeteweij ajc van gemund observationbased model fault localization proceeding workshop dynamic analysis woda08 acm press 2008 6 m avriel nonlinear programming analysis method dover 2003 7 rk brayton al sangiovannivincentelli ct mcmullen gd hachtel logic minimization algorithm vlsi synthesis kluwer academic publisher norwell ma usa 1984 8 j kleer getting probability right measurement selection proceeding international workshop principle diagnosis dx06 2006 9 j kleer diagnosing multiple persistent intermittent fault proceeding international joint conference artiﬁcial intelligence ijcai09 2009 10 j kleer minimum cardinality candidate generation proceeding international workshop principle diagnosis dx09 diagnostic competition 2009 11 j kleer ak mackworth r reiter characterizing diagnosis system artiﬁcial intelligence 56 1992 197222 12 j kleer b price l kuhn m r zhou framework continuously estimating persistent intermittent failure probability proceeding international workshop principle diagnosis dx08 2008 13 j kleer bc williams diagnosing multiple fault artiﬁcial intelligence 32 1 1987 97130 14 h sg elbaum g rothermel supporting controlled experimentation testing technique infrastructure potential impact empirical software engineering international journal 10 4 2005 405435 15 feldman g provan ajc van gemund computing minimal diagnosis greedy stochastic search proceeding national conference artiﬁcial intelligence aaai08 2008 16 fijany f vatan new high performance algorithmic solution diagnosis problem proceeding 2005 ieee aerospace conference ieeeac05 ieee c 2005 17 ec freuder r dechter ml ginsberg b selman epk tsang systematic versus stochastic constraint satisfaction proceeding international joint conference artiﬁcial intelligence ijcai95 aaai press 1995 r abreu ajc van gemund artiﬁcial intelligence 174 2010 14811497 1497 18 r greiner ba smith rw wilkerson correction algorithm reiter theory diagnosis artiﬁcial intelligence 41 1 1989 7988 19 groce error explanation distance metric proceeding international conference tool algorithm construction analysis system tacas04 springerverlag 2004 20 mj harrold g rothermel r wu l yi empirical investigation program spectrum proceeding international workshop program analysis software tool engineering paste98 acm press 1998 21 t janssen r abreu ajc van gemund zoltar toolset automatic fault localization proceeding international conference automated software engineering ase09 tool demonstration 22 ja jones mj harrold j stasko visualization test information assist fault localization proceeding international conference software engineering icse02 ieee c 2002 23 l kuhn b price j kleer m r zhou pervasive diagnosis integration active diagnosis production plan proceeding aaai conference artiﬁcial intelligence aaai08 aaai press 2008 24 l lin y jiang computing minimal hitting set genetic algorithm proceeding international workshop principle diagnosis dx02 2002 25 w mayer m stumptner evaluating model modelbased debugging proceeding international conference automated software engineer ing ase08 acm press 2008 26 ej mccluskey minimization boolean function bell technical journal 35 5 november 1956 14171444 27 m qasem prügelbennett complexity maxsat stochastic algorithm proceeding 10th annual conference genetic evolutionary computation gecco08 acm press 2008 28 w quine way simplify truth function amer math monthly 62 1955 627631 29 r reiter theory diagnosis ﬁrst principle artiﬁcial intelligence 32 1 april 1987 5795 30 m renieris sp reiss fault localization nearest neighbor query proceeding international conference automated software engineering ase03 ieee c 2003 31 p struss o dressler physical negation integrating fault model general diagnostic engine proceeding international joint conference artiﬁcial intelligence ijcai89 aaai press 1989 32 bc williams rj ragno conﬂictdirected 1595 role modelbased embedded system discrete applied mathematics 155 12 2007 1562 33 f wotawa variant reiter hittingset algorithm information processing letter 79 1 2001 4551 34 x zhao d ouyang improved algorithm deriving minimal conﬂict set modelbased diagnosis proceeding international conference intelligent computing icic07 springerverlag 2007 