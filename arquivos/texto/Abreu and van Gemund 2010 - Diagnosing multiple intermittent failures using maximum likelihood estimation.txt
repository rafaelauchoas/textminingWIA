Artiﬁcial Intelligence 174 2010 14811497 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Diagnosing multiple intermittent failures maximum likelihood estimation Rui Abreu Arjan JC van Gemund b Department Informatics Engineering Faculty Engineering University Porto Portugal b Embedded Software Group Delft University Technology Faculty Electrical Eng Math CS The Netherlands r t c l e n f o b s t r c t Article history Received 14 September 2009 Received revised form 8 September 2010 Accepted 8 September 2010 Available online 25 September 2010 Keywords Fault diagnosis Bayesian reasoning Maximum likelihood estimation In fault diagnosis intermittent failure models important tool adequately deal realistic failure behavior Current modelbased diagnosis approaches account fact component c j fail intermittently introducing parameter g j expresses probability component exhibits correct behavior This component parameter g j conjunction priori fault probability Bayesian framework compute posterior fault candidate probabilities Usually information g j known priori While proper estimation g j critical diagnostic accuracy present approximations proposed We present novel framework coined Barinel computes estimations g j integral posterior candidate probability computation maximum likelihood estimation approach Barinels diagnostic performance evaluated synthetic systems Siemens software diagnosis benchmark realworld programs Our results approach superior reasoning approaches based classical persistent failure models previously proposed intermittent failure models 2010 Elsevier BV All rights reserved 1 Introduction In modelbased fault diagnosis MBD faults typically assumed persistent In practical situations faults exhibit intermittent failure behavior copiers sheets blank worn roller slips causes paper jam 12 Intermittent failure relevant software fault diagnosis primary context paper Although software supposed inherently deterministic intermittent failure models essential This nondeterminism race conditions caused design faults related properly dealing concurrency A compelling reason modeling abstraction applied reasoning software components In reasoning approach input output values abstracted binary correctness values Consider integer division x10 10 fault 15 Consider input values x 15 x 20 respectively In ﬁrst case component produces correct output second case component fails If inputs modeled correct produced nominal components division com ponent exhibits intermittent failure behavior Although weak fault model stipulate particular fault behavior admits output behavior modeling inconsistently failing software components merely terms weak models results degraded diagnostic performance 4 This work carried TRADER project responsibility Embedded Systems Institute This project partially supported Netherlands Ministry Economic Affairs BSIK03021 program Corresponding author Email addresses ruicomputerorg R Abreu ajcvangemungtudelftnl AJC van Gemund 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201009003 1482 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 A model intermittent failure behavior 9 introduced extension GDE framework 1113 Essentially prior probability p j component c j fault parameter g j express probability faulty component exhibits correct good g behavior g j 0 persistently failing g j 1 effectively ok 0 g j 1 intermittently failing The model incorporated standard Bayesian framework computes posterior probability diagnosis candidates based observations 813 The intermittent failure model shown yield signiﬁcantly better results diagnosis replanning paper sheet paths copiers intermittent component failures 23 software fault diagnosis 4 compared approach based classical persistent failure model An important problem intermittent failure model estimation g j calibration data correct incorrect component behavior typically available Estimating g j component c j straightforward suﬃcient observations available single intermittently failing component involved 9 However multiplefault context usually observations available multiple faulty components involved Consequently isolating extent individual component contributes observed intermittent failure behavior trivial However inﬂuence g j computation posterior probability diagnostic candidate signiﬁcant exact knowledge g j critical overall diagnostic accuracy In 12 45 strategies proposed estimate g j multiplefault context However approaches essentially based approximation In paper present novel approach compute g j conjunction new approach computation posterior candidate probabilities intermittent failure model generalizes classical persistent MBD approaches The approach represents departure current Bayesian framework current diagnosis approaches 4 12 sense 1 resulting g j maximum likelihood estimators instead approximations 2 computation posterior candidate probabilities integral product g j estimation procedure Apart diagnosis accuracy paper address diagnosis eﬃciency The weak intermittent modeling approach combination large systems consider order tens thousands components leads huge diagnostic candidate space In paper present minimal hitting set algorithm features novel diagnosis speciﬁc heuristic directs search generate candidates order decreasing posterior probability equalcardinality groups This feature allows candidate generation process truncated limited number candidates merely 100 experiments effectively capturing posterior probability mass This tailored algorithm enables apply diagnosis technique large systems This paper makes following contributions We present new approach candidate probability computation features maximum likelihood estima tion algorithm compute g j components involved diagnosis The approach coined Barinel1 software implementation method We present new algorithm compute minimal hitting set set conﬂicts called Staccato2 derive time space complexity We compare accuracy complexity Barinel including Staccato current approaches 4 12 synthetically generated observation series based injected faults known g j setpoints We application approach software multiplefault diagnosis evaluate diagnostic perfor mance wellknown Siemens suite benchmark programs extended multiple faults realworld programs space sed gzip The results synthetic experiments application real software systems conﬁrm new approach superior diagnostic performance Bayesian approaches intermittently failing systems known date limited computation cost The paper organized follows In section current Bayesian approach persistent intermittent failure models In Sections 3 4 new approach candidate generation posterior probability computation respectively Sections 5 6 present experimental results synthetic observations real program codes respectively Section 7 describes related work Section 8 concludes paper 2 Preliminaries In section stateoftheart MBD involving intermittent failures 1 Barinel stands Bayesian AppRoach dIagnose iNtErmittent fauLts A barinel type caravel Portuguese sailors discoveries 2 Staccato acronym STAtistiCsdireCted minimAl hiTing set algOrithm R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1483 21 Basic deﬁnitions Deﬁnition A diagnostic DS deﬁned triple DS cid3SD COMPS OBScid4 SD propositional theory scribing behavior COMPS c1 cM set components SD OBS set observable variables SD With component c j COMPS associate health variable h j denotes component health The health states component healthy h j true faulty h j false Deﬁnition An hliteral h j h j c j COMPS Deﬁnition An hclause disjunction hliterals containing complementary pair hliterals Deﬁnition A conﬂict SD COMPS OBS hclause negative hliterals entailed SD OBS Deﬁnition Let S N S P disjoint sets components indices faulty healthy respectively COMPS c j j S N S P S N S P We deﬁne dS N S P conjunction h j h j cid2 cid2 jS N jS P A diagnosis candidate sentence describing possible state state assignment status healthy healthy component Deﬁnition A diagnosis candidate dS N S P DS given observation obs variables OBS SD obs dS N S P cid2 In remainder refer dS N S P simply d identify set S N indices negative literals A minimal diagnosis diagnosis subsumed lower fault cardinality number negative hliterals C d A minimal diagnosis minimal hitting set conﬂicts Deﬁnition A minimal hitting set collection S set d si S si d cid12 cid3d cid13 d si d cid13 cid12 d contains element subset set S proper subset d hitting set There minimal hitting sets S constitutes collection minimal hitting sets Deﬁnition A diagnostic report D cid3d1 dk dK cid4 ordered set K minimal diagnosis candidates SD obs dk cid2 The diagnostic accuracy diagnostic report D depends ranking actual systems fault state d diagnostician traverses D diagnostic approach produces D d accuracy generates testing effort approach ranks d evaluation sections later Assuming ranked higher lower Details discussed experimental The Bayesian approach serves foundation derivation diagnostic candidates 1 deducing candidate diagnosis dk consistent observations 2 posterior probability Prdk candidate actual diagnosis With respect 1 computing Prdk possible candidates ﬁnd Prdk 0 search algorithms typically instead CDA 32 Safari 15 minimal hitting set MHS algorithm conﬂict sets available 13 Bayesian probability framework remains basis In section brieﬂy contemporary approach derivation candidates posterior probability 22 Candidate generation Consider particular process involving set components yields nominal result failure For instance logic circuit process subcircuit cone activity results particular primary output In copier process propagation sheet paper In software process sequence software component activity statements results particular return value The result process nominal pass error fail As explained earlier sequel assume weak component fault models h cid3nominal behaviorcid4 compatible notion intermittency allows faulty component intermittently exhibit correct behavior 1484 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 N sets M components a11 a12 a1M a21 a22 a2M aN1 aN2 aN M conﬂict e1 e2 eN Fig 1 Input diagnostic process Deﬁnition Let S f c j c j involved failing process let S p c j c j involved passing process denote fail set pass set respectively Approaches fault diagnosis assume persistent weak failure models generate candidates based fail sets aka conﬂict sets essentially MHS algorithm derive minimal candidates A wellknown example GDE 13 fail sets derived detecting inconsistencies given certain input output observations Recent approaches allow intermittency account pass sets consistent behavior Examples use pass sets fail sets include logic circuits intermittently failing gates copier software systems mentioned earlier In software pass fail sets originate dynamically proﬁling software components statements modules program run Formally component associated weak model h cid16 okinp cid16 okout okinp okout denote binary correctness components input output The correctness program run modeled chain component models deﬁnition okinp ﬁrst component chain true okout component reﬂects run passes fails In case pass set recorded case fail set essentially conﬂict set recorded In software pass fail set commonly referred hit spectrum 320 Note quality pass fail sets profound effect diagnostic quality possibly intermittencyposterior candidate probability computation schemes addressing paper However paper address pass fail set generation assume number pass fail sets collected static modelbased techniques logic circuits mentioned earlier spectrumbased techniques software A fail set indicts components increases posterior fault probability pass set exonerates components decreases posterior fault probability The extent indictment exoneration computed Bayes rule Deﬁnition Let N denote number passing failing processes Let N f N p N f N p N denote number fail pass sets spectra respectively Let A denote N M activity matrix ai j denotes component j involved process ai j 1 ai j 0 Let e denote error vector ei signiﬁes process passed ei 0 failed ei 1 conﬂict The observations A e input diagnosis process Fig 1 In Barinel approach compute candidates fail sets Staccato MHS algorithm Section 3 23 Candidate probability computation Given multitude candidates typically generated candidate ranking induced posterior probability computation critical diagnostic accuracy Let Pr j p j denote prior probability component c j fault Assuming components fail independently prior probability candidate dk given cid11cid11 cid9 cid9 cid10 cid11 Prdk cid10 Pr j cid10 1 Pr j jS N jS P For observation obsi Ai ei posterior probabilities updated according Bayes rule naive Bayes classifying Prdkobsi Probsidk Probsi Prdk 1 The denominator Probsi normalizing term identical dk needs computed directly Probsidk deﬁned Probsidk 0 obsi dk inconsistent 1 obsi unique dk ε 2 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1485 As mentioned earlier updating candidate candidates derived diagnostic search algorithm updated implying 0clause need considered For large majority cases εclause applies Many policies exist ε 8 Three policies distinguished The ﬁrst policy denoted ε0 equals classical MBD policy persistent weak failures deﬁned follows cid15 ε0 E P E P E F E F E P E F ei 0 ei 1 3 dk 1 2Mdk E P 2M E F 2 numbers passed failed observations explained diagnosis dk respectively A disadvantage classical policy pass sets apart making single faults probable multiple faults help pinpointing faults particular weak fault models rule candidates 2M term Eq 3 In addition way distinguish diagnoses cardinality terms merely function cardinality diagnosis candidate The policies consider component intermittent failure behavior accounting fact components involved pass sets extent exonerated In following distinguish policies ε1 9 ε2 4 deﬁned cid16 cid16 ε1 ε2 gdk 1 gdk ei 0 ei 1 ei 0 gdkm 1 gdkm ei 1 cid17 jdk m ai j 1 number faulty components according dk involved process i3 Note term gdk real individual component intermittency parameters g j As mentioned earlier fact obtaining g j pass fail sets multiple intermittent failures involved far trivial Instead effective intermittency parameter gdk estimated multiplefault candidate dk counting times components dk involved pass fail sets In policies gdk approximated gdk n10dk n10dk n11dk n10dk n11dk cid19cid20 cid21 cid18 i1N cid18 jdk cid19cid20 cid21 i1N jdk cid22 ai j 1 ei 0 cid22 cid23 cid23 ai j 1 ei 1 Policy ε2 variant ε1 approximates probability g j m components dk exhibit good behavior gdkm assuming components dk equal g values This takes account fact failure probability increase number faults involved diagnosis probable true fault explanation jdk cid24 24 Example To illustrate current Bayesian approaches work consider diagnosis candidates dk Table 1 obtained 2 faulty gzip software program components 2553 2763 faulty M 5680 components N 210 test cases N F 12 failed For simplicity refrain reporting activity matrix summarizing terms n11dk n10dk 3 Iversons operator true 1 false 0 1486 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 Table 1 Candidates obtained gzip dk 1347 2553 2763 2682 2745 2110 2745 n11 12 12 12 12 n10 189 16 2 2 Table 2 Diagnostic reports ε0 1347 2682 2745 2110 2745 2553 2763 1 011 10 011 10 011 10 3 3 3 011 10 3 011 10 n01 0 0 0 0 ε1 2110 2745 2682 2745 2553 2763 1347 n00 9 182 196 196 gdk 094 057 014 014 3 3 010 10 011 10 9 017 10 19 061 10 involved simultaneously involved simultaneously involved 2 passed 8 failed processes ε2 2682 2745 2110 2745 2553 2763 1347 3 5 012 10 073 10 9 19 019 10 069 10 n01dk n00dk instead4 The terms n01dk n00dk deﬁned follows cid22 cid26 cid18 cid25cid20 cid21 n01dk n00dk i1N cid18 jdk cid25cid20 cid21 i1N jdk ai j 0 ei 1 cid22 cid26 ai j 0 ei 0 A snippet diagnostic reports obtained different policies given Table 2 Common traditional policies ε0 distinguish candidates cardinality ranking order diagnosis candidates cardinality The diagnostic report yielded ε2 differs ε1 ε2 takes account number faulty components involved process rationale faulty components involved likely run fail Essentially ranking position true fault ε2 requires developer inspect code policies In Section 4 knowledge individual g j yields far better results gdk estima tions 3 Candidate generation STACCATO As mentioned earlier derive diagnosis candidates activity matrix A comprising pass fail sets As fail sets represent conﬂicts apply minimal hitting set algorithm compute diagnosis candidates Due typically large number hitting sets search heuristic focuses search solutions potentially min imal hitting set yield signiﬁcant eﬃciency gains However computed minimal hitting sets potentially little value low posterior probability Therefore solutions need ordered terms relevance possibly aborting search particular number minimal hitting sets boosting eﬃciency MHS algorithms typically generate candidates terms increasing cardinality implying cardinalities highest pos terior probability generated ﬁrst However changes order cardinality class aka ambiguity group 4 For interested readers activity matrix downloaded httpwwwstewitudelftnlabreuaij R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1487 greatly affect diagnostic accuracy In section present approximate statisticsdirected minimal hitting set algorithm coined Staccato aimed increase search eﬃciency Similar contemporary MHS algorithms 131016 algorithm combines components starting cardinality C 1 combination covers conﬂicts In principle algorithm executes depthﬁrst order minimal hitting sets Initially components c j ordered heuristic function H j R Then search algorithm selects components order A generally accepted heuristic 13 assume components members fail sets compo nents likely minimal hitting set The trivial case components involved sets constitute minimal hitting sets cardinality 1 This heuristic given H j Ncid18 i1 ai j 4 Despite generally good performance heuristic particularly tailored diagnostic domain Given set conﬂicts MHS solutions ideally ordered terms Eq 1 However circular dependency ﬁrst need MHS algorithm able solve Eq 1 defeat costeffective approach Hence lowcost heuristic provides good prediction Eq 1 critical success factor A lowcost statisticsbased technique known good predictor ranking software components order likelihood fault spectrumbased fault localization SFL 3 SFL takes spectral input A e produces ranking components order fault likelihood The component ranking computed similarity coeﬃcient measures statistical correlation component involvement erroneousnominal behavior Many similarity coeﬃcients exist SFL best currently Ochiai coeﬃcient known molecular biology introduced SFL 3 It deﬁned follows cid15 s j den j 0 n11 j n11 jn01 jn11 jn10 j den j cid12 0 5 The similarity coeﬃcient indicts components n11 j exonerates components n10 j n01 j In 3 shown similarity coeﬃcients provide ordering components yields good diagnostic accuracy components rank highest usually faulty This diagnostic performance combined low complexity s j key motivation use Ochiai coeﬃcient s j H If A e contains conﬂicts cid3ei 0 ranking returned heuristic function reduces produced simple equation 4 classic MHS problems adequately handled MBDspeciﬁc heuristic Staccato uses SFL heuristic equation 5 focus search minimal hitting set computation Algorithm 1 Algorithm 1 Staccato Inputs Matrix A e number components M stop criteria λ L cid2 Collection conﬂict sets cid2 Rank according heuristic H end n11 j T F pushD j A Strip_Component A j R R j seen seen 1 M Output Minimal Hitting set D 1 T F Aiei 1 2 R rankH A e 3 D 4 seen 0 5 j 1M 6 7 8 9 10 11 12 end 13 R cid12 seen cid2 λ D cid2 L 14 15 16 17 18 19 20 21 22 23 24 25 end 26 return D j popR seen seen 1 M cid13 e A cid13 Staccato A D cid13 cid12 D cid13 popD cid13 j cid13 cid13 j j j is_not_subsumedD j cid13 cid13 Strip A e j end end pushD j cid13 e cid13 cid13 M jn11 j T F 1 λ L 1488 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 Staccato algorithm recursively applied substructures A e generating minimal hitting sets The algorithm features phases The ﬁrst phase processes components level recursion minimal hitting sets lines 512 These components stored second phase algorithm compo nents possibly joined form minimal hitting set A e The second phase processes components hitting set involved subset fail sets For component components searched form hitting set This achieved recursively calling Staccato substructure A e component removed fail sets covered component lines 16 17 respectively The MHS ﬁnally checked subsumption respect MHS earlier line 21 If new MHS subsumed earlier MHS D new MHS discarded Conversely earlier MHS D subsumed new MHS earlier MHS removed D To illustrate Staccato works consider following A e comprising fail sets pass sets c1 1 0 0 1 0 0 0 c2 0 1 0 0 0 0 0 c3 0 1 1 0 1 1 1 c4 1 0 0 0 1 1 1 c5 1 1 1 1 1 1 1 ei 1 1 1 1 0 0 0 conﬂict conﬂict conﬂict conﬂict nominal nominal nominal From A e follows H1 07 H2 05 H3 04 H4 03 H5 08 yielding following rank ing cid35 1 2 3 4cid4 As component c5 involved failed sets added D removed A Strip_Component function avoiding solutions subsumed 5 considered lines 512 After phase A e follows c1 1 0 0 1 0 0 0 c2 0 1 0 0 0 0 0 c3 0 1 1 0 1 1 1 c4 1 0 0 0 1 1 1 ei 1 1 1 1 0 0 0 Next component checked c1 involved failed sets Thus order prepare Staccato ﬁnd components form new hitting set rationale ﬁnd components involved fail sets current component involved column component fail sets involved removed A e Strip function yielding following c2 1 0 0 0 0 c3 1 1 1 1 1 c4 0 0 1 1 1 ei 1 1 0 0 0 Running Staccato newly generated A e yields following ranking cid32 3cid4 line 17 As c2 involved failed sets prepare Staccato ﬁnd components form new hitting set column component fail sets involved removed A e Strip function yielding following c3 1 1 1 1 c4 0 1 1 1 ei 1 0 0 0 Running Staccato newly generated A e yields ranking component 3 MHS current A e For MHS d returned invocation Staccato union d c1 c2 checked 1 2 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1489 set involved failed sets subsumed candidate D added list solutions D lines 1824 At point D 5 1 2 3 Once combinations c2 checked Staccato considers component ranking cid32 3cid4 As c3 involved failed sets Staccato check c3 c1 1 3 subsumes subsumed candidate D line 21 As 1 2 3 subsumed 1 3 1 2 3 removed D 1 3 added After step D 5 1 3 In subsequent iterations Staccato algorithm following sets considered 2 1 3 3 1 4 1 3 However subsumed 1 3 line 21 discarded Therefore Staccato eventually returns D 5 1 3 In example parameters set λ 1 relative search depth L maximum number solutions returned results search Staccato complete In practice exploit Staccatos focusing property 1 decreasing λ fraction λ components ranking actually selected recursion 2 aborting search L solutions returned Experiments synthetic problems shown λ 01 hardly sacriﬁces completeness important MHS solutions missed virtually entire probability mass returned ﬁrst L 100 solutions 1 As result Staccato allows diagnostic approach applied large systems In terms algorithm Staccato comprises following steps Initialization phase ranking components heuristic function borrowed SFL computed lines 14 Algorithm 1 Components involved failed sets added D lines 512 While D L ﬁrst λ components ranking including ones added D lines 1325 following 1 remove component j Ai ei 1 ai j 1 holds A e line 17 2 run Staccato new A e 3 combine solutions returned component verify minimal hitting set lines 1724 We conclude section complexity analysis Staccato To ﬁnd minimal hitting set cardinality C Staccato recursively invoked C times Each time Staccato 1 updates counters component O N M 2 ranks components fault likelihood O M log M 3 traverses λ components ranking O M 4 checks set subsumed subsumes sets D O D Hence overall time complexity Staccato O D M N log MC In practice search focusing heuristic time complexity merely O C D C M N log M With respect space complexity invocation Staccato algorithm store counters component create SFLbased ranking n11 n10 n01 n00 As recursion depth C ﬁnd solution cardinality Staccato space complexity O C M In 1 veriﬁed Staccato generates solutions high search eﬃciency ordered posterior probability mass concentrated ﬁrst L solutions Experiments involving activity matrices size 30 300 diagnostic accuracy optimal low L cid2 100 The performance beneﬁts approach exempliﬁed fact matrices M 1 000 000 N 1000 C 1000 processed average solution rate 886 ms 23 GHz Intel Pentium6 PC 4 GB memory 4 Candidate probability computation BARINEL In section present approach compute g j associated posterior candidate probabilities Prdk given observations A e In approach 1 determine real g j instead gdk 2 apply g j improved epsilon policy compute Probsdk The key idea underlying approach candidate dk compute g j candidates faulty com ponents maximizes probability Predk observations e occurring conditioned candidate dk maximum likelihood estimation naive Bayes classiﬁer dk As approximate strategies proposed previous work assume intermittent failure distributions mild relatively small observations N allow proper estimation g j Note unlike prior p assume prior knowledge g j For wild distributions happen g 099 N 1000 runs spot failure Consequently approach yield g 1 instead g 099 The mild distribution assumption acceptable software regression test suites test data based contain large number passing failing runs measured activity matrices Sections 5 6 For given process terms g j epsilon policy possibly intermittently failing components given cid15 cid24 ε jdkai j 1 g j cid24 1 jdkai j 1 g j ei 0 ei 1 6 Eq 6 reﬂects fact probability process failure minus probability candidate components induce failure g j component product comes failure independence assumption common assumption diagnosis community 1490 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 Algorithm 2 Diagnostic algorithm Barinel Inputs Activity matrix A error vector e number components M Output Diagnostic report D 1 γ cid5 2 D Staccato A e M 1 100 expr GeneratePr A e dk 0 Prdki 0 jdk g j 05 repeat Compute MHS 3 dk D 4 5 6 7 8 9 10 11 12 13 14 15 end 16 return sortD Pr 1 j dk g j g j γ exprg j end Prdki evaluateexpr jdk g j Prdki1 Prdki cid2 ξ In approach g j solved maximizing Predk epsilon policy according arg max G Predk G g j j dk Note particular candidate dk optimum g j values differ candidate d cid13 k components Our approach implementation coined Barinel described Algorithm 2 comprises main phases In ﬁrst phase line 2 list candidates D computed A e Staccato returns list probable diagnosis candidates experiments L 100 candidates In second phase Prdk A e computed dk D lines 3 15 First GeneratePr derives candi date dk probability Predk current set observations e As example suppose following measurements c1 c2 fault ignoring healthy components c1 1 1 0 1 c2 0 1 1 0 e 1 1 0 0 Prei1 2 1 g1 1 g1 g2 g2 g1 As observations independent probability obtaining e given dk 1 2 equals Eq 6 Predk g1 g2 1 g1 1 g1 g2 Subsequently g j computed maximize Predk To solve maximization problem apply simple gradient ascent procedure 6 bounded domain 0 g j 1 The motivation choice simple linearly converging optimization procedure quadratically convergent complex procedure focus demonstrating added diagnostic accuracy maximum likelihood estimation approach minimize computation cost Moreover simple optimization scheme test programs processed Barinel order seconds In ﬁnal phase diagnoses ranked according Prdk A e computed Evaluate accord ing usual posterior update Eq 1 cid17 For singlefault candidates maximum likelihood estimator g1 equals intermittency rate eiN intuitive way determine g1 single faults Consider following A e showing c1 column rows c1 hit e probability occurring Pr c1 1 1 1 1 e 0 0 1 0 Preidk g1 g1 1 g1 g1 As Pre1 given Pre1 g3 1 differentiating expression determining zero root From e ﬁnd intermittency rate g1 3 1 g1 value g1 maximizes Pre1 3 4 easily 4 While R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1491 averaging e offers lowcost analytic solution computing g j approach works single faults motivating numeric gradient ascent alternative multiplefault case contrast approximate averaging techniques ε12 published thusfar Finally illustrate beneﬁts approach consider example presented Section 24 As mentioned previous section ε0 distinguish candidates cardinality As candidates rank probability ii true fault cardinality 2 candidates cardinality 1 2 inspected ε12 distinguish candidates cardinality 2110 2745 2682 2748 outrank true fault 2553 2763 Barinel yields better results better estimation individual g j ranking true fault 2553 2763 diagnosis candidates considered dk 2553 2763 2110 2745 2682 2745 1347 g j g2553 094 g2110 026 g2682 026 g2746 0001 g2745 095 g2745 015 g1347 094 Prdk 78 10 36 10 90 10 58 10 4 5 5 20 As g j expressions need maximized simple bounded 0 1 domain timespace complex ity approach identical reasoning policies presented Section 2 modulo small nearconstant factor account gradient ascent procedure exhibits rapid convergence M C Section 6 5 Theoretical evaluation In order assess performance improvement framework generate synthetic observations based sample A e generated values N M number injected faults C cardinality The motivation synthetic data realworld data ability study effect parameters controlled setting real programs represent parameter settings multidimensional parameter space Component activity ai j sampled Bernoulli distribution parameter r probability component involved row A equals r For C faulty components c j loss generality select ﬁrst C components set g j Thus probability component involved generating failure equals r 1 g A row A generates error ei 1 1 C components generates failure Measurements speciﬁc N M C r g scenario averaged 1000 sample matrices yielding coeﬃcient variance approximately 002 We compare accuracy approach previous work terms diagnostic performance metric W denotes excess diagnostic work spent ﬁnding actual components fault The metric improvement metrics typically software debugging domain measure debugging effort associated partic ular diagnostic method 330 For instance consider M 5 component program following diagnostic report D cid34 5 4 3 1 2cid4 c1 c2 actually faulty The ﬁrst diagnosis candidate leads developer inspect c4 5 Using new information g4 g5 10 prob c5 As components healthy W increased 2 abilities remaining candidates updated leading Pr4 3 0 c4 longer multiple fault Consequently candidate 4 3 discarded avoiding wasting additional debugging effort The components inspected c1 c2 As faulty effort wasted Consequently W 2 5 The graphs Fig 2 plot W versus N M 20 r 06 trends M r values essentially r 06 typical real software Siemens suite different values C g The plots W N 1 similar r corresponds fact average M C r components inspected vain For suﬃciently large N policies produce optimal diagnosis probability healthy diagnosis candidates hitting set approaches zero For small g j W converges quickly large g j computations involving faulty components prone failure large g j faulty components behave nominally requiring observations larger N rank higher For increasing C observations required N faulty components isolated This fact failure behavior caused components reducing correlation failure particular component involvement The plots conﬁrm ε0 worst performing policy mainly fact distinguish diagnosis fault cardinality Only C 1 ε2 ε1 policies equal performance Barinel trivial case approximations g j equal For C 5 plots conﬁrm Barinel superior perfor mance demonstrating correct computation g j relevant In particular approaches deteriorate increasing C 6 Empirical evaluation In section evaluate diagnostic capabilities eﬃciency diagnosis techniques real programs 1492 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 Fig 2 Wasted effort W vs N settings C g 61 Experimental setup For evaluating performance approach use wellknown Siemens benchmark set 14 larger programs space gzip sed obtained SIR 14 The Siemens suite composed seven programs Every single program correct version set faulty versions program Although fault span multiple statements andor functions faulty version contains exactly fault For program set inputs provided created intention test coverage The Space package provides 1000 test suites consist random selection average 150 test cases guarantees branch program exercised 30 test cases In experiments test suite randomly chosen 1000 suites provided R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1493 Table 3 The subject programs Program print_tokens print_tokens2 replace schedule schedule2 tcas tot_info space gzip13 sed415 Faulty versions 7 10 32 9 10 41 23 38 7 6 M 539 489 507 397 299 174 398 9564 5680 14 427 N 4130 4115 5542 2650 2710 1608 1052 13 585 210 370 Description Lexical analyzer Lexical analyzer Pattern recognition Priority scheduler Priority scheduler Altitude separation Information measure ADL interpreter Data compression Textual manipulator Table 3 provides information programs experiments M corresponds number lines code components context For experiments extended subject programs program versions activate arbitrary combinations multiple faults For purpose limit selection 143 183 faults based criteria faults attributable single line code enable unambiguous evaluation The activity matrices obtained Zoltar toolset 21 As program suite includes correct version use output correct version reference We characterize run failed output differs corresponding output correct version passed 62 Performance results In section evaluate diagnostic capabilities Barinel compare Bayesian policies Similar Section 5 aimed C 5 multiple faultcases print_tokens insuﬃcient faults available All measurements fourfault version print_tokens averages 100 versions maximum number combinations available veriﬁed faults active failed run Table 4 presents summary diagnostic quality different approaches expressed terms wasted debug ging effort W Section 5 In agreement previous section results software systems conﬁrm average Barinel outperforms approaches especially considering fact variance W considerably higher coeﬃcient variance 05 schedule2 synthetic case 1000 sample matrices versus 100 matrices experiments real software programs Only 4 30 cases Barinel Apart obvious sampling noise variance particular properties programs Using paired twotailed Students ttest veriﬁed differences means W signiﬁcant cases Barinel clearly outperform approaches noise cause small differences terms W As example print_tokens2 C 2 differences means signiﬁcant case schedule C 1 For tcas C 2 C 5 ε2 marginally outperforms Barinel 05 caused fact program branchfree small M 174 combined large sampling noise σW μW 5 tcas ii failing runs involve faulty components highly correlated occurrence For schedule2 C 2 C 5 ε0 better fact failing runs involve faulty components highly correlated occurrence Hence program effectively single fault spreading multiple lines favors ε0 ranks candidates cardinality ﬁrst 63 Timespace complexity In section report timespace complexity Barinel We measure time eﬃciency conducting experiments 23 GHz Intel Pentium6 PC 4 GB memory Table 5 summarizes timing results The columns programs average CPU time seconds Barinel ε0 ε1 ε2 needed compute diagnostic report D given A e In cases use Staccato generate candidates As expected Barinel expensive previous approximate Bayesian approaches For example Barinel requires 42 seconds average space ε012 needs 1 second The reason numeric gradient ascent procedure The effect gradient ascent costs clearly noticeable ﬁrst programs space somewhat lower convergence speed result fact h j close 1 Note implementation optimized By procedure quadratic convergence performance penalty largely disappear 100 iterations instead 10 000 gaining orders magnitude speedup linear convergence In following interpret cost measurements complexity point view All techniques update D candidate probabilities D determined Staccato The complexity Staccato estimated O N M constant matrix density r 1 Although measurements constant D 100 suﬃces unrealistic assume large systems D scale M yielding O N M probability updates For Table 4 Wasted effort W combinations C 15 faults subject programs print_tokens print_tokens2 replace schedule schedule2 C versions ε0 ε1 ε2 Barinel C versions ε0 ε1 ε2 Barinel 1 4 137 12 112 12 tcas 1 30 280 167 167 167 2 6 182 24 24 24 2 100 269 242 241 245 4 1 228 50 48 44 5 100 287 305 305 307 1 10 216 42 51 19 2 43 261 76 89 34 5 100 308 145 155 66 1 23 162 30 30 30 2 100 251 52 52 50 5 100 338 125 124 119 1 7 172 08 08 08 tot_info 1 19 140 51 61 50 2 100 182 87 117 85 5 100 215 174 209 158 space 1 28 195 22 22 17 2 100 252 36 37 30 5 100 343 95 99 74 gzip 1 7 26 13 13 10 2 20 235 16 15 15 2 21 55 27 27 19 5 11 286 30 31 30 5 21 102 78 67 43 1 9 293 228 215 215 sed 1 5 41 07 07 03 2 35 266 314 294 281 2 10 63 06 06 04 5 91 289 383 356 349 5 1 93 18 14 14 1 4 9 4 R A b r e u A J C v n G e m u n d A r t ﬁ c l I n t e l l g e n c e 1 7 4 2 0 1 0 1 4 8 1 1 4 9 7 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1495 Table 5 Diagnosis cost time seconds Program print_tokens print_tokens2 replace schedule schedule2 tcas tot_info space gzip sed Barinel ε012 453 247 96 41 29 15 15 414 281 92 42 47 62 25 25 14 12 09 82 67 Barinel complexity maximization procedure appears independent size expression M C reducing term constant As report ordered time complexity equals O N M M log M The results Table 5 follow trends predicted complexity analysis With respect space complexity previous Bayesian approaches need store counters n11 n10 n01 n00 probability update candidate Assuming D scales M approaches O M space complexity Barinel slightly expensive given diagnosis dk stores number times combination faulty dk 1 Thus Barinels space complexity components dk observed passed runs 2 estimated O 2C M slightly complex previous approximate Bayesian approaches In practice memory consumption reasonable 53 MB sed largest program experiments dk 1 failed runs 2 7 Related work As mentioned earlier modelbased diagnosis approaches GDE 13 GDE 31 CDA 32 Safari 15 failures assumed persistent Consequently work optimally components fail intermittently Recently model intermittent behavior introduced extension GDE framework 9 later extended 45 As shown results approach improves approximations works providing better results This paper extends earlier work 2 including description MHS algorithm Staccato ii including large realworld programs experimental evaluation space sed gzip Our approach diagnosing multiple intermittently failing defects developed applied software fault diagnosis context In modelbased reasoning approaches automatic software debugging model typically generated source code 25 evaluation models The model generated means static analysis techniques extremely complex While detailed level intermittency issue level associated diagnostic complexity prohibits application programs larger lines code As indication largest program 25 tcas 172 lines code In contrast lowcost algorithm scales hundreds thousands lines code Reasoning approaches based model checkers include explain 19 cid8 slicing 19 compare execution traces correct failed runs However contrast approach fully automatic analysis needs annotated pre postconditions facilitate generation model In addition scale judging fact authors evaluated approaches small programs 174 lines code Our dynamic approach determining component involvement failure A e inspired statistical approaches automatic software debugging known spectrumbased fault localization row A spectrum Wellknown examples include Tarantula tool 22 Nearest Neighbor technique 30 Ochiai coeﬃcient 3 These approaches rank components terms statistical similarity component involvement observed program failure behavior While attractive complexitypoint view approaches consider multiple faults Furthermore similarity metric little value ranking contrast probability metric As MHS computation Reiter 29 showed diagnoses MHSs conﬂict sets exhaustive MHS algorithms presented MBD context In 18132933 hitting set problem solved socalled hitset trees In 16 MHS problem mapped 10integer programming problem Contrary work consider information conﬂict sets It claimed integer programming approach potential solve problems thousands variables complexity results presented In contrast lowcost approach easily handle larger problems In 34 method setenumeration trees derive minimal conﬂict sets context modelbased diagnosis presented The authors merely conclude method exponential time complexity number elements sets components The QuineMcCluskey algorithm 2826 originating logic optimization method deriving prime implicants monotone boolean function dual problem MHS problem This algorithm limited use exponential complexity prompted development heuristics Espresso discussed later Many heuristic approaches proposed render MHS computation amenable large systems In 24 approximate method compute MHSs genetic algorithms described The ﬁtness function aims ﬁnding 1496 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 solutions minimal cardinality suﬃcient MBD solutions similar cardinality dif ferent posterior probabilities Their paper present time complexity analysis suspect costcompleteness tradeoff worse Staccato Stochastic algorithms discussed framework constraint satisfaction 17 propositional satisﬁability 27 examples domain independent approaches compute MHS Stochastic algorithms eﬃcient exhaustive methods The Espresso algorithm 7 primarily minimize logic circuits uses heuristic guide circuit minimization inspired domain Due eﬃciency algorithm forms basis logic synthesis tool Dual MHS problem prime implicants costcompleteness data available allow comparison Staccato To knowledge statisticsbased heuristic guide search computing MHS solutions presented Compared approaches unique feature heuristic given SFL origin speciﬁcally tailored modelbased diagnosis 8 Conclusions future work Intermittent failure models crucial modeling complex systems Estimating probability faulty component exhibits correct behavior important step logic reasoning approaches properly handle intermittent failures In contrast previous work merely approximates probabilities particular diagnosis candidates paper present novel maximum likelihood estimation approach Barinel compute exact probabilities component complexity constant factor greater previous approaches use heuristic minimal hitting set algorithm Staccato underlying candidate generation process We compared diagnostic performance Barinel classical Bayesian reasoning approach reasoning approaches consider intermittent component failure behavior Synthetic experiments conﬁrmed approach consistently outperforms previous approaches demonstrating signiﬁcance maximum likelihood estimation approximation Application Siemens benchmark gzip sed space suggest Barinels superiority 26 wins 30 trials exceptions caused component clustering combination sampling noise Future work includes extending activity matrix binary integer exploit component involvement frequency data program loops reducing cost gradient ascent introducing quadratic convergence techniques Acknowledgements We extend gratitude Johan Kleer Peter Zoeteweij discussions inﬂuenced reasoning approach Furthermore gratefully acknowledge collaboration TRADER project partners Last sincerely thank reviewers invaluable feedback References 1 R Abreu AJC van Gemund A lowcost approximate minimal hitting set algorithm application modelbased diagnosis Proceedings Symposium Abstraction Reformulation Approximation SARA09 AAAI Press 2009 2 R Abreu P Zoeteweij AJ van Gemund A new bayesian approach multiple intermittent fault diagnosis Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI09 AAAI Press 2009 3 R Abreu P Zoeteweij AJC van Gemund On accuracy spectrumbased fault localization Proceedings The Testing Academic Industrial Conference Practice Research Techniques TAIC PART07 IEEE CS 2007 4 R Abreu P Zoeteweij AJC van Gemund A dynamic modeling approach software multiplefault localization Proceedings International Workshop Principles Diagnosis DX08 2008 5 R Abreu P Zoeteweij AJC van Gemund An observationbased model fault localization Proceedings Workshop Dynamic Analysis WODA08 ACM Press 2008 6 M Avriel Nonlinear Programming Analysis Methods Dover 2003 7 RK Brayton AL SangiovanniVincentelli CT McMullen GD Hachtel Logic Minimization Algorithms VLSI Synthesis Kluwer Academic Publishers Norwell MA USA 1984 8 J Kleer Getting probabilities right measurement selection Proceedings International Workshop Principles Diagnosis DX06 2006 9 J Kleer Diagnosing multiple persistent intermittent faults Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI09 2009 10 J Kleer Minimum cardinality candidate generation Proceedings International Workshop Principles Diagnosis DX09 Diagnostic Competition 2009 11 J Kleer AK Mackworth R Reiter Characterizing diagnoses systems Artiﬁcial Intelligence 56 1992 197222 12 J Kleer B Price L Kuhn M Do R Zhou A framework continuously estimating persistent intermittent failure probabilities Proceedings International Workshop Principles Diagnosis DX08 2008 13 J Kleer BC Williams Diagnosing multiple faults Artiﬁcial Intelligence 32 1 1987 97130 14 H Do SG Elbaum G Rothermel Supporting controlled experimentation testing techniques An infrastructure potential impact Empirical Software Engineering An International Journal 10 4 2005 405435 15 A Feldman G Provan AJC van Gemund Computing minimal diagnoses greedy stochastic search Proceedings National Conference Artiﬁcial Intelligence AAAI08 2008 16 A Fijany F Vatan New high performance algorithmic solution diagnosis problem Proceedings 2005 IEEE Aerospace Conference IEEEAC05 IEEE CS 2005 17 EC Freuder R Dechter ML Ginsberg B Selman EPK Tsang Systematic versus stochastic constraint satisfaction Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI95 AAAI Press 1995 R Abreu AJC van Gemund Artiﬁcial Intelligence 174 2010 14811497 1497 18 R Greiner BA Smith RW Wilkerson A correction algorithm Reiters theory diagnosis Artiﬁcial Intelligence 41 1 1989 7988 19 A Groce Error explanation distance metrics Proceedings International Conference Tools Algorithms Construction Analysis Systems TACAS04 SpringerVerlag 2004 20 MJ Harrold G Rothermel R Wu L Yi An empirical investigation program spectra Proceedings International Workshop Program Analysis Software Tools Engineering PASTE98 ACM Press 1998 21 T Janssen R Abreu AJC van Gemund Zoltar A toolset automatic fault localization Proceedings International Conference Automated Software Engineering ASE09 Tool Demonstrations 22 JA Jones MJ Harrold J Stasko Visualization test information assist fault localization Proceedings International Conference Software Engineering ICSE02 IEEE CS 2002 23 L Kuhn B Price J Kleer M Do R Zhou Pervasive diagnosis Integration active diagnosis production plans Proceedings AAAI Conference Artiﬁcial Intelligence AAAI08 AAAI Press 2008 24 L Lin Y Jiang Computing minimal hitting sets genetic algorithms Proceedings International Workshop Principles Diagnosis DX02 2002 25 W Mayer M Stumptner Evaluating models modelbased debugging Proceedings International Conference Automated Software Engineer ing ASE08 ACM Press 2008 26 EJ McCluskey Minimization boolean functions The Bell System Technical Journal 35 5 November 1956 14171444 27 M Qasem A PrügelBennett Complexity maxsat stochastic algorithms Proceedings 10th Annual Conference Genetic Evolutionary Computation GECCO08 ACM Press 2008 28 W Quine A way simplify truth functions Amer Math Monthly 62 1955 627631 29 R Reiter A theory diagnosis ﬁrst principles Artiﬁcial Intelligence 32 1 April 1987 5795 30 M Renieris SP Reiss Fault localization nearest neighbor queries Proceedings International Conference Automated Software Engineering ASE03 IEEE CS 2003 31 P Struss O Dressler Physical Negation Integrating fault models general diagnostic engine Proceedings International Joint Conference Artiﬁcial Intelligence IJCAI89 AAAI Press 1989 32 BC Williams RJ Ragno Conﬂictdirected A 1595 role modelbased embedded systems Discrete Applied Mathematics 155 12 2007 1562 33 F Wotawa A variant Reiters hittingset algorithm Information Processing Letters 79 1 2001 4551 34 X Zhao D Ouyang Improved algorithms deriving minimal conﬂict sets modelbased diagnosis Proceedings International Conference Intelligent Computing ICIC07 SpringerVerlag 2007