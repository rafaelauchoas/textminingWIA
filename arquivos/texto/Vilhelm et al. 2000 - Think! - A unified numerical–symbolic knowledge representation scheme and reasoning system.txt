Artiﬁcial Intelligence 116 2000 6785 Think A uniﬁed numericalsymbolic knowledge representation scheme reasoning Christian Vilhelm acid3 Pierre Ravaux Daniel Calvelo b Alexandre Jaborska b MarieChristine Chambrin b Michel Boniface Lab Biomathématiques Faculté Pharmacie Lille II 3 rue du Pr Laguesse BP83 59006 Lille Cedex France b UPRES EA n 2689 ITM Batiment Vancostenobel CHU Lille 59037 Lille Cedex France Received 27 November 1997 received revised form 7 May 1999 Abstract More applications artiﬁcial intelligence technologies biomedical software equipment These applications multiple intelligent alarms intelligent monitoring diagnosis support Several different knowledge representation schemes use decision trees ﬁrstorder logic expert systems calculations mathematical modeling trained neural network simulations All techniques preferred ﬁeld application overlap Building complete diagnosis support tool require use techniques The problem communication different systems complexity composite result This paper describes Think formalism uniﬁed symbolic connectionist representation scheme tries subsume precited formalisms Being able integrate knowledge representation schemes single model enables use existing knowledge bases existing knowledge extraction techniques communicate work cid211 2000 Published Elsevier Science BV All rights reserved Keywords Knowledge representation Symbolic reasoning Numeric reasoning Truth propagation 1 Introduction One main problems intensive care unit ICU multiplicity sources information room service pieces biomedical equipment papers cid3 Corresponding author Email cvilhelmphareunivlille2fr This work funded Centre Hospitalier Régional Universitaire Lille Institut Technologie Médicale 0004370200 matter cid211 PII S 0 0 0 4 3 7 0 2 9 9 0 0 0 9 5 8 2000 Published Elsevier Science BV All rights reserved 68 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 wall blackboard medical staff patient All information read integrated interpreted synthesized clinician therapeutic action The information available renders interpretation increasingly difﬁcult To assist staff ICU rooms equipped computers running monitoring software These monitoring systems objectives requiring different technologies Basic display centralisation stations alarm monitoring currently available equipment manufacturers HP SpaceLabs typically use knowledge based techniques interpret data advanced display techniques signal analysis Building advanced monitoring systems data interpretation requires know ledgebased techniques 6 But systems single knowledge representation scheme tend limited single monitoring task forecasting alarm analysis therapeutic planning Specialization stems adapting representation formalism type acquired data objectives task Thus global monitoring systems proposed 49 generally use knowledge representation techniques complete different analysis tasks requiring different abstraction levels Knowledge representation formalisms described 12 Problems dealing multiple knowledge sources mainly concern communication different representation formalisms choice subsystem competence scheduling sources These lead complex systems need high performance hardware run difﬁcult maintain As Aiddiag project 11 trying build central lowcost workstation placed patients bedside acting unique information display interpretation help clinician The acquire interpret different types data requiring simultaneous use different knowledge representation techniques The work ICU monitoring ﬁeld taken account existing knowledge bases available But able add new parts knowledge base developed having stop testing modiﬁcations All different knowledgebased subsystems different formalisms capable interoperating easily The resulting kept simple possible integrated low cost platform embedded hardware easily maintained The knowledge base easily understandable clinician judge relevance rules possibly develop rules integrate test accuracy In paper tried explore way dealing multiplicity knowledge representation schemes data types learning strategies proposing uniﬁed representation model 5 subsuming formalisms currently ICU monitoring systems By integrating representation techniques unique formalism communicate cooperate effectively need runtime translations scheduling C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 69 Think based connectionist structure loosely connected explicit paths We introduced symbolic representation objects network concept propagating truth values associated symbols An early model described 8 What complex model wider range representation reasoning possibilities implementation model We shall ﬁrst formalism beginning global overview base elements We shall generalizations existing concepts existing formalisms neurons links added capabilities We shall examine advanced concepts dynamics forward backward chaining implemented learning We shall explain existing formalisms implemented Think interoperate 2 Structural operational deﬁnition concepts The model based structure elements containers processes tubes The structure elements deﬁne network representing knowledge base Reasoning achieved propagating excitations network element making calculations excitations Excitations basic data network pair consisting numerical value associated truth value Fig 1 shows example Think network Containers hold information excitations processes calculations tubes transport information Groups deﬁned subnetworks representing functional units global network groups Fig 1 deﬁning production rules totally connected neural network decision tree These subnetworks exchange information tubes We shall elements constituting network dynamics advanced capabilities model Fig 1 A sample Think network 70 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 Fig 2 Container deﬁnition graphical representation 21 Structure elements 211 Containers holders inputoutput slots network Containers symbol holders persistent internal state They memory elements external communicate network A container deﬁned cid15 A symbol naming container cid15 A numerical value truth value representing state symbol container excitation cid15 One output tubes transmitting containers state excitation elements network cid15 A maximum input tube receiving new values change internal state container cid15 An activation procedure executed internal state container changes cid15 A ﬁring function executed question arrives container The ﬁring function responsible communicating internal state container element requiring state unknown truth value D Unknown establishing cid15 Inheritance relations organize containers fatherchild isa relations cid15 Group membership organize structure elements functional groups cid15 The capacity pass block Blocking containers ﬁlter input propagate different current internal state container input replacing internal stored value Passing containers propagate input receive Containers provide means implementing learning Inputoutput external program carried modifying container excitation querying activation function external program 212 Processes calculation elements Processes active elements network performing calculations tests excitations C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 71 Fig 3 Process deﬁnition graphical representation A process deﬁned cid15 One input excitations cid18i D 1 n coming input tubes Each input active default triggering execution activation procedure arrival excitation speciﬁed inactive trigger activation procedure arrival excitation Input tubes labeled input excitations dated arrival enabling calculations rely delays incoming propagations age input value determine outdated excitations cid15 One output excitation cid27 transmitted output tubes output tubes labeled cid15 A threshold value cid15 A condition test cid15 An activation function fa computing cid27 cid18i decides output excitation propagated output tubes condition threshold parameters cid15 A ﬁring function ff responsible answering questions directed process status output excitation cid15 A learning function fl responsible making modiﬁcations network process characteristics adapt calculated output preferred output received output tubes cid15 Group membership hormone sensitivities organize structure elements functional groups apply global modiﬁers elements groups In fact processes generalization formal neurons neural network simulations This enables implement neural network architectures behaviour directly The difference classic neural networks activation ﬁring learning functions vary process process speciﬁc complexity processes subnetworks 213 Tubes special links Tubes oriented links propagating excitations element container process elements network containers process tubes attenuating amplifying excitations propagated A tube length propagations travel tube given speed respecting given delay beginning 72 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 Fig 4 Tube deﬁnition graphical representation Tubes generalization synapses neural network simulators The introduction delay length speed certain travel schedule excitations going tube enables introduce temporal notions dependencies knowledge base Length makes possible model networks certain physical coherence notions proximity distance 22 Dynamic elements 221 Excitations An excitation association numerical value truth value Truth value continuous value True False additional special values Unknown Mu Unknown means information truth value different median value True False meaning true false The Mu value means information carried sense truth value These special truth values taken account implementation logical operators process functions Due implementation constraints numerical values Think respect format If choose implement value contained excitations 4point fuzzy intervals numbers 4point fuzzy numbers truth values weights thresholds group memberships hormone concentrations When excitation transit tube called propagation 222 Ticks intrinsic time base The network updated steps 1 propagations moved tube according speed length tube 2 required functions required carried 3 new excitations given tubes These basic steps constitute tick Ticks ﬁxed duration waits steps ﬁnish proceeding tick We evaluated possibility ﬁxedduration ticks require taking deferred propagations account case program time perform necessary propagations time allocated tick We determined complexity managing desynchronized propagations deferred clock steps greater added complexity taking external source realtime clock This realtime clock transferred neededfrom C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 73 passing container propagating value clock inactivated inputs processes need 23 Advanced concepts 231 Groups determine subnetworks Structure elements containers processes tubes grouped Each elements group degree membership deﬁning fuzzy group set This leads functionalities cid15 By deﬁning functional groups isolate different separated subnetworks performing speciﬁc task global This way complex networks understandable It possible copy functional groups repeat functionality data minor modiﬁcations structure characteristics elements compare behaviour groups Network design modular cid15 With combination hormones global modiﬁcations behaviour elements included group 232 Hormones introduce global parametrizations Hormones behave like global variables elements contained speciﬁc group hormone present It possible objects processes tubes deﬁne hormone sensitivities When certain hormone concentration speciﬁed certain group hormone concentration applied object concentration hormone group multiplied objects degree membership group The hormone concentration serve parameter functions processactivation ﬁring learning They serve modiﬁers certain characteristics processes threshold tubes propagated truth value propagated numerical value weight speed delay The modiﬁcation induced calculated base value modiﬁed parameter When object hormone sensitivities parameter modiﬁcations calculated separately base value added modiﬁcation D base value cid3 group membership cid3 hormone concentration group cid3 hormone sensitivity ﬁnal value D base value C modiﬁcation 233 Inheritance leads immediate isa relationships Containers organized fatherchild relationships considered isa relations A child container inherit inheritable output tubes fathers inherited tubes inheritable allowing multilevel inheritance These inherited tubes propagate new excitations container output tubes directly connected container 74 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 When containers try propagate excitation inherited tube conﬂict resolution occur The algorithm implementationdependent currently uses lastwin strategy 3 Dynamics 31 Forward chaining The main operating mode Think network feedforward added timerelated possibilities given delays speeds advantages differentiation processes thanks potentially wide variety functions complex calculus logical functions operators Inputs introduced exciting input containers changing excitation making propagate initiate execution activation function processes When blocking container gets excitation input tube external program tests new excitation different currently stored If different new excitation replaces old activation procedure carried new excitation given output tubes When passing container receives excitation performs activation procedure propagates excitation testing The activation procedure display new value activate external module program making possible Think network control environment Excitation arrives tube input propagation The tube certain delay deﬁned ticks Propagation waits delay ticks beginning travel After delay propagation advances speed distance units tick When propagation arrives end tube lengthspeed ticks numerical value truth value multiplied weight tube depending action deﬁned tube Weight transmitted numerical value transmitted truth value modiﬁed hormone actions tube included groups The resulting excitation transmitted output objects tube When output object tube tube example tube1 going container A tube2 tube2 going process B process C element output excitation tube numerical value truth value tube1 modify replace element output tube numerical value truth value weight speed delay tube2 speciﬁed creating source tube tube1 This fact similar hormone actions local scale hormones global modiﬁers When excitation arrives active input process activation function process performed The process activation function fa computes cid27 cid28 D facid181 cid18n condition threshold cid18i value truth tick arrival tube n number input tubes cid27 output excitation process cid28 decision boolean propagate cid27 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 75 fa function This activation function executed tick new excitation come active input Inputs labeled fa compute nonsymmetrical functions subtractions divisions comparisons When excitation arrives inactive input process activation function process performed But occurs later tick input value inactive tube recent excitation received tube In fact excitations arriving processes retained interface tube process functions performed value input value latest excitation arrived input Activation functions processes performed needed propagation comes active input This interesting performance point view Furthermore allows detection active reasoning paths propagations travel active zones network activated needed This useful debug detecting falsely active processes tubes according current inputs 32 Backward chaining Another mode reasoning knowledge based systems backward chaining deduction systems goal driven obtain learning capabilities neural network simulations Think integrates operating modes ﬁring learning functions elements transmitting information reverse direction tubes propagating reverse propagations These reverse propagations types Questions meaning destination tube transmitting reverse propaga tion requires sources value truth establish value truth Learning learning reverse propagation contains numerical value truth value representing preferred output element This means destination tube origin reverse propagation speciﬁes process output incorrect gives right values Reverse propagations arriving processes handled speciﬁc functions cid15 The ﬁring function ff question arrives output tubes If activation function decides propagate cid27 propagated output tube question came If fa decides propagate cid27 question considered pending questions reverse propagated input tubes process The question pending excitation propagated output tube This extends backward chaining production systems ability modify solution search strategy process process adapting semantics inputs cid15 The learning function fl learning reverse propagation arrives output tubes The learning function reduce error output activation function cid27 excitation transmitted learning reverse propagation cid18 0 The long term goal learning function cid27 D cid18 0 D facid181 cid18n condition threshold 76 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 To achieve goal possibilities cid0 By modifying weights input tubes similar gradient backpropagation algorithm applied neural network simulations 12 added possibility modifying weight differently input tube ignoring input tubes depending meaning activation function The rate parameter neural network simulations implemented hormone concentration speciﬁc input process This offers advantage changing rate parameter learning specifying different rates different processes cid0 By sending learning reverse propagations input tubes This correcting small error letting elements situated away inputs correct rest cid0 By adjusting hormone sensitivities process sensitivities input tubes Or modifying hormone concentrations cid0 By changing characteristics elements delays speeds tubes altering structure network All possibilities single function standard learning functions use simultaneously avoid learning functions complex CPUhungry It interesting subsystems use different learning techniques 4 Examples translating existing formalisms We going existing knowledge representation schemes translated formalism retain capabilities 41 Feedforward A forwardchaining production rules implemented easily Fig 5 shows simple production rule Fig 5 Simple production rule IF Container1 AND Container2 THEN Container3 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 77 Fig 6 Decision tree generic node There patternmatching applicable rules tubes directly connected facts containers Of course complex rules possible Because inputs process labeled possible complex rules number premises complex relationships multiple makes network readable explicit Rules inherited upper containers making possible establish general rules Another example feedforward production decision tree generated induction algorithms like C45 7 The translation C45 output ﬁles Think formalism implemented automatic translator directly reading output ﬁles C45 software The tree node implementation shown Fig 6 Results obtained Think network exactly results obtained C45 software test set showing adequation formalism represent production rules Implementation trained neural network simulations fairly straightforward Neural nets usually organized layers types neurons input neurons output neurons neurons hidden layers Input neurons transmit values ﬁrst layer These neurons connected neurons layer Fig 7 shows implementation neuron types input neurons transmit values modiﬁcation containers layer output neurons modify outputs processes The activation function computes sum inputs propagates numerical value positive An output neuron gives value container The container visible outside displaying result activates external program This tested settingup automatic translator program takes save ﬁle existing network simulation application 10 creates corresponding network Fig 7 Input layer output neurons expressed Think formalism 78 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 formalism The functions activation learning functions original neural network Of course neural networks architectures implemented constraint containers needed input output We implemented rules fuzzy expert described 13 The values contained excitations 4point fuzzy numbers The rule implementation Think straightforward results obtained described authors 42 Backward chaining Backward chaining obtained ﬁring function output container asked question The ﬁring function process responsible choosing right solutionsearch strategy depth ﬁrst breadth ﬁrst type search possible mixedsearch method having different ﬁring functions network different processes The ﬁring function container determines question sent upwards tubes sent external program ask user graphical interface example For Fig 5 example Container3 asked question ﬁring function sends questioning reverse propagation Process The ﬁring function process decides send questions simultaneously Container1 Container2 making breadthﬁrst search As Container1 Container2 inputs ask user external program question When containers excitation computed combination subsystems Fig 1 question addressed output containers pass subsystems arriving input containers question asked outside network 43 Learning The implementation untrained neural networks implementation trained neural networks tube weights set 10 creation time learning function implementation gradient backpropagation algorithm modiﬁes tube weights The rate parameter speciﬁed hormone concentration group containing neural network The activation function standard sigmoid function Training carried exciting input containers input pattern training set network computed output reverse propagating response pattern output containers Another learning possibility adapt weights tubes production rules representing conﬁdence certainty By hiding conclusions network introducing reversepropagating conclusions clinicians entered advanced graphical interface 2 learning functions processes rules adapt weights progressively better answers network reinforcing rules leading correct conclusions increasing weights tubes ﬁnd conclusions weakening rules leading false conclusions In way implement rules given clinicians let reﬁne After certain learning time possible remove inadequate rules C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 79 44 Composite To integration capabilities Think ability implement steps reimplementation respiratory monitoring RespAid 1 shown integrated Aiddiag The ﬁrst stage RespAid includes ﬁltering symbolising numerical parameter acquired monitoring device serial interface The ﬁrst network Fig 8 takes raw numbers given monitoring device ﬁlters computing weighted average 3 successive measure points The weights directly implemented tube weights Fig 8 Signal ﬁltering Fig 9 Parameter symbolisation 80 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 length tubes chosen weighted measures arrive tick averaging process These ﬁltered points sent Aiddiag displayed A second stage Fig 9 evaluates trend parameters temporal evolution symbol stable unstable increasing decreasing First network takes values ﬁltered parameter time t t cid0 5 minutes 300 seconds t cid0 10 minutes 600 seconds x D ptm x0 D pt cid0 5m x00 D pt cid0 10m The t processes query Aiddiag collect values parameter The parameter considered stable standard deviation points certain value computed processes psqr standard deviation pthr threshold The networks computes x cid0x0 x0 cid0x00 processes diff tests differences negative process pneg positive ppos If ppos outputs truth value true parameter considered increasing If pneg outputs truth value true parameter considered decreasing If ppos pneg output truth value false tested process pfalse parameter considered unstable The lengths tubes set conclusions arrive simultaneously ﬁnal containers Weights tubes neutral 10 These trends transmitted decision tree detect potential medical complications The trends display mechanism We shown experimentally ability model integrate subsystems different formalisms single network retaining special capabilities By getting different subsystems use single formalism data type simple connect tubes let interchange data conclusions facts We shown different types subsystems constructed ranging mathematical calculus networks expert systems learning neural network simulations We examine formalism implemented 5 Implementation The deﬁnition formalism parallel implementation stress high performance low memory usage offering program able run low cost hardware The current implementation based clientserver model A knowledge server looks reasoning management knowledge network Clients access server create delete modify structure elements modify read excitation containers concurrently The server constantly running performing activation learning ﬁring functions needed Functions executed tick inputs modiﬁed When loops exist Think network server putting forward propagations executing functions nature reasoning mechanism loops adverse effects performance program fact loops necessary closed systems ﬁnal conclusion reinjected inputs subsystems controlling The client linked C library providing API Application Programming Interface access server network socket A special C variable type C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 81 created able use special types numerical truth values excitation 4point fuzzy intervals The client possibility providing server special process functions activation ﬁring learning When function needs executed server sends message client function parameters The client executes function sends message server containing result It useful speciﬁc functions performed clients test integration server In networked environment helps distribute calculation load The application written C language available Linux operating Free Unix compatible httpwwwlinuxorg This implementation placed GPL GNU Public License Any program language able link standard Unix library able access knowledge base formalism The current implementation extensively tested PC compatible computers equipped simple Pentium processor running 133 MHz 32 Mbyte memory The program performs 15000 propagations second 15000 activations par second activation functions integrated server Performance vary size network scales processor performance The steps tick highly parallelizable according locality processing performance scale multiprocessor computers tested The program memory footprint 1400 kbyte storage knowledge base memory efﬁcient 84 bytespropagation 468 bytescontainer 360 bytestube 580 bytesprocess 6 Discussion conclusion We shown experimentally knowledge representation schemes translated formalism retain capabilities We shown implementation Respaid representation schemes interoperate numerical calculus parts The graphical representation easily understandable nonAI specialists They easily express knowledge paper graphical representation C coder necessary implement knowledge base program In fact main drawbacks lack graphical user interface Conceiving implementing graphical knowledge modeler urgent objectives Adding delays speeds lengths tubes makes possible enforce timing dependencies order activation conclusions temporal reasoning Of course Think hard realtime capabilities nonconstant duration tick But introduction external clock time source Think network account clock wall time output conclusions ﬁxed frequencies Adding weights helps strengthen weaken conclusions The static nature existing systems renders evolution knowledge base difﬁcult It rare forced stop program add delete modify knowledge base The implementation Think achieved totally dynamic 82 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 manner object characteristic object structure network modiﬁed runtime It possible attach detach parts Think network dynamically This Aiddiag add remove knowledge base concerning certain piece biomedical equipment required For example Aiddiag monitoring patient clinical staff enters room connect ventilator Aiddiag dynamically adds respiratory knowledge base pool knowledge currently use stopping restarting The new rules immediately available When respirator disconnected respiratory knowledge base removed restarting program By changing functions dynamically test solutions Even tested function included server implement client change run time interrupting server It possible test different structures switching connections groups use By temporarily relocating carryingout functions server client trace happening network content propagations arriving output function meaning runtime debugging knowledge base functions place It possible remove unused knowledge dynamically remove rules leading false conclusions redirect output network The dynamic nature implementation hamper performance Altering structure modifying characteristics elements performance loss Currently systems formalisms mainly use ﬁxed predetermined set operators disjunction conjunction sigmoid function inverse function Since want able run formalisms unique need integrate possible operators functions In deﬁnition Think formalism implementation decided restriction functions operators network Because limitation activation functions use simple operators AND OR simple calculations like sumthreshold function neural networks But possible operators min max complex calculations membership function fuzzy interval It possible complex calculations single process like polynomial equation solver coefﬁcients given excitation transmitted input tubes The possibility exists learning functions limits It possible implement learning algorithm changing learning function different learning strategies different subnetworks groups Due dynamic nature implementation possible change learning strategy runtime adapt current situation It responsibility learning function choose possibilities change inputs tube weights hormones structure modiﬁcation It noted standard learning functions neural network learning C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 83 function uses A Think learning function forced use techniques available Differentiating ﬁring functions makes mixedsearch backtracking strategy possible changing ﬁring function process process Firing questions input tubes time breadthﬁrst search ﬁring questions tubes time depthﬁrst search It possible ﬁre questions tubes tubes Of course freedom drawback By differentiating process functions inadequately network rendered difﬁcult understand It responsibility conceiver knowledge bases limit use complex functions choose ﬁxed set operators functions Also freedom operators prevent proving global completeness consistency Think network possible subnetworks certain operators 7 Perspectives As shown examples Think formalism enables use existing knowledge bases translating It enables reuse existing knowledge extraction techniques like induction algorithms pasting results global translation The development automatic translators enables people use Think program test existing knowledge bases exchange people Think program compare systems results When translator C API provided implementation easy use possible integrate Think capabilities existing programs Expressing distinct knowledge bases single formalism implementing single means tightly integrated Communication carried simple connections tubes conclusions directly This integration makes possible compare results different subsystems different formalisms This ﬁrst important step creating centralized monitoring workstation The graphical nature formalism simplicity dynamics feed forward means nonAI specialists express knowledge directly simple Think networks understand existing rules expressed formalism implementation networks requires C programmer By providing catalogue existing processes implementing certain functions operators tests simple calculus display interaction hope provide ﬁnal users toolbox enable conceive programs connecting containers representing variables chains processes expressing required algorithm This require graphical user interface debugger The freedom given available functions enabled implement signal processing subnetworks directly connected symbolic interpretation having separate programs The clientserver architecture inherently parallelizable reasoning mechanism allows use multiprocessor computers networks computers handle large knowledge bases complex processor hungry 84 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 activation functions hampering performance global As implementation standard C language easily portable architectures The ﬂexibility implementation means functions tested integrated server different algorithms tested modifying dynamically functions structure network runtime This important debugging network testing new solutions We investigating change network structures dynamically achieve advanced learning abilities blending knowledge bases The implementation integrated Aiddiag medical data acquisition report interpretation RespAid module monitor respiratory function patient The constantly fed data acquired biomedical equipment We implementing complex knowledge bases account additional acquired parameters better interpretations signals We investigating possibility incorporating Think networks Aiddiag fully control user interface deciding items display determine screen layout medical status individual patient individual user physician nurse The Think formalism implementation designed respect requirements biomedical ﬁeld But believe resulting usable wide variety ﬁelds great ﬂexibility model implementation References 1 MC Chambrin P Ravaux C Chopin J Mangalaboyi P Lestavel F Fourrier RESPAID Computer aided evaluation respiratory data ventilated critically ill patients Internat J Clinical Monitoring Computing 6 1989 211215 2 MC Chambrin P Ravaux A Jaborska C Beugnet P Lestavel C Chopin M Boniface Introduction knowledge bases patients data management Role user interface Internat J Clinical Monitoring Computing 12 1995 1116 3 M Dojat F Pachet Z Guessoum D Touchard A Harf L Brochard NéoGanesh A working automated control assisted ventilation ICUs Artiﬁcial Intelligence Medicine 11 2 1997 4 B HayesRoth R Washington D Ash R Hewett A Collinot A Viña A Seiver Guardian A prototype intelligent agent intensivecare monitoring Artiﬁcial Intelligence Medicine 4 2 1992 165185 5 M Minsky Logical vs analogical symbolic vs connectionist neat vs scruffy Artiﬁcial Intelligence MIT Expanding Frontiers Vol 1 MIT Press Cambridge MA 1990 6 FA Mora G Passariello G Carrault JP Le Pichon Intelligent patient monitoring management systems A review IEEE Engineering Medicine Biology 1993 2332 7 JR Quinlan Improved use continuous attributes C45 J Artiﬁcial Intelligence Res 4 1996 8 P Ravaux C Vilhelm M Boniface MC Chambrin A neural approach knowledge base systems Proc 14th Annual International Conference IEEE Engineering Medicine Biology Society Paris France 1992 pp 928930 9 DF Sittig NL Pace RM Gardner E Beck AH Morris Implementation computerized patient advice HELP clinical information Computers Biomedical Research 22 1989 474487 10 SNNS Stuttgart Neural Network Simulator Users guide 11 C Vilhelm A Jaborska MC Chambrin P Ravaux A software architecture medical data acquisition report interpretation intensive care unit Proc 18th Annual International Conference IEEE Engineering Medicine Biology Society Amsterdam The Netherlands 1996 C Vilhelm et al Artiﬁcial Intelligence 116 2000 6785 85 12 PH Winston Artiﬁcial Intelligence AddisonWesley Reading MA 1992 13 Z Zalila P Lezy Contrôle longitudinal dun véhicule autonome par régulateur hybride ﬂou classique Proc 5ème Conférence Internationale IPMU Information Processing Management Uncertainty KnowledgeBased Systems Vol 1 1994 pp 478484