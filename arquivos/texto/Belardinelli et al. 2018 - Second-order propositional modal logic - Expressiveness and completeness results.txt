Artiﬁcial Intelligence 263 2018 345 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Secondorder propositional modal logic Expressiveness completeness results Francesco Belardinelli Laboratoire IBISC UEVE IRIT Toulouse France b Department Computer Science University Liverpool UK c LORIA CNRSUniversité Lorraine France Wiebe van der Hoek b Louwe B Kuijer bc r t c l e n f o b s t r c t Article history Received 16 July 2016 Received revised form 14 February 2018 Accepted 14 July 2018 Available online 18 July 2018 Keywords Modal logic Knowledge representation Secondorder propositional modal logic Epistemic logic Local properties In paper advance stateoftheart application secondorder propo sitional modal logic SOPML representation individual group knowledge temporal spatial reasoning The main theoretical contributions pa summarised follows Firstly introduce language multimodal SOPML interpret variety different classes Kripke frames according features accessibility relations algebraic structure quantiﬁcation domain propositions We provide axiomatisations classes SOPML unaxiomatisable remaining classes Secondly introduce novel notions bisimulations prove preserve interpretation formu las universal fragment SOPML Then apply formal machinery study expressiveness Secondorder Propositional Epistemic Logic SOPEL representing higherorder knowledge knowledge agents agents knowledge graphtheoretic notions 3colorability Hamiltonian paths The ﬁnal outcome rich formalism represent reason relevant concepts artiﬁcial intelligence having model checking problem computationally expensive expressive quantiﬁed boolean logic 2018 Elsevier BV All rights reserved 1 Introduction Modal logic nowadays wellestablished area mathematical logic popular formal frameworks artiﬁcial intelligence knowledge representation reasoning 726 This success reasons including expressive ﬂexible formal language enjoys nice computational properties In particular core semantics modal logic lies notion world state Indeed concept natural studying computational notions evolving time previous successive state accounts agency states preferred desired epistemically possible interaction states winning losing terminal initial Indeed distributed computing 25 reactive systems 43 multiagent systems 32 game theory 31 beneﬁted application tools techniques modal logic list means exhaustive Most importantly worlds models modal logic connected means indexed relations Ra index model program transitions epistemic desired alternatives effect possible moves index assume number Corresponding author Email addresses belardinelliibiscfr F Belardinelli wiebeliverpoolacuk W van der Hoek louwekuijerliverpoolacuk LB Kuijer httpsdoiorg101016jartint201807004 00043702 2018 Elsevier BV All rights reserved 4 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 readings speciﬁc program dimension time future past agent Each accessibility relation Ra semantics paired necessity operator cid2a modal language formula cid2aϕ true world w model ϕ true world v aaccessible w Deﬁnition 8 formal deﬁnition Informally read execution future time dimension world considered possible desired agent world result performing formula ϕ holds The language modal logic provides crisp variablefree way expressing variety properties It important realise modal logic wellknown normal axiomatisation K characterises class validities models modal logic mean logics agency correspond K It means typically extensions K As simple example property cid2aϕ ϕ appears reasonable cid2a denotes agent knows desirable read agent believes philosophically knowledge analysed truthful belief 28 One reasons success modal logic relevant cases syntactic scheme corresponds additional constraint accessibility relation Ra case reﬂexivity Ra precise sense suﬃcient necessary validity To appreciate point use little bit assume familiarity modal logic precise deﬁnitions given Section 2 As mentioned central semantics modal logic notion Kripke frame F comprises set W worlds accessibility relations Ra indices I We deﬁne notion validity frames formulate result mentioned follows Ra reﬂexive iff F cid2aϕ ϕ formulas ϕ 1 Characterisations 1 referred correspondence results 6 establish correspondence tween ﬁrstorder property frames reﬂexivity modal validity Another example correspondence ﬁrstorder formula x yRax y Rbx y modal schema cid2bϕ cid2aϕ intuitively says achieved program b achieved knows b Mathematically elegant powerful correspondence theory shortcomings Firstly note case 1 correspondence deﬁned globally valid frame This means instance doxastic reading model situations beliefs true b know Indeed truthfulness agent beliefs tantamount validity ii Kbcid2aϕ ϕ validity enforcing agent bs knowledge Secondly 1 quantiﬁcation appears meta outermost level It impossible distinguish express language modal logic following situations ﬁrst b knows perfect information perfect reasoner b knows priori believes correct Informally represented Kb φ cid2aφ φ wellformed formula In second situation b veriﬁed ϕ happens believe ϕ fact true Informally represented φ Kbcid2aφ φ differs V set V p V As observed 3 allowing quantiﬁcation propositions obtaining language secondorder propositional modal logic sopml issues mentioned addressed The formal deﬁnition pψ given Deﬁnition 8 informally given valuation V tells worlds V p atom p true pψ holds cid6q V q q cid7 p formula ψ holds As regards V ﬁrst example sopml formula pcid2a p p Kbpcid2a p p intuitively expresses beliefs agent correct b know fact Moreover different readings second example represented formulas Kbpcid2a p p p Kbcid2a p p respectively Readers familiar philosophy literature topic recognize difference Kbpcid2a p p p Kbcid2a p p distinction dicto quantiﬁcation Importantly truth pcid2a p p world w enforces truthfulness agent beliefs w local property frame opposed global validity This fact allows agent b consider epistemically possible different world w hold cid6 cid6 The aim paper applications propositional quantiﬁcation secondorder propositional modal logic knowledge representation reasoning exploring securing theoretical foundations In particular original contributions paper summarised follows Firstly Section 2 introduce language multiagent secondorder propositional modal logic provide semantics terms Kripke frames extended domain D sets worlds interpretation quantiﬁcation The differences deﬁnition existing deﬁnitions sopml 112137 addition boolean unrestricted domains quantiﬁcation studied consider modal domains ii use multiagent language allows express higherorder properties knowledge knowledge agents knowledge including truthfulness knowledge inclusion agents knowledge In Section 3 illustrate richness formal framework particularly express local properties modal logic lpml 1617 We compare contrast approach 18 subsumed account forward This validates endeavour viewpoint applications However maintain sopml adopted speciﬁcation language artiﬁcial intelligence knowledge representation appropriate theoretical results formal tools need developed F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 5 To end Section 4 present number results axiomatisation classes validities The key ﬁndings exception singleagent S5 sopml unaxiomatisable commonly classes frames domain quantiﬁcation considered ii frames coarser domain quantiﬁcation sopml common knowledge operator axiomatisable sopml common knowledge unaxiomatisable general As byproduct obtain undecidability results Furthermore Section 5 develop original truthpreserving bisimulations sopml Bisimulations bring fore models considered test limits expressed models language L bisimilar disagree property cid5 Lcid6 shows cid5 expressible L We provide instances occurrences To conclude main aim paper provide formal tools facilitate use sopml language knowledge representation temporal spatial reasoning artiﬁcial intelligence 11 Related work This contribution inspired series papers lpml extension propositional modal logic express local properties 1618 Here instead introducing ad hoc language adjustment local property mind use general framework secondorder propositional multimodal logic In Section 3 provide detailed comparison approaches Monomodal sopml ﬁrst considered 112137 mainly relation axiomatisability undecidability ques tions In particular 21 provided axiomatisations normal modal logics interpreted variety classes frames However considered monomodal languages adopt multimodal perspective Then 37 proved decidability independence results pertaining secondorder extensions monomodal logic S5 Notwithstanding early signiﬁcant results high computational complexity sopml undecidability unaxiomatisability results partially explain sopml studied far propositional modal logic virtually unexplored speciﬁcation language knowledge representation reasoning For instance recently sopml proved complete wrt algebraic semantics quantiﬁcation interpreted arbitrary meets joints 33 Here consider multimodal version sopml epistemic counterpart secondorder propo sitional epistemic logic sopel Among recent contributions 36 shows validitypreserving translation secondorder logic sopml modalities weaker equal S42 implying modalities sopml unaxiomatisable Here add picture multimodal S5 unaxiomatisable Further 12 provided sopml analogues van BenthemRosen GoldblattThomason theorems 22 propositional quantiﬁcation bisimulations analysed context modal logic However kind quantiﬁcation considered 22 preserved standard bisimulations resulting logic provably expressive epistemic logic strictly weaker sopml In 3940 author proves quantiﬁer alternation hierarchy sopml formulas induces inﬁnite corresponding semantic hierarchy class ﬁnite directed graphs As byproduct obtains class structures sopml universal modality Monadic SecondOrder Logic equally expressive Propositional quantiﬁcation considered context richer modal languages temporal log ics ltl ctl A quantiﬁed version ltl called qltl introduced analysed 4948 mainly relation veriﬁcation reactive systems In particular modelchecking problem kalternation fragment proved kEXPSPACEcomplete More recently 41 discusses qctl quantiﬁed version branchingtime temporal logic ctl The authors prove complexity expressivity results logic modal operators sopml They consider different kinds semantics logic comparable sopml frames based treeunwindings To knowledge results known relative expressivity qctl sopml It outside scope paper ﬁnd results interesting question future research More directly related present contribution 34 authors In 3 introduced epistemic quantiﬁed boolean logic eqbl epistemic variant sopml provided axiomatisability modelchecking results Differently reference tackle general sopml deﬁned modalities strictly weaker S5 Indeed paper analyse normal modalities Moreover provide novel unaxiomatisability undecidability results details construction canonical models prove completeness As regards 4 deﬁne novel notion bisimulation generalises given Finally apply results analyse expressivity sopml capturing relevant properties temporal spatial reasoning These investigations extended public announcement logic pal Speciﬁcally 5 authors applied propositional quantiﬁcation pal analyses arbitrary public announcements formalise notions preservation successfulness knowability Hereafter consider extensions purely epistemic setting 2 Preliminaries In section introduce formal machinery rest paper prove preliminary results First present language secondorder propositional modal logic sopml fragments interpretation Kripke frames models 6 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 21 The formal languages To introduce language secondorder propositional modal logic ﬁx set A P atomic propositions ﬁnite set I indices Any language L built A P connectives modal operators said language A P Deﬁnition 1 SOPML The language Lsopml contains formulas ψ deﬁned following BNF ψ p ψ ψ ψ cid2aψ pψ p A P I For language introduced shortly omit parenthesis causes confusion The language Lsopml contains modal formulas cid2aψ index I A general reading according aspect dimension formula ψ holds The box concrete interpretations instance dynamic execution program action ψ holds temporal spatial dimensions ψ deontic situations abide norm ψ true Indices denote agents case cid2aψ represent attitudes relate goals agent desires ψ ψ goal intentional agent intends achieve ψ informational agent believes ψ knows ψ The epistemic interpretation cid2a obtain special attention paper write Kaψ cid2aψ Further quantiﬁed formula pψ informally says interpretations p ψ obtains As usual quantiﬁer dual pψ pψ Analogously Lsopml cid3aφ shorthand cid2aφ Ma dual Ka Hereafter consider extension L sopml Lsopml obtained adding following clause ψ formula cid2ψ formula Instead cid2ψ epistemic interpretation write Cψ common knowledge ψ To hint operator means epistemic logic deﬁne Eψ everybody knows ψ aI Kaψ Then formula Cψ intuitively captures inﬁnite conjunction ψ Eψ E Eψ E E Eψ usual deﬁnitions cid10 apply To sum consider epistemic interpretation modal operators write Ka C deﬁne formulas ψ language L sopel secondorder propositional epistemic logic sopel according following BNF cid2 ψ p ψ ψ ψ Kaψ Cψ pψ p A P I Standard references modal logic 79 epistemic logic refer 2045 We write sopml family logics based languages Lsopml L paper important considering language operator cid2 interpretation In places difference Lsopml L based L sompl important write sopml sopml Throughout Deﬁnition 8 logic The secondorder propositional modal epistemic logic related secondorder quantiﬁcation apparent Section 3 In particular formalism studied relation monadic secondorder logic mso 1236 Section 3 sopml Example 2 To ﬂavour expressivity L sopml present speciﬁcations written language We use variants cid2a notation meaning clear context Using L sopml instance express agent believes agent b unfulﬁlled desires Bacid2pDb p p operators Ba Db represent doxastic desire dimensions agent b respectively cid2 interpreted reachability relation wrt agents moves As example formula pcid2a p cid2b p expresses dynamic context result guaranteed program guaranteed program b provided doxastic interpretation box operator agent b believes agent believes Deontically formula pO p p expresses current world ideal facts ought hold Finally doxasticepistemic formula ii KbpBa p p intuitively expresses agent b knows agent beliefs incorrect iii pBa p p cid2αqBaq q denotes currently agent beliefs correct executing program α ceases case We remark propositional quantiﬁcation reason general properties knowledge truthfulness inclusion equivalence agents knowledge beliefs speciﬁcations ii iii In paper consider fragments L sopml Lsopml To begin languages Lml propositional modal logic Lel propositional epistemic logic L el respectively obtained removing clause pψ deﬁnitions Lsopml Lsopel L sopel respectively Likewise language Lqbf quantiﬁed boolean formulas omits clauses cid2aψ Lsopml propositional logic Lpl deﬁned standard way considering propositional connectives Moreover universal fragment L sopml L sopml deﬁned following BNF asopml L ml L F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 7 Lsopml Lqbf L ml Lml L sopml L asopml Lasopml Lpl Lap ψ p p ψ ψ ψ ψ cid2aψ cid2 ψ pψ Fig 1 Scheme inclusions different languages Notice L asopml negation applies atoms Hence L asopml contains formula form pψ cid3aψ cid3ψ For convenience denote set atoms A P Lap A special role paper played languages Lx sort x set sort symbols ap pl ml sopml We shortly sort x language Lx linked interesting class frames deﬁned terms types y paragraph Deﬁnition 8 This connection precise Lemma 11 item 2 We summarise main inclusions languages Fig 1 We observe languages L x deﬁned x ml sopml sopml We introduce syntactic notions paper Hereafter use cid7 placeholder unary operator cid2a cid2 Q quantiﬁer Deﬁnition 3 Subformula free atoms The sets Subφ frφ subformulas free atoms formula φ L respectively recursively deﬁned follows sopml p Subp cid7φ Subφ Subcid7φ Subφ φcid6 φ φcid6 Subφ Subφcid6 Subpφ pφ Subφ p frφ frp frcid7φ frφ φcid6 frφ frφcid6 frpφ frφ p A sentence formula φ set free atoms frφ The set bndφ bound atoms φ deﬁned usual set atoms q appearing scope quantiﬁer Q q We assume formula φ L sopml frφ bndφ disjoint Actually impose quantiﬁer binds different variable Both constraints enforced loss generality renaming bound variables We deﬁne formula ψ substitute atom p formula In particular substitution create new binding Deﬁnition 4 Free Given atom p frφ formula ψ free p φ iff p appear φ scope quantiﬁer Q q q frψ Alternatively deﬁne ψ free p φ induction structure φ follows φ atomic φ cid7φcid6 φ φcid6 φcid6cid6 φ qφcid6 ψ free p φ ψ free p φ iff φcid6 ψ free p φ iff φcid6 φcid6cid6 ψ free p φ iff q frψ ψ free p φcid6 We ﬁnally introduce notion substitution free formulas 8 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Deﬁnition 5 Substitution Whenever ψ free p frφ substitution φpψ inductively deﬁned follows qpψ cid3 q ψ q different p cid7φcid6pψ φcid6 φcid6cid6pψ rφcid6pψ cid7φcid6pψ φcid6pψ φcid6cid6pψ rφcid6pψ r assumed different p p frφ Intuitively ψ free p φ means substitution p ψ φ create new binding As example q free p rr p φ qp q After introduced semantics clear qp q actually validity blindly substitute p q φ obtain qq q tantamount contradiction But note q free p φ Deﬁnition 5 φpq welldeﬁned Also note procedure guarantee substitution variable r occurs scope single quantiﬁer Q r For instance rr pprq r rr rq r However reading semantics clear formula equivalent rr sq s bounded variables renamed particular formula equivalent formula bound Example 6 As example expressive power sopel consider following speciﬁcation agent b knows knows agent c knows fact d This epistemic situation recast Lsopel following formula pKa p Kb p KcpKa p Kb p KdpKa p Kb p In particular reason agent ds knowledge Indeed agent d know knows ignored b able explicitly point content extra knowledge This recast Lsopel following formula KdpKa p Kb p 2 However d actually know speciﬁc fact knows b ignores expressed following formula p KdKa p Kb p 3 We remark 3 corresponds reading speciﬁcation 2 dicto formalisation Here discuss rede dicto distinction scope present contribution refer instead seminal paper 46 In particular according semantics introduced 3 strictly stronger entails 2 Indeed implication 3 2 validity converse implication 2 3 hold general Thus things sopel allows distinguish readings dicto individual knowledge 22 Kripke frames models To provide meaning formulas secondorder propositional modal logic consider multimodal Kripke frames models extended domain interpretation quantiﬁers Deﬁnition 7 Kripke frame A Kripke frame tuple F cid17W D Rcid18 W set possible worlds D domain propositions subset 2W R I 2W W assigns binary relation W index I As common propositional modal logic pml index I Ra accessibility relation worlds W 7 Differently standard Kripke frames Deﬁnition 7 includes set D 2W admissible propositions interpretation atoms quantiﬁers Clearly Kripke frames Deﬁnition 7 related general frames 744 However notable differences Firstly general frames domain D propositions boolean algebra operators assumption present case Secondly language interpreted general frames usually plain modal logic address quantiﬁcation Indeed propositional quantiﬁcation makes language strictly expressive propositional modal logic interpreted general frames apparent later instance Example 10 recall pml interpreted general frames expressive pml interpreted Kripke frames F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 9 The accessibility relations satisfy properties seriality symmetry transitivity reﬂexivity When interpreting language L sopel assume Ra equivalence relation symmetric transitive ﬂexive line epistemic reading modal operators 45 Finally agent index I w W let Raw w cid6 If Ra equivalence relation Raw equivalence class w according Ra sopml Kripke frames introduce assignments functions V A P D Also U D p U assigns U p coincides V atoms Hence atoms assigned propositions cid6 Raw w To interpret formulas L assignment V D 2W A Kripke model F deﬁned pair M cid17F V cid18 We deﬁne notion satisfaction formulas L sopml Deﬁnition 8 Semantics We deﬁne Kripke model M cid17F V cid18 satisﬁes formula ϕ L ϕ follows sopml world w M w M w p M w ψ M w ψ ψ cid6 M w cid2aψ M w cid2ψ M w pψ cid4 R C iff w V p iff iff iff iff iff M w cid7 ψ M w cid7 ψ M w ψ cid6 w w U D Mp cid6 Raw M w cid6 R C w M w U w ψ cid6 ψ cid6 ψ aI Ra reﬂexive transitive closure cid4 aI Ra Mp U cid17F V cid18 p U cid4 Given Deﬁnition 8 cid2a necessity operator Ra cid2 necessity operator transitive aI Ra By deﬁnition quantiﬁed formula pψ respectively pψ true world w iff reﬂexive closure respectively assignment propositions D atom p ψ true Further case common knowledge operator C M w cid2ψ iff M w cid6 ψ world w reachable w w iii k w w i1 Raw w i1 sequence w 0 wk worlds w 0 w ii wk w I Hence nonepistemic contexts cid2 interpreted reachability operator analogous common knowledge operator C The satisfaction set cid2ϕcid3M formula ϕ model M deﬁned w W M w ϕ We omit subscript M clear context We introduce notions truth validity First write F V w φ shorthand cid17F V cid18 w φ Then φ true w F w φ iff F V w φ assignment V φ valid frame F F φ iff F w φ world w F φ valid class K frames K φ iff F φ F K Also φ true model M M φ iff M w φ world w Finally φ satisﬁable iff model M world w M w φ cid6 cid6 cid6 In rest paper consider speciﬁc classes Kripke frames models feature preeminently literature sopml 2144 To introduce ﬁrst deﬁne operators 2W 2W I aU w W Raw U operator 2W 2W introduced U w W n N sequence w 0 wn w 0 w n w w i1 Raw w i1 I wn U Notice R C deﬁned reﬂexive transitive closure aI Ra CU w W R C w U U Deﬁnition 9 A Kripke frame F iff boolean D boolean algebra closed intersection union complement D boolean algebra closed operators I D 2W modal iff iff A Kripke model M cid17F V cid18 boolean modal respectively underlying frame F We distinguish class Kall Kripke frames class Kbool boolean frames class Kmodal modal frames class Kfull frames Observe analogy monadic secondorder logic class frames corresponds basic interpretation sopml frame uniquely identiﬁed ﬁxing set W worlds accessibility relations domain D equal 2W On hand classes frames related Henkin interpretation mso D possibly strict subset 2W cf 51 Hereafter refer Kall Kbool Kmodalframes nonfull frames contain frames Furthermore classes Deﬁnition 9 consider conditions accessibility lations Ra reﬂexivity r transitivity t symmetry s Hereafter given type y Y bool modal subset τ r t s Kτ y denotes corresponding class frames satisfying properties τ For simplicity Ke y denotes class Krts y frames accessibility relations equivalences class y write Krts 10 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 epistemic frames interpretation sopel We deﬁne function cid5 X Y language sort symbols type sym bols follows cid5ap cid5pl bool cid5ml modal cid2sopml In total obtain 32 classes Kτ y frames However consider 20 subsets τ r t s corresponding 5 normal modalities K T S4 B S5 combined 4 types bool modal Further classes frames introduced instance class formula L sopml deﬁnes proposition D However class directly relevant results introduction requires nontrivial generalisation Kripke frames 44 Thus extensions scope present paper Observe deﬁne ThK φ L K φ clearly sopml ThKall ThKbool ThKmodal ThKfull 4 In Section 41 inclusions strict ﬁrst illustrate applications sopel reasoning knowledge Example 10 To assess expressivity sopel knowledge representation contrast comparative epistemic logic cel 18 cel extends propositional modal logic formulas cid3 b intuitive interpretation agent b knows agent Semantically clause satisfaction formulas world w model M given M w cid3 b iff Raw Rbw In sense cid3 b expresses local property frame F inclusion Rbw Raw We comparison agent agent bs knowledge recast sopel pKa p Kb p 5 6 In particular RHS 5 tantamount satisfaction 6 w model M More precisely arbitrary model M M w cid3 b M w pKa p Kb p The converse holds M counterexamples classes boolean modal models As result formulas cid3 b 6 meaning class models cel mimicked sopel We discuss fact Section 3 Moreover sopel distinctions expressible epistemic logic Related Example 2 Lsopel state b knows beliefs truthful formula KbpBa p p 7 Notice 7 expresses b knows exists fact believed false possibly able explicitly point actual content false belief On hand case proposition p agent b knows wrongly believes expressed following p KbBa p p 8 The formula displayed 7 usually referred dicto reading statement quantiﬁer p appears scope modal operator Ka 8 corresponds reading statement p appears outside scope Ka refer interested reader different readings 46 We remark 7 8 equivalent general 8 strictly stronger 7 Speciﬁcally account difference 7 8 consider frame G Fig 2a W Rcomponents depicted D w w W cid6p u2 Hence G w Clearly G V w 1 Ba p p V p u1 similarly G V p 7 w w 1 w 2 On hand U D G V U w Ba p p Therefore G w cid7 8 w w 1 w 2 Finally observe p Kaφ Kapφ validity class frames As result sopel 8 strictly stronger 7 distinguish dicto readings agent bs higherlevel knowledge cid6 w 2 Ba p p V Finally consider frame Gcid6 Fig 2b D respec cid6 similarly u1 u2 tively way assignments V V cid6 satisfy formulas Lml u models bisimilar implying formula 8 expressed pml We return example Section 5 cid6 w atoms true w 1 w 2 w cid6 8 7 However M w 2 Mcid6 w models based G Gcid6 One check Mcid6 w cid6 Let M Mcid6 cid6 W cid6 w cid6 cid6 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 11 b w 1 b b w 2 u1 u2 frame G b cid6 w cid6 u b frame Gcid6 23 Preliminary results Fig 2 Frames G Gcid6 Example 10 In section prove preliminary results modeltheory secondorder propositional modal logic frequently rest paper To start Lemma 11 extend basic useful results theory quantiﬁcation In particular ﬁrstorder logic item 1 Lemma 11 known coincidence lemma item b substitution lemma cf 19 Lemma 11 1 Let φ formula L sopml F frame Kall If assignments V V cid6 coincide frφ F V w φ iff F V cid6 w φ 2 Recall X ap pl ml sopml cid5 ap pl bool ml modal sopml Let x X Then For ψ L b If F Kcid5x ψ L x model M F Kcid5x cid2ψcid3M D x free p φ F V p cid2ψcid3cid17F V cid18 w φ iff F V w φpψ The proof lemma immediate include appendix These results quantiﬁcation sopml wellbehaved item 1 Lemma 11 models built frame agreeing interpretation free atoms satisfy formulas It follows particular sentence φ satisﬁed assignment F w φ iff model M F M w φ iff model M F M w φ As consequence Lemma 11 item domain quantiﬁcation model includes set denotations formulas model according fragments L sopml Moreover Lemma 11 item 2b syntactic operation substitution φpψ corresponds semantic notion reinterpretation Mp cid2ψcid3 In Section 4 use generated submodels concept commonly modal logic Deﬁnition 12 Generated submodel Given model M cid17W D R V cid18 world w W submodel generated w model Mw cid17W w D w R w V w cid18 W w set worlds reachable w W w D w U w W w U w U W w U D I R wa Ra W 2 w p A P V w p V p W w cid4 aI Raw The subframe generated w deﬁned Fw cid17W w D w R w cid18 The relevant property generated submodel cid6 W w It important note M cid6 φ w Mw M w cid2φ Mw w modal boolean Mw Proposition 13 For y bool modal τ r t s frame F belongs Kτ y Fw Kτ y The proof immediate omit 231 Model checking In order explore computational properties sopml consider complexity model checking problem Then section analyse lack ﬁnite model property sopml Before determine deﬁne complexity model checking ﬁrst need deﬁne size formulas models Our deﬁnition entirely usual 12 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Deﬁnition 14 Formula size Let φ L ψ2 ψ1 ψ2 1 cid7ψ pψ ψ 1 sopml formula The size φ denoted φ given recursively p 1 ψ1 Similarly size model M deﬁned straightforward way Deﬁnition 15 Model size The size M model M cid17W D R V cid18 given M W D cid6 V p p A P A model M ﬁnite M cid6 aI Ra Now deﬁned sizes formulas models deﬁne model checking problem determine complexity Deﬁnition 16 Model checking SOPML Given formula φ L checking problem sopml determine M w φ sopml ﬁnite model M world w M model Then able prove following complexity result Theorem 17 Model checking complexity The model checking problem sopml PSPACEcomplete respect φ M Proof As regards hardness reduce satisﬁability quantiﬁed boolean formulas sopml model checking Given mula φ Lqbf consider frame F cid17w w w w cid18 arbitrary assignment V deﬁne M cid17F V cid18 Then φ satisﬁable iff M w cid23pφ cid23p atoms φ Because satisﬁability problem quantiﬁed boolean formulas PSPACEhard follows model checking sopml PSPACEhard As regards PSPACE algorithm PSPACE model checking sopml shown Algorithm 11 It based standard model checking algorithms modal logic 8 run polynomial time The difference standard algorithms modal logic Algorithm 1 need extra case p operator This extra case Algorithm 1 takes polynomial space opposed polynomial time Algorithm 1 recursively calls The depth recursion bounded φ Furthermore stage need cid6 D ﬁrst compute It follows recursive calls memory time For example pψ step U U X cid2ψcid3Mp space requirement Algorithm 1 polynomial respect φ M cid2 ﬂush memory dedicated computing cid2ψcid3Mp computing cid2ψcid3Mp U U U cid6 Algorithm 1 Computation satisfaction set cid2φcid3M switch φ case p return V p case ψ return W cid2ψcid3M case ψ ψ cid6 return cid2ψcid3M cid2ψ cid6cid3M case cid2aψ case cid2ψ case pψ return w W Raw cid2ψcid3M return w W Ag Raw cid2ψcid3M cid4 initialise X W U D set X X cid2ψcid3Mp U end return X As result model checking sopml computationally complex corresponding problem quantiﬁed boolean formulas Thus enhanced expressiveness comes extra computational cost compared qbf With respect propositional modal logic complexity increases PTIME PSPACE However expected given extra expressive power propositional quantiﬁcation We note complexity model checking problem depends strongly φ M The recursion Algorithm 1 seen tree depth bounded φ branching factor bounded M So 1 Strictly speaking algorithm computes cid2φcid3M easily determine M w φ F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 13 algorithm called Mφ φ M time complexity exponential φ polynomial M times As result space complexity algorithm polynomial aI cid6 cid6 Furthermore obtain PSPACE result concise representation M So far deﬁned size M M W D V p This means things simply p A P count number elements D components M So effect treating D list In cases natural representations D concise Suppose example M domain D 2W Then instead representing D list sets represent symbolically 2W More generally assume D given membership function f D Y W f Y W The requirement place f hard compute assume determining f Y W polynomial space respect W Ra Then model checking problem sopml PSPACEcomplete φ M φ W R V exponentially smaller With regard hardness note hardness proof Theorem 17 uses ﬁxed model regard deﬁnition model size irrelevant It follows model checking problem PSPACEhard respect φ W R V With regard PSPACE slight modiﬁcation Algorithm 1 suﬃces Suppose replace pψ case algorithm case pψ initialise X W U 2W U D set X X cid2ψcid3Mp U end end return X The proof amended algorithm runs PSPACE respect φ W R V way proof Theorem 17 omit 232 Finite model property We brieﬂy argue sopml ﬁnal model property Consider following set formulas cid9 cid3acid10 cid2acid3acid10 pcid2a p cid2acid2a p cid2app cid2ap Now suppose cid9 holds pointed model M w Then ﬁrst formulas cid9 require Ra serial w Raw enforces transitivity Ra w Finally world w satisﬁes cid2app cid2ap Example 24 item 1 know Rav v v Raw implies Raw w Ra irreﬂexive w Raw But easy verify transitive serial irreﬂexive relation Raw requires Raw inﬁnite In words ﬁnite set cid9 formulas sopml inﬁnite models Theorem 18 The logic sopml ﬁnite model property Theorem 18 generalisation result presented 40 Section 3 As section SOPMLE MSO suggests demonstrates sopmle sopml universal modality expressive power mso And obviously mso force model inﬁnite use relational properties example sopmle Note example dont assume universal modality language 3 Local properties modal logic In introduction discussed difference global property expressed modal schema cid2aϕ ϕ validity entails accessibility relation given frame reﬂexive local property represented sopml formula pcid2a p p shall frames holds exactly reﬂexive worlds Along line 1618 sophisticated account forward express local properties adding dedicated modal operators basic propositional modal logic To present language local properties modal logic lpml compare approaches generally discuss expressive power sopml consider monadic secondorder logic ﬁrstorder fragment interpreted Kripke frames Given frame F cid17W D Rcid18 set A P atoms deﬁne mso alphabet containing binary predicate constants Ra agent index I unary predicate variable P atom p A P set X individual variables Then mso formulas cid10 Lmso deﬁned BNF follows cid10 P x x y Rax y cid10 cid10 cid10 xcid10 P cid10 I x y X 14 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 We consider ﬁrstorder fragment Lfo msoobtain removing clause P cid10 BNF This ﬁrstorder language considered 18 Moreover denote L1 fo fragment Lfo containing formulas free individual variable This fragment wellknown rich express properties frames reﬂexivity symmetry transitivity note variable needed transitivity free As regards interpretation mso fo FirstOrder formulas assignment ρ function associating world w W individual variable x set U D predicate variable P For w W U D variants ρ x w ρ P U deﬁned similarly sopml Deﬁnition 19 Semantics MSO We deﬁne frame F cid17W D Rcid18 satisﬁes formula cid10 Lmso assignment ρ F ρ cid10 follows F ρ P x F ρ x y F ρ Rax y F ρ cid10 F ρ cid10 cid10cid6 F ρ xcid10 F ρ P cid10 iff iff iff iff iff iff iff ρx ρP ρx ρ y Raρx ρ y F ρ cid7 cid10 F ρ cid7 cid10 F ρ cid10cid6 w W F ρ x w cid10 U D F ρ P U cid10 Obviously Deﬁnition 19 induces interpretation formulas Lfo In particular formula cid10x L1 fo write F w cid10 denote F ρ cid10 ρx w F cid10 F w cid10 w W The different interpretation satisfaction relation sopml mso respectively clear context Note transitive closure R R easily deﬁned mso We illustrate relationship secondorder propositional modal logic monadic secondorder logic mso translation S T extends standard translation modal ﬁrstorder logic 7 S T xp S T xφ S T xφ φcid6 S T xcid2aφ S T xcid2φ S T xpφ P x S T xφ S T xφ S T xφcid6 yRax y S T yφ x y S T yφ yR P S T xφ Clearly formula φ L sopml S T xφ Lmso formula x free individual variable If ψ Lml purely propositional modal formula S T xψ Lfo ﬁrstorder formula obtained standard translation In particular S T xψ belongs L1 fo We following preservation result standard translation completeness proof Lemma 20 For model M cid17F V cid18 world w W formula ψ L sopml M w ψ iff F ρ S T xψ ρx w ρP V pi The proof standard Appendix A As consequence Lemma 20 onetoone correspondence formulas sopml standard translations mso following sense frame F sopml iff property cid23P S T xψ Lmso holds F cid23P validates universal closure cid23pψ formula ψ L unary predicates appearing S T xψ We brieﬂy recall basic modal theory local deﬁnability refer interested reader 79 details We use θ θcid23a cid23p emphasise sequences cid23a indices cid23p atoms formulas Lml Likewise use fo ﬁrstorder formulas free variable interpreted states cid10cid23a x denote cid10 mentions cid10 L1 cid23a indices x free variable Deﬁnition 21 Let θ Lml cid10 L1 fo 1 θ deﬁnes frame property cid10 iff frames F F θ iff F cid10 2 θ locally deﬁnes cid10 iff F w F F w θ iff F w cid10 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 15 Table 1 As 18 Table 1 cid10cid23a x property state x cid4cid23a object language cid4cid23a holds w iff cid10cid23a x holds M ρx w θcid23a cid23p cid2a p cid2b p cid2c p cid2acid2b p cid2a cid2a p p cid2a p cid2bcid2c p cid2a p cid2bcid2c p cid2a p cid2bq cid2c p q cid10cid23a x yRbx y Rax y y zRax y Rb y z Rc x z y Rax y Rax x y zRax y Rbx z Rc y z zRax z y Rbx y Rc y z y zRax y Rbx z y z Rc x y cid4cid23a Supa b Transa b c Sera Reﬂa Eucla b c Densa b c Funca b c As examples Deﬁnition 21 consider wellknown schemes T cid2aϕ ϕ 4 cid2aϕ cid2acid2aϕ B ϕ cid2acid3aϕ locally deﬁne properties reﬂexivity transitivity symmetry frames Furthermore Lemma 20 clear θ Lml locally deﬁnes cid23P S T xθ Lmso cid23P S T xθ equivalent cid10 L1 fo In theory pml formula θ locally deﬁnes cid10 mild conditions hold obtains following connection axiomatisation completeness axiomatisation Ax complete class K frames Ax θ complete class F K F xcid10 frames satisfying condition cid10 So instance taking basic modal logic K sound complete respect class K frames logic K T sound complete respect class F K F xRax x I class reﬂexive frames As examples S5 K T 4 B sound complete respect class S5 F K I Ra equivalence relation logic S5 cid2bϕ cid2cϕ b c I sound complete respect F S5 F xRcx Rbx b c I This appealing modular feature modal logic Yet remarked van Ditmarsch et al 1618 applied adds formula θ global property assuming θ axiom implies validity For instance adding formula Baϕ ϕ axiom order model agent beliefs correct implies resulting logic common knowledge beliefs correct fact remain true To compare approach based sopml van Ditmarsch et als lpml ﬁrst provide brief account 31 Local properties lpml This section lpml based 1618 refer reader references extensive exposition The term logic maybe appropriate lpml speciﬁc approach connect modal object language fo introduction relational atom cid4 cid4cid23a modal formula θ Lml ﬁrstorder property cid10 L1 way Kripke models cid4 interpreted cid10 locally More precisely language lpml extends Lml formulas type cid4cid23a interpretation provided associated formula cid10cid4cid23a x L1 fo according following satisfaction clause M w cid4cid23a iff F w cid10cid4cid23a x 9 By clause 9 formula cid4cid23a expresses locally ﬁrstorder property cid10cid4 w Then lpml investigates operator cid4 help object language build bridge modal formulas θcid4 ﬁrstorder properties cid10cid4 θcid4 locally deﬁnes So instance cid4a Reﬂa cid10cid4a x Rax x cid4b c Supb c cid10cid4b c x yRcx y Rbx y examples Table 1 Recalling operator cid4 object language lpml 18 adds basic modal logic K speciﬁc formulas θcid4 Lml axiom Axcid4 inference rule Rcid4 Further 18 Theorem 2 provides suﬃcient condition relationship θcid4 cid4 cid10cid4 called local harmony K Axcid4 Rcid4 sound complete axiomatisation class models satisfy cid10cid4 Deﬁnition 22 Local harmony Formulas θcid23a cid23p Lml cid10cid23a x L1 deﬁnes cid10 ii cid4 expresses cid10 locally fo cid4cid23a lpml local harmony iff θ locally A model M lpml tuple cid17W R I V cid18 W R V pml I assigns ﬁrst order property relational atom cid4 We follow 18 assuming symbol cid4θ cid23a Lmlformula θcid23a cid23p foformula cid10cid23a x local harmony Icid4θ cid23a cid10cid23a x To explicit L1 model M intended model lpml One lpml language express formula L1 fo restrictions object language relational atoms cid4 added standard pml Table 1 principle extended atom cid4cid23a property cid10cid23a x However aim lpml express arbitrary ﬁrstorder properties cid10 reason locally properties like truthfulness agent beliefs agent c knowing b In particular exist modal formula θ locally deﬁnes cid10 cid10 equivalent cid23P S T xθ lpml expresses ﬁrstorder properties adding atoms like Reﬂa Supb c respectively We reckon sopml allowing 16 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 quantiﬁcation propositions pBa p p pKb p Ka p alternative way study local properties natural lpml provably expressive sense explain 32 Local properties lpml sopml frames We ﬁrst compare lpml sopml frames On classes frames notable differences discuss Section 33 Here formulas cid10cid4cid23a x θcid4cid23a cid23p local harmony atom cid4cid23a formula cid4cid23a equivalent cid23pθcid23a cid23p L sopml class frames Hence sopml expressive lpml To precise note lpml able reason local properties triples θcid23a cid23p cid4cid23a cid10cid23a local harmony Recall lpml model M guarantees intended model We interpret intended model M model sopml discards lpml information connecting cid4cid23a cid10cid4cid23a x adds constraint model Now consider translation t lpml formulas sopml formulas distributes connectives modal operators says tcid4cid23a cid23pθcid23a cid23p We obtain following equivalence result Theorem 23 For intended lpml model M w M formula ϕ lpml M w ϕ iff M w tϕ A proof Theorem 23 given Appendix A This theorem implies sense lpml sopml θcid23a cid23p cid4cid23a cid10cid23a local harmony reason locally scheme θ use universal closure cid23pθ sopml atom cid4cid23a lpml The result suggests ways sopml appropriate reason local properties cases cid10 locally deﬁned formula θ Lml θ cid23P S T xθ equivalent cid10 conversely θ deﬁne ﬁrstorder property cid10 locally cid10 cid23P S T xθ equivalent cid10 Hereafter consider similar cases Example 24 Consider following ﬁrstorder formulas cid2 cid101 Rax x irreﬂexivity cid102 x1 xn inRax xi cid103 yRax y Ra y x x y antisymmetry cid104 yRbx y Rax y Ra Rb intersection cid105 yRax y Rbx y Rcx y Rc contains intersection Ra Rb icid7 jn xi cid7 x j having n asuccessors cid2 It wellknown ﬁrstorder properties deﬁnable modal logic 79 However consider following formulas sopml ϕ1 pcid2a p p cid2 ϕ2 p1 pn ϕ3 pp qcid3aq cid3a p q ϕ4 pcid2a p cid2bp ϕ5 pcid2c p qcid2aq cid2bq p cid3api cid2 jn jcid7i p j ϕi locally deﬁnes cid10i 1 5 We formalise result following lemma Lemma 25 Consider formulas ϕi Lsopml cid10i L1 assume ρx w Assume F frame fo Example 24 1 5 Let x free variable cid10i F w ϕi iff F ρ cid10i The proof items lemma Appendix A In particular sopml express properties deﬁnable standard modal logic Example 26 Distributed knowledge To come example epistemic logic interesting notion collective knowledge distributed knowledge Dϕ The intuition distributed knowledge knowledge wise man cf 20 agents shared knowledge The typical example situation instance agent knows ϕ knows ϕ ψ implying distributed knowledge ψ A concrete example goes F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 17 follows distributed knowledge group agents provided everybody knows birthday agents share birthday The notion distributed knowledge Dϕ n agents axiomatisation sound complete respect models corresponding relation R D intersection individual agents acces sibility relations However intersection locally deﬁnable modal logic modal properties distributed knowledge implicit knowledge called instance 3047 However sopml Example 245 express agent c knows exactly distributed knowledge agents b pKa p Kc p pKb p Kc p pKc p qKaq Kbq p 10 Notice 10 uses exactly idea typical example distributed knowledge agents discussed agent c knows fact p p distributed knowledge b exists fact q knows q b knows q p So able derive p pooling knowledge Can generalise n agents Indeed follows Deﬁne cid7 ϕ pDp q1 qn1K1q1 Kn1qn1 Kn qi p let cid10 yR1x y Rnx y R D x y Then prove following result Proposition 27 For frame F F w ϕ iff F w cid10x The proof generalisation proof Lemma 25 cid105 It follows operator D locally expresses distributed knowledge ψ agents 1 n cid7 pK p Dp ϕ Dψ Discussion From Examples 24 26 follows sopml strictly expressive propositional modal logic express local properties dealt lpml Example 24 indicates sopml axiomatise frames characterised pml instance formula pcid2p p characterises irreﬂexive frames way pcid2p cid3cid3p characterises intransitive frames Venema 52 calls characterisations negatively deﬁnable The idea following suppose formula θ Lml locally deﬁnes property cid10 formula locally deﬁnes cid10 As example Rax x locally deﬁned cid2a p p negation Rx x locally deﬁned cid2p p equivalently cid2a p p require frames formula atom p false Gabbay 23 came derivation rule axiom characterise irreﬂexivity 52 analyses generally negative characterisation class frames leads axiomatisation class For discussion important realise reﬂexivity actually characterised modal scheme cid2aϕ ϕ contrast formula pcid2a p p sopml But irreﬂexivity characterised negation sopml formula pcid2p p Moreover notice sopml allows interpret formulas locally reason models reﬂexive irreﬂexive points From Example 24 learn ﬁrstorder properties cid10 characterised modal formula θ Lml formula sopml characterising It possible come formulas sopml correspond ﬁrstorder formula sopml reason locally lpml A ﬁrst example formulas pδ δ cid3p cid3cid2p cid3cid21cid3p cid2p cid21 interpreted converse relation R cid2 As argued 52 δ scheme characterises Dedekindcomplete frames linear orderings frames δ elementary ﬁrstorder deﬁnable A example Löb formula pcid2cid2p p cid2p formula characterises frames R transitive converse wellfounded 52 p 8 To conclude comparison sopml lpml observe cid4 operators act fact sort linguistic black boxes bringing metalanguage theory ﬁrstorder logic object language modal logic In contrast sopml transparent object language In addition ﬁrstorder conditions 18 suitable modal counterpart Indeed axioms Axcid4 cid4cid23a θcid4cid23a cid23p 18 sense long propositional modal formula θcid4 related cid4 case discussed We later assumed axiomatise sopml Revisiting Example 24 surprise sopml formulas example use existential quantiﬁcation following Lemma 28 For ﬁnite set p1 pn atoms deﬁne cid23p p1 pn welldeﬁned pqφ equivalent qpφ Then frames F worlds w assignments V formulas φ SOPML 18 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 1 F w φ iff F w cid23pφ 2 F w cid23frφ φ iff F V w cid23frφ φ 3 F w φ iff F V w φ φ sentence frφ 33 Local properties sopml nonfull frames So far looked SOPML represent local properties frames Here consider local proper ties frames coarser domain quantiﬁcation Let return formula pKa p p 11 intended express knows true Looking semantics sopml 11 holds M w U D Raw U implies w U 12 If domain D equal power set 2W 12 equivalent w Raw Ra locally reﬂexive In general guarantee D equal 2W So nonfull frames 11 characterise reﬂexivity In fact frames sopml formula characterises reﬂexivity Whether important downside sopml depends object study If logic reason graphtheoretic properties like reﬂexivity consider sopml frames frames sopml express properties If hand goal reason particular subject knowledge use graphs represent subject sopml useful nonfull frames After 11 general correspond reﬂexivity express fact known truewith caveat The quantiﬁer p quantiﬁes valuations p domain D So strictly speaking 11 means element U D knows U U true There main ways interpret 1 We explicitly retain reference D interpret 11 atomic resp boolean modal proposition knows true D resp boolean modal domain quantiﬁcation 2 We consider D set properties relevant problem modelling In interpretation formula pKa p p hold proposition T 2W D T false known However T D relevant property dont care wrong 3 We interpret D set propositions conceptualized This allows interpret 11 thing knows true understood able conceptualize proposition precondition knowing proposition As example situation suppose Alice looking blue object However trick light object green She forms belief object green This belief false pKa p p hold Now suppose Bob looking object Bob culture distinguish green blue Instead Bobs culture uses single concept colours translate greenblue Bob makes observation Alice based observation forms belief object greenblue This belief correct assuming bs beliefs correct pKb p p holds2 The difference Alice Bob lie accessibility relations Instead caused different ways divide set possible worlds concepts The conditions D place restrictions conceptual space assume agents If D boolean concepts green blue need accompanied concepts green green blue If D modal concept green needs accompanied concept knowing green D set worlds corresponds concept Regardless interpretation choose formula discussed Table 1 expresses property sopml models The properties expressed formulas Table 2 Note properties Table 2 generalisations Table 1 equivalent counterparts D The properties question require slightly awkward notation conceptually hard grasp correspond properties Table 1 consider sets worlds domain D Take example pcid2a p p On frames corresponds w Raw equivalent superset Raw containing w U 2W Raw U w U The corresponding property nonfull frames obtained replacing 2W domain D 2 We somewhat oversimplifying Bob probably capable conceptualizing different subsets greenblue dark greenblue light greenblue Regardless possible Bob conceptual distinction actual perceived colours object Alice distinction F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 19 Table 2 The model properties expressed sopml formulas sopml formula pcid2a p cid2b p pcid2c p cid2acid2b p pcid2a pcid2a p p pcid2a p cid2bcid2c p pcid2a p cid2bcid2c p pcid2a p cid2bq cid2c p q Model property U DRaw U Rbw U U DRc w U Rb Raw U v Raw v U DRaw U w U U DRbw cid2 U vRaw v Rc v cid2 U U DRaw cid2 U Rc Rbw cid2 U U 1 DU 2 DRaw cid2 U 1 Rbw cid2 U 2 Rc w cid2 U 1 U 2 Table 3 Axiomatisation results languages L common knowledge S5 I 1 Axiomatisable 21 S5 I 2 Unaxiomatisable Theorem 50 K Unaxiomatisable 21 Axiomatisable Theorem 43 Full Modal Boolean Axiomatisable 21 Axiomatisable Theorem 43 All Axiomatisable Theorem 43 Table 4 Axiomatisation results languages L S5 I 1 Axiomatisable 21 Full common knowledge S5 I 2 Unaxiomatisable Theorem 50 K Unaxiomatisable 21 Modal Axiomatisable Theorem 43 Unaxiomatisable Theorem 62 Unaxiomatisable Theorem 57 Boolean All Axiomatisable 21 Axiomatisable Theorem 43 Unaxiomatisable Corollary 63 Unaxiomatisable Corollary 60 4 Incompleteness One wellestablished way understand logic introduce axiomatisation After inﬁnite number valid formulas explicitly enumerate But complete axiomatisation implicitly know valid formulas understand valid It turns variants SOPML axiomatisable Still logic unaxiomatisable worthwhile prove reasons Firstly course proof axiomatisation exists stop trying ﬁnd axiomatisation Secondly unaxiomatisability result arguably provides insight theorems logic axiomatisation tell logic particularly computational complexity In paper discuss different variants sopml differ domain quantiﬁcation modal boolean restrictions accessibility relations reﬂexive transitive symmetric availability common knowledge number indices For variants axiomatisability unaxiomatisability results known 21 3637 In particular 21 provides axiomatisations single agent normal logics interpreted boolean generic frames axiomatisation epistemic frames Here extend results multimodal case ﬁrst time Tables 3 4 overview results In summary results sopml common knowledge unaxiomatisable frames exception special case singleagent S5 axiomatisable modal boolean class frames sopml common knowledge unaxiomatisable regardless domain quantiﬁcation3 Note I 1 cid2 reduces cid2 S5 frames entries ﬁrst column Table 4 follow immediately results ﬁrst column Table 3 So cases adding common knowledge makes validity problem harder This contrast model checking problem adding common knowledge free sense model checking sopml PSPACEcomplete common knowledge operator Theorem 17 We restrict classes models logics S5 K tables This classes relevant analysis Our axiomatisability results slightly general Theorem 43 exact statement Our unaxiomatisability results stated logics S5 K minor modiﬁcations proofs easily adapted normal modalities including KD45 S42 Such results useful insights computational properties sopml amenability knowledge representation reasoning Remark 29 In paper use different notation sopml cid2a cid2 discuss sopml sopel sake readability use sopml notation sopel Ka Ma C In section 3 Again exception single agent S5 case 20 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Also write sopml denote generically logics operator cid2 sopml refers logics cid2 The distinction clear context 41 Complete axiomatisations This section devoted axiomatise classes validities Kripke frames built sets I agent indices A P atomic propositions We ﬁrst present class logics Kx x ap pl ml In section logics deﬁned languages common knowledge Deﬁnition 30 Logics Kx For x ap pl ml axioms inference rules Kx follows Prop K Exx BF MP Nec Gen instances propositional tautologies cid2aφ ψ cid2aφ cid2aψ pφ φpψ ψ Lx pcid2aφ cid2apφ φ ψ φ infer ψ φ infer cid2aφ φ ψ infer φ pψ p free φ The axioms Prop K standard modal logic rules Modus Ponens MP Necessitation Nec Note axiom Exx parameterised x ap pl ml The axiom speciﬁes language Lx acts domain quantiﬁcation precisely kind formulas substituted instance universal quantiﬁer Axiom BF known Barcan formula says following In models M cid17W D R V cid18 domain quantiﬁcation D deﬁned globally depend world w evaluation To example dependence D world w cease BF hold consider structure N cid17W D w wW R V cid18 W x y z R x y y z Also suppose D x x y z D y 2W cid7 D x Then restricting clause quantiﬁcation Deﬁnition 8 D w N x pcid2p cid2p N x cid2pp cid2p In Example 31 prove converse BF derivable Kx The scheme axioms Exx Generalisation rule Gen typical principles quantiﬁcation Axiom Exx elimination axiom holds allowed valuations holds instance domain set atoms boolean formulas modal formulas The rule Generalisation introduction rule ψ follows φ arbitrary p infer pψ follows φ As customary pml considering suitable combination axioms T cid2aφ φ φ cid2a cid27a φ B 4 cid2aφ cid2acid2aφ introduce following normal extensions Kx x ap pl ml Tx S4x Bx S5x Kx T Kx T 4 Kx T B Kx T B 4 This gives 15 logics 5 type x X The notions proof theoremhood deﬁned usual A formula φ derivable logic L set cid14 formulas cid2 cid2 cid14 cid28L φ iff φ0 φm cid14 formula im φi φ theorem L cid28L im φi φ Example 31 As example provide proofs logic Kap following theorems derived inference rules routinely rest section explicit mention converse Barcan formula CBF cid2pφ pcid2φ 1 pφ φ 2 cid2apφ φ cid2apφ cid2aφ 3 cid2apφ φ 4 cid2apφ cid2aφ 5 cid2apφ pcid2aφ axiom Exap axiom K 1 rule Nec 2 3 rule MP 4 rule Gen p free cid2apφ vacuous quantiﬁcation φ pφ p appear φ 1 φ φ 2 φ pφ propositional tautology axiom Gen F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 21 By axiom Exap obtain φ pφ p appear φ distribution quantiﬁcation pφ ψ pφ pψ 1 pφ ψ φ ψ 2 pφ φ 3 φ pφ ψ ψ 4 pφ pφ ψ ψ 5 pφ ψ pφ ψ 6 pφ ψ pφ ψ 7 pφ ψ pφ pψ 6 Gen 8 pφ ψ pφ pψ 7 tautology A B C A B C axiom Exap axiom Exap 1 tautology A B C B A C 2 3 transitivity implication 4 tautology A B C B A C 5 tautology A B C A B C Since CBF vacuous quantiﬁcation distribution quantiﬁcation provable Kap theorems 14 logics We recall inferring cid2aφ cid2aψ φ ψ derivable rule modal logic p appear free φ formula pφ ψ φ pψ theorem logics We prove soundness completeness results logics Lx wrt corresponding class K Kripke frames starting soundness In rest paper L ranges K T S4 B S5 Given logic Lx let τ Lx subset r t s Lx includes axiom T iff τ contains r reﬂexivity Lx includes axiom 4 iff τ contains t transitivity Lx includes axiom B iff τ contains s symmetry Theorem 32 Soundness For x ap pl ml logic Lx formula φ Lsopml cid28Lx φ implies Kτ Lx cid5x φ cid5x Proof As customary axioms logic Lx shown valid corresponding class Kτ Lx frames inference rules shown preserve validity Kτ Lx Speciﬁcally axioms Prop K MP Nec valid frame The validity axioms T 4 B speciﬁc classes frames follows standard propositional modal logics 7 The validity axioms Exx corresponding class frames follows Lemma 112 validity Gen follows Lemma 111 We provide proof Exap suppose M w pφ U D Mp U w φ By Lemma 11a cid2ψcid3 D particular Mp cid2ψcid3 w φ Then Lemma 11b M w φpψ As regards Gen p suppose M w φ p frφ In particular U D V frφ V U frφ Lemma 111 Mp U w ψ U arbitrary M w pψ Moreover Barcan formula BF valid frame worlds domain quantiﬁcation D 2W Indeed cid6 φ But means M w pcid2aφ iff U D Mp w U w φ By MP obtain Mp cid6 pφ M w cid2apφ cid2 U w cid2aφ iff w cid6 Raw M w cid6 Raw Mp U w cid5x As consequence Theorem 32 15 logics sound wrt corresponding classes frames Moreover byproduct soundness obtain inclusions 4 theories forward Section 22 strict ThKall ThKbool ThKmodal ThKfull 13 To prove observe axiom Exx holds Kcid5x general class frames Finally let Exsopml scheme pφ φpψ ψ Lsopml It easy check Exsopml ThKfull Exsopml ThKmodal Next state completeness result Here use notation Theorem 32 Theorem 33 Completeness For x ap pl ml formula φ Lsopml Kτ Lx cid5x φ implies cid28Lx φ Theorem 33 guarantees completeness logic sort x respect models type cid5x sorts atomic propo sitions propositional modal formulas Completeness holds add properties reﬂexivity transitivity symmetry frames long add corresponding axioms T 4 B logic To knowledge ﬁrst completeness result sopml multiagent setting To prove Theorem 33 x ap pl ml formula φ Lxconsistent construct appro priate model MLx satisﬁes φ For logic Lap respectively Lpl Lml amounts ﬁnding models underlying frame frame respectively boolean algebra boolean algebra operators We begin cases Lap claritys sake 22 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 411 Completeness Lap In section formula φ Lapconsistent cid3Lap φ construct canonical model cid17F V cid18 satisﬁes φ Moreover F shown belong class Kall frames This implies Kall cid7 φ MLap Deﬁnition 34 Let cid15 Lsopml sets formulas set A P atoms Y denumerable set atoms We cid15 Lapconsistent complete maximal Y rich saturated iff iff iff iff iff cid15 cid3Lap formula φ Lsopml φ cid15 φ cid15 cid15 consistent complete φ Lsopml pφ cid15 φpq cid15 q Y cid15 maximal Y rich Y A P We omit subscript Lap clear context We remark deﬁnition derivability set cid15 inconsistent iff φ0 φm cid15 cid28 cid2 cid28 im φi ψ ψ cid15 We prove consistent set saturated cid2 im φi Lemma 35 Saturation Let cid14 maximal set formulas A P Then exists saturated set formulas cid5 A P Y cid14 cid5 Y inﬁnite set new atoms disjoint A P Proof Let θ0 θ1 enumeration formulas A P Y q0 q1 enumeration atoms Y We deﬁne induction sequence cid50 cid51 sets formulas A P Y follows cid50 cid14 cid5n1 cid5n θn cid5n θn χ pq cid5n θn cid5n θn consistent θn form pχ cid5n θn consistent θn form pχ q Y ﬁrst atom appearing cid5n θn Notice Y inﬁnite set new atoms ﬁnitely θ appear cid5n cid50 n N ﬁnd atom q Y appear cid5n θn Now prove induction n cid5n consistent First cid50 cid14 consistent hypothesis As inductive step suppose cid5n consistent consider cases If cid5n1 cid5n θn θn form pχ cid5n θn cid5n1 consistent construction Further cid5n1 cid5n θn χ pq cid5n θn consistent θn form pχ q ﬁrst atom appear cid5n θn To obtain contradiction suppose cid5n1 inconsistent In particular ϕ0 ϕm cid5n Since q assumed appear cid5n θn application Gen obtain ϕi θn pχ im im ϕi θn θn cid28 cid2 cid28 consistent hypothesis Hence cid5n1 cid5n θn χ pq consistent im ϕi θn θn trivially obtain cid28 Finally cid5n1 cid5n θn cid5n θn consistent Indeed cid5n consistent cid5n θn cid5n θn 0 ϕcid6 inconsistent ϕ0 ϕm ϕcid6 mcid6 cid5n cid2 im ϕi θn cid5n θn cid28 ϕi θn χ pq cid7 im cid7 cid28 cid2 cid7 cid28 cid28 ϕi θn im cid7 imcid6 ϕcid6 θn propositional reasoning cid7 cid28 ϕi cid7 ϕcid6 θn θn im imcid6 cid5n inconsistent contradiction Hence cid5n θn cid5n1 consistent F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 23 cid4 Now let cid5 nN cid5n cid5 consistent cid5n If case ϕ0 ϕm cid5 cid2 im ϕi Then suppose k smallest index φi appear cid5k It follows cid5k inconsistent cid28 hypothesis Moreover cid5 extends cid14 maximal Y rich construction cid2 We informally construction canonical model formula φ cid3 φ First deﬁne W set saturated sets w formulas A P Y obtained Lemma 35 Notice W nonempty set φ cid6 W I consistent hypothesis Lemma 35 exists saturated set cid5 φ W Further w w Finally atom p A P Y consider set U p w W p w W deﬁne Raw w deﬁne domain D propositions U p p A P Y cid6 iff ψ cid2aψ w w cid6 Deﬁnition 36 Canonical model The canonical model L tuple ML cid17W D R V cid18 W D R deﬁned ii V assignment V p U p Note consistent formula φ contained cid5 W Next prove canonical model recall cid5ap Lap represents 5 different logics wrt Lap model based frame Kτ Lap Kap Tap S4ap Bap S5ap Lemma 37 The canonical model MLap Deﬁnition 36 Kripke model based frame Kτ Lap Proof By remarks W nonempty set saturated sets D subset 2W V function A P Y D Moreover axiom T respectively 4 B enforces relation Ra W reﬂexive respectively transitive symmetric case propositional modal logic As illustrative example consider case T maximality w W cid2aψ ψ w formula ψ Lsopml closure MP ψ Lsopml cid2ψ w w Raw w deﬁnition cid2 We ﬁnally prove truth lemma logics Lap Here adapt proof 20 propositional epistemic languages common knowledge Lemma 38 Truth lemma For logic Lap canonical model MLap w W formula ψ A P Y MLap w ψ iff ψ w iff ψ w Proof The proof induction length ψ As base induction ψ p deﬁnition satisfaction MLap w p iff w V p iff p w For ψ χ MLap w ψ iff MLap w cid7 χ iff induction hypothesis χ w Since w maximal case For ψ χ χ cid6 MLap w ψ iff MLap w cid7 χ MLap w χ cid6 χ w χ cid6 w cases ψ w w maximal By induction hypothesis case iff p U q Suppose ψ pχ Let ψ w By axiom Exap χ pq w q A P Y By induction hypothesis MLap w χ pq q Now arbitrary U q w W q w domain D canonical model By Lemma 112b MLap p chosen arbitrarily obtain MLap w ψ U q Assume ψ w Since w maximal pχ w w Y rich χ pq w atom q Y Then induction hypothesis MLap w cid7 χ pq Lemma 112b MLap p V q w cid7 χ In particular U q V q D MLap p U q w cid7 χ MLap w cid7 ψ w χ variant V Suppose ψ cid2aχ Assume ψ w v Raw By deﬁnition Ra χ v induction hypothesis MLap v χ Thus MLap w ψ Assume ψ w consider set φ cid2aφ w χ This set cid2aφ cid2aχ consistent φ1 φn φ cid2aφ w cid28 cid2 cid2aφ w cid2aχ w hypothesis Now want saturate cid14 φ cid2aφ w χ obtain v W Raw v χ v However directly apply Lemma 35 cid14 set formulas A P Y We prove cid14 nonetheless extended saturated set cid5 formulas A P Y The proof structure similar Lemma 35 deﬁne sequence cid50 cid51 sets formulas A P Y follows φ χ Then axiom K cid28 cid2 cid2 cid50 cid14 cid5n θn cid5n θn ζ pq cid5n θn cid5n1 cid5n θn consistent θn form pζ cid5n θn consistent θn form pζ q A P Y ﬁrst atom cid5n θn ζ pq consistent 24 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 We prove induction n cid5n consistent welldeﬁned First cid50 cid14 consistent shown As inductive step suppose cid5n consistent We consider case cid5n θn consistent θn form pζ cid5n1 welldeﬁned exists q A P Y cid5n θn ζ pq consistent To obtain contradiction suppose q A P Y exist cid2aϕ0 cid2aϕm w cid7 cid28 cid7 ϕi ψi θn ζ pq im ψ0 ψn formulas cid5n cid14 By axiom K obtain cid7 cid7 cid28 cid2aϕi cid2a ψi θn ζ pq im ik cid2 cid2aϕi belong w maximality derive cid2a cid2 Take atom q occurring cid2 formula member w maximality qcid3a cid6 A P Y cid3a q cid6 w contradicting ik ψi θn consider formula qcid2a cid2 cid2 cid2 ik ψi θn ζ pq w q A P Y ik ψi θn ζ pq We claim ik ψi θn ζ pq w saturation Since qcid2a ik ψi θn ζ pq w ik ψi θn q assumed appear qζ pq cid14 Further ψ0 ψn belong cid5n obtain cid5n θn cid28 qζ pq But contradicts fact cid5n θn consistent recall θn pζ As result cid5n θn ζ pq consistent q A P Y ik ψi θn ζ pq w axiom BF obtain cid2aq ik ψi θn derive cid2a ik ψi θn qζ pq w The inductive cases construction Lemma 35 Finally cid5 nN cid5n consistent cid5n In particular cid5 saturated set W cid5 Raw construction By induction hypothesis MLap cid5 cid7 χ MLap w cid7 ψ cid2 cid2 cid4 cid2 ik ψi θn ζ pq cid2 cid2 By Lemma 38 cid3Lap φ exists saturated set w φ canonical model MLap MLap w φ Moreover MLap based frame F Kall Thus Kall cid7 φ This concludes completeness proof Lap 412 Completeness Lpl Lml In section discuss adapt completeness proof Lap previous section logics Lpl Lml As regards Lpl need modify deﬁnition canonical model proof truth lemma starting Deﬁnition 39 Canonical model The canonical model Lpl tuple MLpl cid17W D R V cid18 W R V given Deﬁnition 36 D domain sets U ψ w W ψ w W propositional formula ψ Lpl A P Y Given Deﬁnition 39 canonical model based boolean frame Lemma 40 The canonical model MLpl boolean Proof We prove domain D closed boolean operations Let U φ U φcid6 sets D U φ U φcid6 U φφcid6 D Clearly w U φ U φcid6 iff φ w φcid6 w maximality case iff φ φcid6 w Closure disjunction proved similarly As taking complement W U φ U φ D Again w U φ iff φ w maximality case iff φ w cid2 As consequence Lemma 40 MLpl based frame Kbool Moreover able prove following version truth lemma Lemma 41 Truth lemma For logic Lpl canonical model MLpl w W formula ψ A P Y MLpl w ψ iff ψ w Proof To prove truth lemma Lpl modify proof Lemma 38 Speciﬁcally ﬁrst prove ψ Lpl MLpl w ψ iff ψ w Lemma 38 In particular obtain U ϕ cid2ϕcid3MLpl w W MLpl w ϕ D Then proof ψ Lsopml given induction length ψ similarly Lemma 38 case quantiﬁed formulas For ψ pχ ψ w axiom Expl χ pϕ w F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 25 φ Lpl By induction hypothesis MLpl w χ pϕ Now consider set U ϕ cid2ϕcid3MLpl D By Lemma 112b case MLpl p w χ choice ϕ variant V arbitrary obtain Uϕ MLpl w pχ As implication left right proof Lemma 38 w maximal rich cid2 p Uϕ As consequence Lemma 41 truth lemma holds boolean frames obtain completeness proof Lpl We discuss modify procedure obtain completeness results logics Lml Firstly canon ical model Lml deﬁned tuple MLml cid17W D R V cid18 W R V given Deﬁnition 36 ii D domain sets U ψ w W ψ w W modal formula ψ Lml A P Y In particular easy check domain D MLml boolean algebra operators Secondly adapting proof Lemma 41 prove truth lemma MLml Lemma 42 Truth lemma For logic Lml canonical model MLml w W formula ψ A P Y MLml w ψ iff ψ w This completes completeness proof logics Lml We conclude section summarising soundness completeness results logics wrt relevant classes frames Theorem 43 Soundness completeness For x ap pl ml logic Lx sound complete wrt class Kτ Lx reﬂexive respectively transitive symmetric Lx includes axiom T respectively 4 B cid5x frames As result types ap pl ml able prove soundness completeness normal modalities K T S4 B S5 multimodal setting 413 Generalised completeness We extend completeness results previous section considering extra axioms expressing properties frames Speciﬁcally let L axiomatisation mentioned Theorem 43 Then extend L universal closure cid23pψ formula ψ Lsopml resulting calculus L cid23pψ sound complete wrt class frames satisfying mso condition x cid23P S T xψ cid23P unary predicates appearing S T xψ Theorem 44 Let ψ formula sopml logic L cid23pψ sound complete wrt corresponding class K frames satisfying x cid23P S T xψ Proof Soundness follows immediately Lemma 20 frame satisﬁes condition x cid23P S T xψ xS T xcid23pψ validates cid23pψ As completeness cid23pψ axiom appears state canonical model M truth lemma M validates cid23pψ Finally application Lemma 20 F validates x cid23P S T xψ cid2 By result immediately obtain formula θcid23a cid23p appearing Table 1 L pθcid23a cid23p sound complete wrt class frames satisfying x cid23P cid10cid23a x For instance K pcid2a p p sound complete axiomatisation class irreﬂexive frames notice pcid2a p p sentence universal closure equal formula More generally onetoone correspondence sopml axiom cid23pθ mso condition x cid23P S T xθ corresponding class sound complete frames 42 Incompleteness In Section 41 provided complete axiomatisations languages common knowledge classes boolean modal frames In section prove main unaxiomatisability results sopml Speciﬁcally Section 421 set validities sopel common knowledge interpreted frames unax iomatisable assume agents frames Further Section 422 prove common knowledge sopml unaxiomatisable modal frames considering single agent We demonstrate Corollaries 58 61 63 Theorem 62 proof extended classes frames These results complete Tables 3 4 421 2agent sopel frames unaxiomatisable Recall discussed beginning Section 4 axiomatisation singleagent sopel frames introduced 21 Here result generalised multiagent case demonstrate multiagent sopel recursively axiomatisable frames 26 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 We prove unaxiomatisability result reducing validity problem diadic second order logic dso validity problem sopel Since known recursively enumerable implies recursively enumerable particular axiomatisable The reduction use somewhat similar 36 prove unaxiomatisability singleagent sopml frames S42 weaker modalities Speciﬁcally proof 36 proof presented represent second order domain D Kripke model taking D W D D W Quantiﬁcation diadic relations Dom corresponds propositional monadic quantiﬁcation D D The difference proofs lies characterise models D W D D W second order formulas translated characterisation established Since reduction validity problem diadic second order logic let ﬁrst brieﬂy deﬁne logic Let set X ﬁrstorder variables set R second order variables given Then language diadic second order logic given following normal form θ Rx y x y θ θ θ xθ Rθ x x X R R The formulas dso evaluated models Dom ρ consist domain Dom assignment function ρ assigns ﬁrstorder variable x element ρx Dom secondorder variable R relation ρR Dom Dom Given model Dom ρ element d Dom relation E Dom Dom assignments ρx cid31 d ρR cid31 E modiﬁcations ρ map x X d Dom R R E Dom Dom respectively Given preliminaries deﬁne semantics dso usual way Deﬁnition 45 We deﬁne model Dom ρ satisﬁes formula θ dso recursively follows Dom ρ Rx y Dom ρ x y Dom ρ θ Dom ρ θ θ cid6 Dom ρ xθ Dom ρ Rθ iff iff iff iff iff iff ρx ρ y ρR ρx ρ y Dom ρ cid7 θ Dom ρ cid7 θ Dom ρ θ cid6 d Dom Dom ρx cid31 d θ E Dom Dom D ρR cid31 E θ A formula θ dso valid denoted θ Dom ρ θ model Dom ρ In general formula dso contain free ﬁrst secondorder variables Our goal reduction validity problem dso care formula valid If θ dso formula free ﬁrst order variable x free secondorder variable R respectively θ valid xθ Rθ respectively valid As result suﬃces consider sentences dso formulas free variables Furthermore θ sentence Dom ρ θ depends Dom As consider models given domain Dom Dom θ Dom ρ θ assignment ρ Now let introduce reduction validity problem dso sopels This reduction parts ﬁrstly deﬁne formula ψmodel sopel use characterise speciﬁc class pointed models Then deﬁne translation f formulas dso formulas sopel property formula θ dso model Dom Dom θ iff pointed model M w sopml M w ψmodel f θ Before deﬁning ψmodel f φ let present auxiliary formula ψuniquea χ useful places This formula similar uniqueness formula introduced 12 Deﬁnition 46 Let I index χ Lsopml formula Then ψuniquea χ aχ qaq χ cid2aχ q Lemma 47 Let index I χ Lsopml formula M epistemic model w world M Then M w ψuniquea χ exactly asuccessor w w M w cid6 χ cid6 Proof Suppose M w ψuniquea χ Then particular M w aχ asuccessor w cid6cid6 M w w χ holds w w w w Then M model assignment q q holds As result choice q M w aq χ cid2aχ q contradicting fact cid6 χ Suppose contradiction different asuccessors w w w cid6cid6 cid6cid6 cid6 cid6 cid6 cid6 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 27 M w qaq χ cid2aχ q It follows assumption w w M w asuccessor w cid6 cid6 χ cid6 Suppose exactly asuccessor w cid6 χ Then cid6 q χ successor M w aχ Furthermore assignment q aq χ M w case cid2aχ q It follows M w qaq χ cid2aχ q Together previously established M w aχ implies M w ψuniquea χ cid2 w M w cid6 w cid6cid6 existing false Now use ψunique deﬁne ψmodel f Deﬁnition 48 The formula ψmodel given ψmodel cid2aψD ψexcl ψconnect ψ1 ψ1 ψD p D ψuniqueb p D ψexlc cid2bp D start end cid2bstart end cid2bp D start end ψconnect cid2bp D cid2astart end ψuniquea start ψuniquea end ψ1 pa p bpstart apend b p ψ1 pψuniquea p ψuniqueb start aend bp p D The meaning named subformulas ψD ψexcl ψconnect ψ1 ψ1 discussed proof Theorem 50 Deﬁnition 49 Let translation function f recursively deﬁned follows f x y apx p y f Rx y apx bp R start aend b p y f θ f θ f θ1 θ2 f θ1 f θ2 f xθ pxψuniquea px f θ f Rθ p R f θ We prove main result section Theorem 50 For dso sentence θ θ iff Ke ψmodel f θ Proof First let consider models satisfy ψmodel Let M w 0 epistemic pointed model M w 0 ψmodel let Dom Raw 0 The primary connective ψmodel cid2a let consider w Dom The conjunct ψD holds w w satisﬁes p D ii w bsuccessor satisﬁes p D unique successor w We refer bsuccessors w cone w drawn following cid6 Dom overlap fact M epistemic model ﬁgure Note cones different w w imply Rbw w cid6 contradicting uniqueness p D world 28 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 w 0 p D w p D cid6 w p D b b b The conjunct ψexcl holds state cone satisﬁes exactly p D start end Now consider ψconnect It holds p D state cone connected relation exactly state satisﬁes start exactly state satisﬁes end states satisfy start end We established world cone satisfy start end follows p D state start state paired end state end state paired start state Note start end state cone w state paired cone w cone different state w cone cid6 Now consider formula ψ1 It states choice p w asuccessor w acid31 e2 path w bcid31 e1 cid6 D path w bcid31 e1 w w schematic illustration extended following bcid31 w cid6cid6 e1 satisﬁes start e2 satisﬁes end w acid31 e2 cid6 cid6cid6 satisﬁes p satisﬁes p This case Our Note applies w w cid6 bcid31 w cid6 w p D start end end start start end b cid6 w p D end start start end start end b w 0 p D end start end start end end start b start cid6 cid6cid6 bcid31 w acid31 e2 Finally formula ψ1 states choice p w unique asuccessor w satisﬁes p w unique bsuccessor e1 e1 satisﬁes start ii e1 asuccessor e2 satisﬁes end iii e2 cid6 D path bsuccessor w w bcid31 e1 satisﬁes p p D This case w w cid6 e1 satisﬁes start e2 satisﬁes end All conjunction ψ1 ψ1 means exactly path w bcid31 e1 cid6 D start M e2 end w w acid31 e2 bcid31 w cid6 M e1 The pointed model M w 0 following way The suggestively named set Dom treated domain dso model Firstorder quantiﬁcation interpreted selecting exactly world w Dom Note precisely translation function f ﬁrstorder quantiﬁcation xθ translated pxψuniquea px f θ On hand secondorder quantiﬁcation interpreted selecting exactly start worlds path w bcid31 e1 cid6 chosen relation Again exactly translation f Rθ pair w w acid31 e2 bcid31 w cid6 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 29 translated p R f θ relational atom Rx y translated apx bp R start aend b p y means exactly Rx y holds iff p R true startworld unique px p y worlds It follows Dom θ M w 0 f θ Since assumed M epistemic model M w 0 ψmodel follows θ Ke ψmodel f θ cid2 As consequence fact validity dso recursively enumerable immediately obtain following corollary Corollary 51 Multiagent sopml epistemic frames unaxiomatisable Remark 52 We indices modalities reduction unaxiomatisability result holds set indices contains elements 422 Singleagent sopml unaxiomatisable modal frames In Section 413 introduced sound complete axiomatisations sopml classes modal boolean frames The version sopml considered contain common knowledge This fundamental restriction variant sopml obtained adding common knowledge sopml axiomatisable class frames Here sopml axiomatisable respect general epistemic models modal boolean arbitrary domain quantiﬁcation It shown sopml unaxiomatisable intermediate classes models logics KD45 serial transitive symmetric models S42 reﬂexive transitive convergent models We include proofs classes similar proofs cases treat We prove unaxiomatisability sopml modal models reduction nonhalting problem validity problem sopml Since nonhalting Turing machines recursively enumerable validities sopml respect modal models The proof use inspired similar proof 38 nonhalting problem reduced validity problem logic called Arbitrary Arrow Update Logic Common Knowledge Before deﬁning reduction let ﬁrst deﬁne nonhalting problem Turing machines A Turing machine ﬁrst deﬁned 50 abstract model computation consists inﬁnite tape Z cells contain symbol initially contain null symbol α0 ii readwrite head read symbol cell write symbol iii method track state machine currently iv set instructions based current state current symbol readwrite head determines symbol written state machine readwrite head left right remain place The Turing machines consider deterministic combination state symbol exactly instruction Formally Turing machine T deﬁned follows Deﬁnition 53 A Turing machine T triple T cid15 S cid14 cid15 ﬁnite alphabet containing symbol α0 S ﬁnite set states containing distinct states s0 send cid14 cid15 S cid15 S left right remain transition function The functions cid141 cid142 cid143 projections cid14 ﬁrst second coordinate respectively We assume loss generality cid142α s cid7 s0 α cid15 s S machine returns initial state4 The execution machine T represented function E T Z N cid15 S yes The horizontal direction Z represents positions tape The vertical direction N represents time So E T n m α s yes indicates time m nth position tape contains symbol α machine state s readwrite head position n Likewise E T n m α s indicates time m readwrite head position n Note E T contains redundant information state property machine particular position tape Furthermore readwrite head exactly position time So example E T n m α s yes E T n 1 m β s symbol β A Turing machine T designated end state send We T halts machine reaches end state n m α cid15 E T n m α send yes Deﬁnition 54 Halting problem The halting problem determine given Turing machine T T halts The nonhalting problem complement halting problem determine given Turing machine doesnt halt Although terminology Church 13 Turing 50 independently showed halting problem undecidable More precisely halting Turing machines recursively enumerable nonhalting Turing machines 4 Where necessary extra copy scopy 0 s0 added state s0 let scopy 0 instead 30 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Remark 55 The intuition end state machine stops reaches send computation happens point Here order avoid special cases convenient assume Turing machine keeps going forever reaches send So machine formally halts reaches end state informally halts stops When reducing nonhalting problem validity sopml useful represent time naturals N integers Z allows avoid special cases time t 0 For time t 0 machine dummy state svoid S read computation started modal frames This reduction parts Firstly deﬁne sopml Now necessary concepts deﬁned reduction nonhalting problem validity problem sopml formula ψgrid holds pointed model M w M represents Z Z grid Then deﬁne formula ψsane enforces sanity constraints necessary order interpret grid representing execution Turing machine Finally deﬁne formula ψT holds Turing machine encoded grid speciﬁc machine T Before deﬁning formulas let explain trick use Typically wanted Z Z grid modal logic use accessibility relations R right Rleft Rup Rdown However want singleagent sopml unaxiomatisable So use single relation R We need represent possible directions We coloring worlds model propositional atoms 1 9 repeating pattern 7 8 9 4 5 6 1 2 3 So world satisﬁes 5 world satisﬁes 8 world satisﬁes 6 world right satisﬁes 4 For direction x dir left right let f x 1 9 1 9 function gives number direction x f up8 2 Further use agent write cid2 cid2a This operator functions f x deﬁne cid2x x x dir abbreviations cid2xφ xφ cid12 cid2 f xi φ 1i9 cid12 f xi φ 1i9 These abbreviations formulas ψgrid ψsane ψT deﬁned follows Deﬁnition 56 Let S cid15 pos rpos rpos A P let T cid15 S cid14 Turing machine The formula χT given χT ψgrid ψsane ψT s0 pos formulas ψgrid ψsane ψT shown Tables 57 The formulas ψgrid ψsane ψT look complex slightly misleading While formulas certainly long named subformula encodes property grid Turing machine straightforward way We start considering formula ψgrid implies encodes grid Speciﬁcally let M w 0 pointed model based modal frame M w 0 ψgrid We use worlds M represent points Z Z following way world w 0 represents 0 0 ii world w represents n m rightsuccessor w represents n 1 m iii similarly directions We point n m represented world world generated submodel represents point worlds represent single point n m modally indistinguishable Let w world generated submodel M w 0 The main connective ψgrid cid2 labels direction uniquex x dir inversexy x y inv_dir commutexy x y perp_dir hold w By labels world w satisﬁes exactly label 1 9 By ﬁrst conjunct direction world w xsuccessor x dir It follows point Z Z represented world Furthermore second conjunct direction successor w satisﬁes labels allow identify xsuccessor x dir It follows world generated submodel represents point The formula uniquex implies U domain quantiﬁcation D xsuccessor w U xsuccessor U Since M based modal frame implies xsuccessors w modally indistinguishable The formula inversexy implies U D w U xysuccessor w U Again M based modal frame implies w modally indistinguishable xysuccessors Note formula holds x y inv_dir F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 31 Table 5 The formula ψgrid ψgrid cid2 labels direction cid7 inversexy cid7 uniquex xdir cid7 commutexy labels x yinv_dir cid12 cid7 direction 1 j9 cid7 icid7 j xcid10 j cid12 cid2 xdir 1i9 px p cid2x p uniquex inversexy pp cid2xcid2 y p commutexy px y p cid2 ycid2x p dir left right x yperp_dir cid12 xdir f xi inv_dir left right right left perp_dir left left right right left right left right Table 6 The formula ψsane ψsane cid2 position1 position2 void_state initial_symbol unchangedi pos lpos pos rpos rpos lpos pos rpos cid2rightrpos pos lpos cid2leftlpos one_state same_state one_symbol cid12 cid7 s cid6 s position1 position2 one_state same_state sstates cid7 scid6statess s cid2right s cid2left s one_symbol cid12 sstates α cid7 β αcid15 βcid15α void_state s0 svoid cid2downsvoid initial_symbol s0 α0 cid7 unchanged pos α cid2upα αcid15 The formula commutexy implies U D xysuccessor w cid6 U yxsuccessor w U This implies xysuccessors w modally indistinguishable yxsuccessors Taken uniquex x dir inversexy x y inv_dir commutexy x y w w cid6 perp_dir imply worlds representing single point n m modally indistinguishable We tape position n time m contains symbol α worlds representing n m satisfy propositional atom α Likewise worlds representing n m satisfy propositional atom s machine state s time m Finally worlds representing n m satisfy atom pos readwrite head position n time m satisfy rpos position n right readwrite head time m satisfy lpos position n left head Note worlds representing n m modally indistinguishable matter world check atoms true s holds world representing n m s holds worlds representing n m In particular use propositional atoms represent state Turing machine symbols tape position readwrite head modal indistinguishability worlds representing n m means worlds agree symbol state readwrite head position If modal formula φ holds worlds represent n m abuse notation writing M n m φ5 The formula ψsane imposes number sanity constraints M w satisﬁes ψgrid ψsane M seen execution Turing machine We ﬁrst discuss subformulas ψsane explain sanity constraints represent After brieﬂy discuss ψsane guarantees M seen execution Turing machine As ψgrid main connective ψsane cid2 So suppose M w 0 ψgrid ψsane let w world generated submodel M w 0 The formula position1 implies grid points represented w location readwrite head ii right head iii left head mutually exclusive 5 Note shown w represents unique point n m It fact true M w0 χT world generated submodel represents exactly point need fact prove 32 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Table 7 The formula ψT cid2 ψT cid7 position_change state_change symbol_change position_change 1i9 cid7 pos s α cid2upcid2leftpos sαcid143sαleft cid7 sαcid143sαright cid7 pos s α cid2upcid2rightpos pos s α cid2uppos state_change symbol_change sαcid143sαremain cid7 cid7 pos s α cid2ups cid6 scid6states cid7 sαcid142sαscid6 cid7 pos s α cid2upβ βcid15 sαcid141sαβ The formula position2 implies point represented w readwrite head right ws rightsuccessor right readwrite head similarly left Together position1 implies m Z n M n m pos The formula one_state implies exactly state s M w s The formula same_state implies w satisﬁes state left rightsuccessors So time m exactly state s M n m s n The formula one_symbol implies exactly symbol α M w α Recall use svoid dummy state indicates execution T started The formula void_state implies svoid holds worlds worlds satisfy s0 svoid svoid hold worlds represent points execution T started s0 The formula initial_symbol guarantees initial state entire tape contains symbol α0 The formula symbol_unchanged guarantees readwrite head particular position tape symbol position remains unchanged The suﬃcient M represents execution Turing machine follow ing guarantee s0 satisﬁed execution start ii readwrite head guaranteed position guaranteed position times iii symbols written state changes movement readwrite head random opposed fully determined set rules Whereas ψsane guarantees M seen execution Turing machine formula ψT narrows speciﬁc machine T In process solves problems remained considering ψsane Suppose M w 0 χT addition M w 0 ψgrid ψsane M w 0 ψT s0 pos Then subformula position_change ψT guarantees readwrite head moves accordance cid143 subformula state_change guarantees state changes accordance cid142 subformula symbol_change guarantees symbol written tape readwrite head accordance cid141 Note solves problem iii ψsane movement state changes written symbols accordance deterministic set rules represented cid14 Finally consider conjuncts s0 pos χT These solve problems ψsane execution starts state s0 point represented w 0 represent point 0 0 Furthermore readwrite head starts readwrite head initially position From fact head moves deterministically encoded ψT follows readwrite head position time m 0 To conclude shows M w 0 χT generated submodel M w 0 represents grid grid contains encoding execution T Theorem 57 A Turing machine T halting Kmodal χT cid2send send nonhalting Kmodal χT Proof Let M w 0 pointed model M w 0 χT Then shown world generated submodel represents point n m Z Z grid furthermore worlds representing point n m satisfy s S state s time m It follows generated submodel contains send world T halting theorem follows immediately cid2 As immediate consequence Theorem 57 obtain following result Corollary 58 sopml axiomatisable modal frames number agents F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 33 This unaxiomatisability result extended classes boolean frames modal frames characterised inside boolean frame Let φ pqcid2p q φ pqrcid2p q r φcid2 cid2 pqcid2cid2a p q The following lemma entirely straightforward state proof aAg Lemma 59 Let M w pointed model based frame Then generated submodel M w based modal frame M w φ φ φcid2 Hence following corollary follows immediately Lemma 59 Corollary 60 A formula φ Lsopml valid modal frames φ φ φcid2 φ valid boolean frames As result unaxiomatisability sopml modal frames ﬁnally obtain unaxiomatisability classes frames Corollary 61 sopml agents axiomatisable class frames class boolean frames number So far shown sopml unaxiomatisable modal boolean frames This result extended corresponding classes epistemic frames The proofs epistemic frames similar proofs include appendix Theorem 62 If I 2 validities sopml modal epistemic frames recursively enumerable In particular sopml axiomatisable class modal epistemic frames The characterisation boolean frames applies epistemic frames So following corollary Corollary 63 sopml axiomatisable class boolean epistemic frames number agents 5 Simulations bisimulation In section investigate expressive power secondorder propositional modal logic introducing truth preserving bisimulation relations sopml Bisimulations essential tool model theory propositional modal logic provide nontrivial suﬃcient conditions models satisfy formulas pml 727 Moreover propositional modal logic characterised wellknown van Benthem theorem bisimulation invariant fragment ﬁrstorder logic 6 Hereafter introduce simulations bisimulations sopml prove truthpreserving Further Section 52 present notion abstraction frames abstraction frame simulates frame Finally Section 53 provide examples application bisimulations analysis expressive power sopml spatial temporal reasoning We note SOPML bisimulations somewhat behaved PML bisimulations In particular given PML models unique greatest bisimulation Furthermore greatest bisimulation bisimilarity relation characterised greatest ﬁxed point partition reﬁnement operator In contrast SOPML models need unique greatest bisimulation Example 72 While deﬁne partition reﬁnement operator like PML case bisimulation ﬁxed point operator unique greatest ﬁxed point The SOPML bisimilarity relation guaranteed bisimulation 51 Simulations bisimulations We deﬁne notion bisimulations frames immediate extend deﬁnition models In cid6cid18 deﬁned cid6cid18 models M cid17F V cid18 Mcid6 cid17F cid6 V rest section consider frames F cid17W D Rcid18 F cid6 cid17W F F cid6 respectively In following cid19 denotes relation cid19 D D cid6 D cid6 R Deﬁnition 64 Frame simulation Given frames F F cid6 cid6 U D D U D cid19U U cid6 simulation pair σ cid19 relations cid7 σ W W cid6 implies cid6 D ii σ w w cid6 cid6 cid19 1 v W I Raw v σ v v cid6 D 2 U D U cid6 implies w U iff w cid6 v cid6 U cid19U U cid6 cid6 aw cid6 cid6 R cid6 34 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 w 1 b b u121 w 2 w 3 c frame G c u1 b b u12 c u123 b frame Gcid6 u13 c u132 b u131 c b Fig 3 frames G Gcid6 Example 65 D components omitted clarity Notice condition 1 Deﬁnition 64 expresses standard notion simulation pml Hence simulations sopml extend corresponding deﬁnition pml devote discussion point later The deﬁnition simulation differs similar notion forward 4 Speciﬁcally 4 relation states considered obtaining strictly weaker notion We state w cid6 simulates w w w iff σ w w cid6 cid6 holds simulation pair σ cid19 Similarly set U cid6 iff cid19U U cid6 cid6 simulates U U U holds σ1 cid191 U U holds σ2 cid192 σ1 cid192 simulation pair To consider frames G1 cid17w 1 w 2 w 1 w 2 w 1 w 2 w 2 w 1cid18 G2 cid17x1 x2 x1 x2 x1 x2 x2 x1cid18 Clearly w 1 x1 w 1 x2 However case w 1 w 1 iff x1 x2 Nonetheless preorder reﬂexive transitive relation Finally frame F cid6 cid6 holds simulation pair σ cid19 Note w w iff w W w w simulates F F F cid6 w cid6 W cid6 cid6 cid6 Observe pml ignore quantiﬁcation domain D notion simulation given frames vacuous discard evaluation propositional atoms states Then instance serial frames simulate However remark apply sopml account propositional quantiﬁcation We illustrate newly introduced notion example Example 65 Consider frames G cid17W R Dcid18 Gcid6 cid17W cid6 R cid6 D cid6cid18 set I b c indices depicted Fig 3 W w 1 w 2 w 3 Ra w 1 w 3 w 3 w 1 Rb w 1 w 2 w 2 w 1 Rc w 2 w 3 w 3 w 2 D w 1 w 2 w 3 W I R let U cid6 s ﬁnite sequence 1 2 3 starting 1 adjacent repetition cid6 s m R iwlasts wm cid6 cid6 U 3 uscid6 s lasts n D cid6 2 U cid6 1 U cid6 n cid6 Intuitively frame G thought scenario robots b c locations w 1 w 2 w 3 robot moves w 1 w 3 Frame Gcid6 captures scenario additional possibility reason notion history time instance add atom pi true exactly nodes level To cid6 needs appropriate assumptions D like requiring frame We consider matters Gcid6 Now consider pair σ cid19 relations σ W W cid6 cid19wn U m holds iff n m We check σ cid19 simulation Firstly wn D cid19wn U cid6 Un D σ wn cid19wk U cid6 m lasts n k m Therefore wn wk iff n k iff lasts m iff U Secondly σ wn R iwn wm s σ wn holds iff lasts n cid6 n cid6 ius uscid6 σ wm uscid6 Thirdly cid6 s m R cid19 D D cid6 m cid6 cid6 Finally observe wn W σ wn lasts n Thus frame Gcid6 simulates G Lemma 66 We following relation simulations properties frames 1 It checked NPTIME exists simulation relation frames 2 If frame F cid6 simulates boolean respectively modal frame F F cid6 F cid6 boolean modal imply F boolean modal need boolean respectively modal Nor F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 35 Proof As regards ﬁrst point observe guess pair σ cid19 relations states sets respectively check polynomial time actually frame simulation As second point consider simulating frame F cid6 contain sets states simu late state F closed settheoretic operations As example consider frames F w1w2 F cid6 u1 u2 u3 u4 u1 u2 u1 u3 u1 u4 u1 u2 u3 u1 u2 u3 u4 w 1 w 2 w 1 w 2 2 In particular F cid6 simulation F relations σ cid19 σ w 1 u1 σ w 2 u2 σ w 2 u3 cid19w 1 u1 cid19w 2 u2 u3 cid19w 1 w 2 u1 u2 u3 cid19 But F frame F cid6 boolean The implication proved similar line reasoning Speciﬁcally consider frame F cid6cid6 v 1 v 2 v 1 v 2 simulated F relations σ cid19 σ v 1 w 1 σ v 2 w 2 cid19v 1 w 1 Thus similar frames necessarily belong class Below compare results available w 1 w 2 Now F cid6cid6 cid19v 2 w 2 But F cid6cid6 bisimulations cid2 boolean We state following preservation result universal fragment sopml Theorem 67 If w w cid6 ϕ L asopml F cid6 w cid6 ϕ implies F w ϕ cid6 simulation pair σ cid19 σ w w Proof Since w w F V w cid7 ϕ assignment V F cid6 cid19V w p A P cid19V p V Deﬁnition 64 cid19V p D cid6 Fix σ One prove induction ϕ cid6p We step quantiﬁer We write cid19V p cid19V p By clause cid6 cid7 ϕ cid19V assignment V cid6 cid6 For ϕ pψ F V w cid7 ϕ iff U D F V condition Deﬁnition 64 U D cid19U U cid19U U cid6 F cid6 cid19V p cid6 cid7 ψ U U cid6 w p cid6 U cid6 D U w cid7 ψ By induction hypothesis F cid6 cid19V cid6 D In particular cid19V cid6 cid7 ϕ cid2 cid6 F cid6 cid19V w p U w U cid19V p p cid6 cid6 cid7 ψ By U cid6 As immediate consequence Theorem 67 obtain following corollary Corollary 68 If F F cid6 ϕ L asopml F cid6 ϕ implies F ϕ Thus notion simulation introduced Deﬁnition 64 preserves universal fragment sopml similarly case standard simulations pml Example 69 Consider frames G Gcid6 Gcid6 validates following formula sopml Example 65 We showed Gcid6 simulates G Moreover easily check cid13 p p cid14 cid7 iI cid2ip 14 intuitively says agents different position choose remain state By Corollary 68 deduce 14 valid G Simulations naturally extended bisimulations Also case focus level frames In 1 u v Rv u following converse relation R relation R Deﬁnition 70 Frame bisimulation Given frames F F cid6 cid22 D D U ω cid22 ω1 cid221 simulations That U D cid22U U ii ωw w bisimulation pair ω cid22 relations cid7 ω W W cid6 D cid6 U D cid6 U cid6 implies cid22U U cid6 D cid6 cid6 cid6 cid6 cid6 1 v W I Raw v ωv v cid6 I R 2 v cid6 cid6 D 3 U D U cid6 v cid6 implies w U iff w cid6 aw cid22U U cid6 ωv v cid6 cid6 R cid6 v Raw cid6 cid6 v cid6 W cid6 U cid6 aw cid6 U States w w cid6 holds bisimulation pair ω cid22 Again similarly case simulations bisimilar U U pair necessarily bisimulation Example 72 equivalence relation This contrast cid6 holds bisimulation pair ω cid22 Similarly sets U bisimilar w w iff ωw w iff cid22U U cid6 cid6 cid6 36 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 w 3 x2 w 1 w 2 x1 frame H b frame Hcid6 Fig 4 Frames H Hcid6 Example 72 D components omitted clarity situation pml bisimilarity relation bisimulation Finally frames F F cid6 F F cid6 iff w W w w ii w w w w cid6 W cid6 W w W cid6 cid6 cid6 cid6 bisimilar Example 71 Notice frames G Gcid6 relations σ 1 W cid19U U Hence σ 1uscid6 wm As 3 proof identical simulations cid6 W cid191 D cid6 Secondly σ 1us wn R Example 65 actually bisimilar To prove fact converse set U wn D cid6 s m wm W R iwn wm cid6 D form simulation pair Firstly U cid6 ius uscid6 lasts n s D cid6 n cid6 Example 72 Let frames H Hcid6 main Hcid6 given D ω2 w 2 x1 w 3 x2 cid222 w 1 w 3 x2 w 2 w 3 x1 x2 Fig 4 domain H given D w 1 w 3 w 2 w 3 cid6 x1 x2 x2 Now ω1 w 1 x1 w 3 x3 cid221 w 1 w 3 x1 x2 w 2 w 3 x2 The pairs ω1 cid221 ω2 cid222 bisimulations Furthermore easy verify 1 2 bisimulation ω cid22 ωi ω cid22i cid22 ω cid22 ωi cid22i In words ω1 cid221 ω2 cid222 maximal bisimulations So unique greatest bisimulation Furthermore note w 1 x1 w 2 x1 bisimulation relates w 1 w 2 x1 In particular bisimulation We state following adaptation Lemma 66 Lemma 73 1 It checked NPTIME exists bisimulation relation frames 2 Let F F cid6 respectively w w modal iff F cid6 Moreover Fw F cid6 frames let w w wcid6 However Fw F cid6 wcid6 isomorphic worlds F F cid6 wcid6 need cid6 cid6 Then Fw boolean respectively With regard point 1 note simulations simply guess pair ω cid22 check polynomial time bisimulation A proof point 2 included appendix Compare situation bisimulations weaker results available Lemma 66 simulations Speciﬁcally bisimulations preserve class boolean modal frames Moreover case frames bisimulations collapse isomorphisms We state main preservation result section Its proof similar Theorem 67 appendix Theorem 74 If w w cid6 formula ϕ L sopml F w ϕ iff F cid6 w cid6 ϕ As immediate consequence Theorem 74 obtain following Corollary 75 If F F cid6 ϕ L sopml F ϕ iff F cid6 ϕ We infer bisimulations sopml stronger corresponding notion pml noticed frames Fig 2 bisimilar pml consequence Theorem 74 Example 10 says frames agree formula 8 conclude bisimilar sopml sense F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 37 Example 76 We consider graphtheoretic properties First notion 3colorability formalised follow ing sopml formula operator cid2 interpreted necessity operator edges E W 2 graph G cid17W Ecid18 cid2 usual necessity operator reﬂexive transitive closure E p1 p2 p3 cid2 p1 p2 p3 cid2 cid7 pi p j cid7 cid2 pi cid3pi 15 icid7 j 123 The truth 15 vertex v G implies vertices subgraph generated v coloured p1 p2 p3 ii vertex colour iii adjacent vertices colour Thus subgraph generated v 3colorable Observe frame G Fig 3a 3colorable states w 1 u1 bisimilar immediate consequence Theorem 74 frame Gcid6 3colorable Notice truth 15 implies graph 3colorable converse holds frames To illustrate inexpressivity sopml simulations consider graphtheoretic property existence Hamiltonian path path visits vertices graph exactly Again frame G Fig 3a Hamiltonian path w 1 w 2 w 3 Now consider ﬁnite graph Gcid6cid6 Fig 3 follows In Gcid6 replace worlds u12 u13 copy w 2 w 3 G respectively remove worlds different u1 It diﬃcult Gcid6cid6 bisimilar G allow Hamiltonian path obtained G Gcid6 Proposition 77 The property having Hamiltonian path expressible sopml Proposition 77 follows directly second Example 76 implies paths expressible general semantics Proposition 77 follows 42 Corollary 724 says impossible test mso graph Hamiltonian Indeed known property expressible language mso2 extension mso strictly expressive sopml 15 Prop 513 Discussion We compare deﬁnition bisimulation sopml standard notion bisimulation pml 7 Observe frame F cid6 simulates F sopml simulation pair σ cid19 model M cid17F V cid18 cid6 v W I based F model Mcid6 cid17F cid6 cid19V cid18 F cid6 pmlsimulates M In particular σ w w cid6 cid6 R Raw v implies σ v v cid19V p D satisﬁes universal formula φ pml φ holds M Hence Deﬁnition 64 simulation frames sopml generalisation modeltheoretic notion pml Furthermore frames F cid6 F bisimilar sopml bisimulation pair ω cid22 models M cid17F V cid18 cid6cid18 M cid17F cid221V cid18 pmlbisimilar Mcid6 cid17F cid6 cid22V cid18 bisimilar pml Likewise models Mcid6 cid17F cid6 V So case sopml bisimulations frames generalise pml bisimulations models cid6 v conditions ii2 Therefore Mcid6 cid6 condition ii1 Deﬁnition 64 Moreover w V p D iff w cid6 aw cid6 52 Abstraction This section devoted deﬁnition notion abstraction Kripke frames Abstractions deemed useful veriﬁcation allow ignore selected features focusing properties rele vant veriﬁcation task 14 Indeed key fact abstractions simulate original Hereafter prove result sopml starting family equivalence relations states Deﬁnition 78 Equivalence Given frame F let equivalence relation W state w w w w implies U D w U iff w w F set U W let U w w U cid6 U Further denote w w cid6 W cid6 w equivalence class cid6 W w cid6 Clearly replace implies Deﬁnition 78 iff obtain coarsest equivalence relation satisfying condi tions Deﬁnition 78 Deﬁnition 79 Abstraction Given frame F abstraction F A cid17W A D A R Acid18 F according equivalence relation Deﬁnition 78 frame W A w w W D A U U D I R A w w cid6 iff Rav v cid6 v w v cid6 w cid6 Notice coarsest abstraction F A ﬁnite interpretation domain D F size W A O2D Example 80 To illustrate abstractions frame G Example 65 isomorphic coarsest abstrac tion Gcid6 A Gcid6 First worlds uscid6 equivalent according coarsest equivalence iff 38 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 cid6 cid6 n D U cid6 n iff uscid6 U cid6 n iff lasts lasts U ut3 sequences t 1 2 3 cid6 W iutn utcid6m t cid6 A D ut3 utcid61 required Finally D R isomorphic G mapping w cid31 uti 1 2 3 beginning 1 As accessibility relations R cid6 t n R iwn wm Hence instance agent R cid6 So abstraction Gcid6 A equivalence classes ut1 ut2 cid6 A utn utcid6m iff utn utcid6m cid6 A ut1 utcid63 cid6 ut1 ut2 ut3 Clearly abstraction Gcid6 A Gcid6 cid6 A U U R cid6 n cid6 n cid6 We extend standard result modal logic abstractions simulations sopml Lemma 81 Given frame F abstraction F A pair mappings w cid31 w U cid31 U simulation Proof We pair cid31 cid31 mappings satisﬁes Deﬁnition 64 As condition U D U cid31 U U D A Next i1 suppose Raw v Then v W A R A w v v cid31 v Finally ii2 w cid31 w w U clearly w U On hand w U v w v U However v w implies v w In particular w U constraint cid2 We remark abstraction F A frame F isomorphic F In fact w W set w belongs cid6 cid6 U w w D w w As consequence w cid31 w simulation states F F A isomorphism Further Example 80 observed frame G isomorphic coarsest abstraction Gcid6 Hence Lemma 81 provides alternative proof fact G simulates Gcid6 implies particular w w discussed Example 71 iff U D w U iff w cid6 w w cid6 cid6 The following corollary follows immediately Lemmas 67 81 Corollary 82 Let F frame abstraction F A For universal formula ϕ L asopml F A w ϕ implies F w ϕ The results presented impact goes theoretical As example observed relevant properties P frames reﬂexivity transitivity symmetry deﬁnable propositional modal logic sense formula φ pml frame F validates φ iff F satisﬁes property P In sopml properties framedeﬁnable class frames For instance Section 3 showed frame F irreﬂexive iff F pcid2p p On hand consider class frames properties nondeﬁnable deﬁnable pml For instance frame G Example 65 symmetric Gcid6 Since G Gcid6 bisimilar satisfy formulas sopml conclude symmetry deﬁnable class frames Likewise irreﬂexivity reﬂexivity deﬁnable class frames F consisting cid6 cid6 reﬂexive world w D w F cid6 1 2 R cid6 cid6 1 bisimilar F reﬂexive reﬂexivity D 2 expressed frames F cid6 irreﬂexive irreﬂexivity expressed Such results provide knowledge expressive power sopml The pointed frames F w F cid6 w consisting worlds w cid6 w cid6 w cid6 2 w cid6 2 w cid6 1 w cid6 1 w cid6 1 w 53 Bisimulations expressivity In section explore expressivity sopml bisimulations introduced Section 51 We focus temporal spatial properties typically artiﬁcial intelligence In follows property P expressible language L class K frames iff formula φ L F K F φ iff F property P Sometimes omit L K clear context First consider Dedekindcompleteness total order total transitive antisymmetric binary relation totally ordered set Dedekindcomplete nonempty subset upper bound upper bound We recall Dedekindcompleteness real numbers expressible pml proof makes use propositional bisimulation structure R reals rationals Q 1 Thus simulations immediately obtain following inexpressibility result Lemma 83 Dedekindcompleteness expressible universal fragment Lasopml class frames Proof Clearly identity relation simulation structures Q R seen frames Q R Dedekindcompleteness expressible formula φ asopml R φ imply Q φ contradiction cid2 Recall formula δ cid3p cid3cid2p cid3cid21cid3p cid2p introduced Section 32 express Dedekind 2 nonempty upper bounded completeness Intuitively δ fails Q instance set q Q q satisﬁes antecedent However upper bound satisfy consequent F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 39 0 1 2 cid6 w Fig 5 Frames G1 G2 The Dcomponents omitted clarity As example prove ﬁniteness inﬁnity state space W expressible boolean frames This line situation pml Lemma 84 In language L sopml ﬁniteness inﬁnity expressible class boolean frames cid6 w Proof Consider frame G1 cid17N succ N cid18 naturals successor relation reﬂexivepoint frame G2 cid6 cid18 Fig 5 boolean deﬁnition D1 D2 In particular relations ω mapping cid6 w cid17w cid6 set form bisimulation pair Thus G1 natural n N w G2 validate formulas sopml However G1 inﬁnite G2 ﬁnite cid2 cid22 mapping N w cid6 w cid6 To conclude brief review expressivity results sopml sublanguage Lsopml reﬂexive transitive closure operator cid2 ﬁniteness expressible frames For n N let n set Ncid18 frame isomorphic structure natural numbers 0 n Gn frame cid17n succ 2 endowed successor relation Both GN Gn Let G class frames Gn n N consider following result ncid18 GN cid17N succ 2 Lemma 85 In language Lsopml theory ThG subset ThGN cid6 cid6 0 cid7 φ assignment V Proof Consider φ ThGN ﬁnite modal depth k N modal depth deﬁned propositional case maximum nesting modal operators 7 We assume loss generality GN V 0 cid7 φ cid6p V p k p A P assignment V We prove Gk V frames V p k admissible Gk More precisely prove induction n ψ subformula φ modal depth n k cid23 0 cid23 k n holds GN V cid23 ψ iff Gk V We start case n 0 If ψ atom p GN V cid23 ψ iff cid23 V p iff cid23 V cid6 cid23 ψ 0 cid23 k The cases propositional connectives immediate Finally suppose ψ pχ GN V cid23 χ cid6 iff Gk V U k D cid6 cid23 χ 0 cid23 k Then GN V cid23 ψ implies U D GN V cid6 p U cid6 cid23 χ Gk V Now suppose ψ subformula φ modal depth n 1 k let 0 cid23 k n 1 Assume ψ cid3χ cid6 cid23 1 χ cid6 cid23 GN V cid23 similar cases propositional connectives Then GN V cid23 ψ implies GN V cid23 1 χ 1 cid23 1 k n By induction hypothesis Gk V Gk V quantiﬁer cid2 cid6 cid23 ψ The direction Gk V cid6 cid23 ψ cid6p iff Gk V U cid23 ψ Consider U cid6 p U cid6 By Gk V In particular V V cid6 cid23 ψ U cid6 V p p cid6 Corollary 86 In language Lsopml ﬁniteness expressible frames cid6 0 cid7 φ k N φ ThG Hence φ Proof As consequence Lemma 85 GN V 0 cid7 φ implies Gk V expressed ﬁnite valid G GN contradiction Thus ﬁniteness expressible class frames cid2 In section use bisimulations sopml express notions Dedekindcompleteness expressible pml properties ﬁniteness expressed sopml Together remarks Section 51 3colorability existence Hamiltonian paths results provide interesting insight application modeltheoretic techniques analysis expressivity sopml In opinion bisimulations sopml raise number interesting questions We believe particular serves attention The Van Benthem theorem wellknown result model theory stating modal logic bisimulationinvariant fragment ﬁrstorder logic 6 In light notion bisimulation provided makes sense ask question present context sopml bisimulationinvariant fragment monadic second order logic possibly interpreted particular class frames In 35 proved modal μcalculus bisimulationinvariant fragment mso according standard notion bisimulation pml Presently clear result relates current setting We leave problem open future work 6 Conclusion In paper motivated studied use secondorder propositional modal logic speciﬁcation language reasoning knowledge spatial temporal properties artiﬁcial intelligence Speciﬁcally aimed developing proof modeltheoretic techniques notably complete axiomatisations truthpreserving bisimulations 40 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 support use sopml applications In Section 2 introduced 20 different classes Kripke frames according structure domain D quantiﬁcation features accessibility relations In Section 4 provided complete axiomatisations classes proving classes unaxiomatisable Further introduced suitable notions bisimulation proved preserve satisfaction universal sopml Finally use bisimulations obtain inexpressibility results Speciﬁcally showed ﬁnite having Hamiltonian path expressible sopml properties viz topological completeness 3colorability expressible We conclude sopml modelling language artiﬁcial intelligence particularly temporal spatial reasoning higherlevel knowledge agents knowledge agents agents knowledge beliefs shown Section 3 In respect reckon development modeltheoretic techniques key applications 61 Future research We presented results sopml course number remaining questions future research One question relative expressivity sopml qctl As mentioned Section 11 variant sopml domain quantiﬁcation similar variants qctl presented 41 main difference qctl based ctl sopml based basic modal logic The temporal logic ctl operators modal logic strictly expressive It currently clear qctl strictly expressive sopml Another direction future research ﬁnd fragments sopml wellbehaved As discussed Section 4 sopml variants unaxiomatisable frames variants include reachability operator cid2 unaxiomatisable frames coarser domains quantiﬁcation It interesting ﬁnd fragments sopml large interesting axiomatisable decidable In respect monodic fragment ﬁrstorder modal logic restrict number free variables scope modal operator looks promising 22953 We leave direction future work At end Section 5 mentioned checking sopml bisimulationinvariant fragment mso according newly introduced notion bisimulation Such result provide precise characteri sation expressive power sopml respect mso spirit van Benthems result modal logic 6 It deﬁne games style EhrenfeuchtFraïssé ﬁnegrained approach analysis expressivity sopml similarly case ﬁrstorder modal logic 34 Finally considered unique domain D quantiﬁcation frames But elaborate forms quantiﬁcation taken account instance consider different quantiﬁcation domain state frame Then consider statedependent assignments These variants studied extensively realm ﬁrstorder modal logic 1024 addressed sopml They speciﬁc applications Acknowledgements The authors like thank anonymous reviewers valuable comments input signiﬁcantly improved previous version paper F Belardinelli acknowledges support ANR JCJC Project SVeDaS ANR16CE400021 L Kuijer acknowledges support ERC project EPS 313360 Appendix A Selected proofs Lemma 11 1 Let φ formula L sopml F frame Kall If assignments V V cid6 coincide frφ F V w φ iff F V cid6 w φ 2 Recall X ap pl ml sopml cid5 ap pl bool ml modal sopml Let x X Then For ψ L b If F Kcid5x ψ L x model M F Kcid5x cid2ψcid3M D x free p φ F V p cid2ψcid3cid17F V cid18 w φ iff F V w φpψ Proof The proofs induction structure φ L sopml 1 If φ p frφ p M w φ iff w V p V cid6p iff Mcid6 w φ The inductive cases proposi tional connectives immediate F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 41 If φ cid2aψ M w φ iff w induction hypothesis w If φ pψ M w φ iff U D Mp induction hypothesis Mcid6 p cid6 Raw M w cid6 Raw Mcid6 w cid6 ψ Since frφ frψ V V coincide frψ cid6 ψ Mcid6 w φ The case φ cid2ψ similar cid6 p p U coincide frψ U V U w ψ Since frφ frψ p V cid6 U w ψ Since U chosen arbitrarily case iff Mcid6 w φ 2a The case x ap immediate assignments functions D Hence V p D p A P The case x pl follows equalities cid2ψcid3 W cid2ψcid3 cid2ψ ψ cid6cid3 cid2ψcid3 cid2ψ cid6cid3 cid2ψ ψ cid6cid3 cid2ψcid3 cid2ψ cid6cid3 fact D boolean algebra As x ml notice cid2cid2aψcid3 acid2ψcid3 cid2cid2ψcid3 cid2ψcid3 D boolean algebra closed operators The case x sopml immediate cid2ψcid3 W ψ L 2b Let ﬁrst consider x ap If φ atom r Mp V qr iff w V r r cid7 p w V q V q w φ iff U D Mp U p U q As consequence obtain Mr V r U w ϕpq induction hypothesis But means M w rϕpq rϕpq r p In cases M w φpq The inductive cases propositional connectives modal operators immediate simply commute substitution If φ rϕ r cid7 p Mp q cid7 r assignment V Mr As regards cases x pl ml sopml use item 1 We prove inductive step φ rϕ r cid7 p cases similar case x ap Observe Mp cid2ψcid3 w φ iff U D Mp U w ϕ Since r cid7 p ψ free p φ r frψ item 1 cid2ψcid3M cid2ψcid3Mr U w Therefore assignment V ϕpψ induction hypothesis But means M w rϕpψ rϕpψ cid2 U w ϕ Since r cid7 p q free p φ U q w ϕ Hence obtain Mr U equal V r w ϕ Mr U equal V r cid2ψcid3Mr U cid2ψcid3Mr U cid2ψcid3r cid2ψcid3r V qr V qr U p V r U p U p p p U sopml p V q w φ iff w V Lemma 20 For model M cid17F V cid18 world w W formula ψ L sopml M w ψ iff F ρ S T xψ ρx w ρP V pi Proof The proof induction structure ψ Since steps modal logic formulas common U w φ F ρcid6 S T xφ case quantiﬁer For ψ pφ M w ψ iff U D Mp induction hypothesis ρcid6 U S T xφ F ρ P S T xφ S T xψ cid2 coincides ρ ρcid6P U However means F ρ P Theorem 23 For intended lpml model M w M formula ϕ lpml M w ϕ iff M w tϕ Proof We prove crucial clause M w cid23pθcid23a cid23p iff M w cid4cid23a Before let ﬁrst means following speciﬁc case θa b p cid2a p cid2b p cid4a b Supa b cid10a b x yRbx y Rax y written Rbx Rax Since M w Supa b Rbx Rax holds M w F w Since cid2a p cid2b p locally deﬁnes Rbx Rax F w cid2a p cid2b p particular F w pcid2a p cid2b p Since pcid2a p cid2b p sentence obtain M w pcid2a p cid2b p Now suppose M w cid7 Supa b Then F w cid7 Supa b Since cid2a p cid2b p locally deﬁnes Rbx Rax know F w cid7 cid2a p cid2b p F assignment V cid6 w cid7 cid2a p cid2b p M w cid7 pcid2a p cid2b p As general case Since M w cid4cid23a cid10cid23a x holds M w F w note fo talks accessible Since θcid23a cid23p locally deﬁnes cid10cid23a x F w θcid23a cid23p cid10 L1 particular F w cid23pθcid23a cid23p Since cid23pθcid23a cid23p sentence M w pθcid23a cid23p Suppose M w cid7 cid4cid23a Then F w cid7 cid4cid23a F w cid7 cid10cid23a x Since θcid23a cid23p locally deﬁnes cid10cid23a x know F w cid7 θcid23a cid23p F assignment V cid6 w cid7 θcid23a cid23p M w cid7 cid23pθcid23a cid23p cid2 F V F V cid6 cid6 Lemma 25 Consider formulas ϕi Lsopml cid10i L1 assume ρx w Assume F frame fo Example 24 1 5 Let x free variable cid10i F w ϕi iff F ρ cid10i 42 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 Proof All items relatively immediate We proved ﬁrst ones Rather F ρ cid10 write F cid10w cid10 holds w F 1 Suppose F irreﬂexive w Raw w clearly F w pcid2a p p considering assignment V p Raw w V p As converse suppose F w pcid2a p p Hence model M F M w pcid2a p p M w cid7 pcid2a p p However Lemma 20 case iff Raw w hold Hence cid101w holds F 2 Suppose cid105w holds F let V F V w cid2c p It easy check F V Raw w cid2aq cid2bq p In words modify V way q true exactly ws asuccessors bsuccessor w satisﬁes q note successor asuccessor p true Conversely suppose cid105w hold v W Raw v Rbw v Rcw v We F w ϕ5 pcid2c p qcid2aq cid3bq p The assignment V V p Rcw witness p exactly true csuccessors w false v cid2aq true w q p holds v cid3bq p holds w cid2 q Recall Section 42 stated following theorem proof Theorem 62 If I 2 validities sopml modal epistemic frames recursively enumerable In particular sopml axiomatisable class modal epistemic frames Here provide proof The proof strategy use similar proof Theorem 57 deﬁne formulas ξgrid ξsane ξT serve purpose ψgrid ψsane ψT respectively The main difference lies deﬁne grid use twoagent S5 opposed single agent K This time use following pattern point n m Z Z represented single world instead ﬁve different worlds related relation Ra One ﬁve worlds satisﬁes propositional atom center worlds satisfy atoms left right respectively The left world n m related Rb right world n 1 m similarly directions following diagram left center right b left center right b left center right b b b left center right b left center right b left center right b b b left center right b left center right b left center right F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 43 As allows deﬁne cid2x x x dir abbreviations cid2xφ cid2ax cid2bx cid2acenter φ xφ ax bx acenter φ Then deﬁne grid exactly way K case ξgrid cid2 labels direction remain cid7 inversexy cid7 x yinv_dir cid12 cid7 cid7 x yperp_dir al j labels cid7 xdir uniquex commutexy lL directions left right bleft bright cid2bleft right jLi iL bup bdown cid2bup cid7 pl p cid2al p cid2bl p cid7 lL pp cid2c p remain c Agab px p cid2x p uniquex inversexy pp cid2xcid2 y p commutexy px y p cid2 ycid2x p dir inv_dir perp_dir L left right center Note uniquex inversexy commutexy identical counterparts proof Theorem 57 subformulas different If M w 0 ξgrid associate worlds M points Z Z following way w 0 cid6 cid6 right w asuccessors represent 0 0 ii w represents n m M w left w represents n 1 m iii similarly directions iv w represents n m csuccessor n m c b bsuccessor w M w cid6 As point n m represented world world represents point Since point represented center world right world left world world world obviously guarantee worlds representing point indistinguishable We center worlds representing n m modally indistinguishable labels guarantees world satisﬁes exactly labels L ii successor satisﬁes l l L directions guarantees left world paired right world relation Rb similarly directions Due deﬁned x cid2x abbreviations means center world xsuccessor center world x dir That turn implies point n m represented world says U D w U bsuccessors share label Since working modal domain quantiﬁcation implies label unique modal indistinguishability bequivalence classes Note fact left right worlds occur pairs implies world w represents point n m cid6 So world generated submodel represents point bsuccessor w represents point n n m remain says agent c b w modally indistinguishable csuccessors This implies cid6 m w w represent point n m rule iv w w The formulas uniquex inversexy commutexy relevant x y guarantee w w modally indistinguishable represent cid6 cid6 cid6 point n m rules ii iii w w modally indistinguishable cid6 We shown point n m represented world represents point worlds repre senting single point modally indistinguishable 44 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 cid19 requirements center world subformula scid6statess s center Variants ξsane ξT ψsane ψT deﬁned The required modiﬁcation ξsane ξT cid6 ψsane replaced cid6 ξsane Since modiﬁcations trivial list Overall deﬁne ζT ξgrid ξsane ξT s0 pos M w ζT implies M encodes execution T It follows T nonhalting M w ζT cid2center send In particular implies valid formulas sopml modal S5 frames recursively enumerable scid6statess s sstatess sstatess cid2 cid2 cid19 Lemma 87 1 It checked NPTIME exists bisimulation relation frames 2 Let F F cid6 respectively w w modal iff F cid6 Moreover Fw F cid6 frames let w w wcid6 However Fw F cid6 wcid6 isomorphic worlds F F cid6 wcid6 need cid6 cid6 Then Fw boolean respectively cid6 Now suppose D Proof We provide proof point 2 Suppose w w follows world w 1 Fw world w cid6 closed complement U D w There U cid6 1 vice versa cid6 cid6 D wcid6 cid6 wcid6 There T D w cid6 cid6 cid6 Now w 1 W w As noted w 1 1 cid6 cid6 cid6 wcid6 U 1 cid6 wcid6 true exactly w 1 U w 1 T true So W w U T D w cid22U U cid22T W Because ω cid22 bisimulation w 1 U iff w w cid6 wcid6 closed complement W cid6 Furthermore D cid6 wcid6 U W Exactly w cid6 wcid6 ωw 1 w bisimulation ω cid22 ωw w wcid6 ωw 1 w w 1 T iff w 1 F cid6 cid6 wcid6 U cid6 D W U U cid6 wcid6 cid6 1 cid6 1 cid6 1 cid6 cid6 cid6 wcid6 closed complement D w It shown similar way D W We shown D cid6 Note closed intersection D w So Fw boolean respectively modal F cid6 symmetrical reverse holds cid6 wcid6 wcid6 Since bisimilarity In order Fw Fwcid6 consider frame F given W w Ra W W D cid6 v cid6 witnessed ω cid6 Furthermore frames identical respective generated submodels cid6 w cid6 cid22 W W cid6 We w w given W cid6 W cid6 W D W cid6 R cid6 cid6 2W frame F cid6 cid6 w v w w Yet F F cid6 Finally suppose Fw F cid6 U D w cid22U w Furthermore noted w 1 w ω isomorphism cid2 Then w w cid6 1 wcid6 Suppose w W w ωw w cid6 2 cid6 1 ωw 1 w cid6 cid6 2 Let 1 ωw w cid6 w 2 So ω injective cid6 1 vice versa ω surjective It follows implies w iff w 1 U iff w w cid6 1 cid6 1 cid6 1 cid6 1 Theorem 74 If w w cid6 formula ϕ L sopml F w ϕ iff F cid6 w cid6 ϕ cid6 holds Proof We prove implication right left opposite direction symmetric If w w bisimulation pair ω cid22 As induction ϕ F V w cid7 ϕ assignment V F cid6 cid22V w cid6 Since ω simulation relation particular base cases ϕ p ϕ p Theorem 67 inductive cases propositional connectives ϕ cid2aψ ϕ cid2ψ ϕ pψ cid6 cid7 ϕ cid22V assignment p A P cid22V p U cid22V p U ωw w cid6 cid6 For ϕ cid3aψ F cid6 cid22V w cid6 ϕ iff v cid6 R cid6 F cid6 cid22V v cid6 ψ By bisimulation v Raw For ϕ pψ F cid6 cid22V w cid6 In particular F V v ψ induction hypothesis That F V w ϕ The case ϕ cid3ψ similar cid6 D cid6 ψ Now consider U D cid22U U F cid6 cid22V p U coincides Hence F cid6 cid22V cid6 cid6 ψ induction hypothesis cid6 ϕ iff U p U cid6 cid22V p U w U cid6 w cid6 ωv v cid6 aw D In particular assignments cid22V p F V U w ψ U D F V w ϕ cid2 p References Res 45 2012 145 1 A Baltag S Smets Eds Johan van Benthem Logic Information Dynamics Springer 2014 2 F Belardinelli A Lomuscio Interactions knowledge time ﬁrstorder logic multiagent systems completeness results J Artif Intell 3 F Belardinelli W van der Hoek Epistemic quantiﬁed boolean logic expressiveness completeness results Q Yang M Wooldridge Eds Proceedings TwentyFourth International Joint Conference Artiﬁcial Intelligence AAAI Press 2015 pp 27482754 4 F Belardinelli W van der Hoek A semantical analysis secondorder propositional modal logic Proceedings 30th AAAI Conference Artiﬁcial Intelligence AAAI16 AAAI Press 2016 pp 886892 5 F Belardinelli H van Ditmarsch W van der Hoek Secondorder propositional announcement logic C Jonker S Marsella J Thangarajah K Tuyls Eds Proceedings 2016 International Conference Autonomous Agents Multiagent Systems ACM 2016 pp 635643 httpdl acm org citation cfm id 2937019 6 J van Benthem Modal Correspondence Theory PhD thesis University Amsterdam 1976 7 P Blackburn M Rijke Y Venema Modal Logic Camb Tracts Theor Comput Sci vol 53 Cambridge University Press 2001 F Belardinelli et al Artiﬁcial Intelligence 263 2018 345 45 8 P Blackburn J van Benthem Modal logic semantic perspective Blackburn et al 9 pp 184 9 P Blackburn J van Benthem F Wolter Eds Handbook Modal Logic Elsevier Amsterdam The Netherlands 2007 10 T Brauner S Ghilardi Firstorder modal logic P Blackburn J van Benthem F Wolter Eds Handbook Modal Logic Elsevier 2007 pp 549620 11 RA Bull On modal logic propositional quantiﬁers J Symb Log 34 1969 257263 12 B Cate Expressivity second order propositional modal logic J Philos Log 35 2 2006 209223 httpdblp uni trierde db journals jphil jphil35 html Cate06 Press New York NY USA 2012 13 A Church A note entscheidungsproblem J Symb Log 1 1 1936 4041 14 EM Clarke O Grumberg DE Long Model checking abstraction ACM Trans Program Lang Syst 16 5 1994 15121542 15 PB Courcelle DJ Engelfriet Graph Structure Monadic SecondOrder Logic A LanguageTheoretic Approach 1st edition Cambridge University 16 HP van Ditmarsch W van der Hoek BP Kooi Knowing global local correspondence C Boutilier Ed IJCAI 2009 Proceedings 21st International Joint Conference Artiﬁcial Intelligence 2009 pp 955960 httpijcai org papers09 Papers IJCAI09 162 pdf 17 HP van Ditmarsch W van der Hoek BP Kooi Reasoning local properties modal logic L Sonenberg P Stone K Tumer P Yolum Eds Proceedings 10th International Conference Autonomous Agents Multiagent Systems AAMAS 2011 IFAAMAS 2011 pp 711718 http portal acm org citation cfm id 2031719 amp CFID 54178199 amp CFTOKEN 61392764 18 HP van Ditmarsch W van der Hoek BP Kooi Local properties modal logic Artif Intell 187 2012 133155 19 H Ebbinghaus J Flum W Thomas Mathematical Logic Springer 1994 20 R Fagin J Halpern Y Moses M Vardi Reasoning About Knowledge The MIT Press 1995 21 K Fine Propositional quantiﬁers modal logic Theoria 36 3 1970 336346 22 T French Bisimulation Quantiﬁers Modal Logic PhD thesis University Western Australia 2006 23 DM Gabbay An irreﬂexivity lemma applications axiomatizations conditions tense frames U Mönnich Ed Aspects Philosophical Logic Some Logical Forays Into Central Notions Linguistics Philosophy Springer Dordrecht Netherlands 1981 pp 6789 24 J Garson Quantiﬁcation modal logic D Gabbay F Guenthner Eds Handbook Philosophical Logic vol 3 Reidel 2001 pp 267323 25 J Halpern Y Moses Knowledge common knowledge distributed environment J ACM 37 3 1990 549587 26 F van Harmelen V Lifschitz B Porter Handbook Knowledge Representation Elsevier Science San Diego USA 2007 27 M Hennessy R Milner On observing nondeterminism concurrency Proceedings 7th Colloquium Automata Languages Program ming SpringerVerlag London UK 1980 pp 299309 httpdl acm org citation cfm id 646234 758793 28 J Hintikka Knowledge Belief An Introduction Logic Two Notions Contemporary Philosophy Cornell University Press 1962 http books google fr books id N28OAAAAIAAJ 29 I Hodkinson F Wolter M Zakharyaschev Monodic fragments ﬁrstorder temporal logics 20002001 ad R Nieuwenhuis A Voronkov Eds LPAR Lect Notes Comput Sci vol 2250 Springer 2001 pp 123 30 W van der Hoek JJC Meyer Making issues implicit knowledge explicit Int J Found Comput Sci 3 2 1992 193224 31 W van der Hoek M Pauly Modal logic games information Blackburn et al 9 pp 10771148 32 W van der Hoek M Wooldridge Multiagent systems F van Harmelen V Lifschitz B Porter Eds Handbook Knowledge Representation Elsevier 2008 pp 887928 33 W Holliday A Note Algebraic Semantics s5 Propositional Quantiﬁers Tech rep Group Logic Methodology Science UC Berkeley 2017 appear Notre Dame Journal Formal Logic httpescholarship org uc item 303338xr 34 N Immerman Descriptive Complexity SpringerVerlag 1999 35 D Janin I Walukiewicz On expressive completeness propositional mucalculus respect monadic second order logic U Montanari V Sassone Eds Proceedings 7th International Conference Concurrency Theory CONCUR 96 Springer 1996 pp 263277 36 M Kaminski ML Tiomkin The expressive power secondorder propositional modal logic Notre Dame J Form Log 37 1 1996 3543 http dblp uni trierde db journals ndjﬂ ndjﬂ37html KaminskiT96 37 D Kaplan S5 quantiﬁable propositional variables J Symb Log 35 1970 355 38 LB Kuijer Arbitrary Arrow Update Logic Common Knowledge RE coRE J Lang Ed Proceedings Sixteenth Conference Theoretical Aspects Rationality Knowledge TARK 2017 2017 pp 373381 39 A Kuusisto A modal perspective monadic secondorder alternation hierarchies Advances Modal Logic 2008 pp 231247 40 A Kuusisto Secondorder propositional modal logic monadic alternation hierarchies Ann Pure Appl Log 166 1 2015 128 httpsdoi org 10 1016 j apal 2014 08 003 httpwwwsciencedirect com science article pii S0168007214000876 41 F Laroussinie N Markey Quantiﬁed CTL expressiveness complexity Log Methods Comput Sci 10 4 2015 17 httpsdoi org 10 2168 LMCS 104 17 2014 httpwwwlsvens cachan fr Publis PAPERS PDF LM lmcs14 pdf 42 L Libkin Elements Finite Model Theory Texts Theoret Comput Sci EATCS Ser Springer Berlin Heidelberg 2004 httpsbooks google fr books id zsJlEK4nK7sC 43 Z Manna A Pnueli The Temporal Logic Reactive Concurrent Systems vol 1 SpringerVerlag 1992 44 E Mares R Goldblatt An alternative semantics quantiﬁed relevant logic J Symb Log 71 1 2006 163187 45 JJC Meyer W v d Hoek Epistemic Logic AI Computer Science Cambridge University Press New York NY USA 1995 46 W Quine Quantiﬁers propositional attitudes J Philos 53 5 1956 177187 47 F Roelofsen Distributed knowledge J Appl NonClass Log 17 2 2007 255273 48 AP Sistla MY Vardi P Wolper The complementation problem büchi automata applications temporal logic extended abstract W Brauer Ed Automata Languages Programming 12th Colloquium Nafplion Greece July 1519 1985 Proceedings Lect Notes Comput Sci vol 194 Springer 1985 pp 465474 49 AP Sistla Theoretical Issues Design Veriﬁcation Distributed Systems PhD thesis CarnegieMellon University Cambridge MA USA 1983 aAI8403047 doi org 10 1112 plms s2 42 1230 50 AM Turing On computable numbers application entscheidungsproblem Proc Lond Math Soc s242 1 1937 230265 https 51 J Vaananen Secondorder logic foundations mathematics Bull Symb Log 7 4 2001 504520 httpwwwjstororg stable 2687796 52 Y Venema Derivation rules antiaxioms modal logic J Symb Log 58 1993 10031034 httpsdoi org 10 2307 2275109 httpjournals cambridge org article _S0022481200021010 53 F Wolter M Zakharyaschev Axiomatizing monodic fragment ﬁrstorder temporal logic Ann Pure Appl Log 118 12 2002 133145