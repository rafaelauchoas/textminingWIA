Artiﬁcial Intelligence 174 2010 12851306 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Reducts propositional theories satisﬁability relations generalizations semantics logic programs Miroslaw Truszczy nski Department Computer Science University Kentucky Lexington KY 40506 USA r t c l e n f o b s t r c t Article history Received 24 November 2009 Received revised form 6 August 2010 Accepted 8 August 2010 Available online 12 August 2010 Keywords Logic programming Stable models Supported models Reducts Logic HT Over years stablemodel semantics gained position correct programs valued interpretation default negation programs However aggregates constraints stablemodel semantics broadly accepted generalization stemming work Pearce Ferraris Lifschitz competitor semantics proposed Faber Leone Pfeifer essentially different Our goal explain relationship semantics Pearce Ferraris Lifschitzs extension stablemodel semantics best viewed setting arbitrary propositional theories We propose extension FaberLeonePfeifer semantics FLP semantics short propositional language reveals common threads differences FLP stablemodel semantics We use characterizations FLPstable models derive corresponding results strong equivalence normal forms theories FLP semantics We apply similar approach deﬁne supported models arbitrary propositional theories study properties 2010 Elsevier BV All rights reserved 1 Introduction The stablemodel semantics introduced Gelfond Lifschitz 23 foundation answerset programming 37 4122 paradigm modeling solving search problems Answerset programming broadly accepted effective knowledge representation tool modeling intelligent agents reasoning complex domains 12133 In decade successfully applied areas artiﬁcial intelligence product conﬁguration 47 planning 5048 reasoning action 25 diagnosis 432 applications concerning largescale systems like space shuttle ﬂight controller 43 Answerset programming applied artiﬁcial intelligence problems arising bioinformatics 446 linguistics 7 automated music generation 5 The success answerset programming knowledge representation formalism applications artiﬁcial intelli gence essential theoretical underpinnings semantics established Consequently right inception stablemodel semantics received attention The present paper contributes general line research extending theoretical framework stablemodel semantics based results ideas proposed developed Pearce 44 Ferraris 19 closely related semantics play major role answerset programming FaberLeonePfeifer stablemodel semantics 16 supportedmodel semantics 9138 A farreaching contribution Pearce 44 explained stablemodel semantics terms models theories logic hereandthere HT short introduced Heyting 26 It important consequences First resulted generalization stablemodel semantics originally limited restricted syntax program rules arbitrary theories An extended abstract paper appeared proceedings 2009 International Conference Logic Programming Email address mirekcsukyedu 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201008004 1286 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 language propositional logic discuss role development later Second brought notion strong equivalence programs fundamental modular program development 32 Strong equivalence extensively studied past decade That research resulted extensions reﬁnements original concept characterizations complexity results 323551145249 The original deﬁnition stable models 23 based reduct program respect set atoms The characterization terms logic HT makes reference reducts employs form model minimization Ferraris 19 extended notion reduct propositional theories developed reductbased deﬁnition stable models equivalent provided logic HT exposition idea paper Ferraris Lifschitz 21 The papers Pearce Ferraris resulted elegant comprehensive treatment stablemodel semantics They raise question generalizations stablemodel semantics case arbitrary logic theories An indication comes work Faber et al 16 programs aggregates Aggregates form weight atoms introduced answerset programming Niemelä Simons 42 extended stablemodel semantics class programs Ferraris 19 cast generalization terms stable models propositional theories Stable models programs aggregates longer guaranteed minimal models From perspective Ferraris result surprising Stable models propositional theories general minimalmodel property However minimization important knowledgerepresentation principle Faber et al 16 sought alternative semantics programs constraints minimalmodel property Naturally wanted coincide original semantics class programs aggregates They came solution satisﬁed requirements modifying concept reduct In setting aggregates FaberLeonePfeifer stablemodel semantics FLP semantics different extension original stablemodel semantics based logic HT paper speak stablemodel semantics original semantics mind Thus question alternative generalizations relevant The FLP semantics steadily gaining importance It basis interpreting aggregates dlv 17 approaches aiming integrate answerset programming declarative programing paradigms 11 A related question concerns possibility generalizing semantics relevant answerset programming propositional logic language The consider supportedmodel semantics Its importance stems properties First supportedmodel semantics key component characterization stable models terms loop formulas 36 gave rise fast algorithms computing stable models programs 363130 Second class modal theories restricted syntax precise counterpart semantics expansions autoepistemic logic 4038 important nonmonotonic logic modeling belief sets agent perfect introspection capabilities Given applications FaberLeonePfeifer stablemodel semantics alternative standard Gelfond Lifschitz role supportedmodel semantics answerset programming nonmonotonic logics objective investigate semantics studied means stemming developed Pearce Ferraris stablemodel semantics Speciﬁcally following goals 1 To extend semantics Faber et al 16 language propositional logic We equivalent ways means generalization reduct introduced Faber et al terms certain satisﬁability relation similar deﬁnes logic HT We FLP semantics generalizes properties stable model semantics logic programs regarded legitimate extension alongside extension based logic HT We derive additional properties FLP semantics including characterization strong equivalence semantics normalform result 2 To relate FLP stablemodel semantics propositional theories We expressed sense modular translations use auxiliary atoms FLPstable models theory stable models image translation vice versa 3 To apply similar twopronged approach exploiting notion reduct satisﬁability relation supported model semantics We supported models deﬁned arbitrary propositional theories We generalize propositional language wellknown properties supported models results connecting stable supported models programs While implemented answerset programming systems 10 applications support theories consisting rules formally deﬁne rules section generalization answerset programming language propositional logic important From theoretical standpoint eliminates possible artifacts syntactic restrictions allows identify key principles semantics answerset programming In particular considering answer set programming language pinpoints basic role implication nonclassical connective nonclassical behavior negation consequence fact negation expressed means implication false consequent The key role implication emphasized recursive deﬁnitions reducts case treated nonstandard way Moreover leads semantics HTinterpretations paves way generalizations answerset programming semantics case ﬁrstorder logic theories 2845 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1287 From practical standpoint generalizations syntax answerset programming language makes answer set programming ﬂexible modeling formalism provides basis extensions language instance aggregates 20 Our paper demonstrates ideas originated Pearce Ferraris extend semantics logic programs FLP semantics supportedmodel semantics The results concerning FLP semantics potential implications applications They provide certain normalform result cf Section 4 points possible extension syntax disjunctive logic program rules currently supported disjunctive logic programming systems dlv The results strong equivalence cf Section 35 lay necessary foundation development techniques methods modular program design FLP semantics Finally extension FLP semantics arbitrary rules demonstrates feasibility extending present implementation dlv richer input language restricted rules Our results supportedmodel semantics As observed logic programming supportedmodel semantics captures direct way fragment autoepistemic logic 38 By extending supportedmodel semantics entire language propositional logic provide way expand scope direct connection Our paper organized follows In section recall deﬁnitions stable models propositional theories The ﬁrst terms reduct introduced Ferraris 19 It extends original approach Gelfond Lifschitz The second deﬁnition terms HTinterpretations Pearce 44 In Section 3 discuss approach Faber et al 16 extend arbitrary propositional theories study properties resulting concepts In particular characterize general FLPstablemodel semantics terms appropriately modiﬁed concept reduct terms certain entailment relation based HTinterpretations We discuss question minimality FLPstable models complexity reasoning FLPstable models concept strong equivalence respect FLPstable models Finally present normal form theorem semantics In Section 5 techniques paper applied supportedmodel semantics Speciﬁcally deﬁne supported models arbitrary propositional theories modifying notion reduct introducing entailment relation based HTinterpretations We derive results generalized supportedmodel semantics particular study concept strong equivalence supportedmodel semantics relationship semantics based stable models FLPstable models 2 Preliminaries In section introduce basic terminology general deﬁnitions stablemodel semantics terms hereandthere models 44 terms Ferraris reduct Freduct short 19 generalizes original GelfondLifschitz reduct We consider language propositional logic determined inﬁnite countable set At atoms boolean nectives A BackusNaur Form expression ϕ Aϕ ϕϕ ϕϕ ϕ A At provides concise deﬁnition formula The parentheses disambiguate order binary operations Whenever possible omit Generalizing concept head program rule occurrence atom head occurrence occur antecedent implication Finally writing formulas use following shorthands cid7 F F A set formulas theory In case semantics discuss essential difference ﬁnite theories formulas The represented conjunctions elements We distinguish formulas theories want address case inﬁnite theories In paper consider special types formulas theories A rule formula A1 Am B1 Bn C1 C s D1 Dt 1 Ai s B s Ci s D s atoms If use r denote rule 1 formulas A1 Am B1 Bn C1 C s D1 Dt body head r denote bodyr headr respectively If m n 0 represent rule head If s t 0 write head rule A program set rules We emphasize phrases head occurrence formula discussed paragraphs element head rule different meaning In particular literal D element head rule 1 corresponding occurrence D rule head occurrence For consistency standard logic programming terminology referring rules 1 negated atoms heads use term disjunctive program rule simply disjunctive rule Further disjunctive rules atom head normal program rules simply normal rules By convention disjunctive rules negated atoms head terminology agrees standard Originally stablemodel semantics deﬁned Gelfond Lifschitz 23 normal programs collections normal rules The deﬁnition later extended disjunctive programs collections disjunctive rules Gelfond Lifschitz 24 programs understood collections rules 1 Lifschitz Woo 34 1288 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 superclass programs programs nested expressions Lifschitz et al 33 Finally case arbitrary theories addressed Pearce 44 later different way Ferraris 19 These approaches equivalent We discuss starting For formula F set atoms Y deﬁne Ferraris reduct Freduct F respect Y written F Y induction Y R1 R2 If A atom cid2 AY A Y cid8 A R3 For cid3 G HY R4 For G Y H Y Y cid8 G H cid3 G HY G Y H Y Y cid8 G H We folded case R4 case R3 However concepts reduct consider later paper differ way implication handled case separately For theory F deﬁne Freduct F Y setting F Y F Y F F Next deﬁne Y At stable model F Y minimal model theory F Y One stable models models term stable model justiﬁed We illustrate notions introduced We use theories discussed paper Example 1 Let E1 A A To compute reduct E tautology Thus E 1 A A It follows E 1 subset X X cid8 E A A Since cid12cid8 A A 1 Thus stable model E1 A A A A 1 Similarly A cid8 A A E A expanded form A A A A A A deﬁnition A Thus E A X cid8 E A A Clearly A cid8 E A A stable model E1 1 1 1 1 note cid8 A A formula classical Moreover A stands A Since cid12cid8 A 1 trivially proper Clearly cid8 E The deﬁnition implies A A A Moreover A cid8 A Since A cid12cid8 A A A Also As proper subset X A Example 2 Let E2 A A A To compute reduct E particular stable model E2 2 note cid12cid8 A A A Thus E 2 It follows Next observe A cid8 A A A Thus E A A A Clearly cid8 E A Thus A stable model E2 E2 stable models case normal programs restrict search stable models subsets set atoms occur theory Since A A A A E A A A A A A 2 2 2 This notion stable model generalizes earlier ones It coincides proposed Pearce 44 The approach Pearce based logic HT 26 logic located strictly intuitionistic propositional logics Stable models deﬁned terms satisﬁability relation cid8ht logic HT A pair cid13 X Y cid14 X Y At HTinterpretation X Y The relation cid8ht HTinterpretations formulas deﬁned inductively follows 1 cid13 X Y cid14 cid12cid8ht 2 cid13 X Y cid14 cid8ht A X cid8 A applies A At 3 cid13 X Y cid14 cid8ht G H cid13 X Y cid14 cid8ht G cid13 X Y cid14 cid8ht H 4 cid13 X Y cid14 cid8ht G H cid13 X Y cid14 cid8ht G cid13 X Y cid14 cid8ht H 5 cid13 X Y cid14 cid8ht G H Y cid8 G H cid13 X Y cid14 cid12cid8ht G cid13 X Y cid14 cid8ht H The relation extends standard way theories If theory F cid13 X Y cid14 cid8ht F cid13 X Y cid14 HTmodel F Some important properties relation cid8ht gathered cf Ferraris Lifschitz 21 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1289 Theorem 1 For formula F X Y At 1 cid13 X Y cid14 cid8ht F implies Y cid8 F 2 cid13 X Y cid14 cid8ht F Y cid8 F 3 cid13Y Y cid14 cid8ht F Y cid8 F Pearce 44 deﬁned Y stable model theory F cid13Y Y cid14 cid8ht F X Y cid13 X Y cid14 cid8ht F X Y form minimality Ferraris Lifschitz 21 proved approaches equivalent showing following key results Theorem 2 Let F theory 1 Y At Y cid8 F Y cid8 F Y 2 X Y At X cid8 F Y cid13 X Y cid14 cid8ht F Example 3 Let consider theory E1 A A Example 1 let Y Since Y cid12cid8 A cid13Y Y cid14 cid12cid8ht A Y cid8 A A Thus cid13Y Y cid14 cid8ht A A words cid13Y Y cid14 cid8ht E1 Trivially proper subset X Y cid13 X Y cid14 cid8ht E1 Thus Y stable model E1 according deﬁnition Pearce Next let Z A Then Z cid8 A A cid13Z Z cid14 cid8ht A Thus cid13Z Z cid14 cid8ht A A sequently cid13Z Z cid14 cid8ht E1 The proper subset Z X Clearly cid13 X Z cid14 cid12cid8ht A A X Let observe Z cid8 A cid13 X Z cid14 cid12cid8ht A Z cid12cid8 A Thus cid13 X Z cid14 cid8ht A It follows cid13 X Z cid14 cid12cid8ht A A Thus cid13 X Z cid14 cid12cid8ht E1 Z A stable model E1 according deﬁnition Pearce Similarly check theory E2 Example 2 stable models according deﬁnition Pearce Of course outcomes expected given discussion Examples 1 2 equivalence deﬁnitions proposed Ferraris Pearce We conclude noting paper interested satisﬁability reducts dis cussed section types introduce later respect standard propositional logic semantics Thus compute reduct simplify propositional tautologies Such simpliﬁcations effect concept stability For instance simplify reduct E A 1 A A 3 FLP semantics Faber et al 16 based work notion reduct differs proposed Gelfond Lifschitz Using notation deﬁned follows Let R disjunctive rule negated atoms head A1 Am B1 Bn C1 C s Ai B Ci atoms let Y set atoms The FLPreduct R Y notation use meant distinguish FLP Freduct R Y cid8 A1 Am B1 Bn cid7 Given disjunctive program P P Y obtained replacing rule R P R Y Finally Y stable model P sense Faber et al Y minimal model P Y Faber et al 16 proved stable models disjunctive programs coincide standard stable models They observed FLPreduct depend syntactic form body rule All matters body satisﬁed Y Thus extended deﬁnition general formulas form F C1 C s 2 Ci atoms F propositional formula1 That allowed extend concept stable model class theories consist generalized disjunctive rules Importantly proved stable models sense theories minimal models stablemodel semantics property For instance program theory E1 A A FLPstable model stable models A cf Example 1 Example 3 31 General FLP semantics To extend approach arbitrary propositional theories ﬁrst generalize notion FLPreduct To end follow inductive pattern deﬁnition Freduct There change F F A A At 1 Faber et al conjunctions literals aggregate atoms F immaterial 1290 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 F G H Indeed way cases handled Thus case requires discussion F G H Once case settled deﬁne Y FLPstable model theory F Y minimal model FLPreduct F Y So let discuss case implication A literal reading FLPreduct rules suggests following inductive deﬁnition case F G H G HY G H Y cid8 G G HY cid7 However choice occurrences occurrences consequent im plication interpreted classical way While problem formulas implications occurring consequent toplevel implication working correctly class formulas considered Faber et al general leads counterintuitive behavior For instance let F A G B A A B atoms As B appear head rule G false reasonable generalization stablemodel semantics Consequently F G stable models However proposed deﬁnition Let Y A Since A A Y cid12cid8 A F Y cid7 Consequently Y minimal model F Y cid7 model Y stable model F On hand Y cid8 B G Y B A Thus clearly Y minimal model G Y consequently stable model G A problem leads In G A head occurrence informally deﬁning clause A G G A stable model Thus need handle case differently way restriction theories consisting formulas 2 obtain concept stable model proposed Faber et al In particular ensure occurrences consequent occurrence treated consistently nonclassical way In remainder section argue accomplished following deﬁnition FLP4 G HY G H Y cid7 Y cid8 G Y cid8 H Y cid12cid8 G Y cid12cid8 G H While looks different original deﬁnition 16 preserves basic idea Speciﬁcally ﬁrst case implication strongly satisﬁed antecedent consequent satisﬁed Y antecedent unchanged following spirit original deﬁnition Faber et al replace consequent recursively reduct sure implications occurring antecedent treated consistent way The case Y weakly satisﬁes implication satisfy antecedent dealt previous naive attempt deﬁnition Faber et al Namely reﬂecting principle antecedent implication false informally implication ﬁre implication immaterial replaced cid7 effectively removed In case implication satisﬁed Y replaced Faber et al distinguish case fact proceed differently They rule program However replaced propose following pattern Freduct affecting resulting concept stable model Indeed Y satisfy rule program Y stable model program Replacing rule violated Y makes explicit To summarize deﬁne FLPreduct formula F respect Y F Y recursively clauses R1 R3 deﬁnition Freduct adjusted notation F Y clause FLP4 implication We extend deﬁnition theories standard way With deﬁnition hand deﬁne notion FLPstable model propositional theory announced Deﬁnition 1 Let F theory A set atoms Y FLPstable model F Y minimal model F Y Example 4 We consider theory E1 A A Example 1 To compute reduct E cid12cid8 A Thus E 1 trivially proper subset X X cid8 E FLPstable model E1 cid7 Clearly cid8 E 1 1 note 1 Thus On hand A cid8 A A cid8 A Thus E A A Thus E A 1 A A Clearly A cid8 E A 1 However cid8 E A A A The deﬁnition implies A Thus A FLPstable model E1 A 1 A 1 Example 5 Next reconsider theory E2 A A A Example 2 To compute reduct E cid12cid8 A A A Thus E It follows Example 2 FLPstable model E2 2 2 note M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1291 On hand observe A cid8 A A A cid8 A Thus E follows E A A A Clearly A cid8 E cid12cid8 E Thus A FLPstable model E2 A 2 A 2 A 2 A 2 A A A A Since A A A Examples 1 2 4 5 stable models need FLPstable models vice versa Later provide detailed comparison semantics 32 Basic properties We start generalization wellknown property standard Freduct disjunctive programs cf Theo rem 2 Proposition 1 For theory F set atoms Y Y cid8 F Y cid8 F Y Proof It prove formula F Y cid8 F Y cid8 F Y We proceed induction The base cases F F A A At evident Let F G H If Y cid12cid8 F F Y Thus sides equivalence false equivalence follows If Y cid8 F Y cid8 F Y F Y G Y H Y Since 1 Y cid8 F Y cid8 G Y cid8 H 2 Y cid8 F Y Y cid8 G Y Y cid8 H Y equivalence Y cid8 F Y cid8 F Y follows induction hypothesis The argument similar Thus let F G H If Y cid12cid8 F F Y equivalence assertion holds Similarly Y cid12cid8 G F Y cid7 Y cid8 F Y cid8 F Y hold Finally let Y cid8 G Y cid8 H In case F Y G H Y By inductive hypothesis Y cid8 H Y Y cid8 G H Y Thus case Y cid8 F Y cid8 F Y hold cid2 It follows FLPstable models models formulas theories Corollary 1 Let F theory Y set atoms If Y FLPstable model F Y model F This result allows prove theories consisting formulas form 2 FLPstable models deﬁned stable models Faber et al 16 coincide Thus approach generalization Faber et al Theorem 3 Let P theory consisting formulas type 2 Then Y stable model P according deﬁnition Faber et al 16 Y FLPstable model according Deﬁnition 1 cid15 cid15cid15 Proof Let P theory consisting formulas 2 let Y set atoms For formula R F C1 C s P denote R reducts R respect Y according Faber et al according deﬁnition respectively Further write P cid15 reducts program P respect Y according Faber et al according deﬁnition respectively P cid15cid15 R Reasoning direction assume Y model P known stable models according consists rules R F differs formula cid15 cid15 1 C t contain cid7 It evident Y minimal model P cid15cid15 Faber et al 16 models FLPstable models follows Corollary 1 Thus P cid15 C1 C s Y cid8 F In addition possibly contain cid7 The reduct P cid15cid15 R F C1 C s P retained P cid15 precisely elements C1 C s hold Y In addition P cid15 Z Y Z cid8 P cid15 result follows cid2 Thus Y minimal model P cid15 Z cid8 P cid15cid15 contributes P cid15cid15 reduct R P cid15cid15 cid15 t C cid15cid15 F C C cid15 1 One problematic properties literal attempt generalize approach Faber et al stable models theories contained atoms head occurrences We generalization behaves properly respect Proposition 2 Let F theory Y FLPstable model F Then atom Y head occurrence F Proof First prove induction set S atoms containing atoms head occurrences formula F Z At Z cid8 F Z S cid8 F Z It stronger property need inductive argument work If F claim trivially true If F A A S Let Z subset At Z cid8 F Then follows A Z F Z A Thus Z S cid8 F Z holds claimed If F G H G H atoms head occurrences G H respectively contained S Thus induction hypothesis applies G H G H respectively claim follows 1292 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 Finally let F G H Since Z cid8 F F Z cid7 Z cid8 G Z cid8 H F Z G H Z In ﬁrst case assertion evident In case Z cid8 H By induction hypothesis atoms head occurrences H head occurrences F belong S Z S cid8 H Z Thus Z S cid8 F Z case Next prove result Let S set atoms head occurrences F Since Y FLPstable model F Y cid8 F Y By Proposition 1 Y cid8 F By claim proved Y S cid8 F Y Since Y minimal model F Y Y S Y Y S Y consequently Y S cid2 Finally state prove properties use later paper Proposition 3 For formulas F G set atoms Y 1 F Y Y cid12cid8 F 2 F GY F Y G Y Proof 1 We proceed induction The cases F F A A At straightforward Thus let assume F G H First consider case Y cid12cid8 F In case F Y assertion follows Conversely let Y cid8 F Then Y cid8 G Y cid8 H By Proposition 1 Y cid8 G Y Y cid8 H Y Thus Y cid8 G Y H Y Since case F Y G Y H Y follows Y cid8 F Y F Y cid12 Thus equivalence holds The case essentially It remains consider case F G H For suﬃces notice Y cid12cid8 F F Y Conversely let Y cid8 F Case 1 Y cid12cid8 G Then F Y cid7 F Y cid12 Case 2 Y cid8 G Since Y cid8 F Y cid8 H follows Consequently F Y G H Y In addition Proposition 1 Y cid8 H Y Thus Y cid8 F Y F Y cid12 2 We consider case The case similar If Y cid8 F G F GY F Y G Y equal Thus let assume Y cid12cid8 F G It follows F GY Moreover Y cid12cid8 F Y cid12cid8 G By 1 F Y G Y Thus F Y G Y claim follows cid2 33 Minimalmodel property The main objective Faber et al 16 generalize stablemodel semantics class theories consisting rules form 2 stable models minimal models Faber et al proved generalization property The extended FLP semantics minimalmodel property broad class theories including consisting rules 2 general Example 6 Let F A A Y Since Y cid8 A Y cid12cid8 A AY A Y cid7 Moreover AY Thus F Y AY AY cid7 Clearly Y minimal model F Y FLPstable model F Next let consider Z A We A Z A Z A Z A Thus F Z A Z A Z A Again Z minimal model F Z FLPstable model F Thus FLPstable models F form antichain Z minimal model F To broad class theories FLPstable models minimal models introduce monotone disjunctivemonotone formulas Deﬁnition 2 A formula F monotone X Y At X cid8 F implies Y cid8 F A formula F disjunctivemonotone occurrence F operates monotone formulas We note disjunctivemonotone formula monotone For instance A C disjunctive monotone contains occurrence monotone Similarly monotone formula necessarily disjunctivemonotone For instance cid7 A monotone disjunctive monotone Proposition 4 For disjunctivemonotone formula F sets atoms X Y X Y X cid8 F Y cid8 F X cid8 F Y Proof We proceed induction The case F vacuously true If F A A atom F Y A F follows assumption Y cid8 A Thus X cid8 F Y X cid8 F For inductive step cases consider M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1293 Case 1 F G H Since F disjunctivemonotone G H disjunctivemonotone X cid8 G X cid8 H Y cid8 G Y cid8 H By induction hypothesis X cid8 G Y X cid8 H Y Consequently X cid8 G Y H Y G HY F Y Case 2 F G H Since X cid8 F X cid8 G X cid8 H Without loss generality assume X cid8 G Since F disjunctivemonotone G disjunctivemonotone Moreover G monotone Thus Y cid8 G By induction hypothesis X cid8 G Y Since F Y G Y H Y X cid8 F Y Case 3 F G H Since Y cid8 F F Y cid12 If F Y cid7 X cid8 F Y cid7 If hand Y cid8 G Y cid8 H F Y G H Y cases consider If X cid12cid8 G X cid8 F Y If X cid8 G X cid8 H Since H disjunctivemonotone F induction holds X cid8 H Y Thus X cid8 F Y case cid2 Corollary 2 Let F theory formula F form H G H H disjunctivemonotone For X Y At X cid8 F Y cid8 F X cid8 F Y Proof To prove result suﬃces prove formula F F If F disjunctivemonotone result follows Proposition 4 If F G H H disjunctivemonotone reason follows Since Y cid8 F F Y cid7 Y cid8 G Y cid8 H F Y G H Y In ﬁrst case X cid8 F Y evident In second case X cid12cid8 G assertion follows Otherwise X cid8 F X cid8 H By Proposition 4 X cid8 H Y follows Consequently X cid8 F Y follows cid2 Proposition 4 Corollary 2 imply class theories type considered Corollary 2 FLPstable models minimal Corollary 3 Let F theory formula F form H G H H disjunctivemonotone If Y FLPstable model F Y minimal model F Proof Since Y model F Y Y model F Proposition 1 Let assume X cid8 F X Y By Corollary 2 X cid8 F Y Since Y minimal model F Y X Y Thus Y minimal model F cid2 Corollary 3 extends result Faber et al applies particular theories consisting formulas type 2 It generalized case formula theory form Hk Hk1 H1 H0 k cid2 0 H0 disjunctive monotone The argument essentially 34 Computational complexity FLP semantics It known truth value formula interpretation polynomial time It follows given formula set atoms Y compute F Y polynomial time means simple recursive algorithm directly follows deﬁnition reduct Further problem decide model formula minimal model class coNP fact coNPcomplete Indeed complementary problem decide given model formula minimal NP model properly contained given serves witness Thus problem decide formula FLPstable model class Σ P 2 The completeness problem class Σ P 2 follows fact disjunctive programs FLPstable models coincide stable models 16 existence problem stable models Σ P 2 complete 15 Consequently deciding existence FLPstable model Σ P 2 complete We state result related results proved similar arguments Theorem 4 The problem existence FLPstable model Σ P given atom member FLPstable model Π P FLPstable model Σ P 2 complete 2 complete Skeptical reasoning FLPstable models 2 complete Brave reasoning FLPstable models given atom member 35 HTinterpretations FLP semantics strong equivalence We FLPstable models terms HTinterpretations apply result characterize strong equiva lence respect FLP semantics First deﬁne certain satisﬁability relation cid8ﬂp HTinterpretations formulas The deﬁnition inductive follows pattern cid8ht The cases cid13 X Y cid14 cid8ﬂp F F F A A At F G H G H handled case cid8ht For implication following clause cid15 5 cid13 X Y cid14 cid8ﬂp G H Y cid8 G H Y cid12cid8 G X cid12cid8 G cid13 X Y cid14 cid8ﬂp H 1294 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 The relation cid8ﬂp extends standard way HTinterpretations sets formulas If F theory cid13 X Y cid14 cid8ﬂp F cid13 X Y cid14 FLPmodel F confused FLPstable model We following simple property cid8ﬂp mirroring similar cid8ht cf Theorem 1 Theorem 5 For formula F sets X Y At 1 cid13 X Y cid14 cid8ﬂp F implies Y cid8 F 2 cid13 X Y cid14 cid8ﬂp F Y cid12cid8 F 3 cid13Y Y cid14 cid8ﬂp F Y cid8 F Proof 1 The case F evident If F A A At cid13 X Y cid14 cid8ﬂp F A X Thus A Y Y cid8 F The inductive step F G H F G H standard If F G H cid13 X Y cid14 cid8 F particular Y cid8 F deﬁnition cid8ﬂp case implication Thus claim follows 2 By deﬁnition cid13 X Y cid14 cid8ﬂp F Y cid8 F Y cid12cid8 F X cid12cid8 F cid13 X Y cid14 cid8ﬂp Thus cid13 X Y cid14 cid8ﬂp F Y cid8 F claim follows 3 We argument inductive step case F G H basis cases straight forward First deﬁnition cid13Y Y cid14 cid8ﬂp F Y cid8 F Conversely Y cid8 F Y cid12cid8 G Y cid8 H By induction hypothesis Y cid8 H equivalent cid13Y Y cid14 cid8ﬂp H Thus cid13Y Y cid14 cid8ﬂp F cid2 Similarly relation cid8ht Freduct cid8ﬂp relation FLPreduct closely connected cf Theorem 2 Theorem 6 For formula F sets atoms X Y X cid8 F Y cid13 X Y cid14 cid8ﬂp F Proof We proceed induction The case F straightforward Let F A A At If X cid8 A Y AY cid12 Thus AY A It follows X cid8 A cid13 X Y cid14 cid8 A Conversely cid13 X Y cid14 cid8 A X cid8 A Since X Y Y cid8 A Thus AY A X cid8 AY required let F G H If X cid8 G HY G HY G Y H Y Thus X cid8 G Y X cid8 H Y By induc tive hypothesis cid13 X Y cid14 cid8 G cid13 X Y cid14 cid8 H Thus cid13 X Y cid14 cid8 G H needed Conversely let cid13 X Y cid14 cid8 G H Then cid13 X Y cid14 cid8 G cid13 X Y cid14 cid8 H inductive hypothesis X cid8 G Y X cid8 H Y Thus X cid8 G Y H Y By Proposition 3 G Y H Y G HY Thus X cid8 G HY Next The argument case F G H similar Thus case F G H We following equivalences 1 X cid8 G HY 2 Y cid12cid8 G Y cid8 G Y cid8 H X cid8 G H Y 3 Y cid12cid8 G Y cid8 H X cid8 G H Y 4 Y cid12cid8 G Y cid8 H Y cid12cid8 G X cid8 G H Y 5 Y cid8 G H Y cid12cid8 G X cid12cid8 G X cid8 H Y 6 Y cid8 G H Y cid12cid8 G X cid12cid8 G cid13 X Y cid14 cid8ﬂp H The statement equivalent cid13 X Y cid14 cid8ﬂp F result follows cid2 Theorem 6 key characterization FLPstable models terms relation cid8ﬂp Corollary 4 Let F theory Y set atoms Then Y FLPstable model F cid13Y Y cid14 cid8ﬂp F X Y cid13 X Y cid14 cid12cid8ﬂp F Proof By deﬁnition Y FLPstable model F Y cid8 F Y X Y X cid12cid8 F Y We apply Theorem 6 The condition equivalent cid13Y Y cid14 cid8ﬂp F The stated equivalently X Y cid13 X Y cid14 cid12cid8ﬂp F Thus assertion follows cid2 Example 7 Let consider theory E2 A A A Example 2 Let Y Then Y cid12cid8 A A A cid13Y Y cid14 cid12cid8ﬂp E2 Thus agreement results Y FLPstable model E2 For Z A situation different First note Z cid8 A A A cid13Z Z cid14 cid8ﬂp A A Z Thus cid13Z Z cid14 cid8ﬂp A A A cid13Z Z cid14 cid8ﬂp E2 Clearly X proper subset Z cid13 X Z cid14 cid12cid8ﬂp A A A Z cid8 A A X cid8 A A cid13 X Z cid14 cid12cid8ﬂp A A X According Corollary 4 A FLPstable model E2 established means reductbased deﬁnition Example 2 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1295 We conclude section discussion notion strong FLPequivalence Theories F G strongly FLP equivalent theory H theories F H G H FLPstable models This literal adaptation standard deﬁnition strong equivalence 32 case FLPstable models Theorem 7 Let F G formulas Then F G strongly FLPequivalent F G FLPmodels Proof For theory H cid13 X Y cid14 cid8ﬂp F H cid13 X Y cid14 cid8ﬂp G H By Corollary 4 F H G H FLPstable models Let assume X Y At cid13 X Y cid14 satisﬁes F G Without loss generality assume cid13 X Y cid14 cid8ﬂp F cid13 X Y cid14 cid12cid8ﬂp G By Theorem 6 follows X cid8 F Y X cid12cid8 G Y The ﬁrst property implies F Y cid12 Consequently Proposition 3 Y cid8 F By Proposition 1 Y cid8 F Y Case 1 Y cid12cid8 G Y It follows cid13Y Y cid14 cid12cid8ﬂp G Thus Y cid12cid8 G H Y cid12cid8 G H Thus Y FLPstable model G H Let deﬁne H Y We F HY F Y HY Moreover HY H Thus F HY F Y H It follows Y cid8 F HY b X Y X cid8 F HY Thus Y FLPstable model F H As noted Y FLPstable model G H Thus F G strongly FLPequivalent contradiction Case 2 Y cid8 G Y We recall X cid12cid8 G Y Thus X Y We deﬁne H X A B A B Y X We F HY F Y HY Moreover easy check HY H Thus F HY F Y H We recall X cid8 F Y We X cid8 H Thus X cid8 F HY Y FLPmodel F H Since G HY G Y H Y cid8 G Y Y cid8 H Y cid8 G HY Let Z Y Z cid8 G Y H Since Z cid8 H Z X However X cid12cid8 G Y contradiction Thus Y minimal model G HY stable model G H This contradicts assumption F G FLPequivalent Consequently F G FLPmodels cid2 4 Normal forms comparison stablemodel semantics The following result obtained Cabalar Ferraris 8 It concerns representing theories programs theories consisting rules formulas form 1 Theorem 8 For theory F program G language F G HTmodels equivalent logic HT In words theory F strongly equivalent program G A similar result holds FLPmodels fact obtained means similar argument Cabalar Ferraris 8 In follows write Y y y Y We ﬁrst state prove auxiliary results analogous results proved Cabalar Ferraris 8 HTcountermodels Proposition 5 Let X Y Z ﬁnite Then cid13U V cid14 U V Z FLPcountermodel set complements X Y deﬁned respect Z U X V Y cid7 cid7 X Y cid8 cid8 Y X Proof Let denote X subformula cid8 cid7 cid8 cid7 cid8 cid8 Y X X Y Thus F propositional tautology Y F Since Y X cid12 Y X It follows Let consider pair cid13U V cid14 U V Due observation cid13U V cid14 FLPcountermodel F cid9 cid9 X V cid8 Y U cid8 cid9 cid9 X Y cid13U V cid14 cid12cid8ﬂp cid8 cid8 cid10 cid10 X Y Moreover deﬁnition check cid13U V cid14 cid12cid8ﬂp X Y U cid12cid8 cid7 cid8 X U cid12cid8 X X U U X Thus U X Since V cid8 Now U cid8 Y V Thus V Y Conversely U X V Y V cid8 FLPcountermodel F cid2 cid7 cid7 X Y U cid8 cid7 cid7 X Y U cid12cid8 cid8 cid8 cid7 X V cid12cid8 cid8 Y V cid12cid8 cid8 cid8 Y Y V Y X V cid12cid8 Y Thus cid13U V cid14 Proposition 6 Let Y Z ﬁnite Then cid13U V cid14 U V Z FLPcountermodel complement Y deﬁned respect Z V Y cid7 Y cid7 Y set 1296 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 cid7 Proof By deﬁnition cid13U V cid14 FLPcountermodel Y Y disjunction conditions equivalent V Y required cid2 Y 2 V cid8 Y The condition 1 equivalent V Y The condition 2 equivalent U V Y Thus Y 1 V cid8 Y Y U cid8 Y cid7 cid7 cid7 Proposition 7 Let F formula If cid13Y Y cid14 FLPcountermodel F X Y cid13 X Y cid14 FLPcountermodel F Proof If cid13Y Y cid14 FLPcountermodel F Y cid12cid8 F Y Theorem 6 Y cid12cid8 F Proposition 1 Consequently Theorem 5 cid13 X Y cid14 FLPcountermodel F cid2 Theorem 9 Let F theory There exists program G F G FLPmodels Proof For F F consider FLPcountermodels cid13 X Y cid14 F Y AtF For FLPcountermodel cid13 X Y cid14 X cid12 Y formula deﬁned Proposition 5 Z AtF For countermodel cid13 X Y cid14 X Y formula Proposition 6 We G set rules constructed way countermodels formulas F By Proposition 7 F G FLPcountermodels consisting atoms AtF FLPmodels consisting atoms AtF Thus FLPmodels cid2 We saw Examples 12 45 semantics stable FLPstable models different stronger However expressed terms To ﬁrst observe HT FLPmodels rules coincide Proposition 8 Let R rule Then R HT FLPmodels cid7 cid7 cid8 cid8 Proof Let R X A B Y C X Y D B C A D Directly deﬁnition follows cid13 X Y cid14 cid8ht R Y cid8 R Similarly cid13 X Y cid14 cid8ﬂp R Y cid8 R X A B X Y A B Y C X Y D Since X A Y A X A B X B Y B Y result follows cid2 Theorems 8 9 yield following corollaries relating semantics Corollary 5 For theory F programs Fht F f lp 1 cid13 X Y cid14 HTmodel F cid13 X Y cid14 FLPmodel Fht 2 cid13 X Y cid14 FLPmodel F cid13 X Y cid14 HTmodel F f lp Proof It Fht F f lp programs guaranteed Theorems 8 9 respectively cid2 Thus meaning theory F HTmodels captured FLPmodels normal form Fht F assured Theorem 8 Similarly meaning theory F FLPmodels captured HTmodels normal form F f lp F given Theorem 9 As corollary state result relating stable FLPstable models F Fht F f lp Corollary 6 For theory F 1 Y stable model F Y FLPstable model Fht 2 Y FLPstable model F Y stable model F f lp We mention recently Lee Meng 29 obtained result related Corollary 62 restricted formulas programs aggregates Namely showed program F considered Faber et al 16 possibly aggregates bodies rules compiled propositional formula FLPF FLPstable answer sets P correspond stable models FLPF We close pointing drawback FLP semantics Namely operator function general operator explicit deﬁnition2 For instance introduce new atom B theory E cid15 B A A B 1 obtain E1 replacing A B adding deﬁnition A B FLPstable models B A original theory E1 FLPstable model A particular counterpart stable model B 2 This aspect FLP semantics pointed reviewers M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1297 5 Supported models The approach yielded generalizations stable FLPstable model semantics arbitrary propositional theories applied supportedmodel semantics 51 The reduct supportedmodel semantics For formula F set atoms X deﬁne SPPreduct F respect Y written F Y adapting new notation inductive clauses R1R3 following deﬁnition implication SPP4 G HY Y cid8 G Y cid8 H H Y cid7 Y cid12cid8 G This notion reduct motivated deﬁnition supported models case programs disjunctive rules 627 We recall deﬁnition Let P disjunctive program The suppreduct P respect set atoms Y P Y set heads rules P body satisﬁed Y A set atoms Y supported model P Y minimal model P Y The basic idea P Y drop antecedent rule antecedent satisﬁed Y We adopt idea deﬁnition SPPreduct However ﬁrst case deﬁnition set reduct G HY H Y H reasons discussed generalizing FLPreduct With deﬁnition reduct hand deﬁnition supported model standard Deﬁnition 3 Let F theory A set atoms Y supported model F Y minimal model F Y Example 8 We time consider theories E1 A A E2 A A A Examples 1 2 respectively First let Y Clearly Y cid12cid8 A Thus E Y cid7 It follows Y cid8 E1 Y Y supported model E1 trivially minimal model E Y Y supported model E2 1 On hand Y cid12cid8 A A A Thus E Y 2 1 Next let Z A Then Z cid8 A Z cid8 A Thus E Z E1 Similarly Z cid8 A A Z cid8 A Thus E Z 2 1 A A Z A Z A It follows Z supported model A A A Z A Z A Z supported model E2 The results proofs worked case stable FLP semantics work minor changes exception case supported models We start gathering result basic properties SPPreduct supported models Proposition 9 For theory F set atoms Y 1 Y cid8 F Y cid8 F Y 2 Y cid8 F F Y cid12 3 If Y supported model F Y model F 4 If Y supported model F atom Y head occurrence F Proof 1 It consider case F consists single formula F We proceed structural induction The base cases F F A A At straightforward Let consider F G H If Y cid12cid8 F F Y Thus sides equivalence false equivalence follows If Y cid8 F F Y G Y H Y By deﬁnition inductive hypothesis following statements equivalent Y cid8 F Y cid8 G H Y cid8 G Y cid8 G Y Y cid8 G Y H Y Y cid8 F Y Y cid8 H Y cid8 H Y 1298 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 Thus required equivalence holds The argument similar Let F G H If Y cid12cid8 F F Y equivalence assertion holds Similarly Y cid12cid8 G F Y cid7 Y cid8 F Y cid8 F Y hold Finally let assume Y cid8 G Y cid8 H In case F Y H Y By inductive hypothesis Y cid8 H Y Y cid8 F Y Thus case Y cid8 F Y cid8 F Y hold 2 As consider case F consists single formula F If Y cid8 F 1 implies F Y cid12 We prove converse implication induction If F implication trivially true If F A A atom F Y A assumption excludes possibility F Y cid12 It follows A Y Y cid8 F Next let F G H Since F Y cid12 F Y G Y H Y Moreover G Y cid12 H Y cid12 By induction hypothesis Y cid8 G Y cid8 H Thus Y cid8 F The case F G H similar Finally F G H Y cid12cid8 G Y cid8 G Y cid8 H F Y H Y In case Y cid8 F 3 Follows 1 deﬁnition supported model 4 We ﬁrst formula F set atoms S containing atoms head occurrences F Y At Y cid8 F Y S cid8 F Y We proceed induction If F claim trivially true If F A A S If Y cid8 F A Y F Y A Thus claim follows If F G H G H Y cid8 G respectively Y cid8 H Moreover atoms head occurrences G contained S holds H Thus induction hypothesis applies G H Consequently Y S cid8 G respectively Y S cid8 H claim follows Finally let F G H Since Y cid8 F F Y cid7 Y cid8 G Y cid8 H F Y H Y In ﬁrst case assertion evident In case Y cid8 H By induction hypothesis applies atom head occurrence H head occurrence F belongs S Y S cid8 H Y Thus Y S cid8 F Y case We ready prove assertion 4 Let S set atoms head occurrences F Since Y supported model F Y cid8 F Y By 1 Y cid8 F Thus property proved Y S cid8 F Y Since Y minimal model F Y Y S Y Y S Y Consequently Y S cid2 We observe concept supported model generalizes disjunctive program 6 Theorem 10 Let P disjunctive program Then Y At supported model P according deﬁnition Y supported model according original deﬁnition supported models disjunctive logic programs Proof If Y supported model according deﬁnition Y model P Using observation deﬁnitions corresponding reducts H 1 Hk P Y k cid2 1 atoms Hk1 Hm H Y k 1 cid3 cid3 m H1 Hk Hk1 Hm P Y Let assume Y supported model P according original deﬁnition It follows Y minimal model P Y By observation Y model P Y If Z Y model P Y Z model P Y observation P Y classically entails P Y Thus Z Y Y minimal model P Y Consequently Y supported model P according deﬁnition Conversely let Y supported model P according deﬁnition Then Y minimal model P Y Since P Y classically entails P Y Y model P Y Let Z Y model P Y Let H 1 Hk P Y By observation atoms Hk1 Hm H Y k 1 cid3 cid3 m H1 Hk Hk1 Hm P Y It follows H Z k 1 cid3 cid3 m Since Z model P Y follows Z model H 1 Hk Thus Z model P Y consequently Z Y Thus Y minimal model P Y supported model P according original deﬁnition cid2 52 HTinterpretations supported models Next characterize supported models terms certain satisﬁability relation connects HTinterpretations formulas It follows closely deﬁnitions cid8ht cid8ﬂp modiﬁed case implication cid15cid15 5 cid13 X Y cid14 cid8spp G H Y cid8 G H Y cid12cid8 G cid13 X Y cid14 cid8spp H If cid13 X Y cid14 cid8spp F cid13 X Y cid14 SPPmodel F Our result gathers simple properties relation cid8spp mirror cid8ht cid8ﬂp Theorem 11 For formula F sets X Y At 1 cid13 X Y cid14 cid8spp F implies Y cid8 F 2 cid13 X Y cid14 cid8spp F Y cid12cid8 F 3 cid13Y Y cid14 cid8spp F Y cid8 F Proof 1 We proceed induction The claim evident F If F A A atom cid13 X Y cid14 cid8spp F implies A X Thus A Y Y cid8 F If F G H cid13 X Y cid14 cid8spp F implies cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp H By M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1299 induction hypothesis Y cid8 G Y cid8 H Thus Y cid8 G H consequently Y cid8 F The case F G H similar Finally let F G H By deﬁnition cid13 X Y cid14 cid8spp F Y cid8 F Thus result follows 2 By deﬁnition cid13 X Y cid14 cid8spp F Y cid8 F Y cid12cid8 F Thus claim follows 3 The argument similar The inductive step case F G H basis cases straightforward follows First deﬁnition cid13Y Y cid14 cid8spp F Y cid8 F Conversely Y cid8 F Y cid12cid8 G Y cid8 H By induction hypothesis Y cid12cid8 G cid13Y Y cid14 cid8spp H Since Y cid8 F G H cid13Y Y cid14 cid8spp F follows cid2 The following result analogous similar results cid8ht cid8ﬂp ties SPPreduct relation cid8spp cf Theorems 2 6 Theorem 12 For theory F sets atoms X Y X cid8 F Y cid13 X Y cid14 cid8spp F Proof It prove result single formula F We proceed induction The case F straight forward Let F A A At If X cid8 AY AY cid12 Thus AY A It follows X cid8 A cid13 X Y cid14 cid8spp A Conversely cid13 X Y cid14 cid8spp A X cid8 A Since X Y Y cid8 A Thus AY A X cid8 AY required Next let F G H If X cid8 G HY G HY G Y H X Thus X cid8 G Y X cid8 H Y By inductive hypothesis cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp H Thus cid13 X Y cid14 cid8spp G H needed Conversely let cid13 X Y cid14 cid8spp G H Then cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp H By inductive hypothesis X cid8 G Y X cid8 H Y Thus X cid8 G Y H Y Clearly G Y cid12 H Y cid12 By Proposition 92 Y cid8 G Y cid8 H Thus Y cid8 G H G HY G Y H Y Hence X cid8 F GY The argument case F G H similar And let case F G H We following equivalences X cid8 G HY Y cid12cid8 G Y cid12cid8 G Y cid12cid8 G Y cid8 H Y cid8 G H cid13X Y cid14 cid8spp F Thus result follows cid2 Y cid8 G Y cid8 H Y cid8 H X cid8 H Y X cid8 H Y Y cid12cid8 G X cid8 H Y Y cid12cid8 G cid13X Y cid14 cid8spp H The main consequence Theorem 12 characterization supported models terms relation cid8spp Corollary 7 Let F theory Y set atoms Then Y supported model F cid13Y Y cid14 cid8spp F X Y cid13 X Y cid14 cid12cid8spp F Proof By deﬁnition Y supported model F Y cid8 F Y X Y X cid12cid8 F Y We apply Theorem 12 The condition equivalent cid13Y Y cid14 cid8spp F The equivalent property X Y cid13 X Y cid14 cid12cid8spp F Thus assertion follows cid2 53 Strong equivalence respect supported models We study strong equivalence theories respect supportedmodel semantics Two theories F G strongly SPPequivalent theory H F H G H supported models Corollary 7 implies F G SPPmodels strongly SPPequivalent Unlike case stable FLPstable semantics condition necessary A weaker condition provides characterization strong SPP equivalence An SPPmodel essential form cid13Y Y cid14 cid13Y A Y cid14 A At Having essential SPPmodels suﬃcient necessary F G strongly SPPequivalent To prove need simple auxiliary property Proposition 10 For formula F interpretation Y F Y monotone Proof Clearly F F Y trivially monotone If F A A At X cid8 F Y F Y A A X Thus Z X Z Z cid8 F Y Let assume F G H X cid8 F Y Since F Y G Y H Y note F Y cid12 X cid8 G Y X cid8 H Y Let Z interpretation X Z By induction hypothesis Z cid8 G Y Z cid8 H Y Thus Z cid8 G Y H Y Z cid8 F Y The case F G H similar 1300 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 Finally let assume F G H X cid8 F Y It follows F Y cid7 F Y H Y Clearly F Y cid7 interpretation Z X Z Z cid8 F Y If F Y H Y X cid8 H Y induction hypothesis interpretation Z X Z Z cid8 H Y Thus case X Z Z cid8 F Y cid2 We following characterization strong SPPequivalence Unlike developed programs 49 general case established certain reduction normal programs present characterization direct Theorem 13 Let F G theories Then F G strongly SPPequivalent F G essential SPPmodels Proof Let cid13Y Y cid14 essential SPPmodel F It follows Y cid8 F Y Y F Y Y Moreover Y minimal model F Y Y F Y Y Consequently Y supported model F Y By assumption Y supported model G Y Thus Y model G Proposition 9 Y cid8 G Y By Theorem 12 follows cid13Y Y cid14 SPPmodel G Next let cid13Y Y cid14 essential SPPmodel F It follows Y cid8 F Y By Proposition 10 Y cid8 F Y Thus cid13Y Y cid14 SPPmodel F By argument given cid13Y Y cid14 SPPmodel G By Proposition 9 Y cid8 G Y Thus Y cid8 G Y Y G Y aY Let assume cid13Y Y cid14 SPPmodel G Then Y cid12cid8 G Y Since model G Y aY G Y Y contains Y Y cid12cid8 G Y follows Y minimal model G Y aY Thus Y supported model G Y Consequently supported model F Y But Y cid8 F Y aY contradiction Thus cid13Y Y cid14 SPPmodel G By symmetry follows essential SPPmodels F G coincide Let H theory let Y supported model F H It follows cid13Y Y cid14 SPPmodel F H By assumption cid13Y Y cid14 SPPmodel G H Thus cid13Y Y cid14 cid8spp G H Let X Y X cid8 G HY It follows X cid8 G Y X cid8 HY Let Y X exists Then Proposition 10 Y cid8 G Y Y cid8 HY Thus cid13Y Y cid14 SPPmodel G F It follows Y cid8 F Y consequently Y cid8 F Y HY F HY This contradiction Y supported model F H Thus Y minimal model G HY Y supported model G H By symmetry F H G H supported models Thus strongly SPPequivalent cid2 54 Complexity reasoning supported models It turns case disjunctive logic programs reasoning supported models easier assuming polynomial hierarchy collapse reasoning stable FLPstable models Namely following result Theorem 14 The problem existence supported model NPcomplete Skeptical reasoning supported models coNP complete Brave reasoning supported models NPcomplete Proof Given theory F set atoms Y Y minimal model F Y Y cid8 F Y Y Y cid12cid8 F Y monotonicity F Y cf Proposition 10 Since F Y computed polynomial time follows problem existence supported model theory F class NP The membership problems respective classes established consequence observation problem checking set atoms Y supported model theory F class P The hardness follows case wellknown hardness corresponding problems restriction normal programs For sake completeness outline proof problem existence supported model normal program NPhard To end note Fages Lemma 18 normal programs positive atoms bodies rules stable supported models coincide The problem existence stable model programs NP complete construction Marek Truszczy nski 39 demonstrates Thus problem existence supported model programs NPcomplete consequently NPhardness problem arbitrary normal programs follows cid2 55 Normal form result supportedmodel semantics As cases supportedmodel semantics theory normal form However given simpler formulas conjunctions normal rules We start stating simple properties concerning equivalence formulas respect SPPmodels We formulas F G SPPequivalent denoted F spp G SPPmodels M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1301 Proposition 11 For formulas F G H 1 F G spp F G 2 F G spp F G 3 F G spp F G 4 F G H spp F G F H 5 F G H spp F G F H 6 F spp F 7 cid7 spp spp cid7 8 F spp F spp F 9 F cid7 spp F F cid7 spp cid7 10 F F spp F Proof 1 If cid13 X Y cid14 cid8spp F G Y cid12cid8 F cid13 X Y cid14 cid8spp G We recall cid13 X Y cid14 cid8spp F Y cid12cid8 F The orem 112 Thus cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp F G Conversely cid13 X Y cid14 cid8spp F G Y cid8 F G Theorem 111 consequently Y cid8 F G Moreover cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G Thus Y cid12cid8 F cid13 X Y cid14 cid8spp G Theorem 112 claim follows The properties 2 3 follow Theorem 112 corresponding properties equivalence propositional logic For instance cid13 X Y cid14 cid8spp F G Y cid12cid8 F G Theorem 112 The condition equivalent Y cid12cid8 F Y cid12cid8 G This conjunction turn equivalent cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G Theorem 112 Thus cid13 X Y cid14 cid8spp F G cid13 X Y cid14 cid8spp F G implies 2 The properties 4 5 follow inductive deﬁnition cid8spp connectives For instance cid13 X Y cid14 cid8spp F G H cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G H The condition equivalently stated cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp H cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp G cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8spp H Using inductive deﬁnition cid8spp connectives cid13 X Y cid14 cid8spp F G H cid13 X Y cid14 cid8spp F G F H proving 4 The property 6 follows Theorem 112 property 7 deﬁnitions shorthands cid7 deﬁnition cid8spp The remaining properties follow inductive deﬁnition cid8spp connectives facts SPPmodels cid7 satisﬁed SPPmodel cid2 The normal form result consequence Proposition 11 Theorem 13 Theorem 15 Let F theory Then program G consisting normal rules F G essential SPPmodels strongly SPPequivalent supported models Proof It prove formula F program consisting normal rules essen tial SPPmodels F Let consider following transformation F First replace F subformula G H G H Proposition 111 Then proceed case propositional logic constructing CNF representation formula De Morgan Laws Proposition 112 3 negation triple negation law Proposition 114 distributivity properties Proposition 115 6 simpliﬁcation rules Proposition 11710 When process ends split resulting conjunction set conjuncts disjunctions form C1 Ck A1 Am B1 Bn 3 Ai B Ci atoms By Proposition 11 set formulas SPPmodels original formula F Thus strongly SPPequivalent F Next note k cid2 2 formulas C1 Ck G kcid9 Ci C1 Ci1 Ci1 Ck G i1 Ci atoms G formula essential models consequently strongly SPPequivalent Thus disjunction 3 rewritten strongly SPPequivalent set disjunctions Ci C1 Ci1 Ci1 Ck A1 Am B1 Bn 1 cid3 cid3 k 1302 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 By Proposition 113 1 disjunction written SPPequivalent normal rule A1 Am B1 Bn C1 Ci1 Ci1 Ck Ci 1 cid3 cid3 k Thus assertion follows cid2 56 Relationships Finally study relationship semantics given relations cid8ht cid8ﬂp hand cid8spp To end observe ﬁrst SPPmodels HTmodels FLPmodels Proposition 12 For formula F X Y At 1 cid13 X Y cid14 cid8spp F implies cid13 X Y cid14 cid8ht F 2 cid13 X Y cid14 cid8spp F implies cid13 X Y cid14 cid8ﬂp F Proof We proceed induction Both 1 2 base case inductive step F G H follow observation corresponding conditions deﬁning relations cid8spp cid8ht cid8ﬂp Let consider F G H Let assume cid13 X Y cid14 cid8spp F It follows Y cid8 G H Y cid12cid8 G cid13X Y cid14 cid8spp H 4 We know Y cid12cid8 G implies cid13 X Y cid14 cid12cid8ht G 21 Combining induction hypothesis obtain 4 Y cid8 G H cid13 X Y cid14 cid12cid8ht G cid13 X Y cid14 cid8ht H Thus cid13 X Y cid14 cid8ht G H follows It follows 4 Y cid8 G H Y cid12cid8 G cid13 X Y cid14 cid8spp H X cid12cid8 G added disjunct second conjunct By induction hypothesis new disjunction implies Y cid12cid8 G cid13 X Y cid14 cid8ﬂp H X cid12cid8 G Consequently cid13 X Y cid14 cid8ﬂp G H follows cid2 As corollary obtain case disjunctive logic programming stable models standard FLP generalizations supported models Theorem 16 For theory F set atoms Y Y stable model F Y FLPstable model F Y supported model F Proof The proof cases Thus argument ﬁrst case Let Y stable model F It follows cid13Y Y cid14 cid8ht F Consequently Y cid8 F cf Theorem 1 cid13Y Y cid14 cid8spp F Theorem 11 Let assume X Y cid13 X Y cid14 cid8spp F Then cid13 X Y cid14 cid8ht F Proposition 12 Since Y stable model F X Y Thus Y supported model F cid2 In general implications Proposition 12 reversed However case relation cid8ht ﬁnd broad class formulas converse implication holds The key following result exhibits class formulas relation cid8ht reduces standard propositional entailment Before state recall occurrence atom A formula directly scope antecedent subformula A Proposition 13 Let F formula occurrence atom F directly scope Then X Y At cid13 X Y cid14 cid8ht F Y cid8 F Proof The claim evident F Otherwise F form F G H First let assume G atom H Then claim follows Theorem 12 Otherwise induction hypothesis applies G H occurrence atom G H directly scope inductive step easy verify cid2 This result consequences First express relation cid8spp terms relation cid8ht Moreover require extension language Given formula F deﬁne F formula obtained replacing nonhead occurrence atom A directly negated A Proposition 14 For formula F X Y At cid13 X Y cid14 cid8spp F cid13 X Y cid14 cid8ht F M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1303 Proof The claim evident F If F A A At F A F result holds cid15 H G Since G H G H connectives induction step easy verify Thus let F G H obtained G replacing occurrence atom A directly negated By deﬁnitions G Y cid8 G Finally Clearly F G A Proposition 13 applies G cid15 classical entailment relation cid8 Y cid8 G induction hypothesis cid13 X Y cid14 cid8ht H cid13 X Y cid14 cid8spp H Consequently following statements equivalent cid15 Y cid8 G Thus cid13 X Y cid14 cid8ht G cid15 Y cid8 G Thus cid13 X Y cid14 cid8ht G cid15 cid15 cid15 cid15 1 cid13 X Y cid14 cid8spp G H 2 Y cid8 G H Y cid12cid8 G cid13 X Y cid14 cid8spp H cid15 H cid13 X Y cid14 cid12cid8ht G 3 Y cid8 G 4 cid13 X Y cid14 cid8ht G 5 cid13 X Y cid14 cid8ht F cid15 H cid15 cid13 X Y cid14 cid8ht H Thus claim F G H follows cid2 Corollary 8 For formula F interpretation Y Y supported model F stable model F Next observe impossible express cid8ht terms cid8spp The following corollary makes meaning statement precise Corollary 9 Let A B atoms There formula F cid13 X Y cid14 cid8ht A B B A cid13 X Y cid14 cid8spp F Proof Let H A B B A It easy verify cid13 A Bcid14 cid8ht H cid13 A A Bcid14 cid12cid8ht H Let assume formula F X Y cid13 X Y cid14 cid8ht H cid13 X Y cid14 cid8spp F Then cid13 A Bcid14 cid8ht F By Theorem 12 equivalently cid13 A A Bcid14 cid8ht F contradiction cid2 cid8 F By Proposition 10 F Y monotone Thus A cid8 F AB AB Y supported model F Y FLPstable model F cid15 Given result biexpressibility stable FLPstable semantics follows theory F theory F cid15 In words express supported models terms FLPstable models need expand language On hand theory F theory F cid15 Thus FLPstable models general expressed supported models extend language FLPstable models F exactly supported models F cid15 As corollary Proposition 14 obtain promised result showing class formulas HT SPPmodels Proposition 15 Let F formula occurrence atom F head occurrence falls directly scope For X Y At cid13 X Y cid14 cid8ht F cid13 X Y cid14 cid8spp F Proof Since assumptions F F F claim follows Proposition 14 cid2 In turn result implies following generalization property stable supported models purely negative disjunctive programs coincide Corollary 10 Let F theory occurrence atom F head occurrence falls directly scope Then Y stable model F supported model F There alternative argument shows cid8spp relation expressed means cid8ht cid8ﬂp relations3 It based following simple observation identiﬁes class formulas semantics coincide Proposition 16 Let F formula occurrence consequent words formulas written means connectives For HTinterpretation cid13 X Y cid14 following conditions equivalent 1 cid13 X Y cid14 cid8ht F 2 cid13 X Y cid14 cid8ﬂp F 3 cid13 X Y cid14 cid8spp F 3 This argument anonymous reviewers 1304 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 Proof The clauses deﬁning relations case F F A A atom F G H F G H Moreover satisﬁability relations cid13 X Y cid14 satisﬁes corresponding sense G Y cid12cid8 G formulas satisﬁability relations coincide Thus result follows induction cid2 For formula F denote F formula obtained F replacing subformula G H H cid12 G H G H short Corollary 11 For formula F SPPmodels F coincide HTmodels F FLPmodels F SPPmodels F Proof By Proposition 111 F F SPPmodels Thus assertion follows Proposition 16 cid2 The value ﬁrst approach SPP semantics expressed terms HT FLP semantics uses F cid23 F transformation gives Corollary 10 generalization property purely negative disjunctive programs stable supported models coincide On hand value approach based F cid23 F transformation lies fact shows class formulas theories semantics coincide 6 Discussion conclusions In paper developed generalizations FLP semantics supportedmodel semantics language propositional logics appropriate variants methods developed earlier Pearce Ferraris stablemodel semantics In way semantics cast uniform framework facilitates comparisons offers insights properties Our results contribute theoretical foundations answerset programming major knowledge representation formalism More speciﬁcally Ferraris 19 showed stablemodel semantics extended language propositional logic means appropriate generalization notion Freduct We showed approach Ferraris adapted semantics programs FLP supportedmodel semantics Moreover generalizations require small changes deﬁnition reduct concern implication handled case antecedent consequent satisﬁed context In case FLPreduct antecedent implication unchanged case SPPreduct drop Not deﬁnitions follow pattern The theories semantics similar way results stated proved In particular case corresponding characterization semantics terms satisﬁability relation HTinterpretations formulas similar characterization stablemodel semantics arbitrary propositional theory Pearce 44 As differentiates relations way implication handled The uniformity semantics deﬁned studied striking It suggests considering reductbased approach general language logic reveal new insights phenomenon nonmonotonicity A related question semantics deﬁned way notions reduct lead useful formalisms As simple ways modify reduct left uniform approach presented suggests realm nonmonotonic semantics programs theories essentially boil ones discussed paper The uniformity notwithstanding differences We saw relation cid8spp sense weaker Further relation cid8ht captures stablemodels semantics deﬁnes logic logic HT To contrary relation cid8ﬂp set formulas F cid13 X Y cid14 cid13 X Y cid14 cid8ﬂp F closed modus ponens closed substitution4 Also stable FLP semantics closely related supported model semantics essentially different cf characterization strong SPPequivalence normal form theorem A detailed comparison semantics scope paper We leave future work We note argument normal form result respect SPPmodels adjusted set theorems respect cid8spp closed substitution logic The question axiomatization logic open Acknowledgements The present text reﬂects corrections suggestions offered anonymous reviewers The author gratefully acknowledges effort The work partially supported NSF grant IIS0913459 4 Indeed HTinterpretation cid13 X Y cid14 cid13 X Y cid14 cid8ﬂp p p cid13p p qcid14 cid12cid8ﬂp p q p q This behavior FLP semantics drawback In particular responsible diﬃculty explicit deﬁnitions FLP semantics discussed end Section 3 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 1305 References 1 K Apt Logic programming J van Leeuven Ed Handbook Theoretical Computer Science Elsevier Amsterdam 1990 pp 493574 2 M Balduccini M Gelfond M Nogueira Answer set based design knowledge systems Annals Mathematics Artiﬁcial Intelligence 47 12 2006 183219 3 C Baral From knowledge intelligence building blocks applications invited talk AAAI 2005 2005 httpwwwpublicasueducbaralaaai05 invitedtalkppt 4 C Baral K Chancellor N Tran NL Tran A Joy M Berens A knowledge based approach representing reasoning signaling networks Proceedings 12th International Conference Intelligent Systems Molecular Biology3rd European Conference Computational Biology Supplement Bioinformatics 2004 pp 1522 5 G Boenn M Brain MD Vos J Fitch Anton Composing logic logic composing E Erdem F Lin T Schaub Eds Proceedings 10th International Conference Logic Programming Nonmonotonic Reasoning LPNMR 2009 Lecture Notes Computer Science vol 5753 Springer 2009 pp 542547 6 S Brass J Dix Characterizations disjunctive stable semantics partial evaluation Journal Logic Programming 32 3 1997 207228 7 D Brooks E Erdem J Minett D Ringe Characterbased cladistics answer set programming M Hermenegildo D Cabeza Eds Proceedings 7th International Symposium Practical Aspects Declarative Languages PADL 2005 Lecture Notes Computer Science vol 3350 Springer 2005 pp 3751 8 P Cabalar P Ferraris Propositional theories strongly equivalent logic programs Theory Practice Logic Programming 7 6 2007 745759 9 K Clark Negation failure H Gallaire J Minker Eds Logic Data Bases Plenum Press New YorkLondon 1978 pp 293322 10 M Denecker J Vennekens S Bond M Gebser M Truszczy nski The second answer set programming competition E Erdem F Lin T Schaub Eds Proceedings 10th International Conference Logic Programming Nonmonotonic Reasoning LPNMR 2009 Lecture Notes Computer Science vol 5753 Springer 2009 pp 637654 11 T Eiter G Brewka M DaoTran M Fink G Ianni T Krennwallner Combining nonmonotonic knowledge bases external sources S Ghilardi R Sebastiani Eds Proceedings 7th International Symposium Frontiers Combining Systems FroCoS 2009 Lecture Notes Computer Science vol 5749 Springer 2009 pp 1842 12 T Eiter W Faber N Leone G Pfeifer A Polleres Answer set planning action costs Journal Artiﬁcial Intelligence Research JAIR 19 2003 2571 13 T Eiter W Faber N Leone G Pfeifer A Polleres A logic programming approach knowledgestate planning II The dlvk Artiﬁcial Intelli gence 144 12 2003 157211 14 T Eiter M Fink S Woltran Semantical characterizations complexity equivalences answer set programming ACM Transactions Computa tional Logic 8 3 July 2007 53 15 T Eiter G Gottlob On computational cost disjunctive logic programming Propositional case Annals Mathematics Artiﬁcial Intelli gence 15 34 1995 289323 16 W Faber N Leone G Pfeifer Recursive aggregates disjunctive logic programs semantics complexity Proceedings 9th European Conference Artiﬁcial Intelligence JELIA 2004 Lecture Notes Artiﬁcial Intelligence vol 3229 Springer 2004 pp 200212 17 W Faber G Pfeifer N Leone T DellArmi G Ielpa Design implementation aggregate functions dlv Theory Practice Logic Programming 8 56 2008 545580 18 F Fages Consistency Clarks completion existence stable models Journal Methods Logic Computer Science 1 1994 5160 19 P Ferraris Answer sets propositional theories Logic Programming Nonmonotonic Reasoning 8th International Conference LPNMR 2005 Lecture Notes Artiﬁcial Intelligence vol 3662 Springer 2005 pp 119131 20 P Ferraris V Lifschitz Weight constraints nested expressions Theory Practice Logic Programming 5 2004 4574 21 P Ferraris V Lifschitz Mathematical foundations answer set programming S Artëmov H Barringer A dAvila Garcez LC Lamb J Woods Eds We Will Show Them Essays Honour Dov Gabbay College Publications 2005 pp 615664 22 M Gelfond N Leone Logic programming knowledge representation Aprolog perspective Artiﬁcial Intelligence 138 2002 338 23 M Gelfond V Lifschitz The stable semantics logic programs Proceedings 5th International Conference Logic Programming ICLP 1988 MIT Press 1988 pp 10701080 24 M Gelfond V Lifschitz Classical negation logic programs disjunctive databases New Generation Computing 9 1991 365385 25 E Giunchiglia J Lee V Lifschitz N McCain H Turner Nonmonotonic causal theories Artiﬁcial Intelligence 153 12 2004 49104 26 A Heyting Die formalen Regeln der intuitionistischen Logik Sitzungsberichte der Preussischen Akademie von Wissenschaften Physikalisch mathematische Klasse 1930 pp 4256 27 K Inoue C Sakama Negation failure head Journal Logic Programming 35 1998 3978 28 J Lee V Lifschitz R Palla A reductive semantics counting choice answer set programming Proceedings 23rd AAAI Conference Artiﬁcial Intelligence AAAI 2008 AAAI Press 2008 pp 472479 29 J Lee Y Meng On reductive semantics aggregates answer set programming Proceedings 10th International Conference Logic Programming Nonmonotonic Reasoning LPNMR 2009 Lecture Notes Computer Science vol 5753 Springer 2009 pp 182195 30 Y Lierler Abstract answer set solvers MG la Banda E Pontelli Eds Proceedings 24th International Conference Logic Programming ICLP 2008 Lecture Notes Computer Science vol 5366 Springer 2008 pp 377391 31 Y Lierler M Maratea Cmodels2 SATbased answer set solver enhanced nontight programs Proceedings LPNMR04 Lecture Notes Computer Science vol 2923 Springer 2004 pp 346350 32 V Lifschitz D Pearce A Valverde Strongly equivalent logic programs ACM Transactions Computational Logic 2 4 2001 526541 33 V Lifschitz LR Tang H Turner Nested expressions logic programs Annals Mathematics Artiﬁcial Intelligence 1999 369389 34 V Lifschitz T Woo Answer sets general nonmonotonic reasoning Proceedings 3rd International Conference Principles Knowledge Representation Reasoning KR 92 Morgan Kaufmann San Mateo CA 1992 pp 603614 35 F Lin Reducing strong equivalence logic programs entailment classical propositional logic Proceedings 8th International Conference Principles Knowledge Representation Reasoning KR 2002 Morgan Kaufmann 2002 pp 170176 36 F Lin Y Zhao ASSAT Computing answer sets logic program SAT solvers Proceedings 18th National Conference Artiﬁcial Intelli gence AAAI 2002 AAAI Press 2002 pp 112117 37 V Marek M Truszczy nski Stable models alternative logic programming paradigm K Apt W Marek M Truszczy nski D Warren Eds The Logic Programming Paradigm A 25Year Perspective Springer Berlin 1999 pp 375398 38 W Marek V Subrahmanian The relationship stable supported default autoepistemic semantics general logic programs Theoretical Computer Science 103 2 1992 365386 39 W Marek M Truszczy nski Autoepistemic logic Journal ACM 38 3 1991 588619 40 R Moore Semantical considerations nonmonotonic logic Artiﬁcial Intelligence 25 1 1985 7594 41 I Niemelä Logic programming stable model semantics constraint programming paradigm Annals Mathematics Artiﬁcial Intelli gence 25 34 1999 241273 1306 M Truszczynski Artiﬁcial Intelligence 174 2010 12851306 42 I Niemelä P Simons Extending smodels cardinality weight constraints J Minker Ed LogicBased Artiﬁcial Intelligence Kluwer Academic Publishers 2000 pp 491521 43 M Nogueira M Balduccini M Gelfond R Watson M Barry An aprolog decision support space shuttle IV Ramakrishnan Ed Proceedings 3rd International Symposium Practical Aspects Declarative Languages PADL 2001 Lecture Notes Computer Science vol 1990 Springer 2001 pp 169183 44 D Pearce A new logical characterisation stable models answer sets J Dix LM Pereira TC Przymusinski Eds NonMonotonic Extensions Logic Programming NMELP 96 Lecture Notes Computer Science vol 1216 Springer 1997 pp 5770 45 D Pearce A Valverde Quantiﬁed equilibrium logic foundations answer set programs Proceedings 24th International Conference Logic Programming ICLP 2008 2008 pp 546560 46 T Schaub S Thiele Metabolic network expansion answer set programming P Hill D Warren Eds Proceedings 25th International Conference Logic Programming ICLP 2009 Lecture Notes Computer Science vol 5649 Springer 2009 pp 312326 47 T Soininen I Niemelä Developing declarative rule language applications product conﬁguration G Gupta Ed Proceedings 1st International Workshop Practical Aspects Declarative Languages PADL 1999 Lecture Notes Computer Science vol 1551 Springer 1998 pp 305319 48 T Son E Pontelli C Sakama Logic programming multiagent planning negotiation P Hill D Warren Eds Proceedings 25th International Conference Logic Programming ICLP 2009 Lecture Notes Computer Science vol 5649 Springer 2009 pp 99114 49 M Truszczy nski S Woltran Hyperequivalence logic programs respect supported models Proceedings 23rd National Conference Artiﬁcial Intelligence AAAI 2008 AAAI Press 2008 pp 560565 50 P Tu T Son C Baral Reasoning planning sensing actions incomplete information static causal laws answer set programming Theory Practice Logic Programming 7 4 2007 377450 51 H Turner Strong equivalence easy Nested expressions weight constraints Theory Practice Logic Programming 3 2003 609622 52 S Woltran A common view strong uniform notions equivalence answerset programming Theory Practice Logic Program ing 8 2 2008 217234