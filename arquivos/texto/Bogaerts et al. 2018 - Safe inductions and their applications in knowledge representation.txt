Artiﬁcial Intelligence 259 2018 167185 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Safe inductions applications knowledge representation Bart Bogaerts Department Computer Science KU Leuven 3001 Heverlee Belgium b Department Computer Science KU Leuven Campus De Nayer 2860 SintKatelijneWaver Belgium Joost Vennekens ab Marc Denecker r t c l e n f o b s t r c t In knowledge representation formalisms constructive semantics deﬁned based sequential applications rules semantic operator These constructions share property rule applications delayed safe known condition triggers rule continue hold This intuition occurs instance wellfounded semantics logic programs autoepistemic logic In paper formally deﬁne safety criterion algebraically We study properties socalled safe inductions apply theory logic programming autoepistemic logic For safe inductions manage capture intended meaning class theories classical constructive semantics fail 2018 Elsevier BV All rights reserved Article history Received 1 December 2017 Received revised form 13 March 2018 Accepted 25 March 2018 Available online 28 March 2018 Keywords Approximation ﬁxpoint theory Lattice operator Inductive deﬁnitions Induction process Construction Wellfounded semantics Groundedness Logic programming Autoepistemic logic Abstract argumentation 1 Introduction In ﬁelds computational logic natural forms induction Such induction seen sequence semantic structures obtained iterative applications rules semantic operator For instance logic programming natural think sequences interpretations stage number rules bodies satisﬁed triggered head added current interpretation For positive logic programs sequences converge minimal model For nonpositive programs strategy yield meaningless results For instance program cid2 cid3 P b sequence A short version paper published proceedings IJCAI17 conference 6 This paper extends previous work theoretical results examples proofs propositions applications work argumentation frameworks Corresponding author Email addresses bart bogaerts cs kuleuven B Bogaerts joost vennekens cs kuleuven J Vennekens marc denecker cs kuleuven M Denecker httpsdoiorg101016jartint201803008 00043702 2018 Elsevier BV All rights reserved 168 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 N1 b b limit supported model logic program On hand sequence N2 sequence end intended model P perfect model Intuitively wrong N1 rule b applied soon value established For stratiﬁed programs like P problem resolved Apt et al 2 For general case wellfounded semantics 33 offers solution uses threevalued interpretations instead twovalued interpretations In recent work notions natural safe inductions inductive deﬁnitions introduced 1516 It argued kind process forms essence understanding inductive deﬁnitions In paper lift ideas safe natural inductions general setting provide principled study inductions context approximation ﬁxpoint theory AFT Denecker Marek Truszczy nski DMT 10 algebraic theory provides unifying framework semantics nonmonotonic logics We convergence safe inductions general setting study relationship algebraic safe inductions ﬁxpoints deﬁned approximation ﬁxpoint theory By presenting theory AFT results broadly applicable DMT 10 originally developed AFT unify seman tics logic programs 32 autoepistemic logic 26 default logic 28 Later deﬁne semantics extensions logic programs HEX logic programs 1 integration logic programs description log ics 23 Strass 30 showed semantics Dungs argumentation frameworks AFs 17 abstract dialectical frameworks ADFs 7 obtained direct application AFT Bogaerts CruzFilipe 3 showed AFT applications database theory deﬁning semantics active integrity constraints 19 The theory present paper induces logics notions safe inductions safe semantics Our complexity results obtained general operators transferred logics Throughout paper examples logic programming In Section 7 apply theory autoepistemic logic There safe inductions induce constructive semantics captures intended semantics class theories classical constructive semantics fail This failure recently exposed solved notion setinductions based sets lattice elements instead intervals standard AFT 5 We safe inductions provide alternative solution problem Our solution direct contrast setinductions wellfounded inductions 14 safe inductions require form approximation sequences original lattice For logic programming means sequences interpretations atoms derived step For AEL means sequences possible world structures additional knowledge derived step In Section 8 apply theory Dungs argumentation frameworks 17 surprising result different operators exist given argumentation framework safely deﬁned point Furthermore point corresponds existing semantics socalled grounded extension The rest paper structured follows In Section 2 preliminaries lattices operators In Section 3 deﬁne safe inductions provide basic results We continue studying complexity inference problems related safe inductions Section 4 In Section 5 recall basics AFT use Section 6 study safe inductions relate ﬁxpoints studied AFT Afterwards Sections 7 8 apply general theory autoepistemic logic argumentation frameworks respectively We conclude Section 9 2 Preliminaries lattices operators cid4 A partially ordered set poset cid5L cid7 set L equipped partial order reﬂexive antisymmetric transitive relation We write x y x y x cid9 y If S subset L x upper bound respectively lower bound S s S holds s x respectively x s An element x upper bound respectively greatest lower bound S upper bound smaller upper bound respectively lower bound greater lower bound If S upper bound respectively greatest lower bound denote lubS respectively glbS As custom greatest lower bound meet upper bound join use related S lubS x y lubx y We cid5L cid7 complete lattice notations subset S L upper bound greatest lower bound A complete lattice element greatest element cid13 S glbS x y glbx y An operator O L L monotone x y implies O x O y antimonotone x y implies O y O x An element x L preﬁxpoint ﬁxpoint postﬁxpoint O O x x respectively O x x x O x Every monotone operator O complete lattice ﬁxpoint 31 denoted lfpO O s preﬁxpoint limit terminal monotone induction O deﬁned cid5 Deﬁnition 21 A monotone induction lattice operator O L L increasing sequence ordinal β xi iβ elements xi L satisfying B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 169 x0 xi xi1 O xi successor ordinals 1 β xλ lubxi λ limit ordinals λ β A monotone induction terminal O xβ xβ Logic programming Let cid4 alphabet collection symbols called atoms A literal atom p negation q atom q The called positive literals called negative literals A logic program P set rules r form h ϕ h atom called head r denoted headr ϕ conjunction literals called body r denoted bodyr An interpretation I cid4 subset cid4 The set interpretations 2cid4 forms lattice equipped order The truth value t f propositional formula ϕ structure I denoted ϕ I deﬁned usual With logic program P associate immediate consequence operator T P 32 maps structure I structure p cid4 r P headr p bodyrI t This operator lattice cid52cid4 cid7 We logic program P positive rule r P bodyr consists positive literals If P positive T P monotone 3 Safe inductions In section deﬁne central concept paper notion safe induction study basic properties Let L lattice O operator L ﬁxed rest paper Deﬁnition 31 We y L derivable x L x y x O x Deﬁnition 32 Let x element L An O induction x sequence xiiβ x0 x xi1 derivable xi β xλ lubxi λ limit ordinals λ β We xβ limit xiiβ Intuitively view O operator constructs certain lattice points An O induction associated construction process Intuitively stage xi O xi represents concluded given stage Therefore step xi1 induction xi xi1 xi combination xi concluded xi1 xi O xi In context powerset lattice lattice form cid52S cid7 means xi1 xi O xi xi1 contains elements xi O concludes xi Deﬁnition 33 Let N xiiβ N cid19 yiiα O inductions We N cid19 β The extension strict yα cid9 xβ extends N α β xi yi Deﬁnition 34 An O induction terminal exists O induction strictly extends Proposition 35 An O induction xiiβ terminal xβ preﬁxpoint O Proof Let N denote xiiβ If xβ preﬁxpoint O O xβ xβ extension xiiα α β N hold xβ xβ1 xβ O xβ xβ xβ1 xβ induction xα xβ On hand xβ preﬁxpoint xiiβ1 xβ1 xβ O xβ strict extension N cid2 Proposition 36 If O monotone monotone inductions O Deﬁnition 21 O inductions vice versa Proof It clear monotone inductions O inductions deﬁnitions differ second condi tions restrictive monotone inductions 170 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 For direction let xiiβ O induction We ﬁrst claim xi postﬁxpoint O This claim clear 0 limit increasing sequence postﬁxpoints monotone operator postﬁxpoint If xi postﬁxpoint xi O xi O xi xi O xi Furthermore O monotone O xi O xi1 Combining equations xi xi1 O xi xi O xi O xi1 xi1 postﬁxpoint Hence xi O xi xi O xi O xi Thus xiiβ monotone induction needed cid2 Corollary 37 If O monotone terminal O inductions converge lfpO There high degree nondeterminism O inductions For monotone operators O despite nondeterminism O inductions converge point As O inductions provide O monotone way construct intended lattice point lfpO For nonmonotone operators situation different O inductions converge single point Example 38 Let P logic program p q p r s r p This positive logic program T P monotone The following terminal strict T P inductions N1 p p q p q r N2 p p r p q r N3 p p q r They converge intended model P ﬁxpoint T P cid2 Example 39 Let P logic program cid2 cid3 p q p This simple stratiﬁed logic program 227 Its intended ﬁxpoint socalled perfect model p Let T P denote immediate consequence operator The following terminal strict T P inductions N1 q p q N2 p q N3 p cid2 The previous example shows certain derivations O induction happen prematurely For instance N1 N2 q derived nonmonotonic rule q p As soon p derived rule longer applies q T P p q p In sequences rule applied safe Below formally deﬁne notion safety avoid premature derivations derive facts remain derivable regardless derivations induction process cid19 Deﬁnition 310 Let x holds x cid19 x O xβ cid19 derivable x We x safely derivable x O induction xiiβ x An O induction xiiβ safe xi1 safely derivable xi β cid19 In words x cid19 safely derivable x matter derivations ending xβ x consists x combined O concludes xβ x cid19 x O xβ Proposition 311 If y safely derivable x x z y z safely derivable x B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 171 Proof It follows directly deﬁnition z derivable x To safely derivable O induction x limit xβ Then z y x O xβ result follows cid2 cid5 Y safely derivable x Hence x exists Proposition 312 If Y L y Y safely derivable x largest y y safely derivable x Proof It easy limit xβ Then y x O xβ y Y cid5 Y derivable x To safely derivable O induction x Y x O xβ result follows cid2 cid5 Example 313 Example 38 continued All derivations inductions safe Consider instance deriva tion p r p N2 For interpretation I p holds r T P I Hence T P induction xiiβ p holds xβ p r T P xβ Now means p r p T P xβ derivation safe cid2 The situation Example 313 coincidence following proposition shows Proposition 314 If O monotone y derivable x y safely derivable x Proof Suppose y derivable x x y O x x Let xiiβ O induction x Then xβ x monotonicity O O xβ O x Thus y x O x x O xβ needed cid2 For nonmonotone operators situation different expected Example 315 Example 39 continued The intuitively wrong derivation q safe Indeed N1 T P induction limit p q q cid9 T P p q p p cid2 An induction terminal extended strictly larger induction We deﬁne similar concept safe inductions Deﬁnition 316 A safe O induction N safeterminal exists strict extension N cid19 N safe In Example 39 showed terminal O inductions converge lattice point Luckily safety criterion leads better situation Theorem 317 For x L safeterminal O inductions x converge lattice point In order prove theorem use following result Lemma 318 Let N xiiβ N cid19 yiiγ safe O inductions x0 y0 For β j γ holds 1 β xi1 y j safely derivable xi y j j 1 γ xi y j1 safely derivable xi y j Proof The product order ordinal pairs given j k l k j l wellfounded order set pairs contains minimal elements order Assume contradiction pairs j β γ exist contradict lemma let j minimal pair product order Hence xi1 y j exists safely derivable xi y j xi y j1 exists safely derivable xi y j Assume ﬁrst case Thus 1 β xi1 y j safely derivable xi y j By minimality j sequence N cid19cid19 xi yk0k j safe O induction xi limit xi y j Since xi xi1 xi y j xi1 y j Since xi1 safely derivable xi N cid19cid19 O induction limit xi y j holds xi1 xi O xi y j xi1 y j xi y j O xi y j Hence xi1 y j derivable xi y j We derivation safe Since xi1 safely derivable xi O induction xi limit z hold xi1 xi O z Now O induction xi y j turned O induction xi composing N cid19cid19 O induction xi y j limit z hold xi1 xi O z xi1 y j xi y j O z Thus xi1 y j safely derivable xi y j yields contradiction The second case obtained symmetrical argument cid2 172 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Proof Theorem 317 Let N xiiβ N cid19 yiiγ safeterminal O inductions Consider sequence ziiβγ zi xi β zβi xβ yi γ By Lemma 318 sequence safe O induction Since N safeterminal sequence strict extension N xβ yγ zβγ xβ yγ xβ A sym metric argument shows xβ yγ xβ yγ desired cid2 Deﬁnition 319 The safely deﬁned point O denoted safeO limit safeterminal O inductions Example 320 Example 39 continued The induction N3 safeterminal induction derivation strict Its limit intended model P perfect model cid2 By Theorem 317 safely deﬁned point welldeﬁned We study properties safely deﬁned point Proposition 321 For operator O safeO postﬁxpoint O safeO O safeO Proof Let N xiiβ safe O induction We induction xi O xβ The claim trivially holds 0 x0 It preserved limit ordinals ji x j O xβ x j O xβ j We holds successor ordinals Hence assume xi O xβ β xi1 safely derivable xi Since N O induction xi1 safely derivable xi hold cid5 xi1 xi O xβ O xβ O xβ O xβ result follows cid2 Example 322 The safely deﬁned point ﬁxpoint O Consider lattice cid13 elements operator O maps cid13 cid13 The safely deﬁned point O cid13 safely derivable cid13 cid9 O cid13 Here O induction N safeterminal terminal cid2 Deﬁnition 323 We operator O complete safely deﬁned point O ﬁxpoint O O safeO safeO We interested complete operators O uniquely determine ﬁxpoint O Proposition 324 An operator O complete safeterminal O induction terminal Proof If O complete safeO ﬁxpoint O It follows Proposition 35 O induction limit safeO terminal On hand assume safeterminal O induction terminal Thus Proposition 35 safeO preﬁxpoint O By Proposition 321 safeO postﬁxpoint O Hence ﬁxpoint O cid2 Proposition 325 If O monotone operator O complete safeO lfpO Proof From monotonicity O easily follows O induction safe The result follows Corol lary 37 cid2 Proposition 326 If O antimonotone operator safeO lfpO 2 Proof Consider ordinal β sequences N xiiβ given x0 xi1 O yi β cid13 xλ xi limit ordinal λ β iλ yiiβ given y0 cid13 yi1 O xi β yλ yi limit ordinal λ β cid14 iλ B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 173 We prove following claims sequence 1 For β xi yi β xi xi1 yi1 yi 2 xiiβ monotone O 2induction 3 xiiβ safe O induction The ﬁrst statement follows construction sequences fact converge socalled alternating pair antimonotone operator O We prove completeness From claims follows β large xβ safeO 2 lfpO 2 Since O xβ derivable xβ O O xβ xβ follows xiiβ O induction safeterminal Hence safeO xβ safeO 2 lfpO 2 needed We claims hold 1 We prove induction It certainly holds 0 x0 y0 cid13 If claim holds β xi yi Hence antimonotonicity O yi1 O xi O yi xi1 Also 1 β claim holds holds xi xi1 yi1 yi Now antimonotonicity O yi1 O xi O xi1 yi2 xi2 O yi1 O yi xi1 Hence proved inequalities claim hold 1 Finally suppose claim holds λ λ β limit ordinal For j λ holds xi x j y j Similarly j λ holds xi yi y j Hence j λ xi y j Thus cid13 cid14 xλ xi y j yλ iλ jλ If furthermore λ β know j λ y j yλ Hence antimonotonicity O x j1 O y j O yλ j λ Thus cid14 xλ x j1 O yλ xλ1 jλ Similarly ﬁnd yλ yλ1 claim holds λ Hence showed transﬁnite induction ﬁrst claim satisﬁed β 2 To xiiβ monotone O 2induction note ﬁrst claim yi yi1 antimonotonicity O xi1 O yi O yi1 O 2xi Thus holds xi xi1 O 2xi 3 First β xi1 derivable xi To note ﬁrst claim follows xi xi1 yi1 O xi xi1 derivable xi 174 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Second xi1 safely derivable xi To ﬁx let z j jγ O induction xi We need xi1 xi O zγ In order claim j xi z j yi We claim transﬁnite induction j It certainly holds j 0 z0 xi If claim holds j z j1 reﬁnement z j holds z j z j1 z j O z j By induction hypothesis fact O antimonotone xi z j z j1 z j O z j y j O x j y j y j1 y j claim follows It easy holds limit ordinals Now claim holds j γ holds j γ Hence ﬁnd yi zγ xi1 O yi O zγ follows xi1 safely derivable xi needed cid2 Theorem 317 shows safe O inductions despite high degree nondeterminism uniquely determine lattice point Furthermore O monotone point ﬁxpoint O The question arises O nonmonotone How safely deﬁned point O relate points In particular relate ﬁxpoints deﬁned approximation ﬁxpoint theory especially constructive characterization We study Section 6 First study complexity inference tasks related safe inductions 4 Complexity In section assume class C cid5L O cid7 pairs ﬁnite lattice L operator O L L given The height ﬁnite lattice L length n longest sequence x0 x1 cid13 xn L We y L direct successor x L x y z x z y The branching width ﬁnite L maximum x L number direct successors x All complexity results presented terms sum branching width height input lattice This means use sum branching width height measure input1 Let FC denote function problem given cid5L O cid7 C p p cid19 L compute 1 O p cid19 2 p p 3 x x direct successor p We assume FC solved polynomial time The kind setting unusual essentially algebraic variant data complexity For instance logic programming nonground program P determines class lattices associated operators immediate consequence operators groundings P respect given domain The height branching width lattice polynomial terms domain size In setting problem FCP polynomially solvable Theorem 41 Let C class The decision problem given Li C x y Li y safely derivable x O coNP Proof Algorithm 1 contains nondeterministic program decide y safely derivable x It takes input cid5L O cid7 x y Algorithm 1 Nondeterministic algorithm decide y safely derivable x O s x true y cid9 x O s return true O s s return false cid19 Li s s cid19 s O s choose s cid19 s s end end This program nondeterministically traverses O induction x Every state x reached natural induction x reached run program The algorithm stops true reaches lattice point provides counterexample safe derivability y It stops false reached structure preﬁxpoint cid19 1 As notice input problems consider contains cid5L O cid7 number lattice points It possible encode lattice points way polynomial terms sum branching width height lattice describing paths given lattice point B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 175 O provides counterexample safe derivability y In case traversed O induction terminal witness y safely derivable One run algorithm builds strictly growing sequence lattice points number iterations bound height lattice At step main computations computations O x x O x checking cid19 s O s lattice points smaller In order branch elements s iteratively compute direct successors s check satisfy condition These operations require solve function problem FC Hence Algorithm 1 runs nondeterministic polynomial time run terminates true y safely derivable x It follows deciding y safely derivable x NP dual coNP cid2 cid19 s s Theorem 42 Let C class The decision problem given cid5L O cid7 C s L safeO s cid8P problem coNP hard 2 For classes C 2 First note y safely derivable x z x z y Proof We ﬁrst containment cid8P Hence safely deﬁned point reached safe O induction j x j1 direct successor x j By solving polynomial number terms branching width L coNP problems compute set direct successors y x safely derivable x By polynomial number times terms height L ﬁnd safely deﬁned structure determine safeO s We hardness result To encode coNP hard problem deciding validity propositional formula ϕ propositional vocabulary cid4 Disjunctive Normal Form DNF Let Val denote symbol cid4 cid4cid19 cid4 Val Consider lattice cid5L cid7 cid52cid4cid19 Consider logic program P cid4cid19 consists rule cid7 elements L propositional interpretations cid4cid19 Val x1 xn disjunct x1 xn ϕ rule x Val x cid4 We claim Val safeT P ϕ valid To note interpretation I cid4cid19 Now ϕ false ϕ valid In case ﬁxpoint T P unique T P induction Val T P I I ϕ We case Val safeT P ϕ valid Otherwise ϕ In case Val derivable necessarily safely derivable If ϕ valid Val T P I I Val T P I I Thus case Val safely derivable On hand ϕ valid exists interpretation I cid4 I cid9 ϕ Now case Val T P I Val Notice I Val derivable Val This means Val Val I T P induction Val cid9 T P I Val Val safely derivable We conclude safeT P greater Val ϕ valid Since deciding validity sentence DNF coNP hard obtain desired result cid2 As seen gap complexity results managed prove containment cid8P 2 coNP hardness Theorem 42 While tried manage close gap present challenge community 5 Preliminaries AFT Given lattice L approximation ﬁxpoint theory makes use lattice L2 We deﬁne projections pairs usual x y1 x x y2 y Pairs x y L2 approximate elements interval x y z x z z y We x y L2 consistent x y x y nonempty We use Lc denote set consistent elements Elements x x Lc called exact We use tuple x y interval x y interchangeably The precision ordering L2 deﬁned x y p u v x u v y In case u v consistent means x y approxi mates elements approximated u v words u v x y If L complete lattice cid5L2 pcid7 complete lattice AFT studies ﬁxpoints lattice operators O L L operators approximating O An operator A L2 L2 approximator O p monotone O x Ax x x L It follows deﬁnition approximators map Lc Lc As usual restrict attention symmetric approximators approximators A x y Ax y1 A y x2 DMT 12 showed consistent ﬁxpoints deﬁned uniquely determined approximators restriction Lc deﬁne approximators Lc AFT studies ﬁxpoints O ﬁxpoints A The AKripkeKleene ﬁxpoint p ﬁxpoint A property approximates ﬁxpoints O A partial Astable ﬁxpoint pair x y x lfp A y1 176 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Fig 1 The Kleene truth tables 21 y lfp Ax 2 A y1 denotes operator L L x cid21 Ax y1 analogously Ax 2 The Awellfounded ﬁxpoint precise partial Astable ﬁxpoint An Astable ﬁxpoint O ﬁxpoint x O x x partial Astable ﬁxpoint This equivalent condition x lfp A x1 Astable ﬁxpoints minimal ﬁxpoints O The AKripkeKleene ﬁxpoint O constructed iterative applications A starting cid13 For Awellfounded ﬁxpoint similar constructive characterization worked Denecker Vennekens 14 Deﬁnition 51 An Areﬁnement x y pair x cid19 y cid19 L2 satisfying following conditions x y p x x cid19 x Ax y cid19 p Ax y cid19 y cid192 y cid19 y An Areﬁnement strict x y cid9 x cid19 y cid19 Deﬁnition 52 A wellfounded induction A sequence xi yiiβ β ordinal x0 y0 cid13 xi1 yi1 Areﬁnement xi yi β xλ yλlubp xi yii λ limit ordinals λ β A wellfounded induction terminal limit xβ yβ strict Areﬁnements Denecker Vennekens 14 showed terminal Ainductions converge Awellfounded ﬁxpoint O pairs I1 I2 interpretations Logic programming In context logic programming elements bilattice Such pair I1 I2 corresponds fourvalued interpretation I interprets atom true t false f unknown u inconsistent cid16 2 cid15 2cid4 I p p I1 p I2 t u p I1 p I2 p I1 p I2 f p I1 p I2 cid19 I1 I Truth values ordered truth order t induced f t u t t f t t t The pair I1 I2 approximates interpre cid19 I2 We identify interpretation I fourvalued interpretation I I We tations I concerned consistent called partial threevalued interpretations tuples I I1 I2 I1 I2 For interpretation atoms I1 true t I atoms I2 I1 unknown u I atoms false f I If I threevalued interpretation ϕ formula write ϕI standard threevalued valuation based Kleene truth tables Fig 1 Several approximators deﬁned logic programs The common Fittings immediate consequence operator cid9P 18 direct generalization T P partial interpretations given pψP I max t bodyrI r P headr p DMT 10 showed wellfounded ﬁxpoint cid9P wellfounded model P deﬁned Van Gelder et al 33 cid9P stable ﬁxpoints exactly stable models P deﬁned Gelfond Lifschitz 20 In case operator cid9P y1 coincides immediate consequence operator GelfondLifschitz reduct 20 6 Safe inductions AFT In section study safe O inductions relate ﬁxpoints studied AFT Theorem 61 Let O operator A approximator O The Awellfounded ﬁxpoint approximates safely deﬁned point O B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 177 The proof makes use following proposition Proposition 62 Let O operator A approximator O Let xi yiiβ Awellfounded induction The following claims hold 1 xiiβ safe O induction 2 β O induction N z j jα z0 xi holds zα yβ Proof The proof induction length β wellfounded induction Our claim trivially holds β 0 easy preserved limit ordinals Assume holds holds 1 distinguish cases First assume xi yi p xi1 yi1 p Axi yi 1 We xi1 safely derivable xi Since tuple wellfounded induction consistent 14 xi yi p xi xi holds xi xi1 Axi yi1 Axi xi1 O xi xi1 derivable xi Furthermore know O induction N ziiα z0 xi holds xi zα yi Since A approximator O zα xi yi holds xi1 Axi yi1 O zα xi O zα Since holds O induction xi1 safely derivable xi 2 Let ziiα O induction xi From induction hypothesis follows zα yi We zα yi1 induction α Since wellfounded inductions consistent increasing precision holds xi xi1 yi1 yi claim holds α 0 z0 xi It clear property preserved limit ordinals Assume holds α j holds j 1 We xi z j yi Since A approximator O O z j Az j z j p Axi yi p xi1 yi1 Hence follows O z j yi1 Thus z j1 z j O z j yi1 claim follows Second assume xi1 xi Axi yi12 yi1 yi 1 The ﬁrst claim trivial xi1 xi 2 Let z j jα O induction xi From induction hypothesis follows zα yi We zα yi1 induction α Since wellfounded inductions consistent increasing precision holds xi xi1 yi1 yi claim holds α 0 z0 xi It clear property preserved limit ordinals Assume holds α j holds j 1 We xi z j yi1 Since A approximator O O z j Az j z j p Axi yi1 Hence O z j Axi yi12 yi1 Since z j yi1 follows z j1 z j O z j yi1 claim follows cid2 Proof Theorem 61 Let z denote safely deﬁned point O let xβ yβ denote Awellfounded ﬁxpoint O For terminal Awellfounded induction xi yiiβ holds xβ z ﬁrst point Proposition 62 Furthermore second point Proposition 62 holds O induction stays yβ z yβ cid2 Example 63 Example 39 continued In example wellfounded model p p twovalued It follows immediately Theorem 61 case safeT P p cid2 Example 64 Consider logic program P p q r p r q p 178 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 The cid9P wellfounded model P p p q r In case safeterminal strict induction p Indeed p interpretations p q p r p q r derivable safely derivable Hence operator T P complete cid2 Example 65 Consider logic program cid2 P cid3 p p p p In case cid9P wellfounded model P p This twovalued The safely deﬁned point T P p p safeterminal T P induction Hence operator T P complete cid2 Theorem 61 consequences Corollary 66 If Awellfounded ﬁxpoint O exact equal x x x L O complete safeO x The converse Corollary 66 hold case O complete Awellfounded ﬁxpoint exact This seen Example 611 Corollary 67 Let O operator A approximator O The AKripkeKleene ﬁxpoint O approximates safely deﬁned point O Corollary 68 If AKripkeKleene ﬁxpoint O exact equal x x x L O complete safeO x Safe O inductions identify unique lattice point Since operator multiple stable ﬁxpoints expect strong link safely deﬁned point stable ﬁxpoints However ﬁnd following relation stable ﬁxpoints O inductions Theorem 69 Let A approximator O If x Astable ﬁxpoint O x limit terminal O induction Proof If x Astable ﬁxpoint O x lfp A x1 Consider sequence xiiα given x0 xi1 Axi x1 xλ lubxi λ limit ordinals λ If α large holds x xα We claim xiiα O induction First A x1 monotone xi1 xi Second notice xi x xi xi x O xi Axi x O xi Axi x1 From conclude xi1 O xi O xi xi Thus xiiα O induction It terminal x ﬁxpoint O cid2 Example 610 Consider logic program cid2 P cid3 p q q p It holds p stable model P cid9P stable ﬁxpoint T P Also p limit T P induction p This induction safe q T P induction p cid9 T P q q cid2 The limit terminal O induction stable ﬁxpoint O In fact example shows exist safe inductions limit Astable approximator O B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 179 Example 611 Consider logic program p p p q q p q q P In case q q p unique terminal T P induction It veriﬁed safe induction T P complete The safely deﬁned point nonminimal ﬁxpoint T P nongrounded 4 Astable ﬁxpoint approximator A T P In wellfounded model P atoms unknown cid2 While Theorem 61 shows relation safe inductions wellfounded ﬁxpoint strong Example 611 shows connection ﬁxpoints deﬁned AFT weaker 7 Safe inductions autoepistemic logic Recently Bogaerts et al 5 exposed problem semantics autoepistemic logic AEL They showed simple stratiﬁed theories wellfounded semantics fail identify intended model They solved problem deﬁning algebraically new constructive semantics based reﬁned notion approximations lattice point reﬁned intervals elements L2 In section safe inductions provide direct solution aforementioned problem need approximation First recall background AEL 71 AFT autoepistemic logic AEL nonmonotonic logic modeling beliefs knowledge rational agent perfect introspection capa bilities 26 Let L language propositional logic based set atoms cid4 Extending language modal operator K read I agent know2 yields language LK modal propositional logic An autoepistemic theory set formulas LK A crucial assumption theories distinguishes logic standard modal logic S5 agents knowledge encoded theory belongs theory derived Levesque 22 called I know assumption A modal formula formula form K ψ objective formula formula modal subformulas If ϕ formula Atϕ denotes set atoms occur ϕ At O ϕ set atoms occur objectively ϕ outside scope operator K An interpretation subset cid4 A possible world structure set interpretations A possible world structure seen Kripke structure accessibility relation total The set possible world structures denoted Wcid4 forms lattice knowledge order k Q k Q A possible world structure Q mathematical object represent situations possible according agent interpretations q Q represent possible states affairs states affairs consistent agents knowledge interpretations q Q represent impossible states affairs states affairs violate agents knowledge iff Q Q cid19 cid19 If ϕ formula LK Q possible world structure I interpretation satisfaction ϕ respect Q I denoted Q I ϕ deﬁned modal logic S5 standard recursive rules propositional satisfaction augmented additional rule Q I K ϕ Q I cid19 ϕ I cid19 Q In formula Q represents belief agent I represents actual state world Modal formulas evaluated respect agents belief objective formulas evaluated respect actual state world We furthermore deﬁne Q K ϕ ϕ known Q Q I ϕ I Q Moore 26 associated theory T operator DT Wcid4 follows DT Q I Wcid4 Q I T The intuition operator DT Q revision Q consisting worlds consistent agents current beliefs Q constraints T DMT 11 deﬁned approximators DT showed AFT induces main new semantics AFT 2 Or following DMT 13 My knowledge entails 180 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Monotonically stratiﬁed AEL theories Following Vennekens et al 34 autoepistemic theory T stratiﬁable3 wrt partition cid4i0in alphabet exists partition Ti0in T At O Ti cid4i AtTi cid17 0 ji cid4 j This notion stratiﬁcation signiﬁcantly extends notion Marek Truszczy nski 24 A stratiﬁcation modally separated modal subformula K ψ Ti Atψ cid4i Atψ cid17 0 ji cid4 j Let cid41 cid42 disjoint vocabularies If Q 1 Q 2 possible world structures cid41 cid42 respectively def I1 I2 I1 Q 1 I2 Q 2 extension Q 1 Q 2 possible world structure cid41 cid42 deﬁned Q 1 Q 2 If Q possible world structure cid41 cid42 restriction Q cid41 Q cid41 def I cid41 I Q DMT 13 strong arguments favor constructive semantics AEL Bogaerts et al 5 showed constructive semantics induced AFT wellfounded KripkeKleene semantics weak AEL They gave following example Example 71 Consider autoepistemic theory T q K p r K q The informal reading theory follows I introspective autoepistemic agent know following q holds iff I know p r holds iff I know q Since p occur objectively T agent knows T information p Thus intended model knows p p K p K p hold intended model The ﬁrst sentence entails q K q hold Now sentence implies r intended model p q q unique possible world structure K p K p K q K r hold cid2 Bogaerts et al 5 showed wellfounded semantics approximator fails identify intended model example They generalized example class monotonically stratiﬁed theories deﬁned notion perfect model Deﬁnition 72 We T monotonically stratiﬁed respect partition cid4i0in alphabet modally separated stratiﬁcation Ti0in T subformulas K ψ Ti Atψ cid4i occur negatively scope odd number negations Ti The construction perfect model autoepistemic theory follows In monotonically stratiﬁed theory theory Ti deﬁnes knowledge symbols cid4i terms knowledge symbols lower strata cid4 j j The condition Deﬁnition 72 guarantees ﬁxed interpretation knowledge lower strata DTi monotone operator intended ﬁxpoint clear The perfect model T constructed iterated monotone inductions computing knowledge symbols cid4i based knowledge symbols lower strata In example ﬁrst ignorance p established knowledge q established ﬁnal stage knowledge r concluded This construction formalized follows Proposition 73 Proposition 33 Bogaerts et al 5 Let Ti0in monotonic stratiﬁcation T wrt cid4i0in For let Q i1 possible world structure Q cid21 DTi Q Q i1cid4i monotone ji cid4 j The operator D Wcid4i Wcid4i cid17 Deﬁnition 74 Let T monotonically stratiﬁed autoepistemic theory Ti0in monotonic stratiﬁcation T The perfect model T denoted pmT deﬁned induction n If n 0 DT monotone perfect model T ﬁxpoint DT Otherwise let Q n1 denote pm T j let Dn Proposition 73 case deﬁne pmT cid17 jn lfpDn Q n1 In general construction perfect model work expected Bogaerts et al 5 deﬁned criterion guarantees construction behaves nicely called weak permaconsistency Deﬁnition 75 An autoepistemic theory T called weakly permaconsistent possible world structure Q I Q I T 3 As mentioned introduction restrict ﬁnite stratiﬁcations B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 181 This resulted sanity criterion semantics autoepistemic logic follows Deﬁnition 76 We semantics autoepistemic logic respects stratiﬁcation weakly permaconsistent monoton ically stratiﬁed theories exactly model perfect model 72 AEL safe inductions Here safely deﬁned point DT manages identify ﬁxpoint Example 71 result generalizes safely deﬁned semantics deﬁned formally respects stratiﬁcation This result shows safe inductions identify perfect model prior information stratiﬁcation need form approximation Even stronger perfect model construction terminal safe induction Deﬁnition 77 The safely deﬁned semantics given Q sd T Q safeDT DT complete The condition DT complete effect safely deﬁned model T ﬁxpoint DT In words knowledge agent longer revised revision operator cid9 K p Q Example 78 Example 71 continued A ﬁrst observation possible world structures Q DT Q K p DT Q K p Hence N Q iiβ DT induction 2 property cid9 K p For Q holds DT Q K q From follows Q def p q q p q r q r kleast possible world structure K q holds safely derivable Now Q q possible world structure Q k Q q holds DT Q K r Thus holds possible world struc tures DT induction Q q Hence follows p q q safely derivable Q q Since ﬁxpoint DT safe DT induction pqr Q q p q q terminal safeterminal Thus perfect model T safely deﬁned point DT cid2 We example coincidence generalizes class monotonically stratiﬁed theories Theorem 79 The safely deﬁned semantics respects stratiﬁcation That monotonically stratiﬁed theory T T weakly permaconsistent DT complete safeDT perfect model T The proof theorem makes use following results Lemma 710 Suppose Ti0in monotone stratiﬁcation T wrt cid4i0in Let cid4cid19 world structure Q holds cid17 denote ji cid4 j For possible DT Q DTi Q cid4i cid4cid19 cid18 0in Proof For interpretation holds I DT Q Q I T Since Ti0in partition T condition equivalent Q I Ti To evaluate Q I Ti objective atoms evaluated respect I modal atoms respect Q Since objective atoms Ti cid4i modal atoms Ti cid4cid19 previous condition equivalent Q Icid4i Hence cid4cid19 Ti DTi Q DT Q cid4i result follows cid2 cid4i cid4cid19 182 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Lemma 711 Suppose T monotonically stratiﬁed wrt cid4i0in Furthermore suppose T weakly permaconsistent Let cid4cid19 cid17 ji cid4i If Q 1 Q 2 possible world structures Q 1 cid4cid19 Q 2 cid4cid19 DT Q 1 DT Q 2 cid4cid19 denote cid4cid19 Proof This proven Theorem 63 Bogaerts et al 5 cid2 Lemma 710 shows DT composed DTi Lemma 711 states possible world structures agree lower strata image DT weakly permaconsistent theory T In words knowledge symbols given stratum DT Q depends knowledge symbols smaller equal strata Q Proof Theorem 79 In proof use following notation If cid4cid19 cid4 Q cid4cid19 cid19cid27 denote kleast possible world structure Q cid4 Q cid4cid19 Q use cid26Q possible world structure It easy cid19 cid19 cid14 cid26Q cid19cid27 Q Q cid4cid19 Q cid19 Q cid19 cid4cid4cid19 Let Ti0in monotonic stratiﬁcation T respect cid4i0in Furthermore let cid4cid19 We prove following claim induction denote cid17 ji cid4 j Claim exists safe DT induction N Q j jβ cid19 Q β cid26pm Tk k icid27 Taking n theorem easily follows claim Indeed claim yields cid19 Q β cid26pm Tk k ncid27 cid26pmT cid27 pmT exists safe induction pmT limit Since perfect model T ﬁxpoint DT aforementioned safeinduction terminal DT complete We claim holds The claim trivial theory 1 Assuming holds n holds 1 Let N Q j jβ safe DT induction cid19 Q β cid26pm Tk k icid27 Consider sequence Q cid19 kkα given Q Q cid19 0 cid19 λ Q β cid13 Q kλ cid19 k limit ordinals λ α Q cid19 k1 cid26DT Q k cid4cid19 i1 cid27 k α From Lemma 710 follows Q cid19 k1 cid26DT Q k cid17 cid26D cid4cid19 T j Q k i1 cid27 ji cid4cid19 Since Q β cid4cid19 perfect model DTi1 Q kcid4i1 cid27 cid17 T j ﬁnd ji Q cid19 k1 cid26Q β cid4cid19 DTi1 Q kcid4i1 cid27 Or D deﬁned Proposition 73 ﬁnd Q cid19 k1 cid26Q β cid4cid19 D i1Q kcid4i1 cid27 Hence suﬃciently large α ﬁnd Q 1 Q 2 Q cid19 kkα DT induction Q β cid19 kkα safe cid17 cid26pm cid19 α Tk k 1cid27 What remains prove B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 183 The fact 1 DT induction Q β follows easily fact possible world structure Q cid26Q cid4cid19 cid27 k Q Hence Q cid19 k1 cid26DT Q k k DT Q k cid27 cid4cid19 i1 cid19 kkα safe DT induction DT induction Q To 2 holds Q cid4cid19 Q β This claim clearly holds j 0 Q cid19cid19 l Q β Hence holds l 1 Similarly ﬁnd Q l Q cid19cid19 l cid4i DT Q deﬁned Proposition 73 monotone operator ﬁnd Q ﬁnd Q l Taking l γ ﬁnd Q cid19 kkα safe cid2 cid19 cid19cid19 k First claim l lγ Q cid19 k If holds l Lemma 711 follows cid19 cid4i1 Since D k cid27 cid26Q cid19cid19 k Q l Furthermore Q k Q k Q cid4i1 Q cid19cid19 l cid19cid19 l cid19cid19 0 cid4cid19 cid4cid19 cid4cid19 i1 i1 i1 cid19 k cid19 k cid19 k cid19 k 8 Safe inductions argumentation frameworks Abstract argumentation frameworks AFs 17 simple abstract systems deal contentious information draw conclusions An AF directed graph nodes arguments edges encode notion attack arguments In AFs interested actual content arguments information abstracted away In spite conceptual simplicity exist different semantics different properties terms characterization existence uniqueness Recently Strass 30 showed existing semantics AFs generalization abstract dialec tical frameworks ADFs 87 obtained direct application AFT In section use aforementioned study relate safe inductions AFs An abstract argumentation framework cid11 directed graph A R nodes A represent arguments edges R represent attacks arguments We attacks b b R A set S A attacks s S attacks A set S A defends attacks attackers An interpretation AF cid11 A R subset S A The intended meaning interpretation arguments S accepted believed arguments S rejected Interpretations ordered according acceptance relation S 1 S2 iff S1 S2 S2 accepts arguments S1 There exist different semantics AFs deﬁne different sets acceptable arguments according different standards intuitions The major semantics argumentation frameworks formulated operators characteristic function F cid11 maps interpretation S F cid11S A S defends operator U cid11 U stands unattacked maps interpretation S U cid11S A attacked S An interpretation S conﬂictfree postﬁxpoint U cid11 S U cid11S argument S attacked S The characteristic function monotone operator ﬁxpoint called grounded extension cid11 The operator U cid11 antimonotone operator ﬁxpoints called stable extensions cid11 Many semantics admissible interpretations complete extensions semistable extensions stage extensions preferred extensions 17 characterized operators The following theorem shows grounded extensions deﬁned argumentation theory close ties safe inductions Theorem 81 Let cid11 argumentation framework The following equal grounded extension cid11 safely deﬁned point F cid11 safely deﬁned point U cid11 Proof Since grounded extension cid11 ﬁxpoint F cid11 follows Proposition 325 ﬁrst F cid11 result equal To equal claim U cid11 antimonotone operator U 2 cid11 follows Proposition 326 To claim holds notice F cid11S S defends This holds S attacks cid11S attackers attackers b b U cid11S This holds iff attacked U cid11S iff U 2 needed cid2 184 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 Example 82 Consider following framework e c b d In example unattacked expect accepted b attacked accepted The argument e defended safely accepted c d mutually attack defend Since established b rejected remaining argument defends c c The grounded extension rejects selfdefending arguments rejects c d e The grounded extension limit following induction safe F cid11 safe U cid11induction e cid2 9 Conclusion In paper presented notions O inductions safe O inductions lattice operator O We studied relate ﬁxpoints O studied AFT We studied semantics induced concepts context autoepistemic logic ﬁnd safely deﬁned point interesting properties class operators We applied theory Dungs argumentation frameworks existing operators safe inductions yield existing semantics It topic future work study semantics induced safe inductions application domains AFT abstract dialectical frameworks 8 active integrity constraints 193 For conjecture safe inductions prove helpful tackle problems wellfounded se mantics Example 18 CruzFilipe 9 Acknowledgements This work supported KU Leuven project GOA 13010 Research Foundation Flanders FWOVlaanderen Bart Bogaerts postdoctoral fellow Research Foundation Flanders FWO References 1 C Antic T Eiter M Fink Hex semantics approximation ﬁxpoint theory P Cabalar TC Son Eds Logic Programming Nonmonotonic Reasoning 12th International Conference Proceedings Corunna Spain September 1519 2013 LNCS vol 8148 Springer 2013 pp 102115 httpsdoi org 10 1007 978 3 642 40564 8 _11 2 KR Apt HA Blair A Walker Towards theory declarative knowledge 25 1988 pp 89148 3 B Bogaerts L CruzFilipe Fixpoint semantics active integrity constraints Artif Intell 255 2018 4370 httpsdoi org 10 1016 j artint 201711003 4 B Bogaerts J Vennekens M Denecker Grounded ﬁxpoints applications knowledge representation Artif Intell 224 2015 5171 https 5 B Bogaerts J Vennekens M Denecker On wellfounded setinductions locally monotone operators ACM Trans Comput Log 17 4 Sep 2016 doi org 10 1016 j artint 2015 03 006 27 pp 132 httpdoi acm org 10 1145 2963096 6 B Bogaerts J Vennekens M Denecker Safe inductions algebraic study 29 2017 pp 859865 httpsdoi org 10 24963 ijcai 2017 119 7 G Brewka H Strass S Ellmauthaler JP Wallner S Woltran Abstract dialectical frameworks revisited F Rossi Ed IJCAI 2013 Proceedings 23rd International Joint Conference Artiﬁcial Intelligence Beijing China August 39 2013 IJCAIAAAI 2013 pp 803809 httpwwwaaai org ocs index php IJCAI IJCAI13 paper view 6551 8 G Brewka S Woltran Abstract dialectical frameworks F Lin U Sattler M Truszczy nski Eds Principles Knowledge Representation Reason ing Proceedings Twelfth International Conference KR 2010 Toronto Ontario Canada May 913 2010 AAAI Press 2010 pp 102111 http aaai org ocs index php KR KR2010 paper view 1294 9 L CruzFilipe Grounded ﬁxpoints active integrity constraints M Carro A King M De Vos N Saeedloei Eds Technical Communications 32nd International Conference Logic Programming ICLP 2016 TCs October 1621 2016 New York City USA OASIcs vol 52 Schloss Dagstuhl Nov 2016 pp 1111114 httpsdoi org 10 4230 OASIcs ICLP2016 11 10 M Denecker V Marek M Truszczy nski Approximations stable operators wellfounded ﬁxpoints applications nonmonotonic reasoning J Minker Ed LogicBased Artiﬁcial Intelligence The Springer International Series Engineering Computer Science vol 597 Springer US 2000 pp 127144 httpsdoi org 10 1007 978 1 4615 1567 8 _6 11 M Denecker V Marek M Truszczy nski Uniform semantic treatment default autoepistemic logics Artif Intell 143 1 2003 79122 https doi org 10 1016 S0004 370202 00293 X 12 M Denecker V Marek M Truszczy nski Ultimate approximation application nonmonotonic knowledge representation systems Inf Comput 192 1 Jul 2004 84121 httpslirias kuleuven handle 123456789 124562 13 M Denecker V Marek M Truszczy nski Reiters default logic logic autoepistemic reasoning good G Brewka V Marek M Truszczy nski Eds Nonmonotonic Reasoning Essays Celebrating Its 30th Anniversary College Publications 2011 pp 111144 httparxivorg abs 1108 3278 14 M Denecker J Vennekens Wellfounded semantics algebraic theory nonmonotone inductive deﬁnitions C Baral G Brewka JS Schlipf Eds LPNMR Lecture Notes Computer Science vol 4483 Springer 2007 pp 8496 httpsdoi org 10 1007 978 3 540 72200 7 _9 15 M Denecker J Vennekens The wellfounded semantics principle inductive deﬁnition revisited C Baral G De Giacomo T Eiter Eds KR AAAI Press 2014 pp 110 httpwwwaaai org ocs index php KR KR14 paper view 7957 16 M Denecker J Vennekens B Bogaerts A logical study common principles inductive deﬁnition implications knowledge repre sentation CoRR arXiv1702 04551 2017 httparxivorg abs 1702 04551 B Bogaerts et al Artiﬁcial Intelligence 259 2018 167185 185 00330 3 17 PM Dung On acceptability arguments fundamental role nonmonotonic reasoning logic programming nperson games Artif Intell 77 2 1995 321357 httpsdoi org 10 1016 0004 370294 00041 X 18 M Fitting Fixpoint semantics logic programming survey Theor Comput Sci 278 12 2002 2551 httpsdoi org 10 1016 S0304 397500 19 S Flesca S Greco E Zumpano Active integrity constraints E Moggi DS Warren Eds Proceedings 6th International ACM SIGPLAN Conference Principles Practice Declarative Programming 2426 August 2004 Verona Italy ACM 2004 pp 98107 httpdoi acm org 10 1145 1013963 1013977 20 M Gelfond V Lifschitz The stable model semantics logic programming RA Kowalski KA Bowen Eds ICLPSLP MIT Press 1988 pp 10701080 httpciteseerist psu edu viewdoc summary doi 10 1124 6050 21 SC Kleene On notation ordinal numbers J Symb Log 3 4 1938 150155 httpwwwjstororg stable 2267778 22 HJ Levesque All I know study autoepistemic logic Artif Intell 42 23 1990 263309 httpsdoi org 10 1016 0004 370290 90056 6 23 F Liu Y Bi MS Chowdhury J You Z Feng Flexible approximators approximating ﬁxpoint theory R Khoury C Drummond Eds Advances Artiﬁcial Intelligence 29th Canadian Conference Artiﬁcial Intelligence Canadian AI 2016 Proceedings Victoria BC Canada May 31June 3 2016 Lecture Notes Computer Science vol 9673 Springer 2016 pp 224236 httpsdoi org 10 1007 978 3 319 34111 8 _28 24 V Marek M Truszczy nski Autoepistemic logic J ACM 38 3 1991 588619 httpsdoi org 10 1145 116825 116836 25 J Minker Ed Foundations Deductive Databases Logic Programming Morgan Kaufmann 1988 26 RC Moore Semantical considerations nonmonotonic logic Artif Intell 25 1 1985 7594 httpsdoi org 10 1016 0004 370285 90042 6 27 TC Przymusinski On declarative semantics deductive databases logic programs 25 1988 pp 193216 28 R Reiter A logic default reasoning Artif Intell 13 12 1980 81132 httpsdoi org 10 1016 0004 370280 90014 4 29 C Sierra Ed Proceedings TwentySixth International Joint Conference Artiﬁcial Intelligence IJCAI 2017 August 1925 2017 Melbourne Australia 2017 ijcai org httpwwwijcai org Proceedings 2017 30 H Strass Approximating operators semantics abstract dialectical frameworks Artif Intell 205 2013 3970 httpsdoi org 10 1016 j artint 2013 09 004 321978 321991 116825 116838 31 A Tarski A latticetheoretical ﬁxpoint theorem applications Pac J Math 1955 32 MH van Emden RA Kowalski The semantics predicate logic programming language J ACM 23 4 1976 733742 httpsdoi org 10 1145 33 A Van Gelder KA Ross JS Schlipf The wellfounded semantics general logic programs J ACM 38 3 1991 620650 httpsdoi org 10 1145 34 J Vennekens D Gilis M Denecker Splitting operator algebraic modularity results logics ﬁxpoint semantics ACM Trans Comput Log 7 4 2006 765797 httpsdoi org 10 1145 1182613 1189735