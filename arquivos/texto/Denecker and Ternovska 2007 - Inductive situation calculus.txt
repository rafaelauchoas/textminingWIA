Artiﬁcial Intelligence 171 2007 332360 wwwelseviercomlocateartint Inductive situation calculus Marc Denecker Eugenia Ternovska b Department Computer Science KU Leuven Belgium b School Computing Science Simon Fraser University Canada Received 15 November 2006 received revised form 7 February 2007 accepted 8 February 2007 Available online 20 February 2007 Abstract Temporal reasoning major test case knowledge representation formalisms In paper develop inductive variant situation calculus IDlogic classical logic extended inductive deﬁnitions This logic proposed recently extension classical logic It allows uniform representation forms deﬁnitions including monotone inductive deﬁnitions nonmonotone forms inductive deﬁnitions iterated induction induction wellfounded posets We role complex forms deﬁnitions limited mathematics extends commonsense knowledge representation In IDlogic axiomatization situation calculus ﬂuents causality predicates deﬁned simultaneous induction wellfounded poset situations The inductive approach allows solve ramiﬁcation problem situation calculus uniform modular way Our solution general solutions ramiﬁcation problem situation calculus Using previously developed modularity techniques basic variant inductive situation calculus ramiﬁcation rules equivalent Reiterstyle situation calculus 2007 Elsevier BV All rights reserved Keywords Knowledge representation Inductive deﬁnitions Situation calculus 1 Introduction IDlogic1 5810 extension classical logic inductive deﬁnitions ID In mathematical texts inductive deﬁnitions usually represented collections rules represent base case inductive cases Inductive rules monotone nonmonotone An example following rule deﬁnition truth relation I ψ I cid3 ψ states I satisﬁes ψ I satisfy ψ It known general inductive deﬁnitions represented ﬁrstorder logic FO IDlogic extends classical logic construction allows uniform Corresponding author Email address MarcDeneckercskuleuvenbe M Denecker 1 The term IDlogic introduced ﬁrst author 5 denote logic sets classical ﬁrstorder logic sentences deﬁnitions This logic extended current deﬁnition 8 7 called NMIDlogic order emphasize logic deals nonmonotone inductive deﬁnitions NMIDs 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200702002 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 333 representation different sorts inductive deﬁnitions representation preserves rulebased nature deﬁnitions mathematical texts The semantics new construct based wellfounded semantics logic programming 41 This semantics correctly formalizes semantics different types deﬁnitions mathematics recursionfree deﬁnitions monotone inductive deﬁnitions nonmonotone inductive deﬁnitions inductive deﬁnitions wellfounded orders iterated inductive deﬁnitions 46 IDlogic occupies interesting place spectrum logics mathematics science knowl edge representation As extension classical logic ﬁxpoint semantics inductive deﬁnitions viewed new element family ﬁxpoint logics Monotone ﬁxpoint logics origin logical study monotone inductive deﬁnitions 128 The contribution IDlogic formalizes nonmonotone inductive principles inductive deﬁnition wellfounded order iterated inductive deﬁnition differ nonmonotone principle based inﬂationary ﬁxpoint studied inﬂationary ﬁxpoint logic IFP 16 IDlogic similar description logics 2 separation deﬁnitional assertional knowledge allows deﬁnitions nnary predicates nonmonotone inductive deﬁnitions In addition IDlogic formally exten sion Logic Programming variants Abductive Logic Programming Datalog In way IDlogic induces alternative informal semantics logic programming solidly based mathematical principle ductive deﬁnitions As study semantical computational aspects IDlogic lead synergy integration different areas On computational level IDlogic recently proposed underlying language constraint pro gramming framework 27 This framework based ideas descriptive complexity theory similar respects Answer Set Programming 2029 A problem instance ﬁnite structure problem speciﬁca tion IDlogic formula deﬁning relationship instance solutions Solving problem amounts expanding structure new relations satisfy formula Depending expressiveness allowed framework captures complexity classes including P NP Several IDlogic solvers developed 2130 The focus paper knowledge representation modeling IDlogic Although diverse forms inductive deﬁnitions occur frequently mathematics little awareness logic KR community nonmonotone forms inductive deﬁnitions potential role inductive deﬁnitions knowledge repre sentation Thus central aim paper clarify illustrate types deﬁnitions We provide examples monotone deﬁnitions deﬁnitions induction wellfounded order iterated inductive deﬁnitions relate knowledge representation principles completion circumscription Moreover role complex forms deﬁnitions limited mathematics extends commonsense knowledge representation A second major purpose paper illustrate use tool set 842 analyzing deﬁnitions consisting different modularity theorems totality theorems translation theorems Our experiment demonstrates effectivity tool set breaking large complex deﬁnitions conjunctions smaller simpler ones translating deﬁnitions classical logic proving consistency correctness IDlogic theo ries The domain application selected study temporal reasoning Since early days AI temporal rea soning particular situation calculus major test case knowledge representation languages In 25 McCarthy Hayes exposed famous frame problem showing difﬁculty axiomatizing actions causa tion classical logic This problem partly motivated development area nonmonotonic reasoning leading nonmonotone logics default logic 32 nonmonotone reasoning techniques classical logic circumscription 23 completion 3 Many different temporal reasoning formalisms developed Cur rently widely adopted formalization situation calculus classical logic developed Reiter collaborators nineties 183134 Other wellknown solutions Event calculus 35 Fluent calculus 39 nonmonotonic logic approaches extensions language A 14 nonmonotonic causal theories 1522 We present formalization situation calculus IDlogic inductive situation calculus Temporal reasoning natural application inductive deﬁnitions set situations In Reiters situ ation calculus example description initial state viewed base case successor state axioms seen inductive case By axiomatizing situation calculus IDlogic explicitate deﬁnitional structure underlying situation calculus The main component inductive situation calculus deﬁnition 334 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 ﬂuent causality predicates simultaneous nonmonotone iterated induction wellfounded set situ ations This deﬁnition components natural illustrations mentioned types inductive deﬁnitions A ﬁrst beneﬁt explicitating deﬁnitional structure situation calculus considerably gain representational level In particular inductive situation calculus expressive modular Reiters classical logic version On level modularity inductive situation calculus possible represent ef fects speciﬁc actions speciﬁc ﬂuents speciﬁc circumstances individual effect rules It wellknown increased modularity improve elaboration tolerance 24 On level expressivity inductive situation calculus handle recursive ramiﬁcations effect ﬂuent cause effect ﬂuent vice versa The challenge handling recursive ramiﬁcations avoid erroneous models lated ﬂuents cause true simultaneously external cause By interpreting effect rules deﬁnitional rules spontaneous generation effects avoided As consequence inductive situation calculus currently provides general solution ramiﬁcation problem It provides general solution deﬁning ﬂuents situation calculus ﬂuents deﬁned monotone nonmonotone inductive deﬁnitions We prove range correctness results inductive situation calculus obtained mentioned tool set Our strategy break large simultaneous inductive deﬁnition ﬂuents conjunction small component deﬁnitions prove totality translate classical logic The main results following We use tool set prove equivalence Reiters situation calculus subformalism inductive situation calculus More precisely techniques allow translate subformalism classical ﬁrstorder logic theories closely related provably equivalent Reiter style situation calculus Extending previous result broader class inductive situation calculus theories translated extensions Reiters situation calculus ﬁrst secondorder logic ductive deﬁnition construct IDlogic However advantage explicit inductive deﬁnitions different effect ramiﬁcation theories modeled uniform way inductive situation calculus require different translation policies different combinations predicate completion circum scription We prove initial state expansion property inductive situation calculus This theorem guarantees model satisfying subtheory axiomatizes initial situation extension model interpreting action symbols unique way extend structure model complete inductive situation calculus theory To demonstrate importance property discuss implications First inductive situation calculus satisﬁes wellknown property relative satisﬁability 31 theory sat isﬁable subtheory initial state satisﬁable Satisﬁability ﬁrstorder IDlogic theory general undecidable property The initial state expansion property reduces problem proving satisﬁability inductive situation calculus smaller problem proving satisﬁability theory initial situation Second proposition shows inductive situation calculus correctly solves frame problem Recall 25 simply frame problem problem representing change result performing actions In ﬁrst order logic turned naive situation calculus theory consisting merely effect inertia formulas provides weak highly incomplete axiomatization temporal reasoning domain sense theory accepts unintended models differ intended models fact ﬂuents true spontaneously caused wrong type action To ﬁnd elegant general solutions problem turned challenging Recall Hank McDermots famous Turkey Shooting experiment 17 early nonmonotone approaches temporal reasoning shown weak sense accepting unintended models Ultimately took knowledge representation com munity decennia come sufﬁciently general theories avoid unintended models In inductive situation calculus problem excluded start successor states deﬁned terms initial state initial state choice actions extended exactly model This model constructed effect rules correctly captures state transitions dynamic Thus initial state expansion property guarantees unintended models inductive M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 335 situation calculus initial situation unintended model subtheory initial situation The initial state expansion property respect important correctness property formalizations situation calculus Our results imply initial state expansion property implications satisﬁed Reiters situation calculus formalism equivalent subformalism inductive situa tion calculus To knowledge ﬁrst time theorem proven situation calcu lus There topics paper wider history knowledge representation philosophy logic IDlogic achieves coherent conceptually clean integration classical monotonic logic logic pro gramming knowledge representation paradigms far incompatible Our experiment illustrates different roles formalisms In particular integrating extended forms logic programs classical logic compensates latters representational weakness inductive deﬁnability In similar spirit IDlogic clean coherent integration monotone nonmonotone logic displays monotone nonmonotone behaviour IDlogic extends classical logic new type atomic formulae deﬁnition set deﬁnitional implications As IDlogic monotone logic sense adding IDlogic formula IDlogic theory preserves logical consequences original ory On hand extending IDlogic deﬁnition new deﬁnitional implication nonmonotone effect preserve logical consequences For instance adding rule xpx x b deﬁni tion xpx x deletes logical consequence pb Consequently deﬁnitional implications nonmonotone modules IDlogic2 The deﬁnitional implication interesting nonstandard sort conditional best knowledge studied philosophical logic perspective The properties nonmonotone nontruth functional connective nicely illustrated inductive situation calculus deﬁnitional implications represent effects speciﬁc actions speciﬁc ﬂuents speciﬁc circumstances Interestingly rules similar called effect rules Reiters situation calculus Semantically important difference rules formalisms In Reiters situation calculus interpreted material implications completed additional axioms obtain ﬁnal axiomatization terms successor state axioms In inductive situation calculus effect rules interpreted deﬁnitional implications entail corresponding material implications equivalent As consequence obtain axiomatization equivalent Reiters solution frame problem natural way adding effect rules In sense claim Reiters situation calculus makes hidden use inductive deﬁnitions The natural effective use deﬁnitional rules representing effects including recursive ramiﬁcations suggests unexpected intriguing relationship inductive deﬁnitions causality In retrospect surprising inductive deﬁnition understood description mathematical construction process deﬁnitional implications represent atomic operations executed process But exactly role effect rule causal theory This topic deserves deeper investigation lead better understanding role inductive deﬁnitions logic programming knowledge representation philosophical logic The paper structured follows In section deﬁne IDlogic present modularity totality translation theorems form tool set analyze inductive situation calculus In Section 3 review traditional variant situation calculus similar 34 In rest paper 2 Be aware paper term monotonicity different meanings stemming inductive deﬁnability knowledge representation A monotone inductive deﬁnition isroughlya deﬁnition negation rule bodies subformalism monotone inductive deﬁnitions nonmonotone knowledge representation sense adding monotone deﬁnitional rules deﬁnition nonmonotone operation illustrated example 336 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 present formalism inductive situation calculus address ramiﬁcation problem consider detailed examples This paper extends conference version 7 2 Preliminaries 21 Preliminaries logic We begin ﬁxing notation terminology basic syntactic semantic notions related ﬁrst secondorder logic We assume inﬁnite supply distinct symbols classiﬁed follows 1 Logical symbols Parentheses b Logical connectives c Existential quantiﬁer d Binary equality symbol optional e Two propositional symbols t f 2 Nonlogical symbols countably object symbols Object symbols denoted lowcase letters b positive integer n 0 countably nary function symbols arity n Function symbols denoted lowcase letters c positive integer n countably nary relation symbols called predicate set symbols arity n We use uppercase letters denote predicates As usual identify object symbols 0ary function symbols propositional symbols predicate symbols arity 0 Remark 1 In parts paper formal distinction variable constant symbols Symbols occurring free formula viewed constants Symbols scope quantiﬁer viewed variables In examples tend quantify x y X Y leave c g f P Q free treat constants This convention allows simplify exposition considering cases We deﬁne vocabulary set nonlogical symbols We denote vocabularies τ τ o Δ We use σ σ1 σ2 refer arbitrary symbol vocabulary We write σ denote sequence symbols σ1 σ2 depending context set symbols σ1 σ2 Likewise X denotes sequence set relational symbols set variables constants x denote sequence set object symbols A term deﬁned inductively follows object symbol term t1 tn terms f nary function symbol n cid2 1 f t1 tn term A formula deﬁned following induction P nary predicate constant variable t1 tn terms P t1 tn formula called atomic formula simply atom φ ψ formulas φ φ ψ x object symbol f function symbol X predicate symbol φ formula x φ f φ X φ formulas M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 337 A bounded occurrence symbol σ formula φ occurrence σ subformula σ ψ φ A free occurrence σ φ unbounded occurrence The set symbols occur free φ denoted freeφ This set deﬁned inductively If φ atomic form At1 tn set freeφ set object relational functional symbols occurring φ freeφ freeφ freeφ ψ freeφ freeψ freeσ φ freeφ σ A relation symbol X negative positive occurrence formula F X free occurrence scope odd number occurrences negation symbol A formula φ formula vocabulary τ free symbols belong τ freeφ τ We use SOτ denote set formulas τ use FOτ denote set ﬁrstorder formulas τ quantiﬁed predicate function variables We use φ ψ φ ψ φ ψ xφ f φ Xφ standard way abbreviations formulas φ ψ φ ψ φ ψ ψ φ xφ f φ Xφ respectively Having deﬁned basic syntactic concepts deﬁne semantic concepts Let A nonempty set A value nary relation function symbol σ vocabulary τ A nary relation function A A value 0ary function symbol object constant variable element domain A A value 0ary relation symbol Y singleton tuple We identify values false respectively true The value equality symbol identity relation A The value t true value f false A structure I given vocabulary τ short τ structure tuple domain domI non set mapping symbol σ τ value σ I domI If σ τ I τ structure I interprets σ We use letters J K L M denote structures Given I τI denotes set symbols interpreted I Let introduce notation constructing modifying structures shared domain A Let I τ structure σ tuple symbols necessarily τ Structure I σ v τ σ structure I symbols σ interpreted values v domI Given τ structure I subvocabulary τ cid15 τ restriction I symbols τ cid15 denoted I τ cid15 Vice versa I called extension Io I τIo Let t term let I structure interpreting symbol t We deﬁne value t I t I Io usual induction t object symbol σ t I σ I value σ I t f t1 tn t I f I t I 1 t I n Next deﬁne satisfaction truth relation Let I structure let φ formula free symbol φ interpreted I We deﬁne I φ words φ true I I satisﬁes φ following standard induction I Xt1 tn t I I ψ1 ψ2 I ψ1 I ψ2 I ψ I cid3 ψ I σ ψ value v σ domain domI I I σ v ψ n XI 1 t I Note truth formula φ welldeﬁned structure interpreting free symbol φ We shall denote truth value φ I φI I φ φI true false We use notation φx1 xn emphasize symbols x1 xn distinct free φ Sometimes wish investigate truth value formula φ function values assigned speciﬁc tuple symbols σ We symbols parameters φ denote formula φ σ Let I structure let v tuple values σ domain domI We write I φ v denote I σ v φ If X nary 338 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 relation symbol d ntuple elements domain A X d domain atom A For I structure domain A value X d I true d XI false For vocabulary τ deﬁne At τ A set domain atoms domain A relation symbols τ For set X relation symbols deﬁne At X In general given vocabulary τ predicates X denote At X A set domain atoms domain A relation symbols X A At τ A 22 IDlogic In subsection IDlogic 10 IDlogic introduced ﬁrst author 5 logic sets ﬁrst order logic sentences deﬁnitions In 8 7 logic extended current deﬁnition allowing arbitrary boolean combinations atoms deﬁnitions Let ﬁx vocabulary τ A new binary connective called deﬁnitional implication A deﬁnition Δ set rules form xXt ϕ x tuple object variables X predicate symbol predicate constant variable arity r t tuple terms length r vocabulary τ ϕ arbitrary ﬁrstorder formula τ contain free object relational variables The deﬁnitional implication distinguished material implication denoted Note rules allow universal quantiﬁers In rule xXt ϕ Xt called head ϕ body rule A deﬁned symbol Δ relation symbol occurs head rule Δ relation object function symbols called open Let τ vocabulary including free symbols Δ The subset deﬁned symbols deﬁnition Δ denoted τ d Δ The set open symbols Δ τ denoted τ o Δ The τ τ d sets τ d Δ A wellformed formula IDlogic vocabulary τ deﬁned following monotone induction Δ form partition τ τ d Δ Δ τ o τ o Δ τ o Δ 1 If X nary predicate symbol t1 tn terms Xt1 tn formula 2 If Δ deﬁnition Δ formula 3 If φ ψ formulas φ ψ 4 If φ formula φ 5 If φ formula σ φ formula σ ﬁrst secondorder symbol A formula φ IDlogicformula vocabulary τ set free symbols φ subset τ It FOIDτ formula contain secondorder quantiﬁers SOIDτ formula As example language natural numbers following SOIDτ formula τ 0 s1 expresses set set containing 0 closed taking successor numbers contains domain elements It equivalent standard induction axiom domain closure axiom cid2cid3 N x Nx x 0 x Nsx Nx cid4 cid5 xNx 1 Note formula contains existential quantiﬁcation secondorder variable N The secondorder quantiﬁcation avoided skolemizing N predicate constant instead In fact examples secondorder quantiﬁcation appear paper kind example eliminated way skolemization existentially quantiﬁed secondorder variable The semantics IDlogic extension classical logic semantics wellfounded semantics Δstructure Io logic programming 61240 We deﬁne wellfounded model deﬁnition Δ extending τ o For deﬁned symbol X Δ deﬁne ϕX x y1 x t1 ϕ1 ym x tm ϕm 2 x tuple new variables y1Xt1 ϕ1 ymXtm ϕm rules Δ X head For deﬁned symbol Y introduce new relation symbol Y cid15 arity We obtain ϕcid15 X ϕX x substituting Y cid15 negative occurrence deﬁned symbol Y M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 339 For pair τ structures I J extending Io deﬁne IJ extension Io interprets deﬁned symbol X Δ XI value X I new symbol Xcid15 XJ value X J The basis construction wellfounded model extending Io operator TΔ maps pairs I J extensions Io structure I cid15 extending Io deﬁned symbol X XI cid15 IJ ϕcid15 Thus operator TΔ evaluates positive occurrences deﬁned symbols rule bodies I negative occurrences deﬁned symbols J X In lattice τ structures extending Io operator TΔ monotone ﬁrst argument antimonotone second argument Deﬁne stable3 operator STΔ follows STΔJ lfpTΔ J This stable operator Δ antimonotone square monotone largest ﬁxpoint We deﬁne Io Io Δ gfpST 2 For intuitive explanation wellfounded semantics argument formalizes different forms Δ lfpST 2 Δ inductive deﬁnitions refer 6 Deﬁnition 1 Deﬁnition Δ total τ o Δextension Io abbreviated Io τ o Δ Δ total τ o T Δstructure Io Io Δstructure extending Ko Δ total theory T τ o Δ Io Δ called Δ When case Io Δ More generally Δ total structure Ko interpreting subset Δmodel Δ Δ total τ o Δ Io The aim inductive deﬁnition deﬁne deﬁned symbols This case Io Δ Io Δ Therefore natural quality requirement deﬁnition total Deﬁnition 2 φ true structure I Let φ IDlogicformula I structure interpreting free symbols φ We deﬁne I φ words φ true I I satisﬁes φ I model φ following induction n XI 1 I Xt1 tn t I Δ Io 2 I Δ I Io 3 I ψ1 ψ2 I ψ1 I ψ2 4 I ψ I cid3 ψ 5 I σ ψ value v σ domain domI I I σ v ψ 1 t I Δ Io restriction I τ o Δ Given IDlogic theory4 T τ τ structure I satisﬁes T model T I satisﬁes φ T This denoted I T Deﬁnition 2 prototypical example nonmonotone inductive deﬁnition speciﬁcally deﬁnition wellfounded poset set IDlogic formulas ordered subformula relation It contains non monotone recursion rule 4 This example sort induction formalized IDlogic As mentioned deﬁnitional implication distinguished material implication Rule xXt ϕ deﬁnition correspond disjunction xXt ϕ implies Intuitively deﬁnitional implication understood rules inductive deﬁnitions Deﬁnition 2 consists 5 rules A deﬁnitional implication contains atom head negative literal This reﬂects general principle inductive deﬁnitions deﬁnes concept enumerating positive cases cases deﬁned predicate true Given enumeration closure mechanism underlying inductive deﬁnitions yields negative cases 23 Analysing deﬁnitions In section recall modularity totality translation theorems 8 Deﬁnitions IDlogic nonmonotone sense adding rule deﬁnition general preserve logical consequence As consequence splitting deﬁnition conjunction parts general 3 This operator called GelfondLifschitz operator introduced 13 4 By theory mean ﬁnite set axioms 340 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 equivalence preserving This obviously case split rules deﬁning predicate For example deﬁnition cid3 x P x x x P x x b cid4 conjunction partition cid7 x P x x cid6 cid7 cid6 x P x x b equivalent Indeed Herbrand model I deﬁnition P I b model satisﬁes ﬁrst component deﬁnition P I cid3 second P I cid3 b This motivates following deﬁnition Deﬁnition 3 partition deﬁnitions A partition deﬁnition Δ set Δ1 Δn 1 n Δ Δ1 Δn deﬁned symbol P appears head rule Δi 1 cid3 cid3 n rules Δ P head belong Δi Δi Notice Δi new open symbols For instance P deﬁned Δ Δi new cid8 1 cid3 cid3 n Also τ d Δi τ d Δ τ d Δi τ d Δj τ d Δ τ o Δi τ d Δi open symbol Δi Of course holds τ τ o Δ cid3 j Even rules deﬁning predicate module splitting equivalence preserving For example unique model deﬁnition P Q Q P P Q false conjunction P Q Q P 3 models P Q false true A nontrivial example splittable deﬁnition following simultaneous inductive deﬁnition odd numbers cid3 x Ex x 0 x ESx Ox x OSx Ex x Ex x 0 x ESx Ox cid4 4 In domain natural numbers interpreting 0 0 S successor function Succ deﬁnition shown equivalent conjunction cid7 cid6 x OSx Ex 5 By splitting deﬁnition obtain noninductive deﬁnitions numbers odd numbers Such noninductive deﬁnitions translated classical logic translation results x Ex x 0 y x Sy Ey x Ox y x Sy Ey 6 This example illustrates potential use modularity translation results analysis inductive deﬁnitions Whether partition deﬁnition equivalent original deﬁnition depends split breaks circular dependencies deﬁned facts For example deﬁnition 3 P Q mutually depend Splitting deﬁnition breaks cycle equivalence lost In deﬁnition 4 E O deﬁned terms cyclic dependencies level atoms Ie atom En depends On 1 turn depends En 2 So splitting deﬁnition dependency cycles broken equivalence preserved Below intuitive notion dependency relation atoms formalized concept reduction relation Assume deﬁnition Δ τ structure Ko domain A τKo A set domain atoms τ domain A set atoms P a1 P P relation symbol τ τ o Δ Let At τ M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 341 A If Q b P P depends a1 elements A Let binary relation At τ Q b according For domain atom P pair I J τ structures domain A deﬁne I P J f I f J constant function symbol f appearing Δ atom Q b P I Q b iff J Q b We extend pairs deﬁning I J P I cid15 J cid15 I P I cid15 J P J cid15 Let ϕP 2 Deﬁnition 4 reduction relation A binary relation At τ A reduction relation brieﬂy reduction rule x P t x ϕ x Δ τ structures I J I cid15 J cid15 extending Ko tuples d t J x d I J P I cid15 J cid15 holds IJ ϕcid15 d iff I cid15 J cid15 ϕcid15 d The relation reduction relation Δ Ko deﬁned predicate P Δ reduction relation rule xP x ϕP Ko Intuitively deﬁnition expresses reduction relation truth formulas ϕP depends truth atoms P depends according Proposition 1 If reduction relation rule deﬁnition Δ Ko superset reduction relation rule resp Δ Ko Proposition 2 Let reduction relation rule Δ Ko Then reduction relation Δ Ko The propositions suggest methodology constructing reductions deﬁnition deﬁne reductions rules union We illustrate deﬁnition 4 context natural numbers We obtain reduction deﬁnition union reductions rules cid6 En On 1 n N cid7 cid6 On 1 En 2 n N cid7 7 Recall prewellfounded order reﬂexive transitive relation nonempty subset contains minimal element The following deﬁnition crucial decomposition theorems Deﬁnition 5 reduction partition Call partition Δ1 Δn deﬁnition Δ reduction partition Δ τ o Δ structure Io reduction prewellfounded order Δ Io pair deﬁned domain atoms P Q b Q b P P Q b P Q deﬁned Δi The intuition underlying deﬁnition reduction partition atom deﬁned module depends atom deﬁned module atom depend ﬁrst atom strictly reduction ordering A partition Δ1 Δn Δ called total Ko Δi total Ko Theorem 1 modularity 10 Theorem 520 If Δ1 Δn reduction partition Δ Ko τ structure M extending Ko M Δ1 Δn iff M Δ Theorem 2 totality 10 Theorem 524 If Δ1 Δn total reduction partition Δ Ko Δ total Ko It easy reduction relation 7 turns partition 5 reduction partition Hence text natural numbers deﬁnition equivalent partition Moreover component deﬁnitions noninductive total follows deﬁnition 4 total This illustrates role theorems tell understand large deﬁnition conjunction smaller ones allow prove totality large deﬁnition given totality smaller ones Δ τ o Δmodel Mo To Δ1 Δn reduction partition Δ Suppose To theory τ o Mo Under assumption important corollaries hold 342 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 Corollary 1 To Δ To Δ1 Δn logically equivalent Corollary 2 If addition Δ1 Δn total partition To Δ total To Now consider special cases deﬁnitions explain translate classical logic Let Δ positive deﬁnition positive occurrences deﬁned symbols rule bodies deﬁning symbols P Let Xi Pi arity Deﬁne cid16 cid17cid16 cid18 PIDΔ Δ X Δ P X P X CIRCΔ cid19 cid16 Δ X cid17cid16 cid18 Δ P X X P P X Δ conjunction formulas obtained replacing deﬁnitional material implications Δ Δ P X Here deﬁnition obtained substituting Xi deﬁned symbol Pi P X shorthand formula x P1 x X1 x x Pn x Xn x The formula PIDΔ standard secondorder formula express predicates P satisfy positive inductive deﬁnition Δ The theory PIDΔ expresses deﬁned relations relations closed rules Δ τ o Δstructure Because rules Δ positive relations guaranteed exist The theory CIRCΔ circumscription axiom 23 expresses deﬁned relations minimal relations closed rules Δ τ o Δstructure Since relations closed rules Δ unique minimal relations closed rules Δ formulas equivalent Theorem 3 See 10 Theorem 63 If Δ positive contains negative occurrences deﬁned symbols rule bodies total τ o Δstructure τ structure I I Δ iff I PIDΔ iff I CIRCΔ These results applied example context deﬁnition 4 odd numbers Another result concerned possibly nonmonotone deﬁnitions wellfounded posets First propose formalization informal concept IDlogic Deﬁnition 6 strict reduction relation A reduction relation Δ At τ order antisymmetric transitive binary relation inﬁnite descending chains A strict Ko strict wellfounded Thus P Q b holds bodies rules deﬁning Q b depend truth value P vice versa Deﬁnition 7 deﬁnition wellfounded induction Let Δ deﬁnition strict reduction relation Ko We Δ deﬁnition wellfounded induction Ko This type deﬁnitions formalized ﬁrstorder logic wellknown concept completion 3 Deﬁne completion Δ denoted compΔ conjunction deﬁned symbol X Δ formulas xX x ϕX x In general deﬁnition Δ entails completion compΔ vice versa However case deﬁnition wellfounded induction inverse true Theorem 4 completion 10 Theorem 69 Suppose Δ deﬁnition wellfounded induction τ o Then deﬁnition Δ total Io b model Io Δ Δ unique model compΔ extending Io Δstructure Io An example deﬁnition wellfounded induction deﬁnition 4 structure cid22N 0 Succcid23 Indeed transitive closure reduction relation 7 strict wellfounded order reduction relation deﬁnition 4 As consequence deﬁnition completion formula 6 equivalent structure model deﬁnition extending cid22N 0 Succcid23 model completion vice versa M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 343 One observes theorem prove logical equivalence equivalence structures equivalence context given structure In fact deﬁnition strict reduction relation structure structures Consider example structure Ko domain b 0Ko SKo b b In structure reduction relation deﬁnition 4 cid7 cid6 Ea Oa Oa Ea Eb Ob Ob Eb Each reduction superset relation Since transitive relation extending relation contains Ea Ea deﬁnition strict reduction relation structure In fact deﬁnition 4 comple tion 6 equivalent structure The unique model I deﬁnition interprets EI OI On hand completion additional model EI b OI b Suppose To theory τ o Δ τ o Mo Under assumption useful corollaries hold Δmodel Mo To Δ deﬁnition wellfounded induction Corollary 3 To Δ To compΔ logically equivalent Corollary 4 Δ total To Notice positive inductive deﬁnitions deﬁnitions wellfounded induction different general nonequivalent formalizations classical logic Some techniques introduced similar methods logic programming For example Theorem 4 shows similarity Fages theorem 11 However Fages notion tight program equivalent notion deﬁnition wellfounded order Fages theorem Herbrand interpretations relates completion stable semantics general interpretations relates completion wellfounded semantics 3 Reiterstyle situation calculus From dealing manysorted logic All results deﬁnitions introduced far easily extend case The vocabulary τsc situation calculus manysorted vocabulary equality sorts actions Act situations Sit possibly ﬁnite number domainspeciﬁc sorts called object sorts Ob1 Obk Obi arbitrary The vocabulary contains potentially inﬁnite set domaindependent function symbols sort Act The sort argument function object sort For example block world domain actions pick_upx put_onx y ranging sort Block The vocabulary contains binary relation cid24 arguments sort Sit denoting precedence situations The constant S0 sort Sit denotes initial situation Function sort Sit maps actions situations situations given s term doa s denotes successor situation obtained situation s performing action The predicate constants F1 F2 called ﬂuents denote properties world initial situation situations Fluents exactly argument sort Sit sort argument object sort For example Onx y s arity 3 denotes object x object y situation s Deﬁnition 8 DunaS The theory unique axioms sort S DunaS set axioms following axiom schema distinct function symbols f g sort S x y f x g y x y f x1 xn f y1 yn x1 y1 xn yn The axioms 9 hold function symbol f arity greater zero 8 9 Deﬁnition 9 Df The foundational axioms situation calculus Df set axioms consisting unique axioms situations DunaSit domain closure axiom situations P doa s sP s cid15a P s P P S0 s 10 cid15 cid15 precedence axioms situations 344 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 s s cid2 S0 ss cid15a s cid2 doa s cid15 s cid24 s cid15 s cid2 scid15 abbreviation s cid24 scid15 scid15 cid24 s 11 12 The role axiom 10 guarantee domain situations Sit smallest set closed applications function symbol satisﬁes unique axioms situations Every models Df identical domains sort Act identical domains sort Sit modulo isomorphism Deﬁnition 10 Dss The successor state axioms Dss form xas F x doa s γ F x s F x s γ F x s 13 Formula γ F x s respectively γ F x s denotes ﬁrstorder formula specifying conditions action causes ﬂuent F true respectively false situation s 33 The free variables formulas x s symbol sort Sit free variable s An example successor axiom swas Onsw doa s togglesw Onsw s Onsw s cid3 togglesw This axiom says switch situation doa s situation obtained performing action togglesw situation s switch switch action togglesw performed Successor state axioms obtained set effect rules form xas δi F x s F x doa s 1 k xas νj F x s F x doa s 14 15 j 1 m formulas δi F Each rules speciﬁes initiating terminating effect particular action particular condition Together rules exhaustively effects Effect rules transformed successor state axioms following equations F satisfy conditions γ F νj F γ γ F x s kcid20 i1 δi F x s γ F x s mcid20 j 1 νj F x s This transformation equivalence preserving transforms incomplete speciﬁcation action domain ﬁnal axiomatization Deﬁnition 11 DS0 A description initial situation DS0 set ﬁrstorder sentences uniform S0 contains situation term S0 A basic action theory consists Df DunaAct DS0 Dss 4 Inductive situation calculus In section deﬁne variant Reiterstyle situation calculus inductive situation calculus All ﬂuents deﬁned simultaneous induction wellfounded set situations Ramiﬁcations describing propagation effects actions modeled monotone nonmonotone inductions level situations The result iterated inductive deﬁnition alternating phases monotone nonmonotone induction Below components inductive situation calculus M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 345 The vocabulary τisc inductive situation calculus extends τsc types symbols Symbols IF1 IF2 initial situation correspond ﬂuents F1 F2 Fn situation argument They open symbols inductive situation calculus The type symbols denotes causality relations These symbols introduced bit later The initial state vocabulary τinit consists symbols τisc involving isc inductive situation calculus extends τinit So cid24 action sorts Act Sit The open vocabulary τ o symbols This vocabulary consists symbols τisc ﬂuents causality predicates The IDlogic induction axiom 1 natural numbers extended arbitrary sorts following way Deﬁnition 12 DDCAS Given vocabulary τ domain closure axiom sort S DDCAS axiom P x P x x c x1 xn P f x1 xn P xi1 P xim xP x deﬁnition contains rule constant c sort S function symbol f τ sort S arguments i1 im sort S For example domain closure axiom DDCASit situations cid2cid3 P s P s s S0 P doa s P s cid4 cid5 sP s 16 The role axiom 16 guarantee domain situations Sit smallest set containing S0 closed applications function symbol It equivalent Reiters induction axiom situations Recall second order variable eliminated skolemization A general property combination unique names axioms domain closure axiom consistent ﬁx domain unique way Proposition 3 Let τo sorted vocabulary τ extends τo new sort S set constant function symbols sort S For τostructure Io nonempty class τ structures extending Io satisfying DunaS unique modulo isomorphism extension Io satisfying DunaS DDCAS The foundational axioms inductive situation calculus Dif unique axioms DunaSit situa tions domain closure axiom DDCASit situations following deﬁnition precedence relation cid3 Δcid24 ss ss cid15 s s cid15 s cid24 s cid15 cid15a s cid24 doa s cid15 s cid24 s cid4 cid15 17 An initial structure A inductive situation calculus multisorted structure nonempty domain sort language interprets symbols τ o isc satisﬁes foundational axioms Dif Proposition 4 For τinitstructure Io arbitrary extension I Io symbols sort Act unique modulo isomorphism initial structure A extending I Io unique extension satisfying DunaAct DDCAAct Proof By application Proposition 3 sort Sit prove arbitrary extension I Io sort Act cid24structure satisfying DunaSit DDCASit By Theorem 3 structure unique modulo isomorphism τ o isc extended unique way deﬁnition Δcid24 By Proposition 3 extensions satisﬁes DunaAct DDCAAct cid3 Proposition 5 Let A initial structure In structure substructure cid22SitA cid24Acid23 wellfounded poset prewellfounded set Proof In initial structure A collection situations isomorphic set ﬁnite sequences elements sort Act SA constructor appending action object 0 corresponds sequence doA 346 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 ﬁnite sequence Since A satisﬁes deﬁnition 17 holds situations s scid15 s cid24A scid15 iff sequence s initial segment scid15 This wellfounded order cid3 The following proposition demonstrates remaining foundational axioms situation calculus presented 34 implied deﬁnition Proposition 6 The theories Df Dif logically equivalent Proof Both theories contain DunaSit The induction axiom Df equivalent DDCASit Dif It difﬁcult prove structure A satisfying DunaSit DDCASit situations correspond ﬁnite sequences actions unique relation cid24A satisﬁes sentences 11 12 relation deﬁned deﬁnition 17 cid3 In place DS0 description initial situation terms ﬂuents hold S0 inductive situation calculus initial situation terms symbols IFi The corresponding collection axioms Dinit This theory vocabulary τinit A basic action theory inductive situation calculus collection axioms form Dif DunaAct Dinit Δsc 18 Δsc inductive deﬁnition ﬂuents We include domain closure DDCAAct actions inductive situation calculus theory In sections present variants Δsc 41 Specifying direct effects actions For ﬂuent Fi introduce additional auxiliary relations CFi CFi These relations represent initi ating terminating causes Fi respectively Both CFi CFi sort arguments Fi plus action argument Let Dinit axiomatize initial situation IF1 IFm We augment Dif DunaAct Dinit following deﬁnition Δsc ncid27 i1 Δi ﬂuent ncid27 i1 Δi effect Δi ﬂuent Δi effect cid28 xi F xi S0 IF xi xias Fi xi doa s CFi xi s xias Fi xi doa s Fi xi s CFi xi s xias CFi xi s γ Fi xias CFi xi s γ xi s xi s Fi cid29 Fi Fi Here formulas γ xi s analogous Reiterstyle situation calculus They formulas causality predicates free variables xi s symbol sort Sit free variable s All ﬂuent atoms formulas form Fj t s xi s γ The intuitive meaning deﬁnition follows The ﬁrst rule Δi ﬂuent deﬁnes ﬂuent Fi situation S0 The second rule says action causes ﬂuent situation ﬂuent holds successor situation The rule deals case ﬂuent affected action referred law inertia The rules Δi effect direct effects actions ﬂuent Fi Note ﬂuent appear rules causality predicate Hence deﬁnition Δsc large simultaneous inductive deﬁnition Moreover inertia law contains negative occurrence CFi predicate deﬁned terms ﬂuents Δsc general nonmonotone inductive deﬁnition In follows use results Section 23 order obtain standard successor state axioms situation calculus Proposition 7 The deﬁnition Δsc deﬁnition wellfounded induction τ o axioms Dif iscmodel foundational M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 347 Proof Let A initial structure domain A We shall construct reduction relation Δsc A This binary relation At τisc A set domain atoms represent potential dependencies domain atoms interpreted A ﬂuent causality atoms We construct rulebyrule way suggested Proposition 2 set tuples u s Fi u CFi Fi u s Fi u Fi u s CFj A v s A s s CFi u s Fi u A s arbitrary tuples objects u v arbitrary elements action sort s situation sort j It easy tuples ﬁrst lines provide reduction relation inductive rules ﬂuents tuples line represent possible dependencies direct effect rules It follows Proposition 2 reduction relation Δsc A Since Proposition 1 superset reduction relation reduction relation transitive closure reduction relation Moreover follows fact cid22SitA cid24Acid23 wellfounded set Proposition 5 strict wellfounded order At τisc A cid3 This proposition Corollary 3 interesting consequence Proposition 8 The theories Dif Δsc Dif compΔsc logically equivalent We formulate property mentioned introduction paper Deﬁnition 13 We basic action theory Disc Dif DunaAct Dinit Δsc inductive situation calculus satisﬁes Initial State Expansion property τinitmodel Io Dinit arbitrary extension I Io symbols sort Act I satisﬁes DunaAct unique τ model modulo isomorphism Disc extends I When Disc satisﬁes Initial State Expansion property particular τinitmodel Io Dinit unique τ extension modulo isomorphism satisfying Disc DunaAct DDCAAct As argued Section 1 initial state expansion property shows inductive situation calculus satisﬁes property relative satisﬁability correctly solves frame problem sense basic action theory unintended models spontaneous generation effects deus ex machina effects called 9 kind occurred early solutions frame problem Another implications subtheory modeling state transitions logically independent theory initial state interfere determining initial states Clearly unpleasant describing effects actions impose constraints initial state Proposition 9 A basic action theory inductive situation calculus 18 satisﬁes Initial State Expansion property Proof By Proposition 4 extension τinitstructure sort Act extended unique initial structure A By Corollary 4 extension A satisﬁes Δsc unique cid3 We investigate relationship Reiters situation calculus For given vocabulary τ let Mτ denote restriction structure M symbols τ Deﬁnition 14 Suppose τ1 τ2 vocabularies extending τ let T1 T2 theories respectively τ1 τ2 We T1 equivalent τ T2 τ1model M1 T1 exists τ2model M2 T2 M1τ M2τ vice versa 348 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 Recall τisc extends τsc new symbols IFi CFi CFi Theorem 5 A basic action theory inductive situation calculus Dif DunaAct Dinit Δsc equivalent τsc Reiterstyle basic action theory Df DunaAct DS0 Dss DS0 theory obtained Dinit substituting Fit S0 atom IFi t Dss set successor state axioms corresponding Δsc Proof Dif Df logically equivalent By Proposition 8 Df DunaAct Dinit Δsc logically equivalent Df DunaAct Dinit compΔsc compΔsc ncid16 i1 cid15 ncid16 i1 ncid16 i1 xis Fi xi s s S0 IFi xi s doa s cid15 CFi xi s cid15 Fi xi s cid15 CFi xi s cid15 xias CFi xi s γ Fi xi s xias CFi xi s γ Fi xi s Since domain closure axiom situations ss S0 cid15 s doa s cid15 Df 19 logically equivalent Df 20 21 ncid16 i1 ncid16 i1 xisa Fi xi doa s CFi xi doa s Fi xi s CFi xi doa s xi IFi xi Fi xi S0 ncid16 i1 ncid16 i1 xisa CFi xi s γ Fi xi s xisa CFi xi s γ Fi xi s 19 20 21 Given equivalences 21 clear Dif DunaAct Dinit 20 21 logically equivalent Df DunaAct DS0 Dss 21 Finally observe theory predicate symbols IFi CFi CFi occur lefthand Dss 21 equivalent τsc explicit deﬁnitions 21 It follows Df DunaAct DS0 Df DunaAct DS0 Dss cid3 Note deﬁnition Δi ﬂuent contain rules form xias Fi xi s CFi xi s 22 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 349 However natural requirement derive negative effect axioms actions demonstrate The requirement ﬂuent negation caused hold situation Formally requirement basic action theory entail following sentence ncid16 i1 xias γ Fi xi s γ Fi xi s It easy requirement satisﬁed negative effect axiom implied Observe successor state axiom entails xias γ Fi xi doa s γ Fi xi doa s Fi xi doa s Under requirement ﬁrst literal condition entailed second drop obtain negative effect rule xias γ Fi xi doa s Fi xi doa s Therefore context Inductive Situation Calculus rule 22 necessary This observation illustrates principle inductive deﬁnitions mentioned Section 22 In inductive deﬁnition deﬁnes concept enumerating positive cases Given enumeration closure mechanism underlying inductive deﬁnitions yields negative cases Recall Reiters situation calculus successor state axioms particular formulas γ F x s obtained compiling set effect rules form xas δi γ xas νj tional implications F x s F x s F x doa s F x s F x doa s In IDlogic unique rule deﬁning CF replaced set deﬁni xas CF x s δi F x s Likewise predicate CF deﬁned directly set effect rules form xas CF x s νj F x s Note Reiters situation calculus compilation effect rules successor state axioms crucial obtain correct axiomatization action domain While effect axiom correct independently weak axiomatize action domain unintended models The compilation successor state axioms modiﬁes meaning theory eliminates unintended models The transformation turns incorrect sense weak theory correct theory provided set effect axioms correct complete In inductive situation calculus situation different Indeed substituting deﬁnitional effect rules deﬁning CF unique rule cid30 xas CF x s cid31 δi F x s kcid20 i1 equivalence preserving likewise CF Compilation necessary anymore obtain correct represen tation It phenomenon mind introduction claimed Reiterstyle situation calculus contains hidden forms deﬁnitions 42 Indirect effects The ramiﬁcation problem arises wants capture indirect effects actions logicbased formalism It shown 19 state constraints generally inadequate deriving indirect effects actions notion causation needed Unlike material implication causal implications contrapositive makes similar rules inductive deﬁnitions This correspondence inductive deﬁnition rules causal rules foundation solution ramiﬁcation problem The semantic correspondence causality rules rules inductive deﬁnition independently pointed 3637 9 The resulting deﬁnition Δsc deﬁnition wellfounded induction general iterated inductive deﬁnition 350 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 Let CFi CFi represent initiating terminating causes Fi respectively We extend use causality predicates specify indirect effects actions For example according causal rule asCF2a s CF1a s action causes termination F1 action indirectly causes initiation F2 We relax conditions Δi effect number rules following form appear xas CFi xi s Ψ Fi xas CFi xi s Ψ xi s xi s Fi 23 Ψ Ψ formulas free variables xi s free occurrences s symbols sort Act Sit In formula ﬂuent atom form Fj tj s causality atom form CFk tk s Note direct effect case causality predicates excluded bodies rules Δi effect The basic action theory 18 allow ramiﬁcation rules form 23 Δsc encodes solution ramiﬁcation problem inductive situation calculus Δn effect collection direct indirect effect rules ﬂuents Consider Let deﬁne Δeffect Δ1 following partition Δsc ﬂuent Δn Δ1 ﬂuent Δeffect effect 24 Proposition 10 Partition 24 reduction partition Δsc initial structure A Proof Let A initial structure domain A We construct reduction Δsc At τisc way This produces following tuples A rulebyrule A s s CFi A u s Fi u CFi Fi u s Fi u Fj u s CFi CFj v s u s CFi v s u s Fi u A s arbitrary tuples objects u v arbitrary elements action sort s situation sort v s depends ﬂuent atom s causality j Notice causality domain atom CFj atom s This reduction rules form 23 Since superset reduction relation reduction relation reﬂexive transitive closure reduction relation Moreover follows fact cid22SitA cid24Acid23 prewellfounded set Proposition 5 A Q b P prewellfounded order At A P Q b P Q deﬁned subdeﬁnition Therefore partition 24 reduction partition Δsc cid3 A It easy atoms P Q b At A As corollary proposition obtain following property Proposition 11 A basic action theory 18 indirect effects equivalent Dif DunaAct Dinit cid28 cid29 ncid16 i1 Δi ﬂuent Δeffect Df DunaAct DS0 cid29 compΔi ﬂuent Δeffect cid28 ncid16 i1 25 26 Proof The theory 25 obtained basic action theory splitting Δsc Since partition 24 reduction partition Dif follows Corollary 1 equivalence preserving The proof equivalence 26 similar proof Theorem 5 The main step Δi ﬂuent equivalent initial ﬂuent compΔi M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 351 structures This follows fact Δi wellfounded order constructed proof Proposition 7 cid3 ﬂuent deﬁnition wellfounded induction strict Proposition 12 If Δeffect total subtheory Dif DunaAct Dinit basic action theory 18 indirect effects satisﬁes Initial State Expansion property Proof Let I extension τinitmodel Dinit sort Act satisﬁes DunaAct let A unique iscextension satisfying Dif Since Δeffect total A partition 24 total reduction partition Δsc A τ o Theorem 2 Δsc total A unique model extending A cid3 In general simple uniform way basic action theory ramiﬁcation rules translated classical logic However corollary provides basis proving translation results depending properties Δeffect The theorem considers case Δeffect positive inductive deﬁnition Theorem 6 If Δeffect positive deﬁnition basic action theory 18 satisﬁes Initial State Expansion property equivalent theory Df DunaAct DS0 theory Df DunaAct DS0 cid29 ﬂuent PIDΔeffect compΔi cid28 ncid16 i1 cid29 ﬂuent CIRCΔeffect compΔi cid28 ncid16 i1 421 Example N Gear wheels Let simple idealized mechanical consisting number gear wheels w1 wn pair mechanically connected For wheels consider states turning stopped For wheels consider actions startwi stopwi The ﬁrst action gives impulse wheel propagates connected gear wheels second action brakes wheel connected wheels We assume wheel turns continues turn friction behaves perpetuum mobile stop action We faced ramiﬁcation problemthe problem propagation effects connected gear wheels The goal develop modular temporal theory describing effects basic actions propagation effects As correctness criterion able prove state constraint situations gear wheel w turning reachable wheels connected w transitive closure connection graph turning We represent example Reiters basic situation calculus 34 To precompute wheel set reachable wheels connection graph sufﬁces express action starting respectively stopping wheel w immediate effect initiate respectively terminate turning state wheel w wheel reachable w This representation important drawbacks First notice precompilation impossible physical connection relation gear wheels dynamic relation gear wheels connected disconnected Such example worked Section 431 Second transitive closure physical connections gear wheels example global property emerges interaction local properties physical connections gear wheels If explicitly represent global properties small change local property adding new connection deleting existing connection gear wheels strong impact global properties theory disconnecting pair gear wheels split large interconnected set connected wheels affect representation effect actions wheels set In modular representation local properties components represented explicitly global properties derivable generic theory explicitly depend actual conﬁguration This aspect elaboration tolerance 24 352 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 To obtain modular representation gear wheel example need able express reachability speciﬁc wheel arbitrary graph It wellknown concept expressed ﬁrstorder logic Below present formalization iterated inductive deﬁnition In gear wheel example domaindependent sort denoted Gear_wheel Action symbols start stop argument sort Gear_wheel The unique ﬂuent Turns arguments sort Gear_wheel Sit Basic components inductive situation calculus Gear wheel example foundational axioms Dif situations unique axioms DunaAct actions The main axiom theory simultaneous iterated inductive deﬁnition Δsc ﬂuent Turns causality predicates CTurns CTurns The effect propagation process caused start stop actions situation modeled monotone induction To deﬁne ﬂuent Turns states monotone induction iterated wellfounded structure situations The deﬁnition Δsc split subdeﬁnitions The ﬁrst deﬁnition consists standard rules ﬂuent Turns ΔTurns ﬂuent g Turnsg S0 ITurnsg gas Turnsg doa s CTurnsg s gas Turnsg doa s Turnsg s CTurnsg s The second deﬁnition Δeffect describes causation predicates CTurns CTurns The following set rules Δeffect specify direct indirect effects actions Δeffect gas CTurnsg s startg gas CTurnsg s stopg gas CTurnsg s g gas CTurnsg s g cid15Connectedg g cid15 Connectedg g cid15 CTurnsg cid15 s cid15 cid15 CTurnsg s These rules contain positive recursion Deﬁne Δsc ΔTurns ﬂuent CTurns CTurns simultaneous nonmonotone induction terms open predicates ITurns Connected Δeffect This deﬁnition deﬁnes predicates Turns Notice statement problem specify gearwheels exist connected initially turning Consequently theory Dinit consists axioms express general laws connected gearwheels The ﬁrst axiom expresses relation symbol Connected describes physical connections gear wheels symmetric relation cid15 gg Connectedg g cid15 Connectedg cid15 g The second axiom Dinit related state constraint interconnected gear wheels state turning rest The ramiﬁcation rules guarantee state constraint preserved holds initially Therefore add constraint initial state This described axiom cid15 gg Connectedg g cid15 ITurnsg ITurnsg cid15 The axiomatization domain consists Dwheels Dif DunaAct Dinit Δsc 27 Below analyze theory Dwheels Since Δeffect positive deﬁnition basic action theory Dwheels satisﬁes conditions Theorem 6 Consequently following proposition Proposition 13 The theory Dwheels satisﬁes Initial State Expansion property equivalent Fluent PIDΔEffect Df DunaAct Dinit compΔTurns Proposition 14 The theory Dwheels logically entails state constraint gg cid15s Connectedg g cid15 Turnsg s Turnsg cid15 s Proof The proof modeltheoretic Let I model Dwheels We use induction length situations It follows axiom 27 initial state cid15 gg Connectedg g cid15 Turnsg S0 Turnsg cid15 S0 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 353 Assume property satisﬁed situation s We prove holds successor situation doI s arbitrary action Select pair g gcid15 ConnectedI By deﬁnition Δeffect CTurngcid15 s true CTurng s Because graph ConnectedI symmetric follows CTurng s CTurngcid15 s truth value The holds CTurn The induction hypothesis states situation s connected wheels state By observation action effects connected wheels Consequently induction hypothesis preserved situation doI s cid3 422 Nonmonotone ramiﬁcation rules In 9 argued model certain forms ramiﬁcations nonmonotone ramiﬁcation rules useful We illustrate variant suitcase example 19 Example 1 suitcase Several versions example 91938 demonstrate domain constraints strong solve ramiﬁcation problem explicit notion causality necessary Suppose suitcase opened spring mechanism moment locks open To model example sort lock Fluent O represents fact suitcase open ﬂuent OpenL argument sort lock means lock open Action symbols open close argument sort lock represent actions opening closing respective lock Two constants l1 l2 sort lock represent locks Let Δeffect consist following rules las COpenLl s openl las COpenLl s closel CO s l COpenLl s OpenLl s COpenLl s 28 For ﬂuent F set OpenL O standard ﬂuent deﬁnition ΔF ﬂuent Finally Dinit DDCAlock Dunalock cid6 lIOpenLl IO cid7 Interestingly deﬁnition Δeffect recursive total structure It translated classical logic taking completion Consequently entire deﬁnition Δsc translated classical logic theory compΔsc The example illustrates points First ramiﬁcations rely absence certain causes In cases use nonmonotone causation rules rule deﬁning CO appropriate Second ramiﬁcation rules useful modeling simultaneous effects concurrency Such simultaneous effects occur situation calculus occur extensions concurrent actions additional ac tions andor ramiﬁcations affect locks simultaneously For sake illustrating consider following extension Example 2 Consider extension Example 1 suitcase central button switches state locks suitcase The effects pushing button expressed additional effect rules las COpenLl pushbutton s OpenLl s las COpenLl pushbutton s OpenLl s Note executing action pushbutton state lock open closed produces simul taneous effects opening lock closing lock open suitcase In fact ramiﬁcation rule describes intended behaviour suitcase combination effects locks As point illustrate alternative style representing complex forms ramiﬁcations 354 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 Example 3 In suitcase example suitcase caused open instant locks open Let replace rule 28 following direct representation CO s lOpenLl doa s 29 According rule locks open successor state doa s causes suitcase open situation s Adding axiom changes structure deﬁnition So far causality predicates state s deﬁned terms ﬂuents causality predicates state s Here CO state s deﬁned terms OpenL future state doa s This longer induction wellfounded set situations However resulting deﬁnition deﬁnition wellfounded induction initial structure A underlying order entirely follow order situations Indeed reduction relation constructed standard way consists following tuples arbitrary lock l situation s action A s COpenLl s OpenLl A OpenLl s OpenLl CO s Odo s Os Odo OpenLl A A s CO s Odo A s CO s A s s COpenLl s OpenLl A s It easy verify transitive closure strict wellfounded order Hence Δsc deﬁnition founded induction initial structure A It follows deﬁnition translated FO completion Initial State Expansion property satisﬁed 423 Limits approach As pointed 9 subtle modeling issue involved use nonmonotone ramiﬁcation rules In inductive situation calculus ramiﬁcation rules model effect propagation process In physical reality effect propagations process instantaneous small lapse time The intermediate states process modeled explicitly situation calculus In intermediate states certain causes occurred causes occur Therefore possible condition effect rule contains negative cause literal CF t s satisﬁed intermediate state cause F t produced ﬁnal state In case according inductive situation calculus effect described rule occur Stated differently propagation process conditions effect rule satisﬁed intermediate state conditions absence certain cause effect inferred possibility cause produced later propagation process Example 4 Reconsider effect rule opening suitcase Example 1 Example 2 COpenLl s OpenLl s COpenLl s CO s l Suppose push central button switch states locks The mechanism tiny bit faster switch lock l1 lock l2 If ﬁrst closed second open brief intermediate state locks open conditions effect rule satisﬁed This state fraction second second lock closed For oldfashioned suitcase mechanical spring mechanism time open suitcase So suitcase open The rule correctly models situation Now consider hightech suitcase microprocessor monitors state locks open sends signal electric motor open suitcase Compared oldfashioned suitcase effect propagations However difference level reaction time opening effect The microprocessor reacts microseconds detect state change ﬁrst lock second So case suitcase opened The ramiﬁcation rules inductive situation calculus model hightech suitcase M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 355 43 Deﬁned ﬂuents In section propose second extension inductive situation calculus allowing deﬁned ﬂuents Such ﬂuents governed effect laws law inertia deﬁnition terms existing ﬂuents Example 5 In standard ontology blocks world problem basic actions pickb putb l ﬂuents Onb l s block b location l table block Clearb s block b Claspedb s robot clasps block b Frees robot hand free We represent effects actions ﬂuents It natural represent effects On Clasped deﬁne ﬂuent Clear terms On ﬂuent Free terms Clasped The deﬁnitions cid6 cid7 bs Clearb s b b s cid7 cid6 s Frees b Claspedb s cid15 Onb cid15 We deﬁne ﬂuent Aboveb bcid15 s expressing state s block b bcid15 It deﬁned transitive closure ﬂuent Onb bcid15 s cid3 bb1s Aboveb b1 s Onb b1 s bb1s Aboveb b1 s b2Aboveb b2 s Aboveb2 b1 s cid4 In sense deﬁning ﬂuents way representing ramiﬁcations Indeed view fact Frees initiated terminated ramiﬁed effect terminating initiating Claspedb s Yet deﬁnite difference sort ramiﬁcation considered Section 42 In section causality rules model propagation effects Here deﬁned ﬂuent new denoting potentially complex conﬁguration primitive ﬂuents Below distinguish deﬁned ﬂuents primitive ﬂuents Primitive ﬂuents deﬁned standard way To represent deﬁned ﬂuents extend inductive situation calculus allowing deﬁnition Δsc Sec tion 42 extended set rules Δdef form xs Fd x s Ψ x s 30 Fd deﬁned ﬂuent Ψ formula s free occurrences contains causality predicates ﬂuent atom form Fiti s Fi deﬁned primitive ﬂuent We introduce initial state causation predicates deﬁned ﬂuents τisc Consider following partition Δsc Δ1 ﬂuent Δeffect Δdef ﬂuent Δn ﬂuent standard deﬁnition primitive ﬂuent Fi Δi 31 Proposition 15 Partition 31 reduction partition Δsc initial structure A Proof Let A initial structure domain A We construct reduction relation At τisc rulebyrule way It consists tuples A normal u s Fi u CFi Fi u s Fi u Fj u s CFi A v s A s s CFi u s Fi u A s 356 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 u s CFi CFj Fi u s Fk v s v s arbitrary arbitrary j j cid15 Fj Fj cid15 primitive ﬂuents arbitrary k Fk deﬁned ﬂuent arbitrary tuples objects u v arbitrary elements action sort s situation sort Notice according line deﬁned ﬂuent domain atom Fk v s depends ﬂuent atom Fi u s reduction relation rule Δdef From proof similar Proposition 10 Again easy reduction A It easy A Q b P P Q b P Q deﬁned relation Its reﬂexive transitive closure reduction relation prewellfounded order At τisc atoms P Q b At τisc subdeﬁnition Therefore partition 31 reduction partition Δsc A cid3 As corollary proposition decomposition theorems Theorem 1 Theorem 2 obtain following property Corollary 5 If Δeffect Δdef total subtheory Dif DunaAct Dinit basic action theory 18 satisﬁes Initial State Expansion property equivalent theory Df DunaAct DS0 Δeffect Δdef cid19 n i1 Δi ﬂuent This modularity result prove correctness translations inductive situation calculus deﬁned ﬂuents classical logic 431 Example Gear wheels friction In example consider version gear wheel problem connections gear wheels dynamically changed gears car friction taken account We assume gear wheels ﬁxed connection engine This engine started stopped A gear wheel rest connected directly indirectly running engine There actions start stop engine gear wheel connect disconnect gear wheels We use following vocabulary sort Gear_wheel Turng s gear wheel g turning Empg s gear wheel g empowered DirEmpg s gear wheel g attached operating motor directly empowered Cong gcid15 s gear wheels g gcid15 directly connected startg stopg actions starting halting engine attached g connectg gcid15 disconnectg gcid15 actions connecting disconnecting pair gear wheels Deﬁned ﬂuents axiomatized following set Δdef rules We represent gear wheel g turning iff empowered It empowered attached running engine DirEmpg s true path gear wheel connections directly empowered gear wheel Δdef ΔDirEmp ﬂuent gs Turng s Empg s gs Empg s DirEmpg s gs Empg s g1Cong g1 s Empg1 s g DirEmpg S0 IDiREmpg gas DirEmpg doa s CDirEmpg s gas DirEmpg doa s DirEmpg s CDirEmpg s ΔCon ﬂuent gg gg gg cid15 cid15 Cong g cid15as Cong g cid15as Cong g cid15 cid15 S0 ICong g cid15 doa s CCong g cid15 doa s Cong g cid15 s s CCong g cid15 s M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 357 Δeffect gas CDirEmpg s startg gas CDirEmpg s stopg cid15 gg gg gg gg cid15as CCong g cid15as CCong cid15as CCong g cid15as CCong g s CCong g s connectg g s s disconnectg g s g s CCong g cid15 cid15 cid15 cid15 cid15 cid15 cid15 In deﬁnition ﬂuents Turn Emp deﬁned The ﬂuent Emp deﬁned inductively The theory Dinit consists single axiom expressing initial connection relation gear wheels symmetric cid15 gg ICong g cid15 ICong cid15 g Let DFriction Dif DunaAct Dinit Δsc Δsc consists Δﬂuent Δeffect Δdef deﬁned The conditions Corollary 5 apply Because Δﬂuent deﬁnition wellfounded induction Δeffect Δdef positive inductive deﬁnitions theory translated classical logic Proposition 16 The basic action theory deﬁnitions DFriction satisﬁes Initial State Expansion property equivalent SO theory Df DunaAct Dinit 44 More extensions cid7 cid6 compΔﬂuent PIDΔeffect PIDΔdef Many extensions situation calculus proposed example natural actions concurrency continuous time 34 Most extensions integrated seamlessly inductive situation calculus One extension brieﬂy discuss nondeterministic actions Obviously case successor states deﬁned terms predecessor states actions determine ﬁrst unique way A simple technique model nondeterminism introducing new open predicates For example consider nondeterministic effect rolling dice causes ﬂuent Dice value 1 6 This represented inductive situation calculus introducing new binary open predicate Thrown ﬁrst argument sort int second sort sit The effect rolling dice ﬂuent Dice sort int represented effect rule ns CDicen throw s Thrownn s axioms stating situations s unique number n 1 6 Thrownn s holds This technique generalized general methodology represent nondeterministic actions 5 Related work The prime goal paper clarify inductive deﬁnitions role common sense knowledge represen tation The application domain temporal reasoning situation calculus particular In respect paper preceded earlier work authors The semantic correspondence inductive deﬁnitions causality pointed independently 3637 9 In cases motivation inductive deﬁnitions similarity process effect propagation dynamic inductive deﬁnitions Inductive ﬁnition formalizations situation calculus ﬁrst presented Ternovska 3637 bit later Denecker 5 The backgrounds studies different case classical logic approach developed Cognitive Robotics Group University Toronto case logic programming formalizations temporal reasoning Ternovska 3637 observed construction model Reiterstyle situation calculus induction wellfounded order situations proposed model situation calculus logic inductive deﬁnitions Her approach Aczelstyle abstract monotone induction deﬁnitions 1 To handle inherent nonmonotonicity situation calculus monotone deﬁnitions constructed simultaneous nonmonotone induction She extended solution acyclic ramiﬁcation rules demonstrated induc tive deﬁnition set situations implies general induction principle situations 33 In 9 Denecker et al 358 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 focussed ramiﬁcation problem general pointed similarity inductive deﬁnitions They studied ramiﬁcation problem cyclic effect rules negative conditions proposed use wellfounded se mantics model complex ramiﬁcations The inductive situation calculus integrates work context situation calculus For overview different approaches temporal reasoning andor ramiﬁcation problem refer 9152634353839 Here limit discussion approaches explicit representation causal laws situation calculus nonmonotonic logic It observed process effect propagation constructive process basic actions cause changes effects propagate dynamic changes appear external cause spontaneous generation effects deus ex machina effects The constructive intuition inductive deﬁnitions This explains inductive deﬁnitions correctly model recursive effect propagations In respect inductive situation calculus general wellknown classical logic formalizations situation calculus ramiﬁcations Lins approach 19 McIlraiths solitary stratiﬁed theories 26 Both approaches impose constraints ramiﬁcation rules preclude recursive ramiﬁcations A strong constraint solitary stratiﬁed theories ﬂuent symbol allowed appear effect precondition action On hand McIlraith addresses qualiﬁcation problem dont While approaches based classical logic causality investigated nonmonotonic reasoning perspective Perhaps best known nonmonotonic logic takes causality basic principle logic nonmonotonic causal theories 1522 This language extends propositional logic causal implications ϕ ψ Interestingly approach takes opposite point view respect spontaneous generation effects inductive situation calculus Spontaneous generation seen ﬂaw feature model exogeneous ﬂuents ﬂuents change state spontaneously This modeled pairs causal rules P P P P As consequence cyclic effect rules gear wheel example correctly modeled recursive causal rules formalism theory accept unintended models connected gear wheels cause turn external cause While weakness formalism clear possibility representing exogeneous events ﬂuents useful feature The challenge integrate exogeneous ﬂuents correct treatment cyclic effect rules 6 Conclusion This paper explains inductive nature situation calculus We shown thatunsuspected creatorsthe original Reiterstyle situation calculus makes hidden use inductive deﬁnitions We ﬁnitions explicit monotone nonmonotone induction We formalized deﬁnitions logic inductive deﬁnitions IDlogic obtaining variant situation calculus inductive situation calculus We presented translation classical logic inductive situation calculus equivalent standard formalization case ramiﬁcations Our IDlogic formalization offers number advantages compared classical logic First Reiterstyle situation calculus different forms induction formalized different ways By logic inductive deﬁni tions obtained uniform modular representation Second use inductive deﬁnitions allowed extend situation calculus cope complex temporal phenomena recursive ramiﬁcations inductively deﬁned ﬂuents We proved inductive situation calculus Reiters situation calculus satisﬁes Initial State Expansion property Our work contributes levels First presents situation calculus application principle iterated induction context commonsense reasoning giving insight complex little known form nonmonotone induction Second analysis showed modularity totality transformation theorems powerful tools analyzing transforming large deﬁnitions allowing break modularity theorem translating piecewise classical logic Finally experiment demonstrates use different forms inductive deﬁnitions limited mathe matics applicable wider area knowledge representation commonsense reasoning In particular M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 359 inductive deﬁnitions wellsuited reasoning causality Perhaps surprising Af ter mathematical induction construction complex mathematical objects In respect mathematical induction viewed application causal reasoning idealized abstract context mathematics complex realm commonsense reasoning References 1 P Aczel An introduction inductive deﬁnitions J Barwise Ed Handbook Mathematical Logic NorthHolland Publishing Company Amsterdam 1977 pp 739782 2 F Baader D Calvanese D McGuinness D Nardi P PatelSchneider Eds The Description Logic Handbook Theory Implementation Applications Cambridge University Press 2002 3 KL Clark Negation failure H Gallaire J Minker Eds Logic Databases Plenum Press 1978 pp 293322 4 M Denecker The wellfounded semantics principle inductive deﬁnition J Dix L Fariñas del Cerro U Furbach Eds Logics Artiﬁcial Intelligence Schloss Daghstull Lecture Notes Artiﬁcial Intelligence vol 1489 Springer 1998 pp 116 5 M Denecker Extending classical logic inductive deﬁnitions J Lloyd et al Eds First International Conference Computational Logic CL2000 London Lecture Notes Artiﬁcial Intelligence vol 1861 Springer 2000 pp 703717 6 M Denecker M Bruynooghe V Marek Logic programming revisited logic programs inductive deﬁnitions ACM Transactions Com putational Logic 2 4 2001 623654 7 M Denecker E Ternovska Proceedings Ninth International Conference Principles Knowledge Representation Reasoning Delta Whistler Resort Canada 2004 pp 545553 httpwwwcskuleuvenacbecgibin dtaipubl_infoplid41085 Inductive situation calculus 8 M Denecker E Ternovska A logic nonmonotone inductive deﬁnitions modularity properties V Lifschitz I Niemelä Eds 7th International Conference Logic Programming Nonmonotonic Reasoning 2004 9 M Denecker D Theseider Duprè K Van Belleghem An inductive deﬁnition approach ramiﬁcations Linköping Electronic Articles Computer Information Science 3 7 1998 143 httpwwwepliuseeacis1998007 10 M Denecker E Ternovska A logic nonmonotone inductive deﬁnitions ACM Transactions Computational Logic TOCL 2007 11 F Fages Consistency Clark completion existence stable models Journal Methods Logic Computer Science 1 1994 5160 12 M Fitting Fixpoint semantics logic programming survey Theoretical Computer Science 278 12 2002 2551 13 M Gelfond V Lifschitz Classical negation logic programs disjunctive databases New Generation Computing 9 1991 365385 14 M Gelfond V Lifschitz Describing action change logic programs Ninth Joint International Conference Symposium Logic Programming JICSLP92 MIT Press 1992 15 E Giunchiglia J Lee V Lifschitz N McCain H Turner Nonmonotonic causal theories Artiﬁcial Intelligence AIJ 153 2004 49104 16 Y Gurevich S Shelah Fixedpoint extensions ﬁrstorder logic Annals Pure Applied Logic 32 1986 265280 17 S Hanks D McDermott Nonmonotonic logic temporal projection Artiﬁcial Intelligence 33 1987 379412 18 HJ Levesque F Pirri R Reiter Foundations situation calculus Electronic Transactions Artiﬁcial Intelligence 2 1998 159178 19 F Lin Embracing causality specifying indirect effects actions Proc IJCAI 95 1995 pp 19851991 20 VW Marek M Truszczynski Stable models alternative logic programming paradigm KR Apt V Marek M Truszczynski DS Warren Eds The Logic Programming Paradigm A 25 Years Perspective Springer 1999 pp 375398 21 M Mariën R Mitra M Denecker M Bruynooghe Satisﬁability checking PCID G Sutcliffe A Voronkov Eds Proc LPAR05 Lecture Notes Artiﬁcial Intelligence vol 3835 Springer 2005 pp 565579 22 N McCain H Turner Causal theories action change Proc AAAI 97 2007 pp 460465 23 J McCarthy Circumscriptiona form nonmonotonic reasoning Artiﬁcial Intelligence 13 1980 2739 24 J McCarthy Elaboration tolerance COMMON SENSE 98 Symposium Logical Formalizations Commonsense Reasoning January 1998 25 J McCarthy PJ Hayes Some philosophical problems standpoint artiﬁcial intelligence B Meltzer D Michie Eds Machine Intelligence 4 Edinburgh University Press 1969 pp 463502 26 S McIlraith An axiomatic solution ramiﬁcation problem Artiﬁcial Intelligence 116 12 2000 87121 27 D Mitchell E Ternovska A framework representing solving NP search problems Proceedings Twentieth National Confer ence Artiﬁcial Intelligence AAAI05 2005 pp 430435 28 YN Moschovakis Elementary Induction Abstract Structures NorthHolland Publishing Company Amsterdam New York 1974 29 I Niemelä Logic programs stable model semantics constraint programming paradigm Annals Mathematics Artiﬁcial Intel ligence 25 34 1999 241273 30 N Pelov E Ternovska Reducing IDlogic propositional satisﬁability Proceedings Twenty First International Conference Logic Programming ICLP 2005 2005 31 F Pirri R Reiter Some contributions metatheory situation calculus ACM 46 3 1999 325361 32 R Reiter A logic default reasoning Artiﬁcial Intelligence 13 1980 81132 33 R Reiter The frame problem situation calculus simple solution completeness result goal regression V Lifschitz Ed Artiﬁcial Intelligence Mathematical Theory Computation Papers Honor John McCarthy Academic Press San Diego CA 1991 pp 359380 34 R Reiter Knowledge Action Logical Foundations Describing Implementing Dynamical Systems MIT Press 2001 35 M Shanahan Solving Frame Problem MIT Press 1997 360 M Denecker E Ternovska Artiﬁcial Intelligence 171 2007 332360 36 E Ternovskaia Causality inductive deﬁnitions Working Notes Prospects Commonsense Theory Causation AAAI Spring Symposium Series March 2328 1998 37 E Ternovskaia Inductive deﬁnability situation calculus Transaction Change Logic Databases Lecture Notes Computer Science vol 1472 Springer 1998 38 M Thielscher Ramiﬁcation causality Journal Artiﬁcial Intelligence 89 1997 317364 39 M Thielscher Introduction ﬂuent calculus Electronic Transactions Artiﬁcial Intelligence 34 1998 179192 httpwwwepliu seejetai1998006 40 A Van Gelder An alternating ﬁxpoint logic programs negation Journal Computer System Sciences 47 1993 185221 41 A Van Gelder KA Ross JS Schlipf The wellfounded semantics general logic programs Journal ACM 38 3 1991 620650 42 J Vennekens D Gilis M Denecker Splitting operator Algebraic modularity results logics ﬁxpoint semantics ACM Transactions Computational Logic TOCL 2006 submitted publication