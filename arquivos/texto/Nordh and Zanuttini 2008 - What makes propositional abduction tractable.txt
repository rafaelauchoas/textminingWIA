Artiﬁcial Intelligence 172 2008 12451284 wwwelseviercomlocateartint What makes propositional abduction tractable Gustav Nordh a1 Bruno Zanuttini b LIX École Polytechnique Route Saclay F91 128 Palaiseau France b GREYC UMR CNRS 6072 Université Caen Bd du Maréchal Juin F14 032 Caen Cedex France Received 10 April 2007 received revised form 28 January 2008 accepted 5 February 2008 Available online 12 February 2008 Abstract Abduction fundamental form nonmonotonic reasoning aims ﬁnding explanations observed manifestations This process underlies applications car conﬁguration medical diagnosis We study computational complexity deciding explanation exists case application domain described propositional knowledge base Building previous results classify complexity local restrictions knowledge base restrictions hypotheses manifestations In comparison previous studies complexity abduction able detailed picture complexity basic problem deciding existence explanation It turns depending restrictions problem framework polynomialtime solvable NPcomplete coNPcomplete cid2P Based results posteriori justiﬁcation makes propositional abduction hard classes knowledge bases allow efﬁcient satisﬁability testing deduction This justiﬁcation simple intuitive reveals nontrivial class abduction problems tractable Indeed tractability essentially requires language knowledge bases unable express causal links conﬂicts hypotheses This generalizes similar observation Bylander et al setcovering abduction 2008 Elsevier BV All rights reserved 2 complete Keywords Abduction Propositional logic Computational complexity 1 Introduction Abduction fundamental reasoning process consists explaining observations plausible causes taken given set hypotheses For instance abduction problem try derive diseases ob served symptoms according known rules relating This process extensively studied Peirce 6 importance Artiﬁcial Intelligence ﬁrst emphasized Morgan 38 Pople 41 From application point view abduction demonstrated importance It applied particular explanationbased diagnosis medical diagnosis 7 text interpretation 29 planning 28 It fundamental process underlying ATMSs 13 Corresponding author Email addresses nordhlixpolytechniquefr G Nordh zanuttiinfounicaenfr B Zanuttini 1 Partially supported SwedishFrench Foundation National Graduate School Computer Science CUGS Sweden 00043702 matter 2008 Elsevier BV All rights reserved doi101016jartint200802001 1246 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 The formalization resolution abduction problems studied numerous formalisms setcovering 7 default logic 22 logic programming 2136 We interested resolution classical propositional logic We adopt complexitytheoretic point view More precisely interested complexity deciding abduction problem solution underlying knowledge base propositional Thus study follows Selman Levesques 48 Eiter Gottlobs 20 seminal papers We build classiﬁcations previously obtained framework 1240 Even simple setting propositional logic deciding abduction problem solution general cid2P 2 complete Consequently like hard computational problems approaches studied solving efﬁciently Exhibiting tractable classes obtained restrictions knowledge base 1216202451 heuristic approaches particular computation prime implicates 14153749 reducing problem QBF generic QBF solvers 19 compilation 835 approximation 3150 In paper adopt approach consisting trying ﬁnd tractable restrictions knowledge base Our contribution twofold First identify complexity abduction varying restrictions representations manifestations hypotheses constraint language clausal equational language restricting propositional knowledge base reasonable assumptions representation constraints Concerning manifestations study restrictions expressed positive negative unrestricted literal clause term CNF Concerning hypotheses study restrictions expressed set literals positive neg ative closed complement unrestricted To aim use wellknown Schaefers framework 46 Posts lattice 42 Precisely proceed follows We ﬁrst prove relatively small number tractability hardness results particular constraint languages Using Posts classiﬁcation results derive complexity abduction constraint lan guage In similar manner time obtain complexity abduction clausal equational language We exhibit new polynomial new hard restrictions We discover abduction P NPcomplete coNPcomplete cid2P 2 complete depending restrictions Such result taken granted Ladners result stating P cid3 NP exist problems NP P NP complete 33 Moreover fact restrictions yield NPcomplete coNPcomplete problems surprising ﬁrst sight It reveals particular abduction rich problem terms completeness results different complexity classes Thus results starting points establishing complexity results problems particular nonmonotonic reasoning From application point view tables complexity allow designers knowledgebased agents expert systems choose appropriate knowledge representation language according tradeoff expressiveness required constraints resolution abduction problems Moreover representation language hard abduction precise complexity corresponding problem allows choose heuristic approaches solving For instance appropriate reduction NPcomplete problem solved satisﬁability solver cid2P 2 complete generic QBF solver specialized QBF2solver Our second contribution identify simple set minimal conditions yielding NPcompleteness languages allow efﬁcient deduction good candidates knowledge representation For instance terms explained discover abduction NPhard exactly language knowledge bases express causal links hypotheses individual manifestations forbid combinations hypotheses This generalizes similar observations Bylander et al 7 setcovering abduction From condition follows tractability occur restricted cases causal dependency causes assumed For instance medical diagnosis means diseases rule task tractable We argue conditions intuitions results Schaefers framework constraint languages revisit previously known results manner In spirit observations allow adopt uniﬁed point view results exhibited different restrictions literature G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1247 The use Posts lattice Schaefers framework studying complexity reasoning problems considered overlimitating For instance encompass class Horn formulas Horn clauses arbitrarily long In study adopt powerful tools coming complexitytheory overcome limitations Indeed use results inﬁnite constraint languages ﬁnite ones formulate terms classes CNF formulas These extensions directly motivated AIapplications common model knowledge base inﬁnite constraint language represented terms classes CNF formulas To results context brieﬂy discuss results literature complexity abduction relevant present study Our starting point Selman Levesques 48 Eiter Gottlobs 20 classical results Selman Levesque 48 proved deciding abduction problem Horn knowl edge base explanation NPcomplete hypotheses given set positive literals manifestation single positive literal Similarly Eiter Gottlob 20 proved knowledge base given general propositional formula problem cid2P 2 complete Moreover note knowledge base given deﬁnite Horn formula hypotheses positive literals manifestations given positive term problem P From results clear complexity abduction problem depends heavily representation language knowledge base This led researchers investigate complexity abduction strictions representation language knowledge base This line research culminated recent complexity classiﬁcations given 1240 In papers complexity deciding exists explanation classiﬁed general class restrictions representation language knowledge base clude restrictions studied literature Although restrictions representation language knowledge base studied papers identical papers differ representation hy potheses manifestations In 12 hypotheses given set literals closed complement manifestation given single literal 40 hypotheses allowed set literals manifestations given term When comparing results 12 40 clear small variations representation hypotheses manifestations strong impact complexity abduction problem Hence derstand complexity abduction understand restrictions representation hypotheses manifestations inﬂuence complexity This partially motivation present study sys tematically analyse complexity abduction simultaneous restrictions representation hypotheses manifestations knowledge base The paper organized follows We ﬁrst preliminaries propositional logic Schaefers framework complexity classes Section 2 deﬁnition abduction problems interested Section 3 We survey previous work overview results Section 4 The technical content paper follows generic reductions abduction problems Section 5 recall wellknown tools studying abduction Section 6 complexity results Sections 7 12 distinguishing families restrictions knowledge base These results summarized Section 13 restrictions problems discussed Section 14 Finally discuss makes abduction hard Section 15 conclude Section 16 2 Preliminaries In paper consider restrictions knowledge bases seen propositional formulas conjunctions constraints taken ﬁxed language We introduce corresponding basic deﬁnitions notations deﬁne restrictions consider brieﬂy recall complexity notions 21 Propositional logic Boolean variables usually denoted x possibly subscripts superscripts A literal variable positive literal negation negative literal Literals usually denoted cid3 The opposite literal cid3 written cid3 cid3 x cid3 x viceversa 1248 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 A clause ﬁnite disjunction literals written C cid31 cid32 cid3n A formula Conjunctive Normal Form CNF short ﬁnite conjunction clauses written KB C1 C2 Ck A term ﬁnite conjunction literals written T cid31 cid32 cid3n Variables literals clauses terms considered special cases formulas A linear equation equation form x1 x2 xn 0 1 denotes addition modulo 2 An afﬁne formula ﬁnite conjunction linear equations Observe afﬁne formulas CNFs If ϕ formula Varsϕ denotes set variables occur ϕ Given set variables V LitsV denotes set literals formed variables V LitsV V x x V If L set literals L denotes conjunction NL denotes set opposite literals cid3 cid3 L A clause term CNF said positive resp negative literals occur positive resp negative clause term said unit contains exactly literal The clause written Observe Vars false Similarly 0 1 denotes false linear equation variable cid2 An assignment μ set variables V mapping V 0 1 When order variables clear write assignments words μ 011 μx1 0 μx2 μx3 1 If KB formula assignment μ VarsKB superset VarsKB said satisfy KB model KB makes KB evaluate 1 usual rules connectives We write μ cid12 KB A formula KB said satisﬁable model It said entail formula KBcid13 assignment VarsKB VarsKBcid13 satisﬁes KB satisﬁes KBcid13 written KB cid12 KBcid13 If KBcid13 cid12 KB KB KBcid13 said logically equivalent written KB KBcid13 Example 1 The formula KB x1 x2 x2 x3 x4 x1 x2 x3 x1 x2 CNF containing 4 clauses We VarsKB x1 x2 x3 x4 LitsVarsKB x1 x1 x4 x4 The assignment μ VarsKB deﬁned μx1 0 μx2 1 μx3 0 μx4 0 μ 0100 short model KB 0000 The formula KBcid13 x1 x2 1 x2 x3 0 afﬁne formula Its set models 011 100 seen KBcid13 cid12 KB KB cid3cid12 KBcid13 KB cid3 KBcid13 22 Classes clauses equations We ﬁrst impose restrictions knowledge bases abduction problems form classes clauses linear equations These classes reported Table 1 page 1251 second columns described The class clauses denoted CCNF A clause C said 1valid satisﬁed assigning 1 variables Equivalently clause 1valid contains positive literal The class 1valid clauses denoted C1v Dually C0v class 0valid clauses A clause Horn contains positive literal The class Horn clauses denoted CHorn A clause 1valid Horn called deﬁnite Horn contains exactly positive literal The class 1valid Horn clauses denoted C1vHorn Analogously clause C said dualHorn 0valid dualHorn contains exactly negative literal class dualHorn clauses 0valid dualHorn clauses denoted CdHorn C0vdHorn Moreover class 1valid dualHorn clauses denoted C1vdHorn A clause said bijunctive contains literals implicative contains zero clause literal form x1 x2 The classes bijunctive implicative clauses denoted Cbij Cimpl respectively A clause said IHSB implicative negative class IHSB clauses denoted CIHSB Similarly clause said IHSB implicative positive class IHSB clauses denoted CIHSB Moreover clause said width k contains k literals The classes IHSB IHSB clauses width k denoted CIHSBk CIHSBk respectively A clause said essentially negative negative unit positive The class Cneg contains essentially negative clauses equality relations x1 x2 Observe equality relations clauses slightly abuse language The reason allow equality relation makes class Cneg equivalent expressiveness relational clone particular stable respect complexity abduction Section 23 Nevertheless discuss case relation allowed paper Dually Cneg class Cpos contains essentially positive clauses equality relations G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1249 Recall linear equation equation form x1 xn 0 1 The class linear equations denoted Eaff Similarly case clauses linear equation 1valid resp 0valid satisﬁed assigning 1 resp 0 variables The classes 1valid 0valid linear equations denoted E1vaff E0vaff respectively A linear equation width 2 contains variables The class linear equations width 2 denoted Eaff 2 Finally class Cunit contains unit clauses equality relations remark Cneg applies The class C1vunit contains unit positive clauses equality relations class C0vunit contains unit negative clauses equality relations 23 Constraint languages Posts lattice In section introduce notions constraint languages relational clones We Posts classiﬁcation Boolean relational clones usually referred Posts lattice A detailed introduction Posts lattice survey articles 23 Constraints generalize notions clauses linear equations constraint languages generalize notion classes clauses equations The set ntuples elements 0 1 denoted 0 1n Such tuples denoted sequences words 0 1 1 011 Any subset 0 1n called nary relation 0 1 A ﬁnite constraint language 0 1 arbitrary ﬁnite set ﬁnitary relations 0 1 If cid5 constraint language constraint cid5 application nary relation R cid5 ntuple variables written Rx1 xn possibly repeated variables A formula cid5 cid5formula ﬁnite conjunction constraints cid5 written KB R1x11 x1n1 Rkxk1 xknk A constraint cid5 considered special case cid5formula Like propositional formulas write VarsKB set variables occurring KB If C Rx1 xn constraint assignment μ x1 xn superset x1 xn said satisfy C model C ntuple μx1 μx2 μxn R If KB cid5formula μ said satisfy KB satisﬁes constraints The notions satisﬁability entailment equivalence deﬁned like propositional formulas similarly entailment equivalence propositional formula cid5formula Example 2 continued The set R 0100 0110 0111 1000 1001 4ary relation Rcid13 01 10 Rcid13cid13 00 11 binary relations Thus cid5 R Rcid13 Rcid13cid13 constraint language Then Rx1 x2 x3 x4 Rcid13cid13x3 x4 cid5formula It seen formula entails KB Example 1 Now C Rx1 x2 x3 x3 cid5constraint variables satisﬁed exactly 010 011 100 The unary relations F 0 T 1 special role abduction problems binary relations R 00 11 Rcid3 01 10 Relations formulas linked following deﬁnition Deﬁnition 3 representation An nary relation R said represented formula ϕ Varsϕ x1 xn ϕ Rx1 xn Thus slightly abusing notation identify clause equation C variables x1 xk kary relation consisting set satisfying assignments In particular identify literal x resp x unary constraint Tx resp Fx KB cid5formula L set literals KB L considered cid5 T Fformula cid2 We relation Horn represented Horn CNF A constraint language cid5 said Horn relation cid5 Horn Thus slightly abusing notation write CHorn class Horn clauses inﬁnite constraint language containing relations represented Horn clauses We use shorthands classes clauses equations 1250 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Example 4 continued Relation R Example 2 represented formula KB Example 1 Relation Rcid13 01 10 represented formula x1 x2 x1 x2 bijunctive Observe represented formula x1 x2 1 afﬁne width 2 Central approach notion relational clone Intuitively relations relational clone cid15cid5cid16 simulated existentially quantiﬁed conjunctions constraints cid5 R We Section 52 complexity abduction stable simulations follows complexity ﬁnite constraint languages determined complexity ﬁnite language relational clone Deﬁnition 5 Let cid5 constraint language The relational clone cid5 written cid15cid5cid16 set relations R Rx1 xn logically equivalent V KB n arity R set variables V disjoint x1 xn cid5 Rformula KB VarsKB x1 xn V Example 6 Let R 4ary relation represented CNF x1 x2 x3 x4 x1 x2 x3 x4 recall F unary relation 0 Let Rcid13 ternary relation represented formula x1 x2x2 x3 0 It easily seen Rcid13x1 x2 x3 x4Rx1 x1 x2 x4 Fx4 Rx2 x3 Rcid13 cid15R Fcid16 Deﬁnition 7 A constraint language cid5 said relational clone cid5 cid15cid5cid16 Emil Post gave remarkable classiﬁcation classes Boolean functions closed composition projection 42 Such classes functions referred clones result Posts classiﬁcation inclusion structure set inclusion Boolean clones completely known Later shown bijection clones relational clones 2643 inclusion structure set inclusion relational clones follows inclusion structure clones The classiﬁcation Boolean clonesrelational clones called Posts lattice presented Fig 1 terms relational clones The lines lattice represent set inclusion line relational clone ICl1 relational clone ICl2 lying ICl1 lattice means ICl1 ICl2 The dotted lines represent inﬁnite chains relational clones IS2 0 rightmost line 0 ISn 0 IS3 We deﬁnition relational clone relevant study Table 1 taken 11 The relational clones relevant sense complexity abduction superclones subclones As turns results 11 relational clones cid5 correspond class C clauses equations sense relation cid5 represented conjunction clauses equations C clause equation C viewed relation cid5 In particular cid5 cid15Ccid16 Thus deﬁne relational clones following manner For entry table relational clone named ﬁrst column set relations represented conjunction clauses equations column For instance class BR relational clone relations represented conjunction clauses class relations IE2 relational clone containing Horn relations IL0 class relations represented conjunction linear equations 0 right member When standard relational clone class formulas given fourth column Only relational clones deﬁned manner A relation said complementive tuple μ1 μn tuple μ1 1 μn 1 Then IN2 denotes relational clone containing complementive relations IN denotes containing complementive 0valid 1valid relations Given relational clone cid15cid5cid16 easy locate cid15cid5 Fcid16 cid15cid5 Tcid16 Posts lattice This useful times state easy fact future reference Proposition 8 cid15cid5 Fcid16 upper bound Posts lattice cid15cid5cid16 IR0 cid15cid5 Tcid16 upper bound cid15cid5cid16 IR1 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1251 Table 1 Classes clauses equations R cl BR IN2 IN II1 II0 IE2 IE1 IE0 IE IV2 IV1 IV0 IV ID2 IM2 IM IS10 ISk 10 IS12 IS11 ISk 11 ISk 1 IS00 ISk 00 IS02 IS01 ISk 01 ISk 0 IL2 IL0 IL1 IL3 IL ID1 ID IR2 IR1 IR0 IBF Class CCNF C1v C0v CHorn C1vHorn CdHorn C1vdHorn C0vdHorn Cbij Cimpl CIHSB CIHSBk Cneg CIHSB CIHSBk Cpos Eaff E0vaff E1vaff Eaff 2 Cunit C1vunit C0vunit Clausesequations General case Complementive clauses page 1250 page 1250 1valid 0valid clauses containing positive literal clauses containing negative literal Horn dual Horn clauses positive literal clauses exactly positive literal x1 xn n cid2 1 x1 x2 xn n cid2 2 x1 x2 xn n cid2 2 clauses negative literal x1 x2 xn n cid2 2 x1 xn n cid2 1 clauses exactly negative literal x1 x2 xn n cid2 2 Bijunctive IHSB clauses containing 2 literals x1 x2 x1 x1 x1 x2 x1 x1 x2 x1 xn n cid2 0 x1 x1 x2 x1 xn k cid2 n cid2 0 x1 x1 xn n cid2 0 x1 x2 x1 x2 x1 xn n cid2 0 x1 x2 x1 xn k cid2 n cid2 0 x1 x2 x1 xn n cid3 k x1 x1 x2 x1 xn n cid2 0 x1 x1 x2 x1 xn k cid2 n cid2 0 x1 x1 xn n cid2 0 x1 x2 x1 x2 x1 xn n cid2 0 x1 x2 x1 xn k cid2 n cid2 0 x1 x2 x1 xn n cid3 k Afﬁne linear equations x1 xn 0 n cid2 0 x1 xn n cid2 0 n mod 2 x1 xn n 0 1 x1 xn 0 n 0 1 x1 x1 x2 0 1 0 1 x1 x2 0 1 Unit x x x1 x2 x x1 x2 x x1 x2 x1 x2 Name complementive 1valid 0valid Horn deﬁnite Horn dual Horn deﬁnite dual Horn bijunctive implicative IHSB IHSB width k essentially negative IHSB IHSB width k essentially positive afﬁne afﬁne width 2 24 Complexity notions We assume reader familiar basic notions complexity theory brieﬂy recall follow ing P class decision problems solvable deterministic polynomial time NP class decision problems 1252 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Fig 1 Posts lattice Boolean relational clones form Hasse diagram solvable nondeterministic polynomial time cid2P 2 istic polynomial time access NPoracle A problem NPhard cid2P polynomialtime reducible A problem NPcomplete cid2P 2 hard Throughout paper assume P NP cid2P cid2P NPNP class decision problems solvable nondetermin 2 2 2 hard problem NP cid2P 2 complete NP NPhard resp cid2P 2 pairwise distinct G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1253 coNP dual complexity class NP That problem coNP resp coNPcomplete complement NP resp NPcomplete If problem cid6 reduced problem cid6cid13 polynomialtime manyone reductions write cid6 cid3P cid6cid13 If cid6 cid3P cid6cid13 cid6cid13 cid3P cid6 write cid6 P cid6cid13 We write cid6 cid3P cid61 cid62 cid6 cid3P cid61 cid6 cid3P cid62 dually cid61 cid62 cid3P cid6 3 The abduction problem We deﬁne abduction problems study In order clarify presentation ﬁrst deﬁne general abduction problem restriction hypotheses manifestations restrictions 31 General abduction problem The abduction problem restrictions knowledge base deﬁned follows Recall classes clauses equations identiﬁed constraint languages following deﬁnition encompasses Problem 9 Abdcid5 Let cid5 constraint language An instance P abduction problem ABDcid5 tuple V H M KB V set variables H LitsV set hypotheses M propositional formula manifestation VarsM V KB cid5formula VarsKB V The question exists explanation P set E H KB KB E entails M cid2 cid2 E satisﬁable We need assumptions relations cid5formula KB represented When straint language cid5 speciﬁed giving class equations clauses naturally assume relations constraints cid5formula given extension That listing tuples belonging relation explicitly When cid5 speciﬁed giving class equations clauses choose let cid5formula represented equations CNFformula respectively For complexity matters size P V H M KB deﬁned total number occurrences variables additionally case cid5formula given extension number tuples relations cid5formula As illustration consider language cid5 R Rcid3 language containing binary equality difference relations Then instance ABDcid5 tuple V H M KB KB conjunction equality difference constraints V H set literals V M propositional formula V Similarly instance ABDCHorn tuple V H M KB KB Horn CNF H M Observe assume loss generality KB satisﬁable instance Indeed KB unsatisﬁable KB E satisﬁable E explanation Nevertheless enforce assumption satisﬁable KBs distinguished unsatisﬁable ones efﬁciently general cid2 The notion explanation illustrated following example Example 10 continued Consider KB x1 x2 x2 x3 x4 x1 x2 x3 x1 x2 Example 1 The tuple cid3 cid4 V x1 x2 x3 x4 H x3 x4 x4 M x2 KB P instance ABDCCNF It exactly explanations E1 x3 x4 E2 x3 x4 E3 x3 1254 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 On contrary x1 explanation subset H x4 entail M KB ﬁnally x1 x3 consistent KB subset H In literature common impose preference relation different explanations order concentrate interestingpreferred explanations One common preference criterion subset minimality explanation E said subset minimal minimal explanation Ecid13 Ecid13 E We want emphasize paper impose preference relation explanations Note example E3 E1 E2 matter setting E3 preferred explanation respect subset minimality criterion 32 Abduction restrictions We deﬁne abduction problem restrictions manifestations hypotheses We use follow ing notation restrictions manifestations POSLITS denotes class positive literals NEGLITS denotes class negative literals LITS denotes class literals Similarly POSCLAUSES NEGCLAUSES CLAUSES denote classes clauses POSTERMS NEGTERMS TERMS denote classes terms POSCNFS NEGCNFS CNFS denote classes CNFs Problem 11 abduction restrictions Let cid5 constraint language let M class proposi tional formulas An instance P decision problems PABDcid5M NABDcid5M VABDcid5M LABDcid5M instance V H M KB problem ABDcid5 M M holds H V h H positive PAbd H NV h H negative NAbd H VH NVH VH V H closed complement VAbd H LitsV H unrestricted LAbd For problems question explanation P Our motivation studying restrictions hypotheses manifestations understand restrictions affect complexity problem We note far restriction imposed knowledge base generic polynomialtime reductions exist restrictions For instance moving term M fresh variable m manifestation adding M m M m knowledge base Similarly negative hypothesis form h H removed replacing h fresh variable hcid13 H adding h hcid13 KB This motivation studying restricted cases positive hypotheses singlevariable manifesta tions generic heuristic approaches solving abduction problems Marquis survey 37 However knowledge base restricted particular language case reductions general fail preserve language This study restrictions H M investigate impact complexity problem Note particular case Horn knowledge bases singleliteral manifestations Eiter Makino similarly interested impact polarity imposed manifestation 23 In terms results compared complexity LABDCHornPOSLITS LABDCHornNEGLITS Further restrictions problem assuming manifestation satisﬁable hypothesis occurs knowledge base practical purposes Nevertheless apart restricted cases affect complexity problem discuss brieﬂy Section 14 To conclude section observe consider DNF manifestations disjunctions terms manifestations The reason deciding KB cid12 M M DNF formula coNPcomplete G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1255 KB tautological equivalent deciding M tautological Consequently hope ﬁnding interesting tractable classes knowledge bases abduction manifestations 4 Related work overview results In section ﬁrst survey relevant literature complexity abduction overview results We ﬁnally discuss results contexts 41 Related work The earliest work assumptionbased propositional abduction Reiter Kleers ATMS frame work 45 As far paper concerned main result characterization explanations means prime implicates reported Section 62 Subsequently early nineties results given concerning computational complexity abduc tion Among Bylander et al 7 consider setcovering abduction That assume hypothesis comes set atomic manifestations explain question ﬁnd set hypotheses explains manifestations Under assumptions interaction hypotheses incompatibility independence authors investigate frontier tractable intractable problems Since objective similar detailed comparison work theirs Section 152 The complexity abduction studied representations knowledge base example knowledge base represented ordered binary decision diagrams 30 The ﬁrst complexity results logicbased setting given Selman Levesque 48 abduction problems propositional Horn knowledge bases Then Eiter Gottlob performed systematic complexity analysis 20 The main results use classiﬁcation purposes following ones Proposition 12 See 48 PABDCHornPOSLITS NPcomplete Hardness holds knowledge base restricted acyclic Horn Proposition 13 See 20 The general problem ABDCCNF cid2P 2 complete Hardness holds hy potheses positive manifestations restricted positive terms PABDCCNF POSTERMS cid2P 2 complete Proposition 14 See 20 PABDC1vHornPOSTERMS P Due intractability results Propositions 12 13 authors investigated polynomial classes abduction problem Eshghi 24 gives technical class based acyclic Horn formulas del Vals discussion result 16 class captured framework Zanuttini 51 gives polynomial classes notion projection presented Section 63 He gives new proofs folklore polynomial classes discussed Marquis 37 classes DNF formulas captured framework The results relevant following ones Proposition 15 See 51 VABDEaff CLAUSES P Proposition 16 See 3751 VABDCposCLAUSES VABDCnegCLAUSES VABDCbijCLAUSES P Finally classiﬁcation results recently given Schaefers framework concerning restrictions study We wish emphasize results given ﬁnite constraint languages interested ﬁnite constraint languages inﬁnite clausal languages Theorem 17 LAbd 40 Let cid5 ﬁnite constraint language Then LABDcid5TERMS P cid5 ID1 Otherwise NPcomplete cid5 IE2 IV 2 ID2 IL2 Otherwise cid2P 2 complete 1256 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Theorem 18 VAbd 12 Let cid5 ﬁnite constraint language Then VABDcid5POSLITS P cid5 IL2 ID2 IS10 IS02 ISk 00 k IE1 Otherwise NPcomplete cid5 IE2 IV 2 Otherwise cid2P 2 complete VABDcid5LITS P cid5 IL2 ID2 IS12 IS02 ISk IE2 IV 2 Otherwise cid2P 2 complete 10 ISk 00 k Otherwise NPcomplete cid5 As concerns Theorem 18 observe particular ﬁnite language IS00 IS01 01 k N In fact inﬁnite constraint languages cid5 cid15cid5cid16 IS01 yield NPcomplete problems 00 ISk ISk Proposition 63 42 Overview results In paper building aforementioned results perform systematic study computational complexity propositional abduction This study allows complexity problems PABDcid5M NABDcid5M VABDcid5M LABDcid5M M POSLITS NEGLITS LITS similarly clauses terms CNFs instead literals cid5 constraint language clausal equational language To aim reuse results given literature speciﬁc languages In particular reuse classiﬁca tions 40 12 Observe particular concerns maximally easy problems sense problem study reduced polynomial time generic manner So proves helpful deriving hardness results Dually classiﬁcation proves helpful deriving membership results hardness results CNF manifestations Nevertheless classiﬁcations leave large gaps For instance cid5 ﬁnite constraint language cid15cid5cid16 IL2 unrestricted afﬁne constraints VABDcid5POSLITS P 12 LABDcid5TERMS NP complete 40 Thus classiﬁcations tell tractability frontier restrictions In paper ﬁlling gaps strengthen results given literature Nevertheless number brand new results We study complexity PABD NABD 0valid 1valid languages We exhibit new trivial new cid2P 2 hard problems We study complexity PABD NABD complementive languages identify minimal coNP hard minimal cid2P 2 hard problems We complete literature abduction Horn dual Horn knowledge bases mainly Selman Levesques 48 Eiter Gottlobs 20 results Our main new result PABDCdHornCNFS P We complete literature abduction bijunctive IHSB knowledge bases Abduction bijunctive IHSB constraint languages particularly interesting borderline tractability NP hardness mainly situated problems constraint languages We identify new polynomial problems LABDCimplPOSCNFS LABDCnegPOSCNFS new hardness results uniﬁed reduction satisﬁability problems Similarly complete literature afﬁne knowledge bases We new tractability results LABDEaff CLAUSES VABDEaff TERMS new hardness results original reductions satisﬁability problems We wish emphasize far know CNF manifestations studied These results allow complete picture complexity propositional abduction particular identify tractability frontier P NPhard This frontier discuss Section 15 char acterized simple conditions Moreover parallels frontier identiﬁed Bylander et al setcovering abduction 7 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1257 43 Applications As evoked results essentially interesting complexitytheoretic AI point view On complexitytheoretic complexity abduction ﬁnegrained restrictions turns abduction P NPcomplete coNPcomplete cid2P 2 complete This interesting Ladners result states P cid3 NP exist problems NP P NPcomplete 33 Such problems said intermediate complexity One way interpret results inﬁnite class abduction problems study contain problems intermediate complexity For discussions complexitytheoretic topic ﬁnding large subclasses NP contain problems intermediate complexity refer reader Feder Vardis seminal paper 25 Finally complexity abduction spans classes P NP coNP cid2P 2 abduction central problem nonmonotonic reasoning 537 results serve starting points deriving complexity results problems reductions abduction From AI point view results help designers knowledgebased agents expert systems choose appropriate knowledge representation language Indeed depending application especially constraints resolution abduction problems necessary ensure problems solved efﬁciently acceptable NPhard2 Moreover depending application sets hy potheses manifestations restricted particular classes Then results characteristics requirements application designer knowledgebased choose appropriate knowl edge representation language In particular choose expressive respecting tractability constraints We acknowledge restrictions knowledge bases capture possible propositional knowledge representation languages For instance capture class Hornrenamable CNF formulas acyclic Horn formulas impose global restrictions formulas Nevertheless classes deﬁned local properties important knowledge representation Indeed stable conjunction KB1 KB2 classes KB1 KB2 This makes suitable merging mutually consistent theories losing computational properties simply junct important knowledge approximation purposes classes deﬁne unique upper bound 47 Moreover given complete pictures complexity reasoning tasks ference circumscription 39 tasks default reasoning 9 allows choose knowledge representation language constraints stemming tasks Last relational clone gener ated constraint clausalequational language recognized polynomial time 11 Thus agent decisions depending current knowledge base It instance decide try ﬁnd exact solution planning problem abduction current knowledge base tractable adopt strategy approximate planning 5 Reductions abduction problems We deﬁned restrictions abduction problem dimensions 12 different types manifestations 4 different types hypotheses inﬁnite number restrictions knowledge bases Since goal complexity classiﬁcation problem combination restrictions section explains restrict ﬁnite limited number cases 51 Reductions restrictions manifestations hypotheses The following reductions obvious 2 Note problem hand NPhard cid2P instance stateoftheart solvers Quantiﬁed Boolean formulas approach 19 2 hard instances solved efﬁciently practice This 1258 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Lemma 19 Let cid5 constraint language let M Mcid13 classes propositional formulas M Mcid13 Then LABDcid5M cid3PLABDcid5Mcid13 The result holds PABD NABD VABD instead LABD Lemma 20 Let cid5 constraint language let M class propositional formulas Then PABDcid5M NABDcid5M VABDcid5M cid3PLABDcid5M 52 Reductions restrictions knowledge bases In section Posts lattice reduce number restrictions knowledge bases need considered classifying complexity abduction problem This approach Posts lattice crucial obtaining complexity classiﬁcations We conclude section demonstrating approach classify complexity PABDcid5TERMS constraint language cid5 clausal equational language C The key approach Posts lattice Lemma 22 states ABDcid5cid13 cid3PABDcid5 cid5cid13 ﬁnite cid5cid13 cid15cid5cid16 restrictions hypotheses manifestations considered Hence studying complexity abduction problem ﬁnite constraint languages cid5 consider generating constraint language relational clone In particular cid5 cid5cid13 ﬁnite constraint languages cid15cid5cid16 cid15cid5cid13cid16 ABDcid5 ABDcid5cid13 polynomialtime equivalent We ﬁrst need following lemma allows rid equality relations knowledge bases Lemma 21 Let cid5 constraint language let M class manifestations considered paper Then LABDcid5 RM cid3PLABDcid5M The holds VABD PABD NABD instead LABD Proof Let V H M KB instance LABDcid5 RM Build knowledge base cid5 KB following manner For constraints Rxi xj KB replace occurrence xj xi KB H M remove constraint KB remove xj V Perform identiﬁcation iteratively KB contain equality constraint Clearly transformation performed polynomial time preserves existence explanation Finally easily seen preserves restriction hypotheses manifestations statement cid2 We central lemma study The proof checks additional variables introduced replacing constraint cid5cid13 equivalent expression cid5 affect existence solution Lemma 22 Let cid5 constraint language let cid5cid13 cid15cid5cid16 ﬁnite constraint language ﬁnite clausal equational language Let M class propositional formulas Then LABDcid5cid13M cid3PLABDcid5M The holds VABD PABD NABD instead LABD class clauses equations C instead constraint language cid5 xcid13 Proof Let P cid13 V cid13 H cid13 M cid13 KBcid13 instance LABDcid5cid13M Write KBcid13 I V cid13 By deﬁnition relational clone know I constraint Rcid13 i1 xcid13 ixcid13 KBi cid5 R iki formula Vi V cid13 Importantly I assume Vi V cid13 icid13 I cid3 icid13 assume Vi Vicid13 existentially quantiﬁed variables fresh respect V cid13 different This loss generality names variables unconstrained i1 xcid13 iki KBcid13 logically equivalent formula ViKBi Vi V cid13 i1 xcid13 iki iI Rcid13 ixcid13 We deﬁne instance P V H M KB ABDcid5 R cid2 iI Vi cid5 V V cid13 H H cid13 M M cid13 cid2 KB iI KBi G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1259 Table 2 Minimal set results PABDcid5TERMS R Cloneclass CCNF BR II0 IN2 C1v II1 IN CHorn IE2 Eaff IL2 Cbij ID2 IS2 1 IL0 IL3 C1vHorn IE1 E1vaff IL1 CdHorn IV2 Eaff 2 ID1 Complexity cid2P 2 cid2P 2 hard cid2P 2 hard coNP coNPhard NP NPhard NPhard NPhard P P P Result Proposition 41 Proposition 46 Proposition 47 Proposition 44 Proposition 48 Proposition 35 Proposition 62 dual Proposition 69 Proposition 70 Proposition 44 Proposition 52 Theorem 17 In words simply replace constraint KBcid13 expression cid5 R forget exis tential quantiﬁcation Clearly performed linear time languages ﬁxed cid5cid13 ﬁnite expressions relations cid5cid13 stored lookup table cid2 cid2 We claim P P cid13 exactly explanations First let Ecid13 explanation P cid13 Then KBcid13 Ecid13 satisﬁable Since existentially quantiﬁed variables Ecid13 satisﬁable formula Ecid13 satisﬁable Now assume Ecid13 M satisﬁable By assumption fresh variables Ecid13 M satisﬁable Since M M cid13 fresh respect V cid13 different follows KB KB follows contradicts fact Ecid13 explanation P cid13 Ecid13 M satisﬁable KBcid13 Ecid13 entail M Then KB ViKBi cid2 ViKBi Thus explanation Ecid13 P cid13 explanation P proof similar showing converse We iI iI cid2 cid2 cid2 cid2 cid2 cid2 conclude invoking Lemma 21 getting rid equality constraints cid2 It important note reduction proof preserves restrictions hypotheses manifes tations considered paper For example reduce VABDcid5cid13POSLITS instance resulting instance VABDcid5POSLITS instance Thus Lemma 22 able complexity restrictions ABD problem ﬁnite constraint language Section 13 considering complexity language relational clone We demonstrate use Posts lattice classifying complexity ABDcid5 problems giving complete classiﬁcation PABDcid5TERMS constraint language cid5 class clausesequations C The reasoning similar combinations restrictions hypotheses manifestations Gathering results positive hypotheses terms manifestations subsequent sections paper applying obvious reductions Section 51 minimal set results Table 2 These results minimal sense irredundant respect reductions form PABDcid5TERMS cid3PPABDcid5cid13TERMS soon cid5 cid15cid5cid13cid16 In table clausal language C inside parentheses corresponding relational clone relational clone ICl ICl cid15Ccid16 The complete picture complexity obtained follows First explained Section 132 upper bound complexity clausal equational language C corre sponding relational clone ICl carries language cid5 cid15cid5cid16 ICl Now lower bounds given ﬁnite languages results Fig 2 follow results Table 2 result reported table given bolded circle result follows reductions form PABDcid5TERMS cid3PPABDcid5cid13 TERMS soon cid5 cid15cid5cid13cid16 Lemma 22 Consequently complexity constraint language For details refer reader Section 132 1260 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Fig 2 Results PABDcid5TERMS white P light grey NPcomplete mid grey coNPcomplete dark grey cid2P 2 complete 53 Exploiting symmetry 0 1 We exploit symmetry 0 1 positive negative order reduce number cases need considered We use notion duality G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1261 Deﬁnition 23 dual The dual clause C cid31 cid3k clause Cd cid31 cid3k The dual class clauses C class Cd Cd C C The dual equation Eqn x1 xn Eqnd Eqn n Eqnd x1 xn 1 The dual nary Boolean relation R Rd μ1 1 μn 1 μ1 μn R The dual constraint language cid5 cid5d Rd R cid5 Observe graphical representation Posts lattice Boolean relational clones Fig 1 dual relational clone simply mirror image respect vertical line center lattice 4 Moreover easy relation R represented conjunction clauses equations C1 Ck Rd represented Cd 1 Cd k Example 24 continued The dual clause C x1 x2 x3 Cd x1 x2 x3 The dual equation Eqn x1 x2 1 Eqn Eqncid13 x1 x2 x3 0 Eqncid13d x1 x2 x3 1 The dual relation R 000 010 111 Rd 111 101 000 As languages Cd Eaff 2 ISk CdHorn E d aff 2 Horn 00d ISk 10 These deﬁnitions allow state following easy equivalences problems sense symmetric The intuition simply switching polarity literals components instance replacing relations clausesequations duals preserve existence explanations Lemma 25 Let cid5 constraint language class clausesequations Then following equivalences hold PABDcid5POSLITS PNABDcid5d NEGLITS NABDcid5POSLITS PPABDcid5d NEGLITS VABDcid5POSLITS PVABDcid5d NEGLITS LABDcid5POSLITS PLABDcid5d NEGLITS They hold manifestations restricted positive negative clauses terms CNFs instead literals Consequently rest paper consider positive unrestricted manifestations The complex ity negative manifestations derived Lemma 25 Similarly lack positivenegative polarity manifestations andor hypotheses allows reduce number cases consider The following lemma straightforward Lemma 26 Let cid5 constraint language class clauses equations let M LITS CLAUSES TERMS CNFS Then NABDcid5M P PABDcid5d M LABDcid5M P LABDcid5d M VABDcid5M P VABDcid5d M 54 Other reductions The following lemma allows impose polarities hypotheses manifestations language contains disequality relation Rcid3 01 10 Lemma 27 Let cid5 constraint language Rcid3 cid15cid5cid16 let M POSLITS NEGLITS Then LABDcid5LITS cid3P PABDcid5M NABDcid5M The result holds clauses terms CNFs instead literals Proof Consider instance V H M KB LABDcid5TERMS The desired instance PABDcid5POSTERMS simply obtained introducing fresh variable xcid13 negative literal x H M replacing x xcid13 1262 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 adding constraint Rcid3x xcid13 KB Finally Lemma 22 allows assume Rcid3 cid15cid5cid16 instead stronger Rcid3 cid5 The reasoning similar restrictions cid2 The following lemmata concern conjunctive manifestations The proof ﬁrst follows ﬁrstly deﬁnition abduction problem Lemma 28 Let P V H M KB instance abduction problem M ϕ1 ϕp junction formulas let E H Then E explanation P 1 p explanation V H ϕi KB Lemma 29 Let P V H M KB instance abduction problem M term Let cid3 literal cid3cid13M cid3cid13 Then P explanation formed fresh variable m V write C clause cid3 P cid13 V m H cid3 KB C cid6 Proof Assume ﬁrst P cid13 explanation Ecid13 We ﬁrst KB Ecid13 contrary model μ KB extending μ μ cid12 cid3 yields model KB C cid2 Ecid13 entails P cid13 Thus KB satisﬁable Finally Ecid13 explanation P cid3cid13M cid3cid13 Assume cid6 cid3cid13M cid3cid13 C cid3cid13M cid3cid13 Then m occurs C cid2 Ecid13 cid3 contradicts fact Ecid13 explanation cid2 Ecid13 cid3cid13M cid3cid13 M Now KB C Ecid13 satisﬁable fortiori KB Ecid13 entails cid6 cid2 cid2 cid2 cid2 cid2 cid2 cid2 Conversely assume P explanation E Then deﬁnition explanation model μ E Now E μcid13 deﬁned agree μ V satisfy cid3 model KB C E cid12 M It follows KB C E cid12 cid3 ﬁnally E explanation P cid13 cid2 KB KB cid2 cid2 6 Tools methods studying abduction In section present main generic methods literature studying abduction problems computational point view 61 Complexity satisﬁability deduction By deﬁnition solving abduction problem involves solving satisﬁability deduction problem We recall deﬁnitions wellknown complexity results problems Problem 30 Satcid5 Let cid5 constraint language An instance P SATcid5 knowledge base KB cid5 question exists model KB Problem 31 Deductioncid5M Let cid5 constraint language let M class formulas An instance P DEDUCTIONcid5M tuple KB Q KB knowledge base cid5 Q formula M The question KB entails Q Schaefer classiﬁed complexity SATcid5 possible ﬁnite constraint languages cid5 46 Together wellknown results inﬁnite languages studied particular 17 1 following theorem Theorem 32 complexity Sat Let cid5 ﬁnite constraint language Then SATcid5 P cid5 II0 cid5 II1 cid5 IE2 cid5 IV 2 cid5 ID2 cid5 IL2 Otherwise NPcomplete Moreover SATC P C CHorn CdHorn Cbij Eaff C0v C1v G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1263 From wellknown facts KB entails Q KB Q unsatisﬁable KB entails Q1 Q2 entails Q1 entails Q2 following corollaries Theorem 32 use paper Theorem 33 upper bounds Deduction Let C class clauses equations Then DEDUCTIONCCNFS coNP Moreover DEDUCTIONCCNFS P C CHorn CdHorn Cbij Eaff Theorem 34 lower bound Deduction Let cid5 constraint language cid15cid5cid16 II1 Then DEDUCTIONcid5POS LITS coNPhard Proof It follows Posts lattice Proposition 8 cid15II1 Fcid16 BR Thus Theorem 32 follows SATII1 F NPcomplete Let KBII1F KBII1 iI Fxi knowledge base II1 F KBII1 knowledge base II1 I nonempty clearly problem remains NPcomplete assumption Now let i0 I let KB knowledge base obtained KBII1 replacing occurrence xi I i0 xi0 By construction KB knowledge base II1 KB Fxi0 satisﬁable KBII1F But KB Fxi0 unsatisﬁable KB entails xi0 concludes proof cid2 cid2 Schaefer languages precisely maximal languages inclusion deduction clauses tractable CHorn CdHorn Cbij Eaff From results immediately following result Proposition 35 For type restriction hypotheses manifestations considered paper Schaefer languages C ABDC NP 62 Prime implicates The notion prime implicate widely studying computational problems propositional logic especially problems nonmonotonic reasoning The relevance notion abduction ﬁrst pointed Reiter Kleer 45 Marquis 37 gives survey notions prime implicates use nonmonotonic reasoning including abduction methods computing Deﬁnition 36 prime implicate Let KB propositional formula conjunction constraints A clause C said prime implicate KB KB entails C proper subclause The following characterization explanations ﬁrst shown Reiter Kleer ATMS setting 45 great use Lemma 37 See 45 Let P V H M KB instance abduction problem M m1 mp nonempty clause let E H Then E explanation P prime implicate KB mjs cid31 cid3r E j1 js 1 p j1 js cid3 form cid31 cid3r mj1 possibly cid3i mj j Finally recall Quines result 44 prime implicates CNF KB generated resolution repeatedly adding C1 C2 KB variable x clauses forms x C1 x C2 KB removing clauses tautological include 63 Projection We use notion projection tool studying abduction problem This notion similar wellknown notion elimination middle terms existential abstraction use abduction proposed 51 As complexity computing projection propositional logic refer reader 34 Intuitively projecting set variables V cid13 amounts existentially quantifying variable 1264 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Deﬁnition 38 projection assignments Let μ assignment set variables V let V cid13 V The projection μ V cid13 denoted μV cid13 assignment V cid13 agrees μ Deﬁnition 39 projection formulas Let KB propositional formula conjunction constraints let V cid13 VarsKB A projection KB V cid13 knowledge base KBcid13 VarsKBcid13 V cid13 set models V cid13 μV cid13 μ cid12 KB Importantly projection formula unique logical equivalence We mainly use following result Its proof follows Lemma 37 manifestation literal clause wellknown projection knowledge base KB set variables preserves prime implicates KB set 34 Proposition 16 When manifestation term CNF proof follows literal clause case Lemma 28 Lemma 40 Let P V H M KB instance abduction problem Let V cid13 set variables VarsH VarsM V cid13 V let KBcid13 projection KB V cid13 Then explanations V cid13 H M KBcid13 exactly explanations P When computable efﬁciently projection allows circumvent difﬁculty Selman Levesque support selection task 48 They argue task lies core computational difﬁculty abduction witnessed study Horn case We come issue discussion Section 15 One case projection knowledge base computed efﬁciently knowledge base polynomial number prime implicates enumerated efﬁciently This bijunctive knowledge bases allows derive results Section 11 However case afﬁne case shows Section 12 7 General case In section strengthen Eiter Gottlobs statements 20 little adapt proofs frame work Proposition 41 Adapted 20 LABDCCNF CNFS cid2P 2 Proof Guess explanation E H check KB Now check KB cid2P cid2 2 cid2 E satisﬁable This veriﬁcation NP Theorem 32 E cid12 M This veriﬁcation coNP Theorem 33 Hence problem NPNPcoNP cid2 Proposition 42 Adapted 20 Let cid5 constraint language satisfying cid15cid5cid16 BR Then PABDcid5POSLITS NABDcid5POSLITS cid2P 2 hard Proof Eiter Gottlob 20 PABDCCNF POSLITS cid2P 2 complete Let cid53 constraint language containing ternary relations set models exactly clause It known CNF logically equivalent 3CNF formula existentially quantiﬁed auxiliary variables Reasoning Lemma 22 PABDCCNF POSLITS PPABDcid53POSLITS PABDcid53POSLITS cid2P 2 complete Now cid15cid53cid16 BR PABDcid5POSLITS cid2P 2 complete The claim NABDcid5POSLITS follows positive hypothesis h changed negative hcid13 hcid13 fresh variable adding h hcid13 h hcid13 h hcid13 KB cid2 Note particular hardness result preceding proposition holds ﬁnite constraint language cid5 cid15cid5cid16 BR We want emphasize explicitly stated hardness results paper constraint languages cid5 hold ﬁnite constraint language cid5cid13 cid15cid5cid13cid16 cid15cid5cid16 This important use Lemma 22 derive new hardness results original hard abduction problem deﬁned ﬁnite constraint language G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1265 8 0valid 1valid languages The easy abduction problems exhibit section particular type Indeed search space reduced candidate explanation The reasoning similar deﬁnite Horn case 20 Corollary 54 Lemma 43 Let P V H M KB instance abduction problem If KB H cid12 M explanation KB cid2 cid2 H satisﬁable P cid2 H satisﬁable KB cid2 cid2 H cid3cid12 M Then model μ KB cid2 Proof Obviously KB KB μ cid3cid12 M KB cid2 E cid3cid12 M E explanation cid2 H cid12 M E H explanation Conversely assume E H μ cid3cid12 M E H μ cid12 KB cid2 As direct consequence Lemma 43 Theorems 32 33 following results The algorithm simply cid2 consists deciding KB H entails M Proposition 44 1valid PABDC1v CNFS coNP PABDC1vHornCNFS PABDE1vaff CNFS P We new results upper lower bounds respectively complexity PABD NABD Proposition 45 The problem NABDC0v POSCNFS trivial sense instance V H M KB explanation M Proof If M tautological KB entails M It follows explanation KB satisﬁable necessarily case 0valid Now M nonempty let μ0 assignment 0 variable V Since KB 0valid H set E E H But M positive tautological cid2 negative literals μ0 cid12 KB μ0 cid3cid12 M It follows E H KB cid2 E cid3cid12 M E H explanation cid2 Proposition 46 Let cid5 constraint language satisfying cid15cid5cid16 II0 Then PABDcid5POSLITS cid2P cid5 constraint language satisfying cid15cid5cid16 II1 NABDcid5POSLITS cid2P 2 hard 2 hard Similarly Proof Let cid5 constraint language cid15cid5cid16 II0 By Posts lattice Proposition 8 cid15cid5 Tcid16 BR Proposition 42 PABDcid5 TPOSLITS cid2P 2 complete We reduction problem PABDcid5POSLITS cid2 To aim let P cid13 V cid13 H cid13 mcid13 KBcid13 instance PABDcid5 TPOSLITS Write KBcid13 KBcid5 Tx KBcid5 conjunction constraints cid5 VT set variables We assume VT cid3 xVT loss generality Then deﬁne KB conjunction constraints possibly existentially quantiﬁed aux cid2 mcid13 x formula exists cid15cid5cid16 II0 iliary variables cid5 logically equivalent KBcid5 set 0valid relations mcid13 x 0valid We deﬁne H H cid13 VT P V cid13 H mcid13 KB Then clearly P explanation P cid13 KB logically equivalent KBcid5 mcid13 Tx reasoning similar 12 Lemma 19 cid2 xVT xVT cid2 9 Complementive languages We new lower bounds Proposition 47 Let cid5 constraint language satisfying cid15cid5cid16 IN2 Then PABDcid5POSLITS NABDcid5 POSLITS cid2P 2 hard 1266 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 2 complete Now VABDcid5POSLITS cid3PL Proof We know Theorem 18 VABDcid5POSLITS cid2P ABDcid5LITS Lemmata 19 20 Rcid3 IN2 LABDcid5LITS cid3P PABDcid5POSLITS NABDcid5POSLITS Lemma 27 concludes proof cid2 Proposition 48 Let cid5 constraint language satisfying cid15cid5cid16 IN Then PABDcid5POSLITS coNPhard Proof We know Posts lattice Proposition 8 cid15cid5 Tcid16 II1 Thus follows Theorem 34 DEDUCTIONcid5 TPOSLITS coNPhard We reduction problem PABDcid5POSLITS cid2 Let V KBT q instance DEDUCTIONcid5 TPOSLITS q V write KBT KB Tx KB knowledge base cid5 Now deﬁne instance P PABDcid5POSLITS P cid2 xVT H satisﬁable Lemma 43 P V H VT q KB Since KB 1valid KB explanation KB H entails q KBT entails q cid2 cid2 10 Horn dual Horn languages In section build number results given literature Horn knowledge bases mainly Selman Levesque 48 Eiter Gottlob Makino 2023 Khardon Roth 32 Lemma 49 See 32 50 Lemma 1 Let P V H M KB instance ABDCHorn M POSLITS POSCLAUSES POSTERMS POSCNFS Then P explanation positive Corollary 50 Let cid5 Horn language let M POSLITS POSCLAUSES POSTERMS POSCNFS Then LABDcid5M P VABDcid5M P PABDcid5M Proposition 51 Adapted 20 Corollary 54 LABDC1vHornPOSCNFS P Proof Let P V H M KB instance From Lemma 49 follows P explanation H V satisﬁable Thus Lemma 43 P cid13 P cid13 V H V M KB Now KB 1valid KB explanation KB H V entails M decided polynomial time KB Horn Theorem 33 cid2 cid2 cid2 The following result new gives broad class tractable abduction problems Observe duality shows tractable decide CNF negative explanation respect Horn knowledge base Proposition 52 PABDCdHornCNFS P Proof Let P V H M KB instance We assume loss generality KB satisﬁable end Section 31 Let H cid13 set positive literals h H KB h satisﬁable H cid13 computed efﬁciently testing h H KB dual Horn Then P explanation instance V H cid13 M KB candidate explanation containing h literal h H H cid13 inconsistent KB Now set models dual Horn knowledge base closed componentwise logical dual wellknown closure Horn theories logical 46 Hence KB h satisﬁable h H cid13 KB H cid13 satisﬁable We conclude Lemma 43 P explanation cid2 H cid13 entails M decided polynomial time KB dual Horn Theorem 33 cid2 KB cid2 We ﬁnally hardness results The proof ﬁrst follows directly 12 VABD case reported Theorem 18 Corollary 50 Proposition 53 Let cid5 constraint language satisfying cid15cid5cid16 IE0 Then PABDcid5POSLITS NPhard Proposition 54 Let cid5 constraint ABDcid5NEGLITS NPhard language satisfying cid15cid5cid16 IE0 Then PABDcid5NEGLITS V G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1267 Proof By Proposition 53 PABDcid5POSLITS NPhard Now clause x y IE0 Lemma 29 gives reduction PABDcid5POSLITS PABDcid5NEGLITS choosing negative literal cid3 The proof similar VABD Theorem 18 hardness VABDcid5POSLITS cid2 11 Bijunctive IHSB languages Bijunctive IHSB restrictions share important property summarized lemma Lemma 55 Let C Cbij Cimpl CIHSBk CIHSBk k Then prime implicate knowledge base KB C C set prime implicates computed time polynomial size KB In particular polynomial number Proof It easily seen prime implicates C Indeed generated resolution easily seen forms clauses resolution preserves class statement Thus starting formula C clauses C generated Clearly number prime implicates theory Cbij Cimpl CIHSBk CIHSBk polynomial size theory size clauses C bounded 2 k cases All generated polynomial time simply generate clauses size 2 resp k test entailed KB proper subclauses polynomial time cases Theorem 33 cid2 Remark 56 The fact language ﬁxed k ﬁxed languages CIHSBk CIHSBk crucial proof Lemma 55 Indeed statement hold inﬁnite languages CIHSB CIHSB 111 Bijunctive IHSB languages Upper bounds We ﬁrst easy consequences Lemmata 37 55 generalize folklore results based prime implicate generation particular Marquis survey 37 The algorithm consists generating prime implicates KB VarsH VarsM Lemma 37 tested Proposition 57 Let C Cbij Cneg CIHSBk k N Then LABDCCLAUSES P Proof The case handled Lemma 55 Cneg equality relation We knowl edge base KB Cneg contains equality constraint polynomial number prime implicates generated efﬁciently We conclude Lemma 21 Indeed clauses KB unit positive negative seen resolution applied pair clauses consisting positive negative applied Since positive clause variable prime implicates generated polynomial time cid2 Proposition 58 LABDCIHSBPOSCLAUSES P Proof By reasoning similar proof Lemma 55 prime implicate IHSB theory IHSB Now IHSB clauses contain positive literal unary implicative ones Lemma 37 minimal candidate explanations instance L ABDCIHSBPOSCLAUSES restricted positive literal tested efﬁciently cid2 We new tractability results work needed conjunctive manifesta tions Proposition 59 LABDCimplPOSCNFS P 1268 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Proof First observe KB bijunctive decide polynomial time explanation deciding KB satisﬁable entails M Thus assume explanation Let P V H M KB instance problem assume ﬁrst M consists single positive clause C In case prime implicates knowledge base Cimpl Cimpl Lemma 55 conclude set E H explanation P KB E satisﬁable literal cid3 E KB cid3 entails C subcase E explanation cid3 positive literal Thus set EC cid3s computed polynomial time testing H candidates Now consider case M CNF form C1 Cp Then Lemma 28 reasoning set E H explanation P KB E satisﬁable 1 p explanation Ci hi E hi ECi As easily seen true h satisﬁable Since 1 p ECi contains positive literals formula KB formula IHSB decided polynomial time satisﬁable Theorem 32 CIHSB CdHorn cid2 cid2 p i1KBcid3cid12Ci cid6 hECi cid2 cid2 Proposition 60 LABDCnegPOSCNFS P Proof Let V H M KB instance We ﬁrst invoke Lemma 21 assuming loss generality KB contains equality constraint Now reasoning Lemma 57 prime implicates KB contain positive literal unit clauses Thus Lemma 37 explanation positive clause C M m m C explanation It follows Lemma 28 explanation M H contains variable clause M entailed KB decided efﬁciently cid2 112 Bijunctive IHSB languages Lower bounds We mainly use following lemma provides class reductions satisﬁability problems abduction problems The intuition reduction reduce test satisﬁability set clauses formula test explainability satisfaction clauses satisfaction clause explainable literals clause The clauses transformed reduction serve constraints possible explanations Importantly exactly intuition characterization tractable vs NPcomplete abduction problems shall Section 15 cid2 cid6 iI Ci CNF formula Ci Lemma 61 Let ϕ cid3ij cid3ij literal Let I cid13 I set indices For I cid13 let xi new variable xi Varsϕ let si literal formed xi intuitively clause Ci satisﬁed Finally deﬁne cid2 j Ji cid2 cid2 iI I cid13 Ci KB iI cid13 V Varsϕ xi I H cid3ij I j Ji cid3ij I j Ji M cid3ij si j Ji cid2 iI si Then ϕ satisﬁable abduction problem P V H M KB explanation The result holds H cid3ij I j Ji Proof Assume ﬁrst ϕ model μ deﬁne E set literals H satisﬁed μ Then μ satisﬁes Ci I satisﬁes Ci I I cid13 deﬁne assignment μcid13 V agree μ Varsϕ satisfy si Then μcid13 satisﬁes Ci I I cid13 cid3ij si I j Ji satisﬁes KB Moreover clearly μcid13 satisﬁes E Finally KB We KB iI si satisﬁable Then I KB E agrees μ VarsH μ satisﬁes ϕ μcid13 satisﬁes cid3ij j Ji Thus μcid13 satisﬁes cid3ij si contradicts fact satisﬁes KB Finally KB E si satisﬁable Write μcid13 models Then μcid13 satisﬁes E entails M Assume contrary KB cid2 E entails M E explanation P E satisﬁable E cid2 cid2 cid2 cid2 cid2 cid2 cid6 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1269 Conversely assume P explanation E Then model μ KB E μVarsϕ model ϕ First I I cid13 μ satisﬁes Ci Ci KB Now assume contradiction I cid13 j Ji μ satisﬁes cid3ij Deﬁne assignment μcid13 agree μ V xi satisfy si Then μcid13 satisﬁes KB E satisfy M contradicts fact E explanation P It follows I cid13 μ satisﬁes cid3ij j Ji satisﬁes Ci Finally μ satisﬁes ϕ desired cid2 cid2 cid2 Based general reduction able new hardness results abduction problems bijunctive IHSB knowledge bases Proposition 62 Let cid5 constraint language Then 11 VABDcid5POSTERMS PABDcid5POSTERMS NPhard cid15cid5cid16 IS2 cid15cid5cid16 IM VABDcid5TERMS NPhard cid15cid5cid16 IS2 0 VABDcid5POSTERMS NABDcid5POSTERMS NPhard Proof We ﬁrst prove case cid15cid5cid16 IS2 11 From Theorem 32 follows SATx1 x2 x3 x1 x2 NPcomplete Now Lemma 61 gives reduction problem VABDcid5POSTERMS PABDcid5POS TERMS Indeed let ϕ xi1 xi2 Ip In disjoint sets indices Then Lemma 61 desired reduction choosing I cid13 Ip I cid13 si xi xi1 xi2 xi3 iIp iIn cid2 cid2 The proof similar cases cid15cid5cid16 IM cid15cid5cid16 IS2 0 considering respectively SATx1 x2 x3 x1 x2 I cid13 Ip In Ip si xi In si xi SATx1 x2 x1 x2 x3 I cid13 In I cid13 si xi cid2 The proposition special case Indeed observe cid5 necessarily inﬁnite ﬁnite language cid2 IS11 11 k N yielding cid15cid5cid16 ISk 11 included IS11 bounded width included ISk This special case discussed Section 132 Proposition 63 Let cid5 inﬁnite language satisfying cid15cid5cid16 IS11 Then VABDcid5NEGLITS P ABDcid5NEGLITS NPhard Proof Proposition 62 shows VABDcid5POSTERMS NPhard cid15cid5cid16 IS2 11 Now Lemma 29 gives reduction problem VABDcid5cid13NEGLITS cid15cid5cid13cid16 IS11 choosing negative literal cid3 The proof similar PABDcid5POSTERMS cid2 12 Afﬁne languages The main tool use afﬁne formulas projection This following lemma Lemma 64 See 51 Let KB afﬁne formula let V cid13 VarsKB Then projection KB V cid13 afﬁne projection computed polynomial time Interestingly contrary case bijunctive bounded IHSB knowledge bases tractability projection consequence polynomial number prime implicates Indeed case single linear equation form x1 xn 0 afﬁne formula exponential number prime implicates 2n1 example clauses exactly x1 xn odd number negative literals 1270 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 121 Afﬁne languages Upper bounds We ﬁrst restate Nordh Zanuttinis result 40 afﬁne formulas width 2 Indeed state ﬁnite languages proof obviously holds corresponding inﬁnite language Proposition 65 Adapted 40 LABDEaff 2TERMS P We new tractability results So use projection consistently deﬁnition observe afﬁne case assume VarsH VarsM VarsKB loss generality Indeed variable x VarsH VarsM VarsKB fresh variable newx introduced x newx 0 added KB changing set explanations Proposition 66 LABDEaff CLAUSES P Proof Consider instance V H M KB Note x cid3 y x y 1 Eaff use Lemma 27 reduce instance equivalent V cid13 H cid13 M cid13 KBcid13 M cid13 positive clause H cid13 set negative literals Now order eliminate variables H cid13 M cid13 project KBcid13 V cid13cid13 VarsH cid13 VarsM cid13 getting formula KBcid13cid13 set variables V cid13cid13 Now x y x y 0 Eaff assume VarsH cid13 VarsM cid13 loss generality variable x intersection duplicated xH xM adding xH xM KBcid13cid13 We instance P V cid13cid13 H cid13 M cid13 KBcid13cid13 KBcid13cid13 set linear equations H cid13 set negative literals x x V cid13cid13 VarsM cid13 M cid13 positive clause We use exactly reduction 40 Proposition 11 P explanation negative term M cid13 follow KBcid13cid13 circumscribing variables Since problem P M cid13 single literal 18 Theorem 7 case term easily seen polynomialtime reducible result cid2 The proposition use notion explanation Given instance P V H M KB ab duction problem explanation E P said VarsE VarsH What use fact instance VABD restriction manifestation explanation Indeed E model μ easily seen set Ecid13 deﬁned given nonfull explanation E KB set literals H assigned true μ explanation P cid2 Proposition 67 VABDEaff TERMS P Proof Let P V H M KB instance write VH VarsH We ﬁrst consider case positive literal manifestation M m m V case negative literal dual Assume m H loss generality P explanation KB m satisﬁable decided efﬁciently Write KBH m afﬁne projection KB VH m By Lemma 64 knowledge base computed polynomial time Now deﬁne PH m VH m H m KBH m By Lemma 40 PH m explanation P Moreover obviously m occur KBH m PH m explanation Otherwise let Eqnm X x equation KBH m containing m Now let KBHm1 afﬁne projection KBH m m VH We claim explanations PH m m cid7 bijection models KBHm1 cid2 cid2 E m μVH satisﬁes KBHm1 Indeed let E explanation PH m Then deﬁnition explanation model μ KBH m E KBHm1 Conversely let μ model KBHm1 write E set literals VH satisﬁed μ E explanation PH m First KBHm1 E E cid12 m Assume contradiction model satisﬁable We left proving KBH m μcid13 KBH m E m In particular μcid13 satisﬁes m agrees μ VarsE VH Moreover cid7 X x 1 Eqnm m 1 follows μcid13 satisﬁes μ model KBHm1 satisﬁes equation cid7 X x 1 Thus satisfy equation Eqnm X x 1 satisﬁes m satisﬁes m E satisﬁable KBH m m E satisﬁable KBH m cid7 cid2 cid2 cid2 cid2 cid2 contradicts fact satisﬁes KBH m G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1271 We conclude case single literal m manifestation explanations PH m exactly models KBHm1 It follows Lemma 28 explanations case manifestation M m1 mk exactly models KBHm11 KBHmk1 Since KBHmi 1 afﬁne formula computed polynomial time ﬁnally polynomial algorithm cid2 122 Afﬁne languages Lower bounds We ﬁnally hardness proofs afﬁne languages new To aim use original reductions satisﬁability problems inspired clausal case Lemma 61 Proposition 68 Let cid5 constraint language satisfying cid15cid5cid16 IL Then LABDcid5POSTERMS NPhard cid2 Proof We reduction SATx1 x2 x3 x4 0 x1 x1 x2 NPcomplete Theorem 32 Let ϕ ϕ0 kK xk 1 ϕ0 contains equations form x1 x2 x3 x4 0 For I let si Varsϕ fresh variable intuitively meaning clause satisﬁed I let pi1 ni1 pi2 ni2 Varsϕ fresh variables p stands positive n negative Write Hp set pij s Hn nij s We deﬁne instance P V H M KB L ABDcid5POSTERMS iI xi1 xi2 cid2 V Varsϕ si I Hp Hn H NVarsϕ xk k K Hp NHn M si I xk k K KB ϕ0 iI xi1 pi1 ni1 si 0 cid2 cid2 iI xi2 pi2 ni2 si 0 The intuition new equations play role implications xi1 si xi2 si We claim P explanation ϕ satisﬁable First μ model ϕ clearly x x Varsϕ μx 0 xk k K pij nij I μxij 0 explanation P Conversely assume E explanation P Then I si pi1 pi2 ni1 ni2 occur equations xij pij nij si 0 E contain pij pij nij nij j 1 2 Indeed ﬂipping E si values si pij s nij s model KB contradicting fact E explanation P Thus I j 1 2 E contains cid2 pij nij pij nij H Now deﬁnition explanation model KB M follows reasoning model satisﬁes xi1 xi2 I equations xij pij nij si 0 satisﬁed Finally satisﬁes xk k K literals M Thus deﬁning μ projection model Varsϕ μ model ϕ desired cid2 M yield model KB cid2 E E cid2 cid2 cid2 Proposition 69 Let cid5 constraint language satisfying cid15cid5cid16 IL1 Then NABDcid5POSTERMS NPhard Similarly cid5 constraint language satisfying cid15cid5cid16 IL0 PABDcid5POSTERMS NPhard Proof As regards IL1 proof similar Proposition 68 start SATx1 x2 x3 1 x1 x2 introduce fresh variable nij occurrence variable negative clause build equation xij nij si 1 instead xij pij nij si 0 add nij H The proof dual IL0 starting SATx1 x2 x3 0 x1 x2 building xij pij pcid13 ij si 0 pij pcid13 ij H cid2 Proposition 70 Let cid5 constraint language satisfying cid15cid5cid16 IL3 Then PABDcid5POSTERMS N ABDcid5POSTERMS NPhard Proof Since IL IL3 Proposition 68 LABDcid5POSTERMS NPhard Now know LABDcid5POS TERMScid3PLABDcid5TERMS Lemma 19 Finally Rcid3x y set models x y 1 Rcid3 IL3 1272 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Thus Lemma 27 know LABDcid5TERMS cid3P PABDcid5POSTERMS NABDcid5POSTERMS concludes proof cid2 Proposition 71 Let cid5 constraint language satisfying cid15cid5cid16 ID Then VABDcid5POSCNFS PABDcid5POS CNFS NABDcid5POSCNFS NPhard Proof We consider case VABD The cases follow Lemmata 20 27 We reduction satisﬁability problem CNF formulas Let ϕ iI Ci CNF formula For ev ery variable x Varsϕ let px nx Varsϕ fresh variables p stands positive n negative Let ϕcid13 CNF formula obtained ϕ replacing positive occurrence x variable clause positive literal px negative occurrence x variable positive literal nx By construction ϕcid13 positive CNF cid2 We deﬁne instance P VABDcid5POSCNFS follows cid2 xVarsϕpx cid3 nx KB V px x Varsϕ nx x Varsϕ M ϕcid13 H px x Varsϕ px x Varsϕ Then easily seen ϕ satisﬁable model μ E deﬁned px μx 1 px μx 0 explanation P Conversely E explanation P easily seen assignment Varsϕ satisfying μx 1 resp μx 0 px E resp px E model ϕ concludes proof cid2 Proposition 72 Let cid5 constraint language satisfying cid15cid5cid16 IL Then VABDcid5POSCNFS NPhard cid2 Proof We reduction satisﬁability problem CNF formulas similar proof iI Ci CNF formula For variable x Varsϕ let px nx Varsϕ fresh Proposition 71 Let ϕ variables p stands positive n negative Let ϕcid13 CNF formula obtained ϕ replacing positive occurrence x variable clause positive literal px negative occurrence x variable positive literal nx By construction ϕcid13 positive CNF Moreover let x1 x4 Varsϕ We deﬁne instance P VABDcid5POSCNFS follows cid2 KB x1 x2 x3 x4 0 V px x Varsϕ nx x Varsϕ x1 x2 x3 x4 M x1 x3 x4 ϕcid13 H px px x Varsϕ x1 x1 x2 x2 xVarsϕpx nx x3 x4 0 cid2 The idea manifestations x1 x3 x4 equation x1 x2 x3 x4 0 KB force E explanation E satisfy μx3 cid3 μx4 Consequently equations px nx x3 model μ KB cid2 x4 0 force μpx cid3 μnx model μ KB E explanation E It easily seen ϕ satisﬁable model μ E deﬁned px μx 1 px μx 0 x1 x2 explanation P Conversely E explanation P KB E satisﬁable entails x1 x3 x4 ϕcid13 Now assume model μ KB E μx3 μx4 1 Note x3 x4 occur H occur equation KB So easy E μcid13x3 μcid13x4 0 This contradiction fact E model μcid13 KB explanation μcid13 satisfy x3 x4 Hence model μ KB E satisfy μx3 cid3 μx4 consequently μpx cid3 μnx x Varsϕ Hence assignment μcid13 Varsϕ deﬁned μcid13x μpx x Varsϕ model ϕ cid2 cid2 cid2 cid2 cid2 For proposition observe language cid5 satisﬁes cid15cid5cid16 IBF Proposition 73 Let cid5 constraint language satisfying cid15cid5cid16 IBF Then VABDcid5CNFS NPhard G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1273 Proof Recall IBF contains equality relations We reduction satisﬁability problem CNFs Let ϕ CNF deﬁne following instance P VABDcid5CNFS KB CNF satisﬁed V Varsϕ M ϕ H LitsVarsϕ Then easily seen explanations P correspond exactly models ϕ cid2 13 Summary complete classiﬁcation We position complete picture complexity propositional abduction 48 restric tions hypotheses manifestations By complete picture mean results complexity abduction constraint language class clauses equations explained Section 132 131 Summary results The complete complexity picture abduction given Table 3 In table restriction hypotheses manifestations complexity class minimal maximal languages class respect language inclusion listed More precisely languages listed ﬁrst line cell maximal languages complexity class languages second line minimal languages hard class As example consider cell NPcomplete LABD problems manifestations expressed POSCNFS The ﬁrst row cell Cbij CdHorn Eaff CHorn second row IS2 11 ID IV IL This means LABDcid5POSCNFS NPcomplete cid5 cid5 subset languages listed ﬁrst row languages second row subset cid15cid5cid16 To exemplify consider constraint language cid5 R R 001 010 100 111 relation expressed x1 x2 x3 1 Then cid5 Eaff IL cid15cid5cid16 Hence Proposition 35 LABDcid5POSCNFS NP Proposition 72 obvious reduction VABD LABD LABDcid5POSCNFS NPhard 0 IS2 The fact results Table 3 derived results reported paper manner described checked program available authors Also note results negative restrictions manifestations omitted table recover simply use Lemma 25 Finally collapsed rows concerning positive clauses positive literals Indeed turns complexity types manifestations Section 154 gives explanation fact 132 On completeness classiﬁcation In section motivate claims classiﬁcations complete sense constraint languages classes equations clauses covered We begin noting upper bounds complexity abduction problems paper given terms clausal equational languages C hold constraint language cid5 cid5 cid15Ccid16 If cid5 ﬁnite constraint language obvious use simple lookup table translate cid5formula CNF equations C For inﬁnite constraint languages cid5 situation slightly involved We use result 11 stating transform polynomial time cid5formula relations given extension equivalent CNFformulasystem equations clausalequational language C Table 1 cid15cid5cid16 cid15Ccid16 Since upper bounds complexity abduction paper given clausal equational languages C Table 1 upper bounds apply constraint languages cid5 cid5 cid15Ccid16 All hardness results special cases discussed proved ﬁnite constraint languages cid5 Obviously Lemma 22 hardness results implies hardness constraint language cid5cid13 cid5 cid15cid5cid13cid16 1274 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 Table 3 Complexity propositional abduction M P NPC coNPC POSLITS POSCLAUSES LITS CLAUSES POSTERMS CIHSBk Cpos CIHSB Cbij Eaff C1vHorn CIHSBk Cpos CIHSBk Cneg Cbij Eaff Cimpl Cneg Eaff C1vHorn VABD TERMS Eaff POSCNFS Cimpl Cneg C1vHorn CNFS POSLITS POSCLAUSES LITS CLAUSES POSTERMS CIHSB Cbij CdHorn Eaff C1vHorn CIHSBk Cneg Cbij CdHorn Eaff C1vHorn Cneg Eaff 2 CdHorn E1vaff C1vHorn PABD TERMS Eaff 2 CdHorn E1vaff C1vHorn POSCNFS Cneg CdHorn E1vaff C1vHorn CNFS CdHorn E1vaff C1vHorn POSLITS POSCLAUSES LITS CLAUSES POSTERMS CIHSBk Cpos Cbij Eaff CHorn C0v CIHSBk Cpos Cbij C0vdHorn Eaff CHorn Eaff 2 CHorn C0v NABD TERMS Eaff 2 C0vdHorn E0vaff CHorn POSCNFS CHorn C0v CNFS C0vdHorn E0vaff CHorn POSLITS POSCLAUSES LITS CLAUSES POSTERMS CIHSBk Cpos CIHSB Cbij Eaff C1vHorn CIHSBk Cpos CIHSBk Cneg Cbij Eaff Cimpl Cneg Eaff 2 C1vHorn LABD TERMS Eaff 2 Cimpl Cneg C1vHorn POSCNFS CNFS 0 IS2 0 IS2 CdHorn CHorn IS01 IV IE0 CdHorn CHorn IS01 IS11 IV IE Cbij CdHorn CHorn IS2 11 IV Cbij CdHorn CHorn IM IS2 0 IS2 1 Cbij CdHorn Eaff CHorn IS2 11 ID IV IL Cbij CdHorn Eaff CHorn IBF CHorn IE0 CHorn IS11 Cbij Eaff CHorn IS2 11 IL3 IL0 Cbij Eaff CHorn IS2 1 IL3 IL0 Cbij Eaff CHorn IS2 11 ID IL0 Cbij Eaff CHorn IS2 1 ID IL0 CdHorn IS01 CdHorn IS01 Cbij CdHorn Eaff IS2 0 IL1 IL3 Cbij CdHorn Eaff IS2 0 IL1 IL3 Cbij CdHorn Eaff IS2 0 ID IL1 Cbij CdHorn Eaff IS2 0 ID IL1 CdHorn CHorn IS01 IV IE0 CdHorn CHorn IS01 IS11 IV IE Cbij CdHorn Eaff CHorn IS2 11 IV IL Cbij CdHorn Eaff CHorn IM IS2 1 IL Cbij CdHorn Eaff CHorn IS2 11 ID IV IL Cbij CdHorn Eaff CHorn IBF 0 IS2 0 IS2 0 IS2 C1v IN C1v IN C1v IN C1v IN C1v IN C1v IN C0v IN C0v IN C0v IN cid2P 2 C CCNF IN CCNF IN CCNF IN CCNF IN CCNF IN CCNF IN CCNF IN2 II0 CCNF IN2 II0 CCNF IN2 II0 CCNF IN2 II0 CCNF IN2 II0 CCNF IN2 II0 CCNF IN2 II1 CCNF IN2 II1 CCNF IN2 II1 CCNF IN2 II1 CCNF IN2 II1 CCNF IN2 II1 CCNF IN CCNF IN CCNF IN CCNF IN CCNF IN CCNF IN G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1275 The exceptional constraint languages cid5 prove hardness ﬁrst proving ﬁnite constraint language cid5cid13 cid15cid5cid16 hard applying Lemma 22 LABDcid5M cid15cid5cid16 IS01 IS00 M POSLITS POSCLAUSES LABDcid5M cid15cid5cid16 IS01 IS00 IS11 IS10 M LITS CLAUSES NABDcid5M cid15cid5cid16 IS01 IS00 M POSLITS POSCLAUSES PABDcid5M cid15cid5cid16 IS11 IS10 M LITS CLAUSES VABDcid5M cid15cid5cid16 IS01 IS00 M POSLITS POSCLAUSES VABDcid5M cid15cid5cid16 IS01 IS00 IS11 IS10 M LITS CLAUSES These cases exceptional NPcomplete Proposition 63 obvious reductions cid5 replaced ﬁnite cid5cid13 cid5 problems P This languages include relations described clauses arbitrary length ﬁnite subsets allow express clauses bounded length Indeed contain binary clauses clauses polarity x1 xk So clauses resolved infer new clause binary clauses long clause binary case clause length greater k inferred As sidenote want remark literature computational problems restricted constraint lan guages notions tractability local global A problem constraint language cid5 said locally tractable problem tractable ﬁnite subset cid5 global tractability coincides tractability notion paper Thus ﬁrst noted Creignou 10 obvious discus sion notions global local tractability disagree abduction problem This highlights difference complexity abduction computational problems constraint language restrictions SATcid5 notions local global tractability coincide Coming completeness classiﬁcation tedious straightforward task thanks Posts clas siﬁcation check constraint languages cid5 restrictions hypotheses manifestations considered paper special cases treated results abduction problem cid5 P consequence cid5 cid15Ccid16 tractable clausal equational language C abduction problem cid5 NPcomplete coNPcomplete cid2P ﬁnite NPhard coNPhard cid2P language C NP coNP cid2P 2 complete consequence cid5cid13 cid15cid5cid16 2 hard constraint language cid5cid13 cid5 cid15Ccid16 clausal equational 2 Hence classiﬁcation complexity abduction constraint language cid5 combination restrictions hypotheses manifestations considered paper When comes clausal equational languages C reasoning similar First note ﬁnite clausalequational languages C covered discussion constraint languages This ab duction C complexity abduction cid5 cid5 C ﬁnite cid15cid5cid16 C This ﬁnite languages allow use simple lookup table translate different representations polynomial time Hence concentrate inﬁnite clausalequational languages C Now Lemma 22 lower bound complexity abduction ﬁnite constraint language cid5 carries inﬁnite clausal equational language C cid5 cid15Ccid16 Moreover inﬁnite clausal languages C corresponding exceptional cases dis cussed lower bounds proved reductions ﬁnite constraint languages proved NPhard Proposition 63 For inﬁnite clausal equational languages C consisting clauses equations exceptional cases discussed results paper abduction problem C P consequence C Ccid13 tractable clausal equational lan guage Ccid13 abduction problem C NPcomplete coNPcomplete cid2P 2 complete consequence cid5cid13 cid15Ccid16 2 hard constraint language cid5cid13 C Ccid13 clausal equational ﬁnite NPhard coNPhard cid2P language Ccid13 NP coNP cid2P 2 1276 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 The remaining problem upper bounds inﬁnite clausal equational languages C expressed equa tions clauses For example C Cneg x1 x2 x3 1 Posts classiﬁcation yields inﬁnite clausalequational languages C satisfy cid15Ccid16 cid15CCNFcid16 cid15C0vcid16 cid15C1vcid16 It easy verify trivial upper bounds hold abduction problems CCNF C0v C1v hold corresponding abduction problems C proofs Propositions 41 44 45 Hence results cover clausal equational language As mentioned authors program doublecheck completeness classi ﬁcation 14 Further restrictions As evoked Section 32 restrictions problem considered worth investi gating It turns affect complexity problem 141 Unsatisﬁable tautological manifestations The ﬁrst kind restrictions satisﬁability manifestations For instance typical applications abduction process explaining given observation world As consequence assume manifestations satisﬁable We ﬁrst straightforward result Proposition 74 Let P V H M KB instance abduction problem If M tautological P explanation KB satisﬁable If M unsatisﬁable P explanation Observe efﬁciently recognize unsatisﬁable tautological literals vacuously clauses terms Thus complexity abduction affected extra assumption manifestations nontautological satisﬁable deciding knowledge base satisﬁable hard abduction As CNFs tautological ones efﬁciently recognized unsatisﬁable ones Nevertheless turns complexity affected Proposition 75 LABDcid5CNFS polynomialtime reducible LABDcid5CNFS manifestation guaranteed satisﬁable The result holds VABD PABD NABD instead LABD Proof Let V H M KB instance LABDcid5CNFS Let new fresh variable new V let V cid13 V new M cid13 M new Clearly CNF M CNF M cid13cid13 M new computed efﬁciently distributing new clause M cid13cid13 satisﬁable We claim V cid13 H M cid13cid13 KB explanation V H M KB Indeed KB E satisﬁable entails M true M cid13cid13 Conversely KB E satisﬁable entails M new KB E M new unsatisﬁable Since new occur KB E M new satisﬁable KB E M unsatisﬁable KB E cid12 M cid2 142 Variables hypotheses manifestations Another interesting kind restrictions variables allowed occur set hypotheses manifestations In particular interesting consider cases variables occur knowledge base occur hypotheses manifestations This allows model situations knowledge base tells abduction problem hand First turns allowing extra variables set hypotheses affect com plexity abduction Proposition 76 Let cid5 constraint language let P V H M KB instance ABDcid5 Then explanation E P explanation E1 P E1 E VarsE1 VarsKB VarsM G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1277 cid2 Proof Let E explanation P let E1 E LitsVarsKB VarsM E2 E E1 Then clearly E2 cid12 M KB Since lefthand satisﬁable VarsE2 disjoint VarsKB VarsE1 VarsM cid2 E Now deﬁnition explanation KB E1 satisﬁable KB E1 cid2 cid2 cid2 E2 irrelevant entailment relation Thus E1 explanation cid2 As concerns variables occurring manifestations situation bit involved The following lemma relevant cases literals clauses terms complexity affected Indeed shows manifestations consider independently manifestation VarsKB computational overhead Proposition 77 Let cid5 constraint language let P V H M KB instance ABDcid5 If M M1 M2 VarsM1 VarsKB VarsM2 VarsKB explanation E P partition E E1 E2 E1 explanation V H M1 KB E2 cid12 M2 holds Dually M M1 M2 VarsM1 VarsKB VarsM2 VarsKB explanation E E2 cid12 M2 holds P partition E E1 E2 E1 explanation V H M1 KB cid2 cid2 cid2 cid2 cid2 Proof Consider M M1 M2 case M M1 M2 similar Let E explanation P let E1 E LitsVarsKB E2 E E1 Then deﬁnition explanation KB E2 cid12 M1 cid2 E1 VarsE2 E2 cid12 M2 In ﬁrst entailment relation VarsM1 VarsKB KB cid2 VarsKB E1 entails M1 KB E2 satisﬁable E1 explanation V H M1 KB Similarly E2 cid12 M2 holds cid2 second entailment relation KB E1 irrelevant E1 E1 hold lefthand satisﬁable E2 irrelevant KB E1 E1 cid2 cid2 cid2 cid2 cid2 We turn CNF manifestations The following lemma shows languages assume VarsM VarsKB affecting complexity abduction Proposition 78 Let cid5 constraint language cid5 cid3 IR2 R cid5 Then assume polynomial time reductions instance V H M KB ABDcid5 satisﬁes VarsM VarsKB 1 μcid13 Proof If cid5 cid3 IR2 R cid5 cid5 contains relation R nonempty nary equivalent term length n Then place 1 n tuples μ1 μi1 0 μi1 μn μcid13 n R Then assumption VarsM VarsKB enforced follows For variable x VarsM VarsKB add n 1 fresh variables newx1 newxn1 V add constraint Rnewx1 newxi1 x newxi newxn1 KB Write KBcid13 V cid13 resulting KB V By construc tion x unconstrained KBcid13 V cid13 H M KBcid13 explanation V H M KB cid2 i1 μcid13 i1 1 μcid13 The special case following class CNF formulas containing unit clauses equality relations VarsM VarsKB Proposition 79 LABDCunit RCNFS P instances V H M KB required satisfy VarsM VarsKB This holds known satisﬁability M Proof Obvious assumptions KB logically equivalent term deﬁnes complete assignment VarsM Thus decide assignment satisﬁes M cid2 15 Discussion We explain intuitive manner makes propositional abduction hard We focus Schaefer languages Horn dual Horn bijunctive afﬁne languages deduction CNFs tractable interesting ones reasoning knowledge representation Recall Proposition 35 abduction NP languages Thus explain makes NPcomplete We compare observations Bylander et als setcovering abduction 7 1278 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 We discuss meaningful cases ﬁrst clausal Schaefer languages Horn dual Horn bijunctive terms literals manifestations The cases brieﬂy discussed 151 Manifestations expressed terms Given restrictions abduction problem literal valid hypothesis resp individual manifes tation H resp M instance V H M KB problem For instance valid individual manifestations NABDCCNF POSTERMS positive literals Fact 80 Let C clausal Schaefer language assume restriction hypotheses restriction manifes tations POSTERMS NEGTERMS TERMS Then propositional abduction NPhard C stronger restrictions C express implication hypotheses individual manifestations cid3H cid3M valid hypothesis cid3H valid manifestation cid3M forbidden combinations hypotheses cid3H1 cid3H2 valid hypotheses cid3H1 cid3H2 For instance PABDCPOSTERMS NPhard exactly C express x1 x2 x1 x2 variables x1 x2 PABDCTERMS NPhard exactly PABDCPOSTERMS P ABDCNEGTERMS NPhard C express x1 x2 x1 x2 implication x1 x2 Importantly observe Fact 80 abduction NPhard unrestricted terms manifestations positive negative terms restriction hypotheses That arbitrary combinations polarities manifestation add complexity problem The holds hypotheses able explain unrestricted hypotheses sets hypotheses closed complement harder able explain positive negative hypotheses The validity Fact 80 proved generic reduction given Lemma 61 applied precise problem More intuitively idea NPhard cases literal m explained term gives rise possible explanations implication h m expressed knowledge base Thus m gives rise disjunction hypotheses manifestation M gives rise conjunction disjunctions CNF hypotheses Now knowledge base forbid combinations hypotheses second CNF excludes models ﬁrst explanations Since clauses ﬁrst CNF unbounded easily seen characterization explanations captures class hard satisﬁability problems As tractable cases implication hypotheses individual manifestations expressed explanation explanation term explanation literals Lemma 28 Now conjunction hypotheses forbidden search space reduced conjunction hypotheses Lemma 43 Importantly Fact 80 gives intuition complexity abduction classes formulas captured Schaefers framework constraint languages Consider instance class acyclic Horn CNFs Horn CNFs contain cyclic set clauses form x1 x2 x2 x3 xk x1 Clearly formula contain arbitrary number clauses equivalent h m h1 h2 variables h m h1 h2 Thus Fact 80 gives intuition explaining positive terms positive hypotheses NPhard knowledge base restricted acyclic Horn CNF This result shown Selman Levesque 48 Note formally state Fact 80 general classes formulas ability express given relation properly deﬁned Another important remark generic reduction satisﬁability problem variables positive negative literals occurring query hypotheses problems remains hard We come point comparing case manifestations expressed single literals conclusion 152 A parallel setcovering abduction In seminal paper 7 Bylander et al study complexity setcovering abduction identify frontier polynomial NPcomplete abduction problems G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1279 In framework abduction problem given set manifestations M set hypotheses H hypotheses manifestations atoms map e explains subsets H subsets M An explanation subset E H eE M E minimal inclusion The assumptions e size representation polynomial size H M tractable compute eE E H kind inverse e refer paper details Bylander et al study complexity abduction assumptions e Of direct relevance study following restrictions The problem said cid5 independent E H eE monotonic E Ecid13 H E Ecid13 eE eEcid13 incompatibility problem set I pairs elements H incompatible hypotheses hE eh E H h hcid13 I h hcid13 H eE Observe independent problems monotonic The notion independence adapted incompatibility hE eh soon h hcid13 I follows An incompatibility problem said independent eE h hcid13 E cid5 Proposition 81 See 7 The problem deciding explanation exists P independent abduction problems monotonic abduction problems It NPcomplete independent incompatibility problems Although framework different clear condition NPhardness Proposition 81 close Fact 80 Incompatible pairs hypotheses Bylander et als framework clearly correspond framework sets hypotheses E consistent knowledge base KB E unsatisﬁable3 Now study abduction classical propositional logic consequence relation cid12 monotonic abduction problems monotonic Thus leaving details abduction problems incompatibility monotonic problems terms 7 e represented intension knowledge base KB It easily seen independent incompatibility problem transformed problem framework cid2 With correspondence mind clear Fact 80 conﬁrms Bylander et als results Indeed condition NPhardness Proposition 81 states abduction hard combinations hypotheses forbidden expressiveness implication hypotheses manifestations implicit framework tractable assumption Thus observation terms manifestations seen generalizing Bylander et als complex interactions hypotheses hypotheses manifestations 153 Manifestations expressed literals The condition manifestations expressed literals bit involved terms intu itively seen condition allowing capture complexity conjunctive manifestations allows express m1 mk m Call submanifestation literal hypothesis manifestation intuitively mi s previous implication Given polarity restriction positive negative literal submanifestation said valid satisﬁes restriction Fact 82 Let C clausal Schaefer language assume restriction hypotheses restriction manifes tations POSLITS NEGLITS LITS Then propositional abduction NPhard C stronger restrictions polarity restriction submanifestations C express implication hypotheses individual submanifestations cid3H cid3S valid hypothesis cid3H valid submanifestation cid3S 3 As observed 7 considering incompatible pairs triples instead pairs affect complexity results 1280 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 implication arbitrary conjunctions submanifestations individual manifestations cid3S1 cid3Sk cid3M k N k valid submanifestations cid3S1 cid3Sk forbidden combinations hypotheses cid3H1 cid3H2 valid hypotheses cid3H1 cid3H2 For instance NABDCPOSLITS NPhard cases C express implication hypothe ses individual negative submanifestations x1 x2 implication arbitrary conjunctions submanifes tations manifestations x1 xn xn1 n forbidden conjunctions hypotheses x1 x2 Observe general depending restriction submanifestations different expres siveness conditions restrictions hypotheses manifestations Nevertheless case terms manifestations seen Fact 82 allowing arbitrary combinations polarities hypotheses makes problem harder allowing positive negative sets hypotheses corresponding statement manifestations obvious The proof observation derived Lemmata 61 29 Intuitively intermediate layer serves generate conjunctions intermediate hypotheses needed explain manifestation implication y1 yn m yi s submanifestations Thus manifestation explained disjunction conjunctions submanifestations seen term explained hypotheses Thus provided arbitrarily long conjunctions submanifestations entail manifestation complexity case term An important difference manifestations expressed terms general NPhardness arises termediate set literals expressed literals hypothesized observed For instance explains complexity explaining single literals Horn CNFs falls NPcomplete polynomial variables manifestation hypotheses shown Selman Levesque 48 This conﬁrms intuition selecting right set literals computational core abduction Nevertheless intuition conﬁrmed far literals considered manifestations Indeed seen case manifestations expressed terms Finally like terms characterization gives intuition complexity abduction classes formulas captured Schaefers framework Consider instance class monotone CNF formulas formulas variable occurs negated unnegated A variable occurs polarity submanifestation abduction problem like Fact 82 occur right implications coming hypotheses layer unnegated left implications going manifestation layer negated Thus variables monotone intermediate layer abduction tractable We recover intuition wellknown result 37 Section 42 154 Manifestations expressed clauses CNFs We able explain posteriori observe complexity abduction problem positive clauses positive literals manifestations To aim ﬁrst observe naturally problem hard literals clauses Now concerning tractable cases use condition exhibited literals Indeed condition states abduction tractable literals 1 knowledge bases express twolayers set implications hypotheses literals arbitrary combinations manifestation 2 conjunction hypotheses forbidden It easily seen Condition 2 literals clauses terms considered manifestations Now Condition 1 true literals true clauses literals special case clauses We deduce tractability exactly literals Let mention noted example Eiter Makino 23 Section 52 generic polynomialtime reduction clausal manifestations singleliteral manifestations The idea M cid31 cid3k replaced literal cid3 fresh variable adding constraints cid3i cid3 1 k G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1281 knowledge base This reduction covers cases fails explain instance PABDC1vHornCLAUSES complexity PABDC1vHornLITS Indeed added constraints preserve C1vHorn general Similarly case clauses vs literals observe far clausal Schaefer language concerned complexity abduction manifestations expressed CNFs manifestations expressed terms The case afﬁne knowledge bases different problems harder CNFs terms Nevertheless elaborate point hardness CNF manifestations simply comes deciding manifestation satisﬁable 155 Afﬁne knowledge bases The case equational instead clausal languages bit involved follows reasoning We sketch idea equational languages interesting CNF ones knowledge representation purposes The main difference clausal case implications directly expressed Indeed instance h m prime implicate afﬁne knowledge base m h In words case knowledge base entails h m It follows knowledge base entails h1 m h2 m fact entails h1 m h2 m ﬁnally explanation m satisfy h1 h2 In general makes problem easier The hard cases arise implication simulated imposing polarities hypotheses instance proof Proposition 68 This explains complexity equational languages changes VABD LABD contrary clausal languages 156 A note NPcomplete coNPcomplete cases As seen results presented previous sections turns restrictions knowledge bases yield NPcomplete problems yield coNPcomplete problems This strange ﬁrst sight deserves explanation In particular aware previous results literature coNP complete propositional abduction problems identiﬁed 2 NPNP equivalently NPNPcoNP Recall cid2P Essentially sources complexity general cid2P 2 complete abduction problem ﬁnding right candidate explanation E nondeterminism represented basis exponential NPNPcoNP checking cid2 witness KB E cid12 M represented exponent E satisﬁable KB cid2 That restrictions hypotheses manifestations knowledge bases abduction problem yield NPcomplete problems surprising These NPcomplete cases occur checking candidate ex planation polynomial problem case Schaefer languages Proposition 35 satisﬁability problem set clauses reduced ﬁnding right candidate explanation illustrated Lemma 61 The surprising coNPcomplete cases occur checking candidate explanation coNPcomplete candidate explanation needs considered removing nondeterminism source complexity sense basis exponential Observe paper candidate explanation needs considered result KB H trivially satisﬁable example case PABDC1v M cid2 16 Conclusion future work We presented thorough study complexity deciding explanation propo sitional abduction problem restrictions hypotheses manifestations We derived complexity possible local restriction knowledge bases problem Boolean constraint language clausal equational language assumptions constraints knowledge base given extension implicitly CNFs systems equations respectively In particular covers classical classes CNF formulas deﬁned local properties commonly considered knowledge representation purposes Moreover shown problem tractable complete NP coNP cid2P 2 1282 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 In order obtain results wellknown techniques obtaining tractability prime implicate generation projection We uncovered new tractable cases But exhibited new conditions intractability turn weak observed 40 Importantly study allows precisely explain makes propositional abduction hard knowledge base Schaefer language Several points interesting need variables hypothesized observed making task explaining literal hard contrary case term It turns conditions intractability abduction weak interesting class problems tractable In fact classes explanation conﬂicting hypotheses tractable This conﬁrms need designing algorithms efﬁcient practice Not surprisingly conditions intractability conﬁrm results observations Bylander et al different framework 7 We argued explanation hardness abduction gives hints complexity problems ﬁt framework We demonstrated argument nonlocal structural propositional restrictions conjecture apply completely different frameworks abduction nonclassical sequence relations abduction logic programming Propositional abduction turns rich problem computational complexity perspective By imposing syntactic restrictions problem complexity classes covered Thus results serve source results allowing derive complexity problems As matter fact wellknown restrictions nonmonotonic reasoning problems reduce As example classiﬁcation abduction negative hypotheses positive terms manifestations gives complexity circumscriptive inference negative clauses far clausal languages restrict knowledge base Indeed known 40 Proposition 11 negative clause follows knowledge base circumscription negation explained negative variables hypotheses clause Thus complement circumscriptive inference negative clauses hard abduction positive terms negative hypotheses Now discuss Section 151 classiﬁcation Schaefer clausal languages preserved assumption variables manifestation abducible Thus provided KB CNF subject restriction clauses deciding negative clause follows knowledge base KB circumscription variables polynomialtime solvable KB restricted Horn 0valid coNPcomplete KB restricted 2CNF dual Horn cid6P 2 complete We believe results derive results similar fashion We wish note paper studied decision problem associated abduction leaving search problem That considered complexity computing explanation instead deciding However obviously search problem hard soon decision easily seen results constructive converse true Importantly true searching minimal explanations tractability abduction entails tractability satisﬁability considering unsatisﬁable manifestation deduction considering set hypotheses turn minimizing explanation greedy algorithm To conclude interesting extend work directions First problems related abduction importance instance deciding hypothesis relevant preferred explanation necessary 20 enumerating explanations 23 counting number preferred explanations 27 Our work provides results serve basis studying complexity problems particular deriving hard cases Moreover interesting understand exactly makes problems easy hard Another important direction propositional setting Schaefers framework As mentioned believe observations reasons intractability explain results framework In particular interesting study complexity abduction nonlocal restrictions knowledge bases like Eshghi 24 del Val 15 highercardinality domains G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 1283 References 1 B Aspvall M Plass R Tarjan A lineartime algorithm testing truth certain quantiﬁed Boolean formulas Information Processing Letters 8 3 1979 121123 2 E Böhler N Creignou S Reith H Vollmer Playing Boolean blocks I Posts lattice applications complexity theory ACM SIGACTNewsletter 34 4 2003 3852 3 E Böhler N Creignou S Reith H Vollmer Playing Boolean blocks II Constraint satisfaction problems ACM SIGACT Newsletter 35 1 2004 2235 4 E Böhler H Schnoor S Reith H Vollmer Bases Boolean coclones Information Processing Letters 96 2 2005 5966 5 G Brewka J Dix K Konolige Nonmonotonic Reasoning An Overview CSLI 1997 6 J Buchler Ed Philosophical Writings Peirce Dover Publications New York 1955 7 T Bylander D Allemang M Tanner J Josephson The computational complexity abduction Artiﬁcial Intelligence 49 1991 2560 8 M Cadoli F Donini P Liberatore M Schaerf Preprocessing intractable problems Information Computation 176 2002 89120 9 P Chapdelaine M Hermann I Schnoor Complexity default logic generalized conjunctive queries Proc 9th International Conference Logic Programming Nonmonotonic Reasoning LPNMR07 2007 pp 5870 10 N Creignou Personal communication 2006 11 N Creignou P Kolaitis B Zanuttini Preferred representations Boolean relations Technical Report 119 Electronic Colloquium Com putational Complexity ECCC 2005 12 N Creignou B Zanuttini A complete classiﬁcation complexity propositional abduction SIAM Journal Computing 36 1 2006 207229 13 J Kleer An assumptionbased TMS Artiﬁcial Intelligence 28 1986 127162 14 A del Val A new method consequence ﬁnding compilation restricted languages Proc 16th National Conference Artiﬁcial Intelligence AAAI99 AAAI Press 1999 pp 259264 15 A del Val The complexity restricted consequence ﬁnding abduction Proc 17th National Conference Artiﬁcial Intelligence AAAI00 AAAI PressMIT Press 2000 pp 337342 16 A del Val On tractable classes deduction abduction Artiﬁcial Intelligence 116 12 2000 297313 17 W Dowling J Gallier Lineartime algorithms testing satisﬁability propositional Horn formulae Journal Logic Programming 3 1984 267284 18 A Durand M Hermann The inference problem propositional circumscription afﬁne formulas coNPcomplete Proc 20th Annual Symposium Theoretical Aspects Computer Science STACS03 Lecture Notes Computer Science vol 2607 SpringerVerlag 2003 pp 451462 19 U Egly T Eiter H Tompits S Woltran Solving advanced reasoning tasks quantiﬁed boolean formulas Proc 17th National Conference Artiﬁcial Intelligence AAAI00 AAAI Press 2000 pp 417422 20 T Eiter G Gottlob The complexity logicbased abduction Journal ACM 42 1 1995 342 21 T Eiter G Gottlob N Leone Abduction logic programs Semantics complexity Theoretical Computer Science 189 1997 129 177 22 T Eiter G Gottlob N Leone Semantics complexity abduction default theories Artiﬁcial Intelligence 90 1997 177223 23 T Eiter K Makino On computing abductive explanations propositional Horn theory Journal ACM 54 5 2007 24 K Eshghi A tractable class abduction problems Proc 13th International Joint Conference Artiﬁcial Intelligence IJCAI93 Morgan Kaufmann 1993 pp 38 25 T Feder MY Vardi The computational structure monotone monadic SNP constraint satisfaction A study datalog group theory SIAM Journal Computing 28 1 1998 57104 26 D Geiger Closed systems functions predicates Paciﬁc Journal Mathematics 27 1 1968 95100 27 M Hermann R Pichler Counting complexity propositional abduction Proc 20th International Joint Conference Artiﬁcial Intelli gence IJCAI07 2007 pp 417422 28 A Herzig J Lang P Marquis Planning abduction IJCAI01 Workshop Planning Uncertainty 2001 29 J Hobbs M Stickel D Appelt P Martin Interpretation abduction Artiﬁcial Intelligence 63 1993 69142 30 T Horiyama T Ibaraki Reasoning ordered binary decision diagrams Discrete Applied Mathematics 142 13 2004 151163 31 H Kautz M Kearns B Selman Horn approximations empirical data Artiﬁcial Intelligence 74 1995 129145 32 R Khardon D Roth Reasoning models Artiﬁcial Intelligence 87 1996 187213 33 R Ladner On structure polynomial time reducibility Journal ACM 22 1975 155171 34 J Lang P Liberatore P Marquis Propositional independenceformulavariable independence forgetting Journal Artiﬁcial Intelli gence Research 18 2003 391443 35 P Liberatore M Schaerf Compilability propositional abduction ACM Transactions Computational Logic 8 1 2007 36 F Lin JH You Abduction logic programming A new deﬁnition abductive procedure based rewriting Artiﬁcial Intelligence 140 2002 175205 37 P Marquis Consequence ﬁnding algorithms Handbook Defeasible Reasoning Uncertainty Management Systems DRUMS vol 5 Kluwer Academic 2000 pp 41145 38 C Morgan Hypothesis generation machine Artiﬁcial Intelligence 2 1971 179187 39 G Nordh A trichotomy complexity propositional circumscription Proc 11th International Conference Logic Programming Artiﬁcial Intelligence Reasoning LPAR04 2005 pp 257269 40 G Nordh B Zanuttini Propositional abduction hard Proc 19th International Joint Conference Artiﬁcial Intelligence IJCAI05 2005 pp 534539 1284 G Nordh B Zanuttini Artiﬁcial Intelligence 172 2008 12451284 41 H Pople On mechanization abductive logic Proc 3rd International Joint Conference Artiﬁcial Intelligence IJCAI73 1973 pp 147152 42 E Post The twovalued iterative systems mathematical logic Annals Mathematical Studies 5 1941 1122 43 R Pöschel L Kaluznin Funktionen und Relationenalgebren DVW Berlin 1979 44 WV Quine On cores prime implicants truth functions American Mathematical Monthly 66 1959 755760 45 R Reiter J Kleer Foundations assumptionbased truth maintenance systems preliminary report Proc 6th National Conference Artiﬁcial Intelligence AAAI87 AAAI PressMIT Press 1987 pp 183188 46 T Schaefer The complexity satisﬁability problems Proc 10th Annual ACM Symposium Theory Computing STOC78 ACM Press 1978 pp 216226 47 B Selman H Kautz Knowledge compilation theory approximation Journal ACM 43 2 1996 193224 48 B Selman H Levesque Abductive default reasoning computational core Proc 8th National Conference Artiﬁcial Intelligence AAAI90 AAAI Press 1990 pp 343348 49 L Simon A del Val Efﬁcient consequence ﬁnding Proc 17th International Joint Conference Artiﬁcial Intelligence IJCAI01 Morgan Kaufman 2001 pp 359365 50 B Zanuttini Approximation relations propositional formulas complexity semantics Proc 5th Symposium Abstraction Reformulation Approximation SARA02 Lecture Notes Artiﬁcial Intelligence vol 2371 SpringerVerlag 2002 pp 242255 51 B Zanuttini New polynomial classes logicbased abduction Journal Artiﬁcial Intelligence Research 19 2003 110