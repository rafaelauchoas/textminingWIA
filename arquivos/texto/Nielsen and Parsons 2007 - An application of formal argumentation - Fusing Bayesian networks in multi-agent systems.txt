Artiﬁcial Intelligence 171 2007 754775 wwwelseviercomlocateartint An application formal argumentation Fusing Bayesian networks multiagent systems Søren Holbech Nielsen Simon Parsons b Department Computer Science Aalborg University Aalborg Denmark b Department Computer Information Science Brooklyn College City University New York Brooklyn 11210 NY USA Received 19 October 2006 received revised form 28 March 2007 accepted 16 April 2007 Available online 29 April 2007 Abstract We consider multiagent agent equipped Bayesian network present open framework agents agree possible consensus network The framework builds formal argumentation unlike previous solutions graphical consensus belief sufﬁciently general allow wide range possible agreements identiﬁed 2007 Elsevier BV All rights reserved Keywords Argument agent systems Argumentation frameworks Application Bayesian networks 1 Introduction Lately research distributed systems intensiﬁed spurred increased availability sophisticated electronic devices cheap networking equipment Within ﬁeld crossover area multiagent systems MAS incorporates parts artiﬁcial intelligence research heavily researched device modeled autonomous agent capable acting environment reﬂecting observations surroundings communicating agents To implement reﬂective capabilities modelbased agent architecture employed agent carries formal model surroundings acts mathematical inferences drawn model Hence accurate model successful agent achieving objectives Therefore beneﬁcial agent update model observations agents surrounding indicate model inaccurate ii communicate agents models alter model reﬂect model aspects common models agents In text investigate Bayesian networks BNs internal models multiagent set ting speciﬁcally ii implemented help argumentation theory Previously methodologies mainly studied view incorporating efﬁciency precision BNs argumentation theory 24 exercise converting models theory models 27 30 Here instead try exploit strong points reasoning methods BNs constitute com Corresponding author Email addresses soerenholbechgmailcom SH Nielsen parsonsscibrooklyncunyedu S Parsons 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200704005 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 755 pact elegant mathematically correct framework drawing diagnostic causal inferences observations hypothesis variables face noisy observations constructed altered automatically observation data good choices internal models Argumentation theory hand provides methodology transparently extracting consistent truth set conﬂicting andor overlapping views furthermore strong roots dialectics makes distributed agentoriented implementations natural Playing strengths envision MAS cooperating agents agent BN model domain situated aim providing framework built principles formal argumentation theory agents starting individual domain models end agreeing single network representing joint domain knowledge The task fusing BNs compromise BN previously addressed priori speciﬁed view constitutes compromise 410142123 apparent consensus goal network fusion authors mainly considered centralized operation Matzkevich Abramson 14 disregard strength independency statements input networks seek obtain graph contains arcs input networks reverses Sagrado Moral 4 similarly disregard quantitative parts input networks gives rules constructing graphs imply independency statements implied input BNs independency statements implied input BNs Richardson Domingos 23 disregard quantitative parts input networks construct prior distribution graph structures input BNs This prior basis standard greedy search based separate database Finally Pennock Wellman 21 derive series impossibility results general problem combining probability distributions Il Chajewska 10 uses results 21 adapt standard greedy search score functions use input BNs database basis The differing objectives papers stems differences interpretations BNs They seen specifying ﬂow information specifying independencies variables representing expert experience summarizing data In paper commit speciﬁc compromise objective Rather establish general framework kind compromise reached exact nature speciﬁed compromise score function possibly heuristic walking search trees The advantages approach include general purpose argumentation engine implemented reused contexts different deﬁnitions compromise efﬁcient distributed implementations natural cases agents agree priori little information need shared agents anytime compromises achieved The text structured follows In Section 2 brieﬂy cover methodology need In particular need concepts graph theory main theory BNs equivalence classes ﬁnally theory argumentation framework Following Section 3 specify problem wish solve formally present strategy The actual results follow First Section 4 describes encode BNs framework Then Section 5 presents formal argumentation preferred extensions correspond proper BNs Section 6 contains debating guidelines followed agents We end discussion results Section 7 2 Preliminaries Before proceed theory needed results later paper brieﬂy clarify notation general rule sets printed boldface type S paV individual entities printed plain letters A xi data structures printed calligraphic letters G A general classes printed gothic type C By convention use mean deﬁned deﬁned decline use listing singleton sets The material necessarily heavy deﬁnitions help reader refer term emphasized deﬁned 21 Graphs Here brieﬂy introduce terms graph theory notation remainder text For elaboration concepts introduced 13 A graph pair G X E X ﬁnite set nodes graph E X X X X X X set ordered pairs called edges graph For nodes X Y X Y Y X E 756 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 Fig 1 A simple graph undirected link link X Y neighbors If X Y E arc X Y X parent Y Y child X The set parents node X denoted paX If X neighbor parent child Y X Y adjacent A triple nodes X Y Z said constitute vstructure Y child X Z X Z adjacent When depicting graph use circles nodes lines links arrows arcs shown Fig 1 From ﬁgure seen paC G C neighbor B D C children A B F vstructure graph For nodes X1 Xk path X1 Xk X1 Xk E distinct nodes X2 Xk1 different X1 Xk Xi1 Xi E 2 cid2 cid2 k We denote path X1 Xk length k 1 If edges X Y path Y X E path directed undirected A path X Y X Y node cycle Given cycle X1 Xk1 X1 length k cid3 4 cycle chord pair nodes Xi Xj j cid3 2 Xi Xj pair X1 Xk1 Xi Xj adjacent A cycle length k cid3 4 chord called chordless If directed path node X node Y Y descendant X The set descendants X denoted descX If nodes X Y set Y X node Y undirected path X Y holds set Z Y Y chain component For examples consider graph Fig 1 There cycles graph descA B C D E F H B C D H chain component Given graph G X E introduce auxiliary deﬁnitions Let Y X GY Y E Y Y subgraph induced Y If edges G arcs G directed If edges links G undirected A graph directed undirected partially directed graph An undirected graph containing chordless cycles called decomposable A graph directed cycles called chain graph A directed chain graph called acyclic directed graph traditionally abbreviated DAG The graph Gu X X Y X Y E Y X E obtained replacing arc G link called skeleton G 22 Bayesian networks A Bayesian network BN set discrete1 domain variables V pair G cid2 G V E DAG cid2 set conditional probability distributions cid2 P cid4 cid3 V paV cid2 V V cid5 In sequel assume V ﬁxed implicitly constitute basis nodes graphs For information BNs general 11 A BN provides probabilistic model P domain V conﬁguration v v1 vn V P v cid6 P cid2 cid3 Vi vi paVi vpaVi cid4 vpaVi denoting entries conﬁguration v corresponds variables set paVi For BN limitations P imposed structure G summarized set independence constraints cid2 V V cid3 descV paV V cid4 paV V V cid5 1 Discrete meaning variable ﬁnite number states Other equivalent terms include cardinal ordinal SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 757 notation X Y Z disjoint sets variables X Y Z means variables X probabilistically conditionally independent Y given Z P X Y Z P XZ P Y Z P Z 0 In words set probability models associated DAG constitute BN need obey independence constraints dictated structure 20 Two distinct DAGs rise independence constraints seen graphs Figs 2a 2b They imply independence statements A C B C A B respectively commutativity standard multiplication We deﬁne equivalence relation DAGs G H equivalent iff independence constraints implied G exactly implied H This leads important observation structure BNs need determined situations independencies parts need consideration DAGs correct answers Therefore identifying single DAG equivalence class containing waste effort maybe impossible independence information available Hence fruitful consider equivalence classes DAGs Verma Pearl 26 showed DAGs imply independence constraints iff contain vstructures skeleton Thanks result represent equivalence class DAG G graph having skeleton G vstructures edges participating deﬁning vstructure undirected links Clearly graph uniquely determined following Verma Pearl 26 shall pattern equivalence class As example pattern equivalence class DAG Fig 3a shown Fig 3b Once pattern determined DAG members equivalence class constructed exchanging links arcs possible ways constraints 1 resulting graphs contains directed cycles 2 vstructures pattern emerge These constraints cause arcs replacing links pattern orientation resulting DAGs matter order direction links converted For instance link C E pattern Fig 3b exchanged arc going E C create new vstructure E C F Hence exchanged arc C E DAGs created pattern The arcs arising replacing links arcs participating deﬁning vstructures pattern collectively compelled arcs The graph results replacing links compelled arcs possible called completed pattern Notice deﬁnition graph necessarily unique equivalence class The completed pattern DAG Fig 3b shown Fig 4a Fig 2 Two BNs independence properties Fig 3 A graph b pattern Fig 4 The completed pattern graph Fig 3 graph consistent extension 758 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 Now consider graph Fig 4b No matter try exchange links graph arcs end creating directed cycle vstructure present original graph Thus graph pattern equivalence class DAGs result extending pattern respecting Constraints 1 2 dealing classes graphs Those graphs turned DAG exchanging links arcs respecting Constraints 1 2 admit consistent extension admit consistent extension terminology originally introduced Chickering 3 We denote class graphs admitting consistent extension C As DAG consistent extension follows DAG G V E member C Furthermore pattern Gp V Ep G necessarily member C graph Gcid10 V Ecid10 E Ecid10 Ep including completed pattern G We shall distinguish completed patterns members C Ccp C class graphs completed patterns DAG Unfortunately unaware simple characterization members C That potentially trying possible directions undirected links hope obtaining consistent extension simple computa tionally intensive procedure calling lot tracking requires global investigation graph series local investigations However Andersson et al 1 provide following result members Ccp Theorem 1 A graph G member Ccp iff 1 G chain graph 2 GC decomposable chain components C G 3 X parent Y Z neighbor Y X Z adjacent conﬁguration Fig 5a exist subgraph G 4 arc G strongly protected deﬁned An arc node X node Y graph G strongly protected node Z parent X adjacent Y Fig 5b node Z parent Y adjacent X Fig 5c node Z parent Y child X Fig 5d nonadjacent nodes Z W Z W parents Y neighbors X Fig 5e The bullets theorem pretty intuitive justiﬁcations In short items 1 2 3 ensure compelled arcs arcs item 4 ensures compelled arcs arcs In particular item 1 calls graph chain graph reasonable graph fully directed cycle extended DAG graph directed cycle containing undirected links extended DAG creating new vstructure cycle length 3 case arcs participating cycle strongly protected forbidden item 4 Item 2 reasonable graph chordless undirected cycle extended DAG creating new vstructure A graph failing satisfy item 3 extended DAG creating new vstructure undirected link Y Z directed away Y But arc compelled arc graph completed pattern Fig 5 Conﬁgurations described Theorem 1 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 759 As item 4 consider arc completed pattern holds deﬁnition arc reversed changing set vstructures introducing directed cycle Going case deﬁnition strongly protected easy changing direction arcs result cycle new vstructure destruction vstructure Clearly items 3 4 easily checked locally items 1 2 checked backtracking Hence Theorem 1 provides efﬁcient means identifying members Ccp exactly graphs structure BN needs identiﬁed 23 Argumentation systems Argumentation relatively new approach extracting consistent knowledge possibly inconsistent knowl edge base possibly respecting assumptions relative epistemological worth statements knowledge base The approach seen alternative formal nonmonotonic defeasible logics As research area argumentation systems fairly new single methodology stand main approach lot problems solved However argumentation approach shows great potential general purpose reasoning mechanism use Due lack established framework analysis argument systems necessary pick large pool 812222529 The framework picked purpose framework 19 generalizes 7 abstract framework leaves underlying language reasoning unspeciﬁed An argumentation pair A A cid12 A set arguments cid12 2A A attack relation2 The exact nature argument left unspeciﬁed examples built language akin propositional logic The sun shining raining I saw pigeon yesterday raining It raining For sets arguments S A Scid10 S argument A Scid10 cid12 A S said attack A A said attacked S If proper subset Scid10 attacks A Scid10 called minimal attack A An example attack intuitively sense The sun shiningcid12It raining A semantics argumentation framework deﬁnition arguments framework accepted rational individual 7 19 work wide range semantics introduce need First deﬁne set arguments S A conﬂictfree argument A S S attacks A Intuitively claiming conﬂictfree set arguments beliefs implies contradicting We deﬁne single argument A acceptable respect set arguments S set arguments T A T cid12 A argument B T S attacks B In case S defends A A conﬂictfree set S arguments S acceptable respect S called admissible Thus claiming admissible set arguments beliefs means defend beliefs possible counter arguments A skeptical attitude arguments captured semantics called grounded extension The grounded extension argumentation framework ﬁxpoint function F 2A 2A deﬁned F S A A A acceptable wrt S Thus grounded extension consists arguments counter arguments arguments defend defended arguments A skeptical semantics preferred 2 Traditionally attack relations primarily deﬁned subsets A A The generalized notion use renders language argumentation proofs follow elegant general reasons preferring deﬁnition See 19 17 dialectical computational reasons 760 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 extension admissible set maximal respect set inclusion Finally admissible set S said stable extension attacks arguments A S Clearly stable extension preferred extension In general hard compute preferred extension 5 Doutre Mengin 6 present method enu merates preferred extensions abstract argumentation presented 7 Furthermore Vreeswijk Prakken 28 Cayrol et al 2 present methods answering speciﬁc argument preferred extension preferred extensions special case preferred extension argumentation stable In 18 adapted technique 6 problem enumerating preferred extensions argumentation systems sets arguments attack arguments We present essentials technique refer interested reader 18 details Given argumentation A A cid12 deﬁne Acandidate triple C I O U A I U I O argument attacked I O argument A exists S I B I S A cid12 B O Given Acandidate C I O U argument A U triples C A I A OA U A A I A OA C A I A OA U A A I A OA given I A I OA O A I A I A OA O cid3CA cid3CA cid2 B U S I C I st S A cid12 B S B cid12 A cid5 S A B cid12 C S A B cid12 A If A participate minimal attack case arguments argumentation construct paper C A C A Acandidates construct candidate trees node Acandidate Each Acandidate C children C A C A arbitrary chosen A U candidates U act leaves tree A candidate tree having candidate C root called Ctree It proven S preferred extension A leaf C I O Atree I S Conversely leaf Atree I defends I admissible It follows constructing arbitrary Atree preferred extensions enumerated Nielsen Parsons 18 number pruning rules candidate trees These construction cut branches contain leaves preferred extensions 3 Compromising Bayesian networks The problem addressing arises MAS containing ﬁnite number cooperating agents We assume ordering agents exists refer integers Each agent BN Bi common set domain variables V assume implicit remainder text For ease exposition furthermore assume arbitrary ﬁxed total ordering cid2 variables known agents priori At point agents 1 k decide pool knowledge represented B1 Bk new BN B compromise BN Facilitating task problem addressed We expect B1 Bk large somewhat similar relationships variables having agent communicate entire model agent inefﬁcient We shall focus solely graphical structure B allow nonstructural aspects act guidelines construction structure Therefore outcome debate DAG B pattern completed pattern These equivalent However example shows entirely true SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 761 Fig 6 Three BNs different compromise graphs Fig 7 Three completed patterns partial compromises Example 2 Agreeing compromise BN Consider agents BNs B1 B2 B3 portrayed Figs 6a 6c If compromise constructed simple majority voting possible connections pair nodes result structure Fig 6d If patterns B1 B3 instead BN structure Fig 6e obtained For completed patterns result Fig 6f As seen evaluating feature isolation leads vastly different results starting points This suggests simple approach problematic ruled settle representation We chose route simple characterization combination methodologies guarantee equivalent results obtained There little epistemological justiﬁcation choosing compromise graph mostall learning algorithms unable differentiate graphs belonging equivalence class compromising DAG involve compromising Therefore choose agents compromise pattern completed pattern Unfortunately unaware simple characterization graphs patterns choose completed patterns necessity In summary shall aim having agents compromise completed pattern G Ccp B To establish graph good compromise agents need measure graphs match B1 Bk Furthermore plan build compromise gradually wish measure relative agreed partial compromise The need clear following example Example 3 The need partial compromises Consider setting Example 2 refer completed patterns B1 B3 Figs 7a 7c It case agents agreed connections 762 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 graph Fig 7d Agent 2 asked evaluate compromise link added A C Obviously addition consistent Agent 2s beliefs valued highly Consider situation agents agreed connections Fig 7e Agent 2 asked evaluate addition link A C Now addition important connection A C directed C avoid directed cycle create vstructure A C E present B2 Moreover A C connected albeit D E relationship sufﬁciently represented connection In general assume partially speciﬁed graph suitable representation partial compromise include agreements ﬁnal compromise To address need opting general solution possible shall partial compromise P P P sets sentences language P aspects true ﬁnal compromise P aspects true For partial compromises P P P b P P assume agent compute compromise scores siP P siP P b siP P siP P b iff P describes Bi better P b given P accepted descriptive Bi We assume si additive partial compromises P 0 P 1 P 2 P 0 P 2 case siP 0 P 2 siP 0 P 1 siP 1 P 2 P P b P P b P P P 0 P 1 P 1 P 2 P b sentences P Example 4 Compromise scoring functions Consider partial compromises P P P b example s2P P b number features described P b Speciﬁcally s2P P b equal 1 P b represent graphs Figs 7d 7e respectively A simple consistent B2 minus P b P P A complex score weigh described features according empirical evidence Agent 2 favor We Agent 2 employing sensor measuring E variable sensor known poor quality Therefore s2P P b equal 03 indication addition arc Agent 2s observations observations easily ﬂawed Yet score account ramiﬁcations sentences P b For instance addition arc E C odds Agent 2s observations addition forces idea link A C accept existence vstructure A C E strong evidence foragainst Therefore s2P P b 10 Of course challenge Agent 2 actually able survey impact sentences P b P P Had P included agreement connection A C previous example compromise score low dreaded consequence addition arc E C consequence P On hand agreement ﬁrst examples scores lower 2 ﬁrst P b 03 depending Agent 2s evidence second P Notice open deﬁnition attempt deﬁne means better description believe issue dependent actual setting framework stated Section 1 In addition compromise score assume agents know combination function c Rk R indicating trust individual agents models Differences trust justiﬁed differences experiences sensor accuracies Formally deﬁne c follows Let P P P b partial compromises c combination function agents k cid3 cid4 s1P P skP P c cid4 cid3 s1P P b skP P b c P better compromise P b group agents 1 k given agreed P An obvious choice c linear combination inputs fact shall assume case text We refer cs1P P skP P joint compromise score P given P SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 763 With notation place restate task formally ﬁnding partial compromise P uniquely identiﬁes graph G Ccp cid3 s1 cid3 P cid3 P cid10 partial compromises P cid10 uniquely identiﬁes graph Gcid10 C cid3 P cid10 cid3 P cid4 sk cid4 sk cid3 s1 cid3 c cid4cid4 c cid4cid4 As presented clear problem simple binary nature trying establish proposition true furthermore dealing setting agents interact Consequently utilize vast literature dialectic proof theories directly Rather problem trying solve distributed maximization super exponential hypothesis space C Furthermore worth partial compromises speciﬁed relation agreed compromises problem highly dynamic nature Our solution problems divided parts First create ﬁnite language graphs essential properties expressed second importantly construct argumentation agents reason consequences committing partial compromises thirdly create agora agents reach compromise graphs anytime fashion 4 Encoding graphs For agents compromise G formal language L expressing graphs properties graphs deﬁned For efﬁciency aim language simple possible ensuring sufﬁciently powerful graph membership status Ccp By simple mean preferably ﬁnite small possible First introduce simple language Lg encoding graphs Deﬁnition 5 Simple graph language The language Lg set ArcXY ArcYX LinkXY NonAdjacentXY members Lg iff X Y X cid2 Y distinct variables A graph knowledge base deﬁne set cid4g Lg Further Deﬁnition 6 Consistent closed graph knowledgebases Given graph knowledge base cid4g holds pairs variables X Y X cid2 Y maximum ArcXY ArcYX LinkXY NonAdjacentXY cid4g cid4g consistent graph knowledgebase CGK Furthermore holds variables X Y X cid2 Y exactly ArcXY ArcYX LinkXY NonAdjacentXY cid4g cid4g closed graph knowledgebase CLGK The graph encoded CGK cid4g graph Gcid4g resulting starting graph edges nodes X Y X cid2 Y adding arc X Y ArcXY cid4g arc Y X ArcYX cid4g undirected edge LinkXY cid4g It easy graph encoded CGK welldeﬁned Furthermore given graph G V E exists unique CLGK cid4gG G encoded graph Clearly cid4gG constructed time OV 2 Example 7 Graph encoding Consider graph knowledgebase cid4g ArcEC cid4g E speciﬁed Assuming Lg built variables A B C D E F Gcid4g Fig 7e If furthermore e comprised ArcAD ArcDE e CGK albeit closed connections pairs variables A e corresponds graph NonAdjacentAB NonAdjacentAC NonAdjacentAE NonAdjacentAF NonAdjacentBC NonAdjacentBD NonAdjacentBE NonAdjacentBF NonAdjacentCD NonAdjacentCF NonAdjacentDF NonAdjacentEF added cid4g sentence added cid4g e cid4g e set cease CGK e encoded version graph Fig 7e CLGK If 764 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 We graph efﬁciently encoded unique CLGK Deﬁnition 6 allows distinguish graph knowledge bases interpreted graphs Next extend Lg language powerful building reasoning engine graphs membership status Ccp Deﬁnition 8 Graph language The graph language L set consisting sentences Lg ArcNotAllowedXY DirectedPathXY UndirectedPathXY UndirectedPathXYExcludingZW DirectedPathXY UndirectedPathXY UndirectedPathXYExcludingZW choice distinct variables X Y Z W 3 Z cid2 W Sentences like DirectedPathXY UndirectedPathXY UndirectedPathXYExcludingZW referred path sen tences sentences like DirectedPathXY UndirectedPathXY UndirectedPath XYExcludingZW referred negative path sentences Intuitively sentences introduced supposed descriptors attributes graphs encoded CGKs ArcNotAllowedXY states arc X Y strongly protected Directed PathXY states directed path X Y UndirectedPathXY states undirected path X Y UndirectedPathXYExcludingZW states undi rected path comprising Z W X Y DirectedPathXY states directed path X Y UndirectedPathXY states undirected path X Y UndirectedPathXYExcludingZW states undirected path X Y path necessarily contains Z W As Lg subset L follows graph knowledge base set sentences L particular Deﬁnition 6 makes sense Given set cid4 sentences L denote cid4g set cid4 Lg 5 Graph argumentation Building language L introduced deﬁne argumentation distinguishing completed patterns compromises agents The construct enjoys properties graph member C iff preferred extension extension encodes graph Deﬁnition 9 Graph argumentation The graph argumentation Ag tuple L cid12g 2L L cid12g deﬁned follows AB shorthand AB BA 1 ArcXYcid12g ArcYX 2 ArcXYcid12g LinkXY 3 ArcXYcid12g NonAdjacentXY 4 LinkXYcid12g ArcXY 5 LinkXYcid12g NonAdjacentXY 6 NonAdjacentXYcid12g ArcXY 7 NonAdjacentXYcid12g LinkXY 8 DirectedPathXYcid12g DirectedPathXY 9 UndirectedPathXYcid12g UndirectedPathXY 3 Throughout text assume implicit set variables ﬁve members This assumption lifted albeit complex notation follow SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 765 10 UndirectedPathXYExcludingZWcid12g UndirectedPathXYExcludingZW 11 ArcXYcid12g DirectedPathXY 12 LinkXYcid12g UndirectedPathXY 13 LinkXYcid12g UndirectedPathXYExcludingZW 14 DirectedPathXY DirectedPathYZcid12g DirectedPathXZ 15 DirectedPathXY UndirectedPathYZcid12g DirectedPathXZ 16 UndirectedPathXY DirectedPathYZcid12g DirectedPathXZ 17 UndirectedPathXY UndirectedPathYZcid12g UndirectedPathXZ 18 UndirectedPathXYExcludingZW UndirectedPathYUExcludingZWcid12g UndirectedPathXUExcludingZW 19 DirectedPathXYcid12g ArcYX 20 DirectedPathXYcid12g LinkXY 21 UndirectedPathXYcid12g ArcXY 22 UndirectedPathXYExcludingWZ LinkXW LinkYZ NonAdjacentXZ Non AdjacentYWcid12g LinkWZ 23 ArcXY NonAdjacentXZcid12g LinkYZ 24 ArcNotAllowedXYcid12g ArcXY 25 ArcZX NonAdjacentZYcid12g ArcNotAllowedXY 26 ArcZY NonAdjacentZXcid12g ArcNotAllowedXY 27 ArcXZ ArcZYcid12g ArcNotAllowedXY 28 LinkXZ ArcZY LinkXW ArcWY NonAdjacentZWcid12g ArcNotAllowedXY choices distinct variables X Y Z W U sentences obtained L Loosely speaking cid4 conﬂict free set wrt cid12g items 17 ensure cid4g CGK items 818 sure path negative path sentences cid4 cid4g correct wrt graph encoded cid4g items 19 21 ensure cid4g encodes chain graph item 22 ensures graph encoded cid4g decomposable chain components item 23 ensures graph respects item 3 Theorem 1 items 2428 guarantee arcs graph strongly protected Example 10 Argumentative reasoning graphs We return CGK cid4g e presented Example 7 joined sentences DirectedPathAD DirectedPathDE DirectedPathEC DirectedPathDC DirectedPathAC constitute set sentences cid4e Clearly cid4e conﬂictfree From item 19 conclude ArcCA added cid4e destroying property conﬂictfree wrt Ag Item 20 yields result LinkAC options putting description connection A C cid4e NonAdjacentAC ArcAC The argumentation allows reasoning consequences treated informally Examples 3 4 In follows provide formal treatment outlined intuitions More speciﬁcally prove important results preferred extension Ag member Ccp member Ccp corresponding stable extension Ag These results important guarantee agents seek compro mises restrictions speciﬁed Ag sure result completed pattern restricted agreeing model priori relations Ag Lemma 11 Let cid4 conﬂict free wrt Ag Then cid4g CGK Proof Obvious given items 17 cid3 Lemma 12 Let cid4 preferred extension Ag Then cid4g CLGK 766 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 Proof We need prove X Y X cid2 Y nodes nonadjacent Gcid4g NonAdja centXY cid4 We prove contradiction We assume NonAdjacentXY cid4 prove cid4 cid4NonAdjacentXY admissible set contradicts cid4 preferred extension First prove cid4 conﬂictfree Since X Y nonadjacent Gcid4g follows ArcXY ArcYX LinkXY cid4 cid4 attack NonAdjacentXY Thus set S cid4 argument A cid4 S cid12g A A NonAdjacentXY cid4 As cid4 admissible follows cid4 attacks argument B S cid4 attack NonAd jacentXY B member SNonAdjacentXY But means cid4 attacks cid4 meaning conﬂictfree set contradicting assumption cid4 preferred extension So conclude cid4 conﬂictfree It easy cid4 attacks sets arguments attack cid4 By assumption cid4 attacks sets arguments attack argument cid4 items 17 NonAdjacentXY attacks sets arguments attack Consequently cid4 cid4NonAdjacentXY attacks arguments attack argument lemma follows cid3 From 19 following equivalent Fundamental Lemma 7 Lemma 13 Let cid4 preferred extension let A argument defended cid4 Then A cid4 Lemma 14 Let cid4 preferred extension Ag X Y Z W Z cid2 W variables Then 1 directed path X Y Gcid4g DirectedPathXY cid4 2 undirected path X Y Gcid4g UndirectedPathXY cid4 3 undirected path X Y Gcid4g comprising variables Z W UndirectedPathXYExcludingZW cid4 Proof Induction length l path X Y We ﬁrst consider base case l 1 If path directed path means arc X Y consequently ArcXY cid4 By item 11 means cid4 attacks DirectedPathXY argument attacks Directed PathXY Lemma 13 guarantees DirectedPathXY cid4 Similar arguments establish base cases 2 3 For induction step assume result valid paths length l cid2 n consider path π X X1 U X2 Xn2 Y length n 1 If π undirected path know induction hypothesis UndirectedPathXU UndirectedPathUY cid4 The sentences collectively attack UndirectedPathXY argument attacking UndirectedPathXY Since cid4 preferred extension Lemma 13 gives UndirectedPathXY member cid4 The proof UndirectedPathXYExcludingZW Assume π directed path Then arc X U link We consider cases turn In ﬁrst case argument similar base case gives DirectedPathXU cid4 Next U X2 Xn2 Y directed path induction hypothesis gives Directed PathUY cid4 If U X2 Xn1 Y undirected UndirectedPathUY cid4 Either way sentences obtained collectively attack DirectedPathXY argument attacking DirectedPathXY Since cid4 preferred extension Lemma 13 states DirectedPath XY member cid4 If link X U directed path U Y π directed path As presence LinkXU LinkUX yields UndirectedPathXU cid4 induction hypothesis DirectedPathUY cid4 Together attack DirectedPathXY argument attacks DirectedPathXY Once Lemma 13 guarantees DirectedPathXY cid4 cid3 The converse Lemma 14 true seen following example SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 767 Example 15 Let cid4g consist NonAdjacentAB NonAdjacentBC NonAdjacentAC encoding graph set variables V e A B C Furthermore let cid4 cid4g cid5 cid2 ArcNotAllowedXY X Y V e cid2 UndirectedPathXY X Y V e cid2 DirectedPathXY X Y V e cid5 cid5 Then cid4 conﬂict free attacks sentences L meaning stable preferred extension clearly Gcid4g reﬂect meaning path sentences cid4 Theorem 16 Let cid4 preferred extension Ag Then Gcid4g Ccp Proof Assume This means Gcid4g fails satisfy bullets Theorem 1 We prove case bullet time Assume Gcid4g satisfy item 1 chain graph Then directed cycle X Y X Gcid4g containing arc Without loss generality assume arc going Y X consequently ArcYX cid4 The rest cycle constitutes directed path X Y undirected path Either way Lemma 14 allows conclude Directed PathXY UndirectedPathXY cid4 But impossible attacks ArcYX cid4 conﬂictfree Assume Gcid4g satisfy item 2 contains chain component decom posable This implies chordless cycle Gcid4g Let cycle X Z W Y X implies LinkXZ LinkWY LinkYX cid4 Furthermore cycle chordless X W Y Z pairs nonadjacent nodes Gcid4g By Lemma 12 NonAdjacentXW NonAdjacentYZ cid4 Additionally path Z W Lemma 14 collectively allow conclude UndirectedPathZWExcludingXY cid4 However Undirected PathZWExcludingXY conjunction LinkZX LinkWY NonAdjacentXW NonAdjacentYZ attacks LinkXY impossible cid4 conﬂictfree Next assume Gcid4g satisfy item 3 means variables X Y Z X parent Y X Z adjacent Z neighbor Y According Lemma 12 cid4 contain ArcXY NonAdjacentXZ LinkYZ But ﬁrst attack cid4 conﬂictfree impossible Finally assume Gcid4g satisfy item 4 means arc node X node Y strongly protected Gcid4g Thus ArcXY cid4 ArcXY attacked ArcNot AllowedXY cid4 admissible set follows cid4 attacks ArcNotAllowedXY The ways cid4 attack ArcNotAllowedXY containing ArcZX NonAdjacentZY variable Z ArcZY NonAdjacentZX variable Z ArcXZ ArcZY variable Z LinkXZ LinkXW ArcZY ArcWY NonAdjacentZW variables Z W We deal ﬁrst case similar As cid4 contains ArcZX NonAdjacentZY cid4g CGK follows arc Z X Gcid4g Z Y connected link arc But arc X Y protected yields contradiction assumption As cases yield similar contradictions assumption false theorem follows cid3 Theorem 17 If G Ccp stable extension cid4 Ag Gcid4g G Proof We prove construction stable extension cid4 Gcid4g G First let cid4g cid4gG ensures Gcid4g G matter sentences cid4 cid4g Next variables X Y Z W let cid4 cid4g contain 768 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 ArcNotAllowedXY iff arc X Y arc strongly protected DirectedPathXY iff directed path X Y DirectedPathXY UndirectedPathXY iff undirected path X Y UndirectedPathXY UndirectedPathXYExcludingZW iff undirected path comprising Z W X Y UndirectedPathXYExcludingZW Then cid4 stable extension seeking To prove cid4 conﬂictfree ii cid4 attacks sentences L cid4 We consider bullet deﬁnition cid12g Deﬁnition 9 Items 1 7 As cid4g deﬁned cid4gG CLGK variables X Y X cid2 Y ArcXY ArcYX LinkXY LinkXY cid4 Consequently bullets rise conﬂicts Items 8 13 These bullets rise conﬂict The ﬁrst deﬁnition cid4 pair variables X Y DirectedPathXY DirectedPathXY cid4 The reasoning prevents bullets giving rise conﬂict Item 9 rise conﬂict presence ArcXY cid4 means arc X Y G directed path X Y deﬁnition cid4 means contain DirectedPathXY The reasoning goes bullets Items 14 18 rise conﬂicts If item 14 reason conﬂict DirectedPath XY DirectedPathYZ cid4 deﬁnition cid4 mean directed path X Y X Y directed path Y Z Y Z G But directed path X Y Z X Z meaning DirectedPathXZ deﬁnition cid4 Similar arguments bullets rise conﬂicts Item 19 rise conﬂict mean DirectedPathXY ArcYX cid4 consequently directed path X Y arc Y X G mean G chain graph Theorem 1 completed pattern The goes items 20 21 similar argument substituting chain graph requirement Theorem 1 decomposability yields item 22 cause conﬂicts Item 23 rise conﬂict mean ArcXY NonAdjacentXZ LinkYZ cid4g turn mean X parent Y G X Z adjacent Y Z connected undirected link This violate item 3 Theorem 1 meaning G completed pattern contradiction Item 24 clearly rise conﬂicts ArcNotAllowedXY cid4 nodes nected arc ruling ArcXY cid4 needed conﬂict The arguments items 25 28 rise conﬂicts similar argument relating item 25 treated If bullet caused conﬂict means ArcZX NonAdjacentZY Arc NotAllowedXY cid4 implying Z parent X adjacent Y G arc X Y arc strongly protected But deﬁnition strongly protected clearly states arc X Y Z parent X adjacent Y strongly protected yielding contradiction ii Next prove cid4 attacks sentence cid4 stable preferred extension We consider argument A L turn member cid4 attacked First let A ArcXY variables X Y X cid2 Y If ArcXY cid4g deﬁnition CLGK ArcYX LinkXY NonAdjacentXY cid4g cid4 attacks ArcXY items 1 7 A similar argument applies A ArcYX LinkXY NonAdjacentXY Assume A ArcNotAllowedXY pair variables X Y cid4 attack ArcNotAllowedXY That means left hand sides items 25 28 satisﬁed members cid4 This turn means graph encoded cid4g viz G strong protection arc X Y As G completed pattern follows Theorem 1 arc X Y However deﬁnition cid4 means ArcNotAllowedXY cid4 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 769 Then assume A DirectedPathXY attacked cid4 This means Directed PathXY cid4 deﬁnition cid4 DirectedPathXY cid4 Similar reasoning establishes UndirectedPathXY UndirectedPathXYExcludingZW cid4 iff attacked cid4 Finally assume A UndirectedPathXY cid4 By deﬁnition cid4 means undirected path X Y X Y G If length X Y 1 undirected link variables X Y consequently LinkXY cid4g cid4 attacks UndirectedPathXY Item 12 If length X Y 1 variable Z path X Z Z Y undirected paths G It follows deﬁnition cid4 UndirectedPathXZ UndirectedPathZY cid4 cid4 attacks UndirectedPathXY item 17 Similar elaborate arguments establish result arguments A form DirectedPathXY UndirectedPathXYExcludingZW cid3 Given results clear result cid4 debate undertaken respecting Ag completed pattern preferred extension Ag cid4 represent completed pattern However checking set arguments constitute preferred extension complex It involves checks admissibility maximality We end section result yields computationally efﬁcient way testing set arguments Ag preferred extension Lemma 18 Let cid4 preferred extension Ag A path sentence cid4 attacked Then negative path sentence corresponding A cid4 attacked Proof We case path sentence UndirectedPathXY variables X Y cases similar Since UndirectedPathXY cid4 attacked cid4 follows item 9 fact bullet represents attack UndirectedPathXY Undirec tedPathXY cid4 Furthermore cid4 preferred extension attack Undi rectedPathXY follows cid4 attack UndirectedPathXY imply UndirectedPathXY defended cid4 according Lemma 13 mean member cid4 cid3 Theorem 19 Let cid4 preferred extension Ag Then cid4 stable extension Proof We need cid4 attacks argument A A cid4 We considering possible A Assume ﬁrst A ArcXY ArcYX LinkXY NonAdjacentXY vari ables X Y As cid4 preferred extension Lemma 12 guarantees arguments cid4 items 1 7 ensures cid4 attacks A Assume A ArcNotAllowedXY X Y attacked cid4 This means lefthand sides items 25 28 element cid4 Furthermore cid4 defend ArcNotAllowedXY bullets lefthand attacked cid4 Assume bullet item 25 That means ArcZX NonAdjacentZY cid4 attacked But impossible proved A similar contradiction arise remaining bullets It follows ArcNotAllowedXY attacked cid4 Now assume A UndirectedPathXY cid4 attack UndirectedPathXY As cid4 attack UndirectedPathXY follows item 17 variables Z Undi rectedPathXZ UndirectedPathZY cid4 Furthermore item 12 implies LinkXY cid4 preferred extension Lemma 12 CLGK tack LinkXY Since Lemma 13 cid4 fails defend UndirectedPathXY fail attack UndirectedPathXZ UndirectedPathZY variable Z Without loss general ity assume UndirectedPathZY path sentence outside cid4 attacked Lemma 18 guarantees UndirectedPathZY outside cid4 attacked cid4 But UndirectedPathZY exact form A started exploring apply argument obtaining negative path sentence outside cid4 attacked 770 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 This process end L ﬁnite language follows set N nega tive path sentences outside cid4 attacked cid4 solely negative path sentences N From deﬁnition N obvious set P path sentences corresponding negative ones N attacks sentences N furthermore N contains sentences attack P As cid4 defends follows set cid4 cid4 P defends attacks If cid4 conﬂictfree contradicts cid4 preferred extension implies original claim UndirectedPathXY attacked cid4 false To cid4 conﬂictfree assume let S cid4 attack B cid4 Assume ﬁrst B cid4 As cid4 defends attack argument S But impossible cid4 conﬂictfree construction P attacked cid4 Thus B P But impossible arguments attack P ones N deﬁnition cid4 It follows cid4 conﬂictfree UndirectedPathXY attacked cid4 If A UndirectedPathXY attacked Lemma 18 guarantees UndirectedPathX Y cid4 attacked saw impossible Thus UndirectedPathXY attacked cid4 Proving UndirectedPathXYExcludingZW UndirectedPathXYExcluding ZW attacked cid4 cid4 proved way UndirectedPathXY UndirectedPathXY The case DirectedPathXY proved similar manner UndirectedPathXY instead item 17 establish existence set N need case items 14 16 implies existence DirectedPathZW cid4 attacked cid4 That DirectedPathXY attacked follows Lemma 18 cid3 Given result efﬁciently identify set cid4 preferred extensions Ag simply checking attacks arguments L cid4 6 Fusing agoras We address problem having agents agree preferred extension Ag given prior beliefs expressed compromise score function si know combination function c There lot work dialectics agents simple proponentopponent dualism sufﬁce The solution propose inspired Risk Agoras 15 16 traditional blackboard architecture MAS cooperating agents actual instantiation We construct fusing agora framework agents debate The agora property agents allowed run debate conclusion end best possible compromise according joint compromise score debate maintain compromise improves debate progresses In agora shall Agcandidate I O U unique representative partial compromise I O This possible I O subsets L contain sentences describing aspects compromise graph required U determined I O Any leaf candidate representing preferred extension uniquely identiﬁes completed pattern guaranteed Theorem 16 Agents explore compromises examining Ltree Continually agents explore subtrees tree mark subtrees open investigation agents The heuristics guiding agents choices exploration addition s1 sk c determine outcome The agora work variety ways depending behavior individual agents vanilla algorithm individual agent provided later Algorithm 1 basically builds elements assume agent access synchronized fashion A pool candidates C current best result cid17I sI cid18 C consists pairs cid17C scid18 C Agcandidate subtree Ltree s real value I set preferred extension Ag sI real value Initially C contains element cid17 L 0cid18 cid17I sI cid18 cid17 cid18 Each agent utter following locutions SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 771 ExploreFromPoolicid17C scid18where cid17C scid18 member C The meaning locution agent takes responsibility investigate preferred extensions Ctree assuming C joint compromise score s PutInPoolicid17C scid18where C Agcandidate s real value The meaning locution agent wants investigate preferred extensions Ctree C joint compromise score s UpdateBesticid17I scid18where I subset L s real value The meaning locution agent identiﬁed preferred extension I joint compromise score s higher sI AskOpinioniC1 C2where C1 C2 Agcandidates The meaning locution agent needs StateOpinioniC1 C2 sδwhere C1 C2 Agcandidates sδ real value The meaning locution know sj C1 C2 agents j siC1 C2 sδ The rules governing locutions individual agents utter effects present set pre post conditions ExploreFromPoolicid17C scid18 Pre cid17C scid18 C Post cid17C scid18 removed C PutInPoolicid17C scid18 UpdateBesticid17I scid18 Pre s sI Post cid17I sI cid18 set cid17I scid18 Pre There cid17Ccid10 scid10cid18 C C subtree Ccid10tree Post cid17C scid18 C Locutions AskOpinioni StateOpinioni pre post conditions attached The basic algorithm Algorithm 1 corresponds exhaustive search followed agents The search gradual senses One longer search goes elements average candidate C I O sets closer describing compromise Two current compromise held I increasingly higher score In order search success agent course need eye AskOpinionj s uttered agents reply StateOpinioni It relatively easy verify agents Algorithm 1 uttering locutions accordance pre post conditions fusing agora Algorithm 1 uses series helper functions described PruneC I O U uses pruning rules investigate argument A U C A C A contains leaves preferred extensions If case method invokes recursively subtree pruned away branches pruned Some general pruning rules given 18 established speciﬁc case Ag For instance known preferred extension Ag stable I U attack argument A U branch corresponding C A contain preferred extensions SelectCandidateC picks promising candidate C A promising candidate high score annotated encode good partial compromises candidates small U sets represent partial compromises nearly complete If agents use criteria picking promising candidates selection sped implementing pool sorted list SelectCandidate areas heuristics limiting search space implemented For instance makes sense allow agents abstain exploring subtree rooted candidate contain compromises consistent BN This mean cases agents agree aspects G candidates need explored PreferredExtensionI Boolean valued function returns true conﬂictfree set I preferred extension Ag The task answering simpliﬁed Theorem 19 states I preferred extension iff I attacks argument L I 772 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 PreferredExtensionI cid10 AskOpinioniC Ccid10 si siC Ccid10 wait StateOpinionj C Ccid10 sj j cid22 scid10 cs1 sk s end end 1 U cid10 scid10 sI UpdateBesticid17Ccid10 scid10cid18 cid17C scid18 SelectCandidateC 1 2 ExploreFromPoolicid17C scid18 3 Ccid10 cid4 I cid10 Ocid10 U cid10 PruneC 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 A SelectArgumentCcid10 AskOpinioniC Ccid10 A AskOpinioniC Ccid10 A siC Ccid10 A s siC Ccid10 A s wait StateOpinionj C Ccid10 A s s cs k s cs k s s PutInPoolicid17Ccid10 A s scid18 C Ccid10 A s s s PutInPoolicid17Ccid10 A s scid18 C Ccid10 A s s s 1 s 1 s end 3 end j StateOpinionj C Ccid10 A s j j cid22 Algorithm 1 Vanilla algorithm agent SelectArgumentC I O U simply selects element A U This selection based agents score increase going C C A C A involve negotiations argument agents We illustrate basics fusing agora Algorithm 1 example Example 20 Refer Examples 2 3 consider simple case compromise scoring function agents deﬁned number features correspond completed pattern model minus exempliﬁed Example 4 We shall follow initial actions agora C consists candidate cid17C L 0cid18 We assume Agent 1 ﬁrst Agent 1s ﬁrst choice exploration simple C contains element agent utters ExploreFromPool1cid17C 0cid18 This candidate pruned set Agent 1 se lects argument add sets ArcA D Agent 1 constructs candidates set candidates left simply L minus ﬁrst sets SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 773 C ArcA D cid3 ArcA D cid2 ArcD A LinkA D NonAdjacentA D ArcNotAllowedA D DirectedPathA D DirectedPathD A UndirectedPathA D UndirectedPathD A cid5cid4 C ArcA D cid3 cid2 ArcA D cid5cid4 Agent 1 ask agents opinion AskOpinion1C C ArcAE AskOpinion1C C ArcA E receives answers 1 1 1 1 agents agree ArcA D Added perception Agent 1 gets scores s 3 s 3 utters PutInPoolicid17C ArcAE 3 continues exploring C ArcAE Let switch Agent 2 point utters ExploreFromPool2cid17C ArcAE I O U 3cid18 takes responsibility examining subtree rooted C ArcAE First Agent 2 prunes candidate adding DirectedPathAD I chooses new argument investigate seeing U For sake coherence previous examples assume argument ArcDE Agent 2 creates candidates cid5 DirectedPathA D ArcD E cid2 C ArcA D ArcD E cid3 I cid2 ArcE D LinkD E NonAdjacentD E O ArcNotAllowedD E DirectedPathD E DirectedPathE D UndirectedPathD E UndirectedPathE D ArcNotAllowedA E cid5cid4 cid5cid4 C ArcA D ArcD E ArcD E gets evaluation Agents 1 3 AskOpinion2 These evaluations 1 1 1 1 taken 1 1 derived Agent 2s beliefs gets s 1 s 1 puts C ArcA D ArcD E C continues exploring C ArcA D ArcD E cid3 I O cid2 Of course debate agora stopped time GI g best compromise encoun tered far replaced compromises having higher joint compromise score More speciﬁcally Proposition 21 Let agents 1 k argue fusing agora If agents Algorithm 1 agent replied AskOpinionj s uttered agents StateOpinioni consistent si locutions uttered agents accordance pre post conditions fusing agora I L I higher joint compromise score si explored leaf candidates I L I I preferred extension Ag If furthermore agents completed processing pool candidates thinned way pool GI g G 774 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 It worth stressing Algorithm 1 vanilla algorithm agora open aggressive behavior One behavior agents skip asking opinions lines 14 22 additions arguments basing decision agents beliefs ask agent indifferent Another behavior perform lines 23 27 correspond myopic greedy construction compromise Alternatively lines carried difference s s small We setups agents different behaviors individual agents change behavior debate depending available resources utility good compromise Moreover agora require agents wait candidate pool somebody start exploring candidate agent pursuing aggressive strategy fails leave candidates explore agents decide explore The point matter behavior required basics agora agents remains reused 7 Discussion We introduced problem believe challenging argumentation community mix complexity conditional decomposability origin conﬂicting knowledge bases Our solution enables agents judge possible compromises resulting partial compromise constructing candidate tree rooted partial compromise agora proposed ensures exploration place distributed fashion As aside note method given provides distributed solution problem enumerating equivalence classes BNs 9 One problem vanilla algorithm given agents exploring branch candidatetree end putting lot candidates pool annotated candidates The space requirements storing pool annotated candidates prohibitive required candidates pool deﬁned relation imposes restrictions candidates agent choose explore removed pool Furthermore necessary construct heuristics thinning pool annotated candidates These issues ﬁnding good heuristics selecting candidates explore challenging topics future research Acknowledgements This work partly supported NSF REC0219347 NSF IIS0329037 EU PF6IST 002307 ASPIC References 1 SA Andersson D Madigan MD Perlman A characterization Markov equivalence classes acyclic digraphs Annals Statistics 25 2 1997 505541 2 C Cayrol S Doutre J Mengin On decision problems related preferred semantics argumentation frameworks Journal Logic Computation 13 3 2003 377403 3 DM Chickering Learning equivalence classes Bayesiannetwork structures Journal Machine Learning Research 2 2002 445498 4 J Del Sagrado S Moral Qualitative combination Bayesian networks International Journal Intelligent Systems 18 2 2003 237249 5 Y Dimopoulos B Nebel F Toni On computational complexity assumptionbased argumentation default reasoning Artiﬁcial Intelligence 141 1 2002 5778 6 S Doutre J Mengin Preferred extensions argumentation frameworks Query answering computation R Goré A Leitsch T Nip kow Eds Proceedings First International Joint Conference Automated Reasoning Lecture Notes Computer Science vol 2083 SpringerVerlag 2001 7 PM Dung On acceptability arguments fundamental role nonmonotonic reasoning logic programming nperson games Artiﬁcial Intelligence 77 2 1995 321358 8 M ElvangGoransson A Hunter Argumentative logics Reasoning classically inconsistent information Data Knowledge Engineer ing 16 2 1995 125145 9 S Gillispie C Lemieux Enumerating Markov equivalence classes acyclic digraph models J Breese D Koller Eds Proceedings Seventeenth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Publishers 2001 10 PMR II U Chajewska Aggregating learned probabilistic beliefs J Breese D Koller Eds Proceedings Seventeenth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Publishers 2001 11 FV Jensen Bayesian Networks Decision Graphs SpringerVerlag 2001 12 P Krause S Ambler M ElvangGøransson J Fox A logic argumentation reasoning uncertainty Computational Intelli gence 11 1 1995 113131 SH Nielsen S Parsons Artiﬁcial Intelligence 171 2007 754775 775 13 SL Lauritzen Graphical Models Oxford University Press 1996 14 I Matzkevich B Abramson The topological fusion Bayes nets D Dubois MP Wellman B DAmbrosio P Smets Eds Proceedings Eighth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Publishers 1992 15 P McBurney S Parsons Risk agoras Dialectical argumentation scientiﬁc reasoning C Boutilier M Goldszmidt Eds Proceedings Sixteenth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Publishers 2000 16 P McBurney S Parsons Chance discovery dialectical argumentation T Terano T Nishida A Namatame S Tsumoto Y Oh sawa T Washio Eds New Frontiers Artiﬁcial Intelligence Joint Japanese Society Artiﬁcial Intelligence 2001 Workshop Post Proceedings vol 2253 SpringerVerlag 2001 17 SH Nielsen Reasoning decision making multiple autonomous agents PhD thesis Aalborg University 2007 18 SH Nielsen S Parsons Computing preferred extensions argumentation systems sets attacking arguments PE Dunne TJM BenchCapon Eds Proceedings First International Conference Computational Models Argument Frontiers Artiﬁ cial Intelligence Applications vol 144 IOS Press 2006 19 SH Nielsen S Parsons A generalization Dungs abstract framework argumentation AArguing sets attacking arguments N Maudet S Parsons I Rahwan Eds Proceedings Third Workshop Argumentation Multiagent Systems Future University Hakodate Japan 2006 20 J Pearl Probabilistic Reasoning Intelligent Systems Representation Reasoning Morgan Kaufmann Publishers 1988 21 DM Pennock MP Wellman Graphical representations consensus belief K Laskey H Prade Eds Proceedings Fifteenth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Publishers 1999 22 JL Pollock Cognitive Carpentry A Blueprint How Build Person MIT Press 1995 23 M Richardson P Domingos Learning knowledge multiple experts T Fawcett N Mishra Eds ICML 20 AAAI Press 2003 24 S Saha S Sen A Bayes net approach argumentation based negotiation ArgMAS 1 SpringerVerlag 2004 25 GR Simari RP Loui A mathematical treatment defeasible reasoning implementation Artiﬁcial Intelligence 53 1992 125157 26 T Verma J Pearl Equivalence synthesis causal models LKJLP Bonissone M Henrion Eds Proceedings Sixth Confer ence Uncertainty Artiﬁcial Intelligence Elsevier Science Publishing 1991 27 G Vreeswijk Bayesian inference defeasible reasoning Suggestions uniﬁed framework working paper Department Computer Science University Utrecht 1999 28 G Vreeswijk H Prakken Credulous skeptical argument games preferred semantics M OjedaAciego IP Guzmán G Brewka LM Pereia Eds Proceedings Seventh European Workshop Logic Artiﬁcial Intelligence Lecture Notes Computers Science vol 1919 SpringerVerlag 2000 29 GAW Vreeswijk Abstract argumentation systems Artiﬁcial Intelligence 90 1 1997 225279 30 GAW Vreeswijk Argumentation Bayesian belief networks ArgMAS 1 Lecture Notes Artiﬁcial Intelligence SpringerVerlag 2004