Artiﬁcial Intelligence 289 2020 103389 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Realtime reasoning OWL2 GDPR compliance Piero A Bonatti Ida R Siahaan b Università di Napoli Federico II Italy b CeRICT Italy Luca Ioffredo b Iliana M Petrova b Luigi Sauro r t c l e n f o b s t r c t Article history Received 19 April 2019 Received revised form 31 July 2020 Accepted 17 September 2020 Available online 18 September 2020 Keywords Tractable OWL2 fragments Structural subsumption Importbyquery Knowledge compilation Semantic policy languages GDPR This paper shows knowledge representation reasoning techniques support organizations complying GDPR new European data protection regulation This work carried European H2020 project called SPECIAL Data usage policies consent data subjects selected fragments GDPR encoded fragment OWL2 called PL policy language compliance checking policy validation reduced subsumption checking concept consistency checking This work proposes satisfactory tradeoff expressiveness requirements PL posed modeling GDPR scalability requirements arise use cases provided SPECIALs industrial partners Realtime compliance checking achieved means specialized reasoner called PLR leverages knowledge compilation structural subsumption techniques The performance prototype implementation PLR analyzed systematic experiments compared performance important reasoners Moreover PL PLR extended support richer ontologies means importbyquery techniques We prove novel tractability intractability results related PL negative results restrictions posed ontology import 2020 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 1 Introduction The new European General Data Protection Regulation1 GDPR come force May 25 2018 places strin gent restrictions processing personally identiﬁable data The regulation applies companies organizations located Europe track provide services data subjects European Union2 In fringements severely affect reputation violators subject substantial administrative ﬁnes 4 total worldwide annual turnover 20 million Euro whichever higher Therefore risks associated infringe ments constitute major disincentive abuse personal data Given collection analysis personal data paramount sources innovation revenue companies interested maximizing personal data usage limits posed GDPR Consequently data controllers personal legal entities process personal data looking methodological technological means comply regulations requirements eﬃciently safely Corresponding author Email address pabuninait PA Bonatti 1 httpdata consilium europa eu doc document ST5419 2016 INIT en pdf 2 Cf Article 3 GDPR httpsdoiorg101016jartint2020103389 00043702 2020 The Authors Published Elsevier BV This open access article CC BY license httpcreativecommonsorglicensesby40 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 The European H2020 project SPECIAL3 aimed supporting controllers complying GDPR SPECIAL tackling hard problems related usability transparency compliance 13934 overview In paper focus SPECIALs approach representation data usage activities consent data processing associated reasoning tasks related validation data usage policies compliance checking The management consent data processing granted data subjects plays central role picture The GDPR concerned anonymous data data persons like astronomical data The data called personal data processed according legal bases provided regulation Some examples legal bases include public vital interests data subject contracts legitimate interests data controller few4 These legal bases constrained number provisos caveats restrict applicability5 So practice kinds personal data processing useful datadriven business exclusively allowed legal basis explicit consent data subjects6 Thus important encode consent appropriately record auditing automated support compliance checking Also controllers usage personal data appropriately represented stored order fulﬁll obligation record personal data processing activities7 order verify activities comply available consent GDPR SPECIAL tackles needs adopting logicbased representation data usage policies constitutes uniform language encode consent activities controllers selected parts GDPR A logicbased approach essential achieving important objectives including following strong correctness completeness guarantees permission checking compliance checking ensuring mutual coherence different reasoning tasks related policies policy validation permission checking compliance checking explanations ensuring correct usage data transferred controllers interoperability unambiguous semantics knowledge representation languages Some SPECIALs use cases place challenging scalability requirements reasoning During execution controllers data processing software operation involving personal data checked compliance consent granted data subjects The frequency compliance checks signiﬁcantly high SPECIAL needs implement corresponding reasoning tasks way time needed check exceed hundreds μseconds For example realworld scenario provided SPECIALs industrial partners Streaming Scenario Telecom providers nowadays Internet providers receive base stations 15000 records second receive 850 millions probing records day wiﬁ network 10000 events second The data contained aforementioned records great strategic applications services locationbased services taylored recommendations personal data European regulations data protection prohibit usage data subjects consent Without storing data temporarily waiting batch process discard records processed illegal Then description application processes data business policy following checked realtime compliance available consent record processed stream data generated The scenario complicated fact data subject withdraw modify consent anytime selectively decide opt processing option customer accept location tracking internet tracking cid2 We address realtime requirements designing specialized reasoner policy language After recalling notions description logics properties needed paper contribu tions illustrated following order Section 3 shows encode usage policies relevant parts GDPR fragment SROIQD logical foundation OWL2DL The details encoding related explicitly GDPRs requirements Afterwards formally deﬁne PL fragment SROIQD encode data usage policies Section 4 devoted complexity analysis reasoning PL We consider concept satisﬁability subsump tion checking constitute core policy validation compliance checking We unrestricted PL subsumption checking coNPcomplete However restrictive hypothesis motivated SPECIALs use cases sub sumption checking possible polynomial time Tractability proved means specialized twostage reasoner 3 httpswwwspecialprivacyeu 4 Cf Article 6 GDPR 5 Of particular relevance data minimization principle introduced Article 5 limitations legitimate interests controller rooted Article 61f 6 Article 61a 7 Cf Article 30 GDPR 2 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 called PLR based preliminary normalization phase followed structural subsumption algorithm A preliminary account section published 8 Section 5 shows support richer ontology languages description policy elements The vocabularies policy elements treated like imported ontologies means import query IBQ approach im plemented modular integration specialized reasoner PL reasoner imported ontology We prove integration method correct complete justify restrictive assumptions imported ontologies adapting slightly extending previous results IBQ limitations Moreover hy potheses compatible SPECIALs application scenarios external ontology compiled PL ontology reducing IBQ approach plain PL reasoning PL subsumption checking experimentally evaluated Section 6 After describing implementation PLR optimizations PLRs performance compared important engines ELK 33 GraphDB 25 Hermit 23 RDFox 37 For purpose use sets experiments The ﬁrst set derived pilots SPECIAL reached suﬃcient development level recommendation based location data internet navigation information designed Proximus ﬁnancial risk analysis scenario developed Thomson Reuters The second batch experiments fully synthetic instead contains increasingly large policies ontologies order assess scalability PLR Section 7 concludes paper ﬁnal discussion results interesting perspectives future work Related work heterogeneous declarative policy languages legal reasoning tractable description logics IBQ methods dis tribute discussion pertinent sections single dedicated section 2 Preliminaries description logics Here report basics Description Logics DL needed work refer reader 4 details The DL languages built countably inﬁnite sets concept names NC role names NR indi vidual names NI concrete property names NF concrete predicates NP For brevity individual names called constants A signature cid2 subset NC NR NI NF8 We use metavariables A B concept names C D possibly compound concepts R S roles b indi vidual names f g concrete property names p concrete predicates Concepts built concept names concept constructors listed Table 1 Similarly roles built role names role constructors listed Table 1 In following term expression refers concepts roles deﬁned cid2 A An interpretation I signature cid2 structure I cid3I I cid3I nonempty set interpretation function I NI A NC ii R I cid3I cid3D f NF cid3D denotes domain predicates NP The semantics nary predicate iv f p NP set tuples pD cid3Dn As usual pair cid3D NP called concrete domain9 In paper use cid3D N unary concrete predicates incid4u cid4 u N inD cid4 u To enhance readability abbreviate cid4u belongs f cid4 uI incid4u f f cid4 u So individual d cid3I The column Table 1 shows extend valuation I integer cid4 u d f interpretation I compound DL expressions axioms GCI stands general concept inclusion An interpretation I satisﬁes axiom α equivalently I model α I satisﬁes corresponding semantic condition Table 1 When I satisﬁes α write I α We use axioms form C D abbreviations pair inclusions C cid8 D D cid8 C R NR iii I cid3I cid3I I cid3I I cid3I A knowledge base K ﬁnite set DL axioms Its terminological TBox set terminological axioms10 I K ABox set assertion axioms If X DL expression axiom knowledge base cid2 X denotes signature consisting symbols occurring X concrete predicates An interpretation I signature cid2 cid2K model K symbols I K I satisﬁes axioms K We K entails axiom α symbols K α models K satisfy α The subsumption problem consists deciding K C cid8 D given K C D A pointed interpretation pair I d d cid3I We I d satisﬁes concept C iff d C In case write I I d C 21 The description logics paper The logic SRIQ supports SRIQ constructors axioms illustrated Table 1 In SRIQ knowledge base order preserve decidability set role axioms regular roles S S 1 S2 simple according deﬁnitions stated 2811 HornSRIQ restricts SRIQ GCIs speciﬁed 38 For simplicity illustrate 8 Concrete predicates deliberately left special treatment 9 We assuming brevity concrete domain However framework immediately extended multiple domains 10 See Table 1 11 The deﬁnitions omitted needed results 3 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Table 1 Syntax semantics DL constructs axioms Name SRIQ concept role constructors recognizable word role Semantics Syntax I R NR inverse role intersection union complement existential restriction universal restriction number restrictions self Additional concept role constructors SROIQ D word role y x x y R cid10I cid3I I C cid13 DI C C cid15 DI C CI cid3I C d cid3I d e R d cid3I d e R cid2 x cid3I y x y S x cid3I x x S R cid10 C cid13 D C cid15 D C RC RC cid17cid18 n SC SSelf I I I y C I e C I e C I D I D I I cid17cid18 n I cid3 I I cid17cid18 universal role nominals concrete constraints SRIQ terminological axioms U p f 1 fn GCI role disjointness complex role inclusions SRIQ concept role assertion axioms C cid8 D disjS1 S2 R1 Rn cid8 R I I cid3I cid3I NI U aI xcid3I cid22vcid3Dn x v f I satisﬁes axiom I D C I I S S 1 2 I I R R n 1 R I I I 1 n cid22v pD conc assrt role assrt Ca Ra b I I C bI R I Other terminological axioms expressible axioms lowcomplexity DLs disjointness functionality range disjC D funcR rangeR C C R R I I D I I cid3I C partial function I Table 2 The Horn restriction SRIQ GCIs normal form C1 cid13 C2 cid8 D RC cid8 D C cid8 RD C cid8 RD C cid8 1 SD C cid8 n SD The concepts C C1 C2 D belong NC cid10 form SSelf Symbol S notes simple role 28 normal form adopted 39 Table 2 Like Horn DLs HornSRIQ convex K C0 cid8 C1 cid15 C2 holds iff K C0 cid8 C1 K C0 cid8 C2 denotes extension EL The logic EL fragment HornSRIQ supports atomic concepts roles cid10 cid13 existential restric tions Supported axioms GCIs assertions We denote EL extension EL range axioms EL nominals concrete domains complex role inclusions range axioms12 Sub sumption checking consistency checking tractable EL EL provided concrete domains tractable entailment problem convex sense p1cid22f 1 pncid22fn holds iff picid22f holds 1 n 3 EL provides foundation OWL2EL proﬁle13 The holds EL The logic DLlite fragment HornSRIQ supports inverse roles unqualiﬁed existential restrictions concepts form Rcid10 GCIs assertions Moreover complements allowed righthand GCIs H DLliteR extends DLlite role inclusions form R cid8 S R cid8 S DLlite horn extends DLlite supporting cid13 role inclusions form R1 cid8 R2 Subsumption consistency checking tractable logics DLlite constitutes foundation OWL2QL proﬁle14 The logic SROIQD supports constructs axioms illustrated Table 1 It description logic underlying standard OWL2DL 12 Range axioms satisfy restrictions described Sec 226 httpswwww3 org TR owl2 proﬁles We need details paper 13 httpswwww3 org TR owl2 proﬁles OWL _2 _EL 14 httpswwww3 org TR owl2 proﬁles OWL _2 _QL 4 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 To ﬁx ideas following subsections let K range SROIQD knowledge bases However results deﬁnitions subsections hold DLs fragments SROIQD logic supported CLASSIC 17 DLs ﬁxpoints 14 22 The disjoint model union property A knowledge base K cid2K NI enjoys disjoint model union property disjoint models I J K disjoint union I cid25 J cid26cid3I cid25 cid3J Icid25J cid27 P P NC NR NF satisﬁes K 4 Ch 5 This deﬁnition extended naturally union S arbitrary set S disjoint models The disjoint model union property plays important role results It broken universal role nominals The main problem nominals reason prerequisite cid2K NI I J disjoint individual constants NI This problem resolved constants occurring ABoxes Informally speaking suﬃces pick constants interpretation arbitrary argument union15 immediately clear Icid25J P cid4 I cid25 P I cid28 Icid25J J J Deﬁnition 21 Generalized disjoint union For sets mutually disjoint interpretations S I S let interpretation U cid5 cid3J J S J J S P cid5 cid3U U U P I P NC NR NF NI cid4I S If terminological knowledge base K standard disjoint model union property generalized union disjoint models K model K Proposition 22 Let K T A T terminological K A ABox If T disjoint model union property sets S mutually disjoint models K I S cid4I S K cid4I S Note cid2T NI disjoint union Proof Let S I statement let U T s models deﬁned T enjoy disjoint model union property contradicting hypothesis For interpretations J let J NI denote restriction J symbols NC NR NF excluding individual constants NI Note J S J NI model T cid2T NI Therefore hypothesis J NI cid4I S model T We J S model T Clearly left prove U model A Consider arbitrary assertion α A Since models S disjoint U C U b interpretation constants U ranges cid3I I f NF Moreover I model A hypothesis It follows immediately U model A cid2 U f cid4I SNI consequence J NI J S holds U R U f I R I C iff I b iff I cid4 cid4 U U I I 23 Modularity locality A knowledge base K semantically modular respect signature cid2 interpretation I cid3I I cid2 symbols X cid2 Roughly speaking extended model J cid3J J K cid3J cid3I means K constrain symbols cid2 way J X X A special case semantic modularity exploited 21 locality A knowledge base K local respect signature I cid2 J obtained simply speciﬁed deﬁnition Deﬁnition 23 Locality A knowledge base K local respect signature cid2 interpretation I cid3I I cid2 extended model J cid3J J K setting X I concept role names X cid2K cid2 Locality needed Section 5 integration PL knowledge bases imported ontologies In particular essential ingredient completeness proof IBQ reasoning 3 Semantic encoding data usage policies SPECIALs policy language PL fragment OWL2DL designed data usage Such scriptions exploited encode consent data processing given data subjects ii controllers 15 The following formalization idea generalizes proof technique 21 Lemma 1 5 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 internal processes use data iii selected parts GDPR support validation trollers internal processes Moreover PL encode entries SPECIALs transparency ledger log data processing operations queried data subjects order monitor personal data controller transferred data protection oﬃcers order audit behavior controller controllers order monitor internal processes The aspects data usage legal relevance clearly indicated articles GDPR available guidelines They mentioned example speciﬁcation valid consent legal bases processing rights data subjects aspects covered national regulations obligation controllers record processing operations involve personal data inter alia Articles 61 63 64 7 151 232 232 301 See section titled Records contain guidelines SMEs published http ec europa eu justice smedataprotect index _en htm That section describes fulﬁll obligation record data subjects consent processing Article 7 particular speciﬁes pieces information recorded According sources requirements main properties data usage need encoded archived following reasons data processing purpose data categories involved kind processing applied data parties data distributed recipients countries data stored location time constraints data erasure duration The properties characterize usage policy SPECIAL adopts direct encoding usage policies description logics based features The simplest possible policies form has_purposeP cid13 has_dataD cid13 has_processingO cid13 has_recipientR cid13 has_storagehas_locationL cid13 has_durationT 1 All roles functional Duration represented interval integers t1 t2 representing minimum maximum storage time bounds required law data subject controller The classes P D O deﬁned suitable auxiliary vocabularies ontologies specify relationships different terms The expressiveness requirements vocabularies design discussed later Section 5 Until reader assume vocabularies deﬁned means inclusions A cid8 B disjointness constraints disj A B A B concept names Such restrictions lifted later If data subject consents policy form 1 authorizes instances For example D DemographicData data subject authorizes particular use address age income speciﬁed properties policy It frequently happens data controller intends use different data categories different ways according usefulness sensitivity consent requests comprise multiple simple usage policies like 1 usage type The intended meaning consent requested instances policies accordingly compound policy formalized union components The result called usage policy form P 1 cid15 cid15 P n 2 P simple usage policy form 1 Symmetrically similar union data subjects consent different usage modalities different categories data different purposes Example 31 A company BeFit sells wearable ﬁtness appliance wants process biometric data stored EU sending healthrelated advice customers ii share customers location data friends Location data kept minimum year longer 5 biometric data kept unspeciﬁed time In order legally BeFit needs consent customers The internal formalized description consent look follows 6 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 has_purposeFitnessRecommendation cid13 has_dataBiometricData cid13 has_processingAnalytics cid13 has_recipientBeFit cid13 has_storagehas_locationEU cid15 has_purposeSocialNetworking cid13 has_dataLocationData cid13 has_processingTransfer cid13 has_recipientDataSubjFriends cid13 has_storagehas_locationEU cid13 has_duration y1 y5 3 Here y1 y5 integer representation year ﬁve years respectively If HeartRate subclass BiometricData ComputeAvg subclass Analytics consent allows BeFit compute average heart rate data subject order send ﬁtness recommendations BeFit customers restrict consent picking speciﬁc recommendation modality like recommendation SMS Then ﬁrst line replaced like has_purposeFitnessRecommendation cid13 contactSMS Moreover customer BeFit consent ﬁrst second argument union Then consent encoded respectively ﬁrst argument second argument entire concept 3 Similarly single process controllers lines business use biometric data location data Accordingly associated ﬁrst simple policy second simple policy union In words 3 models complete data usage activities related wearable device split different processes cid2 The usage policies actually applied data controllers business processes called business policies include description data usage form 1 Additionally business policy labeled legal basis describes associated obligations fulﬁlled For example data category includes personal data processing allowed explicit consent business policy additional conjuncts has_legal_basisArt6_1_a_Consent cid13 has_dutyGetConsent cid13 has_dutyGiveAccess cid13 has_dutyRectifyOnRequest cid13 has_dutyDeleteOnRequest 4 label policy chosen legal basis model obligations related data subjects rights cf Chapter 3 GDPR More precisely terms involving has_duty assert process modeled business policy includes operations needed obtain data subjects consent has_dutyGetConsent needed receive apply data subjects requests access rectify delete personal data Thus business policies abstract description business process highlighting aspects related compliance GDPR data subjects consent Similarly consent business policy union BP1 cid15 cid15 BPn simple business policies BPi form 1 cid13 4 In order check business process complies consent given data subject S suﬃces check corresponding business policy BP subsumed consent policy S denoted CPS sym bols BP cid8 CPS This subsumption checked knowledge base encodes type restrictions related policy properties corresponding vocabularies subclass relationships disjointness constraints functionality restrictions domain range restrictions like Some examples actual axioms occurring knowledge base funchas_purpose rangehas_data AnyData Demographic cid8 AnyData Update cid8 AnyProcessing Erase cid8 Update disjAnyData AnyPurpose recall general knowledge bases discussed later In order verify required obligations fulﬁlled business process abstracted business policy selected parts GDPR formalized concepts like following The ﬁrst concept states business policy support rights data subjects concern anonymous data fall exceptional cases mentioned regulation particular law requirements The remaining requirements listed replaced ellipsis has_dutyGetConsent cid13 has_dutyGiveAccess cid13 cid15 has_dataAnonymous cid15 has_purposeLawRequirement cid15 7 5 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 The second example encodes constraints data transfers speciﬁed Articles 4449 GDPR has_storagehas_locationEU cid15 has_storagehas_locationEULike cid15 6 It states data remain EU countries adopt similar data protection regulations The ellipsis stands concepts model conditions data transferred nations suitable binding corporate rules Please note concepts constitute largely incomplete illustration actual formalization GDPR signiﬁcantly longer special provisions apply particular data categories legal bases The purpose examples conveying ﬂavor formalization Its usage sketched A business policy BP checked compliance formalized parts GDPR checking aforementioned knowledge base entails BP subsumed concepts formalize GDPR Example 32 The following business policy complies consentrelated obligations formalized 5 sub sumed has_purposeFitnessRecommendation cid13 has_dataBiometricData cid13 has_processingAnalytics cid13 has_recipientBeFit cid13 has_storagehas_locationEU cid13 has_legal_basisArt6_1_a_Consent cid13 has_dutyGetConsent cid13 remaining concepts 4 cid15 has_purposeSell cid13 has_dataAnonymous cid13 has_processingTransfer cid13 has_recipientThirdParty 7 In particular disjuncts 7 subsumed ﬁrst lines 5 respectively Note second simple policy place restrictions location allows data ﬂow country including enjoy adequate data protection regulations However compliant GDPR data anonymous cid2 The concepts range existential restrictions conjunction atoms interval constraints existential restrictions We seen policy 3 has_storage contain conjunction existential restric tions properties has_location has_duration Another example related SPECIALs pilots concerns accuracy locations modeled concepts like has_dataLocation cid13 has_accuracyMedium Based discussion ready specify PL policy logic fragment OWL 2 covers slightly generalizes encoding usage policies GDPR outlined Deﬁnition 33 Policy logic PL A PL knowledge base K set axioms following kinds funcR R role concrete property rangeS A S role A concept A cid8 B A B concept names disj A B A B concept names Simple PL concepts deﬁned following grammar A NC R NR f NF l u integers C A f l u RC C cid13 C A PL concept union D1 cid15 cid15 Dn simple PL concepts n 1 PLs subsumption queries inclusions C cid8 D C D PL concepts 31 Discussion encoding The formalization policies classes data usage modalities addresses needs 8 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 First controllers instance process slightly differ For example different instances process operate data stored different servers possibly different nations typically happens large international companies The concrete data items involved change slightly age expressed directly birth date data subject identiﬁed social security number SSN identity card number passport number By describing storage location data policy attributes classes controllers concisely entire collection similar process instances With reference examples classes allow express data stored EU controllers servers age birthdate fall class demographic data SSN document numbers grouped class unique identiﬁers A second advantage classes support free choice granularity For example classes model locations formulated granularity continents federations countries cities zipcodes buildings rooms Subsumption naturally models containment regions regions A ﬂexible choice granularity helps turning company documentation formalized business policies facilitates import abstractions spontaneously domain experts The important advantage classes facilitate reuse consent The GDPR allows process personal data purpose data collected provided new purpose compatible initial purpose16 Compatibility assessed automatically general deﬁned regulation human speciﬁc legal background deal reliably involved subtleties However expressing purposes classes data subject consent upfront speciﬁed range similar purposes Roughly speaking accepted class purposes like agreement data subjects controllers purposes compatible given context Also expressing policy properties classes beneﬁcial If data subjects consent wider classes usage modalities need additional consent requests tends decrease yield beneﬁts parties 1 data subjects disturbed frequently consent requests improved usability better user experience 2 costs associated consent requests decrease Consider diﬃculties related reaching data subjects concern requests annoy users controllers decide deliver service requires additional consent From theoretical viewpoint classbased policy formalization adopted SPECIAL essentially akin established policy composition algebra 10 The algebra treats policies classes authorizations policy P identiﬁed set authorizations permitted P In turn authorizations tuples encode essential elements permitted operations resources involved kind processing applied resources Analogously PL policy like 1 denotes set reiﬁcations tuples elements capture legally relevant properties data usage operations 32 Related policy languages Logicbased languages constitute natural policy languages policies knowledge First note policies encode declarative constraints systems behavior depend metadata actors objects involved ownership content categories environment operations permitted certain places speciﬁed times day case emergency Semantic languages formats expressly designed encode metadata standard knowledge representation languages represent uniform way policy constraints metadata depend The second important observation like knowledge unlike programs single policy meant multiple semantically related tasks following permission checking given operation request decide permitted compliance checking policy P 1 fulﬁll restrictions requested policy P 2 Policy comparison policy validation policy contradictory Does comply given regulation Does policy update strengthen relax previous policy policy explanation explain policy decisions The terse formal semantics logical languages essential validating correctness policies implementation tasks ensuring mutual coherence Moreover data transferred agreed policies crucial parties understand policies way So unambiguous semantics essential correct interoperability In light observations clear knowledge representation languages ideal policy representation languages Indeed rule languages description logics policy languages nonexhaustive 16 See example articles 51 b 64 9 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 list 4930483211 As noted 7 advantage rule languages express nary authorization ditions arbitrary n encoding conditions n 2 challenging DL The advantage DL main policyreasoning tasks decidable tractable policies expressed OWL 2 proﬁles compli ance checking undecidable rule languages intractable absence recursion equivalent Datalog query containment So DLbased policy language natural choice project like SPECIAL policy comparison predominant task The aforementioned works logicbased policy languages focus access control trust management data usage control Consequently languages lack terms expressing privacyrelated usagerelated concepts A drawback main reasoning task papers permission checking policy comparison central work considered Both Rei Protune 3211 support logic program rules Therefore pointed policy comparison generally hard possibly undecidable This drawback makes languages unsuitable SPECIALs purposes Similarly KAoS 48 based DL general tractable supports rolevalue maps construct easily makes reasoning undecidable 4 Chap 5 The papers KAoS discuss policy language restricted avoid issue The terms role ﬁllers SPECIALs policies imported established formats expressing privacy preferences digital rights P3P Platform Privacy Preferences17 ODRL Open Digital Right Lan guage18 More general vocabularies discussed Section 5 It interesting note P3Ps privacy policies encoded XML identical simple PL policies tag STATEMENT contains tags PURPOSE RECIPIENT RETENTION DATAGROUP correspond analogous properties SPECIALs usage policies Only information location data missing The tag STATEMENT included larger context adds infor mation controller tag ENTITY space web resources covered policy socalled policy reference ﬁles All additional pieces information directly encoded simple PL concepts Similar considerations hold ODRL The tag RIGHTS associates ASSET analogue has_data PERMISSION speciﬁes usage modality ODRL provides terms describing direct use play execute reuse annotate aggregate transfer sell lend lease asset management operations backup install delete These terms provide rich vocabulary specifying has_processing property SPECIALs policies Also case ODRL treelike structure XML documents naturally encoded PL concepts 33 Related work legal reasoning Despite superﬁcial similarities SPECIALs policy framework works legal reasoning different goals The survey 44 lists applications logic reasoning legal domain grouped follows Supporting legislators writing ambiguous possibly normalized legal documents b Modeling legal concepts deﬁnitions c Interpreting law d Modeling debates pleadings place courts deriving legal qualiﬁcations The work vocabularies carried SPECIAL DPVCG regarded streamlined version b use case business policy validation based GDPRs partial formalization match points Policy validation ambitious legal reasoning aimed checking different properties policy mutually coherent checking legal basis matches data category relevant parts included appropriate obligations case consentbased processing data transfers outside EU The way check human responsible ticked necessary boxes means tackles legal reasoning required assess obligations actually appropriately fulﬁlled according experience SPECIAL algorithms ontologies trusted matter especially severe consequences case wrong decisions Both business policy validation compliance checking wrt consent policies shall verify business policies right thing contexts literature legal reasoning focuses legal qualiﬁcation obligation permission validity contract holds speciﬁc situation 44 This difference remarkable technical consequences pointed validation contexts policy comparison intractable rulebased languages common works legal reasoning seminal paper 45 undecidable rules recursive 7 The DLbased approach adopted guarantees decidability suitable hypotheses tractability shown following sections The ambitious goals legal reasoning tackled sophisticated formalisms deontic nonmono tonic logics example 3129124 Fortunately different goals SPECIALs compliance checking complications unnecessary Simplicity strategic project personnel expected write business 17 httpwwww3 org TR P3P11 18 httpswwww3 org TR odrl 10 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 policies background mathematical logic deontic logic nonmonotonic logic The usability SPECIALs simple formlike business policies successfully tested industrial partners SPECIAL Formal ontologies based DLs represent reason legal concepts interchange formats merge different sources legal information An example legal ontology LKIF Core 27 developed OWL11 LKIF Core follows stratiﬁed approach deﬁning intentional layer legal layer The intentional layer models different aspects intentional behavior actions plans beliefs intentions The legal layer concerns public acts like norms legal relevance Norms specialized Right Obligation Permission Prohibition coherently related normative qualiﬁcations Allowed Disallowed Obliged Recent work legal reasoning leveraging deontic nonmonotonic logics expressly tailored GDPR The authors 4142 propose ontology PrOnto aiming supporting legal reasoning general compliance checking wrt GDPR PrOnto deﬁnes taxonomy basic concepts roles occurring GDPR organized 5 distinct modules Data Documents Agent Role Data Processing Purposes Legal Basis Deontic Operators In 40 PrOnto LegalRuleML semanticsneutral interchange format included larger architecture developing GDPRcompliant cloud computing platforms eGovernment The graphic tool RAWE supports legal experts translating legal text formal rules applied BPMN description eGov service Compliance GDPR checked defeasible legal reasoning engine SPINdle As use case scenario article shows formalization Art 8 GDPR concerning parental consent Differently SPECIAL framework proposed 4042 pursues ambitious goals legal reasoning operates workﬂowbased representation controllers activities complex business policies These choices increase cost framework instantiation rely users necessary legal logical background editing verifying legal rules assumptions aligned SPECIALs reference scenarios Further compliance checking static address SPECIALs need realtime compliance checking respect changing consent data subjects Summarizing SPECIAL trades advanced legal reasoning capabilities usability scalability 4 Reasoning PL As explained introduction use cases SPECIAL place challenging scalability requirements compliance checker able execute 104 subsumption checks second streaming scenario These scalability requirements addressed ﬁnding tradeoff expressiveness eﬃciency The lan guage PL rich encode policies simple implemented eﬃciently Intervals source complexity suitably restricted In section ﬁrst going prove unrestricted subsumption checking PL coNPcomplete Then structure usage policies exploited restrictive assumptions occurrences intervals Under assumptions prove approach articulated stages ﬁrst business policies suitably normalized compliance sent policies checked structural subsumption algorithm correct complete tractable Its scalability experimentally assessed Section 6 We start laying formal description theoretical properties normalization structural subsump tion In particular section deals correctness completeness twostages method discusses computational complexity arbitrary subsumptions restricted tractable case We ﬁrst prove intractability unrestricted subsumption PL Theorem 41 Deciding K C cid8 D K PL knowledge base C D PL concepts coNPhard19 This statement holds knowledge base C simple Proof Hardness proved reducing 3SAT complement subsumption Let S given set clauses ci Li1 Li2 Li3 1 n Li j literal We going use propositional symbols p1 pm occurring S property names PL concepts deﬁne subsumption C cid8 D valid iff S unsatisﬁable Let C cid7 cid6 p10 1 cid13 cid13 pm0 1 Li j encodes complement Li j follows Li1 cid13 Li2 cid13 Li3 D cid15n i1 cid7 cid6 cid8 Li j pk0 0 pk1 1 Li j pk Li j pk The correspondence propositional interpretations I S interpretations J C cid8 D following Given I arbitrary element d deﬁne J cid26d J cid27 d 0 p iff Ipi false d 1 p By construction J d C I S iff J d cid28 D Consequently S satisﬁable C cid8 D valid J J Conversely C cid8 D valid exist J d cid3J interpretation I S setting Ip true iff d 1 p proves C cid8 D valid S satisﬁable J J d C cid13 D Deﬁne propositional By construction d satisfy D J I S 19 As customary assume positional representation integers 11 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 We conclude reduction correct Moreover clearly computed polynomial time This proves subsumption coNPhard knowledge base C simple cid2 Later complete characterization PL subsumption proving membership coNP Theorem 413 The intractability result apply SPECIALs usage policies simple usage policy contains interval constraint speciﬁcation storage duration form has_storagehas_durationcid4 u We going property actually slight generalization thereof makes reasoning fast More speciﬁcally enables eﬃcient treatment interval constraints based suitable interval normalization method Such normalization produces subsumption queries satisfy following property Deﬁnition 42 Interval safety An inclusion C cid8 D interval safe iff constraints f cid4 u occurring C f cid29 occurring D cid4 u cid4cid29 u cid29 cid4 u cid4cid29 u cid29cid4cid29 u cid29 Roughly speaking interval safety removes need treating intervals like disjunctions makes behave like plain atomic concepts Every inclusion turned equivalent interval safe inclusion following method Deﬁnition 43 Interval normalization splitD C For constraint f cid4 u C let x1 x2 xr integers occur interval endpoints D belong cid4 u Let x0 cid4 xr1 u replace f cid4 u equivalent concept cid6 cid7 f xi xi cid15 f xi 1 xi1 1 cid15 f xr1 xr1 rcid15 i0 8 Then use distributivity cid13 cid15 equivalence RC1 cid15 C2 RC1 cid15 RC2 occurrences cid15 level Denote result interval normalization phase split D C Example 44 Let C f 1 9 cid13 A D f 5 12 Then r 1 x0 1 x1 5 x2 9 12 falls outside 1 9 ignored According 8 concept f 1 9 C replaced following union f 1 1 cid15 f 2 4 cid15 f 5 5 cid15 f 6 8 cid15 f 9 9 Then applying distributivity obtain concept split D C PL concept f 1 1 cid13 A cid15 f 2 4 cid13 A cid15 f 5 5 cid13 A cid15 f 6 8 cid13 A cid15 f 9 9 cid13 A cid2 The reader easily verify Proposition 45 For PL subsumption queries C cid8 D splitD C equivalent C splitD C cid8 D intervalsafe PL subsumption query In general splitD C exponentially larger C application distributivity happens concepts C D proof Theorem 41 However pointed simple policy functional concrete property combinatorial explosion occurs interval normalization Accordingly generally following proposition holds Proposition 46 Let C C1 cid15 cid15 Cn PL concept suppose 1 n number concrete properties occurring Ci bounded constant c Then concepts D size splitD C O C Dc20 Note C contain unbounded number interval constraints n grows bound c applies individual disjuncts Ci The structural subsumption algorithm PLs subsumption queries accepts subsumptions lefthand fur ther normalized respect given knowledge base K exhaustively applying rewrite rules illustrated Table 3 Such rules contradictions explicit merge functional properties They clearly preserve equivalence stated proposition Proposition 47 If C cid2 C cid29 K C C cid29 20 We denote size encoding expression E E 12 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Table 3 Normalization rules wrt K Intersections treated sets ordering conjuncts repetitions irrelevant cid8 denotes reﬂexive transitive closure A B A cid8 B K 1 2 3 4 5 6 7 cid13 D cid2 R cid2 f l u cid2 RD cid13 RD cid29 cid13 D cid29cid29 cid2 RD cid13 D f l1 u1 cid13 f l2 u2 cid13 D cid2 f maxl1 l2 minu1 u2 cid13 D RD cid13 D cid29 cid2 RD cid13 A cid13 D cid29 l u cid29 cid13 D cid29cid29 funcR K A1 cid13 A2 cid13 D cid2 func f K rangeR A K A conjuncts D A1 cid8 1 A2 cid8 A cid29 2 K 1 A disj A 2 A cid29 cid29 cid29 The proof trivial left reader It easy concepts normalized polynomial time Lemma 48 Each PL concept C normalized wrt given PL knowledge base K time O C2 K cid29 Proof We chance illustrate algorithm similar actually implementation normalization First C parsed syntax tree T time O C conjunction n concepts modeled single node n children Then tree scanned depthﬁrst fashion looking nodes labeled existential restriction order apply rule 4 For node ν R involved role funcR K previous siblings ν searched looking node νcid29 replaced intersection C child ν ν deleted This operation including functionality test R takes time O K C existential restriction Thus exhaustive application rule 4 needs time O C K C2 Rule 5 dealt similarly instead merging children interval associated ν intersected interval associated νcid29 cost None rules adds new existential restrictions rules 4 5 going applicable rest algorithm role R If νcid29 child C νcid29 Next rule 6 applied searching tree T existential restrictions role R occurs axiom rangeR A K For nodes A added children new conjunct necessary The cost existential restriction O K C C cost verifying existential restriction contains A So exhaustive application rule 6 O C K C2 The remaining rules remove range A substituting rule 6 triggered rest algorithm cid29 Finally nodes T visited depthﬁrst fashion order apply rules 1 2 3 7 Rule 7 expensive K regarded labeled classiﬁcation graph node labeled atomic concept disjointness axioms concept occurs The disjointness test A1 A2 rule 7 implemented relatively standard lineartime reachability algorithm climbs classiﬁcation graph cid29 2 searching A2 In A1 starts descending classiﬁcation ﬁnds node labeled disj A worst case stage involves O C2 searches pair A1 A2 conjunction global cost O C2 K cid29 1 A Finally note rules 13 need iteratively applied If C contains interval l u l u occurrence nesting level surely C rewritten Therefore suﬃces scan C looking intervals Since cost rule 7 dominates cost rules normalization computed time O C2 K cid2 Normalized queries passed structural subsumption algorithm called STS Algorithm 1 It takes inputs PL knowledge base K elementary PL subsumption C cid8 D Deﬁnition 49 Elementary subsumptions A PL subsumption C cid8 D elementary wrt PL knowledge base K C D simple C cid8 D interval safe C normalized wrt K The subsumption checking procedure applies PL subsumptions called PL Reasoner PLR short It summarized Algorithm 2 PLR correct complete We state result proof sketched 8 going prove general form extended engine supports expressive knowledge bases Section 5 13 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Algorithm 1 STSK C cid8 D Input A PL KB K PL subsumption C cid8 D elementary wrt K Output true K C cid8 D false Note 1 Below treat intersections like sets For example C C possibly ﬁrst Note 2 cid8 denotes reﬂexive transitive closure A B A cid8 B K cid29 cid13 C cid29cid29 mean C C cid29 cid29 C conjunct C 1 begin 2 cid29 cid29 cid13 C A C return true cid29 cid8 D A C A A return true cid29 u cid29 cid29 cid13 C cid29 D f l u C f l l l cid29cid29 cid29 cid13 C cid29 cid29 cid8 D STSK C D RD cid29 STSK C cid8 D cid29 cid13 D STSK C cid8 D D D return false C RC cid29cid29 u cid29 u return true cid29 return true cid29cid29 return true 8 end Algorithm 2 PLRK C cid8 D Input A PL KB K PL subsumption query C cid8 D Output true K C cid8 D false 1 begin 2 cid29 cid29 normalization C wrt K rules Table 3 let C cid29cid29 splitD C let C cid29cid29 C1 cid15 cid15 Cm D D 1 cid15 cid15 Dn assume C check Ci subsumed D j 1 m STSK Ci cid8 D j true skip outer loop j 1 n end return false end return true 3 4 5 6 7 3 4 5 6 7 8 9 10 11 end Theorem 410 For PL knowledge bases K PL subsumption queries q K q iff PLRK q true With result prove subsumption checking PL tractable number interval constraints simple policy bounded constant c recall SPECIALs policies c 1 First estimate complexity PLR Lemma 411 For PL knowledge bases K PL subsumption queries C cid8 D PLRK C cid8 D computed time O C cid8 Dc1 C cid8 D2 K c maximum number interval constraints occurring single simple concept C Proof By Lemma 48 Proposition 46 respectively complexity line 2 PLR O C2 K complexity line 3 O C Dc O C cid8 Dc1 Now consider complexity calls STSK Ci cid8 D j line 6 Each worst case scans Ci subconcept D j searching matching concept Matching require solve reachability problem hierarchy cid8 cost O D j Ci K If focus outer loop lines 49 clearly subconcept D matched disjuncts C worst case Then overall cost outer loop O D C K By relating parameters size query follows cost outer loop bounded O C cid8 D2 K This dominates cost line 2 So conclude overall time needed PLR worst case O C cid8 Dc1 C cid8 D2 K cid2 Tractability immediately follows Theorem 410 Lemma 411 Theorem 412 Let c integer Qc set PL subsumptions C1 cid15 cid15 Cn cid8 D Ci contains c interval constraints 1 n Then deciding query Qc entailed PL knowledge base K P 14 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 We conclude section completing characterization complexity unrestricted PL subsumptions The following result Theorem 41 proves PL subsumption coNPcomplete Theorem 413 Deciding K C cid8 D K PL knowledge base C D simple PL concepts coNP Proof We prove theorem showing complement subsumption NP For purpose given query C cid8 D suﬃces choose nondeterministically disjuncts Ci left hand query replace cid29 constraint f cid4 u occurring Ci nondeterministically chosen disjunct 8 Call C resulting concept note disjuncts split D C Therefore K cid28 C cid8 D iff K cid28 splitD C cid8 D iff nondeterministic cid8 D intervalsafe construction Then subsumption test evaluated choice C cid29 wrt K applying STS complete elementary deterministic polynomial time ﬁrst normalizing C queries 8 Theorem 2 It follows immediately complement PL subsumption decided nondeterministic polynomial time membership NP cid2 cid8 D Note C cid29 K cid28 C cid29 cid29 5 Supporting general vocabularies SPECIAL founded Data Privacy Vocabularies Controls Community Group DPVCG21 W3C group aimed developing privacyrelated vocabularies The purpose initiative developing ontologies main properties usage policies related GDPR concepts contribution group stakeholders spans SPECIALs consortium This group aims developing upper ontologies later extended meet needs speciﬁc application domains We intend constraints possible development standardized vocabularies diﬃcult predict expressiveness needs arise modeling especially standards usually change include new application domains follow evolution old ones PL knowledge bases simple address requirement We evidence useful roles domain vocabulary term accuracy locations cf Section 3 perspective expect ontologies deﬁne privacyrelated vocabularies include existential restrictions PL knowledge bases supported tractable proﬁles OWL2 It hard tell constructs turn useful For reasons going integrate PL specialized reasoner wide range ontologies expressed description logics signiﬁcantly expressive PL Our strategy consists treating ontologies called external ontologies oracles Roughly speaking STS needs check subsumption terms deﬁned external ontologies subsumption query submitted oracle In easiest case queries oracle answered simple visit classiﬁcation graph vocabularies Of course method called import query IBQ complete 2120 In section provide suﬃcient conditions completeness More formally let K O given knowledge bases The called main KB use terms axiomatized O plays role external ontology For example SPECIALs policy modeling scenario K deﬁnes policy attributes specifying ranges functionality properties O deﬁnes privacyrelated vocabularies provide ﬁllers policy attributes Therefore SPECIALs framework K PL knowledge base O formulated expressive DL The reasoning task scenarios deciding given subsumption query q C cid8 D K O q Both C D PL concepts usually contain occurrences concept names deﬁned O SPECIALs application scenarios possible adopt simplifying assumption makes oracle reasoning techni cally simpler 2120 assume K query q shares roles O This naturally happens SPECIAL precisely roles main KB identify sections constitute policy data cat egories purpose processing storage recipients roles deﬁned O model contents sections anonymization parameters relationships recipients like ownership employment relations relationships storage locations partof relations like This layered structure require arbitrary alternations roles coming main KB external ontologies precisely roles occurring main KB need occur scope role cid2O As consequence roles external ontology allowed queries syntactic sugar explained following Remark 51 Let q PL subsumption query RO range roles occurring O According discussion assume concept form ROC occurring q C contains roles cid2O alternation roles main KB O Every concept ROC eliminated q replacing fresh atom A extending O axiom A ROC mild assumption language O supports 21 wwww3 org community dpvcg 15 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 cid29 Ocid29 query ontology obtained applying transformation RO cid2O equivalences Let q Clearly construction Ocid29 equivalent q Moreover cid2Ocid29 NR cid2O NR holds cid29 implies resulting query q assumption concepts C ROC contain roles cid2O Now easy requirement main KB share roles Ocid29 preserved transformation main KB affected cid2Ocid29 NR cid2O NR Due equality q contains roles cid2Ocid29 construction contains roles cid2O Summarizing query q roles cid2K occur scope roles cid2O cid29 transformed polynomial time equivalent q satisﬁes requirement role sharing means simple extension O cid29 51 On completeness IBQ reasoning The IBQ framework introduced reason partly hidden ontology O For purposes IBQ interesting instead reasoning K O parts processed different reasoner particular policies compared eﬃcient algorithm similar STS The reasoner K query O oracle query language QL consisting subsumptions A1 cid13 cid13 Am cid8 Am1 cid15 cid15 An 9 A1 An concept names If n m stipulate righthand inclusion We denote posO queries O positive answer posO q QL O q Remark 52 Each subsumption form 9 equivalent concept inconsistency check form A1 cid13 cid13 Am cid13 Am1 cid13 cid13 An cid8 10 By 21 Theorem 2 consistency checks consequently QL constitute fully general oracle query language assumption K query q share roles O By fully general mean decided K O q holds axioms K members posO The problem instances interested formally deﬁned deﬁnition Deﬁnition 53 PL subsumption instances oracles PLSO A PL subsumption instance oracle triple cid26K O qcid27 K PL knowledge base main knowledge base O HornSRIQ knowledge base oracle q PL subsumption query cid2K cid2q cid2O NC The set PL subsumption instances oracle denoted PLSO The restrictions K O q motivated depth Section 55 We anticipate observations First restriction signatures aimed keeping roles O separated K q discussed previous section The second observation important properties O absence nominals convexity respect QL following sense Deﬁnition 54 Convexity wrt QL A knowledge base O convex wrt QL subsumptions q A1 cid13 cid13 Am cid8 Am1 cid15 cid15 An QL q posO iff exists m 1 n A1 cid13 cid13 Am cid8 Ai posO A description logic convex wrt QL knowledge bases convex wrt QL Accordingly Deﬁnition 53 required O HornSRIQ best knowledge expressive description logic considered far literature nominalfree convex wrt QL The lemma rephrases original IBQ completeness result 21 Lemma 1 notation Our statement relaxes requirements O assuming enjoys disjoint model union property originally SRIQ The proof remains essentially Lemma 55 Let K O knowledge bases α GCI 1 K α SROIQD U D concrete domain integer intervals 2 The terminological O enjoys disjoint model union property 16 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 3 The terminological T K local wrt cid2O 4 cid2K cid2α cid2O NC Then K O α iff K posO α Proof We prove hypotheses K O α iff K posO α The righttoleft direction trivial deﬁnition O posO For direction contraposition assume K posO cid28 α We shall d C cid13 DN ﬁnd model N K O N cid28 α Since α form C cid8 D means d cid3N The construction similar 21 Lemma 1 By assumption K posO model I I cid28 α exists d cid3I d C cid13 DI Now extend interpretation I cid2K cid2α model N K O We need auxiliary notation d cid3I let litd I denote set literals L language O satisﬁed d litd I L I d L L A L A A NC cid2O cid2 Since I posO follows d cid3I exists pointed interpretation Jd d cid2O Jd O litd Jd litd I We assume loss generality cid3Jd cid3I d cid3Jd cid3J cid4J Jd d cid3I By hypothesis 2 Proposition 22 U model O M predicates X cid2K litd I cid8 Remark 52 Then d cid3I Moreover hypothesis 3 U extended model M T setting X cid2α cid2O Let J Jd U cid29 d cid28 d O cid28 d cid29 Finally let N interpretation cid8 cid3N cid3M I X X N X M note cid3I cid3M symbols X cid2K cid2α cid2O symbols X cid2O The proof proceeds exactly 21 Lemma 1 order N K O Note deﬁnition M N domain agree symbols cid2O N model O M So left prove N K For purpose ﬁrst proved cid7 C closure22 K α C N C I C M cid3I The proof cid7 makes use hypotheses 1 4 Then cid7 fact M model T shown M model K Almost details proof cid7 M K 21 Here add details cid7 concerning interval constraints considered 21 Let C f l u By hypothesis 4 M f cid2K cid2α cid2O Then deﬁnition N M f cid7 obviously holds M Consequently C For formulation theorem add observation cid7 implies d C cid13 DI N C N f C f I I C cid13 DN N cid28 α cid2 Using lemma prove variant IBQ completeness PLSO The locality requirement Lemma 55 removed shifting axioms K O Theorem 56 For problem instances π cid26K O qcid27 PLSO let K α K α rangeR A α funcR let O K O K K Then K O q iff K posO K q Proof Since K O K O K suﬃces K O K q iff K posO K q This equivalence proved Lemma 55 suﬃces K lemma First note K PL knowledge base O K q satisfy hypotheses K HornSRIQ knowledge base deﬁnition O 22 The closure set axioms K set subconcepts occurring K 17 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Table 4 Normalization rules STS irrelevant duplicates removed O K Conjunctions treated sets ordering conjuncts 1 2 3 4 5 6 7 cid29 cid13 D cid29cid29 cid2 RD cid13 D cid13 D cid2 R cid2 l u f l u cid2 funcR K RD cid13 RD f l1 u1 cid13 f l2 u2 cid13 D cid2 f maxl1 l2 minu1 u2 cid13 D func f K rangeR A K A conjuncts D O K A1 cid13 cid13 An cid8 A1 cid13 cid13 An cid13 D cid2 cid29 cid2 RD cid13 A cid13 D RD cid13 D cid29 cid13 D cid29cid29 cid29 K expressed HornSRIQ K Moreover PL HornSRIQ enjoy disjoint model union property hypothesis 2 satisﬁed Next transferred K PLSO K PL O HornSRIQ axioms shifted L O Both PL HornSRIQ fragments SROIQD U hypothesis 1 satisﬁed K O recall cid2K cid2q cid2O NC holds deﬁnition PLSO Since axioms α K K O K contain roles form A cid8 B disj A B follows cid2K cid2q cid2O K NC hypothesis 4 holds A second consequence inclusion K func A R cid2O local wrt cid2O K hypothesis 3 satisﬁed cid2 K They trivially satisﬁed interpretation I R contains axioms form rangeR A I Therefore K 52 Extending PLs reasoner IBQ capabilities The integration PLR reasoner external oracles relies axiom shifting applied Theorem 56 Accord ingly following let K O K deﬁned Theorem 56 The step axiom shifting consists replacing relation cid8 normalization rules STS suitable queries oracle This change concerns normalization rules Table 3 STS The new set rules given Table 4 We PL concept C normalized wrt K O rules Table 4 applicable Hereafter cid2 denotes rewriting relation according Table 4 Clearly new rules preserve meaning concepts following sense Proposition 57 If C cid2 C cid29 K posO K C C cid29 The notion elementary inclusion modiﬁed accordingly requiring normalization wrt K O Deﬁnition 58 A PL subsumption C cid8 D elementary wrt K O C D simple C cid8 D interval safe C normalized wrt K O Then STS integrated oracle O replacing line 3 following algorithm STS subconcept level occur scope existential restriction O K In following Algorithm 3 STS O Input Ontology O Output true K posO K C cid8 D K deﬁned Theorem 56 PL subsumption C cid8 D elementary wrt K O K C cid8 D false K deﬁned Theorem 56 1 begin 2 C return true D A A1 cid13 cid13 An cid8 A posO D f l u C f l cid29 cid13 C D RD cid29 cid13 D D D K C cid8 D return false cid29 cid13 C STS cid29 STS C RC O cid29cid29 STS cid29 u cid29cid29 cid29 cid29 l l O K C O 3 4 5 6 7 cid29 u cid29 u return true cid29 cid8 D K C cid8 D cid29 return true cid29cid29 return true K A1 An toplevel concept names C return true 8 end Finally reasoner general PL subsumptions oracles deﬁned follows 18 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Algorithm 4 PLR OK C cid8 D Input O K C cid8 D π cid26K O C cid8 Dcid27 PLSO Output true K O C cid8 D false 1 begin 2 3 4 5 6 7 8 9 O K deﬁned Theorem 56 construct K cid29 normalization C wrt K O rules Table 4 let C cid29cid29 splitD C let C cid29cid29 C1 cid15 cid15 Cm D D 1 cid15 cid15 Dn assume C check Ci subsumed D j 1 m cid29 STS K Ci cid8 D j true skip outer loop j 1 n O end return false 10 11 end return true 12 end The rest section devoted proving soundness completeness PLR O We need set canonical counterexamples invalid subsumptions Deﬁnition 59 Let C cid28 simple PL concept normalized wrt K O A canonical model C wrt K O pointed interpretation I d deﬁned follows induction number existential restrictions cid6 cid2 cid7 cid6 cid2 t n cid13 i1 Ai j1 cid6 cid2 I d n i1 Ai cid8 A I d u j j 1 t If C A f predicates f jl j u j posO cid7 cid7 C existential restrictions let I cid26d I cid27 K b If toplevel existential restrictions C R iD 1 m 1 m let Ii di canon ical model D Assume wlog models mutually disjoint contain d Deﬁne auxiliary interpretation J follows cid3J d d1 dm cid7 A K A1 An toplevel concept names C concept names posO cid6 cid2 n i1 Ai cid8 A I d J d u f l u toplevel constraint C J f R Finally let I union J Ii d di 1 m cid3I cid3J I A A J I R R J cid5 cid5 cid5 cid3Ii Ii A Ii R A NC R NR NF The canonical model I d Note C unique canonical model isomorphism The canonical model satisﬁes K O K C Lemma 510 If C simple PL concept normalized wrt K O C cid28 canonical model I d C enjoys following properties I K posO b I d C K Proof By induction maximum nesting level cid4 C s existential restrictions If cid4 0 existential restrictions obviously I d C construction Deﬁnition 59a The contains range functionality axioms trivially satisﬁed K Suppose entailment I K roles I In order prove base case left I posO holds K 19 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 I By construction I d B exists inclusion B1 cid13 cid13 Bm cid8 A posO K d B1 cid13 cid13 BmI cid2 j posO cid3I n K contains concept names C These inclusions B 1 cid13 cid13 Bm cid8 A imply simple inferences posO case d member i1 Ai cid8 B j j 1 m Ai toplevel i1 Ai cid8 A contain d deﬁnition contradiction This completes proof base K But A d A cid2 n Now suppose cid4 0 By induction hypothesis IH submodels Ii di Deﬁnition 59b satisfy D Then immediate I d C construction We left prove I satisﬁes axioms α K posO If α funcR rewrite rules 4 5 sure C contains existential restriction R J K I I satisﬁes α Since Ii satisfy α IH I satisﬁes α If α rangeR A rule 6 makes sure toplevel concept form RD C D D cid29 cid13 A Then IH Ii di A consequently α satisﬁed I Finally α inclusion posO individuals cid3I satisfy α IH cid2 K d satisﬁes argument base case Another key property canonical models C characterize valid elementary subsumptions lefthand C Lemma 511 If C cid8 D elementary wrt K O C cid28 I d canonical model C K posO K C cid8 D iff I d D Proof Only If Assume K posO I D C Moreover Lemma 510b d C I D I I Therefore I d D K C cid8 D By Lemma 510a I K posO K assumption If Assume I d D We going prove K posO If D A concept d A cid6 cid2 n i1 Ai cid8 A posO K C cid8 D structural induction D assumption Then construction I inclusion cid2 n i1 Ai K A1 An toplevel concept names C This implies C cid8 i1 Ai cid8 A hold K posO posO cid2 n K C cid8 D K cid7 I If D D1 cid13 D2 I d D 1 2 induction hypothesis K posO K C cid8 D 1 2 K posO K C cid8 D If D RD1 di cid3I Ii di D1 Ii di construction I canonical model concept C1 occurring toplevel restriction RC1 C It follows C cid8 RC1 induction K C1 cid8 D1 K posO hypothesis K posO K C cid8 D I cid29 f cid29 interval safety implied assumption C cid8 D elementary cid4cid29 u By construction I C contain toplevel constraint cid29 cid4 u Then C cid8 If D f cid4 u u cid29 cid4 u d u d di R I f cid4cid29 u D cid2 Moreover means canonical models prove interval safety makes nonconvex logic PL behave like convex logic Lemma 512 For interval safe PL subsumption queries q K O entailment K posO K q holds iff 1 m exists j 1 n K posO K Ci cid8 D j C1 cid15 cid15 Cm cid8 D1 cid15 cid15 Dn Ci normalized wrt cid6 cid7 j1 D j holds 1 m ii KB Ci cid8 D j holds j 1 n KB Ci cid8 cid15n K By simple logical inferences facts hold KB q iff KB Ci cid8 j1 D j So left j1 D j By assumption Lemma 511 canonical model I d Ci I d D j j 1 n Therefore j1 D j Moreover I d satisﬁes KB Ci Lemma 510 Then I d witness KB cid28 Ci cid8 Proof Let KB abbreviate K posO cid15n converse ii assuming j 1 n KB cid28 Ci cid8 D j holds shall prove KB cid28 Ci cid8 cid15n I d cid15n cid15n j1 D j cid2 Now semantic properties laid focus algorithms Roughly speaking lemma says O K decides canonical model I d C satisﬁes D STS Lemma 513 If C cid8 D elementary wrt K O C cid28 I d canonical model C O K C cid8 D true iff I d D STS 20 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 cid2 n i1 Ai cid8 A posO Proof By structural induction D If D A concept deﬁnition STS inclusion By def I holds iff d A K C cid8 D true iff exists K Ai s toplevel concept names C line 3 Algorithm 3 I d D This proves base case If D D1 cid13 D2 lemma follows easily induction hypothesis line 6 Algorithm 3 If D RD1 STS K C cid8 D true iff C toplevel subconcept RC1 ii STS K C1 cid8 D1 true line 5 Moreover deﬁnition I I d D holds iff fact holds ii Ii di D1 Ii di canonical model C1 By induction hypothesis ii equivalent ii lemma immediately follows O O I If D f cid4 u STS K C cid8 D true iff following property holds O O C toplevel subconcept f cid4 cid29 cid29 cid4 cid29 u cid29 cid4 u u 11 line 4 We left prove 11 equivalent I d D Property 11 implies construction I d u Conversely I d D exists u cid29 cid3I toplevel subconcept f cid4cid29 u fact cid4cid29 u cid29 cid4 u u cid29 I cid29 f u d u cid29 cid4 u I d D cid29 f u I cid29 cid4 u Then construction I C cid29 By interval safety implied hypothesis C cid8 D elementary cid29 cid4 u Therefore 11 holds This completes proof cid2 common implies cid4cid29 u We ready prove PLR O correct complete Theorem 514 Let cid26K O C cid8 Dcid27 instance PLSO Then PLR OK C cid8 D true iff K O C cid8 D cid29cid29 STS Proof D form D1 cid15 cid15 Dn Let C1 cid15 cid15 Cm concept C proving following claim 1 m j 1 n O K Ci cid8 D j true iff K posO K Ci cid8 D j There possibilities If Ci clearly K posO K Ci cid8 D j true line 2 Algorithm 3 12 holds case If C cid28 note Ci cid8 D j elementary wrt K O construction cid29cid29 obtained splitting intervals normalization C wrt K O Then 12 follows immediately C Lemmas 511 513 computed lines 2 3 PLR K Ci cid8 D j STS By 12 convexity Lemma 512 lines 511 Algorithm 4 return true iff K posO cid29cid29 cid8 D Moreover C equivalently replaced C entailment Proposition 57 Proposition 45 The resulting entailment equivalent K O C cid8 D Theorem 56 It follows Algorithm 4 returns true iff K O C cid8 D cid2 We start K C 12 O cid29cid29 O O PLR runs polynomial time modulo cost oracle queries Lemma 515 PLR number interval constraints occurring single simple concept C OK C cid8 D runs time O C cid8 Dc1 C cid8 D2 K oracle23 posO K c maximum K counts Proof Each query oracle triggered application normalization rule 7 line 3 STS step computation according deﬁnition time complexity oracle machines Then arguments takes time O C2 K proof Lemma 411 computation normalization steps lines 2 3 PLR C Dc loops spanning lines 59 time O D C K The lemma follows expressing size C D terms C cid8 D Lemma 411 cid2 O O As consequence lemma classes subsumption instances c bounded decided polynomial time modulo cost oracle queries Deﬁnition 516 For nonnegative integers c let PLSOc set PLSO instances cid26K O C cid8 Dcid27 maximum number interval constraints occurring single simple concept C bounded c Theorem 517 For c PLSOc PposO K Computing consequences O general intractable O restricted HornSRIQ knowledge bases H horn subsumption For Horn DLs like proﬁles OWL2 generalizations EL DLlite 23 Here mean notion oracle deﬁnition oracle machines related complexity classes 43 21 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 checking tractable By Theorem 517 tractability convex oracles extends reasoning PL oracles More precisely suﬃces assume membership posO K decided polynomial time case PposO horn axioms shifted K O O K O DLlite expressed EL K logic O This formalized follows K P This happens O EL DLlite O H Deﬁnition 518 For integers c 0 let PLSODL c set instances PLSOc oracle DL Corollary 519 For c 0 PLSOEL c PLSODLlite c H horn P It proved normalization rules Table 4 policy validation method detect unsatisﬁable policies Theorem 520 Let cid26K O qcid27 PLSO instance C PL concept cid2C cid2O NC 1 A PL concept C C1 cid15 cid15 Cn unsatisﬁable wrt K O iff Ci cid2 1 n24 2 Under hypotheses PL concept satisﬁability testing wrt K O PposO K P O belongs tractable logic Proof By Proposition 57 Lemma 510 C satisﬁable wrt K posO Moreover Theorem 56 K iff Ci cid2 hold 1 n K posO K C cid8 iff K O C cid8 Point 1 immediately follows Next note normalization computed polynomial time oracle posO K This shown straightforward adaptation proof Lemma 48 takes account oracle queries rule 7 details left reader Then Point 2 follows complexity normalization Point 1 cid2 53 Related tractability intractability results PL knowledge bases OWL2RL Horn fragment OWL2 extensions EL DLlite functional roles Answering PL subsumption queries equivalent solving query containment problems respect PL knowledge bases queries translation PL concepts formulae ﬁrstorder logic25 Such formulae instances class queries investigated 46 called extended faceted queries Core faceted queries simply faceted queries abbreviated FQ formulae free variable built unary binary predicates variables restricted faceted query equals translation DL concept built cid15 cid13 A faceted query conjunctive contains occurrences set conjunctive faceted queries denoted CFQ The class unions faceted queries UCFQ consists faceted queries occur level nested inside constructs Extended faceted queries support class Comp operators number comparison class special predicates Agg computing aggregates predicates Next Next traversing chains binary relations Different subclasses extended FQ denoted LX L FQ CFQ UCFQ speciﬁes speciﬁes additional predicates supported For example restrictions X Comp Agg Next Next class extended faceted query denoted FQCompAggNextNext Extended faceted queries general translation PL subsumptions following ways disjunctions nested conjunctions queries contain special predicates aggregates Next Next The class queries corresponding PL concepts disjunction occur level special predicates allowed UCFQComp unions conjunctive faceted queries comparison operators The results 46 deciding query containment FQ class faceted queries special pred icates comparison operators coNPcomplete knowledge base hardness proved nesting disjunctions conjunctions Without nesting restrict UCFQ query containment tractable knowledge base reduced query answering follows ﬁrst introduce nonempty In particular containment query Q Q fresh individual extend knowledge base set assertions Q true possibly adding cid29 24 As usual cid2 25 The translation concepts ﬁrstorder formulae 4 Chapter 4 19 denotes reﬂexive transitive closure cid2 22 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 additional fresh constants ﬁnally evaluate Q check belongs answer 19 Toplevel disjunctions dealt exploiting convexity paper The combined complexity UCFQ answering P cases 65 tractability results apply knowledge bases formulated OWL2EL OWL2QL queries slightly general CFQ Therefore containment UCFQ decided polynomial time knowledge base belongs proﬁles cid29 The reduction containment applicable queries contain special predicates26 Indeed 46 Lemma 5 proves query containment CFQNextNext coNPcomplete knowledge base Ad ditionally relationships query containment concept subsumption Theorem 41 implies query containment UCFQComp coNPhard knowledge base leftmost query conjunc tive Moreover Theorem 412 shows constant bound number comparisons conjunctive query suﬃces restore tractability nonempty PL knowledge bases Theorem 517 extends tractability UCFQComp bounded intervals combinations PL knowledge bases oracles formulated tractable fragment HornSRIQ restrictions Deﬁnition 53 PL oracles EL regarded tractable extension EL functionality axioms nonconvex concrete domains queries Unrestricted combinations constructs generally intractable knowledge base subsumption instances nonempty contains unrestricted GCIs More precisely extension EL functional roles subsumption checking EXPTIMEcomplete general 3 A tractability result TBoxes reported 26 Fig 4 paper proved acyclic TBoxes subsumption coNPcomplete Accordingly OWL2EL support functionality axioms PL knowledge bases encoded proﬁle The tractability extension EL nonconvex concrete domains like intervals proved 26 assumption TBox set deﬁnitions form A C A concept appears lefthand deﬁnition An extended analysis tractability threshold DLlite family 2 The results closely related work following The data complexity query answering raises ﬁrst level polynomial hierarchy DLlite H horn extended functional roles Knowledge base satisﬁability EXPTIMEcomplete combined complexity Under syntactic restrictions 2 A1A3 unique assumption reasoning tasks remain tractable Nevertheless OWL2QL founded simplest members DLlite family support functional roles encode PL knowledge bases PL knowledge bases oracles EL H horn HornSHOIQ reusesafe roles 1819 This logic tractable role safety restriction replaces modularity requirement IBQ approaches27 By means results H 1819 PL knowledge bases oracles EL horn translated Datalog program polynomial time preserving fact entailment Then subsumption checking reduced conjunctive query answering explained Recall reduction apply subsumptions interval constraints tractability results 1819 imply results PL subsumptions DLlite DLlite The expressive knowledge representation language enjoying complete structural subsumption algorithm best knowledge CLASSIC 17 supports concept unions cid15 qualiﬁed existential restrictions RC If unions added subsumption checking immediately coNPhard concrete domains restricted reasons unrestricted subsumption checking coNPhard PL Theorem 41 On hand CLASSIC additionally supports qualiﬁed universal restrictions strictly generalize PLs range restrictions number restrictions rolevalue maps comparable PL The complexity extensions PL CLASSICs constructs interesting topic research 54 Compiling oracles PL knowledge bases Note posO O O knowledge compilation PLR subset posO K queried PLR K compiled computed reduce oracle queries retrieval After run polynomial time matter complex Os logic provided posO K precomputed polynomial cid2 This case The conjunctions classes Ai possibly occur lefthand subsump tion queries exponentially signatures size potentially occur query oracle So order limit space possible oracle queries reduce partial materialization posO K manageable size limit number concepts occur lefthand subsumption queries Fortunately SPECIALs use cases subsumption queries C cid8 D implement compliance checks business policy lefthand set business policies controller stable large So prerequisite applying oracle compilation satisﬁed We going oracle compiled 26 As far Comp concerned problem arguments comparison operators numbers idea instantiating atoms Q fresh individual names applicable 27 Of course modularity query answering split specialized reasoners main oracle respectively 23 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 plain oraclefree PL knowledge base IBQ framework implemented eﬃciency pure PL reasoning We start formalization ideas deﬁning restricted class problem instances determined given set business policies BP Deﬁnition 521 For sets PL concepts BP let PLSOBP set cid26K O C cid8 Dcid27 PLSO C BP The ﬁrst step oracle compilation consists transforming business policies collapse conjunction concept names single concept We result transformation singleatom form recursively deﬁned follows Deﬁnition 522 A simple PL concept C singleatom form m f ili ui cid13 1 C form i1 cid2 m 2 C form A cid13 i1 cid2 k R iCi m k 0 Ci singleatom form i1 cid2 k R iCi m k 0 Ci singleatom form f ili ui cid13 i1 cid2 A PL concept C1 cid15 cid15 Cn single atom form C1 Cn single atom form The given business policies transformed single atom form linear time Proposition 523 For ﬁnite sets concepts BP exist set concepts BP single atom form knowledge base O belongs EL DLlitehorn cid26K O C cid8 Dcid27 PLSOBP exists equivalent problem instance cid26K O O C cid8 Dcid27 PLSOBP K O C cid8 D iff K O O C cid8 D Moreover BP O computed time O BP Proof For C BP obtain corresponding concept C C single fresh concept deﬁnition included O j 1 n replace replacing intersection multiple concept names More precisely C C1 cid15 cid15 Cn ncid3 C j Ai cid13 mcid3 i1 f ili ui cid13 kcid3 i1 R iD n 1 j C B cid13 mcid3 i1 f ili ui cid13 kcid3 i1 R iD B fresh concept D The knowledge base O transformations set deﬁnitions B obtained recursively applying transformation D cid2 n Ai B fresh concepts introduced cid2 n Ai intersection replaced B cid15 cid15 C n obtained procedure Clearly construction C BP Moreover K O O conservative extension K O Therefore set concepts C C 1 Finally let BP K O O C C K O C cid8 D iff K O O C cid8 D iff K O O C O cid8 D Concerning complexity BP replacement computed time O BP cid2 cid2 n Ai generation deﬁnition B linear time C j Therefore BP computed single scan BP generation fresh concepts B O By proposition assume loss generality BP single atom form Note ontologies K O typical application scenario change frequently So ﬁx assume concepts BP normalized wrt K O The set problem instances ﬁxed K O deﬁned follows PLSOK O BP cid26Kcid29 Ocid29 C cid8 Dcid27 PLSO Kcid29 K Ocid29 O C BP 24 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 The compilation K O single PL knowledge base deﬁned follows compK O K A cid8 B A cid8 B posO K The correctness oracle compilation proved theorem Theorem 524 Let K O knowledge bases PL HornSRIQ respectively let BP set PL concepts single atom form normalized wrt K O Then cid26K O C cid8 Dcid27 PLSOK O BP PLR OK C cid8 D PLRcompK O C cid8 D Proof Since C normalized wrt K O hypothesis line 3 PLR computes identity function cid29 C It easy line 2 PLR First note versions rules 4 6 Table 3 C Table 4 apply set functionality range axioms funcR compK O funcR K rangeR A compK O rangeR A K deﬁnition comp So additional axioms compK O trigger rules 4 6 PLR Second C single atom form hypothesis rule 7 Table 3 applies The normalization rules PLR PLR produce cid29cid29 splitD C concept C Consequently loops lines 59 PLR lines 48 PLR return result To suﬃces PLR We conclude lines 2 3 PLR O O O O STS O K Ci cid8 D j STScompK O Ci cid8 D j O 13 O The difference STS form A1 cid8 A posO atom form For reason STS line 3 checks A1 cid8 13 holds theorem proved cid2 K STS line 3 The membership tests executed STS K line 3 K C j single atom form follows hypothesis C single A The tests equivalent deﬁnition comp Remark 525 Note size compK O quadratic size K O PLR runs polynomial time number interval constraints simple policy bounded Therefore assumption compK O computed subsumption queries answered polynomial time If O uses expressive constructs HornSRIQ computational cost conﬁned compilation phase essentially standard classiﬁcation O K cid2 A caveat size compK O order If given set policies BP single atom form O replaced O O shown Proposition 523 size O O BP Therefore size compK O O grow quadratically BP This relationship shows inﬂuence BP s size complexity oracle compilation approach So unfortunately oracle compilation possible For example application PL data markets illustrated conclusions currently general criterion restrict space possible queries required compilation method Remark 526 Using compilation approach soundness completeness PLR follow easily soundness K q true So suﬃces completeness PLR K q Note compK simply closure K respect inclusions compK PLRK q PLR preserves relation cid8 associated K This fact Theorem 524 respectively imply according K q holds PLR O PLRK q PLRcompK q PLR K q Similarly equality PLRK q PLR K q correspondence closure cid8 inclusions K compK immediately imply following corollary Theorem 520 Corollary 527 Let K PL knowledge base 1 A PL concept C C1 cid15 cid15 Cn unsatisﬁable wrt K iff Ci cid2 1 n 2 PL concept satisﬁability wrt K checked polynomial time 55 On limitations posed PLSO In section brieﬂy motivate restrictions posed PL subsumption problems oracles PLSO We start requirements oracle Recall O convex wrt QL use nominals Convexity wrt QL essential tractability shown result 25 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Theorem 528 If O convex wrt QL enjoys disjoint model union property exists PL knowledge base K deciding K O C cid8 D holds given intervalsafe PL subsumption query C cid8 D coNP hard Proof We proving coNPhardness reducing 3SAT complement subsumption By hypothesis posO contains inclusion A1 cid13 cid13 An cid8 B1 cid15 cid15 Bm 14 inclusions A1 cid13 cid13 An cid8 B belongs posO 1 m Without loss generality assume A1 cid13 cid13 An cid8 B2 cid15 cid15 Bm posO discard B 14 righthand minimal union entailed A1 cid13 cid13 An Now let K following set inclusions A fresh concept names cid29 cid8 Ai A cid29 B j cid8 B Note K O A B1 B construction K 14 We going represent truth values true false 1 n j 2 m cid29 cid29 cid8 B1 cid15 B respectively B cid29 cid29 cid29 Let S instance 3SAT let p1 pk propositional symbols occurring S We assume loss generality p1 pk occur K O Each positive literal pi encoded epi piB1 negative literals pi encoded epi piB Then negation S encoded cid29 D cid15eL1 cid13 eL2 cid13 eL3 L1 L2 L3 S Li literal complementary Li We claim nonentailment cid8 D 15 K O cid28 cid6 cid3 cid7 cid29 pi A holds iff S satisﬁable note subsumption query intervalfree trivially interval safe To prove assume 15 holds exists pointed interpretation I d I K O d cid6 cid2 cid29 holds symbol pi exists di cid3I Since K O d D pi A cid6 cid2 cid7I cid7 I cid29 cid29 pi A cid29I I 1 di B cid8 piB1 cid15 piB Construct truth assignment σ S setting d di p cid8 I di B di B di B true false I 1 I 1 di B cid29I σ pi I Since d D satisﬁes literal deﬁnition It follows immediately σ satisﬁes S clause L1 L2 L3 S contains literal pi pi respectively di B I 1 di B cid29I σ Conversely suppose S satisﬁed truth assignment σ We going construct pointed interpretation I d witnesses 15 Recall A1 cid13 cid13 An cid8 B1 A1 cid13 cid13 An cid8 B2 cid15 cid15 Bm belong posO Then O disjoint models M1 M2 d1 cid3M1 d2 cid3M2 di A1 cid13 cid13 AnMi d1 B d2 B2 cid15 cid15 BmM2 M1 1 1 2 The union U M1 cid25 M2 model O hypothesis extended model J K O setting cid3J cid3U cid29 J A1 cid13 cid13 AnJ J B2 cid15 cid15 BmJ cid29 A B Finally extend J witness I follows First let cid3I cid3J choose d cid3J For symbols pi deﬁne I I p p d d1 d d2 σ pi false cid7 cid2 Note d belongs S contains literal L satisﬁed σ If L pi p p d d2 d piB cid29I eLI pi A cid29 I I d d1 d piB1I eLI It follows immediately d D I cid2 construction left prove d D I By assumption clause Similarly L pi 26 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Note theorem shows reasoning intractable K O ﬁxed The requirement nominals occur oracles needed completeness Our algorithm PLR IBQ methods oracle queries consistency tests form 10 equivalent inclusions form 9 generalized following deﬁnition accounts shifting axioms K O O Deﬁnition 529 Let PI set problem instances form cid26K O qcid27 K O knowledge bases q inclusion A shifting IBQ mechanism PI pair functions s r cid26K O qcid27 PI 1 sK K 2 rsK posO K sK q true iff K O q Informally speaking s determines axioms shifted K O r IBQ reasoner decides entail ment modiﬁed knowledge bases Shifting IBQ mechanisms exist O use nominals Theorem 530 Let DL description logic supports nominals disjointness axioms Let PI set problem instances contains cid26K O qcid27 K O DL knowledge base q EL inclusion28 There exists shifting IBQ mechanism PI Proof Let K q R A cid13 B cid13 R A cid13 B cid8 A cid29 Let O1 disjB B O2 disjB B A cid8 Note cid26K O1 qcid27 cid26K O2 qcid27 belong PI It easily veriﬁed posO1 posO 2 particular sets contain inclusions form A1 cid13 cid13 Am cid8 B1 cid15 cid15 Bn inclusion tautology concept occurs lefthand righthand B B occur lefthand However K O1 cid28 q K O2 q The fact holds nominal R A cid13 B R A cid13 B role ﬁller satisfy disjoint concepts B B time It follows q trivially satisﬁed lefthand equivalent Now suppose shifting IBQ mechanism s r PI exists shall derive contradiction By condition 2 Deﬁnition 529 rsK posO1 K sK q false rsK posO2 K sK q true However K sK consequently rsK posO1 K sK q r posO1 q r posO2 q rsK posO2 K sK q contradicts 16 17 cid2 16 17 Remark 531 The result complements analogous negative result 20 Theorem 4 applies knowledge bases K inﬁnity axioms PL knowledge bases ﬁnite model property On hand 20 Theorem 4 covers expressive oracle query languages The proof negative result based limited expressiveness oracle query language QL A similar consideration applies requirement cid2O share concept names cid2K cid2q Without assumption PLR complete More generally O Theorem 532 Let PI set problem instances contains cid26K O qcid27 K O EL knowledge base q EL inclusion possibly sharing roles O There exists shifting IBQ mechanism PI 28 We use EL inclusions strengthen result special case PL subsumption queries 27 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Proof Let K q R A cid8 S A O1 O2 q Note posO1 posO2 contain tautological inclusions form 9 K O1 cid28 q K O2 q Then assumption shifting IBQ mechanism PI exists leads contradiction argument Theorem 530 cid2 In light negative results natural question oracle query language expressive QL remove need restrictions nominals roles Note IBQ mechanisms shared roles introduced 20 For fragment EL exists IBQ algorithm terminates polynomial time Nominals allowed shared roles suitable conditions In order support expressive oracle queries PLR K extensively changed The proofs O negative results reveal simple treatment existential restrictions STS K replaced complex computation involving oracle queries currently clear signiﬁcantly changes affect scalability reasoning possibility compiling oracles PL knowledge bases Given scalability SPECIALs primary requirements evidence shared roles needed SPECIALs application scenarios cf Remark 51 leave question interesting topic research STS O O 6 Experimental assessment O In section Java implementation PLR compare performance popular engines We focus PLR opposed complex PLR SPECIALs application scenarios compatible oracle compilation PL knowledge base illustrated Section 54 The implementation experimental evaluation PLR interesting applications PL lie scope paper SPECIALs engine tested randomly generated sets inputs The ﬁrst set based knowledge base policies developed Proximus Thomson Reuters Consent policies generated modifying business policies mimicking selection privacy options list provided controller This ﬁrst set test cases meant assess performance engines application scenarios expect arise frequently practice The second set experiments makes use larger knowledge bases policies meant predict behavior engines complex scenarios arise future O The implementation PLR optimizations described subsection Then Section 62 illustrates test cases evaluation Finally Section 63 reports results experiments 61 Prototype implementation optimization PLR implemented Java distributed jar ﬁle The reasoners class named PLReasoner supports standard OWL APIs version 517 The package includes complete implementation PLR including structural subsumption algorithm STS preliminary normalization phases based 7 rewrite rules interval splitting method interval safety The interval splitting method reﬁned order reduce explosion business policies The reason reﬁnements easily seen business policy contains interval 1 10 consent policy contains 5 10 method illustrated 8 splits 1 10 unnecessarily large set intervals 1 1 2 4 5 5 6 9 10 10 cause single simple policy replaced 5 policies Note interval safety splitting 1 4 5 10 While 8 convenient theoretical analysis simpler deﬁnition increase asymptotic complexity articulated algorithm advisable practice Here sketch underlying idea interval end point classiﬁed based occurs lower bound upper bound A singleton interval generated category endpoints treated eﬃciently In particular example 1 5 occur lower bounds allows generate nonsingleton subintervals 1 5 lower bound Moreover 10 occurs upper bound allows create nonsingleton subinterval 10 upper bound Accordingly reﬁned splitting algorithm generates intervals 1 4 5 10 Several optimizations implemented assessed The corresponding versions PLR described 28 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 PLR c The normalization steps lines 2 3 PLR expensive parts reasoner In order reduce cost caches introduced The ﬁrst cache stores business policies normalized wrt K line 2 PLR In way seven rewrite rules applied business policy policy line 2 simply retrieves normalized concept cache This optimization expected effective SPECIALs application scenarios business policies need normalized number limited So probability reusing normalized policy high cache going grow indeﬁnitely contrary size expected moderate Similarly second cache indexed policies C D stores concepts split D C computed speeding line 3 PLR interval splitting step needed interval safety PLR 2n PLR c 2n PLR 2n normalizes C D seven rewrite rules computing splitD C Since rewrite rules merge delete intervals D optimization potentially reduces number splitting points consequently size splitD C We denote PLR c 2n version PLR exploits caches PLR c applies double normalization PLR pre PLR pre PLR pre 2n Sometimes normalization phases precomputed When set business policies set intervals occur consent policies known advance seven rules interval splitting applied compliance checking starts For example intervals available advance minimum maximum storage time determined law duration options available data subjects consent requested speciﬁed data controller This version engine designed scenarios The given set business policies fully normalized compliance checking starts stored caches supported PLR c During compliance checking lines 2 3 retrieve concepts caches In way cost compliance check exclusively cost STS This version PLR evaluated measuring compliance checking time preliminary normalizations included 62 Test case generation The ﬁrst set test cases derived business policies developed pilots Proximus Thomson Reuters policies denoted P PXS P TR respectively In compliance check P B cid8 P C P B union simple business policies randomly selected occurring pilots policy P PXS P TR Since P B describes activity business process data controller random choice P B essentially corresponds random distribution controllers data processing activities abstracted simple policies business processes The consent policy P C union set simple policies P C 1 n randomly selected pilots policy randomly perturbed replacing vocabulary terms different term The random selection mimicks opt inoptout choices data subjects respect data processing activities modeled simple policies Similarly random replacement terms simulates optinoptout choices data subject wrt component selected simple policies More precisely modiﬁed term occurring P C superclass resp subclass corresponding term original business policy data subject opted broader resp restrictive permission relative involved policy property data categories purpose In batch experiments knowledge base SPECIALs ontology deﬁnes policy roles tempo rary vocabularies data categories purpose categories The size number batch experiments reported Table 5 The number randomly generated business policies higher case P PXS simple poli cies P TR ratio 20 generated policies simple policy Queries obtained generating 100 consent policies business policy Table 5 reports average number simple policies generated policy standard deviation The size policy limited SPECIALs usage policy format interval constraint simple policy nesting depth 2 In second set experiments ontologies PL subsumptions completely synthetic creasing size order set stress test verifying scalability SPECIALs reasoner Fifteen ontologies generated ﬁve sets parameters O1O3 reported Table 6 The table reports parameters generate PL concepts occurring queries according size speciﬁcations P1 P2 Note approximately half roles concrete properties functional half roles range axiom Ontologies generated randomly distributing classes approximately logclasses layers Then speciﬁed number disjointness axioms generated picking classes layer Finally 2 classes inclusions created adjacent layers way class inconsistent The ratio 29 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Table 5 Size test cases inspired pilots Proximus PXS Thomson Reuters TR Ontology inclusions disj range func classiﬁcation hierarchy height Business policies generated policies avg simple pol pol std dev Consent policies generated policies avg simple pol pol std dev Test cases generated queries 186 11 10 8 4 120 271 172 12000 377 202 12000 186 11 10 8 4 100 239 186 10000 342 203 10000 Table 6 Size fully synthetic test cases Ontology size classes roles concrete properties func range avg disj avg inclusions avg classiﬁcation hierarchy height O1 100 10 10 10 5 3 211 8 O2 O3 1000 50 25 37 25 31 2224 10 10000 100 50 75 50 298 23418 14 Concept size max simple pol pol max toplevel inters simple subconcept max depth nesting avg simple pol pol avg depth Simple policy size avg intersections avg intervals P1 10 10 4 68 24 P2 100 20 9 501 5 106 37 258 9 number inclusions number classes similar ratio observed frequently real ontologies cf 363533 We generated 100 concepts size P1 1000 size P2 picking interval endpoints 0 365 year days Each set split business consent policies resp 30 70 generated policies paired randomly generate test queries The number queries size P1 generated ontology 50 Let int maximum number interval constraints simple policy normalization wrt 7 rules29 given business policy The number queries size P2 generated ontology business policy int 5 10 The maximum number queries ontology int 5 limited 40 order length experiments reasonable range In case maximized number different business policies occurring selected queries For ontology K business policies selected available Kconsistent policies Furthermore possible queries selected way number positive negative answers Table 6 illustrates average size generated policies parameter setting We limited number interval constraints order analyze behavior PLReasoner number intervals simple policy grows bounded PL subsumption query answering coNPhard The maximum nesting level occurring generated policies approximately log2max disjuncts 63 Performance analysis The experiments run server 8cores processor Intel Xeon Silver 4110 11M cache 198 GB RAM running Ubuntu 1804 JVM 180_181 conﬁgured 32 GB heap memory 700 MB actually experiments We exploited parallelism engines implementation 29 The reason measuring int normalization explained later 30 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Fig 1 Comparisons smallmedium policies Fig 2 Impact interval number simple policy large policies First compare PLR Hermit reasoner selected comparison directly supports subsumptions intervals30 We start illustrating results test cases small medium policies Fig 1 shows PLR faster Hermit test sets optimization applied The size ontology affects performance Hermit PLRs results O1 O2 O3 The good performance PLR PXS TR expected given policies involved test sets SPECIALs usage policies deﬁnition contain interval constraint simple policy form has_durationcid4 u Let int denote maximum number intervals simple policy applying rewrite rules recall size split D C grow exponentially int We limited int generating synthetic policies P1 P2 number intervals affects performance PLR recall int unbounded PL subsumption coNPcomplete We measured value int applying rewrite rules collapse delete intervals reducing complexity subsequent interval splitting phase size split D C After application seven rules maximum int business policies occurring P1s queries 9 Fig 1 shows potential combinatorial explosion split D C frequently occur policies The probability splitting single interval subintervals evidently high On contrary combinatorial explosion clearly observable test sets large policies P2 Fig 2 illustrates results smallest synthetic ontologies O1 Then analyzed effects optimizations described Section 61 Their effectiveness small medium policies illustrated Fig 3 The normalization consent policies 2n brings beneﬁts small policies actually slightly decreases engines performance compare PLR 2n PLR PLR c 2n PLR c Its beneﬁts start visible medium policies The cache normalized policies PLR c best option small policies On medium policies combination caches normalization consent policies PLR c 2n effective optimization Over large policies P2 normalization consent policies 2n essential mitigate combinatorial explosion splitD C shown Fig 4 The versions PLR normalize D impractical int 3 computation time PLR 2n PLR c 2n moderately increases This behavior explained observing effects normalization test set application rewrite rules average number intervals 10 times smaller reduces probability exponential growth split D C 30 See Remark 61 31 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Fig 3 Effectiveness optimizations smallmedium policies Fig 4 Effectiveness optimizations large policies small ontologies Next Fig 5 compare best version engine mediumlarge policies PLR c 2n Hermit The optimizations delay effects combinatorial explosions int 7 After threshold Hermit faster Finally analyzed effectiveness business policy prenormalization pre Recall approach feasible practice business policies intervals occur consent policies known advance change frequently The effects prenormalization small medium policies remarkable PLR pre approximately order magnitude faster Hermit shown Fig 6 Over pilotinspired tests prenormalization brings average time subsumption query 500 μseconds The effects prenormalization quickly disappear large policies Fig 7 shows explosion split D C makes necessary apply normalization consent policies delay combinatorial effects PLR pre 2n However int 8 PLR pre 2n slower Hermit prenormalization deal combinatorial explosion better PLR c 2n 32 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Fig 5 Hermit vs PLR caches double normalization Fig 6 Effectiveness business policy prenormalization smallmedium policies PLR compared ELK specialized reasoner tractable proﬁle OWL2EL exploiting simple structure PXS The policies test set contain intervals natively normalized contain subconcept RC role R For reasons PXS correctly processed ELK supports intervals functionality axioms Using ELK average time subsumption query 311 milliseconds versions PLR signiﬁcantly faster Such difference performance partially cost initializing maintaining ELKs indexing struc tures eﬃcient application inference rules illustrated 33 Moreover worstcase complexity ELKs algorithm higher PLRs O n3 vs O n2 In order test GraphDB subsumption query C cid8 D translated explained Section 53 asserting Ca knowledge base fresh individual transforming D SPARQL query check Da entailed Recall reduction applicable C contains intervals GraphDB tested PXS 33 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 Fig 7 Effectiveness business policy prenormalization large policies only31 The cost asserting Ca KB cost translating D SPARQL cost parsing SPARQL query included measurement The average time query calculated way 1684 ms PLR signiﬁcantly faster test set It considered GraphDB optimized relatively small usergenerated queries large ABoxes SPECIALs scenarios involve huge number large automatically generated queries small ABoxes Next processed PXS RDFox Oxford Semantic Technologies For purpose PL subsumptions translated SPARQL queries reduction GraphDB Computation time include cost assertions Ca cost translation D On average RDFox takes 103 ms compliance check Also case remarked similarly GraphDB RDFox optimized small usergenerated queries large ABoxes SPECIALs scenarios exhibit opposite features The response time RDFox include cost computing logical consequences KB materi alized Ca asserted On hand measurements include parsing SPARQL queries So performance RDFox improved caching queries order parse ﬁrst time processed Remark 61 According Oxford Semantic Technologies proﬁtable leverage RDFoxs generality replace standard reduction query answering experiments Datalog metainterpreter implements method PL subsumption checking introduced Section 4 Such metainterpreter process reiﬁed representation PL concepts use Datalog extensions comparison operators aggregates interval splitting equality encode functionality axioms A ﬁrst advantage implementation answer PL queries standard reduction applicable subsumptions intervals Another potential advantage terms performance RDFox materialize incrementally update subsumption predicate A potential disadvantage expected size materialization number business consent policies grows Concerning PLR performance improved adopting RDFoxs implementation choices particular reengineering PLR C ii exploiting parallelism Independently performance considerations experimental results PLR prove realtime subsumption checking PL achieved necessarily resorting complex proprietary technology This fact fosters adoption topic discussed conclusions We considered Konclude general reasoner competitive standard classiﬁcation benchmarks 47 Konclude support intervals tried PXS Konclude integrates tableau algorithm completionbased saturation payasyougo behavior adopts wide range optimizations The current 31 On hand unlike GraphDB PL able express SPARQL queries 34 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 version focused classiﬁcation tasks streams PL subsumptions processed cost repeating classiﬁcation knowledge base query This prevents fair comparison Hermit PLR tests Konclude slower 7 Conclusions We introduced description logic PL order formalize data usage policies adopted controllers consent data processing granted data subjects Checking controllers policies comply available consent boils subsumption checking PL concepts PL formalize parts GDPR means subsumption checking automatically check constraints usage policies example Are required policy properties speciﬁed Are required obligations speciﬁed Is policy compatible GDPRs constraints crossborder data transfers PL queries supports interval constraints form f cid4 u order model limitations data storage duration This feature affects convexity hinders direct use query answering techniques Horn DLs PL simple possible order address requirements First usable people logical legal background One industrial partners successfully assessed usability PL verifying employees write correct business policies Second frequency compliance checks high PL query answering extremely fast scalable Despite simplicity PL general PL subsumption checking coNPcomplete interplay interval constraints concept union However reasoning tractable requiring simple policy lefthand subsumption query contain bounded num ber interval constraints restriction naturally satisﬁed SPECIALs usage policies consent policies formalization GDPR Under assumption subsumption checking split polynomialtime normal ization phase subsequent subsumption check carried fast structural subsumption algorithm STS The scalability complete algorithm PLR experimentally assessed Some test sets consist realistic policies ontologies derived SPECIALs pilots Such policies ontologies small generated synthetic stress tests policies ontologies signiﬁcantly larger expect real GDPR compliance scenarios Our tests PLR signiﬁcantly faster Hermit small medium policies This expected Hermit specialized PL constructs hypertableau subsumption check The performance PLR improved caching normalized policies PLR c With solution PLR takes 500 μseconds subsumption check test sets inspired SPECIALs pilots PXS TR By prenormalizing business policies PLR pre average cost subsumption check reduced 333 μsec PXS 487 μsec TR32 Over large policies P2 probability observing combinatorial explosion interval splitting grows performance PLR exhibits exponential decrease int grows int average number intervals simple business policy measured applying seven rewrite rules This phenomenon unavoidable P NP PL subsumption checking coNPhard int unrestricted However normalizing consent policies combinatorial effects mitigated normalization merge different intervals PLR c 2n turns faster Hermit int 8 PLR compared ELK GraphDB Konclude subset test cases engines answer PL queries intervals Being specialized PL queries PLR turns faster engines PLR faster RDFox standard reduction subsumption query answering adopted33 Alternatively possible implement PLRs reasoning method Datalog evaluate Datalog program RDFox Remark 61 Investigating approach interesting topic research In perspective expressiveness needed encode vocabularies data categories purposes recipients going exceed capabilities PL For reason shown integrate compliance checking method based PLR reasoners logics expressive PL The integration based import query approach If external ontology O deﬁnes vocabulary terms HornSRIQ main knowledge base K given subsumption query share concept names O algorithm PLR adaptation PLR calls reasoner O sound complete If O additionally belongs tractable DL subsumption checking tractable IBQ framework The restriction roles partly lifted allowing queries mention roles occurring O provided R cid2O existential restrictions RC contain roles cid2O O 32 This speed allows process 20 base station events 33 wiﬁ probing events generated second streaming scenario SPECIAL addresses issue running multiple compliance checks parallel means big data architecture example 1234 details 33 See optimization options discussed Section 6 35 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 We illustrated different implementation strategy based precompilation K O single PL knowledge base compK O size polynomial size K O number business policies Com pliance checks computed polynomial time compilation O belongs intractable logic Moreover precompilation allows exploit implementation PLR scalability assessed Section 6 This ap proach works SPECIALs use cases number business policies usually small K O business policies relatively stable persistent Unfortunately assumptions general potential applications PL Such applications include representation licenses constitute fundamental aspect data markets The application context respect analogous SPECIALs PL concepts encode usage restrictions apply datasets multimedia content In case policies reasonably assumed belong limited set associated sellers occur righthand subsumptions lefthand hardly restricted This hinders compilationbased approach require direct implementation PLR general IBQ reasoner PL Such implementation experimental assessment interesting topics research PL naturally encode electronic health records EHRs In case toplevel properties PL queries encode sections EHRs according HL7 standard sections contents speciﬁed SNOMED terms The IBQ framework allows process PL queries PLR reduce cost SNOMED oracle calls consisting linear time visits classiﬁcation graph The eﬃciency structural subsumption reasoner promising context challenging engines remarkable size SNOMED We plan try PLR O The simplicity PLR makes possible embed PL reasoning objects limited scripting capabilities For exam ple SPECIALs partners programmed PL compliance checking smart contract Ethereum blockchain In way creation new entries blockchain subject compliance speciﬁed policy This example simplicity foster adoption SPECIALs policy framework tightly bound speciﬁc technology components easily integrated variety systems increase performance secure view construction reported 15 O O SPECIALs deliverables comprise dashboards controllers data subjects data protection oﬃcers We going support user interfaces developing explanation algorithms helping data subjects understanding policies decisions The idea leveraging simple structure PL concepts axioms generate highlevel userfriendly explanations On theoretical results complexity PL queries novel discussed Section 53 extend available tractability intractability results extended faceted queries The negative result oracles nominals Theorem 530 extends result 20 logics like PL enjoy ﬁnite model property IBQ mechanism axioms main knowledge base K shifted imported ontology O There interesting topics future work For example currently know requirement cid2K cid2q cid2O NC relaxed affecting tractability appropriate hypotheses Another interesting line research consists tracing tractability threshold family logics obtained extending PL CLASSICs constructs particular attention number restrictions rolevalue maps nominals Preliminary results published 16 Last theoretical perspective interesting extent PLRs preprocessing adapted extend Horn DLs interval constraints affecting tractability We expect interplay number restrictions intervals increase complexity reasoning Declaration competing We wish conﬁrm known conﬂicts associated publication signiﬁcant ﬁnancial support work inﬂuenced outcome Acknowledgements This research funded European Unions Horizon 2020 research innovation programme grant agree ment N 731601 The GDPR compliance use case sketched 5 6 Example 32 Benedict Whittam Smith Thomson Reuters References 1 G Antoniou N Dimaresis G Governatori A modal deontic defeasible reasoning modelling policies multiagent systems Expert 2 A Artale D Calvanese R Kontchakov M Zakharyaschev The DLlite family relations J Artif Intell Res 36 2009 169 3 F Baader S Brandt C Lutz Pushing EL envelope IJCAI05 Proceedings Nineteenth International Joint Conference Artiﬁcial Intelligence 4 F Baader D Calvanese DL McGuinness D Nardi PF PatelSchneider Eds The Description Logic Handbook Theory Implementation Applica Syst Appl 36 2 2009 41254134 Professional Book Center 2005 pp 364369 tions Cambridge University Press 2003 36 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 5 M Bienvenu M Ortiz M Simkus G Xiao Tractability guarantees DLlite query answering Eiter et al 22 pp 4152 6 M Bienvenu M Ortiz M Simkus G Xiao Tractable queries lightweight description logics IJCAI 2013 Proceedings 23rd International Joint Conference Artiﬁcial Intelligence Beijing China August 39 2013 2013 pp 768774 7 PA Bonatti Datalog security privacy trust Datalog Reloaded First International Workshop Datalog 2010 Revised Selected Papers Oxford UK March 1619 2010 Lecture Notes Computer Science vol 6702 Springer 2010 pp 2136 8 PA Bonatti Fast compliance checking OWL2 fragment Proceedings TwentySeventh International Joint Conference Artiﬁcial Intelli gence IJCAI 2018 July 1319 2018 ijcaiorg 2018 pp 17461752 9 PA Bonatti B Bos S Decker JD Fernández S Kirrane V Peristeras A Polleres R Wenning Data privacy vocabularies controls semantic web transparency privacy Proceedings Workshop Semantic Web Social Good CoLocated 17th International Semantic Web Conference SW4SGISWC 2018 CEUR Workshop Proceedings vol 2182 CEURWSorg 2018 10 PA Bonatti S De Capitani di Vimercati P Samarati An algebra composing access control policies ACM Trans Inf Syst Secur 5 1 2002 135 11 PA Bonatti JL De Coi D Olmedilla L Sauro A rulebased trust negotiation IEEE Trans Knowl Data Eng 22 11 2010 15071520 12 PA Bonatti S Kirrane Big data analytics age GDPR 2019 IEEE International Congress Big Data BigData Congress 2019 IEEE 2019 pp 716 13 PA Bonatti S Kirrane A Polleres R Wenning Transparent personal data processing road ahead Computer Safety Reliability Security SAFECOMP 2017 Workshops ASSURE DECSoS SASSUR TELERISE TIPS Proceedings Lecture Notes Computer Science vol 10489 Springer 2017 pp 337349 14 PA Bonatti A Peron On undecidability logics converse nominals recursion counting Artif Intell 158 1 2004 7596 15 PA Bonatti IM Petrova L Sauro Optimized construction secure knowledgebase views Proceedings 28th International Workshop Description Logics CEUR Workshop Proceedings vol 1350 CEURWSorg 2015 16 PA Bonatti IM Petrova L Sauro A richer policy language GDPR compliance Proceedings 32nd International Workshop Description Logics CEUR Workshop Proceedings vol 2373 CEURWSorg 2019 17 A Borgida PF PatelSchneider A semantics complete algorithm subsumption CLASSIC description logic J Artif Intell Res 1 1994 277308 18 D Carral C Feier B Cuenca Grau P Hitzler I Horrocks ELifying ontologies Automated Reasoning 7th International Joint Conference IJCAR 2014 Held Part Vienna Summer Logic VSL 2014 Proceedings Vienna Austria July 1922 2014 2014 pp 464479 19 D Carral C Feier B Cuenca Grau P Hitzler I Horrocks Pushing boundaries tractable ontology reasoning The Semantic Web ISWC 2014 13th International Semantic Web Conference Proceedings Part II 2014 pp 148163 20 B Cuenca Grau B Motik Reasoning ontologies hidden content importbyquery approach J Artif Intell Res 45 2012 197255 21 B Cuenca Grau B Motik Y Kazakov Importbyquery ontology reasoning access limitations IJCAI 2009 Proceedings 21st International Joint Conference Artiﬁcial Intelligence 2009 pp 727732 22 T Eiter B Glimm Y Kazakov M Krötzsch Eds Informal Proceedings 26th International Workshop Description Logics Ulm Germany July 2326 2013 CEUR Workshop Proceedings vol 1014 CEURWSorg 2013 23 B Glimm I Horrocks B Motik G Stoilos Z Wang Hermit OWL 2 reasoner J Autom Reason 53 3 2014 245269 24 G Governatori F Olivieri A Rotolo S Scannapieco Computing strong weak permissions defeasible logic J Philos Log 42 6 2013 799829 25 RH Güting Graphdb modeling querying graphs databases JB Bocca M Jarke C Zaniolo Eds VLDB94 Proceedings 20th International Conference Very Large Data Bases Santiago Chile Chile September 1215 1994 Morgan Kaufmann 1994 pp 297308 26 C Haase C Lutz Complexity subsumption EL family description logics acyclic cyclic tboxes ECAI 2008 18th European Confer ence Artiﬁcial Intelligence Proceedings Frontiers Artiﬁcial Intelligence Applications vol 178 IOS Press 2008 pp 2529 27 R Hoekstra J Breuker MD Bello A Boer LKIF core principled ontology development legal domain Law Ontologies Semantic Web 28 I Horrocks O Kutz U Sattler The irresistible SROIQ Proceedings Tenth International Conference Principles Knowledge Represen Channelling Legal Information Flood 2009 pp 2152 tation Reasoning AAAI Press 2006 pp 5767 29 JF Horty Agency Deontic Logic Oxford University Press 2001 30 S Jajodia P Samarati ML Sapino VS Subrahmanian Flexible support multiple access control policies ACM Trans Database Syst 26 2 2001 214260 31 AJI Jones MJ Sergot On characterization law systems normative systems perspective JJC Meyer RJ Wieringa Eds Deontic Logic Computer Science Normative System Speciﬁcation Wiley 1993 pp 275307 chapter 8 32 L Kagal TW Finin A Joshi A policy language pervasive computing environment 4th IEEE International Workshop Policies Distributed Systems Networks POLICY IEEE Computer Society June 2003 p 63 33 Y Kazakov M Krötzsch F Simancik The incredible ELK polynomial procedures eﬃcient reasoning EL ontologies J Autom Reason 53 1 2014 161 34 S Kirrane JD Fernández W Dullaert U Milosevic A Polleres PA Bonatti R Wenning O Drozd P Raschke A scalable consent transparency compliance architecture The Semantic Web ESWC 2018 Satellite Events Revised Selected Papers Lecture Notes Computer Science vol 11155 Springer 2018 pp 131136 35 N Matentzoglu S Bail B Parsia A corpus OWL DL ontologies Eiter et al 22 pp 829841 36 B Motik R Shearer I Horrocks Hypertableau reasoning description logics J Artif Intell Res 36 2009 165228 37 Y Nenov R Piro B Motik I Horrocks Z Wu J Banerjee Rdfox highlyscalable RDF store M Arenas Ó Corcho E Simperl M Strohmaier M dAquin K Srinivas PT Groth M Dumontier J Heﬂin K Thirunarayan S Staab Eds The Semantic Web ISWC 2015 14th International Semantic Web Conference Proceedings Part II Bethlehem PA USA October 1115 2015 Lecture Notes Computer Science vol 9367 Springer 2015 pp 320 38 M Ortiz S Rudolph M Simkus Worstcase optimal reasoning horndl fragments OWL 1 2 Principles Knowledge Representation Reasoning Proceedings Twelfth International Conference KR 2010 AAAI Press 2010 39 M Ortiz S Rudolph M Simkus Query answering horn fragments description logics SHOIQ SROIQ IJCAI 2011 Proceedings 22nd International Joint Conference Artiﬁcial Intelligence IJCAIAAAI 2011 pp 10391044 40 M Palmirani G Governatori Modelling legal knowledge GDPR compliance checking Legal Knowledge Information Systems JURIX 2018 ThirtyFirst Annual Conference Groningen Netherlands 1214 December 2018 2018 pp 101110 41 M Palmirani M Martoni A Rossi C Bartolini L Robaldo Legal ontology modelling GDPR concepts norms Legal Knowledge Informa tion Systems JURIX 2018 ThirtyFirst Annual Conference Groningen Netherlands 1214 December 2018 2018 pp 91100 42 M Palmirani M Martoni A Rossi C Bartolini L Robaldo Pronto privacy ontology legal reasoning Electronic Government Information Systems Perspective 7th International Conference Proceedings EGOVIS 2018 Regensburg Germany September 35 2018 2018 pp 139152 43 CH Papadimitriou Computational Complexity Academic Internet Publ 2007 37 PA Bonatti L Ioffredo IM Petrova et al Artiﬁcial Intelligence 289 2020 103389 44 H Prakken G Sartor Law logic review argumentation perspective Artif Intell 227 2015 214245 45 MJ Sergot F Sadri RA Kowalski F Kriwaczek P Hammond HT Cory The British nationality act logic program Commun ACM 29 5 1986 370386 46 E Sherkhonov B Cuenca Grau E Kharlamov EV Kostylev Semantic faceted search aggregation recursion The Semantic Web ISWC 2017 16th International Semantic Web Conference Proceedings Part I Vienna Austria October 2125 2017 2017 pp 594610 47 A Steigmiller T Liebig B Glimm Konclude description J Web Semant 2728 2014 7885 48 A Uszok JM Bradshaw R Jeffers N Suri PJ Hayes MR Breedy L Bunch M Johnson S Kulkarni J Lott KAoS policy domain services descriptionlogic approach policy representation deconﬂiction enforcement 4th IEEE International Workshop Policies Distributed Systems Networks POLICY IEEE Computer Society June 2003 pp 9396 49 TYC Woo SS Lam Authorizations distributed systems new approach J Comput Secur 2 23 1993 107136 38