ELSEVIER Artificial Intelligence 73 1995 149173 Artificial Intelligence A situated view representation control Stanley J Rosenschein Leslie Pack Kaelbling v2 hnputer Science Departntent Box 1910 Brown Universiiy Providence RI 029121910 USA Received December 1993 revised September 1994 Abstract Intelligent agents systems complex ongoing interaction environment dynamic imperfectly predictable Agents typically difficult program correctness program depends details agent situated environ ment In paper present methodology design situated agents based theory This approach allows designers informational content situatedautomata agents computational states semantically rigorous way requiring commitment conventional runtime symbolic processing We start outlining situated view repre sentation contributes design methodologies building systems track perceptual conditions purposeful actions environments 1 Introduction Humans delivery robots automated factories systems telligent ongoing interaction environments dynamic imperfectly pre dictable Such systems called situated agents They constitute important class systems difficult program close interaction environment situated Specifications correctness situated agents specifications interactions environment action agent environment particular configuration Programs Corresponding author Email lpkcsbrownedu Work paper suppolted National Aeronautics Space Administration contract NAS213326 Defense Advanced Research Projects Agency NASA contract NASZ 13229 TEC contract DATA7693C0017 Work paper supported pm National Science Foundation National Young Investigator Award IRI9257592 ONR Contract NOOO14914052 ARPA Order 8225 OOO43702950950 1995 Elsevier Science BV All rights reserved SSDIOOO4370294000565 150 SJ Rosenschein LJ KuelblingArtificial Intelligence 73 I 995 149I 73 situated agents allow respond appropriately situations diverse rapidly changing important theories representation The emphasis agents connection environment control based situatedautomata symbolic symbolic traditional informal overview particular methodology This methodology use highlevel requiring folk wisdom view case feel gain analyzing semantics representations outlining methodologies actions change In paper present design situated agents 14161 allows designers content agents agent It In In spirit start design purposeful situated agents representation situated view representation track perceptual conditions contributes situated perspective environments implemented informational incompatible building languages structures concepts systems theory 2 Situated representation building situated agents moment Our ultimate aim designing perform rich set tasks correctly goals In order specify correct behavior situations appropriate particular program satisfy specification need precise relationship Once behavior internal states agent conditions precise clear specifications states agent satisfies agent environment generate program carry actions specifications environment relationship manipulating desired internal For example suppose designing agent task water plant dry From outset account agent environment agent water plant statement environment dry In order design controller systematic way talking relationship agent environment problem contains specification interaction statement 21 Existing approaches There variety approaches describing relationship agents environments Many simple embedded systems designed according little internal variables parametric theory These systems usually estimates set realvalued directly quantities estimate actions correct control interaction agents quantities responses depend inside agent based incoming designs machinery sensory signals The control taken agent depend estimates quantities This approach works described simple environment form The designer control chooses state principles control consists typically state environment realworld SJ Rosenschein LP KaelblingArtificial Intelligence 73 1995 149I 73 151 functions continuous fairly directly As agents environments information represented quantities In artificial intelligence community represented typically environment systems designer agents memory applicable complex world computationally arbitrarily including propositions estimated sensed complex abstract approach longer suffice intended semantics information agents symbolically A formal language relates sentences state developed world denote This approach states agent representation relationships intractable maintain provide ascriptional stored useful world thermostat speaks attributing accounts researchers order agents actions states agent states environment McCarthy knowledge temperature lo 121 gives definition knowledge agent terms service Many lationship example Newell true goal More formal notions agents having knowledge environment knowledge agent anothers knowledge tions example Halpem Moses knowledge tion protocols Moses specifying effective way describing model purpose asking ques 2 provide concrete computational model communica Halpern systems We use approach agents finding similar concept knowledge applications distributed work epistemic logic Moore agent environment logic formalization 1 I uses epistemic relationship rational epistemic embedded logic 22 The situatedautomata model Traditional theories computation putation function The inputs presented time generates question answer course tially changed based notion computation process computational com works answer terminates There question arbitrarily complex poten started including simple questions computation 221 Interaction model It appropriate think agent embedded environment environment For purposes work model transduction It stream inputs outputs actions environment coupling operating alternating synchronous require synchronously agent generating turns interaction output agent In transduction model inputs agent environment pair automata world generating input perception interaction action world In order plausible model interacting dynamic environment generate actions fail strictly timed intervals agent viewed automaton generates performing generates stream seen taking agent mapping agent environment We note passing outputs mediated internal state Fig 1 shows coupling agent 152 SJ Rosenschein Ll KaelblingArtcial Intelligence 73 1995 149I 73 Fig I Interaction agent environment interesting model perspective model agents robotic biological taken properties single agent perspective environment This gives way discuss large numbers agents From environments 222 Correlational deJnition information tasks specified agent action A This specification agent direct access immediately case Because agents actions form P true state Agent environment arbitrary properties implemented reality world In general depend inputs internal state agent programs ultimately expressed form P true state agent agent action A P Our problem P P implies P taking action A P holds specification agents state sufficient account relationship systematic satisfy One way view relationship terms correlation states agent states external world We agent x state u carries information 9 state u 4p true world This definition originally classes strings 141 terms equivalence leave automaton state articulated Given simple robot plantwatering definition specify information fairly weak specification For example task pre plant dry water agent carries cisely plant Of course stands satisfied trivially agent internal state simply uncorrelated state plant To rule consequence require agent track dry agent carry dry plant information dry These water plant dry dry agent carry information informational taken specify agent requirements dry plant SJ Rosenschein LP KaelblingArtificial Intelligence 73 1995 149I 73 153 A I _S iF Hg 2 Circuit model finitestate machine 223 Circuit model computation We motivated concept information way relation internal states agent external state world In section introduce way describing structure agents internal states Considering agent automaton help design analysis We finergrained view considering agent parts called locations capable assuming set local states values time The set possible global states agent crossproduct local state sets atomic locations A machine set locations values depend time We construct arbitrarily complex machines machines primitive types pure functions delays Pure function machines consist possibly complex locations specify values location output function values input Delay machines consist locations constrain values output location values input location previous tick 3 Given network delay function elements complete feedback connections possible organize circuit form shown Fig 2 stateupdate function f maps input old value internal state new value internal state output function g maps input old value internal state output It useful think internal state state vector containing state individual delay elements machine Although definitions satisfied machines infinitely locations infinitely values focus attention machines finite sets atomic locations finite set values One obvious model abstract notion machine exists form digital hardware locations correspond wires function machines correspond logic gates 3 We use tick mean discrete time unit 154 SJ Rosenschein Li KaelblingArtiul Intelligence 73 1995 149I 73 delay machines state transduction correspond flipflops registers As known finite carried network basic components 23 Consequences situatedautomata model correlational model information useful formalism Although need logical suitable syntax semantics formalization nature situated representation situatedautomata model application directly adopt logical framework In section logical gives insights consider crucial machines complex 231 Formalization model We adopted logic means describing language information implementations proposition interactions environment izing This use logic specification mentation strategy This simple tain state carries state infinity propositions p Those propositions simple example illustrate gate Behaviorally input carries information information applied freely reason information information p 4 The inference output rule modus ponens inputs 1 Semantically state world simple device p 1 second stating criteria independent structure machines character correctness use imple logical descriptions information 9 x carries vice versa Because location x cer true x symbolically A consists single 1 1 conditional output machine involved input carries location value 1 carries implemented machine locations machine written manipulated point Consider machine The correlational epistemic information formalized carries relation possible worlds axioms 3 definition information 161 introduced form Kx p logic cp This definition information giving rise accessibility Section 222 directly agent x indicate induces equivalence relation satisfying S5 Kx PD f P Kxqo fJ 4 Kxcp Kx consequential closure truth Kx 40 Kx Kx P TKX 40 Kx x3 PO 1 positive introspection negative introspection We view agent union locations states component agent constituent simple important location carries locations compound corollary axioms conjunction information locations locations aggregating principle spatial monotonic carried constituent locations We useful apply K operator locations Information carried leads aggregate locations states agents comprised SJ Rosenschein LP KaelblingArtificial Intelligence 73 1995 149173 155 The formal model prove correctness properties agents given description circuit properties inputs certain informational embedded agent makes agent description informational example shown agent 16 1 This constitutes properties outputs correctness proof 232 Properties representations In standard programming methods AI inference systems semantics states typically mind values machine meaning stipulated attribute semantics definition knowledge values kinds semantics stipulated designer machine particular machine locations strives construct designated semantics hold The situatedautomata view allows locations objectively based correlational In following sections examine aspects relationship Time meaning assigns content information The correlational definition knowledge value time t continuing locations point time function value contain time world states value cooccur One immediate consequence definition hold value time t k location containing assigned information satisfied designer taken special care time instant interval design mechanisms objective For example consider information robot designer state 10 representation seconds The actual information likelihood intended weaker necessarily vacuous proposition object depending possible maximum relative velocity location intended stores updating values time track external change content t t k Unless content stored representation object updates robot object senses object world conditions reading distance disjunction distance bounds sensor takes Given situated view knowledge surprising standard AI way seriously degradation information systems operate time They certain memory machine manipulated formulae true change conclusions based longer valid sensory inputs process began written symbolically time Even stipulated semantics world data entirely possible course inference process Machines manipulate symbols framework The situatedautomata symbol manipulation sized symbolic symbolic representations systems It possible propositional The requirement applied perform intended semantics match real ones empha manipulates computations theory design information world way 156 SJ Rosenschein LP KaelblingArtijicial Intelligence 73 1995 149l 73 theory symbolically written proposition lational This achieved dynamics world proven difficult locations carry propositional information careful use time stamps axioms memory justified corre practice rarely illustrating information consider It interesting example In second approach obstacle obstacle known obstacle different ways In case dedicate particular bit machine meters agent 2 written locations carry single bit example In case location encoding bit crucial values locations encoded value values encoding representation obstacle symbols information information representation single condition In second case information involved occurring location carry information crucial combination memory particular bit devoted language compositional encoded location robot semantics symbols distance designed properly information representing To correctly functioning symbolic consider correlational semantics unary predicates fullycharged robot 1 ba1137 simple juxtaposition john wa112 Sentences symbols sequence simple red tired representation correct yields language symbols types individual constants language represented distant fullycharged robot1 red ball37 tired jobn distant wall21 value location standard Tarskian account timevarying unary predicates denote mappings time truth mappings propositions individuals temporally uniformly veridical true level propositions individual propositions temporallyindexical While correlational account information assigns meanings symbols interpreted differently individuals values indexical sentence semantics agree Importantly attached Tarskian semantics externally There clearly tradeoff memory representation constants denote meaning individuals stipulated Note framework situatedautomata symbol sequence designer mind In words attribution semantic content need information cases When efficient Symbolic kinds representation number bits atomic locations small making spectrum intermediate location form representation inefficient represented However expressible mation value proposition storing location hand thought advance designer machine compilation requiring bits encode syntactically representations largely space infor language represented proposition content flexible When storing propositional notoriously representations represented information individual SJ Rosenschein LP KaelblingArtQicial Intelligence 73 1995 149173 157 Per Fig 3 Pureaction case As observed location carries information P superlocation minimal location carries information P We information localized minimal location carries An especially important consideration decision encoding value location work localize important information In order particular action P true locations control effector eventually carry information P insufficient information encoded collection locations uniformlyinterpreted memory The work information P localize effector bits location combined information crucially depend initially represented When information encoded value complex operations indexing pattern matching localize information encoded location directly Such considerations guide representational choices designing building agents 3 Designing agents Given situated view agents environments interacting automata circuit model computation build design methodology agents situated dynamic environments We consider case agent internal state case agent monitors affect environment We conclude combining design methodologies entire agent 31 Pure action We begin considering control simple setting stimulusresponse systems map current inputs outputs dependence prior inputs At instant inputs carry information immediate state environment agent internal memory distinguish similar states residues past experiences In automaton model state set stimulus response automaton contains state inputs simply passed output relation This illustrated schematically Fig 3 Although stimulusresponse agents extremely limited complete agents nonetheless constitute relatively easytoanalyze starting point By criteria stimulusresponse actionselection judged successful A natural way answer question relativize success 158 SJ Rosenschein LP KuelblinArtrficinl Intelligence 73 199s 149l 73 stated goal specification families control problems arise depending meant term goal taken problem statement Different variability One dimension defining goals goals fixed dy goals actionselection mappings evaluated entire trajectory states engender To model agent pursuing dy namic With fixed goals designtime relative namic goals hand assumes method defining momenttomoment variations consistent current goals information logical situations agents preserve know agent seeks Even dynamic goals agent seen having selecting actions subtleties arise patho rationality choosing want fixed goal acting moment Interesting rationally expressed Goals vary complexity Another dimension variability optimizing goal form maintaining cates minimizing complexity complex quantification Because simple environmental complex numerical energy complex vary simple enumeration formulas expressive logical rich temporal operators invariants goal definition arises complexity temporal predi throughput form presentation states goals maintenance closed Boolean operations evaluation tradeoffs Regarding arbitrary maximize satisfying criteria languages lookup includes notations simple cases specifying particular try develop universal actionselection mappings suitable expressions solution methods Rather preferable extreme cases agent synthesis intractable reasonable develop action strategies develop inventory practica1 situations As defining tables dataflow functional language circuit descriptions expedite agent construction specification objective methodology solved special cases goal specification forms direct indirect One family direct methods functions input variables functional graphs A related family methods uses calculus relations expressions output restriction enumeratively Rex 48 primitive compact language relation composed applying operations cases determinization operator applied step like union action mapping compiles circuitry A Gapps program consists set goal reduction machines internal state abstract circuit descriptions Rex served substrate Gapps 57 1 fixed rules runtime specify highlevel goal transformed lowlevel goal When given fixed goal satisfy Gapps compiler generates provably correct inputtooutput map goal A Gapps possibly partial outputs action program appropriate situation One main strengths Gapps leastcommitment lowlevel returned result actions allows nondeterministic construction choice action satisfy multiple goals situation necessarily correct necessarily complete output action approach specific simpler relations represented satisfy particular goal relations The baselevel greatly simplifies takes symbolic reactive program compositional action mappings specifying guaranteed programs specification intersection form SJ Rosenschein LFf KaelblingArtQicial Intelligence 73 1995 149173 159 Although Gapps programs specified symbolic great deal work especially desired outcomes Gapps support rules require determining chains reduction goals programmer actions result sequences action based perceived derived abstract specifications programmer maintain commitments conditions In cases like programs 31 I Maintaining invariants goal regression Indirect methods define actionselection mapping deriving descrip form explicit combinatorial operator descriptions goal classical AI planning algorithmically tion environment object like graph form declarative assertions constructed consider illustrated scale large state sets introduce build intuitions A stimulusresponse properties action strategies agent represented invariants nondeterministic special case agents maintains maintain systems To illustrate stimulusresponse explicit description environment invariants Although agent goal method important concepts synthesized automaton follows S P A init Y Let environment l S finite set states environment l P finite set outputs usefully viewed percepts agents perspective l A finite set actions l init set states containing agent generate input environment environment known initially l Y relation S x A x S v SI SL holds possible world state si state s2 action generated transition agent l function mapping S P For simple pureaction case assume environment automaton outputs state output identity S agent A solution maintain problem stay indefinitely agent follows percept set P identical state set S In words function states Let goal represented G subset invariant condition G subset G mapping G A specifying environment actions iteratively order stay G The set G computed Let Go G For n 0 Let Gi 0 For g E G If 3aVg ug g g E G add g Gl When G Gr terminate return G 160 SJ Rosenschein LP KoelblingArtijiciol Intelligence 73 1995 149I 73 Each intermediate set G set states G maintained n steps For state g E G exists action possible n steps state g G maintained successor state g G maintained IZ I steps This step weakest 131 precondition planning When Waldinger process set G states G maintained In order maintain G state g agent action vgvgag G true step Rosenschein 171 complete description regressionbased reaches fixed point determined called goal Gi g E G regression indefinitely 312 Goal regression example Consider simple domain robot plants alive watering water plant noop action actions The action set robot contains The state world expressed vector describing level plant 4 wet watered 0 dead For example moisture vector wet second slightly drier dead Moisture decreases time step die reach moisture plant watered Plants 4 3 0 describes plant situation We consider situation plants dead G enumerated condition different orderings plants deleted maintenance goal level 0 stay dead forever plants goal maintain equivalent identity individuals states irrelevant 4 4 4 4 2 1 2 2 2 4 4 3 4 1 1 2 2 1 4 4 2 3 3 3 I 1 2 4 4 1 3 3 2 1 1 1 4 3 3 3 3 1 4 3 2 3 2 2 4 3 1 3 2 1 4 2 2 3 1 1 The G resulting goal regression algorithm 4 4 4 4 2 1 4 4 3 3 3 3 4 4 2 3 3 2 4 4 1 3 3 1 4 3 3 3 2 2 4 3 2 3 2 1 4 3 1 4 2 2 state G 3 2 1 By watering level The constrained 4 2 11 4 3 11 4 3 2 At point 1 changed original starting state allowed robot rest leading noop action 3 2 1 Note states G plants level 1 level 2 states G plants currently dead G plants dying plant moisture possible future 313 Discussion As mentioned increases handle construction motivates runtime goals achievement scale number envi use representations Although declarative operator states ronment ordinarily scriptions AI planning graphs drive construction interpretable intuitively systems encode form expression information statetransition Operator descriptions provide manipulated SJ Rosenschein LP KaelblingArticial Intelligence 73 1995 149l 73 161 Perception Fig 4 The pureperception case efficiently refer large subspaces state space terse symbolic labels Rather calculating G enumeration operator descriptions allow calculated symbolic regression This efficient alternative depending specifics problem domain This technique implemented explored extension Gapps programming 61 32 Pure perception Until assumed inputs environment sufficiently informa tive encode worldstate information needed drive action In cases information available inputs action selection derived accumulating partial information time purpose additional machinery necessary We refer additional machinery perception explore properties section As case action selection useful approach perception beginning study pure phenomenon By pure perception mean agentenvironment systems outputs agent influence environment agent simply tracking monitor passive observer seeing seen environment This special type agent limited practical use illustrates essential features information extraction The setup pure perception illustrated Fig 4 The lack influence agent environment depicted graphically environments state function independent output agent The focus analyzing perception kind correspondence main tained internal states states environment This correspondence fact form invariant exactly type investigated previous section states agentenvironment pair environment Even environment indifferent actions agent makes sense ask perception component designed maximize degree correlation states environment maximizing information To clearly consider environment modeled nondeter ministic automaton S P A init Y What maximum information encoded instantaneous percept In general best associate 162 SJ Rosenschein Lt KaelblingArtcial Intelligence 73 I 995 149l 73 compatible states inventory internal information accumulated percept p set environment s outs p What maximum agent automaton time Given rich environment track states Let environment 2 powerset S set internal states agent agent state gi world state s t consistent agents perceptual history far The agents init internal state u transition action percept p new internal state given initial state set possible function N T p maps previous powerset environments initial states environment having states isomorphic states pureperception agent optimally Ncrpa s 3s E vv s s A outs p This powerset automaton cumbersome optimal tracking behavior infeasible information intersection homomorphic homomorphic images allow useful tracker Nevertheless approximations Mathematically monitored carefully states powerset automaton efficient informationrich projections powerset automaton Although number environment space time designers control One simple approach states rises powerset construction quickly useful thought experiment value images ideal powerset automaton trading choose set close union powerset function preserved approximations consistent complete ideal optimal homomorphic computational constructing interesting significant Boolean perception true powerset elements approximated For example successor lattice best approximates Thus transition degrades gracefully represented function maps state element instead lattice sublattice transition state returned transition The proceeds case powerset automaton state element homomorphicimage typically Cartesian products simpler original powerset automaton algebra The construction lattices elements upper bounds function approximates parameter vectors representation sublattice successor initial precision transition optimal The result lattice compactly state function lattices lattice This technique forms basis RULER 151 RULER takes approach described including conditions ways AI planning synthesizes perceptual machinery systems In RULER environment analogous set assertions temporal assertions true initially true state depending current conditions The RULER compiler function constructing parameters interpretation space intersection compositional methodology initial state state view descriptive states world model The use lattices semantic domain parameter folded nicely leads model parameters allows incremental individual view perceptual update mechanisms effectively closing chaining action assertions computing constructing information sequences SJ Rosenschein LP KaelblingArtcial Intelligence 73 1995 149173 163 32 I Ruler compilation carried runtime RULERS compilation method works follows The compiler tion information variables background The compiler operates deriving true time given true previous derivation From updating state vector desired takes input descrip state world theorems true initially time In course systems manner logic programming program internal free variables instantiated extracts program theory containing instantiated initializing compiler informational facts formulas temporal inputs properties inputs consist following compilers More precisely 0 list al input 0 list bt l input l internal b internal locations state locations location formula PU free variable U location b formula Pb U free variable U function Konjb l finite set r facts The formulas Px U express propositions parameterized 17 U ranges runtime values location X example PM denote current soil mosture level 6 These values drawn lattice degrees partial information represented The rconj operations values combine content precisely values natural way Using formulas implicit compiler pair lattice conjunctive sets lattice merely rconj way propositions binary lattice value summarizing machine explicit manipulated The rconj operation extends possible information single functions For internal ib Nb defined follows necessarily location b compiler computes 0 symbol temporal sets runtime value terms logic operator representing lb e r t q init e hfI rttlPal rrPbb WXt Pbe ZM 0 If lower bound moisture decreases 1 e f al bl b If initially OPT time step q l PM PM n 1 Each set Ib contains terms representing hold proved initially hold represented values hold given input state incrementally proved background terms world Each set Nb contains This discussed fully If sets infinite ignorant soil moisture generated properties properties properties locations theory r From collections vector uc update function sets compiler computes initial value state f The initial value computed follows 164 SJ Rosenschein LP KaelblingArtijicial Intelligence 73 1995 149I 73 initial value state vector In words rconjing values compiler initial state environment state function components representing Similarly strongest propositions vector values derived inferred language state fQ lhbl LrconjlNbrconjjnNbl Without operators restricting containing denote execution available background strongest proposi nested expressions time operators Here compiler constructs vector expressions tions true language state components compile rconj values computed In case initial value time In case state time Rather values arguments rconj terms denote values known compile function generally compute values run time Assuming bounded depth expressions provide bound update time state vector sets Ib case finiteness terms time synthesis procedure exhibits This al longer achieved simply running procedure stage yield correct program nec available Since general program attuned approach resources consumed halt Nb finite However unrestricted language guarantees computed strongly monotonic information ascribe lows incremental stopping essarily additional rconj operations consume compiler track runtime resource elements It Mb compute environment elements derive compile time run time Furthermore specific information theory guarantee resources reasonable whichever improvements compiler bounded runtime reached behavior locations runtime limit As observed placing obvious background specify practical synthesis problem stylized formalisms theory r environmentdescription restrictions symbolic language synthesis method described hardly languages undecidable However Gapps certain style restricting exist intractable logic programming languages practical synthesis techniques developed language language tractability This restriction We experimented restriction logical expressiveness offer weak resembling Prolog addition init nRvt good compromise temporal Hornclause operators The derivation process proceeds described backwardchaining deduction implementing Hornclause language differs Prolog time expressions Compiletime expressions runtime final program The RULER run small examples tracking aggregation implementation techniques specific form inference A prototype built version synthesis algorithm One ways run ordinary manner expressions undergo unification simply accumulated generate involving object test strong distinction compiletime synthesis procedure proved contrast tractable SJ Rosenschein LI KaelblingArtificial Intelligence 73 1995 149173 165 Using offline synthesis techniques recognized limited machinery reactive bias admit sophisticated care designer clarify generated response semantics domain compiler conditions reason semantically semantic information complex entirely consistent models With forms representation guarantee finite parametric boundedtime representations updates realtime best worlds declarative 322 Ruler exumple This section sketches simple example pureperception synthesized RULER Imagine concerned constructing representation interval plant This gives rule representing information known plantwatering perceptual maintains robot times level collection plants The use uncertainty level lower upper bounds true moisture moisture able accommodate moisture p CO maxI states level Additionally moisture level sensor moisture plant p 0 maximum robot plant approximate reading moisturep Cvlvll p 1 atplant moisture_sensorv sensed In case input bit atplant p 1 term requires The atplant moisture The robot constructed known treat propositions similarly robot know plant p time n plant We way value 1 robot plant n value 0 robot known The dynamics world specified rules If know robots action water plant know didnt water know wasnt plant rain decrease 1 moisture increase terms moisturep Cllhl notwateringl moisturep moisturep notatplant moisturep lh llhl p 1 lh If know robot water plant maximum level moisture increase 166 SJ Rasenschein LP KuelblingArtijicial Intelligence 73 1995 149I 73 moisturep maxmaxl at_plantp wateringl I plant watered dont know robot watered If dont know spread quickly dont know bounds plant moisturep Cl1 maxl moisturep lh rule conflict rules Note moisture We combine moisture set rules results moisture plant given inputs specified representation tighter bounds rconj rule intervals Running RULER intersect retains results rules specifying In case simply possible provide circuit information 323 Objects properties und relations adequate domain models RULER limited generating provably correct perceptual modeling worlds importance This case example While conceptually nonprobabilistic provision special scene concerns observer To begin address domains type developed informationupdate schema named Percm subsystems makes special objects properties relations visual perception objects extracted identity objects spatial relations view prime form information tracked described The descriptions The Percm schema thought specialized binary set objects labeled graphs node labels representing finite shifting represented edge labels representing agent rest objects vary moving scheme bears relationship Chapman Agre Pengi rigorous correlationbased edge labels drawn RULER case properties conjunction relations type property relation coercible semantic space data values indexicalfunctional form RULER unary properties objects focus This developed semantics The node lattice elements fixed fixed representations representing propositional matrix lattice elements constrained relations objects One objects attentional values Fig 5 shows basic runtime data structures underlie Percm n elements vector length n elements contains index 1 reserved agent In addition unary properties cell j contains strongest representable information relation objects j In cases relations upper triangle matrix needs There ith element tracked Often II x n matrix available symmetric explicitly canonicalizable represented The update cycle data structure similar context fixed background descriptions environment RULERS Percm provided form SJ Rosenschein LP KaelblingArticial Intelligence 73 1995 149173 167 Properties Relations pi p p3 P E Fig 5 Data structures supporting instance Percm schema n objects strengthens properties relations objects x y deriving existing properties relations x object properties relations This information transitions rules temporal built data structures These operations inferable l propositional atemporal assertions worldstate computing set operations update create maps input value initial object properties relations input propagate inferred y object z merge combines descriptions identical imply aggregate tence constituent initializes ys description based descriptions degrade maps properties t 1 creates new object y existence inferred time I new values objects x y properties constituents relations exis objects nt x appropriate properties relations inferable time relations iterating approximations The perceptual synthesized composing object descriptions values drawn obtain grace update size fully degrading complete designer define case object overhow objects discarded withdrawn active attention Circuitry size Operations bounded shallow circuit size On data structures updated large like finding cell new object lattices finite schema bounded instance Percm schema specification operations Because Percm 324 Percm example In order illustrate operation A mobile representation ideas robot traveling Percm schema present simple example needs construct new environment salient objects spatial relations The robot begin perceiving instantaneously objects 168 SJ Rosenschein L KaelblingArtificial intelligence 73 1995 149I 73 chair person stores unary properties haircolor person robot Rt2 Rts indices 2 3 type color chair gender cells P2 P3 stores bounds spatial relations It creates objects assigning propagate Immediately relations objects 2 3 store cell R 2 These objects merged aggregated compute bounds spatial operation Finally typically good local odometry degrude step knowledge generic motion abilities chairs people current motion robot degrade spatial relation information The robot knows moved relative objects update RIZ R13 accordingly static objects retain precise However bounds spatial person potentially direction perceived If objects case people far static degrade step increase relation objects robot wander away confused person objects relations position information relation information motion On cycle able measure robot sees person changed persons height This person gets created object able infer people objects 3 4 They merged index The index marked free Now height hair color perspective 4 Percm data structures This time merge step robot close spatial positions seen simultaneously conjoining single known single person The aggregate operation properties relations objects storing useful entire complex objects perceived individually identify large truck instantaneously identify wheels cab flat bed aggregate Thus robot attempting truck object As data structures begin way Objects purged complex object variety attentional goals important information purge items useful weak superseded reasons based robots current 33 Combined perception action The techniques illustrated previous sections combined control perception systems containing action components Gapps approach develop mappings synthesize instance states actions information synthesized design decisions needed subsystems state agent act clean interface combined intended behavior In general explore RULER Percm methodologies nature interactions interactions information subsystem If interactions definition information exhibit section states output perceptual potential methods dealing directly For SJ Rosenschein LP KaelblingArtcial Intelligence 73 1995 149I 73 169 The problem specification informationstate interface perceptual modules This problem exists perceptual mechanism It possible information available encoded complexity goal satisfied Another difficulty arises way localization machinery environment inputs degenerate provide information intractable The design complex affect information attention given strategies environment action flow information agent choosing maintain acted In AI problem goes problem appropriate action 111 appropriate necessary environmental distinguishing agent know environmental actions taken available When actions chosen future states label knowledge precondition state certain action state The problem grows complex perceptual machinery distills information In state goal information affecting sensory agents input stream complex contained pertains structure perception module module external environment dynamic properties critical success failure strategy Unfortunately elaborating perception module valid action strategy chosen satisfy information perceptual machinery perceptual machinery goals coherently developed context articulated internal structure intended context fixed assumptions statements fact environment point view actionselection internal In general action strategies cases perception design passive sense introduced tracked defining update circuitry force right state After defining A natural development methodology conditions choosing conditions input streams action strategy defined environment flowing component makes use constraints module domain descriptions modules descriptionlike seek information The RULER rules generate perceptual invariant correlations conditions involve search albeit design tracked perception module tracks previous section guarantee fixed machinery relying definition perception component input streams states actively chosen structure perception declarative suffice generate rules combined operator generate systems maintains action needs test This approach effectively time suitable conditions imposed previously In principle perception action modules generated This strategy drive appropriate In words RULERlike statetransition single set facts environment contain constraints action descriptions designed cause In approaches result automaton objective informational environments This unlike relation postconditions environment analyzed stipulated usual case AI knowledge pre link internal states agents relations attributed semanticdenotation theories 170 SJ Kosenschein LP KaelblingArtijiciul Intelligence 73 I 995 149173 designers encouraging tional AI planning potentially somewhat arbitrarily symbolic data This distinction semantic desiderata representation systems achieved far efficient controltheoretic setting substantial pursued tradi mechanistic A final area complexity pervasive uncertainty natural environments conservative machines information avoid committing work modeled uncertainty simple nondeterminism While Throughout allows designers regard alternative possess models extremely In real task states ruled hard constraints domains alternatives midway fact essential deterministic state transitions given input described probability distributions A natural mathematical model Markov process studied systems extensively applied mathematicians equal far likely information A model nondeterministic models probabilistic model proper exploitation importance leads conditioning use module evidence designer probabilities technique By conditioning symbolic The difficulty semantics module Furthermore reduced increased This means joint states modules completely probabilistic models nonmonotonicity techniques noncomposi described probability tionality design proposition prove strong statement general define module perceptual component semantics outputs proceed undermine modules action strategy embodied intended actionselection state transition matrix entire Just principle define action strategy providing fixed definition perception component define apparent circularity integrated mined boundary incremental modeling sion processes controllers action The agent deter Interim constraints refinement useful cautiously especially theory partially observable Markov deci deriving component constraining consider behavior entire agent plus environment 19 provides theoretically wellfounded methodology stochastic domains computationally definition probabilistic domains probabilistically specified fundamental intractable perception points component integral conditions need The 4 Conclusions theory The aim situatedautomata provide new semantic perspective agents Traditional AI dominated reasoning metaphors drawn intelligent linguistic folk psychology action elements drawing conclusions The semantics systems rigorous imposed traditional models failed explain designers Moreover architectures reasoning seen actors manipulating representations fast little hardware Reactiveagent premises constructing programs bolic systems interpretation program specifications The shift SJ Rosenschein LP KaelblingArtcial Intelligence 73 1995 149173 171 proposed alternative work developed traditional AI date theoretical foundations Situatedautomata theory provides semantic analysis information processing machine state computational models based runtime apply embedded control systems requiring designerconceived intended interpretations It based direct mathematical model states natural processes ways unfold time reflect correlations semantic precision structured conventional reason excluded logicbased AI analysis systems intricate crossdependencies states The theory brings rise semantically meaningful simply special case systems Nor systems style analysis associated traditional inference reasoning Note analysis inconsistent construction simply makes explicit valid provides methods constraints agents sym hold intended symbolic characterizations implementation strategy traditional describing symbolic AI reasoning early cybernetic In view fundamental agent mutual constraint time The key lies understanding traditional AI view situated view brings outlook subtlety feedback models semantic exhibited parts process naturally states questions modeled grasped environment blurring reminiscent sophistication derived tracked controlled explained physical mirror ripple overt actions include enormous computational controlling real time high reliability relatively modest computational eventually set discernible achieve goals The fundamental states subtle conditions conditions phenomenon mirroring preserve distinctions environment arranged matter conditions resources elements While analytical approach presented general use stylized offline synthesis problems design particular In paper attempted involving time machinery desired properties information integration exploitation techniques presented automated statistical covariance scope application systems remains challenging sketch directions regard promising primarily run control Work remains generate reasoning symbolic tractable learning ways analogous techniques modeling logicbased discrete Acknowledgments We derived great deal help inspiration colleagues years robot platform project Stanley Reifel built Flakey experimental mobile elegant constantly formulas Sandy Wells brought knowledge vision hardware hacking invaluable Nathan Wilson endless versions variations implemented code Flakey Stuart Shieber valuable Rex wrote crucial navigational software derived match working challenged 172 SJ Rosenschein LF KuelblingArticial Intelligence 73 I 995 149l 73 language language modules natural influence theory David Chapman adjunct group implemented Fernando Pereira important automata better Ruler precursors We generally colleagues Universitys Center Study Language Information We gratefully sponsors Defense Advance Research Projects Agency Space Administration Research FMC robot programs situated early development spent summers helped Rex He worked Stanford Teleos Research National Aeronautics Air Force Office Scientific Research General Motors Intelligence Center SRI International appreciative Artificial implementation acknowledge ideas institutions indebted financial support References stochastic environment revised III 121 131 141 I51 161 Introduction 1984 5061 IBM RJ 4421 partially observable ML Littman Acting optimally distributed Computing Proceedings AAAI94 Seattle WA 1994 common knowledge Distributed Y Moses Knowledge Third ACM Conference Principles AR Cassandra LP Kaelbling domains JY Halpem Proceedings version GE Hughes MJ Cresswell An 1968 LP Kaelbling Rex symbolic systems LP Kaelbling Goals parallel program MN 1988 LP Kaelbling Compiling operator descriptions Report Teleos Research Palo Alto CA 1991 LP Kaelbling 6 I 1990 3548 P Maes ed Designing Autonomous Agents Theory Practice Biology Aerospace Wakefield MA 1987 Proceedings AAAI88 MinneapolisSt Proceedings AIAA Conference Computers Back MIT Press Cambridge MA 1991 SJ Rosenschein Action planning design parallel Modal Logic implementation specifications Engineering language reactive strategies goal regression Technical embedded agents Rob Autonomous Syst Paul Methuen Company London embedded LF Kaelbling NJ Wilson Rex programmers manual Technical Report 38 IR Artificial Center SRI International Menlo Park CA 1988 WS Lovejoy A survey algorithmic methods partially observed Markov decision processes Ann Intelligence standpoint artificial intelligence 4 Edinburgh University Press Edinburgh JR Hobbs RC Moore eds Formal action problems Intelligence Oper Res 28 1 1991 4765 J McCarthy FJ Hayes Some philosophical B Meltzer D Michie eds Machine 1969 RC Moore A formal theory knowledge Theories Commonsense World Ablex Norwood NJ 1985 A Newell The knowledge level Artif SJ Rosenschein Plan synthesis logical perspective reprinted Mateo CA 1990 SJ Rosenschein Formal 345357 SJ Rosenschein Proceedings Toronto Ont 1989 SJ Rosenschein properties LP Kaelbling The synthesis ed Proceedings JF Allen J Hendler A Tate eds Readings Infell 18 1982 87127 theories knowledge informationtracking JY Ham Principles Synthesizing International Conference Proceedings IJCAI81 Vancouver BC 198 1 Morgan Kaufmann San Planning Al robotics New Gen Comput 3 4 1985 environment automata Knowledge Representation descriptions Reasoning epistemic digital machines provable Conference Theoretical Aspects Reasoning I71 181 I91 I101 Ill 12 13 I141 1151 1161 SJ Rosenschein LP KaelblingArtificial Intelligence 73 1995 149l 73 173 About Knowledge Morgan Kaufmann San Mateo CA 1986 8398 updated version Technical Note 412 Artificial Intelligence Center SRI International Menlo Park CA 171 RJ Waldinger Achieving goals simultaneously EW Elcock D Michie eds Machine Intelligence I3 Ellis Horwood Chichester 1977 reprinted JF Allen J Hendler A Tate eds Readings Planning Morgan Kaufmann San Mateo CA 1990