Artiﬁcial Intelligence 175 2011 21702197 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Foundations instance level updates expressive description logics Hongkai Liu Carsten Lutz b Maja Miliˇci c c Frank Wolter d Institut für Theoretische Informatik TU Dresden Germany b Fachbereich Informatik Universität Bremen Germany c School Computer Science The University Manchester UK d Department Computer Science University Liverpool UK r t c l e n f o b s t r c t Article history Received 9 July 2010 Received revised form 25 June 2011 Accepted 14 August 2011 Available online 23 August 2011 Keywords Description logics ABoxes Updates 1 Introduction In description logic DL ABoxes describing state affairs application domain We consider problem updating ABoxes state changes assuming update information described atomic level terms possibly negated ABox assertions involve atomic concepts roles We analyze basic ABox updates standard DLs particular addressing questions expressibility succinctness updated ABoxes expressed DL original ABox formulated size updated ABox It turns DLs include nominals constructor hybrid logic updated ABoxes expressible holds updated ABoxes approximated Moreover size updated ABoxes exponential role depth original ABox size update We situation improves updated ABoxes allowed contain additional auxiliary symbols Then DLs need include nominals updated ABoxes exist size updated ABoxes polynomial size original ABox update 2011 Elsevier BV All rights reserved Description Logics DLs traditional family knowledge representation formalisms recent years played important role logical underpinning ontology languages W3C recommendation OWL 1 In DLs knowledge base KB typically consists parts TBox store intensional knowledge general formalization relevant concepts relationships application domain ABox store extensional knowledge instance level assertions current state affairs application Just like database systems DL knowledge bases static entities modiﬁed application domain evolves This raises fundamental update problem consists rewriting knowledge base incorporate new information application unnecessarily losing existing knowledge In case DL knowledge base different incarnations update problem distinguished TBox updates triggered changes intensional knowledge application domain ABox updates carried intensional knowledge remains stable state affairs application changes Corresponding author Email addresses liuhkaitcsinftudresdende H Liu cluunibremende C Lutz majamilicicmanchesteracuk M Miliˇci c frankcsclivacuk F Wolter 00043702 matter 2011 Elsevier BV All rights reserved doi101016jartint201108003 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2171 KB updates distinguish levels knowledge allow simultaneous modiﬁcation TBox ABox In typical applications instance level knowledge stored ABox tends change frequently intensional knowl edge TBox remains stable longer periods time Moreover automatic TBox modiﬁcations rarely desired TBox typically result careful timeconsuming manual modeling process syntactic structure changed radical way These observations lead study ABox updates fundamental basic form updates DL context A central property DL ABoxes store incomplete knowledge reﬂected open world semantics use com pound logical expressions involve disjunction existential quantiﬁcation It follows technically updating DL ABoxes equivalent updating logical theories problem long tradition database AI communities 48 In database AI literature long time proper distinction updates studied paper related notion revision While purpose update bring knowledge base date world described changes revision aims incorporating new knowledge obtained static world Katsuno Mendelzon 6 discuss distinction update revision fundamentally different operations 8 postulates rational update operator satisfy The prototypical update semantics complies postulates Winsletts wellknown PMA semantics 4 general idea context stated follows The models original knowledge base K viewed states world considered possible K updated new information U models resulting updated knowledge base Kcid3 satisfy U close possible models K principle minimal change In case updating propositional theories logical databases considered 64 diﬃculty deﬁning close possible means mainly derives following features newly added information nondeterministic involves disjunction ii updated theory satisfy additional domain constraints stated form logical background theory As discussed Section 6 paper combination features ﬁrstorder quantiﬁcation present description logics leads semantic diﬃculties computational problems For reason concentrate simple fundamental form update newly added information U consists set ground literals sets ABox assertions Aa ra b negations A concept r role atomic ii background theory present knowledge base K comprises ABox TBox In case sensible formalization close possible models Kcid3 obtained models K deterministically applying changes dictated ground literals U This semantics adopt current paper viewed incarnation Winsletts semantic avoids potentially controversial cases As starting point current paper observe standard expressive DLs ALC ALCQIO ﬁnd ABox A update U restricted form described result updating A U expressed given DL As concrete example following ABox A formulated ALC basic expressive DL Boolean operators It states John parent happy children Peter child Mary person johnPerson cid4 haschildPerson cid4 haschildPerson cid4 Happy haschildjohn peter maryPerson Suppose situation changes Mary unhappy The result updating A U Mary Happy represented following ABox Acid3 formulated ALCO extension ALC nominals individual names inside concept descriptions johnPerson cid4 haschildPerson cid4 haschild cid2 Person cid4 cid2 Happy cid7 mary cid3cid3 haschildjohn peter maryPerson cid4 Happy To understand Acid3 appropriate note A provides information Mary child John Because exclude case John unhappy child Mary Thus new knowledge concerning Mary resulted update knowledge concerning John Using nominal mary assertion john actually unavoidable shown ALCABox equivalent ALCOABox Acid3 As consequence update ALCABox A U expressed ALC We description logic L updates LABox A update U result updating A U expressed L The ﬁrst main aim paper understand problem non expressibility updated ABoxes overcome In particular consider options increasing expressive power DLs adding additional constructors ii relaxing deﬁnition updated ABoxes 2172 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Regarding addition nominals example constructor hybrid logic suﬃces ensure existence updated ABoxes DLs ALC ALCQIO Intuitively constructor enables jumps individuals allowing formation concepts aC satisﬁed point interpretation individual satisﬁes concept C We constructor nominals replaced Boolean ABoxes ABoxes admit Boolean operators applied ABox assertions Regarding ii consider following deﬁnitions updated ABoxes An ABox Acid3 semantic update A U models Acid3 precisely interpretations obtained models A making assertions U true standard deﬁnition approximate update A U DL L Acid3 entails exactly LABox assertions semantic update A U projective update A U models Acid3 precisely models semantic update projecting symbols A U projective approximate update A U Acid3 A U long ϕ uses symbols A U 1 entails exactly LABox assertions ϕ semantic update Observe projective updates allow use fresh auxiliary symbols Acid3 projective approximate updates Also note projective nonprojective approximate updates additional parameter DL L entailed ABox assertions formulated It hard semantic update approximate update projective update turn projective approximate updates Moreover semantic updates approximate updates proved logically equivalent exists Due new symbols general true projective updates Similar forms updates considered 911 Section 7 details Unfortunately turns relaxed deﬁnitions updated ABoxes rarely help overcome problem DLs having updates More precisely DLs considered paper approximate updates semantic updates Projective updates slightly wellbehaved simple trick DL L projective updates extension L constructor semantic updates Thus ensure existence projective updates DLs ALC ALCQIO adding nominals constructor Further relaxing projective updates projective approximate updates turns improve situation The second main question studied paper concerns size updated ABoxes The ﬁrst relevant observation construction semantic updates DLs comprise nominals constructor incurs exponential blowup size update U role depth original ABox A nesting depth existential universal restrictions A Although measures typically small real applications raises questions exponential blowup semantic updates avoided careful construction ii forms update help avoid exponential blowup Concerning exponential blowup avoided NP coNP contained nonuniform version complexity class NC1 considered unlikely complexity theory Note similar results obtained Cadoli et al 9 applicable restricted form updates considered paper results strengthen results obtained Cadoli et al Giving positive answer ii switching semantic updates projective ones dramatically improves situation DLs comprise nominals existence projective updates guaranteed possible construct projective updates size polynomial size original ABox update Thus projective updates particularly wellsuited use practical applications We note similar observations case propositional logic 9 shown update semantics projective version updates succinct nonprojective Finally extend update constructions conditional updates express statements Aa true update Cb true We apply extended results reasoning actions DL context recently proposed studied 1214 In particular construction updated ABoxes implement progression approach central projection problem 7 reproving number tight upper complexity bounds problem originally obtained method regression This paper organized follows In Section 2 provide brief introduction description logics deﬁne kinds ABox updates studied paper present basic results updates In particular interrelate deﬁnitions updated ABoxes prove constructor intimately related projective updates Boolean ABoxes The nonexistence updated ABoxes standard expressive DLs ALC family established Section 3 We prove DLs ALC ALCQI approximate projective updates DLs ALCO ALCQIO approximate updates This section actually explicitly consider 1 Actually real deﬁnitions projective updates projective approximate updates slightly stronger use different complicated sets symbols We refer Deﬁnition 4 details H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2173 Fig 1 Syntax semantics description logic ALCQIO projective nonprojective approximate updates positive results subsequent sections hold stronger nonapproximating deﬁnitions updated ABoxes In Section 4 adding nominals constructor DLs ALC ALCI ALCQ ALCQI suf ﬁces semantic updates We establish singleexponential size updated ABoxes announced case single updates iterated updates We prove exponential blowup updated ABoxes avoided subject complexitytheoretic assumption NP coNP cid2 NC1 Finally consider extension ALCQIO certain role constructors allows simple construction updated ABoxes exponential size update size original ABox We focus projective updates Section 5 showing enjoyed DLs ALCO ALCQIO including comprise constructor We projective updates structed polynomial time resulting updated ABox polynomial size With small trick time space bounds apply case iterated updates Section 6 devoted conditional updates application reasoning actions DLs Finally Section 7 wraps paper analyzing possible extensions results TBoxes discussing related work This paper signiﬁcantly extended revised version 15 2 Preliminaries basic deﬁnitions We provide brief introduction description logics deﬁne kinds ABox updates studied paper present basic observations updates For sake readability proofs results section deferred Appendix A 21 Description logics We introduce expressive description logic ALCQIO fragments studied paper Our presentation brief reader referred 1 details In DLs concepts inductively deﬁned help set constructors starting countably inﬁnite set NC concept names countably inﬁnite set NR role names possibly countably inﬁnite set NI individual names ALCQIOconcepts formed constructors shown Fig 1 There inverse constructor role constructor construct compound roles remaining seven constructors concept constructors construct compound concepts A role role r inverse r role r In Fig 1 paper use S denote cardinality set S b denote individual names r s denote roles A B denote concept names C D denote possibly compound concepts As usual use cid9 abbreviation arbitrary ﬁxed propositional tautology cid9 usual Boolean abbreviations rC existential restriction cid2 1 r C rC universal restriction cid3 0 r C The fragment ALCQIO allows negation conjunction disjunction universal existential restric tions called ALC The availability additional constructors indicated concatenation corresponding letter Q stands number restrictions I stands inverse roles O nominals superscript constructor This explains ALCQIO DL allows refer fragments simple way In particular speak DLs ALC ALCQIO mean logics L obtained ALC possible combi nations Q I O In particular ALC ALCQIO regarded DLs ALC ALCQIO In way speak DLs ALC ALCQIO general DLs descriptions logics We note constructor hybrid logic 16 somewhat unusual DL context play important role computation updates later The semantics ALCQIOconcepts deﬁned terms interpretation I cid3I I The domain cid3I non set individuals interpretation function I maps concept A NC subset A I cid3I 2174 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 I cid3I role r NR binary relation r I cid3I individual NI element I cid14 b I assumption UNA b distinct unique The extension I Two concepts C D equivalent written C D iff C I D I interpretations I inverse roles arbitrary concepts deﬁned inductively shown column Fig 1 b A rb contained ABox A similarly r In DLs extensional knowledge stored ABox An ALCQIOABox ﬁnite set concept assertions Ca role assertions ra b negated role assertions ra b r role For readability write concept b A assertions aC As abbreviation write r abbreviates rb A Observe need explicitly introducing negated concept assertions availability negation concept constructor ALCQIO fragments An ABox A simple Ca A implies C concept literal concept negated concept We use IndA denote set individual names ABox A exists Ca A exists Cb A occurs C roleA denote set role names A An interpretation I satisﬁes concept assertion Ca iff role assertion ra b iff negated We write I cid16 ϕ denote satisfaction ABox assertion ϕ interpretation role assertion ra b iff I This notation lifted sets interpretations Γ obvious way write Γ cid16 ϕ iff I cid16 ϕ I Γ An interpretation I model ABox A written I cid16 A I cid16 ϕ ϕ A I r I r I C equivalent written A Acid3 We use MA denote set models ABox A An ABox consistent iff MA cid14 Two ABoxes A iff MA MAcid3 An ABox assertion ϕ consequence ABox A written Acid3 A cid16 ϕ MA Mϕ This notion lifted ABoxes obvious way Acid3 MA MAcid3 consequence A written A cid16 Acid3 I b I b I I I 22 Semantic updates We introduce natural form ABox updates semantic purely modeltheoretic deﬁnition Such updates called logical updates literature example 9 We start consid ering update interpretation ABox Deﬁnition 1 Interpretation update An update U consistent simple ABox Let U update I interpretation Deﬁne interpretation IU setting individual names concept names A role names r cid3IU IU IU A IU r cid3I I cid2 cid2 r A I cid4 I b cid5 cid6cid3 cid7 cid4 cid5 Aa U cid3 cid5 cid6cid3 cid7 cid4cid2 cid5 ra b U I cid5 cid5 Aa U cid3 cid5 cid5 ra b U I b I cid4cid2 cid6 I I I cid6 IU called result updating I U As step updates lifted level ABoxes represent classes models single models Deﬁnition 1 Deﬁnition 2 Semantic update Let A ALCQIOABox U update Deﬁne class updated models MAU cid4 IU cid5 cid6 cid5 I MA An ALCQIOABox Acid3 cid3 cid2 Acid3 MAU M semantic update A U written A cid16U Acid3 A description logic L semantic updates LABox A update U LABox Acid3 A cid16U Acid3 To illustrate Deﬁnition 2 consider following ABox E use running example john haschildHappy mary Happy cid4 Clever The following ABox E cid3 semantic update E U Happymary H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2175 cid2 john haschild mary Happy cid4 Clever Happy cid7 mary cid3 To understand disjunction note kinds models E John happy child Mary Mary happy child John In models kind John satisﬁes haschildHappy update ﬁrst disjunct models kind Mary child John update second disjunct For sake completeness provide proof following Appendix A Observation 1 E cid16U E cid3 As captured following lemma semantic updates unique logical equivalence depend syntactic presentation original ABox The lemma immediate consequence deﬁnition semantic updates Lemma 1 Let A1 A2 Acid3 1 Acid3 2 ALCQIOABoxes Then A1 A2 Ai cid16U Acid3 1 2 imply Acid3 1 Acid3 2 We remark making UNA impact semantic updates To difference updates UNA consider ABox A Aa1 update U Aa2 a1 cid14 a2 Then A U semantic update A U UNA semantic update A U UNA U cid2 cid4 a1 a2 cid7 A cid3cid6 Thus dropping UNA results case distinctions identity individual names a1 a2 Apart case distinctions dropping UNA poses major technical problems Semantic updates sense ideal kind update However turns standard DLs ALC semantic updates For example proved ALCABox A update U semantic update ALC resort ALCOABox Acid3 presenting semantic update This problem studied Section 3 motivates consideration weaker forms updates 23 Approximate updates We obtain weaker form update considering logical consequences ABoxes instead models This approach weakening updates introduced DL context 11 Deﬁnition 3 Approximate updates Let A ALCQIOABox U update L description logic An ALCQIO ABox Acid3 approximate update A U L written A L LABox assertions ϕ U Acid3 MAU cid16 ϕ M cid3 cid2 Acid3 cid16 ϕ A description logic L approximate updates LABox A update U LABox Acid3 A L U Acid3 As example reconsider example ALCABox E update U Section 22 The following ALCABox E cid3cid3 approximate update E U ALC john haschildHappy cid7 Clever mary Happy cid4 Clever Indeed prove Appendix A Observation 2 E ALC U E cid3cid3 Recall contrast ALCABox semantic update E U We relate approximate updates semantic updates precise way If semantic update exists ABox approximate update DL L iff Lconsequences semantic update This Point 1 following lemma immediate consequence deﬁnition approximate updates Point 2 follows Point 1 asserts semantic updates approximate updates DL L Lemma 2 Let A Acid3 ALCQIOABoxes U update L description logic Assume A cid16U As Then 1 A L 2 A L U Acid3 U As iff LABox assertions ϕ Acid3 cid16 ϕ As cid16 ϕ 2176 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Note contrast semantic case deﬁnition approximate updates depends DL L Indeed Section 22 semantic update E U different choice L difference ALCOABox E cid3 Lemma 2 approximate update E U ALCO Since clearly E cid3 ALCOconsequences E cid3cid3 approximate update E U ALC approximate update E U ALCO However observed E cid3cid3 E cid3cid3 We derive interesting additional properties approximate updates DL L demand updated ABox formulated DL L deﬁnition L having approximate updates Then approximate updates unique logical equivalence equivalent semantic updates exist This captured Points 1 2 following lemma Lemma 3 Let A1 A2 ALCQIOABoxes U update L description logic Acid3 1 Acid3 2 LABoxes Then 1 A1 A2 Ai L 2 A1 L U Acid3 1 A1 cid16U Acid3 1 2 imply Acid3 Acid3 2 imply Acid3 2 U Acid3 1 1 Acid3 2 Point 1 immediate consequence fact LABoxes A Acid3 assertions ϕ implies A cid16 Acid3 Note Point 1 Lemma 3 approximate updates depend syntactic presentation original ABox Acid3 cid16 A turn implies A Acid3 A cid16 ϕ iff Acid3 cid16 ϕ LABox Point 2 follows Point 2 Lemma 2 We remark approximate updates generally useful semantic ones In particular main use DL ABoxes query answering example 2173 While semantic updates correct answers queries formulated query language approximate updates For example follows directly deﬁnition approximate updates DL L correct answers instance queries Ca C formulated L true unions conjunctive queries UCQs individual john included certain answer following UCQ qx posed approximate update E cid3cid3 E U ALC given qx haschildx mary cid2 cid3 yhaschildx y Happy y In contrast Section 22 john included certain answer qx posed semantic update E cid3 E U given 24 Semantic projective updates approximate projective updates Although weaker approximate updates turn elusive semantic ones enjoyed standard DLs Section 3 For reason overcome exponential blowup encounter struction semantic updates exist consider additional way relaxing updated ABoxes allow additional auxiliary symbols concept names role names individual names updated ABox This semantic updates approximate updates gives rise forms update studied paper Updates admitting auxiliary symbols studied 910 propositional logic context Elements NC NR NI called symbols A signature set symbols The signature sigC concept C set symbols occur C The signature sigA ABox A deﬁned likewise particular individual names A included sigA For signature S use S denote NC NR NI S The reduct Icid2S interpretation I signature S interpretation obtained I forgetting interpretation symbols S Icid2S interprets symbols S symbols The notion reducts lifted classes models M setting Mcid2S Icid2S I M Deﬁnition 4 Projective updates Let A Acid3 sigAcid3 sigA sigU set fresh symbols Acid3 We Acid3 ALCQIOABoxes U update L description logic Then FrAcid3 semantic projective update A U written A cid16p U Acid3 cid3 cid2 Acid3 M cid2FrAcid3 MAU cid2FrAcid3 approximate projective update A U L written A pL U Acid3 Lassertions ϕ sigϕ FrAcid3 MAU cid16 ϕ M cid3 cid2 Acid3 cid16 ϕ A description logic L semantic projective updates iff LABox A update U LABox Acid3 A cid16p U Acid3 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 approximate projective updates iff LABox A update U LABox Acid3 A pL U Acid3 2177 As example consider following ABox F john hasfriendSmart update U hasfriendjohn mary We proof Theorem 2 LABox semantic update F U LABox approximate update F U L DLs L including ALC ALCO However ﬁnd semantic projective update F cid3 formulated ALCO consists U cid2 john hasfriendSmart cid7 r cid3 mary cid4 Smart r fresh role Observation 3 F cid16p U F cid3 We leave formal proof Observation 3 reader intuition F cid3 semantic projective update Again kinds models A John smart friend Mary Mary smart friend John In models kind John satisﬁes hasfriendSmart update ﬁrst disjunct models kind Mary smart update This expressed second disjunct role r serves technical purpose jumping John Mary updated interpretations It hard establish following analogue Lemma 2 Lemma 4 Let A Acid3 ALCQIOABoxes U update L description logic assume A cid16p U As Then 1 A pL 2 A pL U Acid3 U As iff LABox assertions ϕ sigϕ FrAcid3 FrAs Acid3 cid16 ϕ As cid16 ϕ Concerning analogues Lemmas 1 3 obvious ﬁrst observation use fresh symbols semantic projective updates need logically equivalent approximate projective updates However consequence Deﬁnition 4 semantic projective updates approximate projective updates depend syntactic form original ABox Lemma 5 Let A1 A2 Acid3 ALCQIOABoxes U update L description logic Then U Acid3 1 A1 A2 A1 cid16p 2 A1 A2 A1 pL U Acid3 U Acid3 imply A2 cid16p imply A2 pL U Acid3 25 The constructor Boolean ABoxes projective updates The example Section 22 illustrates nominals help overcome nonexistence updates The example Section 24 shows true projective updates Indeed DLs introduced Section 21 exactly DLs include nominals semantic projective updates necessarily nonprojective updates Interestingly positive effects projective updates nominals attained ways adding concept constructor introduced Section 21 replacing ABoxes Boolean ABoxes The sets Boolean ABox assertions combinations ABox assertions expressed terms connectives recall ABox assertions closed negation For illustration reconsider example Section 24 hasfriendjohn mary Recall semantic projective update F cid3 F consists U ABox F john hasfriendSmart update U cid2 john hasfriendSmart cid7 r cid3 mary cid4 Smart To eliminate auxiliary symbol r obtain semantic nonprojective update use concept constructor replace assertion john hasfriendSmart cid7 marySmart Alternatively eliminate symbol r Boolean ABoxes replacing assertion john hasfriendSmart mary Smart 2178 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 It simplicity example presentations semantic nonprojective update involve nominals general use nominals constructor Boolean ABoxes admitted Indeed DLs introduced Section 21 exactly semantic nonprojective updates comprise nominals constructor A similar statement formulated Boolean ABoxes The aim current section present basic observations relationship construc tor Boolean ABoxes projective updates The following lemma shows nonBoolean LABoxes exactly expressive power Boolean LABoxes provided L contains nominals This hold ALC ALCABox translated equivalent Boolean ALCABox proved nonBoolean ALCABox equivalent Boolean ALCABox Aa rb c A proof following lemma Appendix A Lemma 6 1 Let L DL ALC ALCQIO Then Boolean LABox exists equivalent Boolean LABox 2 Let L DL ALCO ALCQIO Then Boolean LABox exists equivalent nonBoolean LABox We remark translation Boolean LABox LABox involves exponential blowup converse translation Finally relationship constructorBoolean ABoxes projective updates easily established simulating constructor fresh role ABox F cid3 example Lemma 7 Let L DL ALCO ALCQIO Then LABox A exists LABox Acid3 MAcid2r M cid3 cid2 Acid3 cid2r r role occur A Proof sketch Let A LABox U update Construct LABox Acid3 follows First convert concepts A negation normal form NNF negation occurs concept names complex concepts 1 Then replace concept aC ra cid4 C r role A It proved resulting ABox Acid3 required cid2 3 Nonexistence updates We present general nonexistence results updates First DLs introduced Section 21 nominals approximate projective updates semantic updates approximate updates semantic projective updates Theorem 1 Let L DL ALC ALCQI Then L approximate projective updates Proof We exhibit ALCABox update approximate projective update exists DLs listed Theorem 1 Let A r A rb U Ab Acid3 cid4 cid2 Ab rb r cid3cid6 A cid7 b I Icid3 semantic update A U Let I model A We IU We ﬁrst ALCOABox Acid3 By deﬁnition IU cid16 rb IU cid16 Ab It remains IU cid16 r A cid7 b First assume model Acid3 IU I b I r I b I I r I b Then I cid16 Then IU Again IU cid16 r A cid7 b I I d r I r A exists d cid14 b d A We exists model I A IU Icid3 Conversely assume Icid3 model Acid3 Let I Icid3 I coincide Icid3 b IU cid16 r A cid7 b Now assume IU Then I model A Icid3 IU But b required d A I d r Icid3 A I r We exists ALCQI ABox B approximate projective update A U ALC It follows DLs L Theorem 1 LABox approximate projective update A U L r Assume contrary B exists We start highlevel sketch proof Let rnC denote nfold nesting r rC r0C C We ﬁrst observe r A ALCconsequence B r A cid7 rncid9 ALCconsequence B n 0 Since B ﬁnite formulated ALCQI impose constraints domain element exceed certain distance terms length shortest role paths interpretation individual B Thus entail assertions r A cid7 rncid9 entailing r A B enforce rcycle Using careful modiﬁcation wellknown unraveling technique 1817 certain guaranteed ALC consequences B cycle actually enforced B We start establishing relevant nonentailments B Icid3 I H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2179 Claim 1 B cid14cid16 r A ii B cid16 r A cid7 rncid9 n cid2 0 iii B cid14cid16 r2cid9 To prove note Acid3 cid14cid16 r A We obtain B cid14cid16 r A B approximate projective update r A sigA r A ALCassertion By arguments proof know ii proved showing Acid3 cid16 r A cid7 rncid9 I n 0 Due fact Acid3 cid16 r A cid7 b model I Acid3 turn yields rncid9I n cid2 1 rb Acid3 I r AI implies I r To prove iii note interpretation I cid3I b x I x Hence Acid3 cid14cid16 r2cid9 We obtain B cid14cid16 r2cid9 B approximate projective I b x A I b I b r I r2cid9I model Acid3 update r sigA r2cid9 ALCassertion I b Now model I B I cid14cid16 r A We unravel I new model J B forestlike shape satisﬁes J cid14cid16 r A After unraveling modify J allows derive contradiction Point ii Claim 1 As want preserve ALCQI concepts concept assertions B apply unraveling construction rolepredecessors duplicated In let cid3J set words w d0s0d1s1 sk1dk k cid2 0 1 d1 dk cid3I 2 s0 sk1 roles role names inverses I 3 c NI d0 c 4 k di di1 s I 0 d1 c 5 d0 c I 1 c0 c1 NI B cid14cid16 s0c0 c1 I si s i1 di cid14 di2 Condition 4 standard approach dealing presence number restrictions inverse roles Point 5 explained Deﬁne interpretation symbols J follows J d0 dk cid3J dk B B s NR I B NC J s cid4cid2 c cid4 I 2 I 1 c w wsd cid4cid2 cid3 cid5 cid6 cid5 B cid16 sc1 c2 cid5 cid5 w wsd cid3J cid3 cid5 cid5 w ws d cid3J cid6 d w ws cid6 c J c I c NI Note careful deﬁnition s unraveling models ABoxes Indeed careful deﬁnition Condition 5 ensure ABox elements duplicated unraveling cause conﬂicts number restrictions include pairs c I 1 c I 2 c I 1 c I 2 s I J Claim 2 For ALCQI concepts C w d0 dk cid3J w C J iff dk C I The proof induction structure C We cases C c D C cid3 n s D induction step leaving remaining cases reader C c D Then dk c DI Let w d0 dk cid3J J Now let C cid3 n s D w d0 dk Assume ﬁrst k 0 Let e cid3J I dk D J e Now IH Condition 4 s iff w cid3 n s DJ Therefore dk cid3 n s DI likewise s J w D s required iff IH c J D I D iff c J I iff w c DJ s I I I e d cid3I e d s cardinality Now assume k 0 Then w d0 cid3I cid3J c NI c J d0 d0sd s bijection d0 cid3 n s DI I d B cid16 sc0 c d0 d s Thus exists bijection s iff d0 cid3 n s DJ exists c0 NI c J I d0 s required I d0 I d0 c J d0 obtain applying IH pairs d0 If d s deﬁnition s If d s I 0 J Claim 2 implies J cid14cid16 r A intended Moreover Claim 3 J model B To prove Claim 3 let ϕ B 2180 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Fig 2 The interpretations I Icid3 1 If ϕ Cc ALCQI concept C I cid16 Cc J cid16 Cc Claim 2 2 If ϕ sc1 c2 role s B cid16 sc1 c2 J cid16 sc1 c2 deﬁnition s 3 If ϕ sc1 c2 B cid14cid16 sc1 c2 B consistent J cid14cid16 sc1 c2 deﬁnition s J Thus J cid16 sc1 c2 J This ﬁnishes proof Claim 3 We deﬁne depth dC ALCQI concept C nesting depth number restrictions C reset triggered constructor 0 dB daC cid4 cid6 dC cid4 D dC cid7 D max dC dD dcid3 n r C dcid2 n r C dC 1 dC dC The depth dB B deﬁned maxdC Cc B As step modify J cutting paths cid3J s restrictions J B dropped restriction cid3J J cid3 B length dB Thus let cid3J cid3 d0 dk cid3J k cid3 dB let B J c NI clearly c One induction structure C B NC s NR let c cid3J cid3 J cid3 c s J cid3 J J Claim 4 For ALCQI concepts C dC cid3 dB w d0 dk cid3J w C J cid3 k cid3 dB w C J iff Claims 3 4 imply J cid3 model B role assertions ϕ B clearly invalidated constructing J cid3 J concept assertions Cc B satisﬁed Claim 4 satisﬁed J By Point ii Claim 1 obtain contradiction remains exists n 0 J cid3 cid14cid16 r A cid7 rncid9 Set n dB 1 First observe J cid3 cid14cid16 r A J cid14cid16 r A It remains J cid3 cid14cid16 rn1cid9 Observe Point iii Claim 1 B rchain length larger 1 starting precisely m cid3 1 m ra c1 rc1 c2 rcm1 cm B c1 cm NI Thus construction J cid3 length k cid3 dB 1 Thus J cid3 cid14cid16 rn1cid9 required cid2 rpaths d0 dk J cid3 d0 J cid3 Our second nonexistence result updates states DLs introduced Section 21 include nominals lack constructor approximate updates semantic updates In contrast DLs considered previous theorem DLs addressed projective semantic updates projective approximate updates Section 4 Theorem 2 Let L DL ALCO ALCQIO Then L approximate updates Proof Let L DL ALCO ALCQIO We construct ALCABox A update U ALCQIOABox Acid3 approximate update A U ALC Let A r A U ra b Acid3 cid6 cid4 r A cid7 b A ra b It diﬃcult ALCABox Acid3 semantic update A U approximate update It suﬃces ALCQIOABox B Acid3 cid16 ϕ iff B cid16 ϕ ALCassertions ϕ Assume contrary B exists choose role s occur Acid3 B role exists B ﬁnite Now consider interpretations I Icid3 displayed Fig 2 We assume individual names b mapped individuals shown ﬁgure To satisfy UNA assume inﬁnite set additional points interpret individual names distinct b On additional points concept role names interpreted Note I Icid3 By Point 2 Lemma 3 models B Consider additional interpretation Icid3cid3 Fig 3 We Icid3cid3 cid16 B Icid3cid3 cid14cid16 B derive contradiction models Acid3 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2181 Claim 1 Icid3cid3 cid14cid16 B Fig 3 The interpretation Icid3cid3 Assume Icid3cid3 cid16 B Deﬁne C A cid4 sa cid4 r A Clearly Icid3cid3 cid16 Cb Since Icid3cid3 cid16 B follows B cid14cid16 Cb Hence Acid3 cid14cid16 Cb This contradiction fact Acid3 cid16 Cb note C A cid7 sa r A Claim 2 Icid3cid3 cid16 B To prove claim require observation models ALCQIOABoxes Assume I1 I2 interpretations domains split nonempty disjoint parts cid3I1 cid311 cid24 cid312 cid3I2 cid321 cid24 cid322 interpretation individual names split way ii role I1 connects cid311 cid312 s iii I2 I1 cid311 cid312 s I1 cid311 iff I2 cid321 NI I1 cid312 cid311 s NR Now swap submodel I1 induced cid312 submodel I2 induced cid322 use I12 denote resulting interpretation domain cid311 cid24 cid322 I2 denote resulting interpretation domain cid321 cid24 cid312 It proved ALCQIOABox assertions ϕ I1 cid16 ϕ I2 cid16 ϕ iff I12 cid16 ϕ I21 cid16 ϕ Actually easily veriﬁed possibly negated role assertions ϕ To establish concept assertions prove ii d cid3i2 1 2 induction structure C d cid3i1 1 2 d C ii 1 2 2 1 d C Ii iff d C Ii iff d C I I To apply observation ﬁrst modify I Icid3 Icid3cid3 interpretations J J cid3 suﬃces J cid3cid3 cid16 B Observe J cid3cid3 submodel J cid3 b J cid3 J cid3cid3 dropping sedge b Call resulting respectively As s occur B J cid16 B J cid3 cid16 B Icid3cid3 cid16 B result swapping submodel Jb J induced domain b induced domain b Thus yields J cid3cid3 model B required cid2 4 Computing semantic updates The main result established section adding nominals constructor DLs ALC ALCI ALCQ ALCQI suﬃces semantic updates We analyze size updated ABoxes showing proof incurs blowup exponential role depth concepts original ABox size update case single update iterated updates We blowup likely unavoidable somewhat unusual extension ALCQIO Boolean role constructors nominal roles avoid exponential blowup role depth original ABox blowup size update 41 Semantic updates DLs nominals We provide detailed proof ALCQIO semantic updates approximate updates projective versions The proof easily adapted fragments ALCO ALCIO ALCQO As preliminary observe assertions contained original ABox A dropped update U Lemma 8 Let A Acid3 ALCQIOABoxes U update Then A cid16U Acid3 iff A cid16U A Acid3 Proof Immediate consequence fact models I A IU IU A cid2 Consequently assume wlog A U A updated U 2182 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Fig 4 Constructing concept update C U U Our construction semantic updates extension corresponding construction propositional logic described 4 We start addressing update single concept assertions central technical construction consists update U set exactly converting concept C concept C domain elements extension C update The conversion proceeds induction b U simply abbreviation structure C detailed Fig 4 It appropriate remind reader r rb U likewise negated role assertions To grips somewhat intricate translation number restrictions reader ﬁnd easier ﬁrst consider specialized clauses existential restrictions universal restrictions convenience given Fig 5 As example consider concept C r A update U Ab rb b Modulo minor simpliﬁcations obtain cid2 cid3cid3 cid3cid3 cid2 U C cid2 b cid4 r A cid7 b cid7 cid2 b cid4 r b cid4 A use U denote The following lemma formally states main property constructed concepts C ϕ ϕ U ϕ obtained ϕ eliminating double negation denotes ψ ϕ ψ ψ ϕ We later overcome restriction I violate assertions U U Lemma 9 For interpretations I I cid16 U C I C U IU Proof Let I interpretation I cid16 U E ALCQIOconcept By induction structure E E U IU E I If E A A concept A cid10 cid11 cid9 cid9 cid8 IU A IU cid6 cid4 U IU cid4 IU cid6 cid8cid8 cid8cid8 AaU cid9 AaU cid9 cid4 I cid4 I I A I A AaU cid6 cid11 cid9 AaU cid6 cid11 cid9 cid10 cid10 cid6 cid4 I cid6 cid4 I cid10 cid11 cid9 cid9 IU cid6 cid4 IU cid6 cid4 AaU cid9 cid10 cid11 cid9 AaU cid4 cid6 I cid6 cid4 I AaU AaU AaU AaU A I The equality holds I cid16 U A cid12 I AaU I cid12 AaU I A I The case E immediate I IU interpret individual names way H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2183 The cases E C E C cid7 D E C cid4 D E aC straightforward semantics induction hypothesis I It remains consider cases E cid2 m r C E cid3 m r C The central observation d e r iff I d cid14 I d IndU d e r IndU exactly following holds I e cid14 b I e b ra b IndU d e r b IndU ra b U implies d e r IU IU d e r IU I I cid16 U excludes previous case This case distinction directly reﬂected translation concepts cid2 m r C cid3 m r C Using induction hypothesis possible verify E required cid2 U IU E I The concepts C U central building block deﬁning updates ABoxes Let A ALCQIOABox cid4 AU setting U update Deﬁne ABox AU cid5 cid6 cid5 Ca A cid5 cid5 ra b A ra b U cid5 cid5 ra b A ra b U cid4 ra b cid4 ra b U cid6 C cid6 We establish analogue Lemma 9 formulated ABoxes instead concepts Lemma 10 Let A ABox U update For interpretation I I cid16 U I cid16 A iff IU cid16 AU Proof Let I cid16 A We IU cid16 AU IU IU cid16 ϕ If ϕ E U Ea A Lemma 9 yields IU cid16 E Let ϕ AU U If ϕ ra b ϕ ra b deﬁnition AU Let IU cid16 AU We I cid16 A Take ϕ A First case ϕ ra b There subcases 1 ra b U Then ra b U I cid16 U obtain I cid16 ra b 2 ra b U Then ra b AU yields I cid16 ra b IU IU cid16 ra b We ra b U assume A U By deﬁnition The case ϕ ra b analogous previous case ϕ Ea immediate Lemma 9 cid2 U Similar concepts C construction ABox AU relies fact model I A violates U cid3 ϕ U assertions U For ﬁxed model I A overcome problem replacing C C I cid14cid16 ϕ update consists assertions U violated I However original ABox A different models I rise different adjustments U cid3 update U We address issue considering subsets U cid3 U assertions potentially violated model A taking disjunction resulting updated ABoxes AU cid3 U cid3 U Let A ABox U update Deﬁne updated ABox Acid3 Boolean ABox cid13 cid14 cid13 Acid3 U AU cid3 U cid3U Here use Boolean ABox operators abbreviation constructor Lemma 6 Lemma 11 A cid16U Acid3 Proof We prove inclusions MAcid3 IU I MA hold By deﬁnition IU Moreover deﬁnition U cid3 Let I cid16 A We IU cid16 Acid3 I cid14cid16 ϕ By Lemma 10 IU cid3 cid16 AU cid3 IU cid16 AU cid3 yields IU cid16 Acid3 IU cid16 U Deﬁne subset U cid3 U U cid3 ϕ U veriﬁed IU cid3 IU IU cid3 Let Icid3 cid16 Acid3 We need exists interpretation I I cid16 A Icid3 IU Since Icid3 cid16 Acid3 Let I Icid3U cid3 undo modiﬁcations selected adjustment U cid3 U cid3 U Icid3 cid16 AU cid3 Then Icid3 IU cid3 IU Moreover Lemma 10 yields I cid16 A cid2 The presented construction semantic updates adapted DLs ALCO ALCIO ALCQO For translation number restrictions treat existential universal restrictions C The corresponding clauses shown Fig 5 The lemmas proved ALCQIO easily adapted U Theorem 3 The DLs ALCO ALCIO ALCQO ALCQIO semantic updates 2184 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Fig 5 Constructing C U existential universal restrictions 42 The size semantic updates We construction yields semantic updates size exponential size role depth original ABox size update If role depth original ABoxes ﬁxed size update polynomial size original ABox exponential size update The length concept C denoted C number symbols needed write C Numbers inside number strictions coded unary binary yields cid3 n r C On cid3 n r C Olog n respectively Since results hold independently chosen coding scheme assume binary coding The role depth concept C denoted rdC nesting depth number restrictions C rd A 0 rdC rdC rdC cid4 D rdC cid7 D maxrdC rdD 1 rdcid2 n r C rdcid3 n r C rdC 1 The size ABox assertion Ca C size ra b ra b 1 The size ABox A denoted A sum sizes assertions A The role depth ABox A denotes rdA maxrdC Ca A A close inspection construction semantic updates reveals following result Theorem 4 Let L ALCO ALCIO ALCQO ALCQIO Then LABox A update U semantic update Acid3 A U computed algorithm satisﬁes cid5 cid5Acid3 cid5 cid5 cid3 A 2 OlogAUrdA 22U computed time polynomial Acid3 U C U ABox AU cid3 Proof By inspection construction given Section 41 We distinguish cases First assume rdA 0 Then comprises size concept C ABoxes AU cid3 U plus update U overall size clearly dominated given expression Now assume 2 U rdA 0 View C syntax tree purely Boolean subtrees collapsed single node subtree Boolean nodes labeled constructor number restriction By construction OU depth rdC Since collapsed node represents outdegree C 2 follows C U OU syntax tree nodes size C C 2 bounded A 2 plus update U overall size dominated given expression cid2 OlogCU rdC Analogously size ABox AU cid3 comprises 2 size A U The semantic update Acid3 OlogAU rdA The semantic update Acid3 ABoxes AU cid3 bounded 2 U U Note bound stated Theorem 4 polynomial overall size original ABox potentially large exponential role depth original ABox size update typically small In particular input ABox comprise number restrictions existential universal restrictions size updated ABoxes exactly propositional logic 9 In applications state affairs evolves continuously makes necessary update ABox It clearly important exponential blowups repeated updates add result nonelementary growth produced semantic updates The following theorem shows case Theorem 5 Let L ALCO ALCIO ALCQO ALCQIO A0 An LABoxes U1 Un updates Ai1 se mantic update Ai Ui1 computed algorithm 0 cid3 n Then An cid3 A0 2 OlogA0U1UnrdA0 22U1Un Proof The argument analogous proof Theorem 4 In particular viewing concept C collapsed nodes proof hard outdegree C 2 U1 Un syntax tree OU1Un depth H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2185 U rdC Since collapsed Boolean node represents OC 2 OlogCU1UnrdC Analogously size ABox A C bounded 2 bounded A0 2 ABoxes 2 In summary size An bounded expression given Theorem 5 cid2 ABoxes form U U2Un OlogA0U1UnrdA0 The semantic update An Boolean combination 2 OU1Un syntax tree nodes size Un n The size ABoxes bounded U1 Un U1 U cid3 n U1Un n U cid3 1 U cid3 0 U cid3 1 U cid3 U cid3 i1 43 A lower bound size semantic updates We ALCQIO fragments exponential blowup semantic updates avoided NP coNP NC1 NC1 class problems solvable family circuits polynomial size logarithmic depth We work nonuniform version NC1 demand circuit given input length computed certain resource bounds The stated inclusion widely believed hold It intimately related important open question problem eﬃciently solvable effectively parallelized PTimeis subset uniform NC1 believed case In particular reasons assume nonuniformity irrelevant inclusions sort 19 We obtain result relating semantic updates Craig interpolants propositional logic allows trans fer known lower bounds size interpolants 2022 In follows deliberately confuse propositional formulas concepts use Boolean constructors cid4 cid7 We use sigϕ denote set propositional letters occur propositional formula ϕ sigA denote concept role names occur ABox A Recall given propositional formulas ϕ ψ ϕ cid16 ψ Craig interpolant ϕ ψ formula ϑ ϕ cid16 ϑ cid16 ψ sigϑ sigϕ sigψ For propositional formula ϕ set propositional letters S use ϕScid9 denote result replacing letter S ϕ cid9 logical truth Lemma 12 Let ϕ ψ ϑ propositional formulas ϕ cid16 ψ If A ϕa U pa p sigϕ sigψ A cid16U ϑa ϑScid9 Craig interpolant ϕ ψ S sigϑ sigϕ sigψ Proof Clearly ϑScid9 contains propositional letters sigϕ sigψ required It remains ϕ cid16 ϑScid9 cid16 ψ We start noting ϑScid9 ϑsigU cid9 To note S sigU sigA sigU A cid16U ϑa implies I model ϑ I J differ interpretation symbols S sigU J model ϑ It follows ϑsigU cid9 property Thus replacing symbols S sigU ϑsigU cid9 cid9 yields ϑScid9 equivalence preserving operation We ϕ cid16 ϑScid9 cid16 ψ ϕ cid16 ϑScid9 ϑScid9 cid16 ψ Let I cid16 ϕa Then IU cid16 ϑa Moreover IU cid16 pa p sigU It follows IU cid16 ϑsigU cid9a IU cid16 ϑScid9a Since I IU agree interpretation propositional letters sigϕ sigψ I cid16 ϑScid9a Let J cid16 ϑScid9a By J cid16 ϑsigU cid9a Let J cid3 J cid3 cid3J cid3 p J cid3 J agree interpretation propositional letters sigψ J cid16 ψa cid2 Clearly J cid3 cid16 ϑa Thus model I A IU J cid3 obtained J interpreting p sigU true Since I cid16 ϕa I cid16 ψa As I As remark note formula ϑScid9 Lemma 12 uniform interpolant ϕ sigψ ψ cid3 sigψ cid3 sigϕ sigψ ϕ cid16 ψ cid3 ϑScid9 cid16 ψ cid3 The semantic update ϑa considered Lemma 12 particular form To establish lower bound size semantic updates ALCQIO observe express ABoxes form ϑa ϑ propositional formula succinctly ALCQIO The following lemma states fact ﬁrstorder logic equality ALCQIO fragment concept names confused unary predicates role names binary predicates 23 The lemma easily proved standard manipulations FO formulas details left reader Lemma 13 Let ϑa ABox assertion ϑ propositional formula let ϕ ﬁrstorder sentence equivalent ϑa Then exists propositional formula ϑ cid3 equivalent ϑ ϑ cid3a cid3 ϕ 2186 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Together observation 20 size Craig interpolants bounded polynomial NP coNP NC1 Lemmas 12 13 yield desired result Theorem 6 If exists polynomial p propositional ABoxes A updates U exists ALCQIOABox Acid3 Acid3 cid3 pA U NP coNP NC1 A cid16U Acid3 Proof Assume polynomial p stated Theorem 6 We p2 bounds size Craig interpolants propositional logic implies NP coNP NC1 observed 20 Let ϕ ψ propositional formulas ABox A ϕa update U pa p sigϕ sigψ Then ALCQIOABox Acid3 A cid16U Acid3 cid3 pA U By algorithm computing semantic updates propositional formula ϑ Acid3 A cid16U ϑa By Lemma 1 Acid3 logically equivalent ABox Acid3cid3 ϑ cid3a ϑ cid3 propositional formula Acid3cid3 cid3 Acid3 Finally Lemma 12 implies ϑ cid3Scid9 S sigϑ cid3 sigϕ sigψ Craig interpolant ϕ ψ size bounded pϕ2 independent ψ cid2 ϑa logically equivalent By Lemma 13 Acid3 As shown 22 possible replace complexitytheoretic proviso Theorem 6 UP Ppoly UP class problems NPaccepted nondeterministic Turing machine unique accepting paths Ppoly nonuniform version PTime Just like statement Theorem 6 strongly believed UP Ppoly hold We note result stated Theorem 6 closely related similar result proved Cadoli et al states semantic updates propositional theories exponential blowup avoided polynomial hierarchy collapses 9 However Cadoli et als technique appear work restricted form updates U considered paper allow literals compound conceptsformulas 44 Smaller updates ALCQIO An inspection construction semantic updates presented Section 41 reveals case update lot simpler U contains concept assertions role assertions computing concepts C replace concept A C U cid8 cid15 A cid7 cid10 cid8 cid15 cid4 cid10 AaU AaU In particular resulting semantic update AU exponential U longer role depth A To understand simple rewriting possible roles updated note construction makes essential use nominals constructor Boolean concept constructors In standard DLs constructors available roles construct union roles complement nominal role b b individual names In section consider DL comprises slightly unusual role constructors admits simple semantic updates form case update comprises role assertions Denote ALCQIO DL extends ALCQIO means role constructors role union settheoretic difference roles b nominal roles In language compound roles constructed starting role names nominal roles applying inverse role constructor The semantics compound roles expected I b NI I b bI I I r1 r2I r r 2 1 I I r1 r2I r r 2 1 We note ALCQIO counting quantiﬁers 24 In particular ALCQIO main result section expressive power C 2 twovariable fragment ﬁrstorder logic ABoxes easily translated formulas C 2 The following Theorem 7 There polynomial p ALCQIO ABox A update U ALCQIO ABox Acid3 1 A cid16U Acid3 2 Acid3 cid3 A 2pU 3 Acid3 computed time pAcid3 Proof We modify construction Section 41 The construction concepts C concept A C U follows replace cid8 A cid7 cid15 cid10 cid8 cid15 cid4 AaU AaU H Liu et al Artiﬁcial Intelligence 175 2011 21702197 cid10 2187 role r C cid9 cid10 cid11 cid9 cid8 r cid4 cid6 b cid4 cid6 b rabU rabU The concepts C Section 41 cid2 U size polynomial A U The ABox Acid3 constructed way Clearly Theorem 7 independent coding numbers iterated updates retain size bound U work directly replaced U1 Un An alternative working description logic ALCQIO twovariable fragment counting C 2 Then result analogous Theorem 7 easily obtained 5 Computing projective updates We consider projective updates wellbehaved semantic ones ﬁrst projective updates enjoyed DLs ALCO ALCQIO including comprise constructor second projective updates constructed polynomial time exponential blowup We prove ALCQIO approach easily adapted DLs ALCO ALCQIO These results transfer corresponding DLs constructor thanks Lemma 7 Let A ALCQIOABox U update We construct ALCQIOABox Acid3 Let subA denote closure subconcepts C Ca A The general approach constructing Acid3 A cid16p U Acid3 shares lot similarity construction semantic updates Section 41 However need subtle technical tricks avoid exponential blowups occur construction concepts C ii ﬁnal disjunction U cid3 U The central idea overcome blowups use fresh concept names XC fresh role names ρr explicitly reconstruct Acid3 extension concepts C subA roles r roleA update This allows eliminate blowup concept names XC enable structure sharing addressing righthand clauses Fig 4 role names ρr help multiple occurrences concepts C avoid exponential case distinction S b ra b U clauses number restrictions The use XC ρr allows eliminate blowup ii case distinction U cid3 U replaced freedom leave interpretation XC ρr intuitively corresponds existential quantiﬁcation U cid3 U More details given construction Acid3 U U In follows use ρr denote ρr contains update U Second set ABox The projective update Acid3 union ABoxes First Acid3 Ainit stores original ABox A concept names XC C role names ρr r Ainit cid4 cid4 cid4 cid5 cid6 cid5 Ca A cid5 cid6 cid5 b IndU ra b A cid5 cid6 cid5 b IndU ra b A cid5 cid6 cid5 b cid2 IndU ra b A cid5 cid6 cid5 b cid2 IndU ra b A XC ρra b ρra b cid4 ra b cid4 ra b The remaining ABoxes establish relationship ρr r XC C First state interpretation ρr coincides r ABox individuals affected update U U cid6 cid4cid2 Ar cid3 ρrb rb cid5 cid5 b IndU r roleA ra b U ra b U Second ensure concept XC C subA represents extension C update behaves like concept C taking conjunction Cbi concepts Fig 6 biimplication fresh concept XC C subA Note biimplication X A A NC given ﬁrst line states X A interpreted like A individuals update A occurred In particular A subU AaU AaU equivalent cid9 concept ﬁrst line equivalent X A A On cid16 individuals update occurred constraints X A given Ainit It veriﬁed possible extensions X A precisely possible extensions A update general possibility Aa U Aa Aa A The fresh roles ρr understood similarly ABox Ar playing role biimplications X A However major difference express ρr extension r nonABox domain elements use r instead ρr dealing elements This reﬂected use r ρr biimplications number restrictions 2188 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 Fig 6 The conjuncts Cbi Unfortunately ALCQIO lacks expressive power enforce Cbi satisﬁed domain elements We resort enforcing Cbi satisﬁed relevant domain elements domain elements reached ABox individual A sequence roles occurs concept C subA Formally induc tively associate concept C subA set pathC words r1 rn NR follows ε denotes sequence cid3 cid2 ε path path A ε pathC1 cid4 C2 pathC1 pathC2 pathC1 cid7 C2 pathC1 pathC2 pathC pathC pathaC pathC pathcid2 m r C pathcid3 m r C cid12 cid5 cid6 cid5 w pathC cid5 cid6 cid5 w pathC cid4 r w cid4 r w ε ε pathC C subA Now choose fresh individual cid4 cid3 cid5 cid6 cid6 cid5 w pathA b IndA wC abbreviates r1 rnC w r1 rn Finally let u wCbi Arel cid2 cid2 b u cid3 Let pathA cid4 fresh role u set Acid3 Ainit Ar Arel U Before proving A cid16p example illustrates approach avoiding exponential blowup type ii described Let A r A s A U Aa1 Aa2 note UNA r occur U simplify r AU Thus conjunction U following assertion simpliﬁed version semantic update computed algorithm equivalent assertion r A U U Acid3 r A s A cid3 cid2 A cid4 a1 r cid3 cid2 A cid7 a2 r cid2cid2 r A cid7 a2 cid2 s cid2 s cid3 cid3 cid4 a1 A cid4 a1 cid3 A cid7 a2 s cid3 cid2cid2 A cid7 a2 cid3 cid4 a1 cid3 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2189 U cid3 U Intuitively Here disjuncts fact disjunction disjunction reﬂects fact Aa1 Aa2 satisﬁed update The projective update union U following ABoxes simpliﬁed Cbi taking account role r sigU righthand biimplication rC equivalent r XC cid17 AU cid3 Ainit Xr A Xs A Ar cid4 Arel Cbi Xr A rX A cid4 Xs A sX A cid4 X A X A cid4 usCbi urCbi uCbi cid2 cid2 cid2 cid2 cid3cid6 cid3cid6 cid4 u cid3 cid3 cid2cid2 a1 cid4 a2 cid3 cid3 X A A Observe interpretation Xr A Xs A a1 a2 constrained case distinction demand ing Ainit satisﬁed Lemma 14 A cid16p U Acid3 Proof Assume ﬁrst I MAU symbols distinct u exists model I0 A I IU We exists model Icid3 coincides I role names ρr r roleA concept names XC C subA By deﬁnition Acid3 0 Now deﬁne Icid3 way I extended setting cid3Icid3 cid2 Icid3 u ρIcid3 r Icid3 C d0 cid4cid2 d0 b I0 I0 I d0 cid3I cid3 cid5 cid6 cid5 b IndA r roleA C subA r C It easily veriﬁed Icid3 X Conversely assume I model Acid3 concept names A subA subU set A We construct model I0 A I IU I0 A For concept names A subA subU set d A I 0 Deﬁne I0 follows I0 iff model Acid3 required 1 d A 2 d X I d I A d I IndU I IndU Similarly role names r roleA roleU set r I0 r I For role names r rolesA roleU set d1 d2 r I0 iff I d1 d2 cid2 1 d1 d2 r 2 d1 d2 ρI r d1 d2 I IndU I IndU We I0 model A I IU 0 Claim 1 For Ca A I0 cid16 Ca iff I cid16 XC We C subA subconcepts E C words w d cid3I b IndA w v v pathE pathC b I d w I d E I0 iff d X I E Claim 1 follows immediately taking w ε The proof structural induction E uses Arel We consider cases E concept form cid2 m r F First let E A concept A Since path A ε I IndU consider d b I I IndU d X A iff d A I I0 iff d X d A A deﬁnition A I ﬁrst biimplication Fig 6 iff d A b IndA w pathC Assume d given If d I0 Otherwise d I0 deﬁnition A I d w I0 I Now consider case E cid2 m r F Assume b I d w I b IndA w v pathC v pathE Then wr v pathC v pathF We distinguish following cases d I IndU By biimplication Xcid3m r F Fig 6 d X d x r holds x F I0 iff x X I iff d x r I F Thus obtain d X I0 Moreover x d x r I E iff d cid2 m r F I0 E I0 I I E iff d cid2 m r X F I I x wrI b For x By IH 2190 d H Liu et al Artiﬁcial Intelligence 175 2011 21702197 I IndU Again biimplication Xcid3m r F d X m1 m2 m m2 cid3 IndU d cid2 m1 r Then d cid2 m1 r cid16 previous case Note x c I F Thus d cid2 m2 ρr iff c equivalences obtain d X bIndU b cid4 X F I I cid16 I X iff d cid2 m1 r I0 iff d x ρI c IndA d x r cid16 b cid4 X F I bIndU bIndU E iff d cid2 m r F I0 E cid16 iff d cid2 m2 r I0 required bIndU b cid4 X F I I E iff m1 m2 b cid4 X F I bIndU b cid4 F I0 proved analogously I0 r Moreover IH c b cid4 F I0 Summing previous d cid2 m2 ρr I F bIndU cid16 cid16 I From Claim 1 condition I model Ainit deﬁnition r It remains I IU 0 First interpretations concept role names appear U identical I0 I Second I I0 interpret role concept names appear U way I0 ﬁrst biimplication domain cid3I Fig 6 imply x cid3I Similarly role names r I ra b U ra b U holds deﬁnition r x y r I0 I cid16 Ar imply x y cid3I cid3I Thus I cid16 U obtain I IU unaffected update U concept names A deﬁnition A I Aa U Aa U holds x A I0 obtain I0 model A I0 iff x y r I0 iff x A I b I I 0 cid2 We analyze size Acid3 terms size A U Obviously Ainit cid3 A Ar OU 3 Since Cbi OU 3 A independently coding numbers inside number restrictions pathA cid3 A2 obtain Arel OA3 U 3 Summing obtain Acid3 OU 3 A3 Together Lemma 7 obtain following result particular implies DLs ALCO ALCQIO projective updates It independent coding numbers inside number restrictions Theorem 8 Let L DL ALCO ALCQIO Then polynomial p LABox A update U LABox Acid3 U Acid3 1 A cid16p 2 Acid3 cid3 pA U 3 Acid3 computed time pAcid3 In context TBoxes available appropriate store conjuncts Cbi TBox avoid paths role names altogether Acid3 It seen acyclic TBox suﬃces 15 concrete idea In way need introduce new individual We close section brief discussion iterated updates projective case To start note possible repeatedly compute projective updates presented construction simply treating fresh symbols introduced earlier updates normal symbols subsequent updates These updates stronger necessary later updates preserve meaning fresh symbols introduced earlier updates Unfortunately easy projective update Acid3 obtained starting ABox A consecutively applying updates U1 Un construction exponential n In particular A A0 An Acid3 generated projective updates easy Ai contains ki subA concept names XC constant k Despite problem straightforward carry repeated updates obtaining ABox exponential size The simple workaround original ABox A memory repeatedly update updates Ui instead projective updates Ai More precisely deﬁne cumulative update cid18Ui Ui cid18Ui1 Ui1 1 cid3 cid3 n When processing stream updates U1 Un A latest cumulative update cid18Ui memory At time current projective update obtained applying construction A cid18Ui Clearly projective updates obtained way size polynomial A U1 Un 6 Conditional updates reasoning action Up considered updates U unconditional sense assertions U necessarily true update subject conditions In applications useful allow conditional updates able express statements Aa true update Cb true In particular generalization important reasoning actions recently studied DL context 12 ABox updates play crucial role implementing reasoning pattern progression opposed regression approaches 7 In section introduce conditional updates results proved uncon ditional updates semantic projective true corresponding version conditional updates As application conditional updates work reasoning action progression approach reprove optimal upper complexity bounds projection problem DL actions ﬁrst established regression 12 The results based projective updates H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2191 Let L DL ALC ALCQIO A conditional Lupdate U ﬁnite set expressions ϕψ precondition ϕ LABox assertion postcondition ψ unconditional case assertion forms Aa Aa ra b ra b Intuitively ϕψ U means ϕ holds update ψ holds Analogously case unconditional updates require consistency condition ϕψ ϕcid3ψ U ABox ϕ ϕcid3 inconsistent We adapt notion interpretation update case conditional updates Deﬁnition 5 Conditional interpretation update Let U conditional update I interpretation Deﬁne interpreta tion IU setting individual names concept names A role names r cid3IU IU cid3I I cid2 IU A IU r cid2 r A I cid4 I b cid5 cid5 ϕ Aa U I cid16 ϕ I cid6cid3 cid7 cid4 cid3 cid5 cid6cid3 cid7 cid4cid2 cid5 ϕra b U I cid16 ϕ cid5 cid5 ϕ Aa U I cid16 ϕ cid3 cid5 cid5 ϕra b U I cid16 ϕ I b I cid4cid2 cid6 I I I cid6 IU called result updating I U The conditional versions semantic projective updates deﬁned way unconditional updates We repeat deﬁnition readers convenience Deﬁnition 6 Semantic projective conditional updates Let A ALCQIOABox U conditional update semantic update A U symbols A cid16U Acid3 An ALCQIOABox Acid3 cid4 cid3 cid2 Acid3 IU M cid5 cid6 cid5 I MA A description logic L semantic conditional updates LABox A conditional Lupdate U LABox Acid3 projective update A U symbols A cid16p U A A cid16U Acid3 An ALCQIOABox Acid3 cid5 cid6 cid5 I MA cid3 cid2FrAcid3 IU Acid3 M cid4 cid2 cid2FrAcid3 FrAcid3 sigAcid3 sigA sigU set fresh symbols Acid3 conditional updates LABox A conditional Lupdate U LABox Acid3 A description logic L semantic projective A cid16p U Acid3 Note conditional updates generalize unconditional ones assertions ψ unconditional updates ex pressed cid9aψ arbitrary individual It follows nonexistence results proved Section 3 unconditional updates hold conditional updates Regarding results existence updates ﬁrst aim generalize Theorems 3 4 8 unconditional conditional case We leave straightfor ward generalization results Theorem 7 interested reader We start extending Theorem 3 Theorem 9 ALCO ALCIO ALCQO ALCQIO semantic conditional updates Proof Let A ABox formulated DLs Theorem 9 U conditional update The assertions occur lefthand update statements U lhsU ϕ ϕψ U Each D lhsU corresponds possible choice preconditions true update For D ABox cid6 cid4 PreD D ϕ cid5 cid5 ϕ lhsU D identiﬁes models realize choice D PostD ψ ϕψ U ϕ D unconditional update executed models By Lemma 11 A PreD cid16PostD AD 2192 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 cid13 AD PostD cid14 cid13 A PreDU cid3 U cid3PostD By semantics ABox updates follows A cid16U Acid3 cid10 cid14 cid8cid13 cid14 cid13 Acid3 PostD A PreDU cid3 cid2 DlhsU U cid3PostD It follows construction Acid3 proof upper bound size semantic updates given Theorem 4 applies conditional case We consider projective conditional updates generalizing Theorem 8 Theorem 10 Let L DL ALCO ALCQIO Then polynomial p LABox A conditional Lupdate U LABox Acid3 U Acid3 1 A cid16p 2 Acid3 cid3 pA U 3 Acid3 computed time pAcid3 Proof sketch Assume A ALCQIOABox U conditional ALCQIOupdate To deﬁne projective update introduce fresh concept names X A A subA lhsU fresh role names ρr r roleA lhsU The additional names concepts roles lhsU represent preconditions U hold original interpretation The component Ainit deﬁned way proof Theorem 8 setting Ainit cid4 cid4 cid4 cid5 cid6 cid5 Ca A cid5 cid6 cid5 ra b A cid5 cid6 cid5 ra b A XC ρra b ρra b Set cid4cid2 ρrb rb Ar cid3 cid5 cid5 b IndU r role cid2 cid3 A lhsU cid6 ra b rhsU ra b rhsU deﬁne Cbi way Theorem 8 exception Cbi contains biimplication XC C subA lhsU U replaced rhsU implication X A biimplications qualiﬁed number restrictions Let cid3 cid5 cid4 cid5 w path fresh individual u fresh role set cid3 cid5 cid5 b Ind A lhsU A lhsU cid3cid6 cid2 cid2 b cid3cid6 cid4 u cid2 cid2 u wCbi Arel Instead including U Acid3 triggered preconditions satisﬁed This achieved ABox case unconditional updates sure updates Acond cid9 cid4 cid6 cid18pϕ pψ ϕψU cid9 cid19 cid8 cid10 cid18pϕ cid20 cid3 cid2 cid18pψ pψ ψrhsUO cid15ϕψU O denotes set ABox assertions concept role names A lhsU pϕ ua cid4 C ua cid4 rb ua cid4 rb ϕ Ca ϕ ra b ϕ ra b cid18p deﬁned like p C replaced XC r ρr The ﬁrst line Acond states ϕ holds original interpretation ψ holds updated interpretation ϕψ U The second line says preconditions assertion ψ holds original interpretation ψ holds updated interpretation holds original interpretation Now set Acid3 Ainit Ar Arel Acond In way proof Theorem 8 A cid16p polynomial p Acid3 cid3 pA U Acid3 computed time pAcid3 cid2 U Acid3 Moreover construction H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2193 We apply Theorem 10 projection problem reasoning action introduced DL context 12 252614 related work The projection problem means decide given action achieves given goal given situation goal necessarily holds true execution action It fundamental problems reasoning action important reasoning problems reduced 7 In context DL L projection problem L formalized deciding given LABox A describes situation action executed conditional Lupdate U describes action LABox assertion ϕ represents goal model I A holds IU cid16 ϕ In 12 algorithms projection problem DLs given based approach regression according rewrites ϕ new assertion ϕcid3 consequence initial ABox ϕ holds conditional update In effect reduces projection problem standard reasoning problem initial ABox The resulting algorithms yield tight upper complexity bounds projection problem DLs ALC ALCQIO ϕcid3 Theorem 11 See 12 The projection problem PSpacecomplete ALC ALCO ALCQO ExpTimecomplete ALCI ALCIO coNExpTimecomplete ALCQI ALCQIO Interestingly obtain alternative proof upper bounds stated Theorem 11 results projective conditional updates Let L DLs mentioned theorem Given LABox A conditional Lupdate U LABox assertion ϕ simply compute polynomial time projective update Acid3 A U size polynomial sizes A U formulated extension LO L nominals present L decide Acid3 cid16 ϕ We obtain polynomial time reduction projection L ABox consequence LO problem PSpace LO ALCO ALCQO 27 ExpTime LO ALCIO 28 coNExpTime LO ALCQIO 29 Thus upper bounds Theorem 11 follow immediately From perspective reasoning action approach corresponds projection instead regressing goal ϕ original ABox progress original ABox goal We remark setup 12 somewhat general considered adds acyclic TBoxes socalled occlusions action description allows conceptrole memberships change freely execution action establishes algorithms complexity bounds sequences actions single ones However scope current paper details conjecture progression approach generalized straightforward way handle extensions In particular sequences actions increase complexity progressionbased projection cf remark closes Section 5 Our proof upper bounds Theorem 11 matching lower bounds provided 12 interesting consequence ABox update perspective taken paper To express projective updates ABoxes DLs ALC ALCQ ALCI ALCQI overcoming problems identiﬁed Section 3 added nominals respective languages Section 5 In cases ALCI ALCQI actually means switching language standard reasoning problems ABox consistency ABox consequence higher computational complexity ALCI ABox consequence PSpacecomplete ExpTimecomplete ALCIO ALCQI ABox conse quence ExpTimecomplete coNExpTimecomplete ALCQIO Now proof Theorem 11 lower bounds stated entail increase complexity language initial ABoxes target language projective updates unavoidable modulo assumption involved complexity classes distinct wants projective updates polynomial size computable polynomial time ALCI target language PSpace complexity prove projection problem ALCI PSpace showing PSpace ExpTime ALCQI target language ExpTime complexity prove projection problem ALCQI ExpTime showing ExpTime coNExpTime 7 Extensions related work We discuss natural extensions framework considered paper particular TBoxes general forms update We survey relevant literature updates description logic reasonable extent updates propositional logic 2194 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 71 Extensions As laid introduction paper concentrated special case ABox updates domain constraints present TBox updates consist ground literals Both restrictions severe point view applications natural try alleviate In cases gives rise signiﬁcant new research challenges basic observations follows We ﬁrst consider updates admit compound ABox assertions updates sets possibly negated assertions Ca ra b C compound concept Due presence disjunction existential restrictions updates nondeterministic Even propositional case oneandonly generally accepted semantics nondeterministic updates led different proposals 8430347 For case DLs beneﬁts drawbacks available semantics remain investigated Unfortunately natural Winslett PMA semantics 4 based idea minimizing changes models original ABox models updated ABox known impossible compute result updating ALCQIABox represent formalism consequence problem decidableno matter semantic projective approximate projective approximate updates considered This observation direct consequence result obtained 27 projection problem ALCQI deﬁned Section 6 Winslett PMA semantics undecidable It unlikely modelbased update semantics induce similar computational problems It remains interesting open problem undecidability results established ALC ALCI Next consider addition TBoxes framework studied paper While assume updates original restricted form sets ground literals We start simple case acyclic TBoxes primitive concept names allowed update deﬁned onessee 1 details notions It shown 15 construction semantic updates presented Section 41 adapted case acyclic TBoxes help achieve succinct presentation updated ABoxes structure sharing All results presented paper easily extended acyclic TBoxes described restrictions updates When restriction dropped TBoxes matter acyclic cyclic general induce semantic computational problems compound concepts update In fact instead putting Ca update C compound concept equivalently deﬁne abbreviation A C TBox use ground literal Aa update Thus need advanced semantics Winslett PMA encounter computational problems described updates compound ABox assertions We refer interested reader 35 pragmatic approach problem context projection 72 Related work propositional logic We discuss relationship updates DL ABoxes investigated paper existing literature updates revisions propositional logic theories Since propositional logic expressively complete means class models described formula problem nonexpressibility updates address context DLs exist For reason propositional logic difference approximate semantic updates In contrast problem determining size updated revised propositional theories great extensively investigated First examples exponential blowups representation revised propositional theories given Nebel 36 Winslett 4 A systematic discussion succinctness issues large range different update revision operators provided Cadoli et al 9 In fact 9 ﬁrst paper distinction semantic projective updates study impact distinction size updates2 We note special case updates literals studied paper considered 9 considered forms update involve propositional formula 73 Related work description logic The update revision evolution description logic knowledge bases recently received considerable attention In discussion focus update literature summarizing work revision evolution 4142 outside scope paper 3740 4142 respectively Besides work presented based extends 15 instance level updates investigated knowledge bases formulated variants DLLite family description logics 1143 This family consists inex pressive DLs tailored capturing conceptual modeling constructs keeping reasoning particular conjunctive query answering low complexity 2 Similarly current paper Calvanese et al 1143 investi gate problem updating DLLite ABox ground literals In addition DLLite TBoxes serve domain constraints The work presented 11 assumes modelbased Winslett style semantics updates gives variety results 2 Note Cadoli et al use slightly different terminology update operator query compactable projective updates polynomial size logically compactable semantic updates polynomial size Thus terminology 9 shown DLs ALCO ALCQIO update operator considered paper query compactable H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2195 existence size semantic approximate updates description logic DLLiteF Unfortunately observed 43 fundamental algorithm computeUpdate 11 unsound expressivity results Winslett style updates DLLiteF claimed 11 hold To solve resulting expressivity problems examples nonintuitive updates resulting interaction TBox updates formulabased approaches instance level updates TBoxes DLLite proposed 43 For approaches updates polynomial size exist It investigate far formulabased approach extended expressive DLs considered paper TBox level updates received attention instance level updates A main reason modiﬁ cations TBox typically result changes application domain invoked TBox engineer changing understanding application domain Thus TBox level belief revision problem relevant update problem governed different principles Some pros cons modelbased formulabased semantics context presented 44 8 Conclusion We studied updates description logic ABoxes restricted fundamental case compound cepts admitted ABox TBoxes present Our results description logics updates choosing right DL includes nominals possible guarantee existence updates Moreover choosing right notion update projective semantic possible compute updated ABoxes polynomial time We described application results reasoning action Regarding future work interesting study restricted cases update U allowed contain compound concepts TBoxes admitted Note involves challenges identiﬁed discussed Section 6 It interesting consider ABox revision instead ABox update number competing semantics available 89 references We believe results techniques established paper useful deal semantics Acknowledgements We like thank Franz Baader Yursi Bong Conrad Drescher Michael Thielscher ideas discussions The ﬁrst author supported DFG project BA1122102 author DFG Graduiertenkolleg 334 Finally like thank anonymous referees helpful comments Appendix A Proofs Section 2 Observation 1 E cid16U E cid3 Proof Recall cid4 E john haschildHappy mary Happy cid4 Clever U E cid3 cid6 Happymary cid2 cid4 john haschild Happy cid7 mary cid3 cid6 mary Happy cid4 Clever First let I model E By deﬁnition IU assertion E cid3 d cid14 mary d john assertion satisﬁed IU mary satisﬁed For ﬁrst assertion ﬁrst assume d Happy IU second IU haschildHappyIU ﬁrst assertion satisﬁed If IU haschildmaryIU ﬁrst john I mary By deﬁnition IU I d haschild IU Thus john I haschild I haschild IU Clever I mary john Happy IU I I Now let J model E cid3 Let I interpretation obtained J setting Happy deﬁnition IU J I satisﬁes second assertion E Moreover obvious john john case imply I satisﬁes ﬁrst assertion E cid2 J haschildmaryJ I Happy J mary J By J haschildHappyJ Observation 2 E U ALC E cid3cid3 Proof By Point 2 Lemma 2 suﬃcient ABoxes E cid3 E cid3cid3 cid4 cid6 cid2 mary Happy cid4 Clever john haschild cid6 cid4 john haschildHappy cid7 Clever mary Happy cid4 Clever Happy cid7 mary cid3 ALCconsequences E cid3 cid16 ϕ iff E cid3cid3 cid16 ϕ ALCABox assertions E We E cid3 cid14cid16 ϕ implies For converse let E cid3cid3 cid14cid16 ϕ If ϕ possibly negated role E cid3cid3 cid14cid16 ϕ model E cid3 model E cid3cid3 2196 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 assertion E cid3 model I E cid3cid3 r individual names follows I 0 C entail assertion Hence let ϕ C0a0 concept assertion 0 Deﬁne new model J cid3J cid3I IndA interpreting concept names A role names I cid4 J A J J r cid4cid2 cid2 d cid5 cid5 d A d e I cid3 cid6 I IndE cid3 cid5 cid5 d e r I cid6 IndE It proved induction structure C d C J C It follows J cid16 E cid3cid3 0 If J model E cid3 0 C d Happy cid4 CleverJ john J J d haschild I iff d C I Otherwise J cid16 E cid3cid3 d cid3I IndE ALCconcepts jointly imply J cid14cid16 E cid3 Distinguish following cases J 1 a0 cid14 mary Then let J cid3 J cid3 C 0 J cid3 0 2 a0 mary obtained J setting mary J cid3 0 J 0 C J 0 J 0 C0 contain nominals J cid3 d By construction J cid16 Acid3cid3 J cid3 cid16 E cid3 Moreover J cid3 Then let J cid3 remains mary obtained J setting haschild J cid3 0 Let Ω denote elements reachable J cid3 J cid3 Ω d Ω d e r mary Ω smallest r NR e Ω It shown induction d Ω ALCconcepts C crucial element proof J 0 C set mary structure C d C observation deﬁnition J J cid3 required cid2 J We J cid3 cid16 E cid3 Ω Obviously yields mary J john J mary J cid3 haschild iff d C john J cid3 0 C C J cid3 J cid3 J cid3 J J I Lemma 6 1 Let L DL ALC ALCQIO Then Boolean LABox exists equivalent Boolean LABox 2 Let L DL ALCO ALCQIO Then Boolean LABox exists equivalent nonBoolean LABox Proof Concerning let A Boolean LABox let ϕ assertion A b D subconcept concept occurring ϕ Then ABox Acid3 obtained A replacing ϕ Db ϕcid9b D Db ϕb D C Xb D denotes concept obtained ϕ replacing occurrences b D X Using semantics easy Acid3 equivalent A By iterating replacement eventually obtain Boolean LABox Concerning ii deﬁne mapping ABox assertions L Lconcepts follows Ca aC arb arb ra b ra b The mapping extended Boolean ABox assertion ϕ follows ϕ cid7 assertion ψ ψ Acid3 ϕ 1 A cid2 n arbitrary individual Using semantics easy Acid3 Lconcept obtained replacing cid4 Now let A ϕ1 ϕn Boolean LABox Deﬁne nonBoolean LABox equivalent cid4 cid4 ϕ References 1 F Baader DL McGuinness D Nardi P PatelSchneider The Description Logic Handbook Theory Implementation Applications Cambridge Univer sity Press 2003 2 D Calvanese GD Giacomo D Lembo M Lenzerini R Rosati Tractable reasoning eﬃcient query answering description logics The DLLite family Journal Automated Reasoning 39 3 2007 385429 3 R Kontchakov C Lutz D Toman F Wolter M Zakharyaschev The combined approach query answering DLLite Proceedings 12th International Conference Principles Knowledge Representation Reasoning KR10 AAAI Press 2010 pp 247257 4 M Winslett Updating Logical Databases Cambridge University Press 1990 5 R Fagin GM Kuper JD Ullman MY Vardi Updating logical databases Advances Computing Research 3 1986 118 6 H Katsuno AO Mendelzon On difference updating knowledge base revising Proceedings 2nd International Conference Principles Knowledge Representation Reasoning KR91 Morgan Kaufmann 1991 pp 387394 7 R Reiter Knowledge Action MIT Press 2001 8 T Eiter G Gottlob On complexity propositional knowledge base revision updates counterfactuals Artiﬁcial Intelligence 57 23 1992 227270 9 M Cadoli FM Donini P Liberatore M Schaerf The size revised knowledge base Artiﬁcial Intelligence 115 1 1999 2564 10 J Lang F Lin P Marquis Causal theories action A computational core Proceedings 18th International Joint Conference Artiﬁcial Intelligence IJCAI03 AAAI Press 2003 pp 10731078 H Liu et al Artiﬁcial Intelligence 175 2011 21702197 2197 11 GD Giacomo M Lenzerini A Poggi R Rosati On instancelevel update erasure description logic ontologies Journal Logic Computa tion 19 5 2009 745770 12 F Baader C Lutz M Milicic U Sattler F Wolter Integrating description logics action formalisms First results Proceedings 20th National Conference Artiﬁcial Intelligence AAAI05 AAAI PressThe MIT Press 2005 pp 572577 13 C Drescher H Liu F Baader S Guhlemann U Petersohn P Steinke M Thielscher Putting ABox updates action Proceedings 7th International Symposium Frontiers Combining Systems FroCos09 LNCS vol 5749 Springer 2009 pp 214229 14 C Drescher M Thielscher Integrating action calculi description logics Proceedings 30th Annual German Conference AI KI07 LNCS vol 4667 Springer 2007 pp 6883 15 H Liu C Lutz M Milicic F Wolter Updating description logic ABoxes Proceedings 10th International Conference Principles Knowledge Representation Reasoning KR06 AAAI Press 2006 pp 4656 16 C Areces B Cate Hybrid logic P Blackburn J van Benthem F Wolter Eds Handbook Modal Logic Elsevier 2007 pp 821868 17 C Lutz D Toman F Wolter Conjunctive query answering description logic EL relational database Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI09 AAAI Press 2009 pp 20702075 18 P Blackburn J van Benthem Modal logic A semantic perspective P Blackburn J van Benthem F Wolter Eds Handbook Modal Logic Elsevier 2007 pp 279 19 RM Karp RJ Lipton Some connections nonuniform uniform complexity classes Proceedings 12th Annual ACM Symposium Theory Computing STOC80 ACM 1980 pp 302309 20 D Mundici Tautologies unique Craig interpolant uniform vs nonuniform complexity Annals Pure Applied Logic 27 1984 265273 21 J Krajícek Interpolation theorems lower bounds proof systems independence results bounded arithmetic Journal Symbolic Logic 62 2 1997 457486 22 U Schöning J Torán A note size Craig interpolants Dagstuhl Seminar Proceedings Internationales Begegnungs und Forschungszentrum fuer Informatik IBFI vol 06451 Schloss Dagstuhl Germany 2006 23 A Borgida On relative expressiveness description logics predicate logics Artiﬁcial Intelligence 82 12 1996 353367 24 C Lutz U Sattler F Wolter Modal logics twovariable fragment Annual Conference European Association Computer Science Logic CSL01 LNCS vol 2142 Springer 2001 pp 247261 25 Y Gu M Soutchanski A description logic based situation calculus Annals Mathematics Artiﬁcial Intelligence 58 12 2010 181 doi101007 s104720109176z 26 L Chang F Lin Z Shi A dynamic description logic representation reasoning actions 2nd International Conference Knowledge Science Engineering Management KSEM07 LNCS vol 4798 Springer 2007 pp 115127 27 F Baader M Milicic C Lutz U Sattler F Wolter Integrating description logics action formalisms reasoning web services LTCSReport LTCS0502 Chair Automata Theory Institute Theoretical Computer Science Dresden University Technology Germany 2005 httplatinftu dresdenderesearchreportshtml 28 C Areces P Blackburn M Marx A roadmap complexity hybrid logics Proceedings 13th Conference Computer Science Logic CSL99 LNCS vol 1683 Springer 1999 pp 307321 29 S Tobies The complexity reasoning cardinality restrictions nominals expressive description logics Journal Artiﬁcial Intelligence Research 12 2000 199217 30 KD Forbus Introducing actions qualitative simulations Proceedings 11th International Joint Conference Artiﬁcial Intelligence IJ CAI89 Morgan Kaufmann 1989 pp 12731279 31 F Lin Embracing causality specifying indeterminate effects actions Proceedings 14th National Conference Artiﬁcial Intelligence AAAI96 MIT Press 1996 pp 670676 32 M Thielscher Nondeterministic actions ﬂuent calculus Disjunctive state update axioms Intellectics Computational Logic Kluwer Aca demic 2000 pp 327345 33 Y Zhang N Foo Updating knowledge bases disjunctive information Computational Intelligence 16 2000 122 34 A Herzig The PMA revisited Proceedings 5th International Conference Principles Knowledge Representation Reasoning KR96 Morgan Kaufmann 1996 pp 4050 35 H Liu C Lutz M Milicic F Wolter Reasoning actions description logics general TBoxes 10th European Conference Logics Artiﬁcial Intelligence JELIA06 LNCS vol 4160 Springer 2006 pp 266279 36 B Nebel Base revision operations schemes Semantics representation complexity Proceedings 11th European Conference Artiﬁcial Intelligence ECAI94 John Wiley Sons 1994 pp 341345 37 G Qi W Liu DA Bell Knowledge base revision description logics 10th European Conference Logics Artiﬁcial Intelligence JELIA06 LNCS vol 4160 Springer 2006 pp 386398 38 G Qi F Yang A survey revision approaches description logics Proceedings 2008 International Workshop Description Logics DL08 CEUR Workshop Proceedings vol 353 2008 39 G Qi J Du Modelbased revision operators terminologies description logics Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI09 AAAI Press 2009 pp 891897 40 Z Wang K Wang RW Topor Revising general knowledge bases description logics Proceedings 12th International Conference Principles Knowledge Representation Reasoning KR10 AAAI Press 2010 pp 599601 41 G Flouris M dAquin G Antoniou JZ Pan D Plexousakis Special issue ontology dynamics Journal Logic Computation 19 5 2009 717719 42 G Flouris D Manakanatas H Kondylakis D Plexousakis G Antoniou Ontology change classiﬁcation survey Knowledge Engineering Review 23 2 2008 117152 43 D Zheleznyakov D Calvanese E Kharlamov W Nutt Updating TBoxes DLLite Proceedings 2010 International Workshop Description Logics DL10 CEUR Workshop Proceedings vol 573 2010 44 D Calvanese E Kharlamov W Nutt D Zheleznyakov Updating ABoxes DLLite Proceedings 4th Alberto Mendelzon International Work shop Foundations Data Management AMW10 2010