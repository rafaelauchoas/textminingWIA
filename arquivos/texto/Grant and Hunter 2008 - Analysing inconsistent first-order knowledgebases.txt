Artiﬁcial Intelligence 172 2008 10641093 wwwelseviercomlocateartint Analysing inconsistent ﬁrstorder knowledgebases John Grant ab Anthony Hunter c Department Mathematics Towson University Towson MD 21252 USA b Department Computer Science University Maryland College Park MD 20742 USA c Department Computer Science University College London Gower Street London WC1E 6BT UK Received 31 December 2006 received revised form 14 November 2007 accepted 14 November 2007 Available online 22 November 2007 Abstract It wellknown knowledgebases contain inconsistencies We provide framework measures based ﬁrstorder fourvalued logic quantify inconsistency knowledgebase This allows comparison inconsistency diverse knowledgebases represented sets ﬁrstorder logic formulae We motivate approach considering examples knowledgebases representing reasoning ontological knowledge temporal knowledge Analysing ontological knowledge including statements concepts subconcepts concepts concepts disjoint problematical lack knowledge instances populate concepts analysing temporal knowledge temporal integrity constraints problematical considering inﬁnite linear time lines isomorphic natural numbers real numbers complex structures branching time lines We address difﬁculties providing algebraic measures inconsistency ﬁrstorder knowledgebases 2007 Elsevier BV All rights reserved Keywords Measuring inconsistency Paraconsistent logics Inconsistency tolerance Analysing inconsistency Conﬂict resolution 1 Introduction The need handling inconsistencies knowledgebases recognised recent years Inconsistencies arise reasons information sources merged presence integrity constraints The use ﬁrstorder logic problematical single local inconsistency leads global incon sistency entire knowledgebase Paraconsistent logics allow local inconsistency global inconsistency Paraconsistent reasoning important handling inconsistent information number proposals paraconsistent logics Da Costas Cω logics 11 developments C systems 9 Priests threevalued logic LPm 33 Belnaps fourvalued logic 5 versions Belnaps fourvalued logic restricted minimal models 1 reasoning inconsistent information Further approaches techniques analysing querying incon sistent databases knowledgebases 231231 techniques merging knowledgebases 472728 analytical techniques inconsistent software speciﬁcations 19 proposed reviews applications Corresponding author Email addresses jgranttowsonedu J Grant ahuntercsuclacuk A Hunter 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200711006 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1065 616 Whilst methods provide potentially valuable ways inconsistent knowledgebases provide adequate way summarising nature inconsistencies Our paper providing measure inconsistency knowledgebase represented set ﬁrstorder logic formulae By providing measure compare different knowledgebases evaluate quality information If given opportunity choose different knowledgebases try choose inconsistent Fourvalued paraconsistent logics basis approach measuring inconsistency knowl edgebases 142021 In inconsistent set formulae reﬂected fourvalued models set inconsistency measured models This approach measuring inconsistency seen useful tool analysing diverse range information types including news reports 23 integrity constraints 14 ontologies 32 software speciﬁcations 830 ecommerce protocols 10 However approach measuring inconsistency restricted propositional language language predicates function symbols In paper present framework measuring inconsistency ﬁrstorder language examples analysing ontological temporal knowledge Dealing ﬁrstorder language potentially important diverse applications reasoning speciﬁcations 13 raise issues regard analysing arbitrarily large including inﬁnite domains To address issues framework provides algebraic measures inconsistency ﬁrstorder knowledgebases 2 Overview approach In section provide informal overview approach examples motivate illustrate approach We start recalling diverse applications science require ability represent reason knowledge form expressive propositional logic Furthermore applications need analyse inconsistency arising knowledge To illustrate need systems andor users analyse inconsistency consider diverse applications tools analysing formal software speciﬁcations parts speciﬁcations come different sources systems disambiguation natural language processing conﬂicting syntactic semantic prag matic parses textspeech parsed tools developing ontologies based description logics multiple ontologies multiple sources need combined ontology engineer single coherent consistent ontology In examples potential applications need automatic analyse degree inconsistency arising available knowledge need provide user software knowledge engineer assessment degree inconsistency arising available knowledge Once systemuser access assessment degree inconsistency systemuser intelligent better informed decision course action inconsistency In paper assume knowledgebase set formulae classical ﬁrstorder logic We impose restrictions It include function symbols variable symbols quantiﬁer symbols And course knowledgebase inconsistent formula knowledgebase inconsistent Our approach measuring inconsistency knowledgebase consider fourvalued models Each models based bistructure essentially pair classical interpretations One interpretations satisfaction positive literals atoms satisfaction negative literals So bistructure atom negation satisﬁed This gives valued semantics atom regarded exactly true false true false true false bistructure The semantics complex formulae given generalisation Belnaps valued logic paraconsistent logic tolerant logic For purposes semantics simple set models knowledgebase nonempty Given bistructure apply simple measure inconsistency denoted Inc gives proportion tuples bistructure conﬂict The conﬂict bistructure number tuples true false This normalised total number tuples possible interpretations function size domain value 0 1 interval For example bistructure monadic relation R domain objects a1 a2 ﬁrst classical interpretation cid3a1cid4 cid3a2cid4 1066 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 R second classical interpretation cid3a1cid4 R conﬂict respect tuple cid3a1cid4 proportion tuples conﬂict 12 Note measure restricted Herbrand interpretations We generalise measure inconsistency sets bistructures In order set framework consider properties deal sets bistructures general But practice want analyse knowledgebase consider set models knowledgebase For knowledgebase measure inconsistency model dependent domain size consider models domain size turn For domain size ﬁnd minimum degree inconsistency model models size function denoted MicroInc summarise value obtained size form ratio univariate polynomial functions rational function variable cardinality domain The polynomial numerator gives minimum number tuples conﬂict models domain size n polynomial denominator gives maximum number tuples models domain size n By representing degree inconsistency form rational function concise summary nature inconsistency domain size Furthermore provides direct way comparing knowledgebases terms respective rational functions To illustrate approach look examples knowledgebases key aspects measuring inconsistency We start simple examples based pairs formulae taken following list formulae A1A7 For pair consider example A2 A3 imagine agents provided formulae agents need jointly provide formula agree Perhaps agents need requirements capture process software agents stakeholders So formula represents requirements agents By measuring inconsistency union formulae measure divergent agents positions Furthermore agents negotiating withdraw formulae replace formulae inconsistent Such negotiation undertaken aim ﬁnding pair formulae consistent A1 P A2 P A3 xP x A4 xP x A5 xP x A6 xP x A7 xP f x For pair A1 A2 atomic conﬂict A1 says domain object inter pretation P A2 says domain object interpretation negation P For pairs A2 A3 A3 A4 similar case A1 A2 domain object conﬂict So pairs A1 A2 A2 A3 A3 A4 knowledgebase contains formulae pair calculate measure inconsistency rational function 1n limit n goes inﬁnity degree inconsistency 0 For pairs A3 A5 A3 A6 signiﬁcant inconsistency In models domain objects conﬂict pair So A3 A5 A3 A6 knowledgebase contains formulae pair calculate measure inconsistency rational function nn limit degree inconsistency 1 For pair A3 A7 similar pair A3 A6 need consider function symbol f right formula If consider models fewest conﬂicts models want base measures interpretation function symbol constant function c D d D f d c In case domain object conﬂict c mentioned So A3 A7 knowledgebase contains formulae pair calculate measure inconsistency rational function 1n limit degree inconsistency 0 We consider examples ontological knowledge Whilst description logics leading approach formalising ontological knowledge basic description logics actually subsystems classical logic J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1067 straightforward present examples ontological knowledge form classical logic For adopt following conventions 1 A concept P represented monadic predicate P x 2 An individual c member concept P represented ground predicate P c 3 The relationship concept Q subconcept concept P represented xQx P x 4 The relationship concept Q disjoint concept P represented xQx P x xP x Qx We key advantage approach analysing ontology development consider need analyse structure concepts interrelationships knowing instances populate For example medical records ontology ontology engineer obtained knowledge example concept heart surgery subclass concept surgery male female disjoint concepts ontology engineer expected list patients hospital future Hence ontology developed number instances ontology unknown Our approach directly deals issue consider arbitrarily large number instances considering arbitrarysized domain In words measure inconsistency captured rational function representation inconsistency domain size We start considering formulae B1B4 These formulae inconsistent They S sub concept R Q subconcept P Q S disjoint P R disjoint However assumption B5 says instance S Q inconsistency B1 xSx Rx B2 xQx Sx Sx Qx B3 xQx P x B4 xP x Rx Rx P x B5 xSx Qx So knowing actual membership concepts analyse inconsistency ontological knowledge For B1B5 Example 15 rational function 1n This means size domain increases inconsistency diluted limit degree inconsistency reduced zero As example ontological knowledge consider C1C7 inconsistent For Example 17 degree inconsistency given rational function 13 So size domain increases inconsistency diluted limit degree inconsistency 13 Furthermore compare B1B5 C1C7 n 3 rational function C1C7 greater B1B5 regard C1C7 inconsistent B1B5 C1 xSx Rx C2 xQx P x C3 xQx Sx Sx Qx C4 xP x Rx Rx P x C5 xT x U x U x T x C6 xT x U x U x T x C7 xT x U x We turn temporal knowledge The following set formulae D1D3 consistent classical logic set satisﬁed inﬁnite model based sequence natural numbers Such set formulae appear speciﬁcation timestamping locutions dialogue protocol interacting agents D1 x yRx y D2 x yRx y Ry x D3 x y zRx y Ry z Rx z 1068 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Now suppose formula D4 added D1D3 set inconsistent However sense conﬂict extremely small bistructure overwhelmingly consistent In contrast following formula D5 added D1D3 set inconsistent sense conﬂict extremely large bistructure substantially inconsistent D4 R1 1 D5 xRx x In framework provide degree inconsistency account inconsistency inﬁnite models allowing example differentiate inconsistency set D1 D2 D3 D4 set D1 D2 D3 D5 explore relationships degree inconsistency ﬁnite models We provide measure consistency inﬁnite model provides alternative dimension analysing inﬁnite model Since proposal paper ﬁrst proposal measuring inconsistency ﬁrstorder logic including inﬁnite models approach offers considerable advantages applications artiﬁcial intelligence science involving ﬁrstorder knowledge A number proposals measuring degree information presence inconsistency 24262937 measuring degree inconsistency infor mation 141517182022242636 All proposals based propositional logic apart 15 14 primarily investigating mathematical structure inconsistency measures based restricted form ﬁrstorder logic Furthermore key improvements new paper 14 paper 1 In 14 considered restricted ﬁrstorder language universal existential quantiﬁcation function symbols apart constant symbols paper consider ﬁrstorder logic paper able handle wider range knowledgebases 2 In 14 considered Herbrand interpretations paper consider ﬁrstorder interpre tation drop constraints inappropriate applications 3 In 14 considered ﬁnite interpretations paper consider ﬁnite inﬁnite inter pretations paper able handle wider range knowledgebases 4 In 14 quasiclassical logic ﬁnd fourvalued models knowledgebase paper use ﬁrstorder version Belnaps logic result simpler logic ﬁnding models knowledgebase 5 In 14 measure inconsistency knowledgebase summarised sequence numbers cid3n1 n2 n3 cid4 n1 measure domain cardinality 1 n2 measure domain cardinality 2 paper measure inconsistency knowledgebase summarised ratio univariate polynomial functions rational function 6 In 14 consider limit behaviour measures paper provide characterisation measures terms limit behaviour In following sections formalise approach follows In Section 3 review basic deﬁnitions language semantics ﬁrstorder logic require In Section 4 present ﬁrstorder version seman tics Belnaps fourvalued logic called tolerant logic use ﬁnd models knowledgebase In Section 5 consider classes interpretations allow restrict models considered knowledge base temporal knowledge wish restrict consideration models elements corresponding real numbers In Section 6 consider measures ﬁnite set ﬁnite models bounded frame set ﬁnite models includes model domain size unbounded frame set models includes inﬁnite model inﬁnite frame In Section 7 consider framework measuring consistency counterpart framework measuring inconsistency Finally Section 8 semantics tolerant logic subsumes semantics Belnaps logic J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1069 3 Basic deﬁnitions ﬁrstorder logic In section provide basic deﬁnitions notation presenting ﬁrstorder logic FOL The language FOL contains logical symbols connectives quantiﬁers punctuation symbols parentheses comma period inﬁnite set variables A speciﬁc language L determined predicate constant function symbols consider nonlogical symbols provided language We assume number predicate function symbols ﬁnite We write P n indicate P nary predicate symbol We adopt following conventions notation Uppercase letters like P R predicate symbols Lowercase letters like f g h subscript function symbols Lowercase letters like b c d subscript constant symbols Lowercase letters like x y subscript variable symbols Lowercase letters like t s subscript terms We assume usual classical deﬁnitions language including deﬁnitions free variable bound variable ground formula An atom form P t1 tn t1 tn terms As usual literal atom negation atom The set formulae deﬁned usual inductive deﬁnitions classical logic We use Greek letters α β γ literals φ clause disjunction literals ψ conjunction clauses θ formula For language L set formulae formed usual inductive deﬁnitions denoted FormulaeL We usually specify L assume given knowledgebase Δ L language contains exactly nonlogical constant function predicate symbols appear Δ We consider classical semantics FOL Deﬁnition 1 A classical structure language L pair D I D nonempty set called domain I function called interpretation makes assignments symbols L follows 1 For constant symbol c I c D 2 For function symbol f arity n 0 I f Dn cid11 D nary function 3 For predicate symbol P arity n 0 I P Dn nary relation We handle variables FOL formulae standard notion assignment Deﬁnition 2 Let D I classical structure let V set variable symbols L An assignment A D I function A V cid11 D Given assignment A xvariant assignment Acid13 A assignment variable x Whilst deﬁnitions language interpretations considered section classical logic use paraconsistent logic section In order consider properties framework require classical consequence relation denoted cid14 We assume shorthand classically inconsistent formula However order simplify presentation assume language L For knowledgebase Δ FormulaeL shorthand write Δ cid14 indicate Δ inconsistent classical logic write Δ cid16cid14 4 Tolerant logic We present deﬁnitions tolerant logic ﬁrstorder fourvalued logic The language tolerant logic FOL However semantics different tolerant logic supports paraconsistent reasoning The notion bistructure tolerant logic based notion classical interpretation The basic difference tolerant logic use pair classical interpretations tolerant interpretation 1070 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Deﬁnition 3 A bistructure tuple D I I D I D I classical interpretations constant symbols c I c I c function symbols f I f I f The deﬁnition ensures bistructure D I I classical interpretations I I use domain object constant symbol function domain function symbol Therefore classical interpretations I I bistructure differ assignment predicate symbols As result use I interpretation positive literals I interpretation negative literals This formalised deﬁnition decoupled satisfaction Deﬁnition 4 For bistructure E D I I assignment A deﬁne satisﬁability relation d called decoupled satisfaction literals L follows E A d P t1 tn E A d P t1 tn 1 cid2 cid2 n cid2 cid2 iff I iff t1 I I t1 I cid3 tn I cid3 tn I P P ti variable I ti I Ati I Ati ti constant I ti I ti I ti ti form f s1 sm I ti I f I s1 I sm I f I s1 I sm Since allow atom complement satisﬁable decoupled level structure link atom complement In contrast classical structure satisﬁes literal forced satisfy complement literal This decoupling gives basis semantics paraconsistent reasoning In following deﬁnition satisﬁability arbitrary formulae provide partial coupling coupling weaker classical logic formula complement In propositional case deﬁnition satisﬁability coincides Belnaps fourvalued logic 5 propositional logic fourvalued latticetheoretic interpretation connectives Theorem 5 Deﬁnition 5 Let E bistructure let A assignment The satisﬁability relation denoted deﬁned induction length formula follows α literal θ θ1 θ2 arbitrary formulae iff E A α iff E A θ1 θ2 E A θ1 θ2 E A θ1 θ2 E A θ iff E A θ1 θ2 E A θ1 θ2 E A θ1 θ2 E A xθ E A xθ E A xθ E A xθ iff iff iff iff E A d α iff E A θ1 E A θ2 E A θ1 E A θ2 E A θ1 E A θ2 iff E A θ iff iff iff E A θ1 E A θ2 E A θ1 E A θ2 E A θ1 E A θ2 cid13 xvariant assignment A cid13 xvariant assignments A cid13 E A cid13 E A θ θ E A xθ E A xθ In Deﬁnition 5 ﬁrst condition deﬁnes satisfaction literals second fourth conditions deﬁne satisfaction conjunction disjunction implication respectively ﬁfth eighth conditions deﬁne satisfaction nega tion ninth twelfth conditions deﬁne satisfaction quantiﬁcation We extend satisfaction bistructure deﬁnition J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1071 Deﬁnition 6 Let E bistructure θ arbitrary formula E θ iff assignments A E A θ Example 1 Let L contain predicate symbols P 2 Q1 function symbol f 1 constant symbols c1 c2 c3 Let E D I I D d1 d2 d3 interpretations I I follows I I I I I c2 d1 c1 I f d1 d2 cid4 P Q I cid5 cid3d1 d3cid4 cid3d3 d3cid4 cid5 cid4 cid3d2cid4 I c3 d3 f d2 d3 Q I I P f d3 d3 cid5 cid4 cid3d1 d3cid4 Here cid3d1 d3cid4 I P I P Since I c1 d1 I c3 d3 Deﬁnition 3 I c1 d1 I c3 d3 Hence assignments A E P c1 c3 E P c1 c3 In contrast cid3d3 d3cid4 I P I P Hence assignments A E P c3 c3 E P c3 c3 Similarly cid3d2cid4 I Q I Q I f d1 d2 I c1 d1 Hence assignments A E Qf c1 E Qf c1 Next deﬁne concept model Deﬁnition 7 Let Δ set formulae let E bistructure E model Δ iff θ Δ E θ In section consider classes models tolerant logic return studying Tolerant Logic Section 8 tolerant logic generalises Belnaps logic 5 Classes models knowledgebases We start class models knowledgebase Deﬁnition 8 consider subclasses Deﬁnitions 9 13 allow focus analysis inconsistency knowledgebases appropriate assumptions having add extra formulae knowledgebase add constraints semantics Deﬁnition 8 For set formulae Δ ModelsΔ E E θ θ Δ Next consider deﬁnition gives models satisfy unique names assumption UNA meaning different constant symbols assigned different objects domain In words constant treated unique Deﬁnition 9 Let Δ set formulae cid4cid6 cid7 UNAModelsΔ D I I ModelsΔ c c cid13 c cid16 c cid13 I c cid16 I c cid13 cid5 Example 2 Let E D I I D d1 d2 d3 interpretations I I follows I I c1 d1 P c2 d2 cid5 cid3d1 d3cid4 cid3d3 d3cid4 cid4 I I I c3 d3 cid5 cid4 cid3d2 d3cid4 P If Δ P c1 c3 P c2 c3 P c3 c3 E UNAModelsΔ As illustration utility measures inconsistency consider section examples knowledgebases deﬁne sets subsets concepts form ontological knowledge For use following class models 1072 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Deﬁnition 10 Let Δ set formulae ConceptModelsΔ cid4 E ModelsΔ formula form xα β Δ assignment A E A α E A β cid5 Example 3 Let E D I I D d1 d2 d3 interpretations I I follows I I I cid4 c1 d1 P Q c2 d2 I cid5 cid3d1cid4 cid3d2cid4 I cid5 cid4 cid3d1cid4 cid3d2cid4 cid3d3cid4 I P I c3 d3 cid5 cid4 cid3d3cid4 Q If Δ P c1 xP x Qx E ConceptModelsΔ Now consider Ecid13 E I P cid3d1cid4 I P I Q cid3d2cid4 cid3d3cid4 So Ecid13 ModelsΔ ConceptModelsΔ We consider measurement inconsistency temporal knowledge To facilitate consider models conform particular ﬂows time Often temporal knowledge represented linear time lines isomorphic natural numbers real numbers complex structures branching time lines These structures raise particular difﬁculties analysis case inconsistency For modelling time ﬂows need predicate t1 cid17 t2 t1 t2 ﬂow time The language L contain additional predicate symbols needed application We assume following languages use time ﬂows Lk language includes cid17 relation constant symbols sequence natural numbers 1 k Lp language includes cid17 relation constant symbols natural numbers positive integers Li language includes cid17 relation constant symbols integers Deﬁnition 11 Let Δ FormulaeLk set formulae D I I FPModelsΔ cid4cid6 cid7 ModelsΔ D sequence natural numbers 1 k n 1 kI n n cI c 1 k predicate symbol cid17 st I cid17 usual ordering 1 k cid5 I cid17 I cid17 cid6 1 k 1 k cid7 Deﬁnition 12 Let Δ FormulaeLp set formulae D I I ModelsΔ D N CPModelsΔ cid4cid6 cid7 n NI n n cI c N predicate symbol cid17 st I cid17 usual ordering N cid5 I cid17 N2 I cid17 Deﬁnition 13 Let Δ FormulaeLi set formulae D I I ModelsΔ D Z CIModelsΔ cid4cid6 cid7 n ZI n n cI c Z predicate symbol cid17 st I cid17 usual ordering Z cid5 I cid17 Z2 I cid17 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1073 We regard FPModelsΔ models Δ ﬁnite linear time models isomorphic subset natural numbers FP stands ﬁnite positive integer models CPModelsΔ models Δ linear time models isomorphic natural numbers CP stands countable positive integer models CIModelsΔ models Δ linear time models isomorphic integers CI stands countable integer models In following examples use usual symbols numbers illustrating elements domain use constant symbols language It desirable situations use different symbol number domain number language difference explicit Example 4 Let E D I I D 1 2 3 4 5 6 7 interpretations I I follows I 4 4 cid4 I 3 3 I 2 2 cid5 cid31cid4 cid33cid4 cid35cid4 cid37cid4 cid5 cid32cid4 cid34cid4 cid36cid4 I 1 1 cid4 I P I P I cid17 usual ordering 1 7 I cid17 I cid17 1 7 1 7 If Δ P 1 P 2 P 3 E FPModelsΔ cid7 cid6 I 5 5 I 6 6 I 7 7 Example 5 Let E D I I D N interpretations I I follows cid4 cid5 n N I n n cid4 I P cid3ncid4 n N I P cid3ncid4 n N I cid17 usual ordering N I cid17 N2 I cid17 cid5 If Δ xP x xP x E CPModelsΔ We deﬁne classes models required capture example continuous ﬂows time isomorphic real numbers branching ﬂows time We consider constraints domain closure axioms 35 Whilst considered equality paper possible adapt deﬁnition tolerant logic support equality relation semantics case appropriate assume knowledgebase equality relation true false form quasiequality introduced axiomatisation proposed 14 For set formulae Δ ModelsΔ nonempty Furthermore n N Δ model E ModelsΔ E D I I D n Even formulae Δ involve constant symbols interpretation assigns element domain constant symbols It deal special classes models UNAModelsΔ eliminate possibilities 6 Framework measuring inconsistency For bistructure E D I I let DomainE D In general consider disjoint possibilities DomainE bistructure E These DomainE ﬁnite DomainE inﬁnite In following provide framework measures inconsistency cases For rest paper set bistructures called frame We adopt following nomenclature describing frame Φ Φ bounded frame iff n N E Φ DomainE cid2 n Φ unbounded frame iff m N n N n cid3 m implies E Φ DomainE n Φ inﬁnite frame iff E Φ DomainE cid3 ℵ0 1074 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 An example bounded frame given singleton set containing bistructure given Example 4 An example unbounded frame given ModelsΔ Δ x yP x y An example inﬁnite frame given singleton set containing bistructure given Example 5 Obviously Φ bounded frame Φ unbounded frame Φ inﬁnite frame But possible Φ unbounded frame inﬁnite frame For frame Φ Φcid13 Φ called subframe Obviously Φ unbounded subframes Φ bounded If Φ inﬁnite frame subframe unbounded subframe bounded To support consideration subframes draw following subsidiary deﬁnitions FiniteΦ InﬁniteΦ cid4 E Φ cid4 E Φ cid5 cid8 cid8 cid8 N cid8DomainE cid8 cid8 cid8 cid3 ℵ0 cid8DomainE cid5 Some key deﬁnitions rest paper based analysing bistructures frame We troduce notions bounded unbounded inﬁnite frames provide general way presenting framework measuring inconsistency We deﬁnitions measure inconsistency bistructure Deﬁnition 16 measure inconsistency bounded frame Deﬁnition 17 measure inconsistency unbounded frame Deﬁnition 20 measure inconsistency inﬁnite frame Deﬁnition 25 Normally expect frame set models knowledgebase Δ ModelsΔ UNAModelsΔ ConceptModelsΔ CPModelsΔ But possible classes models consider Section 5 considers pos sible classes simpler general deﬁne framework measures terms frames directly terms particular classes models knowledgebases 61 Measuring inconsistency bistructure We start considering measure inconsistency bistructure We assume given language L E D I I bistructure L The nonlogical symbols considered deﬁnitions examples assumed L Deﬁnition 14 Let E D I I bistructure let Π set predicate symbols CollisionCountΠ E cid9 cid8 cid8 cid8 cid8CollisionPi E CollisionPi E cid3d1 dncid4 Dn cid3d1 dncid4 I Pi I Pi Pi Π The following deﬁnition gives upper bound CollisionCount given set predicate symbols bistructure Deﬁnition 15 Let E D I I bistructure let Π set predicate symbols UniverseCountΠ E cid9 cid8 cid8 cid8 cid8UniversePi E UniversePi E Pid1 dn d1 dn D Pi arity n Pi Π Example 6 Let E D I I D 1 2 3 I P I P cid4 cid4 cid5 cid31cid4 cid32cid4 cid5 cid33cid4 I Q I Q cid5 cid4 cid31 2cid4 cid31 3cid4 cid32 3cid4 cid5 cid4 cid31 2cid4 cid31 3cid4 cid33 2cid4 Hence CollisionCountP Q E 2 CollisionP E cid5 cid4 cid31 2cid4 cid31 3cid4 CollisionQ E UniverseCountP Q E 12 UniverseP E UniverseQ E cid4 cid5 cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid31 1cid4 cid31 2cid4 cid31 3cid4 cid32 1cid4 cid32 2cid4 cid32 3cid4 cid33 1cid4 cid33 2cid4 cid33 3cid4 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1075 In deﬁnition UniverseCountΠ E sense let Π rest paper assume Π nonempty Having Π parameter allows focus particular subsets predicate symbols analysis model set models This valuable considering arbitrarily large domains value obtained CollisionCount predicate symbols drown CollisionCount predicate symbols We bring measure CollisionCount UniverseCount following deﬁnition measure inconsistency set predicate symbols bistructure ﬁnite domain Deﬁnition 16 Let Π set predicate symbols let E bistructure The bistructure degree inconsistency Π E denoted IncΠ E deﬁned follows If 0 UniverseCountΠ E IncΠ E CollisionCountΠ E UniverseCountΠ E IncΠ E 0 Example 7 Continuing Example 6 IncΠ E 212 16 Π P Q The following simple observations concerning Inc function For Π E 0 cid2 IncΠ E cid2 1 For Π E IncΠ E 1 Π cid13 Π IncΠ cid13 E 1 For Π E IncΠ E 0 Π cid13 Π IncΠ cid13 E 0 In tolerant logic knowledgebase model This model obtained taking atom language knowledgebase letting model satisfy atom negation atom This model gives maximum degree inconsistency formalised proposition Proposition 1 For Δ E ModelsΔ IncΠ E 1 Π set predicate symbols Δ Proof Consider bistructure E nary Pi Π d1 dn D E Pid1 dn E Pid1 dn hold So E ModelsΔ IncΠ E 1 CollisionCountΠ E UniverseCountΠ E cid2 62 Bounded degree inconsistency Now consider measure inconsistency bounded frame It particularly useful maximum ﬁnite size intended models Essentially takes credulous point view bistructure frame minimum degree inconsistency Deﬁnition 17 Let Π set predicate symbols Φ bounded frame The bounded degree inconsistency Π Φ denoted MicroIncΠ Φ deﬁned follows cid6cid4 cid5cid7 MicroIncΠ Φ Min IncΠ E E Φ We use measure giving measure inconsistency knowledgebase Δ case bounded frame Φ sense representative knowledge For example Δ set ground literals bounded frame containing model satisﬁes exactly literals Δ sense representative knowledge Δ The second reason introduce bounded degree inconsistency use deﬁnition unbounded degree inconsistency introduce section 1076 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Example 8 Let Π P D d1 d2 d3 d4 Φ M1 M2 M1 D I 1 P 2 P cid5 cid4 cid3d4cid4 cid5 cid4 cid3d1cid4 cid3d2cid4 cid3d3cid4 cid3d4cid4 cid5 cid3d1cid4 cid3d2cid4 cid3d3cid4 cid3d4cid4 cid5 cid3d1cid4 cid3d2cid4 cid3d3cid4 cid3d4cid4 1 P 2 P cid4 cid4 I I I I 1 I 1 M2 D I 2 I 2 Therefore cid6 P M1 CollisionCount cid6 P M2 CollisionCount cid6 P M1 UniverseCount cid6 P M2 UniverseCount cid7 cid7 cid7 cid7 1 4 4 4 So IncP M1 14 IncP M2 44 MicroIncP Φ 14 I I Example 9 Let Π P Q D d1 d2 Φ M1 M2 M3 M1 D I M3 D I 3 I 3 cid4 cid5 cid3d1cid4 cid3d2cid4 1 P cid5 cid4 cid3d1cid4 1 Q cid5 cid3d1cid4 2 P cid5 cid4 cid3d2cid4 2 Q cid4 cid5 cid3d1cid4 cid3d2cid4 3 P cid5 cid4 cid3d1cid4 cid3d2cid4 3 Q cid4 cid5 cid3d1cid4 cid3d2cid4 cid5 cid4 cid3d1cid4 cid5 cid4 cid3d1cid4 cid3d2cid4 cid5 cid4 cid3d2cid4 cid5 cid4 cid3d1cid4 cid5 cid4 cid3d1cid4 cid3d2cid4 1 P 1 Q 2 P 2 Q 3 P 3 Q I I I I I I cid4 I I I I 1 I 1 M2 D I 2 I 2 cid7 Since Mi M1 M2 M3 UniverseCountP Mi 2 UniverseCountQ Mi 2 UniverseCountP Q M1 4 2 2 1 2 cid7 3 4 cid6 P M1 Inc cid6 Q M1 Inc cid6 P Q M1 Inc cid6 P M3 cid6 Q M3 cid6 P Q M3 cid6 P M2 cid6 Q M2 cid6 P Q M2 1 2 1 2 cid7 2 4 1 2 2 2 cid7 3 4 Inc Inc Inc Inc Inc Inc cid7 cid7 cid7 cid7 cid7 So MicroIncP Φ 12 MicroIncQ Φ 12 MicroIncP Q Φ 12 We MicroIncΠ Φ 0 Φ ﬁnite set ﬁnite models knowledgebase consistent according classical logic MicroIncΠ Φ 1 Φ ﬁnite set ﬁnite models completely inconsistent knowledgebase knowledgebase model knowledgebase atom language knowledgebase model satisﬁes atom negation Proposition 2 For knowledgebases Δ sets predicate symbols Π Δ cid16cid14 Φ E E ModelsΔ DomainE cid2 n n N MicroIncΠ Φ 0 Proof Φ nonempty bounded frame Since Δ cid16cid14 E Φ IncΠ E 0 Hence MicroIncΠ Φ 0 cid2 The deﬁnitions Inc MicroInc general deﬁnitions characterising inconsistency reasons actually support use diverse logics tolerant logics generating models knowledgebase deﬁnitions based frames knowledgebases able focus attention particular predicates predicates knowledgebase language providing ﬁner grained analysis inconsistency J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1077 63 Unbounded degree inconsistency Now consider measure inconsistency unbounded frames An unbounded frame contain inﬁnite bistructures measure deﬁne consider ﬁnite bistructures frame In particular means frame consists models knowledgebase restrict consideration ﬁnite models In following deﬁnition identify function n N gives bounded degree inconsistency bistructures domain cardinality n Deﬁnition 18 Let Π set predicate symbols let Φ unbounded frame n N let Φn Π N cid11 0 1 n N E Φ DomainE n The discord function Π Φ function f Φ Φn cid16 f Φ cid7 cid6 Π Φn Π n MicroInc f Φ Π n 0 So consider unbounded frame sequence bounded frames Φn contains bistructures domain size n obtain bounded degree inconsistency Φn n represent sequence values univariate function discord function Example 10 Let Δ P P Π P Φ ModelsΔ So n f Φ Π n 1n Example 11 Let Δ P xP x Φ ModelsΔ Π P Hence f Φ Π 1 1 n 1 Π n 0 second case choose element domain b f Φ P b holds inconsistency The examples illustrate effect imposing restriction models considered knowledgebase Example 12 Let Δ P P P b P b P c P c Φ ModelsΔ Π P In case models Φ fewest conﬂicts constant symbols assigned domain object Hence n f Φ Π n 1n Example 13 Let Δ P P P b P b P c P c Φ UNAModelsΔ Π P In case unique names assumption models Φ assign constant symbol different domain object Π n 3n Hence models cardinality 1 2 obtain f Φ Π 2 0 n 2 f Φ Π 1 0 f Φ Whilst general discord function f Φ Π summary inconsistency arising bistructures Φ frames discord function particularly interesting purposes To consider deﬁne concept special type rational function special function Deﬁnition 19 A special function function r N cid11 0 1 following form r1 r2 nonnegative nondecreasing univariate polynomial function n N r2n cid16 0 k N n cid3 k 0 cid2 r1n cid2 r2n rn r1n r2n For classes frames discord function special function In Examples 10 12 discord function rational function We examples discord functions Fig 1 Now deﬁne unbounded degree inconsistency special function important class unbounded frames Deﬁnition 20 Let Π set predicate symbols Φ unbounded frame let f Φ Π corresponding discord Π n hΦ function Suppose special function hΦ Π n n0 f Φ Π unbounded degree inconsistency Π Φ If unbounded frame Φ Π written Φ Π unbounded degree inconsistency smooth frame We let ThresholdhΦ Π lowest value n0 n0 N 0 Π n We hΦ 1078 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Δ1 Δ2 Δ3 Δ4 Δ5 Δ6 Δ7 Δ8 P P Qa Qa xP x xP x Qx xQx xP x P x xQx xP x P x xQx Qx P P xQx x yP x y P x y xQx x yP x y P x y x yQx y P P xQx Qx Π1 P 0 Π2 Q 0 0 1 1 1 n 1 1 n2 1 n 0 0 1 0 0 0 1 Π3 P Q 1 2n 1 2 1 2 1 1 2n n n1 1 2n2 n1 2n Fig 1 Examples discord functions f Φ symbols Πj In case discord function special function Π Φ ModelsΔi different knowledgebases Δi different sets predicate Examples 1013 illustrate smooth frames In particular Example 13 hΦ Π n 3n ThresholdhΦ Π 2 The following example unbounded frame smooth Example 14 Let Φ Ei N Π P 1 Ei Di I cid3d1cid4 odd values I P cid3d1cid4 values I Π n 1n values n f Φ values n f Φ ﬁnite threshold allow identify f Φ P P In case odd Π n 0 Of course 1n special function Π threshold value Di d1 di I I If Δ consistent according classical logic Φ ModelsΔ hΦ Π n n 1 n N model size n model size n collisions We excluded case n 1 examples consistent theory Δ xP x xP x collision model size 1 In contrast characterise maximally inconsistent model follows Π n 0 f Φ Proposition 3 If n N f Φ E Φ Π n 1 hΦ Π n arity m predicate symbol P Π E x1 xmP x1 xm P x1 xm Proof Since f Φ Π n 1 atom involved collision cid2 To illustrate unbounded degree inconsistency useful examples ontologies pre sented classical logic As discussed Section 2 adopt following conventions 1 A concept P represented monadic predicate P x 2 An individual c member concept P represented ground predicate P c 3 The relationship concept Q subconcept concept P represented xQx P x 4 The relationship concept Q disjoint concept P represented xQx P x xP x Qx Example 15 Let Δ following set formulae instance c member disjoint concepts cid7 cid6 Qx Sx Sx Qx x xSx Rx cid7 cid6 P x Rx Rx P x xQx P x x Sc Qc If Π P Q R S Φ ConceptModelsΔ E Φ E P c E P c E Qc E Rc E Sc E Qc E Rc E Sc Hence E Φ E n MinCollisionCountΠ E 4 UniverseCountΠ E 4n Therefore Π 0 Note result Π n 44n 1n n N hΦ f Φ replace Sc Qc xSx Qx Δ Π n 1n ThreshholdhΦ J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1079 Example 16 Let Δ following set formulae 1 states T U disjoint concepts 2 states T U concept 3 states T U comprise 1 xT x U x U x T x 2 xT x U x U x T x 3 xT x U x If Π T U E Φ ConceptModelsΔ d DomainE according 3 E T d E U d Assume wlg E T d Then 1 E U d 2 E U d Applying 1 yields E T d Hence E Φ IncΠ E 2n2n Therefore f Φ Π n 1 ThresholdhΦ Π n hΦ Π 0 Example 17 Continuing Example 16 extend Δ adding following set formulae cid7 cid6 Qx Sx Sx Qx x xSx Rx cid7 cid6 P x Rx Rx P x xQx P x x Let Π P Q R S T U Φ ConceptModelsΔ Now E Φ d DomainE possible E P d E Qd E Rd E Sd collisions predicates Π n 2n6n 13 ThresholdhΦ P Q R S Therefore f Φ Π n hΦ Π 0 As showed Example 14 unbounded frames smooth However following result shows consider models knowledgebase Δ ModelsΔ consider UNAModelsΔ consider ConceptModelsΔ unbounded degree inconsistency Π class models smooth frame Theorem 1 Let Δ knowledgebase let Π set predicate symbols If Φ ModelsΔ Φ UNAModelsΔ Φ ConceptModelsΔ Π Φ smooth frame Proof We start case Φ ModelsΔ Π set predicate symbols Δ It known n N Φn cid16 Φn contains models size n Φ What needed discord function f Φ Π special function possible threshold value explained Deﬁnitions 19 20 Since E Φn UniverseCountΠ E let r2n UniverseCountΠ E E Φn Clearly r2 0 domains Π Also let r1n MinCollisionCountΠ EE Φn We previously observed 0 cid2 IncΠ E cid2 1 Π E 0 cid2 r1n cid2 r2n holds n N So r1 r2 nondecreasing univariate polynomial functions By deﬁnition univariate functions It remains r1 r2 nondecreasing polynomial functions We start r2 We actually compute UniverseCountΠ E E Φn follows Suppose Π contains predicate symbols P1m1 Pkmk arities parentheses Then r2n UniverseCountΠ E nm1 nmk This polynomial simpliﬁed write standard form Clearly r2 nondecreasing Computing r1 complex arbitrary Δ What need r1 nondecreasing polynomial It clear r1 nondecreasing threshold n 1 enlarge model adding domain element number collisions decrease There problem special case going 1 2 elements example Δ xP x xP x So remains r1 polynomial function We details explain basic idea example At end subsection actually calculate r1 special cases Consider case Π P 2 constant function symbols language Recall compute r1n try ﬁnd minimal number collisions model size n We choose 4 statements Δ cause collisions taking care quantiﬁer combinations arity 2 1 x yP x y P x y 1080 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 2 x yP x y P x y 3 x yP x y P x y 4 x yP x y P x y The minimal number collisions 1 1 2 3 n 4 n2 What happens argu ment existential quantiﬁer provides multiplicative factor 1 universal quantiﬁer provides multiplicative factor n This change mix different quantiﬁers 5 x yP x y x yP x y However subtract overlaps recognise collisions 6 x yP x y x yP x y case n 1 eliminated The important point number collisions ni 0 cid2 cid2 ArityP including number elements overlap Adding subtracting powers n yields polynomial Now suppose Π contains predicate symbols P1m1 Pkmk given Then Pj 1 cid2 j cid2 k minimal number collisions calculated P powers n largest arity predicate symbols So far implicitly restricted analysis conjunctions In case disjunction θ θ1 θt minimum number collisions θi 1 cid2 cid2 t implication rewritten disjunction negation In cases calculation yields sum powers n subtractions powers n overlaps result polynomial A similar argument works Π subset predicates Δ Let consider case language contains constant function symbols For purpose counting collisions interpret function symbol constant function case effect constant symbol counting collisions discussed Section 2 So need deal separately function symbols But constant symbol effect existential quantiﬁer example 7 yP c y P c y gives number minimal collisions 1 This completes proof case Φ ModelsΔ We result extends classes types models Consider case cid12 ConceptModelsΔ If n N cid12n contains model Φn minimal number collisions works So let consider models Φn minimal number collisions cid12n The following formula illustrates happen 8 xP x P x Qx P x Qx Consider model E Φ minimal number collisions d DomainE cid3dcid4 I P I P I Q d I Q There n collisions However E cid12 For E satisfy requirement concept model d I Q This requires adding n collisions In general case number collisions added power n r1 polynomial Finally consider case Γ UNAModelsΔ Let nΔ number different constant symbols Δ 1 Here proof Φn goes Γ n n cid3 nΔ Hence result holds ThresholdhΓ Π nΔ 1 cid2 Using proof theorem knowledgebase exclusively ground formulae variables numerator discord function constant J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1081 Proposition 4 Let Δ knowledgebase incorporates variable symbols let Π set predicate symbols If Φ ModelsΔ Φ ConceptModelsΔ Φ UNAModelsΔ m N n0 N n N n n0 numerator hΦ Π n m Proof Clearly Δ constant symbol Now recall proof Theorem 1 constant symbol acts existential quantiﬁer point view counting collisions Also existential quan tiﬁer yields multiplicative factor 1 Hence terms polynomial r1 numerator ni 0 constant We actually upper bound m follows If t predicate symbols m cid2 t Φ ModelsΔ Φ ConceptModelsΔ identify constant sym bols single element domain model predicate symbol causes collision Here n0 0 The calculation complicated case Φ UNAModelsΔ constant symbols interpreted different elements D Suppose Δ contains c constant symbols predicate symbols P1k1 Pq kq Then number collisions E Φ size cid3 c models size c ck1 ckq sum upper bound m n0 c 1 cid2 We compare discord functions following ordering relation Deﬁnition 21 The discord ordering denoted cid17 deﬁned follows f Φ Π f Φcid13 Π cid13 discord functions f Φ Π cid17 f Φcid13 Π cid13 iff n cid13 N n N n cid13 cid2 n f Φ Π n cid2 f Φcid13 Π cid13 n Intuitively f Φ Π Next examples discord function monotonic antimonotonic general Π cid13 Φ Π equally inconsistent Φcid13 Π cid13 cid17 f Φcid13 Example 18 Let Δ2 P c Π P Δ1 P c P c Φi ModelsΔi 1 2 Clearly Φ1 Φ2 n N f Φ2 Π Now let Φ4 ModelsΔ1 Δ1 given Φ3 E E Φ4 DomainE Here Φ3 Φ4 f Φ4 Π n 1n n N f Φ3 Π n 1n n 0 odd n Hence case f Φ4 This shows general Φ1 Φ2 implies f Φ1 Π cid17 f Φ3 Π Π Note Φ3 smooth Π n f Φ1 Π n f Φ1 Π f Φ2 Π cid17 f Φ1 cid17 f Φ2 cid17 f Φ2 Π Π frame Example 19 Let Δ2 Δ3 Π1 Π3 examples Fig 1 Here Π1 Π3 Let Φ2 ModelsΔ2 Φ3 n f Φ3 ModelsΔ3 We obtain n N f Φ2 n f Φ2 n This shows general Π1 Π2 Π3 Π3 Π1 cid17 f Φ implies f Φ Π1 Π1 n f Φ3 Π1 f Φ Π2 cid17 f Φ Π2 We noted Example 18 Φ3 smooth frame In fact smooth frames discord function anti monotonic Φ Proposition 5 If Φ1 Φ2 smooth frames Φ1 Φ2 f Φ2 Π cid17 f Φ1 Π Proof Let Φ1 Φ2 smooth frames Φ1 Φ2 corresponding special functions hΦ1 ThresholdhΦ1 increase minimum number collisions Φn obtain n n0 hΦ2 Π n f Φ2 f Φ1 Π hΦ2 Π Π n2 Let n0 maxn1 n2 Recalling additional models Π n Π n1 ThresholdhΦ2 Π n cid2 hΦ1 Π n f Φ2 Π cid2 cid17 f Φ1 Π For knowledgebase Δ let ConΔ Γ Δ Γ cid16cid14 set consistent subsets Δ The set maximally consistent subsets Δ deﬁned follows cid5 cid4 Γ ConΔ Γ cid13 ConΔΓ cid16 Γ cid13 MaxConΔ cid10 Also let FreeΔ MaxConΔ set formulae maximally consistent subsets Δ These regarded uncontroversial formulae Δ appear minimally inconsistent subset Δ 1082 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 minimally inconsistent subset Δ subset Γ Δ Γ inconsistent Γ cid13 Γ Γ cid13 consistent The following result shows formula θ involved inconsistency Δ θ adding θ Δ inconsistencies Δ worse Proposition 6 Let Φ1 ModelsΔ Φ2 ModelsΔα If α FreeΔα f Φ2 Π α contains nonlogical symbols Δ f Φ2 Π f Φ1 Π cid17 f Φ1 Π Furthermore Π n1 0 let ThresholdhΦ2 Proof Let ThresholdhΦ1 0 So n n2 0 MinCollisionCountΠ E E Φ1n MinCollisionCountΠ E E Φ2n Also n n2 0 E1 Φ1n E2 Φ2n UniverseCountΠ E1 cid2 UniverseCountΠ E2 So n N n n2 0 MicroIncΠ Φ2n cid2 MicroIncΠ Φ1n Hence f Φ2 Π In case α contains nonlogical symbols Π Δ UniverseCountΠ E1 UniverseCountΠ E2 f Φ2 Π 0 Since Δ Δ α n2 0 Π n2 Π cid2 cid17 f Φ1 f Φ1 cid3 n1 In proof Theorem 1 gave general argument explain discord function special function smooth frame Now speciﬁc results special cases Proposition 7 Let ψ sentence form Q1x1 QkxkP t1 tm P t1 tm x1 xk t1 tm x1 xk cid16 ti t1 tm x1 xk constant symbol Q1 Qk If Φ Modelsψ Π P Π n d1 dk f Φ nm di d1 dk di n Qi universal quantiﬁer di 1 Qi existential quantiﬁer Proof If ψ form Q1x1 QkxkP t1 tm P t1 tm n E Φn minimal number collisions CollisionCountΠ E d1 dk di d1 dk di n Qi universal quantiﬁer n domain elements involved collisions di 1 Qi existential quantiﬁer domain element involved collision Furthermore E Φn UniverseCountΠ E nm f Φ Π n d1 dknm cid2 For example consider ψ x y zP x y z P x y z So Φ Modelsψ Π P n2n3 1n Also consider ψ cid13 y zP y z P y z So Φcid13 Modelsψ cid13 Π P f Φ Π f Φcid13 Π nn3 1n2 Corollary 1 Let ψ sentence form x1 xkP x1 xk P x1 xk If Φ Modelsψ Π P f Φ Π n 1 Corollary 2 Let ψ sentence form x1 xkP t1 tm P t1 tm If Φ Modelsψ Π P f Φ Π n 1nm When ψ sentence form Q1x1 QkxkP t1 tm P t1 tm P cid13t cid13 m 1 m x1 xk t1 tm t cid13 t cid13 x1 xk cid16 ti t1 tm variable symbol constant symbol P cid16 P cid13 obtain special function models following Proposition 7 sum m P cid13t cid13 1 t cid13 1 t cid13 Q1x1 QkxkP t1 tm P t1 tm Q1x1 QkxkP cid13t cid13 1 t cid13 1 t cid13 m m P cid13t cid13 For example consider ψ x y zP y z P y z P cid13x y z P cid13x y z So Φ Modelsψ Π P P cid13 f Φ Π Similarly ψ sentence form Q1x1 QkxkP t1 tm P t1 tm P t cid13 1 t cid13 m x1 xk cid16 ti t1 tm m x1 xk t1 tm t cid13 n n22n3 1 t cid13 1 t cid13 P t cid13 m J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1083 variable symbol constant symbol obtain special function models following result obtain special function taking sum minus overlap Q1x1 QkxkP t1 tm P t1 tm Q1x1 QkxkP t cid13 1 t cid13 1 t cid13 m m P t cid13 For example consider ψ x y zP y z P y z P x b z P x b z So Φ Modelsψ Π P f Φ Π 2n 1n3 64 Inconsistency limit smooth frames We consider limit behaviour unbounded degree inconsistency smooth frames In limit limn f Φ Π sufﬁces write functions An advantage considering limit Π identify measure inconsistency rational number 0 1 interval This provides simple summary unbounded degree inconsistency knowledgebase limn hΦ Theorem 2 If f Φ limn f Φ Π n k Π discord function Φ smooth frame rational number k 0 1 Proof Let f Φ n n0 f Φ c2n2 cq nq n n0 Π discord function let Φ smooth frame By deﬁnition n0 Π special function Therefore polynomials b0 b1n b2n2 bpnp c0 c1n f Φ Π n c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp Since q p q p following cases If q p lim n c0 c1n c2n2 cpnp b0 b1n b2n2 bpnp cp bp cp cid2 bp If q p lim n c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp 0 Therefore exists rational number k 0 1 limn f Φ Π n k cid2 Example 20 Returning Fig 1 Π Π3 limits follows Δ1 Δ5 Δ7 limn f Φ Π Δ2 Δ3 Δ8 limn f Φ Π 12 Δ4 Δ6 limn f Φ Π 1 0 Following Theorem 2 limn f Φ Π n nonzero following characterisation conﬂicts arising Proposition 8 Let f Φ Π discord function Φ smooth frame n n0 f Φ Π n c0 c1n c2n2 cpnp b0 b1n b2n2 bpnp Then E Φ P Π E x1 xpP x1 xp P x1 xp Π discord function smooth frame n n0 f Φ Π Proof Since f Φ Π special function Therefore n n0 MicroIncΠ Φn special function n n0 MinIncΠ E E Φn special function This implies n n0 following special function hΦ cid11cid12 Min CollisionCountΠ E UniverseCountΠ E cid13cid14 cid8 cid8 cid8 E Φn 1084 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Since n E Ecid13 Φn UniverseCountΠ E UniverseCountΠ Ecid13 rewrite MinCollisionCountΠ E E Φn UniverseCountΠ E Thus cid6cid4 Min CollisionCountΠ E E Φn cid5cid7 c0 c1n c2n2 cpnp 1 UniverseCountΠ E b0 b1n b2n2 bpnp 2 Using proof Theorem 1 2 implies arity p predicate symbol P Π 1 fact cp cid16 0 highest power n p follows E Φ arity p predicate symbol P Π E x1 xpP x1 xp P x1 xp cid2 The result basically reverse Theorem 2 Theorem 3 If k 0 1 k rational smooth frame Φ discord function f Φ limn f Φ Π n k Π Proof Let k st 0 cid2 s cid2 t Let r1n s n r2n t n Clearly r1 r2 nondecreasing nonnegative univariate polynomial functions n N r1nr2n k Now construct knowledgebase Δ Φ ModelsΔ Π set predicate symbols Δ cid6cid4 cid5cid7 r1n Min r2n UniverseCountΠ E E Φn CollisionCountΠ E E Φn Let Π t monadic predicate symbols So n E Φn UniverseCountΠ E n t Then continue construction putting s formulae Δ form xPix Pix s different predicate symbols available Π So n cid5cid7 cid6cid4 Min CollisionCountΠ E E Φn n s Hence n r1n n s By deﬁnition MinIncΠ E E Φn MicroIncΠ Φn f Φ Π n k cid2 n r1nr2n st k limn f Φ Π n Since Example 21 For k 25 Δ xP1x P1x xP2x P2x Π P1 P2 P3 P4 P5 unary predicate symbols n r1n 2 n r2n 5 n Hence limn f Φ Π n 25 Proposition 9 Let Δ knowledgebase incorporates variable symbols let Π set predicate symbols If Φ ModelsΔ limn f Φ Π n 0 Proof If Δ knowledgebase incorporates variable symbols Φ ModelsΔ m N n N numerator hΦ Π n Π n converges 0 cid2 nondecreasing nonnegative univariate polynomial function n degree 1 hΦ Π n m according Proposition 4 Since denominator hΦ So whilst Π Φ inconsistent ﬁnite bistructure limit consistent k 0 Intuitively means inconsistent knowledge inﬁnitely insigniﬁcant limit We use result following nomenclature discord function f Φ Π Deﬁnition 22 For Φ Π k 0 1 Π Φ kinconsistent limit iff lim n f Φ Π n k So Proposition 9 knowledgebase variable symbols 0inconsistent limit J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1085 Proposition 10 Let Δ knowledgebase Π set predicate symbols Π cid13 Π Π cid13 includes predicate symbols Π highest arity If Φ ModelsΔ Π Φ kinconsistent limit iff Π cid13 Φ k inconsistent limit Π n k discord function Proof By Deﬁnition 22 Π Φ kinconsistent limit iff limn f Φ Π cid13n kcid13 Let highest arity Π Similarly discord function f Φ f Φ predicate symbol Π p Hence polynomials c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp Π cid13 Π cid13 Φ limn f Φ f Φ Π n c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp polynomial e0 e1n e2n2 esns Π cid13n e0 e1n e2n2 esns f Φ b0 b1n b2n2 br np power leading term UniverseCount change There cases Case 1 k 0 This means q p Φ cid16 x1 xpP x1 xp P x1 xp arity p predicate symbol P This remains case predicate symbols removed Π kcid13 0 Case 2 k 0 This means q p cq predicate symbols P1 Pcq Φ x1 xpPix1 xp Pix1 xp 1 cid2 cid2 cq As long arity n predicate symbols stay Π cid13 obtain s q p cq es So limn f Φ Π n k proving result cid2 Π cid13n limn f Φ Since primarily interested measuring inconsistency knowledgebases unbounded degree consistency form special function efﬁcient way describing analysing inconsistency knowledgebases ﬁnite models Furthermore unbounded degree inconsistency categorise models knowledgebase consistent limit k 0 inconsistent limit k 0 Though note discord function gives ﬁner distinction k limit Consider example discord functions f f cid13 limit f Φ Π Π holds 1n2 1n cid17 f cid13Φ 65 Inﬁnite degree inconsistency Now turn measuring inconsistency bistructures inﬁnite domains We argued inﬁnite domains arise diverse applications artiﬁcial intelligence science reasoning temporal knowledge Unfortunately consider inﬁnite domains unable consider inconsistency ratio number collisions model size universe Therefore need abstract approach extending framework analyse inﬁnite frames adequately To end introduce macrotypes poset Deﬁnition 23 The macrotypes poset poset cid2m cid24 cid24 cid2m We cid2m macrotype ordering cid24 macrotypes For bistructure inﬁnite domain assign macrotype follows Deﬁnition 24 Let Π set predicate symbols let E bistructure DomainE cid3 ℵ0 The Mac function deﬁned follows cid8 cid8 cid8DomainE cid8 cid3 ℵ0 CollisionCountΠ E ℵ0 cid8 cid8 cid8 cid3 ℵ0 CollisionCountΠ E cid3 ℵ0 cid8DomainE MacΠ E cid24 MacΠ E If If Intuitively macrotypes superscript cid24 denotes bistructure overwhelmingly consistent superscript denotes bistructure substantially inconsistent 1086 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 Example 22 Let Δ xP x xP x Π P E ModelsΔ If DomainE N DomainE R MacΠ E Example 23 Let Δ xP x Qa Qa Π P E ModelsΔ If DomainE N DomainE R MacΠ E cid24 Now provide measure inconsistency inﬁnite frames The deﬁnition takes credulous view bistructure frame minimum inconsistency according macrotype ordering Deﬁnition 25 Let Π set predicate symbols Φ inﬁnite frame Let InﬁniteΦ E Φ D cid3 ℵ0 D domain E The inﬁnite degree inconsistency Π Φ denoted MacroIncΠ Φ deﬁned follows For E InﬁniteΦ cid7 cid6 MacΠ E cid2m MacΠ Ecid13 Ecid13 InﬁniteΦ MacroIncΠ Φ MacΠ E In order better illustrate measurement inﬁnite degree inconsistency consider simple examples knowledgebases representing reasoning temporal knowledge Example 24 For Δ xx cid17 5 P x xP x Π P cid6 cid7 Π CPModelsΔ cid6 cid7 Π CIModelsΔ cid24 MacroInc MacroInc The inﬁnite degree inconsistency function monotonic argument antimonotonic argument captured following results Proposition 11 If Π cid13 Π Φ inﬁnite frame MacroIncΠ cid13 Φ cid2m MacroIncΠ Φ Proof Assume Π cid13 Π So E Φ CollisionCountΠ cid13 E cid2 CollisionCountΠ E Therefore E InﬁniteΦ MacΠ cid13 E cid2m MacΠ E Therefore MacroIncΠ cid13 Φ cid2m MacroIncΠ Φ cid2 Proposition 12 If Φcid13 Φ Φ Φcid13 inﬁnite frames MacroIncΠ Φ cid2m MacroIncΠ Φcid13 Proof Assume Φcid13 Φ For Ecid13 Φcid13 E Φ Ecid13 CollisionCountΠ E cid2 CollisionCountΠ Ecid13 So Ecid13 InﬁniteΦcid13 E InﬁniteΦ MacΠ E cid2m MacΠ Ecid13 Therefore MacroIncΠ Φ cid2m MacroIncΠ Φcid13 cid2 For knowledgebases Δ consistent classical logic Δ cid16cid14 following result inﬁnite degree inconsistency Proposition 13 Let Δ knowledgebase let Π set predicate symbols If Δ cid16cid14 MacroIncΠ ModelsΔ cid24 Proof If Δ cid16cid14 model E InﬁniteModelsΔ CollisionCountΠ E 0 Hence MacroIncΠ ModelsΔ cid24 cid2 Similarly knowledgebase completely inconsistent following result inﬁnite degree inconsistency Proposition 14 Let Δ knowledgebase let Π set predicate symbols If E FiniteModelsΔ IncΠ E 1 MacroIncΠ ModelsΔ J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1087 Proof Let Φ ModelsΔ If E FiniteΦ IncΠ E 1 Proposition 3 E FiniteΦ E x1 xkP x1 xk P x1 xk P Π Hence E InﬁniteΦ CollisionCountΠ E cid3 ℵ0 Therefore MacroIncΠ ModelsΔ cid2 The following result shows knowledgebase Δ continuity measurement inconsis tencies going subframe FiniteModelsΔ subframe InﬁniteModelsΔ Theorem 4 Let Δ knowledgebase let Φ ModelsΔ If Π Φ kinconsistent limit k 0 MacroIncΠ Φ Proof By Theorem 1 Π Φ smooth frame Let Π Φ kinconsistent limit let k 0 1 Therefore Π n polynomials b0 b1n b2n2 bpnp c0 c1n c2n2 cq nq exists discord function f Φ q cid2 p n n0 Π n f Φ hΦ Π n c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp r1n r2n k lim n c0 c1n c2n2 cq nq b0 b1n b2n2 bpnp Since k 0 follows q p As shown Proposition 8 way possible arity p predicate symbol P Π E Φ E x1 xpP x1 xp P x1 xp Now consider E InﬁniteModelsΔ CollisionCountΠ E cid3 ℵ0 MacroIncΠ Φ cid2 However Φ kinconsistent limit k 0 necessarily case MacroIncΠ Φ cid24 illustrated following example Example 25 Consider language unary predicate P1 binary predicate P2 Let Δ xP1x P1x Here Φ 0inconsistent limit MacroIncΠ Φ Π P1 P2 7 Framework measuring consistency We extend analysis inconsistency measuring harmonies We view complement CollisionCountΠ E explicated following deﬁnition harmony Deﬁnition 26 Let E bistructure D DomainE let Π set predicate symbols HarmonyCountΠ E cid9 cid8 cid8 cid8 cid8HarmonyPi E arity n predicate symbol Pi HarmonyPi E Dn CollisionPi E Pi Π We use HarmonyCountΠ E second dimension CollisionCountΠ E compare mod els We use ﬁnite models inﬁnite models ﬁnite models CollisionCountΠ E calculate HarmonyCountΠ E inﬁnite models calculate HarmonyCountΠ E CollisionCountΠ E Consider ﬁnite model 5 elements language unary predicate R1 binary predicate R2 There 5 atoms R1 25 R2 altogether 30 atoms Suppose model 4 collisions Then 30 4 26 harmonies There need deal separately number 26 ﬁnite model 5 elements language 3 collisions 27 harmonies second dimension irrelevant comparing harmonies The situation different inﬁnite models Suppose inﬁnite model language inﬁnitely collisions That tell harmonies Furthermore suppose D1 inﬁnitely 1088 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 collisions 0 harmonies D2 inﬁnitely collisions 5 harmonies D3 inﬁnitely collisions inﬁnitely harmonies It reasonable D3 inconsistent model D2 D1 inconsistent To capture idea require following notion proﬁle For rest section deal inﬁnite bistructures Deﬁnition 27 Let Π set predicate symbols E bistructure The proﬁle Π E denoted ProΠ E deﬁned follows ProΠ E cid3 CollisionCountΠ E HarmonyCountΠ E cid2 Using proﬁle function deﬁne ordering relation proﬁles follows Deﬁnition 28 Let Π set predicate symbols E1 E2 bistructures If ProΠ E1 cid3a1 b1cid4 ProΠ E2 cid3a2 b2cid4 proﬁle ordering denoted cid2Π deﬁned follows E1 cid2Π E2 iff a1 cid2 a2 b2 cid2 b1 Also let E1 Π E2 denote E1 cid2Π E2 E2 cid16cid2Π E1 let E1 Π E2 denote E1 cid2Π E2 E2 cid2Π E1 So E1 cid2Π E2 E1 inconsistent equally inconsistent E2 Example 26 Let E1 D1 I 1 I cid4 cid5 cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid31cid4 cid32cid4 I I 1 P 1 Q 2 P 2 Q 3 P 3 Q I I I I cid5 cid4 cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid31cid4 cid32cid4 cid33cid4 1 E2 D2 I 2 I 2 E3 D3 I 3 I 3 D1 D2 D3 N cid4 cid5 cid31cid4 cid32cid4 cid33cid4 1 P 1 Q cid5 cid4 cid31cid4 cid32cid4 cid33cid4 2 P cid5 cid4 cid36cid4 cid37cid4 cid38cid4 2 Q cid5 cid4 3 P cid31cid4 cid32cid4 cid33cid4 cid5 cid4 cid32cid4 cid33cid4 cid34cid4 3 Q I I I I I I Hence ℵ0 0 cid7 cid7 cid7 cid6 P E1 CollisionCount cid6 Q E1 CollisionCount cid6 P Q E1 CollisionCount cid6 P E2 CollisionCount cid6 Q E2 CollisionCount cid6 P Q E2 CollisionCount cid6 P E3 CollisionCount cid6 Q E3 CollisionCount cid6 P Q E3 CollisionCount cid7 cid7 cid7 cid7 0 ℵ0 cid7 cid7 cid7 cid6 P E1 HarmonyCount cid6 Q E1 HarmonyCount cid6 P Q E1 ℵ0 HarmonyCount cid6 P E2 HarmonyCount cid6 Q E2 HarmonyCount cid6 P Q E2 ℵ0 HarmonyCount cid6 P E3 HarmonyCount cid6 Q E3 HarmonyCount cid6 P Q E3 ℵ0 HarmonyCount cid7 cid7 cid7 cid7 0 5 cid7 0 1 cid7 ℵ0 ℵ0 cid7 ℵ0 ℵ0 cid7 5 1 ℵ0 So Π P E1 Π E2 E2 Π E3 And Π cid13 P Q E1 Π cid13 E2 E2 Π cid13 E3 We focus particular class frames called equiframes deﬁned Deﬁnition 29 A frame Φ equiframe iff Ei Ej Φ DomainEi DomainEj In following consider equiframes Φ E Φ DomainE ℵ0 deﬁnition proﬁle equiframes Some examples given Examples 2730 We consider alternative types equiframes example equiframes Φ E Φ DomainE 0 1 similar way J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1089 Deﬁnition 30 Let Π set predicate symbols let Φ equiframe bistructures Ei I I index set domain cardinality ℵ0 Let ProΠ Ei cid3ai bicid4 I Let Minai I let cid12 b Maxbi I ℵ0 exists The proﬁle Π Φ deﬁned ProΠ Φ cid3a bcid4 Example 27 For Δ1 xP x xx cid17 6 P x let Φ1 CPModelsΔ1 So ProP Φ1 cid36 ℵ0cid4 Example 28 For Δ2 xP x xP x let Φ2 CPModelsΔ2 So ProP Φ2 cid3ℵ0 0cid4 Example 29 For Δ3 xP x xQx Qx let Φ3 CPModelsΔ3 cid7 cid6 P Φ3 cid6 Q Φ3 cid6 P Q Φ3 cid7 Pro Pro Pro cid30 ℵ0cid4 cid3ℵ0 0cid4 cid7 cid3ℵ0 ℵ0cid4 Example 30 For Δ4 xP x let Φ4 CPModelsΔ4 So ProP Φ4 cid30 ℵ0cid4 P Example 31 Let Φ5 frame Ei N Ei N I 1 2 3 cid31cid4 cid32cid4 cid33cid4 I CollisionCountP Ei ℵ0 HarmonyCountP Ei This need use second line deﬁnition b Deﬁnition 30 ﬁnd ProP Φ5 cid3ℵ0 ℵ0cid4 Ei inﬁnitely harmonies P cid3i 1cid4 cid3i 2cid4 cid3i 3cid4 This means 1 2 3 deﬁned I I We compare proﬁles following proﬁle ranking Deﬁnition 31 If ProΠ1 Φ1 cid3a1 b1cid4 ProΠ2 Φ2 cid3a2 b2cid4 proﬁle ranking deﬁned follows ProΠ1 Φ1 cid17 ProΠ2 Φ2 iff a1 cid2 a2 b2 cid2 b1 Let ProΠ1 Φ1 ProΠ2 Φ2 denote ProΠ1 Φ1 cid17 ProΠ2 Φ2 ProΠ2 Φ2 cid16cid17 ProΠ1 Φ1 ProΠ1 Φ1ProΠ2 Φ2 denote ProΠ1 Φ1 cid17 ProΠ2 Φ2 ProΠ2 Φ2 cid17 ProΠ1 Φ1 Clearly cid17 deﬁnes total order Example 32 Using Examples 2730 following proﬁle ranking cid6 P Φ3 cid7 Pro Pro cid6 P Φ4 cid7 Pro Pro cid7 cid6 P Φ1 cid6 P Q Φ3 cid7 Pro cid6 P Φ5 cid7 Pro cid6 Q Φ3 cid7 Pro cid6 P Φ2 cid7 In general equiframe Φ set models knowledgebase Δ CPModelsΔ ProΠ Φ minimal cid17 ranking Δ consistent ProΠ Φ maximal cid17 ranking E Φ predicates P Π E x1 xkP x1 xk P x1 xk Proposition 15 For equiframes Φ1 Φ2 Φ1 Φ2 ProΠ Φ2 cid17 ProΠ Φ1 Proof Let ProΠ Φ1 cid3a1 b1cid4 ProΠ Φ2 cid3a2 b2cid4 Also let I1 index set Φ1 let I2 index set Φ2 Since Φ1 Φ2 I1 I2 So Deﬁnition 30 a2 cid2 a1 b1 cid2 b2 Therefore ProΠ Φ2 cid17 ProΠ Φ1 cid2 So increasing equiframe Φ monotonically decreases ProΠ Φ cid17 ordering However increasing Π monotonically increases decreases ProΠ Φ cid17 ordering referring Example 32 Φ3 ProP Φ3 ProP Q Φ3 ProQ Φ3 1090 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 The notions harmony count proﬁle provide potentially useful addition framework analysing inconsistent ﬁrstorder knowledgebases As discussed ﬁnite domains determine harmonies bistructure collisions inﬁnite domains possible So ﬁnite domains harmony count explicit inﬁnite domains harmony count provides useful information evaluating comparing inconsistent knowledgebases illustrated Examples 2731 Furthermore proﬁle ranking illustrated Example 32 example choose knowledgebase set models minimal proﬁle ranking seeking better conﬂicting harmonious sources information 8 Tolerant logic generalises Belnaps logic We compare presentation tolerant logic Belnaps fourvalued logic We deal ground portion FOL Belnaps fourvalued logic propositional Let G FormulaeL set ground formulae L involve symbols So θ G θ contains variable symbols quantiﬁer symbols An interpretation Belnaps fourvalued logic truth assignment t atoms G assigns value T F N B arbitrary formula θ G t θ deﬁned truth tables Belnaps fourvalued logic given Tables 1 3 The lattice ordering given B T B F T N F N In particular t θ cid3 T iff t θ B t θ T Deﬁnition 32 Let t Belnap truth assignment t G cid11 T F N B let E bistructure t represents E atoms G iff atoms α G following constraints hold t E t α N iff E cid16 α E cid16 α t α F iff E cid16 α E α t α T iff E α E cid16 α t α B iff E α E α For θ G satisfaction relation tolerant logic given coincides semantics Belnaps valued logic shown following result Table 1 Truth table negation α α N N Table 2 Truth table conjunction N F T B N N F N F Table 3 Truth table disjunction N F T B N N N T T F T F F F F F F N F T B T F T N F T B T T T T T B B B F F B B B T B T B J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1091 Theorem 5 Let t Belnap truth assignment t G cid11 T F N B let E bistructure t represents E A For θ G t θ cid3 T iff E θ Proof By induction length formula The base case θ literal Then t θ cid3 T iff E θ Deﬁnition 32 For induction assume inductive hypothesis t α cid3 T iff E α t β cid3 T iff E β The following 5 cases exhaust possibilities complete proof Case 1 θ form α β t α β cid3 T t α cid3 T t β cid3 T Table 2 iff iff E α E β inductive hypothesis iff E α β Deﬁnition 5 Case 2 θ form α β t α β cid3 T t α cid3 T t β cid3 T Table 3 iff iff E α E β inductive hypothesis iff E α β Deﬁnition 5 Case 3 θ form α β cid7 cid6 α β cid3 T t t α β cid3 F Table 1 t α cid3 F t β cid3 F Table 2 t α cid3 T t β cid3 T Table 1 iff iff iff iff E α E β inductive hypothesis iff E α β Deﬁnition 5 Case 4 θ form α β cid7 cid6 α β cid3 T t t α β cid3 F Table 1 t α cid3 F t β cid3 F Table 3 t α cid3 T t β cid3 T Table 1 iff iff iff iff E α E β inductive hypothesis iff E α β Deﬁnition 5 Case 5 θ form α t α cid3 T t α cid3 T Table 1 iff iff E α inductive hypothesis iff E α Deﬁnition 5 cid2 Whilst Belnaps fourvalued logic simple intuitive wellknown proposal interesting complex proposals variants Belnaps proposal proposal Arieli Avron preferential semantics selects models knowledgebase minimal respect assignment B truth value 1 These variants Belnaps proposal offer useful developments framework analysing inconsistent information presented paper 9 Discussion The need develop robust principled logicbased techniques analysing inconsistent information creasingly recognised important research area artiﬁcial intelligence particular science general This stems recognition dichotomy consistent inconsistent set formulae comes classical logics sufﬁcient describing inconsistent information A number proposals measuring degree information presence inconsistency 24262937 measuring degree inconsistency information 14151820222426 For review 17 1092 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 These measures potentially important diverse applications artiﬁcial intelligence belief revision belief merging negotiation multiagent systems decisionsupport software engineering tools Already measur ing inconsistency seen useful tool analysing diverse range information types including news reports 23 integrity constraints 14 information merging 34 ontologies 32 software speciﬁcations 830 ecommerce protocols 10 The current proposals measuring inconsistency classiﬁed ways The ﬁrst approach involves counting minimal number formulae needed produce inconsistency The formulae needed produce inconsistency inconsistent set 25 This idea interesting rejects possibility ﬁnegrained inspection content formulae In particular looks singleton sets initial problem values consistent inconsistent The second approach includes proposal presented paper involves looking proportion language touched inconsistency This allows look inside formulae 142024 This means formulae singleton sets different inconsistency measures In proposals identify set formulae conjunction set ϕ ϕcid13 inconsistency measure set ϕ ϕcid13 This means distribution contradiction formulae taken account Recently proposal combine ﬁrst second approaches uniﬁed framework 18 The framework based coalitional game theory supports inconsistency measures able look inside formulae account distribution contradiction different formulae set allowing identiﬁcation blameresponsibility formula knowledgebase inconsistency All proposals discussed based propositional logic apart 15 deals mainly inﬁnite models 14 based restricted form ﬁrstorder logic So proposal paper based tolerant logic ﬁrst proposal measuring inconsistency ﬁrstorder knowledge This potentially offers considerable advantages applications artiﬁcial intelligence science involving ﬁrstorder logic Acknowledgement The authors grateful anonymous reviewers paper Yue Ma Guilin Qi valuable suggestions improvements References 1 O Arieli A Avron The value values Artiﬁcial Intelligence 102 1998 97141 2 M Arenas L Bertossi M Kifer Applications annotated predicate calculus querying inconsistent databases Computational Logic CL2000 LNCS vol 1861 Springer 2000 pp 926941 3 L Bertossi J Chomicki Query answering inconsistent databases G Saake J Chomicki R van der Meyden Eds Logics Emerging Applications Databases Springer 2003 4 S Benferhat D Dubois S Kaci H Prade Encoding information fusion possibilistic logic A general framework rational syntactic merging Proceedings 14th European Conference Artiﬁcial Intelligence ECAI2000 IOS Press 2000 pp 37 5 N Belnap A useful fourvalued logic G Epstein Ed Modern Uses MultipleValued Logic Reidel 1977 pp 837 6 L Bertossi A Hunter T Schaub Introduction inconsistency tolerance Inconsistency Tolerance LNCS vol 3300 Springer 2004 pp 116 7 C Baral S Kraus J Minker VS Subrahmanian Combining knowledgebases ﬁrstorder theories Computational Intelligence 8 1992 4571 8 B BarragánsMartínez J PazosArias A FernándezVilas On measuring levels inconsistency multiperspective requirements speciﬁ cations Proceedings 1st Conference Principles Software Engineering PRISE04 2004 pp 2130 9 W Carnielli J Marcos A taxonomy C systems Paraconsistency The Logical Way Inconsistent Marcel Dekker 2002 pp 194 10 Q Chen C Zhang S Zhang A veriﬁcation model electronic transaction protocols Advanced Web Technologies Applications LNCS vol 3007 Springer 2004 pp 824833 11 NC da Costa On theory inconsistent formal systems Notre Dame Journal Formal Logic 15 1974 497510 12 S Amo W Carnielli J Marcos A logical framework integrating inconsistent information multiple databases Proceedings Second International Symposium Foundations Information Knowledge Systems LNCS vol 2284 Springer 2002 pp 6784 13 A Finkelstein D Gabbay A Hunter J Kramer B Nuseibeh Inconsistency handling multiperspective speciﬁcations IEEE Transactions Software Engineering 20 8 1994 569578 14 J Grant A Hunter Measuring inconsistency knowledgebases Journal Intelligent Information Systems 27 2006 159184 15 J Grant Classiﬁcations inconsistent theories Notre Dame Journal Formal Logic 19 1978 435444 16 J Grant VS Subrahmanian Applications paraconsistency data knowledge bases Synthese 125 2000 121132 J Grant A Hunter Artiﬁcial Intelligence 172 2008 10641093 1093 17 A Hunter S Konieczny Approaches measuring inconsistent information Inconsistency Tolerance LNCS vol 3300 Springer 2004 pp 189234 18 A Hunter S Konieczny Shapley inconsistency values Proceedings 10th International Conference Knowledge Representation KR06 AAAI Press 2006 pp 249259 19 A Hunter B Nuseibeh Managing inconsistent speciﬁcations Reasoning analysis action ACM Transactions Software Engineering Methodology 7 1998 335367 20 A Hunter Measuring inconsistency knowledge quasiclassical models Proceedings National Conference Artiﬁcial Intel ligence AAAI02 MIT Press 2002 pp 6873 21 A Hunter Evaluating signiﬁcance inconsistencies Proceedings 18th International Joint Conference Artiﬁcial Intelligence IJCAI03 2003 pp 468473 22 A Hunter Logical comparison inconsistent perspectives scoring functions Knowledge Information Systems Journal 6 2004 528543 23 A Hunter How act inconsistent news Ignore resolve reject Data Knowledge Engineering 57 2006 221239 24 S Konieczny J Lang P Marquis Quantifying information contradiction propositional logic epistemic actions Proceedings 18th International Joint Conference Artiﬁcial Intelligence IJCAI03 2003 pp 106111 25 K Knight Measuring inconsistency Journal Philosophical Logic 31 2001 7798 26 K Knight Two information measures inconsistent sets Journal Logic Language Information 12 2003 227248 27 S Konieczny R Pino Perez On logic merging Proceedings Sixth International Conference Principles Knowledge Representation Reasoning KR98 Morgan Kaufmann 1998 pp 488498 28 J Lin AO Mendelzon Merging databases constraints International Journal Cooperative Information Systems 7 1 1998 5576 29 E Lozinskii Information evidence logic systems Journal Experimental Theoretical Artiﬁcial Intelligence 6 1994 163193 30 K Mu Z Jin R Lu W Liu Measuring inconsistency requirements engineering Symbolic Quantitative Approaches Reasoning Uncertainty ECSQARU05 LNAI vol 3571 Springer 2005 pp 440451 31 M Martinez A Pugliese G Simari VS Subrahmanian H Prade How dirty relational database axiomatic approach Symbolic Quantitative Approaches Reasoning Uncertainty ECSQARU07 LNCS vol 4724 Springer 2007 pp 103114 32 Y Ma G Qi P Hitzler Z Lin Measuring inconsistency description logics based paraconsistent semantics Symbolic Quanti tative Approaches Reasoning Uncertainty ECSQARU07 LNCS vol 4724 Springer 2007 pp 3041 33 G Priest Reasoning truth Artiﬁcial Intelligence 39 1989 231244 34 G Qi W Liu D Bell Measuring conﬂict agreement prioritized belief bases Proceedings Nineteenth International Joint Conference Artiﬁcial Intelligence IJCAI05 2005 pp 552557 35 R Reiter Equality domain closure ﬁrstorder databases Journal Association Computing Machinery 27 2 1980 235249 36 D Sarenac R Jennings Implication preservation truth Proceedings International Conference Artiﬁcial Intelligence CSREA Press 2001 37 P Wong Ph Besnard Paraconsistent reasoning analytic tool Journal Interest Group Propositional Logic 9 2001 233246