Artiﬁcial Intelligence 175 2011 13461365 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Sequential decision making partially ordered preferences Daniel Kikuti Fabio Gagliardi Cozman Ricardo Shirota Filho Escola Politécnica Universidade São Paulo Av Prof Mello Moraes 2231 São Paulo SP Brazil r t c l e n f o b s t r c t This paper presents new insights novel algorithms strategy selection sequential decision making partially ordered preferences strategies incomparable respect expected utility We assume incomparability strategies caused indeterminacyimprecision probability values We investigate criteria consequentialist strategy selection Γ Maximin Γ Maximax Γ Maximix Interval Dominance Maximality Eadmissibility We focus popular decision tree inﬂuence diagram representations Algorithms resort linearmultilinear programming implementation experiments 2010 Elsevier BV All rights reserved Article history Received 28 February 2009 Received revised form 11 August 2010 Accepted 11 August 2010 Available online 2 December 2010 Keywords Sequential decision making uncertainty Partially ordered preferences Sets probability measures Criteria choice Consequentialist resolute norms Linear multilinear programming 1 Introduction It possible decision problem express preferences completely ordered alternatives decision maker prefers indifferent In fact expected utility theory based assumption revealed preferences completely ordered However preferences partially ordered examples theory CPnets theory nondeterministic planning brieﬂy discussed Section 2 When preferences partially ordered alternatives incomparable incomparability fail transitive In paper focus preferences represented single utility function set probability measures Whenever incomplete partial beliefs disagreements experts concerning chances fail assign precise probability value event producing partial order respect expected utility 34673 This situation wish focus Section 2 contains necessary background topics The literature describes criteria choice preferences partially ordered 71 These criteria covered Section 3 roughly divided groups 1 criteria enforce complete ordering choices Γ Maximin Γ Maximax Γ Maximix 2 criteria select set incomparable actions Interval Dominance Maximality Eadmissibility Practical approaches decision making sets probabilities mainly limited ﬁrst category recent discussions 60 highlighted theoretical behavioral problems group criteria second group criteria advocated adequate approach Nevertheless incomparability comes cost little observed literature terms algorithmic progress mainly computational complexity inability deal incomparable choices This work ﬁnancially supported FAPESP grants 2003111659 2004095680 2005580909 2008039955 Corresponding author Email addresses danielkikutiyahoocombr D Kikuti fgcozmanuspbr FG Cozman ricardoshirotapoliuspbr RS Filho 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201011017 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1347 There distinct behavioral norms comes sequential decision making partially ordered preferences sequence decisions For instance decision maker resolute commits complete strategy consequentialist allows change current strategy case appropriate view future possible choices The interplay criteria choice behavioral norms models decision trees inﬂuence diagrams explored literature paper aims ﬁlling gap extent There insights learned organized discussion criteria choice behavioral norms instance discuss Section 5 fact standard LIMID model clashes consequentialist stance Another substantial contribution paper development algorithms consequentialist sequential decision making expressed decision trees 56 inﬂuence diagrams 34 Algorithms decision making Γ Maximin similar criteria appeared settings 586974 algorithms decision making Maximality Eadmissibility suggested Kyburg Pittarelli 43 proposed recently Kikuti et al 42 Utkin Augustin 721 Section 3 presents algorithms computational analysis criteria choice The valuable contribution Section 3 algorithm Eadmissibility We present new algorithm strategy selection linear programming family decision trees partial preferences considerable regularity Sections 4 5 respectively present algorithms decision making problems speciﬁed decision trees inﬂuence diagrams We note scarcity previous literature inﬂuence diagrams partially ordered prefer ences fact criteria choice require manipulation exponential number strategies To reduce complexity examine ordered LIMIDs analyze conceptual foundation particular clash consequentialism computational properties In short present novel results algorithms sequential decision making decision trees inﬂuence diagrams plus new insights singlestage decision making Interval Dominance Eadmissibility The broader goal paper combine philosophical underpinnings computational properties partially ordered preferences combination feel missing current literature 2 Partially ordered preferences behavioral norms credal sets Throughout decision makers select actions ﬁnite set possible alternatives A a1 Performing action yields reward aω state nature ω set states nature assumed ﬁnite set Ω ω1 ωn We assume aω real number expressed utiles Even theories preference allow multiple utilities deﬁned single decision problem 2 paper assume utilities precisely ﬁxed given decision problem consequently action identiﬁed single realvalued function states nature Note utility function function returns value utiles possible outcome assuming single utility function ﬁxed The connection preference expected utility decision making risk 47 based axiomati zation preference relations Denote strict preference ai j ai cid3 j deﬁne indifference actions ai j ai cid3 j j cid3 ai Suppose cid3 satisﬁes recall actions functions multiplied added 23 Axiom 1 completeness The relation cid3 complete negatively transitive recall cid3 negatively transitive satisﬁes ai j ak ai cid2 j j cid2 ak ai cid2 ak Axiom 2 independence For α 0 1 ai cid3 j αai 1 αak cid3 αa j 1 αak axiom says ai cid3 j compound action ai ak preferred compound action j ak α denotes ratio mixture actions Axiom 3 continuity If ai cid3 j cid3 ak exists α β 0 1 αai 1 αak cid3 j cid3 βai 1 βak Then exist single probability measure P related expected utility representation cid3 value action ai given Eai j1 P ω jaiω j ai cid3 j Eai Ea j cid2 n Several theories relax axioms attempting accommodate observed decision making patterns 12040 For instance lexicographic preferences violate Axiom 3 encoded expected utility vectors ordered respect lexicographic hierarchy 523 Other theories violate Axiom 2 lead nonadditive functionals represent preferences 49 Section 23 Partially ordered preferences violate Axiom 1 assuming preferences completely ordered exactly situation examine present paper If assume single utility function E P ai E P j P require preference relation cid3 complete ai cid3 j 1 Most results based material presented Kikuti et al 42 Kikuti Cozman 41 The author participated developing column generation method experiments reported Section 43 1348 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Fig 1 A sequential decision problem represented decision tree set probability measures 266162 That preference relation cid3 completely represented set probability measures K Incomparability actions ai j appears probability measure P 1 K produces E P 1 j probability measure P 2 K fails produce E P 2 ai E P 1 ai E P 2 j As alluded Section 1 circumstances preclude assessment complete preference ordering incomplete understanding decision scenario desire abstract elements complex decision situation disagreements experts involved decision making Sometimes language preferences expressed allows partial speciﬁcation particularly relevant artiﬁcial intelligence applications For instance semantics nondeterministic actions planning 6 actions effects probabilities unknown consequently possible completely order respect expected utility 69 Another suggestive example theory CPnets 7 graphtheoretical language organizes preferences features outcomes outcomes A CPnet generate single preference ordering outcomes general speciﬁes partial ordering While CPnet deals outcomes reﬂects incomplete speciﬁcation utilities similar language actions conﬁnes present paper Hopefully present paper help shorten gap current theories nondeterministic planning CPnets foundational literature partially ordered planning When preferences partially ordered single best action select Before examine criteria choice Section 3 review behavioral norms sequential decision problems Section 21 properties sets probability measures Section 22 21 Sequential decision problems strategies behavior norms In sequential decision problem decision maker faces sequence decisions decision impact future decisions A convenient language introduce sequential decision problems decision trees 56 A decision tree T connected graph cycles node belongs categories A decision node D D typically drawn square represents place decision maker choose action A chance node C C typically drawn circle represents event control decision maker A utility node U U associated real valued utility In decision trees leaf node utility node vice versa Edges decision node represent possible actions decision maker choose edges chance node represent possible outcomes event A subtree T tree T cid9 nodes edges form subsets T We assume tree subtree rooted decision node A strategy complete set actions specifying decision maker act actually called decide A strategy subtree called substrategy We interested selecting strategies The example clariﬁes notion Example 1 The decision tree Fig 1 adapted 40 It strategies s1 a1 a3 s2 a1 a4 s3 a2 a1 a3 means decision maker choose action a1 A a3 reaches decision node B reach B receives 0 One instead consider conceivable combinations decisions game theory case strategies a2 a3 a2 a4 We follow route There widely debated behavioral norms decision makers engaged sequential decision problems 21 A reso lute decision maker commits complete strategy comparing simultaneously strategies rooted ﬁrst decision node 50 A sophisticated consequentialist decision maker selects strategies follow decision node looking subtree rooted decision node actually change strategy previously selected 2829 There possible norms investigate instance myopic decision maker constructs strategy selecting actions decision node independently future choices 2867 The following example illustrates behavioral norms light nonexpected utility model preference Example 2 Consider Example 1 Suppose decision maker adopted rankdependent utility model preference 40 strategies ranked single utilityprobability pair function D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1349 Fig 2 Decision tree Example 3 V aω1 ncid3 j2 cid4 cid4 cid5 lnx j 05 cid5cid6 cid7 aω j aω j1 exp cid2 n k j P ωk inequalities aω1 cid2 cid2 aωn assumed hold At node A V s1 112486 x j V s2 92423 V s3 1000 node A s1 cid3 s3 cid3 s2 However node B action a4 preferred a3 V a3 249406 V a4 3000 If decision maker resolute selects s1 implements B choose a3 a4 locally better If decision maker consequentialist anticipate B prefer a4 a3 s1 infeasible comparing s2 s3 A choose s3 If decision maker myopic select s1 A reaches B deviates s1 choosing a4 best option locally actually implementing s2 In general resolute behavior demands examination strategies beginning Even resolute norm forcefully defended moral aspects commitments taken account 951 resolution faces prob lems preferences elicited modeled By renouncing consequentialism decision maker deﬁned local preferences revealed choices 572 A consequentialist norm makes sense consider resource bounded decision maker possibly optimize space strategies 66 For reason adopt consequentialist norm paper If decision maker eliminates action nonroot node action selected perspective root node episode incoherent choice Another situation inconsistent choice decision maker selects strategy subsequently deviates 2849 Incoherent inconsistent choices occur decision maker ranks preferences expected utility single utility function single nonzero probability measure fact resolute consequentialist norms equivalent decision maker However incoherence befall decision maker preferences partially ordered Example 3 Adapted Seidenfeld 60 In decision tree depicted Fig 2 p 025 075 q 12 cid7 0 There charge 04 utiles action a1 a2a a2b charge 035 utiles action a3 E P a1 0 E P a2a E P a2b 01 possible P There 9 additional strategies consider combining actions D2 D3 Suppose interested strategies maximum minimum expected utility adopt cid9 Γ Maximin criterion detailed later For small cid7 D2 Γ Maximin action 1 D3 Γ Maximin action cid9cid9 2b strategy larger minimum expected utility This episode incoherent choice throw away actions lead better strategy root node cid9cid9 1 Γ Maximin D1 a3 cid9cid9 1 strategy a3 cid9 2a cid9 1 We discuss incoherent inconsistent choices Section 41 detailing criteria choice 22 Partially ordered preferences sets probability measures As noted previously partially ordered preferences represented sets probability measures We set probability measures credal set 46 denote K X credal set contains distributions random 2 Jaffray 38 combines consequentialist preferences nonconsequentialist behavior Nielsen Jaffray 52 use rankdependent utility model preferences function revealed anticipated utility theory Quiggin 55 1350 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 variable X We assume credal sets given ﬁnite set linear constraints closed convex ﬁnitely vertices Example 4 shows credal set Given set assessments containing constraints probability values credal set satisﬁes constraints extension assessments Given event A P A minP K P A P A maxP K P A respectively lower probability upper probability A Given random variable X E X minP K E X E X maxP K E X respectively lower expectation upper expectation X use expected value expectation synonyms A conditional credal set K A obtained conditioning Bayes rule measure credal set respect A likewise K Y produced elementwise conditioning respect random variable Y We assume conditioning event lower probability strictly larger zero P A 0 If joint credal set K X Y vertices satisﬁes stochastic independence X Y vertices factorize P XP Y X Y said strongly independent There concepts independence credal sets literature 1112 strong independence popular adopt paper Conditional strong independence deﬁned obvious manner requiring conditional stochastic independence vertex conditional credal set We shall deal inﬂuence diagrams use elements theory credal networks A credal network graphtheoretical representation joint credal set K X1 Xn mimics structure Bayesian network 13 A credal network consists directed acyclic graph node identiﬁed random variable Xi The graph denoted pa Xi Each variable associated conditional credal set parents variable Xi K Xipa Xi πk value πk pa Xi variable assumed strongly independent nondescen dants graph given parents graph Thus largest extension assessments credal network called strong extension joint credal set K X1 Xn given convex hull set joint distributions cid8 i1 p Xipa Xi p Xipa Xi πk K Xipa Xi πk expression refers densities induced ap n propriate probability distributions An inference computation lowerupper probabilities values variable In general inference strong extensions N P P P complete constraints induced width credal networks complexity inferences N P 17 The best available algorithms inference strong extensions i1 p Xipa Xi subject assessments credal network 16 Some variables optimize multilinear polynomial discarded computing particular inference dseparation property strong extensions inherit Bayesian networks 123 cid8 n We need solve multilinear programs times paper The reﬁned algorithm solution multilinear programming problems arising judgements independence adaptation Sherali Tuncbilek 65s RL method Campos Cozman 17 We adapted RL method implementation Section 52 usually solution multilinear program unit computation solution require substantial effort 3 Criteria choice singlestage decision making In section study criteria choice partially ordered preferences criteria select actions given set actions We present basic computations performed singlestage decision making problem present short code fragments later While algorithms appeared literature 7071 discussion contributes new analyses Interval Dominance Eadmissibility 42 The computational cost algorithms presented function number auxiliary optimization programs solved The following example clariﬁes nature programs example deals linear constraints later face situations auxiliary programs multilinear Example 4 Consider decision problem states x1 x2 x3 values random variable X Actions utilities given Fig 3 Suppose credal set K X speciﬁed P X x1 110 720 P X x2 15 25 P X x3 720 1320 depicted Fig 3 To obtain lower upper expectations actions ai Fig 3 solve linear programs form min max Eai j p j 1 P X x j cid2 p j cid2 P X x j j 1 2 3 j p jaix j subject cid2 cid2 Existing criteria roughly divided groups Indecisionresistant criteria force single ordering choices select single action set equally ranked respect choice actions Indecisionprone criteria return set actions deemed incomparable respect preference We start brieﬂy examining indecisionresistant criteria Γ Maximin Γ Maximax Γ Maximix The Γ Maximin criterion selects action highest lower expectation pessimistic solution focuses worst case scenarios 325 Algorithm 1 easy translation Γ Maximin criterion The Γ Maximax criterion selects action highest upper expectation optimistic solution focuses best case scenarios 58 The Γ Maximix criterion selects 3 Given collections variables X Y Z suppose path variable X variable Y variable W W converging arrows Z descendants Z W Z Then X Y dseparated Z 54 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1351 x1 x2 x3 Eai Eai a1 a2 a3 a4 a5 9 0 5 6 2 7 5 5 4 6 1 8 5 4 5 33 43 50 42 42 56 645 50 47 51 Fig 3 Left Actions utilities lower upper expected utilities Example 4 Right Credal set K X hatched area deﬁned probability intervals Example 4 axes denote probability x1 x2 x3 Algorithm 1 Criterion_Γ Maximin Input Set actions A set constraints K probability values Output A Γ Maximin action a1 x Ea1 foreach ai Aa1 Eai x return 1 2 3 ai x Eai Algorithm 2 Criterion_Maximality Input Set actions A containing A actions action attribute admissible initially set true set constraints K probability values Output The set maximal actions 1 A 1 j 1 A Eai j 0 j admissible false Eai j 0 ai admissible false 1 2 3 4 5 return All actions attribute admissible set true arg maxai AηEai 1 ηEai η 0 1 reﬂects degree ambiguity aversion 72 sketched Hurwicz 36 Algorithm 1 easily modiﬁed deal Γ Maximax Γ Maximix criteria For criteria Algorithm 1 returns selected action solving number optimization programs subject constraints K The number optimization programs clearly linear number actions In Example 4 Γ Maximin criterion selects a3 Γ Maximax criterion selects a2 Γ Maximix criterion selects a2 η 05 Consider indecisionprone criteria starting Maximality An action ai maximal action j possible probability measure P K E P j E P ai The maximality criterion based pairwise comparisons actions indicated Algorithm 2 Algorithm 2 use fact E P ai E P j P equivalent Eai j 0 73 To handle n actions algorithm solve n2 n optimization programs In Example 4 determine a4 maximal presence a3 solve linear program max6p1 4p2 4p3 5p1 5p2 5p3 subject i1 pi 1 110 cid2 p1 cid2 720 15 cid2 p2 cid2 25 720 cid2 p3 cid2 1320 We ﬁnd maximum 310 a4 maximal a3 present cid2 3 We examine Interval Dominance Eadmissibility 31 Interval Dominance Interval Dominance selects Iadmissible actions follows 70 Action j Iinadmissible ai present Eai Ea j The Iadmissible actions actions Iinadmissible Note Interval Dominance identify dominance sense given actions ai j ai dominates j probability measures P 1352 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Fig 4 Left Interval Dominance capture true dominance slanted lines denote expectations actions a1 a2 probability event A varies Right Actions expected utilities Example 5 Algorithm 3 Criterion_IntervalDominance Input Set actions A action attribute admissible initially set true set constraints K probability values Output The set Iadmissible actions Criterion_Γ MaximinA K x Ea foreach ai A x Eai ai admissible false return All actions attribute admissible set true 1 2 3 E P ai cid3 E P j Fig 4 a2 higher expectation action a1 probability value P A 03 07 Interval Dominance choose actions A naive method generate Iadmissible actions compare pair actions Algorithm 3 avoids unneces sary computation lower upper expectations Γ Maximin solution Action Iadmissible suppose Iinadmissible higher lower expectation contradicting hypothesis The comparison actions maximum lower expectation Ea cid3 Ea dominated action solve n optimization programs determine set admissible actions solve n 1 additional optimization programs Consequently Algorithm 3 returns Iadmissible actions solving linear number actions number opti mization programs dominated action generates Iadmissible actions action cid9cid9 To ﬁnd cid9cid9 cid9 cid9 32 Eadmissibility The criterion Eadmissibility E stands expectation 45 focuses actions maximize expected utility Given set actions A credal set K action ai A Eadmissible P K ai maximizes expected utility 59 ai Eadmissible P K j A j cid13 E P ai j cid3 0 1 A variant Eadmissibility explored Markov decision processes imprecise probabilities Itoh Nakamura 37 cid9 1 cid9 2a cid9 2a Example 5 Take tions expected utility P E 05 075 Even Eadmissible cid9 2b Eadmissible action cid9 2b Example 3 assume cid7 0 Expected utilities shown Fig 4 right Only ac cid9 cid9 2b maximizes expected utility P E 025 05 action 2a maximizes cid9 1 Γ Maximin action maximizes expected utility Eadmissibility qualitatively different previous criteria depend pairwise comparisons based existence speciﬁc probability measures underlying credal set Thus think Eadmissibility diﬃcult handle computationally criteria This feeling transpires literature decision making partially ordered preferences best expressed Troffaes 70 excellent review However possible reduce search Eadmissible actions linear sequence optimization programs insights ﬁrst derived Kyburg Pittarelli 43 The original discussion Kyburg Pittarelli focus computational cost lay dormant techniques surfaced independently work Kikuti et al 42 Utkin Augustin 72 response Troffaes 70 analysis The basic idea action ai Eadmissible P K constraints generated Expression 1 satisﬁed If constraints satisﬁed ai Eadmissible Algorithm 4 generates exactly straints linear expression E P ai j cid3 0 line 3 stored set C denotes symbolic constraint free bound values P This way algorithm avoids need represent credal sets explicitly need enumerate vertices As action veriﬁed D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1353 Algorithm 4 Criterion_Eadmissibility Input Set actions A containing A actions action attribute admissible initially set true set constraints K probability values Output The set Eadmissible actions 1 A C K j 1 A cid13 j C C E P ai j cid2 0 C feasible ai admissible false return All actions attribute admissible set true 1 2 3 4 5 Proposition 1 Algorithm 4 returns Eadmissible actions solving linear number actions number optimization programs In Example 4 a1 a2 a3 Eadmissible actions To verify a1 Eadmissible verify i1 pi 1 following linear constraints satisﬁed cid2 3 110 cid2 p1 cid2 720 15 cid2 p2 cid2 25 720 cid2 p3 cid2 1320 9p1 7p2 p3 0p1 5p2 8p3 cid3 0 9p1 7p2 p3 6p1 4p2 4p3 cid3 0 9p1 7p2 p3 5p1 5p2 5p3 cid3 0 9p1 7p2 p3 2p1 6p2 5p3 cid3 0 4 Algorithms sequential decision making decision trees In section derive algorithms sequential decision making decision trees display indetermi nacyimprecision probability values 41 Preliminaries option consequentialism In decision tree chance nodes associated credal sets face differences resolute consequentialist behaviors We start noting Eadmissibility Maximality lead incoherent choice resolute consequen tialist norms produce identical sets strategies 35604 Thus Eadmissibility Maximality possible run backward induction produce sequence substrategies satisfy consequentialism reach strategies complying resolute norm As digression note backward induction scheme exactly given Algo rithm 5 detailed later algorithm specialized Eadmissibility Maximality criteria 42 note recent work Huntley Troffaes 35 yields simpliﬁcations Algorithm 5 applied Maximality The remaining criteria Section 3 produce distinct consequentialist resolute behaviors The Γ Maximin cri terion considered Example 3 Clearly applies Γ Maximix Γ Maximax criteria guarantee discarded substrategy optimal strategy To illustrate Γ Maximax criterion cid9 cid9cid9 consider Example 3 At D2 Γ Maximax action 2a D3 Γ Maximax action 2b However D1 cid9cid9 2b Γ Maximax strategy a3 Incoherent choice happen Interval Dominance fact apparently indicated cid9cid9 2a a3 cid9 2b cid9 2a Example 6 In decision tree depicted Fig 5 suppose p 110 310 q1 15 25 q2 25 35 q3 35 45 At D2 action cid9 2 strategy a1 cid9 2 Iadmissible D1 cid9 1 dominates action In paper adopt consequentialist position best substrategy starting decision node depend subtree starting node motivated fact sensible alternative resolute behavior computationally unfeasible general bounded agents sequential decision problem resolute behavior viewed brute force method demands enumeration possible strategies 42 Selecting strategies Algorithm 5 presents general framework consequentialist sequential decision making presence indeter minacyimprecision probabilities partially ordered preferences The algorithm specialized replacing criterion desired criterion choice The intuition algorithm strategy 4 Nevertheless Eadmissibility Maximality lead inconsistent choice decision maker plans action executes different action 1354 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Algorithm 5 DecisionTree_criterion Input A decision tree T described Section 41 set T K constraints probability values Output A set strategies selected criterion Fig 5 Decision tree Example 6 1 2 3 4 5 6 7 8 9 m Number decision nodes m 1 child Dm S foreach D D cid9 cid9 D foreach s j D cid9 C D cid9substrategies S S D cid9 s j foreach s j CombinationD cid9 S S D cid9 S S D cid9 s j 10 11 K GenerateConstraintsS Dm T K Dsubstrategies Criterion_criterionS K 12 return Content attribute substrategies root decision node constructed visiting nodes backwards leaf ﬁrst root selecting optimal choice decision nodes encountered The optimal choice decision node combined array optimal choices selected previously visited nodes root node resolved In order accomplish Algorithm 5 assumes decision node keeps list admissible substrategies according criterion rooted node list kept substrate gies attribute The remainder section dedicated detailed discussion technical aspects algorithm In addition propose simple transformation allows algorithm solved linear programming instead computationally demanding multilinear program We linear program beneﬁt use column generation technique order obtain solutions eﬃciently We assume decision nodes D topologically sorted follow linear temporal ordering decisions T contains path decision node D x D y D x appears decision node D y ordering We assume D1 root T Dm decision node ordering cid9 cid9 cid9 As mentioned construction strategies algorithm starts backwards leaf tree utility cid9 node line 9 Algorithm 5 We visit decision node Dm ﬁrst examine children If child D D decision node substrategies rooted D chance node cases handle If indicated storing D chance node decision nodes successors substrategy rooted D substrategy simply moves If chance node decision nodes successors necessary combine substrategies branch D For instance decision nodes chance node decision nodes leads D substrategies substrategies produced We assume substrategies returned function Combination line 8 Algorithm 5 combined action prescribes D beginning substrategies If D The substrategies S generated loop line 4 line 9 fed appropriate function Criterion_criterion line 11 This function treats substrategy action receive constraints parameters optimization programs run select substrategies Criterion_criterion These constraints basically contained input set T K given terms local assignments cid9 cid9 cid9 Once constraints generated processed Criterion_criterion sequence optimization programs Fix decision node D strategy s expectation s cid9 cid9 cid5 cid5 cid9anX N cid9anX1 X N xN X1 x1 P cid3 P cid4 cid4 U s x1 xN 2 x1xN 01 Xi denotes indicator functions events subtree rooted D branches selected s Xi set nodes path D Xi P Xi xian Xi local assignment probability D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1355 event Xi obtains xi This expression clearly multilinear form optimizing subject constraints probability values terms product takes nonlinear programming pointed 141542 Nonlinear programming known class diﬃcult problems solve speciﬁc optimization methods recently applied particular case sequential decision making Γ Maximax criteria Campos Ji 19 There interesting situations optimization programs Criterion_criterion transformed linear programs discussed section 43 Selecting strategies linear programming A linear formulation obtained strategy selection assessments linear constraints separately speciﬁed sense probability constraints event particular chance node depend probability values event For instance assessments separately speciﬁed T K contains bounds probabilities P AB α β A event chance node B conjunction events decision tree root node illustrated Example 6 To obtain linear programs ﬁrst note Expression 2 written cid3 x1xN 01 P X1 x1 X N xN U s x1 xN 3 P X1 x1 X N xN probability values optimize For instance consider constraints P AB α β A B conjunctions events decision tree We use Bayes rule conditioning transform constraints form α P B cid2 P A B cid2 β P B assumption probabilities strictly positive In Example 6 constraints 110 cid2 P C cid2 310 15P C cid2 P F C cid2 25P C 35P C cid2 P E C cid2 45P C cid4 G C c 25P cid2 P C c cid5 cid4 cid5 cid2 35P cid4 cid5 C c It instructive analyze size linear programs generated method One extreme favorable situation represented symmetric decision tree decision node slice branches constant number chance nodes containing event That ﬁrst decision node branches nodes containing event A decision nodes chance nodes branch chance nodes labeled event B depicted Fig 6 left case branching factor equal For ﬁxed strategy symmetric binary tree problem deals N events binary tree contains 2N 1 nodes Each complete path root utility node corresponds complete conjunction events complements events linear program built optimization variables paths symmetric binary tree We reach satisfying conclusion symmetric decision trees linear programs solved Algorithm 5 polynomial size decision tree course entirely comforting size decision trees exponential number events Fig 6 right shows running times computation lower expected value given strategy basic operation criteria choice Points graph produced generating symmetric decision trees randomly generated utilities lowerupper probabilities events The implementation coded AMPL uses CPLEX commercial package linear programming solver experiments run microcomputer dualcore processors 4 GBytes memory One sees running times small N cid2 10 hard imagine symmetric decision tree 10 chance nodes Just compare solved multilinear formulation 2 programming package Multilin 17 The multilinear programs took minutes N 5 failed converge Multilin produces successive approximations typically reaches vicinity solution quickly converges slowly Now consider extreme situation ﬁxed strategy symmetric binary tree chance node contains different event Here linear program computes lowerupper expectation strategy exponentially larger decision tree binary tree height H N 2H 1 chance nodes 2N 22H 1 optimization variables That relatively small decision tree leads large linear programs example binary tree height 5 5 levels N 25 1 31 chance nodes 2N 231 optimization variables As indicated Fig 6 right running times grow substantially N grows 10 Here face situation similar probabilistic logic relatively small set constraints N events handle 2N conﬁgurations events 242731 Such problems tackled column generation 39 redundancy detection 3248 We interested minimizingmaximizing objective function given Expression 3 We write expression product vectors u p u contains values utility nodes p probability values 2N possible conﬁguration events We know T K constraints p subject easily written matrix form Ap cid3 b It clear A large number columns precisely 2N possible conﬁguration events Storing manipulating columns ineﬃcient time consuming However column 1356 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Fig 6 Linear programming solution exponentially large separately speciﬁed decision trees Left Symmetric decision tree Right Running times logarithmic scale growing N number events cid9 generation possible solve linear program manipulating smaller submatrix A A rows columns rows A The challenge run simplex method iteration select previously discarded columns A replace existing column A This computing reduced cost c yA y dual cost current solution 4 We write column A vector multilinear expressions A1 B1 α1 B1 Am Bm α BmT Ai event B conjunction events αi assessment Thus c yA multilinear expression optimization variables 0 1 standard techniques reduce optimization problem integer programming 18 Section 42 To summarize run run auxiliary integer program We note simplex method A problems hundreds variables probabilistic logic solved column generation relative ease 32 exact solution large decision trees obtained Note techniques extended chance nodes associated random variables ﬁnitely values The added effort binarize random variables sets binary variables add Boolean constraints binary variables possible values The result probabilistic logic problem solved linear programming possibly column generation N large decide column A enter A cid9 cid9 cid9 44 Consequentialist backward induction One argue constraints K generated computation Algorithm 5 assessments T K available input However approach miss signiﬁcant simpliﬁcations chance nodes discarded execution algorithm given consequentialist perspective For instance cid9 Fig 5 event F discarded D1 action 2 subsequent nodes admissible criteria choice previously discussed Thus makes sense generate constraints inside loop line 10 Algorithm 5 Nevertheless worst case function GenerateConstraints build implemented described previous section exponentially large optimization program root node This somewhat unsatisfying particularly compared backward induction standard decision trees In standard decision tree processed decision node completely summarized unique expected value selected substrategy node Instead function GenerateConstraints described previous section programs built decision nodes grow size The natural question Can function GenerateConstraints summarizes processed decision nodes interval expected utility For instance Example 6 like choice a1 a2 resolved D1 processing expectation interval D2 Alas intervalbased backward induction fails general Example 7 Consider decision tree Fig 7 adapted Hammond 30 Here p cid7 1 cid7 q cid7 small cid7 0 Actions b maximal Eadmissible D2 c d maximal Eadmissible D3 cid9 b If D2 D3 return expectation intervals strategy maximalEadmissible actions possible detect strategies dominated fact strategies overlapping expectation intervals cid9cid9 c dominates cid9 dominates cid9cid9 d D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1357 Fig 7 Decision tree Example 7 Maximality Eadmissibility fail intervalbased backward induction necessary information constraints probability values lost We wish intervalbased backward induction succeed Γ Maximin Γ Maximax Γ Maximix Interval Dominance That criteria assumption constraints separately speciﬁed evaluate actions decision node D onestep decision problem decision node reached D replaced single expectation interval We start rehearsing paragraph argument Danielson Ekenberg 14 derived algorithms computation lowerupper expectations ﬁxed strategy presence local bounds probabilities expectations The central idea 14 follows Fix strategy s Expression 2 cid9 cid5 cid9anX1 cid9 cid5 cid9anX N P N cid3 cid3 X N X1 P 1 cid4 cid4 U s X1 X N Es min P 1P N X1 X N subscripted probability distributions emphasize scope minimization We summations right eliminating variables X N X1 place minimization probability distribution right probability distribution possible constraints local independently speciﬁed path root node Hence compute lower expectation s run backward induction scheme reduced optimization program built decision node D encoding constraints subtree rooted D action selected s branches cut future decision nodes These decision nodes replaced lower upper expected utilities D produces lower upper expected utilities passes values ancestors Reduced programs multilinear presence probability constraints expectation intervals Expression 2 values P U free variables optimize Danielson Ekenberg 14 present techniques simplify solution local multilinear programs Returning problem consider criterion Interval Dominance At decision node D build complete optimization program chance nodes subtree rooted D nodes subtrees eliminated previ ous stages backward induction method Alternatively build reduced optimization problem chance nodes D decision nodes direct descendants proviso descendants summarize content subtrees intervals expected utility Recall decision node direct descendant D attached ﬁxed set substrategies decision maker consequentialist Thus question set Iadmissible actions D regardless use complete reduced program Given matters Interval Dominance lowerupper expectations argument previous paragraph leads positive answer programs produce identical results complete program divided smaller programs encoded reduced program expectation intervals Similar arguments work Γ Maximin Γ Maximax Γ Maximix Each descendant D cid9 Every expected utility expectation interval s D attached single attained selecting Consequently D lose restricting attention selected substrategy s probability distributions subtree rooted D expectation interval s likewise descendant D rooted D cid9 cid9 cid9 cid9 cid9 To ﬁnish section compare kinds assessments criteria choice context Example 3 cid9 1 cid9 2a Example 8 Consider Example 3 suppose cid7 small Algorithm 5 starts D2 substrategies corresponding cid9 2b evaluated appropriate function Criterion_criterion The happens node D3 At actions node D1 actions a1 a2a a2b evaluated combinations selected strategies D2 D3 We implicit constraint single value p refers probability values P EC D1 P EC c D2 constraints separately speciﬁed Running complete backward induction algorithm obtain following cid9cid9 1 D2 D3 Γ Maximin strategy a2a selected strategies The Γ Maximin actions cid9cid9 a2b D1 Note action 2b likewise inadmissible D3 combination cid9cid9 identical a2a Γ Maximin action D1 The Γ Maximax criterion prescribes 2b D2 D3 cid9 2a inadmissible D2 action cid9 2a cid9 1 1358 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 cid9 2a cid9cid9 2b D1 Interval Dominance selects actions nodes D2 D3 strategies evalu cid9 cid9 cid9cid9 2a Eadmissibility discards 1 1 cid9cid9 1 D2 D3 Maximality discard At D1 Maximality discards strategies cid9cid9 cid9 1 Finally D1 Eadmissibility discards strate 2a cid9cid9 cid9cid9 cid9 2a 1 There Eadmissible strategies a3 2a a3 ate D1 ﬁve inadmissible a1 a2a a2b a3 Interval Dominance plus strategies a3 gies Maximality plus strategies a3 cid9 2b a3 cid9cid9 2a a3 cid9cid9 2b a3 cid9cid9 2b a3 cid9cid9 1 a3 cid9 1 cid9 1 cid9 2b cid9 2a cid9 2a cid9cid9 2b Suppose change Example 3 probability E depends path root chance node labeled E probability values pi 025 075 constraints separately speciﬁed A linear programming solution possible However wish deal reduced programs multilinear programming Note face decrease selectivity separating assessments inadmissible strategy Interval Dominance Maximality Eadmissibility a1 To summarize discussion decision trees strategies selected resolute consequentialist norms Maximality Eadmissibility backward induction procedure fully justiﬁed remaining criteria backward induction method justiﬁed consequentialist position adopted paper Another point size optimization programs generated Algorithm 5 grow exponentially Γ Maximin Γ Maximax Γ Maximix Interval Dominance possible run reduced programs constraints separately speciﬁed And ﬁnally linear programming formulation possible cases multilinear programming required general particular dealing reduced programs 5 Inﬂuence diagrams partially ordered preferences Decision trees hardly represent large medium size decision problems number nodes decision tree increases exponentially number chance decision variables A compact way represent sequential decision problems inﬂuence diagrams A seminal work inﬂuence diagrams interval probabilities presented Breese Fertig 822 substantial advance appeared literature work We expand analysis considering criteria choice The section organized follows In Section 51 introduce inﬂuence diagrams partially ordered preferences deﬁne class problems interested present algorithm solve class problems provide analysis complexity algorithm In Section 52 discuss examples experiments 51 Preliminaries strategy selection algorithm An inﬂuence diagram imprecise probabilities directed acyclic graph set decision nodes D square shaped chance nodes C circle shaped utility nodes U diamond shaped Edges chance node indicate stochas tic dependence edges decision node indicate available information time decision edges utility node indicate functional dependence Each decision node associated ﬁnite set actions conditional parents Each chance node associated random variable C set credal sets instantiation πi parents C paC credal set K CpaC πk speciﬁed credal networks5 utility node U associated function upaU depends parents U If utility node speciﬁed total utility sum functions utility nodes 68 The standard deﬁnition inﬂuence diagrams 34 requires linear temporal order decisions typically represented directed path comprising decision nodes forgetting assumption decision node decision maker knows previous decisions past observa tions However past information irrelevant considered computational reasons 5364 In Limited Memory Inﬂuence Diagrams LIMIDs 44 forgetting assumption relaxed decision maker knows past decisions observations explicitly linked decision nodes This allows representation broad class decision problems including situations decision makers A policy δD decision node D mapping parents D possible actions D A strategy s ordered set prescribed actions decision nodes action depends parents decision node The expression expected utility strategy s ﬁxed probability ordered set policies s δD1 δDn distribution P cid3 cid10 cid4 cid5 cid11 cid4 u paU P X cid9 cid5 cid9paX cid12 4 U U XCD X note X D value ﬁxed strategy s variable associated zeroone probabilities given s In standard inﬂuence diagrams standard LIMIDs optimal strategy strategy maximum expected utility strategies called global maximum strategies LIMIDs 44 It important pause moment consider properties LIMIDs First inﬂuence diagram LIMID decision node informed previous decisions However LIMID contains small number arcs 5 In paper variables ﬁnitely values D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1359 Fig 8 A simple inﬂuence diagram strategies decision nodes number possible strategies small compared number strategies inﬂuence diagram identical graph Hence number arcs decision nodes critical parameter LIMID Another important property LIMIDs decision nodes necessarily ordered decision maker contemplating particular decision node clue decisions implemented decisions reached The lack ordering decisions LIMIDs brings point missed literature Namely LIMIDs intrinsically inappropriate consequentialist behavior Clearly decision maker enumerate strategies LIMID select strategy maximum expected utility presumably follow way resolute manner A consequentialist behavior harder context LIMID Suppose decision maker seats decision node considering future moves attempt evaluate current decision consequentialist position But decision maker know future moves LIMID There decisions ordered respect current decision way examine relative value strategies consider possible orderings This possible considering set strategies outset resolute decision maker Indeed popular algorithm Single Policy Update SPU 44 ﬁnds non optimal strategies LIMIDs updating policies given order resulting strategies guaranteed optimal importantly reasoning SPU given consequentialist justiﬁcation For reason attempt paper adapt SPU LIMIDs imprecise probabilities contrary use direct multilinear formulation strategyselection problem Note version SPU indecisionresistant criteria diﬃcult conceive decision node yield single policy version SPU indecisionprone criteria possible For reasons paper interested LIMIDs temporal order decisions consider consequentialist behavior Such assumption LIMIDs clearly limits scope models use noted resulting class LIMIDs substantially larger class inﬂuence diagrams ordering decisions set strategies allowed LIMID necessarily require decision node aware previous decisions ordering That number possible strategies LIMID substantially smaller number strategies inﬂuence diagram identical structure In fact reason focus ordered LIMIDs exactly limit number possible strategies compared inﬂuence diagrams proper Example 9 Consider Fig 8 Suppose A possible outcomes D1 possible actions A policy D2 speciﬁes action conﬁguration parents If D2 possible actions 216 policies In general m conﬁgurations n actions generate nm policies This example shows number policies grows quickly exponentially decision nodes depend parents In case search optimal strategies easily intractable For instance suppose intend apply Maximality criterion total nm2 optimization programs evaluate As noted approach strategy selection use consequentialist backward induction process resort variant SPU approximate scheme The algorithm proceeds decision node ﬁrst building strategies execution selecting admissible actions conﬁguration paD combining selected actions The subtle point indecisionprone criteria consider admissible policy decision node D long algorithm iterates This approach save computations ways 1 computations locally need consider variables graph optimization programs smaller 2 number selected actions smaller n reduce number possible policies considered Algorithm 6 summarizes idea Once fact adopt consequentialist position understood algorithm viewed mix algorithm policy selection standard inﬂuence diagrams consequentialism natural previous algorithms decision trees In Algorithm 6 track list Si associated decision node D The list Si hold set substrategies suggested indecisionprone criteria It contains admissible substrategies evaluated criterion rooted D Si δD δDm The initialization line 2 indicates previous ﬁrst iteration substrategy As 1360 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Algorithm 6 InﬂuenceDiagram_criterion Input An inﬂuence diagram D described Section 51 set DK constraints probability values Output A set strategies selected criterion 1 2 3 4 5 6 7 8 9 m Number decision nodes Sm1 D D m 1 Gi Required variables evaluate actions D Ai CombineActionsD Si1 foreach conﬁguration πk paD Ki GenerateConstraintsD Ai πk Gi DK Admissibleπk Criterion_criterionAi Ki Si CombineSubstrategies Admissible Si1 10 return Criterion_criterionS1 K1 pointed evaluate action given decision node need consider variables graph This exactly line 4 Algorithm 6 First note utility node U relevant decision D exists directed path connecting D U Then use standard dseparation algorithm 63 obtain needed variables set variables dseparated set Ui utility nodes relevant D given set D paD observed decision node clamped selected action6 The function CombineActions takes list substrategies Si1 attaches action D s Si1 Suppose Example 9 admissible policies D2 decision node D1 function CombineActions returns Ai possible combinations These combined actions evaluated criteria choice building policies decision node D We rely criteria reducing number admissible policies This inner loop The function GenerateConstraints responsible creating constraints probabilities passed func tion Criterion_criterion This function encode state space decision trees encode constraints probability values based input constraints DK Differently decision trees constraints Ki account fact lowerupper expectations 1 restricted variables Gi 2 conditional set observed nodes D paD Thus new element minimizemaximize conditional expectations introducing auxiliary variable z new constraint cid3 Ui Gi Ei P GiuUi z P Ei 0 5 Ei denotes set nodes observed D This constraint forces z desired conditional expectation Hence inner loop Algorithm 6 builds optimization programs decision trees Expression 5 symbolic form necessary The function CombineSubstrategies responsible building Si It receives set admissible actions set substrategies S i1 builds possible policies D appends substrategies S i1 The complexity algorithm obviously depends criteria choice For indecisionresistant criteria al ways consider optimal policy decision node consequently strategy similar inﬂuence diagrams precise probabilities This best case indecisionprone criteria criterion se lective The worst case happens criterion discard action This implies need consider possible combination policies long proceed backward fashion ﬁrst decision node strategies resolute decision maker 52 Examples experiments The algorithm presented previous section implemented run wellknown examples Most implementation coded Java language calls optimization packages multilinear programming package Multilin 17 CPLEX Minos commercial packages respectively linear nonlinear optimization Tests run microcomputer dualcore processors 4 GBytes memory We report character selected strategies computational effort spent select strategies We start classic oil wildcatter problem 56 small inﬂuence diagram indicate steps algorithm Example 10 The oil wildcatter problem depicted Fig 9 An oil wildcatter decide drill drill decision D The cost drilling 70K If decision drill soil soaking wet dry return 6 Due independence relations inﬂuence diagrams LIMIDs viewed extended Bayesian networks 106364 Our framework viewed extended credal network dseparation applies D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1361 Amount oil O Test S dry wet soaking ns os cs 060 065 030 035 010 010 025 030 010 010 040 040 025 030 040 045 045 050 Fig 9 Inﬂuence diagram oil wildcatter problem probability intervals seismic test given oil 270K 120K 0 respectively Suppose probabilities oil O P O soaking 02 02 P O wet 03 035 P O dry 045 05 At cost 10K oil wildcatter seismic soundings site The result test S ns oil os oil cs abundance oil interval probabilities Fig 9 If test conducted P S sO 1 S nt P SO 0 nt special value S indicates absence test To select strategies start decision D node U 2 required nodes U 1 returned GetdCon nected The expected utility drilling 000 regardless S The expected utility drilling depends S To compute lower expected utility drilling given S ns minimize auxiliary variable z subject constraints probabilities cid3 O P O P S nsO T uD yes O z P S ns 0 Running similar multilinear programs obtain S ED yesS ED yesS nt 2000 2600 ns 3276 2127 os 3286 5000 cs 8261 9129 Using Γ Maximix criterion η 05 ﬁnd action drill admissible seismic test indicates ns Thus policy δ D S yes As Γ Maximix criterion speciﬁes policy D policies analyze T δT yes δT The overall utility given sum U 1 U 2 obtain ET yes 10K 10K 3175K 3723K 2175K 2723K ET 0 0 20K 26K 20K 26K The selected action T seismic test δ yes The selected T This strategy selected Γ Maximin Γ Maximax criteria With Eadmissibility strategy s obtain D policy suggested Γ Maximix criterion At node T Eadmissible policies δT yes δT The combination optimal policies leads strategies expected utilities respectively 2175K 2723K 200K 260K Interval Dominance Maximality select strategies Eadmissibility D S ns S δ δ T δ D The inﬂuence diagram examine Breeding Pigs problem described Lauritzen Nilsson 44 represented inﬂuence diagram Fig 10 A pig breeder growing pigs period months subsequently selling During period pig develop certain disease hi represents pigs health healthy ill ith month Once month doctor makes test presence disease ti represents tests results disease free doctor treat pig disease injecting certain drug decision node di The utility nodes u1 u2 u3 represent cost treating pig u4 represents payoff selling pig Additionally price pig disease 300DKK Danish kroner diseasefree pig 1000DKK utility node u4 cost injection 100DKK utility nodes u1 u2 u3 test correct pig ill probability 080 correct pig healthy probability 090 chance nodes ti healthy pig develops disease subsequent month probability 020 injection healthy treated pig develops disease probability 010 untreated pig unhealthy remain subsequent month probability 090 similar probability 05 unhealthy pig treated chance nodes h2 h3 h4 The decision maker uncertain pigs health ﬁrst month h1 In experiments assume intervals h1 ﬁrst small interval deﬁned near probability original problem P ill 01 02 second large interval P ill 00 05 In example previous treatment test history available decisions At decision node d3 5 conditioning nodes A policy d3 speciﬁes action 32 conﬁgurations ﬁve conditioning nodes possible values An indecisionresistant criterion run 64 inferences ﬁnd best policy indecisionprone criterion track incomparable substrategies It possible large number incomparable substrategies makes impossible ﬁnish algorithm moment Now consider LIMID Breeding Pigs problem decision maker remember past decisions results tests previous months decision maker remembers result test taken current month The resulting LIMID depicted Fig 10 1362 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 Fig 10 Left Inﬂuence diagram complete history Breeding Pigs problem Right LIMID version Breeding Pigs problem Table 1 Experiments Breeding Pigs problem P h1 ill Criteria admissible strategies LIMIDs Elapsed time s LIMIDs admissible strategies IDs Elapsed time s IDs 01 02 00 05 Γ Maximin Γ Maximax Γ Maximix I Dominance Maximality Eadmissibility Γ Maximin Γ Maximax Γ Maximix I Dominance Maximality Eadmissibility 1 1 1 2 1 1 1 1 1 8 2 1 241 263 359 535 184 239 374 527 757 2342 376 414 1 1 1 16 2 2 1 1 1 7 1020 1145 1603 8995 1759 2358 1648 3223 4339 58464 Table 1 presents results criteria discussed The column labeled admissible strategies reports number strategies selected implementation column labeled Elapsed time shows average time execution thirty runs criterion An interesting fact smaller probability interval leads smaller execution times sharper probabilities smaller number incomparable substrategies process Another point note Interval Dominance Maximality run termination larger probability interval huge number strategies criteria fail discard execution A curious fact Eadmissibility crash leads relatively small number selected strategies Eadmissibility complex computationally fact selective Interval Dominance Maximality valuable practice Another curious fact Table 1 LIMID Maximality Eadmissibility faster indecisionresistant criteria This result traced computational aspects apparent superﬁcial analysis As deﬁne set maximalEadmissible actions computing exact probability values ﬁnd distribution satisfying constraints use fast approximated solver Minos produce preliminary selection actions After use exact solver Multilin compute lowerupper expectations The approximated solver quickly gets close exact solution overall computing time greatly beneﬁted It possible explain weak showing Interval Dominance requires use exact solver compute lower upper expectations compare actions7 It noteworthy Interval Dominance simple criterion apply singlestage decision problems sequential decision problems faces diﬃculties low selectivity Our ﬁnal example deals relatively large LIMID proposed Campos Ji 19 model EffectsBased Operation planning EBO The LIMID shown Fig 11 variables binary decision nodes possible actions yesno The cost actions given U i11 yes cost 50 U 3 150 U 8 80 U 10 100 U 11 20 The reward achieving main goal 1000 achieving costs 500 utility node U H The chance nodes Ci represent rate success interval probability P Ci 1D yes 09 10 The chance nodes B j Ak probability 1 parents positive probability 05 parent positive probability 0 The probability chance node G 1 given parents i1 D 7 If use solver Minos ﬁnd Iadmissible actions Interval Dominance takes 268 5670 seconds LIMID inﬂuence diagram respec tively P h1 ill 01 02 takes 945 seconds LIMID crashes inﬂuence diagram P h1 ill 00 05 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1363 Fig 11 Inﬂuence diagram EBO problem positive 06 parent negative 03 parents negative 0 Decision nodes parents extreme LIMID arbitrary ordering decision nodes adopted selecting strategies Using Γ Maximin criterion selected strategy action yes decision nodes D5 D6 D7 D8 approxi mately 40 seconds taken select The lower expected utility strategy 5528 elapsed time select approximately 40 seconds The Eadmissible strategy action yes decision nodes D 8 ap proximately 120 seconds taken select The expected utility strategy belongs 6897 330 note consequentialist Eadmissible strategy better consequentialist Γ Maximin strategy8 6 Conclusion This paper examined selection strategies sequential decision making preferences partially ordered In particular focused preference patterns encoded single utility set probability measures A partial order strategies introduces subtle ingredients decision problem criteria choice behavioral norms episodes incoherentinconsistent choice varying degrees computational gain We tried shed light matters consequentialist perspective present algorithms select strategies solving sequences optimization programs Most algorithms employ multilinear programming particular cases tackled linear programming Clearly algorithms based multilinear programming adapted handle intervalvalued utility products probabilities utilities optimized refrained discussing intervalvalued utility limit length paper The current literature sequential decision making partially ordered preferences roughly divided streams The philosophical debate tends favor abstract comparisons criteria norms little consideration computational costs On hand looks techniques involve decision making partially ordered preferences nondeterministic planning CP nets theory LIMIDs ﬁnds detailed study computational costs little attention criteria norms consistency We hope paper strikes needed balance conceptual discussion computational development helps shorten gaps viewpoints In particular believe effect consequentialist perspective currently appreciated artiﬁcial intelligence literature exactly norm adequate deal bounded agents We summarize contributions follows We ﬁrst derived new algorithmic techniques Interval Dom inance Eadmissibility insights Kyburg Pittarelli 43 independently Utkin Augustin 72 We presented brief analysis incoherent choice Interval Dominance More importantly stud ied decision trees partially ordered preferences presenting consequentialist backward induction framework multilinear linear programming instantiations noting different criteria affect computational prop erties backward induction We applied insights inﬂuence diagrams actually ordered LIMIDs technology credal networks dseparation multilinear programming possible We 8 By bruteforce enumeration strategies ﬁnd Eadmissible strategy lower expected utility 15641 upper expected utility 48000 consequentialist approach misses possibility 1364 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 presented experiments complete implementation algorithms inﬂuence diagrams Given lack literature inﬂuence diagrams indeterminacy imprecision probability values results ﬁrst step understanding powerful intricate model We noted recently Huntley Troffaes 35 Campos Ji 19 presented specialized algorithms respectively Maximality decision trees Γ Maximax inﬂuence diagrams eﬃcient algorithms discussed paper particular problems An important subject paper tackled Markov Decision Processes MDPs MDPs probably prominent model sequential decision making uncertainty use artiﬁcial intelligence today likewise beneﬁt partial preference orderings It noted initial translation framework MDPs diﬃcult fact considerable publications deal MDPs sets probability usually referred Markov Decision Processes Imprecise Probabilities 335874 The topic deserves investigation additionally questions answered partial preferences extensively MDPs deal actstate dependence choose set incomparable choices suggested criteria Maximality Eadmissibility We certainly leave avenues future exploration A necessary step detailed empirical characterization computational effort solving decision trees inﬂuence diagrams including comparison multilinear linear programming schemes possible It important characterize class inﬂuence diagrams solved reduced programs programs deal small subsets chance decision nodes passing intervalvalued expected utility There conceptual questions deserve scrutiny criteria choice behavioral norms ones investigated paper Even scope criteria discussed paper questions answer For instance produced algorithms compute Eadmissible strategies practice content Eadmissible strategy References 1 M Allais O Hagen Expected Utility Hypotheses Allais Paradox D Reidel Publishing Company Dordrecht Holland 1979 2 RJ Aumann Utility theory completeness axiom Econometrica 30 3 July 1962 445461 3 JO Berger Statistical Decision Theory Bayesian Analysis Springer New York 1985 4 D Bertsimas JN Tsitsiklis Introduction Linear Optimization Athena Scientiﬁc Belmont Massachusetts 1997 5 L Blume A Brandeburger E Dekel Lexicographic probabilities choice uncertainty Econometrica 59 1 January 1991 6179 6 B Bonet R Givan 5th International Planning Competition Nondeterministic Track participation 2005 7 C Boutilier RI Brafman HH Hoos D Poole CPnets A tool representing reasoning conditional ceteris paribus preference statements Journal Artiﬁcial Intelligence Research 21 2004 135191 8 J Breese K Fertig Decision making interval inﬂuence diagrams Sixth Conference Uncertainty Artiﬁcial Intelligence Elsevier Science New York 1990 pp 122129 9 K Bykvist Timepartial morality dynamic choice W Rabinowicz Ed Value Choice Some Common Themes Decision Theory Moral Philosophy Lund Philosophy Reports 2000 pp 5364 10 GF Cooper A method belief networks inﬂuence diagrams Proceedings 4th Conference Uncertainty Artiﬁcial Intelligence Minneapolis 1988 pp 5563 11 I Couso S Moral P Walley A survey concepts independence imprecise probabilities Risk Decision Policy 5 2 2000 165181 12 FG Cozman Separation properties sets probabilities C Boutilier M Goldszmidt Eds Proceedings 16th Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann San Francisco July 2000 pp 107115 13 FG Cozman Graphical models imprecise probabilities International Journal Approximate Reasoning 39 23 June 2005 167184 14 M Danielson L Ekenberg Computing upper lower bounds interval decision trees European Journal Operational Research 181 2 September 2007 808816 15 M Danielson L Ekenberg J Johansson A Larsson The DecideIT decision tool JM Bernard T Seidenfeld M Zaffalon Eds Proceedings 3rd International Symposium Imprecise Probabilities Their Applications Carleton Scientiﬁc Lugano Switzerland July 2003 pp 204217 16 CP Campos FG Cozman Inference credal networks multilinear programming Proceedings 2nd European Starting AI Researcher Symposium IOS Press Valencia Spain August 2004 pp 5061 17 CP Campos FG Cozman The inferential complexity Bayesian credal networks Proceedings 9th International Joint Conference Artiﬁcial Intelligence Edinburgh Scotland UK JulyAugust 2005 pp 13131318 18 CP Campos FG Cozman Inference credal networks integer programming International Symposium Imprecise Probability Theo ries Applications Prague 2007 pp 145154 19 CP Campos Q Ji Strategy selection inﬂuence diagrams imprecise probabilities Proceedings 24th Conference Uncertainty Artiﬁcial Intelligence Helsinki Finland July 2008 pp 121128 20 D Ellsberg Risk ambiguity Savage axioms The Quarterly Journal Economics 75 4 1961 643669 21 N Etchart Adequate moods NonEU decision making sequential framework Theory Decision 52 February 2002 128 22 K Fertig J Breese Probability intervals inﬂuence diagrams IEEE Transactions Pattern Analysis Machine Intelligence 15 3 1993 280286 23 PC Fishburn Utility Theory Decision Making Kriefer Publishing Company New York 1970 24 G Georgakopoulos D Kavvadias CH Papadimitriou Probabilistic satisﬁability Journal Complexity 4 1 March 1988 111 25 I Gilboa D Schmeidler Maxmin expected utility nonunique prior Journal Mathematical Economics 18 2 1989 141153 26 FJ Giron S Rios QuasiBayesian Behaviour A More Realistic Approach Decision Making University Press Valencia 1980 27 T Hailperin Best possible inequalities probability logical function events American Mathematical Monthly 72 1965 343359 28 PJ Hammond Changing tastes coherent dynamic choice The Review Economic Studies 43 1 1976 159173 29 PJ Hammond Consequentialism independence axiom BR Munier Ed Risk Decision Rationality Proceedings 3rd International Conference Foundations Applications Utility Risk Decision Theories Dordrecht Holland 1988 pp 503516 30 PJ Hammond Orderly decision theory comment Professor Seidenfeld Economics Philosophy 4 1988 272297 31 P Hansen B Jaumard Probabilistic satisﬁability Tech Rep G9631 Les Cahiers du GERAD École Polytechique Montréal 1996 32 P Hansen S Perron Merging local global approaches probabilistic satisﬁability International Journal Approximate Reasoning 47 2 2008 125140 D Kikuti et al Artiﬁcial Intelligence 175 2011 13461365 1365 33 D Harmanec Generalizing Markov decision processes imprecise probabilities Journal Statistical Planning Inference 105 1 June 2002 199213 34 RA Howard JE Matheson Inﬂuence diagrams Decision Analysis 2 3 2005 127143 35 N Huntley M Troffaes An eﬃcient normal form solution decision trees lower previsions International Workshop Soft Methods Probability Statistics 2008 pp 419426 36 L Hurwicz A class criteria decisionmaking ignorance Cowles Comission Paper 356 1951 37 H Itoh K Nakamura Partially observable Markov decision processes imprecise parameters Artiﬁcial Intelligence 171 89 2007 453490 38 JY Jaffray Rational decision making imprecise probabilities GD Cooman FG Cozman S Moral P Walley Eds Proceedings 1st International Symposium Imprecise Probabilities Their Applications Ghent Belgium June 1999 pp 183188 39 B Jaumard P Hansen MP Aragão Column generation methods probabilistic logic ORSA Journal Computing 3 2 1991 135148 40 D Kahneman A Tversky Prospect theory An analysis decisions risk Econometrica 47 1979 262291 41 D Kikuti FG Cozman Inﬂuence diagrams partially ordered preferences 3rd Multidisciplinary Workshop Advances Preference Handling 2007 42 D Kikuti FG Cozman CP Campos Partially ordered preferences decision trees Computing strategies imprecision probabilities Workshop Advances Preference Handling Edinburgh United Kingdom July 2005 pp 118123 43 HE Kyburg Jr M Pittarelli Setbased Bayesianism IEEE Transactions Systems Man Cybernetics Part A 26 3 1996 324339 44 SL Lauritzen D Nilsson Representing solving decision problems limited information Management Science 47 9 2001 12351251 45 I Levi On indeterminate probabilities The Journal Philosophy 71 1974 391418 46 I Levi The Enterprise Knowledge The MIT Press Massachusetts 1980 47 RD Luce H Raiffa Games Decisions Wiley New York 1957 48 C Luo C Yu J Lobo G Wang T Pham Computation best bounds probabilities uncertain data Computational Intelligence 12 4 1996 541566 49 MJ Machina Dynamic consistency nonexpected utility models choice uncertainty Journal Economic Literature 27 4 December 1989 16221688 50 EF McClennen Rationality Dynamic Choice Foundational Explorations Cambridge University Press Cambridge 1990 51 EF McClennen Pragmatic rationality rules Philosophy Public Affairs 26 3 1997 210258 52 TD Nielsen JY Jaffray An operational approach rational decision making based rank dependent utility 2001 unpublished manuscript available httpwwwcsaaudktdnpapersnielsenjaffray01pdf 53 TD Nielsen FV Jensen Welldeﬁned decision scenarios Proceedings Fifteenth Conference Uncertainty Artiﬁcial Intelligence Morgan Kaufmann Stockholm Sweden July 1999 pp 502511 54 J Pearl Probabilistic Reasoning Intelligent Systems Networks Plausible Inference Morgan Kaufmann Publishers Los Altos CA 1988 55 JC Quiggin A theory anticipated utility Journal Economic Behavior Organization 3 4 December 1982 323343 56 H Raiffa Decision Analysis Introductory Lectures Choices Uncertainty AddisonWesley Massachusetts 1968 57 PA Samuelson Consumption theory terms revealed preference Econometrica 15 1948 243253 58 JK Satia RE Lave Jr Markovian decision processes uncertain transition probabilities Operations Research 21 3 MayJune 1973 728740 59 MJ Schervish T Seidenfeld JB Kadane I Levi Extensions expected utility theory limitations pairwise comparisons Proceedings 3rd International Symposium Imprecise Probabilities Their Applications Lugano Switzerland July 2003 pp 496510 60 T Seidenfeld A contrast decision rules use convex sets probabilities Γ Maximin versus EAdmissibility Synthese 140 12 May 2004 6988 61 T Seidenfeld MJ Schervish JB Kadane Decisions ordering W Sieg Ed Acting Reﬂecting Kluwer Academic Publishers Dordrecht 1990 pp 143170 62 T Seidenfeld MJ Schervish JB Kadane A representation partially ordered preferences Annals Statistics 23 6 December 1995 21682217 63 R Shachter BayesBall rational pastime determining irrelevance requisite information belief networks inﬂuence diagrams Proceedings 14th Annual Conference Uncertainty Artiﬁcial Intelligence UAI98 Morgan Kaufmann San Francisco CA 1998 pp 480487 64 R Shachter Eﬃcient value information computation Proceedings 15th Annual Conference Uncertainty Artiﬁcial Intelligence UAI99 Morgan Kaufmann San Francisco CA 1999 pp 594601 65 HD Sherali CH Tuncbilek A global optimization algorithm polynomial programming problems reformulationlinearization technique Journal Global Optimization 2 1 March 1992 101112 66 HA Simon A behavioral model rational choice The Quarterly Journal Economics 69 1 1955 99118 67 R Strotz Myopia inconsistency dynamic utility maximization The Review Economic Studies 23 3 1956 165180 68 JA Tatman RD Shachter Dynamic programming inﬂuence diagrams IEEE Transactions Systems Man Cybernetics 20 2 1990 365379 69 FW Trevizan FG Cozman LN Barros Planning risk Knightian uncertainty International Joint Conference Artiﬁcial Intelligence 2007 pp 20232028 70 MCM Troffaes Decision making imprecise probabilities A short review F Cozman Ed Society Imprecise Probability Theory Appli cations Newsletter Manno Switzerland December 2004 pp 47 71 MCM Troffaes Decision making uncertainty imprecise probabilities International Journal Approximate Reasoning 45 1 2007 1729 72 LV Utkin T Augustin Powerful algorithms decision making partial prior information general ambiguity attitudes Proceedings 4th International Symposium Imprecise Probabilities Their Applications Pittsburgh Pennsylvania July 2005 pp 349358 73 P Walley Statistical Reasoning Imprecise Probabilities Chapman Hall London 1991 74 CC White III HK ElDeib Markov decision processes imprecise transition probabilities Operations Research 42 4 JulyAugust 1994 739749