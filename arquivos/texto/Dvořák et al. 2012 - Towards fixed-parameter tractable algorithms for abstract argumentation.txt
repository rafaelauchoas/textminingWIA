Artiﬁcial Intelligence 186 2012 137 Contents lists available SciVerse ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Towards ﬁxedparameter tractable algorithms abstract argumentation Wolfgang Dvoˇrák Reinhard Pichler Stefan Woltran Institute Information Systems Vienna University Technology A1040 Vienna Austria r t c l e n f o b s t r c t Abstract argumentation frameworks received lot recent years Most computational problems area intractable tractable fragments identiﬁed In particular Dunne showed problems solved linear time argumentation frameworks bounded treewidth However tractability results obtained Courcelles Theorem directly lead eﬃcient algorithms The goal paper turn theoretical tractability results eﬃcient algorithms explore potential directed notions treewidth deﬁning larger tractable fragments As byproduct sharpen known complexity results 2012 Elsevier BV All rights reserved Article history Received 16 June 2011 Received revised form 1 February 2012 Accepted 11 March 2012 Available online 13 March 2012 Keywords Abstract argumentation Fixedparameter tractability Treewidth Dynamic programming Complexity 1 Introduction Argumentation evolved important ﬁeld AI abstract argumentation frameworks AFs short introduced Dung 20 popular formalization Meanwhile wide range semantics AFs proposed overview 4 complexity analyzed depth Most computational problems area intractable 172426 importance eﬃcient algorithms tractable fragments clearly recognized 18 Such tractable fragments instance symmetric argumentation frameworks 12 bipartite argumentation frameworks 22 An interesting approach dealing intractable problems comes parameterized complexity theory based following observation Many hard problems tractable problem parameter bounded ﬁxed constant This property referred ﬁxedparameter tractability FPT One important parameter graphs tree width measures treelikeness graph Indeed Dunne 22 showed problems area argumentation solved linear time argumentation frameworks bounded treewidth This FPT result shown seminal result Courcelle 13 However stated 22 synthesizing methods indirectly Courcelles Theorem attempt develop practical direct methods The primary goal paper present new direct algorithms certain reasoning tasks abstract argumentation Clearly quest FPT results argumentation stop treewidth parameters analyzed This course lead negative results For instance considering parameter degree argument number incoming outgoing attacks Dunne 22 showed reasoning remains intractable decision This work funded Vienna Science Technology Fund WWTF project ICT08028 Austrian Science Fund FWF grant P20704N18 A short version article appeared Proceedings 12th International Conference Knowledge Representation Reasoning KR 2010 AAAI Press 2010 Corresponding author Email addresses dvorakdbaituwienacat W Dvoˇrák pichlerdbaituwienacat R Pichler woltrandbaituwienacat S Woltran 00043702 matter 2012 Elsevier BV All rights reserved httpdxdoiorg101016jartint201203005 2 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 problems given AFs incoming outgoing attacks A number parameters unexplored Hence second major goal paper explore potential parameters identifying tractable fragments argumentation In particular AFs directed graphs natural consider directed notions width obtain larger classes tractable AFs To end investigate effect bounded cycle rank 28 reasoning AFs We reasoning remains intractable consider AFs cyclerank 2 Actually directed notions width exist literature However recently shown 63331 problems hard bounded cyclerank remain hard directed variants treewidth bounded A notable exception related notion cliquewidth 14 contrast treewidth directly extended directed graphs Moreover metatheorems cliquewidth 15 Dunnes result tractability respect bounded treewidth extend AFs bounded cliquewidth details refer 27 Still main focus paper novel algorithms decision problems deﬁned socalled preferred semantics AFs Roughly speaking preferred extensions AF maximal admissible sets arguments admissible means selected arguments defend attacks To precise present algorithms following decision problems Credulous acceptance deciding given argument contained preferred extension given AF Skeptical acceptance deciding given argument contained preferred extensions given AF Ideal acceptance deciding given argument contained admissible set subset preferred extension given AF The problem ideal acceptance better known ideal semantics 21 To best knowledge FPT results ideal semantics established algorithm present paper provides result product alternatively use Courcelles metatheorem obtain result By nature running times novel algorithms heavily depend treewidth given AF linear size AF Thus AFs small treewidth algorithms expected preferable standard algorithms literature 1938 One reason chosen preferred semantics work widely Moreover admissi bility maximality prototypical properties common semantics instance complete stable 20 stage 43 semistable 10 semantics Hence expect methods developed extended semantics 11 Summary results We ﬁrst prove negative results reasoning remains intractable AFs bounded cyclerank 28 As mentioned negative result carries directed notions width We problem skeptical acceptance coNPcomplete AFs cyclerank 1 We develop dynamic programming approach characterize admissible sets AFs The time complexity algo rithm linear size AFs expected Courcelles Theorem multiplicative constant single exponential treewidth great contrast algorithms derived Courcelles Theorem This algorithm directly decide problem credulous acceptance This dynamic programming algorithm extended cover preferred semantics decide skeptical acceptance We ﬁnally adapt algorithm decide ideal acceptance 12 Structure paper In Section 2 recall basic notions results AFs discuss widthmeasures graphs We Section 3 negative results reasoning AFs parameters directed graphs bounded In Section 41 ﬁrst develop dynamic programming approach credulous acceptance AFs bounded treewidth This algorithm extended cover preferred semantics Section 42 adapted ideal acceptance Section 43 Section 5 provides ﬁnal conclusions pointers related future work 2 Background In section ﬁrst introduce argumentation frameworks graph measures want investigate frameworks 21 Argumentation frameworks We start introducing abstract argumentation frameworks 20 recall preferred ideal semantics frameworks Afterwards highlight known complexity results typical decision problems associated frameworks W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 3 Deﬁnition 1 An argumentation framework AF pair F A R A set arguments R A A attack relation We use notation cid2 b instead b R case ambiguity arises Further S A A write S cid2 resp cid2 S iff exists b S b cid2 resp cid2 b An argument A defended b A S cid2 b set S A iff b A b cid2 S cid2 b holds Finally set S A deﬁne S An AF naturally represented directed graph Example 1 Let F A R A b c d e f g R b c b c d d c d e e g f e g f The graph representation F given follows We continue basic concepts deﬁnition preferred extensions introduced Dungs seminal paper 20 concept ideal sets proposed Dung Mancarella Toni 21 Deﬁnition 2 Let F A R AF A set S A conﬂictfree F iff b S b R A set S A admissible F S conﬂictfree F S defended S F We denote collection admissible extensions F admF Deﬁnition 3 Let F A R AF A set S A preferred extension F iff S maximal wrt subset inclusion admissible set F We denote collection preferred extensions F pref F Deﬁnition 4 Let F A R AF A set S A called ideal F S admF S subset preferred extensions S P pref F P We denote collection ideal sets F idealF cid2 An admissible set S called complete argument defended S contained S It shown 21 AF F possesses unique maximal ideal set called ideal extension F set complete extension F Example 2 For AF F Example 1 admissible sets c d d g c d d g Conse quently pref F c d g idealF Thus ideal extension F Next recall complexity reasoning preferred ideal extensions To end deﬁne decision problems credulous acceptance CA skeptical acceptance SA ideal acceptance ID input AF F A R argument A CA Is contained S pref F SA Is contained S pref F ID Is contained S idealF Note problem ID equivalent deciding contained ideal extension F It known CA NPcomplete SA Π P 2 complete 1724 The reason CA located lower level polynomial hierarchy compared SA fact suﬃcient check contained admissible set given AF F Then contained preferred extension F In words maximality requirement preferred extensions come play CA For SA situation different maximality taken account leading additional source complexity The exact complexity ID open problem1 lower bound known ID coNPhard upper bound membership Θ P 2 shown 23 Hence usual complexitytheoretic assumptions SA harder decide CA ID Moreover analysis 23 suggests ID mildly harder CA As later theoretical observations extent mirrored running times algorithms 22 Parameters graphs We review notions parameters graphs directed undirected One important concepts ﬁxedparameter tractability graphs treewidth introduced Robertson Seymour 40 1 To precise 23 gives exact Θ P 2 hardness lower bound terms randomized reductions The open aspect problem random element reduction eliminated order obtain Θ P 2 hardness standard polynomialtime manyone reductions 4 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Fig 1 A tree decomposition graph Example 1 To start recall concept induced subgraph given graph G V E set A write G A V A E A A subgraph G induced A Deﬁnition 5 Let G V E undirected graph A tree decomposition G pair T X T V T ET tree X XttV T set socalled bags satisfy following conditions cid3 tV T Xt V X cover V 1 2 v V T tv Xt connected 3 v v j E v v j Xt t V T The width tree decomposition given maxcard Xt t V T 1 The treewidth graph G minimum width tree decompositions G As mentioned concept treewidth deﬁned undirected graphs applied directed graphs AFs Deﬁnition 6 Let F A R AF A tree decomposition undirected graph A R contains edges R orientation called tree decomposition F The treewidth AF F given minimum width tree decompositions F cid7 R cid7 It shown Bodlaender 7 ﬁxed w cid3 1 decided linear time graph treewidth w Moreover case positive answer tree decomposition width w computed linear time Fig 1 shows tree decomposition width 2 AF Example 1 considered undirected graph Many NPhard problems graphs shown linear time computable graphs bounded treewidth In particular Courcelles Theorem 13 provides powerful tool obtain results It states property graphs expressed Monadic SecondOrder Logic decided linear time wrt size graph graphs bounded treewidth Dunne 22 result ﬁxedparameter tractability problems CA SA parameter treewidth However certain problem treewidth area directed graphs In fact digraphs intuitively consider simply structured high treewidth As example consider acyclic digraphs form n cid3 1 cid6 cid6 1 cid4 j cid4 n cid4 a1 Gn ai j 1 cid7cid8 cid5 For n 5 Gn looks follows Seen undirected graph Gn turns clique size n Thus treewidth graphs Gn increasing n bounded constant As AFs directed graphs natural consider parameters exclusively deﬁned digraphs Indeed measures exist like directed treewidth 35 DAGwidth 6 Kellywidth 33 An old particularly interesting parameter shall focus cyclerank 28 One reason different notions fact far analogue Courcelles Theorem comparably general digraph problems2 Before giving deﬁnition cyclerank recall basic deﬁnitions graph acyclic contain cycle going distinct vertices In words selfloops considered cycles A directed graph strongly connected vertex reachable vertex graph Finally strongly connected component SCC graph G induced subgraph GS G S maximal property GS strongly connected 2 As mentioned introduction directed cliquewidth notable exception refer 27 detailed discussion W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 5 Deﬁnition 7 Let G V E directed graph The cyclerank r G deﬁned follows acyclic graph rG 0 G strongly connected rG 1 minvV rGV v If G strongly connected rG maximum cyclerank SCCs G Intuitively cyclerank corresponds maximum recursion depth procedure eliminates node SCC acyclic graph Note graphs Gn form 1 acyclic cyclerank 0 n The cyclerank particular recent results 63133 showed problems hard bounded cyclerank remain hard aforementioned parameters bounded Indeed Section 3 shall prove intractability results AFs bounded cyclerank These intractability results immediately carry parameters directed graphs For similar intractability result Dunne 22 recently shown CA SA remain intractable AFs bounded outdegree The following example illustrates class graphs bounded cyclerank comparable class graphs bounded outdegree Example 3 Let Hn V n Enncid21 family directed graphs V n x1 xn y1 yn En xi yi yi xi 1 cid4 cid4 n xi xi1 yi1 yi 1 cid4 cid4 n 1 As example graph H 5 looks follows It easy outdegrees graphs bounded 2 graphs arbitrary cyclerank As example let In V n Enncid21 family directed graphs V n x1 xn x En x xi xi x 1 cid4 cid4 n The graph I5 looks follows Each graph In cyclerank 1 graphs form In arbitrary outdegree 3 Parameters directed graphs negative results 31 Bounded cyclerank We continue prove NPhardness CA holds restrict AFs bounded cyclerank We employ reduction 17 maps instance CNF formula NPhard problem SAT argumentation framework Deﬁnition 8 Given CNF formula Φ cid9 m j1 C j C j clauses variables Z deﬁne F Φ A R cid5 A Φ C1 Cm Z Z cid5 z z z z C j Φ 1 cid4 j cid4 m R cid6 cid5 cid6 z occurs C j 1 cid4 j cid4 m Z z z Z set fresh arguments z C j cid7 cid7 cid6 cid6 z Z cid5 cid7 z C j cid6 cid6 z occurs C j 1 cid4 j cid4 m cid7 Example 4 Consider CNF formula Φ z1 z2 z3 z2 z3 z4 z1 z2 z4 Fig 2 illustrates corresponding AF F Φ For CNF formula Φ F Φ constructed polynomial time Φ satisﬁable iff argument Φ credulously accepted F Φ This gives NPhardness CA ﬁrst shown Dimopoulos Torres 17 later rephrased terms AFs Dunne BenchCapon 24 We strengthen result follows 6 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Fig 2 AF F Φ CNF formula Φ Example 4 Theorem 1 CA NPhard problem restricted AFs cyclerank 1 Fig 3 AF GΨ QBF Ψ Example 5 Proof As discussed AFs F form given Deﬁnition 8 provide valid reduction SAT CA To prove assertion suﬃcient CNF formula Φ corresponding AF F cycle rank 1 Indeed AF F following SCCs F zz z Z singletons C1 Cm Φ Obviously components F zz cyclerank 1 components cyclerank 0 Hence F constructed following Deﬁnition 8 cyclerank 1 cid2 We turn attention Π P 2 hard problem SA The following reduction QBFs AFs 24 Deﬁnition 9 Given QBF Ψ Y Z cid9 m j1 C j C j clauses variables X Y Z We deﬁne AF GΨ A R cid5 A Ψ C1 Cm X X b1 b2 b3 cid6 cid6 cid6 x X cid6 1 cid4 j cid4 m x x x x R cid6 cid5 cid7 cid6 x occurs C j 1 cid4 j cid4 m C j Ψ x C j cid5 cid7 cid5 cid7 cid5 cid7 Ψ b1 Ψ b2 Ψ b3 cid5 x C j cid7 b1 b2 b2 b3 b3 b1 cid6 cid6 x occurs C j 1 cid4 j cid4 m cid6 cid6 z Z b1 z b1 z cid7 cid5 cid7 X x x X set fresh arguments Example 5 Consider QBF Ψ y1 y2z3z4 y1 y2 z3 y2 z3 z4 y1 y2 z4 In Fig 3 depict corresponding AF GΨ As shown Dunne BenchCapon 24 following holds QBF Ψ form Ψ valid iff argument 2 hardness Ψ contained S pref GΨ Since GΨ constructed Ψ polynomial time showed Π P problem SA We strengthen result follows Theorem 2 SA Π P 2 hard problem restricted AFs cyclerank 2 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 7 Fig 4 AF HΦ CNF formula Φ Example 6 cid9 Proof We proceed similarly proof Theorem 1 Moreover allowed restrict QBFs Φ form Y Z m j1 C j C j contains occurrence atom Z validity problem QBFs obviously remains Π P 2 hard Each AF G according Deﬁnition 9 following SCCs G y y y Y GS S z z z Z C1 Cm Φ b1 b2 b3 Components G y y cyclerank 1 H GS cyclerank 2 This seen follows Removing Φ leads SCCs Hzz z Z Hb1b2b3 singletons C1 Cm All cyclerank 1 0 cid2 We turn attention coNPhard problem ID The following reduction CNF formulas AFs slightly modiﬁed version given Dunne 23 Deﬁnition 10 Given formula Φ cid9 m j1 C j CNF variables Z We deﬁne AF HΦ A R cid5 A Φ C1 Cm Z Z Ψ cid6 cid6 1 cid4 j cid4 m z z z z R cid6 cid6 z occurs C j 1 cid4 j cid4 m C j Φ z C j cid5 cid7 cid5 cid7 cid6 cid6 z Z cid5 cid7 cid5 cid7 Ψ Φ Φ Ψ z C j cid6 cid6 z occurs C j 1 cid4 j cid4 m cid7 Z Z z Z set fresh arguments Example 6 Recall CNF formula Φ Example 4 Φ z1 z2 z3 z2 z3 z4 z1 z2 z4 Fig 4 illustrates corresponding AF HΦ As shown Dunne 23 following holds formula Φ form Φ unsatisﬁable iff argu ment Ψ contained ideal extension3 Since HΦ constructed Φ polynomial time coNPhardness problem ID follows We strengthen result follows Theorem 3 ID coNPhard problem restricted AFs cyclerank 1 Proof We proceed similar proofs Theorems 1 2 Let H arbitrary AF follows Deﬁnition 10 Then H following SCCs Hzz z Z singletons C1 Cm HΦΨ Each components cyclerank 1 cyclerank 0 H constructed following Deﬁnition 10 cyclerank 1 cid2 Theorems 13 parameter cyclerank applicable ﬁxedparameter tractability considered problems However theorems leave room potential tractable fragments First consider class AFs cyclerank 0 By deﬁnition class acyclic AFs known acceptance problems 3 We note proof given Dunne works slightly modiﬁed reduction 8 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 consideration tractable acyclic AFs single preferred extension coincides socalled grounded extension details 20 It remains classify complexity skeptical acceptance AFs cyclerank 1 Using reduction AF HΦ Deﬁnition 10 immediately problem coNPhard form tractable fragment usual sense Nevertheless coNP membership holds skeptical acceptance restricted AFs cyclerank 1 Hence fragment turns computationally easier bearing mind SA Π P 2 complete general Theorem 4 SA coNP AFs cyclerank 1 Proof To prove SA coNP provide polynomialtime algorithm verifying given set preferred extension Then build coNP algorithm SA deciding complement standard guess check approach To verify set E preferred extension AF F A R ﬁrst compute SCCs build linear order S1 Sm SCCs respects partial order given attacks different components j S j cid13cid2 S Note identiﬁcation SCCs obtaining linear order polynomial time depthﬁrst search Now decide veriﬁcation problem considering SCC separately starting indef undec maps vertices S1 following linear ordering Therefore use multilabeling M V S 2 sets labels ordinary labelings L V S def undec 11 Intuitively labeling corresponds extension following way argument labeled extension An argument labeled def extension attacked argument extension Intuitively label def indicates extension defended potential attacks argument Finally argument labeled undec extension attacked argument extension Intuitively label undec indicates status argument sense undecided The multilabeling certain form initialization currently considered SCC S j j 1 results SCCs S j account ordinary labelings obtained M taking designated argument starting point ﬁnally compared candidate E The veriﬁcation algorithm Example 7 illustration given AF F A R linearly ordered SCCs S1 Sm set arguments E follows loops j 1 cid4 j cid4 m 1 First initialize multilabeling M j M ja def undec vertices S j For attack b F S b S j j set M jb M jb undec M jb M jb E E E cid13cid2 2 Identify argument x S j S j x acyclic 3 Compute labeling Ll j label l M jx follows Ll jx l vertices cid13 x S j def Ll ja M ja b S j b cid2 Ll M ja def b S j Ll jb def jb b cid2 undec 4 Verify status selected argument x labelings Ll j valid iff b S j b cid2 x Ll jb def valid iff M jx def b S j Ldef j b b cid2 x Lin j Ldef j Lundec j valid Let L j set valid labelings S j 5 Deﬁne cid14 L j L j L j Lundec 6 Veriﬁcation Reject L L j j L j Lundec j vertices S j holds La iff E continue SCC If algorithm terminates rejecting E E preferred extension To correctness veriﬁcation algorithm exploit following result form 5 Proposition 41 For E A holds E pref F iff SCC S F holds E S maximal admissible set S E S R S S satisfying argument attacked A S E Our algorithm iterates SCCs S testing conditions E preferred In Step 1 argument set M jb def excluding argument b having effect subsequent computation b S E S W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 9 restricting set S S E S labels b implementing b contained admissible sets Moreover argument b attacked A S E exclude possible The Steps 25 compute maximal admissible sets In Step 2 use fact deﬁnition crF cid4 1 iff SCC S A S R S F argument x A S S A S x acyclic We note easily polynomial time In Steps 34 compute labelings admissible ii candidates maximal By deﬁnition labeling argument labeled def iff attacked argument labeled condition M ja def ignores arguments S E S By argument labeled defended attackers labeled def 11 Further ii actually extension We obtain argument defended extension attacked A S E conditions compute Ll ja Note given label selected argument x compute labels arguments S j ﬁnite recursion fact SCC x acyclic However Step 4 check computed labels compatible label x verify computed label admissible labeling For case labeled x check x defended respect labeling Lin j Similar l def check x attacked In Step 5 address maximality valid labelings The extensions corresponding Lin clearly relation contains x extension contains attacker x On hand recursion Step 3 switching def label undec gives rise new def label Hence extension corresponding Lundec relation extensions corresponding Lin contains argument x attacker x relation Hence Lin Lundec j resp Ldef admissible labelings j Ldef maximal j Ldef j j j j j Finally Step 6 test E S corresponds maximal admissible sets cid2 Example 7 For illustration algorithm consider AF F b c d e b b c c d d e e b set E c We SCCs S1 F S2 F bcde First apply algorithm S1 Since S1 initial SCC multi labeling given M1a def undec S1 argument select x Step 2 following labelings Lin 1 1 E valid Step 4 In Step 5 obtain L valid S1 continue algorithm SCC S2 Step 3 As argument attacking Ldef Lundec 1 1 def Lundec 1 Lundec Lin As E Lin 1 Ldef For multilabeling M2 M2c M2d M2e def undec M2b def The equality holds E cid2 b In step options argument x S 2 acyclic Let consider x d We compute labelings Lin They given follows Lin 1 1 1 1 Lundec 2 2 b def Lin Ldef 2 b def Lundec 2 b def 2 c Lin Ldef 2 c Lundec 2 c 2 2 Ldef 2 d Lin Ldef 2 d def Lundec 2 2 e def Lin Ldef 2 e Lundec 2 d undec e undec 2 valid fact c cid2 d Lin The labeling Lin Ldef 2 e e E E rejected algorithm It easy c e set accepted algorithm mirrors fact c e 2 c Hence L Now Ldef 2 2 preferred extension F Remark The problem SA closely related problem deciding AF coherent 24 checking stable preferred extensions AF coincide Stable extensions AF A R deﬁned conﬂictfree sets S A S attacks argument A S In general deciding AF coherent Π P 2 complete shown reduction GΨ 24 Hence problem clearly remains Π P 2 hard AFs cyclerank 2 interested problem easier cyclerank 1 In proof Theorem 4 shown AFs cyclerank 1 decide polynomial time given set preferred extension This gives rise simple coNP algorithm deciding coherence AF First non deterministically guess set E perform polynomialtime test E preferred extension E stable extension If E preferred stable counterexample coherence Moreover coNP hardness shown reduction HΦ b Ψ b b b 10 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 32 Further directed graph measures Fig 5 An arboreal decomposition AF Example 1 In section extend hardness results popular parameters directed graphs directed tree width DAGwidth Kellywidth directed pathwidth We ﬁrst review deﬁnition directed treewidth 35 Hereby socalled arboreal decomposition built similarly tree decomposition arboreal decomposition consists tree bags sets vertices graph want decompose However contrast tree decompositions undirected graphs bags arboreal decomposition vertex labels edge labels tree The bags vertex labels build partition vertices original graph The bags edge labels vertex sets concern subtree rooted target vertex associated edge particular isolate subgraph induced union vertex bags subtree This means path starts ends leaves subgraph comes vertex edge bag The following deﬁnition makes concepts formal It convenient introduce following notation ﬁrst For t V T e u v ET write t e iff v t exists path v t T Moreover e u v ET use term e t denote u t v t holds Deﬁnition 11 Let G V E directed graph An arboreal decomposition G tuple T X Y T V T ET directed tree unique root X XttV T Y Y eeET families subsets V 1 X partition V G nonempty sets 2 e E T directed path GV Y e ﬁrst vertex Xcid2e vertex V Y e Xcid2e cid3 Xt t e contains The width arboreal decomposition maxtV t smallest width arboreal decomposition card Xt cid3 et Y e 1 The directed treewidth G denoted dtwG Example 8 Recall AF F Example 1 Below deﬁne arboreal decomposition T X W corresponding graph interpretation For simplicity identify node t T corresponding bag Xt The arboreal decomposition follows V T X c d b e f g ET c d c d b c d e e f e g Y Y y yET Y e f e Y e Y y edges ET For illustration decomposition Fig 5 We mention decomposition width 1 For example consider cycle e g f AF In decomposition cycle partitioned nodes nodes f g successors e Now given f path F f e g f starts ends bag f leaves bag Thus fulﬁll condition 2 arboreal decomposition add e g edge bag e f For similar reasons add e f edge bag e g In cases decided add e contained predecessors vertex bag e increase width generated predecessor node case increases width generated node f resp g We require explicitly deﬁnitions graph parameters mentioned paper Instead provide summary results compiled 63331 reader referred 2633 formal deﬁnitions parameters DAGwidth Kellywidth directed pathwidth W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 11 Fig 6 Propagation hardness results directed graph measures Proposition 1 Proposition 1 For directed graph G following relations hold cid4 cid4 dtwG 1 dtwG 2 cid8 3 cid4 dagwG cid4 dpwG 1 cid4 crG 1 cid8 6 cid4 kellywG cid4 dpwG 1 cid4 crG 1 dagwG kellywG dpwG denote DAGwidth Kellywidth directed pathwidth G respectively Indeed proposition allows obtain hardness results directed treewidth DAGwidth Kellywidth directed pathwidth corresponding hardness result cyclerank obtained previous subsection Fig 6 illustrates hardness result mentioned graph measures propagated graph measures The following corollaries exploit result use distinct proofarguments parameter directed treewidth Corollary 1 CA NPhard AFs directed pathwidth 1 AFs DAGwidth 2 AFs Kellywidth 2 AFs directed treewidth 1 Proof While results directed pathwidth DAGwidth Kellywidth follow directly Proposition 1 explicit proof NPhardness CA AFs directed treewidth 1 Proposition 1 provides hardness AFs directed treewidth 7 To end construct arboreal decompositions T X W frameworks form FΦ given Deﬁnition 8 V T X z1 z1 zn zn C1 Cm Φ ET Φ zi zi 1 cid4 cid4 n Φ Ci 1 cid4 cid4 m Y Y eeET Y e e ET This arboreal decomposition width 1 fact FΦ contains clique size 2 z z conclude dtwFΦ 1 cid2 12 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Corollary 2 SA Π P 2 hard AFs directed pathwidth 2 AFs DAGwidth 3 AFs Kellywidth 3 AFs directed treewidth 2 Proof As results directed pathwidth DAGwidth Kellywidth follow directly Proposition 1 construct appropriate arboreal decompositions AFs form GΨ given Deﬁnition 9 desired hardness result AFs directed treewidth 2 V T X y1 y1 z1 z1 yn yn zn zn C1 Cm Ψ b1 b2 b3 ET Ψ yi yi Ψ zi zi Ψ Ci Ψ bi Y Y eeET Ψ b1 Ψ b3 e Ψ Ci Ψ zi zi e Ψ b2 e Ψ b3 e Ψ b1 Y e One arboreal decomposition width 2 dtwGΨ 2 cid2 Corollary 3 ID coNPhard AFs directed pathwidth 1 AFs DAGwidth 2 AFs Kellywidth 2 AFs directed treewidth 1 Proof Once results directed pathwidth DAGwidth Kellywidth follow directly Proposition 1 To hardness AFs directed treewidth 1 arboreal decompositions AFs form HΦ Deﬁnition 10 V T X z1 z1 zn zn C1 Cm Φ Ψ ET Φ zi zi 1 cid4 cid4 n Φ Ci 1 cid4 cid4 m Y Y eeET Y e e ET One arboreal decomposition width 1 presence cliques size 2 dtwHΦ 1 follows cid2 To summarize shown parameters cyclerank directed treewidth DAGwidth Kellywidth directed pathwidth applicable ﬁxedparameter tractability results Hence observe directed graph measures generalizing treewidth suited reasoning problems CA SA ID AFs An explanation obstacle argumentation semantics based conﬂictfreeness extension undirected property orientation attacks play role captured W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 13 measures discussed subsection As standard reasoning tasks computationally easy maximal conﬂict free sets expect conﬂictfreeness harm searching tractable fragments But problems hard conﬂictfree sets For instance problem counting maximal conﬂictfree sets P hard originally shown Valiant 41 terms counting maximal cliques recently applied abstract argumentation 3 Thus Phardness result evidence existence tractability results based directed graph measures The results leave space tractable fragments bounding directed treewidth DAGwidth Kellywidth directed pathwidth 0 1 2 Taking minimal bounds account deﬁnition 0 directed pathwidth directed treewidth resp 1 DAGwidth Kellywidth leads acyclic AFs trivially tractable Moreover Corollary 3 skeptical acceptance coNPhard AFs directed pathwidth 1 DAGwidth 2 Kellywidth 2 directed treewidth 1 We leave exact complexity classiﬁcation particular fragments open problems We come parameter treewidth contrast parameters discussed section allows ﬁxedparameter tractability results In fact section present novel algorithms exploit feature 4 Dynamic programming argumentation Before introduce algorithms need notation tree decompositions In particular useful reduce number different node types identify root node The following concept serves purpose Deﬁnition 12 A tree decomposition T X graph G called nice T rooted tree node4 t T following types 1 LEAF t leaf T Xt Xtcid7 v v Xtcid7 2 FORGET t child t cid7 Xt Xtcid7 v v Xtcid7 3 INSERT t child t cid7cid7 Xt Xtcid7 Xtcid7cid7 4 JOIN t children t cid7 t cid7 Kloks 37 showed tree decomposition T X graph G T n nodes transformed time O n nice tree decomposition T cid7 X cid7 G width T X T cid7 O n nodes Next introduce technical notions allow direct access objects associated certain nodes tree decomposition Deﬁnition 13 For tree decomposition T X AF F t T let Xcid2t union bags Xs X s occurs subtree T rooted t Moreover Xt denotes Xcid2t Xt We use following terminology Ft F Xt subframework t F cid2t F Xcid2t subframework induced subtree rooted t Note subframework induced root decomposition AF F F Example 9 For AF F Example 1 depicted tree decomposition Fig 1 To obtain nice tree decomposition introduce nodes To node bag c d join node add new nodes JOIN node node bag c d JOIN node node bag d e having bag c d Further add new nodes remaining nodes type insert forget For instance nodes bags b b c insert node bag b We added forget nodes c d node order root The resulting nice tree decomposition F illustrated Fig 7 read follows In node t bag Xt contains arguments solid cycles In addition depict node t AF Ft subframework t adding dotted parts graph obtain F cid2t subframework induced t In follows restrict nice tree decompositions bag root Unless stated assume T X denotes nice tree decomposition root bag given AF F 41 Characterizing admissible sets We ﬁrst introduce relativization admissible sets given set B arguments 4 For T V T ET write t T instead t V T 14 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Fig 7 Tree decomposition F subframeworks Deﬁnition 14 Let F A R AF B set arguments A set S A Brestricted admissible set F S conﬂictfree F S defends F A B Example 10 Let consider AF cid5 e g g f f e e f g cid4 cid7cid8 subframework running example Indeed tree decomposition Fig 7 subframework n13 subframework induced n12 The grestricted admissible sets AF e g In fact f grestricted admissible g cid2 f f defend g Note A B Brestricted admissible sets AFs A R standard admissible sets A B Brestricted admissible sets conﬂictfree sets We introduce underlying data structure dynamic programming algorithm characterizing admissible sets The idea store node t tree decomposition T X given AF F set candidates represented solely elements bag Xt More precisely assign node t T certain set mappings C Xt att def We mappings colorings t The rationale coloring t follows explicitly coloring characterizes set cid5 cid6 cid7 cid6 Ca C values att def tell relationship C remaining arguments Xt C In fact att denote arguments attack C attacked C def denotes arguments attacked C relation arguments C However deﬁne colorings way characterize sets Xcid2t Xt sketched Formally intuition captured follows Deﬁnition 15 Let T X tree decomposition AF F t T Given coloring C node t T deﬁne etC collection Xt restricted admissible sets S F cid2t satisfy following conditions Xt W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 15 Ca iff S ii Ca def iff S cid2 iii Ca att iff S cid13cid2 cid2 S iv Ca iff S cid13cid2 cid13cid2 S If etC cid13 C called valid coloring t The set valid colorings t denoted Ct Example 11 Consider node t n11 example tree decomposition Xt d e f righthand tree Fig 7 coloring C Cd Ce C f def We F cid2t d e f g d e e g g f f e Xt g The set Xt restricted admissible F cid2t satisﬁes conditions Deﬁni tion 15 d g S d Xt restricted admissible violates condition ii C f def S cid13cid2 f In summary particular C valid t n11 etC d g Our ultimate goal eﬃciently compute set Cr valid colorings root node r given tree decomposition AF F A R The reason fact etC gives exactly set Xt restricted admissible sets CCt F cid2t Since root r bag Xr A obtain Cr characterizes admissible sets F cid3 By deﬁnition element etC Xt restricted admissible set F cid2t Next opposite direction holds Lemma 1 Let T X tree decomposition AF F t T S Xt restricted admissible set F cid2t Then coloring C Ct S etC Proof Since S Xt restricted admissible set F cid2t argument Xt satisﬁes following conditions S ii S cid2 iii S cid13cid2 cid2 S iv S cid13cid2 cid13cid2 S For cases deﬁne C follows case Ca case ii Ca def case iii Ca att case iv Ca By construction C set S satisﬁes conditions iiv Deﬁnition 15 S Xt restricted admissible F cid2t holds S etC cid2 Moreover different colorings node t characterize different Xt restricted admissible sets F cid2t Lemma 2 Let T X tree decomposition AF F let C C cid7 different colorings node t T Then etC etC cid7 Proof Suppose contrary set S etC etC exists argument Xt Ca cid13 C derive contradiction case First let consider case Ca C Ca implies S C Ca def C S cid13cid2 contradiction Finally case Ca att C cid2 S C arguments cid2 different colorings t Then cid7a cid7a def att By Deﬁnition 15 cid7a def att implies S contradiction We continue case cid7a att implies cid7a contradiction fact Ca att implies cid7a implies cid13cid2 S The remaining cases follow symmetry interchanging roles C C cid7a att By Deﬁnition 15 Ca def implies S cid2 On hand C cid7a It remains inspect possible pairs values Ca C cid7 C C cid7 cid7 To guarantee ﬁxedparameter tractability respect treewidth want compute sets Ct bottomup manner tree decomposition explicit computation et Therefore recursively deﬁne concept vcolorings equivalent valid colorings Deﬁnition 16 Let t T node nice tree decomposition T X AF F let t possible children t The operations C C C C cid3 D deﬁned Fig 8 Depending node type t deﬁne vcoloring t follows cid7cid7 cid7 t LEAF node Each coloring Xt att def y cid2 x Cx C y att def Cx att y C y x cid2 y Cx def y C y y cid2 x holds x Xt vcoloring t 16 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 C ab Cb b X Cb def att def C ab C ab C cid2 Db att def att b X b C cid3 b C cid13cid3 cid3 C b Cb cid13 b b F Cb def cid13 b Cb b F b F Cb Db Cb Db Cb def Db def Fig 8 Operations colorings C D X att def AF F FORGET node If C vcoloring t cid7 INSERT node If C vcoloring t hold C vcoloring t cid7 JOIN node If C vcoloring t cid7 Xt Xtcid7 Ca cid13 att C vcoloring t Xt Xtcid7 C vcoloring t cid13cid2 C cid13cid2 cid13cid2 C D vcoloring t cid7cid7 C D C cid3 D vcoloring t In follows adequacy vcolorings match concept valid colorings illustrate functioning running example We stepbystep distinguishing different node types Example 12 Recall AF Example 1 tree decomposition Fig 7 Fig 9 illustrates bottomup computation vcolorings nodes tree decomposition More precisely node t table representing vcolorings t row gives vcoloring Below discuss transitions children parent nodes deﬁned vcolorings cf Deﬁnition 16 For moment let aspects Fig 9 For better understanding added column Fig 9 cardinalities sets etC number Xt restricted admissible sets F cid2t characterized vcoloring C t In particular root end 8 sets refer admissible sets example AF Example 1 An explanation cid5 symbol tables Fig 9 follows later Example 17 shall illustrate decide CA concept vcolorings Let start LEAF nodes We ﬁrst desired result provide illustration computation vcolorings leaf node running example Lemma 3 For LEAF node tree decomposition AF valid colorings vcolorings coincide Proof Let T X tree decomposition F t leaf T We Xt Xt restricted admissible sets F cid2t coincide conﬂictfree sets First let C vcoloring t We C valid coloring t Suppose contrary C conﬂictfree Ft F cid2t C violates conditions iiiv Deﬁnition 15 It easy check cases conditions C vcoloring violated For instance conﬂict C exist arguments x y Xt x cid2 y Cx C y Hence ﬁrst condition Deﬁnition 16 vcolorings LEAF node violated contradiction Now suppose C valid coloring t C satisﬁes conditions iiv coloring Deﬁnition 15 C conﬂictfree F cid2t Then C satisﬁes condition vcoloring LEAF node according Deﬁnition 16 For instance let x y Xt Cx y cid2 x Then C coloring case ii case iii Deﬁnition 15 applies C y att def holds cid2 Example 13 Consider instance LEAF node n13 Fig 9 bag e f g We vcolorings n13 correspond conﬂictfree restricted admissible sets F cid2n13 e f g e g g f f e e f g We proceed FORGET nodes W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 17 Fig 9 Computation vcolorings example AF Lemma 4 For FORGET node t tree decomposition AF child node t following relationships hold cid7 Xt Xtcid7 S A 1 If S Xt restricted admissible set F cid2t S Xtcid7 restricted admissible set F cid2tcid7 2 If S Xtcid7 restricted admissible set F cid2tcid7 S S Xt restricted admissible set F cid2t 3 If S Xtcid7 restricted admissible set F cid2tcid7 S S defends including case attack S S Xt restricted admissible set F cid2t Proof First Xt Xtcid7 F cid2t F cid2tcid7 Xt Xtcid7 Let S Xt restricted admissible set F cid2t F cid2tcid7 S conﬂictfree F S defends b Xt By Xt Xtcid7 S defends b Xtcid7 Hence S Xtcid7 restricted admissible set F cid2tcid7 assertion 1 follows 18 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Now assume S Xtcid7 restricted admissible set F cid2tcid7 S Then S conﬂictfree F S defends b Xtcid7 Strictly speaking S defends b Xtcid7 S By Xtcid7 S Xt S recall assuming S S Xt restricted admissible set F cid2t This proves assertion 2 Finally assume S Xtcid7 restricted admissible set F cid2tcid7 S S defends Since S Xtcid7 restricted admissible conﬂictfree F defends b Xtcid7 Moreover Xt Xtcid7 assumption S defends Hence S defends b Xt Thus S Xt restricted admissible assertion 3 follows cid2 Next exploit property vcolorings valid colorings coincide forget nodes Lemma 5 For FORGET node t tree decomposition AF valid colorings vcolorings coincide coincide child node t t cid7 Proof Let T X tree decomposition F A R t FORGET node T t Xt Xtcid7 A Moreover Xcid2t Xcid2tcid7 Xt Xtcid7 cid7 Let C valid coloring t We exists valid coloring C cid7 cid7 deﬁne C C follows For b Xt Xtcid7 set C cid7a C C cid7 In order deﬁne C cid7 We C cid7b Cb Hence matter value def assign cid7a cid13 att C C t cid7a consider arbitrary set S etC distinguish cases cid7 child node t By deﬁnition 1 If S set C F cid2tcid7 F cid2t Lemma 4 Moreover S etcid7 C chosen S conditions iiv Deﬁnition 15 Hence assumption C C C cid7 vcoloring t deﬁnition cid7a Since S Xt restricted admissible F cid2t Xtcid7 restricted admissible seen valid coloring t vcoloring t 2 Now let S If S cid2 set C cid7 Note case S cid13cid2 cid2 S occur assumption S Xt restricted admissible F cid2t By cid7 reasoning C cid7a def If S cid13cid2 cid13cid2 S set C cid7a In cases S etcid7 C C vcoloring t cid7 C resp t cid7 cid7 cid7 cid7 cid7 cid7 By assumption C cid7 Now let C vcoloring t exists vcoloring C cid7a cid13 att valid coloring t happen cid2 S S cid13cid2 hold But S Xt restricted admissible F cid2t Lemma 4 S etC Thus C Ct cid2 cid7 S Xtcid7 restricted admissible F cid2tcid7 F cid2t Since C Hence exists S etcid7 C cid7a cid13 att C C C t cid7 cid7 cid7 Example 14 Let continue running example started computing vcolorings node n13 The g The vcolorings n12 obtained node n12 n13 type FORGET removes argument g Thus Xn12 vcolorings n13 exception coloring C C f Here Cg att violates construction FORGET node Intuitively C f propagated f attacked argument g longer present Xn12 Hence properties 2 3 tree decompositions g attacked argument outside Xcid2n12 Therefore C f extended admissible set bottomup traversal extension C f arguments outside Xcid2n12 defend attack g f The F cid2n13 Example 10 vcolorings n12 accordance Xn12 restricted admissible sets F cid2n12 analyzed exactly situation The nodes want consider type INSERT Lemma 6 For INSERT node t tree decomposition AF child node t following relationships hold cid7 Xt Xtcid7 S A 1 If S Xt restricted admissible set F cid2t S Xtcid7 restricted admissible set F cid2tcid7 2 If S Xtcid7 restricted admissible set F cid2tcid7 S Xt restricted admissible set F cid2t 3 If S Xtcid7 restricted admissible set F cid2tcid7 S conﬂictfree F cid2t S Xt restricted admissible set F cid2t Proof By assumption Xt Xtcid7 Xtcid7 Thus Xcid2t Xcid2tcid7 Xt Xtcid7 hold By properties 2 3 tree decompositions know attacks new argument arguments Xt First let S Xt restricted admissible set F cid2t By Xt Xtcid7 set S Xtcid7 restricted admissible F cid2t Moreover attack argument Xtcid7 S Xtcid7 restricted admissible F cid2tcid7 course S S S admissibility property trivial This proves assertion 1 Now consider Xtcid7 restricted admissible set S F cid2tcid7 Then S conﬂictfree F Moreover explained attacks new argument arguments Xt Hence argument affect W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 19 second condition Xt restricted admissible set Thus S S case conﬂictfree Xt restricted admissible sets F cid2t This proves assertions 2 3 cid2 Lemma 7 For INSERT node t tree decomposition AF valid colorings vcolorings coincide coincide child node t t cid7 Proof Let T X tree decomposition F A R t INSERT node T t Xt Xtcid7 Xtcid7 cid7 child node t Moreover let Let C valid coloring t exists Xt restricted admissible set S etC F cid2t Then Lemma 6 S S Xtcid7 restricted admissible F cid2tcid7 As proof Lemma 1 construct coloring C etcid7 C t cid7 cid7 cid7 follows For arbitrary b Xtcid7 deﬁne b S b S S cid2 b b S b cid2 S S cid13cid2 b b S b cid13cid2 S S cid13cid2 b cid7b C cid7b def C cid7b att C cid7b C cid7 Ctcid7 assumption vcoloring t cid7 holds S Hence C vcoloring t cid7 Thus C C C Moreover easy check C C cid7 holds S Now let C vcoloring t exists vcoloring C valid coloring exists Xtcid7 restricted Xt restricted admissible set S etcid7 C cid7 Moreover set S conﬂictfree F cid2t S etC t cid7 C easy check S etC Thus C C cid7 C cid7 valid coloring t cid2 cid7 C C cid7 C C cid7 By assumption cid7 F cid2tcid7 It cid7 cid7 cid7e att C cid7 Example 15 We continue running example node n11 type INSERT adds d Consider coloring C cid7 f def We possibilities add d In case want d set obtain n12 C coloring C Cd Ce def C f def note e changes color defeated attacker seen coloring Example 11 The possibility d set resulting coloring C cid7cid7d C cid7cid7e att C cid7cid7 f def C cid7cid7 Lemma 8 For JOIN node t tree decomposition AF valid colorings vcolorings coincide coincide child nodes t Proof Let T X tree decomposition F A R t JOIN node T successors t cid7cid7 t Xcid2tcid7 Xcid2tcid7cid7 Xt Xcid2t Xcid2tcid7 Xcid2tcid7cid7 So partition Xcid2t disjoint sets Xtcid7 Xtcid7cid7 Xt Thus X set S Xcid2t seen union sets S1 Xcid2tcid7 S2 Xcid2tcid7cid7 S1 Xt S2 Xt The following lemmas identify important properties sets S1 S2 Then Xt X t cid7 cid7cid7 cid7 t Lemma 9 Let S1 Xcid2tcid7 S2 Xcid2tcid7cid7 1 S1 Xtcid7 restricted admissible F cid2tcid7 2 S2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 3 S1 Xt S2 Xt Then S S1 S2 Xt restricted admissible set F cid2t Proof By properties 2 3 tree decompositions attacks argument sets Xtcid7 Xtcid7cid7 In order S S1 S2 Xt restricted admissible prove S conﬂictfree AF F cid2t b S defends attacks arguments Xt Xtcid7 Xtcid7cid7 F cid2t Suppose contrary conﬂict cid2 b b S Then b Xcid2tcid7 resp b Xcid2tcid7cid7 Xcid2tcid7 b Xcid2tcid7cid7 vice versa In case b Xcid2tcid7 b S1 S1 conﬂictfree F cid2tcid7 contradiction assumption 1 argument applies case b Xcid2tcid7cid7 Thus assume Xcid2tcid7 b Xcid2tcid7cid7 vice versa Since attacks argument Xtcid7 argument Xtcid7cid7 hold Xt b Xt Hence b Xcid2tcid7 b Xcid2tcid7cid7 holds Assuming S1 Xt S2 Xt means conﬂict S1 S2 yielding contradiction assumption 1 2 b We arguments S1 defended S arguments Xt F cid2t The analogous result S2 follows symmetry In total argument S defended S arguments Xt Together result derive desired result S Xt restricted admissible set F cid2t By assumption S1 defends Xtcid7 F cid2tcid7 Xtcid7 F cid2t Moreover attacks Xtcid7cid7 Xtcid7 F cid2t properties tree decompositions So Xtcid7cid7 attack arguments S1 Xt Thus S2 20 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 defends S1 Xtcid7cid7 S1 Xt S2 Xt assumption S2 defends attacks Xtcid7cid7 F cid2tcid7 F cid2t Putting S S1 S2 defends S1 Xt F cid2t cid2 Lemma 10 Let S Xt restricted admissible set F cid2t S1 S Xcid2tcid7 S2 S Xcid2tcid7cid7 Then 1 S1 Xtcid7 restricted admissible F cid2tcid7 2 S2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 3 S1 Xt S2 Xt Proof Let S Xt restricted admissible set F cid2t Assumption 3 immediate fact Xcid2tcid7 Xcid2tcid7cid7 Xt Moreover S conﬂictfree F cid2t subset S conﬂictfree subframework F cid2t particular S1 S Xcid2tcid7 conﬂictfree F cid2tcid7 S2 S Xcid2tcid7cid7 conﬂictfree F cid2tcid7cid7 It remains S1 resp S2 defends attacks Xtcid7 resp Xtcid7cid7 F cid2tcid7 resp F cid2tcid7cid7 Suppose contrary exists Xtcid7 cid2 S1 S1 cid13cid2 F cid2tcid7 Since S Xt restricted admissible F cid2t know S cid2 F cid2t Hence exist argument b S S1 S Xtcid7cid7 b cid2 F cid2t But observed earlier attacks Xtcid7 Xtcid7cid7 contradiction By symmetry S2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 cid2 Proof Lemma 8 continued We valid colorings vcolorings JOIN node t coincide First let C cid7 cid3 C cid7cid7 By assumption C cid7 vcoloring t C C cid7cid7 Moreover valid colorings respective nodes t C cid7cid7 S1 Xt S2 Xt Thus Lemma 9 S S1 S2 Xt restricted admissible It remains C S etC To end check conditions iiv Deﬁnition 15 satisﬁed Xt cid7 Hence exist S1 etcid7 C cid7 C cid7 S2 etcid7cid7 C vcoloring t cid7cid7 cid7 C resp C cid7 C C resp t t cid7cid7 cid7cid7 cid7cid7 cid7cid7 cid7 By deﬁnition cid3operator Fig 8 Ca iff C cid7a C cid7cid7a This turn equivalent S1 S2 In total Ca iff S ii Ca def iff C iii By branch Fig 8 Ca att iff C cid7a def C cid7cid7a def Fig 8 iff S1 cid2 S2 cid2 iff S cid2 cid7cid7a cid13 def This turn equivalent cid2 S1 cid2 S2 S1 cid13cid2 S2 cid13cid2 In total Ca att iff cid2 S S cid13cid2 cid7cid7a att C cid7a cid13 def C cid7a att C iv Ca iff C cid7a C cid7cid7a Fig 8 iff cid13cid2 S1 cid13cid2 S2 S1 cid13cid2 S2 cid13cid2 iff cid13cid2 S S cid13cid2 cid7 cid7 cid7 cid7cid7 C valid colorings respective nodes t Now assume C valid coloring t exists S etC We deﬁne S1 S Xcid2tcid7 S2 S Xcid2tcid7cid7 Then Lemma 10 S1 Xtcid7 restricted admissible F cid2tcid7 S2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 S1 Xt S2 Xt As cid7cid7 Then proof Lemma 1 deﬁne coloring C C assumption vcolorings C holds To prove claim node Now deﬁne vcoloring C Ca Xt This equality shown distinguishing possible values def att C exploiting conditions iiv Deﬁnition 15 deﬁnition cid3 operator Fig 8 We work case nodes The remaining cases treated analogously Inspecting deﬁnition cid3 Fig 8 cid7cid7a This turn equivalent S1 S2 On hand shows C condition Deﬁnition 15 Ca iff S By deﬁnition S 1 S2 equivalent S1 S2 In total C iff Ca cid2 S1 etcid7 C node t We claim C coloring C cid7cid7 cid7 cid7 S2 etcid7cid7 C cid7a C iff C C cid7 cid3 C t t t cid7cid7 cid7cid7 cid7cid7 cid7 cid7 C cid7cid7 extensions coincide intersection Xcid2n3 Example 16 The node type JOIN example node n2 combines subframeworks F cid2n3 F cid2n8 cid7cid7d def As cid7cid7c C Consider coloring C Xcid2n8 join colorings causing C cid7cid7 conﬂict Thus obtain C Cc Cd def node n12 Now let consider coloring D node n8 cid7cid7 c d conﬂict cid7 cid13 D D Hence pair C cid7cid7 set C cid7cid7d We C lead vcoloring node n12 node n3 coloring C cid7cid7c def D node n8 C cid7d C cid7c C cid7 D cid7 D cid7cid7 cid7cid7 Lemmas 38 vcolorings provide exactly information valid colorings The following result immediately follows structural induction given nice tree decomposition Theorem 5 Let T X nice tree decomposition AF F A R Then coloring C node t T holds C valid coloring t iff C vcoloring t Let credulous acceptance performed vcolorings We mark coloring assigns value argument interested accordingly pass mark root In words mark coloring constructed marked coloring If coloring root mark know credulous acceptance argument holds W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 21 Example 17 Recall computation Example 12 Fig 9 We consider problem deciding argument d credulously accepted The argument d introduced nodes n3 n11 mark vcolorings C satisfying Cd illustrate cid5 column table Consider instance node n8 colorings cid7 1d C1c C1d def C2c def C2d C3c C3d The child node n9 colorings C cid7 c 2d ﬁrst marked credulous acceptance As C2 constructed marked C C marked C1 C3 constructed C cid7 1 C2 C c marked c C3 C cid7 1 cid7 2 C1 C cid7 2 cid7 2 Since vcolorings computed eﬃciently bounded bag size obtain following result algorithm assuming AFs come nice tree decomposition suitable width The upper bound time complexity obtained considering maximum number vcolorings node assuming straightforward method nested loops computing nodes vcolorings vcolorings child nodes Theorem 6 Deciding CA AF F A R treewidth k 1 time O 10k k A Proof Let T X tree decomposition AF F A R First observe number colorings node t T bounded 4k k arguments Xt X 4 colors def att assign arguments We assume set vcolorings node t stored table 4k rows Each row contains coloring plus additional bit indicates coloring vcoloring We assume given coloring C ﬁnd corresponding row table time O k We computing vcolorings node t T feasible time O 10k k single bottomup traversal T Since number nodes T assumed bounded O A desired upper bound theorem follows immediately We prove upper bound O 10k k time needed node t T distinguishing types nodes nice tree decomposition At LEAF node t inspect coloring C table t check time O k2 C vcoloring conﬂictfree To end simply consider pairs arguments bag This yields bound O 4k k2 For FORGET node t iterate vcolorings C cid7a cid13 att cid7 time O k Then access time O k coloring C If case compute coloring C C table t set vcoloringbit In total compute vcoloringtable t time O 4k k An INSERT node t treated similarly check C successor node t C cid7 cid7 cid7 cid7 cid7cid7 In JOIN node t vcolorings computed combining colorings successors t In naive implementation 4k 4k 42k 16k pairs exist However 10k pairs considered By cid7cid7 For appropriate data structures implement join consider pairs C instance sort colorings tables t lexicographical order treating 1 values cid7 contiguous rows This sorting requires def att 0 In sorted table colorings D D time O 4k k D D cid7cid7 C cid7 C t t cid7 C cid7 For m Let C coloring k arguments m cid4 k arguments mapped Then argument Ca cid13 cid7 choose color def att effecting set C Thus exist 3km different colorings C 3km colorings C C C ﬁrst table mapping m arguments Each colorings combined 3km colorings second cid8 3km 3km join pairs produced colorings map m arguments The sum table Hence 9m 10k equality follows combinatorial identity possible m yields desired upper bound total number join pairs different choices m arguments cid15 k m0 cid15 k m0 3m 3m k m k m k m k m k m cid8 cid4 cid8 cid4 cid4 cid8 cid8 cid4 cid8 cid4 cid4 cid8 cid7 cid4 k k m cid7cid7 handled time O k computing C C cid7 C To obtain ﬁrst sum use identity cid15 li l 1n Each joinable pair C n i0 cid4 n cid8 cid7 cid3 C cid7cid7 setting vcoloringbit C In total vcolorings JOIN node computed time O 10k k cid2 cid7 cid7cid7 As hinted Example 12 dynamic programming approach easily extended count number admissible sets In fact need add computation column algorithm straightforward Lemma 2 Finally emphasize possibility enumerating linear delay admissible sets second topdown pass tree similar sketched 34 42 Characterizing preferred extensions So far solved credulous acceptance problem certain characterization admissible sets For skeptical reasoning characterize preferred extensions admissible sets We need complicated data structure Instead colorings nodes t shall use pairs C Γ C coloring t Γ set colorings t The set Γ certiﬁcates contains colorings characterize Xt restricted admissible sets strictly larger Xt restricted admissible sets characterized C Intuitively Γ represents Xt restricted admissible sets ultimately elements etC maximal 22 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Deﬁnition 17 Let T X tree decomposition AF F t T C Γ pair C coloring t Γ set colorings t We C Γ simply pair t deﬁne etC Γ collection sets S satisfy following conditions S etC ii For C iii For Xt restricted admissible F cid2t sets E S E exists C cid7 Γ E etC cid7 S E cid7 Γ E etC cid7 If etC Γ cid13 C Γ valid pair t The following technical lemmas mirror Lemmas 1 2 Lemma 11 Let T X tree decomposition AF F t T S Xt restricted admissible set F cid2t Then pair C Γ t S etC Γ Proof Let S Xt restricted admissible set F cid2t By Lemma 1 exists coloring C S etC Now let cid7 We claim E E E Xt restricted admissible F cid2t S E Moreover let Γ C S etC Γ To prove check conditions iiii Deﬁnition 17 S etC selection C ii For cid7 S E follows construction Γ E iii For Xt restricted sets E C cid7 follows construction Γ admissible F cid2t S E exists C E cid2 cid7 Γ exists E etC cid7 E E st E etC cid7 Γ E etC Lemma 12 Let T X tree decomposition AF F t T let C Γ C C cid13 C Then etC Γ etC cid7 Γ cid7 cid7 cid7 Γ cid7 different pairs t necessarily cid7 Proof If C cid13 C Γ cid13 Γ cid7 etC Γ etC Γ cid7 prove sets S etC Γ contained etC Γ cid7 Wlog assume exists coloring C t C Γ C Γ cid7 cid7 claim follows Thus remains consider pairs C Γ C Γ cid7 In order Lemma 2 etC etC Let S arbitrary set etC Γ Suppose contrary S contained etC Γ cid7 By Deﬁnition 17 applied etC Γ exists Xt restricted admissible set E et C F cid2t S E By Deﬁnition 17 applied etC Γ cid7 exists coloring C coincide Thus C Γ cid7 contradiction cid2 By Lemma 2 colorings C C E etC Γ cid7 Hence element S etC Γ Xt restricted admissible set F cid2t Xt restricted admissible set F cid2t characterized valid pair t Now augmented valid colorings sets valid colorings identify preferred extensions F root node Recall root node r T bag possible pairs r cid7 cid7 cid7 cid7 coloring Only ﬁrst pair corresponds preferred extensions Deﬁnition 17 following relationship Proposition 2 Let r root nice tree decomposition T X AF F Then ercid7 pref F Proof We recall ercid7 admF To set inclusion ercid7 pref F let S arbitrary set S ercid7 By Deﬁnition 17i obtain S admissible F cid2r F Further iii fact Γ conclude proper superset S admissible F S preferred extension F It remains ercid7 pref F Thus let S pref F arbitrary preferred extension F By Lemmas 11 12 exists unique pair C Γ S etC Γ Since root node bag C cid7 Deﬁnition 17ii fact S maximal admissible set F conclude Γ hold cid2 Thus pairs desired property characterize preferred extensions It remains ﬁnd eﬃcient way compute As admissible sets shall employ vcolorings purpose However bottomup com putation applied certiﬁcates makes deﬁnition involved To handle certiﬁcates extend deﬁnition operators vcolorings Fig 8 sets vcolorings By slight abuse notation overload operators cid3 follows cid5 cid6 cid6 C Γ Ca cid13 att cid7 C Γ Γ C C Γ Γ C cid5 Γ cid3 cid8 C cid3 D cid5 cid6 cid7 cid6 C Γ cid13cid2 C cid13cid2 cid13cid2 C cid6 cid7 cid6 C Γ D cid8 C D W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 23 We observe Γ set vcolorings node t having t parent node applying operator corresponding node type t results set vcolorings t For join operator additionally assume cid8 set vcolorings node t As analogue vcolorings formally deﬁne concept vpairs follows shares t parent node t cid7cid7 cid7 cid7 Deﬁnition 18 Let T X nice tree decomposition AF F let t T node t Depending node type t deﬁne vpair t follows cid7cid7 cid7 t possible children LEAF Each C Γ C Ct Γ C FORGET If C cid7 cid7 Ct C C cid7 vpair t Xt Xtcid7 C cid7a cid13 att C INSERT If C cid7 Γ cid7 vpair t cid7 Γ cid7 vpair t cid7 Γ cid7 vpair t cid7 cid7 Γ cid7 Γ cid7 C cid7 vcoloring C cid7 cid7 Γ cid7 vpair t cid7cid7 Γ cid7 cid3 Γ cid7cid7 C C C JOIN If C cid7 cid3 C C Xt Xtcid7 cid7 vpair t cid7 Γ cid7 vpair t C cid7cid7 Γ cid7cid7 vpair t cid7cid7 C cid7cid7 vpair t cid7 cid3 Γ cid7cid7 Γ cid7 cid3 C cid7 C cid7cid7 cid7 Γ cid7 rise certiﬁcates C cid7 But possibly certiﬁcate C cid7 union Γ cid7 Finally new certiﬁcate C cid7 deﬁnition order We consider new argument cid7 First add cid7 add E cid7 C A words certiﬁcates C add C Now certiﬁcate E cid7 certiﬁcate C E E add union C cid7 E cid7 cid7 Similar considerations underly certiﬁcates C different subframeworks cid7 F cid2tcid7 F cid2tcid7cid7 vcoloring union subframeworks Now let D certiﬁcate C D certiﬁcate C cid7 clearly D cid3 D certiﬁcates C cid3 C But C cid3 D This relies fact relationship combined AF suﬃces relationship subframeworks relationship Here combine vcolorings C C certiﬁcate C cid3 C D cid3 C cid7cid7 cid7 cid7 cid7 cid7 cid7 cid3 C cid7cid7 cid7 Example 18 Recall AF Example 9 The computation vpairs nodes t illustrated Fig 10 As use column notate cardinality sets etC Γ better readability Furthermore use cid2 symbol illustrate decide SA detailed explanation concept follows Example 23 Also observe pairs C Γ C Γ cid7 Γ cid13 Γ cid7 node An example node n5 bag b c left branch coloring C1 C1b def C1c C1 c We etC1 c c However etC1 C1 c c certiﬁcate etC1 c In follows vpairs match concept valid pairs appropriate purposes Similarly vcolorings stepbystep distinguishing different node types We start nodes type LEAF Lemma 13 For LEAF node tree decomposition AF vpairs coincide valid pairs Proof Let T X tree decomposition F t leaf node T The Xt restricted admissible sets F cid2t coincide sets C valid colorings C Ct Moreover valid colorings vcolorings t coincide Lemma 3 Now let C Γ valid pair t Then Deﬁnition 17 C etC Γ Hence Deﬁnition 18 C Γ vpair t Conversely let C Γ vpair t let S C By Deﬁnition 16 S Xt restricted admissible F cid2t Hence Deﬁnitions 17 18 S etC Γ C Γ valid pair node t cid2 Example 19 Consider instance LEAF node n13 Fig 10 As mentioned valid colorings C1 C2 C3 C4 correspond restricted admissible sets e f g F cid2n13 One ﬁrst sets maximal restricted admissible F cid2n13 correspond vpairs C1 C2 C3 n13 On hand supersets e f g corresponding vpair C4 C1 C2 C3 Next consider FORGET nodes Lemma 14 For FORGET node t tree decomposition AF vpairs valid pairs coincide coincide child node t t cid7 Proof Let T X tree decomposition F A R t FORGET node T t Xt Xtcid7 argument Xtcid7 cid7 child node t We 24 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Fig 10 Computation vpairs example AF First valid pair t vpair t Thus let C Γ valid pair t Then exists set S etC Γ In particular S Xt restricted admissible F cid2t Xtcid7 restricted admissible F cid2tcid7 F cid2t cid7 Γ cid7 Thus Lemmas 11 12 exists unique valid pair C cid7 Γ cid7 vpair vpair t t We claim C Since S Xt restricted admissible F cid2t S etcid7 C cid7 Γ cid7 C Γ holds cid7 Γ cid7 By assumption C cid7a cid13 att Then C S etcid7 C cid7 C cid7 Γ cid7 t cid7 cid7 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 25 C cid7 C recall construction proof Lemma 5 constructed coloring denote For C C cid7 C C cid7 holds Lemma 2 C C S etcid7 C As S etcid7 C To Γ cid7 Γ ﬁrst consider inclusion Γ cid7 Γ Let D cid7a cid13 att By condition ii cid7a cid13 att know Deﬁnition 17 exists Xtcid7 restricted admissible set E F cid2tcid7 S E E etcid7 D E Xt restricted admissible Hence condition iii Deﬁnition 17 exists D Γ E etD As cid7 Hence use construction proof Lemma 5 Lemma 2 obtain D D Γ cid7 Γ cid7 By D cid7 Γ cid7 D cid7 C Now consider arbitrary coloring D Γ By condition ii Deﬁnition 17 exists Xt restricted admissible set E F cid2t S E E etD By condition iii Deﬁnition 17 E Xtcid7 restricted admissible cid7 Again construction proof Lemma 5 Lemma 2 F cid2tcid7 exists D D D cid7 Γ cid7 cid7 Hence Γ Γ cid7 E etcid7 D cid7 Γ cid7 node t cid7 vpair C Hence exists S etcid7 C C C We vpair FORGET node t valid pair t Let C Γ vpair t exists cid7 cid7 Γ cid7 valid pair t C cid7 Γ cid7 We claim S etC Γ holds As proof Lemma 5 S etC holds cid7 Γ cid7 By assumption C cid7a cid13 att C Γ C cid7 It remains conditions ii iii Deﬁnition 17 fulﬁlled D To condition ii let D Γ D form D D cid7 Γ cid7 cid7 S E As proof Lemma 5 E etD cid7a cid13 att Since S etcid7 C cid7 Γ cid7 cid7 To condition iii let E exists E etcid7 D Xt restricted admissible F cid2t S E Then E Xtcid7 restricted admissible F cid2tcid7 exists cid7a cid13 att But proof Lemma 5 cid7 Γ cid7 D E etD cid7 Since E Xt restricted admissible D E etcid7 D cid7 cid2 cid7 D Example 20 As example FORGET node consider node n12 Fig 10 removes argument g child f This node n13 The vpairs n12 obtained vpairs n13 exception vpair C cid7 2 propagated deﬁnition fact C C n13 leads vpair C3 C1 C2 n12 cid7 2 propagated vcoloring vpair C cid7 2g att For reason eliminate C cid7 2 certiﬁcates vpair C cid7 2 C cid7 4 C cid7 1 C cid7 2 C cid7 2 cid7 3 We continue nodes type INSERT Lemma 15 For INSERT node t tree decomposition AF vpairs valid pairs coincide coincide child node t t cid7 Proof Let T X tree decomposition F A R t INSERT node T t Xt Xtcid7 argument A cid7 child node t Hence First valid pair t vpair t Thus let C Γ valid pair t Then exists cid7 S Xtcid7 restricted admissible cid7 Γ cid7 By assumption cid7 cid7 Γ cid7 C Γ S etC Γ Xt restricted admissible F cid2t set S F cid2tcid7 Thus Lemmas 11 12 exists unique valid pair C C conﬂictfree Ftcid7 C holds cid7 etcid7 C cid7 vpair t C cid7 Γ1 C Γ C cid7 Γ1 Γ1 Γ cid7 Γ cid7 C cid7 Γ cid7 vpair We claim C cid7 Γ cid7 vpair t cid7 Γ cid7 t Then C S cid7 cid7 To C C cid7 S C C coloring denote C cid7 C holds Lemma 2 C C C assertion follows cid7 S holds recall proof Lemma 7 constructed cid7 As S etcid7 C S etcid7 C C C In following respective sets certiﬁcates coincide To end distinguish mentioned cases S S respectively 1 Assume S To derive Γ1 Γ ﬁrst relation Γ1 Γ split following statements α Γ cid7 Γ β Γ γ cid7 cid7 cid5 C Γ cid7 Γ cid7 Γ cid7 cid7 etcid7 D cid7 cid7 cid7 E F cid2tcid7 S To α β consider D By condition ii Deﬁnition 17 exists Xtcid7 restricted admissible cid7 cid7 As S S obtain S E E E set E β In ﬁrst case E conﬂictfree F cid2t deﬁnition Xt Xtcid7 Xt cid7 Xt restricted admissible set F cid2t In case E conﬂictfree F cid2t iff set D conﬂictfree This deﬁnition tree decompositions ensures attacks set Xt new argument Using attacked Xt E conﬂictfree F cid2t E Xt restricted admissible set F cid2t Now condition iii Deﬁnition 17 exists D Γ E etD As construction cid7 case β proof Lemma 7 Lemma 2 obtain case α holds D D α S E E cid7 cid7 26 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 cid7 cid7 If C cid7 Γ ﬁnally Γ1 Γ cid7 S S C cid7 cid7 Γ Hence cid7 Next prove statement γ To let consider set C holds D D statement γ trivially true Otherwise S etC C To prove Γ Γ1 consider arbitrary D Γ By condition ii Deﬁnition 17 exists Xt restricted admis cid7 E sible set E F cid2t S E E etD By assumption S S S cid7 E Xtcid7 restricted admissible F cid2tcid7 S cid7 Now use proof Lemma 7 Lemma 2 exists D cid7 E case S cid7 S holds In cases E cid7 etcid7 D cid7 D D E S E cid7 Γ cid7 E cid7 cid7 D C 2 Assume S To Γ cid7 Γ ﬁrst consider inclusion Γ cid7 Γ Consider D cid7 Γ cid7 By condition ii cid7 As assumption cid7 etcid7 D Deﬁnition 17 exists Xtcid7 restricted admissible set E cid7 conﬂictfree E Xt restricted S S admissible F cid2t In case Deﬁnition 17 exists D Γ E etD By construction proof Lemma 7 Lemma 2 holds D D To prove Γ Γ1 consider arbitrary D Γ By condition ii Deﬁnition 17 exists Xt restricted admis cid7 E sible set E F cid2t S E E etD We S Xtcid7 restricted cid7 By construction proof Lemma 7 cid7 etcid7 D admissible F cid2tcid7 Thus exists D cid7 Hence Γ Γ cid7 holds Lemma 2 D D cid7 Further case 1 D cid7 Hence Γ Γ1 cid7 S E E cid7 E E cid7 Hence Γ cid7 Γ E F cid2tcid7 S D D cid7 Γ cid7 E cid7 E E cid7 cid7 cid7 cid7 cid7 cid7 Γ cid7 node t It remains vpair INSERT node valid pair Thus let C Γ vpair t exists cid7 Γ cid7 vpair C cid7 Γ cid7 To C conﬂictfree Ft By assumption C C Γ valid pair t distinguish cases 1 2 follows cid7 Γ1 Γ1 deﬁned 2 C Γ C 1 C Γ C cid7 Γ cid7 valid pair t exists S cid7 etcid7 C cid7 cid7 1 As proof Lemma 7 S S cid7 etC holds C C cid7 It remains conditions ii iii cid7 cid7 S E cid7 Γ cid7 exists E cid7 conﬂictfree Ft cid7 cid7 D conﬂictfree Ft cid7 C cid7 etcid7 D cid7 For case b construction D E E Deﬁnition 17 fulﬁlled To condition ii consider arbitrary D Γ D form D D b D D c D C Since S etcid7 C In case follow proof Lemma 7 obtain cid7 conﬂictfree F cid2t Once cid7 etD E use fact Xt cid13cid2 obtain E Xt restricted admissible set F cid2t Further S E proof cid7 yields E S conﬂict Lemma 7 E etD free F cid2t E Xt restricted admissible set F cid2t Hence proof Lemma 7 E etC To condition iii consider arbitrary Xt restricted admissible set E F cid2t S E Then E cid7 Xtcid7 restricted admissible F cid2tcid7 If E cid7 E etcid7 D holds S E unique vcoloring D E etD But proof Lemma 7 D C D D cid7 E cid7 cid13 S cid7 Since E Xt restricted admissible F cid2t cid7 cid7 holds Further S S E cid7 Finally c construction D C unique vcoloring E etcid7 C cid7 S C cid7 Γ cid7 cid7 Otherwise E exists D cid7 D D cid7 S S cid7a conﬂictfree Ft Since S cid7 etC It remains vpair C Γ satisﬁes cid7 By construction D cid7 conﬂictfree E Xt restricted admissible set F cid2t By deﬁnition E holds cid7 To condition iii Deﬁnition 17 cid7 E Xtcid7 restricted admissible cid7 Since E Xt restricted admissible conditions ii iii Deﬁnition 17 To condition ii consider D Γ D form D D D E E S E proof Lemma 7 E etD let E Xt restricted admissible set F cid2t S E Then E cid7 Γ cid7 F cid2tcid7 S S Thus exists D unique vcoloring D E etD But proof Lemma 7 D D cid7 Γ cid7 exists E cid7 holds cid2 cid7 holds cid7 etcid7 D cid7 S cid7 etcid7 D cid7 etcid7 C cid7 E cid7 E E cid7 cid7 2 By assumption C C cid7 2 cid7 1 cid7 1 C cid7 3 C Example 21 Consider INSERT node n11 Fig 10 adds argument d Let illustrate vpairs n11 There ways obtained vpairs n12 For instance consider vpair C incorporate argument d resulting vpairs n11 We ﬁrst consider adding argument d extensions set Cd As certiﬁcates represent supersets extend way relation d C2 In ﬁrst case set violated In example consider C C d conﬂictfree obtain C2 certiﬁcate end vpair C4 C2 d contains conﬂict vcoloring certiﬁcate But set C n12 C d C Now let consider adding d vpair C C5e C5 f Now adding d adding d certiﬁcates C cid7 cid7 C 1 C 2 seen C2 Γ Further C4 C C5 C1 C2 C3 C4 d C5d preserve relation Thus d Γ The ﬁrst leads C1 C3 Γ cid7 d C4 Γ In total obtain vpair This results vcoloring C5 C cid7 d represents supersets C d Γ C cid7 3 C cid7 1 C cid7 1 C cid7 1 C cid7 2 cid7 3 cid7 3 cid7 2 cid7 2 cid7 1 cid7 2 cid7 2 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 27 Lemma 16 For JOIN node t tree decomposition AF vpairs coincide valid pairs coincide successors t t t cid7cid7 cid7 Proof Let T X tree decomposition F A R t JOIN node T successors t cid7 t cid7cid7 First consider arbitrary valid pair C Γ t We C Γ vpair As C Γ valid exists Xt restricted admissible set S F cid2t S etC Γ As proof Lemma 8 exist cid7 C cid7cid7 unique sets S1 Xcid2tcid7 S2 Xcid2tcid7cid7 S1 Xt S2 Xt S S1 S2 Further exist valid colorings C cid7cid7 Γ cid7cid7 S1 etcid7 C Γ S1 etcid7 C cid7 cid13 C C properties unique By assumption valid pairs vpairs cid7cid7 Γ cid7cid7 Note Lemma 2 pair C cid7 Γ cid7 C Γ S1 etC Thus Lemma 11 valid pairs C cid7 Γ cid7 S2 etcid7cid7 C cid7cid7 cid7 S2 etcid7cid7 C cid7cid7 C C Analogously C Now turn attention set Γ We ﬁrst Γ Γ cid7 cid3 Γ cid7cid7 Γ cid7 cid3 cid7cid7 For D Γ exists Xt restricted admissible set E etD S E We deﬁne E E1 E2 Γ Γ cid7 cid3 Γ cid7cid7 C C analogously S1 S2 Now S E holds iff cid7 cid3 C cid7cid7 S1 E1 S2 E2 ii S1 E1 S2 E2 iii S1 E1 S2 E2 holds We discuss cases separately As E1 Xtcid7 restricted admissible F cid2tcid7 E2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 exist sets D cid7 E2 etcid7cid7 D cid7cid7 By proof Lemma 8 Lemma 2 D D cid7 Γ cid7 cid7cid7 cid7 cid3 D cid7cid7 Γ cid7cid7 E1 etcid7 D D D Γ cid7 cid3 Γ cid7cid7 ii As E2 Xtcid7cid7 restricted admissible exists D cid7 cid3 D cid7cid7 iii By symmetry case ii D Γ cid7 cid3 C D C D C cid7 cid3 Γ cid7cid7 cid7cid7 Γ cid7cid7 cid7cid7 E2 etcid7cid7 D cid7cid7 By proof Lemma 8 Lemma 2 Thus Γ Γ cid7 cid3 Γ cid7cid7 Γ Γ It remains Γ Γ equivalent showing following inclusions cid5 ii C cid7 cid7 cid3 Γ cid7cid7 Γ iii Γ cid7 cid3 cid7 cid7cid7 cid5 C Γ This follows Consider arbitrary D cid7 D S1 E1 S2 E2 We conclude S E proof Lemma 8 Lemma 2 D D unique coloring E etD Therefore D cid7cid7 Γ Γ cid7 cid3 Γ cid7cid7 Γ cid7cid7 By Deﬁnition 17 cid7 E2 etcid7cid7 D cid7cid7 E1 etcid7 D D cid7cid7 Γ cid7cid7 cid7 Γ cid7 cid7 cid3 D cid7 cid3 D D cid7cid7 ii Consider arbitrary D cid7cid7 Γ cid7cid7 C cid7 D unique coloring E etD Thus C cid7cid7 E2 etcid7cid7 D cid7 cid3 Γ cid7cid7 Γ cid7cid7 We S E S1 E2 D C cid7 cid3 D cid7cid7 iii By symmetry ii This shows Γ Γ valid pair C Γ vpair cid7 Now vpair t valid pair t Thus let C Γ vpair t exists vpair cid7 Γ cid7 node t deﬁned cid7cid7 Γ cid7 As cid7 C cid7cid7 Γ cid7cid7 valid pairs Hence exist sets S1 etcid7 C C By assumption C proof Lemma 8 S S1 S2 etC holds C cid7cid7 C It remains C Γ fulﬁlls conditions ii iii Deﬁnition 17 To condition ii consider D Γ cid7cid7 C Γ C cid7 Γ cid7 S2 etcid7cid7 C cid7cid7 Γ cid7cid7 node t cid7 Γ cid7 C vpair C cid7cid7 Γ Γ C cid7 cid3 C cid7 cid7cid7 D following forms D D b D C c D D cid7cid7 cid7 cid3 D cid7cid7 cid7 cid3 D cid7 cid3 C cid7cid7 D D D cid7 Γ cid7 cid7cid7 Γ cid7cid7 cid7 Γ cid7 D cid7cid7 Γ cid7cid7 C C D cid7cid7 cid7 D cid7 cid7cid7 D cid7 D cid7cid7 We discuss case cases b c similar Since S 1 etcid7 C E1 etcid7 D E1 E2 etD cid7cid7 Γ cid7cid7 exist cid7cid7 S E1 S E2 E1 Xt E2 Xt As proof Lemma 8 E cid7 Γ cid7 S2 etcid7cid7 C cid7 E2 etcid7cid7 D cid7cid7 S E To condition iii let E Xt restricted admissible F cid2t S E Then E1 Xtcid7 restricted admissible cid7cid7 E1 etcid7 D cid7 E2 etcid7cid7 D cid7 cid3 D D cid7cid7 cid7 F cid2tcid7 E2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 Hence exist sets D E1 Xt E2 Xt cid7cid7 cid7 Γ c D holds But proof Lemma 8 E E 1 E2 etD cid7 Γ cid7 cid3 D D cid7cid7 cid2 cid7cid7 Γ cid7cid7 Γ cid7 C b D D cid7cid7 C D D cid7cid7 cid7 cid7 cid7 cid7cid7 Example 22 To example consider JOIN node n2 Fig 10 Let look pair C cid7 1c C C cid7 1d def pair C cid7cid7 1 n8 C cid7cid7 1 d def As C cid7cid7 1 c C C cid7cid7 1 cid7 1 cid7 n3 1 C combine vpairs cid7 1 28 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 cid3 operations The join C cid3 C consider sets Γ cid7 cid3 Γ cid7cid7 certiﬁcate C1 In way obtained vpair C1 C1 n2 cid7cid7 1 leads vcoloring C1 C1c C1d def To update certiﬁcates cid7cid7 The ﬁrst sets Γ cid7cid7 leads C Γ cid7 cid3 C cid7 cid3 Γ cid7cid7 cid7 1 Theorem 7 Let T X nice tree decomposition AF F A R Then pair C Γ node t holds C Γ valid pair t iff C Γ vpair t Proof As Theorem 5 proof proceeds structural induction For induction base vpairs valid pairs coincide LEAF nodes case Lemma 13 For induction step property remaining nodes Indeed captured Lemmas 14 15 16 cid2 Thus handle eﬃciently decide skeptical acceptance bounded treewidth We mark pairs C Γ considered argument satisﬁes Ca cid13 pass mark accordingly root node If cid7 carries mark know skeptical acceptance hold Example 23 Let consider problem deciding argument skeptically accepted example AF In Fig 10 illustrate vpairs marked contradictory skeptical acceptance cid2 column table Note vpair C Γ marked suﬃcient set S etC Γ holds S The counter Fig 10 refers Xt admissible sets F cid2t et Thus number sets S et S general smaller Theorem 8 Deciding SA AF F A R treewidth k 1 time O 222k18k A Proof Recall number colorings node bounded 4k In order maintain vpairs node consider possible pairs C Γ C coloring Γ set colorings Hence consider 4k 24k 2n pairs node n 22k 2k use abbreviation n proof Analogously proof Theorem 6 store vpairs node t table row possible pair C Γ In additional bit indicate row represents vpair Given pair C Γ ﬁnd corresponding row time O n We computing vpairs node t T feasible time O 222k18k single bottomup traversal T Since number nodes T assumed bounded O A desired upper bound theorem follows immediately We prove upper bound O 222k18k time needed node t T distinguishing types nodes As proof Theorem 6 computationally expensive node type JOIN node shall focus The node types treated similarly t To compute table vpairs t iterate nested loop Let t JOIN node successors t cid7 Γ cid7 table t cid7 cid7 Γ cid7 pairs C cid7cid7 Γ cid7 cid3 Γ cid7cid7 Γ cid7 cid3 cid7cid7 Γ cid7cid7 vpair C vpair C cid7 cid3 Γ cid7cid7 set vpairbit row corresponding C Γ table node t As proof cid7cid7 C C Theorem 6 join operation carried time O 10k k The access appropriate row table node t cid7 Γ cid7 Moreover feasible time O 22k k In total process 2n2 combinations vpairs C Γ C action required combination vpairs ﬁts O 10k k 22k k O 24k We end upper bound O 222k2k2 24k O 222k14k 24k O 222k18k cid2 cid7cid7 If case compute vpair C Γ C pairs C cid7 C following check C cid7cid7 Γ cid7cid7 table t cid7 cid3 C cid7cid7 cid7 cid7cid7 43 Characterizing ideal sets So far solved credulous skeptical acceptance problems For ﬁrst problem colorings characterize admissible sets problem extended data structure certiﬁcates Γ handling subset maximality characterize preferred extensions Here reuse concept certiﬁcates characterize ideal sets But instead storing supersets certiﬁcates store certain witnesses ideal set Such witnesses identiﬁed Dunne 23 follows Proposition 3 See 23 Let F A R AF S A set arguments S ideal set F iff following conditions hold S admissible F argument p S x A x s R s S admissible set F contains p Intuitively S ideal set AF F S admissible S attacked admissible set Therefore certiﬁcate Γ pair C Γ represent restricted admissible sets attack S etC This formally deﬁned W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 29 Deﬁnition 19 Given tree decomposition T X AF F pair C Γ t T C coloring t Γ set colorings t deﬁne eID t C Γ collection sets S satisfy following conditions S etC ii C iii Xt restricted admissible F cid2t sets E E cid2 S C cid7 Γ exists set E etC cid7 E cid2 S cid7 Γ E etC cid7 If eID t C Γ cid13 C Γ IDpair t The following lemmas analogous Lemmas 1 2 resp Lemmas 11 12 Lemma 17 Let T X tree decomposition AF F t T S Xt restricted admissible set F cid2t Then pair C Γ S eID t C Γ Proof Let S Xt restricted admissible set F cid2t By Lemma 1 exists coloring C S etC Now let cid7 We claim E E E Xt restricted admissible F cid2t E cid2 S Moreover let Γ C t C Γ To prove check conditions iiii Deﬁnition 19 S etC selection C ii For S eID cid7 E cid2 S follows construction Γ E iii For E Xt cid7 Γ exists E etC C cid7 follows construction restricted sets admissible F cid2t E cid2 S exists C Γ E cid2 cid7 Γ E etC cid7 E E st E etC Lemma 18 Let T X tree decomposition AF F let C Γ C eID t C cid7 Γ cid7 cid7 Γ cid7 different pairs t T Then eID t C Γ Proof If C cid13 C Γ cid13 Γ cid7 t C Γ eID eID applied eID applied eID Thus C Γ cid7 cid7 Lemma 2 etC etC cid7 claim follows Thus remains consider pairs C Γ C Γ cid7 In order Wlog assume exists coloring C t C Γ C Γ cid7 t C Γ cid7 prove sets S eID t C Γ cid7 By Deﬁnition 19 t C Γ exists Xt restricted admissible set E et C F cid2t E cid2 S By Deﬁnition 19 t C Γ cid7 exists coloring C coincide contradiction cid2 t C Γ cid7 t C Γ Suppose contrary S contained eID By Lemma 2 colorings C C t C Γ contained eID E etC Γ cid7 Let S arbitrary set eID In summary conclude element S eID t C Γ Xt restricted admissible set F cid2t Xt restricted admissible set F cid2t characterized unique IDpair t Proposition 4 Let r root nice tree decomposition T X AF F Then eID r cid7 idealF r cid7 idealF let S arbitrary set Proof We recall ercid7 admF To set inclusion eID S eID r cid7 By Deﬁnition 19i obtain S Xr restricted admissible F cid2r root bag S admissible set F Further iii fact Γ conclude admissible set E E cid2 S By Proposition 3 S ideal extension F It remains eID r cid7 idealF Thus let S idealF arbitrary ideal extension By Lemmas 17 18 exists unique IDpair C Γ S eID t C Γ Since root bag C cid7 Deﬁnition 19ii fact admissible set E F E cid2 S Proposition 3 conclude Γ cid2 Thus pairs desired property characterize ideal extensions As previous subsections alternative deﬁnition pairs allows eﬃcient computation long treewidth given AF small Deﬁnition 20 Let t T node nice tree decomposition T X AF t Depending node type t deﬁne IDvpair t follows cid7cid7 cid7 t possible children t LEAF Each C Γ C Ct Γ C FORGET If C cid7 Γ cid7 IDvpair t cid7 Γ cid7 IDvpair t cid7 Γ cid7 IDvpair t INSERT If C C cid7 cid7 cid7 Ct C Xt Xtcid7 C cid7 cid2 C IDvpair t cid7a cid13 att Xt Xtcid7 cid7 Γ Γ Γ cid7 Γ cid7 C Ct C cid2 C cid7 vcoloring C cid7 IDvpair t cid7 Γ Γ Γ cid7 Γ cid7 C Ct C cid2 C C C cid7 IDvpair t 30 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 JOIN If C cid7 cid3 C C cid7 Γ cid7 IDvpair t cid7cid7 Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 IDvpair t cid7cid7 Γ cid7cid7 IDvpair t C cid7 cid7cid7 C cid7 C cid7cid7 Let comment construction set certiﬁcates pairs colorings C By nature certiﬁcates IDpairs consider vcolorings constructed certiﬁcates successor nodes case vpairs previous subsection restrict certain superset relation cid7 operation Here consider new argument add C Let ﬁrst explain construction C cid7 Further Now certiﬁcate E cid7 vcolorings E new certiﬁcates C cid7 Similar Ea certiﬁcates C cid7 captures colorings E considerations underlie certiﬁcates C cid7cid7 E cid2 Next let consider certiﬁcates C The certiﬁcate E combined vcoloring D cid7 This Γ deﬁnition contains set C Ct C cid2 C rise certiﬁcates C cid7cid7 Similarly certiﬁcate E cid7 vcolorings current node If cid2 C combined vcoloring D E cid7 set C C Ct C cid2 C rise certiﬁcates C A certiﬁcate E E cid7 possibly E cid7 E cid7 Γ cid7 cid7 D cid7cid7 D cid7 cid3 C cid7cid7 cid7cid7 Γ cid7cid7 cid7 Γ cid7 cid7 cid3 C t t cid7 cid7cid7 cid7cid7 cid7 cid7 cid7 cid7 C cid7 C cid7 cid3 C cid7cid7 Example 24 Recall AF Example 9 The computation IDvpairs nodes tree decomposition AF illustrated Fig 11 The symbol cid5 mark IDvpairs correspond Xt restricted admissible set containing argument In following concept IDvpairs coincides concept IDpairs appropriate eﬃciently deciding problem ideal acceptance As separately node type starting LEAF nodes Lemma 19 For LEAF node t tree decomposition AF IDvpairs t coincide IDpairs t Proof Let T X tree decomposition AF F t leaf T The Xt restricted admissible sets F cid2t coincide sets C valid colorings C Ct Moreover valid colorings vcolorings t coincide Lemma 3 Now let C Γ IDpair t Then Deﬁnition 19 C eID t C Γ Hence Deﬁnition 20 C Γ IDvpair t Conversely let C Γ IDvpair t let S C By Deﬁnition 16 S Xt restricted admissible F cid2t Hence Deﬁnitions 19 20 S eID t C Γ Thus C Γ IDpair t cid2 Example 25 As example consider LEAF node n13 Fig 11 The vcolorings C1 C2 C3 C4 correspond restricted admissible sets e f g As example f cid2 e C2 certiﬁcate C1 For similar reasons C3 certiﬁcate C2 C1 certiﬁcate C3 As attackers set certiﬁcates C4 We proceed nodes type FORGET Lemma 20 For FORGET node t tree decomposition AF IDvpairs IDpairs coincide coincide child node t t cid7 cid7 Γ IDvpair t cid7 Since S eID tcid7 C Proof Let T X tree decomposition F A R t FORGET node T t child node t It holds Xt Xtcid7 argument Xtcid7 First IDpair t IDvpair t Thus let C Γ IDpair t S eID t C Γ In particular S Xt restricted admissible F cid2t Lemma 4 Γ Xtcid7 restricted admissible F cid2tcid7 F cid2t Thus Lemma 17 exists IDpair C cid7 cid7 By assumption C cid7a cid13 att C C C Lemma 2 Hence C cid7 C cid7 C cid13 att First consider implication let D arbitrary coloring Γ By condition ii Deﬁnition 19 exists Xt restricted admissible set E F cid2t E cid2 S E etD By Lemma 4 E Xtcid7 restricted admissible F cid2tcid7 F cid2t Hence condition iii Deﬁnition 19 exists D shown constructing D prove D D Γ t cid7 Recall proof Lemma 5 construction C Γ particular S etcid7 C Γ IDvpair t C C D D It remains Γ Γ holds D Γ D D D proof Lemma 5 applying Lemma 2 conclude D cid7 S eID C st S etcid7 C Analogously equalities C C cid7a cid13 att Deﬁnition 20 C cid7 C cid7 D C E etcid7 D holds C Γ Γ tcid7 C cid7 Now consider implication let D Γ D restricted admissible set E F cid2tcid7 E cid2 S E etcid7 D E etD Hence condition iii Deﬁnition 19 Lemma 2 D Γ cid13 att By condition ii Deﬁnition 19 exists Xtcid7 deﬁned cid13 att coloring D D By D It remains IDvpair t IDpair t Therefore consider IDvpair C Γ t By deﬁnition cid7 Γ cid7 By assumption C cid7 Γ cid7 t C Γ holds As proof Lemma 5 cid7a cid13 att C Γ C cid7 Γ cid7 We claim S eID cid7 Γ cid7 node t cid7 Hence exists S eID exists IDvpair C IDpair t C cid7 tcid7 C W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 31 Fig 11 Computation IDvpairs example AF cid7a cid13 att C C cid7 It remains C Γ satisﬁes conditions ii iii S etC holds C Deﬁnition 19 cid7 Γ cid7 exists E etcid7 D To condition ii consider D Γ D form D D cid7a cid13 att Since S cid7 Γ cid7 cid7 To condition iii cid7 E cid2 S As proof Lemma 5 E etD eID tcid7 C let E Xt restricted admissible set F cid2t E cid2 S Then E Xtcid7 restricted admissible F cid2tcid7 cid7a cid13 att exists D D E etcid7 D cid7 Γ Γ cid7 Moreover proof Lemma 5 E etD cid7 Since E Xt restricted admissible D cid7 D cid7 holds cid2 cid7 Γ cid7 D 32 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Example 26 Consider FORGET node n12 Fig 11 argument g removed The IDvpairs n12 obtained cid7 IDvpairs n13 vcolorings exception As discussed Section 41 vcoloring C 2 n13 cid7 C f vcoloring n12 Thus exclude IDvpair based vcoloring exclude C 2 certiﬁcate sets Next consider INSERT nodes Lemma 21 For INSERT node t tree decomposition AF IDvpairs IDpairs coincide coincide child node t t cid7 Proof Let T X tree decomposition F A R t INSERT node T t child node t Then exists argument A Xt Xtcid7 First IDpair t IDvpair t Thus consider IDpair C Γ t Then exists Xt restricted admissible set S F cid2t S eID t C Γ Moreover cid7 Γ cid7 t set S cid7 eID tcid7 C S Then C cid7 S Xtcid7 restricted admissible F cid2tcid7 Thus Lemma 17 exists IDpair C cid7 Γ cid7 assumption C cid7 cid7 IDvpair t This cid7 Γ2 Γ2 Γ cid7 Γ cid7 C Ct C cid2 C conﬂictfree Ft C follows arguments based properties tree decomposition earlier proof Lemma 15 We claim C cid7 Γ1 Γ1 Γ cid7 Γ cid7 C Ct C cid2 C cid7 IDvpair t C cid7 Γ cid7 IDvpair t cid7 Γ2 C Γ holds cid7 Γ1 C Γ C cid7 cid7 cid7 To C C cid7 S C C cid7 C cid7 S holds consider proof Lemma 7 construct As Lemma 2 claim follows To equality certiﬁcates holds Moreover S C C cid7 C C C cid7 etC coloring denote C cid7 etC deﬁnition S Γ Γ1 Γ Γ2 distinguish cases 1 Assume S To Γ1 Γ ﬁrst prove inclusion Γ1 Γ For inclusion Γ cid7 Γ cid7 Γ consider F cid2tcid7 By condition ii Deﬁnition 19 exists Xtcid7 restricted admissible set E cid7 cid7 Γ cid7 arbitrary D cid7 etcid7 D cid7 cid7 cid2 S E E As assumption S cid7 E cid7 cid2 S ii E E cid7 cid7 cid2 S conﬂictfree F cid2t case E conﬂictfree F cid2t D respectively cid7 In ﬁrst case E Further E conﬂictfree F cid2t Xt restricted admissible F cid2t fact attacks arguments Xt holds properties tree decompositions Thus Deﬁnition 19 exists set D Γ E etD Using construction proof Lemma 7 Lemma 2 cid7 This concludes proof Γ cid7 Γ cid7 Γ case D D holds It remains C etC Now consider arbitrary vcoloring D Γ By condition ii Deﬁnition 19 exists Xt restricted admissible cid7 E following set E etD F cid2t E cid2 S Using assumption S conclude E conditions holds cid7 follows S etC E cid2 S C cid7 Γ Thus let consider coloring C cid7 case ii D D Γ hold Hence Γ1 Γ arbitrary set E Ct C As C cid2 C cid2 C E cid7 cid2 S cid7 ii E cid7 cid2 S cid7 cid13cid2 S cid7 In cases E case use proof Lemma 7 Lemma 2 D D Ct C use cid2 S iff D cid2 C iff D C Xtcid7 restricted admissible F cid2tcid7 exists D cid7 Hence Γ Γ1 cid2 C cid7 Γ cid7 cid7 D D cid7 In E etcid7 D cid7 In case ii cid7 cid7 conﬂictfree Ft E E By condition ii Deﬁnition 19 exists Xtcid7 restricted admissible set E cid7 Γ cid7 As Xt Xtcid7 E 2 Assume S To Γ2 Γ ﬁrst consider inclusion Γ2 Γ For inclusion Γ cid7 Γ cid7 Γ cid7 cid7 etcid7 D Xt restricted admissible set F cid2t cid7 Xt restricted admissible F cid2t By Deﬁnition 19 exists cid7 etD E etD respectively By construction proof Lemma 7 Lemma 2 cid2 C consider arbitrary D cid7 cid7 cid2 S F cid2tcid7 E D D Γ E cid7 D D obtain D D follows S etC E cid2 S C Now let D Γ By condition ii Deﬁnition 19 exists Xt restricted admissible set E etD F cid2t E cid2 S By assumption S E Xtcid7 restricted cid7 cid2 In cid7 cid2 S E admissible F cid2tcid7 exists D cid7 holds proof Lemma 7 Lemma 2 Thus ﬁrst case D D D Γ cid7 Γ cid7 holds In case holds D cid2 C C D Ct D Γ Thus D C cid7 E cid2 S Further E cid7 etcid7 D Ct C Γ hold Hence Γ2 Γ cid7 respectively It remains C cid7 holds Hence Γ Γ2 cid7 Γ As C cid7 Now E cid7 S E cid7 D D Ct C cid2 C cid2 C cid7 Γ cid7 cid7 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 33 It remains IDvpair t IDpair t Thus let C Γ IDvpair t By deﬁnition cid7 conﬂictfree Ft C Γ C cid7 Γ1 case C cid7 Γ cid7 node t cid7 exists IDvpair C C Γ C By assumption C cid7 Γ2 Γ1 Γ2 deﬁned cid7 cid7 Γ cid7 IDpair t C C cid7 S deﬁned follows S S holds cases It remains conditions ii iii Deﬁnition 19 fulﬁlled Hence exists S cid7 S S cid7 eID tcid7 C cid7 C C cid7 Γ cid7 We claim S eID t C Γ holds cid7 As proof Lemma 7 S etC To condition ii let D Γ D form D D cid7 Γ cid7 b D D cid7 We prove cases condition ii holds exists set E etD c D cid2 C cid7 D E cid2 S cid7 E cid7 cid2 S cid7 Thus S cid7 S E cid7 cid2 S holds Moreover proof By S cid7 eID tcid7 C cid7 Γ cid7 exists E Lemma 7 E cid7 eID cid7 etD cid7 Γ cid7 exists E cid7 etcid7 D cid7 tcid7 C cid7 cid2 S By construction b Again S cid7 conﬂictfree F cid2t By usual arguments exploiting deﬁnition tree D D decompositions obtain E Xt restricted admissible set F cid2t Following proof Lemma 7 E etD cid7 Moreover E cid2 S follows E cid7 know E E E cid7 cid2 S E c As D valid coloring exists Xt restricted admissible set E etD From D cid2 C S etC follows cid7 E cid7 etcid7 D cid7 cid2 S cid7 E cid7 E cid2 S To condition iii let E Xt restricted admissible F cid2t E cid2 S Further let D unique coloring cid7 cid2 S cid7 cid7 cid13cid2 S hold E cid2 S ii S E etD We claim D Γ Clearly E cid7 etcid7 D cid7 D D D E cid2 But ii imply D cid2 C D Γ cid2 cid7 E Xtcid7 restricted admissible F cid2tcid7 If E cid7 D cid7 holds D Γ Otherwise E Then proof Lemma 7 D D denotes unique vcoloring E cid7 Γ cid7 Example 27 One example INSERT node node n11 Fig 11 argument d added The IDvpairs d n11 obtained IDvpairs n12 For instance consider IDvpair C observe C2 cid2 C1 C4 cid2 C1 derive IDvpair C1 C2 C4 n11 cid7 1 n12 For vcoloring C1 C cid7 1 Now consider IDvpair C cid7 2 C cid7 1 n12 We vcoloring C2 C cid7 2 d certiﬁcate C1 C cid7 1 d C d cid7 1 vcoloring C1 vcoloring C1 cid2 C2 Thus obtain IDvpair C2 C1 Finally discuss JOIN nodes Lemma 22 For JOIN node t tree decomposition AF successors t coincide t t cid7cid7 cid7 cid7cid7 cid7 t IDvpairs t coincide IDpairs t cid7 S2 etcid7cid7 C Proof Let T X tree decomposition F A R t JOIN node T successors t Recall Xt Xtcid7 Xtcid7cid7 To IDpair t IDvpair t consider arbitrary IDpair C Γ t Then exists Xt restricted admissible set S eID t C Γ F cid2t As proof Lemma 8 cid7 exist unique sets S1 Xcid2tcid7 S2 Xcid2tcid7cid7 S1 Xt S2 Xt S S1 S2 Moreover exist vcolorings C cid7 Γ cid7 cid7cid7 C C1 cid3 C2 Hence exist IDpairs C cid7cid7 C Γ S2 eID S1 eID cid7cid7 Γ cid7cid7 S1 eID tcid7 C cid7cid7 Γ cid7cid7 assumption IDvpairs Notice Lemma 2 pair C Γ C S1 etcid7 C tcid7cid7 C tcid7 C Now turn attention certiﬁcates We Γ Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 We ﬁrst prove inclusion Γ Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 So let D Γ By Deﬁnition 19 exists Xt restricted admissible set E F cid2t E cid2 D We deﬁne E E1 E2 analogously S1 S2 As mentioned proof Lemma 8 attacks argument sets Xtcid7 Xtcid7cid7 properties 2 3 tree decompositions Thus E cid2 S holds iff properties unique Analogously C cid7 Γ cid7 C cid7 cid13 C t cid7cid7 cid7 cid7cid7 E1 cid2 S1 ii E2 cid2 S2 holds As cases symmetric suﬃces consider case As E Xt restricted admissible F cid2t cid7cid7 E1 Xtcid7 restricted admissible F cid2tcid7 likewise E2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 Thus exists D cid7 By proof Lemma 8 Ctcid7cid7 E2 etcid7cid7 D D Γ cid7 cid3 Ctcid7cid7 Hence Γ Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 uniqueness property Lemma 2 D D cid7cid7 Moreover exists D E1 etcid7 D cid7 Γ cid7 cid7 cid3 D cid7cid7 It remains Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 Γ equivalent Γ cid7 cid3 Ctcid7cid7 Γ ii Ctcid7 cid3 Γ cid7cid7 Γ 34 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 cid7 cid7cid7 E1 etcid7 D cid7cid7 By Deﬁnition 19 E1 cid2 S1 E E1 E2 cid2 S Further proof cid7 cid3 cid7cid7 Γ Hence Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 Γ In summary proved Γ Γ cid7 cid3 Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 IDpair As symmetry restrict case Thus let D E2 etcid7cid7 D Lemma 8 Lemma 2 D D D C Γ IDvpair unique coloring E etD We obtain desired result D cid7cid7 Ctcid7cid7 D cid7 D cid7 Γ cid7 cid7 cid3 D D cid7cid7 In second proof IDvpair t IDpair t Thus let C Γ IDvpair t cid7cid7 Γ cid7 cid3 cid7 Γ cid7 IDpairs sets S1 S2 IDvpair C cid7 Γ cid7 C C Γ C cid7cid7 Γ cid7cid7 node t cid7 C cid7 cid3 C By deﬁnition IDvpair C Ctcid7cid7 Ctcid7 cid3 Γ cid7cid7 C S1 eID tcid7 C cid7 Γ cid7 S2 eID cid7 Γ cid7 node t cid7 cid7cid7 By assumption C tcid7cid7 C cid7cid7 Γ cid7 As proof Lemma 8 S S1 S2 etC holds C cid7cid7 C cid7 cid7cid7 It remains conditions ii iii Deﬁnition 19 fulﬁlled cid7cid7 cid7 cid3 D cid7 cid3 D ii To condition ii consider D Γ Then D form cid7 Γ cid7 D cid7 Ctcid7 D D D b D D By symmetry suﬃces consider case As S1 eID D holds E E1 E2 etD cid7cid7 exists E2 etcid7cid7 D cid7cid7 E cid2 S cid7cid7 Ctcid7cid7 D cid7cid7 Γ cid7cid7 D cid7 D cid7 D tcid7 C D D cid7cid7 Ctcid7cid7 D cid7 D cid7 cid3 D cid7cid7 cid7cid7 cid7cid7 cid7 Γ cid7 exists E1 etcid7 D cid7 E1 cid2 S1 Further cid7cid7 E1 Xt E2 Xt Now proof Lemma 8 iii To condition iii let E Xt restricted admissible F cid2t E cid2 S Then E1 Xtcid7 restricted admissible F cid2tcid7 E2 Xtcid7cid7 restricted admissible F cid2tcid7cid7 Moreover E cid2 S E1 cid2 S1 E2 cid2 S2 holds Thus exist D cid7cid7 E1 Xt E2 Xt cid7 E2 etcid7cid7 D D cid7cid7 cid7 E1 etcid7 D cid7cid7 Ctcid7cid7 D D cid7 Γ cid7 b D cid7 Ctcid7 D cid7cid7 Γ cid7cid7 holds But proof Lemma 8 E E 1 E2 etD cid7 cid3 D cid7cid7 cid2 Example 28 The JOIN node example n2 Fig 11 For instance consider joining IDvpair C cid7 n8 As C IDvpair C 1 cid7cid7 2 vice versa certiﬁcate C2 C appropriate join partner n8 C C1 C2 pairs combined pair C1 Γ Further C n3 cid7 2 cid7cid7 2 This leads IDvpair cid7cid7 1 C C cid3 C cid7cid7 1 cid7cid7 2 cid7 2 cid7 1 C cid7 2 Theorem 9 Let T X nice tree decomposition AF F A R Then pair C Γ holds C Γ IDpair t iff C Γ IDvpair t Proof The proof makes use lemmas corresponding theorems previous sections cid2 To decide argument ideally accepted proceed credulous acceptance We mark IDvpairs assign value argument pass mark root If IDvpair cid7 root mark conclude argument ideally accepted Otherwise cid7 marked argument ideally accepted Example 29 Recall computation Fig 11 Now consider problem deciding argument ideally accepted The argument ﬁrst appears node n7 mark IDvpair C1a illustrate cid5 corresponding row table Now consider node n5 IDvpairs cid7 C1 C2 constructed marked IDvpair C 1 n6 marked We mention cid7 2 affect mark On hand way IDvpair C1 built C cid7 build IDvpair C3 IDvpair C 2 marked Inspecting root shows ideally accepted holds ideal set running example Example 2 Theorem 10 Deciding ID AF F A R treewidth k 1 time O 222k18k A Proof Recall proof Theorem 6 We number pairs C Γ node bounded 2n n 22k 2k Further store pairs tables ﬁnd given pair time O n We computing IDvpairs node t T feasible time O 222k18k single traversal T Since number nodes T assumed bounded O A desired upper bound theorem follows immediately We prove upper bound O 222k18k time needed node t T distinguishing types nodes As proof Theorem 6 computationally expensive node type JOIN node shall focus The node types treated similarly t pairs C To compute table IDvpairs t iterate nested loop cid7 Γ cid7 Let t JOIN node successors t following check C cid7cid7 Γ cid7cid7 table t cid7 Γ cid7 table t pairs C cid7cid7 cid7cid7 cid7 cid7 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 35 IDvpair C Ctcid7cid7 Ctcid7 cid3 C Theorem 8 time O 222k18k cid2 cid7cid7 Γ cid7cid7 IDvpair C cid7cid7 Γ cid7 cid3 cid7cid7 set IDvpairbit row corresponding C Γ table node t As proof cid7cid7 If case compute vpair C Γ C cid7 C cid7 cid3 C 5 Conclusion In paper turned theoretical tractability results argumentation frameworks bounded tree width eﬃcient algorithms All algorithms based dynamic programming approach uses single bottomup traversal tree decomposition given argumentation framework For basic algorithm introduced vcolorings crucial data structure maintained bottomup traversal We proved data structure allows succinctly represent admissible sets eﬃciently decide credulous acceptance For succinctly representing preferred extensions deciding skeptical acceptance extend basic data structure vpairs consisting vcoloring plus set certiﬁcates vcolorings Finally modiﬁed vpairs socalled IDpairs allowed design eﬃcient algorithm ideal acceptance argumentation frameworks bounded treewidth Moreover shown graph parameters contrast treewidth apply directed graphs lead similar tractability results The key collection intractability results intractability argumentation frameworks bounded cyclerank Crucial dynamic programming algorithms eﬃcient computation tree decomposition T X mini mum width treewidth good approximation thereof We mentioned Section 22 Bodlaender 7 provided lineartime algorithm ﬁxed w cid3 1 computes tree decomposition width w provided exists However algorithm limited practical use big multiplicative constant exponential width w Bodlaender et al developed powerful preprocessing methods siderably reduce size problem instance treewidth computation 942 Moreover intensive research devoted heuristic methods treewidth computation development eﬃcient algorithms approxima tion treewidth A good survey heuristic methods treewidth computation given 8 Further recent works topic instance 323639 Various algorithms different approximation guarantees runtime upper bounds given 1 On hand polynomialtime algorithm presented factor O log w approximation treewidth w On hand algorithms constant factor approximations treewidth given The algorithms work exponential time wrt treewdith exponentially faster previous algorithms All works treewidth computation deal tradeoff eﬃciency accuracy Alternatively approaches tradeoff eﬃciency generality For instance 16 subexponential algorithm results restriction graph classes forbidden minors Several algorithms problems discussed paper presented literature We mention work Doutre Mengin 19 relies setenumeration techniques exploring binary tree Although tree conceptually different tree decompositions use number shortcuts accelerating enumeration provided applied algorithms A similar differently motivated account characterize argumentation semantics decomposition cer tain form strongly connected components Baroni et al 5 Similar tree decompositions approach allows locally compute smaller parts extensions independently propagating certain information computation However concept directly amenable ﬁxedparameter tractability case number arguments single components bound standard NPcoNPhardness reductions apply In fact parameterizing size SCCs related parameter cyclerank follows If size largest SCC AF bounded k clearly cyclerank AF cid4 k simple delete arguments SCC acyclic But exist AFs bounded cyclerank arbitrary large SCCs directed cycles cyclerank 1 arbitrary size However Π P 2 hardness proofs skeptical acceptance preferred semantics fail AFs bounded SCCsize We anticipate coNP algorithm presented AFs cyclerank 1 extended AFs ﬁxed SCCsize algorithm runs coNP runtime heavily increases maximal SCCsize yielding paracoNP algorithm 30 Recall algorithms rely concept colorings They look similar labelings 1138 However labelings deﬁned complete frameworks require concept applies subframeworks recall complexity results Theorems 6 8 10 essential colorings deﬁned small number arguments words know advance argument eventually defended explains need colors number labels usually Nonetheless known results relations labelings different semantics help extending algorithms semantics major topic future work Further ongoing future work follows We plan adapt algorithms semantics complete stable stage semistable As mentioned expect major obstacles extending methods developed semantics 36 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 Another important aspect future work analyze typical argumentation scenarios naturally lead AFs low treewidth Note graphs containing big cliques high treewidth However argumentation scenarios expect graphs small cliques cycles harmless far treewidth concerned A ﬁrst prototype implements algorithms paper available wwwdbaituwienacatresearchprojectargumentationdynpartix In recent work 25 compared implementation existing systems instance ASPARTIX 29 relies reduction logic programs The experiments new dynpartix performs instances low treewidth Moreover compared ASPARTIX size instance high inﬂuence reﬂecting theoretical runtime analysis given paper Further advances dynpartix order competitive arbitrary instances expect low treewidth Acknowledgements We thank anonymous referees preceding KR 2010 paper current paper detailed reviews helpful comments References 1 E Amir Approximation algorithms treewidth Algorithmica 56 4 2010 448479 2 J Barát Directed pathwidth monotonicity digraph searching Graphs Combin 22 2 2006 161172 3 P Baroni PE Dunne M Giacomin On extension counting problems argumentation frameworks P Baroni F Cerutti M Giacomin GR Simari Eds Proceedings 3rd Conference Computational Models Argument COMMA10 Frontiers Artiﬁcial Intelligence Applications vol 216 IOS Press 2010 pp 6374 4 P Baroni M Giacomin Semantics abstract argument systems I Rahwan G Simari Eds Argumentation Artiﬁcial Intelligence Springer 2009 pp 2544 5 P Baroni M Giacomin G Guida SCCrecursiveness A general schema argumentation semantics Artiﬁcial Intelligence 168 12 2005 162210 6 D Berwanger A Dawar P Hunter S Kreutzer DAGwidth parity games Proceedings 23rd Annual Symposium Theoretical Aspects Computer Science STACS 2006 2006 pp 524536 7 HL Bodlaender A lineartime algorithm ﬁnding treedecompositions small treewidth SIAM J Comput 25 6 1996 13051317 8 HL Bodlaender AMCA Koster Treewidth computations I Upper bounds Inform Comput 208 2010 259275 9 HL Bodlaender AMCA Koster Safe separators treewidth Discrete Math 306 3 2006 337350 10 M Caminada Semistable semantics PE Dunne TJM BenchCapon Eds Proceedings 1st Conference Computational Models Argu ment COMMA06 Frontiers Artiﬁcial Intelligence Applications vol 144 IOS Press 2006 pp 121130 11 M Caminada DM Gabbay A logical account formal argumentation Studia Logica 93 23 2009 109145 12 S CosteMarquis C Devred P Marquis Symmetric argumentation frameworks L Godo Ed Proceedings 8th European Conference Symbolic Quantitative Approaches Reasoning Uncertainty ECSQARU 2005 LNCS vol 3571 Springer 2005 pp 317328 13 B Courcelle The monadic secondorder logic graphs I Recognizable sets ﬁnite graphs Inform Comput 85 1 1990 1275 14 B Courcelle J Engelfriet G Rozenberg Handlerewriting hypergraph grammars J Comput System Sci 46 2 1993 218270 15 B Courcelle JA Makowsky U Rotics Linear time solvable optimization problems graphs bounded cliquewidth Theory Comput Syst 33 2 2000 125150 16 ED Demaine FV Fomin MT Hajiaghayi DM Thilikos Subexponential parameterized algorithms boundedgenus graphs hminorfree graphs J ACM 52 6 2005 866893 17 Y Dimopoulos A Torres Graph theoretical structures logic programs default theories Theoret Comput Sci 170 12 1996 209244 18 J Dix S Parsons H Prakken GR Simari Research challenges argumentation Comput Sci Res Develop 23 1 2009 2734 19 S Doutre J Mengin Preferred extensions argumentation frameworks Query answering computation R Goré A Leitsch T Nipkow Eds Proceedings 1st International Joint Conference Automated Reasoning IJCAR 2001 LNCS vol 2083 Springer 2001 pp 272288 20 PM Dung On acceptability arguments fundamental role nonmonotonic reasoning logic programming nperson games Artiﬁcial Intelligence 77 2 1995 321358 21 PM Dung P Mancarella F Toni Computing ideal sceptical argumentation Artiﬁcial Intelligence 171 1015 2007 642674 22 PE Dunne Computational properties argument systems satisfying graphtheoretic constraints Artiﬁcial Intelligence 171 1015 2007 701729 23 PE Dunne The computational complexity ideal semantics Artiﬁcial Intelligence 173 18 2009 15591591 24 PE Dunne TJM BenchCapon Coherence ﬁnite argument systems Artiﬁcial Intelligence 141 12 2002 187203 25 W Dvorák M Morak C Nopp S Woltran dynPARTIX A dynamic programming reasoner abstract argumentation CoRR 2011 arXiv11084804 csAI 26 W Dvoˇrák S Woltran Complexity semistable stage semantics argumentation frameworks Inform Process Lett 110 11 2010 425430 27 W Dvoˇrák S Szeider S Woltran Reasoning argumentation frameworks bounded cliquewidth P Baroni F Cerutti M Giacomin GR Simari Eds Proceedings 3rd Conference Computational Models Argument COMMA10 Frontiers Artiﬁcial Intelligence Applications vol 216 IOS Press 2010 pp 219230 28 LC Eggan Transition graphs star height regular events Michigan Math J 10 1963 385397 29 U Egly SA Gaggl S Woltran Answerset programming encodings argumentation frameworks Argum Comput 1 2 2010 147177 30 J Flum M Grohe Parameterized Complexity Theory Texts Theoretical Computer Science Springer 2006 31 H Gruber Digraph complexity measures applications formal language theory Proceedings 4th Workshop Mathematical Engineering Methods Computer Science MEMICS 2008 2008 pp 6067 32 T Hammerl N Musliu Ant colony optimization tree decompositions EvoCOP 2010 pp 95106 33 P Hunter S Kreutzer Digraph measures Kelly decompositions games orderings Theoret Comput Sci 399 3 2008 206219 34 M Jakl R Pichler S Woltran Answerset programming bounded treewidth Proceedings 21st International Joint Conference Artiﬁcial Intelligence IJCAI 2009 2009 pp 816822 35 T Johnson N Robertson PD Seymour R Thomas Directed treewidth J Combin Theory Ser B 82 1 2001 138154 W Dvoˇrák et al Artiﬁcial Intelligence 186 2012 137 37 36 K Kask A Gelfand L Otten R Dechter Pushing power stochastic greedy ordering schemes inference graphical models Proceedings TwentyFifth Conference Artiﬁcial Intelligence AAAI11 2011 37 T Kloks Treewidth Computations Approximations Lecture Notes Computer Science vol 842 Springer 1994 38 S Modgil M Caminada Proof theories algorithms abstract argumentation frameworks I Rahwan G Simari Eds Argumentation Artiﬁcial Intelligence Springer 2009 pp 105129 39 N Musliu An iterative heuristic algorithm tree decomposition Recent Advances Evolutionary Computation Combinatorial Optimization Studies Computational Intelligence vol 153 Springer 2008 pp 133150 40 N Robertson PD Seymour Graph minors II Algorithmic aspects treewidth J Algorithms 7 3 1986 309322 41 LG Valiant The complexity enumeration reliability problems SIAM J Comput 8 3 1979 410421 42 F van den Eijkhof HL Bodlaender AMCA Koster Safe reduction rules weighted treewidth Algorithmica 47 2 2007 139158 43 B Verheij Two approaches dialectical argumentation Admissible sets argumentation stages J Meyer L van der Gaag Eds Proceedings 8th Dutch Conference Artiﬁcial Intelligence NAIC96 1996 pp 357368