Artiﬁcial Intelligence 234 2016 219271 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Semiequilibrium models paracoherent answer set programs Giovanni Amendola Thomas Eiter b João Moura c Department Mathematics Computer Science University Calabria Via P Bucci Cubo 30b 87036 Rende CS Italy b Institute Information Systems Vienna University Technology Favoritenstraße 911 A1040 Vienna Austria c NOVA LINCS Departamento Informática Universidade Nova Lisboa 2829516 Caparica Portugal Michael Fink b Nicola Leone r t c l e n f o b s t r c t Article history Received 22 December 2014 Received revised form 14 October 2015 Accepted 21 January 2016 Available online 4 February 2016 Keywords Answer set programming Equilibrium logic Paracoherent reasoning Splitting sequences Inconsistency management The answer set semantics assign logic program model logical contradiction unstable negation caused cyclic dependency atom negation While logical contradictions handled traditional techniques paraconsistent reasoning instability requires methods We consider resorting paracoherent semantics 3valued interpretations truth value true false expresses atom believed true This basis semistable model semantics deﬁned program transformation In paper modeltheoretic characterization semistable models makes semantics accessible Motivated anomalies semistable model semantics respect basic epistemic properties propose amendment satisﬁes properties The transformational modeltheoretic characterization reveals relaxation equilibrium logic logical reconstruction answer set semantics called semiequilibrium model semantics We consider reﬁnements semantics respect modularity rules based splitting sets major tool modularity modeling evaluating answer set programs In single classes canonical models amenable customary bottomup evaluation answer set programs option switch paracoherent mode lack answer set detected A complexity analysis major reasoning tasks shows semiequilibrium models harder answer sets equilibrium models global minimization step keeping gap true believed true atoms small possible Our results contribute logical foundations paracoherent answer set programming gains increasing importance inconsistency management time provide basis algorithm development integration answer set solvers 2016 Elsevier BV All rights reserved Some results presented preliminary form KR 2010 17 JELIA 2014 2 This work partially supported Regione Calabria EU Social Fund project PIA KnowRex POR FESR 20072013 Vienna Science Technology Fund WWTF grant ICT 08020 Austrian Science Fund FWF grant P20841 Italian Ministry University Research PON project Ba2Know Business Analytics Know SILAB n PON03PE_0001 The work J Moura supported grant SFRHBD690062010 Fundação para Ciência e Tecnologia FCT Portuguese Ministério Ensino e da Ciência Corresponding author Email addresses amendolamatunicalit G Amendola eiterkrtuwienacat T Eiter ﬁnkkrtuwienacat M Fink leonematunicalit N Leone joaomourayahoocom J Moura httpdxdoiorg101016jartint201601011 00043702 2016 Elsevier BV All rights reserved 220 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 1 Introduction Answer Set Programming ASP premier formalism nonmonotonic reasoning knowledge representation mainly existence eﬃcient solvers wellestablished relationships common nonmonotonic log ics It declarative programming paradigm modeltheoretic semantics problems encoded logic program rules models called answer sets stable models 26 encode solutions 61124 As wellknown logic program answer set This different reasons 1 emerging logical contradiction program P lockeddoor opendoor lockeddoor denotes strong called classical negation denotes weak default negation according ﬁrst rule door locked known open according second rule locked The problem missing connection lockeddoor opendoor1 2 Due cyclic dependencies pass negation following simplistic program Example 1 Consider barber paradox regarded alternative form Russells famous paradox naive set theory2 town barber man shaves men town shave The paradox arises ask Who shaves barber Assuming Joe barber knowledge shaving captured logic program P shavesjoe joe shavesjoe joe joe barber informally states Joe shaves assume shaving self Under answer set semantics P model problem lack stability assumption shavesjoe joe true false justiﬁed rule In general absence answer set wellaccepted indicates rules satisﬁed stable negation There nonetheless cases intended want draw conclusions program answer sets debugging purposes order partially responsive exceptional situations particular contradiction instability affecting parts intuitively matter reasoning problem In order deal Inoue Sakama 49 introduced paraconsistent semantics answer set programs While dealing logical contradictions achieved similar methods non classical logic cf 91 37 dealing cyclic default negation turned tricky We concentrate article presence constraints refer paracoherent reasoning order distinguish reasoning logical contradictions reasoning programs strong negation lack stability models With idea atoms possibly true believed true Inoue Sakama deﬁned semistable seman tics program Example 1 model shavesjoe joe believed true arguably reasonable shavesjoe joe false satisfying rule Note believing shavesjoe joe true provide proof founded justiﬁcation fact actually true mere belief regarded weaker shavesjoe joe known fact derived rule In fact semistable semantics approximates answer set semantics coincides program answer set Occams razor yields models smallest set atoms believed true That intrinsic closed world assumption CWA logic programs slightly relaxed achieving stability models In similar vein regard semantics nonmonotonic logic programs relax answer sets paracoherent semantics 4193943444748515659 Ideally relaxation meets program P following properties D1 D2 D3 Every consistent answer set P corresponds model answer set coverage If P consistent answer set models correspond answer sets congruence If P classical model P model classical coherence In particular D3 intuitively says extremal case relaxation renounce selection principles imposed semantics classical models particular single classical model exists Widelyknown semantics 3valued stable models 47 Lstable models 19 revised stable models 43 regular models 59 pstable models 39 satisfy requirements Section 82 details Semistable models satisfy properties prevailing paracoherent semantics 1 Constraints rules head considered descriptions cases inconsistency arises falsum added head instability view possible cf Section 62 2 Namely set sets members exist G Amendola et al Artiﬁcial Intelligence 234 2016 219271 221 11 Use case scenarios Paracoherent semantics fruitfully employed different use cases ASP model building respectively scenario generation traditional reasoning models logical theory The semistable model semantics attractive 1 brings unsupported assumptions believed 2 remains close answer sets model building distinguishes atoms require assumptions atoms derivable creating justiﬁed truth positive beliefs 3 keeps CWALP spirit minimal assumptions Let consider possible use cases illustration 111 Model building In ASP principal reasoning tasks model building means compute multiple answer sets given program Each answer set encodes possible world solution problem represented program The standard answer set semantics regarded appropriate knowledge base logic program properly speciﬁed adopting CWA principle deal incomplete information It perfectly ok answer set exists GedankenExperiment barber paradox However absence answer set unacceptable possible world known exist case relaxation answer set semantics desired Example 2 Suppose program captures knowledge friends person visits party X informally means X P goJohn goMark goPeter goJohn goBill goBill goPeter It happens P answer set This unacceptable know model reality regardless party need cope situation Semistable semantics tool allows gain answer set relaxing CWA adopting beliefs justiﬁcations In particular semistable models program Iκ 1 Iκ 1 concerns beliefs Mark John In Iκ 2 Mark consequently John Bill believed Peter In Iκ 1 instead believe Mark John likewise Peter Bill Notably different related formalisms cf Section 82 positive beliefs create justiﬁed truth rule fun goMark P believing Mark derive fun true Iκ 1 remain semistable model goJohn KgoJohn KgoBill Informally key difference Iκ KgoMark Iκ 2 2 As mentioned paracoherent semantics serve starting point debugging repairing program Indeed believed atoms justiﬁed true obtain answer set program3 Therefore investigate reasons failure derive atoms justiﬁed possibly add new rules modify existing ones However dealing issue linking existing work debugging repair answer set programs 505225438 scope article brieﬂy address Section 82 112 Inconsistencytolerant query answering Query answering knowledge base resorts usually brave cautious inference answer sets knowl edge base query hold answer set respectively let focus However incoherence knowledge base arises lose information query answers trivial query vacuously true This satisfactory problematic especially modify knowledge base reasons permission change designer administrator knowledge base unavailable clear way ﬁx problem Paracoherent semantics exploited overcome problem render query answering operational trivialization We illustrate extension barber paradox equally consider scenarios Example 3 Consider variant barber paradox cf 49 P shavesjoe X shavesX X manX manpaul manjoe While program answer set semistable model semantics gives model manjoe shavesjoe paul manpaul K shavesjoe joe shavesjoe joe believed true expressed preﬁx K inco herent rule shavesjoe joe shavesjoe joe manjoe instance rule P joe isolated 3 As shall actually holds amended semistable semantics 222 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 rest program avoid absence models4 treatment allows derive instance shavesjoe paul manpaul true furthermore infer shavesjoe joe false Such capability attractive query answering tolerate inconsistency incoherence knowledge explosion The wellfounded semantics WFS 56is prominent approximation answer set semantics par ticular useful query answering atom true resp false WFS true resp false answer set program The WFS similar capabilities takes intuitively coarser view truth value atom true false undeﬁned semistable semantics undeﬁnedness bias truth expressed believed true stronger true example WFS shavesjoe joe undeﬁned Furthermore undeﬁnedness cautiously propagated WFS prevent drawing expected conclusions Example 4 Consider following extension Russells paraphrase cid8 P shavesjoe joe shavesjoe joe visits_barberjoe shavesjoe joe cid9 Arguably expects visits_barberjoe concluded false program satisfy ﬁrst rule shavesjoe joe false second rule applied CWA visits_barberjoe false However wellfounded semantics atoms undeﬁned particular undeﬁnedness shavesjoe joe propagated visits_barberjoe second rule The single semistable model P epistemic transformation K shavesjoe joe according shavesjoe joe believed true visits_barberjoe false Furthermore wellknown wellfounded semantics problems reasoning cases Example 5 From program P shavesjoe joe shavesjoe joe angryjoe happyjoe happyjoe angryjoe smokesjoe angryjoe smokesjoe happyjoe incoherent respect answer set semantics conclude smokesjoe true WFS angryjoe happyjoe mutually deﬁne negation WFS remains agnostic leaves atoms undeﬁned undeﬁnedness propagated smokesjoe rules atom In contrast conclude smokesjoe true semistable semantics relatives semistable models angryjoe true happyjoe false angryjoe false happyjoe true models smokesjoe true Moreover semantics derive angryjoe true means trivialization avoided We elucidate relationship paracoherent semantics WFS Section 8 12 Contributions Despite modeltheoretic nature ASP semistable models deﬁned means program transformation called epistemic transformation A semantic characterization style equilibrium models answer sets 41 missing Such characterization desired working program transformations cumbersome properties semistable models assessed program transformation declarative intuition clear interaction rules easy understand semantics works particular cases Starting observations addressed problem making following main contributions We characterize semistable models pairs 2valued interpretations original program similar socalled hereandthere HT models equilibrium logic 4041 Equilibrium logic logical reconstruction answer set semantics proven immensely useful understand better prooftheoretic perspective based intuition istic logic characterize important properties strong equivalence answer set programs 32 furthermore naturally extends richer classes programs The logic hereandthere equilibrium logic based seen monotonic core answer set semantics semantics captured HTmodels pairs X Y X Y sets atoms true believed true respectively Thus characterize semistable models terms HTmodels similar structures natural important issue In course point anomalies 4 A similar intuition underlies CWA inhibition rule 42 contradiction removal logic programs G Amendola et al Artiﬁcial Intelligence 234 2016 219271 223 semistable semantics respect basic rationality properties modal logics K N essentially prohibit 1to1 characterization5 terms HTmodels Roughly speaking epistemic transformation misses links atoms encoding truth values atoms lead cases counterintuitive results These anomalies semistable model semantics lead propose alternative paracoherent semantics called semiequilibrium SEQ model semantics remedies It satisﬁes properties D1D3 fully characterized HTmodels Informally semiequilibrium models 3valued interpretations atoms true false believed true gap believed derivably true atoms globally minimized That SEQmodels seen relaxed equilibrium models respectively answer sets smallest set atoms believed true justiﬁcation answer set built Note semantic distinction believed true true atoms models important Other approaches CRProlog 4 syntactic distinction rule level semantically discriminate believed atoms truth propagation lead models Notably SEQmodels obtained extension epistemic transformation adds rules care anomalies appealing modeltheoretic declarativeoperational view semantics Different equilibrium models semiequilibrium models general obey wellknown syntactic modularity property allows build models program extending models rest program More precisely splitting sets 31 major tool modularity ASP blindly decompose arbitrary program semiequilibrium semantics This shortcoming affects fact aspects 1 program evaluation answer set programs practice proceeds modules 2 problem modeling user deﬁned subprograms hierarchically organized To address deﬁne split SEQmodels concrete sequence S S1 Sn splitting sets S called splitting sequence decompose program hierarchically organized subprograms P 1 P n evaluated In general resulting split SEQmodels depend particular splitting sequence Eg party program Ex ample 2 SEQmodels result different splitting sequences Section 6 This drawback program evaluation solver use splitting sequences In order semantics robust introduce canonical splitting sequences property models independent particular member class splitting sequences obtain canonical models Section 6 This analogous perfect models disjunctive stratiﬁed program independent concrete stratiﬁcation 346 We concentrate program eval uation programs P benign form constraints class derived strongly connected components SCCs P warrants property modularity properties For party program Example 2 single canonical SEQmodel Iκ 2 rule goMark derived For arbitrary programs independence held similar class derived maximal joined components MJCs P intuitively merge SCCs involved malign constraints A compact summary relationships different notions models shown Fig 1 Section 63 We study major reasoning tasks semantics provide precise characterizations computational complexity classes logic programs Besides brave cautious reasoning deciding program model respectively recognizing models considered Brieﬂy results semistable SEQmodel semantics reside polynomial hierarchy level answer set semantics brave cautious reasoning disjunctive programs cid3 p 2 complete This increase complexity intuitively explained congruence property D2 imposes layer op timization Notably split SEQ canonical SEQmodels complexity SEQmodels problems model existence problem NPcomplete SEQmodels harder cid3 p 2 complete Intuitively explained fact classical coherence D3 ensures SEQmodel existence split SEQ canon ical SEQmodels fulﬁll conditions source complexity We compare SEQmodel semantics number related semantics literature It turns coincides evidential stable model semantics disjunctive logic programs 51 The deﬁned like semi stable model semantics terms stage program transformation different program Thus results provide byproduct semantic computational characterization evidential stable model semantics Another notable result SEQmodel semantics slightly enriched program P wf reﬁnes WFS given program P making general atoms true resp false query answers SEQmodels general informative WFS cf Example 5 Moreover holds split SEQmodels 3 complete normal programs problems cid3 p 2 respectively cid4p 3 respectively cid4p 3 resp cid3 p Our results contribute enhanced logical foundations paracoherent answer set programming gains increas ing importance inconsistency management They provide modeltheoretic characterization amendment semistable semantics given semiequilibrium semantics linking view answer sets semantics equilib rium logic provides basis immediate extensions richer classes logic programs Section 93 Section 10 Furthermore split SEQmodel semantics particular SCCmodels semantics lends modular use evaluation programs Cautious merging components MJ Cmodels aims 5 By 1to1 mean bijective correspondence 224 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 preserving independence components possible parallel evaluation This makes reﬁned semantics attractive incorporation answer set solvers evaluation frameworks order offer paracoherent features Notably bottomup evaluation allows switch ﬂy paracoherent mode facing incoherence swer set exists Furthermore notions main results SCCmodels generalized userdeﬁned subprograms Section 92 121 Organization The remainder article organized follows In section review answer set programs equilibrium logic semistable model semantics After provide Section 3 semantic characterization semistable models point anomalies leads introduce semiequilibrium models Section 4 The reﬁnement relative splitting sets arbitrary splitting sequences considered Section 5 canonical semi equilibrium models introduced Section 6 Section 7 devoted characterize complexity semantics computational issues context Related work discussed Section 8 followed Section 9 addresses possible extensions Section 10 concludes article open issues outlook In order disrupt ﬂow reading proofs moved Appendix 2 Preliminaries In paper consider propositional setting logic programs extensions usual nonground setting straightforward Since primarily interested paracoherence disregard aspects devoted paraconsistency logical contradictions speciﬁcally exclude strong negation A discussion work extends non ground programs strong negation given Section 93 We ﬁrst recall answer set semantics disjunctive logic programs reconstruction equilibrium logic based nonclassical logic 21 Answer set programs Given propositional signature set propositional atoms cid3 disjunctive rule r form a1 al b1 bm c1 cn 1 l m n 0 ai b j ck atoms6 As usual stands weak default negation The head r b1 bm respectively r set Hr a1 al positive respectively negative body set B r set S atoms S S By abuse r c1 cn body r Br B B notation denote r r B Hr Br Hr B r B r A rule r disjunctive fact Br omit constraint Hr normal Hr 1 positive r B A disjunctive logic program P ﬁnite set disjunctive rules cid3 A program P called normal resp positive r P normal resp positive P constraintfree P contains constraints Example 6 Several programs considered Introduction As example disjunctive program consider P assistant student professor discount student assistant It intuitively captures department members known professors assistants students student known assistant gets discount coffee We recall stable models called answers sets program intuitively models reconstructed rules negation preevaluated according model An interpretation set I cid3 r I I atoms An interpretation I satisﬁes rule r denoted I r I Hr cid12 B model program P denoted I P I r rule r P A model I P minimal model J I P exists MMP denotes set minimal models P r I B An interpretation I stable model answer set P I MMP I P I wellknown GelfondLifschitz r I cid12 The program P I GL reduct 26 P wrt I positive program P I Hr B incorporates value negation given I program I MMP I holds I reconstructed guess negation given I We denote ASP set answer sets P r r P B 6 Occasionally use Example 3 schematic rules variables instantiated propositional rules G Amendola et al Artiﬁcial Intelligence 234 2016 219271 225 Example 7 continued Reconsider program P Example 6 simplicity use b c d professor student assistant discount respectively P b c d c b This program minimal models MMP b c d answer sets ASP b c d Note I answer set I minimal model P I d c intuitively truth I unfounded derived rules 211 Stratiﬁed headcyclefree programs Among syntactic classes programs important use practice stratiﬁed programs 346 headcyclefree hcf program 8 In following characterize notions terms strongly connected components logic program r B The dependency graph program P directed graph DGP cid14V DG E DGcid15 nodes V DG atoms P edge b occurs head rule r b occurs body r head r r Hr r P The strongly connected components SCCs different E DG b Hr b B cid16 C P denoted SCCP SCCs DGP maximal node sets C AtP pair nodes v v connected path G nodes C Informally dependency graph captures dependencies truth atom occurs head rule r occurrences atoms r value potentially inﬂuences value A program P stratiﬁed r P C SCCP Hr C B r C Note notion stratiﬁed program introduced applies programs constraints original notion 346 considers constraintfree normal respectively disjunctive logic programs It conservatively generalizes traditional notion simply disregards constraints Hr C trivially holds constraint r If rules r satisfy condition atom depend rules P negation path a0 a1 ak ai ai1 0 k edge DGP exists thats leads head rule literal a1 resp a1 body recursively rule body This makes possible evaluate negation layers called strata Indeed constraintfree stratiﬁed normal program P unique stable model coincides perfect stratiﬁed model P deﬁned strata 346 A program P headcyclefree hcf Hr C 1 r P C SCCP r r P Hr Headcyclefreeness means distinct atoms b occur head rule mutually depend recursion positive parts rule bodies allows tractable minimal model checking intractable arbitrary disjunctive logic programs cid16 P cid16 B Example 8 continued The program P b c d c b stratiﬁed headcyclefree Informally value depend atom determined ﬁrst value b c ﬁnally value d gives rise respective strata The program headcyclefree b c mutually depend cid16 P b d b positively positive rule bodies This holds extended program P depends c b d d c c positively depend b Notation It convenient introduce notation For rule r denote Atr Hr B atoms occurring r program P let AtP signature generated considered program P r set rP Atr We assume usual default cid3 AtP r B cid10 212 Splitting sets sequences Stratiﬁed programs come modularity property atoms lower layers Example 8 value solely determined rules This modularity property fact generalizes abstract view program based splitting sets program 31 Informally splitting set allows divide program P lower higher evaluated More formally set S cid3 splitting set P rule r P Hr S cid12 Atr S We denote b S P r P Atr S P t S P P b S P P relative S Note union S S1 S2 splitting sets S1 S2 program P splitting set P As shown 31 holds cid11 ASP ASt S P M 2 MASb S P usual M means adding atoms M facts S splitting set P That obtain answer sets program P ﬁrst evaluating b S P respect splitting set S contains rules entirely formulated atoms S After evaluate remaining program t S P atoms S occur rule bodies rule heads augmented facts atoms true answer set Example 9 continued For program P b c d c b set S b c splitting set b S P b c t S P d c b ASb S P b c ASP ASt S P b ASt S P c b c d 226 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Splitting sets naturally lead splitting sequences A splitting sequence S S 1 Sn P sequence splitting sets S P S S j j note usually Sn cid3 characterization 2 extended accordingly Example 10 continued A splitting sequence P b c d c b S S 1 S2 S1 S2 b c b S1 P b S2 P b c t S2 P d c b With eye practical implementation consider inﬁnite splitting sequences comment end Section 5 An important note splitting sets sequences important tool modular representation implementation answer set semantics Advanced answer set solvers DLV clasp exploit tool heavily SCCs yield ﬁnegrained splitting sequences practice coarser splittings advantageous 22 Equilibrium logic The deﬁnition answer set Section 21 uses GLreduct sense operational ﬂavor This raised question characterization answer sets terms suitable logic possible constructibility answer sets rules crucial particular variant intuitionistic logic serve purpose David Pearce showed answer positive presented equilibrium logic 4041 natural nonmonotonic extension Heytings logic hereandthere HT 27 The intermediate logic intuitionistic classical logic coincides 3valued Gödel logic As turned HTlogic serves valuable basis characterizing semantic properties answer set semantics equilibrium logic regarded logical reconstruction answer set semantics attractive features As HTlogic considers language Lcid3 formulas built propositional signature cid3 connectives We restrict attention formulas form b1 bm bm1 bn a1 al 3 correspond natural way rules form 1 l 0 formula a1 al program P corresponds similarly theory set formulas cid5P Example 11 For example program P b b c c corresponds theory cid5P b c b c P b c d c b corresponds cid5P b c b c d In rest article tacitly use correspondence We note key notions extend language Lcid3 way results extensions rule language consider Section 93 apply language As restricted intuitionistic logic HT semantically characterized Kripke models particular worlds assuming world ordered world An HTinterpretation pair X Y interpretations X Y cid3 X Y total X Y Intuitively atoms X considered true atoms Y false remaining atoms Y X undeﬁned Assuming X φ denotes satisfaction formula φ interpretation X classical logic satisfaction φ HTlogic HTmodel denoted X Y φ deﬁned recursively follows 1 X Y X atom 2 X Y cid12 3 X Y φ Y cid12 φ Y satisﬁes φ classically 4 X Y φ ψ X Y φ X Y ψ 5 X Y φ ψ X Y φ X Y ψ 6 X Y φ ψ X Y cid12 φ X Y ψ ii Y φ ψ Note condition item 3 equivalent X Y φ view negation φ implication φ Then HTinterpretation X Y model theory cid5 denoted X Y cid5 X Y φ formula φ cid5 As regards negative literals rules following hard Proposition 1 Given HTinterpretation X Y atom holds X Y iff Y X Y r rule r form 1 iff Hr X cid12 B r cid2 Y B r Y cid12 In terms GLreduct X Y P program P iff Y P X P Y 54 A total HTinterpretation Y Y equilibrium model EQmodel theory cid5 Y Y cid5 HT interpretation X Y X Y holds X Y cid12 cid5 set EQmodels cid5 denoted EQcid5 The equilibrium models program P cid5P EQP EQcid5P For details background 41 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 227 Example 12 continued For program P b c d c b sets b b ab ab b bc c bc cd cd HTmodels X Y corresponding theory cid5P 7 The equilibrium models P resp cid5P b b cd cd EQP EQcid5P b b cd cd In previous example program P answer sets I1 b I2 c d equilibrium models b b cd cd respectively In fact answer sets equilibrium models program coincide Proposition 2 See 40 For program P M AtP holds M ASP iff M M EQmodel cid5P In particular ASP MMP positive program P EQP M M M MMP case We logic program incoherent lacks answer sets cyclic dependency atoms rules negation answer set equivalently equilibrium model exists constraints dismissed program Example 13 Reconsider barber paradox HTmodels corresponding program P stands shavesjoe joe single total HTmodel equilibrium model Similarly program P b b HTmodels ab ab ab ab likewise total HTmodels ab ab equilibrium models We recall semistable model semantics deals incoherence 23 Semistable models Inoue Sakama 49 introduced semistable models extension paraconsistent answer set semantics called PAS semantics respectively pstable models extended disjunctive logic programs Their aim provide framework paraconsistent incoherence situations stability fails cyclic dependencies literal default negation We consider extended signature cid3κ cid3 K cid3 Intuitively K read believed hold Semanti cally resort subsets cid3κ interpretations Iκ truth values false 8 believed true bt true t ordered binary relation cid19 truth ordering cid19 bt cid19 t The truth value assigned Iκ propositional variable deﬁned t Iκ Iκ K Iκ Iκ bt The semistable models program P obtained epistemic transformation P κ Deﬁnition 1 Epistemic Transformation P κ 49 Let P disjunctive program Then epistemic transformation deﬁned r cid12 positive disjunctive program P κ obtained P replacing rule r form 1 P B λr1 λrl K c1 K cn b1 bm ai λri λri c j λri ai λrk 1 k l 1 j n λri λrk fresh atoms 4 5 6 7 Intuitively atom K c j means c j believed true λri means rule r atom ai head true With meaning rule 1 naturally translated rule 4 atoms Br true r believed true atom Hr true λri true atom ci B ci false The rule 5 propagates value λri ai visible rules The rules 6 7 restrict choice λri making head r true c j true rule r inapplicable atom Hr true 6 Furthermore atom ai head true rule P 5 7 We write common sets a1 a2 juxtaposition a1a2 elements 8 In 49 called undeﬁned strong negation considered 228 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 atom ak Hr true ai true 7 minimality answer set semantics effects ai true Example 14 Reconsider barber paradox program P stands shavesjoe joe Then P κ λ1 K λ1 λ1 λ1 λ1 Consider similar program P b stratiﬁed Its epistemic transformation P κ λ1 K b λ1 λ1 λ1 b λ1 Finally let reconsider stratiﬁed program P b c d c b Its epistemic transformation P κ λr11 λr12 K b λr11 c λr12 λr11 λr12 λr11 b λr11 λr11 b λr12 λr12 c λr11 λr12 c λr12 λr21 K b c d λr21 λr21 b λr21 d λr21 r1 r2 ﬁrst second rule respectively Note program P epistemic transformation P κ positive program Models P κ deﬁned terms ﬁxpoint operator 49 property positive programs according Theorem 29 49 minimal ﬁxpoints coincide minimal models program Therefore program P minimal ﬁxpoints P κ coincide answer sets P κ Semistable models deﬁned maximal canonical interpretations minimal ﬁxpoints answer sets P κ follows For interpretation Iκ cid3cid16 cid3κ let gapIκ K Iκ Iκ denote atoms believed true assigned true Deﬁnition 2 maximal canonical Given set S interpretations cid3cid16 interpretation Iκ S maximal canonical S J κ S exists gapIκ gap J κ By mcS denote set maximal canonical interpretations S Then equivalently paraphrase deﬁnition semistable models 49 follows Deﬁnition 3 semistable models Let P program cid3 An interpretation Iκ cid3κ semistable model P Iκ S cid3κ maximal canonical answer set S P κ The set semistable models P denoted SST P SST P S cid3κ S mcASP κ Example 15 continued For P epistemic transformation P κ single answer set M K K single semistable model P believed true For program P b epistemic transformation P κ answers sets M1 K M2 λ1 b gapM1 gapM2 M2 maximal canonical M2 cid3κ b single semistable model P This fact unique answer set P Finally epistemic transformation P b c d c b answer sets M1 λr11 b M2 λr12 c λr21 d M3 λr12 c K b M4 K checked ASP solver Among gapM1 gapM2 M3 M4 nonempty gap M1 M2 maximal canonical semistable models P correspond answer sets P b c d expected For study semistable model semantics refer 49 notably Proposition 3 See 49 The SST models semantics given SST P arbitrary programs P satisﬁes properties D1D3 Arguably transformational deﬁnition semistable models makes diﬃcult grasp semantic level makes interpretation semistable model particular focus original language forget auxiliary symbols This raises question characterization semistable models ﬁrst principles serve alternative deﬁnition pure modeltheoretic view In section present characterization G Amendola et al Artiﬁcial Intelligence 234 2016 219271 229 3 Semantic characterization semistable models As opposed transformational deﬁnition aim section modeltheoretic characterization semistable models Given equilibrium logic HTmodels successfully characterize stable models natural attempt characterization line modeltheoretic characterizations answer set semantics means HT models Recall model X Y set X contains atoms true Y contains atoms believed true Let reconsider HTmodels work barber paradox Example 16 Reconsider P Examples 13 14 recall HTmodels P One aim characterizing semistable model K Indeed inappropriate perfectly describes situation believed true assigned true proven However resorting HTinterpretations allow uniquely characterize semistable models illustrated following example Example 17 Consider program P b c d b d b c The program coherent single answer set b c SST P b c K b b c K K c This fact epistemic transformation P κ contains rules λr31 K K b λr41 K b K c constraints 6 given b c true facts enforce λri false K b K K c true answer set P κ Note abc b abc ac HTinterpretation Hence 1to1 characterization resort different structures Sticking requirement given program P cid3 pairs twovalued interpretations cid3 serve underlying semantic structures biinterpretation program P cid3 pair I J interpretations cid3 deﬁne Deﬁnition 4 bimodel Let φ formula cid3 let I J biinterpretation cid3 Then I J bimodel φ denoted I J β φ 1 I J β I atom 2 I J cid12β 3 I J β φ J cid12 φ 4 I J β φ ψ I J β φ I J β ψ 5 I J β φ ψ I J β φ I J β ψ 6 I J β φ ψ I J cid12β φ ii I J β ψ I φ Moreover I J bimodel program P I J β φ φ form 3 corresponding rule r P Note difference recursive deﬁnition bimodels HTmodels item 6 case implication While HTmodels require material implication φ ψ holds thereworld bimodels miss connection φ ψ This makes possible biinterpretation I J I J bimodel HTmodel implication 3 simple example given b On hand HTmodel implication 3 bimodel Similar condition HTmodels Proposition 1 alternatively characterize satisfaction rules bi models follows Proposition 4 Let r rule cid3 let I J biinterpretation cid3 Then I J β r B J B r implies I Hr cid12 I B r r I We link biinterpretations interpretations extended signature cid3κ epistemic transformation program P respectively To bimodel program P associate corresponding interpretation I J κ cid3κ I J κ I K J Conversely given interpretation Iκ cid3κ associated biinterpretation βIκ given Iκ cid3 K Iκ For illustration consider following example Example 18 Let P b b b Its bimodels pairs I J I b J b b Then b bκ K b ab abκ K K b Conversely Iκ K b βIκ b 230 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 In order relate constructions models epistemic transformation P κ builds additional atoms form λri construct interpretation I J κP P κ given biinterpretation I J P follows I J κP I J κ λri r P B r cid12 ai I I Br J B r r form 1 Example 19 continued Reconsider P b b b Example 18 b Then bκP bκ λr21 K b λr21 rule b b fulﬁlls conditions I J b We establish following correspondence bimodels program P models epistemic transformation P κ Proposition 5 Let P program cid3 Then 1 I J bimodel P I J κP P κ 2 M P κ βM cid3κ bimodel P Based bimodels obtain 1to1 characterization semistable models imposing suitable minimality criteria Theorem 1 Let P program cid3 Then 1 I J bimodel P I cid16 J cid16 P satisﬁes gapI cid16 J I cid16 J cid12β P I cid16 gapI J I J κ SST P cid16 I ii I J 2 Iκ SST P βIκ bimodel P satisﬁes iiii cid16 cid12β P J cid16 J iii bimodel Intuitively Conditions ii ﬁlter bimodels uniquely correspond answer sets P κ minimality answer set satisﬁes answer sets P κ satisfy ii certainly maximal canonical Eventually Condition iii ensures maximal canonical answer sets selected More formally proof theorem builds following relationship bimodels P answer sets P κ Corollary 1 Let P program cid3 If M ASP κ βM cid3κ satisﬁes If I J bimodel P satisﬁes ii exists M ASP κ βM cid3κ I J For illustration consider following example Example 20 continued Recall P b b b bimodels pairs I J I b J b b Condition Theorem 1 holds bimodels I Condition ii holds J b Thus K b unique semistable model P The examples given far exhibit anomalies semistable semantics respect basic rationality properties considered epistemic logics In particular knowledge generalization necessitation resp modal axiom N basic principle respective modal logics For semistable model Iκ require Property N Iκ implies K Iκ cid3 This property hold witnessed Example 17 Another basic requirement distribution axiom modal axiom K Assuming belief rules given program seen consequence adopting knowledge generalization distribution property paraphrased rule form 1 follows Property K If Iκ K b1 K bm Iκ cid12 K c1 K cn Iκ K a1 K al Note hold rule b Example 18 single semistable model program P K b Example 20 Arguably anomalies avoided This leads propose amendment semistable model seman tics present section G Amendola et al Artiﬁcial Intelligence 234 2016 219271 231 4 Semiequilibrium models In section deﬁne characterize alternative paracoherent semantics semiequilibrium semantics reasons clear immediately The aim semiequilibrium models enforce Properties N K Let start considering bimodels program P satisfy properties It turns structures exactly given HTmodels Proposition 6 Let P program cid3 Then 1 I J bimodel P I J κ satisﬁes Property N Property K r P I J HTmodel P 2 H T HTmodel P H T κ satisﬁes Property N Property K r P In order deﬁne semiequilibrium models follow basic idea semistable semantics select subset minimal models maximal canonical For program P let deﬁne H T κ P H T κ H T P denote MMH T κ P minimal elements H T κ P respect subset inclusion Deﬁnition 5 semiequilibrium models Let P program cid3 An interpretation Iκ cid3κ semiequilibrium SEQ model P Iκ mcMMH T κ P The set semiequilibrium models P denoted SEQP Let revisit examples previous section Example 21 For P semistablemodel K corresponds HTinterpretation K single minimal element H T κ P single SEQmodel P For program P b c d b d b c Example 17 HTmodel P form X Y b c X b c K K b K c single minimal element H T κ P single semiequilibrium model P Finally program P b b b Example 18 rule b b HTmodel X Y P fulﬁll b Y rule b Y single minimal element H T κ P K K b single SEQmodel P A modeltheoretic characterization semiequilibrium semantics obtained replacing bimodels HTmodels dropping Condition ii Intuitively Condition ii needed subsumed Condition iii Condition ii cid16 Property N Condition hold To formulate result extend notion gap cid3κ interpretations HTinterpretations follows For HTinterpretation X Y let gap X Y Y X gap X Y gapβ X Y κ K gap X Y κ Theorem 2 Let P program cid3 Then 1 H T HTmodel P H cid16 cid16 T cid12 P H cid16 H ii cid16 HTmodel H cid16 T cid16 P exists satisﬁes cid16 gapH cid16 T cid16 gapH T H T κ SEQP 2 Iκ SEQP βIκ HTmodel P satisﬁes cid16 ii cid16 We refer condition cid16cid16 gapminimality HTmodel program P Informally characterization says SEQmodels obtained relaxing condition EQmodels globally smallest set atoms expressed gapminimality believed true justiﬁcation justiﬁcation expressed hminimality Note EQmodels obtained require H T cid16 hminimality condition Like semistable models semiequilibrium models computed maximal canonical answer sets equilibrium models extension epistemic program transformation Deﬁnition 6 P H T Let P program cid3 Then epistemic HTtransformation P H T deﬁned union P κ set rules K K a1 K al K c1 K cn K b1 K bm cid3 respectively rule r P form 1 The extensions transformation naturally ensure Properties N K models maximal canonical answer sets coincide semiequilibrium models 232 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Theorem 3 Let P program cid3 let Iκ interpretation cid3κ Then Iκ SEQP Iκ M cid3κ M mcASP H T We note point alternative involving encoding semiequilibrium models Section 8 The resulting semantics classically coherent fulﬁlls property D3 Introduction Proposition 7 Let P program cid3 If P classical model semiequilibrium model Another simple property 1to1 correspondence answer sets semiequilibrium models Proposition 8 Let P coherent program cid3 Then 1 Y ASP Y Y κ semiequilibrium model P 2 Iκ semiequilibrium model P βIκ equilibrium model P βIκ form Y Y Y ASP An illustration 1to1 relationship answer sets semiequilibrium modelsis given Example 17 reconsidered Example 21 Note example gave evidence semistable models satisfy Property N contrast case semiequilibrium models From Propositions 7 8 obtain semiequilibrium models behave similarly semistable models respect properties D1D3 Introduction Proposition 9 The SEQmodels semantics given SEQP arbitrary programs P satisﬁes properties D1D3 Furthermore immediate consequence Proposition 8 following property Corollary 2 For positive program P SEQP X Y κ X Y EQP M Mκ M MMP As consequence Property K semiequilibrium semantics differs semistable semantics respect believed consequences Example 22 Consider program P b b b c extends program Example 18 rule c The single semistable model P c K b corresponds bimodel c b single SEQmodel K K b corresponds HTmodel ab Thus c true SST model semantics false SEQmodel semantics lacking belief propagation CWA assigns false SST model turn causes c true SEQmodel believed true rule c head defeated As way derive c CWA assigns false Convention As SEQmodel Iκ P uniquely determined HTmodel βIκ shall rest article identify models refer set βIκ Iκ SEQP SEQmodels P denote abuse notation SEQP For illustration programs Example 21 SEQmodels K b c K K b K c K K b respectively identiﬁed HTmodels abc abc ab respectively 5 Split semiequilibrium semantics While SEQsemantics nice properties fulﬁlls properties D1D3 Introduction en sure modularity property answer sets respectively equilibrium models expressed Equation 2 To illustrate consider following examples Example 23 Recall party program Example 2 goJohn goMark goPeter goJohn goBill P goBill goPeter The semiequilibrium models P Iκ 1 KgoMark Iκ 2 goJohn KgoJohn KgoBill written HT models M1 goMark M2 goJohn goJohn goBill None models provides fully coherent view hand program incoherent having answer set Nevertheless M2 appears preferable M1 according layering stratiﬁcation principle widely agreed LP prefer goJohn goMark way derive goMark appear head rule program We remark according wellfounded semantics P goMark false goJohn true atoms undeﬁned SEQmodel M2 informative tells addition goPeter false Example 24 Consider following simplistic program capturing knowledge workers company G Amendola et al Artiﬁcial Intelligence 234 2016 219271 233 P employeeX has_social_secX core_staff X ssnrX Y intY has_social_secX employeeX ssnrX Y employeeX managerX core_staff X managerX managersam Informally rules state employees social security registry number SSNR social security managers employees core staff Sam manager The constraints enforce core staff employees social security SSNRs range integers int builtin predicate This program Herbrand universe9 answer set employeesam core_staff sam proven rules case has_social_secsam constraint P violated The program SEQmodel Iκ managersam employeesam core_staff sam K has_social_secsam Sam believed social security It hard S managersam employeesam ssnrsam sam has_social_secsam splitting set P The b S P single answer set single SEQmodel M managersam employeesam according ssnrsam sam has_social_secsam false Based t S P obtain core_staff sam true means constraint employeesam has_social_secsam core_staff sam violated Conse quently SEQmodel exists Equation 2 adapted SEQmodels violated Modularity rule dependency emerges Equation 2 widely ASP related different pur poses 1 eﬃcient evaluation programs ASP solvers 2 problem modeling program structured modules organized hierarchical fashion As 1 program decomposition fact crucial eﬃcient answer set computation practice For program P advanced answer set solvers like DLV clasp immediately set goMark false goMark occur rule head In customary computation program components solvers gradually extend answer sets program covered incoherence detected component example rules But abort computation like switch paracoherent mode continue building semiequilibrium models approximation answer sets Such behavior desirable computationally waste effort obtaining approximation conceptually relax equilibrium condition Occams razor little possible hierarchy components As regards 2 customary natural modeling program P divided subprograms P 1 P m serve deﬁne values speciﬁc sets atoms respectively properties way subprogram P considered module rules evaluated en bloc These modules evaluated bottomup exploiting Equation 2 repeatedly obtain answer sets program P For example program Example 2 possibly extended persons program P based predicate determines location pick party cid16 balcony count X goX 3 balcony living_room count X X 3 aggregate evaluates true 3 persons party Similarly imagine rules program Example 24 form subprogram employees staff rules cover social security aspects The single SEQmodel Iκ P fact compatible view intuitive result To overcome limitation introduce reﬁned paracoherent semantics called split semiequilibrium semantics It coincides answer sets semantics case coherent programs selects subset SEQmodels based given splitting sequence induces modular decomposition program hand The main results section modeltheoretic characterizations identify necessary suﬃcient conditions deciding SEQmodel selected according splitting sequence As turns seen examples different splitting sequences yield different selection results case EQmodels Based results section present Section 6 canonical SEQmodels independent particular splitting sequence The canonical SEQmodels ensure robustness modular evaluation like EQmodels concrete bottomup evaluation order taken solver matter furthermore notion easily generalized programs hierarchically organized userdeﬁned subprograms shall brieﬂy address Section 92 9 To example universe simple avoid introduce number ranges 234 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 51 Split semiequilibrium models We introduce notion SEQmodels relative splitting set First given splitting set S program P HTinterpretation I J b S P let P S I J P b S P I J S J 8 Informally P wrt S replaced rules constraints ﬁx SEQmodel remainder t S P values atoms S I J Deﬁnition 7 Semiequilibrium models relative splitting set Let S splitting set program P Then semi equilibrium models P relative S deﬁned SEQS P mc cid13 cid11 I J SEQb S P cid14 SEQP S I J 9 Example 25 Reconsider party program Example 2 P b d b c c d b c d stand goMark goJohn goBill goPeter respectively We SEQP b bc b bc appealing derivable rule head Moreover intuitively P 1 b lower coherent feeding upper P 2 d b c c d This formally captured splitting set S b yields b S P P 1 SEQb S P b b Hence P S b b d b c c d b SEQS P SEQP S b b b bc In follows establish semantic characterization SEQmodels relative splitting set SEQmodels program extend SEQmodels Notation For HTmodel X Y set S atoms deﬁne restriction X Y S X Y S X S Y S Proposition 10 Let S splitting set program P If X Y SEQS P X Y S SEQb S P The following result shows semiequilibrium model relative given splitting set semiequilibrium model program Proposition 11 Soundness Let S splitting set program P If X Y SEQS P X Y SEQP This result proven establishing ﬁrst HTmodels program P S I J HTmodels program P hminimality gapminimality X Y More precisely ﬁrst step uses following lemma Lemma 1 Let S splitting set program P let I J SEQb S P If X Y HTmodel P S I J X Y HTmodel P However converse Proposition 11 hold general fact consider program Example 25 splitting set S b SEQS P b bc SEQP b bc Clearly SEQS P depends choice S fact choose S SEQP SEQP Moreover Proposition 11 hold selection maximal canonical HTmodels necessary Example 26 For P b b c b c splitting set S b SEQb S P b b SEQP S SEQP S b b b bc SEQP So far presented properties HTmodel necessary conditions qualify SEQmodel relative given splitting set The natural question conditions suﬃcient case Proposition 12 Completeness Let S splitting set program P If X Y SEQP X Y S SEQb S P X Y SEQS P Putting results obtain following semantic characterization SEQmodels relative split ting set Theorem 4 SEQmodel characterization Let S splitting set program P Then X Y SEQS P iff X Y SEQP X Y S SEQb S P G Amendola et al Artiﬁcial Intelligence 234 2016 219271 235 Proof The onlyif direction follows Propositions 10 11 direction holds Proposition 12 cid2 Like ordinary SEQmodels split SEQmodels coincide answer sets program answer set exists Corollary 3 Let P program EQP cid12 Then splitting set S P SEQS P EQP particular P positive SEQS P M M M MMP We observe program model necessarily split semiequilibrium models semiequilibrium models seen Example 24 We example simpler program Example 27 Let consider P b b splitting set S Then obtain SEQb S P SEQS P However HTmodels P Note occurrence constraint previous example accidental fact Proposition 13 For constraintfree program P splitting set S P holds SEQP S cid12 In summary split SEQmodels following proﬁle respect properties D1D3 Proposition 14 The split SEQmodels semantics program P relative splitting set S P given SEQS P satisﬁes properties D1D2 P constraintfree D3 52 Split sequence semiequilibrium models Now generalize use splitting sets SEQmodels program splitting sequences To end naturally reduce splitting sequence head remainder apply splitting sets recursively Deﬁnition 8 Semiequilibrium models relative splitting sequence Let S S1 Sn n 1 splitting sequence program P Then semiequilibrium models P relative S given SEQS P mc cid13 cid11 cid16 cid14 P S1 I J SEQS I J SEQb S1 P 10 cid16 S2 Sn SEQP SEQP recall P S1 I J adds rules P ﬁx truth values atoms S S1 according I J Example 28 Reconsider program Examples 2 25 P b d b c c d Then S b b c d splitting sequence P obtain SEQS P b bc Indeed b S1 P cid16 P S1 P SEQb S1 P remainder sequence S 1 b b P bs b obtain b S cid16 b SEQb S cid16cid16 P cid16 b b Finally S P cid16cid16 b bc ﬁnal result P SEQb S cid16 b b c d P cid16cid16 b c d P cid16cid16 P S P P cid16 1 cid16 1 cid16cid16 cid16 cid16cid16 1 cid16cid16 1 The SEQmodels relative splitting sequence characterized similarly relative splitting set SEQmodels program remain ﬁltering SEQmodels splitting sequence To ease presentation given program P splitting sequence S S 1 Sn let P 0 P P k P k1Sk Ik J k Ik J k SEQb Sk P k1 k 1 n P k uniquely deﬁned ranges set programs The main result section follows Theorem 5 Let S S1 Sn splitting sequence program P Then X Y SEQS P iff X Y SEQP X Y Sk SEQb Sk P k1 P k k 1 n The proof proceeds induction Theorem 4 Corollary 3 Theorem 4 generalizes splitting sequences Corollary 4 Let P program EQP cid12 Then splitting sequence S P SEQS P EQP particular P positive SEQS P M M M MMP 236 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Proof Sketch Using Theorem 5 shown induction Corollaries 2 3 cid2 Another consequence Theorem 5 written form split sequence SEQmodels program constructed taking account stage respective rules b S j1 P b S j P need considered More formally Corollary 5 For splitting sequence S S1 Sn program P holds SEQS P Sn j n 1 cid13 cid11 cid14 SEQQ jX Y S j mc XY S j1 Q j b S j1 P b S j P b Sn1 P P S0 SEQb S1 P This form fact suitable starting point computation refer Section 61 discussion Regarding existence split sequence SEQmodels obtain generalization Proposition 13 Proposition 15 For splitting sequence S constraintfree program P holds SEQP S cid12 Proof Sketch This shown inductive argument lines proof Proposition 13 Proposi tions 7 13 cid2 In particular obtain following result stratiﬁed programs Corollary 6 For splitting sequence S stratiﬁed program P constraintfree holds SEQS P EQP In conclusion obtain following proﬁle split sequence SEQmodels respect properties D1D3 Proposition 16 The split sequence SEQmodels semantics program P relative splitting sequence S P given SEQS P satisﬁes properties D1D2 P constraintfree D3 6 Canonical semiequilibrium models As pointed discussion beginning previous section split semiequilibrium semantics depends general choice particular splitting sequence For illustration let revisit examples Example 29 In party program Example 2 obtain ﬁrst SEQmodel P respect splitting set S goMark second SEQmodel Similarly company Example 24 obtained respect cid16 considered splitting set S SEQmodel obtain single SEQmodel program respect S managersam employeesam core_staff sam sam This behavior unfortunate program evaluation known splitting sequence actually solver evaluation aspect matter user perspective Likewise matter order independent subprograms program evaluated We consider way obtain reﬁned split SEQsemantics independent particular splitting sequence imposes conditions sequences come naturally program easily tested Along question rises information splitting sequences potentially evaluation available If plain program P information principle splitting sequence needs considered program P composed subprograms P 1 P m splitting sequences compatible hierarchical ordering subprograms need respected We base development ﬁrst setting core program evaluation generalization setting subprograms hard accomplish notions results setting established shall address Section 92 The smallest possible splitting sets program strongly connected components SCCs program heart evaluation algorithms ASP systems Thus lack information program decomposition shall base development splitting sequences formed SCCs program We desired independence particular splitting sequence talk SCCmodels program Example 30 The program party Example 2 SCCs C1 goMark C2 goJohn goBill goPeter form single splitting sequence S C1 C2 model Iκ 1 selected single SCCmodel program G Amendola et al Artiﬁcial Intelligence 234 2016 219271 237 However closer look reveals independence fail presence certain constraints join information unrelated SCCs program An illustration given company program Example 24 Example 31 The SCCs program Example 24 singleton sets ground atom For emerg ing splitting sequences S S1 Sn core_staff sam occurs has_social_secsam core_staff sam S has_social_secsam S j S j obtain SEQmodel obtain single SEQmodel Iκ cases Intuitively constraint P accesses unrelated information independent SCCs has_social_secsam evaluated false beliefs help constraint body false believing has_social_secsam true achieves For reason present split SEQmodel semantics selected SEQmodels truly independent concrete admissible splitting sequence The semantics maximal joinable components MJ C model semantics results lean merging SCCs violate independence interaction constraints In company example SCCs core_staff sam has_social_secsam merged prevents constraint social security considered has_social_secsam decided The single MJ Cmodel program single SEQmodel 61 SCCsplit sequences models We start recalling notions The supergraph program P graph SGP cid14V SG E SGcid15 nodes V SG cid16 iff dependency graph P edge SCCs P edge SCC C distinct SCC C cid16 b E D G Note cid16 C cid12 C formally V SG SCCP E SG C C atom C C SGP directed acyclic graph dag recall topological ordering dag G cid14V Ecid15 ordering v 1 v 2 vn vertices denoted v v j E j Such ordering exists set OG topological orderings G nonempty Any ordering SGP naturally induces splitting sequence follows cid16 SCCP C b C cid16 Deﬁnition 9 Let P program let C1 Cn topological ordering SGP Then splitting sequence induced S S1 Sn S1 C1 S j S j1 C j j 2 n We S SCCsplitting sequence note S splitting sequence P We constraintfree programs split SEQmodels relative SCCsplit sequence independent concrete sequence fact establish result programs certain constraints occur Deﬁnition 10 A constraint r P crossconstraint r intersects distinct SCCs Ci C j SCCP incomparable SGP Ci Atr cid12 C j Atr cid12 SGP topological orderings forms Ci C j C j Ci For example constraint b program P Example 27 trivially crossconstraint likewise addi tional constraint b However additional constraint b c crossconstraint Intuitively crossconstraint joins information different parts Ci C j program evaluated order EQmodel semantics If SEQmodel semantics literals constraint Ci evaluate true making atoms C j believed true effect constraint body false obtain SEQmodel proceed order start C j atoms simply set false chance arrive SEQmodel processing Ci We illustrate simple example Example 32 Consider program P b b It SCCs b incomparable super graph SGP set Ci C j b If evaluate P SCCsequence S b obtain SEQS model evaluate P S cid16 b obtain single SEQS model b ba cid16 We obtain following result Theorem 6 Let P program crossconstraints Then cid16 OSGP SEQS P SEQScid16 P Corollary 7 For constraintfree program P SEQmodels P relative SCCsplit sequence S independent choice S The proof Theorem 6 technically involving needs shown changes ordering SCCs matter end It uses series lemmas assert certain properties semiequilibrium models Ik J k programs P k emerge characterization Theorem 5 independence properties certain cases 238 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 particular sets M Mcid16 X cid16 Mcid16 cid16 Y HTmodels product given M Mcid16 X X cid16 Y Y cid16 X Y M Proposition 17 Let P program constraint r fulﬁlls Atr S Atr AtP S If S AtP S AtP S splitting sets P SEQP SEQb S P SEQt S P Theorem 6 analog Stratiﬁcation Theorem 346 states perfect stratiﬁed model logic program relative stratiﬁcation independent concrete stratiﬁcation simply refer perfect model stratiﬁed program similarly deﬁne strongly connected components models program follows Deﬁnition 11 SCCmodels For program P crossconstraints SCCmodels P given M SEQS P arbitrary topological ordering SGP SCCP Let consider examples Example 33 The party program P Example 25 constraintfree SCCmodel The splitting sequence S P given Example 27 fact SCCsplitting sequence single SEQS model b bc singe SCCmodel P Example 34 The program P b b Example 27 crossconstraint free It SCCs b single SCCsplit sequence S b split sequence SEQmodel exists P SCCmodel As example shows SCCs ﬁnegrained obtain modular SEQmodels presence constraints This remedied coarser modules deﬁned user cf Section 92 Example 35 Consider program cid8 P d c b b e b f c d c g h f b f g h h c g cid9 Its SCCs C1 C2 b f C3 c g h C4 d C5 e depends d single constraint d crossconstraint For ordering C4 C5 C3 C2 C1 obtain SEQS P SEQS2S3S4S5P S1 SEQS3S4S5P S2 SEQS4S5P S3 2 c c SEQS5P S4 1 3 bc bc f bc abc f SCCP bc abc f For cid16 C5 C2 C4 C3 C1 obtain SEQScid16 P bc abc f line Theorem 6 M Note SEQP bc abc f b bdf ac ace Regarding properties D1D3 paracoherent semantics Introduction obtain Proposition 16 immediately Corollary 8 The SCCmodels semantics given M satisﬁes D3 programs constraints SCCP programs P crossconstraints satisﬁes properties D1D2 As properties SCCmodels focus particular aspect important respect envisaged exploitation paracoherent answer set construction computational aspects considered Section 7 611 Modularity SCCmodels In deﬁnition split SEQmodels use splitting sets major tool modular computation equilib rium models answer sets logic program Indeed splitting set S P follows 31 EQP EQt S P X S X 11 X XEQb S P Note similarity equation 9 deﬁne SEQmodels program relative splitting set major difference use mc operator single smallest gaps global level And general different S shall obtain different SEQmodels 9 However conﬁne SCCmodels analog 11 generalization splitting sequences holds That replace Equation 10 SEQ SEQS SEQS M resulting equation holds cid16 SCC cid11 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Theorem 7 Let S splitting set program P crossconstraints Then cid13 cid11 SCCP mc M cid14 SCCP S I J M I J MSCC b S P 239 12 Thanks result compute SCCmodels given program modularly arbitrary splitting sequence M particular algorithm processed b S P program P equilibrium models answer sets encounters extension equilibrium models 11 SCC b S P EQb S P yield answer set switch paracoherent mode apply 7 M obtain result compute SCCmodels P scratch That backtracking restarting computation necessary SCC We note occurrences M general compute use simply semiequilibrium models respectively split semiequilibrium models addition SCCmodels andor remainder program relative S semiequilibrium models program P particular splitting sequence S matters Formally following property holds easy consequence Theorem 5 equation 12 replaced SEQ arbitrary SEQS cid16 cid16 SCC cid16 Proposition 18 Let S splitting sequence program P crossconstraints Then SCCP SEQS P M SCCP M cid15 SSQP SEQS P SQP set splitting sequences P 62 MJ Csplit sequences models Unfortunately Theorem 6 fails allow arbitrary constraints P witnessed programs Examples 32 24 To deal situation different ways possible 1 One way exclude constraints restrictive crossconstraints resort instead usage rules create unstable negation Body replaced f Body f 13 14 fresh atom Indeed early implementations answer set solvers constraints provided f way The SEQmodel semantics able distinguish 13 14 exploited use 14 soft constraint intuitively violated needed achieve EQmodel resp answer set rule satisﬁed considering f believed true 2 Another possibility remedy situations constraints embedded ordered SCCs To end sider merging SCCs way independence concrete topological orderings preserved furthermore ii merging performed conservatively deemed necessary This embodied maximal joinable components program lead called MJ Csplit sequences models Informally relevant SCCs incomparable unproblematic evaluation disregard crossconstraints merged intersect constraint The merging repeated crossconstraint violation exists respect new merged components In rest subsection formalize approach declarative basis We start introducing notions related pairs joinable pairs SCCs We pair K 1 K2 SCCs P related pair K1 K2 constraint r P intersects K1 K2 Atr K1 cid12 Atr K2 cid12 By CK1K2P denote set constraints r Deﬁnition 12 A related pair K1 K2 joinable pair K1 K2 ordering C1 Cn OSGP exists K1 C s K2 C s1 1 s n ii K2 K1 E SG iii r CK1K2P exists Atr C1 C s1 By JPP denote set joinable pairs P Intuitively item states topological ordering K 1 immediately precedes K2 item ii states atom K2 directly depends atom K1 If hold joining K1 K2 achieve independence necessary ordering ﬁxed Finally item iii requires constraint access SCCs crossconstraint appear evaluation program computed far 240 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Example 36 Reconsider program P b b Example 32 incomparable SCCs b crossconstraint b The pair K1 K2 K1 K2 b related joinable Example 37 For P b b c d c e b c SCCP b c d e We observe c b related joinable pair c b satisﬁes conditions iii ii On hand b joinable pair Example 38 Reconsider company program P Example 24 recall SCCs ground version P sets ground atom brevity abbreviate predicate names ﬁrst letter In supergraph SGP edges csam msam esam msam hsam esam hsam ssam sam10 For K1 csam K2 hsam obtain K1 K2 related joinable pair Similarly csam esam related joinable pair hsam esam related pair joinable condition ii fails We extend joinability pairs number SCCs Deﬁnition 13 Let P program Then K1 Km SCCP joinable m 2 K SCCP exists K1 K K K2 JPP K K j joinable j 1 m We let JCP i1 K K1 Km SCCP joinable cid10 m MJ CP J JCP J cid16 JCP J cid12 J cid16 set maximal joined components MJ Cs P Note K1 K2 JPP implies K1 K2 joinable choose K K1 Example 39 continued The program P b b single joinable pair b single maximal joined component b Example 40 continued In Example 37 b nontrivial joinable pair MJ CP b c d e Example 41 continued For company program P Example 24 nontrivial joinable components csam hsam csam esam MJ CP esam hsam csam msam ssam As easily seen MJ CP partitioning AtP results merging SCCs We deﬁne dependency graph called MJ C graph P denoted JGP analogous supergraph SCCs Formally JGP cid14V JG E JGcid15 cid16 b E DG Note JGP like SGP cid16 MJ CP J b J V JG MJ CP E JG J J directed acyclic graph admits topological ordering denote OJGP set orderings We deﬁne cid16 J cid12 J Deﬁnition 14 Let P program J 1 J m topological ordering JGP Then splitting sequence induced S S1 Sm S1 J 1 Sk Sk1 J k k 2 m The sequence S splitting sequence MJ Csplitting sequence We obtain result analogous Theorem 6 presence constraints Theorem 8 Let P program For cid16 OJGP SEQS P SEQScid16 P The proof result similar Theorem 6 uses different lemmas Similarly SCCmodels deﬁne MJ Cmodels program Deﬁnition 15 MJ Cmodels For program P MJ Cmodels P given M arbitrary topological ordering JGP MJ CP SEQS P Example 42 continued Reconsider P Example 37 Then ordering d e c b obtain SEQS P cid16 e c b d obtain SEQScid16 P bc abc On hand JGP single topo MJ CP bc abc Note SEQP logical ordering e c b d SEQS P bc abc M bc abc d 10 Fixed builtin predicates like int disregarded dependency analysis G Amendola et al Artiﬁcial Intelligence 234 2016 219271 241 The problem Section 62 disappears use MJCs Example 43 continued For P b b Example 32 graph JGP single node b SEQS P b ab S b Thus single MJ Cmodel P b ab desired Example 44 continued For company program P Example 24 join graph JGP edges esam hsam csam msam esam hsam csam ssam Thus MJ Csplit sequences possible viz S S1 S2 S3 S1 msam S2 msam ssam S3 msam ssam esam hsam csam cid16 S P single SEQmodel S Iκ msam esam csam K hsam single MJ Cmodel P S3 Both SEQS P SEQS ssam S cid16 3 S S2 S cid16 1 S cid16 2 S cid16 1 cid16 2 cid16 3 cid16 Note trivially MJ C SCCsemantics coincide constraintfree programs fact absence crossconstraints As properties D1D3 Proposition 16 obtain Corollary 9 The MJ Cmodels semantics given M free D3 MJ CP program P satisﬁes D1D2 P crossconstraint Program coherence D3 ensured MJ Cmodels lean component merging fully preserves depen dencies To obtain SEQmodel blurring strict dependencies necessary aspects need taken account A1 Inconsistency emerge crossconstraints Example 45 Consider program P b b b It SCCs b join able MJ CP b The single MJ Csplitting sequence b admit split SEQmodel consequently P MJ C model This remedied suitably merging components intersect constraint A2 A second orthogonal aspect dependence Example 46 The program P b b MJ Cmodel MJ Csplitting sequence S b admits split SEQmodel culprit occur constraint Clearly problem extends dependence arbitrarily long chain rules change Example 46 rule b b c1 c1 c2 cn1 cn cn Again remedied merging components Many merging policies ensure D3 conceivable policy ideally dismiss structure needed eﬃciently computable defer discussion Section 8 complexity results section provide useful insight 621 Modularity MJ Cmodels A naive generalization modularity property SCCmodels Theorem 7 fails hold arbitrary splitting sets To wit P b b splitting set S modular computation similar right MJ CP b ba However properly restrict S generalization hand 12 yields models M holds Theorem 9 Let S splitting set program P S cid10 M M MJ CP Then MJ CP mc M cid13 cid11 cid14 MJ CP S I J M I J MMJ C b S P 15 Thus evaluation strategy SCCmodels applied Furthermore analogue Proposition 18 We splitsequence S S1 Sn program P MJ Ccompatible J MJ CP 1 n J S J S holds intuitively maximal joint component P split different layers S Then Proposition 19 Let S MJ Ccompatible splitting sequence program P Then MJ CP SEQS P M MJ CP M SEQS P MSQP set MJ Ccompatible splitting sequences P SMSQP cid15 242 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 MJ CP M Fig 1 Inclusion different semantics S arbitrary split sequence M M P resp maximal joined components P M EQP cid12 SCCP applies crossconstraint free P coincides MJ CP coincides SEQS S induced topological sort strongly connected components MJ CP included SEQS P MJ Ccompatible S dashed symbol All semantics coincide SCCP resp M 63 Summary model relationships At end section summarize relationships semantics introduced paper Fig 1 shows inclusion relation different notions models viewed HTmodels respectively bimodels Notably inclusions collapse program equilibrium models EQP cid12 semistable SST models general incomparable semiequilibrium SEQ models reﬁnements seen Example 22 The SCCmodels deﬁned programs crossconstraints split SEQmodel respect arbitrary splitting sequence fact SCCmodels exactly HTmodels split models splitting sequence Furthermore coincide MJ Cmodels programs crossconstraints split SEQmodels respect arbitrary splitting sequence However inclusion holds MJ Ccompatible splitting sequences dashed symbol MJ Cmodels exactly HTmodels split models MJ Ccompatible splitting sequence 7 Complexity computation In section turn computational complexity paracoherent model semantics considered previous sections In deal SEQmodel split SEQmodel semantics treat SST model semantics passing reason complexity SST model semantics elucidated 17 SEQmodel semantics brieﬂy considered Regarding SEQmodel semantics study following major reasoning tasks MCH INF COH Given program P HTinterpretation X Y decide X Y SEQP Given program P atom v t f bt decide brave resp cautious SEQconsequence SEQ resp P cv P value v denoted P bv SEQ value v X Y SEQP value v Given program P decide SEQP cid12 The generalizations problems split SEQsemantics addition split sequence S input SEQ replaced SEQS denoted MCHS INFS COHS respectively We consider problems classes programs viz normal disjunctive stratiﬁed headcyclefree programs11 split SEQmodels problems SCC MJ Csplitting sequences S The attentive reader ask positive programs considered split sequence SEQmodels coincide minimal models P Corollaries 2 4 Furthermore note hcf programs SEQsemantics sensitive body shifts P b b b SEQmodels ab b ab shift P b b b b single SEQmodel ab Thus results hcfprograms immediately carry normal program 71 Overview complexity results Our complexity results summarized Tables 1 2 They SEQmodel semantics respect model checking MCH inference INF level higher polynomial hierarchy EQmodel answer set semantics surprising characterization SEQmodel Theorem 2 involves hminimality gapminimality EQmodel deﬁnition involves hminimality As gapminimality global property checked hminimal HTmodels program intuitively additional quantiﬁer needed express hminimal HTmodel smaller gap exists particular causes SEQmodel checking normal programs intractable The additional quantiﬁer needed brave cautious reasoning 11 Note 17 consider stratiﬁed hcfprograms G Amendola et al Artiﬁcial Intelligence 234 2016 219271 243 Table 1 Complexity SEQmodels completeness results The results hold SST models Problem Program P Normal strat normal headcyclefree Disj stratiﬁed disjunctive MCH Model checking INF Brave reasoning Cautious reasoning COH Existence X Y SEQP P bv SEQ P cv SEQ SEQP cid12 coNPc cid3 p 2 c cid4p 2 c NPc cid4p 2 c cid3 p 3 c cid4p 3 c NPc Table 2 Complexity split SEQmodels completeness results The results hold canonical models SCC MJ Csplit sequences S Problem Program P Normal strat normal headcyclefree Disj stratiﬁed disjunctive MCHS Model checking INFS Brave reasoning Cautious reasoning COHS Existence X Y SEQS P P bv SEQS P cv SEQS SEQS P cid12 coNPc cid3 p 2 c cid4p 2 c cid3 p 2 c cid4p cid3 p cid4p cid3 p 2 c 3 c 3 c 3 c need ﬁnd suitable SEQmodel establishes respectively refutes query atom exception discussed For coherence problem complexity different compared EQmodels semantics resorts classical coherence SAT programs lower programs constraints EQmodel existence NPcomplete resp cid3 p 2 complete COH polynomial higher normal stratiﬁed programs constraints COH NPcomplete EQmodel existence polynomial The results Table 2 split SEQmodels complexity SEQmodels structural information affect complexity Problem COH harder Problems MCH INF harder MCH reduces polynomially MCH instances splitting hardness results arbitrary splitting sequences inherited respective results splitting The reason complexity increase COH coherence D3 longer holds split SEQmodel semantics In particular means imposing structural condition building SEQmodels SCCs eliminate models The increase complexity important implication Namely usual complexity hypotheses polynomialtime method μ exists associates P splitting sequence S μP polynomialtime checkable criterion P μ respects structure trivial μP cid12 AtP SEQS P cid12 S cid12 AtP ii μ preserves coherence SEQP cid12 implies SEQS P cid12 This negative result holds method μ allowed nondeterministic example guess suitable splitting sequence S P In words price ensuring coherence splitting sequence tractable NP effort merge components necessary For SCC MJ C splitting sequences obtain analogous results informally problems easier splitting purely syntactic notion blocked irrelevant rules 711 Semistable models For semistable models similar results hold SEQmodels Table 1 The reason model checking semi stable models amounts characterization Theorem 1 test similar SEQmodels according Theorem 2 testing I J β P like testing I J P feasible polynomial time conditions ii cid16 Similar arguments SEQmodels establish membership results analog conditions SST models The matching hardness results derived different reductions 17 Noticeably proofs establish hardness restrictions hcf stratiﬁed normal disjunctive stratiﬁed programs hcfprograms membership model checking coNP follows fact deciding item Theo rem 1 feasible polynomial time easily seen test amounts deciding I MMP J P J hcf minimal model checking hcf programs polynomial 8 tractability follows cid16 ii 72 Derivation results In following formally state derive results Tables 1 2 Rather going tiring technical details shall conﬁne membership parts essential points hardness parts constructed programs proving correctness case routine We exploit cases splitvariant cid4S problem cid4 features complexity trivial split sequence S AtP cid4S cid4 complexity 244 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Theorem 10 Given program P splitting sequence S HTinterpretation X Y recognizing X Y SEQS P coNPcomplete normal stratiﬁed headcycle free P ii cid4p 2 complete disjunctive stratiﬁed disjunctive P In cases coNP resp cid4p 2 hardness holds S cid3 SEQmodel semantics Proof The membership parts MCH derived follows Given HTinterpretation X Y program P verify Theorem 2 SEQmodel P checking X Y P obviously feasible cid16 guess polynomial time proving hminimality item cid16 X veriﬁed polynomial time hminimality tested coNP cid16 Y P X HTmodel X cid16 gap X Y cid16 decided oracle cid4p Condition ii cid16 exists establishes membership cid4p amounts X MMP Y P hcf P Y hcf minimal model checking programs polynomial 8 P normal P Y Horn minimal model checking wellknown polynomial 2 In case P hcf normal deciding hminimality polynomial cid16 gapminimality item ii 2 hminimal model X cid16 X Y cid16 gap X As split SEQmodels Theorem 5 deciding X Y SEQmodel P wrt S S1 Sn reduces checking X Y X Y Sk SEQmodels P resp b Sk P k1 k 1 n Each program b Sk P k1 normal stratiﬁed normal hcf stratiﬁed disjunctive P property Hence established membership results SEQmodels generalize case splitting sequences The matching hardness results item ii SEQmodels proved Appendix C1 stratiﬁed normal programs covers normal hfcprograms simple reduction minimal model checking positive programs P wellknown coNPcomplete cf 16 For rule r let csr constraint rewriting csr r Hr let csP csr r P Then M MMP iff M SEQcsP All hardness results B trivially extend arbitrary splitting sequences establishes result cid2 r B cid16 Y cid16 Y Theorem 11 Given program P splitting sequence S atom value v t f bt deciding P bv SEQS cid3 p 2 complete normal stratiﬁed normal hcf P cid3 p 3 complete disjunctive stratiﬁed dis ii P cv SEQS cid4p 2 complete normal normal stratiﬁed hcf P cid4p 3 complete disjunctive stratiﬁed dis junctive P junctive P In cases cid3 p 2 cid4p 2 resp cid3 p 3 cid4p 3 hardness holds S cid3 SEQmodel semantics 3 cid4p Proof Membership brave resp cautious reasoning SEQmodels wrt S cid3 p 3 disjunctive programs follows Theorem 10 similarly membership normal normal stratiﬁed hcfprograms cid3 p 2 The cid3 p 3 hardness brave resp cautious reasoning SEQmodels stratiﬁed disjunctive programs proven Appendix C1 resp Appendix C2 The cid3 p 2 hardness stratiﬁed normal programs normal hcf programs follows reduction brave resp cautious reasoning positive disjunctive programs P cid3 p 2 2 hard Appendix C1 For P atom M M MMP iff csP bbt resp cid4p SEQ SEQmodels P csP HTmodels M M resp M resp P f M MMP cid2 c iff csP cf 2 resp cid4p 3 resp cid4p 2 cid4p S Notably brave reasoning complexity cases ﬁx truth value v arbitrarily S AtP SEQmodels For cautious reasoning similarly holds v bt S AtP complexity drops coNP resp cid4P 2 Appendix C2 Theorem 12 Given program P splitting sequence S deciding SEQS P cid12 2 complete normal stratiﬁed normal hcf P 3 complete stratiﬁed disjunctive disjunctive P cid3 p ii cid3 p iii NPcomplete program classes considered S cid3 SEQ place SEQS Proof The membership parts ii follow easily results MCH Theorem 10 candidate SEQmodel P wrt S guessed checked NP resp cid3 p 2 oracle polynomial time The hardness parts b Problem INF The cid3 p ii obtained reduction brave reasoning P v 2 hard b iff SEQmodel X Y P exists Y Let b fresh atom instances form P v 3 hard resp cid3 p G Amendola et al Artiﬁcial Intelligence 234 2016 219271 245 deﬁne P resp cid3 p 2 hardness cid16 P b b Then P cid16 SEQmodel wrt S AtP AtP cid16 iff P v b proves cid3 p 3 The result iii immediate consequence NPcompleteness SAT satisﬁability clause set proposi tional logic classical coherence property D3 SEQmodel semantics cid2 Canonical split SEQsemantics For SCC MJ Csplitting sequences Theorem 13 The results Problems MCH INF COH Table 2 continue hold S restricted SCC resp MJ C splitting sequences Proof Indeed respective hardness proofs extended setting For program P let p fresh atom let P cl P p p p cid3 Clearly P P cl SEQmodels P cl single SCC cid3cid16 cid3 p Exploiting programs MCH INF single splitting sequence S cid3cid16 Problem COH S conclude method μ Subsection 71 exists usual complexity hypotheses cid2 cid16 cid3cid16 cid3cid16 b SCC MJ Csplitting sequences Furthermore S cid16 73 Constructing recognizing canonical splitting sequences It wellknown SCCP SGP eﬃciently computable P Tarjans 53 algorithm linear time hard recognize SCCsplitting sequence S polynomial time S nondeterministically generated polynomial time fact linear time We obtain similar tractability results MJ CP MJ Csplitting sequences To end ﬁrst note following useful proposition Proposition 20 Let P program let K1 K2 SCCP Then K1 K2 satisfy ii Deﬁnition 12 iff disconnected SGP path K1 K2 vice versa exists Based proposition characterize joinable pairs witnessed constraint r follows As usual let SCC Ci set C SCCP SCCs maximal C j C exists comparable Ci SGP ordered Ci topological ordering SGP form C j Ci Corollary 10 Given constraint r P let C1 Cl maximal SCCs C P SGP Atr C cid12 Then K 1 K2 K1 cid12 K2 joinable pair P witnessed r satisﬁes iii r iff K 1 K2 C1 Cl By exploiting characterization construct MJ CP furthermore JGP following steps 1 compute DGP SCCP SGP SCCP C r 2 constraint r P determine maximal C r l set MC C r r P Hr NMI SCCP C r r P Hr 3 let C r C r 1 4 merge J 1 J 2 MC J 1 J 2 cid12 set MC MC J 1 J 2 J 1 J 2 longer possible 5 set MJ CP MC NMI JGP V JG E JG V JG MJ CP E JG J 1 J 2 J 1 cid12 J 2 MJ CP Atr cid12 1 C r 1 C r C r l l J 1 b J 2 b E DG Example 47 Reconsider program P Example 37 contains constraints r1 b r2 b c We recall SCCP b c d e In Step 2 procedure maximal SCCs r1 b single maximal r2 b Step 3 MC b b NMI c d e In Step 4 b b merged resulting MC b Finally Step 5 MJ CP assigned MC NMI b c d e correct result The following result states correctness procedure implemented run bilinear time Theorem 14 Given program P MJ CP JGP computable time Ocscid25P cid25 cs r P Hr number constraints P cid25P cid25 size P In particular algorithm runs linear time number constraints bounded constant It remains interesting open issue time bound feasible constraint 246 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 8 Related work In section ﬁrst review general principles logic programs negation consider relationship semistable semiequilibrium semantics semantics logic programs negation Finally address possible extensions work 81 General principles In context logic programs negation principles identiﬁed semantics desirably satisfy Among principle minimal undeﬁnedness 59 says smallest set atoms undeﬁned true false principle justiﬁability foundedness 59 atom true derived rules pro gram possibly negative literals additional axioms principle closed world assumption CWA models disjunctive logic programs Eiter et al 19 If rule atom head false body head contains true atom distinct wrt acceptable model false model It shown semistable semiequilibrium semantics satisfy ﬁrst principles properly rephrased viewing bt undeﬁned CWA principle shown simple program P acceptable model K However particular feature making example assumptions truth atoms CWA condition restricted atoms believed assumption Iκ cid12 bt semistable resp semiequilibrium model Iκ CWA property holds We eventually remark Property N enforced semistable models adding constraints atoms original program However enforcing Property K semistable models involved eﬃcient encodings require extended signature 82 Related semantics In section relate semistable semiequilibrium semantics semantics literature allow models answer set program exists 821 Evidential stable models Motivated fact disjunctive deductive database DDDB lack stable models Pstable models Seipel 51 presented paracoherent semantics called evidential stable model ESM semantics assigns model DDDB constraintfree disjunctive logic program properties D1D3 Intro duction satisﬁed Similar 49 guided slightly different intuition deﬁned evidential stable models program P twostep process First P transformed positive disjunctive program P called evidential trans form P answer sets minimal models considered Among second step selected informally preferred according reasoning contradiction involve While Seipel consider constraints approach naturally extends programs constraints consider extension sequel Formally given cid3 let cid3E cid3 Ea cid3 Ea intuitively means evidence true Given consists following rules program P evidential transformation P E E r B 1 Hr E B r E B 2 E Hr E B 3 Ea cid3 r r rule r P form 1 set S cid3 atoms E S Ea S Intuitively rules 2 3 correspond rules added Sakama Inoues program P κ epistemic transformation ensure Properties N K Deﬁnition 6 rules 2 different P κ They intuitively infer evidence truth atom b j negation m j n violation positive rule b j 1 j m true ai 1 l true An interpretation I cid3E minimal models P E evidential stable model 1 I minimal model P minimal E violation set VE I deﬁned VI cid3 Ea I I 2 I Now following shown For biinterpretation X Y let X Y E X E Y I cid3E let βI E inverse E βI X Y X Y E I Theorem 15 Let P program cid3 Then biinterpretation X Y cid3 holds X Y SEQP iff X Y E evidential stable model P G Amendola et al Artiﬁcial Intelligence 234 2016 219271 247 Thus SEQmodel semantics coincides evidential stable model semantics disjunctive logic programs The E theorem gives characterization evidential stable models terms HTlogic turn obtain P simpler program SEQmodels epistemic transformation P κ Section 4 Note program straightforward encoding semantic characterization SEQmodels Theorem 2 class models contain hminimal HTmodels P suﬃciently single SEQmodels gap P minimization E 822 CRProlog In order deal inconsistency answer set programs Balduccini Gelfond introduced CRProlog 4 declar ative approach inconsistency removal program Roughly speaking program P equipped set rules CR form r h1 hk l1 lm lm1 ln intuitive reading l1 lm accepted beliefs lm1 ln h1 hk possibly believed In addition preference relation rules provided cid16 cid16 Rules pool CR added restore consistency program P answer set exists applying Occams cid16 P R razor Informally subsetminimal set R CR rules chosen P R cast accepted CRanswer sets P Formally P CR compiled single ASP syntax answer sets P abductive logic program abducible atom applr rule r CR control aware applicability minimal set abducibles assumed true justiﬁcation For simplicity use abstract description coherent R The CRProlog approach different semistable SEQmodel semantics respects First provides syntactic inconsistency management strategy semantic treatment incoherence semantic level interpre tations Second remains user ensure coverage cases incoherence bears risk cases overlooked On hand depending application preferred pointed Even CR consists atoms P CRanswer sets SEQmodels disagree adding facts case CRProlog stronger blocking negated atoms semistable SEQmodels semantics admits answer sets cid16 Example 48 Consider program P c b b c This program unique SEQmodel c ac c true b false believed true rb b assume preferences Then R cid16 ra single minimal cid16 c b b c answer sets viz Let CR ra subset CR P coherent P c b CR answer sets rc c cid16 P R cid16 The program previous example shows adding fact stronger blocking use negation We remark similarly applies generalized stable model semantics 30 abducible facts added program P order obtain stable model 823 Wellfounded semantics The prominent approximation stable semantics wellfounded semantics WFS 56 It assigns normal logic program P terminology HTmodel WFP I J called wellfounded model atoms I regarded true atoms J false remaining atoms gapWFP regarded undeﬁned possibly true HTlogic Intuitively false atoms true regardless undeﬁned atoms assigned Extending WFS disjunctive program nontrivial proposals general consensus right extension 5713 recent proposals comment proposal Cabalar et al 13 subsection partial stable models The wellfounded semantics different characterizations wellknown alternating ﬁxpoint characterization cf 555 normal constraintfree programs P operator γP X LMP X X cid3 antimonotonic LMQ denotes unique minimal model Q Q P X exists We WFP I J I P X γP γP X J γP I Furthermore wellfounded model ﬁxpoint monotonic operator γ 2 partial stable model Section 824 characterized logic HT2 terms partial equilibrium model leaves atoms undeﬁned 14 With regard Section 81 WFS satisfy minimal undeﬁnedness justiﬁability naturally CWA prin ciple It satisfy answer set coverage D1 congruence D2 single answer set exists coherence D3 Roughly speaking wellfounded model remains agnostic atoms involved cycles negation truth value determined parts program propagates undeﬁnedness This effect atoms remain undeﬁned program Example 22 property It wellknown wellfounded model WFP I J approximates answer sets P sense I M J answer set M P geared approximating cautious inference literals answer 248 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 sets P approximating individual answer sets If answer set exists WFS avoids trivialization yields model notion undeﬁnedness associated propagation lead informative results shown Example 4 SEQreﬁnement WFS A closer look WFS reveals SEQmodel semantics reﬁnes following sense Notation Let HTinterpretations M X Y M reﬁnement M results assigning atoms gapM cid16 true false12 cid16 denote M cid26 M cid16 X Y Y M cid16 X X cid16 Y cid16 cid16 cid16 Recall HTinterpretation X Y program P hminimal HTmodel X normal P means X model P Y cid16 Y exists X cid16 X Proposition 21 Let M X Y hminimal model constraintfree normal program P If gapM gapWFP M cid26 WFP M reﬁnement wellfounded model P Note proposition immediate compare gaps models The result follows wellknown properties WFP relationship answer set semantics First mentioned WFS approximation stable semantics Lemma 2 For equilibrium stable model M Y Y P holds M cid26 WFP Furthermore WF making unassigned atoms true values assigned atoms affected That Lemma 3 For set G gapWFP holds WFP G cid26 WFP Intuitively atom outside gapWFP rule ﬁres resp rules deﬁnitely applicable Next hminimality allows unsupported atoms gap By making facts answer set Lemma 4 If M X Y hminimal model P M cid16 Y Y answer set P cid16 P gapM Indeed X model P Y atom X derived P Y adding gapM Y X atoms Y cid16 Y clearly proper subset derived derived P Y gapM P Armed lemmas prove proposition Proof Proposition 21 Let M X Y hminimal model P gapM gapWFP let WFP I J cid16 cid26 WFP By Lemma 4 N Y Y answer set P As reﬁnement transitive obtain N cid26 WFP follows Y J cid16 P gapM By Lemma 2 N cid26 WFP cid16 Lemma 3 WFP Regarding X alternating ﬁxpoint characterization WFP I LMP J WFP hminimal model P M hminimal model P X LMP Y As γP I LMP I antimonotonic Y J follows X I Thus M X Y cid26 I J WFP This proves proposition cid2 From proposition obtain reﬁnement result arbitrary normal programs programs contain constraintfree WFP exist Note constraint r P false body r true WFP seen constraints For program P deﬁne wellfounded model WFP WFP P WFP WFP bi B alternating ﬁxpoint characterization r false WFP c j B cid16 P cid16 P P cid16 cid16 Corollary 11 Proposition 21 Every normal program P WFP exists SEQmodel M M cid26 WFP In fact SEQmodel M P gapM gapWFP satisﬁes M cid26 WFP Proof Indeed SEQmodels special hminimal models global gapminimization result follows Proposi tion 21 fact WFP WFP constraintfree P cid2 cid16 I J hminimal I LMP J LMP cid16 J P cid16 Note SEQmodel reﬁnes wellfounded model Eg P b Then WFP SEQmodels M1 M2 b M2 gap outside gap WFP 12 That M cid26 M cid16 iff M cid16 p M p precision ordering G Amendola et al Artiﬁcial Intelligence 234 2016 219271 249 If desired easily restrict SEQmodels program P reﬁne wellfounded model WFP I J replacing P P wf P I A A cid3 J Note WFP wf exists WFP exists We obtain following result Proposition 22 For normal program P WFP exists SEQP wf M SEQP gapM gapWFP By combining Corollary 11 Proposition 22 paracoherent way reﬁne wellfounded semantics query answering coincides answer set semantics coherent programs provides general informative results reasoning cases Examples 4 5 824 Partial stable model semantics Pstable partial stable models coincide 3valued stable models 47 best known approximation answer sets Like wellfounded model Pstable models characterized ways cf 19 respect equilibrium logic Cabalar et al 14 semantically characterized Pstable models logic HT2 terms partial equilibrium models For concerns discussion use characterization Pstable models X Y terms multivalued operator ˆγP X MMP X HTinterpretations X Y Y ˆγP X X ˆγP Y characterization easily obtained 19 In particular normal programs WFP Pstable model P fact reﬁned model wrt cid26 answer set M P M LMP M amounts Pstable model M M P vein according Cabalar et al 1314 wellfounded models disjunctive program P reﬁned Pstable models M P Pstable model M wellfounded model exist cid16 cid12 M P exists M cid26 M cid16 The Pstable models ﬁnegrained wellfounded model behave similarly regard proper ties Subsection 81 properties D1D3 Introduction Among reﬁnements Pstable models 19 closest spirit semistable SEQmodels Lstable models Pstable models leave minimal set atoms undeﬁned In fact Lstable models satisfy properties Subsection 81 D1D3 exception coherence D3 fails disjunctive programs programs lack Pstable model Lstable model Example 49 The program P b b c c b c 16 Pstable models multiple SEQmodels viz ac b ab c bc coincide SST models Intuitively atoms disjunctive fact b c true c false turn b true The resulting total interpretation ab ab fulﬁll b minimal ab b b c With symmetric argument b c conclude Pstable model P exists model P However adopting addition c believed true arrive SEQmodel ac The main difference Lstable semantics semistable resp semiequilibrium semantics takeslike Pstable semanticsa neutral position undeﬁnedness combination negation lead weaker conclusions For example program P Example 4 single Pstable model P single Lstable model coincides wellfounded model conclude Lstable semantics P visits_barberjoe false Also program Example 22 single Pstable Lstable model atoms undeﬁned c true SEQmodel semantics Similarly program P b b c c 17 single Pstable Lstable model atoms undeﬁned add rules d d b d c P new program cautiously entails semistable SEQmodel semantics d true Lstable semantics Possible SEQreﬁnement Lstable semantics As SEQsemantics reﬁnes WFS shown Section 823 natural question similar reﬁnement property holds Lstable models Unfortunately case normal programs constraints possess Lstable models witnessed following example Example 50 Consider program cid8 P b d b d c c d c d e d b e cid9 e b 250 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Intuitively rules heads b guess b d true c undeﬁned way derive c negation d true b false guess b Thus proper guessing b makes gap smallest Under WFS atoms undeﬁned atom occurs P cycles negation Furthermore N1 ad acd N2 bd bcd Lstable models partially stable smaller gap gapN1 gapN2 c possible There Lstable model d need true means e false false b false end N1 N2 actually Pstable model As check M e ec hminimal model P gapM c Thus M additional hminimal model P M reﬁne N1 N2 If slightly extend P 17 cid16 cid16 c c cid16 P c P 18 similar situation Again c occurs head rule c c undeﬁned cid16 cid16 partial stable model follows c d cid16 cid16 cid16 On hand M hminimal model 2 c c 1 gapN Lstable models P cid16 P gapM c M unique SEQmodel P models unrelated Thus obtain N gapN bd bcc ad acc d N cid16 1 cid16 2 cid16 cid16 cid16 Possible SEQreﬁnement disjunctive Pstable models The previous example showed SEQmodels smaller gaps Lstable models necessarily reﬁne However reﬁne Pstable model WFM normal program rule reﬁne Pstable model disjunctive program P particular wellfounded model reﬁned wrt cid26 Pstable model It appears reﬁnement property hold Example 51 Consider following variant program line 16 Example 49 P b b c c b c d d e d e d By disjunctive fact d e d e true hminimal model Pstable resp SEQmodel P If d true clauses containing b c admit Pstable model e true single Pstable model M e abcde On hand SEQmodels P M1 ad acd M2 bd abd M3 cd bcd note hminimal model P e true d atom b c believed true true gapminimal As Mi smaller gap M reﬁne reﬁnement property hold Note example shows different normal programs disjunctive programs SEQmodels reﬁne intersection Pstable models HTinterpretation X Y X resp cid3 Y true resp false Pstable model P Thus conclusion disjunctive programs Pstable SEQmodels general unrelated 825 Further semantics The regular model semantics 59 3valued approximation answer set semantics satisﬁes unde ﬁnedness foundedness CWA principle However classically coherent satisﬁes D3 For odd loop program P 17 regular models coincide Lstable models program P 18 regular models b c While regular models fulﬁll answer set coverage fulﬁll congruence For discussion 3valued stable regular models semantics coinciding 19 cid16 Revised stable models 43 2valued approximation answer sets negated literals assumed maximally true assumptions revised lead selfincoherence odd loops inﬁnite proof chains For example oddloop program P 17 revised stable models viz b c b c The semantics deﬁned normal logic programs fulﬁlls answer set coverage D1 congruence D2 cf 43 Similarly called pstable models 39 confused Pstable models deﬁnition disjunctive programs satisfy answer set coverage D1 normal programs congruence D2 fails Moreover pstable model program minimal model program programs P 17 models pstable model classical coherence hold 83 Modularity To knowledge modularity aspects paracoherent semantics studied extensively A noticeable excep tion 19 studied applicability splitting sets partial models semantics Pstable Lstable semantics considered While Pstable models splitting property similar answer sets holds case Lstable models global gapminimization analogue Theorem 7 Lstable models place SCCmodels expected hold Huang et al 28 showed hybrid knowledge bases generalize logic programs modular paraconsistent semantics stratiﬁed knowledge bases semantics aims dealing classical contradictions incoherence terms instability cyclic negation G Amendola et al Artiﬁcial Intelligence 234 2016 219271 251 Pereira Pinto 45 layering notion similar SCCsplit sequences introduce layered models LM semantics alternative semantics extends stable models semantics normal logic programs The layered models program P superset answer sets inclusion strict P coherent property D2 hold In sense CWA relaxed necessary model construction process Faber et al 20 introduced notion modularity answer set semantics based syntactic relevance paracoherent features However notion geared query answering model building incorporate gap minimization semantic level Finally look models related splitting sequence Not SEQmodel P reﬁnement WFP SCCmodel P lose SEQmodels splitting Eg P b b c b c SCCs C1 C2 b C3 c WFP abc single SCCmodel P M ac P cid16 ab lost splitting sequence S ab abc restricted C1 M SEQmodel M smaller gap viz M gap b However analogue Corollary 11 recall normal programs constraints lack wellfounded model constraints violated cid16 Proposition 23 Let P normal program possibly containing constraints WFP exists let S arbitrary splitting sequence P Then P SEQS model M M cid26 WFP SEQS model M P gapM gapWFP satisﬁes M cid26 WFP The reason wellfounded semantics satisﬁes modularity respect splitting sequences This conse quence following lemma Lemma 5 For splitting set S normal program P possibly containing constraints WFP exists holds 1 WFP S partial stable model b S P recall S denotes restriction S 2 WFP WFt S P I A A A J I WFb S P I J This lemma turn follows Proposition 12 19 states property partial stable models constraintfree disjunctive programs WFP partial stable model note constraints P merely determine existence WFP inﬂuence truth valuation atoms An immediate corollary Proposition 23 normal programs P wellfounded model exists SCCmodel semantics applicable SCCmodel reﬁnes wellfounded model WFP SCCmodel P adopts undeﬁned atoms WFP believed true reﬁnes WFP holds MJ Cmodels We ﬁnally note case SEQmodels P restrict split SEQmodels P reﬁne WFP adding respective constraints recall P wf P I A A J WFP I J Proposition 24 Let P normal program possibly containing constraints WFP exists Then splitting sequence S P holds SEQS P wf M SEQS P gapM gapWFP Proof Sketch By Proposition 22 SEQP wf M SEQP gapM gapWFP The result shown induction split sequence S Theorem 5 Lemma 5 cid2 As consequence Propositions 23 24 particular SCC MJ Cmodels normal program easily restricted reﬁne wellfounded semantics paracoherent manner discussed end Subsection 823 9 Further issues 91 Inﬁnite splitting sequences As mentioned earlier concentrate article ﬁnite splitting sequences split SEQmodels easily extended inﬁnite splitting sequences S S1 S2 S To end deﬁne splitSEQ models SEQS1iP S1i S1 S initial segment P relative splitting sequence S SEQS P S length Indeed extension ﬁnite sequence S1i S i1 lead loss SEQmodels hand passing S new model candidates relative S encountered cid16 i1 252 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 92 Userdeﬁned subprograms focusing In previous sections considering issue paracoherence principled level input user Important input example intended modular structure program andor focus attention looking paracoherent model As brieﬂy discuss notions results easily extended settings 921 Userdeﬁned subprograms In design ASP program users proceed deﬁning implicitly subprograms composed hierarchically manner global program That form P P 1 P m P subprogram deﬁnes atoms signature cid3i cid3 cid31 cid3m cid3i pairwise disjoint S S1 Sm ji cid3 j 1 m splitting sequence P 13 A particular example stratiﬁed logic programs P S meant deﬁne atoms cid3i form ith layer cid10 Example 52 A elaborated version company program Example 24 complex subprograms deﬁne different categories workers core staff employees social security regulations current program P contains singlerule deﬁnitions concepts Note P stratiﬁed reasonable expect elaborated versions property However programs P general include unstratiﬁed negation Example 53 The barber program Example 3 extended rule shaved X shavesY X subprogram P 1 deﬁning shaved P 2 subprogram classiﬁes persons rules boyX maleX shavedX adultX shavedX Example 54 As mentioned earlier Section 5 program P composed P 1 party program Example 2 P 2 balcony count X X 3 balcony living_room determine location party Each SEQmodels given P 1 extended SEQmodels P balcony true living_room true constraint violated Exploiting notions Section 5 readily deﬁne SEQmodels P viewing subprograms atomic blocks SEQS models P sequence S However subprograms P P j mutually independent cid3i intersection rule body P j vice versa order P P j matter result As case SCCs semantics robust requiring SEQ S P SEQSπ P Sπ Sπ 1 Sπ m π 1 π 2 π m permutation 1 m Sπ cid3π 1 cid3π 1 m constraint free program P welldeﬁned subprogram SEQmodels induced cid31 cid3m Furthermore extended programs P crossmodule constraints constraints r nonempty intersection incomparable14 cid3i cid3 j deﬁne maximal joinable subprograms SEQmodels analogous SCCs Note SCCs C1 Cm program P viewed atom sets cid3i Ci deﬁned subprograms P tain rules r P nonempty head contained cid3i The subprogram SEQmodels P induced C1 Cm coincide SCCmodels P Thus view syntactic SCCmodels extremal case user deﬁni tion information modules Furthermore reduce subprogram semantics program P wrt cid31 cid3m SCCsemantics P pi pi pi cid3i program P Clearly rules added P tautologic semantic effect cid3i enforce atoms cid3i SCC P simple rewriting For P use fresh atom pi let P P cid16 P cid16 cid16 cid16 m cid16 1 922 Focusing Another aspect focusing use paracoherence semantic level One natural way incorporate constrain atoms believed true justiﬁcation set B atoms This corresponds adopting set assumptions hypotheses abduction The effect focusing simply SEQmodels X Y program pruned satisfy gap X Y B Example 55 Let reconsider party visit program Example 2 It perfectly sense question person comfortable adopting unjustiﬁed belief If require provable evidence Mark Peter B goJohn goBill original SEQmodels M2 goJohn goJohn goBill remains If 13 For technical reasons assume wlog constraint r P atom cid3i occurs 14 That cid3i Sπ k cid3 j cid2 Sπ k cid3 j Sπ cid16kcid16 cid3i cid2 Sπ cid16kcid16 π π cid16 k k cid16 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 253 hand simply require provable evidence persons Mark SEQmodel M1 goMark remains Example 56 In company Example 24 natural focus B has_social_secsam sense believe syntactic atom ssnrsam sam furthermore considered modeling realistic social security numbers considered believe particular social security number SSNR big range strong assumption believing has_social_secsam implied releases adopting particular SSNR In general pruning easily accomplished The computational complexity reasoning tasks considered Section 7 Tables 1 2 remains Problem COH cid3 p 2 complete disjunctive disjunctive stratiﬁed programs problem amounts deciding hminimal HTmodel X Y program P exists gap X Y B cid3 p 2 matching hardness follows immediately results answer set existence 16 93 Language extensions As mentioned semistable semantics originally developed extension pminimal model seman tics 49 paraconsistent semantics extended disjunctive logic programs programs default negation allow strong classical negation A declarative characterization pminimal models means frames given Alcantara et al 1 coined term Paraconsistent Answerset Semantics PAS This characterization simpliﬁed underpinned logical axiomatization 37 Routley models simpler possible worlds model Our characterizations semistable models semiequilibrium models easily extended setting applied semantic structures given quadruples interpretations biinterpretations respectively Routley hereandthere models HTmodels Intuitively amounts considering worlds consists pair interpretations positive literals atoms negative liter als strongly negated atoms The respective epistemic transformations unaffected fact literals considered atoms One semantics simple 1to1 correspondence semistable resp semiequilibrium models transformed logic program strong negation A given extended pro cid16 cid3 strong negation replacing negative literal gram P translated program P form cid3 If I J semistable semiequilibrium model P cid16 J cid16 I J cid3 I cid3 cid16 cid16 cid16 semistable semiequilibrium model P Note semistable semiequilibrium models extended logic programs obtained way generalize PAS semantics means paraconsistent paracoherent Logi cally amounts distinguishing truth values additional truth values undeﬁned believed false believed inconsistent true contradictory belief false contradictory belief inconsistent The computational com plexity extended programs Compared 49 conﬁned propositional programs opposed programs variables nonground programs However respective semantics nonground programs grounding straightforward Alternatively case semiequilibrium models simply replace HTmodels Herbrand models quantiﬁed equilibrium logic 41 Similarly semantics replacing interpretations semantic structures Herbrand interpretations given functionfree ﬁrstorder signature yields characterization respective models Finally equilibrium logic conservative extension answer sets programs consisting rules proposi tional language notion SEQmodel immediately extends richer classes programs propositional connectives programs negation head 34 nested logic programs 33 Furthermore easily extended programs weight constraints 22 aggregates 21 general external atoms 18 hybrid knowledge bases 12 23 94 Parametric merging semantics By results Section 7 tractable merging policies ensure classical coherence D3 merge components necessary To deal issues 1 2 Section 62 crossconstraints depen dence parametric approach gradually merges SCCs attractive We brieﬂy outline possible approach merges components bounded distance Denote C SCCP DkC set descendants C SGP distance k 0 proceed follows 1 Create graph Gk node vr constraint r P labeled set cid13 cid11 cid14 λvr clp DkCi Ci SCCP Ci Atr cid12 254 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 SCCs SCCs distance k SCC Ci intersects r collected set resulting collection D SCCs function clpD applied The closes D respect SCCs C path members C1 C2 D SGP 2 Merge nodes vr vrcid16 labels clp λvr λv 3 After create node v SCC C occur label graph set λv C 4 add edge v v SGP edge Ci C j Ci λv C j λv cid16 r cid12 long possible v cid12 v cid16 cid16 cid16 The resulting graph Gk acyclic distinct nodes disjoint labels Similar JGP topological ordering λv SCCs contain Gk induces splitting sequence S node labels λv taken union thanks analog Theorem 8 deﬁne Mkmodels P MkP SEQS P arbitrary For k 0 DkC C node vr initial graph G 0 contains label λvr SCCs intersect r ﬁnal graph G 0 J x MJ CP included node label J λv MJ CP M0P holds As clearly MkP Mk1P holds k 0 MkP SEQP node v Hence M MJ CP SEQP eventually establishes large k holds hierarchy models M D3 results Section 7 imply predicting k MkP cid12 intractable cid10 Other relaxed notions models different parameters crossconstraints direct dependency conceivable leave future study 10 Conclusion In paper studied paracoherent semantics answer set programs semantics ascribes mod els disjunctive logic programs nonmonotonic negation answer set respectively stable model exists lack stability models caused cyclic dependency negation constraints Ideally semantics approximates answer set semantics faithfully delivers models possible expressed properties D1D3 beneﬁcially exploited scenarios unexpected inconsistency arises needs stay operational inconsistency tolerant query answering Among wellknown semantics feature properties semistable model semantics 49 novel semiequilibrium model semantics amends semistable model semantics eliminating anomalies For semantics deﬁned program transfor mations given modeltheoretic characterizations terms bimodels HTmodels respectively particular semiequilibrium models relax notion equilibrium models reconstruct answer sets HTlogic allowing minimal sets unsupported assumptions We reﬁned semiequilibrium model semantics regard modular program structure deﬁning models splitting sets splitting sequences constrains set semi equilibrium models way amenable modular evaluation programs For presented canonical semiequilibrium models analogy classical Stratiﬁcation Theorem logic programs par ticular evaluation order matter identiﬁed modularity properties semantics allow ﬂexible rearrangement evaluation Furthermore characterized complexity major reasoning tasks semantics com pared semiequilibrium semantics related proposals paracoherent semantics approximations answer sets literature Notably appeared semiequilibrium models coincide evidential stable models 51 semantic computational results carry Different formalisms CRProlog 4 generalized stable models 30 unsupported assumptions semistable semiequilibrium models serve block rules establish positive evidence deriving atoms rules Furthermore shown wellfounded model normal logic program reﬁned semiequilibrium models program easily modiﬁed semiequilibrium models reﬁne wellfounded model holds canonical semiequilibrium models This provides paracoherent way reﬁne wellfounded semantics inconsistencytolerant query answering incides answer set semantics coherent programs general informative wellfounded semantics supports reasoning cases close answer sets possible As computation attractive feature canonical semiequilibrium semantics allows easy switching coherent answer set mode paracoherent evaluation mode evaluation program incoherence encountered And notably possible disjunctive logic programs 101 Open issues outlook Several issues remain future work investigations A natural issue introduce paracoherence lan guage extensions strong negation nonground programs Fortunately generic framework equilibrium logic makes easy deﬁne SEQsemantics extensions mentioned Section 93 It remains consider modularity extensions deﬁne suitable reﬁnements SEQmodels Particularly interesting modular logic programs 2915 modules organized nonhierarchically explicit module encapsula tion implicit modularity splitting sets occur time Related multicontext systems 10 knowledge bases exchange beliefs nonmonotonic bridge rules based ideas results paper paracoherent semantics certain classes multicontext systems devised G Amendola et al Artiﬁcial Intelligence 234 2016 219271 255 Besides language extensions issue generalizing model selection To end preference gap mini mization supported especially domainspeciﬁc information available subsetminimality natural instance Occams razor lack information Furthermore preference higher lower program components considered intuitively requires guessing hinders evaluation On computation developing eﬃcient algorithms implementation remain integra tion answer set building framework Currently experimental prototypes computing SST P SEQP based semantic characterizations available Another computation method ﬁltering answer sets epistemic transformation P κ resp extension P H T evidential transform P computed ASP solver How 3 cid4P simple postprocessing eﬃcient general cid3 P 3 completeness bravecautious reasoning respectively calls better methods An interesting issue context polynomial transformation evaluation normal hcfprograms disjunctive ASP results feasible E We considered paracoherence based program transformation introduced Inoue Sakama 49 Other notions like forward chaining construction strong compatibility 5835 alternative candidates deal paracoherent reasoning logic programs remains explored Finally issue investigate use paracoherent semantics AI applications diagnosis assumptions exploited generate candidate diagnoses vein generalized stable model semantics 30 systems planning reasoning actions based ASP emerging incoherence meaningfully tolerated Acknowledgements We like thank reviewers preliminary conference versions parts paper article helpful constructive comments José Alferes Tomi Janhunen interesting discussions suggestions We grateful Diemar Seipel pointing work evidential stable models Appendix A Appendix proofs A1 Section 3 Proof Proposition 4 Let r rule cid3 let I J biinterpretation cid3 Suppose I J satisﬁes B r I J B r implies I Hr cid12 I B r We prove I J β r considering cases 1 Assume B 2 Assume J B r cid2 I Then I J cid12β atom B r I J cid12β Br implies I J β r r cid12 Then I J cid12β atom B r I J cid12β Br implies r I J B r Then I J satisﬁes holds I Hr cid12 I B r r conclude I Br Moreover I Hr cid12 implies I J β Hr Thus r I I B I J β r 3 Assume B From B I J β r By assumption cases applies I J proving claim Suppose I J β r We prove I J satisﬁes distinguishing cases 1 Assume I J cid12β Br Then I J cid12β atom B r cid12 implies I J satisﬁes r cid2 I J B Hence B 2 Assume I J β Hr I Br Then I Hr cid12 I B r I J cid12β atom B r r I J satisﬁes By assumption cases applies I J proves claim cid2 Proof Proposition 5 Let P program cid3 Part 1 First let I J bimodel P We prove I J κP P κ Suppose cid16 I implies cid16 I J κP Towards contradiction assume contrary Then exists rule r r transformed r cid16 cid12 recall B cid16 Proposition 4 conclude B cid16 By construction I J κP restricted cid3 coincides I Therefore B P κ I J κP cid12 r cid16 P B r cid16 Since I J β r cid16 r r cid16 cid16 cid16 cid12 I J κP r cid16 contradiction obtained epistemic transformation corresponding rule r P form 1 r I Hr implies I J κP Hr Next suppose r consider following cases cid16 r form 3 b1 bm I J κP implies B cid16 sumption I J κP cid12 r I Hr cid12 I B cid16 By construction I J κP implies J B r Consequently J B r I Moreover Hr cid16 I J κP r Since I J β r conclude r ai I ai Hr I Br Note 256 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 r r r cid16 cid16 I J κP form 5 case I J κP cid12 r form 4 case I J κP cid12 r r cid12 deﬁnition epistemic transformation According construction I J κP follows B λri I J κP contradiction Hr cid16 λri I J κP implies ai I construction conclude ai I J κP contradiction cid16 implies λri I J κP b j I J κP Note b j I J κP iff b j I A consequence I cid12 Br contradicting requirement λri I J κP cf construction I J κP cid16 cid16 holds λrk I J κP ai I J κP λri I J κP From conclude construction I J κP ai I requirements r satisﬁed witnessed λrk I J κP inclusion λri r P B However ai I ai I J κP construction contradiction implies λri I J κP ai I J κP However construction form 6 assumption I J κP cid12 r r cid12 I Br J B cid16 This concludes proof fact I J bimodel P I J κP P κ Part 2 Let M model P κ We prove βM cid3κ I J bimodel P Note construction r r Then r P κ J B r M cid3 implies M cid3 Hr cid12 Since r P κ r M M Hr cid12 Since r I M cid3 J K M First consider rule r P B I B follows assumption M P κ implies M r B cid3 proves claim r P B r Hence Proposition 4 need B It remains I J β r r P B r cid12 Towards contradiction assume r iii M cid3 Hr iv M cid3 B r cid12 hold r M cid3 ii J B case B r cid12 Conditions ii M P κ imply λri r P form 1 B M 1 l cf rule form 3 epistemic transformation r Consequently ai M cf corresponding rule form 4 epistemic transformation r ai M cid3 This rules iii iv hold b j M cid3 m 1 j n But M satisﬁes body constraint P κ cf corresponding rule form 5 epistemic transformation r contradicting M P κ This proves exists r cid12 I J cid12β r concludes proof I J β r Since r P arbitrary r P B follows βM cid3κ bimodel P cid2 r Proof Theorem 1 Let P program cid3 The proof uses following lemmas Lemma 6 If M ASP κ βM cid3κ satisﬁes cid16 J P I cid16 I By Proposition 5 I cid16 J κP let S λri λri M We S λri S r P form 1 1 l By construction I Proof Towards contradiction assume M ASP κ βM cid3κ I J satisfy Then exists cid16 J κP P κ Note I cid16 λri bimodel I cid16 S Suppose case assume λri I cid16 cid16 λri S r Consider rule form 3 cid16 Br J B I r M cid12 K c1 K cn epistemic transformation r We conclude b1 bm M I B r But M P κ λrk M 1 k l However considering corresponding rule form J B cid16 S holds 6 epistemic transformation r conclude λri M contradiction Therefore S cid16 J κP M The contradicts assumption M answerset I minimal model P κ This concludes proof lemma cid2 cid16 I holds ai I I B cid16 J κ M cid3κ conclude I cid16 J κP conclude ai I cid16 J κ M cid3κ Let S r Since I Lemma 7 If I J bimodel P satisﬁes ii exists M ASP κ βM cid3κ I J cid16 cid16 J cid16 I J implies B cid16 B P κ M cid16 cid3κ Then I cid16 I We I cid16 B r I I J bimodel P conclude I Hr cid12 I B Proof Let I J bimodel P satisﬁes ii If I J κP ASP κ c holds βI J κP cid3κ cid16 cid16 I J κP Let I J If I J κP ASP κ exists minimal model answer set M cid16 I J κP Towards contradiction cid16 J hold construction fact M cid16 βM I cid16 J bimodel P Then cid16 J bimodel P Suppose I assume I r cid12 Note cid16 Hr I r I Proposition 4 exists r P B r The r I B cid16 cid12 r contradiction Thus implies I cid16 J r cid12 However case epistemic transformation r P κ Since J B B r conclude rule form 3 epistemic transformation r holds imply J cid16 P κ λri b1 bm M cid16 1 l Considering corresponding rule form 4 epistemic transformation r M cid16 J bimodel P contradicts conclude ai M cid16 J obtain contradiction assumption assumption I J satisﬁes Consequently I I J satisﬁes ii Therefore J cid16 Hr This proves I cid16 I Now J cid16 J concludes proof lemma cid2 r r P κ M cid16 cid12 K c1 K cn J cid16 Hr holds If B r Moreover M r I contradiction I r J M r I r I B J B cid16 B cid16 B cid16 cid16 cid16 cid16 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 257 cid16 cid16 cid16 J cid16 J cid16 J cid16cid16 J cid16 I cid16cid16 I cid16cid16 J Let I cid16cid16 M The proof Theorem 1 follows Part 1 Let I J bimodel P satisﬁes iiii We prove I J κ SST P By Lemma 7 conclude exists M ASP κ βM cid3κ I J It remains M maximal canonical Towards cid16 cid3κ cid16 βM contradiction assume contrary Then exists M cid16 J I However By Lemma 6 I contradicts assumption I J satisﬁes iii Therefore M maximal canonical I J κ SST P cid16 satisﬁes construction gapM cid16 ASP κ gapM cid16 gapM holds J cid16 gapM Let I B cid16cid16 cid16cid16 B cid16cid16 βM cid16cid16 B cid16 B Part 2 Let Iκ SST P We βIκ bimodel P satisﬁes iiii Let I J βIκ let M maximal canonical answer set P κ corresponding Iκ Then βM cid3κ I J construction I J satisﬁes Lemma 6 cid16cid16 ASP κ M cid16κP note M cid16 bimodel P follows I cid16 J I Let M cid16 I cid16 gapM Thus exists M Towards contradiction ﬁrst assume I J satisfy iii Then exists bimodel I cid16 J cid16 J cid16 bimodel P Then Proposition 4 exists r P B I cid16cid16 Hr holds If B cid16 P cid16 ASP κ arrive contradiction cid16 I cid16 satisﬁes J I cid16cid16 cid3κ cid16cid16 J M mcASP κ gapM Towards contradiction suppose We I r cid16cid16 J I cid16 bimodel P conclude cid16cid16 Hr I I r r P κ cid16 Hr cid12 I I r r cid12 However case epistemic transformation r P κ Since J cid16cid16 cid12 r contradiction Thus B M r conclude rule form 3 epistemic transformation cid16cid16 B imply J J r Moreover cid16cid16 r holds b1 bm M 1 l Considering corresponding rule form 4 epistemic M M cid16 bimodel transformation r conclude ai M cid16 holds implies P From assumption I gapM cid16cid16 Hr This proves I contradiction I cid16 cid16cid16 I Therefore gapM cid16cid16 gapM contradiction M mcASP κ This proves I J satisﬁes iii r cid12 Note B r I r The implies I cid16cid16 cid16 satisﬁes follows I r I cid16 implies B r I cid16cid16 cid12 K c1 K cn J cid16cid16 P κ λri r I cid16 J cid16 satisﬁes Since I J satisﬁes iii conclude J Next assume I J satisfy ii Then exists bimodel I J cid16 satisﬁes Otherwise exists bimodel I cid16 P I I J P To assume exists rule r P Br I r cid12 Since J I bimodel P I I J cid16 cid2 S I J S λri λri M It holds S form 1 1 l λri S λri S I B I J However ai I ai I J rule form 6 epistemic transformation r This contradicts λri S cid16 J We cid16 J bimodel cid16 Hr cid16 J holds J cid16 cid16 J β P The contradiction assumption I J satisﬁes proving cid16κP let cid16κP M contradiction M ASP κ exists r P cid16 From M minimal model P κ conclude cid16 J J 1 k cid12 l cid16κP P κ cid16κP cf respective proves I J satisﬁes ii cid2 cid16 B cid16κP satisfy rule form 3 corresponding r P κ contradiction I J cid16 P J cid16 I I cid16 J B r This contradicts assumption I r This implies λrk S cid16κP conclude λri I J cid16κP λrk I J cid16 I J I Now let S r ai I J B r I cid16 λri λri I J r Since J M cid16cid16 gapM r I cid16cid16 B cid16 B cid16 B cid16 B cid16 B cid16cid16 J cid16 J cid16 J cid16 J J cid16cid16 cid16cid16 cid16cid16 cid16 cid16 cid16 A2 Section 4 Proof Proposition 6 Let P program cid3 Part 1 Let I J bimodel P I J κ satisﬁes Property N Property K r P We I J HTmodel P Since I J κ satisﬁes Property N holds I implies J I J I J HTinterpretation For rule r P I J β r implies I J cid12β Br I J β Hr I Br First suppose I J cid12β Br Then I J cid12 Br note conjunction literals Br satisfaction relations differ Moreover I J κ satisﬁes Property K r holds J r To let K r denote rule obtained r replacing cid3 occurring r K let K J denote set K I J κ cid3 Then I J κ satisﬁes Property K r iff K J K r Observing K J K J conclude J r This proves I J r I J cid12β Br Next assume I J β Hr I Br We conclude I J Hr satisfaction relations coincide disjunctions atoms As I J κ satisﬁes Property K r follows J r This proves I J r r P words I J HTmodel P Part 2 Let H T HTmodel P We H T κ satisﬁes Property N Property K r P As consequence H T H T κ cid3 holds K H T κ H T κ satisﬁes Property N Moreover H T P implies T r r P Let K T K T let K r T r implies K T K r r P By construction H T κ deﬁnition Property K r conclude H T κ satisﬁes Property K r P cid2 Proof Theorem 2 Let P program cid3 Part 1 Let H T HTmodel P satisﬁes cid16 ii contradiction ﬁrst assume H T κ MMH T κ P Then exists HTmodel H cid16 H Then H cid16 T inclusions strict Suppose H T known property HT contradiction assumption H T satisﬁes cid16 We H T κ SEQP Towards cid16 H cid16 T HTmodel P cid16 T cid16 H T cid16 Hence H cid16 P H cid16 T 258 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 cid16 T cid16 H cid16 But T hold Moreover argument H assumption H T satisﬁes ii suming H T κ mcMMH T κ P exists HTmodel H cid16 satisﬁes cid16 T H ﬁes ii cid16κ MMH T κ P The obviously implies H cid16 proves H T κ SEQP cid16 T cid16 T H contradiction cid16 Consequently H T κ MMH T κ P We continue indirect proof cid16 T cid16 T H cid16 Again contradicts H T satis cid16 P T cid16 satisﬁes Part 2 Let Iκ SEQP We βIκ HTmodel P satisﬁes cid16 Let βIκ H T To wards contradiction ﬁrst assume H T HTmodel P Then deﬁnition SEQP fact Iκ uniquely corresponds sets H T conclude Iκ mcMMH T κ P Iκ SEQP contradiction cid16 T Next suppose H T satisfy cid16 Therefore Iκ mcMMH T κ P Iκ SEQP contra cid16 H exists H T satisfy H cid16 Then Iκ mcMMH T κ P witnessed H diction Eventually assume H T satisfy ii cid16 exists H T sat cid16 satisﬁes cid16 T HTmodel H cid16κ MMH T κ P cid16 T cid16 To H isfy ii cid16 T H This cid16cid16 H exists HTmodel H implies T cid16 proves Iκ SEQP contradiction This concludes proof βIκ HTmodel P satisﬁes ii cid16 T witness Iκ mcMMH T κ P observe H cid16 T cid16κ cid16cid16 H cid16 Then Iκ MMH T κ P witnessed H cid16cid16κ MMH T κ P T cid16 T H H HTmodel H cid16note H cid16 ii cid16 T cid16 T cid16 cid2 cid16 T κ cid16cid16 T cid16 H cid16 T cid16 H cid16 H cid16 T cid16 T cid16 T cid16κ cid16 Proof Theorem 3 Let P program cid3 let Iκ interpretation cid3κ The proof uses following lemmas Lemma 8 If M P H T βM cid3κ HTmodel P Proof Let I J βM cid3κ Since M P κ I J bimodel P Proposition 5 Moreover M cid3κ I J κ I J κ satisﬁes Property N atom M K M contradiction M K Also I J κ satisﬁes Property K r P Property K hold r P form 1 M K b1 K bm M cid12 K a1 K al K c1 K cn M cid12 P H T contradiction Hence Proposition 6 I J HTmodel P cid2 Next prove Lemma 9 If H T HTmodel P H T κP P H T Proof Note HTmodel P bimodel P Assume contrary H T r H T cid12β r r H r P Then H cid12 Br H T Br hold However H T Br implies B H Br contradiction This proves H T bimodel P Consequently H T κP P κ Proposition 5 Moreover H T HTmodel H T κ satisﬁes Property N Property K r P Proposition 6 Because H T κP cid3κ H T κ implies H T κP r rules form K P H T P κ obvious consequence Property N For remaining rules r P H T P κ H T κP r simple consequence T P This proves H T κP P H T cid2 r H B Lemma 10 For M ASP H T βM cid3κ satisﬁes cid16 Theorem 2 cid16 H Note Proof Towards contradiction assume contrary Then exists HTmodel H M ASP H T implies M βM cid3κ κP Since model P H T Lemma 9 M subset thereof obviously strict subset cid3κ By construction βM cid3κ κP rules form 6 epistemic transformation conclude λri βM cid3κ κP implies λri M r P form 1 cid16 P H T cid16 H 1 l This proves M βM cid3κ κP Now consider M cid16 cid2 Lemma 9 This contradiction assumption M ASP H T proves βM cid3κ satisﬁes cid16 M construction M cid16 T P H cid16 T κP Then M Lemma 11 For HTmodel H T P satisﬁes gapH T κ cid16 Theorem 2 exists M ASP H T gapM Proof Since H T κP P H T Lemma 9 exists M ASP H T M H T κP To prove lemma cid16 H suﬃces M cid3 H Assume contrary d exists HTmodel H cid16 T P contradicts assumption H T satisﬁes T cid16 T However H cid16 P H cid16 T cid16 cid2 The proof Theorem 3 follows Suppose Iκ M cid3κ M mcASP H T We prove Iκ SEQP Theorem 2 Let M mcASP H T cid16 Iκ M cid3κ let I J βM cid3κ Then I J HTmodel P Lemma 8 I J satisﬁes G Amendola et al Artiﬁcial Intelligence 234 2016 219271 259 Theorem 2 Lemma 10 We prove I J satisﬁes ii case exists HTmodel H T P T H J I H T satisﬁes exists M contradicts assumption M mcASP H T proves I J satisﬁes ii Iκ SEQP cid16 Theorem 2 Towards contradiction assume cid16 According Lemma 11 cid16 gapM T H J I This cid16 Theorem 2 We conclude cid16 gapH T κ implies gapM cid16 ASP H T gapM cid16 ii Suppose Iκ SEQP We prove Iκ M cid3κ M mcASP H T Let H T βIκ By Theorem 2 H T cid16 We exists M mcASP H T βM cid3κ H T cid16 holds M cid3 cid16 cid16 Lemma 10 Hence βM cid3κ H T It remains cid16 H cid16 T H cid16 cid16 T cid16 This proves M mcASP H T As M cid3κ Iκ HTmodel P satisﬁes Since H T κP P H T exists M ASP H T M H T κP Since H T satisﬁes H Moreover M cid3κ H T κ contradicts fact H T satisﬁes ii cid16 H T H H T HTmodel P T M mcASP H T If case HTmodel H cid16 cid3κ M Since H leads contradiction fact H T satisﬁes ii conclude Iκ M cid3κ M mcASP H T cid2 cid16 ASP H T conclude Lemma 10 H cid16 P exists T cid16 satisﬁes cid16 βM cid3κ H T cid16 satisﬁes cid16 βM cid16 T cid16 T Proof Proposition 7 Let P program cid3 If P model M M M HTmodel P Therefore H T κ P cid12 implies MMH T κ P cid12 mcMMH T κ P cid12 We conclude SEQP cid12 P semiequilibrium model cid2 Proof Proposition 8 Let P coherent program cid3 let Y ASP Then Y Y HTmodel P cid16 Y Y Hence satisﬁes Y Y κ SEQP cid16 Theorem 2 equilibrium Moreover trivially satisﬁes ii As P coherent exists T T H T P satisﬁes cid16 Theorem 2 trivially ii cid16 Hence gapIκ Iκ SEQP Moreover βIκ form Y Y Y ASP cid2 A3 Section 5 Proof Proposition 10 If X Y SEQS P exists I J SEQb S P X Y SEQP S I J We prove I J X Y S Obviously I J S Moreover X Y I X I I X X Y J Y J J Y X Y S J Y S J S J Y In particular obtain I X S J Y S We know X Y P S I J So consider X S Hr rule r P b S P I But S follows r P b S P r I Therefore I I X S Moreover consider atom Y S Y S S J Y obtain J J Y S In conclusion X S Y S I J semiequilibrium model b S P cid2 Proof Lemma 1 Suppose X Y HTmodel P S I J Hence X Y P b S P It remains X Y r r b S P Suppose r form 1 By assumption I J SEQb S P conclude I J b S P ck B If I J ai ai Hr ai I X Y P S I J X Y ai X Y r If assume I J cid12 b1 bm c1 cn exists b j B r I J cid12 b j r I J cid12 ck deﬁnition HTsatisfaction b j I respectively ck J In ﬁrst case b j head rule P b S P b j X X Y r In second case P S I J rule ck implies ck Y case X Y r cid2 Proof Proposition 11 Let X Y SEQS P Then exists I J SEQb S P X Y SEQP S I J By Lemma 1 X Y HTmodel P So deﬁnition semiequilibrium model remains prove hminimality cid16 Y gapminimality X Y Suppose contradiction exists X cid16 S Y S b S P Proposition 10 X t S P X S Y S SEQb S P So hminimality semiequilibrium model X S Y S P cid16 S X S So X X cid16 Y b S P By sentence obtain X cid16 S Y S X S Y S I J Therefore cid16 S X S necessarily X cid16 S cid12 X S But X cid16 X implies X cid16 X So X cid16 Y P X cid16 S Y S I J S J X cid16 Y t S P conclude cid16 Y P S I J hminimality X Y respect P S I J Similarly suppose contradiction cid16 Y I J S J And X In particular X X exists X cid16 Y 1 X cid16 Y X cid16 X 2 Y cid16 P cid16cid16 Y cid16 P X cid16cid16 X cid16 260 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Moreover suppose 3 gap X Y minimal gaps HTmodels satisfy 1 2 Because X cid16 P holds X cid16 t S P X cid16 b S P From obtain X cid16 Y cid16 Y cid16 Y cid16 S Y cid16 S b S P condition 2 obtain cid16 S Y cid16 X cid16 S Y X S Y S X S Y cid16 S X cid16 Y cid16 cid16 Y cid16 X cid16 S Y cid16 S X cid16 S X cid16 S X cid16 S X cid16 P I cid16 S I cid16 Y cid16 S X cid16S satisﬁes hminimality respect b S P In fact contradiction exists I cid16 X Moreover X cid16 X b S P I By Proposition 10 X S Y S SEQb S P necessarily Y Otherwise X Y S semiequilibrium model b S P X X Y S Therefore X ˆJ ˆI Y assumed Now X X cid16 S If contradiction exists ˆX Y P S X hypothesis 1 Finally prove gapminimality X exists ˆX ˆY P S X exists ˆX ˆY P Lemma 1 satisﬁes hminimality property ˆY ˆX Y conclusion proved X X Y semiequilibrium model relative S And come contradiction supposed X exist Therefore X Y satisﬁes gapminimality property respect P X Y SEQP cid2 cid16 S condition 1 cid16 S Y S X S J I cid16S contradicts gapminimality cid16S SEQb S P exists ˆI ˆJ b S P satisﬁes hminimality property cid16 S ˆJ ˆI Y S X S X Y S SEQb S P contrary cid16 t S P cid16 Y cid16 respect cid16 P cid16 S If contradiction cid16 cid16 X hypothesis 3 In cid16 Y X follows cid16 cid16 S Y cid16 S We prove hminimality X cid16 S Y cid16 Y cid16 S satisﬁes hminimality property ˆY ˆX Y Lemma 1 ˆX Y cid16 cid16 S Y cid16 semiequilibrium model P S X cid16 S First X cid16 Y cid16S SEQb S P follows X cid16 S ˆX X cid16 respect P S X cid16 S hypothesis 2 Y cid16 S Y cid16 P S X cid16 SEQP S X cid16 Y cid16 S Y cid16 P S X cid16 S Y cid16 S Y cid16 X cid16 X cid16 Y cid16 Y cid16 Y cid16 Y cid16 Y cid16 Proof Proposition 12 Let X Y SEQP X Y S SEQb S P To demonstrate X Y SEQS P ﬁrst prove X Y semiequilibrium model P S X S Y S Since X Y SEQP obtain particular X Y t S P Now X S X X Y X S Y S Y X Y Y S S Y S Y X Y S Y S So X Y HTmodel P S X S Y S So remains prove hminimality gapminimality X Y regards P S X S Y S If contradic cid16 Y P tion suppose exists X contradicts hminimality X Y regards P Similarly contradiction assume cid16 Y X Lemma 1 exists X cid16 P contradicts gapminimality X Y regards P Finally shown obtain X ˆX ˆY SEQP S I J I J SEQb S P gap ˆX ˆY gap X Y In fact contradiction exists ˆX ˆY ˆX ˆY P Lemma 1 ˆX ˆY satisﬁes hminimality property respect P gap ˆX ˆY gap X Y X Y satisfy gapminimality property respect P hypothesis There fore conclusion X Y SEQS P cid2 cid16 P S X S Y S satisﬁes hminimality property Y cid16 Y P S X S Y S Lemma 1 X cid16 X X X cid16 X cid16 Y cid16 Y cid16 Proof Corollary 3 By Theorem 4 SEQS P X Y SEQP X Y S SEQb S P As SEQP cid12 Propo sition 8 SEQP EQP SEQb S P EQb S P Proposition 2 identity 2 identity 11 follows SEQS P X Y EQP X Y S EQb S P EQP As positive program P EQP M M M MMP result follows cid2 Proof Proposition 13 If P constraintfree P model b S P P model Proposition 7 SEQb S P cid12 For I J SEQb S P program P S I J model J cid3 S Thus SEQP S I J cid12 Proposition 7 follows SEQP S cid12 cid2 Proof Theorem 5 We proceed induction length n 1 splitting sequence If n 1 S S 1 cid16 SEQS P SEQS1 P Theorem 4 obtain X Y SEQS P X Y SEQP S SEQb S1 P We assume statement valid splitting sequence X Y S SEQb S P X Y S1 cid16 S2 Sn Then length n 1 consider splitting sequence S S1 Sn length n As usual S X Y SEQS P exists I1 J 1 SEQb S1 P X Y SEQS P 1 X Y maximal canonical HTinterpretation Applying induction hypothesis X Y SEQS P 1 know X Y SEQP 1 SEQb Sk P k1 k 2 n Now X Y SEQP 1 I1 J 1 SEQb S1 P X Y maximal X Y Sk canonical HTinterpretation equivalent deﬁnition X Y SEQS1 P So Theorem 4 X Y SEQP SEQb S1 P In conclusion demonstrated X Y SEQS P X Y SEQP X Y S1 SEQb Sk P k1 P k1 k 1 n cid2 X Y Sk cid16 cid16 Proof Corollary 6 This immediate Proposition 15 Corollary 4 given wellknown EQP cid12 stratiﬁed program cid2 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 261 Appendix B Section 6 Proof Theorem 6 The proof uses following lemmas Lemma 12 Let P program let S S1 Sn splitting sequence P We let P 0 P P k P k1Sk Ik J k Ik J k SEQb Sk P k1 k 1 n Furthermore let Ak aa Ik aa J k aa Sk J k Then P k P b Sk P Ak k 1 n Proof We prove statement induction k 1 If k 1 obtain deﬁnition P 1 P 0S1 I1 J 1 P 0 b S1 P 0 A1 P b S1 P A1 We assume statement true k j 1 consider P j By deﬁnition P j P j1S j I j J j P j1 b S j P j1 A j Now apply inductive hypothesis P j1 obtain P j P b S j1 P A j1 b S j P b S j1 P A j1 A j Since S j1 S j b S j A j1 A j1 P j P b S j1 P A j1 b S j P b S j1 P A j1 A j P b S j1 P b S j P b S j1 P A j Moreover b S j1 P b S j P conclude P j P b S j1 P b S j P b S j1 P A j P b S j P A j cid2 Lemma 13 Let P program Let S S1 Sn splitting sequence P Let P 0 P let P k Ik J k k 1 n 1 deﬁned If X Y SEQSk1SnP k Ik X J k Y Sk J k Y k 1 n 1 Proof Let X Y SEQSk1SnP k We remember P k P k1Sk Ik J k Ik J k SEQb Sk P k1 k 1 n P 0 P By Theorem 5 X Y SEQP k Lemma 12 P k P b Sk P Ik J k Sk J k So Ik X J k Y Sk J k Y cid2 Lemma 14 Let P program Let S S1 Sn splitting sequence P AtP Sn If X Y SEQS1SnP exists Ik J k SEQb Sk P k1 k 1 n X Y I1 I2 I1 In In1 J 1 J 2 J 1 Jn Jn1 Ik Ik1 J k J k1 Sk Sk1 k 2 n Proof We proceed induction length n 1 splitting sequence If n 1 AtP S 1 X Y SEQS1 P imply exists I1 J 1 SEQb S1 P X Y SEQP S1 I1 J 1 P S1 I1 J 1 P b S1 P A1 A1 SEQP S1 I1 J 1 SEQ A1 SEQa I1 J 1 S1 J 1 I1 J 1 X Y I1 J 1 Now suppose statement valid splitting sequence length n 1 consider X Y SEQS1SnP Then exists I1 J 1 SEQb S1 P X Y SEQS2SnP 1 AtP 1 Sn inductive hypothesis exists Ik J k SEQb Sk P k1 k 2 n X Y I2 I3 I2 In In1 J 2 J 3 J 2 J n J n1 Ik Ik1 J k J k1 Sk Sk1 k 3 n Moreover Lemma 13 I1 X J 1 Y S1 J 1 Y I2 J 2 SEQb S2 P 1 obtain I1 I2 J 1 J 2 S1 J 1 J 2 These results imply I2 I1 J 2 J 1 S2 S1 cid2 Lemma 15 Let P program let S AtP S AtP S splitting sets P If constraint r Atr S Atr AtP S SEQP SEQS P 262 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Proof The inclusion SEQS P SEQP follows Proposition 11 So prove SEQP SEQS P Let X Y SEQP We want prove X S Y S SEQb S P We know X Y b S P As S splitting set P Atb S P S X S Y S b S P Now prove claim showing X S Y S satisﬁes hminimality gapminimality If contradiction I X S exists I Y S b S P X cid16 I X AtP S X X cid16 Y P contradicts hminimality X Y Similarly contradiction I J b S P exists I J satisﬁes hminimality J I Y S X S cid16 P satisﬁes hminimality cid16 J Y AtP S obtain X cid16 I X AtP S Y cid16 Y having set X cid16 X Y cid16 Y X contradiction gapminimality X Y Therefore X S Y S SEQb S P Then Theorem 4 X Y SEQS P SEQP SEQS P cid2 For sets M Mcid16 HTmodels deﬁne product M Mcid16 set HTmodels given M Mcid16 X X cid16 Y Y cid16 X Y M X cid16 Y cid16 Mcid16 Lemma 16 Let P program constraint r fulﬁlls Atr S Atr AtP S If S AtP S splitting sets P SEQS P SEQb S P SEQt S P Proof If SEQb S P SEQb S P SEQt S P SEQS P mc cid13 cid11 cid14 SEQP S I J I J SEQb S P Let I J SEQb S P For rule r b S P atom r rule t S P vice versa Atb S P Att S P Hence SEQt S P I J S J X Y X X1 I Y Y 1 J X1 Y 1 SEQt S P SEQt S P I J Then SEQS P mc cid13 cid11 SEQt S P I J cid14 I J SEQb S P mc SEQb S P SEQt S P SEQb S P SEQt S P cid2 Proof Proposition 17 The proof follows immediately Lemmas 15 16 cid2 Lemma 17 Let P program crossconstraints Let C1 Cn C1 Ci1 Ci1 Ci Ci2 Cn topo logical orderings SCCP If Sk C1 Ck k 1 n S S i1 Ci1 cid16 P b S i1 P b S i1 P b S P b S cid16 cid16 Proof In general know b S P b S i1 P b S P b S i1 P Hence suﬃcient prove b S i1 P b S P b S P b S i1 P Let r P assume r b S i1 P r b S P If r constraint Atr Ci1 cid12 As P cross constraints follows Atr Ci If r constraint exists Hr Ci1 But edge Ci Ci1 obtain Atr Ci Therefore r b S i1Ci1 P clearly r b S i1 P Conversely assume r b S i1Ci1 P r b S i1 P Then r b S i1Ci1 P b S i1 P Moreover r b S i1Ci1 P implies Atr Ci r b S i1 P follows r b S P cid2 Lemma 18 Let P program crossconstraints Let C1 Cn C1 Ci1 Ci1 Ci Ci2 Cn topo logical orderings SCCP If Sk C1 Ck k 1 n S S i1 Ci1 cid16 SEQS1S i1S S i1S i2SnP SEQS1S i1S cid16 iS i1S i2SnP G Amendola et al Artiﬁcial Intelligence 234 2016 219271 263 Proof Let X Y SEQS1S i1S S i1S i2SnP Since AtP C1 Cn Sn Lemma 14 obtain X Y I1 I2 I1 In In1 J 1 J 2 J 1 Jn Jn1 Ik J k SEQb Sk P k1 k 1 n Ik Ik1 J k J k1 Sk Sk1 Ck k 2 n First X Y SEQb S cid16 S cid16 P i1 We know X Y S cid16 X Y S i1C j1 Ii1 Ii1 Ii J i1 J i1 J Moreover Lemma 17 obtain P i1 b S i1C j1 P i1 b S i1Ci1 P b S i1 P Ai1 b S cid16 b S i1Ci1 P b S i1 P Ai1 b S i1 P b S P Ai1 And note b S i1 P b S i1 P b S P Ai b S i1 P b S P Ai1 Ai Ai1 Now program b S i1 P S i1 Ci1 Ci splitting sets particular b S i1Ci1 b S i1 P b S i1 P b S P Ai1 bCi b S i1 P Ai Ai1 Therefore Proposition 17 obtain SEQb S i1 P SEQb S i1 P b S P Ai1 SEQ Ai Ai1 So SEQb S i1 P SEQb S i1C j1 P i1 Ii Ii1 J J i1 X Y S i1 Ii1 Ii Ii1 Ii1 Ii J i1 J J i1 J i1 J SEQb S i1 P follows Ii1 Ii1 Ii J i1 J i1 J SEQb S i1C j1 P i1 By Theorem 5 know X Y SEQS1S i1S S i1S i2SnP X Y SEQP X Y S1 X Y S X Y S i2 SEQb S P i1 X Y S i1 SEQb S i2 P i1 X Y Sn We want prove X Y SEQS1S i1S cid16 SEQb S1 P X Y S i1 SEQb S i1 P SEQb Sn P n1 SEQb S i1 P i2 S i1S i2SnP That Theorem 5 X Y SEQP X Y S1 X Y SEQb S X Y S i2 P i1 X Y S i1 SEQb S i2 P i1 X Y Sn SEQb S1 P X Y S i1 SEQb S i1 P b S S cid16 cid16 cid16 SEQb Sn P n1 SEQb S i1 P i2 P Ai1 Ai1 Ai So remains prove X Y S i1 We know SEQb S i1 P b S cid16 P i1 Ai1 Ai1 Ai 264 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 b S i1 P b S cid16 P Ai1 Ai1 Ai b S i1 P b S i1Ci1 P Ai1 Ai1 Ai b S P b S i1 P Ai1 Ai1 Ai b S P b S i1 P Ai1 Ai1 Ai b S P i1 Ai1 Ai Now program S Ci1 splitting sets particular b S b S P i1 Ai1 Ai b S P i1 bCi1 b S P i1 Ai1 Ai Ai1 Ai Therefore Proposition 17 obtain SEQb S i1 P b S cid16 P i1 Ai1 Ai1 Ai SEQb S P i1 SEQ Ai1 Ai SEQb S P i1 Ii1 Ii J i1 J Now Ii J SEQb S P i1 obtain SEQb S i1 P b S Ii1 J i1 X Y S i1 In conclusion proved cid16 P i1 Ai1 Ai1 Ai SEQS1S i1S S i1S i2SnP SEQS1S i1S cid16 iS i1S i2SnP The proof reverse inclusion similar cid2 Theorem 6 proven follows Let Ci1 Cin OSGP We deﬁne function tCi1 Cin OSGP OSGP Let C j1 C jn OSGP If Cir C jr r 1 l Cil1 cid12 C jl1 exists k 1 l 1 C jk1 Cil1 tCi1 Cin C j1 C jn tCi1 Cin Ci1 Cil C jl1 C jk1 C jk Cil1 C jk2 C jn Ci1 Cil C jl1 C jk1 Cil1 C jk C jk2 C jn Cin C j1 C jn C j1 C jn Ci1 Cin This function welldeﬁned edges tCi1 Cim Cil1 m l 2 n That edges C jk Cil1 Ci1 Cil C jl1 C jk1 Cil1 C jk C jk2 C jn topological ordering SCCP Moreover C j1 C jn OSGP exists ﬁnite N t N Ci1 Cin C j1 C jn Ci1 Cin During proof order introduce additional symbols shall denote splitting sequence S Ci1 Cin S j C j1 C jn Let N t N Ci1 Cin C j1 C jn Ci1 Cin We prove theorem induction N If N 1 Cin C j1 C jn Ci1 Cin C j1 C jn Ci1 Cin differ exchange C jn P Now suppose Cin C s1 C sn Ci1 Cin We consider tCi1 secutive strongly connected components Then Lemma 18 SEQCi1 theorem valid topological orderings C s1 C sn t N1 Ci1 C j1 C jn t N Cin C j1 C jn Ci1 Cin By deﬁnition function tCi1 Cin know Cin P SEQC j1 Ci1 tCi1 Cin C j1 C jn Ci1 Cil C jl1 C jk1 Cil1 C jk C jk2 C jn Therefore Lemma 18 C jn P SEQtCi1 Cin C j1 C jn P SEQC j1 But t N1 Ci1 Cin tCi1 Cin C j1 C jn Ci1 Cin induction hypothesis obtain G Amendola et al Artiﬁcial Intelligence 234 2016 219271 265 SEQtCi1 P SEQCi1 In conclusion proved SEQC j1 Cin C jn C j1 Cin P C jn P SEQCi1 Cin P cid2 Proof Theorem 7 First observe splitting set S program P write S union SCCs P More SCCP C1 Cn assume S C1 Ck C1 Ck consecutive topological ordering C1 Ck Cn SCCP By deﬁnition SCCP SEQS1SnP M S j j i1Ci 1 j n note S Sk If explicate computation SEQS1SnP kth union obtain SCCP mc M cid13 cid11 cid14 SEQSk1SnP b Sk P Mk MkMk B1 Mk sequence Mi 1 k sets Mi HTmodels Mi Ii J S M1 SEQb S1 P SEQb S i1 P b S P Mi 1 k abuse notation Mi stands Mi1 mc Ii J S J Note Mi cid12 M Mi incomparable gaps gapMi cid2 gapM Mi Mi cid10 cid16 cid16 SCC b S P Indeed deﬁnition know Now set Mk coincides M SCCb S P SEQS1Skb S P M Therefore applying ktimes deﬁnition semiequilibrium models relative splitting sequence obtain SEQS1Skb S P mc SEQb S P b Sk P M cid14 cid16 k cid13 cid11 M cid16 k Mcid16 k B2 cid16 k M cid10 Mcid16 Mcid16 SEQb S i1 b S P b S b S P M i1 Mcid16 coincide b S P b Sk P obtain B2 k analogously deﬁned Mk Mk b S P instead P Mcid16 SEQb S1 b S P cid16 1 k As b S b S P b S P Mi mc Mcid16 M 1 cid16 SEQS1Skb S P mc cid13 cid11 cid14 SEQMk MkMk cid11 MkMk Mk Mk use Mk incomparable gaps This proves claim Mk M To prove result remains B1 Mk Mk SCCb S P SEQSk1SnP b S P Mk M SCCP b S P Mk We observe programs Q P b S P Mk P atoms general different SCCs However easy atom Sk induces SCC Ca wrt Q Sk Ca1 Cacid12 Sk a1 acid12 Furthermore Q contains constraints r AtQ Sk AtQ Sk As Ca1 Cacid12 Ck1 Cn topological ordering SCCQ obtain SCCQ SEQSa1 Sacid12 Sk1SnQ SEQSk1SnQ M cid10 Sai MkSa j Q b Sa j ji Ca j The equality seen noting j 1 cid12 SEQb Sa j denotes restriction Mk Sa j X j Y j SEQb Sa j X j Y j Q Q X j Y j Q MkSa j Q Q MkSa j In conclusion replacing Equation B1 Mk Mk I J M M SCCP b Sk P I J reminding Sk S P S I J P b Sk P I J proved SCCb Sk P SEQSk1SnP b Sk P Mk SCCP mc M cid13 cid11 M I J MSCC b S P cid14 SCCP b S P I J cid2 cid16 Proof Proposition 18 Suppose S S1 Sn n 1 Then exists splitting sequence S 1 n S sequence obtained reﬁning S S i1 1 n S0 strongly connected components cid16 n induced topological ordering SGP S S 1 ki n cid16 1 S cid16 ki cid16 266 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 SGP S i1 S ji S ji diate consequence Theorem 5 given X Y S SCC P membership SEQS P equation M S As M cid16 cid16 SCCP SEQS cid16 P inclusion M imposes conditions membership SEQS SSQP SEQS P follows S cid16 SQP cid2 SCC P SEQS P imme P S cid16 Proof Theorem 8 For proof Theorem 8 use following lemmas Lemma 19 Let P program Let M J CP J 1 J m Let J 1 J i1 J J i1 J i2 J m J 1 J i1 J i1 J J i2 J m topological orderings If Sk J 1 J k k 1 m S S i1 J i1 cid16 P b S i1 P b S i1 P b S P b S cid16 cid16 Proof In general know b S P b S i1 P b S P b S i1 P So suﬃcient prove b S i1 P b S P b S P b S i1 P Let r P We assume r b S i1 P r b S P If r constraint exists Hr J i1 But edge J J i1 obtain Atr J Therefore r b S i1 J i1 P clearly r b S i1 P r B r B If r constraint exists B r J i1 If contradiction assume exists r J exist K K i1 SCCP K i1 J i1 K J r C K K i1 P But b B edge J J i1 exists topological ordering strongly connected components P J J i1 K precedes K i1 So exists C1 Cn OP Cl K Cl1 K i1 l 1 n 1 Atr C1 Cl1 Then K K i1 joinable pair K K i1 r J That joinable components contradicts maximality J J i1 So B r b S i1 J i1 P clearly r b S i1 P Conversely assume r b S i1Ci1 P r b S i1 P Then r b S i1Ci1 P b S i1 P Moreover r r B b S i1Ci1 P implies Atr Ci r b S i1 P r b S P cid2 Lemma 20 Let P program Let MJ CP J 1 J m Let J 1 J i1 J J i1 J i2 J m J 1 J i1 J i1 J J i2 J m topological orderings If Sk J 1 J k k 1 m S S i1 J i1 cid16 SEQS1S i1S S i1S i2SmP SEQS1S i1S cid16 S i1S i2SmP Proof The proof mutatis mutandis Lemma 18 identiﬁes b S Lemma 19 instead Lemma 15 cid2 cid16 P b S i1 P b S i1 P b S P The proof Theorem 8 Theorem 6 uses Lemma 20 instead Lemma 18 cid2 Proof Theorem 9 The proof similar Theorem 7 premise MJCs form S spectively SCCs constituting initial segment topologic ordering like SCCs proof Theorem 7 Thus line argumentation applies cid2 Proof Proposition 19 The proof analogous Proposition 18 Similarly MJ Ccompatible split cid16 cid16 sequence S S1 Sn n 1 MJ Csplit sequence S n induced topological ordering S cid16 reﬁning S S i1 1 n JGP exists S S ki S0 maximal joined components JPP S i1 S ji S ji P M cid16 1 S 1 n obtain S MJ CP SEQS P follows Theorem 5 M S As M SEQS P follows S MJ CP SEQS cid16 MSQP cid2 1 ki n MJ CP cid16 cid16 cid16 cid16 SMSQP Appendix C Section 7 C1 Hardness results semiequilibrium semantics Several results Problem MCH INF disjunctive program semiequilibrium model semantics S AtP shown reduction deciding validity quantiﬁed Boolean formula QBF form cid13 Z Y XEX Y Z X x1 xr Y y1 ys Z z1 zt We assume loss generality E X Y Z cid17 i1li1 li2 li3 li j literal X Y Z 3CNF form We deﬁne program P 0 following m rules G Amendola et al Artiﬁcial Intelligence 234 2016 219271 267 1 p l i1 l i2 l i3 l j cid18 v li j v v li j v v X Y Z 2 x p x p x X 3 y y y Y 4 x x x X We assume moment Z void Z following property 16 Some M MMP 0 exists st p M iff Y XEX Y true C1 As P 0 positive SEQP 0 M M M MMP 0 follows brave reasoning SEQmodels positive disjunctive program deciding P bt 2 hard furthermore cautious reasoning P cf Now construct new program P 1 obtained adding fresh atom q rule head P 0 following SEQ p cid4P SEQ p cid3 P 2 hard rules cid16 p 5 p 6 p cid16 It easy q minimal model P 1 Now following property holds cid16 SEQP 1 Y XEX Y true q q p C2 Clearly program stratiﬁed consequently Problem MCH SEQsemantics cid4P disjunctive programs proves hardness item ii Theorem 10 2 hard disjunctive stratiﬁed Eventually consider target case Z cid12 We construct ﬁnal program P given union P 1 following rules 7 z z z Z 8 z bz z bz z Z bz bz fresh atoms Intuitively effect rules SEQmodel I J bz bz contained cid16 Z HTinterpretation I Z J Z bz gapI J z Z serves emulate quantiﬁcation Z For Z cid16 z Z true Formally cid16 HTmodel P SEQmodel P precisely Y XE X Y Z Z cid16 bz z Z Z cid16 q q p Some I J SEQP exists st p cid16 J I iff cid13 Z Y XEX Y Z true C3 Note program P stratiﬁed follows brave reasoning SEQsemantics cid3 P 3 hard disjunctive stratiﬁed disjunctive programs proves respective hardness parts item Theorem 11 For cautious reasoning disjunctive stratiﬁed disjunctive programs SEQsemantics cid4P 3 hardness item ii Theorem 11 shown slight extension reduction carried Appendix C2 derive result ﬁxed truth value v C2 Hardness results problem INF ﬁxed truth value C21 Brave reasoning The construction Section 72 normal stratiﬁed normal hcf programs uses bt SEQmodel atom true rules constraints add b ask b truth value f add c b ask c truth value t For disjunctive programs consider cid3 P Then program P constructed QBF cid13 particular atom q P bt SEQ q equivalent P bbt evaluates true P bt cid16 P q program P let P SEQ q SEQmodels stratiﬁed disjunctive program cid3 P arbitrary splitting sequences S 3 hardness proof brave reasoning SEQsemantics Appendix C1 SEQ q iff QBF cid13 Furthermore q value bt SEQmodels SEQ q So ﬁxed value v brave inference 3 hard trivially generalizes SEQmodels relative cid16 q P SEQ p cid16 bf iff P bt cid16 cid16 C22 Cautious reasoning For ﬁxed truth value v bt cautious inference problem SEQmodels easier truth value given input Proposition 25 Given program P atom deciding P cbt hcf P ii cid4p 2 disjunctive P SEQ coNP normal normal stratiﬁed 268 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 This holds case P cid12cbt SEQ iff hminimal HTmodel X Y P exists Y X hminimal model guessed veriﬁed polynomial time case resp polynomial time NP oracle case ii For truth values construction Section 72 normal stratiﬁed normal hcf programs uses truth value f cautious reasoning SEQmodel atom true add b ask b cautiously value t add split layer rule b b S S 1 S2 b S2 S1 ask b cautiously value bt Regarding disjunctive programs programs P P cid16 brave reasoning ﬁxed truth values t true false 3 hardness cautious reasoning If add split layer b b p similarly truth values opposite SEQmodels P cid16 f query atoms q resp q immediately obtain cid4P ask b cautiously value bt cid16 C3 Constructing recognizing canonical splitting sequences cid16 m cid16 1 K Proof Proposition 20 Let P program First prove conditions ii Deﬁnition 12 imply path K1 K2 vice versa By contradiction ﬁrst suppose path K 1 K2 cid16 cid16 SCCP K1 K i1 E SG 1 m As topological ordering 1 K exist K cid16 cid16 C1 Cn OSGP K 1 m follows K2 precedes K1 contradicts condition i1 precede K cid16 SCCP arbitrary path Otherwise suppose exists path K 2 K1 Let K m K1 By condition ii know K2 K1 E SG Hence m 2 K cid16 cid16 mi precedes K m1 K2 contradicts condition cid16 i1 E SG 1 m K cid12 K2 topological ordering C1 Cn OSGP K1 precedes K cid16 K2 K 1 cid16 cid12 K1 K m1 cid16 mi K K2 K cid16 1 K cid16 K cid16 K cid16 m cid16 m Now prove disconnectedness hypothesis implies conditions ii As path K 2 K1 condition ii trivially holds Moreover topological ordering SCCP exist maximal possibly sets cid16 Ai SCCP K precedes K 1 2 Because path K1 K2 follows K2 A1 path K2 K1 follows K1 A2 Therefore construct topological ordering strongly connected components A1 A2 precede K1 possible exists K A2 K1 precedes K K1 precedes K K precedes K2 contradicts hypothesis path K2 K1 exists K1 precedes immediately K2 condition holds possible K A1 K2 precedes K cid2 Ai K cid16 Proof Corollary 10 If K1 K2 joinable pair witnessed r Proposition 20 K1 K2 disconnected SGP incomparable partial order SCCP induced SGP By condition iii Atr C1 C s1 holds C s K1 C s1 K2 SCC C cid12 K1 K2 Atr C cid12 occurs C1 C s1 path SGP C reach K1 K2 consequently K1 K2 maximal SCCs SGP Atr C cid12 Suppose loss generality K1 C1 K2 C2 Then K1 K2 disconnected Proposition 20 K1 K2 satisfy condition ii joinable pair Furthermore Ci C j 1 cid12 j l pairwise disconnected extending argument proof Proposition 20 build topological ordering C1 Cn SGP topological ordering SGP SCCs A i1 Ai C3 Cl precede K1 K1 immediately precedes K2 Ai K SCCP K Ci possible K A exists K2 precedes K As A C1 C2 contain SCCs C Atr C cid12 follows condition iii holds K1 K2 joinable pair cid2 cid10 l 1 C r j C r Proof Theorem 14 By Corollary 10 joinable pairs K1 K2 K1 cid12 K2 witnessed constraint r given l computed Step 2 1 cid12 j l collection joinable l 1 l 1 K 1 C r C r C r 1 1 trivially joinable Thus Step 3 C r JCP holds Furthermore merging J 1 J 2 Step 4 results set K2 C r J 1 J 2 JCP inductive argument C ri merged J 1 2 joinable J 1 J 2 cid12 ji J J 1 J 2 exists C r1 C C C r2 j merged J 1 J 2 j2 j1 joinable J 1 J 2 JCP Finally suppose Step 4 MJ CP cid12 MC SCCP NMI construction MC cid16 MJ CP J MC SCCP NMI exist maximality condition MJ CP follows J joinable J MC hold J J j merged J joinable SCC J C r C merged J j C merged cid16cid16 cid12 Step 4 MC completed contradiction Thus J MJ CP MC NMI holds The correctness constructed JGP obvious From Corollary 10 follows SCCs C merged J j C witnessed constraint r nonjoinable SCC implies J J J joinable pair C r cid16cid16 MC means J J joinable pairs C r Furthermore SCC C r cid16 cid16 cid16 cid16 cid16 Regarding time complexity note following In Step 1 DGP SCCP SGP constructable linear time We compute SCCs C r 1 C r l eﬃciently stratiﬁed program P r following rules 1 r j C j V SG C j Atr cid12 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 269 2 r j ri n_max_r j ri Ci C j E SG 3 max_r j r j n_max_r j Ci V SG Informally atom r j encodes reachability component C j SCCgraph component contains atoms constraint r max_r j n_max_r j single topmost maximal reached components double negation The single answer set P r yields desired maximal components C r l P r built evaluated linear time Step 2 feasible linear time r 1 C r Step 3 clearly feasible linear time Step 4 iterative merging J 1 J 2 feasible properly linear time similarly Step 5 given MJ CP SGP Thus total MJ CP JGP computable time Ocscid25P cid25 proves result cid2 Appendix D Section 8 E Proof Theorem 15 The proof proceeds follows We ﬁrst 1 models P models X Y P E hminimal 3 SEQmodel P models 2 X Y E X Y SEQP MMP E violation set VI model I X Y E follows I MMP P correspond HT corresponding HTmodel P E As corresponds gap X Y precisely VI Egap X Y E minimal E violation set evidential stable model P iff X Y SEQmodel establish 2 minimal model P As 1 readily seen HTmodel X Y P I X Y E X E Y model P satisﬁed Y P rules 3 X Y Finally rules 1 X Y r Hr X cid12 B implies B P rules 2 r cid2 Y r Y cid12 I satisﬁes rules 1 The proof converse model I r cid2 X B P E E E E E particular model J I P E exists I cid3 J cid3 βI X Y βI HTmodel P similar Regarding 2 I MMP HTmodel X cid16 Y P exists X cid16 X As 3 contradiction assume X Y SEQP fulﬁlls I X Y E MMP cid16 Y J X P Y P Y 2 X cid16 cid16E MMP follows X cid16 Y E exists J I As X cid16 X Y cid16 Y X Y hminimal follows Y cid16 P Y X MMP Y X cid16 X follows X cid16 X Therefore gap X cid16 Y cid16 hminimal X Y SEQP contradiction This proves result cid2 E Hence cid16 Y As cid16 gap X Y Proof Proposition 22 If M X Y SEQmodel P wf M hminimal model P wf gapM gapWFP wf gapWFP Corollary 11 implies M cid26 WFP wf WFP I J Y J By antimonotonicity γP γP Y γP J I γP wf Y γP Y I γP Y X Thus M hminimal model P cid16 gapM If M SEQmodel P Corollary 11 reﬁnement M SEQmodel P But M hminimal model P wf contradict M SEQmodel P wf Thus M SEQmodel P WFP gapM Let M SEQmodel P gapM gapWFP Then Corollary 11 M reﬁnes WFP P wf hminimal model P contradicts clearly model P wf hminimal If M SEQmodel P wf SEQmodel M smaller gap exists case infer M M SEQmodel P cid2 cid16 cid16 cid16 cid16 Proof Proposition 23 Consider splitting sequence S S1 S2 program P let M X Y SEQmodel P M cid26 WFP Corollary 11 M exists Let M1 MS1 P 1 b S1 P Then M1 HTmodel P 1 hminimal P 1 M hminimal P X S1 smaller valuation atoms cid3 S1 note P Y positive atoms S1 occur t S1 P rule bodies Furthermore M1 cid26 WFP S1 Now SEQmodel N1 X1 Y 1 P 1 exist gapN1 gapM1 gapM1 gapWFP S1 Corollary 11 Lemma 5 imply N1 cid26 WFP 1 observe WFP S1 WFP 1 follows items 1 2 Lemma 5 If consider program P 2 P S1 X1 Y 1 inductive argument length splitting sequence cid16 S2 Sn N2 cid26 WFP 2 provided WFP 2 exists P S1 X1 Y 1 adds SCCmodel N2 wrt S constraint Y 1 X1 occur rule head P 2 WFP 2 exist X1 Y 1 To address use argument variant transformation P S1 X1 Y 1 denoted ˆP S1 X1 Y 1 adds rule Y 1 P S1 X1 Y 1 clearly P S1 X1 Y 1 ˆP S1 X1 Y 1 splitting sets SEQmodels wrt splitting sequence let ˆP 2 ˆP S1 X1 Y 1 Then claim WF ˆP 2 exists WF ˆP 2 cid26 WFP denotes constraintfree holds Indeed consider constraintfree P P WFP constraints P program P resulting program Q fulﬁlls WFQ WFP If modify Q adding ˆP S1 X1 Y 1 facts X1 constraints Y 1 S1 Y 1 ii remove rules S1 Y 1 resulting cid16cid16 exists assigning atoms gapWFP true false program Q affect assigned atoms But constraint r P body literal false WFP holds Q according item 2 Lemma 5 WFQ cid16cid16 exists Now note Q cid16cid16 cid26 WFQ WFP WFQ cid16 WFP If add Q cid16cid16 ˆP 2 proves claim cid16 WFP Q WFQ WFQ cid16 WFP cid16cid16 cid16cid16 cid16 cid16 cid16 cid16 270 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 Consequently N2 SCCmodel ˆP 2 N2 cid26 WF ˆP 2 cid26 WFP holds Now SEQS models P deﬁni tion cid13 cid11 SEQS P mc mc XY SEQb S1 P cid11 cid13 XY SEQb S1 P cid16 cid16 SEQS SEQS cid14 P S1 X Y cid14 ˆP S1 X Y cid16 gapWFP follows Corollary 11 N If model N2 appears set SEQS model P reﬁnes WFP proves ﬁrst claim proposition Otherwise SEQS model N SEQmodel P P exist gapN cid16 cid26 WFP case SEQS model P reﬁnes gapN WFP exists proves ﬁrst claim proposition As second claim Corollary 11 SEQmodel M P particular SEQS model M P gapM gapWFP satisﬁes M cid26 WFP let M argument arbitrary SEQS model P arrive N2 M second claim holds This proves result cid2 cid16 gapN2 N cid16 cid16 References 1 J Alcântara CV Damásio LM Pereira A declarative characterization disjunctive paraconsistent answer sets RL Mántaras L Saitta Eds Proc 16th European Conf Artiﬁcial Intelligence ECAI 2004 IOS Press 2004 pp 951952 2 G Amendola T Eiter N Leone Modular paracoherent answer sets E Fermé J Leite Eds Proc 14th European Conf Logics Artiﬁcial Intelligence JELIA 2014 LNCSLNAI vol 8761 Springer 2014 pp 457471 3 K Apt H Blair A Walker Towards theory declarative knowledge Minker 36 pp 89148 4 M Balduccini M Gelfond Logic programs consistencyrestoring rules J McCarthy MA Williams Eds International Symp Logical Formal ization Commonsense Reasoning AAAI 2003 Spring Symposium Series 2003 pp 918 5 C Baral VS Subrahmanian Dualities alternative semantics logic programming nonmonotonic reasoning J Autom Reason 10 3 1993 399420 6 C Baral Knowledge Representation Reasoning Declarative Problem Solving Cambridge Univ Press 2003 7 C Baral G Greco N Leone G Terracina Eds Proc 8th International Conf Logic Programming Nonmonotonic Reasoning LPNMR 2005 Diamante Italy September 58 2005 Lect Notes Comput Sci vol 3662 Springer 2005 8 R BenEliyahu R Dechter Propositional semantics disjunctive logic programs Ann Math Artif Intell 12 1994 5387 9 HA Blair VS Subrahmanian Paraconsistent logic programming Theor Comput Sci 68 2 1989 135154 10 G Brewka T Eiter Equilibria heterogeneous nonmonotonic multicontext systems Proc 22nd Conf Artiﬁcial Intelligence AAAI 07 Vancouver July 2226 2007 AAAI Press 2007 pp 385390 11 G Brewka T Eiter M Truszczy nski Answer set programming glance Commun ACM 54 12 2011 92103 12 J Bruijn D Pearce A Polleres A Valverde A semantical framework hybrid knowledge bases Knowl Inf Syst 25 1 2010 81104 13 P Cabalar SP Odintsov D Pearce Logical foundations wellfounded semantics P Doherty J Mylopoulos CA Welty Eds Proc 10th Interna tional Conf Principles Knowledge Representation Reasoning KR 2006 AAAI Press 2006 pp 2535 14 P Cabalar SP Odintsov D Pearce A Valverde Partial equilibrium logic Ann Math Artif Intell 50 34 2007 305331 15 M DaoTran T Eiter M Fink T Krennwallner Modular nonmonotonic logic programming revisited P Hill D Warren Eds Proc 25th International Conf Logic Programming ICLP 2009 Lect Notes Comput Sci vol 5649 Springer 2009 pp 145159 16 T Eiter G Gottlob On computational cost disjunctive logic programming propositional case Ann Math Artif Intell 15 34 1995 289323 17 T Eiter M Fink J Moura Paracoherent answer set programming Proc 12th International Conf Principles Knowledge Representation Reasoning KR 2010 AAAI Press 2010 pp 486496 18 T Eiter G Ianni R Schindlauer H Tompits A uniform integration higherorder reasoning external evaluations answer set programming LP Kaelbling A Saﬃotti Eds Proc 19th International Joint Conf Artiﬁcial Intelligence IJCAI05 Professional Book Center 2005 pp 9096 19 T Eiter N Leone D Saccà On partial semantics disjunctive deductive databases Ann Math Artif Intell 19 12 1997 5996 20 W Faber G Greco N Leone Magic sets application data integration J Comput Syst Sci 73 4 2007 584609 21 P Ferraris Answer sets propositional theories Baral et al 7 pp 119131 22 P Ferraris V Lifschitz Weight constraints nested expressions Theory Pract Log Program 5 12 2005 4574 23 M Fink Paraconsistent hybrid theories G Brewka T Eiter SA McIlraith Eds KR AAAI Press 2012 pp 391401 24 M Gebser R Kaminski B Kaufmann T Schaub Answer Set Solving Practice Synthesis Lectures Artiﬁcial Intelligence Machine Learning Morgan Claypool Publishers 2012 25 M Gebser J Pührer T Schaub H Tompits A metaprogramming technique debugging answerset programs Proc 23rd Conf Artiﬁcial Intelli gence AAAI 2008 Chicago Illinois USA AAAI Press 2008 pp 448453 26 M Gelfond V Lifschitz Classical negation logic programs disjunctive databases New Gener Comput 9 1991 365385 27 A Heyting Die formalen Regeln der intuitionistischen Logik Sitzber Preuss Akad Wiss 16 1 1930 4256 28 S Huang Q Li P Hitzler Reasoning inconsistencies hybrid MKNF knowledge bases Log J IGPL 21 2 2013 263290 29 T Janhunen E Oikarinen H Tompits S Woltran Modularity aspects disjunctive stable models J Artif Intell Res 35 2009 813857 30 AC Kakas P Mancarella Generalized stable models semantics abduction Proc 9th Eureopean Conf Artiﬁcial Intelligence ECAI 1990 IOS Press 1990 pp 385391 31 V Lifschitz H Turner Splitting logic program Proc International Conf Logic Programming ICLP94 MIT Press 1994 pp 2338 32 V Lifschitz D Pearce A Valverde Strongly equivalent logic programs ACM Trans Comput Log 2 4 2001 526541 33 V Lifschitz LR Tang H Turner Nested expressions logic programs Ann Math Artif Intell 25 34 1999 369389 34 V Lifschitz TYC Woo Answer sets general nonmonotonic reasoning preliminary report B Nebel C Rich WR Swartout Eds Proc 3rd International Conf Principles Knowledge Representation Reasoning KR92 Cambridge MA October 2529 1992 Morgan Kaufmann 1992 pp 603614 35 VW Marek A Nerode JB Remmel Logic programs wellorderings forward chaining Ann Pure Appl Log 96 13 1999 231276 36 J Minker Ed Foundations Deductive Databases Logic Programming Morgan Kaufman Washington DC 1988 G Amendola et al Artiﬁcial Intelligence 234 2016 219271 271 37 SP Odintsov D Pearce Routley semantics answer sets Baral et al 7 pp 343355 38 J Oetsch J Pührer H Tompits Stepwise debugging descriptionlogic programs Correct Reasoning Essays LogicBased AI Honour Vladimir Lifschitz Lect Notes Comput Sci vol 7265 Springer 2012 pp 492508 39 M Osorio JRA Ramírez JL Carballido Logical weak completions paraconsistent logics J Log Comput 18 6 2008 913940 40 D Pearce Equilibrium logic Ann Math Artif Intell 47 12 2006 341 41 D Pearce A Valverde Quantiﬁed equilibrium logic foundations answer set programs MG la Banda E Pontelli Eds Proc 24th International Conf Logic Programming ICLP 2008 Lect Notes Comput Sci vol 5366 Springer 2008 pp 546560 42 LM Pereira JJ Alferes JN Aparício Contradiction removal semantics explicit negation M Masuch L Pólos Eds International Conf Logic Work Knowledge Representation Reasoning Under Uncertainty Lect Notes Comput Sci vol 808 Springer 1992 pp 91105 43 LM Pereira AM Pinto Revised stable models semantics logic programs C Bento A Cardoso G Dias Eds Proc 12th Portuguese Conf Artiﬁcial Intelligence EPIA 2005 Lect Notes Comput Sci vol 3808 Springer 2005 pp 2942 44 LM Pereira AM Pinto Approved models normal logic programs N Dershowitz A Voronkov Eds Proc 14th International Conf Logic Programming Artiﬁcial Intelligence Reasoning LPAR 2007 Lect Notes Comput Sci vol 4790 Springer 2007 pp 454468 45 LM Pereira AM Pinto Layered models topdown querying normal logic programs A Gill T Swift Eds Proc 11th International Symposium Practical Aspects Declarative Languages PADL 2009 Lect Notes Comput Sci vol 5418 Springer 2009 pp 254268 46 TC Przymusinski On declarative semantics deductive databases logic programs Minker 36 pp 193216 47 TC Przymusinski Stable semantics disjunctive programs New Gener Comput 9 1991 401424 48 D Saccà C Zaniolo Partial models threevalued stable models logic programs negation V Subrahmanian Ed Proc First Workshop Logic Programming Nonmonotonic Reasoning LPNMR 1991 MIT Press 1991 pp 87101 49 C Sakama K Inoue Paraconsistent stable semantics extended disjunctive programs J Log Comput 5 3 1995 265285 50 C Sakama K Inoue An abductive framework computing knowledge base updates Theory Pract Log Program 3 6 2003 671713 51 D Seipel Partial evidential stable models disjunctive deductive databases J Dix LM Pereira TC Przymusinski Eds Proc Third International Workshop Logic Programming Knowledge Representation LPKR 97 Selected Papers Lect Notes Comput Sci vol 1471 Springer 1997 pp 6684 52 T Syrjänen Debugging inconsistent AnswerSet Programs Proc 11th International Workshop Nonmonotonic Reasoning NMR 2006 TU Clausthal Dept Informatics 2006 pp 7783 Tech Rep IfI0604 53 RE Tarjan Depthﬁrst search linear graph algorithms SIAM J Comput 1 2 1972 146160 54 H Turner Strong equivalence easy nested expressions weight constraints Theory Pract Log Program 3 45 2003 609622 55 A van Gelder The alternating ﬁxpoint logic programs negation J Comput Syst Sci 47 1 1993 185221 56 A van Gelder K Ross J Schlipf The wellfounded semantics general logic programs J ACM 38 3 1991 620650 57 K Wang L Zhou Comparisons computation wellfounded semantics disjunctive logic programs ACM Trans Comput Log 6 2 2005 295327 58 Y Wang M Zhang JH You Logic programs compatibility forward chaining construction J Comput Sci Technol 24 6 2009 11251137 59 JH You L Yuan A threevalued semantics deductive databases logic programs J Comput Syst Sci 49 1994 334361