Artiﬁcial Intelligence 174 2010 551569 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Optimal query complexity bounds ﬁnding graphs SungSoon Choi a1 Jeong Han Kim ab2 Department Mathematics Yonsei University Seoul 120749 Republic Korea b National Institute Mathematical Sciences Daejeon 305340 Republic Korea r t c l e n f o b s t r c t We consider problem ﬁnding unknown graph queries additive property This problem partially motivated DNA shotgun sequencing linkage discovery problems artiﬁcial intelligence Given graph additive query asks number edges set vertices crossadditive query asks number edges crossing disjoint sets vertices The queries ask sum weights weighted graphs For graph G n vertices m edges prove exists algorithm ﬁnd edges G O m log n2 logm1 queries types m The bound best possible constant factor For weighted graph mild condition weights log m queries provided m cid2 log nα suﬃciently large shown O m log n constant α best possible constant factor m cid3 n2ε constant ε 0 This settles particular conjecture Grebinski V Grebinski On power additive combinatorial search model Proceedings 4th Annual International Conference Computing Combinatorics COCOON 1998 Taipei Taiwan 1998 pp 194203 ﬁnding unweighted graph additive queries We consider problem ﬁnding Fourier coeﬃcients certain class pseudoBoolean functions similar coin weighing problem m 2010 Elsevier BV All rights reserved Article history Received 6 August 2008 Received revised form 12 February 2010 Accepted 13 February 2010 Available online 21 February 2010 Keywords Combinatorial search Combinatorial group testing Graph ﬁnding Coin weighing Fourier coeﬃcient PseudoBoolean function LittlewoodOfford theorem 1 Introduction 11 Graph ﬁnding problem The problem ﬁnding graph stated follows Suppose graph G n vertices m edges edges G unknown We consider types queries additive queries crossadditive queries An additive query asks number edges set vertices crossadditive query asks number edges crossing disjoint sets vertices The problem ﬁnd edges G queries possible Additive queries motivated main process shotgun sequencing 620 Shotgun sequencing method determine genome sequence organisms DNA In shotgun sequencing required order decoded Corresponding author National Institute Mathematical Sciences Daejeon 305340 Republic Korea Email addresses sschoiyonseiackr SS Choi jehkimnimsrekr JH Kim 1 This research supported Basic Science Research Program National Research Foundation Korea NRF funded Ministry Education Science Technology CRI No 20080054850 2 This work partially supported Yonsei University Research Funds 200610078 200710025 second stage Brain Korea 21 Project 2007 Korea Research Foundation Grant funded Korean Government MOEHRD KRF2006312C00455 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201002003 552 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 fragments called contigs genome sequence Given set contigs method called multiplex PCR method 39 tells pairs contigs adjacent original sequence Thus task ordering contigs reduced problem ﬁnding unknown graph Hamiltonian cycle path additive queries See 20 Crossadditive queries motivated problem ﬁnding Fourier coeﬃcients certain class pseudoBoolean functions A pseudoBoolean function realvalued function deﬁned set binary sequences It kbounded expressed sum subfunctions depends k input bits For example given 2SAT formula number clauses assignment satisﬁes 2bounded pseudoBoolean function In molecular biology biophysics kbounded functions study evolution population organisms environment 25 Speciﬁcally kbounded functions small k received attention modeling living systems 26 real biological objects 17 In evolutionary computation kbounded functions benchmark comparing heuristic algorithms 18323338 Crossadditive queries ﬁnd Fourier coeﬃcients 2bounded functions More generally crossadditive queries kbounded hypergraphs ﬁnd Fourier coeﬃcients kbounded functions kbounded hypergraphs hypergraphs hyperedges size k An algorithm ﬁnd unknown graph called nonadaptive query algorithm independent answers previous queries Otherwise called adaptive Nonadaptive algorithms preferable adaptive ones particularly number required queries fairly large parallel computation available There number papers addressing problem ﬁnding graph additive queries When unknown graph Hamiltonian cycle n vertices Grebinski Kucherov 20 presented adaptive algorithm On additive queries best possible constant factor Later Grebinski Kucherov 21 provided extensive work types graphs In particular graphs maximum degree bounded d proved existence nonadaptive algorithm Odn additive queries When graph kdegenerate existence nonadaptive algorithm Okn additive queries shown Grebinski 19 The fully general case graph n vertices m edges matter primary concern It conjectured Grebinski 19 exists algorithm ﬁnd unknown graph Om additive queries provided m Ωn The conjecture settled decade For general m adaptive algorithm Om log n additive queries Angluin Chen 4 best known date In fact algorithm uses powerful queries called membership queries ask oracle existence edge set vertices There number papers addressing problem ﬁnding graph membership queries 2357 Recently Reyzin Srivastava 34 presented simpler adaptive algorithm Om log n additive queries In paper prove conjecture Grebinski stronger form existence nonadaptive algorithm O m log n2 queries This bound best possible better Om log n2 m cid3 log m particular m n2 logm1 additive log n m We shall focus bounds number required crossadditive queries Note crossadditive queries strong additive queries crossadditive query disjoint sets S T vertices answered additive queries S T S T It easily shown converse true For example graph exactly edge Ωlog n crossadditive queries required verify edge additive query verify In rest paper state results respect crossadditive queries The statements hold additive queries simple modiﬁcations necessary In paper consider versions graph ﬁnding problem The ﬁrst Problem 1 Unweighted graphs Input Output unweighted graph G information given G vertex set 1 n m edges edges G For query complexity problem following Theorem 11 There nonadaptive algorithm solves Problem 1 O m log n2 m logm1 crossadditive queries The second generalized weighted graphs moderate condition weights edges Problem 2 Weighted graphs Input Output weighted graph G information given G vertex set 1 n m edges weights edges G n edges G nb absolute value SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 553 For weighted graphs crossadditive query asks sum weights edges crossing disjoint sets vertices We obtain bounds number crossadditive queries required solve problem Theorem 12 For ﬁxed constants b 0 constant α 0 nonadaptive algorithm solves Problem 2 O m log n log m crossadditive queries provided m cid2 log nα This extends result conference version 13 gives bound m constant power n3 Concerning condition weights remark provided Section 7 Notice focused query complexity algorithms The presented algorithms computationally ef ﬁcient try optimize time complexity In terms query complexity bounds theorems optimal constant factor m informationtheoretic lower bounds For weighted graphs bound optimal m For weighted graphs bound optimal m cid3 n2ε constant ε 0 We know bound optimal m range conjecture constant factor Theorem 12 implies existence algorithm ﬁnds weights edges query bound This edges discovered weights edges m additional queries edge It diﬃcult algorithm optimal informationtheoretic lower bound argument 12 Related problems Related graph ﬁnding problem consider coin weighing problem problem ﬁnding Fourier coeﬃcients 2bounded function The problem ﬁnding graph regarded extension coin weighing problem In coin weighing problem given n coins counterfeits All authentic coins weight weight known Authentic counterfeit coins indistinguishable weights different Given group coins scale tells sum weights coins The problem ﬁnd counterfeits scale times possible There papers addressing case weights counterfeits identical 12937 When weight counterfeit positive integer total weight counterfeits bounded m Lindström 28 constructed nonadaptive algorithm ﬁnd counterfeits Om log n weighings Under condition Grebinski Kucherov 21 proved existence nonadaptive algorithm optimal number log m weighings provided m cid3 n1ε weighings constant factor In particular algorithm uses O m log n constant ε 0 In paper bound holds general case weight counterfeit nearly arbitrary provided number counterfeits m The formal deﬁnition problem concerned follows Problem 3 Coin weighing Input Output coins information given total number coins n m counterfeits authentic coins weight weight known weight difference counterfeit authentic coin n set counterfeit coins nb For problem Theorem 13 For ﬁxed constants b 0 nonadaptive algorithm solves Problem 3 O m log n log m1 weighings There studies problem ﬁnding Fourier coeﬃcients kbounded pseudoBoolean function f 0 1n R k constant Kargupta Park 24 presented deterministic adaptive algorithm uses Onk function evaluations Later Heckendorn Wright 22 proposed randomized adaptive algorithm For kbounded functions On nonzero Fourier coeﬃcients generated random model analyzed algorithm negligible error probability ﬁnds Fourier coeﬃcients On2 log n function evaluations average By analyzing algorithm Heckendorn Wright Choi Jung Moon 12 proved kbounded function m nonzero Fourier coeﬃcients Oγ n mm log n function evaluations negligible error probability 1 γ n m n 2 n depending m Recently Choi Jung Kim 11 provided randomized adaptive algorithm ﬁnd Fourier coeﬃcients high probability Om log n function evaluations 3 While paper review process learned additive queries Bshouty Mazzawi 8 improved result bound arbitrary m 554 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 Table 1 Summary results n m range m condition weights Coin weighing coins upper bound counterfeits 1 cid3 m cid3 n vertices upper bound edges cid2 n 2 1 cid3 m cid3 cid3 nb n weight differences NA query complexity optimality O m log n log m1 m cid3 n1ε O m log n2 m logm1 m Unweighted graphs Weighted graphs Fourier coeﬃcients vertices upper bound edges log nα cid3 m cid3 cid3 cid2 n 2 nb n absolute value edge weights O m log n log m m cid3 n2ε input variables upper bound nonzero coeﬃcients log nα cid3 m cid3 cid2 n 1 n 2 n absolute value nonzero coeﬃcients nb cid3 O m log n log m m For problem ﬁnding weights bounds optimal m In paper consider problem 2bounded functions mild condition Fourier coeﬃcients follows Problem 4 Fourier coeﬃcients Input Output 2bounded pseudoBoolean function deﬁned 0 1n function f information given f f m nonzero Fourier coeﬃcients nonzero Fourier coeﬃcients f n Fourier coeﬃcients f nb absolute value As problem ﬁnding Fourier coeﬃcients 2bounded function reduced combination coin weighing problem graph ﬁnding problem crossadditive queries We following corollary Theorems 12 13 An algorithm called kround sequence queries q1 qcid6 algorithm divided k parts q1 qcid61 qcid611 qcid62 qcid6k11 qcid6 nonadaptive given previous parts A nonadaptive algorithm oneround algorithm The kround algorithms smaller k preferable executed k sets parallel computations Corollary 14 For ﬁxed constants b 0 constant α 0 4round algorithm solves Problem 4 O m log n log m function evaluations provided m cid2 log nα For 2bounded functions described corollary algorithm improves bound Choi Jung Kim 11 factor log m deterministic fairly nonadaptive There papers addressing problem ﬁnding Fourier coeﬃcients Boolean functions 92331 We think problem closely related problem believed nontrivial 2bounded Boolean functions As theorems graph ﬁnding problem optimality constant factor theorems informationtheoretic lower bound arguments Theorem 13 optimal m cid3 n1ε constant ε 0 However problem ﬁnding weights coins implies existence algorithm optimal query complexity m By argument Corollary 14 optimal m speciﬁed range Table 1 summarizes results 13 Organization To prove results use inequality describing anticoncentration property sum independent random variables It generalized LittlewoodOfford theorem 1430 easily follows previous generalizations cluding ones 1516273536 We theorem section In Section 3 prove Theorem 13 coin weighing probabilistic methods The proof relatively easy follow good illustration generalized LittlewoodOfford theorem We prove Theorem 11 unweighted graphs Section 4 Theorem 12 weighted graphs Section 5 In Section 6 Corollary 14 proved showing problem ﬁnding Fourier eﬃcients 2bounded pseudoBoolean function reduced graph ﬁnding problem coin weighing problem Concluding remarks follow section 2 Anticoncentration inequality Random variables certain type highly concentrated near means high probability There inequalities describing concentration property An example Chernoff bound 10 shows sum SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 555 iid random variables highly concentrated near mean On hand LittlewoodOfford theorem 1430 describes anticoncentration property sum independent random variables It gives upper bound probability sum independent random variables having different values interval There generalizations theorem including 1516273536 We going use following form 27 It actually hard derive original LittlewoodOfford theorem Theorem 21 Generalized LittlewoodOfford theorem Let a1 b1 bn s 0 real numbers bi ai cid2 s 1 cid3 cid3 n let X1 Xn independent random variables Suppose p 0 p 1 Pr Xi cid3 ai cid2 p Pr Xi cid2 bi cid2 p 1 cid3 cid3 n Then real number r cid6 cid4 Pr r cid3 ncid5 i1 Xi cid3 r s cid3 26 pn A version frequently use Corollary 22 Let ρ positive integer s positive real number Let X1 Xn independent random variables cid7 t Xi s satisfy Pr Xi 0 cid2 p Pr Xi cid2 s cid2 p p 0 p 1 Then probability n i1 Xi interval length ρs 37ρ pt Proof Without loss generality assumed Pr Xi 0 cid2 p Pr Xi cid2 s cid2 p 1 t This implies Pr Xi 0 cid2 p 2 1 t Since Xi s independent Theo cid3 37 rem 21 probability pt cid7 i1 Xi conditioned Xi s t interval length s 26 n cid7 i1 Xi interval length s corollary follows union bound cid2 n 2 Pr Xi cid2 s cid2 p 2 Pr Xi cid3 s cid2 p Thus probability 2 pt 3 Coin weighing problem In section prove Theorem 13 As weight authentic coin known coin weighing problem assume weight authentic coin 0 weight counterfeit nonzero possibly negative An instance coin weighing problem regarded ndimensional vector coordinates given weights coins For instance x xin i1 let spx denote support set x set counterfeit coins x Similarly query regarded binary vector sequence cid6 queries cid6 n binary matrix The basic idea proof Theorem 13 follows A sequence queries binary matrix M separates pair instances x y query sequence yields different answers instances Mx cid7 M y A sequence queries separates set instances separates pair instances set distinct supports In nonadaptive algorithm sequence queries separate set instances If ﬁnitely possible instances sequence given instance identiﬁed checking possible instances Since uncountably instances consider set discretized instances Let I set instances x xi a3 We prove existence sequence S queries separating I m xi multiple n na3 na3 binary matrix M induced S x y I distinct supports We write MS x cid8Mx M ycid8 m Mx need specify sequence S Lemma 31 There exists sequence S cid6 queries cid6 O m log n log m1 cid8 cid8 cid8MS x MS y cid8 m na3 x y I spx cid7 sp y Once sequence S queries following holds Lemma 32 Suppose x given instance Then exists y I spx sp y cid8 cid8 cid8MS x MS y cid8 cid3 m 2na3 ii z I cid8MS x MS zcid8 cid3 m 2na3 spz spx 556 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 Proof Let yi closest multiple n sp y spx xi cid2 n xi cid7 0 The inequality follows fact a3 xi ties broken preferring smaller Then y belongs I cid8 cid8 cid8MS x MS y cid8 cid3 ncid5 i1 xi yi cid3 m 2na3 For ii cid8MS z MS xcid8 cid3 m na3 spz sp y spx cid2 m 2na3 cid8MS z MS ycid8 cid3 m na3 triangle inequality Since S separates I Lemmas 31 32 Theorem 13 following algorithm Algorithm x unknown instance compute MS x 1 z I 2 3 4 5 return sp y cid8MS x MS zcid8 cid3 m y z break 2na3 Now prove Lemma 31 Let D set differences instances I distinct supports set vectors x y x y I spx cid7 sp y Since MS linear ﬁxed sequence S Lemma 31 equivalent saying exists sequence S cid6 queries cid8MS xcid8 m na3 x D A probabilistic method prove following lemma immediately implies Lemma 31 In following uniform random query means uniform random binary vector sampled 0 1n Lemma 33 There exists constant c 0 cid9 Pr There x D cid8 cid8 cid8MS x cid8 cid3 m na3 cid10 o1 sequence S cid6 cm log n log m1 independent uniform random queries Notice x D xi cid2 n x difference pair instances distinct supports For uniform random query q ﬂipping ith bit q changes answer χqx n cid6 On probability χqx 1 12 Thus probability cid8MS xcid8 cid3 m na3 1 2na 2na Om log n If m bounded large hand size D D cid6 c 2 use union bound size D larger 2cid6 m bounded However t xi cid2 m generalized Littlewood Offord theorem presented Section 2 Observing following lemma Hereafter P m holds suﬃciently large m means constant m0 0 P m holds m cid2 m0 cid6D o1 We assume m suﬃciently large It turns bound 2 na3 probability χqx cid3 m na3 cid3 4nab3i e O 1 t 2 cid2 n 2m i1 cid7 Lemma 34 For suﬃciently large m following holds Suppose x D m na3 absolute value q uniform random query Then cid9 Pr cid11 cid11 cid11 cid3 m cid11χqx na3 cid10 cid3 m 04 m logm1 coordinates larger equal Proof Let Xi s random variables Xi xi qi 1 Xi 0 Then lemma immediately follows cid7 log m1 Xi cid2 generalized LittlewoodOfford theorem χqx n i1 Xi Xi s independent na3 probability 1 m 2 0 probability 1 2 cid2 m Let D1 set x D m log m1 coordinates larger equal m na3 absolute value D2 D D1 Lemma 34 implies cid9 Pr There x D2 cid10 cid8 cid8 cid8MS x cid8 cid3 m na3 cid3 Dm 04cid6 o1 1 large constant c cid6 cm log n m na3 absolute value 0 Let log m1 For x D1 let x vector obtained replacing coordinates x D1 set x Notice x D1 coordinate SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 557 The argument mentioned gives Prcid8MS xcid8 1 cid6 union bound 2na cid3 2 absolute value n yields cid9 Pr There x D1 cid8 cid8 cid8MS x cid8 cid10 1 2na cid3 D12 cid6 cid3 2 cid6 cid12 m cid5 log m1 cid13 cid13 cid12 n cid2 i1 cid3 4nab3 o1 large constant c cid6 Since cid8 cid8 cid8 cid8MS x cid8 cid8 cid8MS x cid8 cid2 cid8 cid8 cid8 cid8MS x x cid8 cid8 cid8 cid8MS x cid2 2m2 na3 m na3 na3 1 2m2 cid9 2na Pr There x D1 cid10 cid8 cid8 cid8MS x cid8 cid3 m na3 cid9 cid3 Pr There x D1 cid8 cid8 cid8MS x cid8 cid3 m na3 2m2 na3 cid10 o1 2 Lemma 33 follows 1 2 4 Finding graphs In section prove Theorem 11 Unlike coin weighing problem number possible instances ﬁnite graphs unweighted Thus desired algorithm immediately obtained sequence crossadditive queries separating pair possible graphs To precise let G set graphs vertex set n 1 n having m edges For graph G G sequence S cid6 crossadditive queries MS G cid6dimensional vector consisting answers cid6 queries G The following implies Theorem 11 Lemma 41 There exists sequence S cid6 crossadditive queries cid6 O m log n2 m logm1 cid8 cid8 cid8MS G MS H cid8 0 distinct G H G We prove Lemma 41 For graphs G H G deﬁne difference graph G H graph vertex set n edge set EG EH EH EG Edges EG EH weight 1 edges EH EG weight 1 Let D set difference graphs G H distinct G H G As answer query difference graph G H D answer G minus answer H MS G H MS G MS H sequence S queries Thus Lemma 41 equivalent saying exists sequence S O m logn2m logm1 queries cid8MS Gcid8 0 G D A random query S T means crossadditive query pair random sets vertices S T vertex independently belongs S T S T probability 1 3 S T We prove following obtain Lemma 41 Lemma 42 There exists constant c 0 cid14 There G D Pr cid8 cid8 cid8MS G cid8 cid15 0 o1 sequence S cid6 cm logn2m logm1 independent random queries Let μST G answer crossadditive query S T graph G For G D G difference graph distinct graphs G edge By fact following Lemma 43 For G D random query S T cid15 cid14 μST G 0 Pr cid3 8 9 558 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 Proof Take edge e x y G We consider S T conditioned S S n x y T T n x y In words vertices x y determined S T We μST G cid7 0 S T S T S x T S T y S x T y occurs probability 19 The sum weights edges crossing S x T edges crossing S T plus edges crossing x T Similarly sum weights edges crossing S T y edges crossing S T plus edges crossing S y Thus letting w G e weight e μ Sx T yG w G e μ Sx T G μ S T yG μ S T G If terms 0 μ Sx T yG w G e cid7 0 cid2 cid7 cid3 cid2 n 2 2i e Thus probability cid8MS Gcid8 0 8 Om log n2m large c cid6 cm logn2m 89cid6D o1 m bounded It assumed m logm1 suﬃciently large The bound 89cid6 use union bound size D larger 98cid6 m bounded Notice random query S T μST G sum weights edges G chosen randomly If edges chosen independently hope prove Lemma 42 dividing D classes according number edges coin weighing problem However dependency edges general graphs edges divided subclasses handle dependency 9 cid6 As size D 2m i1 Precisely divide D classes D1 D2 D3 D4 The class D1 consists graphs D log m12 edges The class D2 consists graphs D vertices high degree To edges precise let δ 01 deﬁne U G graph G D set vertices degree mδ G The class D2 set graphs G D size U G mδ Deﬁne W G n U G The class D3 set graphs G D D1 D2 2log m12 edges crossing U G W G The class D4 m D D1 D2 D3 It turns G D2 D4 random query S T PrμST G 0 polynomially small m On hand true graphs D3 graphs G size U G constant independent n edge ends W G Instead focusing single query consider queries collectively graphs D3 Except negligible probability constant portion cid6 random queries graph D3 polynomially small bounds m shown m We consider cases G Di 1 4 cid14 Pr There G Di cid8 cid8 cid8MS G cid8 cid15 0 o1 large constant c cid6 Case 1 G D1 As number graphs D1 Lemma 43 Case 2 G D2 Clearly cid7 2m i1 cid3 cid2 n 2 2i e cid7cid12 m logm12 i1 cid13 cid3 cid2 n 2 2i e O m logn2m logm1 desired inequality immediately follows following lemma The proof based applications generalized LittlewoodOfford theorem Om log n2m graphs D2 Thus desired inequality obtained Lemma 44 For suﬃciently large m following holds Suppose G graph D2 S T random query Then cid14 μST G 0 Pr cid15 cid3 m 001δ Proof As U G cid2 mδ choose subset Q U G Q cid12m01δcid13 Denote H spanning subgraph G consisting edges G ends Q A spanning subgraph subgraph containing vertices original graph The lemma follows showing cid14cid11 cid11 cid11μST H cid11 cid3 m02δ Pr cid15 001δ cid3 m random query S T This implies μST H cid3 m02δ Given pair disjoint sets A B vertices Q n Q vertex v Q bad A B sum weights edges crossing A v m02δ absolute value μ Av H m02δ We simply write cid3 cid2Q 2 cid3 m02δ edges ends Q μST G 0 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 559 μ Av H μ AvH A pair A B called bad bad vertex Q A B It good Letting S T S Q T Q cid14cid11 cid11 cid11μST H cid11 cid3 m02δ Pr cid15 cid15 cid14 S T Pr cid14cid11 cid11 cid11μST H cid11 cid3 m02δ Pr cid11 cid15 cid11 S T cid5 S T The right hand upper bounded cid15 cid5 cid14 S T bad Pr cid14 Pr cid15 S T cid14cid11 cid11 cid11μST H cid11 cid3 m02δ cid11 cid15 cid11 S T Pr S T good Thus terms polynomially small m m For vertex v Q μ Sv H sum weights edges v u u Q chosen independently probability 1 3 As v adjacent mδ Q cid2 mδ 2 vertices Q generalized LittlewoodOfford theorem gives 004δ cid14 Pr cid15 v bad S T Pr cid14cid11 cid11 cid11μ Sv H cid11 m02δ cid15 cid3 m 02δ Thus cid14 S T bad Pr cid15 cid3 Q m 02δ cid3 m 01δ Now given event S T good probability μST H cid3 m02δ polynomially small m To end consider condition S T ﬁxed good pair Since edge H ends Q μST H decomposed μST H μSQ T H μ ST Q H μ S T H For vertex v Q let Y v random variable Y v μv T H v S Y v μ Sv H v T Y v 0 Then μSQ T H μ ST Q H vQ Y v cid7 μST H Y v μ S T H cid5 vQ cid7 Since bad vertex Q S T Y v cid2 m02δ v T occurs probability 1 Y v 0 v S T occurs probability 1 probability vQ Y v μ S T H cid3 m02δ m good pair S T cid14cid11 cid11 cid11μST H cid11 cid3 m02δ 3 On hand 3 Since Y v s independent size Q cid12m01δcid13 004δ generalized LittlewoodOfford theorem That cid11 cid15 cid11 S T 004δ cid3 m Pr cid2 Case 3 G D3 As mentioned bound better constant obtained random query graphs D3 Taking account use conditioning argument random queries collective sense prove desired inequality We start following lemma Lemma 45 For suﬃciently large m following holds Suppose G graph D3 Then pair disjoint sets vertices A B 0 A cid3 2m2δ B cid12mδcid13 ii v B u A adjacent v iii u B v n A u v adjacent m Proof We prove lemma constructing desired pair A B As G D3 number edges crossing U G 2log m12 mδ cid2 2log m12 Since vertex W G degree mδ W G m8δ vertices W G adjacent vertex U G Thus iteratively choose cid12mδcid13 vertices adjacent This possible vertices W G degree mδ m8δ1 mδ cid2 mδ The set B consists vertices The set A consists vertices U G vertices W G B adjacent vertex B Since G D2 Bmδ vertices W G B described A cid3 U G Bmδ cid3 2m2δ Hence properties iiii follow cid2 m 560 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 Let For graph G D3 choose pair disjoint sets vertices A B satisfying properties Lemma 45 denote HG bipartite subgraph G A B consisting edges G Recall S sequence random queries S T Once vertices B V G B determined S T random queries S T MS G B determined G B induced subgraph G B Also MS G MS HG MS G B S sequence restricted random queries S T B Then write M S G B MS G B MS G B depends S The quantity cid8MS HG M S G Bcid8 turns zero small proba S For set H possible bipartite graphs H A B satisfying ii Lemma 45 bility divide event G D3 cid8MS Gcid8 0 events F H G D3 HG H cid8MS Gcid8 0 H H Observe cid14 G D3 Pr cid8 cid8 cid8MS G cid8 PrF H cid9 cid16 Pr 0 cid5 F H cid3 cid10 cid15 cid7 HH HH S Pr S PrF H S PrF H S small To estimate PrF H consider PrF H S For given graph H H A B restricted random query S T B vertex v B called bad sum weights edges v S A 0 μv S AH 0 The restricted random query S T bad B vertices B bad S T The sequence S S T icid6 i1 called bad number bad queries S T 3 4 9cid6 10 The sequence good bad Observe PrF H cid3 Pr S bad PrF H S good Pr S bad Pr S PrF H S cid5 3 We ﬁrst Pr S bad small S good Lemma 46 For given H H A B constant β 1 Pr S bad cid3 βcid6 Proof We ﬁrst vertex v B bad probability 23 For vertex v B u A adjacent v H Assuming S A u determined possibilities u u S u T u S T If μv S AuH cid7 0 v bad provided u S T occurs probability 13 If μv S AuH 0 u S implies μv S AH 1 As u S probability 13 v B bad probability 23 Therefore expected number bad vertices B 2 3 B probability 3B4 vertices B bad 89 Markovs inequality This implies expected number bad queries S T S equal 8cid69 Since S T iid Chernoffs large deviation inequality yields Pr S bad cid3 βcid6 constant β 1 cid2 For upper bound second 3 observe cid11 cid11 S cid14cid8 cid8MS H M S PrF H S cid3 G B 0 cid3cid8 cid8 cid5 Pr cid2 cid15 4 GHGH We Lemma 47 For suﬃciently large m following holds Suppose S good sequence restricted random queries S T B Then cid14cid8 cid8MS H M S Pr cid2 cid3cid8 cid8 G B 0 cid15 cid11 cid11 S cid3 m δcid630 Proof Without loss generality assumed S T good 1 cid3 cid3 cid610 For range B 4 good vertices B Of course actually means cid12B4cid13 Under condition S T given choose set B vertices B B determined S T fully extended query S T event vertex v B belongs T S T resp occurs probability 13 changes sum weights edges crossing S T 1 change sum resp independently vertices B Thus generalized LittlewoodOfford theorem yields sum weights edges crossing S T ﬁxed number probability B i04 Since B B 10 independent cid2 m09δ S T 1 cid3 cid3 cid6 4 cid14cid8 cid8MS H M S Pr cid2 cid3cid8 cid8 G B 0 cid15 cid11 cid11 S cid3 m δcid630 cid2 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 561 Since Om log n2m graphs D3 lemma 4 imply PrF H S cid3 exp cid2 m log cid2 n2m cid3cid3 O cid2 cid3 exp m log cid3cid3 cid2 n2m cid13 cid3 cid2 n 2 2i e cid7 2m i1 cid12 δcid6 log m 30 large c cid6 cm logn2m logm1 With inequality Lemma 46 3 gives PrF H cid3 βcid62 ﬁnally cid14 G D3 Pr cid8 cid8 cid8MS G cid8 0 cid5 cid15 cid3 PrF H cid3 Hβcid62 HH As number edges graph H 2m3δ number possible edge weights including 0 3 H cid3 32m3δ cid12 cid18 ncid17 mδ cid13 cid122m2δ cid13cid5 cid13 cid12 n i1 cid64 cid3 β desired inequality follows Case 4 G D4 For graphs G D4 need lemmas desired bound The following based fact edges ends W G vertex W G bounded degree Lemma 48 For suﬃciently large m following holds Suppose G graph D4 Then G induced matching consisting cid12mδcid13 edges cid2U G Proof As G D1 D2 D3 m 2log m12 edges crossing U G W G G D3 Since size U G mδ G D2 4log m12 edges ends W G suﬃciently large m Considering edges ends W G iteratively edge e delete e edges share vertex e Since vertex W G degree mδ able log m12 edges G G D1 2 edges ends U G Thus cid3 m2δ m m cid3 2 cid12 m 4log m 12 cid13 cid19cid2 2mδ 1 cid3 cid2 mδ edges The ﬁrst cid12mδcid13 edges constitute induced matching desired cid2 Since cid7 2m i1 cid3 cid2 n 2 2i e Om log n2m different graphs D4 following lemma yields desired bound To prove lemma lemma generalized LittlewoodOfford theorem Lemma 49 For suﬃciently large m following holds Suppose G graph D4 S T random query Then cid14 μST G 0 Pr cid15 cid3 m 04δ Proof According Lemma 48 G induced matching consisting cid12mδcid13 edges Let B set vertices induced matching We consider random query S T conditioned S S B T T B B n B Let e1 ecid12mδcid13 cid12mδcid13 edges induced matching For edge ei ui v let Xi random variable representing contribution ui v value μST G μST G cid12mδ cid13cid5 i1 Xi μ S T G This possible ei s edges G ends B pairwise disjoint It possible G w G ei use argument Lemma 43 For Xi 0 μui T G μ Sv probability 19 corresponding events ui v S T ui S v S T ui S T v T ui S v T respectively Since w G ei 1 values 13 absolute value In particular Xi 0 Xi cid2 13 probability 19 By generalized LittlewoodOfford theorem probability cid7cid12mδ cid13 G μui T G μ Sv 04δ probability μST G 0 cid2 i1 Xi μ S T G ﬁxed number m 562 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 5 Finding weighted graphs In section prove Theorem 12 As coin weighing problem consider set discretized graphs extend idea unweighted graphs weighted ones Precisely let G set possible graphs considered nb absolute value Theorem 12 set graphs n having m edges weights n a6 A sequence S queries separates set graphs Let I set graphs G weights multiples n separates pair graphs set different sets edges We prove existence sequence queries separating I m na6 As previous section MS G denotes vector coordinates given answers sequence S queries graph G Lemma 51 There exists sequence S cid6 crossadditive queries cid6 O m log n log m cid8 cid8 cid8MS G MS H cid8 m na6 G H I EG cid7 EH Given sequence S following holds We omit proof essentially Lemma 32 Lemma 52 Suppose G graph G There exists H I EG EH cid8 cid8 cid8MS G MS H cid8 cid3 m 2na6 ii For I I cid8MS G MS Icid8 cid3 m 2na6 EI EG Lemmas 51 52 imply Theorem 12 following algorithm Given unknown graph G G compute MS G 2na6 The set edges H looking In ﬁnd H I cid8MS G MS Hcid8 cid3 m algorithm O m log n log m queries required computing MS G nonadaptive In rest section prove Lemma 51 For graphs G H I deﬁne difference graph G H weighted graph vertex set n edge set consists edges e w G e w H e cid7 0 Here use convention w G e 0 e edge weighted graph G The weight edge e G H w G e w H e Let D set difference graphs G H G H I EG cid7 EH Then following lemma implies Lemma 51 As previous section random query S T means crossadditive query pair random sets vertices S T vertex independently belongs S T S T probability 1 3 S T Lemma 53 Main lemma There exists constant c 0 Pr There G D cid8 cid8 cid8MS G cid8 cid3 m na6 cid10 o1 sequence S cid6 cm log n log m independent random queries Notice edges small weight 1 na6 absolute value For reason hard prove Lemma 53 dividing graphs D regardless weights edges proof unweighted graphs We divide D classes D1 D2 D3 D4 based weights edges For division cases need classify edges absolute value An edge types according weights An edge called heavy weight called light weight m na6 absolute value An edge heavy light called middleweight The class D1 consists graphs D heavy edges m log m heavy edges The class D2 consists graphs D vertices incident heavy middleweight edges To precise let δ 01 deﬁne U G weighted graph G set vertices incident mδ heavy middleweight edges The class D2 set graphs G D size U G mδ Deﬁne W G n U G The class D3 set graphs G D D1 D2 2 log m heavy edges crossing U G W G The class D4 D D1 D2 D3 We consider cases G Di 1 4 1 8mna m Pr There G Di cid8 cid8 cid8MS G cid8 cid3 m na6 cid10 o1 provided m cid2 log nα large constant α The condition range m derive result second case G D2 Lemma 54 cid9 cid9 Case 1 G D1 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 563 For G D1 let G graph obtained removing middleweight light edges G Let 4na S separates D1 m D1 denote set graphs G It turns S separates D1 na6 We ﬁrst derive absolute value G inequality difference graph graphs I different sets edges Thus H D1 edge PrμST H D1 4na random query S T 89 argument Lemma 43 As size 1 cid7cid12 m log m i1 D1 Notice G D1 edge G weight n cid3 cid2 n 2 4nab6i e O m log n log m 1 cid13 cid9 Pr There H D1 union bound yields cid10 cid8 cid8 cid8MS H cid8 1 4na cid3 D1 cid13cid6 cid12 8 9 o1 5 large constant c cid6 cm log n log m Since G G consists 2m 1 middleweight light edges cid8 cid8 cid8 cid8MS G G cid8 cid8 cid8 cid8MS G cid8 cid8 cid8MS G cid8 cid8 cid8 cid8 cid8MS G cid2 cid2 2m 1 8mna 4na 5 imply cid8 cid8 cid8MS G cid8 cid10 cid3 m na6 The fact m na6 cid9 2m1 8mna 1 Pr There G D1 cid9 cid3 Pr There G D1 Case 2 G D2 cid8 cid8 cid8MS G cid8 cid3 m na6 2m 1 8mna cid10 o1 The proof D2 analogous second case unweighted graphs Let ﬁrst set vertices incident edges weights range weights edges set properly bounded Lemma 54 For constants α 0 m0 0 following holds provided m cid2 m0 m cid2 log nα Suppose G graph D2 Then s m na6 exist Q n cid2 0 size Q cid12m01δcid13 ii edge ends Q weight 2i1s absolute value iii vertex Q incident m08δ edges weights 2i s 2i1s absolute value Proof An edge G called type absolute value weight 2i s 2i1s For vertex v G denote div number edges type containing v Notice vertex v U G contained mδ edges weights s m na6 absolute value weights edges 2nb absolute value Let t t1 i0 div cid2 mδ t Olog n Hence choose large α 0 minimum integer 2t s 2nb Then integer 0 cid3 cid3 t 1 div cid2 m08δ m cid2 log nα We decompose U G U 0 U t1 v U largest div cid2 m08δ As size U G mδ size U m095δ Notice vertices U satisfy property iii cid7 To construct desired vertex set Q iteratively vertex u U delete u vertices U adjacent u edge type j j Then time t 1m08δ 1 cid3 m085δ vertices U deleted able cid12m01δcid13 vertices U property The property ii follows construction cid2 Clearly following lemma cid6 cm log n cid7 cid2 cid3 n 2 4nab6i e 2m i1 Om log n graphs D2 The desired bound D2 obtained log m The proof uses Lemma 54 essentially Lemma 44 Lemma 55 For constants α 0 m0 0 following holds provided m cid2 m0 m cid2 log nα Suppose G graph D2 S T random query Then cid11 cid11 cid11 cid3 m cid11μST G na6 001δ cid3 m Pr cid10 cid9 564 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 Proof For G D2 choose Q satisfying properties Lemma 54 Denote H spanning subgraph G consisting edges G ends Q By ii Lemma 54 sum weights edges ends Q cid11 cid11 cid11μST H cid11 cid3 cid3 cid2Q 2i1s cid3 2i sm02δ absolute value Thus μST G cid3 m na6 cid11 cid11 cid11 cid3 s 2i sm02δ cid3 2i1sm02δ cid11μST G H cid11 cid11 cid11 cid11μST G s implies 2 cid2 0 To obtain inequality cid14cid11 cid11 cid11μST H cid11 cid3 2i1sm02δ 001δ cid3 m Pr cid15 For pair disjoint sets A B vertices Q n Q vertex v Q bad A B sum weights edges H crossing A v 2i1sm02δ absolute value μ Av H 2i1sm02δ A pair A B called bad bad vertex Q A B It good Letting S T S Q T Q PrμST H cid3 2i1sm02δ upper bounded cid15 cid14 S T bad Pr cid14cid11 cid11 cid11μST H cid11 cid3 2i1sm02δ cid15 cid14 S T Pr cid11 cid15 cid11 S T cid5 Pr S T good Thus terms polynomially small m m For vertex v Q μ Sv H sum weights edges v u u Q chosen independently probability 1 3 edges v u w H uv cid2 2i s generalized LittlewoodOfford theorem gives As m08δ Q cid2 m08δ 2 004δ cid14 Pr cid15 v bad S T Pr cid14cid11 cid11 cid11μ Sv H cid11 2i1sm02δ cid15 cid3 m 015δ Thus union bound yields cid14 cid15 There bad vertex Q S T Pr 005δ cid3 Q m 015δ cid3 m Now given condition S T ﬁxed pair bad vertex Q probability μST H cid3 2i1sm02δ polynomially small m Since edge H ends Q μST H μ S T H plus sum contributions Y v v v Q Y v μv T H μ Sv H 0 v belongs S T respectively The contribution Y v changes μ Sv H cid2 2i1sm02δ according v T v S T 3 As Y v s independent ﬁxed S T size Q cid12m01δcid13 probability occurs probability 1 004δ generalized LittlewoodOfford theorem That good pair S T μST H cid3 2i1sm02δ m cid14cid11 cid11 cid11 cid15 cid11μST H cid11 S T cid11 cid3 2i1sm02δ 004δ cid3 m Pr cid2 Case 3 G D3 The proof analogous case unweighted graphs We start following lemma similar Lemma 45 Lemma 56 For suﬃciently large m following holds Suppose G graph D3 Then pair disjoint sets vertices A B 0 A cid3 2m2δ B cid12mδcid13 ii v B u A adjacent v heavy edge iii u B v n A u v joined light edge m 2 log m Since vertex W G incident mδ heavy edges m Proof We construct desired pair A B As G D3 number heavy edges crossing U G W G 2 log m mδ cid2 m8δ vertices W G adjacent vertex U G heavy edge G Thus iteratively choose cid12mδcid13 vertices adjacent heavy middleweight edges vertices W G incident mδ heavy middleweight edges m8δ1 mδ cid2 mδ The set B consists vertices The set A consists vertices U G vertices W G B adjacent vertex B heavy middleweight edge Since G D2 Bmδ vertices W G B described A cid3 U G Bmδ cid3 2m2δ Hence properties iiii follow cid2 For graph G D3 choose pair disjoint sets vertices A B satisfying properties Lemma 56 HG denotes bipartite subgraph G A B consisting edges G Recall S sequence random queries S T Once vertices B V G B determined S T SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 565 random queries S T MS G B determined G B induced subgraph G B It expected cid8MS HG MS G Bcid8 plays major role cid8MS Gcid8 This cid8 cid8 cid8MS G cid8 cid2 cid8 cid8MS cid2 cid3 HG MS cid8 cid8MS cid2 cid3 HG cid2 MS cid2 cid2 cid3cid8 cid8 G B cid3cid8 cid8 G B m na6 1 10na2 cid12 B2 4 cid13 Bn 6 Let S sequence restricted random queries S T B Then MS G B M S G B MS G B depends S The quantity cid8MS HG M S G Bcid8 turns large na6 small probability S For set H possible weighted bipartite graphs H A B satisfying ii Lemma 56 divide event G D3 cid8MS Gcid8 cid3 m events F H G D3 na6 HG H cid8MS Gcid8 cid3 m na6 cid8 cid8 cid8MS G cid8 H H Then 8mna 1 G D3 PrF H cid9 cid16 Pr 10na2 m cid5 F H Pr cid3 cid10 cid9 cid10 1 cid3 m na6 cid7 HH HH cid5 To bound PrF H consider PrF H S For given graph H H A B restricted random query S T B vertex v B called bad sum 16mna The restricted random query S T i1 called bad number bad queries weights edges crossing v S A negligible μv S AH 1 bad 3 4 S T 9cid6 B vertices B bad The sequence S S T icid6 10 The sequence good bad We S Pr S PrF H S PrF H S small PrF H cid3 Pr S bad PrF H S good Pr S bad Pr S PrF H S 7 Let ﬁrst Pr S bad small S good Lemma 57 For given H H A B constant β 1 Pr S bad cid3 βcid6 Proof For vertex v B cid9 cid11 cid11 cid11 cid11μv S AH Prv bad Pr cid10 cid3 2 3 1 16mna 8mna according u S v adjacent vertex u A heavy edge μv S AH changes B probability 3B4 vertices Thus expected number bad vertices B 2 3 B bad 89 Markovs inequality This implies expected number bad queries S T S equal 8cid69 Since S T iid Chernoffs large deviation inequality yields Pr S bad cid3 βcid6 constant β 1 cid2 1 To bound second 7 notice 6 PrF H S cid3 cid5 cid9 Pr GHGH cid8 cid8MS H M S cid2 cid3cid8 cid8 G B We 1 8mna 1 10na2 cid11 cid11 cid11 S cid3 1 na6 imply m cid10 8 8mna Lemma 58 For suﬃciently large m following holds Suppose S good sequence restricted random queries S T B Then cid9 Pr cid8 cid8MS H M S cid2 cid3cid8 cid8 G B cid11 cid11 cid11 S cid3 1 8mna cid10 cid3 m δcid630 Proof Suppose S T good consider fully extended random query S T Then cid12 B m09δ good vertices B good vertex v B answer query S T changes v T v S T occurs probability 1 16mna depending 3 independently vertices B Thus cid13 cid2 1 4 566 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 answer S T theorem Since cid610 S T good S T independent lemma follows cid2 absolute value probability m 1 8mna 04δ generalized LittlewoodOfford Since e Om log n graphs D3 lemma 8 imply cid13 PrF H S cid3 exp Om log n cid3 expm log n cid12 δcid6 log m 30 large c cid6 cm log n ﬁnally log m With inequality Lemma 57 7 gives PrF H cid3 βcid62 suﬃciently large n cid9 Pr G D3 cid8 cid8 cid8MS G cid8 cid3 m na6 cid10 cid3 cid5 HH PrF H cid3 Hβcid62 Since graphs H number edges 2m3δ number possible edge weights including 0 4nba6 H cid3 cid2 4nba6 cid3 2m3δ cid12 n mδ cid13 2m2δcid5 cid13 cid12 n i1 cid64 cid3 β desired inequality follows Case 4 G D4 The proof analogous fourth case unweighted graphs Let ﬁrst G D4 matching number heavy edges consider light edges G Lemma 59 For suﬃciently large m following holds Suppose G graph D4 Then G cid12mδcid13 pairwise disjoint heavy edges edges sets vertices edge joining vertices heavy edges light Proof Notice G D1 D2 D3 4 log m heavy edges ends W G vertex W G incident mδ heavy middleweight edges Thus able iteratively choose heavy edge e delete e heavy middleweight edges sharing vertex e m cid12 m 4 log m cid13 cid2 2mδ 1 cid3 cid2 mδ times The ﬁrst cid12mδcid13 edges chosen desired edges cid2 Since e Om log n graphs D4 following lemma yields desired bound Lemma 510 For suﬃciently large m following holds Suppose G graph D4 S T random query Then cid9 Pr cid11 cid11 cid11 cid3 m cid11μST G na6 cid10 cid3 m 04δ Proof According Lemma 59 cid12mδcid13 pairwise disjoint heavy edges e1 ecid12mδ cid13 G edge joining vertices contained heavy edges light Let B set vertices contained heavy edges Deﬁne H spanning subgraph G consisting edges G light edges ends B Since graph G H light edges ends B B 2cid12mδcid13 cid11 cid11 cid11 cid3 cid11μST G H cid13 cid12 2mδ 2 m na6 μST G cid3 m cid11 cid11 cid11μST H cid11 cid3 na6 implies cid11 cid11 cid11 cid11μST G cid11 cid11 cid11 cid3 cid11μST G H cid12cid12 2mδ 2 cid13 cid13 1 m na6 1 8mna To obtain inequality SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 567 cid9 Pr cid11 cid11 cid11 cid11μST H cid10 1 8mna cid3 m 04δ We consider random query S T conditioned S S B T T B B n B That vertices B determined S T For heavy edge ei ui v B let Xi random variable representing contribution ui v value μST H μST H cid12mδ cid13cid5 i1 Xi μ S T H H μui T H μ Sv This possible ei s edges H ends B pairwise disjoint For Xi 0 H w G ei probability 19 corresponding events ui v S T μui T H μ Sv ui S v S T ui S T v T ui S v T respectively Since ei heavy w G ei cid2 1 8mna values 24mna probability i1 Xi μ S T H ﬁxed interval length 24mna absolute value In particular Xi 0 Xi cid2 1 19 By generalized LittlewoodOfford theorem probability 4mna m 04δ probability μST H 1 8mna cid2 cid7cid12mδ cid13 1 1 6 Finding Fourier coeﬃcients The Walsh transform Fourier transform space pseudoBoolean functions pseudoBoolean func tion represented linear combination basis functions called Walsh functions 40 For subset S n Walsh function corresponding S ψS 0 1n R deﬁned cid7 ψS x 1 iS xi x 0 1n If deﬁne inner product pseudoBoolean functions f g cid18 f gcid19 cid5 x01n f xgx 2n set Walsh functions ψS S n orthonormal basis space pseudoBoolean functions Hence pseudoBoolean function f represented f cid5 Sn cid20f SψS cid20f S cid18 f ψS cid19 called Fourier coeﬃcient corresponding S Now prove Corollary 14 Suppose f 2bounded function satisfying condition Corollary 14 Then Fourier coeﬃcients cid20f S f corresponding S S cid2 3 0 Decompose f follows f cid20f f 1 f 2 cid5 f 1 Sn S1 cid20f SψS f 2 cid5 cid20f SψS Sn S2 To ﬁnd Fourier coeﬃcients coeﬃcient cid20f f separately ﬁnd Fourier coeﬃcients f 2 f 1 ﬁnd Fourier First deﬁne G f weighted graph V G f n ii pair e vertices e EG f cid20f e cid7 0 iii w G f e cid20f e e EG f Since weights edges G f precisely Fourier coeﬃcients f 2 consider problem ﬁnding weighted graph G f For crossadditive query S T μST G f cid5 euv uSvT cid20f e f 0n f 1S f 1T f 1ST 4 0n vector consisting n zeros 1 A subset A n represents vector consisting 1 coor dinates A 0 rest This means crossadditive query G f answered 4 function evaluations f Since f m nonzero Fourier coeﬃcients G f m edges Hence Theorem 12 exists log m function evaluations For edge G f weight nonadaptive algorithm ﬁnd edges G f crossadditive query Thus weights edges G f Om function evaluations O m log n 568 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 nonadaptive way Overall exists 2round algorithm ﬁnd weights edges G f consequently Fourier coeﬃcients f 2 O m log n log m function evaluations Let x f ndimensional vector ith element Fourier coeﬃcient cid20f That elements x f precisely Fourier coeﬃcients f 1 For q 0 1n following holds χqx f f 0n f 20n f q f 2q 2 If regard x f vector representing weights n coins equation means coin weighing x f simulated constant number function evaluations f f 2 Since f 2 known algorithm ﬁnding G f value f 0n evaluated algorithm function evaluation f f q required know value χqx f The function f 1 m nonzero Fourier coeﬃcients spx f cid3 m Hence nonadaptive log m function evaluations The value non algorithm Theorem 13 identiﬁes nonzero elements x f zero element x f coin weighing function evaluation f Thus values nonzero elements x f Om function evaluations nonadaptive way Overall exists 2round algorithm ﬁnd x f consequently Fourier coeﬃcients f 1 O m log n O m log n log m function evaluations Once obtain f 2 f 1 value cid20f cid20f f 0n f 20n f 10n This additional function evaluations f value f 0n evaluated algorithm ﬁnding G f Combining algorithms ﬁnding G f x f ﬁnal step obtain algorithm ﬁnd Fourier coeﬃcients f O m log n log m function evaluations Since algorithms 2round algorithm combined algorithm 4round algorithm proves Corollary 14 7 Concluding remarks In paper proved existence optimal algorithms graph ﬁnding problem related problems Our results weighted graphs based condition weights edges absolute value corresponding ones problems bounded polynomial n inverse polynomial n The essential condition proofs ratio minimum maximum polynomially bounded n The polynomial ratio best possible derive optimal bounds proofs idea obtain optimal bounds general conditions For ﬁnding weighted graphs obtained results condition m large constant power log n Getting results smaller m open crossadditive queries problem ﬁnding Fourier coeﬃcients For additive queries 8 appeared review process paper Also proposed algorithms optimal ﬁnding explicit construction optimal algorithms open problem think important research direction Another important issue practical applications time complexity algorithms In paper focused query complexity try optimize time complexity It worth trying ﬁnd optimal algorithm reasonable time complexity A natural extension graph ﬁnding problem hypergraph ﬁnding problem especially hypergraph kuniform k 3 4 An algorithm problem useful ﬁnd Fourier coeﬃcients certain kbounded pseudoBoolean functions described Section 6 References 1 M Aigner Combinatorial Search Wiley New York 1988 2 N Alon V Asodi Learning hidden subgraph SIAM Journal Discrete Mathematics 18 4 2005 697712 3 N Alon R Beigel S Kasif S Rudich B Sudakov Learning hidden matching SIAM Journal Computing 33 2 2004 487501 4 D Angluin J Chen Learning hidden graph Olog n queries edge Proceedings 17th Annual Conference Learning Theory COLT 2004 Banff Canada 2004 pp 210223 5 D Angluin J Chen Learning hidden hypergraph Journal Machine Learning Research 7 2006 22152236 6 R Beigel N Alon MS Apaydin L Fortnow S Kasif An optimal procedure gap closing genome shotgun sequencing Proceedings Fifth Annual International Conference Computational Molecular Biology RECOMB 2001 Montreal Canada 2001 pp 2230 7 M Bouvel V Grebinski G Kucherov Combinatorial search graphs motivated bioinformatics applications A brief survey Proceedings 31st International Workshop GraphTheoretic Concepts Computer Science WG 2005 Metz France 2005 pp 1627 8 NH Bshouty H Mazzawi Reconstructing weighted graphs minimal query complexity Proceedings 20th International Conference Algorithmic Learning Theory ALT 2009 Porto Portugal 2009 pp 97109 9 NH Bshouty C Tamon On Fourier spectrum monotone functions Journal ACM 43 4 1996 747770 10 H Chernoff A measure asymptotic eﬃciency tests hypothesis based sum observations Annals Mathematical Statistics 23 1952 493509 11 SS Choi K Jung JH Kim Almost tight upper bound ﬁnding Fourier coeﬃcients kbounded pseudoBoolean functions Proceedings 21st Annual Conference Learning Theory COLT 2008 Helsinki Finland 2008 pp 123134 12 SS Choi K Jung BR Moon Lower upper bounds linkage discovery IEEE Trans Evolutionary Computation 13 2 2009 201216 13 SS Choi JH Kim Optimal query complexity bounds ﬁnding graphs Proceedings 40th ACM Symposium Theory Computing STOC 2008 Victoria Canada 2008 pp 749758 14 P Erd os On lemma Littlewood Offord Bulletin American Mathematical Society 51 1945 898902 SS Choi JH Kim Artiﬁcial Intelligence 174 2010 551569 569 15 CG Esseen On KolmogorovRogozin inequality concentration function Z Wahrscheinlichkeitstheorie Verw Geb 5 1966 210216 16 CG Esseen On concentration function sum independent random variables Z Wahrscheinlichkeitstheorie Verw Geb 9 1968 290308 17 W Fontana P Stadler E BornbergBauer T Griesmacher I Hofacker M Tacker P Tarazona E Weinberger P Schuster RNA folding combinatory landscapes Physical Review E 47 3 1993 20832099 18 DE Goldberg Genetic Algorithms Search Optimization Machine Learning AddisonWesley Reading Massachusetts 1989 19 V Grebinski On power additive combinatorial search model Proceedings 4th Annual International Conference Computing Combinatorics COCOON 1998 Taipei Taiwan 1998 pp 194203 20 V Grebinski G Kucherov Reconstructing Hamiltonian cycle querying graph Application DNA physical mapping Discrete Applied Mathe matics 88 1998 147165 21 V Grebinski G Kucherov Optimal reconstruction graphs additive model Algorithmica 28 2000 104124 22 RB Heckendorn AH Wright Eﬃcient linkage discovery limited probing Evolutionary Computation 12 4 2004 517545 23 J Jackson An eﬃcient membershipquery algorithm learning DNF respect uniform distribution Journal Computer System Sciences 55 3 1997 4265 24 H Kargupta B Park Gene expression fast construction distributed evolutionary representation Evolutionary Computation 9 1 2001 132 25 SA Kauffman Adaptation rugged ﬁtness landscapes D Stein Ed Lectures Sciences Complexity AddisonWesley Redwood City 1989 pp 527618 26 SA Kauffman The Origins Order SelfOrganization Selection Evolution Oxford University Press New York 1993 27 L Le Cam On distribution sums independent random variables J Neyman L Le Cam Eds Bernoulli Bayes Laplace Anniversary Volume Proceedings International Research Seminar Statistical Laboratory University California Berkeley 1963 SpringerVerlag New York 1965 pp 179202 28 B Lindström On B2sequences vectors Journal Number Theory 4 1972 261265 29 B Lindström Determining subsets unramiﬁed experiments JN Srivastava Ed A Survey Statistical Designs Linear Models NorthHolland Amsterdam 1975 pp 407418 30 JE Littlewood AC Offord On number real roots random algebraic equation III Mat Sbornik 12 1943 277285 31 Y Mansour Learning Boolean functions Fourier transform V Roychowdhury KY Siu A Orlitsky Eds Theoretical Advances Neural Computation Learning Kluwer Academic Dordrecht 1994 pp 391424 32 H Mühlenbein T Mahnig FDA A scalable evolutionary algorithm optimization additively decomposed functions Evolutionary Computa tion 7 1 1999 4568 33 M Pelikan DE Goldberg E CantúPaz Linkage problem distribution estimation Bayesian networks Evolutionary Computation 8 3 2000 311340 34 L Reyzin N Srivastava Learning verifying graphs queries focus edge counting Proceedings 18th International Conference Algorithmic Learning Theory ALT 2007 Sendai Japan 2007 pp 285297 35 BA Rogozin An estimate concentration functions Theory Probability Its Applications 6 1 1961 9497 36 BA Rogozin On increase dispersion sums independent random variables Theory Probability Its Applications 6 1 1961 9799 37 HS Shapiro S Söderberg A combinatory detection problem American Mathematical Monthly 70 1963 10661070 38 MJ Streeter Upper bounds time space complexity optimizing additively separable functions Proceedings Genetic Evolu tionary Computation Conference GECCO 2004 Seattle USA 2004 pp 186197 39 H Tettelin D Radune S Kasif H Khouri SL Salzberg Optimized multiplex PCR Eﬃciently closing wholegenome shotgun sequencing project Genomics 62 1999 500507 40 JL Walsh A closed set orthogonal functions American Journal Mathematics 55 1923 524