Artiﬁcial Intelligence 108 1999 130 Functional dependencies Horn theories Toshihide Ibaraki a1 Alexander Kogan bccid3 Kazuhisa Makino d2 Department Applied Mathematics Physics Graduate School Informatics Kyoto University Kyoto Japan 606 b Department Accounting Information Systems Faculty Management Rutgers University Newark NJ 07102 USA c RUTCOR Rutgers University 640 Bartholomew Road Piscataway NJ 088548003 USA d Department Systems Human Science Graduate School Engineering Science Osaka University Toyonaka Osaka Japan Received 12 March 1997 received revised form 29 July 1998 Abstract This paper studies functional dependencies Horn theories theory represented clausal form deﬁned Horn envelope set models We provide polynomial algorithms recognition given functional dependency holds given Horn theory polynomial algorithms generation representative sets functional dependencies We problems inferring functional dependencies constructing irredundant FDcover computationally difﬁcult We study structure functional dependencies hold Horn theory showing functional dependency fact single positive term Boolean function prove Horn theory set minimal functional dependencies quasiacyclic Finally consider problem condensing Horn theory prove Horn theory unique condensation develop efﬁcient cid211 1999 Elsevier Science BV All rights polynomial algorithm condensing Horn theories reserved Keywords Knowledge representation Horn theory Functional dependency Condensation Computational complexity Conjunctive normal form Acyclic directed graph 1 Introduction Relational databases invented studied deployed essential tools information storage retrieval 1033344243 Functional dependencies cid3 Corresponding author Email koganrutcorrutgersedu 1 Email ibarakikuampkyotouacjp 2 Email makinosysesosakauacjp 0004370299 matter cid211 PII S 0 0 0 4 3 7 0 2 9 8 0 0 1 1 4 3 1999 Elsevier Science BV All rights reserved 2 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 recognized important concepts relational database theory 114 Functional dependencies state values certain attributes relation determined values attributes They commonly logical database design express integrity constraints express domain knowledge The problems inferring functional dependencies relations studied 3035 Thorough theoretical studies functional dependencies relational databases 1214152839 established close connection Horn clauses Horn clauses introduced formal logic 2136 gained prominence logic programming 13 artiﬁcial intelligence 91124 In artiﬁcial intelligence implementation knowledge base Horn theory preferred linear time complexity solving Horn satisﬁability problems 1337 provides beneﬁts computationally tractable reasoning Horn clauses expressive power sufﬁcient applications A Horn theory characterized condition intersection models model A theory viewed set models reasoning models developed recent AI studies 242729 In modelbased representation theory represented subset models commonly called characteristic models 242729 From database theory point view set models fact relation This relation functional dependencies reveal important structural properties theory describing intrinsic determinants values certain attributes Individual functional dependencies provide valuable insights hidden laws problem domain domain experts evaluating verifying theory The inference functional dependencies Horn theory provide means qualitative analysis considered form knowledge discovery The knowledge functional dependencies theory allow simplify theory eliminating variables values determined values variables This condensation procedure result theory functional dependencies fewer variables original theory structurally simpler original theory The computational expense condensing theory offset speedup queries knowledge base condensation provide signiﬁcant computational beneﬁts Moreover condensed theory viewed core original theory condensation reveal important structural information problem domain Knowledge condensation represents special type knowledge preprocessing attempts spend computational resources preliminary stage transform knowledge base way transformed reason answer queries computational effort The computational expense knowledge preprocessing quickly amortized large number queries routine operations A developed type knowledge preprocessing known knowledge compilation 2540 constructs Horn upper lower bounds general Boolean theory attempts use answering queries For queries attempts successful providing fast answers impossible obtain original Boolean theory If Horn bounds provide answer original theory answer queries It interesting note knowledge T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 3 compilation attempts reduce size Horn upper bound introducing additional variables theory 25 knowledge condensation aims simplify problem eliminating redundant variables theory Another developed type knowledge preprocessing knowledge compression 61720 shortens length Horn CNF changing Horn theory represents While knowledge compilation aims reduce intractable problem tractable knowledge compression similarly knowledge condensation developed Horn theories simpliﬁes problem tractable Such simpliﬁcations important Horn theories practical applications long representations This typical applications propositional Horn theories generated automatically ﬁrstorder Horn theories instantiated ﬁnite large domains In situations possible signiﬁcant size reductions provided knowledge compression condensation essential Both knowledge compression condensation knowledge compilation simplify Horn bounds produces This paper devoted studies functional dependencies Horn theories It focuses characterizing combinatorial structure functional dependencies developing efﬁcient polynomial algorithms recognizing inferring We consider problems arising theory represented Horn clausal form deﬁned Horn envelope 26 set models represented characteristic models The results paper reveal new properties Horn theories knowledge representation reasoning computationally efﬁcient We provide polynomial algorithms recognize given functional dependency holds given Horn theory polynomial algorithms generate representative sets functional dependencies We problems inferring functional dependencies constructing irredundant FDcover computationally difﬁcult We study structure functional dependencies hold Horn theory functional dependency fact single positive term Boolean function prove Horn theory set minimal functional dependencies quasi acyclic Finally apply obtained structural algorithmic results functional dependencies Horn theories problem condensing Horn theory We prove contrast case general Boolean theories Horn theory unique condensation We Horn theory totally condensed limited number functional dependencies develop efﬁcient polynomial algorithm condensing Horn theories The condensation Horn theory represented Horn envelope set models reduces size representation computationally advantageous The condensation Horn CNF result worst case moderate polynomial increase length CNF On hand examples potential reduction length CNF resulting condensation exponential It makes sense preprocessing stage attempt condensing Horn CNF worst case size increases polynomial computational effort wasted case success size decreases computational beneﬁts utilized continuously long 4 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 run Additionally knowledge compression applied condensed theory easier compress original contains fewer variables simpler structure 2 Notation basic concepts Propositional variables taking values f0 1g meaning false true respectively assuming 0 1 denoted lower case Latin letters usually end alphabet x denoting negation x Propositional variables negations called literals variables called positive literals negations called negative literals Upper case Latin letters usually end alphabet denote sets propositional variables letter V reserved denote set variables cases assumed fx1 x2 xng Boolean vectors points models f0 1gn denoted lower case Greek letters cid11TXU denoting restriction point cid11 2 f0 1gn set variables X cid18 V We denote cid11 6 cid12 condition cid11i 6 cid12i D 1 2 n cid11 cid12 condition cid11 6 cid12 cid11 6D cid12 We cid11 cid12 comparable cid11 6 cid12 cid12 6 cid11 holds 21 Theories A set Boolean vectors called models f0 1gn called theory Boolean function f0 1gn f0 1g identiﬁed set true points points assigned value 1 usually represented upper case Greek letter like cid6 We denote cid6TXU theory cid6 restricted variables X The number models theory cid6 denoted jcid6j We shall disjunction literals clause cases distinguish clause set literals contains A clause C said subsume clause C0 C0 contains literals C It known theory represented conjunction clauses called conjunctive normal form CNF In cases distinction CNF theory represents The length CNF F number literals denoted jFj A CNF called irredundant removal clause results CNF represent theory A clause C called implicate theory cid6 set models contains cid6 denoted cid6 jD C Clearly clause CNF implicate theory represented CNF A clause C called prime implicate theory cid6 cid6 jD C distinct clause C0 cid6 jD C0 jD C words cid6 distinct implicate C0 subsumes C A CNF consisting prime implicates theory represents called prime A clause containing single literal called unit clause clause containing literals called quadratic It seen easily nonempty theory cid6 unit clause implicate cid6 prime implicate cid6 ii prime implicate cid6 involves variable clause iii models cid6 value variable clause In words unit implicate means T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 5 cid6 degenerate variable unit clause loss generality shall assume theories considered paper unit implicates Clearly theory unit implicate quadratic implicate theory prime If arbitrary theory given set models unit implicates correspond constantzero constantone columns If Boolean theory given CNF NPhard check unit implicates This present problems context paper discussion focused Horn theories discovery unit implicates Horn CNF F accomplished OjV jjFj time 3 22 Functional dependencies For subsets variables X Y cid18 V expression X Y called functional dependency means values variables X determine values variables Y A functional dependency X Y said hold theory cid6 cid11 cid12 2 cid6 cid11TXU D cid12TXU holds cid11TY U D cid12TY U Obviously functional dependencies monotone respect set inclusion More precisely functional dependency X Y holds theory cid6 functional dependency X0 Y 0 holds cid6 X0 cid19 X Y 0 cid18 Y Since functional dependency X Y holds theory cid6 functional dependency X y holds cid6 y 2 Y loss generality restrict attention functional dependencies type X y A functional dependency X y cid6 states variable y Boolean function variables X y D f X Theorem 21 Given theory cid6 check OjV jjcid6j time functional dependency X y holds cid6 Proof To check X y holds cid6 construct binary decision tree variables X branching decision nodes The root tree contains points cid6 Each node tree contains set points cid6 exactly values variables path root node The branching stops node points variables X branching The functional dependency X y hold cid6 exists leaf resulting tree contains points cid6 opposite values y Since number leaves tree exceed 2jcid6j checked Ojcid6j time Since depth tree exceed jXj construction tree OjV jjcid6j time total time needed check X y holds cid6 OjV jjcid6j 2 On hand theory represented CNF problem checking functional dependency holds theory difﬁcult 3 In following use notation cid30 D O denote exists constant c cid30 6 c 6 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 Theorem 22 Given CNF F functional dependency X y CoNPcomplete check functional dependency holds theory represented F Proof The problem obviously CoNP functional dependency X y hold theory represented F demonstrated points cid11 cid12 satisfy F cid11TXU D cid12TXU cid11TyU 6D cid12TyU We shall problem hard reduction satisﬁability problem known NPcomplete Given arbitrary CNF F 0 order check satisﬁable F 0 model introduce new variables x0 y0 create new CNF F D F 0 x0 _ y0 We claim given CNF F 0 satisﬁable dependency x0 y0 hold theory represented F Indeed model F 0 corresponds models F variables x0 y0 taking values 0 0 0 1 1 1 respectively The ﬁrst combinations dependency x0 y0 hold On hand F 0 models x0 y0 trivially holds 2 A functional dependency X y cid6 minimal X0 cid26 X functional dependency X0 y holds cid6 Because monotonicity essential know set minimal functional dependencies cid6 denoted Mcid6 We shall functional dependencies single variable lefthand simple Since consider theories unit implicates simple functional dependency holds theory minimal Moreover functional dependency x y holds cid6 functional dependency y x hold cid6 Boolean function single variable constant identity y D x negation y D x This implies following statements use simpliﬁed notations xyZ w mean fx yg Z w Lemma 23 If simple functional dependency x y holds theory cid6 cid15 functional dependency y x hold cid6 cid15 minimal functional dependency cid6 form xyZ w cid15 xZ w minimal functional dependency cid6 yZ w minimal functional dependency cid6 cid15 Z x minimal functional dependency cid6 Z y minimal functional dependency cid6 The statements lemma second require assumption cid6 unit implicates As remarked cid6 unit implicate x x variable x degenerate sense models cid6 value x In case variable y 2 V functional dependency y x obviously holds cid6 minimal functional dependency cid6 involves x This implies loss generality study functional dependencies restricted theories unit implicates The proof Theorem 22 shows theory cid6 represented CNF difﬁcult check simple functional dependency holds cid6 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 7 The fact certain functional dependencies hold theory imply functional dependencies hold theory More precisely functional dependency said implied set functional dependencies derived dependencies repetitive application following Armstrongs rules inference 133 1 inclusion rule X cid18 Y Y X 2 augmentation rule X Y XZ Y set Z 3 transitivity rule X Y Y Z X Z The set functional dependencies implied functional dependencies set D called closure D denoted bD For theory cid6 set minimal functional dependencies D called FDcover cid6 closure bD set functional dependencies hold cid6 An FDcover cid6 called irredundant proper subset FDcover cid6 Clearly cid6 set Mcid6 FDcover cid6 However possible subset Mcid6 provides FDcover cid6 For set functional dependencies D theory cid6 called Armstrong relation D set functional dependencies hold cid6 coincides closure bD The concept Armstrong relations important theory relational databases studied 122834 It known set functional dependencies D exists Armstrong relation However relation Boolean If restrict set relations theories f0 1gn sets functional dependencies D Armstrong relation For example let consider D D fx y yz wg Since D contain y x models Armstrong relation D value y Therefore yz w implies z w hold D set functional dependencies Armstrong relation general Boolean theories 23 Condensation If functional dependency X y holds theory cid6 value y redundant model cid6 sense y determined X Boolean function y D f X It beneﬁcial reduce cid6 eliminating y considering instead theory cid6TV n yU If description function f preserved reduction result loss information The reduced theory cid6TV n yU simpler work fewer variables structure complicated way reduction Moreover reduced theory fewer functional dependencies original seen easily set functional dependencies consists dependencies hold cid6 involve y If theory cid6TV n yU functional dependencies reduction procedure repeated We shall condensation iterative application reduction procedure resulting theory functional dependencies The resulting theory cid6 c functional dependencies called condensation cid6 Generally theory functional dependencies called condensed 8 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 The condensation procedure specify functional dependency use reducing theory step theory functional dependencies chosen arbitrarily Therefore result condensation procedure generally nondeterministic theory condensed different ones The reduction procedure described similar normalization process routinely logical design relational databases The peculiarity normalization process consists fact description function f preserved form relation In knowledgebased function stored ways clausal form formula decision tree It happen structure function f complicated Then task preserving functional description far trivial This complication happens offset beneﬁts reduction impose computational penalties This problem manifests practice relational databases denormalization commonly speed database performance 24 Horn theories A clause called Horn contains positive literal Clauses containing exactly positive literal called deﬁnite clauses containing positive literals called negative A CNF called Horn contains Horn clauses A CNF containing negative clauses called negative CNF containing deﬁnite clauses called deﬁnite A theory called Horn exists Horn CNF representing It known 1718 prime implicate Horn theory Horn prime CNF Horn theory Horn The important property Horn CNFs linear time complexity satisﬁability problem 13 problem checking theory represented CNF contains model Based given Horn CNF clause checked linear time clause implicate CNF yes prime implicate subsuming clause easily For points cid11 cid12 2 f0 1gn point cid13 deﬁned cid13i D cid11i cid12i D 1 2 n called intersection cid11 cid12 denoted cid11 cid12 It known 1136 theory Horn closed intersection cid11 cid12 2 cid6 imply cid11 cid12 2 cid6 This property leads alternative way representing Horn theories Horn theory represented subset models property models obtained intersections models subset The smallest subset called characteristic set 242729 For arbitrary theory cid6 intersection closure called Horn envelope cid6 denoted H cid6 26 Clearly H cid6 minimum Horn superset cid6 Horn theory cid6 0 cid19 cid6 holds H cid6 cid18 cid6 0 In paper shall consider Horn theory cid6 cid18 f0 1gn represented Horn CNF subset cid6 0 cid6 satisfying cid6 D H cid6 0 W It natural establish correspondence functional dependencies Horn clauses introducing functional dependency X y deﬁnite Horn clause y _ x2X x This correspondence studied 12141539 shown establish following equivalence set functional dependencies D corresponding deﬁnite Horn CNF F functional dependency X y implied T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 9 W D deﬁnite Horn clause y _ x2X x implicate F Therefore set functional dependencies naturally interpreted Horn CNF In follows occasionally distinction set functional dependencies corresponding deﬁnite Horn CNF Since Horn CNF represents Horn theory Horn Boolean function 1718 shall Horn theory represented set functional dependencies holding theory cid6 associated Horn theory cid6 view Mcid6 set prime implicates associated Horn theory This paper devoted studying properties Mcid6 cid6 Horn theory 25 Examples To illustrate concepts introduced section let consider theory cid6 set row vectors following matrix cid0 0 cid0 D B 1 C A x 1 1 0 y 1 0 1 z w 0 0 0 1 1 1 In following write cid6 D cid0 cid6 set row vectors matrix cid0 One check cid6 represented following CNF x _ wy _ zw _ yw _ zx _ y _ z Furthermore decision tree construction described proof Theorem 21 veriﬁed following set functional dependencies FDcover cid6 D D fx w w x xy z yz x xz yg The set minimal functional dependencies hold cid6 given Mcid6 D D fwy z yz w wz yg The condensation cid6 sequence functional dependencies fx w xy zg 1 condensation cid6 sequence results condensed theory cid6 c functional dependencies fw x wz yg results condensed theory cid6 c 2 B cid6 c 1 D C A B cid6 c 2 D 0 1 x 1 1 0 y 1 0 1 0 1 C A z w 0 0 0 1 1 1 In condensation cid6 c z D x _ y condensation cid6 c expressions x D w y D z _ w 1 eliminated variables following expressions w D x 2 eliminated variables following It seen easily theory cid6 Horn Horn envelope H cid6 shown Fig 1 The Horn theory H cid6 represented following Horn CNF x _ y _ zy _ z _ ww _ yw _ z 10 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 H cid6 D 0 B B B B B B B B B x 1 1 0 1 0 0 0 y 1 0 1 0 1 0 0 1 C C C C C C C C C A z w 0 0 0 1 1 1 0 0 0 0 0 1 0 0 H cid6c D 0 B B B B B B B B B x 1 1 0 1 0 0 0 y 1 0 1 0 1 0 0 1 C C C C C C C C C A z 0 1 1 0 0 1 0 Fig 1 Horn envelope H cid6 condensation The set minimal functional dependencies hold H cid6 coincides FD cover H cid6 consists single functional dependency MH cid6 D D D fyz wg The theory H cid6 unique condensation shown Fig 1 The eliminated variable following expression w D yz The condensed theory H cid6c represented CNF consisting single negative clause x _ y _ z 3 Recognizing functional dependencies Horn theories The basic problem functional dependencies Horn theories recognition problem given Horn theory cid6 functional dependency X y check functional dependency holds cid6 It remarked Section 22 Theorem 22 case general Boolean theories computational complexity recognition problem depends theory represented We consider ﬁrst case Horn theory represented Horn CNF Theorem 31 Given Horn CNF F functional dependency X y checked OjXjjFj time functional dependency holds theory represented F Proof Let cid6 theory represented F The functional dependency X y hold cid6 exist cid11 cid12 2 cid6 cid11TXU D cid12TXU cid11TyU 6D cid12TyU Let introduce new variable z0 z 2 V n X y let denote F 0 CNF obtained F substituting y y z0 z z 2 V n X y The CNF F 0 constructed OjXjjFj time OjXj time procedure checking z 2 X It seen easily functional dependency X y hold cid6 CNF F F 0 satisﬁable exists solution following equation F F 0 D 1 1 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 11 The satisﬁability problem 1 Horn substitution y y F 0 It solved OjFj time equivalent Horn satisﬁability problem obtained substituting y D 1 1 Indeed let F1 F0 CNFs obtained 1 substituting y D 1 y D 0 respectively Then 1 solution Horn satisﬁability problems solution One easily F1 obtained F0 substituting z VD z0 z0 VD z z 2 V n X y This means F1 solution F0 equivalent condition 1 solution Thus linear time algorithm Horn satisﬁability problem 13 employed construct OjXjjFj time algorithm checking functional dependency holds theory represented Horn CNF 2 Corollary 32 Given Horn CNF F functional dependency X y theory represented F checked OjXj2jFj time functional dependency minimal Proof The procedure consists removing variables X checking resulting functional dependency holds If functional dependency minimal minimal produced byproduct procedure 2 Let consider case given set models cid6 We like check given functional dependency holds Horn envelope H cid6 The following lemma provides structural characterization important situation Let cid6 x 0 denote set models cid6 value 0 x cid9 cid11 j cid11 2 cid6 cid11TxU D 0 2 D cid8 cid6 x 0 Similarly cid6 x 1 D cid8 cid11 j cid11 2 cid6 cid11TxU D 1 cid9 3 Since limit attention theories unit implicates cid6 x variables x 2 V 0 cid6 x 1 non Lemma 33 A functional dependency X y holds Horn envelope H cid6 theory cid6 exists subset X0 cid18 X following conditions hold 1 points cid11 cid6 y 2 point cid11 2 cid6 y 1 satisfy cid11TX0U D 11 1 0 exists x 2 X0 cid11TxU D 0 Proof Let denote cid111 point H cid6 obtained intersection points cid6 y 1 We functional dependency X y hold H cid6 exists point cid120 2 cid6 y 0 cid111TXU 6 cid120TXU The functional dependency X y hold H cid6 exist cid11 cid12 2 H cid6 cid11TXU D cid12TXU cid11TyU 6D cid12TyU We assume cid11TyU D 1 cid12TyU D 0 By closure property H cid6 cid11 obtained intersection points cid6 y 1 cid111 6 cid11 The point cid12 obtained 12 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 intersection points cid6 point cid120 cid6 y intersection Obviously cid12 6 cid120 Then cid111TXU 6 cid11TXU D cid12TXU 6 cid120TXU 0 Conversely cid111TXU 6 cid120TXU point cid12 D cid111 cid120 satisﬁes cid12TXU D cid111TXU cid12TyU D 0 obviously cid111TyU D 1 Now exist cid120 2 cid6 y 0 cid111TXU 6 cid120TXU 6D 0 exists coordinate x 2 X cid12TxU D 0 cid111TxU D 1 cid6 y cid12 2 cid6 y holds assumption unit clause exists H cid6 By construction cid111TxU D 1 point cid11 2 cid6 y 1 cid11TxU D 1 Finally let X0 D fx 2 X j cid111TxU D 1g Then easy cid111TXU 6 cid120TXU holds conditions 1 2 lemma hold 2 0 Corollary 34 A functional dependency X y minimal Horn envelope H cid6 theory cid6 following conditions hold 1 points cid11 cid6 y 2 point cid11 2 cid6 y 3 x 2 X exists point cid11 2 cid6 y 1 satisfy cid11TXU D 11 1 0 exists x 2 X cid11TxU D 0 0 cid11TxU D 0 cid11TX n xU D 11 1 Proof The ﬁrst conditions conditions Lemma 33 condition states removal variable X results functional dependency violates second condition 2 Remark case simple functional dependency X n x D condition 3 corollary trivially holds simple functional dependencies Since cid6 jD H cid6 functional dependency holds H cid6 holds cid6 On hand exist functional dependencies hold cid6 hold H cid6 Interestingly Corollary 34 implies minimal functional dependency H cid6 minimal functional dependency cid6 As noted Section 22 check quickly functional dependency X y holds theory cid6 models cid6 given However Horn envelope H cid6 contain number models exponential jcid6j result applied directly recognizing X y holds H cid6 As corollary structural characterization Lemma 33 following result showing check fast X y holds H cid6 Theorem 35 Given theory cid6 functional dependency X y checked OjV jjcid6j time functional dependency holds Horn envelope H cid6 Proof Lemma 33 implies following linear time algorithm checks dependency X y holds H cid6 1 Split cid6 cid6 y 2 Determine maximum subset X0 cid18 X cid11TX0U D 11 1 cid11 2 cid6 y 1 3 For cid12 2 cid6 y 0 check exists x 2 X0 cid12TxU D 0 0 cid6 y 1 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 13 The dependency X y hold H cid6 exists cid12 2 cid6 y cid12TX0U D 11 1 2 0 Corollary 36 Given theory cid6 functional dependency X y checked OjV jjcid6j time functional dependency minimal Horn envelope H cid6 Proof Corollary 34 shows checking minimality consists simply maintaining x 2 X indicator bit value initialized 0 set 1 step 3 algorithm described proof Theorem 35 encounters cid12 2 cid6 y 0 cid12TxU D 0 cid12TX n xU D 11 1 2 Interestingly model representation checking minimality functional dependency result discernible increase computing time compared checking dependency holds By contrast Theorem 31 Corollary 32 suggest computing time CNF representation increase marginally 4 Structure functional dependencies Horn theories We analyze section structural properties set minimal functional dependencies hold arbitrary Horn theory We start analysis establishing connection minimal functional dependencies Horn theory certain prime implicates theory Theorem 41 A functional dependency X y holds minimal Horn theory cid6 clauses y _ x x 2 X clause y _ x2X x prime implicates cid6 W Proof Corollary 34 implies functional dependency X y minimal Horn theory cid6 following conditions hold 1 model cid11 2 cid6 cid11TyU D 1 cid11TXU D 11 1 2 model cid11 2 cid6 cid11TyU D 0 exists x 2 X cid11TxU D 0 3 x 2 X exists model cid11 2 cid6 cid11TyU D 0 cid11TxU D 0 cid11TX n xU D 11 1 W Let ﬁrst discuss theorem Condition 1 states x 2 X clause y _ x implicate cid6 Since consider theories unit implicates quadratic implicate prime Condition 2 states clause y _ x2X x implicate cid6 condition 3 states removal literal x results clause implicate cid6 x2X x implicate cid6 y Furthermore clause x2Xy _ x contradicting assumption x2X x implicate cid6 implied cid6 unit implicate Therefore y _ x2X x prime Let discuss The fact clause y _ x implicate cid6 x2X x implicate x 2 X implies condition 1 The fact clause y _ V W W W W 14 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 cid6 implies condition 2 The fact x 2 X clause y _ implicate cid6 implies condition 3 2 W x02Xnx x0 Note proof modiﬁed Lemma 33 instead Corollary 34 following result Theorem 42 A functional dependency X y holds Horn theory cid6 clauses y _ x x 2 X clause y _ x2X x implicates cid6 W Note Theorems 41 42 provide slightly different Theorem 31 Corollary 32 way checking functional dependency X y holds minimal theory represented Horn CNF F It consists simply checking described 1718 y _ x2X x y _x x 2 X prime implicates F W Corollary 43 For Horn theory cid6 set models Mcid6 superset cid6 Corollary 44 If functional dependency X y minimal Horn theory cid6 cid11 2 cid6 cid11TyU D V x2X cid11TxU This corollary states minimal functional dependencies Horn theories functional form single positive term Boolean functions y D x2X x X minimal functional dependencies general Boolean theories arbitrary Boolean functions redundant 4 variables To statement Boolean function redundant variables f X jXj D n construct theory cid6 n C 1 variables fX yg 2n models obtained adding cid11 2 f0 1gn n C 1st coordinate y D f cid11 One easily X y minimal functional dependency cid6 V Corollary 45 A simple functional dependency x y holds Horn theory cid6 variables x y logically equivalent cid6 cid11TxU D cid11TyU cid11 2 cid6 Note case general Boolean theories unit implicates x y holds x y logically equivalent x y logically complementary cid11TxU D cid11TyU models cid11 To analyze structure functional dependencies Horn theories shall associate set functional dependencies D directed graph GD set vertices set variables V oriented arc x y GD set D contains functional dependency X y x 2 X A similar construction 38 study unique Horn satisﬁability 19 compression Horn knowledge bases The following statement establishes fundamental structural property graph GMcid6 set minimal functional dependencies Horn theory cid6 4 A variable called redundant Boolean function changing value variable changes value function It known Boolean functions redundant variables T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 15 Theorem 46 For Horn theory cid6 graph GMcid6 oriented cycle involving variables x y simple functional dependencies x y y x hold cid6 Proof Theorem 41 implies arc x0 y0 GMcid6 y0 _ x0 prime implicate cid6 Clearly y0 _ x0 z0 _ y0 implicates cid6 z0 _ x0 implicate cid6 Therefore existence oriented path x y GMcid6 implies y _ x prime implicate cid6 Similarly existence oriented path y x implies x _ y prime implicate cid6 Then Theorem 41 x y y x minimal functional dependencies cid6 Conversely simple functional dependencies x y y x hold cid6 minimal GMcid6 contains arcs x y y x 2 Theorem 46 Lemma 23 imply following corollary Corollary 47 For Horn theory cid6 strongly connected component graph GMcid6 complete directed graph minimal nonsimple functional dependency cid6 involves variable strongly connected component GMcid6 Theorem 46 Corollary 45 imply cycles GMcid6 presence logically equivalent variables cid6 Intuitively group logically equivalent variables replaced single variable losing essential information theory This intuition formalized procedure 2conden sation introduced 19 purpose optimal compression quasiacyclic Horn knowledge bases We Horn theories logically equivalent variables 2con densed Given Horn theory cid6 procedure 2condensation constructs 2condensed Horn theory cid6 2c replacing group logically equivalent variables single representative For variable x 2 V let denote rx representative x cid6 2c Note x y logically equivalent cid6 rx D ry Similarly let rX denote set representatives set variables X cid18 V The following statement proven 19 Proposition 48 Hammer Kogan 19 A deﬁnite Horn clause y _ implicate Horn theory cid6 ry _ 2condensed theory cid6 2c X D fxg x logically equivalent y cid6 x2X x prime x2X rx prime implicate W W Proposition 48 Theorem 41 imply following statement Corollary 49 A functional dependency X y minimal Horn theory cid6 rX ry minimal functional dependency 2condensed Horn theory cid6 2c X D fxg x logically equivalent y cid6 This corollary shows purposes sufﬁcient study functional dependencies 2condensed Horn theories 16 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 If cid6 represented Horn CNF F prime Horn CNF representing cid6 2c constructed OjV jjFj C jFj2 time 19 The procedure consists inferring quadratic prime implicates cid6 identifying groups logically equivalent variables reducing F equivalent prime CNF F 0 replacing F 0 equivalent variables group single representative If cid6 represented set models cid6 0 H cid6 0 D cid6 variables logically equivalent cid6 corresponding columns cid6 0 identical Therefore removing columns group identical columns cid6 0 results cid6 00 H cid6 00 D cid6 2c This 2condensation easily Ojcid6 0jjV j constructing binary decision tree columns cid6 0 row cid6 0 decision nodes removing cid6 0 column group columns leaf resulting tree The procedure 2condensation viewed restriction procedure condensation introduced Section 23 2condensation achieved procedure condensation applied simple functional dependencies The condensation Horn theories discussed Section 6 Corollary 45 implies following statement Corollary 410 No simple functional dependency holds 2condensed Horn theory Theorem 46 Corollary 410 imply following important structural property functional dependencies 2condensed Horn theories Theorem 411 For 2condensed Horn theory cid6 2c graph GMcid6 2c contains oriented cycles The acyclicity GMcid6 2c important structural property Horn theory represented Mcid6 2c Such Horn theories called acyclic They studied 19 proven acyclic Horn theory unique irredundant prime CNF In view equivalence sets functional dependencies deﬁnite Horn CNFs result Theorem 411 immediately imply theorem Theorem 412 The set functional dependencies holding 2condensed Horn theory unique irredundant FDcover While set functional dependencies holding 2condensed Horn theory corresponds acyclic Horn theory set functional dependencies holding general Horn theory corresponds quasiacyclic Horn theory 5 following terminology 19 In general case irredundant FDcover unique results 19 presentation irredundant FDcovers essentially structure An irredundant FDcover Horn theory cid6 consists unique irredundant FDcover 2condensed theory cid6 2c arbitrary substitution original variables representatives cid6 c 5 A Horn theory called quasiacyclic 2condensation acyclic T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 17 irredundant FDcover set simple functional dependencies cid6 A minimum size irredundant FDcover obtained irredundant FDcover set simple functional dependencies cid6 chosen consist dependencies forming single simple cycle group logically equivalent variables 5 Inferring functional dependencies Horn theories It follows Corollary 49 purpose inferring functional dependencies holding Horn theory assume theory 2condensed Although irredundant FDcover 2condensed Horn theory unique FDcover large compared length CNF representation theory Theorem 51 For n 2 exists 2condensed Horn theory 2n C 1 vari ables CNF representation size On irredundant FDcover size 6 cid1272n Proof Consider following Horn CNF n xi _ x0 n yi _ xi x0 _ n_ yi iD1 iD1 iD1 This CNF 2n C 1 clauses 5n C 1 literals It checked unique irredundant prime CNF Horn theory represents It checked quadratic prime implicates yi _ x0 D 1 2 n contained CNF Horn theory 2condensed One verify addition quadratic prime implicates theory 2n prime implicates form W n iD1 zi zi 2 fxi yig Then Theorem 41 set minimal functional x0 _ S n iD1 zi dependencies Horn theory consists dependencies form x0 zi 2 fxi yig Every dependency form needed irredundant FD cover implied dependencies form Therefore irredundant FDcover consists 2n minimal functional dependencies 2 A similar result shown 2condensed Horn theory represented set models Theorem 52 For n 2 exists theory cid6 having size jcid6j D On depending 2n C 1 variables Horn envelope H cid6 2condensed Horn theory irredundant FDcover size cid1272n Proof Let consider following theory cid6 2nC1 variables x1 x2 x2nC1 3n C 1 models The variable x2nC1 value 1 single model 1111 11 Among remaining 3n models group n models 6 In following use notation cid30 D cid127 denote exists constant c cid30 c 18 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 ith model group variables value 0 x2icid01 x2i addition x2nC1 The remaining group 2n models ith model group variable value 1 xi Informally cid6 given cid6 D 0 B B B B B B B B B B B B B B B B 1 1 0 0 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 cid1 1 1 1 1 0 0 0 0 1 1 C C C C C C C C C C C C C C C C A 1 0 0 0 0 0 0 0 0 Since columns cid6 distinct Horn envelope H cid6 2condensed By ﬁrst statement Lemma 33 functional dependency holding H cid6 variables x1 x2n righthand 6 2n exists model cid6 variable value 1 xi By second statement Lemma 33 functional dependency holding H cid6 having x2nC1 righthand include lefthand x2icid01 x2i 6 n exists model cid6 variables value 0 x2icid01 x2i x2nC1 Then statement Corollary 34 minimal functional dependency holding H cid6 include x2icid01 x2i lefthand This implies minimal functional S n iD1 yi x2nC1 yi 2 fx2icid01 x2ig dependencies holding H cid6 form Every dependency form needed irredundant FDcover implied dependencies form Therefore irredundant FDcover consists 2n minimal functional dependencies 2 Theorems 51 52 prove set minimal functional dependencies Mcid6 Horn theory cid6 exponential length input generated polynomial time It important look alternative object smaller size capture crucial information Mcid6 An interesting aggregate description set provided generating variable y set variables Fcid6 y minimal functional dependencies X y cid6 Fcid6 y D fx 2 V j 9Z xZ y 2 Mcid6g 4 Clearly sets Fcid6 y provide way describing graph GMcid6 introduced Section 4 We shall study computational complexity generating Fcid6 y Horn theory represented set models CNF We ﬁrst consider Horn envelope representation T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 19 Theorem 53 Given theory cid6 set FH cid6y constructed OjV jjcid6j2 time variable y 2 V Proof Let deﬁne Xy cid18 V set variables x cid11 2 cid6 y 1 satisfy cid11TxU D 1 By Corollary 341 FH cid6y cid18 Xy Let analyze requirement imposed Corollary 342 3 points cid6 y TXyU 0 contains point 1s FH cid6y TXyU Note ﬁrst cid6 y 0 Note X0 y functional dependency H cid6 exists X00 cid18 X0 X00 y minimal functional dependency H cid6 Moreover x 2 X0 cid11 2 cid6 y 0 cid11TxU D 0 cid11TX0 n xU D 11 1 set X00 contain x It shown variable x belongs FH cid6y exists cid11 2 cid6 y 0 cid11TxU D 0 cid11TXyU 6 cid12TXyU point cid12 cid6 y 0 Indeed cid11 exists let X0 D Xy n fz 2 V j cid11TzU D 0 z 6D xg By Corollary 33 X0 y holds H cid6 discussed X00 cid18 X0 X00 y minimal functional dependency H cid6 contain x Conversely let assume contradiction cid11 2 cid6 y 0 cid11TxU D 0 cid11TXyU cid13 TXyU holds point cid13 cid6 y 0 Note assumption ﬁnd cid13 s cid13 TxU D 1 Indeed cid13 TxU D 0 assumption applied cid13 exist cid13 0 cid13 0TXyU cid13 TXyU cid11TXyU Let assume X cid18 Xy contains x X y minimal functional dependency H cid6 Let cid11 2 cid6 y 0 point satisfying requirement Corollary 343 By assumption exist cid12 2 cid6 y 0 cid12TXyU cid11TXyU cid12TxU D 1 Then cid12 violate requirement Corollary 342 contradicting assumption X y minimal functional dependency H cid6 Consequently set FH cid6y constructed following procedure 1 Split cid6 cid6 y 2 Determine subset Xy x 2 V cid11TxU D 1 cid11 2 cid6 y 1 3 Remove cid6 y 0 TXyU point cid11 cid11 cid12 holds point cid12 0 cid6 y 1 set denote resulting set TXyU 4 Place FH cid6y variable x 2 Xy exists cid11 2 c cid6 y 0 TXyU c cid6 y 0 cid11TxU D 0 Steps 1 2 4 algorithm linear time complexity Obviously step 3 completed OjV jjcid6j2 time 2 Theorem 53 shows sets Fcid6 y graph GMcid6 easily constructible Horn theory cid6 given set models We shall problem computationally difﬁcult Horn theory represented Horn CNF Problem HornCNFAggregateSet Instance A Horn CNF F representing Horn theory cid6 variables x y Question Does x belong Fcid6 y 20 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 Theorem 54 The HornCNFAggregateSet problem NPcomplete Proof One easily HornCNFAggregateSet problem belongs NP Indeed set X containing x given checking X y minimal functional dependency cid6 polynomial time Corollary 32 To problem NPhard shall polynomially reduce following NP complete problem 32 problem Problem PrimeAttributeName Instance A deﬁnite Horn CNF F variables x1 xn Question Is negative prime implicate F 0 D F W n iD1 xi containing x1 An instance PrimeAttributeName problem transformed instance HornCNFAggregateSet problem following way Let consider deﬁnite Horn CNF F 00 D F y _ n_ iD1 xi n iD1 y _ xi y new variable We argue HornCNFAggregateSet problem input CNF F 00 representing Horn theory cid6 variables x1 y equivalent original instance PrimeAttributeName problem Indeed F unit implicates y _ xi prime Therefore Theorem 41 variable x1 belongs Fcid6 y cid6 prime implicate form y _ x1 _ x2X x W x2X x implicate F 00 clause X Obviously clause y _ x1 _ W x1 _ x2X x prime implicate W F 00 clause x1 _ x2X x prime implicate F 0 This establishes equivalence completes reduction 2 x2X x implicate F 0 Therefore clause y _x1 _ W W Note HornCNFAggregateSet problem closely related abduction problem determining given variable occurs minimal explanation 41 28 6 Condensation Horn theories The procedure condensation introduced Section 23 aims simplifying given theory eliminating variables functionally dependent variables In case general Boolean theories simpliﬁcation provided condensation come price First functional dependencies condensation complicated structure storage manipulation expensive computationally Second resulting condensed theory depend choice functional dependencies condensation We section condensation Horn theories present problems The computational feasibility beneﬁts condensing Horn theories stem fact functional dependencies Horn theory simple structure Corollary 44 states minimal functional dependency X y actually single T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 21 positive term Boolean function y D stored manipulated computationally V x2X x This functional description easily Since set points closed intersection remain closed intersection removing variables condensation Horn theory Horn Therefore procedure condensation preserves computationally advantageous Horn structure simpliﬁes theory removing variables values essentially superﬂuous If Horn theory represented set models representation condensation obtained removing corresponding columns matrix demonstrated Section 25 As result theory cid6 condensation functional dependencies hold Horn envelope H cid6 result condensed theory cid6 c H cid6 c D H cid6c The condensation Horn theory represented Horn CNF involved If minimal functional dependency X y condensation x2X x substituted y clauses involving y As result Horn clause y _ C x2X x _ C Horn clause y _ C transformed transformed Horn clause x2X x _ C This expression equivalent nonclausal expression Horn CNF W V V x _ C D x _ C 5 x2X x2X Therefore resulting CNF remain Horn W The clause x2X x _ C contain jXj cid0 1 literals original clause x2Xx _ C jXj times literals y _ C CNF original clause y _ C This observation hint length Horn CNF explode condensation procedure V Let denote Vi set variables Horn theory cid6i produced ith step condensation procedure Lemma 61 For Horn CNF F Horn theory cid6i produced ith step condensation procedure represented Horn CNF Fi length limited OjVij2jFj bound sharp Proof Note variable V nVi expressed single positive term Boolean function subset variables Vi superposition positive terms positive term yi D x z D yi D x2Xi i2I x S i2I Xi x2 Therefore instead carrying condensation procedure step step achieve result ﬁrst derive expressions variables V n Vi variables Vi substitute expressions directly original CNF F carry expansion 5 obtain Horn CNF Fi Then number literals clause increase OjVij number clauses increase factor OjVij resulting bound lemma 22 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 To demonstrate length CNF actually increase proportionally square number variables consider example following Horn CNF F D n iD1 x0 _ yi _ z0 n_ iD1 zi _ z0 n iD1 z0 _ zi n_ iD1 xi _ x0 x0 _ xi n iD1 This CNF depends 3nC2 variables 9nC2 literals seen irredundant S S n n iD1 xi x0 minimal iD1 zi z0 prime It follows Theorem 41 functional dependencies theory represented F Using dependencies eliminate variables z0 x0 condensation results following Horn CNF n n n_ F c D iD1 j D1 kD1 xk _ yi _ zj This CNF depends 3n variables length n3 C 2n2 One CNF unique irredundant prime CNF Horn theory represents 2 It follows Lemma 61 condensation procedure implemented produce Horn CNF length OjV j2jFj Although possibility worst case moderate polynomial increase length Horn CNF resulting condensation result proves potential reduction length CNF exponential Theorem 62 For n 2 exists Horn theory 2n variables minimum CNF representation size cid1272n condensation CNF representation size On P n Proof For Boolean vector cid11 2 f0 1gn let jjcid11jj D iD1 cid11i Let consider following Horn CNF depending 2n variables z x1 xn ycid11 cid11 2 f0 1gn jjcid11jj 2 _ F D cid112f01gnV jjcid11jj2 iV cid11i D1 cid112f01gnV jjcid11jj2 iV cid11i D1 xi _ ycid11 ycid11 _ xi xi _ z n_ iD1 This CNF n2ncid01 C 2n cid0 2n clauses 3n2ncid01 C 2n cid0 3n literals It checked F irredundant prime Moreover variables Horn theory cid6 represented F irredundant minimum CNF representation cid6 size cid1272n It follows Theorem 41 minimal functional dependencies form iV cid11i D1 xi ycid11 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 23 cid11 2 f0 1gn jjcid11jj 2 hold cid6 The condensation cid6 functional dependencies results following Horn CNF F c D n_ iD1 xi _ z consists single clause having n C 1 literals 2 As mentioned Section 23 demonstrated Section 25 general Boolean theories result condensation procedure depend order functional dependencies We quasiacyclicity structure functional dependencies Horn theories makes condensation procedure essentially deterministic Simple functional dependencies hold cid6 correspond logically equivalent variables Corollary 45 The order elimination variables affect variable kept group logically equivalent variables affect results condensation nonsimple functional dependencies obvious Lemma 23 We assume loss generality condensation procedure uses simple functional dependencies ﬁrst procedure 2condensation described Section 4 ﬁnished ﬁrst follows cid6 assumed 2con densed Theorem 63 The condensation Horn theory cid6 depend order usage functional dependencies resulting theory cid6 c unique names representatives logically equivalent variables cid6 Proof Let consider graph GMcid6 Every vertex graph incoming arcs corresponds variable appears righthand non simple minimal functional dependencies To order usage functional dependencies affect variables eliminated sufﬁcient variable x eliminated condensation cid6 x eliminated condensation cid6 0 obtained eliminating variable y In words sufﬁcient variable x incoming arc minimal functional dependency C y x 6D y condensation x incoming arc resulting graph reduced theory Since functional dependencies reduced theory exactly involving y incoming arc x disappear arc produced minimal functional dependencies form yC0 x By Theorem 411 graph GMcid6 oriented cycles x 2 C Then CC0 x nontrivial functional dependency holds cid6 exists set C00 cid18 C C0 C00 x minimal functional dependency holding cid6 Since y 2 C00 functional dependency remains reduced theory x incoming arc resulting graph 2 The condensation Horn theory requires knowledge functional dependen cies It shown Section 5 inference minimal functional dependencies 24 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 expensive computationally construction graph GMcid6 difﬁcult Horn theory represented Horn CNF However Horn theory condensed polynomial time Let V c denote variables remaining condensation procedure It follows Theorem 63 set V c uniquely deﬁned Theorem 64 1 Given theory cid6 theory cid6 c H cid6 c D H cid6c terms representing variables V n V c variables V c constructed OjV j3jcid6j time 2 Given Horn CNF F Horn CNF representing condensation theory represented F terms representing variables V n V c variables V c constructed OjV j2jFj time Proof The underlying reason theorem fact condensation carried limited number functional dependencies More precisely proof Theorem 63 sufﬁcient construct single minimal functional dependency X y variable y eliminated For variable y 2 V minimal functional dependency easily exists The procedure consists checking V n y y functional dependency yes deriving minimal functional dependency X y It follows Theorem 31 CNF representation variables OjV j2jFj time Theorem 35 shows model representation OjV j3jcid6j time The step use inferred functional dependencies construct subgraph G0 graph GMcid6 Clearly variables V c remain condensation procedure correspond vertices G0 GMcid6 incoming arcs GMcid6 Then start V c follow arcs G0 superpose positive terms express variable V n V c single positive term Boolean function variables V c Since number incoming arcs vertex exceed jV j Boolean function vertex computed OjV cjjV j time vertices graph processed OjV j2jV cj time For model representation remaining step elimination columns corresponding variables V n V c Since linear time OjV j2jV cj 6 OjV j3 proven bound ﬁrst statement For CNF representation substitute F functional expressions variables V n V c Since clause contains jV j literals substitution carrying expansion 5 OjV cjjFj time Finally expansion 5 OjV cj2jFj time proving bound second statement 2 It follows Lemma 61 bound Theorem 642 improved While Theorem 63 states condensed theory unique terms representing variables V n V c unique Consider example following irredundant prime Horn CNF F D x _ y _ z _ tt _ xt _ yt _ zu _ w _ tt _ ut _ w T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 25 Since uw t minimal functional dependency Theorem 41 variable t eliminated condensation results following condensed CNF F c D x _ y _ z _ ux _ y _ z _ wu _ w _ xu _ w _ yu _ w _ z The eliminated variable t expressed t D uw t D xyz The ﬁrst term shorter second efﬁcient use It advantageous ﬁnd shortest possible terms representing variables V n V c Therefore shall study computational complexity following problems Problem ShortestTerm CNF Instance A Horn CNF F variable x 2 V n V c number k Question Can x expressed k variables V c Problem ShortestTerm Models Instance A theory cid6 representing Horn envelope H cid6 variable x 2 V n V c number k Question Can x expressed k variables V c Clearly problems belong NP term expressing y function k variables V c given easily check variables term belong V c term corresponds functional dependency We problems computationally difﬁcult reductions following known NPcomplete problem 16 Problem SetCovering Instance A 01 matrix A D aij lcid2m number k Question Is 01 vector y D y1 y2 ym inequality Ay e P m j D1 yj 6 k 6 holds e ldimensional allone column vector In following assume loss generality matrix A zero rows columns A comparable SetCovering problem remains NPcomplete conditions Note columns A comparable A contain allzero allone columns contain identical columns Theorem 65 The ShortestTerm Models problem NPcomplete Proof Let transform arbitrary instance SetCovering problem instance ShortestTerm Models problem following way 0 1 1 1 1 Jlcid2m cid0 A Ol 1 A cid6 D Here Ol l cid2 1 zero matrix Jlcid2m l cid2 m matrix elements 1s 26 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 Let x variable corresponding column cid6 Since A comparable columns follows Lemma 331 functional dependencies H cid6 x righthand Therefore V c includes variables cid6 x Lemma 33 2 implies lefthand functional dependency cid6 corresponds solution 6 vice versa solution 6 corresponds lefthand functional dependency cid6 Therefore H cid6 functional dependency k variables lefthand answer SetCovering problem yes 2 Theorem 66 The ShortestTerm CNF problem NPcomplete Proof We use instance SetCovering problem construct Horn CNF depending l C m C 1 variables following way l l_ m F D _ x x _ yi x _ zj yi _ zj yi iD1 iD1 j D1 ij V aij D1 It checked F irredundant prime contains quadratic prime implicates Horn theory cid6 represents In addition prime implicates F cid6 prime implicates _ zj j D 1 m implicates form W l iD1 yi _ _ _ yi zj _ x i2I j 2J I J satisfy condition 2 f1 lg n I exists j 2 J aij D 1 Since A allone columns j 2 f1 mg exists 2 f1 lg yi _ zj implicate cid6 Then follows Theorem 42 functional dependencies Horn theory cid6 x righthand following form yi zj x 7 i2I j 2J I J satisfy condition 2 f1 lg n I exists j 2 J aij D 1 Thus set V c consists l C m variables yi D 1 2 l zj j D 1 2 m Let consider functional dependency form 7 Since loss generality A zero rows 2 I exists j 2 f1 mg yi _ zj prime implicate cid6 Therefore functional dependency 7 holds cid6 functional dependency S j 2J i2I j zj x holds cid6 cardinality righthand cid12 cid12 cid12 cid12J i2I cid12 cid12 cid12 cid12 6 jJ j C jI j j T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 27 Clearly I D onetoone correspondence sets J functional dependencies form 7 vectors y satisfying inequality 6 Therefore x expressed k variables V c answer SetCovering problem yes 2 7 Concluding remarks We studied functional dependencies Horn theories main emphasis computational results structural properties We considered representation Horn theory Horn CNF Horn envelope set models In cases recognize polynomial time given functional dependency holds given Horn theory computationally difﬁcult general CNF We established correspondence minimal functional dependencies Horn theory prime implicates theory proved associated Horn theory deﬁned minimal functional dependencies superset original Horn theory It established functional dependency Horn theory functional form single positive term functional dependency general Boolean theory arbitrary Boolean function redundant variables We associated directed graph set functional dependencies proved graph associated minimal functional dependencies Horn theory quasi acyclic cycles created logically equivalent variables It shown graph constructed polynomial time Horn theory represented Horn envelope set models construction computationally difﬁcult theory represented Horn CNF We showed set minimal functional dependencies minimum FDcover exponentially large compared size CNF Horn envelope representations theory We introduced procedure condensing theory eliminating variables functionally dependent variables In case general Boolean theories condensed theory depend choice functional dependencies condensation process functional expressions eliminated variables remaining variables complicated condensation computationally advantageous However condensation Horn theory unique constructed polynomial time In research report version paper 22 develop results functional dependencies Horn theories We recognize polynomial time minimal functional dependency Horn theory belongs irredundant FDcovers theory belong irredundant FD cover theory We consider complexity inferring minimal functional dependencies function size output develop incrementally polynomial algorithm inferring minimal functional dependencies theory given Horn CNF existence polynomial total time algorithm inferring minimal functional dependencies theory given Horn envelope set models equivalent existence polynomial total time algorithm known problem dualizing positive theory 3 28 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 The results presented paper extended straightforward way wider class socalled renamable Horn theories A theory cid6 called renamable Horn theory cid6 0 resulting substituting variables cid6 negations renaming xs xs Horn If renaming theory Horn known theory transformed Horn form worked essentially Horn theory It turns representations renamable Horn theory renaming easily This case CNF representation recognize polynomial time given CNF renamed Horn yes renaming making Horn determined polynomial time 831 The envelopetype representation renamable Horn theory deﬁned sense explicit knowledge renaming required redeﬁne intersection closure If models theory given check polynomial time theory renamable Horn To sufﬁcient use given set models constructing polynomial time described 44 prime CNF representing theory One easily theory renamable Horn prime CNFs renamed Horn CNF It obvious X y functional dependency theory cid6 functional dependency hold theory cid6 0 obtained cid6 renaming variables renaming changes set functional dependencies However functional form expression y D f X change accordance renaming In case renamable Horn theories functional form signiﬁcantly complicated single term single clause necessarily positive Renamable Horn CNFs 2CNFs clause contains 2 literals known classes formulae satisﬁability problem solved polynomial time These classes turn special cases class socalled qHorn CNFs introduced studied 457 It shown qHorn CNF characterized special linear programming problem associated CNF recognized polynomial time qHorn satisﬁability problem solved polynomial time In forthcoming paper 23 study qHorn theories functional dependencies qHorn theory form similar functional dependencies renamable Horn theory single term single clause Acknowledgements The authors extend thanks partial support provided Ofﬁce Naval Research grant N0001492J1375 A work second authors visit Kyoto University supported Scientiﬁc Grant Aid Ministry Education Culture Sports Japan The authors grateful Thomas Eiter useful comments The authors express gratitude anonymous referees constructive comments helped signiﬁcantly improve paper T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 29 References 1 WW Armstrong Dependency structures database relationships Proceedings IFIP74 NorthHolland Amsterdam 1974 pp 580583 2 C Beeri M Dowd R Fagin R Statman On structure Armstrong relations functional dependencies J ACM 31 1 1984 3046 3 JC Bioch T Ibaraki Complexity identiﬁcation dualization positive Boolean functions Inform Comput 123 1995 5175 4 E Boros Y Crama PL Hammer Polynomial time inference valid implications Horn related formulae Ann Math Artiﬁcial Intelligence 1 1990 2132 5 E Boros Y Crama PL Hammer M Saks A complexity index satisﬁability problems SIAM J Comput 23 1994 4549 6 E Boros O ˇCepek A Kogan Horn minimization iterative decomposition Ann Math Artiﬁcial Intelligence 23 34 1998 321343 7 E Boros PL Hammer X Sun Recognition qHorn formulae linear time Discrete Appl Math 55 1994 113 8 V Chandru CR Coullard PL Hammer M Montañez X Sun On renamable Horn generalized Horn functions Ann Math Artiﬁcial Intelligence 1 1990 3347 9 CL Chang RCT Lee Symbolic Logic Mechanical Theorem Proving Academic Press New York 1973 10 EF Codd A relational model large shared data banks Comm ACM 13 1970 377387 11 R Dechter J Pearl Structure identiﬁcation relational data Artiﬁcial Intelligence 58 1992 237270 12 C Delobel RG Casey Decomposition data base theory Boolean switching functions IBM J Res Development 17 1973 374386 13 WF Dowling JH Gallier Linear time algorithms testing satisﬁability propositional Horn formulae J Logic Programming 3 1984 267284 14 R Fagin Functional dependencies relational database propositional logic IBM J Res Development 21 1977 534544 15 R Fagin Horn clauses database dependencies J ACM 29 4 1982 952985 16 MR Garey DS Johnson Computers Intractability A Guide Theory NPCompleteness Freeman San Francisco CA 1979 17 PL Hammer A Kogan Horn functions DNFs Inform Process Lett 44 1992 2329 18 PL Hammer A Kogan Optimal compression propositional Horn knowledge bases Complexity approximation Artiﬁcial Intelligence 64 1993 131145 19 PL Hammer A Kogan Quasiacyclic propositional Horn knowledge bases Optimal compression IEEE Trans Knowledge Data Engineering 7 1995 751762 20 PL Hammer A Kogan Essential redundant rules Horn knowledge bases Decision Support Systems 16 2 1996 119130 21 A Horn On sentences true direct unions algebras J Symbolic Logic 16 1951 1421 22 T Ibaraki A Kogan K Makino Functional dependencies Horn theories RUTCOR Research Report RRR 1498 Rutgers University New Brunswick NJ 1998 23 T Ibaraki A Kogan K Makino Functional dependencies qHorn theories Manuscript 1998 24 H Kautz M Kearns B Selman Horn approximations empirical data Artiﬁcial Intelligence 74 1995 129145 25 H Kautz M Kearns B Selman Forming concepts fast inference Proc AAAI92 San Jose CA 1992 pp 786793 26 D Kavvadias CH Papadimitriou M Sideri On Horn envelopes hypergraph transversals KW Ng et al Eds Algorithms ComputationISAAC93 Lecture Notes Computer Science Vol 762 Springer Berlin 1993 pp 399405 27 R Khardon Translating Horn representations characteristic models J Artiﬁcial Intelligence Res 3 1995 349372 28 R Khardon H Mannila D Roth Reasoning examples Propositional formulae database dependencies Acta Informatica 1998 appear Preliminary version Technical Report TR1595 Aiken Computation Laboratory Harvard University Cambridge MA 1995 30 T Ibaraki et al Artiﬁcial Intelligence 108 1999 130 29 R Khardon D Roth Reasoning models Artiﬁcial Intelligence 87 1996 187213 30 J Kivinen H Mannila Approximate inference functional dependencies relations Theoret Comput Sci 149 1995 129149 31 HR Lewis Renaming set clauses Horn set J ACM 25 1978 134135 32 CL Lucchesi SL Osborn Candidate keys relations J Comput System Sci 17 1978 270279 33 D Maier The Theory Relational Databases Computer Science Press Rockville MD 1983 34 H Mannila KJ Räihä Design Relational Databases AddisonWesley Wokingham 1992 35 H Mannila KJ Räihä Algorithms inferring functional dependencies Data Knowledge Engineer ing 12 1994 8399 36 JCC McKinsey The decision problem classes sentences quantiﬁers J Symbolic Logic 8 3 1943 6177 37 M Minoux LTUR A simpliﬁed lineartime unit resolution algorithm Horn formulae implementation Inform Process Lett 29 1988 112 38 M Minoux The unique HornSatisﬁability problem quadratic Boolean equations Ann Math Artiﬁcial Intelligence 6 1992 253266 39 Y Sagiv C Delobel DS Parker R Fagin An equivalence relational database dependencies fragment propositional logic J ACM 28 3 1981 435453 40 B Selman H Kautz Knowledge compilation theory approximation J ACM 43 2 1996 193224 41 B Selman HJ Levesque Support set selection abductive default reasoning Artiﬁcial Intelligence 82 1996 259272 42 JD Ullman Principles Database KnowledgeBase Systems Vol I Classical Database Systems Computer Science Press New York 1988 43 JD Ullman Principles Database KnowledgeBase Systems Vol II The New Technologies Computer Science Press New York 1989 44 YuI Zhuravlev A Kogan Realization Boolean functions small number zeros disjunctive normal forms related problems Soviet MathematicsDoklady 32 3 1985 771775