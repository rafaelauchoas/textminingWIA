Artiﬁcial Intelligence 224 2015 127 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint An SMTbased approach weak controllability disjunctive temporal problems uncertainty Alessandro Cimatti Andrea Micheli ab Fondazione Bruno Kessler Istituto la Ricerca Scientiﬁca e Tecnologica Via Sommarive 18 38123 Povo Trento Italy b Doctoral School Information Communication Technology University Trento Via Sommarive 9 38123 Povo Trento Italy Marco Roveri r t c l e n f o b s t r c t Article history Received 11 November 2013 Received revised form 27 February 2015 Accepted 5 March 2015 Available online 12 March 2015 Keywords Weak controllability Temporal problems Satisﬁability modulo theory Strategy synthesis The framework temporal problems uncertainty TPU useful express temporal constraints set activities subject uncertain uncontrollable duration In work focus general class TPU disjunctive TPU DTPU consider case weak controllability allows model problems arising practical scenarios online scheduling We ﬁrst tackle decision problem exists schedule activities depending uncertainty satisﬁes constraints We propose logical approach based reduction problem Satisﬁability Modulo Theories SMT theory Linear Real Arithmetic Quantiﬁers This results ﬁrst implemented solver weak controllability DTPUs Then tackle problem synthesizing control strategies scheduling activities We focus strategies amenable eﬃcient execution We prove linear strategies suﬃcient subcase simple TPU STPU piecewiselinear strategies multiple conditionallyapplied linear strategies suﬃcient We present algorithms synthesis linear piecewise linear strategies case STPU DTPU All algorithms implemented SMT solvers We provide experimental evidence scalability proposed techniques dramatic speedups strategy execution compared online reasoning 2015 Elsevier BV All rights reserved 1 Introduction Many practical settings planning scheduling require solution sets constraints time points typically represent time activities begin end For example constraints represent bound overall time span lowerupper bounds distance activities The Temporal Problem TP 1836 studied formalism model temporal constraints In basic form TP referred TP uncertainty durations activities assumed controllable executor This means executor assumes possibility choosing duration want A solution assignment time points beginning time end time activities satisﬁes constraints This paper extended version 10 published AAAI 2012 Toronto Canada Corresponding author Email addresses cimattifbkeu A Cimatti amichelifbkeu A Micheli roverifbkeu M Roveri httpdxdoiorg101016jartint201503002 00043702 2015 Elsevier BV All rights reserved 2 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Depending structure constraints TPs range simple temporal problems STP 18 temporal constraint satisfaction problems TCSP 18 disjunctive temporal problems DTP 36 In practice activities uncertain uncontrollable durations For example impossible know precisely time taken drilling locomotion procedure production overall schedule able uncertainty account The formal framework TPs extended uncertainty TPU obtaining STPU TCSPU DTPU 383237 Because uncertainty TPUs complicated TPs uncertainty In fact thought terms games schedulerexecutor play adversarial envi ronment Intuitively variables representing time points separated controllable ones existentially quantiﬁed uncontrollable ones universally quantiﬁed Within setting degrees solution identiﬁed TPUs 38 In strong controllability solution ﬁxed unconditioned assignment controllable time point satisfy constraints regardless uncontrollable duration activities This corresponds devising timetriggered program activities started ﬁxed times In dynamic controllability solution strategy values controllable variables depend values uncontrollable ones long observed occur past The corresponding execution deal branching interleave start activities observation uncontrollable observable end activity events In paper focus weak controllability concerned existence strategy associates values controllable starting points activity function uncontrollable durations The values uncon trollable durations known moment solving problem executor given actual value durations execution starts There reasons studying weak controllability From temporal problems perspective weak controllabil ity conceptually interesting dual strong controllability problem In addition deciding given TPU weakly controllable serve precheck complex problems dynamic controllability In fact weak controllability necessary condition dynamic controllability 38 From practical standpoint weak controllability allows modeling setting number tasks repeatedly executed modalities depend environmental parameters available prior execution For example automated production line required perform set activities duration functionally depends measured size objects manipulated The duration activities unknown priori upper lower bound precise actual objects materialize Similarly multicore processor power management dynamically control actual clock speeds affecting duration jobs An online scheduler required decide appropriate allocation based information available power management unit Another example application given setting remote systems space exploration rovers satellites degradation use causes activities change duration time For example movement speed components decrease age These domains share fact tasks repeated multiple times platforms limited capacity conditions estimated prior execution As encoded weak controllability problems In paper tackle weak controllability DTPUs general form making following contributions First propose general decision procedure problem weak controllability DTPUs Our approach makes use framework Satisﬁability Modulo Theory SMT 4 formal framework allows analysis problems decidable fragments First Order Logic The decision procedure based reduction SMT problem theory Quantiﬁed Linear Real Arithmetic LRA The encoding thought working refutation state existence assignment uncontrollable time points countered controllable assignment This means SMT problem satisﬁable TPU weakly controllable The problem directly provided eﬃcient SMT solver This approach accounts ﬁrst implemented decision procedure weak controllability DTPUs Then investigate problem online strategy execution given weakly controllable DTPU repeatedly produce suitable schedule controllable time points function valuation uncontrollable ones We propose approach referred implicit strategy execution based runtime execution solver TP uncertainty valuation uncontrollable durations removes uncertainty problem transforms TPU hand TP The solver invoked solve consistency problem yielding assignment controllable time points Unfortunately solution imposes strong requirements runtime notably control platform support execution solver addition iteration required solve NPhard problem DTP uncertainty This motivates investigation eﬃcient runtime execution weakly controllable TPUs We analyze spectrum explicit strategies expressed form require reasoning directly evaluated We consider linear strategies strategies values controllable time points linear function uncontrollable ones piecewiselinear strategies combinations different linear strategies associated activation condition deﬁned uncontrollable time points Linear strategies turn expressive general prove STPU problem class weakly controllable instance guaranteed linear strategy We A Cimatti et al Artiﬁcial Intelligence 224 2015 127 3 prove piecewiselinear strategies suﬃciently expressive piecewiselinear strategy guaranteed exist weakly controllable DTPU Finally address synthesis problem given weakly controllable temporal problem algorithmically synthesize function assignment uncontrollable time points assignment controllable ones We propose number algorithms synthesis strategy We start considering linear strategies developing algorithms produce linear strategies STPU DTPU cases Then generalize case piecewiselinear strategies propose algorithms STPU DTPU cases All proposed algorithms implemented tool solving temporal problems uncertainty The tool developed fully leverages stateoftheart SMT solvers 177 To best knowledge ﬁrst implementation weak controllability strategy extraction We carried extensive experimental evaluation comprehensive set benchmarks Our implementation available online demonstrates high scalability able automatically extract strategies signiﬁcant size The experimental evaluation highlights dramatic speedup execution synthesized explicit strategies Structure paper In Section 2 provide background deﬁne addressed problem In Section 3 mally introduce TPUs weak controllability In Section 4 SMTbased decision procedure In Section 5 formalize concept weak strategy prove linear strategies present weakly controllable problem piecewiselinear strategies In Section 6 analyze problem strategy synthesis different problem classes strategy types In Section 7 present experimental evaluation approach In Section 8 summarize relevant work Finally Section 9 draw conclusions discuss future work 2 Background 21 Technical preliminaries Our setting standard First Order Logic 24 The ﬁrstorder signature composed constants variables function symbols Boolean variables predicate symbols A term constant variable application function symbol arity n n terms A theory constraint called theory atom application predicate symbol arity n n terms An atom theory constraint Boolean variable A literal atom negation A clause ﬁnite disjunction literals A formula true cid3 false Boolean variable theory constraint application propositional connective arity n n formulae application quantiﬁer individual variable formula If t1 t2 terms φ formula ifthenelse ITE term iteφ t1 t2 The semantics ITE term usual ifthenelse semantics programming languages For example term itex y x y x y numeric variables corresponds maximum x y An ITE term iteφ t1 t2 occurring formula ψ rewritten substituting occurrence fresh variable v conjoining φ v t1 φ v t2 See 23 thorough discussion We use x y v variables cid11x cid11y cid11v vectors individual Boolean variables Terms formulae referred expressions Formulae denoted φ ψ Let cid11x vector variables indicate ith variable vector xi We write φx highlight fact x free φ φcid11x highlight fact free variables φ variables cid11x We indicate Q cid11xφcid11x formula Q x1Q x2 Q xnφx1 xn Q Substitution deﬁned standard way We write φsv substitution occurrence variable v φ term s Let cid11v vector variables cid11s vector terms write φcid11scid11v parallel substitution occurrence v φ si With slight abuse notation φcid11x cid11y formula write φψcid11t cid11y shorthand φψcid11t cid11x We use standard semantic notion interpretation satisﬁability 24 We model μ formula φcid11x pair composed assignment maps variable xi element domain interpretation nonlogical symbols satisﬁes formula A formula φcid11x satisﬁable model Thus problem checking satisﬁability formula consists determining exists model formula 22 Satisﬁability modulo theory In propositional logic satisﬁability problem approached enhancements DPLL algorithm 15 formula converted equisatisﬁable Conjunctive Normal Form CNF satisfying assignment crementally built clauses satisﬁed conﬂict case backjumping takes place certain assignments undone Keys eﬃciency heuristics variable selection learning conﬂicts 30 Given ﬁrstorder formula ψ nonlogical symbols interpreted decidable background theory T Satisﬁability Modulo Theory SMT 4 problem deciding exists satisfying assignment free variables ψ For example consider formula x y x 3 z z y theory real arithmetic The theory real arithmetic interprets constant symbol 3 real number 3 operators usual functions relations The formula satisﬁable satisfying assignment x cid15 5 y cid15 6 z cid15 8 4 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 In work primarily concentrate theory linear arithmetic real numbers LRA A formula LRA arbitrary Boolean combination universal existential quantiﬁcation atoms form cid2 ai xi cid16cid17 c cid16cid17 cid18 xi real variable ai c real constant Difference logic RDL subset LRA atoms form xi x j cid16cid17 c If formula RDL satisﬁable exists inﬁnitely models formula 13 This RDL express distances variables absolute value variable chosen We denote QF _LRA QF _RDL quantiﬁerfree fragments LRA RDL respectively This means formula φ QF _LRA resp QF _RDL LRA resp RDL ﬁrstorder quantiﬁer appears φ A conjunction atoms LRA n variables represents nonnecessarily closed convex polyhedron n dimen sions point polyhedron model formula Similarly LRA formula represents union ﬁnitely nonnecessarily closed convex polyhedra If φcid11x ψcid11x LRA formulae formula φcid11x ψcid11x geometri cally corresponds constraint φcid11x ψcid11x Similarly conjunction formulae corresponds intersection disjunction union negation complement A model μ LRA formula φ μ cid20LRA φ corresponds geometric point cid11μ vector values assigned μ dimension belongs region represented φ cid11μ φ Given LRA formula φcid11x denote Atomsφcid11x set atoms nal coeﬃcients Given atom acid11x Atomsφcid11x acid11x conjunction equalities given formula Equalitiesφcid11x cid2 xi cid11x ci xi cid16cid17 b1 let Eqacid11x cid3 xi cid11x ci xi cid16cid17 b ci b ratio xi cid11x ci xi b Let Equalitiesφcid11x ai cid11xAtomsφcid11x Eqaicid11x aicid11x xi cid11x ci xi cid16cid17 b cid16cid17 restricted We write x y b x y variables b constants meaning formula x y x y b If ﬁrst conjunct omitted similarly b second conjunct omitted In presence constant bounds write intervals usual openclosed notation b b b R A second theory work theory Equality Uninterpreted Functions EU F variables range unspeciﬁed inﬁnite domain function symbols introduced The interpreted symbol theory equality predicate There restriction interpretation function symbols property assumed x yx y f x f y In addition formulae deﬁned combination function f theories For example atom like x f y z w combines operator LRA function symbols EU F formula expressed combination EU F LRA indicated EU F LRA Different techniques adopted address theory combination problem NelsonOppen 31 Delayed Theory Combination 5 Modelbased Theory Combination 16 cid2 cid2 cid2 An SMT solver 4 decision procedure solves satisﬁability problem formula expressed decidable subset First Order Logic The eﬃcient implementations SMT solvers use socalled lazy approach 34 In order decide formula φ expressed theory T SAT solver tightly integrated Tsolver decide conjunctions constraints theory T The role SAT solver enumerate truth assignments Boolean abstraction ﬁrstorder formula The Boolean abstraction Boolean structure ﬁrstorder formula replaces predicates contain T information fresh Boolean variables The Boolean abstraction x y x 3 z z y P Q R P Q R fresh Boolean variables The Tsolver invoked SAT solver ﬁnds satisfying assignment Boolean abstraction satisfying assignment Boolean abstraction maps directly conjunction T atoms Tsolver handle If conjunction satisﬁable original formula satisﬁable Otherwise Tsolver returns conﬂict set identiﬁes reason unsatisﬁability Then negation conﬂict set learned SAT solver order prune search Examples solvers based lazy approach MathSAT5 7 Z3 17 Yices 19 OpenSMT 6 In order deal quantiﬁers LRA techniques developed implemented SMT solvers Some solvers Z3 natively support quantiﬁers However MathSAT5 deal For theories possible apply algorithms remove quantiﬁers given formula theory A theory T said admit quantiﬁer elimination quantiﬁed formula φ T exists quantiﬁerfree formula φcid23 logically equivalent φ It proved LRA admits quantiﬁer elimination techniques FourierMotzkin 33 LoosWeispfenning 2526 transform LRA formula containing quantiﬁers equivalent QF _LRA formula These techniques cost doubly exponential time space original formula size 332625 enable use solvers native support quantiﬁers 3 Temporal problems uncertainty The formalism TP model temporal constraints timevalued variables representing time points This formalism characterize scheduling problems activities ordered time according speciﬁed constraints The variables TP typically represent beginning time end time activities For example given activities A1 A2 possible state distance beginning A1 end A2 1 We use symbol indicate deﬁnition We need symbol distinguish deﬁnition equality logical predicate A Cimatti et al Artiﬁcial Intelligence 224 2015 127 5 Fig 1 The running example weakly controllable STPU nodes time points doublecircled nodes uncontrollable time points contingent constraints depicted dashed arrows free constraints solid b The constraint deﬁnitions running example equal 2 The TP formalism expressive model Allens interval algebra 1 metric constraints form arbitrary Boolean combination atoms x y l u x y time points l u R 18 Two families TPs presented literature years TP Uncertainty TP Uncertainty TPU In ﬁrst simply called TP time points beginning end points decided sched ulerexecutor 1836 The case TPU represents complex situation executor able decide beginning time activities end activities decided adversarial environment 38 In work focus TPUs Deﬁnition 1 A TPU tuple Xc Xu Cc C f Xc n m set uncontrollable time points Cc set free constraints cid4 cid4 cci E j1ei bi lc j uc j c f D j1v j w j l f j u f j b1 bn set controllable time points Xu cc1 ccm set contingent constraints C f e1 em c f 1 c fh f f l j constraint E number disjuncts ith contingent constraint v j w j Xc Xu v j cid18 w j R lc number disjuncts ith free j uc j j lc j j D j u uc u f j l f R Variables Xc represent time decisions controlled executor Variables Xu represent time decisions control environment uncontrollable point view executor We use letters b e mnemonics beginning end activities respectively2 The constraints separated sets free constraints C f constraints executor required fulﬁll contingent constraints Cc assumptions environment fulﬁll Intuitively free constraints require ments problem contingent constraints assumptions problem solved Notice differently free constraints contingent constraint required expressed exactly variables bi ei sharing index As 38 consider contingent constraints involving exactly controllable time point uncontrollable time point Thus uncontrollable time point ei linked exactly contingent constraint controllable time point bi Cc Xu In fact number controllable time points big number uncontrollable ones n m allow controllable time points linked uncontrollable contingent constraint This formulation customary literature assumes com plete independence contingent constraints framework express disjunctions contingent constraints assumes independence different uncontrollable activities An example TPU depicted Fig 1 The example composed activities A1 A2 A1 starts time point b1 ends e1 similarly A2 starts b2 ends e2 The activities uncontrollable duration A1 duration 0 3 time units A2 lasts 1 2 time units We require b1 scheduled b2 b2 b1 0 b2 e1 e1 b2 0 e2 happen 1 time unit e1 e1 e2 1 e2 2 time units b1 e2 b1 2 Depending form constraints Cc C f consider classes TPUs Deﬁnition 1 captures general class referred literature deﬁnition Disjunctive Temporal Problem Uncertainty DTPU 3237 If disjunction restricted refer single pair variables resulting problem Temporal Constraint Satisfaction Problem Uncertainty TCSPU 3237 If disjunctions disallowed obtain Simple Temporal Problem Uncertainty STPU 3829282122 The problem Fig 1 STPU Following classiﬁcation Peintner et al 32 problem simplenatured contingent straints disjunctions E 1 2 The TPU formalism general allows representation fully controllable activities controllable time points belonging activity The bi ei notation gives useful intuition uncontrollable activities possible beginning end time points controllable activity marked bi b j belong Xc 6 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 We deﬁne assignment time points total function time points real values Given TP uncertainty checking consistency corresponds deciding existence assignment fulﬁlls constraints problem We assignment consistent schedule TP consistent Given TPU values controllable time points decided scheduled time executor uncontrollable time point ei happens activation time point bi scheduled The assump tion ith contingent constraint satisﬁed values bi ei Given intuitive meaning rephrased concept situation TPU 38 DTPU problem class Deﬁnition 2 Let P S lc j uc j E j1 cid5 Xc Xu Cc C f TPU Xu m The space situations P cid4P A situation element ω cid4P S1 Sm Intuitively situation choice actual duration activity uncontrollable duration For example activity representation running example Fig 2 represents possible situation yi duration Ai For TPU different problems addressed 38 strong controllability dynamic controllability weak trollability In problems executor required ﬁnd winning strategy assignment controllable time points works situation More speciﬁcally assignment controllable time points fulﬁll free constraints situation given problem The difference depends extent executor use observe situation decide assignments controllable time points In strong controllability executor blind observe situation Therefore solution strong controllability problem ﬁxed schedule assigns time value controllable time point This schedule fulﬁll free constraints situation The example problem Fig 1a strongly controllable way statically assign b2 knowing advance time e2 happen In fact scheduling b2 early violate e1 e2 1 constraint In weak controllability executor allowed act based situation knowing advance uncontrollable durations In setting solution weak controllability problem form strategy given situation computes assignment controllable time points Dynamic controllability limits observations executor past events This problem seen restriction weak controllability possible executor condition assignments situations long apparent In works choice depends duration activity terminated In rest paper focus weak controllability addressing decision problem determining exists winning strategy synthesis problem extracting strategy executable form We formally deﬁne concept weak controllability Deﬁnition 3 Let P problem P respect situation ω TP Xc Xu C f C contingent constraint cid23 c C free constraint ei bi ωi ωi Xc Xu Cc C f TPU let ω ω1 ω Xu situation cid4P The projection P ω cid23 c derived Cc replacing cid4 E j1ei bi lc j uc j Intuitively projection P ω problem uncertainty uncontrollable duration ﬁxed given value Deﬁnition 4 Let P projection P ω consistent Xc Xu Cc C f TPU P weakly controllable situation ω cid4P Deﬁnition 4 captures weak controllability concept requiring existence schedule situation This deﬁnition implicitly models strategy function f cid4P R Xc maps situation ω schedule controllable time points fulﬁlls constraints projection P ω If function exists problem weakly controllable Weak controllability terms games dual strong controllability strong controllability executor required decisions observing situation environment weak controllability environment required decisions executor Finally note constraints TPU essentially RDL formulae As exists weak strategy fulﬁlls problem constraints inﬁnitely strategies obtained adding constant value strategy decision In example Fig 1 value b1 arbitrarily chosen precedes time points chosen value acts shift time points 4 Deciding weak controllability In order logically deﬁne weak controllability ﬁrst perform manipulations problem deﬁnition We encode uncontrollable time point ei terms time difference starting time point bi means A Cimatti et al Artiﬁcial Intelligence 224 2015 127 7 Fig 2 The running example seen activities point view explain encoding problem The striped regions uncontrollable space uncontrollable time point scheduled given decision related controllable time point Each contingent constraint seen activity A1 A2 picture duration yi actual duration ith activity Xc b1 b2 Y u y1 y2 cid6 cid11Y u y1 0 y1 3 y2 1 y2 2 cid7 cid11Xc cid11Y u b2 b1 0 b1 y1 b2 y2 1 b2 y2 b1 2 Fig 3 The encoding example STPU Fig 1 uncontrollable duration variable yi Intuitively activity view yi measures duration ith activity For E contingent constraint cci j1ei bi li j ui j let yi R uncontrollable duration variable associated E j1 yi li j ui j yi represents duration interval bi ei constrained ith contingent ei constraint We symbolically encoding situation ω ω1 ω Xu yi models value ωi Fig 2 gives pictorial representation encoding interpreted activity level cid4 cid4 Deﬁnition 5 Given TPU Xc Xu Cc C f let cid11Y u vector uncontrollable duration variables y1 y2 ym m Xu We deﬁne encoding problem tuple cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u mcid6 E icid7 cid6 cid11Y u yi li j ui j i1 j1 cid7 cid11Xc cid11Y u cid6 c f cid11Xc cid11Y u cid11Xu cid11Xc cid11Y u c f iC f cid6 c f iC f c f ib1 y1e1b2 y2e2 bm ymem cid11Xc cid11Y u Intuitively cid6 cid11Y u formula representing conjunction contingent constraints recoding cid7 cid11Xc cid11Y u conjunction free constraints rewritten terms cid11Xc cid11Y u We remark use encoding yields consequences First thanks redeﬁnition ei terms yi managed encode contingent constraints terms cid11Y u independent values controllable time points cid11Xc Intuitively cid6 cid11Y u encodes set possible situations cid4P given problem P model cid6 cid11Y u corresponds situation ω Second constraints formulation expressed LRA theory original formulation expressed RDL fragment LRA This encoding applied STPU problem Fig 1 shown Fig 3 From assume encoded problem cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u given Intuitively temporal problem weakly controllable exists strategy maps situation corresponding assignment controllable time points way free constraints satisﬁed We rephrase concept weak controllability presented Deﬁnition 4 satisﬁability problem modulo LRA theory follows Proposition 1 Let P following formula valid LRA theory Xc Xu Cc C f TPU let cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u encoding P weakly controllable cid11Y u cid11Xccid6 cid11Y u cid7 cid11Xc cid11Y u 1 8 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 b1 b2 y1 0 y1 3 y2 1 y2 2 b2 b1 0 b1 y1 b2 y2 1 b2 y2 b1 2 y1 0 y1 3 y2 1 y2 2 b1 b2b2 b1 0 b1 y1 b2 y2 1 b2 y2 b1 2 b Fig 4 Inverted encoding assumptionextraction encoding b applied running example STPU Fig 1 The formula Eq 1 direct formalization intuitive notion weak controllability original deﬁnition 38 The universal quantiﬁer captures uncertainty decision duration variables The implication ensures free constraints checked cid6 cid11Y u satisﬁed assignments encode situations original temporal problem In fact cid6 cid11Y u satisﬁed implication automatically satisﬁed If interpret vector time points cid11Xc vector durations cid11Y u vectors real variables set constraints cid6 cid11Y u cid7 cid11Xc cid11Y u formulae QF _LRA Eq 1 formula LRA valid problem weakly controllable For example problem depicted Fig 1a weakly controllable following formula valid y1 y2b1 b2 y1 0 y1 3 y2 1 y2 2 b2 b1 0 b1 y1 b2 y2 1 b2 y2 b1 2 Looking weak controllability formal characterization Proposition 1 SMT perspective clear solving validity problem LRA formula Any SMT solver supporting LRA able deal formula directly correctly solve problem However high computational cost directly handling quantiﬁers optimized encoding required We ﬁrst rewrite formula encoding weak controllability Proposition 1 transforming external universal quan tiﬁer negation existential consider negation resulting formula We resulting formula inverted encoding cid11Xccid6 cid11Y u cid7 cid11Xc cid11Y u 2 If formula unsatisﬁable problem weakly controllable satisﬁable problem weakly controllable Note Eq 2 dropped outermost cid11Y u SMT problem inherently existential quantiﬁcation consider negation reversing interpretation result Intuitively searching assignment uncontrollable time points able violate free constraints possible strategy winning strategy environment In fact formula satisﬁable model corresponds situation strategy controllable timepoint assignment exists Therefore differently Eq 1 encoding helpful debugging nonweakly controllable problem This encoding requires solver support LRA able exploit searching power SMT framework case nonweak controllability allows extraction debug information providing model formula An example encoding running example problem shown Fig 4a A improvement achieved limiting possible scope existential quantiﬁer To extent push existential quantiﬁer implication quantiﬁcation limited free constraints ref assumptionextraction encoding cid6 cid11Y u cid11Xccid7 cid11Xc cid11Y u 3 The assumptionextraction encoding running example problem reported Fig 4b The following proposition states inverted assumptionextraction encodings logically equivalent Proposition 2 Eqs 2 3 logically equivalent Proof We convert Eq 2 Eq 3 logically equivalent rewritings cid11Xccid6 cid11Y u cid7 cid11Xc cid11Y u cid11Xccid6 cid11Y u cid7 cid11Xc cid11Y u cid11Xccid6 cid11Y u cid11Xccid7 cid11Xc cid11Y u cid6 cid11Y u cid11Xccid7 cid11Xc cid11Y u cid6 cid11Y u cid11Xccid7 cid11Xc cid11Y u cid2 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 9 Fig 5 Schematic view implicit strategy mechanism The strategy repeatedly executed situation obtained estimating relevant parameters Plant The output strategy controllable schedule assignment Xc controllable time points The implicit strategy works projecting away uncertainty TPU uncontrollable durations cid11Y u substituted actual values situation S Then TP obtained solved TP solver yielding assignment Xc controllable time points 5 Strategies weak controllability We consider problem actually executing control strategy associated given weakly controllable TPU A TPU modeling framework represents set assumptions environment imposes set requirements fulﬁlled We consider usecase strategy scheduling controllable time points repeatedly executed reading inputs environment form situation Such situation generated reading parameters uncontrollable durations depends means appropriate sensors estimators The strategy computes assignment controllable time points fulﬁlls problem constraints deployed actuator execution The problem tackle automatically synthesize strategy discuss approaches First use TP solver online reasoning executing control strategy implicitly deﬁned TPU solvable Then investigate idea explicit strategies readily executed resorting online reasoning 51 Implicit strategies A way obtaining strategy weakly controllable TPU given Deﬁnition 3 depicted Fig 5 situ ation S read3 eliminate uncertainty substituting uncontrollable duration variables TPU formulation values obtained situation obtaining TP projection TPU Then solve resulting temporal problem uncertainty return assignment controllable time points Xc execu tion Formally given encoding TPU cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u assignment uncontrollable durations S fulﬁlling cid6 S situation ﬁnd assignment controllable variables cid11Xc ﬁnding model formula cid7 cid11Xc S This strategy requires solver executed situation S known In practice implement idea SMT solver searching model cid7 cid11Xc S However approach called ImplicitSMT requires solve separate SMT problem situation A advanced approach exploit incrementality feature modern SMT solvers 4 allowing solver recycle discovered clauses lemmas different situations For purpose designed incremental approach described Algorithm 1 ImplicitSMTIncremental takes encoding TPU cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u initializes SMT solver asserting problem constraints cid7 cid11Xc cid11Y u Then enters possibly inﬁnite loop processes sequence situations S 1 S 2 The problem description asserted solver situation ﬁrst asserted assignment retracted The main drawback implicit approach requirement online reasoning In fact situation known solver invoked discover assignment controllable time points Solving TP resulting projection TPU hard general If problem belongs STPU problem class resulting STP solved polynomial time general case DTPU projection results DTP general NPhard 37 In addition having solver runtime require expensive platforms 52 Explicit strategies We avoid burden online reasoning providing techniques synthesis functions simple fast execute Consider formalization Proposition 1 Interestingly apply skolemization 24 replacing existential quantiﬁer means fresh function symbol 3 S vector cid11Y u rational numbers uncontrollable duration 10 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Algorithm 1 Implicit strategy execution based SMT incrementality 1 procedure ImplicitSMTIncrementalcid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 bi cid11Xc SMTdeclareRealVarbi y j cid11Y u 4 5 6 7 8 9 10 11 12 13 14 15 16 SMTdeclareRealVar yi SMTassertcid7 cid11Xc cid11Y u loop S WaitForSituation SMTpush yi cid11Y u SMTassert yi S SMTsolve SAT μ SMTgetModel ExcecuteTimePointsμ cid16 Unreachable problem WC situation S fulﬁlls cid6 cid11Y u SMTpop 17 18 19 end procedure end loop Theorem 1 A TPU Xc Xu Cc C f weakly controllable formula cid11Y ucid6 cid11Y u cid7 f cid11Y u cid11Y u satisﬁable 4 Proof Eq 4 result applying skolemization 24 procedure Eq 1 Since skolemization produces equi satisﬁable formula Eq 4 equisatisﬁable Eq 1 Since Eq 1 free variables uninterpreted terms satisﬁability coincides validity Therefore Eq 1 valid Eq 4 satisﬁable Proposition 1 states TPU weakly controllable Eq 1 valid cid2 We transform inner existential quantiﬁer function f models weak strategy problem In fact Eq 4 interpretation function f exactly strategy solves problem Eq 4 gives clear vision strategy function gets input uncontrollable durations returns assignment controllable time points fulﬁlls problem constraints In principle like exploit formulation query SMT solver extract model closed form strategy f However Eq 4 quantiﬁed ﬁrstorder formula involving uninterpreted functions4 general undecidable In following focus types strategies linear strategies controllable variable computed linear combination uncontrollable durations piecewiselinear strategies different linear strategies executed depending input situation From assume encoding cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u TPU given In general weak strategy function maps assignment uncontrollable durations satisfying cid6 cid11Y u situation assignment controllable time points free constraints satisﬁed Deﬁnition 6 A weak strategy TPU function f RY u R Xc cid7 f cid11Y u cid11Y u holds cid11Y u cid6 cid11Y u deﬁned point cid11Y u cid6 cid11Y u Note deﬁnition impose constraint linearity continuity f function In Deﬁnition 6 modeled weak strategy single function f RY u R Xc equivalently consider set functions f 1 f Xc computing schedule single controllable time point given situation The formalizations equivalent exists unique function f obtain set function projection f viceversa Let f cid11Y u RY u R Xc strategy The strategy imposes relation controllable time points uncontrollable durations cid11Xc f cid11Y If relation expressible formula theory T check f weak strategy given temporal problem checking existence point cid6 cid11Y u violates free constraints cid6 cid11Y u cid7 cid11Xc cid11Y u cid11Xc f cid11Y u 5 4 Formally Eq 4 quantiﬁed ﬁrstorder formula expressed theory combination LRA theory uninterpreted functions EU F 4 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 11 If Eq 5 satisﬁable modulo T QF _LRA f cid11Y u valid weak strategy exists situation strategy violates free constraints In case T theory needed express relation imposed strategy example LRA Nonlinear Real Arithmetic Note check useful practice f cid11Y u expressed QF _LRA entire check ﬁt QF _LRA In following possible shapes strategies linear piecewiselinear Both shapes expressed QF _LRA Therefore checking strategies weak strategies given problem possible performing single SMT solver QF _LRA Linear strategies A linear strategy value controllable time point obtained linear combination cid11Y u Let n Xc m Xu A linear strategy represented matrix A real coeﬃcients size n m vector cid11c size n Every controllable variable scheduled according linear function uncontrollable durations The strategy f cid11Y u expressed A cid11Y u cid11c bi Xc computed Ai1 y1 Aim ym ci Therefore matrix A column duration vector cid11c contains constant additive terms The problem synthesizing linear strategy equivalent problem ﬁnding suitable matrix A vec tor cid11c Piecewiselinear strategies A general form strategy piecewiselinear strategy composition ﬁnite number linear strategies A piecewiselinear strategy deﬁned cases ﬁnite partition situations partition region represented cid6 cid11Y u For case linear strategy valid weak strategy subset situations We compose linear strategies ﬁrst checking element partition observed situation belongs applying corresponding linear strategy In setting linear strategy particular case piecewiselinear strategy partition cardinality Deﬁnition 7 A piecewiselinear strategy function f cid11Y u η1 cid11Y u f 1 cid11Y u f 2 cid11Y u η2 cid11Y u f k cid11Y u ηk cid11Y u f linear strategy ηi cid11Y u subregions cid6 cid11Y u cid6 cid11Y u cid5 k i1 ηi cid11Y u Note kind strategy directly encoded QF _LRA We pair f cid11Y u ηi cid11Y u piece strategy In order compactly represent piecewiselinear strategy algorithms abstract piecewiselinear strategy f cid11Y u ordered list pieces For example strategy f cid11Y u Deﬁnition 7 represented following list pieces f 1 cid11Y u η1 cid11Y u f 2 cid11Y u η2 cid11Y u f k cid11Y u ηk cid11Y u Following Deﬁnition 7 continuity requirement imposed piecewiselinear strategy Continuity required weak controllability deﬁnition useful requirement setting assume parameters yielding situation fully speciﬁed scheduling problem Continuity instead important issue dynamic strategies small variations situation yield substantial variations strategy outcome However discussion scope paper Linearity A linear strategy useful practice compact represent easy evaluate In fact represented matrix vector given assignment uncontrollable duration compute resulting assignment controllable variables means single matrix multiplication In general unfortunately weakly controllable TPU guaranteed strategy In fact holds STPU class problems Theorem 2 There exists STPU weakly controllable linear strategy Proof Let consider STPU depicted Fig 6 obtained adding constraint e1 b2 0 running example Fig 1 In following STPU weakly controllable exists linear strat egy The problem weakly controllable apply following piecewiselinear weak strategy cid12 cid13 b1 b2 f y1 y2 cid12 cid12 cid13 0 y1 y2 1 cid13 0 0 y2 y1 1 12 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Fig 6 The modiﬁed running example STPU problem weakly controllable linear strategy b The constraint deﬁnitions modiﬁed running example Fig 7 The region feasibility STPU Fig 3 b1 0 space b2 y1 y2 depicted different angles This strategy corresponds following assignments b1 0 cid14 b2 y1 y2 1 y2 y1 1 0 This strategy clearly covers entire uncontrollable space total function Given strategy free straints satisﬁed assuming cid6 y1 y2 y2 y1 1 formula cid7 cid11Xc cid11Y u reduces cid7 f y1 y2 y1 y2 0 0 0 0 y1 0 0 0 y1 0 y2 1 0 y2 0 2 y1 0 y1 y2 1 y2 2 6 The atoms y1 0 y2 2 follow assumptions cid6 y1 y2 atom y1 y2 1 entailed condition piece y2 y1 1 Considering piece case y2 y1 1 obtain following cid7 f y1 y2 y1 y2 y1 y2 1 0 0 0 y1 y1 y2 1 0 0 y1 y1 y2 1 y2 1 y1 y2 1 y2 0 2 y2 y1 1 y2 1 1 1 y1 3 7 The atoms y2 1 y1 3 follow assumptions cid6 y1 y2 atom y2 y1 1 exactly condition piece considering We linear strategy exists given problem For sake contradiction let suppose linear strategy exists problem Let f cid11Y u A cid11Y u cid11c linear strategy Then b1 A11 y1 A12 y2 c1 A21 y1 A22 y2 c2 If f cid11Y u valid weak linear strategy fulﬁll problem constraints b2 0 y2 1 ω2 0 2 ω3 3 1 situations Let consider particular situations ω1 0 1 yi ω4 3 2 We build following obtained instantiating constraint cid7b1 b2 y1 y2 picked situations substituting bi strategy deﬁnition A Cimatti et al Artiﬁcial Intelligence 224 2015 127 13 A21 0 A22 1 c2 A11 0 A12 1 c1 0 A11 0 A12 1 c1 0 A21 0 A22 1 c2 0 A11 0 A12 1 c1 0 A21 0 A22 1 c2 1 1 A21 0 A22 1 c2 1 A11 0 A12 1 c1 2 A21 0 A22 2 c2 A11 0 A12 2 c1 0 A11 0 A12 2 c1 0 A21 0 A22 2 c2 0 A11 0 A12 2 c1 0 A21 0 A22 2 c2 2 1 A21 0 A22 2 c2 2 A11 0 A12 2 c1 2 A21 3 A22 1 c2 A11 3 A12 1 c1 0 A11 3 A12 1 c1 3 A21 3 A22 1 c2 0 A11 3 A12 1 c1 3 A21 3 A22 1 c2 1 1 A21 3 A22 1 c2 1 A11 3 A12 1 c1 2 A21 3 A22 2 c2 A11 3 A12 2 c1 0 A11 3 A12 2 c1 3 A21 3 A22 2 c2 0 A11 3 A12 2 c1 3 A21 3 A22 2 c2 2 1 A21 3 A22 2 c2 2 A11 3 A12 2 c1 2 This rewritten follows A12 A22 c1 c2 0 A12 A22 c1 c2 0 A12 A22 c1 c2 0 A12 A22 c1 c2 1 2 A12 2 A22 c1 c2 0 2 A12 2 A22 c1 c2 0 2 A12 2 A22 c1 c2 3 2 A12 2 A22 c1 c2 0 3 A11 A12 3 A21 A22 c1 c2 0 3 A11 A12 3 A21 A22 c1 c2 3 3 A11 A12 3 A21 A22 c1 c2 1 3 A11 A12 3 A21 A22 c1 c2 1 3 A11 2 A12 3 A21 2 A22 c1 c2 0 3 A11 2 A12 3 A21 2 A22 c1 c2 3 3 A11 2 A12 3 A21 2 A22 c1 c2 0 3 A21 2 A22 3 A11 2 A12 c1 c2 0 The admits solution real numbers Therefore exists linear strategy given problem exists assignment coeﬃcients able fulﬁll situations time cid2 In order graphically explain reason linear strategy exists given problem plotted space free constraints STPU problem space y1 y2 b2 regions Figs 7a 7b loss generality assigned b1 0 freely assign reference controllable time point thanks RDL property shifting solutions The plot clearly shows exists linear strategy b2 Considering vertex 0 1 space y1 y2 linear solution contain point 0 1 0 feasible point vertex 0 1 Similarly considering 0 2 include 0 2 0 considering 3 1 include 3 1 1 3 2 linear solution include point 3 2 0 However linear solution exist plane contains points In fact plane containing 0 1 0 0 2 0 3 2 0 b2 0 plane contain point 3 1 1 We exploit encodings decision problem STPU Fig 6 weakly controllable The inverted SMT encoding Eq 2 example problem follows b1 b2 y1 0 y1 3 y2 1 y2 2 b2 b1 0 b1 y1 b2 0 b1 y1 b2 y2 1 b2 y2 b1 2 8 This formula shown unsatisﬁable LRA SMT solver Therefore problem weakly controllable The unsatisﬁability formula shown Eqs 6 7 provide witness strategy existential quantiﬁer making formula false In fact y2 y1 1 holds Eq 8 unsatisﬁable b1 0 b2 0 model Eq 6 Similarly y2 y1 1 holds Eq 8 unsatisﬁable b1 0 b2 y1 y2 1 model Eq 7 14 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Piecewiselinear strategy We prove piecewiselinear strategy exists weakly controllable TPU Theorem 3 For given TPU P P weakly controllable P admits piecewiselinear strategy Proof Let cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u encoding P Since P weakly controllable know cid11Y u cid11Xccid6 cid11Y u cid7 cid11Xc cid11Y u valid We want prove exists piecewiselinear strategy f cid11Y ucid6 cid11Y u cid11Xc f cid11Y u cid7 cid11Xc cid11Y u valid By construction cid6 cid11Y u cid7 cid11Xc cid11Y u formulae QF _LRA geometrically correspond union ﬁnitely closed convex polyhedra polyhedra closed inequalities nonstrict problem deﬁnition We face extract linear strategy correctly work subregion cid6 cid11Y u By combining linear strategies faces polyhedron obtain weak strategy P Without loss generality assume cid7 cid11Xc cid11Y u bounded set meaning completely contained ball ﬁnite radius This bounds uncontrollable variables cid6 cid11Y u assumptions Deﬁnition 1 add upper lower bounds controllable variables follows Since maxg cid11Y u cid11Y u cid20 cid6 cid11Y u problem weakly controllable let g cid11Y weak strategy For variable x cid11Xc let ux ming cid11Y u cid11Y u cid20 cid6 cid11Y u We add following constraint problem altering weak lx controllability x lx ux Let φ1 cid11Xc cid11Y u φ w cid11Xc cid11Y u formulae corresponding faces cid7 cid11Xc cid11Y u Each face φ z cid11Xc cid11Y u convex polyhedron expressed inequalities A cid11Xc cid11Y u b inequality satisﬁed equality From easy extract linear strategy f z cid11Y u reducing augmented matrix Ab reduced row echelon form applying substitution extract relation cid11Xc cid11Y u closed form For face φ z cid11Xc cid11Y u deﬁne projection χ z cid11Y u cid11Xcφ z cid11Xc cid11Y u Since QF _LRA admits quantiﬁer elimi nation χ z cid11Y u expressed QF _LRA formula geometrically corresponds ﬁnite union convex polyhedra Therefore build piecewiselinear weak strategy f deﬁned follows f cid11Y u χ 1 cid11Y u f 1 cid11Y u f 2 cid11Y u χ 2 cid11Y u f k cid11Y u χ k cid11Y u cid4 w i1 χ cid11Y u cid6 cid11Y u know P weakly controllable assumed cid7 cid11Xc cid11Y u Clearly cid11Y u bounded bounded projection faces corresponds projection polyhedral union In addition f z cid11Y u applied point χ z cid11Y u yields point belonging face polyhedron belonging cid7 cid11Xc cid11Y u Thus strategy valid weak strategy P cid2 6 Synthesis strategies weak controllability We interested generating strategies eﬃciently executed situation known Given quirement linear strategies helpful compact size quadratic number time points executed performing linear computation size strategy Piecewiselinear strategies helpful executed linear time size strategy require case switch applying linear executor The problem synthesizing weak strategies classiﬁed dimensions distinguish convex STPU vs disjunctive DTPU temporal problems ii linear vs piecewiselinear strategies Table 1 summarizes classiﬁcation indicates algorithms developed problem class All algorithms assume given problem weakly controllable known advance problem admits linear strategy Thus algorithms listed Linear column Table 1 return case linear strategy exists The guaranteed ﬁnd piecewiselinear strategy In rest section analyze combination temporal problem class strategy type separately A Cimatti et al Artiﬁcial Intelligence 224 2015 127 15 Table 1 Overview developed algorithms references section describes Convex STPU Disjunctive DTPU Strategy type Linear VertexEncoding Section 611 IncrementalWeakening Section 612 NRA Encoding Section 63 Piecewiselinear SimplexesDecomposition Section 621 LazyExpansion Section 622 SkinCrawler Section 641 ConvexRegionEnumerator Section 642 SMT notation In following present algorithms use different features provided modern SMT solvers optimization 35 We indicate preﬁx SMT functions related SMT solving In particular func tion SMTdeclareTypeVarv declares SMT variable named v type Type SMTdeclareRealVarv function declares realvalued SMT variable SMTsolveφcid11x function checks satisﬁability formula φcid11x returns SAT formula satisﬁable function returns UNSAT SMTgetModel returns satisfying assignment formula checked SMTsolve answer SAT Finally function SMTsolveMaximizingφcid11x hcid11x behaves like SMTsolveφcid11x generates model maximizes function hcid11x In incremental setting 717 assume stateful SMT solver following capabilities SMTassertφcid11x conjoins formula φcid11x state SMT solver performing solving operation SMTpush records backtrack point sate SMT solver stack The recorded state restored calling SMTpop function Finally incrementality assume SMTsolve function called arguments check satisﬁability conjunction currently asserted set formulae 61 Linear strategies STPU In following discuss algorithms able synthesize linear strategies given STPU problem They leverage convexity constraints STPU problem class 611 Vertex encoding If problem STPU free constraints represent convex space given points space free constraints point line connecting points solution Following idea generalize result weak controllability bounds 38 search linear strategies We consider vertexes uncontrollable space cid6 cid11Y u deﬁnition cid6 cid11Y u elements set V cid6 lc lc m1 uc m1 11 uc 11 Theorem 4 Let P strategy If f fulﬁlls cid7 cid11Xc cid11Y u vertexes v V cid6 f weak linear strategy P Xc Xu Cc C f STPU cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u encoding let f RY u R Xc linear Proof For sake contradiction let suppose exists point p space cid11Y u cid6 p holds cid7 f p p hold Then exist free constraint ck violated p Since problem STPU free constraint geometrically halfspace example b 1 intersection halfspaces example b 10 15 intersection halfspace b 15 b 10 Therefore p belong halfspaces encoded ck Let H violating halfspace However vertex v V cid6 f v belong H free constraints fulﬁlled vertexes The point f p belongs convex hull points f v belong halfspace H Hence contradiction cid2 Based insight idea create single formula encodes problem symbolic strategy vertexes uncontrollable region The encoding obtained instantiating problem constraint vertexes v V cid6 enforcing single hyperplane contain If hyperplane exists valid linear strategy entire problem Algorithm 2 shows pseudocode extracting linear strategy encoding We create matrix A vector cid11c real SMT variables representing coeﬃcients linear strategy The function VertexAssignments generates vertexes convex polyhedron corresponding cid6 cid11Y u In order achieve result cid6 cid11Y u generated Deﬁnition 5 suﬃces generate possible combinations assignments contingent constraints bounds We remark p vector constants variables occurring formula φ A cid11c coeﬃcients linear strategy f cid11Y u A cid11Y u cid11c The function SMTsolve checks satisﬁability given formula SMT solver SMTgetModel returns produced model case SAT answer We presented algorithm encoded problem formalized Deﬁnition 5 idea applied cid6 cid11Y u cid7 cid11Xc cid11Y u simply conjunctive QF _LRA formulae represent convex polyhedra The modiﬁcation needed algorithm change VertexAssignments able produce vertexes 16 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Algorithm 2 Vertex Encoding 1 procedure VertexEncodingcid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 4 5 SMTdeclareRealVarci y j cid11Y u bi cid11Xc SMTdeclareRealVar Ai j 6 7 8 φ A cid11c cid3 p VertexAssignmentscid6 cid11Y u φ A cid11c φ A cid11c cid7 A p cid11c p SMTsolveφ A cid11c SAT A cid11c SMTgetModel return f cid11Y u A cid11Y u cid11c 9 10 11 12 return 13 14 end procedure general formulae For employ known techniques enumerating vertexes convex polyhe dron 3 Consider example STPU problem Fig 1 The resulting problem admits linear strategy The encoding obtained application Algorithm 2 follows A12 0 A22 1 c2 A11 0 A21 1 c1 0 A11 0 A21 1 c1 0 A12 0 A22 1 c2 1 1 A12 0 A22 1 c2 1 A11 0 A21 1 c1 2 A12 0 A22 2 c2 A11 0 A21 2 c1 0 A11 0 A21 2 c1 0 A12 0 A22 2 c2 2 1 A12 0 A22 2 c2 2 A11 0 A21 2 c1 2 A12 3 A22 1 c2 A11 3 A21 1 c1 0 A11 3 A21 1 c1 3 A12 3 A22 1 c2 1 1 A12 3 A22 1 c2 1 A11 3 A21 1 c1 2 A12 3 A22 2 c2 A11 3 A21 2 c1 0 A11 3 A21 2 c1 3 A12 3 A22 2 c2 2 1 A12 3 A22 2 c2 2 A11 3 A21 2 c1 2 The encoding satisﬁable possible model encoding linear strategy reported Eq 9 cid12 cid13 cid12 cid13 A 0 0 0 1 cid11c 0 2 9 Therefore assignments controllable time points b1 b2 b1 0 b2 y2 2 Note approach leads exponential blowup size SMT problem caused fact number vertexes 2 Y u 612 Incremental weakening In order limit exponential blowup previous encoding worst case developed approach called incremental weakening tries limit number coeﬃcients search reduce variables linear strategy This idea amounts ﬁnding matrix A possibly columns null vectors fact ith column null A strategy depend actual values yi In limit case A null matrix strategy degenerates assignment constant values controllable time points strong controllability solution We start solving relaxed problem uncontrollable duration observed This coincides deﬁnition strong controllability problem If solution strong assignment valid weak linear strategy problem strong controllability implies weak controllability Otherwise subset uncontrollable durations A Cimatti et al Artiﬁcial Intelligence 224 2015 127 17 repeat Algorithm 3 Incremental weakening 1 procedure IncrementalWeakeningcid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 4 5 O GetUsableDurations cid11Y u N y cid11Y u y O η cid11Xc cid11O SC_Encodecid6N cid11N cid7Xc N cid11Xc cid11N f cid11O VertexEncodingcid6 cid11O cid11O η cid11Xc cid11O f cid11O cid18 return AddNullColumns f cid11O 6 7 8 O Y u return 9 10 11 end procedure cid11p cid11Y u picked marked usable strategy The algorithm tries build linear strategy uses uncontrollable durations cid11p In way limiting observations available strategy Using previous algorithm build coeﬃcients pth column matrix A encode problem previous algorithm limiting exponential explosion durations marked usable If algorithm fails ﬁnd linear strategy particular set usable durations different subset durations picked approach iterated uncontrollable durations marked usable encoding coincides previous approach The pseudocode method reported Algorithm 3 The function GetUsableDurations returns heuristically computed subset cid11Y u constitutes set observed durations The function stateful assumed return different subset The termination algorithm requires function eventually returns entire cid11Y u exits repeat loop fulﬁlling condition line 9 In termination condition algorithm behaves like VertexEncoding procedure executed entire problem The function SC_Encode produces encoding strong controllability problem SMT 11 This encoding prevent observation nonused durations leaving untouched The function VertexEncoding function described Algorithm 2 If VertexEncoding func tion returns strategy works subset uncontrollable duration variables return linear strategy completed function AddNullColumns The function adds columns 0s positions durations This guarantees strategy independent actual values durations This algorithm tries abstract problem limiting set usable durations strategy reﬁnes abstraction linear strategy The process iterated strategy entire set durations marked usable As shown previous section consider running example Fig 1 derive strategy y1 observed The advantage IncrementalWeakening previous algorithm choose use y2 y1 strategy result reported Eq 9 smaller simpler encoding This algorithm depends heuristic selecting usable durations In fact number cycles algorithm directly depends heuristic In experiments implemented heuristic based topological sorting uncontrollable time points The heuristic ﬁrst generates singleton subsets algorithm terminated considers preﬁxes topological order increasing size durations marked usable algorithm terminates 62 Piecewiselinear strategies STPU In following present algorithms extracting piecewiselinear strategy given weakly controllable STPU 621 Simplexes decomposition A direct approach extract piecewiselinear strategy consists partitioning region uncontrollable durations set msimplexes hypertetrahedra m dimensions m Y u In geometry ksimplex generalization triangle kdimensions A ksimplex kdimensional polytope convex hull k 1 linearly independent aligned vertexes For example 2simplex triangle 3simplex tetrahedron We consider polyhedra triangulate complex regions 20 The following theorem states existence linear strategy simplex contained uncontrollable space cid11Xc cid11Y u cid6 cid11Y u cid7 cid11Xc cid11Y u encoded weakly controllable STPU For Y usimplex σ cid11Y u Theorem 5 Let P σ cid11Y u cid6 cid11Y exists valid weak linear strategy f cid11Y uσ cid11Y u cid11Xc f cid11Y u cid7 cid11Xc cid11Y u valid Proof Let m cid11Y u V set m 1 vertexes σ cid11Y u By deﬁnition simplex σ cid11Y u convex hull points V P weakly controllable assumption v V exists point ti extends v space cid11Xc cid11Y u ti cid7 cid11Xc cid11Y u Let T tiv V Let f linear strategy A cid11Y u cid11c controllable time point bi Xc bi Ai1 y1 Aim ym ci hyperplane passing points ti T Such hyperplane exists unique mhyperplane 18 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Fig 8 Plot running example problem b1 assigned 0 partition space uncontrollable durations The space uncontrol lable durations split triangles shown ﬁgure In plot space solutions b draw possible piecewiselinear strategy obtained linear strategy triangle Algorithm 4 Simplexes Decomposition strategy extraction algorithm 1 procedure SimplexesDecompositioncid6 cid11Y u cid7 cid11Xu cid11Y u 2 3 4 5 f GetEmptyStrategy σ cid11Y u GetMaximalSimplexescid6 cid11Y u f sub VertexEncodingσ cid11Y u cid7 cid11Xu cid11Y u f AddPieceToStrategy f σ cid11Y u f sub return f 6 7 end procedure We prove f containing m 1 notcollinear 14 points ti T points T collinear results extension points V collinear m 1 vertexes simplex strategy cid11Y uσ cid11Y u cid11Xc f cid11Y u cid7 cid11Xc cid11Y u valid showing hyperplane bi Ai1 y1 Aim ym ci contained cid7 cid11Xc cid11Y u cid11Y u cid20 σ cid11Y u Since hyperplane contains ti T point k convex hull V hyperplane computed k contained cid7 cid11Xc cid11Y u convexity cid7 cid11Xc cid11Y u This proves thesis σ cid11Y u convex hull points V cid2 In order exploit Theorem 5 need able split uncontrollable space simplexes Doing allow split problem ﬁnding piecewiselinear strategy problem problem ﬁnding linear strategies simplex combine The uncontrollable region cid6 cid11Y u hyperrectangle minimum number simplexes needed cover hyper rectangle open mathematical problem 20 However known hyperrectangle m dimensions split factorial number simplexes m For example rectangle split 2 triangles rectangular cuboid covered 6 tetrahedrons Given cid6 cid11Y u obtain simplexes following idea Suppose bounds uncontrol lable variables 0 1 Then let R region satisfying sequence inequalities y p1 y pm p1 pm permutation 1 m m number uncontrollable duration variables It shown R simplex simplexes generated permutations form partition uncontrollable space 20 In general case arbitrary bounds apply idea permuting variables considering inequalities arising considering concrete lowerupper bounds y p2 Using approach enumerate permutations uncontrollable variables Thus number considered simplexes factorial number uncontrollable variables Y u For simplex possible ﬁnd linear strategy separately enforcing hyperplane satisfy problem constraints simplex vertexes In Fig 8 depicted example idea running example problem Algorithm 4 shows pseudocode extracting piecewise linear strategy enumerating simplexes ﬁnd ing linear strategy simplex The computational complexity algorithm factorial enumeration Y u simplexes In pseudocode function GetMaximalSimplexes enumerates sequence Y usimplexes needed cover cid6 cid11Y u polyhedron VertexEncoding returns linear strategy suitable given simplex5 We obtain resulting piecewiselinear strategy f adding piece simplex means function AddPieceToStrategy Consider problem Fig 6 algorithm works follows We ﬁrst consider simplex vertexes 0 1 0 2 3 1 space y1 y2 A possible linear strategy simplex f 1 A1 cid11Y u cid11c1 follows 5 cid11Xc cid11Y u σ cid11Y u cid7 cid11Xu cid11Y u formed encoding STPU σ cid11Y u shape prescribed Deﬁnition 5 Nevertheless VertexEncoding algorithm deal convex uncontrollable region A Cimatti et al Artiﬁcial Intelligence 224 2015 127 19 Algorithm 5 Lazy piecewiselinear strategy extraction 1 procedure LazyExpansioncid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 4 5 f GetEmptyStrategy η cid11Y u cid6 cid11Y u y j cid11Y u SMTdeclareVar yi R SMTsolveη cid11Y u σ cid11Y u GetUncoveredSimplexη cid11Y u f sub VertexEncodingσ cid11Y u cid7 cid11Xc cid11Y u o cid11Y u cid7 f sub cid11Y u cid11Y u f AddPieceToStrategy f η cid11Y u o cid11Y u f sub η cid11Y u η cid11Y u o cid11Y u 6 7 8 9 10 11 return f 12 13 end procedure cid12 cid13 cid12 cid13 A1 0 0 1 3 0 cid11c1 0 0 We consider second maximal simplex vertexes 0 2 3 1 3 2 A possible linear strategy simplex f 2 A2 cid11Y u cid11c2 follows 0 0 0 1 A2 cid11c2 0 2 cid12 cid12 cid13 cid13 The algorithm combines strategies valid piecewiselinear weak strategy f follows cid12 cid13 cid15 f y1 y2 b1 b2 622 Lazy expansion y2 1 f 1 f 2 3 y1 2 To overcome complexity limitation previous approach developed second technique called Lazy Expansion ﬁrst selects simplex uncontrollable region ﬁnds linear strategy simplex Second symbolically compute region uncontrollable durations satisﬁed computed strategy In way perform widening portion uncontrollable space satisﬁed computed linear strategy This widened region guaranteed cover simplex larger We associate computed strategy resulting region Finally search new simplex remaining space uncontrollable durations The algorithm terminates space uncontrollable durations completely covered The idea approach generalize strategy particular simplex cover wider potion space uncontrollable durations The algorithm lazily picks simplex region uncontrollable durations covered gets strategy able cover particular simplex We generalize applicability returned strategy proceed completely cover uncontrollable space The main advantage algorithm respect previous forced enumerate possible simplexes computed strategy exploited possible points space applicable Algorithm 5 shows pseudocode extracting piecewise linear strategy exploiting lazy expansion The function GetUncoveredSimplex returns simplex σ cid11Y u completely contained uncontrollable region cid6 cid11Y u At step compute widening simplex o cid11Y u region computed linear strategy f sub applicable In order symbolically obtain region substitute LRA encoding strategy f sub free constraints cid7 cid11Xc cid11Y u In way controllable time point variable bi cid11Xc replaced linear term computes according f sub left formula deﬁned cid11Y u Each model formula point uncontrollable region application f sub fulﬁlls free constraints problem We use procedure create bigger pieces reduce number iterations algorithm In general algorithm guaranteed terminate In fact termination assured following quirements First region σ cid11Y u covers nonempty volume space uncontrollable durations This needed progression piece strategy computed step guaranteed cover simplex originated step σ cid11Y u cid20LRA o cid11Y u The second requirement progression disallow inﬁnite decomposition chains ﬁnite regions If avoid regions inﬁnite subdivisions ﬁnite regions eventually region unsatisﬁability termination In implementation guarantee termination However algorithm correctly terminated ex periments cases performed faster SimplexesDecomposition algorithm One possibility guarantee termination hybridize algorithm SimplexesDecomposition approach bounding number loops LazyExpansion procedure portfolio approach One key issue eﬃciency approach resides ﬁnding good simplexes cover possibly nonconvex region η cid11Y u Deﬁning good simplex algorithm performance nontrivial task aim terminate minimum number iterations obtain decomposition cid6 cid11Y u minimal set oi cid11Y u regions 20 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Algorithm 6 Skinbased strategy extraction DTPU 1 procedure SkinCrawlercid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 4 f GetEmptyStrategy o cid11Y u f sub GetFaceStrategiescid6 cid11Y u cid7 cid11Xc cid11Y u f AddPieceToStrategy f o cid11Y u f sub return f 5 6 end procedure 63 Linear strategies DTPU We consider DTPU problem class provide algorithms strategy synthesis starting linear case A way computing elements matrix A vector cid11c linear strategy encoding constraints theory Nonlinear Real Arithmetic Polynomials N RA In fact compactly express properties entry A cid11c imposing constraints polynomials Eq 10 encoding N RA extracting linear strategy TPU problem single check A11 A1m c1 An1 Anm cn cid11Y u cid16 cid17 cid6 cid11Y u cid7 A cid11Y u cid11c cid11Xc cid11Y u 10 The idea let solver search Ai j ci coeﬃcients linear combination cid11Y u represent set hyperplanes strategies bi cid11Xc If solver reports unsatisﬁable means linear strategy exists given problem This approach directly follows deﬁnition linear strategy applicable entire spectrum temporal problems uncertainty assumption convexity search space As example encoding Eq 10 applied TPU Fig 6 remark fact linear strategy exists problem A11 A12 A21 A22 c1 c2 y1 y2 y1 0 y1 3 y2 1 y2 2 A21 y1 A22 y2 c2 A11 y1 A12 y2 c1 0 A11 y1 A12 y2 c1 y1 A21 y1 A22 y2 c2 0 A11 y1 A12 y2 c1 y1 A21 y1 A22 y2 c2 y2 1 A21 y1 A22 y2 c2 y2 A11 y1 A12 y2 c1 2 The running example problem STPU approach presented general In fact given procedure able decide N RA formulae arbitrary disjunctions deal DTPU For example Cylindrical Algebraic Decomposition CAD procedure 12 deal kind formulae 64 Piecewiselinear strategies DTPU In section analyze synthesis piecewiselinear strategy DTPU When dealing DTPU vexity assumptions holding STPU case valid anymore We present algorithms strategy synthesis DTPU problem class The skin crawler method searches strategy considering faces DTPU solution space considered polyhedron The convex region enumerator approach instead decomposes DTPU number convex regions applies techniques STPU problem class 641 Skin crawler An intuition exploited synthesize weak strategy DTPU problem class obtained proof Theorem 3 The idea iterate faces cid7 cid11Xc cid11Y u project space cid11Y u entire cid6 cid11Y u region covered projections Such iteration eﬃciently exploiting optimization features modern SMT solvers The toplevel procedure shown Algorithm 6 iterates faces extracts linear strategy face accumulating result piecewiselinear strategy The face extraction procedure Algorithm 7 starts extracting equalities free constraints Since free constraints nonstrict inequalities aim extracting skin free constraints considering equality b k derived b k The algorithm uses optimization procedure maximizes num ber equalities satisﬁed step represented variable satEqualities In way considering conjunction A Cimatti et al Artiﬁcial Intelligence 224 2015 127 21 Algorithm 7 Generates faces cid7 cid11Xc cid11Y u converts linear equations 1 procedure GetFaceStrategiescid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 xi cid11Xc cid11Y u SMTdeclareVarxi R χ cid11Xc cid11Y u cid7 cid11Xc cid11Y u cid6 cid11Y u satEqualities 0 eqi cid11Xc cid11Y u Equalitiescid7 cid11Xc cid11Y u SMTdeclareVareqvi R χ cid11Xc cid11Y u χ cid11Xc cid11Y u eqi cid11Xc cid11Y u eqvi χ cid11Xc cid11Y u χ cid11Xc cid11Y u eqi cid11Xc cid11Y u eqvi satEqualities satEqualities eqvi 1 0 faces SMTsolveMaximizingχ cid11Xc cid11Y u satEqualities SAT eqi cid11Xc cid11Y u Equalitiescid7 cid11Xc cid11Y uμ cid20 eqi cid11Xc cid11Y u Mcid11t cid11d ConvertToLinearSystemsystem bases GetBasesMcid11t 0 bases cid11Y u A cid11c ToLinearStrategyM o cid11Y cid7 A cid11Y u cid11c cid11Y u faces faces o cid11Y A cid11Y u cid11c cid4 χ cid11Xc cid11Y u χ cid11Xc cid11Y u eqi cid11Xc cid11Y u eqi cid11Xc cid11Y u 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 return faces 22 end procedure satisﬁed equalities ﬁrst explore vertexes edges ﬁnally faces The conjunction equali ties actually linear equalities representing face In order extract strategy face transform conjunction linear equalities matrix form As optimization discard systems dimension lower number uncontrollable durations This prevents creation pieces representing regions having null vol ume The algorithm termination depends termination GetFaceStrategies procedure The procedure guar anteed terminate step add new clause χ cid11Xc cid11Y u forces equality positive model false Therefore exponential number cycles respect number equalities Equalitiescid7 cid11Xc cid11Y u 642 Convex region enumerator We exploit possibility generating strategy convex case enumerating convex regions space free constraints This idea requires possibility deal possibly nonconvex cid6 cid11Y u projection convex polyhedron space intersected nonconvex cid6 cid11Y u generate nonconvex nonrectangular regions The LazyExpansion algorithm able deal constraints constraint imposed shape cid6 cid11Y u algorithm execution In case need enumerate set convex formulae μi cid11Xc cid11Y ui 1 I i1 μi cid7 cid11Xc cid11Y u Such formulae obtained computing Disjunctive Normal Form DNF formula cid7 cid11Xc cid11Y u From practical point view disjunct atom original formula negation The DNF eﬃciently computed SMT framework incremental mechanism cid4 I Algorithm 8 shows pseudocode Convex Region Enumerator algorithm weak strategy synthesis DTPU problems The algorithm works follows First selects consistent temporal evolution solving SMT problem conjunction contingent free constraints Given consistent model algorithm extracts free constraints atoms satisﬁed atoms fulﬁlled The region obtained conjoining atoms convex nonnecessarily closed polyhedron We compute projection polyhedron region uncontrollable durations compute strategy quasiSTPU problem6 The obtained strategy applied covered region removed problem polyhedron This ensures algorithm termination step remove model Boolean abstraction ρ cid11Xc cid11Y u formula In pseudocode function Project performs quantiﬁer elimination order compute projection given polyhedron given space compute uncontrollable region covered selected polyhedron Termination guaranteed internally use LazyExpansion algorithm incomplete case algorithm terminated benchmarks 6 The problem proper STPU projection nonrectangular constraints contain strict inequalities However LazyExpansion algorithm able deal degenerated problems 22 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Algorithm 8 Convex Region Enumeration strategy extraction DTPU 1 procedure ConvexRegionEnumeratorcid6 cid11Y u cid7 cid11Xc cid11Y u 2 3 xi cid11Xc cid11Y u SMTdeclareVarxi R f GetEmptyStrategy ρ cid11Xc cid11Y u cid7 cid11Xc cid11Y u cid6 cid11Y u SMTsolveρ cid11Xc cid11Y u SAT μ SMTGetModel δ cid11Xc cid11Y u cid3 α cid11Xc cid11Y u Atomscid7 cid11Xc μ cid20 α cid11Xc cid11Y u cid11Y u δ cid11Xc cid11Y u δ cid11Xc cid11Y u α cid11Xc cid11Y u δ cid11Xc cid11Y u δ cid11Xc cid11Y u α cid11Xc cid11Y u o cid11Y u Projectδ cid11Xc cid11Y u cid11Y u f sub LazyExpansiono cid11Y u δ cid11Xc cid11Y u f AddPieceToStrategy f o cid11Y u f sub ρ cid11Xc cid11Y u ρ cid11Xc cid11Y u δ cid11Xc cid11Y u o cid11Y u 4 5 6 7 8 9 10 11 12 13 14 15 16 17 return f 18 19 end procedure 7 Experimental evaluation In order empirically test effectiveness proposed approaches implemented tool deciding weak controllability synthesizing weak strategies TPU Our tool implemented Python It reads TPU problem applies portfolio encodings algorithms presented paper The tool synthesize explicit strategies C functions taking input situation compiled linked program We Z3 17 SMT solver weak controllability decision problem rely Python API provided MathSAT5 7 SMT solver strategysynthesis techniques We tested tool set benchmarks described We remark far knowledge concerned competitor tools solvers able deal weak controllability decision problem synthesis weak strategy Thus experimental evaluation compare tool approach All experiments performed ScientiﬁcLinux server equipped quadcore Xeon processors 270 GHz We memory limit 2 GB timeout 300 seconds sequential singlecore computation The tool benchmarks results evaluation downloaded https es fbk eu people roveri tests aijweakcontr The randomlygenerated benchmarks obtained modifying generator temporal problems presented 2 introducing uncertainty problem constraint introduced consistency problem generator turned contingent constraint given probability destination node considered uncontrollable We random instance generators typically literature 2 easily scaled stress solvers We tested decision problem encoding set 2442 randomly generated DTPU TCSPU STPU instances number time points ranging 6 20000 For evaluation strategyextraction techniques 1354 weakly controllable STPU benchmarks 2112 weakly controllable DTPU instances ranging 4 50 time points 71 Decision problem The results checking decision problem set TPUs plotted Fig 9 The cactus plot reports horizontal axis number solved instances vertical axis cumulative time logarithmic scale taken SMT solver encoding For example AssumptionExtraction encoding takes 10000 seconds solve easiest 750 instances We compared formulation Proposition 1 called Direct Inverted AssumptionExtraction encodings The ﬁgure highlights fact Z3 performs better AssumptionExtraction encoding problem considered fact approach able solve time higher number instances respect Inverted Direct encodings The Direct encoding performs identically Inverted This behavior fact Inverted encoding shape Direct The difference negation Direct encoding affect solver performance In Figs 9b 9c reported scatter plots comparing performances AssumptionExtraction Inverted encodings distinguishing weakly controllable nonweakly controllable instances We note weakly controllable case AssumptionExtraction encoding outperforms Inverted encoding benchmarks For nonweakly controllable instances encodings perform similarly terms speed However Inverted encoding able solve 86 instances unsolvable AssumptionExtraction encoding imposed memory limit A Cimatti et al Artiﬁcial Intelligence 224 2015 127 23 Fig 9 Results decision problem encodings solved Z3 SMT solver reports cumulative time logarithmic scale cactus plot b c scatter plots Inverted vs AssumptionExtraction encodings divided weakly controllable b weakly controllable c The TO line denotes instances reached time MO indicates instances hit memory limit 72 STPU strategy synthesis The results evaluation strategyextraction techniques 1354 STPU benchmarks reported Fig 10a The plot considers benchmarks admit linear strategy compares different ap proaches The plot clearly shows linear strategies IncrementalWeakening approach outperforms The SimplexesDecomposition method quickly explodes factorial complexity simplexes enumeration Although techniques piecewiselinear strategy extraction penalized strictly general plot shows LazyExpansion approach faster SimplexesDecomposition In Fig 10b plotted number pieces strategies LazyExpansion SimplexesDecomposition methods The plot clearly shows small problems LazyExpansion approach generates additional unneeded pieces problem 24 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Fig 10 Results STPU linear strategy extraction problem In plotted cumulative cactus plot strategy extraction time different algorithms proposed paper b compared number pieces piecewiselinear algorithms expressed number split regions Fig 11 Results strategy extraction problem DTPU problem class In plotted cumulative cactus plot solving time ConvexRegionEnumerator SkinCrawler algorithms b scatter plot data size increases number pieces identiﬁed LazyExpansion method smaller SimplexesDe composition In general LazyExpansion approach huge gain performances strategy size 73 DTPU strategy synthesis In Fig 11 report results DTPU problem class The plots clearly ConvexRegionEnumerator algorithm performs better SkinCrawler This main reasons First SkinCrawler approach solves costly minimization problem traverse faces space free constraints ConvexRe gionEnumerator algorithm applies cheap LazyExpansion approach convex region generated single SMT solver Second linear strategy generated LazyExpansion approach generalized applied A Cimatti et al Artiﬁcial Intelligence 224 2015 127 25 Fig 12 Results strategy execution problem generated strategy executed 1000 randomly generated situations The plot considers STPU DTPU randomly generated problems The cactus plot shows number solved instances x axis accumulated time solve y axis possible problem allows linear strategy ConvexRegionEnumerator algorithm able quickly synthesize SkinCrawler enumerate faces cover entire uncontrollable space There interesting peak rightmost ConvexRegionEnumerator curve plot This particular instance solved 28728 seconds generating strategy 3750 pieces number iterations terminate This example splitting LazyExpansion approach gets lost splitting uncontrollable space simplexes Finally experimented effectiveness N RA encoding reasons First linear strategy guaranteed exist STPUs guaranteed exist DTPUs Second N RA approach needs solver supporting quantiﬁcation real polynomial arithmetic polynomial N RA theory best knowledge SMT solver fully supports theory complexity problem decidable 12 74 Strategy execution In paper proposed number approaches synthesize weak strategies arguing execution practi cally eﬃcient solving individual problems uncertainty obtained projecting uncertainty away In section provide experimental evidence supporting claim number STPU DTPU instances We conducted experiment follows For TPU randomly generated 1000 situations represented complete assignments uncontrollable durations We implemented ImplicitSMT ImplicitSMTIncremental general strategies described Section 51 MathSAT5 SMT solver Other TP solvers principle employed create implicit strategies SMT solvers showed effective dealing consistency problems 11 For reason lack publicly available implemented solvers limited experimentation SMT based techniques described Section 51 In addition considered ways compile machine code problemspeciﬁc strategies generated algo rithms presented paper We translated linear piecewiselinear strategy synthesized algorithms C code The translation linear strategies straightforward create function takes input numeric value uncontrollable duration compute output strategy solving matrix multiplication described Section 52 Given piecewiselinear strategy translate sequence statements piece The condition transposition C syntax piece condition Each conditional statement returns value computed translation linear strategy relative particular piece We different datatypes represent numeric values perform arithmetic operations In particular ﬁniteprecision C float double GNUGMP library arbitrary precision arithmetic7 The float double datatypes ﬁniteprecision representation rational numbers As suffer numeric stability rounding problems principle cause unsoundness strategy output On hand GNUGMP li brary employed MathSAT5 SMT solver suffer kind numeric stability rounding problems 7 The GNU Multiple Precision Arithmetic Library https gmplib org 26 A Cimatti et al Artiﬁcial Intelligence 224 2015 127 Fig 12 shows results comparison experiments explicit strategies outperform projectionbased implicit strategies ImplicitSMTIncremental performs better ImplicitSMT thanks incrementality feature SMT solver explicit strategies bring signiﬁcant speedup instances Arbitraryprecision arithmetic fairly compares SMT precision outperforms projectionbased techniques orders magnitude The compiled strategies native C datatypes perform better numerical stability problems principle lead unsound results We checked output technique situation order assess soundness results correct Nevertheless studying condition guarantee ﬁniteprecision implementations correct subject future work We highlight compilations native C datatypes translated Boolean circuits open possibility create eﬃcient hardware implementations strategies 8 Related work The literature temporal problems vast Starting seminal paper Dechter 18 describing STP TCSP authors worked ﬁeld temporal reasoning uncertainty 236 Armando et al 2 ﬁrst proposing use SMT ﬁeld temporal problems tackling DTP problem class This work focuses temporal problems uncertainty limited checking consistency given TP Fargier Vidal introduced concept STPU described controllability levels 38 This work extended TCSPU DTPU 3237 Concerning strong controllability work contained polynomial algorithm schedule synthesis STPU For TCSPU DTPU strong controllability problem studied theoretical point view Peintner et al 32 number techniques leverage SMT solvers obtain practical solver presented previous work 11 For decision problem weak controllability 38 basic algorithm STPU class presented In 37 Venable et al approached problem deciding weak controllability DTPU explicit algorithm enumerates STPU components DTPU In work tackle DTPU class exploit symbolic techniques avoid explicit enumeration delegating SMT solver exploit advanced mitigation techniques variable selection heuristics conﬂict learning In addition 38 37 purely theoretical point view problem formalize encode weak controllability decision problem SMT framework obtain practical experimental results The work literature strategy extraction problem weak controllability previous work 10 In 10 presented algorithms linear piecewiselinear strategy extraction STPU problem class In paper cover general DTPU problem class considering strategy synthesis problem presence disjunctions We provide detailed theory discussion add proof existence piecewise linear strategies weakly controllable TPU proofs explanations included 10 Also experimental evaluation extended clariﬁed There exists form controllability TPUs dynamic controllability The key difference case dynamic controllability strategy allowed observe entire situation decision depend past events The problem dynamic controllability STPU widely studied problem 2928272122 fact algorithms devised deciding dynamic controllability STPU For disjunctive problem classes 37 Venable et al present algorithm deciding dynamic controllability TCSPU 8 Hunsberger Poseanto present decision procedure DTPUs based reduction dynamic controllability problem reachability problem Timed Game Automaton Also ﬁeld dynamic controllability strategy synthesis relevant topic authors presented implicit strategies runtime scheduling time points 2722 STPU Those strategies require online reasoning based generating networks dispatched runtime algorithm constraint propagation techniques Recently started research line aiming synthesizing explicit strategies dynamic controllability STPU problem class 9 DTPU problem class 8 In works present encodings dynamic controllability problem reachability games Timed Gamed Automata constructive solution techniques exist The strategies generated converted implicit strategies TPU similar synthesize paper weak controllability 9 Conclusions future work In paper presented ﬁrst comprehensive approach problem weak controllability TPUs We cover problem generality case TPUs disjunctions We work logicbased framework relies SMT techniques achieve eﬃcient implementation We following contributions provide ﬁrst effective procedure deciding weak controllability DTPU investigate problem repeated execution propose constructive forms strategy extraction The experimental evaluation shows feasibility method demonstrates dramatic speed ups explicit implicit strategy execution In future investigate following research lines The incremental weakening approach linear strategy extraction lazy decomposition approach piecewiselinear strategy extraction strongly inﬂuenced A Cimatti et al Artiﬁcial Intelligence 224 2015 127 27 selection heuristics We investigate possibility topological information generation effective subsets cid11y incremental weakening use extremal simplexes lazy decomposition approach We plan study applicability strategy construction problem SMT proofextraction techniques capability modern solvers extract proofs unsatisﬁability provide way extract strategy proving weak controllability In addition determining conditions ﬁnite state representation guaranteed applicable open way eﬃcient hardwareimplemented strategies Finally believe techniques described pave way eﬃcient explicit strategies dynamic controllability strategies required rely observation events occurred In particular plan combine approaches strong weak controllability explore continuum References 1 James F Allen Maintaining knowledge temporal intervals Commun ACM 26 11 1983 832843 2 Alessandro Armando Claudio Castellini Enrico Giunchiglia SATbased procedures temporal reasoning ECP 1999 pp 97108 3 David Avis Komei Fukuda A pivoting algorithm convex hulls vertex enumeration arrangements polyhedra Discrete Comput Geom 4 Clark W Barrett Roberto Sebastiani Sanjit A Seshia Cesare Tinelli Satisﬁability modulo theories Handbook Satisﬁability IOS Press 2009 8 1 1992 295313 pp 825885 5 Marco Bozzano Roberto Bruttomesso Alessandro Cimatti Tommi Junttila Silvio Ranise Peter Van Rossum Roberto Sebastiani Eﬃcient satisﬁability modulo theories delayed theory combination CAV 2005 pp 335349 6 Roberto Bruttomesso Edgar Pek Natasha Sharygina Aliaksei Tsitovich The OpenSMT solver TACAS 2010 pp 150153 7 Alessandro Cimatti Alberto Griggio Bastiaan Joost Schaafsma Roberto Sebastiani The MathSAT5 SMT solver TACAS 2013 pp 93107 8 Alessandro Cimatti Luke Hunsberger Andrea Micheli Roberto Posenato Marco Roveri Soundandcomplete algorithms checking dynamic controllability temporal networks uncertainty disjunction observation TIME 2014 9 Alessandro Cimatti Luke Hunsberger Andrea Micheli Marco Roveri Using timed game automata synthesize execution strategies simple temporal networks uncertainty AAAI 2014 pp 22422249 10 Alessandro Cimatti Andrea Micheli Marco Roveri Solving temporal problems SMT weak controllability AAAI 2012 11 Alessandro Cimatti Andrea Micheli Marco Roveri Solving strong controllability temporal problems uncertainty SMT Constraints 2014 12 George E Collins Hoon Hong Partial cylindrical algebraic decomposition quantiﬁer elimination J Symb Comput 12 3 1991 299328 13 Scott Cotton Eugene Asarin Oded Maler Peter Niebert Some progress satisﬁability checking difference logic FORMATSFTRTFT 2004 pp 263276 14 HSM Coxeter Samuel L Greitzer Collinearity concurrence Geometry Revisited Mathematical Association America Textbooks 1967 pp 5179 15 Martin Davis George Logemann Donald W Loveland A machine program theoremproving Commun ACM 5 7 1962 394397 16 Leonardo Moura Nikolaj Bjørner Modelbased theory combination Electron Notes Theor Comput Sci 198 2 2008 3749 17 Leonardo Moura Nikolaj Bjørner Z3 eﬃcient SMT solver TACAS 2008 pp 337340 18 Rina Dechter Itay Meiri Judea Pearl Temporal constraint networks Artif Intell 49 13 1991 6195 19 Bruno Dutertre Leonardo Moura The Yices SMT solver Tool paper httpyicescslsricomtoolpaperpdf 2006 20 Robert B Hughes Michael R Anderson Simplexity cube Discrete Math 158 13 1996 99150 21 Luke Hunsberger Fixing semantics dynamic controllability providing practical characterization dynamic execution strategies TIME 2009 pp 155162 22 Luke Hunsberger A fast incremental algorithm managing execution dynamically controllable temporal networks TIME 2010 pp 121128 23 Hyondeuk Kim Fabio Somenzi HoonSang Jin Eﬃcient TermITE conversion satisﬁability modulo theories SAT 2009 pp 195208 24 SC Kleene Mathematical Logic J Wiley Sons 1967 25 Rüdiger Loos Volker Weispfenning Applying linear quantiﬁer elimination Comput J 36 5 1993 450462 26 David Monniaux A quantiﬁer elimination algorithm linear real arithmetic LPAR 2008 pp 243257 27 Paul Morris A structural characterization temporal dynamic controllability CP 2006 pp 375389 28 Paul Morris Nicola Muscettola Temporal dynamic controllability revisited AAAI 2005 pp 11931198 29 Paul Morris Nicola Muscettola Thierry Vidal Dynamic control plans temporal uncertainty IJCAI 2001 pp 494502 30 Matthew W Moskewicz Conor F Madigan Ying Zhao Lintao Zhang Sharad Malik Chaff Engineering eﬃcient SAT solver DAC 2001 pp 530535 31 Greg Nelson Derek C Oppen Simpliﬁcation cooperating decision procedures ACM Trans Program Lang Syst 1 2 1979 245257 32 Bart Peintner Kristen B Venable Neil YorkeSmith Strong controllability disjunctive temporal problems uncertainty CP 2007 pp 856863 33 Alexander Schrijver Theory Linear Integer Programming J Wiley Sons 1998 34 Roberto Sebastiani Lazy satisﬁability modulo theories J Satisf Boolean Model Comput 3 34 2007 141224 35 Roberto Sebastiani Silvia Tomasi Optimization SMT LAQ cost functions IJCAR 2012 pp 484498 36 Ioannis Tsamardinos Martha E Pollack Eﬃcient solution techniques disjunctive temporal reasoning problems Artif Intell 151 12 2003 4389 37 Kristen B Venable Michele Volpato Bart Peintner Neil YorkeSmith Weak dynamic controllability temporal problems disjunctions 38 Thierry Vidal Hélène Fargier Handling contingency temporal constraint networks consistency controllabilities J Exp Theor Artif Intell uncertainty COPLAS 2010 11 1 1999 2345