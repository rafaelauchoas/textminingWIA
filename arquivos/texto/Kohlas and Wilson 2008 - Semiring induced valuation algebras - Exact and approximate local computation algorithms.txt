Artiﬁcial Intelligence 172 2008 13601399 wwwelseviercomlocateartint Semiring induced valuation algebras Exact approximate local computation algorithms J Kohlas a1 N Wilson b2 Department Informatics University Fribourg Switzerland b Cork Constraint Computation Centre Department Computer Science Ireland Received 4 April 2006 received revised form 7 March 2008 accepted 18 March 2008 Available online 27 March 2008 Abstract Local computation join trees acyclic hypertrees shown linked particular algebraic structure called val uation algebra There models algebraic structure ranging probability theory numerical analysis relational databases classical nonclassical logics It turns interesting models valuation algebras derived semiring valued mappings In paper study valuation algebras induced semirings structure valuation algebra related algebraic structure semiring In particular csemirings idempotent multiplication induce idempotent valuation algebras permit particularly efﬁcient architectures local computation Also important semirings multiplicative semigroup embedded union groups They induce valuation algebras partially deﬁned division For valuation algebras wellknown architectures Bayesian networks apply We extend general computational framework allow derivation bounds approximations exact computation feasible 2008 Elsevier BV All rights reserved Keywords Semirings Local computation Join tree decompositions Soft constraints Uncertainty Valuation networks Valuation algebras 1 Introduction Many different formalisms artiﬁcial intelligence including constraint systems probabilistic networks sys tems possibility measures belief functions database theory logic statistics numerical analysis exhibit common structure permitting local computation computation acyclic hypertrees join trees This algebraic structure ﬁrst isolated abstract setting related local computation 59 3753 It extended studied 34 The algebraic structure called valuation algebra 34 Corresponding author Email addresses juergkohlasunifrch J Kohlas nwilson4cuccie N Wilson URL httpdiufunifrchtcsjuergkohlas J Kohlas 1 Research supported grant No 210004292795 Swiss National Foundation Research 2 This material based partly works supported Science Foundation Ireland grant No 00PI1C075 grant No 05INI886 00043702 matter 2008 Elsevier BV All rights reserved doi101016jartint200803003 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1361 In valuation algebra piece information φ called valuation associated set s variables φ gives information variables s For example constraint satisfaction problem relational database φ express relation s saying assignments variables feasible Alternatively soft constraints express preferences different assignments reasoning uncertainty possibility theory Bayesian networks express degrees uncertainty different assignments variables s It assumed way combining valuations operation gives combined effect combination operator associative commutative If ψ valuation variables t combination φ ψ valuation variables s t φ ψ variables s t Valuation algebras assume operation called projection marginalization focuses information smaller set variables Suppose u subset s Then φu represents valuation φ tells u If example φ probability distribution potential φu marginal u Alternatively φ represents binary constraint relating variables X1 X2 tells assignments X1 X2 possible φX1 tells assignments X1 possible The inputs important computational reasoning problems expressed collection valuations φ1 φk appropriate valuation algebra associated sets variables fairly small The combi nation gives combined effect information For example constraint satisfaction problem combination represents solutions relational database combination join relations In Bayesian network combination represents probability distribution variables It infeasible represent combination directly involves variables exponential number assignments Typically interested information tells certain small sets variables So particular sets u want compute projection combination u This known projection problem Direct computation feasible For single set u approach based sequential variable elimination compute associated marginal For computation sets u faster methods developed based use appropriate join tree tree nodes associated sets variables satisfy running intersection property variable X associated nodes associated node path nodes Such join tree algorithms computing marginals parts inward phase information passed iteratively leaves chosen root node outward phase information distributed iteratively root nodes As discussed 34 number different variations local computational architecture It turns important examples valuation algebras induced valuations taking values semiring This ﬁrst proposed domain constraint systems classical crisp constraints gener alized fuzzy constraints weighted constraints partially satisﬁed constraints 89 But probability potentials Bayesian networks 41 belong class valuations relational systems 442 Possibility potentials Spohn potentials 60 provide examples valuations based semirings Other instances applications semiringinduced valuation algebras described 1 In second section introduce semirings examples related important valuation algebras A semiring consists set A operations conventionally labeled assume associative commutative assumed distributes An example nonnegative real numbers addition multiplication A valuation variables s induced valuation algebra func tion assigns nonnegative real number assignment variables s Combination based pointwise multiplication marginalization involves summation values variables eliminated This semiring induced valuation algebra probability potentials reasoning Bayesian networks Any semiring induces valuation algebra way shown Section 3 discusses local computation based semirings In paper study valuation algebras induced semirings In particular want know structure valuation algebra conditioned structure inducing semiring These important questions practical purposes Valuation algebras provide structure needed local computation architectures There exist particularly efﬁcient architectures use form division valuation algebra 2941 It important know properties inducing semiring guarantee existence concept division induced valuation algebra usability corresponding architecture local computa tion 3437 Further idempotent valuation algebras socalled information algebras interesting properties 1362 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 allow particularly simple local computation architectures Therefore important know semirings lead idempotent valuation algebras Idempotent valuation algebras corresponding computational structure analyzed Section 4 Section 5 study semirings induce valuation algebras division discuss local computation architectures This study helps extend computational schemes known probability networks relational algebra general structures develop generic architectures local computation 47 It happen problem exact local computation feasible For certain important systems valuations demonstrated 24 local computations approximated minibuckets miniclustering techniques We Section 6 kind technique applied generally valuation algebras particular induced semiring focus especially computing upper lower bounds We consider use constraint propagation improving efﬁciency local computation Provisional versions parts work appear 35 62 2 Semirings This section deﬁnes different kinds semirings relevant valuation algebras areas automated reasoning uncertain reasoning constraintbased reasoning Semirings algebraic structures composed operations So let A set binary operations deﬁned We tuple A cid6A cid7 semiring operations commutative associative distributes Elsewhere called commutative semiring If element 0 A 0 0 0 0 0 A A called semiring zero element In case zero element 0 clearly unique A zero element adjoined semiring Let cid6A cid7 semiring Add extra element 0 A extend A 0 A 0 0 0 0 0 Then easy verify cid6A 0 cid7 semiring Similarly element 1 A said unit element 1 1 A There unit element 1 semiring Note cases A group operation A ring If furthermore A 0 group operation A ﬁeld The associativity allows write expressions like a1 a2 I1 In Ij ﬁnite disjoint commutativity associativity entail ai particular I cid2 ncid3 cid3 j 1 iIj ai cid3 iI ai If A semiring zero element b 0 implies b 0 ai cid4 A called positive In way associativity permits write expressions like a1 a2 If operation idempotent A semiring A cid6A cid7 extended include unit element follows For A deﬁne new element a1 cid9 b implies a1 cid9 b1 Let Acid10 A A1 A1 a1 A Deﬁne cid10 follows b arbitrary elements A cid10 b b cid10 b1 a1 cid10 b a1 cid10 b1 deﬁned b1 Further deﬁne cid10 follows cid10 b b cid10 b1 a1 cid10 b deﬁned b a1 cid10 b1 deﬁned a1 cid10 b cid10 a1 The Acid10 cid6Acid10 cid10 cid10cid7 semiring unit element 01 cid10 idempotent Let A cid6A cid7 semiring We deﬁne relation cid11A A abbreviated cid11 section cid11 b b exists c A c b If A zero element condition covers ﬁrst c 0 Proposition 1 For semiring A cid6A cid7 associated relation cid11 satisﬁes following properties 1 Relation cid11 preorder reﬂexive transitive J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1363 2 cid11 b acid10 cid11 bcid10 imply acid10 cid11 b bcid10 acid10 cid11 b bcid10 cid2 n 3 1 n ai cid11 bi i1 bi 4 b A cid11 b zero element 0 0 cid11 5 b b b cid11 b b b n i1 ai cid11 cid4 n i1 ai cid11 cid2 cid4 n i1 bi Proof 1 Clearly cid11 reﬂexive Suppose cid11 b b cid11 c Thus exist d e d b b e c d e c This proves cid11 c 2 Suppose cid11 b acid10 cid11 bcid10 exist c ccid10 c b acid10 ccid10 bcid10 Then acid10 c ccid10 b bcid10 acid10 cid11 b bcid10 required For second sufﬁcient cid11 b implies acid10 cid11 b acid10 applied twice commutativity result Suppose cid11 b exists c c b Then b acid10 c acid10 acid10 c acid10 implies acid10 cid11 b acid10 3 follows repeated application 2 4 follows 0 5 If b b deﬁnition cid11 b Conversely cid11 b exists c c b Then b c b b b Hence b b c b c b required cid2 Often operation assumed idempotent A Note idempotency implied idempotency unit 1 1 1 1 1 1 If A zero unit element furthermore A 1 1 idempotent A csemiring 9 c standing constraint 8 This special kind commutative dioid 3 According Proposition 1 4 preorder cid11A partial order cid2A abbreviated cid2 A deﬁned following way cid2A b b b The intended meaning order applications b preferred b better We refer examples The following lemma summarizes elementary important properties order Lemma 1 Let A csemiring 1 A 0 cid2 cid2 1 2 b A cid2 b b cid2 3 cid2 acid10 b cid2 bcid10 imply b cid2 acid10 bcid10 b cid2 acid10 bcid10 4 b implies cid2 b 5 b supa b 6 A positive Proof 1 This follows 0 1 1 2 First b b b idempotency Further distributive law b 1 b 1 b 1 b cid2 1 1 3 By assumption acid10 acid10 b bcid10 bcid10 Hence obtain b acid10 bcid10 acid10 b bcid10 acid10 bcid10 distributivity b acid10 b acid10 b acid10 b So b cid2 acid10 b But follows acid10 b cid2 acid10 bcid10 transitivity b cid2 acid10 bcid10 4 We b b b 1 b 1 b b 5 By 2 b cid2 b Let c upper bound b cid2 c b cid2 c Then 3 b cid2 c c c Thus b upper bound 6 Suppose b 0 Then 0 cid2 cid2 b 0 Proposition 1 By transitivity order 0 cid2 cid2 0 antisymmetry partial order cid2 follows 0 Similarly b 0 derived cid2 1364 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 Our deﬁnition csemiring equivalent given 9 given later papers 5 The deﬁnition csemiring 8 somewhat stronger assumes summation deﬁned inﬁnite sets Most properties proved 8 hold slightly weaker deﬁnition csemiring particular properties Lemma 1 One result 8 hold weaker deﬁnition csemiring Theorem 9 8 stating csemiring complete lattice deﬁnition paper csemiring necessarily lattice shown following example Consider set A ﬁnite unions closed discs circles interiors R2 set set R2 including discs radius zero points For b R2 deﬁne b b deﬁne cf Example 417 3 b x R2 x y z y z b S It shown commutative associative b c R2 b c c b c distributes A clearly closed It closed follows fact b discs b disc seen example translating discs centre origin disc b radius equal sum radii b The distributive property implies A closed Hence cid6A cid7 semiring zero element unit element R2 For A R2 R2 cid6A cid7 csemiring deﬁnition Consider pair b overlapping discs contains It seen intersection b A considering curvature point boundary b Element c A lower bound b c subset b But b greatest lower bound A In fact lower bound c A construct strictly greater lower bound A taking c x point x element b c Therefore A lattice We shall consider csemirings operation idempotent A Then cid2 b b deﬁnes partial order A According Lemma 1 identical order cid2A Theorem 10 8 shows csemiring sense idempotent distributive lattice The following simple result states holds deﬁnition csemiring However unlike csemirings deﬁned 8 need complete distributive lattice Consider example csemiring rational numbers interval 0 1 max min Theorem 1 Cf Theorem 10 8 If A csemiring idempotent A distributive lattice b infa b Proof Since supa b b exists remains prove b infa b distributivity guaranteed semiring In fact Lemma 1 2 b cid2 b Assume c cid2 b Then Lemma 1 3 c c c cid2 b shows b largest lower bound cid2 There instances semirings We look variety examples semirings sense different systems practical theoretical covered algebraic structures Example 1 Arithmetic semirings Take A set nonnegative real numbers R 0 designating usual addition multiplication This clearly semiring number 0 zero element number 1 unit element The semiring positive The order cid11 case usual total order numbers This semiring needed deﬁning probability potentials probabilistic networks Bayesian networks Section 3 We consider ﬁeld reals integers natural numbers For example ordinary addition multiplication nonnegative integers N 0 yield positive semiring Example 2 Boolean semiring Here A 0 1 intention 0 designates false 1 true Deﬁne operation b maxa b b mina b Operation represents logical disjunction logical conjunction This semiring zero element 0 unit element 1 Further idempotent operations In addition 0 1 1 Therefore A csemiring In fact semiring crisp constraint systems relational algebra Section 3 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1365 Example 3 Bottleneck algebra We max operation min operation set real numbers R augmented Then 0element unity This algebra csemiring fact distributive lattice It called bottleneck algebra 12 Example 4 Distributive lattices We seen csemiring idempotent distributive lattice The orem 1 Conversely distributive lattice clearly semiring joins meets operations inversely Both operations idempotent If lattice element zero element semiring If element cid18 unit element In case semiring csemiring This example generalizes Boolean semiring The bottleneck algebra Example 3 example distributive lattice But distributive lattices generally express qualitative degrees membership elements fuzzy sets Further Boolean algebras distributive lattices Elements Boolean algebras assumptions satisﬁed membership certain sets This discussed Example 12 Section 3 Example 5 max min semirings We consider A consist nonnegative integers N 0 We min operation b mina b usual addition convention Both operations commutative associative The distributive law holds minb c mina b c The operation min idempotent zero element integer 0 unit element mina 0 0 This shows csemiring It called tropical semiring This structure 60 deﬁne dynamic theory graded belief states based ordinal numbers Section 3 It arises context applying dynamic programming minimizing sum functions 3455 applies weighted partially satisﬁed constraints 9 Instead min operation max Further A reals R nonnegative reals R 0 adjoined These min max semirings applications networks graph optimization queuing systems discrete event systems 38 taking logarithms probabilities computing probable complete assignment Bayesian network ﬁnding probable explanation 46 Example 6 tnorms Triangular norms tnorms originally introduced context probabilistic metric spaces 4452 They simply binary operations unit interval A 0 1 commutative associa tive number 1 unit element addition nondecreasing arguments 1 b c 0 1 T b T b T T b c T T b c 2 cid2 acid10 b cid2 bcid10 imply T b cid2 T acid10 bcid10 3 0 1 T 1 T 1 T 0 T 0 0 We deﬁne operation unit interval tnorm max Both operations commutative associative That distributive law holds concluded following consideration cid6 T b T c cid5 T b T c cid2 max cid7 maxb c cid8 cid5 cid2 max cid6 T b T c T But monotonicity tnorm cid7 maxb c cid8 T cid3 T b T c cid7 maxb c cid8 cid5 cid3 max cid6 T b T c T 1366 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 This shows b c T cid7 maxb c cid8 cid6 cid5 max T b T c b c The operation idempotent number 0 zero element Further A 1 1 A csemiring The following typical tnorms 1 Minimum tnorm T b mina b 2 Product tnorm T b b 3 Lukasziewicz tnorm T b maxa b 1 0 4 Drastic product T 1 T 1 T b 0 cases In ﬁrst case tnorm idempotent So csemiring induces complete distributive lattice This case examples We shall later Section 5 different tnorms distinguish important aspects We note distributivity depends monotonicity tnorm 1 unit element We generally require element e 0 1 unit element Then obtain uninorm 63 semiring albeit necessarily csemiring Further instead max operation commutative associative nondecreasing binary operation uninorm If unit element number 0 uninorm called tconorm Then semiring 1 zero element We refer 1833 information uninorms tnorms The concepts tnorms tconorms important possibility theory fuzzy set theory Example 7 Multidimensional semiring Let A semiring operations We deﬁne An operations follows a1 b1 bn a1 b1 bn a1 b1 bn a1 b1 bn Clearly operations inherit associativity commutativity distributivity operations A So An comes semiring Also A idempotent An The true operation If A zero element 0 0 0 zero element An If 1 unit element A 1 1 unit element An Thus A csemiring An 3 Valuation algebra induced semiring The examples section richness semirings In section algebraic structure called valuation algebra induced semiringvalued mappings A wide variety important reasoning problems expressed terms valuation algebra solved local computations based join tree decomposition Frameworks similar semiringinduced valuation algebras described 1 describes number important applications techniques 1314 framework 32 viewed way 31 Avaluations Consider variables X Y For variable X let ΩX ﬁnite set possible values X called frame X We assume frame ΩX contains elements Sets variables designated lowercase letters like x y r s t These sets ﬁnite For set s variables let Ωs denote Cartesian product frames ΩX variables s Ωs cid9 ΩX Xs J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1367 The elements Ωs called tuples conﬁgurations domain s3 We use lowercase boldface letters x y denote tuples It convenient include case s We adopt convention frame set variables consists single tuple denoted cid19 Ω cid19 If x tuple domain s t s xt denotes projection x subdomain t In particular x cid19 Sometimes order emphasize decomposition tuple x components belonging disjoint subsets t s t s write x xt xst Consider set A operations assumed commutative associative write A triple cid6A cid7 An Avaluation φ domain s associates value A conﬁguration x Ωs φ function Ωs A We denote set valuations domain s Φs Consider nonempty set variables r let cid10 Φ Φs sr set Avaluations D denotes lattice subsets set variables r D Pr powerset r For valuation φ Φ deﬁne labeling function d Φ D dφ denotes domain valuation φ dφ s φ Φs We use operations A deﬁne operations pair Φ D 1 Combination Φ Φ Φ deﬁned x Ωdφdψ φ ψx φxdφ ψxdψ 2 Projection Φ D Φ deﬁned φ Φ t dφ x Ωt t x φ cid3 φz zΩdφ zt x The deﬁning equation projection written following way decompose tuples z domain s dφ subtuples x belonging domain t subtuples y belonging domain s t z x y t x φ cid3 φx y yΩst Note dφ φ φ We remark projection called marginalization motivated applications probability theory Further projection deﬁned arbitrary sets t simply putting t φ tdφ φ Finally projection deﬁne operation variable elimination variable X X φ φ dφX The following axioms shown sufﬁcient perform local computation based join tree decom position valuations 59 The present form axioms Φ D introduced 3437 In 51 shown axioms sufﬁcient local computation based covering join tree factorization valuations 3 Note terminology valuation algebras differs constraint satisfaction constraint optimization literature relational database literature The frame variable valuation algebra terminology corresponds domain variable constraints literature relational database literature example valuation constraint Example 10 domain valuation scope constraint valuation relation domain valuation relation type A tuple conﬁguration assignment set variables 1368 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1 Semigroup Φ associative commutative combination 2 Labeling φ ψ Φ dφ ψ dφ dψ 3 Marginalization φ Φ s dφ dφs s 4 Transitivity φ Φ t s dφ s t φ t φ 5 Combination φ ψ Φ dφ s dφ dψ sdψ s φ ψ φ ψ A Φ D satisfying axioms called valuation algebra The following theorem basic result connecting properties systems Avaluations properties A It implies Avaluations forms valuation algebra A semiring Conversely Avaluations forms valuation algebra A additive identity element 0 A semiring This theorem implies following converse A Avaluations forms valuation algebra A semiring Almost standard examples valuation algebras expressed Avaluations exception DempsterShafer belief functions In particular formalism covered framework 32 Avaluations semiring A Deﬁnitions 31 33 Theorem 44 Part 2 ﬁrst 3 generalize Theorems 18 19 respectively 8 corresponding standard results probability potentials Theorem 2 Consider Avaluations Φ D combination projection deﬁned 1 Φ commutative semigroup A operation commutative associative 2 Projection transitive 3 If A operation distributes combination property 5 holds Conversely combination property holds exists additive identity 0 A distributes Also combination property holds exists variable frame contains exactly elements distributes Proof 1 The commutativity combination follows directly commutativity operation semiring A deﬁnition combination As associativity assuming φ ψ η valuations domains s t u cid8 cid7 φ ψ η x φxs ψ ηxtu cid8 cid7 φxs η ψ φxs ψxt ηxu cid7 t xtu cid7 xtu u cid8cid8 The result obtain exactly way φ ψ ηx Thus associativity holds Conversely assume Φ commutative semigroup let b c A Consider valuations φx ψx b ηx c conﬁgurations x s Then commutativity implies commutativity b φx ψx φ ψx ψ φx ψx φx b Associativity follows similarly associativity 2 Transitivity projection means simply sum variables steps That t s dφ u x Ωt t x s φ cid3 sx y φ cid3 cid3 φx y z yΩst cid3 yzΩut yΩst φx y z φ t x zΩus 3 The combination property follows easily distributes Suppose φ domain t ψ domain u x Ωs t s t u t s s u s Then x Ωs J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1369 φ ψ sx cid3 φ ψx y cid3 cid7 cid8 φxt ψxsu y yΩtus φxt cid3 yΩus ψxsu y φxt ψ suxsu yΩus sux φ ψ 31 Conversely assume combination property holds Φ D consider triple values b c A Let Y variable frame contains elements y1 y2 Deﬁne valuation ψ dψ Y ψy1 b ψy2 c ψy 0 y ΩY Deﬁne φ dφ φcid19 φ ψ scid19 cid8 cid7 φcid19 ψy b c cid3 yΩY On hand left hand equation equals Combination property Φ D φ ψ sucid19 φcid19 ψy b c cid3 yΩY This shows b c b c triple b c distributivity holds A The argument works zero element A exists variable Y frame precisely elements cid2 If A semiring property 1 Theorem 2 means semigroup axiom satisﬁed property 2 assures transitivity axiom property 3 combination axiom The labeling axiom marginalization axiom satisﬁed deﬁnition combination marginalization Avaluations This shows Avaluations Φ D valuation algebra A semiring This implies local computation possible Avaluations solution following problem Deﬁnition 1 Projection Problem Given set valuations φ1 φn set domains sj r compute φ1 φn sj j 1 m 32 The graphical structure underlies local computation join tree tree nodes labeled domain λi node k lies path node node j λk λi λj This condition called running intersection property If domains dφi projection problem form join tree sj subset dφi projection problem solved sequence combinations projections place domains join tree nodes domains dφi bigger domains 323437535559 One wants possible generate join tree large nodes tree decomposition small treewidth 10 example 225 survey paper 11 approaches problem A strong condition local computation worked 51 states domains dφi covered join tree node If valuation algebra Φ D neutral elements factors easily extended corresponding node domains However Avaluation algebras neutral elements examples exist proposed extension valuations join tree domains efﬁcient In 51 shown extension necessary local computation possible valuation algebras neutral elements This fact adjoin neutral element e φ e φ elements φ valuation algebra element exist algebra We modiﬁcation ShenoyShafer propagation scheme 1370 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 Consider projection problem 32 assume join tree J V E nodes labeled λk k 1 V 1 n k dφi λk j 1 m h sj λh Then J called covering join tree family projection problems We deﬁne assignment mapping 1 n 1 V dφi λai deﬁne ψk iaik φi If assigned k deﬁne ψk e We cid11 ncid12 ucid12 ψk φi φ i1 k1 dψk λk k 1 u 33 According 59 messages μkj computed neighboring nodes join tree In 51 messages deﬁned covering join tree follows nek denotes set neighbor nodes k join tree cid13 μkj ψk cid12 cid14ωkj λj μik inekicid9j ωkj dψk cid10 inekicid9j dμik These messages computed sequentially starting leaves join tree The marginals factor ization respect nodes covering join obtained λk ψk φ cid12 μik inek 34 Example 8 Fig 1 illustrates complete run ShenoyShafer architecture presenting domains ωij messages μij step The factors distributed nodes covering join tree domains dψ1 A B dψ2 C dψ3 A B C dψ4 A C D Note end node k combination 34 executed This procedure involves redundant computations nodes join tree neighbors Therefore Shenoy 58 proposes variant method join tree transformed binary join tree join tree nodes neighbors join tree Fig 1 binary join tree Since target domains sj subsets λk ﬁnally marginals projection problem computed local computations computations involving combinations marginalizations domains λk join tree To complete discussion general semiringinduced valuation algebras add remarks addi tional properties importance If semiring A induces valuation algebra Φ D unit element 1 domain s valuation esx 1 x Ωs This neutral valuation semigroup Φs deﬁned combination φ Φs es φ φ es φ These neutral elements satisfy following property Theorem 3 Neutrality If semiring A inducing valuation algebra Φ D unit element s t r es et est Proof We deﬁnition x Ωst es et x esxs et xt 1 1 1 cid2 In general true projection neutral valuation es subdomain t s neutral element et A counter example provided probability potentials Example 9 In example J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1371 ωij ω13 dψ1 ω23 dψ2 ω34 dψ3 dμ13 dμ23 μ34 ψ3 μ13 μ23ω34λ4 ω43 dψ4 ω31 dψ3 dμ43 dμ23 μ31 ψ3 μ43 μ23ω31λ1 ω32 dψ3 dμ43 dμ13 μ32 ψ3 μ43 μ13ω32λ2 Message content μ13 ψ μ23 ψ ω13λ3 1 ω23λ3 2 ω43λ3 4 μ43 ψ 1 2 3 4 5 6 Fig 1 A complete run ShenoyShafer architecture t s x e cid3 yΩst esx y Ωst esx y 1 In case csemirings neutral elements project neutral elements This important property called stability Theorem 4 Stability The valuation algebra Φ D induced semiring A unit stable s t s r holds t s e et addition operation semiring idempotent Proof Assume idempotent Let x Ωt Then obtain t s x e cid3 cid3 esx y 1 1 35 yΩst yΩst This shows e t s et cid2 Stability important permits extend valuations given domain superdomain generally transport valuations domains domains 3453 This means case csemirings valuations regarded generalized constraints extended larger domains domain variables More precisely φ valuation domain s s t r t def et φ φ 1372 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 valuation domain t labeling property Theorem 2 Using combination property Theorem 2 stability ﬁnd t φ s et φ s e t So entitled φ s generally transport valuation φ domain s domain t φ es φ φ s t vacuous extension φ change content We t φ st t φ In case valuations φ ψ domains s t represent constraint t ψ ψ s φ φ In sense φ φr represent constraint Therefore treat constraints level set r variables In particular easily proved r r φ 1 φ1 φk φ r k So stability important want consider valuations generalized constraints soft constraints fuzzy constraints We refer 34 discussion stability consequences If semiring A inducing valuation algebra Φ D null element introduces null absorbing elements respect combination Φs In fact deﬁne x Ωs zsx 0 Then φ valuation domain s zs φx zsx φx 0 Thus zs φ zs φ Φs zs null absorbing element Φs Intuitively expect valuation φ domain s projects null valuation domain t s null element This automatically case For example consider semiring real numbers 0 φ t x cid3 φx y yΩst necessarily φx y 0 tuples However happen semiring positive Theorem 5 Nullity If positive semiring A null element induces valuation algebra Φ D s t s r t zt φ implies φ zs Proof Let x Ωt Then cid3 0 φ t x φx y yΩst implies positivity semiring φx y 0 tuples cid2 A null valuation represents generally contradiction If example csemiring induced valuation algebra φ ψ zst general constraints contradictory common nonzero conﬁgura tions In particular projection problem respect set yields null element φ1 φn z means set generalized constraints φ1 φn totally contradictory satisﬁable So null elements play important role J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1373 32 Examples semiringinduced valuation algebras Example 9 Probability potentials If A semiring nonnegative real numbers Example 1 Section 2 corresponding valuations called probability potentials They inference probability networks especially Bayesian networks 4154 In fact represent normalization discrete probability densities families conditional probability densities The combination pointwise multiplication models computation multidimensional densities prior densities conditional densities example px y pxy py Projection corresponds usual marginalization operation probability theory Essentially projection problem consists computing marginal factorized probability distribution This basic problem example Bayesian networks We refer 34 discussion use valuations inference probabilistic networks If usual addition replaced max operator resulting valuation algebra serves compute maximum likelihood probable values conﬁgurations Example 15 Example 10 Relational constraint systems CSPs If use Boolean semiring Example 2 Section 2 valuation φ domain s deﬁnes relation domain s set tuples Rφ cid5 x Ωs φx 1 cid6 This relation considered crisp constraint variables s Combination valuations φ ψ domains s t corresponds natural join corresponding relations Rφψ Rφ cid23cid24 Rψ x Ωst xs Rφ xt Rψ Projection corresponds ordinary projection relations Rφt πt Rφ xt x Rφ This gives subset relational algebra useful query processing relational databases constraint solving The projection problem formulated terms set constraints consists computing set tuples s extended tuples satisfying constraints If projection set problem ﬁnd constraints solution φ 1 φ 0 Example 11 Propositional logic This variant previous example consider binary Boolean variables X Tuples x Boolean vectors Valuations φx 0 1 represent constraints deﬁned formulae propositional logic The projection problem φ1 φn problem decide set propositional formulae deﬁning valuations φ1 φn satisﬁable We refer 36 discussion local computation propositional logic Further Mengin Wilson 45 study local computation logic general Example 12 Setbased constraints We generalize example replace 0 1 general Boolean algebra A This instance csemiring distributive lattice Example 4 Section 2 In particular subsets set generate csemiring Let D ﬁnite set Deﬁne A cid62D cid7 null element unit D A set subsets D The ordering cid11 equals As example consider k binary variables ai 1 k taking values 0 1 The vector binary variables takes value 0 1k Let A P0 1k power set 0 1k A valuation φx considered statement x acceptable tuple φx The variables ai considered unknown assumptions hold If example c Ωs deﬁne φx Ac A x c φx A valuation deﬁnes assumptionbased constraint If assumption Ac holds x belong constraint c x free Combination assumptionbased constraints φ1 φ2 corresponding constraints c1 c2 gives new assumptionbased constraint example Ac2 means x belongs c1 c2 φx Ac1 means x belongs c1 φx Ac1 belong c2 This related assumptionbased reasoning 19 enriched probabilistic structure 1374 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 set assumptions leads probabilistic argumentation systems 27 Of course simple Boolean semiring previous example special case general example Example 13 Counting solutions CSP Here semiring A cid6N 0 cid7 null element 0 unit 1 As Example 10 conﬁguration x solution CSP φx 1 But φcid19 φx equals number solutions CSP The value φXx example number solutions satisfying assignment X x xΩr cid2 Example 14 Possibilistic constraints fuzzy sets If semiring A tnorm multiplication max addition Example 6 Section 2 valuation φx called possibilistic distribution possibilistic constraint fuzzy set The tnorm compute intersections fuzzy sets possibilistic constraints And maxoperator serves compute projections fuzzy sets constraints More generally tconorm projection This related soft constraints 49 Example 15 Optimization weighted CSPs Consider max min semiring reals Example 5 Section 2 Suppose n valuations domains s1 sn s1 sn r If combine project combination domain x Ω φ1 φn cid19 max x cid7 cid8 φ1xs1 φnxsn This projection problem optimization problem solved local computation 57 If multiplication ordinary multiplication instead projection problem corresponds maximization probability Bayesian network These examples illustrate number different systems represent different problems As explained projection problem instances solved generic local computation procedure However structural differences examples cases exploited design alternative efﬁcient local computation architectures This discussed following Sections 4 5 4 Idempotent valuation algebras This section considers special case idempotent valuation algebras We derive sufﬁcient conditions semiring induce idempotent valuation algebra allows computation performed especially efﬁcient computational architecture 41 Idempotency A valuation algebra Φ D called idempotent following additional property holds For φ Φ t dφ φ φ t φ This property like valuation φ interpreted piece information strict sense An information combined piece new The existence neutral elements es domains s representing vacuous information relative domain s usually required Further focusing projection vacuous information yield vacuous information stability hold So formally information algebra valuation algebra 1 neutral elements satisfying neutrality Theorem 3 2 satisfying stability Theorem 4 3 satisfying idempotency J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1375 Important examples information algebras relational ordinary constraint systems systems related logic propositional predicate logic The idempotency property hold particular t dφ s tuples x Ωs φx φ φx φx φx This implies operation semiring idempotent As seen stability idempo tency operation sufﬁcient condition Thus sufﬁcient condition semiring A induce idempotent stable valuation algebra A csemiring idempotent multiplication By Theorem 1 semiring A distributive lattice supremum inﬁmum The question A distributive lattice sufﬁcient induced valuation algebra idempotent The answer afﬁrmative In fact x Ωs corresponds inﬁmum φ φ t x φx φ t xt cid2 φx On hand ﬁnd x Ωt y Ωst φ φ t x y φx y φx ycid10 cid3 ycid10Ωst cid3 φx y φx y φx y φx y term sum We x Ωs φ φ t x φx Thus idempotency holds If lattice element cid18 clearly neutral elements esx cid18 exists sets variables s satisfy neutrality Theorem 3 stability Theorem 4 We proven following theorem Theorem 6 The valuation algebra induced semiring A information algebra stable idempotent valuation algebra semiring A distributive lattice element Information algebras Φ D interesting properties detailed account 34 Idempotency allows example deﬁne partial order Φ similar A φ cid3 ψ φ ψ ψ This partial order4 Clearly φ cid3 ψ implies t dφ dψ s x Ωs φxt ψx ψx φxt cid3A ψx So information order induced order underlying lattice A There examples information algebras induced semirings They include relational systems CSPs propositional logic valuation algebras induced distributive lattices 42 Local computation information algebras Most important computational point view idempotency allows simplify considerably architectures solution projection problem The point division trivial idempotent valuation algebras Section 5 architectures local computation proposed Bayesian networks 2941 considerably simpliﬁed 34 Here corresponding local computation architecture sketched proofs refer 3451 Consider projection problem 32 assume join tree J nodes labeled λk k 1 u Let ψk valuations associated nodes k 33 4 In 34 order deﬁned way round φ cid2 ψ meaning φ informative ψ combination ψ change More interesting variant order applies domainfree valuations 34 1376 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 ncid12 ucid12 ψk φi φ i1 k1 dψk λk k 1 u The marginals φλk computed k 1 u local computation scheme follows An arbitrary node join tree u selected root node All edges directed root nodes numbered j node path node j root node u The neighbor node k root node denoted chk For node join tree store associated items denoted χi ωi To initiate algorithm assign k 1 u χk ψk ωk dψk Then ﬁrst phase k 1 u repeat following steps Send message ωkλchk μkchk χ k neighbor chk In node chk combine incoming message storage content χchk χchk μkchk update ωchk ωchk ωk λchk This called collect algorithm In second phase repeat k u 1 1 following steps Send message μchkk χ λchkλk chk child chk k k In receiving node k combine incoming message stored valuation χk χk μchkk The second phase called distribute algorithm For proof following theorem refer 3451 Theorem 7 In second phase stored valuation χk node k sending messages outward neighbors equal marginal φλk Example 16 Reconsider join tree Fig 1 previously Example 8 let φ ψ1 ψ2 ψ3 ψ4 For idempotent architecture determine Message content 1 μ13 χ 2 μ23 χ 3 μ34 χ 4 μ43 χ 5 μ31 χ 6 μ32 χ ω13λ3 1 ω23λ3 2 ω34λ4 3 λ4λ3 4 λ3λ1 3 λ3λ2 3 ψ ψ ω13λ3 1 ω23λ3 2 φλ4λ3 φλ3λ1 φλ3λ2 χ χ3 χ3 μ13 ψ3 μ13 χ3 χ3 μ23 χ4 χ4 μ34 ψ4 μ34 φλ4 χ3 χ3 μ43 φλ3 χ1 χ1 μ31 ψ1 μ31 φλ1 χ2 χ2 μ32 ψ2 μ32 φλ2 Note messages collect algorithm steps 13 correspond exactly messages ﬁrst steps ShenoyShafer architecture Example 8 For computation χ steps 36 apply Theorem 7 It important note difference ShenoyShafer architecture message cache needed computation messages distribute algorithm refer messages collect algorithm Since target domains sj marginal φsj desired contained domains λk follows marginals obtained local computation covering join tree J J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1377 5 Division valuation algebras There efﬁcient architectures local computation use concept division One advantage architectures respect ShenoyShafer architecture like idempotent architecture efﬁcient join tree binary These architectures developed probabilistic networks 2941 But applied systems provided share properties probabilistic systems The essential point valuations kind inverses 40 However sufﬁcient inverses satisfy consistency conditions relative marginalization 34 In section want examine exactly conditions semiring A satisfy order induce valuation algebra allows local computation architectures In fact 34 regular separative valuation algebras shown allow architectures division proposed 2941 The question kind semirings induce valuation algebras appropriate concept division The problem solved studying introduce division5 semirings generally com mutative semigroup multiplication semiring This studied problem semigroup theory The simplest case regular semigroup decomposes union disjoint groups 17 We Section 51 corresponding regular semirings induce regular valuation algebras valuation algebras decompose disjoint union groups This identiﬁed ﬁrst case local computation architectures division generalized probability theory work Two cases considered cancellative algebras Section 52 separative semirings leading separative valuation algebras Section 53 51 Regular algebras A semigroup A operation called regular A element b A b The theory regular semigroups semigroups inverses developed 17 summarize results far need Two elements b A called inverses b b b b In regular semigroup element unique inverse denote a1 Further element A element a1 idempotent These idempotent elements A play important role First f1 f2 A idempotent elements f1 f2 idempotent There partial order idempotent elements A deﬁned f1 cid2I f2 f1 f2 f1 And f1 f2 largest lower bound f1 f2 Let A denote set elements b b A Then regular semigroup A exists elements unique idempotent element f A f A The relation b A b A equivalence relation A socalled Green relation And furthermore a1 b1 a2 b2 a1 a2 b1 b2 congruence semigroup A Let denote congruence class containing Then commutative group group operation a1 inverse unique idempotent fa congruence class unit element Thus cid10 A aA union disjoint family groups We remark partially order groups deﬁning cid2I b fa cid2I fb The group called support If A semiring regular regular semigroup operation We introduced notion positive semiring Section 2 For regular semirings strengthen notion semiring A positive b A cid2I b Note case regular semiring A zero element 0 idempotent 0 0 Hence A positive new sense b 0 implies 0 Therefore A positive sense 5 This problem considered brieﬂy 1314 suggest adding condition multiplication invertible weaker conditions sufﬁcient 1378 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 Here follow examples Example 17 Arithmeticsemirings Consider set reals R ordinary addition multiplication ﬁeld reals This regular semiring In case A 0 group 1 unit element 0 oneelement group So decomposition A groups A 0 cid7 A 0 cid8 It holds 0 cid2I cid9 0 This holds restrict A nonnegative real numbers R 0 However semiring reals positive The semiring nonnegative reals R 0 hand positive This case probability potentials The arithmetic semiring integers N nonnegative integers N 0 regular Example 18 tnorms Most tnorms regular The Lukasziewicz tnorm example clearly regular The product tnorm regular previous example shows The mint norm regular idempotent Example 20 Example 19 Multidimensional semiring real numbers We refer Example 7 Section 2 If semiring A regular multidimensional semiring An clearly regular Let A example semiring reals usual operations addition multiplication The idempotents semiring An vectors consisting components 0 1 If deﬁne support vector f set variables suppf components equal 1 f1 cid2I f2 suppf1 suppf2 We identify support suppfa The inverse element a1 element n inverse 0 0 The regular semiring An positive regular semiring A positive We An example semiring decomposes groups fact 2n groups 1 1 a1 Example 20 Idempotent semirings If A semiring idempotent operation A trivially regular Each element idempotent inverse Thus element forms trivial group If A csemiring order cid2I identical order cid2A Then A positive induced information algebra regular We regular positive semiring A induces regular valuation algebra 34 A valuation algebra Φ D called regular 34 φ Φ t dφ exists valuation χ domain t φ φ t χ φ 51 Note implies Φ regular semigroup combination provided φdφ φ However deﬁnition 51 regularity involves projection operation essential want use architectures local computation division 34 Clearly necessary condition semiringinduced valuation algebra regular underlying semiring regular This sufﬁcient We claim regular positive semiring induces regular valuation algebra Theorem 8 Let Φ D valuation algebra induced regular positive semiring A Then Φ D regular Proof Suppose dφ s Take x Ωt Deﬁne cid81 χx t x cid7 φ Then x Ωs φ φ t χx φx φ φx φ φx fφt t xt χxt t xt cid7 φ t xt cid81 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1379 We use abbreviations fφ fφt fφx fφt xt Thanks positivity A φx cid2I φt xt x Ωs fφ cid2I fφt φx fφt φx fφ fφt φx fφ fφt φx fφ φx This shows 51 holds cid2 The examples positive regular semirings presented induce regular valuation algebras They include probability potentials possibility potentials multiplication tnorm For regular valuation algebras use LauritzenSpiegelhalter architecture LSarchitecture 41 HUGINarchitecture 29 Section 54 However regularity necessary applicability architectures restrictive properties allow architectures 52 Cancellative algebras There important examples A regular For example consider max semiring non negative integers Example 5 Section 2 regular nonnegative integer b b However negative integer b serve solution equation The arithmetic semirings integers regular inverses integers exist rational numbers In examples commutative multiplicative semigroup semiring embedded larger groups The ﬁrst example generalized follows A semigroup A called cancellative b c implies b c 15 Such semigroup embedded group G following way We consider pairs b b A deﬁne b c d d b c Multiplication pairs deﬁned b c d c b d This deﬁned multiplication clearly commutative associative The unit e multiplication given pairs Then b b b b e So b b inverses set G pairs b group The semigroup A embedded G mapping cid26 If A unit element 1 1 cid26 1 1 e In following consider A subset group G We semiring cancellative semigroup A operation cancellative Example 21 Tropical semirings If multiplication deﬁned addition tropical max min semirings nonnegative integers N 0 semiring cancellative b c implies b c This holds nonnegative reals R 0 To pair numbers b assign difference b necessarily semiring Clearly additive semigroup embedded group G integers The max semiring integers reals group addition Example 22 Positive arithmetic semirings The semiring strictly positive integers reals ordinary addition multiplication cancellative In case reals multiplicative semigroup group A G This A cancellative regular Note semirings nonnegative integers real numbers cancellative 1380 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 A valuation algebra Φ D called cancellative s D semigroup Φs cancellative When valuation algebra induced cancellative semiring x Ωs φx ψx φx ηx follows x Ωs ψx ηx valuation algebra Φ D cancellative The converse shown considering valuations domain Hence Φ D induced semiring cancellative semiring cancellative In case Φs embedded group Gs fact group valuations φ Ωs G The inverse φ deﬁned 1x φ cid7 φx cid81 x Ωs The unit element group Gs deﬁned esx e G x Ωs If e belongs A e 1 unit semiring A So Φ semigroup embedded disjoint union groups cid10 Gs sD If A unit element es belongs Φ outside Φ Also inverses φ1 general belong Φ We note es et x esxs et xt e e e est x This implies φ dφ s t s φ et φ es et φ es φ This condition existence inverse valuations outside Φ sufﬁcient permit use LS HUGIN architectures local computation valuation algebra induced cancellative semiring Section 54 3451 53 Separative semirings Above noted arithmetic semiring nonnegative integers N 0 cancellative regular Yet possible embed union disjoint groups group 0 multiplicative group positive rational numbers This indicates general cases commutative semigroups embedded union disjoint groups 1561 The corresponding semirings additional conditions generate valuation algebras allow use architectures division In fact known semigroup theory 152861 commutative semigroup embedded semigroup union disjoint groups separative This means expressed operation semiring A b A b b b implies b Now Φ D valuation algebra induced semiring A semigroup separative semiring separative So semigroup embedded semigroup union disjoint groups But sufﬁcient application local computation architectures division 34 We need additional condition links separativity marginalization operation underlying semiring The reason local computation division inverses divide marginals φt valuation φ time later marginal multiplied So essentially combination marginal inverse gives neutral element f group neutral respect φ φ group general φ φ t 1 φ t φ f φ This additional condition guarantee J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1381 In section develop corresponding theory covers preceding structures Sections 51 52 special cases So let Gα α Y family disjoint groups union G cid10 Gα αY semigroup assume multiplicative semigroup semiring A cid6A cid7 embedded This means injective mapping h A G ha b ha hb left multiplication A right semigroup operation G This situation assume multiplicative semigroup A separative For clarity identify element A image ha G assume loss generality A G There unique unit element fα group Gα This idempotent element fα fα fα Let f idempotent element G Then f belongs group Gα f f f fα implies f fα So unit elements groups Gα idempotent elements G Thus semiring possesses unit element unit element group Now fα fβ idempotent element fα fβ fγ γ Y We deﬁne α cid2 β fα fβ fα This relation clearly reﬂexive antisymmetric transitive partial order elements Y Now fα fβ fγ follows γ cid2 α β Let δ Y lower bound α β fα fδ fδ fβ fδ fδ Then fγ fδ fα fβ fδ fα fδ fδ So δ cid2 γ γ greatest lower bound α β write γ α β We fα fβ fαβ The family Y groups forms semilattice partially ordered set inﬁmum exists pair elements We denote inverse element element group Gα a1 Then a1 fα Suppose b group Gβ Then b a1 b1 fα fβ fαβ Therefore b1 a1 b1 Suppose b Gγ Then b1 Gγ b b1 fγ But seen fγ fαβ γ α β b Gαβ We deﬁne b A b belong group Gα This equivalence relation A Assume acid10 b bcid10 Then b acid10 bcid10 relation congruence A This implies equivalence classes equivalence relation A semigroups Thus A decomposes family disjoint semigroups cid10 A aA The partial order Y carries equivalence classes In fact cid2 b b b A b b Thus semigroups form semilattice isomorph Y We equivalence class support Reﬂexivity implies So support We introduce additional requirement generalizes relation links decomposition multiplicative semigroup semiring operation semiring We semiring A cid6A cid7 separative multiplicative semigroup separative addition embedding union groups b A cid2 b 52 This kind strengthening positivity In fact A zero element 52 implies 0 cid2 elements A Also cid11 b Section 2 condition 52 conclude cid2 b Lets illustrate results examples In particular stressed embedding semigroup union disjoint groups necessarily unique second example shows Example 23 Regular cancellative semirings A cancellative semiring Section 52 clearly separative cancellativity implies b follows b Condition 52 trivially satisﬁed 1382 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 support A regular positive semiring Section 51 separative regularity implies element A inverse A b b b follows b group b decomposition semiring multiplying inverse b follows fa b b Condition 52 required regular semirings Section 51 So regular cancellative semirings particular cases separative semirings In ﬁrst case multiplicative semiring decomposes semilattice semigroups semilattice groups second case semigroup embedded group Example 24 Arithmetic semirings Some arithmetic semirings Example 1 regular cancella tive But consider arithmetic semiring nonnegative integers N 0 It cancellative regular But separative It decomposes semiring 0 arithmetic semiring natural numbers N The ﬁrst trivial group second embedded multiplicative group positive rational numbers And union nonnegative rational numbers form multiplicative semiring The partial order groups 0 cid2 N Condition 52 holds So arithmetic semiring separative There alternative embedding multiplicative semigroup Consider ﬁnite sets prime numbers For set prime numbers natural numbers factor exactly prime numbers form semigroup embedded group The partial order semigroups deﬁned set inclusion However decomposition condition 52 satisﬁed For example 2 3 5 2 cid9cid2 5 2 subset 5 Example 25 Nonnegative semirings In cases semiring A cid6A cid7 zero element decomposes multiplicative semirings 0 A 0 If cancellative semiring separative It embedded semiring union group 0 group G A 0 embedded In fact 0 G semigroup deﬁne 0 g 0 g G The partial order groups 0 cid2 A 0 Further 0 b b b A condition 52 clearly satisﬁed The previous example belongs class separative semirings But arithmetic semiring example replace addition max operator remains separative semiring Example 26 Multidimensional semirings Consider multidimensional semiring Example 7 cid6An cid7 component semiring A cid6A cid7 separative Clearly multidimension multiplicative semigroup separative If A embedded union disjoint groups Gα multiplicative semigroup An embedded union disjoint Cartesian product groups Gα Gαn fα1 fαn It follows α1 αn cid2 β1 βn The idempotent elements groups fα1αn αi cid2 βi 1 n In way a1 cid2 b1 bn ai cid2 bi It follows immediately condition 52 satisﬁed multidimensional semiring A Gα1αn Gα1 If semiring A cancellative zero element A 0 If semiring zero element 0 let b 0 let c arbitrary element semiring The cancellative property semigroups implies c 0 In particular csemirings cancellative It natural consider weaker cancel lation property 7 let A weakly cancellative b c A cid9 0 b c b c This property implies b 0 0 b 0 If semiring weakly cancellative separative For suppose b b b 0 b b 0 b 0 Otherwise cid9 0 b implies b A separative semiring satisﬁes cid9 0 cid9 0 Consider A 0 1 2 k k cid3 2 semiring addition operation minimum semiring multiplication integer addition truncated result k The value k zero element semiring value 0 unit element This important semiring reasoning weighted constraints 39 k arises weight best solution far It separative consider example k b k 1 More generally consider totally ordered csemiring corresponds valuation structure valued CSPs 9 exists idempotent element nonidempotent element b b J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1383 element b Then b b b cid3 b b b implying semiring separative Because fair valuation structures 16 viewed totally ordered semirings separative The use kinds division semirings soft constraints studied 716 Let A cid6A cid7 separative semiring Φ D valuation algebra induced semiring Then combination semigroup Φ separative φ ψ φ φ ψ ψ implies φ ψ So semigroup embedded semigroup union disjoint groups In fact decomposition purposes particular induced decomposition underlying semiring A The decomposition A induces congruence combination semigroup Φ follows φ ψ 1 dφ dψ 2 x Ωdφ φx ψx This clearly equivalence relation Φ Assume φ ψ φ η dφ dψ dη s Then follows dφ ψ dφ η s x Ωs φx ψx φx ηx So equivalence combination congruence Φ It follows equivalence classes φ subsemigroups combination semigroup Φ For valuation φ dφ s deﬁne mapping spφ Ωs Y Y semilattice group decomposition separative semiring A spφx α φx Gα Note mapping deﬁned spφ spψ φ ψ We deﬁne valuation φ dφ s Gφ cid5 g Ωs G x Ωsgx Gspφx cid6 It follows Gφ group semigroup φ embedded The unit element fφ group Gφ given fφx fspφx The inverse φ deﬁned φ1x φx1 This induces partial order φ cid2 ψ fφx cid2 fψx x Ωs φ ψ φ In fact semilattice fφψ fφ fψ The union groups cid10 G Gφ φΦ semigroup In fact g1 Gφ g2 Gψ g1 g2 deﬁned x Ωst dφ s dψ t g1 g2x g1xs g2xt belongs Gφψ We equivalence φ φ φ φ semigroup But separativity underlying semiring A follows t dφ x Ωs cid16 cid15 φx cid15 φ This means φ cid2 φt cid16 t xt cid2 t φ φ φ This condition guarantees t 1 φ φ φ t φ fφt φ 53 54 1384 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 neutral element fψ φ cid2 ψ fψ φ φ 34 This turn needed local computation architectures division applicable 34 A valua tion algebra Φ D combination congruence satisﬁes condition equivalence classes φ cancellative semigroups called separative valuation algebras 34 Lets illustrate results important example nonnegative semirings Example 27 Valuation algebra induced nonnegative semiring According Example 25 nonnegative semiring A cid6A cid7 embedded union groups 0 G group G contains positive A 0 semiring A If Φ D valuation algebra induced semiring deﬁne support suppφ valuation φ domain dφ s cid6 cid5 x Ωs φx cid9 0 suppφ Then particular case congruence φ ψ holds exactly valuations support suppφ suppψ equivalence class φ contains valuations domain φ support In case arithmetic nonnegative semirings clear equivalence class deﬁne inverse valuation φ φ 1x 1 φ1x x suppφ φ1x 0 This deﬁnes group Gφ The partial order classes φ groups Gφ deﬁned inclusion supports φ cid2 ψ suppφ suppψ 54 Local computation division As claimed semiringinduced valuation algebras division deﬁned division underlying separative semiring local computation architectures proposed probability potentials LS HUGINarchitectures applied In LSarchitecture ﬁrst collect algorithm executed architecture idempotent valuation algebras node node content χi divided outgoing message chi So node store χi χi cid7 si schi χ cid81 After collect algorithm distribute algorithm follows exactly idempotent architecture For proof correctness architecture valuation algebras division described previous sections refer 34 The idempotent architecture local computation Section 42 special case LSarchitecture information algebras element inverse The HUGIN architecture variant LSalgorithm nodes chi join tree additional node socalled separator introduced The collect algorithm originally message μichi stored separator After collect algorithm distribute phase follows node starting root node m sends messages idempotent architecture However message sent separator nodes divided inverse content separator μchii μichi 1 This message arrives node combined node content χi The difference LSarchitecture division occurs smaller domain si schi separator instead domain si This advantage In distribute phase node k ready send message stores χk φλk We refer 3451 proof correctness architecture regular separative valuation algebras Example 28 Reconsider join tree Fig 1 previously Examples 8 16 Fig 2 illustrates complete run HUGIN architecture φ ψ1 ψ2 ψ3 ψ4 The collect algorithm corresponds ﬁrst steps ShenoyShafer architecture message stored separator node represented diamond ﬁgure Steps 36 use correctness algorithm computation χ J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1385 For collect algorithm messages Message separator 1 2 3 ω13λ3 1 ω23λ3 2 ω34λ4 3 χ χ χ ψ ψ ω13λ3 1 ω23λ3 2 Message separator μ13 ψ μ23 ψ μ34 χ ω13λ3 1 ω23λ3 2 ω34λ4 3 χ χ3 χ3 μ13 ψ3 μ13 χ3 χ3 μ23 χ4 χ4 μ34 ψ4 μ34 φλ4 In distribute phase Message separator λ4λ3 4 λ3λ1 3 λ3λ2 3 χ χ χ φλ4λ3 φλ3λ1 φλ3λ2 4 5 6 Message separator μ43 φλ4λ3 μ341 μ31 φλ3λ1 μ131 μ32 φλ3λ2 μ231 χ χ3 χ3 μ43 φλ3 χ1 χ1 μ31 φλ1 χ2 χ2 μ32 φλ2 Fig 2 A complete run HUGIN architecture It stressed architectures inverses computation elements outside valuation algebra ﬁnal results nodes join tree belong algebra Moreover division allows deﬁne concepts like conditional valuations generalizing conditional probabilities Then original factorization element valuation algebra factors need necessarily elements algebra local computation architectures return correct marginals This permits generalization Bayesian networks general structures probability potentials For details refer 34 6 Propagating upper lower bounds A problem join tree based computational schemes including fusion bucket elimination propagation tend feasible sets variables associated nodes join tree small However given problem able ﬁnd join tree particular deﬁnition exists join tree induced width treewidth 102332 small In section consider compute upper lower bounds valuations In particular consider adapt general join tree propagation algorithm Section 31 efﬁciently compute bounds projection problem key efﬁciency avoiding having perform hardest combinations involving large number variables The minibuckets miniclustering techniques Dechter et al 202224303143 developed approximations bounds kind number important problems belief updating probable explanation combinatorial optimization weighted constraints We kind algorithmic 1386 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 approach general applied general semiringinduced valuation algebras6 valuation algebras Upper bounds important optimization problem branchandbound algorithm For example consider problem ﬁnding maximum assignment collection M Avaluations A max semiring Example 5 semiring addition max semiring multiplication The applica tion miniclustering approach semiring branchandbound framework described 22 We generate search tree node tree associated assignment z Ωt set t variables ii multiset M cid10 valuations M variables t instantiated z M M cid10 value maximum assignment extends z value maximum assignment Let b value best solution far suppose efﬁcient algorithm generates upper M cid10 If b cid9 know z extended assignment value better b bound backtrack node given looking single maximal assignment This generalizes semirings idempotent addition including partially ordered semirings cid11 cid11 cid11 Furthermore upper andor lower bounds sufﬁcient answer particular query In problem variables decision variables upper bound sufﬁciently low imply decision adequate In situation lower bound sufﬁciently high imply possible good choice worth investing computation time ﬁnd choice A somewhat different approach approximation given 26 advantage enabling careful control computation time This based usual join tree message passing algorithms combination node approximated computation combination set time limit For probability potentials 26 Section 551 approximate combination performed processing tuples product set sequentially implicitly assigning zeros tuples reached time limit analogous approach suggested DempsterShafer belief potentials A signiﬁcant disadvantage product frame associated node join tree large large number tuples process typically time process tiny fraction tend lead poor approximation individual combination overall result However interesting explore potential combining resourcebounding ideas 26 generalized miniclustering approach developed cid11 In Section 61 construct upper lower bounds framework general case valuation algebras associated propagation algorithm Section 62 The join tree propagation algorithms involve repeated Mu Minibucketsclustering application combination followed projection computations form algorithms extended algorithms approximate marginalized combinations produce multiset M cid10 Mu An important feature al valuations combination approximation message gorithms need combine valuations M cid10 instead form inputs approximations messages In Section 63 consider case semiringinduced valuations Section 64 discusses kind algorithm types approximation Another important consideration efﬁciency propagation algorithm number nonzero elements input valuations having nonzero elements makes combination faster In Section 65 shown use preprocessing step constraint propagation potentially decrease number nonzero tuples input valuations This idea taken step Section 66 shown certain types query increase number zeros input valuations changing answer cid11 61 Bounding projection combination In section extend valuation algebras adding associated ordering consider problem constructing upper lower bounds projection combination valuations Our deﬁnition ordered valuation algebra slightly different given 26 6 Independently Chang Mackworth suggested special form kind approximation semiringinduced valuation algebras 13 Section 61 14 They consider approximation methods Aji McEliece 1 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1387 Ordered valuation algebras Φ D cid11 said ordered valuation algebra neutral elements Φ D valuation algebra ii set variables s exists identity element es φ Φ φ edφ φ sets variables s t es et est iii relation cid11 preorder Φ reﬂexive transitive relation orders valuations domain φ cid11 ψ implies dφ dψ furthermore projection combination respect cid11 arbitrary φ ψ χ Φ φ cid11 ψ φu cid11 ψ u u dφ dψ b φ χ cid11 ψ χ This property implies φi cid11 ψi 1 k φ1 φk cid11 ψ1 ψk If φ cid11 ψ φ lower bound ψ respect cid11 ψ upper bound φ The propagation algorithms involve sequences combinations projections Because projection combina tion respect cid11 point replace valuation upper bound result upper bound correct result Similarly lower bounds We extend notion upper lower bounds valuations smaller domains Suppose u dφ dψ We φ ulower bound ψ φ edψdφ cid11 ψ Similarly φ uupper bound ψ ψ cid11 φ edψdφ Least upper bounds greatest lower bounds deﬁned obvious way valuations φ ψ dφ u dψ φ uupper bound ψ φ uupper bound ψ ii φ cid11 θ uupper bound θ ψ If cid11 partial order uupper bound We deﬁne greatest ulower bounds analogously A valuation φ lower bound valuation ψ dψlower bound ψ similarly upper bounds φ e φ edφ e φ edφ φ φ cid11 ψ φ e cid11 ψ The properties neutral elements imply valuation φ set variables q φ eq φ eqdφ This φ edφq φ edφ edφq φ edφ φ φ eqdφ φ edφq eqdφ φ eq In particular implies u dφ dψ φ ulower bound ψ φ edψ cid11 ψ similarly uupper bounds The fusion algorithm bucket elimination join tree propagation algorithms 2132345659 involve repeated Mu application combination multiset M valuations followed projection set variables u If M involves variables infeasible The key minibuckets miniclustering bounding cid11 Mu involve feasible combinations The techniques generate upper lower bounds Mu bounded similarly fundamental result following showing combination multiset valuations derived M involving variables u cid11 cid11 Proposition 2 For 0 k let φi valuation ordered valuation algebra Φ D cid11 let s dφ0 dφk set variables involved valuations let u subset s let t s u dφ0 For 1 k let τi u dφilower bound φi let θi u dφiupper bound φi Then udφ0 udφ0 lower bound φ0 φku φ φ 0 0 upper bound θ1 θk e τ1 τk e t t In Section 63 general ways constructing lower bound functions τi upper bound functions θi semiringinduced valuation algebras For example appropriate conditions θi obtained projecting φi Lemma 2 generalizing approximations MPE problem 24 p 116 discrete opti mization furthermore deﬁning θi pointwise max Section 632 generalizes minibucket approximation belief updating 24 p 120 Proof For 1 k deﬁnition τi edφi u cid11 φi projection respects cid11 commutativity associativity combination φ0 edφ1u edφku τ1 τk 1388 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 lower bound φ0 φk By assumed property neutral elements edφ1u edφku equals edφ1dφku property neutral elements shown φ0 edφ1u edφku φ0 et t dφ1 dφk u dφ0 Hence φ0 et τ1 τk lower bound φ0 φk Since cid11 respects projection implies φ0 et τ1 τk u Write u0 u dφ0 Since t u dφ0 t u u0 The combination axiom implies u cid11 φ0 φk φ0 et τ1 τk u φ0 et u0 τ1 τk τ1 τk involve variables u Because φ0 et involve common variables combination u0t u0 axiom transitivity axiom imply φ0 et u0 φ e t 0 u0 u0 φ 0 u0 u0t φ0 et u0 0 τ1 τk e The upper bound result proved exactly way cid2 cid8u0 φ udφ0 Therefore φ 0 cid7 φ0 et t u0 equals φ 0 et e u0t t lower bound φ0 φku e t Consider situation φi written τi edφi u dτi dφi u case φi depends variables u Then similar argument proof prove udφ0 φ terms general 0 necessary actually equal φ0 φku This shows e τ1 τk e t t udφ0 τ1 τk lower bound φ0 φku φ 0 However applying Proposition 2 able ensure dφ0 contains variables e For ψ ψ e ψ ing eliminated dφ0 s u t e udφ0 θ1 θk upper bound In φ 0 particular applying approximate result fusion algorithm bucket elimination set s u eliminated variables singleton X assumed exists valuation involves variable X e disappear t e e terms disappear Similarly valuation algebra stable terms e t t Approximating Mu performing expensive combinations Let M multiset valuations let u subset variables involved We procedure produces multiset M cid10 valuations combination lower bound Mu similarly procedure generating upper bound furthermore restrict combinations procedures ensure feasible combinations valuations involved These procedures form basis propagation algorithm Sec tion 62 An important point ﬁnal step propagation algorithm approximating multisets M cid10 need combined instead combination M cid10 multisets approximated Proposition 2 gives way approximating marginalized combination Mu performing combinations However typically improve approximations combining valuations ﬁrst performing feasible combinations cid11 cid11 We assume functions UB LB valuation φ set variables u dφ valuation UBφ u u upper bound φ LBφ u ulower bound φ Methods generating UB LB different formalisms derived Section 632 We assume function PartitionInput M B Output M0 M1 Mk takes multiset M nonnegative number B inputs produces multisets M0 M1 Mk partition M size Mi B It assumed implementation functions UB LB Partition involve combinations valuations The size nonempty multiset M valuations intended quicklyevaluated measure hard combine valuations M notion weight functions 48 The size M assumed nonnegative real number generalize partially ordered scale wished allow easy generalization pair parameters m minibuckets approximations 24 The property assume size M singleton size M 0 combining t cid11 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1389 M requires work size deﬁned ways Let M multiset valuations contains φM dφ total number variables valuations One deﬁnition size M dM involved M In case parameter B UpperBoundM u B corresponds parameter minibuckets approximations mbe bel maxi m 24 page 121 We allow deﬁnitions size number variables factor complexity combination Another natural deﬁnition size M ΩdM cardinality frame associated combination valuations M gives upper bound complexity combination Other deﬁnitions possible semiring valuations example account number nonzero values valuations relevant computational efﬁciency valuations cid17 Let M multiset valuations let u subset variables involved M let B nonnegative real number LowerBoundM u B deﬁne algorithm function returns multiset Mu Multiset M valuations combination returned multiset lower bound partitioned multisets sufﬁciently small size B multiset combined Lower bounds results combinations chosen involve variables u Function LowerBoundM u B begin cid11 PartitionInput M B Output M0 M1 Mk For 0 k let φi Let t dφ1 dφk u dφ0 udφ0 Return multiset e φ 0 φMi t cid11 φ LBφ1 u dφ1 LBφk u dφk The algorithm LowerBoundM u B involves performing combinations combination multi set size B Function UpperBoundM u B deﬁned exactly analogous manner practice functions LowerBound UpperBound combined Function UpperBoundM u B begin PartitionInput M B Output M0 M1 Mk For 0 k let φi Let t dφ1 dφk u dφ0 udφ0 Return multiset e φ 0 φMi t cid11 φ UBφ1 u dφ1 UBφk u dφk end end These procedures produce correct bounds projection combination irrespective choice func tions Partition LB UB Furthermore computations require combinations multisets size B cid11 Proposition 3 Whatever choices cid11 valuation LowerBoundM u B combination elements multiset LowerBoundM u B lower Mu Furthermore bound computations LowerBoundM u B UpperBoundM u B involve combination multiset valuations size B UpperBoundM u B upper bound functions Partition LB UB Mu valuation cid11 cid11 cid11 cid11 Proof By Proposition 2 cid11 Mu M0 Mk partition M Similarly Mu The follows deﬁnition Partition cid2 LowerBoundM u B lower bound φ0 φku equal UpperBoundM u B upper bound cid11 Choosing function Partition It possible choose valid function Partition extreme case B 0 choose Mi singleton However choice partition affect closeness approximations Ideally like possible choose Mi combination φi depend variables u 1390 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 If upper bound B size chosen sufﬁciently large choose Partition return single multiset k 0 M0 M In case propagation algorithm Section 62 lower upper bounds reduces essentially exact computation Choosing functions LB UB Section 63 shows generate functions semiringinduced valuation algebras If possible like choose LBφ u uupper bound φ UBφ u greatest ulower bound φ As exist situations 62 Propagation algorithm upper lower bounds Section 31 described propagation algorithm projection problem Eq 32 based ShenoyShafer architecture In section modiﬁed generate upper lower bounds We given valuations φ1 φn set target domains sl l 1 m wish compute upper lower bounds φ1 φnsl l 1 m A value B chosen globally computation ensures compute combination multiset valuations size B The propagation based repeated use functions LowerBound UpperBound described Section 61 We focus general projection problem wish compute bounds single set s1 choose root join tree associated variables contain s1 need send messages root collect algorithm 34 The minibuckets algorithm approximating fusion bucket elimination considered special case join tree generated variable elimination sequence Let sl target domains We require sl small order able perform arbitrary combinations valuations domain sl The reason stage computation combine valuations domain sl smaller Formally assume dψ sl ψ M size M B For example use ﬁrst suggested deﬁnition size assumed B large cardinality target set variables sl Let Lk multiset input valuations associated node k notation Section 31 Lk φi ai k As 2243 message approximate propagations multiset valuations single valuation We inductively deﬁne message μkj message μlower kj pair k j neighboring nodes Formally consider induction length longest path k leaf node doesnt pass j path allowed double kj message μupper Assume induction deﬁned messages μik μupper ik neighbors cid9 j k This includes induction base case k leaf node leaf nodes neighbor ik μlower Let Mkj Lk μik nek cid9 j consisting input valuations associated node k messages coming k directions j Let ukj ωkj λj ωkj set variables involved valuations Mkj λj set variables associated node j As Section 31 deﬁne message μkj Mkj ukj cid11 Analogously let M lower kj Lk let M upper kj Lk cid10 μlower ik inekicid9j cid10 μupper ik inekicid9j We deﬁne μlower kj LowerBoundM lower UpperBoundM upper kj ukj B μupper kj kj ukj B deﬁne Next deﬁne multisets valuations associated ﬁnally node k Let M k Lk μik nek upper Analogously let M k inek μlower inek μupper ik ik M k Lk Lk cid17 cid17 lower J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1391 Let sl target set variables choose ﬁxed deterministic method k node λk sl The valuation φl lower deﬁned cid12cid7 LowerBoundM k cid8 lower sl B φl upper deﬁned cid12cid7 UpperBoundM k cid8 upper sl B The results Schneuwly et al 51 Section 31 imply φ1 φnλk φnsl M ksl transitivity projection axiom cid11 cid11 M k φ1 The lower bound computation involves modifying exact computation successively replacing valuations lower bounds multisets valuations combination lower bound The exact computation involves sequences combinations projections combination projection respect cid11 leads ﬁnal results correct bounds lower lower bound φ1 φnsl upper upper bound Furthermore computation bounds involve combining multisets Theorem 9 With deﬁnitions l 1 m valuation φl φl valuations size B cid11 μlower kj lower bound message Proof We ﬁrst prove induction neighboring nodes j k μkj kj upper bound μkj μupper cid11 cid11 cid11 Then combination respects cid11 valuation cid11 respects cid11 valuation cid11 Assume induction neighbors cid9 j k valuation μupper ik lower bound message μik ik upper bound includes base case induction leaf nodes neighbor Mkj projection Mkj ukj By Proposition 3 kj lower kj upper bound μkj This completes kj ukj transitivity cid11 kj ukj lower bound μkj M lower kj ukj B cid11 LowerBoundM lower lower bound bound μkj In way induction M lower kj μupper M lower μlower μlower cid11 cid11 cid11 cid11 cid11 cid11 Let sl target set variables let k chosen node λk sl Because combination projec cid11 uppersl Using Proposition 3 M ksl cid11 M k M k cid11 cid11 tion respect cid11 ﬁrst implies φl lower LowerBoundM k lowersl cid11 cid8 lower sl B cid12cid7 cid11 φ1 φn sl φ1 φn sl cid11 cid12cid7 UpperBoundM k cid8 upper sl B φl upper The computations involve repeated use functions LowerBound UpperBound involve combination multiset valuations size B followed target set sl ﬁnal combination valuations involving variables sl By assumption sl B size combinations B cid2 63 Application semiringinduced valuation algebras In section discuss generate lower upper bound functions LB UB ordered valuation algebra generated semiring ordering This enables use bounds propagation algorithms previous section semiringinduced valuation algebras 631 Orderings semirings semiringinduced valuation algebras Often wish use relation cid11 order elements semiring cid11 b indicate example b greater degree preference Such relation cid11 A assumed preorder reﬂexive transitive relation 1392 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 We relation cid11 satisﬁes monotone cid11 b c A cid11 b implies c cid11 b c monotone cid11 b c A cid11 b implies c cid11 b c Let equivalence relation corresponding cid11 b cid11 b b cid11 Given monotone cid11 helpful computationally replace semiring A quotient semiring A consisting set equivalence classes A replace Avaluation corresponding Avaluation This lead equivalent upper lower bounds b cid11 c b cid11 c c cid11 c cid11 b In situations natural ordering relation cid11A given cid11A b exists c A c b As shown Proposition 1 Section 2 operations monotone cid11A 0 cid11 A We extend preorder cid11 A relation semiringinduced valuations We deﬁne relation cid11 A valuations φ cid11 ψ φ ψ involve set variables s dφ dψ s x Ωs φx cid11 ψx Proposition 4 Let A cid6A cid7 semiring Let cid11 preorder A If cid11 partial order associated relation cid11 Avaluations ii If monotone cid11 combination Avaluations respects cid11 iii If monotone cid11 projection Avaluations respects cid11 Proof Let φ ψ χ Avaluations φ cid11 ψ Let s dφ dψ s let t dχ For x Ωs φx cid11 ψx Suppose cid11 A partial order ψ cid11 φ To prove relation cid11 Avaluations partial order need φ ψ For x Ωs φx cid11 ψx cid11 φx φx ψx cid11 A partial order This implies φ ψ ii For x Ωst φ χx φxs χxt cid11 ψxs χxt monotone cid11 equals ψ χx showing φ χ cid11 ψ χ required iii Suppose u s let y element Ωu Since monotone cid11 uy φ φx x Ωs xu y ψx x Ωs xu y cid3cid5 cid6 cid11 cid3cid5 cid6 equals ψ uy showing φu cid11 ψ u Hence projection respects cid11 cid2 Consider semiring A cid6A cid7 unit element 1 monotone preorder cid11 For set variables u neutral element eu valuation uniformly equal 1 x Ωu eux 1 By Theorem 2 Proposition 4 Avaluations based ordering cid11 form ordered valuation algebra Therefore results algorithms Sections 61 62 apply We upper lower bound functions LB UB generated 632 Generating upper lower bound functions LB UB For relation cid11 A easy generate upper lower bounds valuation φ involve variables Suppose u proper subset s dφ We deﬁne ulower uupper bounds τ θ follows assignment x Ωu deﬁne τ x lower bound element set φxy y Ωsu θ x upper bound Proposition 5 Let φ τ θ Avaluations suppose u dτ dθ dφ s Then τ ulower bound φ x Ωu τ x lower bound φxy y Ωsu y Ωsu τ x cid11 φxy Furthermore τ greatest ulower bound φ x Ωu τ x greatest lower bound φxy y Ωsu J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1393 Similarly θ uupper bound φ x Ωu θ x upper bound φxy y Ωsu θ uupper bound φ x Ωu θ x upper bound φxy y Ωsu Proof By deﬁnition τ ulower bound φ τ esu cid11 φ z Ωs τ esuz cid11 φz τ zu cid11 φz This x Ωu y Ωsu τ x cid11 φxy Hence τ ulower bound φ x Ωu τ x lower bound φxy y Ωsu Suppose x Ωu τ x greatest lower bound φxy y Ωsu let χ ulower bound φ Then x Ωu χx lower bound φxy y Ωsu χx cid11 τ x χ cid11 τ showing τ greatest ulower bound φ To prove converse suppose τ ulower bound φ exists x0 Ωu τ x0 greatest lower bound φx0y y Ωsu It sufﬁcient τ greatest ulower bound φ There exists lower bound φx0y y Ωsu cid9cid11 τ x0 Deﬁne τ cid10 τ cid10x0 x cid9 x0 let τ cid10x τ x Then ﬁrst τ cid10 ulower bound φ τ cid10 cid9cid11 τ implies τ greatest ulower bound φ The uupper bound results follow similarly cid2 When cid11 lattice deﬁne uupper bounds greatest ulower bounds simple canonical way Least upper bounds greatest lower bounds cid11 deﬁnes lattice Suppose A lattice ordering cid11 Then ﬁnite subset B A upper bound write sup B greatest lower bound inf B In particular cid11 total order sup max respect cid11 inf min For Avaluation φ Ωs A subset u s deﬁne valuations φu φcid2u set variables u follows x Ωu let φux supφz z Ωs zu x φcid2ux infφz z Ωs zu x Then Proposition 5 φu uupper bound φ φcid2u greatest ulower bound φ Hence deﬁne lower bound function LB propagation algorithms LBφ u φcid2u deﬁne upper bound function UB UBφ u φu This covers examples paper The ordering example cid11A probability potentials Examples 19 inference Bayesian networks based semiring total order deﬁne LB UB simple way deﬁnition minibucket approximation belief updating 24 similarly csemiring totally ordered Examples 2 3 5 6 furthermore csemiring idempotent multiplication generates distributive lattice Example 4 The following result implies deﬁne general circumstances UBφ u φu close upper bound However addition idempotent csemirings example uupper bound Lemma 2 Let φ valuation let u subset dφ Then φu uupper bound φ respect cid11A If addition idempotent φu uupper bound φ respect cid11A Let cid11 preorder addition monotone respect cid11 suppose 0 lower bound φz z Ωdφ Then φu uupper bound φ respect cid11 If addition idempotent φu uupper bound φ respect cid11 This upper bound generalizes minibucket approximation MPE probable explanation 24 page 116 See 13 14 Section 61 uses approximation similar form Suppose 0 lower bound ﬁnite submultiset G A For G 0 lower bound Proof We prove second half lemma ﬁrst half follows second half addition monotone respect cid11A A 0 cid11A cid2 G G upper bound lower bound G If addition idempotent consider upper bound b G Since addition monotone respect cid11 G addition monotone respect cid11 This implies cid2 aG b b Hence addition idempotent G upper bound G aG cid11 cid2 cid2 cid2 cid2 1394 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 Let s dφ let x element frame Ωu Then φux equals φxy y Ωsu argument φux upper bound φxy y Ωsu upper bound addition idempotent Therefore Proposition 5 φu uupper bound φ uupper bound addition idempotent cid2 cid2 633 Computational efﬁciency propagation We analyze computational efﬁciency computing bounds described Section 62 semiring induced valuations We focus efﬁciency computing lower approximations identical analysis upper approximations generating upper bounds number operations required lower φ1 φnsl Let v So Theorem 9 wish compute l 1 m lower bound φl number variables involved v dφ1 dφn The algorithm involves join tree embedding We construct variable elimination fusionbucket elimination join tree v nodes So let assume join tree v nodes To simplify assume order cid11 semiring lattice ordering covers examples paper kind analysis extended general cases We analyze computational efﬁciency terms number semiring basic operations This deﬁned following binary operations semiring multiplication addition computing greatest lower bound upper bound pair elements semiring The computational efﬁciency clearly depends choice function size We ﬁrst consider case size multiset M valuations deﬁned cardinality associated frame ΩdM dM set variables involved valuation M Consider valuation ψ Suppose cardinality associated frame B Ωdψ cid2 B Let u subset dψ Computing values ψ u requires total B basic operations additions Similarly computing values function LBψ u requires B basic operations binary greatest lower bounds LB deﬁned lattices paragraph Section 632 Consider multiset M valuations M contains p valuations sizeM cid2 B cardinality associated product set B The computation combination M involves p 1B basic operations multiplications involved LowerBound function needs computation addition idempotent t equal 1 Otherwise e X variable X cost precomputation worst number variables times mean domain size Computing e involves t additional basic operations multiplications X equal X e 1 We precompute e written The term e Xt e ωΩX t cid2 cid4 t Computations LowerBound function We assume Partition function involve ba k sic operations By previous remarks computing φi 0 k involves i0Mi 1B involves dM basic operations Computing valu BM k 1 basic operations Computing e udφ0 LBφ1 u dφ1 LBφk u dφk involves k 1B additional basic operations ations φ 0 Hence computing LowerBound function involves BM dM basic operations Usually second term smaller ﬁrst Let n maximum value M applications LowerBound algorithm let v t cid2 maximum value dM number variables involved In computing lower bound φl lower l 1 m procedure LowerBound applied directions edge join tree applied target set So LowerBound applied 2V m times V number nodes join tree m number target sets assumption 2v m times Therefore number basic operations applications LowerBound function m 2vBn v preprocessing adds small term Dv linear number v variables D mean domain frame size v variables The ﬁnal stage algorithm involves l 1 m combination multiset valuations domains included sl involves total Bmn 1 basic operations Hence overall number operations required m 2vBn v Bmn Dv A crude upper bound n n number input valuations n tend smaller n B small similarly v cid2 v overall upper bound number operations required m 2vBn v Bmn Dv low order J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1395 polynomial In particular classes problems m n grow linearly respect number variables v D bounded Ov2 B constant Suppose instead deﬁne size multiset M number variables involved M let D upper bound size frame variable involved The number operations m 2vDB n v DB mn Dv low order polynomial B constant 64 Approximations bounds The lower upper approximations deﬁned certain situations sufﬁcient answer queries How necessarily close approximations One closer exact answers approximations based replacing bound function LB UB approximating function AP Let φ valuation dφ u We let APφ u valuation θ dθ u θ edφ sense approximates φ The propagation algorithm function AP replacing LB lower bound propagation approximations If ordered valuation algebra generated semiring A ordering relation cid11 approximation pointwise In particular cid11 total order x Ωu set APφ ux intermediate value average value φxy y Ωdφu opposed LB takes minimum value UB uses maximum value For example case probability potentials use mean value suggested 24 page 120 deﬁne APφ ux mean value φxy y Ωdφu 65 Using propagation constraints From collection semiringinduced valuations generate constraints based zeros These deduce new constraints increase number zeros input valuations particular allow eliminate elements frame variable The number nonzero elements valuations relevant computational efﬁciency propagation algorithms Sections 31 62 example valuation φ p nonzero tuples ψ q number multiplications required computing φ ψ pq This preprocessing step greatly improve efﬁciency especially elements frames eliminated This idea related notion shrinking 6 651 Generating implied constraints A constraint R set variables u subset Ωu dR u Given Avaluation φ deﬁne Rφ constraint variables dφ given x Rφ φx cid9 0 Constraint Rφ gives nonzero tuples φ Implied constraints partial information zeros Let R constraint variables u dφ Constraint R said implied constraint φ following condition holds z Ωdφ φz cid9 0 zu R equivalently z Rφ zu R So complement R gives zeros φ zu R φz 0 R said implied constraint multiset φ1 φn implied constraint φ1 φn We φ1 φn implies R Let C set constraints involving variables s let R constraint variables u s We C implies R zu R holds z Ωs solutions Constraint Satisfaction Problem C zdRcid10 Rcid10 Rcid10 C Proposition 6 Let M multiset Avaluations M implies Rφ φ M ii Suppose C set implied constraints M C implies R Then M implies R iii If Rφ φ M implies constraint R M implies R iv Suppose A zero divisors b nonzero nonzero b A Then Rφ φ M implies R M implies R Proof Let ψ cid11 M let s dψ 1396 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 Let z Ωs For φ M zu Rφ φzu 0 ψz 0 showing Rφ implied constraint ψ M ii Let u dR set variables constraint R By deﬁnition u s Let z element Ωs ψz cid9 0 Then Rcid10 C zdRcid10 Rcid10 ψ implies Rcid10 zu R showing M implies R iii follows immediately ii iv We need converse iii Suppose M implies R z Ωs φ M φM φzdφ nonzero Since R implied zdφ Rφ Then φ M φzdφ cid9 0 ψz constraint ψ zdR R showing Rφ φ M implies R cid2 cid4 Part proposition shows given input set valuations M initialize set implied constraints Rφ φ M Part iv Proposition 6 shows A zero divisors implied constraint M implied constraint Rφ φ M We apply propagation algorithm generate implied constraints Rφ φ M example use upper bound approach Sections 61 62 63 applied initial set constraints similarly miniclustering approach use arc consistency path consistency generate new constraints By iii Proposition 6 new constraints implied constraints M 652 Using implied constraints The following result shows amend input set semiringinduced valuations set implied constraints increasing number zero values changing combination valuations Proposition 7 Let A semiring let C set implied constraints multiset Avaluations φ1 φn For 1 n let φcid10 ix x Ωdφi follows exists implied constraint R C dR dφi xdR R let φcid10 cid10 φ1 φn φ 1 ix 0 deﬁne φcid10 given deﬁning φcid10 ix φix Then φ cid10 n Proof For 1 n let si dφi let s dφ1 dφn Let z element frame Ωs We need φ1 φnz φcid10 izsi So 1 suppose exists 1 n φizsi cid9 φcid10 nz 0 Also exists implied constraint R C variables u si zu R Since R implied constraint φ1 φnz 0 equals φcid10 1 nz Clearly holds 1 n φizsi φcid10 φcid10 izsi Then deﬁnition φcid10 nz required cid2 izsi 0 φcid10 φcid10 φcid10 1 The implied constraints tell tuples set zero value φcid10 obtained φi setting tuples zero The point replacing elements φi φcid10 easier combine complexity combination related number nonzero tuples decreasing number nonzero tuples computations faster potentially substantially strong constraints deduced An additional advantage upper bounds generated join tree propagation upper approximation Sections 62 63 tighter preprocessing 66 Setting semiring values 0 Let A cid6A cid7 semiring zero element 0 unit element 1 Let cid11 preorder A monotone cid11 0 cid11 element A The element 0 lower bound element A semiring So particular case lower bound Avaluation replace certain semiring values input valuations 0 This computational advantages efﬁciency computation somewhat related number nonzero values input valuations constraints propagation approaches discussed Section 65 We consider effect choosing subset P cid9 0 semiring A replacing semiring values input valuations P 0 With appropriate semiring choice P shown affect answer certain kinds queries This related notion sinking 6 Consider φ φ1 φn Let s dφ 1 n let si dφi Deﬁne Q φixi set semiring values taken input valuations Deﬁne Q clo 1 n xi Ωsi sure Q operation J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1397 We consider input Avaluations subset P A satisfying following condition If b Q b P b P cid4 n i1 ai P Condition implies elements ai Q 1 n product ai P 1 n Hence x Ωs φx P φix P 1 n Condition satisﬁed Q P satisfy pair conditions Q cid11 1 ii P cid11 b cid11 1 b P An important special case A P equals Pa deﬁned b A b similarly P equals Pcid9cid11a b A b cid9cid11 In case condition satisﬁed long satisﬁed input semiring values bounded 1 Consider P satisfying Deﬁne φP xsi cid9 0 xsi φixsi φcid10x φx We φx P φcid10x P So φx P n By remarks φx P φcid10x φx Also φcid10x P φP xi φixi φixi P φP xi 0 Let φcid10 φP φP φP φP φcid10x P φcid10x φx 1 Suppose interested ﬁnding complete assignments x combined semiring value P example interested x semiring value lower bound use P Pa The argument shows use φcid10 instead φ changing result This greatly improve efﬁciency components φcid10 fewer nonzero values φ As Section 65 propagate constraints associated φP Consider case A csemiring cid11 cid11A deﬁned cid11 b b b We consider P form Pcid9cid11a b A b cid9cid11 A situation semiring value worse considered signiﬁcant P satisﬁes If φx P 0 cid11 φx cid11 The results imply x Ωs φcid10x cid11 φx cid11 φcid10x leads y Ωu φcid10uy cid11 φuy cid11 φcid10uy giving bounds φu If φcid10uy equality φcid10uy φuy If additionally cid11 total order φuy P φuy φcid10uy Also φuy P φcid10uy P Hence want compute projections combinations Avaluations use duced representation φcid10 keeping input semiring values interested partial tuples output semiring values P values This case A based totally ordered csemiring covers interesting systems 950 Examples 3 5 6 7 Conclusion Semirings important algebraic structures induce valuation algebras permit application dif ferent architectures local computation Such semirings deﬁne soft constraints generate different uncertainty calculi In cases inference consists solution projection problem A straightforward solution problem general feasible domains valuations treated large computing time space requirement grow exponentially However fusion algorithm allows limit domains operations combination projection executed smaller dimensions This unfeasible computation fast fact linear size largest frame treatedwhich exponential largest node domain size join tree contrast naive algorithm exponential number variables The fusion algorithm base different derived architectures local computation Idempotent semirings lead idempotent valuation algebras socalled information algebras For algebras particularly simple efﬁcient idempotent architecture In cases notion division exists semiring exported induced valuation algebra Then efﬁcient architectures originally designed probability networks use concept division For situations domains valuations exact computation feasible upper lower bounds efﬁciently derived broad class formalisms modiﬁcation propagation algorithms These example branch bound algorithm optimization 1398 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 The knowledge generic architectures apply multitude inference problems different contexts formalisms tool box designer inference reasoning systems It useful solve complex problems worst case demand infeasible computation space Acknowledgements We grateful Marc Pouly comments proof reading Cesar Schneuwly help especially running propagation example References 1 SM Aji RJ McEliece The generalized distributive law IEEE Trans Inform Theory 46 2 2000 325343 2 E Amir Efﬁcient approximation triangulation minimum treewidth Proceedings 17th Conference Uncertainty Artiﬁcial Intelligence 2001 pp 715 3 F Baccelli G Cohen GJ Olsder JP Quadrat Synchronization Linearity An Algebra Discrete Event Systems Wiley 1992 4 C Beeri R Fagin D Maier A Mendelzon J Ullman M Yannakakis Properties acyclic database schemes ACM Symposium Theory Computing ACM Press New York 1981 pp 355362 5 S Bistarelli T Fruewirth M Marthe F Rossi Soft constraint propagation solving constraint handling rules Comput Intell 2004 Special Issues Preferences AI CP 6 S Bistarelli SKL Fung JHM Lee H Leung A local search framework semiringbased constraint satisfaction problems Proc CP2003 Workshop Soft Constraints Soft2003 2003 7 S Bistarelli F Gadducci Enhancing constraints manipulation semiringbased formalisms Proc 17th European Conference Artiﬁcial Intelligence ECAI 2006 2006 pp 6367 8 S Bistarelli U Montanari F Rossi Semiringbased constraint satisfaction optimization optimisation J ACM 44 1997 201236 9 S Bistarelli U Montanari F Rossi T Schiex G Verfaillie H Fargier Semiringbased CSPs valued CSPs Frameworks properties comparison CONSTRAINTS An International Journal 4 3 1999 10 HL Bodlaender A tourist guide treewidth Acta Cybern 11 12 1993 122 11 HL Bodlaender Treewidth Characterizations applications computations FV Fomin Ed WG Lecture Notes Computer Science vol 4271 Springer 2006 pp 114 12 K Cechlárová J Plávka Linear independence bottleneck algebras Fuzzy Sets Syst 77 3 1996 337348 13 L Chang Semiringbased unifying framework constraintbased inference Masters thesis University British Columbia 2005 14 L Chang AK Mackworth Generalized constraintbased inference Tech Rep TR200510 Dept Computer Science Univ British Columbia 2005 15 AH Clifford GB Preston Algebraic Theory Semigroups American Mathematical Society Providence Rhode Island 1967 16 M Cooper T Schiex Arc consistency soft constraints Artif Intell 154 12 2004 199227 17 R Croisot Demigroupes inversifs et demigroupes réunions demigroupes simples Ann Sci Ecole Norm Sup 79 3 1953 361379 18 B De Baets Idempotent uninorms European J Op Res 118 631642 1996 00 19 J De Kleer J Brown Theories causal ordering Artif Intell 29 1986 3361 20 R Dechter Minibuckets A general scheme generating approximations automated reasoning Proc Fifteenth International Joint Conference Artiﬁcial Intelligence IJCAI97 1997 pp 12971303 21 R Dechter Bucket elimination A unifying framework reasoning Artif Intell 113 12 1999 4185 22 R Dechter K Kask J Larrosa A general scheme multiple lower bound computation constraint optimization Proc CP2001 2001 pp 346360 23 R Dechter J Pearl Networkbased heuristics constraint satisfaction problems Artif Intell 34 1 1987 138 24 R Dechter I Rish Minibuckets A general scheme bounded inference J ACM 50 2 2003 107153 25 V Gogate R Dechter A complete anytime algorithm treewidth Proceedings 20th Conference Uncertainty Artiﬁcial Intelligence UAI04 2004 pp 201208 26 R Haenni Ordered valuation algebras A generic framework approximating inference Internat J Approx Reason 37 1 2004 141 27 R Haenni J Kohlas N Lehmann Probabilistic argumentation systems J Kohlas S Moral Eds Handbook Defeasible Reasoning Uncertainty Management Systems vol 5 Algorithms Uncertainty Defeasible Reasoning Kluwer Dordrecht 2000 pp 221287 httpdiufunifrchtcspublicationspshkl2000pdf 28 E Hewitt H Zuckermann The l1algebra commutative semigroup Trans Amer Math Soc 83 1956 7097 29 F Jensen S Lauritzen K Olesen Bayesian updating causal probabilistic networks local computations Comp Stat Q 4 1990 269 282 30 K Kask R Dechter Branch bound minibucket heuristics Proc International Joint Conference Artiﬁcial Intelligence IJCAI99 1999 pp 426433 31 K Kask R Dechter Minibucket heuristics improved search Proc UAI99 1999 pp 314323 32 K Kask R Dechter J Larrosa A Dechter Unifying clustertree decompositions reasoning graphical models Artif Intell 166 12 2005 165193 33 E Klement R Mesiar E Pap Triangular Norms Trends Logic Kluwer Academic Publ Dordrecht 2000 J Kohlas N Wilson Artiﬁcial Intelligence 172 2008 13601399 1399 34 J Kohlas Information Algebras Generic Structures Inference SpringerVerlag 2003 35 J Kohlas Valuation algebras induced semirings Tech Rep 0403 Department Informatics University Fribourg 2004 httpdiufunifrchtcspublicationspskohlas2004apdf 36 J Kohlas R Haenni S Moral Propositional information systems J Logic Comput 9 5 1999 651681 httpdiufunifrch tcspublicationspskmh99pdf 37 J Kohlas P Shenoy Computation valuation algebras J Kohlas S Moral Eds Handbook Defeasible Reasoning Uncertainty Management Systems vol 5 Algorithms Uncertainty Defeasible Reasoning Kluwer Dordrecht 2000 pp 540 38 V Kolokoltsov V Maslov Idempotent Analysis Applications Kluwer Academic Publ Dordrecht 1997 39 J Larrosa T Schiex Solving weighted CSP maintaining arc consistency Artif Intell 159 2004 126 40 S Lauritzen F Jensen Local computation valuations commutative semigroup Ann Math Artif Intell 21 1 1997 5170 41 S Lauritzen D Spiegelhalter Local computations probabilities graphical structures application expert systems J Royal Stat Soc 50 2 1988 157224 42 D Maier The Theory Relational Databases Pitman London 1983 43 R Mateescu R Dechter K Kask Tree approximation belief updating Proc AAAI2002 2002 pp 553559 44 K Menger Statistical metrics Proc Nat Acad Sci 28 1942 535537 45 J Mengin N Wilson Logical deduction local computation framework A Hunter S Parsons Eds European Conf EC SQARU99 London Lecture Notes Artif Intell Springer 1999 pp 386396 46 J Pearl Probabilistic Reasoning Intelligent Systems Networks Plausible Inference Morgan Kaufmann Publishers Inc 1988 47 M Pouly Nenok 11 user guide Tech Rep 0602 Department Informatics University Fribourg 2006 48 M Pouly J Kohlas Minimizing communication costs distributed local computation Tech rep Department Informatics University Fribourg 2005 49 T Schiex Possibilistic constraint satisfaction problems handle soft constraints D Dubois MP Wellman B DAmbrosio P Smets Eds Uncertainty Artiﬁcial Intelligence Proc Eighth Conference Kaufmann San Mateo CA 1992 pp 268275 50 Schiex T Fargier H Verfaillie G Valued constraint satisfaction problems Hard easy problems Proc IJCAI95 1995 pp 631637 51 C Schneuwly M Pouly J Kohlas Local computation covering join trees Tech Rep 0416 Department Informatics University Fribourg 2004 httpdiufunifrchtcspublicationspsschneuwlypoulykohlas04pdf 52 B Schweizer A Sklar Statistical metric spaces Paciﬁc J Math 10 1960 313334 53 G Shafer An axiomatic study computation hypertrees Working Paper 232 School Business University Kansas 1991 54 G Shafer Probabilistic Expert Systems CBMSNSF Regional Conference Series Applied Mathematics vol 67 SIAM Philadelphia PA 1996 55 G Shafer P Shenoy Local computation hypertrees Tech Rep 201 School Business University Kansas Lawrence 1988 56 P Shenoy Valuationbased systems A framework managing uncertainty expert systems L Zadeh J Kacprzyk Eds Fuzzy Logic Management Uncertainty John Wiley Sons 1992 pp 83104 57 P Shenoy Axioms dynamic programming A Gammerman Ed Computational Learning Probabilistic Reasoning Wiley Chich ester UK 1996 pp 259275 58 PP Shenoy Binary join trees computing marginals ShenoyShafer architecture Internat J Approx Reason 17 1997 239263 httpciteseeristpsueduarticleshenoy97binaryhtml 59 PP Shenoy G Shafer Axioms probability belieffunction propagation RD Shachter TS Levitt LN Kanal JF Lemmer Eds Uncertainty Artiﬁcial Intelligence 4 Machine Intelligence Pattern Recognition vol 9 Elsevier Amsterdam 1990 pp 169198 60 W Spohn Ordinal conditional functions A dynamic theory epistemic states W Harper B Skyrms Eds Causation Decision Belief Change Statistics vol 2 Dordrecht Netherlands 1988 pp 105134 61 T Tamura N Kimura On decompositions commutative semigroup Kodai Math Sem Rep 1954 109112 62 N Wilson Bounds preprocessing local computation semiring valuations J Kohlas J Mengin N Wilson Eds ECAI2004 Workshop 22 Local Computation Logics Uncertainty 2004 pp 5356 63 R Yager A Rybalov Uninorm aggregation operators Fuzzy Sets Syst 80 1996 111120