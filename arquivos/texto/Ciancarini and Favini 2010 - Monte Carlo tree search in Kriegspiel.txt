Artiﬁcial Intelligence 174 2010 670684 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Monte Carlo tree search Kriegspiel Paolo Ciancarini Gian Piero Favini Dipartimento di Scienze dellInformazione University Bologna Italy r t c l e n f o b s t r c t Article history Received 20 September 2009 Received revised form 4 April 2010 Accepted 4 April 2010 Available online 9 April 2010 Keywords Games Chess Kriegspiel Incomplete information Monte Carlo tree search 1 Introduction Partial information games excellent examples decision making uncertainty In particular games immense state space high degree uncertainty traditional algorithms methods struggle play effectively Monte Carlo tree search MCTS brought signiﬁcant improvements level programs games Go play partial information games However certain games particularly large trees reduced information naive MCTS approach insuﬃcient particular case games long matches dynamic information complex victory conditions In paper explore application MCTS wargamelike board game Kriegspiel We study MCTSbased methods starting simple implementation moving reﬁned versions playing game little speciﬁc knowledge We compare MCTSbased programs strongest known minimaxbased Kriegspiel program obtaining signiﬁcantly better experimental results domainspeciﬁc knowledge 2010 Elsevier BV All rights reserved Partial information games provide good model testbed realworld situations involving decision mak ing uncertainty They diﬃcult program play These games typically require combination complex tasks heuristic search belief state reconstruction opponent modeling Moreover games particularly challenging time number possible indistinguishable states far exceeds storage computational abilities presentday computers In paper focus game Kriegspiel invisible chess The game interesting reasons Firstly rules identical Chess wellknown game players perception board different able pieces Secondly game huge number states limited means acquiring information Finally nature uncertainty entirely dynamic These issues Kriegspiel category different partial information games Stratego Phantom Go partial information variant Go 1 newly discovered piece information remains valid rest game Information Kriegspiel scarce precious ages fast In fact old game known game theorists discussed von Neumann Morgenstern 2 blind chess ﬁrst attempt build effective Kriegspiel playing program came 2005 based Monte Carlo sampling 3 It defeated ﬁrst program described 4 based form minimax game tree data structures called metapositions These ﬁrst deﬁned 5 partial information variant Shogi Japanese Chess Our program better competing programs good compete best human players Corresponding author Email address ciancacsuniboit P Ciancarini 00043702 matter 2010 Elsevier BV All rights reserved doi101016jartint201004017 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 671 Fig 1 The phases Monte Carlo tree search selection expansion simulation backpropagation In paper present study different ways applying Monte Carlo tree search Kriegspiel Monte Carlo tree search imposing past years major tool games traditional minimax techniques yield good results size state space diﬃculty crafting adequate evaluation function The game Go primary example albeit tough environment minimax Monte Carlo tree search able improve level programs considerably 67 Since Kriegspiel shares traits large game diﬃcult express evaluation function unlike complete information counterpart natural test similar approach The paper organized follows Section 2 contains highlevel introduction Monte Carlo tree search MCTS emphasis successful application Phantom Go In Section 3 introduce game Kriegspiel rules makes similar different Phantom Go Section 4 contains signiﬁcant research results Kriegspiel especially related previous Monte Carlo methods We highlevel view MCTS approaches Section 5 showing similar differ corresponding programs described greater separately Section 6 contains experimental tests comparing strength performance programs Finally conclusions future research directions Section 7 2 Monte Carlo tree search Monte Carlo tree search MCTS evolution simpler older methods based Monte Carlo sampling While core concept program plays large number random simulated games picks yield highest victory ratio purpose MCTS computation converge right value quickly pure Monte Carlo This accomplished guiding simulations game tree grows accommodate new nodes time promising nodes theory reached ﬁrst visited nodes likely unattractive MCTS iterative method performs steps available time runs These steps summa rized Fig 1 Selection The algorithm selects leaf node tree based number visits average value Expansion The algorithm optionally adds new nodes tree Simulation The algorithm simulates rest game times returns value ﬁnal state average simulated multiple times Backpropagation The value propagated nodes ancestors root new average values computed nodes After performing phases times time allows program chooses roots child received visits plays corresponding This necessarily coincide node highest mean value A discussion mean operator good choice contained 8 672 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 MCTS thought method speciﬁc algorithm dictate hard policies phases It truly specify leaf selected node expanded simulations conducted values propagated upwards In practice gameplaying programs tend use variations algorithms steps Selection task similar spirit nbandit problem program needs strike balance exploration devoting time new nodes exploitation directing simulations nodes shown promise far For example programs use UCT algorithm Upper Conﬁdence bound applied Trees ﬁrst given 6 This algorithm chooses step child node maximizing quantity cid2 U v c ln N ni v value node N number times parent node visited ni number times node visited c constant favors exploitation low exploration high Expansion varies dramatically depending game considered state space branching factor In gen eral programs expand node visited suﬃcient number times Simulation depends wildly type game There large literature dealing MCTS simulation strategies game Go Backpropagation offers problem backup operator use calculating value node 21 MCTS partial information Phantom Go Monte Carlo tree search successfully large complex partial information games notably Phantom Go This game partial information version classic game Go player direct knowledge opponents stones infer existence tries stone intersection discovers unable In case try instead 1 describes MCTS algorithm playing game obtaining good playing strength 9 9 board A thorough comparison Monte Carlo approaches Phantom Go tree search recently given 9 We especially interested Phantom Go state space branching factor larger complex partial information games poker good Monte Carlo strategies exist example 10 MCTS algorithms Phantom Go relatively straightforward reuse knowledge methods Go counterparts fact differ Go programs simulation phase starting board generated new random setup opponents stones time instead It legitimate wonder approach easily converted games equally huge state space Phantom Go special case descending game particularly suited MCTS In section discuss Kriegspiel chess Phantom Go Go compare games similarities differences 3 Kriegspiel Kriegspiel named war game Prussian army train oﬃcers chess variant invented end XIX century transform standard chess wargame It studied played game theorists caliber John von Neumann Lloyd Shapley It played different chessboards player referee They positioned way referee sees boards players From referees point view game Kriegspiel game Chess The players pieces opponents dark hidden fog war On turn player selects communicates referee direct communication opponents If illegal referee reject ask player choose different If legal referee instead inform players consequences This information depends Kriegspiel variant played 11 ﬁnd game On Internet Chess Club hosts largest community players game referees messages following When legal check capture referee information saying White moved Black moved We silent referee information given players accepted When chessman captured case referee captured chessman pawn piece captured case kind piece When king player check case referee disclose direction directions check following rank ﬁle short diagonal long diagonal knight In order speed game player capturing moves pawns referee announce pawn tries tell pawn perform capture When game referee announces checkmate drawn game standard condition stalemate material position repetition times P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 673 These rules international Computer Olympiad Kriegspiel tournament played 2006 2009 On superﬁcial level Kriegspiel Phantom Go similar Both rules complete infor mation versions adding layer uncertainty form fog war managed referee The transcript Kriegspiel game legal chess game like transcript Phantom Go game legal Go game Both involve attempts core mechanics illegal attempts provide information state game In games player purposely try purpose information gathering On hand differences worth mentioning games We list signiﬁcant ones The nature Kriegspiel uncertainty strongly dynamic Go stones immutable largely static discovered permanently decrease uncertainty large factor information Kriegspiel ages quickly comes old One needs consider uncertainty means thing games Kriegspiel harsher battleﬁeld respect There dozen combinations messages Kriegspiel referee return compared Phantom Go This makes representation game tree diﬃcult In Phantom Go exists sequence illegal moves reveal state game remove uncertainty altogether thing exists Kriegspiel sequence moves reveal referees chessboard near end game Uncertainty grows faster Phantom Go decreases automatically endgame By contrast Kriegspiel certainty decreases permanently piece captured rarely guaranteed happen In Phantom Go players ability reduce uncertainty increases game progresses enemy stones utility additional information decreases It exactly opposite Kriegspiel like Battleship fewer enemies board fewer allies hit player harder time making progress information major advantage There differences carried complete information counterparts notably victory conditions Kriegspiel causing event happen suddenly time Go games concerned accumulation score From point view Monte Carlo methods scorebased games tend favorable conditionbased games condition diﬃcult observe random game Even considerable material advantage relatively rare force checkmate random moves Hence mixed results comparing games represent different kinds uncertainty best described static vs dynamic uncertainty We wish investigate effectiveness Monte Carlo methods especially MCTS context dynamic uncertainty 4 Related works Research Kriegspiel classiﬁed follows The earliest papers 1970s dealt protocols implementing Kriegspiel referee Research following decades focused solving speciﬁc subsets Kriegspiel game notably simple endgames The ﬁrst programs playing entire game Kriegspiel came 2005 We discuss special emphasis Monte Carlo minimaxbased 41 Early results Because information shared players limited information set Kriegspiel huge If considers number distinct belief states game Kriegspiel KRK king rook versus king ending number possible states close game checkers However states practice equivalent strategy allows distinguish normal game This complexity primary reason long time research focused algorithms speciﬁc endings KRK KQK KPK Ferguson showed gametheoretic algorithms solving KBNK KBBK speciﬁc starting conditions example 12 Automatic search Kriegspiel endgames ﬁrst tackled 13 State reconstruction routines main object 14 15 focuses eﬃcient belief state management order recognize ﬁnd Kriegspiel checkmates The focus papers search problemsolving actually playing game 42 The ﬁrst Monte Carlo program Due complexity domain programs capable playing Kriegspiel game emerged recent years The ﬁrst Monte Carlo MCTS approach Kriegspiel Parker Nau Subrahmanian 3 Their program plays maintaining state pool sampled evaluated chess function In paper authors information set associated given situation belief state set containing possible game 674 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 states compatible information player gathered far They apply statistical sampling technique proven successful partial information games bridge poker adapt Kriegspiel The technique consists generating set sample states chessboards subset information setbelief state compatible referees messages analyzing wellknown complete information algorithms evaluation functions This approach feeds randomly sampled boards popular open source GNUChess engine chooses obtains highest average score sample The choice chess engine methods greatest strength saves trouble deﬁning Kriegspiel domain knowledge important ﬂaw positions evaluated according chess standards assumption player board Obviously case Kriegspiel generating good samples far harder Bridge Poker Not state space immensely larger duration game longer choices taken branches explored For reasons evaluating computationally expensive position Bridge program needs run evaluation function sample consequence fewer samples analyzed size state space command The authors 3 sampling algorithms implemented fourth AOS gener ating samples compatible observations equate generating information set intractable LOS Last Observation Sampling Generates certain quantity samples compatible observation memory happened AOSP All Observation Sampling Pool The algorithm updates maintains pool samples chessboards numbering tens thousands guaranteed compatible observations far HS Hybrid Sampling This works like AOSP introduce lastobservation samples certain conditions They conducted experiments timed versions algorithms basically generating samples evaluating timer runs instance 30 seconds They conclude LOS behaves better random play AOSP better LOS HS better AOSP It surprise HS introducing component reﬁned LOS behaves better pure AOSP fact expected The size AOSP pool minuscule compared information set largest game No matter smart generation algorithm strives maintain diversity impossible convey possibilities midgame information set fact conﬁrm present research The individual samples begin acquire weight algorithm begin evaluate component noise The situation worsens pool biased evolve pool Invariably possible states forgotten In context LOS actually helps introduces fresh states fact possible prevents pool stagnating 43 A minimaxbased program The ﬁrst program based minimaxlike search strongest present research described previous paper 4 summarize workings The program builds approximation games information set based concept metapositions tool merging immense game states single small manageable data structure The term metaposition ﬁrst introduced Sakuta 16 applied endgame scenarios Shogi equivalent Kriegspiel The primary goal representing extensive form game tree metapositions transform imperfect information game perfect information offers important advantages simpliﬁcations including applicability Minimax theorem A metaposition merges different equally likely moves state A Kriegspiel metaposition contain huge number states obviously represented approximated version We developed speciﬁc function evaluating metaposition ignoring individual states Then built modiﬁed minimax algorithm searching metapositions This leads good level play Kriegspiel translates level average human player price requiring custom evaluation function Kriegspiel good deal domain knowledge The program called Darkboard won ﬁrst Kriegspiel tournament held 11th Computer Olympiad Turin Italy 2006 It played Internet Chess Club got max Elo rating 1870 averaging 1600 points An improved version Darkboard better evaluation function benchmark Monte Carlo algo rithms paper 44 Other programs Recently attempts modeling opponent Kriegspiel Markov decision processes limited case 4 4 chessboard 17 The authors shifted Monte Carlo approach MCTS P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 675 Fig 2 Comparison simulation methods Approach A standard Monte Carlo tree search approach B simulates referee messages kmove runs approach C immediately computes value node approach B k 1 Fig 3 Threetiered game tree representation algorithms particle ﬁltering techniques 18 newer method allows program play normal 8 8 board The work similarities spirit modeling techniques presented paper similar 3 particle ﬁltering creates plausible chess positions evaluated engine like GNUChess 5 Three MCTS approaches In section provide Monte Carlo tree search methods playing Kriegspiel label A B C These approaches summarized Fig 2 brieﬂy described follows Approach A MCTS algorithm stays faithful possible previous literature particular existing Phantom Go methods In algorithm possible game state generated randomly simulation moves random games simulated natural end Approach B evolution MCTS program try generate opponents board instead referees messages simulated In words games simulated players partial point view instead referees omniscient Approach C simpliﬁcation approach B algorithm explore nodes cutting simulation These programs share major portions code implementation particular making use represen tation game tree shown Fig 3 As thousands possible opponent moves depending unknown layout board resort threelevel game tree plies game represent ref eree messages moves The ﬁrst layers merged program moves outcomes remain separate computational ease selection 676 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 Fig 4 Database data handle paoloc playing White t 10 p knight absolute probabilities delta values 9 Initially investigated approach close possible MCTS techniques developed Go imperfect information variant taking account important differences games Kriegspiel We veloped methods performing unsuccessful tests approach A distinguished player moving randomly The approaches use proﬁling data taken database 12 000 games played human players Internet Chess Club Because information scarce kind opponent modeling important component Kriegspiel program Our algorithms use information game database order build opponents model speciﬁc adversary unknown unknown opponent considered averaged version players database We suppose access 8 8 matrices D w p t Dbp t estimating probability distribution piece p time t opponent playing White Black respectively These matrices available t certain time deemed noisy practical value Of course values smoothed averaging moves neighboring squares especially later game These matrices contain truly vital information shown Fig 4 Ten moves plies game locations players knights inferred high probability This coincidence total absence information players use tested strategies making easier predict These matrices different ways algorithms approach A uses absolute probabilities unmodiﬁed values D w Db order reconstruct realistic boards MCTS sampling purposes approaches B C exploit gradient values values Dp t 1 Dp t order evolve abstract model 51 Approach A Pseudocode approach A shown Fig 5 Our approach A implements steps MCTS follows Selection implemented UCT programs moves seen pseudocode opponent plays pseudorandom moves Simulation step Choosing different values exploration constant c impact performance 9 showed main methods guessing opponents unknown stones Phantom Go late random opponentmove guessing early probabilistic opponentmove guessing In stones added opponent plays rest ﬁlled simulation step stones added ﬁrst based frequency play ﬁrst It noted early guessing outperforms late guessing The concept different Kriegspiel able easily build use frequency statistics way Nevertheless recognizing power early guessing ﬁll entire board start Selection note tree contain boards referees messages traverse tree deals speciﬁc boards We probability distributions D w Db discussed previous section They collected database online games estimate density piece type given point time The matrices including completely priori knowledge information algorithm heuristics helped construct random boards remembering pieces left play P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 677 function approach_ANode root availableTime Board b generateRandomBoardroot Node n root Move isLeafn programTurnn n uctSelectionnlegalMovesbrefereeMessagebmove nmove getPseudoRandomMoveb n getChildnrefereeMessagebmove playMovebmove n expandn double outcome simulationb backpropagateoutcomen return mostVisitedChildroot Fig 5 Pseudocode approach A pawns ﬁle The generator strived positions contradict referees message Last Observation Sampling reported yield best results 3 applied task We implement Expansion adding new random node iteration We considered random choice reasonable solution judged custom Expansion heuristic remarkably diﬃcult devise Kriegspiel Choosing new node simulation allows easily compare approach evaluation functionbased exploring nodes Simulation raises number questions game partial information generate missing information handle subsequent moves Existing research limited help best knowledge ﬁrst time MCTS applied game knowledge barely survives Go relatively straightforward play random ones eyes It easier estimate length simulated Go game generally related number intersections left board Kriegspiel simulations necessarily heavier compute rules game Even generating list moves nontrivial task requires special care Our simulated players play pseudorandom moves draw ﬁfty rule reach standard endgame position clear winner king rook versus king case game adjudicated In order simulation realistic players try capture exploit pawn try possible basic universal human behavior playing game shared programs In sense simulated moves random pseudorandom We implemented standard Backpropagation average node value backup operator As mentioned approach A failed performing little better random player losing badly time setting traditional program based minimax search Program As victory ratio 2 victories essentially random unintentional midgame checkmates Investigating reasons failure showed main ones addition obvious slowness search First positions opponents pieces generated program realistic The generation algorithm uses probability distributions pieces pawns king updated referee message While probabilities accurate account high correlation different pieces pieces protecting pieces Kriegspiel players generally protect pieces heavily order maximize chances successfully repelling attack As result program tends underestimate protection level opponents pieces Secondly moves chosen randomly underestimates opponents ability coordinate attack hardly pays attention defense Lastly importantly subtler issue progress deﬁned decreasing uncertainty Games Monte Carlo tree search tested thoroughly builtin notion progress In Go adding stone changes board permanently permanently decreasing possible moves future The happens Scrabble word added board Kriegspiel hand like wargames notion players signiﬁcant happens In fact argued states similar values program failing ﬁnd good longterm plan rush risky plan choose minimize risk moving 678 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 function approach_BNode root int k availableTime Node n root Move isLeafn programTurnn n uctSelectionn Message msg probabilisticMessagen n getChildnmsg Message msg probabilisticMessagen n getChildnmsg n expandn double outcome simulationnk backpropagateoutcomen return mostVisitedChildroot Fig 6 Pseudocode approach B piece forth When Monte Carlo method perform simulations ﬁnd stable maximum It unlikely mere implementation MCTS techniques seen Go Phantom Go work effectively Kriegspiel resource constraints current systems In order work change rules game players need receive information state board 52 Approach B An effective Monte Carlo tree search Kriegspiel program needs converge better value mention quickly implementation presented approach A Reducing major noise simulation step paramount importance As seen performing Monte Carlo search individual states standard MCTS dictate leads highly unstable results A possible solution lay running simulations individual game states perception players point view This save trouble computational algorithmic generating plausible game states reward intelligent play simulations The core spirit Monte Carlo methods preserved running simulations usual instead running chess games complete information run Kriegspiel games partial information As aside simulating abstract model game instead game context Monte Carlo programs example 19 realtime strategy game detailed simulation continuous time impossible What authors instead simulating highlevel responses highlevel decisions strategies conceptually close goal We deﬁne program B pseudocode listed Fig 6 This approach removes randomness involved generating single states instead simulates referee messages worrying enemy layout generated A reduced version abstract model approach A estimates likelihood given referee message response certain Our model utilitarian For example chance enemy retaliating capture times chance illegal At core based 8 8 piece probability matrices Pk king Pw pawn Pc chessman P j contains probability piece given type square j rank 0 Whites ﬁrst rank opponent Black We distinguish different pieces queens rooks Kriegspiel rulesets player information In approach A matrices generate random chessboards serve purpose directly probabilisticMessage determine probabilities referees messages picked response UCT selects We sets assumptions The ﬁrst set models rules chess predict outcomes programs moves probability matrices opponents pieces It updates probabilities knowl edge gained referees responses programs moves The second set provides opponent model updating opponents probabilities turn deciding outcomes moves In words ﬁrst set assumptions probability theory applied chess second set fact opponent model P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 679 The ﬁrst set follows The probability opponent control square j equal sum components Probcontroli j Pkxy Pwi1 j1 Pwi1 j1 c1 cid3 distx yi j1 cid3 c2Pcxy x y meaning sum probabilities king surrounding squares pawn compatible diagonal squares squares rank ﬁle diagonals multiplied suitable coeﬃcients Here c1 37 seven pieces starting set king pawns able attack given direction queen rooks ranks ﬁles queen bishops diagonals The exception knight check pieces perform c2 calculated dynamically enemy pieces covering accounted basically c2 decreases distance j increases Probcontrol greater 1 fact read expectation number enemy pieces controlling square The probability legal equal probability squares pieces path Pt i1 j1 i2 j2 destination square straight pawn minus pin probability We recall piece pinned moving leave king check That cid4 ProblegalPt 1 Pki j Pwi j Pci j Probpin jPt Probpin 0 Probcontroli1 j1 Probcontroli2 j2 piece protecting king piece protecting king piece king This approximated accounts number cases including pieces pinned unknown enemy pieces king unable threatened square The probabilities capturing piece pawn i2 j2 equal Pci2 j2 Pwi2 j2 respectively The probability program causing check equal sum Pki j squares threatened damping coeﬃcient c2 designed reduce impact far away squares When square moving lack pawn tries probabilities enemy pieces square set 0 Conversely square known occupied usually capture sum probability matrices squares brought 1 In cases matrices normalized total sum board change The second set contains following assumptions suggested human play observed Internet Chess Club When program captures high chance capturing piece turn captured opponent This reﬂects fact pieces protected Long chains blind sacriﬁces common Kriegspiel second subsequent captures program uses Probcontrol determine retaliation When check message heard chance assumed constant model checking piece captured Human players try capture offending piece ﬁrst reaction check In particular player lose probing checks direction king When opponent moves ﬁxed chance suffer capture The victim chosen random probability capture directly proportional Probcontrol exposed pieces captured higher probability All pieces stand equal chance moved opponent program knows opponent k1 pawns k2 pieces left probabilities king pawn piece moved respectively P king 1 k1 k2 1 P pawn k1 k1 k2 1 P piece k2 k1 k2 1 The enemy kings movement modeled random walk graph corresponding set permissible squares Pki jt 1 1 P kingPki jt P king cid3 cid3 i1cid2xcid2i1 j1cid2 ycid2 j1 f kingx y tPkxyt f suitable function scales centers probability delta values gathered game database discussed Section 5 sum 1 This function makes use D w Db depending opponent White Black The rationale delta values previous instead directly comparing values D delta values represent trends snapshots likely carry atypical games 680 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 Fig 7 Density spreading routine approaches B C second diagonal sweep shown Pawns modeled separately oneway Markov chains A generic piece pawn king complex model The computational burden calculating custom transition matrix chessboard values change depending board layout discovering squares affect high MCTS relies speed number simulations Instead board scanned directions shown Fig 7 Whenever group squares program runs fast random walk update squares function f database data long available If database active game reached point longer useful squares equally attractive Pci jt 1 1 P piecePci jt c1 P piece c2 P jt cid3 c1 c2 indicated different constants expositions sake c1 piece probability factor pieces given direction It generic adjustment factor indicates probability ﬁnding piece desired willing In current implementation c2 1 k1 k number squares sequence While algorithm help improve performance run simulations approach A time real advantage opponent longer plays randomly simulations Instead plays according average realistic expectations actual moves disclosed This close way human Kriegspiel player plans moves A second point method B play games proved detrimental performance approach A Instead simulates portion game k moves long k passed parameter The algorithm accounts quiescence allows simulations run past limit k moves starting point event string captures The ﬁrst considered leading tree node simulation begins k 1 basically exploration past current node quiescence Intuitively low value k gives program foresight increases number simulations short term accuracy high value k opposite At end simulated snippet resulting chessboard evaluated real notion Kriegspiel theory method basically reduces counting pieces player left minus number enemy pieces left 53 Approach C The ﬁnal approach called C shown Fig 8 approach B taken extreme k 1 developed noticing success value k ﬁrst tests There tendency noticed Kriegspiel literature ﬁrst 3 18 myopic searches outperform farsighted counterparts If k 1 offers tremendous performance boost node needs sampled Since percentages referee message known model easy calculate results obtain weighed average value As seen pseudocode function getOutcomeProbabilities interrogates referee simulator probabilities given outcome taking place penultimate latest explored node Each outcome progress value identical approach Bs equal number allied pieces board Approach C makes bold assumption value estimated approach Bs abstract model k 1 truth close truth Because simulations assumed instantly converge weighed average backup operator changed average maximum node value Of course fastest simulation strategy blurring line simulation UCTdriven evaluation function accurately cost function pathﬁnding algorithm discontinuous node If approach C successful means information Kriegspiel scarce transient nature beneﬁts global exploration simulating longer games limited compared loss accuracy short run This emphasizes selection strategies simulation strategies Another way think approach C simulations happened entirely tree P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 681 function approach_CNode root availableTime Node n root Move isLeafn programTurnn n uctSelectionn Message msg probabilisticMessagen n getChildnmsg Message msg probabilisticMessagen n getChildnmsg nexplored n expandn double outcomeValues probabilities value getOutcomeProbabilitiesnoutcomeValuesprobabilities int a0 aoutcomeValueslength value outcomesa probabilitiesa nexplored true backpropagateoutcomen return mostVisitedChildroot Fig 8 Pseudocode approach C Fig 9 Example C simulation step simpliﬁed separate trials rate simulation node This based assumption good nodes likely good children best node usually lies end series good decent nodes Fig 9 shows example approach C simulate Rg1 sample board The actual program consider referee messages listed The nodes contain material balance time positive player captured pieces lost The weighed average leaf nodes amounts 0047 backpropagated The program handles quiescence moves seen Ng1 retaliatory rook captured 6 Tests 61 Tests versus minimax program We tested approaches exception A strong interesting improved version program Darkboard described 4 minimax program Tests versus humans Internet Chess Club showed Darkboards playing strength reasonable human standards ranking club level average 1600 Elo points The program tests slightly stronger aforementioned performs series hardcoded checks prevent program making obvious blunders It noted MCTS programs include checks The evaluation function minimax program complex domainspeciﬁc consisting components including material positional information bonuses By contrast MCTS programs know little Kriegspiel B C know pieces better They know protection promoting pawns securing center gathering information trying moves likely illegal 682 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 Fig 10 Comparison MCTS approaches B C ﬁxeddepth minimax program different time settings simulation depths error intervals The experimental setup follows results tests summarized Fig 10 We played 16 instances B 4 C minimax program A judged weak test The instances B combinations time settings 1 2 4 8 seconds values k 1 3 7 10 The instances C correspond time settings k deﬁnition 1 approach The minimax program plays settings optimal algorithm It explores approximately 10 000 metapositions presence pruning algorithm ensures search depth 3 5 moves depending situation The minimax program requires 1 2 seconds run settings program hits performance plateau point preventing increases strength In words strongest version Darkboard ready use The test took place eightcore Mac Pro machine sets tests running simultaneously weeks The MCTS programs advantage multiple processors thanks form root parallelism minimax program We ran variable number games tested instance ranging minimum 1500 8second tests maximum 4000 The brackets ﬁgure represent 95 conﬁdence interval data expressed Elo ratings Programs perform worse minimax player 0 graph better programs 0 We recall Elo rating difference 200 points corresponds expected result 075 1 win 05 draw difference 400 points expected result 09 The MCTS programs particular optimizations parameters thoroughly ﬁnetuned The programs identical outside simulation task single exception UCT exploration parameter c Approach C uses lower value c leaning exploitation basis node evaluated However different value c small beneﬁcial value program advantage weighed average method lies speed allows visit nodes corresponding B program k 1 The speedup factor ranges 10 20 average equal Experimental ﬁndings generally conﬁrm expectation lower values k effective faster time settings higher values k eventually gain upper hand program given time reason When k low program execute simulations accurate short term reducing number tactical blunders On hand given time broader horizon higher k ﬁnds strategic possibilities longer plans simulation lower k encountered selection At 1 second k 1 large advantage B programs Doubling time reduces gap programs 4 8 seconds longer simulations small signiﬁcant edge actually outperforming minimax program slight margin The disappointment came k 3 programs shine time setting It possible moves consistently generate good plans random tries Since Kriegspiel plans interleaved basically useless moves maintain status quo board tenmove sequence contain good threemove sequence higher likelihood Given simplicity approach lack specialized knowledge compared minimax programs trained parameters pruning techniques B programs remarkable performance C type programs These defeat benchmark program consistently ranking 100 Elo points winning P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 683 times games lose Since approach C basically lookahead past node explored infer UCT selection major responsible performance favoring paths danger highest reward similar time settings minimax programs The UCT explorationexploitation method beats hard pruning algorithms minimax program showing game Kriegspiel totally pruning node remove interesting underestimated line play relatively bad nodes safely ignored It appears proﬁtable allocate different amounts time resources different moves like Monte Carlo tree search related narmed bandit problem 62 Tests versus humans We collected experimental evidence approach C effective letting play humans ICC reached average 1750 Elo points playing 7121 games The matches signiﬁcant took place time settings 3 minutes increment These time settings considered generous Kriegspiel games ICC meaning program win making opponents time Out games 2777 played set 20 players recognized strongest community Program Cs average score players 026 minimax programs average score players 017 This conﬁrmation gap 100 Elo points old program new 200 points gained challenge human equal terms Last approach C conﬁrmed playing strength winning gold medal perfect score Kriegspiel tournament held 14th Computer Olympiad Pamplona Spain May 2009 7 Conclusions future work There main conclusions drawn experiments First Monte Carlo tree search algorithm converge good results reasonable time diﬃcult environment like Kriegspiel lengthy simulations ﬁrst appear signiﬁcant disadvantage method However application Monte Carlo method carefully designed In fact unable achieve good level play generating random states running simulations Instead abstract game model single states important perception matters The second conclusion approach C simulations plus quiescence performed best defeating minimaxbased program faring human players This seemingly counterintuitive result explained accuracy algorithm C simulating shortterm tactical opportunities The difference B C decreases program allotted simulation time totally disappears This hint inaccuracies assumptions referees simulated messages The simulated games B suffer weaknesses Our program improved large factor It possible reﬁne compare simulation assumptions referee starting current ones example genetic algorithms adaptive meth ods It possible consider hybrid approach B C method simulate ﬁrst like C launch longer simulations moves A similar method combining heuristics simulation Go described 20 Many improvements possible In game Go Monte Carlo tree search combined gamespeciﬁc heuristics help program Selection Simulation tasks Since Monte Carlo methods relatively weaker short time algorithms drive exploration young nodes little sampling data available Examples algorithms progressive strategies described 21 Since Kriegspiel objectivedriven played humans objectivebased heuristics likely candidates good progressive strategies research underway direction More sophisticated opponent modeling techniques necessary conquer strongest opponents Acknowledgements We thank anonymous reviewers comments suggestions improved paper References 1 T Cazenave A Phantom Go program J van den Herik Ed Proc Advances Computer Games vol 11 Taipei Taiwan revised papers Lecture Notes Computer Science vol 4250 Springer 2005 pp 120126 2 J von Neumann O Morgenstern Theory Games Economic Behavior Princeton University Press 1944 3 A Parker D Nau V Subrahmanian Gametree search combinatorially large belief states Proc 19th Int Joint Conf Artiﬁcial Intelligence IJCAI05 Edinburgh Scotland 2005 pp 254259 4 P Ciancarini G Favini Representing Kriegspiel states metapositions Proc 20th Int Joint Conference Artiﬁcial Intelligence IJCAI07 Hyderabad India 2007 pp 24502455 5 M Sakuta H Iida Solving kriegspiellike problems Exploiting transposition table ICCA Journal 23 4 2000 218229 684 P Ciancarini GP Favini Artiﬁcial Intelligence 174 2010 670684 6 L Kocsis C Szepesvari Bandit based MonteCarlo planning Proc European Conference Machine Learning ECML Lecture Notes Computer Science vol 4212 Springer 2006 pp 282293 7 S Gelly Y Wang Exploration exploitation Go UCT MonteCarlo Go NIPS Proc 20th Annual Conference Neural Information Processing Systems 2006 8 R Coulom Eﬃcient selectivity backup operators MonteCarlo tree search Computers Games Lecture Notes Computer Science vol 4630 Springer 2007 pp 7283 9 J Borsboom J Saito G Chaslot J Uiterwijk A comparison MonteCarlo methods Phantom Go Proc 19th BelgianDutch Conference Artiﬁcial Intelligence BNAIC Utrecht The Netherlands 2007 10 D Billings A Davidson J Schaeffer D Szafron The challenge poker Artiﬁcial Intelligence 134 2002 201240 11 C Wetherell T Buckholtz K Booth A director Kriegspiel variant chess The Computer Journal 15 1 1972 6670 12 T Ferguson Mate bishop knight Kriegspiel Theoretical Computer Science 96 1992 389403 13 A Bolognesi P Ciancarini Computer programming Kriegspiel endings The case KR vs K J van den Herik H Iida E Heinz Eds Advances Computer Games vol 10 Kluwer Graz Austria 2003 pp 325342 14 M Nance A Vogel E Amir Reasoning partially observed actions Proc 21st National Conf Artiﬁcial Intelligence AAAI 06 Boston USA 2006 pp 888893 15 S Russell J Wolfe Eﬃcient beliefstate ANDOR search application Kriegspiel Proc 19th Int Joint Conf Artiﬁcial Intelligence IJCAI05 Edinburgh Scotland 2005 pp 278285 16 M Sakuta Deterministic solving problems uncertainty PhD thesis Shizuoka University Japan 2001 17 A Del Giudice P Gmytrasiewicz J Bryan Towards strategic Kriegspiel play opponent modeling AAMAS 09 Proc 8th Int Conf Autonomous Agents Multiagent Systems Budapest Hungary International Foundation Autonomous Agents Multiagent Systems 2009 pp 2651266 18 J Bryan P Gmytrasiewicz A Del Giudice Particle ﬁltering approximation Kriegspiel play opponent modeling AAMAS 09 Workshop Multiagent Sequential DecisionMaking Uncertain Domains 2009 19 M Chung M Buro J Schaeffer Monte Carlo planning RTS games Proc IEEE Symposium Computational Intelligence Games 2005 20 S Gelly D Silver Combining online oﬄine knowledge UCT ICML 07 Proc 24th Int Conf Machine Learning ACM Press 2007 pp 273 280 21 G Chaslot M Winands J van der Herik J Uiterwijk B Bouzy Progressive strategies MonteCarlo tree search New Mathematics Natural Computation 4 3 2008 343352