Artiﬁcial Intelligence 208 2014 4165 Contents lists available ScienceDirect Artiﬁcial Intelligence wwwelseviercomlocateartint Weighted synergy graphs effective team formation heterogeneous ad hoc agents Somchaya Liemhetcharat Manuela Veloso School Computer Science Carnegie Mellon University Pittsburgh PA 15213 USA r t c l e n f o b s t r c t Article history Received 12 September 2012 Received revised form 12 December 2013 Accepted 17 December 2013 Available online 19 December 2013 Keywords Multiagent Multirobot Heterogeneous Capability Synergy Ad hoc Team formation 1 Introduction Previous approaches select agents form team rely singleagent capabilities team performance treated sum known capabilities Motivated complex team formation situations address problem single agent capabilities known upfront ad hoc teams team performance goes singleagent capabilities depends speciﬁc synergy agents We formally introduce novel weighted synergy graph model capture new interactions agents Agents represented vertices graph capabilities represented Normallydistributed variables The edges weighted graph represent agents work synergy team We contribute learning algorithm learns weighted synergy graph observations performance teams agents Further contribute team formation algorithms ﬁnds optimal team exponential time approximates optimal team polynomial time We extensively evaluate learning algorithm demonstrate expressiveness weighted synergy graph variety problems We approach rich ad hoc team formation problem capturing rescue domain RoboCup Rescue domain simulated robots rescue civilians ﬁres simulated urban disaster We weighted synergy graph outperforms competing algorithm illustrating eﬃcacy model algorithms 2013 Elsevier BV All rights reserved Heterogeneous agents varying capabilities affect task performance We research teams hetero geneous agents performance team task relates composition team Team performance previously computed sum individual agent capabilities resources agent pos sesses 386 In work interested model team performance goes sum singleagent capabilities We understand synergy agents team team performance particu lar task depends individual agents capabilities composition team Speciﬁc agents acquire high taskbased relationship allows perform better team agents equivalent individual capabilities low taskbased relationship There illustrations synergy real human teams basically task An example allstar sports team comprised players Corresponding author Somchaya Liemhetcharat graduated Carnegie Mellon University Institute Infocomm Research I2R Singapore Tel 65 6408 2000 fax 65 6776 1378 Email addresses somricmuedu S Liemhetcharat velosocscmuedu M Veloso 00043702 matter 2013 Elsevier BV All rights reserved httpdxdoiorg101016jartint201312002 42 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 world individual agents high capabilities lower synergy team perform worse welltrained team individuals lower capabilities higher synergy To model taskbased relationships introduce connected weighted graph structure vertices represent agents edges represent taskbased relationships In graphs deﬁne level synergy set agents function shortest path agents We devise nonbinary metric team performance based Gaussian model individual agent capabilities Such probabilistic variables allow capture inherent variability team performance dynamic world We formulation team performance captures interesting characteristics effects including new agents team Most existing team formation approaches assume agent capabilities known priori 48 We motivated research ad hoc agents learn collaborate previously unknown teammates 40 An ad hoc team agents team collaborated Assuming ad hoc team address team synergy learning question given set agents unknown capabilities model learn capabilities synergy agents observations order form effective team subset agents A solution problem enable ad hoc teams applied variety problems real world effective teams need composed agents previously worked A motivating scenario urban searchandrescue USAR domain Many USAR robots developed dif ferent research groups variety hardware capabilities When disaster occurs researchers world arrive USAR robots Due safety space constraints subset robots able deployed site Since researchers collaborated past selecting effective team ad hoc problem agent capabilities synergy initially unknown Some robots designed work robots developed group cases robots different sources synergy team robot clears rubble quickly robot search Thus necessary model learn synergy robots select best team robots deployed We contribute learning algorithm uses observations performance teams agents order learn agent capabilities weighted graph structure weighted synergy graph The learning algorithm iterates weighted graph structures computes agent capabilities observations We contribute team formation algorithms uses learned weighted synergy graph ﬁnd effective team solves task Our approach assumptions agents observations performance available approach applicable multiagent domains We perform extensive experiments demonstrate learning algorithm effectively learns structure repre sentative graph types agent capabilities We compare weighted synergy graph unweighted synergy graph previously introduced 26 demonstrate weighted synergy graph expressive applicable domains We apply weighted synergy graph model RoboCup Rescue domain simulates rescue robots USAR scenario learned weighted synergy graph form nearoptimal team outperforms IQASyMTRe 48 competing algorithm In summary contributions work 1 A novel model multiagent team performance weighted synergy graph model agents vertices nected weighted graph edges represent agents work agent capabilities Normallydistributed variables 2 The deﬁnition synergy multirobot team function weighted synergy graph model 3 A team formation algorithm forms optimal team exponential time 4 A team formation algorithm approximates optimal team polynomial time 5 A learning algorithm learns weighted synergy graph observations agent teams comprising agents 6 Extensive experiments evaluate model algorithms synthetic data 7 Application weighted synergy graph model RoboCup Rescue domain The article organized follows Section 2 discusses related research multirobot task allocation coalition formation team formation ad hoc teams compares work In Section 3 formally deﬁne weighted synergy graph model team formation algorithms Section 4 contributes synergy graph learning algorithm Section 5 presents extensive learning experiments Section 6 compares expressiveness weighted unweighted synergy graph models Section 7 details experiments RoboCup Rescue domain Section 8 draws conclusions 2 Related work This section presents review related work discussing relevant domains task allocation coalition formation ad hoc coordination team formation S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 43 21 Multirobot task allocation Multirobot task allocation MRTA focused problem allocating set tasks group robots maximize utility function The MRTA problem categorized axes singletask robots ST versus multitask robots MT singlerobot tasks SR versus multirobot tasks MR instantaneous assignment IA versus timeextended assignment TA 17 Multirobot teams tasks RoboCup Rescue Simulation League 20 A city simulated disaster necessitating rescue robots help mitigate crisis Civilians located city rescued andor directed safe zones ﬁres break city The scenario MRTA problem speciﬁcally STMRTA goal assign rescue agents different tasks city effectively The tasks appear time require varying durations completed The rescue robots allocated tasks reassigned new tasks old tasks completed There variety methods assign tasks robots biologicallyinspired approach 12 coalition formation spatial temporal constraints 35 modeling problem generalized allocation problem task interdependencies 13 developing predictive models 21 We use RoboCup Rescue simulator existing algorithms designed testbed weighted synergy graph model We view RoboCup Rescue problem team formation problem existing MRTA algorithms selected simulation starts MRTA algorithm controls subset rescue robots simulation goal form optimal combination MRTA algorithms achieve maximum utility Representing heterogeneous capabilities The capabilities heterogeneous robots represented different ways One technique deﬁnes utility difference quality task execution expected resource cost 17 The utility robot performing task quantiﬁed general impose restrictions utility function However generality doubleedged sword impose structure tasks allow grouped Another technique resource model set resources ﬁrst deﬁned robot arm camera sonar 6 Then robot deﬁned vector contains number resource robot 2 arms 1 camera 0 sonar In model resources completely interchangeable robot arm robot equivalent robot arm 384439 level quality 6 In resource models tasks deﬁned list required resources task requires 2 robot arms 3 cameras 1 sonar model minimum quality resource deﬁned The service model capabilities 3846 similar resource model following distinctions robot able unable performance service quantity quality single service robot possesses Tasks deﬁned list number type service required similar resource model task allocation process robot perform single service instead providing services capable The authors state resources exchanged multiagent systems resources multirobot systems usually physical exchanged Having minimum number resources necessarily imply task completion constraints proximity represented met The resource model applied addition constraints service model abstracts represents constraints succinctly Robot capabilities described schemas inputs outputs information types robots deﬁned sets schemas sensors robots provide outputs inputs schemas perceptual vision localization motor controlling actuators communication 3343 The task deﬁned set desired outputs team robots capable completing task joint plan exists produces outputs chaining schemas robots We previously introduced concept mutual state capabilities robots capability task depends teammate joint state 25 Such model capabilities captures notion synergy robots elaborate work Evaluating task allocations There main methods quantify performance allocation tasks robots The ﬁrst method taskbased performance deﬁnes utility gained completing task The second method teambased performance deﬁnes quality performance robot performing task allocated Taskbased performance marketbased techniques 810 approaches 7 Each task associated reward computed based domainspeciﬁc factors unexplored space 49 number items picked 9 In marketbased techniques cost performing task form bid auctioneer assigns tasks based robots bids 43 The ﬁnal performance task allocation computed based proﬁt difference utility gained tasks costs incurred 9 In approaches sum utilities gained calculate performance costs allocation process 4543 goal complete subtasks minimizing total cost 31 The beneﬁt taskbased performance utility gained completing task independent task completed allocation task completed completed measure particular task costs incurred robots assigned 44 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 In teambased performance quality completed task varies depending robots allocated R 1 complete task T 1 lower quality R2 completed T 1 The performance task allocation difference quality completed tasks costs incurred robots With formulation STSRIA problem posed optimal assignment problem solved polynomial time marketbased approach 17 When task requires robot complete STMRIA problem similarities coalition formation problem Teambased performance measures task completed composition team larger impact costs 22 Coalition formation Coalition formation involves partitioning set agents A disjoint subsets maximize overall utility In characteristic function games value possible subset given characteristic function goal ﬁnd optimal coalition structure maximize sum characteristic function coalition The number coalition structures O A A ω A A2 enumerating possible coalition structures ﬁnd optimal intractable 37 Coalition formation applicable MRTA 38 domains deciding ﬂight targets UAVs 16 In characteristic function games value coalition depends agents There cent work coalition formation externalities coalitions value depends structure coalitions A logicbased representation coalition formation externalities fully expressive cise regular coalition formation representations 32 Positive negative externalities considered separately P F sub means weakly subadditive merging coalitions decreases joint value keeps constant increas ing values coalitions structure keeps constant P F sup means weakly superadditive merging coalition increases value decreases values coalitions keeps values constant 34 Mixed externalities considered positive negative effects occur 2 Agents deﬁned set types agents types competitors value coalition structure improves singleton coalitions Conversely agents remaining types collaborators value improves single large coalition Using formulation authors use branch bound algorithm ﬁnd best coalition structure guaranteed worstcase bounds Externalities coalitions interesting area considers values coalitions computed In regular coalition formation characteristic function deﬁnes values coalitions function assumed general unknown little work analyze possible structures characteristic function 23 Ad hoc teams The ad hoc problem recently introduced goal create autonomous agent able eﬃciently robustly collaborate previously unknown teammates tasks individually capable tributing team members 40 An example ad hoc problem robots preprogrammed follow certain policy adapt behavior pair jointly optimal explicit com munication The preprogrammed robot ad hoc robot viewed teacher learner multiarmed bandit problem 423 Similarly twoplayer gametheoretic setting study ad hoc agent vary actions maximize payoff bestresponse teammate varying amounts memory previous teractions 41 The work extended situations single ad hoc agent leads multiple teammates selecting optimal joint action 1 Role assignment ad hoc team considered ad hoc agent select role maximizes teams overall utility based observations teammates 15 An ad hoc agent pursuit domain vary behavior better suit teams objective capturing target modeling teammates choosing best response 4 In case state joint action fully observable model teammates unknown biased adaptive play ad hoc agent optimize joint action team 47 Lockerroom agreements policies agreed team prior evaluation coordinate robots additional communication Robots estimate state teammate order decide robot approach ball robot soccer domain robots agree policy 90 time communication necessary situations errors state estimation cause policy ﬂuctuations team 18 We interested ad hoc team formation problem agents team collaborated The capabilities agents coordinate task initially unknown goal form effective ad hoc team selecting relevant agents form team 24 Team formation Team formation focused problem selecting best subset agents complete task In ASyMTRe model robot deﬁned schemas team selected composing feasible teams planning selecting optimal team heuristic 33 The algorithm extended form teams complete multiple S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 45 tasks team formation marketbased task allocation algorithm 43 IQASyMTRe recent extension ASyMTRe handles information quality 48 compare proposed model IQASyMTRe Graphs represent relationships agents subgraph connected agents selected complete task 14 Similarly social networks agents agents different skills edge weights represent communication costs optimal team complete task cover required skills 2223 trade skills connectivity 11 The edges social network graph constraints agent assigned task ﬁnd teammates directly connected 7 form connected subnetwork 5 We recently introduced synergy graph model agents vertices unweighted connected graph agent capabilities modeled Normallydistributed variables 26 In work formally deﬁne weighted synergy graph model weighted edges graph We model expressive having runtime cost applied domains In addition perform extensive experiments demonstrate eﬃcacy learning algorithm apply weighted synergy graph model RoboCup Rescue domain 25 How work ﬁts Our goal form effective ad hoc teams observations agents performance task modeling synergistic effects agents team We build related research focus following First model teambased performance based agents individual capabilities synergistic effects members team sum singleagent capabilities Compared MRTA problem interested forming single team task allocation multiple agents multiple tasks Second coalition formation focuses partition set agents maximize value function interested modeling value function based observations agents task Third research ad hoc domain far focused single ad hoc agent adapt teammates order improve task performance We interested forming effective ad hoc multiagent team 3 Team formation task In section formally deﬁne team formation problem weighted synergy graph model models synergistic effects agents working team contribute team formation algorithms use weighted synergy graph model form effective team task 31 Formally deﬁning team formation problem We begin deﬁnition set agents deﬁnition team Deﬁnition 31 The set agents A a1 aN A agent Deﬁnition 32 A team subset A A There task performed accomplished number agents varying performance subset A valid team The performance team utility attained team forming task domaindependent In dynamic world performance teams agents nondeterministic multiple observations team task result different values Deﬁnition 33 The performance team A A P A nondeterministic Deﬁnition 34 An observation o A real value corresponding observed utility attained team A A o A sample P A For example suppose disaster occurred urban area city multiple urban search andrescue USAR personnel arrived scene offer aid A set USAR personnel task saving lives minimizing damage city Suppose A0 A USAR team performs task The perfor 34 However dynamic nature USAR task mance team measured forms observation o A0 example wind causing ﬁres spread observed performance A0 different task repeated o A0 different number time A0 performed task Since performance team nondeterministic deﬁne δoptimal team Deﬁnition 35 The δoptimal team team A u probability δ probability team A δ A exists utility u A δ δ obtains utility 46 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 PP A δ cid2 u δ PP A cid2 u cid3 δ A A δ The goal ﬁnd δoptimal team agents A A assume δ given domain formation The δoptimality measure designed order rank nondeterministic performance performance deterministic mean considered comparing performance teams cid2 operator In δoptimality δ determines risky team riskaverse team preferred For example δ 1 2 mean performance considered δoptimal team equivalent optimal team nondeterministic formance When δ 1 2 highrisk highreward team preferred low probability attaining high performance Conversely δ 1 2 lowrisk lowreward team preferred high probability attaining low performance 32 Modeling taskbased relationships In order ﬁnd δoptimal team A δ want create model agents work task In social networks domain social graphs team formation edge pair agents indicates agents social relationship weight edge indicates communication cost 2211 We interested forming teams perform task model taskbased relationships agents taskbased graph agents vertices graph edges represent taskbased relationships One possible approach taskbased graph use fullyconnected graph weight edge indicates cost 2 agents working Fig 1a shows example fullyconnected taskbased graph 4 agents The agent a1 works better a2 a3 indicated lower edge weight 1 a1 a2 compared edge weight 4 a1 a3 A fullyconnected taskbased graph major drawback taskbased relationships pairs agents completely independent pair agents connected edge weight arbitrary Using notion edge weights represent cost agents working introduce concept transitivity taskbased relationships For example agent a1 works a2 a2 works a3 a1 work a3 The transitivity occurs a1 work a2 underlying coordination strategy similarly a2 a3 Assuming agents use algorithms regardless partners switch strategies a1 a3 able work overlap coordination strategies a2 albeit higher cost We assume agents able coordinate agents use communication protocol performance based joint actions similar game theory pair agents taskbased relationship To capture notion taskbased transitivity use connected graph shortest distance agents indicates cost working Fig 1b shows connected taskbased graph modifying graph Fig 1a edges a1 a3 a1 a4 a2 a4 removed However shortest distance agents equal Fig 1a Fig 1b graphs express taskbased relationships While shortest distance agents taskbased graph represents cost agents working want explicitly model taskbased relationship Thus introduce compatibility function φ R R φdai j returns taskbased compatibility agents ai j dai j shortest distance taskbased graph φ monotonicallydecreasing function larger distances correspond lower compatibil ity Like value function V φ domainspeciﬁc intuitive examples φ φfractiond 1 d φdecayd exp cid3 cid2 d ln 2 h φfraction fraction function φdecay exponential decay function halflife h In 26 assumed edges taskbased graph unweighted having weight 1 compatibility function adjusted capture taskbased relationship agents However Fig 1 A fullyconnected taskbased graph 4 agents edge weights represent cost agents working perform task b A connected taskbased graph 4 agents edges removed preserving pairwise distances agents S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 47 Fig 2 A weighted taskbased graph 3 agents b An unweighted taskbased graph 3 agents edges weight 1 If compati bility function φd 1 d taskbased relationships agents represented unweighted graph adjusted compatibility function Fig 3 Weighted taskbased graphs 3 agents agents heterogeneous capabilities attached vertex represented values b Normallydistributed variables combinations weighted edges adjusted compatibility function capture relationship unweighted edges d compatibility a1 a2 a1 a3 a2 a3 1 Fig 2a shows example taskbased graph represented unweighted edges Suppose φd 1 5 respectively Suppose use unweighted taskbased graph ﬁnd adjusted compatibility function φcid7 d shortest distance functions unweighted weighted taskbased graphs respectively In unweighted taskbased graph longest possible distance pair agents A 1 agents formed chain Thus 3 agents greatest distance 2 Since compatibility function monotonically decreasing φcid72 1 8 cid7a1 a2 lowest compatibility a1 a2 a3 implies d cid7a2 a3 1 Fig 2b As compatibility function φcid7 d 5 impossible cid7a1 a3 2 However turn implies d deﬁned φcid71 equal 1 cid7ai j φdai j d 8 1 φcid7d 3 1 3 1 cid7 Thus work use weighted edges taskbased graph represent agents perform team 33 Representing agent capabilities The taskbased graph compatibility function described model agents work task How heterogeneous agents different capabilities affect performance task The performance team agents depends capabilities agents taskbased relationship One method represent heterogeneous agent capabilities assign value μi agent ai μi corresponds agent ai s mean capability task In work view capability measure agents contribution team performance task binary capableincapable As mean capability refers average performance agent contributes task Fig 3a shows example 3 agents a1 a2 a3 a1 works equally agents a2 a3 da1 a2 da1 d3 Even a1 works equally a2 higher mean capability a3 As mean performance team a1 a2 greater a1 a3 While values model agents mean capabilities task capture variability Since agents act dynamic nondeterministic world performance varies multiple instances Thus instead single values use Normallydistributed variable represent agents capability agent ai associated variable Ci agent ai s nondeterministic capability task We use Normal distribution unimodal corresponding agents performance peak value variability deviation Also Normal distributions widely mathematical properties exploit later By Normal variable instead single value model consistent agent task Fig 3b shows modiﬁcation Fig 3a a2 higher variance performance compared a3 As depending δ team a1 a3 outperform a1 a2 48 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 34 Deﬁning weighted synergy graph We detailed taskbased relationships represented compatibility function φ uses dis tance agent vertices graph agent capabilities represented Normallydistributed variables In section formally deﬁne weighted synergy graph compute performance team agents task Deﬁnition 36 The weighted synergy graph tuple G C G V E connected weighted graph V A set vertices corresponds set agents ei j ai j w j E edge agents ai j weight w j R C C1 C N Ci N μi σ 2 agent ai s capability task Weighted synergy graphs connected path exists pair vertices The distance dai j agents ai j deﬁned shortest distance graph Using weighted synergy graph quantify performance pair agents Deﬁnition 37 The pairwise synergy S2ai j agents ai j weighted synergy graph Ci j φdai j Ci C j dai j shortest distance ai j weighted synergy graph φ R R compatibility function We assume Ci C j independent j summation Ci C j pairwise synergy function performed easily This assumption reasonable effect agents working team captured compatibility function distance weighted synergy graph variables representing individual capabilities Ci C j independent The pairwise synergy function agents exists assume weighted graph nected shortest distance graph pair agents task accomplished number agents Section 31 We use graph structure model synergy agents speciﬁcally edges connect agents compute shortest distance pairs agents pairwise synergy building block synergy team agents Using pairwise synergy function deﬁne performance team agents Deﬁnition 38 The synergy S A set agents A A weighted synergy graph average pairwise synergy components cid6 cid5 S2ai j 1cid4 A 2 ai j A Using deﬁnitions synergy team A Normallydistributed random variable C A N μ A σ 2 A In particular μ A 1 cid4 A cid5 2 σ 2 A 1 cid4 A cid52 2 cid7 cid5 cid4 dai j φ μi μ j ai j A cid7 ai j A cid5 cid4 dai j φ 2 cid4 cid5 σ 2 σ 2 j 31 32 The synergy team A A depends critically capabilities agents A pairwise distances We illustrate synergy changes based team composition 341 A weighted synergy graph example While synergy function S linear takes average pairwise synergy interesting agent relationships modeled Fig 4 shows example weighted synergy graph ﬁve agents rescue task a1 a2 a3 personnel ambulance agent carries stretcher agent performs CPR agent drives ambulance respectively Since agents trained team taskbased rela tionship high distance weighted synergy graph low distance 1 pair As heterogeneous agents individual capabilities different For example capability a2 CPR agent high mean reﬂects high payoff CPR provides task correspondingly high variance reﬂects CPR succeed As agent individually capable saving lives driver agent stretcher agent perform ﬁrst aid task completed subset agents a4 intern hospital a5 surgeon The surgeons capability better consistent CPR agents C5 N 357 33 versus C2 N 203 109 reﬂecting surgeons skills The surgeon high S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 49 Fig 4 An example weighted synergy graph modeling capabilities taskbased relationships group agents rescue task Fig 5 Three equivalent weighted synergy graphs shortest distance pairs agents equivalent graphs taskbased relationship CPR agent reﬂected distance 2 graph agents frequently work high personnel ambulance a1 a2 a3 distances 1 The intern a4 lowest mean capability secondhighest variance reﬂecting poor skill task Further intern worked surgeon operations hospital ambulance driver coordinate arrival patients As intern edges weights 3 surgeon a5 driver a3 Since intern direct edges agents CPR agent a2 taskbased relationship transitive For example taskbased relationship a2 a4 uses distance 4 1 edge ea2a3 3 edge ea3a4 The transitivity reﬂects intern works CPR agent driver agent distance edge ea2a3 Using Deﬁnitions 37 38 assuming compatibility function φd 1 d compute synergy agents The team a1 a2 a3 agents ambulance synergy Ca1a2a3 N 178 28 Since surgeon a5 capable a2 CPR agent consider replacing a2 a5 However synergy Ca1a3a5 N 121 03 lower mean team a1 a2 a3 The lower mean taskbased relationships agents agents ambulance stretcher agent driver agent work perform better CPR agent surgeon When agents team synergy Ca1a2a3a5 N 178 08 shows addition surgeon agent instead replacing CPR agent potentially beneﬁts team lowering variance performance However adding agents improve team performance team consisting agents synergy Ca1a2a3a4a5 N 130 03 intern agent low capability poor taskbased relationship agents reﬂected high edge weights agents Thus weighted synergy graph captures interesting complex relationships agents composition team makes signiﬁcant difference overall task performance 342 Equivalence weighted synergy graphs Fig 5 shows examples weighted synergy graphs 3 agents da1 a2 1 da1 a3 2 da2 a3 3 In Fig 5a 2 edges present 3 edges present Figs 5b 5c In particular edge e23 Fig 5c shorter path exists a2 a3 edges e12 e13 Thus general graph structure deﬁne distance relationship agents Deﬁnition 39 Weighted synergy graphs S G C S cid7 G cid7 C cid7 equivalent cid7 V V cid7 C C dai j graph G dai j graph G cid7 ai j A Since shortest distance pairs agents identical compatibility computed φ identical synergy team agents equal given equivalent weighted synergy graphs In work distinguish equivalent weighted synergy graphs 50 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 35 Assumptions weighted synergy graph model The weighted synergy graph model deﬁned captures taskbased relationships agents compute synergy agent teams distances weighted graph agent capabilities We list assumptions model short discussion rationales assumptions assumptions relaxed 1 Team performance Normallydistributed 2 The synergy team function pairwise synergies 3 Taskbased relationships transitive modeled shortest distance graph Regarding Assumption 1 Section 33 explains rationale Normal distributions model team performance If actual performance distribution weighted synergy graph model modiﬁed use distribution arbitrary distribution computation pairwise synergy S2 synergy S complex adding arbitrary distributions Assumption 2 comes graphbased nature weighted synergy graph model Since edges involve agents derive synergy function S pairwise synergy S2 Further task accomplished number agents pairwise synergy agents exists If assumption relaxed synergy graph extended use hyperedges edges agents S updated reﬂect change The weighted synergy graph model assumes transitivity taskbased relationship Assumption 3 Our work focuses tasks assumption holds believe case tasks involving software agents ex ample RoboCup Rescue domain elaborate later In cases assumption hold model updated use measures shortest distance agents focus future work 36 Solving team formation problem δ We defer weighted synergy graph learned observations performance section In section δ explain use weighted synergy graph form δoptimal team task team A PP A cid2 u δ PP A cid2 u cid3 δ A A Using weighted synergy graph model synergy equations compute synergy team agents A A However synergy computed Normallydistributed variable need rank variables choose possible team To use evaluation function V function introduced 24 rename Evaluate converts Normallydistributed variable real number risk factor ρ 0 1 EvaluateX ρ μ X σ X Φ X N μ X σ 2 33 X Φ1 inverse cumulative distribution function standard Normal distribution In particular Normallydistributed variable X Evaluate X 1 δ returns value v X P X cid2 v X δ 1ρ Theorem 310 Let A A If v A cid2 v Acid7 P C Acid7 cid2 v A cid3 δ cid7 A C A S A C Acid7 S A cid7 Let EvaluateC A 1 δ v A EvaluateC Acid7 1 δ v Acid7 Proof P C Acid7 cid2 v cid7 A δ v A cid2 v cid7 A P C Acid7 cid2 v A cid3 P C Acid7 cid2 v Acid7 P C Acid7 cid2 v A cid3 δ cid2 Corollary 311 A δ argmax AAEvaluateS A 1 δ Proof Let Aδ argmax AAEvaluateS A 1 δ Let EvaluateS Aδ 1 δ v A A P S A cid2 v cid3 δ Theorem 310 A Aδ cid2 δ Evaluate returns real number use rank possible teams ﬁnd δoptimal team A δ team returns highest value Evaluate corresponds δoptimal team We contribute team forma tion algorithms FindδOptimalTeam branchandbound algorithm ﬁnds δoptimal team exponential time ApproxδOptimalTeam approximates δoptimal team polynomial time Both algorithms assume known given parameter algorithm If n unknown algorithms run iteratively n A n 1 N bestperforming team selected δ 361 Finding δoptimal team Our ﬁrst team Algorithm 1 shows pseudocode algorithm The inputs algorithm n size desired team team formation algorithm FindδOptimalTeam uses branchandbound ﬁnd δoptimal S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 51 Algorithm 1 Find δoptimal team size n end return Abest v best v A EvaluateS A 1 δ v A cid2 v max return A v A FindδOptimalTeamn δ S A Abest v best 1 A n 2 3 4 5 6 7 8 end 9 n maxai A 10 n 1 N 11 12 13 14 15 16 17 end 18 return Abest v best end Anext A ai nextmin nextmax CalculateBoundsn δ S Anext nextmax v best v best max v best nextmin Abest v best FindδOptimalTeamn δ S Anext Abest v best δ δoptimality S weighted synergy graph A team considered Abest best team far v best value best team far A cid3 n execution algorithm contains ﬁxed members team n 5 A a1 a2 FindδOptimalTeam returns optimal team 5 agents given a1 a2 team The initial FindδOptimalTeam sets A Abest v best Lines 18 base case team fullyformed value team computed Evaluate team returned value greater current best team Otherwise branching bounding performed The branching occurs agents added A algorithm recursively called lines 11 15 The bounds team computed CalculateBounds described team pruned maximum bound nextmax lower current best value v best line 13 To compute bounds team given synergy graph CalculateBounds uses following heuristic The mini mum maximum pairwise distance vertices weighted synergy graph excluding pairs selected team Anext computed maximum minimum agent capabilities excluding agents Anext The maxi mum bound computed synergy function S assuming distances undetermined agents minimum distance agent capabilities maximum Similarly minimum bound computed maximum distances minimum agent capabilities Theorem 312 Finding δoptimal team NPhard Proof We reduce maxclique problem NPcomplete 19 weighted synergy graph team formation problem Suppose G V E unweighted graph goal determine clique size n exists subgraph n vertices fully connected We deﬁne connected weighted graph G cid7 weight 2 graph G connected The number identity edges unimportant Using graph G We deﬁne compatibility function φd create weighted synergy graph S G cid8 cid7 1 dcid31 0 cid7 C Ci N 1 1 C deﬁne δ 1 2 means capabilities cid7 V E cid7 e v v cid7 E e cid7 v v cid7 1 E cid7 Further add edges matter S A 1 cid4 A cid5 2 1 cid4 A cid5 2 1 cid4 A cid5 2 1 cid4 A cid5 2 1 cid4 A 2 cid7 cid5 cid4 cid7 S2 Eq 38 aacid7 A cid7 aacid7 A cid7 aacid7 A cid4 d cid4 cid7 φ cid5cid5 Ca Cacid7 Eq 37 cid5cid5 cid4 d cid4 cid7 2φ cid2 δ 1 2 Ca Cacid7 N 1 1 cid3 cid7 cid4 2 φd 1 d cid3 1 0 cid5 aacid7 A st daacid71 cid9 cid10 cid5 cid4 cid9 e cid7 1 cid7 cid5 2 cid7 E st cid7 A cid11cid9 cid9 52 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 Algorithm 2 Approximate δoptimal team size n Aneighbor NeighborTeam Abest v neighbor EvaluateS Aneighbor 1 δ acceptv best v neighbor ApproxδOptimalTeamn δ S 1 Abest RandomTeamS n 2 v best EvaluateS Abest 1 δ 3 repeat 4 5 6 7 8 9 end 10 11 return Abest Abest Aneighbor v best v neighbor Hence clique G size n corresponds having synergy 1cid4 cid7 G fully connected edges weight 1 cid4 n cid5 2 2 n 2 cid5 2 clique G corresponds clique Further clique maximum synergy compared subsets size n maximum number edges weight 1 Thus determining δoptimal team size n synergy 2 hard determining clique n exists ﬁnding δoptimal team NPhard cid2 Finding δoptimal team NPhard branchandbound fully explore space worst case As runtime FindδOptimalTeam O Nn If n unknown algorithm run increasing n total runtime O N N 362 Approximating δoptimal team Finding δoptimal team takes exponential time worst case situations nearoptimal team suﬃcient solve problem Algorithm 2 shows pseudocode ApproxδOptimalTeam approximates δoptimal team size n given δ weighted synergy graph S Algorithm 2 ﬁrst begins generating random team size n performed randomly selecting n agents A The value team computed Evaluate function The random team value forms initial guess algorithm Next algorithm begins approximation loop Lines 310 Algorithm 2 general approximation algorithm functions accept illustrate algorithm compatible approximation algorithms In work use simulated annealing approximation algorithms hillclimbing suitable In simulated annealing function check desired number iterations run accept function accept neighbor based temperature schedule computed current iteration number difference Evaluate scores current best guess neighbor NeighborTeam Abest randomly swaps selected agent Abest unselected cid7 A Abest In way neighbor teams generated current best estimate Abest effectively explore space possible teams size n The value neighbor team v neighbor computed Evaluate team accepted rejected based criteria approximation algorithm simulated annealing uses temperature schedule Thus Algorithm 2 ﬁnds approximation δoptimal team given size n The algorithm runs O n2 syn ergy function S takes O n2 simulated annealing runs constant number iterations n known Otherwise algorithm run iteratively increasing n total runtime O N 3 In comparison bruteforce algorithm O n known O 2N cid5 cid4 N n 363 Comparing team formation algorithms To evaluate team formation algorithms compare performance search space explored value formed team generated random weighted synergy graphs We varied number agents graph 10 15 randomly created 1000 connected weighted graph structures edge weight varied 1 5 For weighted graph structure generated agent capabilities Ci N μi σ 2 randomly generated μi 50 150 σ 2 cid16 search space 0 1002 The size desired team set cid15 N 2 large possible FindδOptimalTeam ﬁnds optimal team interested evaluating times Calcu lateBounds Evaluate called For ApproxδOptimalTeam ran simulated annealing 1000 iterations 1000 calls Evaluate interested evaluating quality team formed Table 1 shows results comparisons The effectiveness formed team expressed value 0 1 0 means worst possible team minimum value 1 means optimal team maximum value S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 53 Table 1 The number evaluations FindδOptimalTeam ApproxδOptimalTeam compute approximate δoptimal team respectively quality team 0 means worst team 1 optimal team agents FindδOptimalTeam ApproxδOptimalTeam 10 11 12 13 14 15 evaluations 340 69 545 125 1216 254 1993 449 4439 932 7307 1694 Team effectiveness evaluations 1 1 1 1 1 1 1000 1000 1000 1000 1000 1000 Effectiveness A EvaluateS A 1 δ EvaluateS Amin δ 1 δ EvaluateS Amin EvaluateS A δ δ 1 δ 1 δ Team effectiveness 0996 0021 0992 0034 0997 0020 0996 0021 0998 0010 0998 0013 34 FindδOptimalTeam ﬁnds optimal team evaluates large number agent teams number calls CalculateBounds Evaluate greater size search space In comparison running ApproxδOp timalTeam ﬁxed number iterations 1000 ﬁnds δoptimal team team close optimal time When 12 agents ApproxδOptimalTeam performs competitively FindδOptimalTeam evaluating smaller teams 1000 We believe high performance FindδOptimalTeam neighbor generation allows good exploration space team high score remain high score single member swapped Further agent capabilities uniformly sampled range distances randomly generated ApproxδOptimalTeam perform outliers team agent extremely high capabilities low pairwise distances Comparatively FindδOptimalTeam bounds performance computed agents team ﬁxed bounds large agents ﬁxed narrow agents ﬁxed As pruning occur branchandbound search tree large search space required Thus use ApproxδOptimalTeam later parts work 4 Learning weighted synergy graph A cid12 We formally deﬁned weighted synergy graph team formation algorithm approximate δoptimal team However team formation algorithm assumes existence weighted synergy graph In section tribute learning algorithm learns weighted synergy graph observations performance teams agents A AA st A2 Let A2 2 A2 A Similarly let A3 2 A Hence A2 A3 sets pairs triples agents respectively Our learning algorithm uses observations agents A23 A2 A3 Speciﬁcally let O set observations A A23 o A1 o AM o Am observation performance team A task Since subset agents attain performance value task synergy function S computed pairwise synergy function S2 observation set O suﬃcient learning In particular A2 provides information shortest distance pairs agents agents capabilities pairwise synergy function S2 Deﬁnition 37 However multiple solutions pairwise synergy increasing capabilities versus decreasing distances A3 provides information overall structure graph synergy function S Deﬁnition 38 provides additional constraints learning problem A3 AA st A3 cid12 A Algorithm 3 shows pseudocode learning algorithm The algorithm ﬁrst generates random weighted graph structure N A vertices function LearnCapabilities estimates capabilities agents weighted graph structure observation set O We elaborate LearnCapabilities later section The weighted graph structure estimated capabilities form initial guess S weighted synergy graph loglikelihood observations O given S computed LogLikelihood 41 Learning weighted synergy graph structure The learning algorithm iteratively improves learned weighted synergy graph current estimate weighted synergy graph function NeighborStructure generates neighbor weighted graph structure current graph structure performing possible actions 1 Increase weight random edge 1 2 Decrease weight random edge 1 3 Add edge random weight vertices 4 Remove random edge disconnect graph 54 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 Algorithm 3 Learn weighted synergy graph cid7 NeighborStructureG LearnWeightedSynergyGraph O 1 G V E RandomStructureA 2 C LearnCapabilitiesG O 3 S G C 4 score LogLikelihoodS O 5 repeat 6 7 8 9 10 11 12 13 14 15 S PruneEdgesS 16 return S cid7 V E G cid7 LearnCapabilitiesG C cid7 G S score acceptscore score cid7 LogLikelihoodS cid7 cid7 S S score score cid7 O end cid7 C cid7 O cid7 cid7 Fig 6 The possible actions generate neighbor weighted graph structures learning algorithm Fig 6 illustrates actions While edge weights weighted synergy graph deﬁnition real numbers NeighborStructure generates structures integer weights We use integer weights learning algorithm provide close approximation allowing discrete steps neighbor generation Higher accuracy achieved increasingdecreasing edge weights smaller step size values However decreasing step size creases space possible weighted graphs tradeoff managed 42 Learning agent capabilities LearnCapabilities uses generated weighted synergy graph structure observation set O learn capabilities agents Algorithm 4 shows capabilities learned First distributions estimated observation set O For team A A23 m observations o A1 o Am teams performance An unbiased estimator estimates distribution N μ σ 2 represents As performance forms D A A23 cid4 A D A N cid4 μ A σ 2 A cid5cid5 D 41 Next matrices M1 M2 B1 B2 initialized zeros The matrices form matrix equations M1 X1 B1 T means variances agent capabilities 1 σ 2 M2 X2 B2 X1 μ1 μN T X2 σ 2 respectively N S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 55 Algorithm 4 Learn capabilities weighted synergy graph structure D LearnCapabilitiesG O 1 D EstimateDistributionsO 2 M1 0DN 3 M2 0DN 4 B 1 0D1 5 B 2 0D1 6 α 0 7 A2 ai j N μ A2 σ 2 A2 8 9 10 11 12 13 14 15 16 end 17 A3 ai j ak N μ A3 σ 2 A3 18 19 20 21 α α 1 di j distanceai j G M1α φdi j M1α j φdi j M2α φdi j 2 M2α j φdi j 2 B 1α μ A2 B 2α σ 2 A2 α α 1 di j distanceai j G dik distanceai ak G d jk distancea j ak G M1α 1 M1α j 1 M1α k 1 M2α 1 M2α j 1 M2α k 1 B 1α μ A3 B 2α σ 2 A3 3 φdi j φdik 3 φdi j φd jk 3 φdik φd jk 9 φdi j 2 φdik2 9 φdi j 2 φd jk2 9 φdik2 φd jk2 22 23 24 25 26 27 28 29 30 end 31 μ1 μN LeastSquaresM1 B 1 N LeastSquaresM2 B 2 32 σ 2 1 σ 2 33 C C1 N μ1 σ 2 34 return C 1 C N N μN σ 2 N D Fig 7 The capabilities agents learned observation set weighted synergy graph structure Lines 730 Algorithm 4 matrices ﬁlled counter α keeps track row number matrices The distance agents computed weighted graph structure G compatibility function φ Lines 1013 2227 use synergy equations Deﬁnitions 37 38 compute contribution agent 56 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 For example Fig 7 shows example weighted synergy graph structure process Algorithm 4 We use example weighted synergy graph team a1 a2 explain matrices set Suppose compatibility 2 C1 C2 Furthermore observations function φd 1 involving a1 a2 observation set estimate distribution N μa1a2 σ 2 a1a2 equations generated d Using Deﬁnition 37 team a1 a2 forms equation 1 1 2 1 22 μ1 μ2 μa1a2 cid5 cid4 σ 2 1 σ 2 2 σ 2 a1a2 These equations separately formed evaluated distributions Ci C independent Since distance a1 a2 2 di j 2 Algorithm 4 Line 9 φdi j 1 2 values columns 1 2 M1 set 1 22 second equation The values corresponding rows B 1 B2 set μa1a2 σ 2 a1a2 respectively Lines 1415 A similar process occurs observations involving agents synergy function S 2 Lines 1011 Similarly Lines 1213 sets columns 1 2 M2 φdi j2 1 Once M1 M2 B1 B2 ﬁlled iterating teams agents ﬁlling matrices leastsquares solver solve means variances agent capabilities These form agent capabilities C C1 C N returned function Algorithm 4 exploits fact agent capabilities Normallydistributed mutually independent If ca pabilities different distribution different technique solving loglikelihood expressions required 43 Calculating loglikelihood accepting neighbor candidates The weighted synergy graph structure learned capabilities combined form weighted synergy graph The func tion LogLikelihood computes sum loglikelihood observation o O given synergy graph S Every observation o A p A A agent team p R observed performance team Using syn ergy graph S synergy function S distribution As performance N μ A σ 2 A computed Deﬁnition 38 The sum The loglikelihood o deﬁned loglikelihood p distribution log exp pμ A 2 1 σ A 2π 2σ 2 A loglikelihood observations computed LogLikelihood gives measure closely synergy graph matches observations higher sum loglikelihood indicates better match The score current best weighted synergy graph compared score neighbor weighted synergy graph accepted approximation algorithm For example simulated annealing difference scores compared temperature schedule Hence learning algorithm iteratively improves weighted synergy graph structure learns agent capabilities best match observations given 5 Evaluating learning algorithm In section extensive experiments eﬃcacy learning algorithm We ﬁrst gen erate weighted synergy graphs hidden learning algorithm The observation set O training performance teams agents extracted hidden model learn new weighted synergy graph compare hidden For team agents 30 observations generated following distribution performance hidden model In order quantitatively measure learning algorithm performs loglikelihood data given weighted synergy graph During training loglikelihood training examples determine accept neighbor weighted synergy graph In addition set test data generated consists performance teams agents Thus test data contains information seen learning algorithm We measured loglikelihood test data given learned weighted synergy graph iteration simulated annealing However trial uses randomly generated hidden graph loglikelihood values vary trial trial Thus scaled loglikelihood numbers 0 1 0 loglikelihood initial guess 1 means loglikelihood learned weighted synergy graph matches hidden generate data 51 Learning representative graph structures In ﬁrst set experiments hidden weighted synergy graphs representative structure types chain loop star The learning algorithm know structure type hidden weighted synergy graph instead starts random graph structure Fig 8 shows hidden initial ﬁnal weighted synergy graphs S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 57 Fig 8 Results learning algorithm representative graph structure types The agent capabilities shown vertices laid visual purposes Examples weighted synergy graphs 5 agents generated form representative structure types b The initial randomlygenerated weighted synergy graph learning algorithm c Learned weighted synergy graphs corresponding weighted synergy graphs 1000 iterations simulated annealing Fig 9 Performance learning algorithm different weighted synergy graph structure types averaged 100 trials representative structure types When hidden graphs generated edge weights random integers range 1 10 The limits chosen provide reasonable bounds learning algorithms exploration structures allowing signiﬁcant difference compatibility agents It interesting structure learned closely matches hidden graph learning algorithm prior structures The algorithm randomly generates graph creating edges possible pairs vertices 50 probability Fig 9 shows learning curves simulated annealing 1000 iterations 10 agents averaged 100 trials structure type While scaled loglikelihood star rises quickly compared loop chain outperform star 600 iterations The ﬁnal score star loop chain 093 095 096 respectively shows learned weighted synergy graphs closely matches hidden ones The experiments run Java MATLAB leastsquares solver Intel QuadCore 24 GHz machine On average learning algorithm took 206 03 seconds perform 1000 iterations simulated annealing learn weighted synergy graph 10 agents consistent structure types 52 Learning random weighted synergy graphs In second set experiments randomly generated weighted synergy graphs explore space possible graph structures We varied number agents 10 15 varied agent capabilities C scalefactor γ Each agent capability Ci N μi σ 2 0 γ Thus randomly generated μi γ 2 σ 2 2 3γ 58 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 Fig 10 Performance learning algorithm random graph structures varying number agents averaged 100 trials Table 2 Scaled loglikelihood learned weighted synergy graphs varying number agents ρ scalefactor agent capabilities agents Scalefactor agent capabilities γ 10 11 12 13 14 15 10 096 096 093 093 090 089 25 095 095 093 093 093 090 50 097 095 094 093 093 091 75 097 095 093 092 092 091 100 096 095 094 093 091 091 Fig 11 Learning curves compatibility functions φdecay φfraction averaged 100 trials higher value γ creates larger range possible agent capabilities wanted investigate effect learning algorithm Fig 10 shows performance learning algorithm varying number agents γ 10 averaged 100 trials number agents The shape learning curve consistent performance learning algorithm decreases slightly number agents increases Table 2 shows ﬁnal score learned weighted synergy graph number agents scalefactor γ varies In cases score 089 higher indicates learned weighted synergy graph closely matches hidden The scalefactor γ little effect ﬁnal learning outcome increase number agents decreases score slightly In experiments compatibility function φfractiond 1 d Other compatibility functions possible φdecayd exp d ln 2 3 exponential decay function Fig 11 shows learning curves learning algorithm compatibility functions Although φfraction increases slowly φdecay ﬁnal score algorithm similar 1000 iterations indicates compatibility function effect learning rate ﬁnal outcome similar S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 59 Fig 12 Effectiveness teams learned weighted synergy graph learned unweighted synergy graphs simulated annealing 1000 iterations The compatibility function φfractiond 1 d 6 Evaluating weighted synergy graph model In previous section evaluated learning algorithm showed learns representative weighted graph structures attains high loglikelihood learning randomly generated weighted synergy graphs In section evaluate expressiveness weighted synergy graph model compared unweighted synergy graph 61 Experimental setup In experiments assume agent capabilities C known goal learn structure synergy graph Algorithm 3 learns structure weighted synergy graph LearnCapabilities called agent capabilities known To learn structure unweighted synergy graph learning algorithm 26 similar Algorithm 3 neighbor graph function adds removes random edges edges unweighted The process set experiments similar previous section learn structure weighted unweighted synergy graphs agent capabilities known We varied number agents N 5 15 In trial random weighted synergy graph created agent capabilities generated γ 10 The observation set comprising performance teams 2 3 agents extracted hidden synergy graph In addition performance teams 4 agents extracted hidden synergy graph form test set From observation set weighted synergy graph unweighted synergy graph learned We calculate loglikelihood learned weighted synergy graph unweighted synergy graph cid16 test data In addition learned synergy graphs approximate δoptimal team size n max4 cid15 N 2 1 N having We chose value n maximize number possible teams minimum size 4 performance teams sizes 2 3 learning synergy graphs From teams computed effectiveness N cid15 N 2 cid2 N cid5 cid4 cid4 cid5 cid16 Effectiveness A EvaluateS A 1 δ EvaluateS Amin δ 1 δ EvaluateS Amin EvaluateS A δ δ 1 δ 1 δ argmax AEvaluateS A 1 δ δoptimal team Amin δ worstperforming team given δ δ A Amin δ argmin AEvaluateS A 1 δ Thus effectiveness team value 0 1 1 δoptimal team 0 worstpossible team We use effectiveness measure performance learned synergy graph goal synergy graph form effective team performance scaled actual performance teams varies trial trial randomized generation hidden synergy graph 62 Comparison results In ﬁrst set experiments fraction compatibility function φfractiond 1 d set δ 05 For value N performed 100 trials different hidden synergy graph generated trial The weighted unweighted synergy graphs learned 1000 iterations simulated annealing trial observation set extracted hidden model Fig 12 shows effectiveness teams weighted unweighted synergy graphs As number agents N increases effectiveness teams synergy 60 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 Fig 13 Average effectiveness teams learned weighted unweighted synergy graphs 1000 2000 iterations simulated annealing learn synergy graph structure φfractiond 1 d Fig 14 Effectiveness teams learned weighted unweighted synergy graphs φdecayd exp d ln 2 2 annealing 1000 iterations simulated graph types decrease reﬂecting increase diﬃculty learning graph ﬁnding δoptimal team However values N team learned weighted synergy graph outperforms team learned unweighted synergy graph We performed paired Students Ttest onetailed 1100 total trials 11 values N 100 trials N results statistically signiﬁcant value p 98 10 258 We repeated experiments φfractiond 1 d increased number iterations simulated annealing 2000 investigate higher number iterations improve overall performance learned synergy graphs Fig 13 shows average effectiveness teams weighted unweighted synergy graphs 1000 2000 iterations simulated annealing The learned weighted synergy graph performs better 2000 iterations 20 However greater number iterations compared 1000 iterations statistically signiﬁcant value p 87 10 simulated annealing affect performance learned unweighted synergy graph p 014 Thus greater number iterations simulated annealing allows weighted synergy graph learning algorithm converge closer match hidden synergy graph best unweighted synergy graph 1000 iterations increasing number iterations little effect Thirdly compatibility function φdecayd exp d ln 2 h halflife h 2 In way compatibility function φdecay decreases slower pace φfraction initially smaller values d large As varied N ran 100 trials value N We ran 1000 iterations simulated annealing learning algorithms Fig 14 shows effectiveness teams learned synergy graphs While effectiveness learned weighted synergy graph decreases rapidly N increases compared φfraction learned weighted synergy graph outperforms learned unweighted synergy graph p 36 10 160 Thus experiments weighted synergy graph expressive unweighted synergy graph The results statistically signiﬁcant large range agent sizes compatibility functions differ ent number iterations simulated annealing S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 61 Fig 15 Screenshot RoboCup Rescue simulator showing initial positions simulated robots Green red blue white circles civilians ﬁre engines police cars ambulances respectively For interpretation references color ﬁgure reader referred web version article 7 Using weighted synergy graphs RoboCup Rescue simulator The previous sections showed eﬃcacy learning algorithm expressiveness weighted synergy graph model In section evaluate weighted synergy graph model capture team performance simulated robots realistic rescue scenario 71 The RoboCup Rescue simulator The RoboCup Rescue Simulation League provides opensource simulator agent development 20 The simulator uses map city Berlin Istanbul Paris Fig 15 simulates event natural disaster occurred Civilians randomly positioned city varying amounts health buried rubble Fires break random parts city roads city blocked fallen debris making impassable humans vehicles Three types rescue robots deployed ambulances ﬁre engines police cars The ambulances help rescue civilians ﬁre engines ﬁres police cars clear road obstructions The simulator runs ﬁxed number timesteps score weighted sum based number civilians rescue robots alive proportion buildings city burnt The RoboCup Rescue domain multirobot task allocation problem STMRTA category 17 Different approaches solve problem treating generalized allocation problem 13 biologically inspired approach 12 extending coalition formation handle spatial temporal constraints 35 72 Experimental setup As RoboCup Rescue competition participants universities world develop algorithms control rescue robots noncivilians We use RoboCup Rescue simulator ad hoc multirobot scenario combinations preexisting algorithms compose effective team The rescue robots standardized communication protocol deﬁned RoboCup Rescue simulator allows different RoboCup partici pants algorithms run simultaneously controlling subset rescue robots In particular interested modeling performance ad hoc combinations algorithms For example running algorithms simulta neously algorithm controls half rescue robots We wanted compare effectiveness weighted synergy graph model modeling interactions forming effective team versus unweighted synergy graph 26 IQASymTRe 48 We Istanbul1 map RoboCup 2011 source code 6 RoboCup participants Poseidon RoboAKUT Rione RMAS_ArtSapience SBCe_Saviour SEU_RedSun 36 The source code 8 RoboCup participants available download 6 ran box modiﬁcation In Istanbul1 map 46 rescue robots controlled 6 RoboCup algorithms designed control 46 robots perform task We treated 6 RoboCup algorithms 6 separate agents subset 6 agents control 46 robots 62 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 We distributed 46 rescue robots selected agents randomly agent controlled approximately equal number rescue robots For example agents RoboCup algorithms picked algorithm control 23 robots assigned randomly score agents score returned RoboCup Rescue simulator end simulation based number civilians rescue robots alive health buildings city The RoboCup Rescue simulator models randomness noise simulation default settings simulator experiments Istanbul1 map RoboCup 2011 6 We varied number selected agents N 2 5 For value N N combinations agents ran 30 simulations combination For example N 3 20 combinations agent triples Poseidon RoboAKUT Rione ran 30 simulations triple Each simulation different allocation rescue robots agents simulation resulted different score given simulator An observation consists agents Poseidon RoboAKUT Rione single score attained 148 30 observations agent team combination cid4 cid5 cid4 We scores simulation runs N 2 N 3 observation set training 1050 30 cid5 6 total observations To evaluate learned models algorithms formed teams size 4 5 Since score 3 team changes depending robot allocation average score attained 30 simulations measure corresponding δ 05 problem deﬁnition We form team size 6 team exists agents We include data N 1 training testing simulator deterministic given ﬁxed initial random seed variance agents performance 30 simulations 6 2 cid5 cid4 73 Modeling agent interactions h For weighted unweighted synergy graph models decay compatibility function φdecayd exp d ln 2 h 2 ran 1000 iterations simulated annealing We chose decay compatibility function compatibility decreases gradually φfraction 1000 iterations simulated annealing good results previous sections In addition learned synergy graph depends random process changing edges performed 10 trials learn synergy graph RoboCup Rescue data IQASyMTRe 48 calculates expected cost coalition A task t cid6 cost A t cid13cost A tF Q A Yt 71 cid13cost A t summation costs activated schemas A Q A coalition quality A Yt task type t Since single task coalitions combinations agents complete task set F Q A Yt 1 A As cost A t cid13cost A t Since internal schemas participants algorithms unknown treat agent single schema estimate cost average score agent combinations involving cid13costa A st A score A A st A 72 agent 6 algorithms A team 2 5 agents score A score obtained RoboCup Rescue simulator agents A control rescue robots From cost agent deﬁne cost coalition IQASymTRe cid13cost A t cid7 A cid13costa 73 To form team IQASyMTRe iterate possible combinations agents given desired team size pick team highest cost Typically team lowest cost picked IQASyMTRe score measure cost actual metric cost algorithms desirable pick team highest score 74 Ad hoc team formation results Table 3 shows scores teams formed weighted synergy graph unweighted synergy graph IQ ASyMTRe The score corresponds ﬁnal value returned RoboCup simulator end simulation The weighted unweighted synergy graph models perform similarly showing weighted synergy graph model expressive shown previous section interactions agents RoboCup Rescue domain modeled unweighted graph We believe synergy graph models performed identically small number agents larger number agents interactions complex weighted synergy graph outperform unweighted Both synergy graph models ﬁnd optimal 4agent team ﬁnd optimal 5agent team 80 time In comparison IQASyMTRe ﬁnds good nonoptimal 4agent team ﬁnds 5agent team close worst possible combination The results statistically signiﬁcant value S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 63 Table 3 Scores combinations algorithms RoboCup Rescue simulator weighted synergy graph model algorithms formed Algorithm Weighted Synergy Graph Unweighted Synergy Graph IQASyMTRe Best Possible Team Worst Possible Team 4 agents 143 0 143 0 123 143 71 5 agents 127 07 127 07 84 130 81 137 4 agents p 37 10 9 5 agents singletailed paired Ttest synergy graph p 54 10 model IQASyMTRe The pvalues weighted unweighted models versus IQASMTRe identical synergy graph models attained results Thus synergy graph model outperforms IQASyMTRe The results compelling observations 2 3 agents training teams 4 5 agents formed Further assumptions agents treated blackboxes synergy graph model Thus eﬃcacy synergy graph model learning team formation algorithms demonstrated RoboCup Rescue domain extended domains 8 Conclusions We contributed representation team performance goes sum singleagent capabilities formally introduced weighted synergy graph model inherent differences agents capabilities modeled Normallydistributed variables taskbased relationship modeled connected weighted graph Weighted syn ergy graphs applicable multiagent domains presented example rescue task showed different agents taskbased relationships modeled effectively To apply weighted synergy graphs problem domains contributed algorithm learns weighted synergy graph observations team formation algorithms use learned weighted synergy graph form effective multiagent team These algorithms enable weighted synergy graph model applied variety problems input training observations The learning algorithm learns structure weighted graph iteratively improving graph structure learns agents capabilities solving equations derived observations graph structure Our ﬁrst team formation algorithm uses branchandbound ﬁnd optimal team second team formation algorithm explores possible teams approximates optimal team Although approximation algorithm formal guarantees formed team team formed close optimal exploring small subset space The optimal team formation algorithm searches large space order guarantee optimality believe approximation algorithm applicable scalability issues optimal team formation algorithm real problems We extensively evaluated learning algorithm First created random weighted synergy graphs representative graph structure types demonstrated learning algorithm learned weighted synergy graphs structures similar types Second generated random weighted synergy graphs hidden learning algorithm showed loglikelihood learned weighted synergy graph closely matches hidden ones Thus agent capabilities graph structures effectively learned learning algorithm Although evaluated learning algorithm data derived weighted synergy graphs learning algorithm applicable data source learn closest weighted synergy graph matches data The learning algorithm guaranteed bounds learned result experiments believe small number iterations simulated annealing compared entire space weighted graphs suﬃcient learn model matches observed data We applied weighted synergy graph model problem domain urban searchandrescue Using RoboCup Rescue simulator minor modiﬁcations algorithms written RoboCup participants combinations algorithms run parallel perform RoboCup Rescue task We treated algorithms separate agents modeled capabilities taskbased relationships combined form ad hoc team We showed weighted synergy graph model forms nearoptimal team outperforming teams selected IQASyMTRe Hence weighted synergy graph model effectively learned modeled synergy RoboCup Rescue algorithms The weighted synergy graph effectively models agent capabilities taskbased relationships Our algorithms require assumption retrieving observations agents performance task makes applicable multiagent multirobot domains In particular long problem domains treated blackbox input multiagent team output observed performance weighted synergy graph model appli cable We applied weighted synergy graph model multirobot problems foraging 27 conﬁguring robots modules 30 continue apply model domains Modeling learning synergy multiagent teams novel contribution actively pursuing area research We successfully applied 64 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 weighted synergy graphs actual robots performing role assignment 27 forming teams robust fail ures 28 introduced algorithm learn synergy new teammate 29 We synergy graphs interesting problems modeling taskbased relationships nontransitive modeling agents learn coordinate better time Acknowledgements This work partially supported Air Force Research Laboratory grant number FA87501020165 Oﬃce Naval Research grant number N000140911031 Agency Science Technology Research ASTAR Singapore The views conclusions contained document authors terpreted representing oﬃcial policies expressed implied sponsoring institution US government entity References 1 N Agmon P Stone Leading multiple ad hoc teammates joint action settings AAAI Workshop Interactive Decision Theory Game Theory 2011 2 B Banerjee L Kraemer Coalition structure generation multiagent systems mixed externalities Proceedings International Conference Autonomous Agents Multiagent Systems 2010 pp 175182 3 S Barrett P Stone Ad hoc teamwork modeled multiarmed bandits An extension discounted inﬁnite rewards Proc Int Conf Autonomous Agents Multiagent Systems Adaptive Learning Agents Workshop 2011 4 S Barrett P Stone S Kraus Empirical evaluation ad hoc teamwork pursuit domain Proceedings International Conference Autonomous Agents Multiagent Systems 2011 pp 567574 5 B Bulka M Gaston M desJardins Local strategy learning networked multiagent team formation J Autonom Agents MultiAgent Syst 15 2007 2945 6 J Chen D Sun Resource constrained multirobot task allocation based leaderfollower coalition methodology J Robot Res 30 12 2011 14231434 7 M Weerdt Y Zhang T Klos Distributed task allocation social networks Proceedings International Conference Autonomous Agents Multiagent Systems 2007 pp 500507 8 MB Dias TraderBots A new paradigm robust eﬃcient multirobot coordination dynamic environments PhD thesis The Robotics Institute Carnegie Mellon University 2004 9 MB Dias A Stentz A free market architecture distributed control multirobot Proceedings International Conference Intelligent Autonomous Systems 2000 pp 115122 10 MB Dias A Stentz Multirobot exploration controlled market economy Proceedings IEEERSJ International Conference Intelligent Robots Systems 2002 pp 27142720 11 C Dorn S Dustdar Composing nearoptimal expert teams A tradeoff skills connectivity Proceedings International Conference Cooperative Information Systems 2010 pp 472489 12 Fernando dos Santos Ana LC Bazzan Towards eﬃcient multiagent task allocation robocup rescue A biologicallyinspired approach J Autonom Agents MultiAgent Syst 22 2011 465486 13 P Ferreira F Dos Santos AL Bazzan D Epstein SJ Waskow RoboCup Rescue multiagent task allocation teams experiments task interdependencies J Autonom Agents MultiAgent Syst 20 2010 421443 14 M Gaston M desJardins Agentorganized networks dynamic team formation Proceedings International Conference Autonomous Agents Multiagent Systems 2005 pp 230237 15 K Genter N Agmon P Stone Rolebased ad hoc teamwork Proceedings Plan Activity Intent Recognition Workshop TwentyFifth Conference Artiﬁcial Intelligence PAIR11 2011 16 JM George J Pinto PB Sujit JB Sousa Multiple UAV coalition formation strategies extended abstract Proceedings International Confer ence Autonomous Agents Multiagent Systems 2010 pp 15031504 17 BP Gerkey MJ Mataric A formal analysis taxonomy task allocation multirobot systems J Robot Res 23 9 2004 939954 18 M Isik F Stulp G Mayer H Utz Coordination negotiation teams heterogeneous robots Proceedings RoboCup International Symposium 2006 pp 355362 19 RM Karp Reducibility combinatorial problems Complexity Computer Computations 1972 pp 85103 20 H Kitano S Tadokoro I Noda H Matsubara T Takahashi A Shinjou S Shimada RoboCup Rescue Search rescue largescale disasters domain autonomous agents research Proceedings IEEE International Conference Systems Man Cybernetics 1999 pp 739743 21 A Kleiner M Brenner T Bräuer C Dornhege M Göbelbecker M Luber J Prediger J Stückler B Nebel Successful search rescue simulated disaster areas RoboCup 2005 Robot Soccer World Cup IX vol 4020 2006 pp 323334 22 T Lappas K Liu E Terzi Finding team experts social networks Proceedings International Conference Knowledge Discovery Data Mining 2009 pp 467476 23 C Li M Shan Team formation generalized tasks expertise social networks Proceedings International Conference Social Computing 2010 pp 916 24 S Liemhetcharat M Veloso Mutual state capabilitybased role assignment model extended abstract Proceedings International Conference Autonomous Agents Multiagent Systems 2010 pp 15091510 25 S Liemhetcharat M Veloso Modeling mutual capabilities heterogeneous teams role assignment Proceedings IEEERSJ International Conference Intelligent Robots Systems 2011 pp 36383644 26 S Liemhetcharat M Veloso Modeling learning synergy team formation heterogeneous agents Proceedings International Con ference Autonomous Agents Multiagent Systems 2012 pp 365375 nominated Best Student Paper Award 27 S Liemhetcharat M Veloso Weighted synergy graphs role assignment ad hoc heterogeneous robot teams Proceedings IEEERSJ International Conference Intelligent Robots Systems 2012 pp 52475254 28 S Liemhetcharat M Veloso Forming effective multirobot team robust failures Proceedings IEEERSJ International Conference Intelligent Robots Systems 2013 pp 52405245 29 S Liemhetcharat M Veloso Learning synergy new teammate Proceedings IEEERSJ International Conference Intelligent Robots Systems 2013 pp 52465251 S Liemhetcharat M Veloso Artiﬁcial Intelligence 208 2014 4165 65 30 S Liemhetcharat M Veloso Synergy graphs conﬁguring robot team members Proceedings International Conference Autonomous Agents Multiagent Systems 2013 pp 111118 31 C Lim R Mamat T Braunl Marketbased approach multiteam robot cooperation Proceedings International Conference Autonomous Robots Agents 2009 pp 6267 32 T Michalak D Marciniak M Szamotulski T Rahwan M Wooldridge P McBurney N Jennings A logicbased representation coalitional games externalities Proceedings International Conference Autonomous Agents Multiagent Systems 2010 pp 125132 33 L Parker F Tang Building multirobot coalitions automated task solution synthesis Proc IEEE 94 7 2006 12891305 34 T Rahwan T Michalak N Jennings M Wooldridge P McBurney Coalition formation spatial temporal constraints Proceedings International Joint Conference Artiﬁcial Intelligence 2009 pp 257263 35 S Ramchurn M Polukarov A Farinelli C Truong Coalition formation spatial temporal constraints Proceedings International Conference Autonomous Agents Multiagent Systems 2010 pp 11811188 36 RoboCupRescue RoboCup Rescue Simulation League httproborescuesourceforgenet 2011 online 37 T Sandholm K Larson M Andersson O Shehory F Tohme Coalition structure generation worst case guarantees J Artif Intell 111 1999 209238 38 T Service J Adams Coalition formation task allocation theory algorithms J Autonom Agents MultiAgent Syst 22 2011 225248 39 O Shehory S Kraus Task allocation agent coalition formation J Artif Intell 101 12 1998 165200 40 P Stone G Kaminka S Kraus J Rosenschein Ad hoc autonomous agent teams Collaboration precoordination Proceedings Inter national Conference Artiﬁcial Intelligence 2010 41 P Stone G Kaminka J Rosenschein Leading bestresponse teammate ad hoc team AgentMediated Electronic Commerce Designing Trading Strategies Mechanisms Electronic Markets 2009 pp 132146 42 P Stone S Kraus To teach teach Decision making uncertainty ad hoc teams Proceedings International Conference Autonomous Agents Multiagent Systems 2010 pp 117124 43 F Tang L Parker A complete methodology generating multirobot task solutions ASyMTReD marketbased task allocation Proceed ings IEEE International Conference Robotics Automation 2007 pp 33513358 44 P Tosic G Agha Maximal clique based distributed coalition formation task allocation largescale multiagent systems Proceedings International Workshop Massively MultiAgent Systems 2004 pp 104120 45 L Vig J Adams Marketbased multirobot coalition formation Proceedings International Symposium Distributed Autonomous Robotics Systems 2006 pp 227236 46 L Vig J Adams Coalition formation From software agents robots J Intell Robot Syst 50 2007 85118 47 F Wu S Zilberstein X Chen Online planning ad hoc autonomous agent teams Proceedings International Joint Conference Artiﬁcial Intelligence 2011 pp 439445 48 Y Zhang L Parker Task allocation executable coalitions multirobot tasks Proceedings IEEE International Conference Robotics Automation 2012 49 R Zlot A Stentz MB Dias S Thayer Multirobot exploration controlled market economy Proceedings IEEE International Conference Robotics Automation 2002 pp 30163023