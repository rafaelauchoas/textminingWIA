Artiﬁcial Intelligence 171 2007 514534 wwwelseviercomlocateartint Random constraint satisfaction Easy generation hard satisﬁable instances Ke Xu a1 Frédéric Boussemart b2 Fred Hemery b2 Christophe Lecoutre b2 National Lab Software Development Environment School Computers Beihang University Beijing 100083 China b CRIL Centre Recherche en Informatique Lens CNRS FRE 2499 rue luniversité SP 16 62307 Lens cedex France Received 18 April 2006 received revised form 30 January 2007 accepted 9 April 2007 Available online 14 April 2007 Abstract In paper models random CSP instances proposed Xu Li K Xu W Li Exact phase transitions random constraint satisfaction problems Journal Artiﬁcial Intelligence Research 12 2000 93103 K Xu W Li Many hard examples exact phase transitions application generating hard satisﬁable instances Technical report CoRR Report csCC0302001 Revised version Theoretical Computer Science 355 2006 291302 theoretical practical Indeed models called RB RD present nice features First easy generate random instances arity particular structure integrated property enforced instances Then existence asymptotic phase transition guaranteed applying limited restriction domain size constraint tightness In case threshold point precisely located instances guarantee hard threshold exponential treeresolution complexity Next formal analysis shows possible generate forced satisﬁable instances hardness similar unforced satisﬁable ones This analysis supported representative results taken intensive experimentation carried complete incomplete search methods 2007 Elsevier BV All rights reserved Keywords Phase transition Constraint network Hard random instances 1 Introduction Over past years study phase transition phenomena exciting areas Com puter Science Artiﬁcial Intelligence Numerous studies established NPcomplete problems SAT CSP hardest random instances occur control parameter varied accordingly underconstrained region instances surely satisﬁable overconstrained region instances surely unsatisﬁable In transition region threshold half instances Corresponding authors Please correspond ﬁrst author theory paper author experiment Email addresses kexunldsebuaaeducn K Xu boussemartcrilunivartoisfr F Boussemart hemerycrilunivartoisfr F Hemery lecoutrecrilunivartoisfr C Lecoutre 1 Author partially supported National 973 Program China Grant No 2005CB321901 NSFC Grant 60403003 FANEDD Grant 200241 2 Authors supported CNRS programme COCOA la Région NordPasdeCalais IUT Lens 00043702 matter 2007 Elsevier BV All rights reserved doi101016jartint200704001 K Xu et al Artiﬁcial Intelligence 171 2007 514534 515 satisﬁable half instances unsatisﬁable Generating hard instances important understanding complexity problems providing challenging benchmarks 11 Another remarkable progress Artiﬁcial Intelligence development incomplete algorithms kinds problems And progress important issue produce hard satisﬁable instances order evaluate efﬁciency algorithms approach involves exploiting complete algorithm order random satisﬁable instances generated threshold instances limited size Also shown generating hard forced satisﬁable instances related open problems cryptography computing oneway function 1120 In paper mainly focus random CSP Constraint Satisfaction Problem instances Initially stan dard models denoted A B C D 1639 introduced generate random binary CSP instances However Achlioptas et al 3 identiﬁed shortcoming models Indeed prove random instances generated models suffer trivial unsatisﬁability number variables increases To overcome deﬁciency standard models alternatives proposed On hand model E proposed 3 generalized model 31 However model E permit tune density instances generalized model requires awkward exploitation probability distributions Also alternatives correspond incorporating structure generated random instances Roughly speaking involves ensuring generated instances arc consistent 16 path consistent 15 The main drawback approaches generating random instances natural easy task On hand standard models revised 14384445 controlling way parameters change problem size increases The alternative model D scheme 38 domain size average degree constraint graph increase number variables guarantees occurrence asymptotic phase transition constraint tightness varied The revised models called RB RD 4445 provide guarantee varying control parameters critical value addition computed Also 14 range suitable parameter settings identiﬁed allows exhibit nontrivial threshold satisﬁability Their theoretical results apply binary instances taken model A symmetric binary instances socalled model B corresponding standard associates relation constraint The models RB RD present nice features easy generate random instances arity particular structure integrated property enforced instances existence asymptotic phase transition guaranteed applying limited restriction domain size constraint tightness For instances involving constraints arity k domain size required greater kth root number variables threshold value constraint tightness required k1 k asymptotic phase transition exists threshold point precisely located instances generated following models RB RD guarantee hard threshold exponential tree resolution complexity possible generate forced satisﬁable instances hardness similar unforced satisﬁable ones Concerning item note instances forced satisﬁable simply built randomly generating ﬁrst solution set constraints guaranteed support solution We conditions establish existence asymptotic phase transition model RB asymptotic similarity forced unforced satisﬁable instances model RB respect number distribution solutions We believe important aspect contribution Also remember CSP generalization SAT problem ﬁrst proven NPcomplete problem plays central role computational complexity In study phase transitions NPcomplete problems random 3SAT received attention theoretically experimentally past decade However existence threshold phenomenon random 3SAT established exact value threshold point As work random 3SAT focused proving lower bounds upper bounds threshold point Through series hard work current best lower bound upper bound random 3SAT 342 22 4506 13 respectively In contrast existence phase transitions model RB established threshold points known exactly In fact results model RB mainly 516 K Xu et al Artiﬁcial Intelligence 171 2007 514534 obtained direct application second moment method unfortunately fails random 3SAT The reason distribution number solutions model RB uniform instances number solutions random 3SAT distribution highly skewed instances far solutions instances From viewpoint phase transitions NPcomplete problems interesting investigate aspects random 3SAT model RB behave differently comparisons shed light fundamental properties NPcomplete problems In paper example comparison random 3SAT model RB generate satisﬁable instances strategy produce different results Finally note experimental CSP studies random instances model B varying tightness density benchmarks algorithms However instances evaluate asymptotic performance algorithms To ﬁll need good way generate random instances increasing size number variables guaranteed hard An advantage model RB model B provides simple method generate asymptotically hard instances download generator httpwwwcril univartoisfrlecoutre useful understanding makes problem hard solve This paper extended version 43 organized follows We ﬁrst introduce constraint networks overview different models proposed generate random networks Section 2 Then introduce models RB RD Section 3 present variant model RD generate random networks involving constraints arity Section 4 Next provide formal analysis generating forced unforced hard satisﬁable instances Section 5 Finally present algorithms Section 6 experimentation Section 7 concluding discuss related work 2 Models random constraint networks We ﬁrst introduce constraint networks Constraint Satisfaction Problem Deﬁnition 1 A Constraint Network pair X C X X1 Xn ﬁnite set n variables variable Xi associated domain denoted domXi contains set values allowed Xi C C1 Cm ﬁnite set m constraints constraint Cj involves subset variables X called scope denoted varsCj associated relation denoted relCj contains set tuples allowed variables varsCj The arity constraint C number variables involved C number variables scope The tightness constraint corresponds proportion disallowed tuples associated relation However generates random constraints possible deﬁne tightness probability tuple disal lowed A solution constraint network assignment values variables constraints satisﬁed The set solutions P denoted solP A constraint network said satisﬁable iff admits solution The Constraint Satisfaction Problem CSP NPcomplete task determining given constraint network satisﬁable A CSP instance deﬁned constraint network solving involves ﬁnding solution determining unsatisﬁability Now quick overview different models proposed generate random constraint networks Four conventional models denoted A B C D 1639 generate random binary constraint networks introduced Whatever model chosen steps necessary generate network In ﬁrst step build macrostructure called constraint hypergraph second step build microstructure called consistency hypergraph Actually steps interleaved The constraint hyper graph composed n vertices corresponding variables m hyperedges corresponding constraints hyperedge links variables occurring scope constraint represents The consistency hypergraph relCj hyper domXi vertices corresponding values domains composed edges corresponding supports allowed tuples relations Note density constraint network hypergraph assuming involves constraints arity k distinct scopes equal mn m j 1 n i1 cid2 cid2 k K Xu et al Artiﬁcial Intelligence 171 2007 514534 517 Each random CSP instance characterized tuple k n d p1 p2 k denotes arity constraints n number variables d uniform domain size p1 measure density constraint graph p2 measure tightness constraints There models p1 p2 represent probability proportion p1 considered probability models A C proportion models B D p2 considered probability models A D proportion models B C Note binary instances k usually omitted Model B deﬁned follows Deﬁnition 2 Model B A class random CSP instances model B denoted Bk n d p1 p2 instance k cid2 2 denotes arity constraint n cid2 2 denotes number variables d cid2 2 denotes size domain 1 cid2 p1 0 determines number m p1n 1 p2 0 determines number t p2d k disallowed tuples relation k constraints To generate instance P Bk n d p1 p2 build m constraints formed randomly select ing repetition scope k distinct variables randomly selecting repetition relation t distinct disallowed tuples Note p1n 2 p2d k rounded nearest integer Then prefer instead propor tions directly number m constraints number t disallowed tuples Model D deﬁned follows Deﬁnition 3 Model D A class random CSP instances model D denoted Dk n d p1 p2 instance k cid2 2 denotes arity constraint n cid2 2 denotes number variables d cid2 2 denotes size domain 1 cid2 p1 0 determines number m p1n 1 p2 0 denotes constraint tightness terms probability k constraints To generate instance P Dk n d p1 p2 build m constraints formed randomly select ing repetition scope k distinct variables randomly selecting repetition relation d k tuples allowed probability p2 It shown 10 hardest random instances occur socalled phase transition constrained region instances surely satisﬁable overconstrained region problems surely unsatisﬁable This phase transition occurs control parameter varied accordingly usually p2 κ measures constrainedness instance 17 Furthermore peak difﬁculty corresponds approximately value control parameter 50 instances satisﬁable referred threshold crossover point The mushy region 3439 denotes range values control parameter phase transition takes place Locating phase transition addressed 3941 However Achlioptas et al 3 identiﬁed shortcoming standard models Indeed prove random problem instances generated models suffer trivial insolubility problem size increases More precisely asymptotically p2 cid2 1d instances surely contain ﬂawed variable number variables increases parameters kept constant A ﬂawed variable variable value associated domain ﬂawed consistent respect constraint instance Therefore instance involving ﬂawed variable clearly unsatisﬁable shown polynomial time 518 K Xu et al Artiﬁcial Intelligence 171 2007 514534 To overcome deﬁciency standard models alternatives proposed In 3 model E troduced selecting probability p d 2n 2 tuples X Y b X Y distinct variables domX b domY This new model proved asymptotically interesting However pro vides ﬂexibility construction network involves quickly generating complete constraint graph p small A generalized model proposed Molloy 31 introduction probability dis tribution order directly select constraints instead selecting allowed tuples The author proves behaved sets constraints obtained probability distribution allow exhibiting phase transition As distributions awkward practice issue generating difﬁcult instances distributions addressed 31 On hand works focused incorporating structure generated random instances Roughly speaking principle ensure generated instances arc consistent 16 strongly path consistent 15 More precisely Gent et al 16 propose variants called ﬂawless models standard models prevent presence ﬂawed values They consider value supported unique value value required support value achieve ﬁxing binary constraint set S d allowed pairs pair t1 t2 elements S t11 cid4 t21 t12 cid4 t22 Then instances generated according ﬂawless models guaranteed arcconsistent value p2 12 suffer asymptotically trivial insolubility Unluckily solved polynomial time embed easy subproblems 15 A generalization approach proposed Gao Culberson 15 The authors relation chosen way generated instances strongly path consistent instances admit exponential resolution complexity matter large constraint tightness By ensuring presence lregular bipartite graph generated relation sufﬁciently large l instances guaranteed strongly path consistent The main drawback approaches generating random instances natural easy task Finally 14384445 standard models revised controlling way parameters change problem size increases The alternative model D scheme proposed Smith 38 guarantees occurrence phase transition parameters controlled constraint tightness certain range The revised models RB RD introduced Xu Li 4445 provide guarantee varying control parameters critical value computed In section instances models RB RD hard present resolution proofs size exponential size Also Frieze Molloy 14 identify range suitable parameter settings order exhibit nontrivial threshold satisﬁability Their theoretical results apply binary instances taken model A symmetric binary instances socalled model B corresponding standard associates relation constraint 3 Models RB RD In section introduce theoretical results models deﬁned 4445 First present model RB represents alternative model B Note order simplify theoretical analysis unlike model B model RB allows selecting constraints identical scopes However results introduced hold model B selection scopes performed repetition The reason number repeated constraints asymptotically smaller total number constraints neglected analysis But main difference model RB respect model B domain size variable grows polynomially number variables Deﬁnition 4 Model RB A class random CSP instances model RB denoted RBk n α r p instance k cid2 2 denotes arity constraint n cid2 2 denotes number variables α 0 determines domain size d nα variable r 0 determines number m rn ln n constraints 1 p 0 determines number t pd k disallowed tuples relation K Xu et al Artiﬁcial Intelligence 171 2007 514534 519 To generate instance P RBk n α r p build m constraints formed randomly selecting repetition scope k distinct variables randomly selecting repetition relation t distinct disallowed tuples When ﬁxed α r indication growth domain sizes number constraints n increases d nα m rn ln n respectively It possible example determine critical value pcr p hardest instances occur Indeed pcr 1 eαr equivalent expression pcr given 39 Note nα rn ln n pd k rounded nearest integer Another model denoted model RD similar model RB p denotes probability instead propor tion Deﬁnition 5 Model RD A class random CSP instances model RD denoted RDk n α r p instance k cid2 2 denotes arity constraint n cid2 2 denotes number variables α 0 determines domain size d nα variable r 0 determines number m rn ln n constraints 1 p 0 denotes constraint tightness terms probability To generate instance P RDk n α r p build m constraints formed randomly selecting repetition scope k distinct variables randomly selecting repetition relation d k tuples allowed probability p For convenience paper given results hold models RB RD exclusively refer model RB In 44 proved model RB certain conditions avoids trivial asymptotic behaviors guarantees exact phase transitions More precisely Pr denoting probability distribution following theorems hold Theorem 1 If k α 1 k p cid3 k1 k constants cid5 cid3 P RBk n α r p sat cid4 1 r rcr 0 r rcr Pr lim n rcr α ln1p Theorem 2 If k α 1 k pcr cid3 k1 k constants cid5 cid3 P RBk n α r p sat cid4 lim n Pr 1 p pcr 0 p pcr pcr 1 e α r equivalent ke α Remark condition pcr cid3 k1 k r cid2 1 given 44 Theorems 1 2 indicate phase transition guaranteed provided domain size small constraint tightness threshold value constraint tightness large As illustration instances involving binary constraints domain size required greater square root number variables α 12 d nα constraint tightness threshold value tightness required 50 The following table gives limits Theorems 1 2 different arities k 2 3 4 5 α 12 13 14 15 p pcr cid3 12 cid3 23 cid3 34 cid3 45 520 K Xu et al Artiﬁcial Intelligence 171 2007 514534 The theorem establishes unsatisﬁable instances model RB surely guarantee hard A similar result model A obtained 14 respect binary instances k 2 Mitchell 29 described kind behavior instances constraints fewer d2 disallowed tuples Theorem 3 If P RBk n α r p k α r p constants surely3 P treelike resolution length 2cid4n The proof based strategy following results 630 omitted 45 To summarize model RB guarantees exact phase transitions hard instances threshold It contradicts statement 15 requirement extremely low tightness existing random models order nontrivial threshold behaviors guaranteed hard instances threshold 4 Random constraint networks intention In Constraint Programming experiments performed far random constraint networks involve binary instances The main reason limitation space complexity considerations Indeed space required store tuples allowed disallowed relation associated constraint exponentially grows arity For instance 109 memory units needed store 1 tuples 10ary constraint 10 values domain 108 tuples composed 10 values stored Hence practice possible represent large nonbinary random networks constraints given extension In section propose variant initially introduced 24 model RD network involves constraints deﬁned intention predicate As immediate consequence obstacle generate problem instances constraints arity perform experiments instances First possible deﬁne set C random constraints deﬁned intention Note consider loss generality constraint C C unique identiﬁcation number idC The function isConsistent Algorithm 1 viewed predicate deﬁning random constraints ﬁned intention problem instance Indeed kary constraint C ktuple t isConsistentC t p determines tuple t allowed C considering tightness p To achieve unique real random value 0 1 exclusive computed function f parameters identiﬁcation number idC C given tuple t Then simply compare computed random value constraint tightness p seen acceptance boundary The function f implemented different ways For instance compute seed parameters f use seed real value pseudorandom number generator Also compute hash value message digest algorithm like MD5 35 SHA 33 These algorithms correspond secure oneway hash functions arbitrarysized data called documents output ﬁxedlength hash values called ﬁngerprints message digests For bit changed document best hash functions involves modifying 50 bits occurring computed ﬁngerprint In context document corresponds parameters f identiﬁcation number constraint given tuple When hash functions obtain real value applying simple operations shown Algo rithm 2 After creating document simply concatenating binary description parameters f hash function MD5 instance called order generate ﬁngerprint Then exclusive operation itera tively applied byte ﬁngerprint Finally real value 0 1 calculated dividing value resulting byte 256 It important note correctness approach First isConsistent produces result given set parameters real value computed f Second tuple considered indepen dently probability p allowed C Remark need introduce constraint identiﬁcation number parameter f order distinct constraints arity We position deﬁne variant denoted RDint model RD exploited practice arity 3 We property holds surely property holds probability tending 1 number variables tends inﬁnity K Xu et al Artiﬁcial Intelligence 171 2007 514534 521 variable realRandomValue real realRandomValue f idC t return realRandomValue cid2 p Algorithm 1 Function isConsistentC Constraint t tuple p 01 Boolean variable b byte variable document array bytes variable ﬁngerprint array bytes document createDocumentWithidt ﬁngerprint MD5document b ﬁngerprint1 ranging 2 lengthﬁngerprint b b ﬁngerprinti end return b256 Algorithm 2 Function f id integer t tuple real Deﬁnition 6 Model RDint A class random CSP instances model RDint denoted RDintk n α r p instance k cid2 2 denotes arity constraint n cid2 2 denotes number variables α 0 determines domain size d nα variable r 0 determines number m rn ln n constraints 1 p 0 denotes constraint tightness terms probability To generate instance P RDintk n α r p build m constraints intention formed ran domly selecting repetition scope k distinct variables implicitly deﬁned function isConsistent described This new model involves easy implementation space requirement possibility perform experiments large arity constraints 5 Generating hard satisﬁable instances For CSP SAT task determine Boolean formula called SAT instance satisﬁable natural strategy generate forced satisﬁable instances instances solution imposed It sufﬁces generate ﬁrst random total assignment t random instance n variables m constraints clauses SAT constraint violating t rejected t forced solution More precisely method considered generate forced satisﬁable instances model RB follows generate random solution t generate m scopes constraints size k repetition constraint arity k generate nb allowed tuples nb nearest integer 1 pd k select ﬁrst allowed tuple satisﬁes solution t select repetition nb 1 tuples4 4 For example associate integer tuple integers satisﬁes solution set randomly picking removing nb 1 integers set 522 K Xu et al Artiﬁcial Intelligence 171 2007 514534 This strategy simple easy implement allows generating hard forced satisﬁable instances model RB provided Theorem 1 2 holds Nevertheless statement deserves theoretical analysis Assuming d denotes domain size d 2 SAT exactly d n possible total assignments noted t1 t2 tdn d 2n possible assignment pairs assignment pair cid10ti tj cid11 ordered pair assignments ti tj We cid10ti tj cid11 satisﬁes instance ti tj satisfy instance Then expected mean number solutions Ef N instances forced satisfy assignment ti forced solution Ef N dncid6 j 1 Prcid10ti tj cid11 Prcid10ti ticid11 Prcid10ti tj cid11 denotes probability cid10ti tj cid11 satisﬁes random instance Note Ef N indepen dent choice forced solution ti So 1cid2ij cid2dn Prcid10ti tj cid11 d n Prcid10ti ticid11 EN 2 EN Ef N cid2 EN 2 EN respectively second moment ﬁrst moment number solutions random unforced instances For random 3SAT known strategy mentioned unsuitable produces biased sampling instances solutions clustered t 1 Experiments forced satisﬁable instances eas ier solve unforced satisﬁable instances In fact hard result satisfying assignment pairs 42 asymptotically EN 2 exponentially greater E2N The conclusion 4 Thus expected number solutions forced satisﬁable instances exponentially larger unforced satisﬁable instances It gives good theoretical explanation random 3SAT strategy highly biased generating instances solutions For model RB recall exact phase transitions established 44 proved EN 2E2N asymptotically equal 1 threshold instances satisﬁable EN 2E2N 1 r rcr p pcr Hence expected number solutions forced satisﬁable instances threshold asymptotically equal unforced satisﬁable instances Ef N EN 2EN EN In words model RB strategy effect number solutions lead biased sampling instances solutions In addition analysis study inﬂuence strategy distribution solutions respect forced solution Based Hamming distance ﬁrst deﬁne distance d f ti tj assignments ti tj proportion variables assigned different value ti tj We 0 cid3 d f ti tj cid3 1 For forced satisﬁable instances model RB Eδ f tance forced solution identiﬁed ti equal δ obtain analysis similar 44 N denoting expected number solutions dis dncid6 Eδ f N cid8 Prcid10ti tj cid11 Prcid10ti ticid11 d f ti tj δ cid9 cid10 nnδ cid11 1 p cid10 k n k cid11 nα 1nδ cid10 cid10 1 p p1 δk r ln n ln n cid11 j 1 cid7 n nδ cid3 exp cid7 1 cid11 αδ rn ln n cid11 cid8cid12 cid10 nnδ cid11 cid10 k n k cid4 On N r rcr p pcr asymptotically maximized δ It shown results 44 Eδ f takes largest possible value δ 1 The intuition value Eδ N determined f factors ﬁrst number assignments distance forced solution δ probability assignment solution It easy larger distance smaller probability means assignment similar forced solution likely solution On hand number assignments distance δ forced solution grows δ Then r rcr p pcr factor plays dominant role probability factor number n variables approaches K Xu et al Artiﬁcial Intelligence 171 2007 514534 523 inﬁnity leads result stated It worth mentioning r rcr p pcr total number solutions forced satisﬁable instance greater 1 dominant role alternate N asymptotically maximized δ 0 This implies forced factors yielding result Eδ f satisﬁable instance right threshold exist solutions forced solutions distributed closely forced For unforced satisﬁable instances model RB EδN denoting expected number solutions distance ti necessarily solution equal δ cid7 cid8 EδN n nδ cid3 exp n ln n nα 1nδ1 prn ln n cid11 cid10 r ln1 p αδ cid4 On It straightforward pattern holds case EδN asymptotically maximized δ 1 Intuitively model RB unforced satisﬁable instances instances forced satisfy assignment t solutions distribute far t This indicates model RB strategy little effect distribution solutions biased generating instances solutions forced For random 3SAT Eδ f N cid7 cid8cid9 cid10 n nδ cid11 cid11 6 7 nnδ cid10 3 n 3 cid7 1 cid11 cid8cid12 rn cid10 nnδ cid11 cid10 3 n 3 cid7 cid9 polyn exp cid4 cid3 polyn exp nf1r δ n δ ln δ 1 δ ln1 δ r ln EδN cid8cid7 cid7 n nδ 7 8 cid8 rn cid9 cid7 polyn exp n δ ln δ 1 δ ln1 δ r ln polyn exp cid4 cid3 nf2r δ cid8cid12 6 1 δ3 7 cid8cid12 7 8 N EδN asymptotically determined f1r δ From equations Eδ f f2r δ respectively Below ﬁgures Figs 1 2 f1r δ f2r δ function δ r 425 ratio clauses variables It follows ﬁgures r approaches 425 f1r δ f2r δ maximized δ 024 δ 05 respectively This means contrast model RB r near threshold solutions forced instances distribute place closer forced solution solutions unforced satisﬁable instances 6 Solving constraint networks Before presenting results experimentation need introduce algorithms To solve CSP instance depthﬁrst search algorithm backtracking applied step search variable assignment performed followed ﬁltering process called constraint propagation Usually domains ﬁltered reduced considering properties constraint networks Such properties called domain ﬁltering consistencies 12 Generalized Arc Consistency GAC remains central For binary constraints property simply called Arc Consistency AC 524 K Xu et al Artiﬁcial Intelligence 171 2007 514534 Fig 1 f1r δ function δ r 425 Fig 2 f2r δ function δ r 425 Deﬁnition 7 Let P X C CN A pair X X X domX generalized arc consistent GAC iff C C X varsC exists support X C tuple5 t relC tX tY domY Y varsC P GAC iff X X domX cid4 domX X GAC Establishing Generalized Arc Consistency given network P involves removing values GAC Many generic algorithms proposed establish AC GAC 82327 When constraints given extension usually form tables possible adopt different propagation schemes 726 However instances model RDint necessary needs use socalled GACvalid scheme 726 5 tX denotes value assigned X t K Xu et al Artiﬁcial Intelligence 171 2007 514534 525 1 P cid15 GACP 2 P cid15 cid4 3 4 end searchMGACP cid15 Algorithm 3 MGACP X C Constraint Network select pair X X X domX 1 X 2 return true 3 4 5 P cid15 GACP Xa P cid15 cid4 6 7 8 9 P cid15 GACP Xcid4a P cid15 cid4 10 11 12 13 14 end return false return true searchMGACP cid15 searchMGACP cid15X writeX return true Algorithm 4 searchMGACP X C Constraint Network Boolean GACP denote constraint network obtained enforcing GAC given constraint network P If variable domain GACP denoted GACP P clearly unsatisﬁable The MGAC algorithm algorithm maintains GAC search solution nowadays considered best generic algorithm solve CSP instances provided arity constraints high For binary instances instances involving binary constraints called MAC 36 Algorithms 3 4 correspond recursive version MGAC 2way branching One solve CSP instance calling MGAC function solution displayed iff instance satisﬁable Before giving details algorithm need introduce following notations P Xa denotes constraint network obtained P restricting domain X singleton P Xcid4a denotes constraint network obtained P removing value domain X P X denotes constraint network obtained P removing variable X means X removed X X eliminated constraint involving projecting associated relation involved variables The recursive algorithm started calling MGAC function Algorithm 3 constraint network solved If given constraint network P generalized arc consistent search solution begins Algorithm 4 It involves selecting pair X trying ﬁrst X X cid4 solution X After consistent assignment assigned variable eliminated network search continued line 7 When constraint network line 1 means solution search stopped returning true lines 2 8 12 MGAC complete search algorithm It means use algorithm ﬁnd solution prove solution exists However exists category algorithms said incomplete Such algorithms ﬁnd solutions prove unsatisﬁability They shown efﬁcient domains applications Local search algorithms belong category The principle local search space possible interpretations interpretation assignment value variables solution Usually selected neighborhood current interpretation corresponds maximum improvement cost function Algorithms 5 6 correspond general description local search algorithm called TABU The algorithm started calling TABU function Algorithm 5 constraint network solved If given constraint network P arc consistent search solution begins Algorithm 6 It involves performing runs initially run tabu list initialized initial random interpretation generated function rand randomly selects value domain given variable Then current interpretation corresponds solution number performed moves reaches number allowed moves current 526 K Xu et al Artiﬁcial Intelligence 171 2007 514534 1 P cid15 GACP 2 P cid15 cid4 3 4 end searchTABUP cid15 Algorithm 5 TABUP X C Constraint Network select pair X st X X domX X sol X tabu replace X b sol X sol solP writesol return tabu sol X randX X X j ranging 1 maxMoves 1 ranging 1 maxRuns 2 3 4 5 6 7 8 9 10 11 12 13 14 15 end end tabu tabu X b end isFulltabu tabu tabuﬁrstIntabu end Algorithm 6 searchTABUP X C Constraint Network run neighbor selected Here neighborhood composed interpretations differ current interpretation exactly value The role tabu list avoid stuck local minima repeatedly performing cycle moves Note selected represented pair X b correspond recently performed recorded tabu list After remove oldest element tabu list function ﬁrstIn returns element maximum capacity list reached function isFull determines case add new list The performance MGAC TABU algorithms highly depend heuristics select pair X main loop algorithms It shown constraint weighting exploited order concentrate search hard parts constraint network It respect failﬁrst principle To succeed try ﬁrst likely fail 19 The idea associate weight constraint C increment weight C C violated search As search progresses weight hard constraints important particularly helps heuristic select variables appearing hard network More information 92528323740 7 Experimental results As introduced theoretical results hold n practical exploitation results issue addressed In section representative experimental results indicate practice meets theory number n variables small Note different values parameters α r selected order illustrate broad spectrum applicability model RB model RD The platform experimentation conducted PC Pentium IV 24 GHz 512Mo Linux called Abscon httpwwwcrilunivartoisfrlecoutre Theorems 1 2 guarantee asymptotically presence phase transition exact localization threshold First valuable know practice extent Theorems 1 2 precise thresholds according different values α r n The experiments run wrt Theorem 2 depicted Fig 3 suggest parameters ﬁxed greater value α r n precise Theorem 2 More precisely Fig 3 difference threshold theoretically located threshold experimentally determined plotted α 02 1 d 220 r 08 25 m 50150 n 8100 Note vertical scale refers difference constraint tightness horizontal scale normalized value 0 respectively corresponds n 8 α 02 r 08 K Xu et al Artiﬁcial Intelligence 171 2007 514534 527 Fig 3 Difference theoretical experimental thresholds α r n Fig 4 Mean search cost 50 instances solving instances RB2 20 30 40 08 3 p MAC To solve random instances generated model RB MGAC TABU algorithms described previous section For MGAC domwdeg 925 variable ordering heuristic lexico value ordering heuristic GAC32 23 embedded arc consistency algorithm For TABU constraint weighting 323740 perform local moves set size tabu list 25 maximum number moves run 150000 Also runs constraint weights reset 0 We studied difﬁculty solving MAC binary instances model RB generated oretical threshold pcr 023 given Theorem 2 k 2 α 08 r 3 n 20 30 40 It means n 20 d 11 m 180 n 30 d 15 m 306 n 40 d 19 m 443 In Fig 4 clearly appears hardest instances located close theoretical threshold difﬁculty grows exponentially n note use log scale A similar behavior observed Fig 5 respect ternary instances generated theoretical threshold pcr 063 k 3 α 1 r 1 n 16 20 24 It means n 16 d 16 m 44 n 20 d 20 m 60 n 24 d 24 m 76 Figs 6 7 results obtained tabu search respect similar instances compare Figs 4 5 In fact ternary instances limited number variables n 15 18 21 The search effort given median cost incomplete method absolutely guarantee ﬁnding solution given limit time Remark unsatisﬁable unforced instances threshold ﬁltered order fair comparison It appears complete incomplete methods behave similarly search effort grows exponentially n forced instances hard unforced satisﬁable ones To deal classes instances larger arities model presented Section 4 We studied difﬁculty solving MGAC instances model RDint generated theoretical threshold pcr 045 given Theorem 2 k 6 8 α 06 r 1 n 10 15 It means n 10 d 4 m 23 n 15 d 5 m 40 In Fig 8 observe forced instances hard unforced satisﬁable ones Unsurprisingly unforced unsatisﬁable instances difﬁcult It interesting observe behavior MGAC small values α r considered This reason studied difﬁculty solving MAC instances model RD generated theoretical threshold pcr 039 given Theorem 2 k 2 α 051 r 1 n 34 46 59 74 91 110 528 K Xu et al Artiﬁcial Intelligence 171 2007 514534 Fig 5 Mean search cost 50 instances solving instances RB3 16 20 24 1 1 p MGAC Fig 6 Median search cost 50 instances solving instances RB2 20 30 40 08 3 p tabu search It means n 34 d 6 m 120 n 46 d 7 m 176 n 59 d 8 m 241 n 74 d 9 m 319 n 91 d 10 m 411 n 100 d 11 m 517 Fig 9 shows obtained results note n 34 46 59 74 91 110 It shows wide applicability main result paper forced instances hard unforced instances long values parameters range allowed theorems smaller values α r instances threshold easier solve implies case use large number variables hard instances Fig 10 depicts phase transitions note n 34 46 59 74 91 110 left right As expected n increased size phase transition decreases As number distribution solutions important factors determining cost solving satisﬁable instances expect analysis given Section 5 model RB hardness solving forced satisﬁable instances similar solving unforced satisﬁable ones This observed Fig 4 example To conﬁrm focused attention point threshold asymptotic guarantee difﬁculty unforced forced instances Theorems 5 6 45 possibility generating easily unforced satisﬁable instances Fig 11 shows difﬁculty solving MAC forced unforced instances model RB pcr 001 040 k 2 α 08 r 15 n 2050 To conﬁrm inherent difﬁculty forced unforced instances generated threshold studied runtime distribution produced randomized search algorithm distinct instances 18 For instance performed 5000 independent runs Fig 12 displays survival function corresponds probability run taking x backtracks randomized MAC algorithm representative instances generated pcr 041 k 2 α 08 r 15 n 40 45 One observe runtime distribution loglog scale correspond heavytailed distribution characterized extremely long tail inﬁnite moment It means runs behave homogeneously suggests instances inherently hard 18 Then focused unforced unsatisﬁable instances model RB Theorem 3 indicates instances exponential resolution complexity We generated unforced forced instances different constraint K Xu et al Artiﬁcial Intelligence 171 2007 514534 529 Fig 7 Median search cost 50 instances solving instances RB3 15 18 21 08 3 p tabu search Fig 8 Mean search cost 50 instances solving instances RDint6 8 10 15 06 1 p MGAC Fig 9 Mean search cost 50 instances solving instances RD2 34 46 59 74 91 110 051 1 p MAC Fig 10 Phase transitions RD2 34 46 59 74 91 110 051 1 p 530 K Xu et al Artiﬁcial Intelligence 171 2007 514534 Fig 11 Mean search cost 50 instances solving instances RB2 2050 08 15 pcr 001 MAC Fig 12 Non heavytailed regime instances RB2 40 45 08 15 pcr 041 K Xu et al Artiﬁcial Intelligence 171 2007 514534 531 Fig 13 Mean search cost 50 instances solving instances RB2 20450 08 15 p MAC tightness p threshold pcr 041 k 2 α 08 r 15 n 20450 Fig 13 displays search effort MAC algorithm solve instances number variables n It interesting note search effort grows exponentially n exponent decreases tightness increases Also currently supported theoretical result Theorems 5 6 45 hold forced instances threshold appears forced unforced instances similar hardness To evaluate hardness forced satisﬁable instances model RB perform experiments local search algorithm starts biased initial assignment agrees hidden assignment 10 30 50 variables respectively Please note happens exponentially small probability More precisely model RB easy constant 0 c cid3 1 probability random initial assignment agrees hidden assignment cn variables cid7 cid8cid7 cid8 cid7 cid7 cid8 cid7 cid8 cid8 ncid6 icn n 1 nα 1 1 nα ni ncid6 2n icn 1 nα cn n n 2 nαc converges 0 exponentially fast n tends inﬁnity In Fig 14 appears unlike random 3SAT complementary hidden solutions 2 biased initial assignment render forced instances model RB easier solve There signiﬁcant difference bias reaches 50 Finally mention instances model RB different solver competitions Some forced ternary CSP instances class RB3 20 24 28 1 1 063 benchmarks 2005 CSP solver competition No CSP solver succeeded solving instance n 28 10 minutes Forced binary CSP instances class RB2 n 08 08 ln 4 3 025 n ranging 40 59 benchmarks competition solver succeeded solving instance n 53 10 minutes These binary instances encoded SAT direct encoding method submitted SAT competition 2004 httpwwwnlsdebuaaeducnkexubenchmarksbenchmarkshtm About 50 competing solvers succeeded solving SAT instances corresponding n 40 d 19 m 410 solver successful n 50 d 23 m 544 532 K Xu et al Artiﬁcial Intelligence 171 2007 514534 Fig 14 Median search cost 100 instances solving forced instances RB2 40 08 3 p TABU Initial assignments agree forced solutions 10 30 50 variables 8 Related work In paper tried emphasize nice theoretical practical properties models RB But mentioned Section 2 models random CSP instances exist However believe models offer framework simple proposed model RB As related work mention recent progress generating hard satisﬁable SAT instances In 521 proposed build random satisﬁable 3SAT instances basis spinglass model statistical physics Instances generated different probabilities order select clauses 0 1 2 negative literals An approach easy implement proposed 2 3SAT instance forced satisﬁable forbidding clauses violated assignment complement Finally let mention 1 propose build random instances speciﬁc structure instances Quasigroup With Holes QWH problem The hardest instances belong new type phase transition deﬁned number holes coincide size backbone 9 Conclusions future work In paper ﬁrst shown models RB RD produce easily hard random instances instances hardness grows exponentially problem size Importantly demon strated result holds instances forced satisﬁable long existence exact phase transition guaranteed Then shown wide range parameter values practice meets theory Among things experimental results conﬁrmed phase transitions thresholds predicted theory hardness forced unforced satisﬁable instances non heavytailed regime instances Model RB We believe results use value experimental studies random CSP instances We think ways generate hard satisﬁable instances QWH 1 2hidden 2 instances simple natural method presented paper based model RB worth investigation We propose interesting directions future work including K Xu et al Artiﬁcial Intelligence 171 2007 514534 533 1 extending model RB allow easy generation hard random instances involving constraints different arities andor global constraints 2 investigating model RB forced instances hard unforced ones forced solution 3 proving complexity lower bounds forced unforced satisﬁable instances model RB Acknowledgements We like thank AIJ anonymous referees helpful comments suggestions We wish thank anonymous referees IJCAI05 comments earlier version paper References 1 D Achlioptas C Gomes H Kautz B Selman Generating satisﬁable problem instances Proceedings AAAI00 2000 pp 256301 2 D Achlioptas H Jia C Moore Hiding satisfying assignments better Proceedings AAAI04 2004 pp 131136 3 D Achlioptas LM Kirousis E Kranakis D Krizanc MSO Molloy YC Stamatiou Random constraint satisfaction accurate picture Proceedings CP97 1997 pp 107120 4 D Achlioptas C Moore The asymptotic order random kSAT threshold Proceedings FOCS02 2002 pp 779788 5 W Barthel AK Hartmann M Leone F RicciTersenghi M Weigt R Zecchina Hiding solutions random satisﬁability problems sta tistical mechanics approach Physical Review Letters 88 18 2002 6 E BenSasson A Wigderson Short proofs narrowresolution simple Journal ACM 48 2 2001 149169 7 C Bessiere J Régin Arc consistency general constraint networks preliminary results Proceedings IJCAI97 1997 pp 398404 8 C Bessiere JC Régin RHC Yap Y Zhang An optimal coarsegrained arc consistency algorithm Artiﬁcial Intelligence 165 2 2005 165185 9 F Boussemart F Hemery C Lecoutre L Sais Boosting systematic search weighting constraints Proceedings ECAI04 2004 pp 146150 10 P Cheeseman B Kanefsky WM Taylor Where hard problems Proceedings IJCAI91 1991 pp 331337 11 SA Cook DG Mitchell Finding Hard Instances Satisﬁability Problem A Survey DIMACS Series Discrete Mathematics Theoretical Computer Science vol 35 1997 12 R Debruyne C Bessiere Domain ﬁltering consistencies Journal Artiﬁcial Intelligence Research 14 2001 205230 13 O Dubois Y Boufkhad J Mandler Typical random 3sat formulae satisﬁability threshold Proceedings SODA00 2000 pp 126127 14 AM Frieze M Molloy The satisﬁability threshold randomly generated binary constraint satisfaction problems Proceedings Ran dom03 2003 pp 275289 15 Y Gao J Culberson Consistency random constraint satisfaction models high constraint tightness Proceedings CP04 2004 pp 1731 16 IP Gent E MacIntyre P Prosser BM Smith T Walsh Random constraint satisfaction ﬂaws structure Journal Constraints 6 4 2001 345372 17 IP Gent E MacIntyre P Prosser T Walsh The constrainedness search Proceedings AAAI96 1996 pp 246252 18 CP Gomes C Fernández B Selman C Bessiere Statistical regimes constrainedness regions Proceedings CP04 2004 pp 32 46 19 RM Haralick GL Elliott Increasing tree search efﬁciency constraint satisfaction problems Artiﬁcial Intelligence 14 1980 263313 20 R Impagliazzo L Levin M Luby Pseudorandom number generation oneway functions Proceedings STOC89 1989 pp 12 24 21 H Jia C Moore B Selman From spin glasses hard satisﬁable formulas Proceedings SAT04 2004 22 AC Kaporis LM Kirousis EG Lalas The probabilistic analysis greedy satisﬁability algorithm Proceedings ESA02 2002 pp 574585 23 C Lecoutre F Boussemart F Hemery Exploiting multidirectionality coarsegrained arc consistency algorithms Proceedings CP03 2003 pp 480494 24 C Lecoutre F Boussemart F Hemery Implicit random CSPs Proceedings ICTAI03 2003 pp 482486 25 C Lecoutre F Boussemart F Hemery Backjumpbased techniques versus conﬂictdirected heuristics Proceedings ICTAI04 2004 pp 549557 26 C Lecoutre R Szymanek Generalized arc consistency positive table constraints Proceedings CP06 2006 pp 284298 27 AK Mackworth Consistency networks relations Artiﬁcial Intelligence 8 1 1977 99118 28 B Mazure L Sais E Gregoire Boosting complete techniques thanks local search methods Annals Mathematics Artiﬁcial Intelli gence 22 1998 319331 29 DG Mitchell Some random CSPs hard resolution 2000 submitted publication 30 DG Mitchell Resolution complexity random constraints Proceedings CP02 2002 pp 295309 31 M Molloy Models random constraint satisfaction problems SIAM Journal Computing 32 4 2003 935949 32 P Morris The breakout method escaping local minima Proceedings AAAI93 1993 pp 4045 534 K Xu et al Artiﬁcial Intelligence 171 2007 514534 33 NIST Secure Hash Standard National Institute Standards Technology httpcsrcnistgovpublicationsﬁpsﬁps1802ﬁps1802pdf 2002 FIPS 1802 34 P Prosser An empirical study phase transitions binary constraint satisfaction problems Artiﬁcial Intelligence 81 1996 81109 35 R Rivest The MD5 messagedigest algorithm MIT Laboratory Computer Science RSA Data Security Inc 1992 Request Comments 1321 36 D Sabin E Freuder Contradicting conventional wisdom constraint satisfaction Proceedings CP94 1994 pp 1020 37 B Selman H Kautz Domainindependent extensions GSAT solving large structured satisﬁability problems Proceedings IJCAI93 1993 pp 290295 38 BM Smith Constructing asymptotic phase transition random binary constraint satisfaction problems Theoretical Computer Science 265 2001 265283 39 BM Smith ME Dyer Locating phase transition binary constraint satisfaction problems Artiﬁcial Intelligence 81 1996 155181 40 JR Thornton Constraint weighting local search constraint satisfaction PhD thesis Grifﬁth University Australia 2000 41 C Williams T Hogg Exploiting deep structure constraint problems Artiﬁcial Intelligence 70 1994 73117 42 K Xu A study phase transitions SAT CSP Chinese PhD thesis Beihang University 2000 43 K Xu F Boussemart F Hemery C Lecoutre A simple model generate hard satisﬁable instances Proceedings IJCAI05 2005 pp 337342 44 K Xu W Li Exact phase transitions random constraint satisfaction problems Journal Artiﬁcial Intelligence Research 12 2000 93103 45 K Xu W Li Many hard examples exact phase transitions application generating hard satisﬁable instances Technical report CoRR Report csCC0302001 Revised version Theoretical Computer Science 355 2006 291302