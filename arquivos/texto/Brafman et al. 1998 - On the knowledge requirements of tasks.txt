ELSEVIER Artificial Intelligence 98 1998 317349 Artificial Intelligence On knowledge requirements tasks Ronen I Brafman Joseph Y Halpern bl Yoav Shoham c2 Department Mathematics Computer Science BenGurion University BeerSheva 84105 Israel b Computer Science Department Cornell University Ithaca NY 148537501 USA c Computer Science Department Stanford University Stanford CA 94305 USA Abstract In order successfully perform task situated requires information domain If understand information requires able equip suitable sensors better use information available These considerations motivated roboticists examine issue sensor design particular minimal information required perform task We reasoning terms robot knows needs know perform task useful approach analyzing issues We extend formal framework reasoning knowledge Al distributed computing developing set basic concepts tools modeling analyzing knowledge requirements tasks We investigate properties resulting framework ii applied robotics tasks 1998 Elsevier Science BV Keywords Knowledge Sensor design Configuration programs Knowledge complexity Knowledge capability space Manipulation tasks Skeletal knowledgebased 1 Introduction complexity The notion computational effect develop ment science While imperfect ability classify different computational problems solving polynomial versely problem solved solution Con problems Thus problem solved approximately improving member terms complexity time concentrate allows understand profound inherent difficulties believed algorithms shown author Email brafmancsbguacil Corresponding EmaiI halpcmcscomeIledu 2 Email shohamcsstaufordedu 00043702981900 PIISOOO437029700061l 1998 Elsevier Science BV All rights reserved 318 RI Brajinan et al ArtiJicial Intelligence 98 I 99 317349 assumptions confronting However true primarily difficult class class NPcomplete heuristics simplifying Some areas robotics benefited certain stylized 51718 This motionplanning analog Turing machine formal device robotic task capabilities space issues sloppiness communication This suggests information Donald good model time complexity controllers robotics spatially 71 dominating advances robotics problems problems know look problem computational complexity variants robot area robotics lacks difficulty usually robotic task Rather sensors need factors imprecision faithfully quantifies robot 3 The reason separated components assume major revolve importance notions 9 uncertainty Similar points Erdmann capture framework We propose formal form basis general model informational robotic 101 makes use formal notion knowledge We believe terms knowledge robots robotic knowledge knowledge robot perform requirements systems attack notions closely based aspects terms tasks In framework required terms acquire We assess ability particular knowledge task comparing distributed tasks coordinated tasks characterized robots characterized use knowledge task This information characterize knowledge reasoning reminiscent perform perform capabilities needed 111 attained crucial plays attained In certain eventually I Moreover coordination In coordinated knows state knows agreement irrelevant task object These types tasks discussed attack problem problems coordination agreement turns common knowledgethe role It precise sense nec knows 10ll essary sufficient condition matters knowledge common knowledge common knowledge important class tasks consider refer manipulation tasks The goal goal manipulation literature configuration 9141 formulas agent knows formulas step task performed possible tests identifies agent set configurations distance goal This essentially 9 As shall thinking tool clarify going We illustrate terms knowledge gives highlevel point applying ideas analyzed example originally Blum Kozen initial configuration motionplanning set propositional know conditions particular exists reduce distance measure systems configuration agent appropriate task typically 11 Section 4 mazesearching taken Erdmann In manipulation approach Intuitively according transition sensors This observation John Mitchell RI Brajkan et al Artificial Intelligence 98 II 998 317349 319 10 9 8 7 6 5 4 3 2 1 0 Fig 1 The twoarm To provide intuition paper anchor example Although simple example embodies sensing need coordinate formal develop impor actions spatially ment following tant ingredientsimprecise distributed actuators onedimensional feet 0 10 simplicity ignore robotic arms coor Example 11 Two horizontal perpendicular dinate follows The arm push hot object lengthwise table second arm able push sideways falls cooling bin The length marked vertical table initially placed position 0 table The second arm coordinate The object 37 4 The second arm able push object cause mechanism hit obiject instant jam hand object remain motionless second arm precisely burn hole table Thus stops This setup variants Fig 1 We consider illustrated problem pushed arm region The arms share controller The controller access sensor reporting position object error greater location q reading 1 objects current q 1 q 1 b Same error bound It hard case b 4 1 protocol performs deals task following case For example centralized protocol r current reading I 61 4 Movearmi Movearmz 4 We use b notation denote interval natural numbers b including b Thus 37 34567 320 RI Brafman et al AriQicial Intelligence 98 1998 317349 basic information controller task information Example 1 l illustrates need controller needs order perform analyze issues paper taken actions plans tools activities situated capable obtaining These types issues consider planning perspective This example apparent 151 Morgenstern unlike 161 knowledge perform given set tasks To use analogy computational task building representation course planning aid process designing knowledge It goal provide knowledge work Moore design perspective agent reasons Rather provide set concepts complexity considering solve particular computational designer characterize problem Although problems assumptions concepts languages appropriate issue discussion related work Section 5 related abstract problem attempt agents provide figure tools soIves level different models case We shall resources needed program The rest paper organized follows In section define measures information requirements tasks agents information requirements modeling use concept knowledge information measures additional problem maze searching We discuss Section 6 directions work agents relations capabilities In Section 4 continue development tools control variables learning We illustrate supplying related work Section 5 conclude view In Section 3 tasks exist number tools 2 The basic model In section basic model agent embedded act We start overview perspective understanding technical choices help reader understand development rest paper We formalize ideas environment aims paper 21 An overview approach To investigate issues information complexity capabilities example context agents place task rearranging context physical environment attaining Tasks defined point B defined furniture motions text room description description furniture desired final positions More abstractly task defined set possible configurations A typical involve task goal configuration making certain conditions Such task described abstractly tasks information notion task precise task getting robot point A robots initial positions context space satisfies terms sets acceptable called taking sure systems configuration initial configuration room defined configuration RI Brajhan et al Artipcial Intelligence 98 1998 317349 321 For example sequences configurations configurations goal configuration cc appears cr appears thds task corresponds paper cr point case acceptable task getting continuous cr defined set sequences configurations functions initial configuration CO set sequences start CO stabilize infinite sequences Or 0oo So far said task performed final configuration We abstract away issue agent fixed set changes transitions initial simply assume effect Our goal understand information needs informationgathering task This perform capabilities order agent capable transitions design agents turn affects sensors communication channels To summarize given 1 set possible configurations 2 set sequences configurations transitions defining 3 set allowed time configuration point defining changes task systems agent uses information We supply program knowledge analyze design agents sensory apparatus abstract useful task appropriately As shall formal notion needs task provide guidelines information information perform necessary level 91 explicitly examines The view developed strongly sensor systems evaluating framework sion abstract sensors consider issues discussed mantics Donalds work information comparing complexity Finally lo provides natural past use establishing required Erdmanns Our major contribution context robotics We discuss Section 5 papers semantics abstract sensors performing tasks distributed formalization invariants led examine issue sensor design 71 provides framework influenced sources Erdmanns discus led paper motivated choice se ideas task sensor ideas especially given resources Indeed concept knowledge transmission example systems developed leads naturally multiagent systems 6111 development ideas work connection knowledge tool capturing formalizing lower bounds message In remainder section present background technical development paper self contained 22 The model Our formal model cations appropriate set possible domains While knowledgelevel complicate 21 exposition technical transitions based notion defined context We start defining space We shall confine analysis carried continuous issues raised continuous lo modifi space agents act discrete domains domains needlessly 322 RI Brajinan et al Artificial Intelligence 98 1998 317349 Definition 21 Let environments set states referred ration space The set A transitions consists functions assume identity mapping Id contained A conu 2 0 We A task simply set sequences configurations Chistories One view Chistories defining task set desirable behaviors Definition 22 A Chistory C E infinite sequence configurations We use Cn set Chistories E nth element sequence A tusk E n 0 denote E agent transforms state This external action change world An agent defined conjigurution describes possible case sensing relevant aspects world belonging ble transitions The state environment external world robots internal set local states actions action state agent deterministic agent fact effects action environment state environment vironment abilities fer effect actions local states Although ment fixed set transitions different effects agents agent robot contiguous context fixed environment set A possi state manipulate The agent local state world These actions need local state The requirements depend current local state agent represents effects action en transitions Hence agents defined dif actions imple transition refer sensors effecters related actions implementing local state We note piece equipment state external world structure set possible actions We state The second requirement This guarantees environment transform local states internal information conform As discussion state suggests assume agents local states The global pair consisting configuration agents local state Definition 23 If E set configurations G x L set gZobu1 states based 15 The projections global state g c I E 7 E L defined proj c I c projOI c 1 1 Projections sets sequences global states similarly defined proj S L set local states UsESprojxs Definition 24 An agent A situated E A pair L Actions L set B x L 2 8 local states agent Actions set functions satisfying following conditions 1 For E Actions c E E 2 2 E L proju c 1 projofi84cl RI Brajkan et al Articial Intelligence 98 1998 317349 323 2 For E Actions let ra transition defined r0 c projBg c Z 1 E L s Then E Actions r E A Moreover r C A exists E Actions r ra We r transition induced E Actions From assume working aed transitions All agents discussed situated n possible agents discuss physical capabilities differ information attaining capabilities configuration space set E A Therefore space Example 11 consists possible po Example 25 The configuration sitions hot object 0 lo x TubleBin 6 The set A possible consists Move armt Move armz identity mapping Move arm q x q 1 x x Table q 6 9 Move armz transforms transforms q x q Bin q E 37 Otherwise transitions change config uration We model controller Example 11 agent At Ll Actionsl L 0 lo controllers reading Actionsla Movet Movez local state consists position transitions Mow 9 xl r qxr 1 Iqrl 1 qql ifq69 q q q 9 qJJN Move2qnr x Table x Bin qBinr 1 jqrl l x E Bin X E Table q E 37 qxr let zzskb consist trajectories Finally 0 Table goal configurations lead initial configuration 37 x Bin Global states provide instantaneous description To characterize need consider global state changes time The following definitions taken lo Definition 26 A run function r N natural numbers set global states 6 A run r consistent respect agent A L Actions n E N case r n 1 E r n E Actions A set runs 5 The choice local state definition 70 inconsequential 1l E L require projCOCacl Projfrgac 1 6 Recall 0 lo denotes natural numbers 0 10 324 RI Brafman et al Articial Intelligence 98 1998 317349 According definition identifying possible behaviors Typically systems generated protocols Definition 27 A protocol agent A LActions 2Actionr 0 A run r execution protocol P r n rn If I 9 set initial r n 1 E P proj R I A consists run r consistent respect r0 E I If P protocol r P A r0 E I function P n E N case global states A A R I A P consists execution L f A protocol describes agents program action runs protocol agents action point allowing behavior assigned local state Its executions set consistent assignment nondeterministic Finally agent perform task protocol executions task Definition 28 A protocol P agent A performs Tusk Z projg R C Task An agent perjorm Task Z protocol I A P performs Task I Example 29 Consider Example Z I A consists runs starting number steps possibly 0 eventually moved points addition remains 11 let Z 0 Table 0 The cooling bin At 1 In 10 Table contains runs object reaches position forever similar constraints local state current position error greater local state indicates Z object moved forward Let protocol P assign local state 03 U action Move controllers 7 lo Move local state 46 The R I A P consists 46 occurs runs object moves forward reading 35 At time Given point cooling bin Since runs Tuskb P performs skb restrictions sensing error object pushed 23 A language reasoning knowledge Having set model like formal language allow 121 systems Epistemic logic introduced Hintikka express properties particular tool purpose We start set primitive suitable provides particularly like robot propositions We think primitive propositions high The language C contains closed position 2 temperature knowledge operator K Thus LYE 9 formulas L points R point pair r m consisting run r time m To need way deciding primitive propositions true Given set 9 global states interpretationfinction 7 LYI A 02 TY KCY We want assign standard boolean connectives formulas statements truth values RI Brafinan et al Arhial Intelligence 98 1998 317349 325 R runs set B interpretation proposition p E truth value global state E A pair r G define semantics formula form Ktx straightforward way Intuitively 7 assigns Z R zr consisting called interpreted In interpreted propositional true point These read Y true point r m An agent distinguish r m 4 true points formalized intuitions formulas r m agent distinguish points local state Z r m b LY following definition r m interpreted 27 0 1 r m p p E zrmp 0 Zrmk7cuifZrmcu l ZrmffrifZrmaandZrmp l Z r m Ku Z r rn b Y points 8 m R proj true r m pr0jh r m language formulas included explicit local state Thus abuse notation Z r m k depends global state rm Y 1 r m k LY iff Z r m b s global state abuse notation write Z s k cy We remark temporal true depends I operator allows external world function depends global state That propositions r sp T sp It easy check r m rm Thus true richer operators Moreover formula form Ka agents local state This notation express correlations Finally assume tihe configuration p This applications external world Thus propositional modal operator K abuse notation write 2 c k cy c configuration fact knowledge local state agent interpretation formula LY occurrences systems configuration s s rest paper write ZZ b Kia tasks defined intended reasonable terms emphasizes component For remainder paper fix interpretation configuration We use Z I A Z I A P RZd7r point RZdP r m 1 depends respectively We write Z cr Zrm interpreted function v denote 3 Knowledge analysis specification tool 31 Skeletal knowledgebased programs Work powerful purposes grams systems shown distributed tool analyzing traditional protocols Knowledge allows design highlevel protocols called knowledgebased formal notion knowledge useful 101 7 focus informational aspects task drowning design pro The similarity names knowledgebased program knowledgebased expert systems AI coincidental 326 RI Brafman et al Arttjicial Intelligence 98 1998 317349 details Roughly speaking knowledgebased agent perform function knowledge implementation tions slightly general notion An SKBP describes knowledge Hence SKBP different agents different actions implement agents considered programs ac In paper use SKBPs agent bring function context similar sets transitions This implement particularly fixed set transitions skeletal knowledgebased programs transition useful Definition 31 An SKBP 7 E n set pairs form Ku T KCY E C An SKBP viewed big case statement form case Kal 71 KLU 72 Kcu r condition satisfied 8 Kq formula case statement conditions SKBP test knowledge protocol transition agent The performs action agent nondeterministically corresponding KCY knowledge Each condition interpretation implements We refer propositional positive In remainder The fact allow nested Ks single agentevery p 501 However agent perform restriction Section 42 Nevertheless positivity makes Section 32 Intuitively formula denested fact allow easier capture If cq contains occurrences K operator KUi positive SKBPs paper restrict attention case restriction 13 nested Ks tests form Kcx means nontrivial learning shall positive SKBPs allow capture restriction application Moreover complexity defined protocol P agent A implements action based lack knowledge applications We return issue discuss notion knowledge intuitions intended ri However recall agents knowledge agents knowledge local state I implements respect determine local states substituted specify lo Formally adopt semantics modified handle use transitions respect determines similar actions Pg Kai Ti 1 1 n Kcu P assigns action local state defined order knowledge condition defined agents knowledge programs knowledgebased set possible worlds Hence Hence unlike case conditions matter statement certain programming languages order appearance RI Brajinan et al Artificial Intelligence 98 1998 317349 327 Definition 32 The standard translation SKBP Pg respect interpreted Z agent A L Actions 2l b Kru Ka 7 E Pg u7 implements Pgl protocol 7 A L Actions implements Pg I 1 E L occurs Z I A P PZ 2 PgZdpl h w ere UId identity action maps global state A protocol Pg Pg 1 E Actions 1 set r If aId I Example 33 Consider following SKBP controller Example 11 Pg KgMovearmd KSpMovemd objects position systems Z I A Z I A P described cp holds goal region Consider Z I A 567 runs Z I A P actual position local state occur robots position Example 29 In local states Kg holds 56 Z I A P Kg holds The local state controllers position Z I A 68 04 U 7 lo g holds 6 However 7 occurs reading The standard 5Mo2 Move 04 runsofZZdsuchas translation Pg respect Z I A H owever standard 57 Move2 Notice certain global states occur translation Pg respect Z I A P 04 U 6 lo Move 7Table8donotoccurinanyrunofZZdF I Notice definitions SKBP referred Our notion implementation leads natural notion correctness protocols consistent satisfy given task This notion correct strong correctness lo Adapting presentation P represents Pg PZ PC ldPI 1 P consistent Pg set protocols consistent SKBP Pg P 1 C Pdp represent Pg Moreover protocol geneml strict consistent given SKBP protocol context strong correct terms consistency requiring ness appropriate accept protocol long behaviors SKBP satisfy compatible generate behaviors SKBP task We willing represents representation exist Lemma Al lo We defined superset protocols protocols SKBP implementation represent guaranteed In paper interested particular class implementations skeletal knowledgebased programs Definition 34 Protocol P ZZdP Pg agent A good implementation Pg Z k KCYI V V KcY Kq Ka knowledge conditions attention By restricting good SKBPs abstract program specifications skeletal knowledgebased notions standard SKBPs transform specifications Now program specifies agent specifies class agents implementations abstract knowledge implementations translations 328 RI Brajhan et alArtifcial Intelligence 98 1998 317349 execute specification These agents implementation qualified SKBP know tests knowledge holds global state The importance property clearer present definition upper bound knowledge complexity task From SKBP Pg mean noted implementation good implementation Note agent good implementation If happens SKBP conditions reach local states Z I A knows agent leading lead increase SKBP preventing reasons actions actions avoided andor Z3 Kpk conditions reaching states relative knowledge taken states Intuitively ignorance The notion perorms generalized SKBPs Definition 35 A set I global states projnfig set I implementation CO I Z toconsistent Tusk 1 C E Tusk Pg pegorms Tusk good implementations toconsistent Task perform Tusk I good agent d toconsistent task Tusk defining sets Z initial states toconsistent Task Clearly notion SKBP Pg performing Task restrict start Task initial states Notice attention Pg initial state initial state configuration generate execution Tusk Thus restrict toconsistent Tusk order reasonable notion implementation Weakening replacing definition set equality set containment In particular certain programs Pg perform lead undesirable task despite Task restricted fact good implementations initial state consistency sideeffects starting states considered performing information require excessive In practice difficult transform SKBP standard protocol However case believe analysis design gives useful methodology SKBPs discuss talk robot knowing abstract away idiosyncrasies ability content frame buffer robots vision SKBP allows local state Thus example allowing leverage systems knowledgebased obstacle distributed 32 Knowledge complexity We wish define formal concept informational knowledge agent attain order perform complexity task type statement want agent eventually task perform coordinated attack agents eventually common knowledge fact message know certain fact set facts 111 shown order perform serve quantify task Typically come For example needed delivered RI Brafman et al Artijicial Intelligence 98 1998 317349 329 introduction object interested Recall goal tion We hope set propositional scribing step itively moving goal set configurations sets configurations task performed SKBP formulas initial configuration manipulation tasks goal configura thought tests Intu uses gets agent closer agent knows formulas Keeping appropriate intuitions manipulation mind define notion informational upper bound tasks c propositional Definition 36 If 41 upper bound knowledge complexity task Task 001 forms Task formulas 1 CQ Task Kqk ppk exists SKBP Pg conditions I ones assuming interested fixed interpretation nongood This definition space E restricting require implementations attention definition implicitly r configuration systems Z use Notice terpretation terpreted clear particularly based program Suppose cluding tautologies state This agent implementation tion execution Task perform Task To avoid ments state fact saying execution agent wihich constantly conditions good implementations knowledge SKBP Pg Pg know tests Pg P Pg execu projection Pg By require transition Typically stronger definition good implementations SKBP comes minimal conditions know knowledge perform Task Unless problem restrict identity ability performs Of course use sets propositional formulas measure knowledge complexiry define ordering sets information characterized set difficult set characterized allow attain information Definition 37 Given configuration mulas B dominates A respect formula I E B formula 4 E A k 4 space E sets A B propositional E write A 5 B Notice A 5 B formula cc E B formula 4 E A knowing JI implies knowing 4 It easy 3 defines partial order reflexive result shows relation ordering capture reasonable notion hardness sets formulas As following transitive Proposition 38 If A 5 B Task OA k VdEB 4 Task OB 330 RI Brajimn et al Artificial Intelligence 9 1998 317349 performs Task Since A 5 B condition SKBP Pg appropriate knowledge spi E A implies cp As Pg fi performs ensure vi E b VdEB 4 suffices efi E B Task OA Proof Intuitively conditions SKBP stronger condition Appendix A SKBP obtained replacing requirement Task Moreover good implementation weakened A 5 false good implementation See Appendix A details 0 SKBP Pg performs Task Although requirement like necessary For example protocol test Kfalse easy easy Olgg knows 3 lo Clearly 04 U 6 lo moves arm2 let 42 denote agent moves arm1 charge twoarmed SKBP KgMovearmi lg verify K Movearm2 presented Let 4 denote Example 39 Consider Examples 11 11 b Recall variants robot switch hori central controller 37 x Bin It easy zontal vertical motions object goal region Ykb KgMovearmz according knows g performs Taskb However better bound Let 41 denote 3 ing g g Moreover Kqb Movearmt Taskb incomparable It easy 4 42 incomparable 4i42 SKBP Kg Move arm K Move arm hard performs Task For suppose SKBP 0 Table Let r run Z Z 0 Table A P Consider time A time m 1 r m k KC Notice A eventually performs Movearmi reach position 7 point K41 hold contradicting assumption P configuration 37 Hence agent performs Move arm gets goal region protocol P agent A good implementation following SKBP performs Task K holds If K holds upper bound There g Tg Moreover point implementation Our argument shows good 06 I m We define notion lower bound corresponds notion upper bound Definition 310 We set A propositional Kcomplexity Task OB A 5 B Task Task A lower bound set formulas B formulas Notice true lower bound Kcomplexity lower bound bound For example Taskb tight bound upper bound Unfortunately Ideally insight difficult task Obviously like right bound lower tight bounds Proposition 311 There set A primitive propositions OA Taskb 0 A RI Brafian et al Artificial Intelligence 98 1998 317349 331 iskb QA OA Then A 5 41 2 A 5 42 Proof Suppose formulas 1 JI E b 41 I E q5 Thus A contain SKBP Pg performs TLHkb Since Taskb OA pair conditions K KJi Clearly perfect KI Movearm2 agent sensors KJll K hold initial position clearly inappropriate Thus Kti Movearmt KI Movearm1 Pg But 1 V qh holds location fit V J Thus agent perfect sensors performs Pg Pg perform Tuskrob 0 Pg To consider knows exactly transition Movearm2 transition Movearmi In particular Kq Movearmz according agent pair location nontrivial Although provide tight bound TaskrOb hope provide useful intuition original useful use different notion lower bound agent eventually needing know collection facts lower bounds While closer Definition 312 We cpi qok weak lower bound Kcomplexity Tusk OB Tusk fl 1 ppk I feconsistent Tusk agent A protocol P A performs Tusk I run r Z I A P exists time m ZZdP rm b Kq51 V V K We use notion lower bound prove controller Example llb perform Tuskb Theorem 313 TuskrOt Cg time m It follows Proof Suppose Let r run 27 Z 0 Table A PI Since projBg r projr time point Move arm2 We claim point Since projOocar r mo 1 projlr action points skb contradiction P protocol agent A performs Taskb 0 Table TuskrOb m E 37 x Bin Let mo earliest r mo 1 agent A perform action m 1 r m b lg r agent performs r mo 1 r m Move arm2 It follows Z r 1 Kg For suppose Then r m projlOcalr mo 1 projllr r m follows 0 Corollary 314 The controller Example 11 b perJorm iskb protocol controller 0 Table Since controllers error bound Proof Suppose P iskb starting 0 4 initial configuration perform P 0 P4 Move armi performs 4 local state 0 Table It clearly run r P initial configuration action Movearmi Example It follows 11 b 332 RI Braftnan et al Artiial Intelligence 98 1998 317349 8 Table local state agent reaches hold point r hold time agent reaches reaches perform Taskb cid144i 04 Clearly Kg 8 Table It hold agent Theorem 313 P 8 Table g hold It follows hold local state 04 proof corollary Actually prove Corollary 314 appealing r constructed Theorem 313 We simply Taskb observe run However feel appeal gain appropriate perform Taskrob sensing capability knowledge A similar argument controller error bound 3 perform Taskb However controller error bound SKBP tests 4 2 2 perform TaskrOb discussed Theorem 313 explains controller weak allow Example 39 implement 33 Knowledge capability Having defined notions upper lower bounds Kcomplexity task turn capabilities agent Definition 315 Let A 1 q5k set propositional Kcapable A respect initial global states I 2 I A k Kql V V Kqk formulas Agent A That agent Kcapable pi Notice different rpk knows vi imply qk agent run It know 97 forget runs different points single performing action necessarily knowledge know 4 initially 94 This definition embodies notion sensing know location 4 yield knowledge following 2 4 location guarantee come particular For example given position able position location 4 6 Yet knowledge particular Notice Kcapability notion weak lower bound point systems form ZI dP But difference following requires requirement However lemma shows agent sensor fl nondeterministic The robot facts error sensing facts 3 5 location guaranteed unlike qbk know 41 ZZ A significant statement like notions upper lower bound Lemma 316 Let 1 k propositional formulas Then z I A k Kqol V V Kqk ifSILZdF b Kspl V V ok protocol P agent A Proof See Appendix A 0 RI Brafmn et al Artijicial Intelligence 98 1998 317349 333 We defined notion Kcapability respect protocol Z useful notion The following illustrates intend use Kcapability I P result Theorem 317 If Tusk O PI respect I I toconsistent Task A perjorm Task I spk A Kcapable qq tpk Proof If 7k O cp pk exists SKIP Pg knowledge condi tions Kqq Kqk performs Tusk It follows Lemma A1 Appendix A I Since Pg performs Task I toconsistent Pg ha3 good implementation Task definition Pg I performs Task This implies A perform Task 0 good implementation Theorem 317 suggests useful methodology task particular perform OV conclude If able qk agent A Kcapable 91 A perform Tusk I determining agent Tusk pk respect I Kcomplexity i318 We return Example 0 g q cp denotes I la perform Example respect possible conclude readings 234 controller 0 Table This scenario Example 11 We seen Tuskb 14 U 6 lo To controller Kcapable g position 3 know 9 We easily verified For example know g makes task suffices makes perform skb On hand controller Example llb error bound seen Kcapable g p For example reading 5 obtained imply shows 19 region contained perform Taskb controller fact g 4 However Cl 4 easily Corollary 314 We end section result complements Theorem 317 shows qk task performed agent Kcapable VI SKIP task conditions Kqq Kqk Theorem 319 Suppose 1 I toconsistent Task A Kcapable PI 7 pk respect I A pelform Task I 2 agent Kcapable 1 qk Z toconsistent Task Then skOqqcpk Proof The idea identify particular agent A Kcapable 41 pk agent knows 1 pk local state In sense performs Tusk We We use protocol agent identical execution good implementation execution ds protocol projected know performs Appendix A Tusk The details construct SKBP SKBP E 0 334 RI Brafman et al Artijicial Intelligence 98 I 998 317349 4 Control variables learning The concepts developed analysis information flexibility 1 adding knowledge flexibility attainment previous aspects tasks There number extensions core approach add sections form power approach Here examine extensions use control variables 2 relaxing SKBPs requirements allow learning 41 Using control variables Suppose I want paint wall green I disposal blue I paint wall blue paint yellow That yellow paint Intuitively execute program like Kwal1 blue apply blue paint Kwal1 green apply yellow paint know constructs programmers sequential SKBP Nor obvious way implement control embodied program SKBPs defined number control variables program counters Unfortunately sequential As programmers implemented control program execution concerned implementation based programs support convenient insistence control variables depend configuration Moreover SKBP perform value control variable action setting This renders SKBPs constructs execution form skeletal knowledge natural constructs This stems function depend configuration No tests value control variable action transition sequential SKBP interpretation In present ability appear notand execution details limited allow There solutions control bits An SKBP extended tests values control bits actions problem One approach formalize allow control bits allow additional need counters allow value bits We similarly arbitrary nonnegative tests value integer values values 0 l program counter increment decrement operations Additional data structures allowed choice important additional tests actions change allowed specify program We easily Boolean variable b assume simply program SKBP control bit initially 0 false Roughly speaking K Tb A wall blue apply blue paint K lb A wall blue b 1 K b A wall green apply yellow paint RI Brafmn et al Artijicial Intelligence 98 1998 317349 335 We formalize local state agent disjoint components addition control bits SKBPs follows An mbit element arbitrary set L local states corresponding standard concept local state tuple 0 lm describing symbols bl b We set primitive propositions denote new set Grn Let L result starting Grn closing negation knowledge The proposition bi 1 m assigned conjunction true ith bit 1 The propositions state values m bits We extend depend environment adding m new propositional Definition 41 An mbit form O lm x L An mbit SKBP SKBP consisting Y E L r r S 7 E A S 2 t 2m assigns values based old values agents set local states pairs Kcx 7 bl b generalize execute It straightforward notions implementation perform Task mbit SKBP There im plementation control bits minor subtlety To ensure correct flow control assume initialized execution mbit protocol commences We arbitrarily chosen 0 initial value Thus SKBP perform Task restrict initial global states agents local state form 0 0 I defining means comes good Definition 42 If I set global states define Z c 0 0 E 1 c I E I The mbit SKBP Pg pelforms Task good implementations set Zr1 toconsistent Task perform Task I good implementation I toconsistent Task task Task written Task O 1 pk Definition 43 Let pi pk E Cc 1 Q complexity SKBP Pg knowledge propositional formulas performs Task mbit upper bound K exists mbit conditions Kq A PI Kcpk A pi mention primitive propositions bl b Notice old 0 notation equivalent 00 It straightforward generalize Theorem 317 0 notation Definition 44 Given 0 1 x LActions x Set Set set functions agent A L x Actions define agent A A 2 2 Theorem 45 POP pk ZW If Task 0 cpo pk A L Actions Z I A Z toconsistent Task d Kcapable petiorm Task Proof With slight modification Lemma A1 Theorem 317 generalize accommodate case 0 m additional control bits proofs 336 RI Brafman et al Arttjkial Intelligence 98 1998 317349 42 Learning If Task OCI know tests K Kck Hence expect build agent knows suppose agent assemble perform Task essence Theorem 317 In practice unreasonable For example wrench A highlevel protocol task probably location wrench The agent know learn generally learn formulas SKBP performs Task agent knows f k k device requires knowledge location However contents tool box drawer More Ck able agent know 41 examining This example suggests useful methodology try task Then build agent agents First designing requirements knowledge derstand thtt learn requirements Roughly agent learn CI Ck agent knowing execute learning protocol formulas For technical agent begins execution learning program effects environment configuration configuration configuration change execution learning program terminates learning program reasons require c ends Definition 46 Agent A L Actions learn 1 tbk Z I A exist set LT 2 L protocol P A runs r P m E N 1 projrm 2 projlrrm 3 ZIdlrm K VVbk 4 m m projlOcaI r m LT projCOfigr0 E exists Let P c Z c I 1 1 E LT exists run r P time m rm cZ m m projOrm r0 cl LT Hence order able learn 1 k Z I A agent A needs learning program P termination condition 1 execution P eventually 2 termination A knows I terminates initial configuration k environment restored goal configuration It agent A Unfortunately reaching performing time employ able meet terms execution protocol lengthy time constraints knowledge 1 learn formulas k suffices perform Task A able perform Task task requires knowledge 41 case For example consider task requires bounded period time We SKBP k point formulas task flexible main learn task However learning subroutines subroutines time combine RI Brajhan et al Artificial Intelligence 98 1998 317349 337 Definitiorn 47 Task said elastic Ci Cz Ct finite sequence configurations Ci CZ E Task case Ct c Cz E Task Where c E I concatenation CZ Chistory operator The following result illustrates role envision learning results Whereas Theorem 45 showed appropriate PO cpk perform O 0 pk learn PO pk perform tasks conditions tasks agent agent Kcapable Theorem 48 Zf Task O 0 cpk Task elastic A L Actions f toconsistent I dcmt petform Task learn 90 ml zLdl e Intuitively A perform Task behaving K reaches state sufficient subroutine The details learning Proof capable 90 pk Whenever information Appendix A employs appropriate 0 Roughly implementation following SKBP agent employs learning subroutine viewed running case Kq q KCYZ 72 KAY r eke learn Kay Ka special class SKBPs conditions negated knowledge conditions play precisely positive In general role acting learning This believe subroutines The concepts 48 suggest introduced following methodology far results Theorems 317 45 task agent analysis knowledge complexity task 1 characterize 2 characterize knowledge 3 understand agent 4 combine capabilities agent capable learning results understand agent perform question provide necessary insight task design particular task We illustrate ideas following In addition answers agents capable performing example Example 49 We examine received considerable use formal existing work area Blum Kozen problem maze searching This domain importantly shall 11 best application More past nontrivial 14 allows illustrate language attention 338 RI Brafman et al Artificial Intelligence 98 1998 317349 Fig 2 A maze methodology This perspective explicitly adopt informationanalytic knowledgecomplexity stood performing work The author Kozens results Donald This work ogy based concept knowledge analysis 7 led attempt turn analysis domain context theory information provide general capturing naturally fits taken original perspective Blum invariants methodol complexity information language twodimensional A maze finite obstructed checkerboard Fig 2 To search maze robot started cell eventually visit reachable cell obstacles At time step robot unit passing directions north east south west long target cell search obstacle Budach mazes Later Blum Kozen showed robots search robot counter search mazes We shall mazes single Blum Kozens work interpreted knowledge complexity mazesearching agents agents knowledge capabilities number finitestate finitestate characterizing 4 shown robot In domain configuration space consists pairs form maze nonobstructed cell particular maze Each state possible maze The physical capabilities nonobstructed cell immediate north east south west initial state robot robot start cell The task description corresponds set trajectories nonobstructed cells random elastic task maze visited That robot thrown finite maze visit nonobstructed random cell cells maze Clearly R I hnfman et al Artcial Intelligence 98 1998 317349 339 Fig 3 GREEN Green cell Assume language contains obstructed A state satisfies following propositions bnorth beast bsouth bwest Green GREEN A state satisfies bnorth beast bsouth bwest proposition adjacent northeastsouthwest Green vertices cell green A vertex green x0 ya boundary BDRY boundary unique point maze boundary obstacles x y E BDRY y y clr ya y x0 x 1 In particular unique point lies southwest corner cell GREEN Blum Kozen prove value propositions mazes What proved knows bnorth beast bsouth bwest search finite satisfied robot infinite perspective manner Fig 3 interesting result counter First conclude Blum Kozens work maze searching 03 CON GREEN Green bnorth beast bsouth bwest CtrN EY ok consists formulas form pr A A pi cy LYE That robot knows value propositions GREEN Green bnorth beast bsouth bwest search finite mazes In fact Blum Kozen provide conditional plan searching finite mazes conditions value propositions Control execution plan requires extra bits refer Blum Kozen agent infinite counter bnorth beast bsouth bwest knows value learn results Theorem 48 robot search elastic value propositions Green GREEN Because maze searching combined finite mazes manner similar task 340 RI Brafinan et al Artificial Intelligence 98 1998 317349 5 Related work We attempted unify work knowledge systems community work information earlier particularly systems robotics earlier 9 robotics work Fagin et connection multiagent sensing influenced systems We briefly discuss distributed community As mentioned work Donald al lo distributed results related work section 7 Erdmann 5 I Erdmann s abstract sensors In 91 Erdmann argues role sensors choose good actions constructed good makes progress measure Hence given progress measure assess sensing task examining actions progress obtain progress measure task algorithm goal state according attaining states Erdmann task information fulfill task An action progress requirements shows provide sufficient Erdmanns description sensors Formulas hold An abstract sensor distinguish set S This states 5p holds given sensor reading p Hence semantics Erdmanns abstract sensors semantics knowledge abstract given terms sets states terms set states given semantics tells agent captured concept knowledge S set agent knows sensor naturally closely related Our work viewed formalizing Erdmanns ideas discussed Erdmann concept similar extending develop essentially ideas multiagent knowledge While added new concepts possible framework Erdmanns work 9 However logical framework provide suitable tion requirements context settheoretic opaque epistemic Indeed believe knowledge notions Kcapability ideas purely settheoretic issue informa 81 In intuitive true suggests tools describing use capabilities agents language transparent problem task distribution learning introduced agents information cumbersome singleagent case In addition arises naturally analyzing representation systems 52 Donalds capability classes capability sensors Donald information sensor systems characterize different capability classes This work motivated questions concerned classes relationship 7 attempted capabilities quantify classify Indeed true applications knowledge theoryr More generally away formal logical language adequate semantics reason directly semantic models RI Brafman et al Artificial Intelligence 98 1998 317349 341 leading adopt complexitytheoretic Kcapability approach notion significant differences There Donalds In aim semantics work closer framework Like Erdmann emphasize hand emphasizes systems abstract geometric Because concepts defined respect detailed framework framework Erdmanns work tasks Donald requirements Donalds notion capability lower sensing sensing capabilities analogues notion Kcapability description detailed definition 53 Knowledge multiagent systems Logics knowledge introduced Moses 111 artificial The semantics knowledge adopted formal development essentially taken earlier intelligence lo study distributed Moore based 151 Rosenschein systems Halpern 191 11191 programs discussed concepts runs systems knowledgebased differences Previous work distributed systems knowledge tool analyzing perform coordinated earlier Halpern Moses distributed attack tasks Lower bounds systems 111 criti es critical section Then 6 consider Misra enters property mutual exclusion respect certain assumptions required requirements information certain basic requirements tasks systems Chandy reasoning formation established For example mentioned common knowledge attained m n processors cal section process certain knowledge tablish lower bound number messages attained Consequently passed processors sults provide important motivation tasks maintained deduce sent knowledge number messages maintained These analysis critical section approach taken 54 Knowledge actions plans Epistemic logic played important role formalizing process planning appropriately work Moore expressive knowledge 151 Morgenstern reason knowledge 161 uncertainty Most notably tools concerned supplying activities agents plans conditions Such work considers term agent knows perform action broadly defined While concerns paper differ terms goal viewpoint Whereas Moore perspec Morgenstern representation course planning issue knowledge preconditions concerned formalizing similarities task planning concerns 342 RI Brafman et al Artificial Intelligence 98 1998 317349 taking internal external sensors software point view planning come different assumptions We assume tools designers agents Hence tive agent concerned supplying taking agent perspective point view external analyst designer With perspective designer distinct objectives task accurate model domain robots actuators The designers tasks allow robot perform choose appropriate knowledge She constrained performing attempt task Moore agents lack knowledge Morgenstern precise effects actions need actively plan order learn information Having relying accurate model need greater expressive power realistic modeling agents domain motivates knowledge issue knowledge needed hand consider planning Moore Morgenstern developments particular design perspective discover taken 6 Future work We shown formal measures informational robotic systems We scratched issues worth exploring complexity capability surface There list We briefly analyze number interesting l We focused problems discuss known times mean extending temporal connectives step computation As mentioned interested extend notions knowledge complexity deal Notice things notions express complexity known eventually use richer It great knowledge capability capability language involving earlier l The notion Kcomplexity differs time space complexity appears Kcomplexity values totally ordered However hand time space complexity Kcomplexity interaction Intuitively robot minimal knowledge able task perform task knowledge efficiently It agent additional interesting Kcomplexity control bits enable better gain knowledge timespace time space As seen allowing able perform terms computation tradeoffs understand complexity agent l We implicitly assumed agent use information difficult agent compute great deal implicit local state In general knows function internal state For example information encoded notion knowledge problem lo discussion local state vision Getting computational deals information logical omniscience interesting algorithmic difficult knowledge RI Brafman et al Artificial Intelligence 98 1998 317349 343 l Once allow agent learn explore possibility knowledge formulas formulas detect tests lnear adjacent topdown formulas boundary Hence interested information boundary Suppose obstaclefree maze B suffices learning Side Side Using Kreducibility robot Kcapable Side ide robot equipped touch sensor allowing speaking set A propositional reductions Roughly reducible B knowing A For example consider robot direction Suppose adjacent Side true robot immediately proposition near true robot step away boundary The robot robot learn near vzear clearly near Kcapable In case near aid control bits learning Kreducible enhance general methodology starting implementing knowledge designing programs knowledge applying ideas l We particularly plays crucial replaced set distributed problem task dis central tribution In controller order succeed state components state external world However like information little additional overhead communication paper rests The concept knowledge formalism settings Subscripted knowledge operators multiagent extends naturally denote particular agent Intuitively Kqo says agent information knows 40 Kbsp says agent b knows p Moreover nested knowledge operators knowledge agent agents knowl edge For example KbKacp says agent b knows agent knows cp Conceptually distributed tial An controller SKBP task use derive distributed SKBP tributed SKBP following distributed SKBP performs set desirable essen centralized dis agent requires For example paper controller distributed approach design synthesize centralized controllers Yet controllers sufficient role In task distribution tell information task discussed designing distributed intermediate information controllers introduced designing easier solution Pgarml KlgStop KIP A lgMove Pgamu ZbKlg Move KvKlg Stop arm knows g In designing SKBP lo shows second arm required An examination know care provide knowledge directly communication gorithm distributed SKBP presented controller second arm indirectly observation An al algo SKBP centrally controlled automatically applicability 31 While distributed transforming lo This general form SKESP negative knowledge condition appears 344 RI Brafian et al Artificial Intelligence 98 1998 317349 rithm understanding l Our approach unclear hope pursuing ideas lead better decentralization Donalds Erdmanns fixed measures sensing complexity However like com combine measure informational capabilities holds robots understand plexity measure actuation complexity information possible complexity tasks capabilities robots obtain better characterization More generally view work continuing basic difficult way current model We believe goal issues design situated systems There ideas area converge single accepted framework presented makes progress tradition attempting understand Acknowledgment We grateful Bruce Donald Nir Friedman numerous comments insightful discussions previous drafts This work comments suggestions partially supported AFOSR NSF grants AF F4962092J0547 IRIS project IC7 NSERC grants OGP0044121 A9281 IRI9220645 Appendix A Proofs Proposition 38 If A 3 B Task OA k VdEB q5 Task OB B 1191 em Because Task OA Proof Suppose A 41 exists SKBP Pg Kpi performs Task Because 1 m 1 k ljli 4fi A 5 B function knowledge conditions Let PgbetheSKBP Kt Kl We claim performs Task Task OB In order prove claim 1 l m Clearly ri 1 E 1 k Kglirfi suffices f Pg good implementation Pg 1 good implementation 2 To prove good implementations Pg transition good implementation P toconsistent 1 suppose L Actions action ai implements Z Z A P 1 k Ki Since E k 4Zi ZZ A PI action al implements Z I A P 1 k Kpfi This To P implementation follows V Kqbk desired Pg agent A I At local state I E L agent A performs rf Ki 7fCi E Pg properties K operator guarantee I k K Kpfi Thus local state I E L agent A performs KpfCi Tfi E Pg Pg 1 P good Pg I notice good implementation Pg I Z I A P k KG V VK By arguments b Kq5 V Z I A P b Kc V V KcJ Thus Z I A P rZi implementation transition implies P RI Brafman et alArtijcial Intelligence 98 1998 317349 345 To 2 good implementation Pg starting reconsistent Chistory I let A L Actions agent intuitively perfect information More precisely 7 let a7 action defined uc c let L E transition d d 1 d E TC Let Actions 1 T E A Let I c c c initial agent A defined configuration th e global states arise Pc runs c k 9 formula c 2 I A P 1 c K Since assumed propositional k 1 V 1 V I follows It easy P Pg Qconsistent Z I A P form c c c E E It easily follows Pg I Thus set initial states Cl 1 c iv 1 6 m Clearly Task Let P protocol good implementation K V V K Z I A P implements Lemma 316 Let 1 qbk propositional formulas Then Z I A k Kqq V V K4pk ifTZdP Kql V V Kqk protocol P agent A follows interpreted propositional Z I By definition SZdP Z I A b Kq V V KqJk Let S denote Proof First suppose states appearing It easily zZ A PI 27ZdPl protocol PZ 2Acrions 8 1 E L It easy zZdP Hence Z I Al r m K ZZ A P r m Kc Thus k K4p1 v V ok For converse suppose A L Actions Let P agent perform possible action local state allows ZZ A 0 P k KJ V V Kq surely z Z A k Kpl V V Kqk set SZd r m formula 4 point zZd The foIllowing lemma proof Theorem 317 exist By way contrast shown 101 protocol special case implementation shows important right guaranteed represents given SKBP Lemma Al A Kcapable PI I Zf Pg SKBP positive knowledge conditions Kql Kpk qk respect I Pg good implementation P good implementation PZ C PgZtdP1 E Pg In order Proof Let P PgzlAl We claim Z I A P prove Lemma 316 A Kc v V Zk The fact follows I The follows Kcapable 41 Z I A r m k K4 propositional Z I A P r m k Kc Thus knowledge condition holds local state I Pg rdP holds 1 PgZldl Thus PrdPI 1 PglE PZ lines proof Lemma 316 Since SZ A P C SZ A formula 4 run r Z I A PI k respect immediately follows cl Theorem 317 rf Tusk 0 41 pk A Kcapable 1 qk respect I Z toconsistent Task A pelform Task I 346 RI Brafman et al Artijicial Intelligence 98 1998 317349 pk Proof If TaskOi ditions Kqol Ok performs Tusk It follows good implementation definition A perform Tusk 0 Lemma A1 Pg I Since Pg performs Task I toconsistent Task exists SKBP Pg knowledge Pg Z performs Tusk This implies good implementation Theorem 319 Suppose 1 I toconsistent Task agent A K pk respect I A perorm Task I capable 1 2 agent Kcapable 1 pk Z toconsistent Task Then TaskOmk Proof We SKBP Pg conditions K Kk performs Task agent A perform Tusk We We follows We define particular pA uses perform Task define required SKBP Pg Then use program execution Pg identical execution projected Pd Since P4 performs Task executions task shown executions Pg task E Agent A LActions constructed c let Holdsc li c b dj configuration let Holdsc lo For transition ac Z UcEr c x ZZoldsc We define Actions 1 T E A follows Let L lo For j 1 k c k 41 V V k r E A let a7 action defined Let Zd CO 1 1 C E Task I E Zfolds C0 We claim Zd It easy construction A Kcapable guarantees suffices local state lo arise ok respect sol Z Zd A Zj k K4i Thus zZd d To notice Z I sets initial states toconsistent E A initial configurations given assumption action configurations set configurations set configurations agrees 2 agent A initial set I global states I V bk Since A A perform assumption Tusk A A agents situated arise Z I A Z I A depends possible r E A transition r projected theorem guarantees toconsistent Tusk A Kcapable 4 ThusZZd configurations formula depends configuration Thus Holdsc lo configuration state ZO arise z Zd A desired arise Z I A Z Zd A truth propositional I Zd A b 41 V V k local follows c arises z Zd A Hence I Z A b 1 V Ck respect t Kq51 V V Kk I Zd A Next observe It follows Kv It follows V Kk It follows assumption 1 protocol PA A performs Tusk Zd Define Kpir prove tion Pg set initial states performs Task ZB Since PO good implementation We claim Z3 agent Pa E P implementa toconsistent Task Pa la A perform Tusk Zd SKBP Pg Pg performs Tusk In order I a7 E Pdl Pg good I la RI Brafman et alArtificial Intelligence 98 1998 317349 347 k Kqq V V Kqk E PaZ KP 7 E P ZZn Z PO I k Kpj Suppose ZZIBPJ j r execu tion Pa Chistory defined r C rccons r We complete execution PA Chistory C This implies glolbal state c I E Zd defines precisely C E Task P_4 performs Task Therefore Pa performs Task ZB c Z E la let C denote proof showing Let aB aB 0 transitions sequence actions performed Z belongs ror1 formulas Cn k Q That formulas exists follows fact Pa definition P knowledge action assigned PB state c Z implements run r let implement Let qiO rpi sequence Kg 7 E P implements P By assigned condition Kq holds c I c b 4 VI pk transition rdn We define r rd taking It remains proj n 1 unique action A implementing cZi l aCnZi ProofcflBydefinition rd Cn Z n Obviously execution Pd rdn 1 E ardn proj rd In order prove 2 aTa PdliS r iffcErCnl andpjholds c But construction C n 1 E rrl C n configuration obtained rn Cn qil holds Cn 1 Hence Cn lZ applymg rdnf 1 6 Cnk rdn Proof 2 The action taken time n A 7 Bs action time n implements Recall Zj Hence transition adding pair pj r a7 assigned Pd h q wanted 0 action implements P obtained case Theorem 45 If Task O cpl 4pk A L Actions 3 pk Z I A Z toconsistent Task d PI Z nr Kcapable pelform Task Proof With slight modification Lemma A 1 Theorem 317 generalize accommodate case 0 m additional control bits proofs Theorem 48 Zf Task O qq pk Task elastic A L Actions learn q cppk Z I A toconsistent I dcl peorm Task Zl recall cpk Proof First perform Tk aid m additional bits I Thus mbit SKBP Pg exists performs Task Theorem 45 1 A Kcapable In order dnrl perform Task provide program performs Task Intuitively lar A Kcapable agent implementation follows agent simi P Pg performs Task I We let A execute 91 pk I Consequently know 348 RI Brajhtan et al Artcial Intelligence 98 1998 317349 However implementation defined states A defined state A know 1 pk In states let A learn conditions After learning implementation In particular conditions conditions A reach local state given defined Notice subroutines executed learning program self dnl additional cause requires A switch P learning subroutine m additional bits Finally task elastic mind learning learning detours track P Thus additional approach bits needed implementation execute P bit needed We proceed follows Let Pr protocol A learns I k Z I A Let A L Actions l LZLZZdEvvK l Actions u o PL 1 E Actions o PLc 1 PLu c I s Here transitions A implements A defined implements A Moreover A Kcapable pi Notice fact global state s Z I A case This follows fact learning pro projfigPL S proj gram effects configuration Moreover know projlocaPL s E qx L PL learning program Z I d I UsEI PL S Notice projfrg Z projfrg I I toconsistent Task In order note set global states ZZ A This follows arise E Actions global states s Z I A S E Z S A Next note definition projlocal s E L Z I d s k Ksp V formulas pj propositional conclude ZZ A subset global states arise I E Z Z A 3 fact 1 L G L 2 Z I A s k Kcpl V V Kpk Because Z I A C Z I A V Kpk We shown A Kcapable 1 qk Therefore d imple mentation P Pg performs Tusk Z We define protocol P dnLl acts follows possible When learning program finishes resumes emulation P behavior P 0 possible executed execution learning program bit 0 emulates learning program Once bit 1 indicating bit executes switches switches l If E E L di 0 PO l If Z L di 0 POdiZ l If ZE LT di 0 PliZ l If Z LT di 0 PldiZ dtZ P Setdi iZ I Setdi O PLZZ PL I Id1 identical dldl PL 1 E x L Id identity assignment As apparent definition execution P terminating responds corresponding P I Tusk 0 execution P Zi cor inserted finite subsequences executions PL We know execution execution P Tusk Tusk elastic We conclude RI Brafinan et al Artificial Intelligence 98 1998 317349 349 References 1 M Blum D Kozen On power compass mazes easier search graphs Proceedings 19th Symposium Founaistions Computer Science 1978 132142 2 RI Brafman JC Latombe Y Moses Y Shoham Applications logic knowledge motion planning uncertainty J ACM appear 3 RI Bman Y Shoham Knowledge considerations robotics distribution robotic tasks Proceedings IJCAI95 Montreal Quebec 1995 4 L Budach On solution labyrinth problem finite automata EIK 11 1975 661672 S JF Canny On computability fine motion plans Proceedings 1989 IEEE International Conference Robotics Automation Scottsdale AZ 1989 177182 6 KM Chandy J Misra How processes learn Distributed Comput 1 1 1986 4052 71 BR Donald On information invariants robotics Artificial Intelligence 72 1994 217304 8 BR Donald J Jennings D Rus Information invariants cooperating autonomous mobile robots Proceedings International Symposium Robotics Research 1993 9 M Erdmann Understanding actions sensing designing actionbased sensors IEEE ICRA Workshop Design 1994 IO R Fagin JY Halpem Y Moses MY Vardi Reasoning Knowledge MIT Press Cambridge MA 1995 111 JY Halpem Y Moses Knowledge common knowledge distributed environment J ACM 37 3 1990 549587 121 J Hintikka Knowledge Belief Cornell University Press Ithaca NY 1962 131 GE Hughes MJ Cresswell An Introduction 141 JC Latombe Robot Motion Phznning Kluwer Academic Publishers Boston MA 1991 151 RC Moore A formal theory knowledge action Formal Theories Common Sense World Modal Logic Methuen London 1968 1985 161 L Morgenstem Knowledge preconditions actions plans Proceedings IJCAI87 Milan Italy 1985 171 JH Reif Complexity movers problem generalizations Proceedings 20th IEEE Symposium Founakions Computer Science 1979 421427 181 JH Reif M Sharir Motion planning presence moving obstacles Proceedings 25th IEEE Symposium Foundations Computer Science Portland OR 1985 144154 191 SJ Rosenschein Formal theories knowledge AI robotics New Generation Comput 3 1985 345357